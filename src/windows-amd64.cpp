// Auto generated by JuleC.
// JuleC version: jule0.0.16 @master
// Date: 26/9/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp -lws2_32 -lshell32 -lshell32

#define __JULE_ENABLE__PRODUCTION
#include <winsock2.h>
#include <ws2ipdef.h>
#include <windows.h>
#include <fcntl.h>
#include <io.h>
#include <cstdio>
#include <sys/stat.h>
#include <chrono>
#include <time.h>


#include "api/jule.hpp"                                   

#include "std/jule/integrated/integrated.hpp"                                   

struct _2241a19c7_acceptRange;
struct _22420d10a_LittleEndian;
struct _224227b08_u128;
struct _1cc2684ba_group;
struct _1cc2b3cb8_group;
struct _1cc266177__Map;
struct _1cc2b1b84__Map;
struct _1cc272903_mapIterator;
struct _1cc2bb265_mapIterator;
struct _224497295_StrBuilder;
struct _225691812_foldPair;
struct _225691d0c_CaseRange;
struct _2256922b3_Range16;
struct _2256927e1_Range32;
struct _225692c64_RangeTable;
struct _2256e1565_lazyBuff;
struct _2243de341_DirEntry;
struct _2243de5c7_Directory;
struct _2243e07c6_File;
struct _2243e290a_Status;
struct _225861262_cmdAttrs;
struct _22578b38a_Log;
struct _1e217ce36_floatInfo;
struct _1e217dab3_decimalSlice;
struct _1e2190d06_leftCheat;
struct _1e219181d_decimal;
struct _1e21a449b_Const;
struct _1e5c8eacc_Token;
struct _1e5c95363_File;
struct _1e5c974b9_kindPair;
struct _1e5c9d49d_lex;
struct _1e5ca3173_AST;
struct _1e5ca4086_Node;
struct _1e5ca44a4_Directive;
struct _1e5ca5087_TypeDecl;
struct _1e5ca5692_IdentTypeDecl;
struct _1e5ca595b_SubIdentTypeDecl;
struct _1e5ca5d35_NamespaceTypeDecl;
struct _1e5ca6132_SptrTypeDecl;
struct _1e5ca64b7_SlcTypeDecl;
struct _1e5ca67b4_TupleTypeDecl;
struct _1e5ca6ab1_PtrTypeDecl;
struct _1e5ca7353_ArrTypeDecl;
struct _1e5ca7aa1_MapTypeDecl;
struct _1e5ca7e7a_RetTypeDecl;
struct _1e5ca93bb_Expr;
struct _1e5ca9685_RangeExpr;
struct _1e5ca9c90_UseExpr;
struct _1e5ca9eb0_TupleExpr;
struct _1e5caa356_LitExpr;
struct _1e5caa730_UnsafeExpr;
struct _1e5caabd6_IdentExpr;
struct _1e5cab478_UnaryExpr;
struct _1e5cab852_VariadicExpr;
struct _1e5cabc2b_CastExpr;
struct _1e5cac105_NsSelectionExpr;
struct _1e5cac4ce_SubIdentExpr;
struct _1e5cac985_BinaryExpr;
struct _1e5cad0e5_FnCallExpr;
struct _1e5cadada_FieldExprPair;
struct _1e5cae415_StructLit;
struct _1e5cae8bb_BraceLit;
struct _1e5cb01e6_KeyValPair;
struct _1e5cb0922_SliceExpr;
struct _1e5cb137e_IndexingExpr;
struct _1e5cb19de_SlicingExpr;
struct _1e5cb1cdb_Constraint;
struct _1e5cb2292_GenericDecl;
struct _1e5cb266b_LabelSt;
struct _1e5cb2a45_GotoSt;
struct _1e5cb2d42_FallSt;
struct _1e5cb34a2_AssignLeft;
struct _1e5cb3a35_AssignSt;
struct _1e5cb4948_Stmt;
struct _1e5cb50a8_ScopeTree;
struct _1e5cb57e5_ParamDecl;
struct _1e5cb6c47_FnDecl;
struct _1e5cb7e02_VarDecl;
struct _1e5cb82cb_RetSt;
struct _1e5cb8a4b_Iter;
struct _1e5cb9376_WhileKind;
struct _1e5cb9c7d_RangeKind;
struct _1e5cba157_BreakSt;
struct _1e5cba531_ContSt;
struct _1e5cba9d7_If;
struct _1e5cbadb1_Else;
struct _1e5cbb367_Conditional;
struct _1e5cbbaa4_TypeAliasDecl;
struct _1e5cbc05a_Case;
struct _1e5cbc874_MatchCase;
struct _1e5cbd18d_UseDecl;
struct _1e5cbd644_EnumItemDecl;
struct _1e5cbe205_EnumDecl;
struct _1e5cbea30_TypeEnumItemDecl;
struct _1e5cc0190_TypeEnumDecl;
struct _1e5cc0459_FieldDecl;
struct _1e5cc0d50_StructDecl;
struct _1e5cc158c_TraitDecl;
struct _1e5cc1bec_Impl;
struct _1e5cc2eea_Field;
struct _1e5cc500d_Operators;
struct _1e5cc5e21_Struct;
struct _1e5cc81cb_FieldIns;
struct _1e5cc8c7b_StructIns;
struct _1e5cd2856_OperandExprModel;
struct _1e5cd2d51_BinaryExprModel;
struct _1e5cd322a_UnaryExprModel;
struct _1e5cd3758_StructArgExprModel;
struct _1e5cd3aee_StructLitExprModel;
struct _1e5cd3deb_AllocStructLitExprModel;
struct _1e5cd447e_CastingExprModel;
struct _1e5cd4d31_FnCallExprModel;
struct _1e5cd520a_SliceExprModel;
struct _1e5cd56b1_IndexingExprModel;
struct _1e5cd5b67_AnonFnExprModel;
struct _1e5cd6041_KeyValPairExprModel;
struct _1e5cd641a_MapExprModel;
struct _1e5cd699d_SlicingExprModel;
struct _1e5cd7031_TraitSubIdentExprModel;
struct _1e5cd78c2_StructSubIdentExprModel;
struct _1e5cd7c68_StructStaticIdentExprModel;
struct _1e5cd8142_ArrayExprModel;
struct _1e5cd843e_TupleExprModel;
struct _1e5cd8818_BuiltinOutCallExprModel;
struct _1e5cd8be2_BuiltinOutlnCallExprModel;
struct _1e5cd90bb_BuiltinNewCallExprModel;
struct _1e5cd9495_BuiltinPanicCallExprModel;
struct _1e5cd994b_BuiltinMakeCallExprModel;
struct _1e5cd9d25_BuiltinAppendCallExprModel;
struct _1e5cda122_BuiltinLenCallExprModel;
struct _1e5cda41e_BuiltinCapCallExprModel;
struct _1e5cda7e8_BuiltinDeleteCallExprModel;
struct _1e5cdabc2_BuiltinCopyCallExprModel;
struct _1e5cdb09b_BuiltinErrorCallExprModel;
struct _1e5cdb398_SizeofExprModel;
struct _1e5cdba4c_AlignofExprModel;
struct _1e5cdbc39_RuneExprModel;
struct _1e5cdc0ad_BackendEmitExprModel;
struct _1e5cdc3aa_FreeExprModel;
struct _1e5cdd147_RetType;
struct _1e5cdd884_Param;
struct _1e5ce0358_Fn;
struct _1e5ce22b1_ParamIns;
struct _1e5ce3416_FnIns;
struct _1e5ce65a1_ReferenceStack;
struct _1e5ce7aad_Pass;
struct _1e5cec563_symbolBuilder;
struct _1e5d03db6_Trait;
struct _1e5d05a55_EnumItem;
struct _1e5d065c2_Enum;
struct _1e5d07705_TypeEnumItem;
struct _1e5d07ccc_TypeEnum;
struct _1e5d0a708_comptimeRange;
struct _1e5d0b264_comptimeStructField;
struct _1e5d0ca07_comptimeStructFields;
struct _1e5d0e487_comptimeStatic;
struct _1e5d10c3b_comptimeStatics;
struct _1e5d126aa_comptimeEnumField;
struct _1e5d139b9_comptimeEnumFields;
struct _1e5d154c1_comptimeParam;
struct _1e5d1732a_comptimeParams;
struct _1e5d18b89_comptimeTypeInfos;
struct _1e5d1a608_comptimeTypeInfo;
struct _1e5d2170d_comptimeValue;
struct _1e5d24469_comptimeFiles;
struct _1e5d25dd8_comptimeFile;
struct _1e5d27a11_comptimeDecls;
struct _1e5d29cee_comptimeDecl;
struct _1e5d318a5_constraintChecker;
struct _1e5d33c09_Impl;
struct _1e5d384d3_Scope;
struct _1e5d38901_If;
struct _1e5d38bed_Else;
struct _1e5d3911b_Conditional;
struct _1e5d39418_InfIter;
struct _1e5d398be_WhileIter;
struct _1e5d3a31a_RangeIter;
struct _1e5d3a6a0_ContSt;
struct _1e5d3aa79_BreakSt;
struct _1e5d3b030_Label;
struct _1e5d3b690_GotoSt;
struct _1e5d3ba69_Postfix;
struct _1e5d3c020_Assign;
struct _1e5d3c4c6_MultiAssign;
struct _1e5d3cc13_Match;
struct _1e5d3d73b_Case;
struct _1e5d3de34_FallSt;
struct _1e5d3e2ca_RetSt;
struct _1e5d3e781_scopeLabel;
struct _1e5d40771_scopeChecker;
struct _1e5d5470d_directiveChecker;
struct _1e5d5b2e7_ImportInfo;
struct _1e5d5e21d_Package;
struct _1e5d7ab41_commonSemaMeta;
struct _1e5d7b768_sema;
struct _1e5d9c525_missingRetChecker;
struct _1e5da0bcc_Var;
struct _1e5da1c66_FuncPattern;
struct _1e5de049c_typeCompatibilityChecker;
struct _1e5de2328_assignTypeChecker;
struct _1e5de3bed_dynamicTypeAnnotation;
struct _1e5de8a5a_fnCallArgChecker;
struct _1e5deb992_structLitChecker;
struct _1e5ded774_rangeChecker;
struct _1e5e00ed5_retTypeChecker;
struct _1e5e03548_SymbolTable;
struct _1e5e08c13_Data;
struct _1e5e09d8a_Value;
struct _1e5e0a93a_eval;
struct _1e5e29c34_unaryEval;
struct _1e5e2bbc0_binaryEval;
struct _1e5e3ee14_InsGeneric;
struct _1e5e40a08_TypeAlias;
struct _1e5e417ea_TypeKind;
struct _1e5e4900b_TypeSymbol;
struct _1e5e49913_Prim;
struct _1e5e4d43e_Sptr;
struct _1e5e4de12_Slc;
struct _1e5e4ea06_Tuple;
struct _1e5e505a6_Map;
struct _1e5e51233_Arr;
struct _1e5e51c06_Ptr;
struct _1e5e52c07_referencer;
struct _1e5e53be7_typeChecker;
struct _1e5e5bcaa_identTypeLookup;
struct _1e6970636_FileInfo;
struct _1e69bb1dc_stmt;
struct _1e69bba7d_scopeParser;
struct _1e69c94e7_exprBuilder;
struct _1e69d6c0d_assignInfo;
struct _1e69da10c_parser;
struct _1e69ec22e_typeBuilder;
struct _1e62091bc_CompileInfo;
struct _1e620a696_directiveEval;
struct _1e6a01222_JuleImporter;
struct _1e6a07a0e_ExprInspector;
struct _1e6a0e032_OrderedDefines;
struct _1c7edb1ed_specialCaseDefines;
struct _1c7edbbe3_liveTable;
struct _1c7edc199_ObjectDeadCode;
struct _1c7ee12be_scopeDeadCode;
struct _1c7ee5966_exprDeadCode;
struct _1e6036a22_ExceptionalForwardingExprModel;
struct _1e6036da7_SwapExprModel;
struct _1e6037281_EmptyCompareExprModel;
struct _1e6037605_RefExprModel;
struct _1e6037a78_StrCompExprModel;
struct _1e603810b_MutSlicingExprModel;
struct _1e6038408_UnsafeBinaryExprModel;
struct _1e603878d_UnsafeIndexingExprModel;
struct _1e6038b67_PushToSliceExprModel;
struct _1e6039041_AppendToSliceExprModel;
struct _1e603941a_StrRuneIter;
struct _1e6039717_UnsafeDerefExprModel;
struct _1e6039a14_UnsafeCastingExprModel;
struct _1e603a6e6_nilVar;
struct _1e603aa37_nils;
struct _1e6a10709_scopeOptimizer;
struct _1e6a1715b_exprOptimizer;
struct _1e6a1c54b_dynamicVar;
struct _1e6a1c88c_dynamic;
struct _1e6a2051b_data;
struct _1e6a21ac2_boundaryVar;
struct _1e6a21e13_boundary;
struct _1c7ee6b54_Optimizer;
struct _1c801d1a8_AnsiEscape;
struct _1c801e75e_Logger;
struct _1c8a6b6d9_AbsTime;
struct _1c8a6bdb0_Time;
struct _1c899847e_scopeCoder;
struct _1c89a4c60_exprCoder;
struct _1c89b7514_TestCoder;
struct _1c89ba490_identCoder;
struct _1c8a767c1_SerializationInfo;
struct _1c8a76bde_traitCast;
struct _1c8a770b8_anonHash;
struct _1c8a7c299_metadata;
struct _1c8a7d92c_ObjectCoder;
struct _1c8a8cd26_customType;
struct _1c8a8d95e_typeCoder;
struct _1c8a96549_resultCoder;
struct _1cc970584_Flag;
struct _1cc973da1_Flag;
struct _1cc9775ad_Flag;
struct _1cc97ad0e_Flag;
struct _1cc97e51b_Flag;
struct _1c8b12692_FlagSet;
struct _1c8b15156_argParser;
struct _1e6a20021_dataCheckpoint;
struct _22584814a_Cmd;
struct _1e6a03ab5_IR;
struct _2241a19c7_acceptRange {
	jule::U8 _field_lo;
	jule::U8 _field_hi;
	

};
inline jule::Bool _2241a19c7_acceptRange_eq(_2241a19c7_acceptRange *_self_, _2241a19c7_acceptRange _other_);


struct _22420d10a_LittleEndian {
	

};
inline jule::Bool _22420d10a_LittleEndian_eq(_22420d10a_LittleEndian *_self_, _22420d10a_LittleEndian _other_);


struct _224227b08_u128 {
	jule::U64 _field_hi;
	jule::U64 _field_lo;
	

};
inline jule::Bool _224227b08_u128_eq(_224227b08_u128 *_self_, _224227b08_u128 _other_);


struct _1cc2684ba_group {
	jule::Array<jule::Str,8> _field_keys;
	jule::Array<jule::Bool,8> _field_values;
	

};
inline jule::Bool _1cc2684ba_group_eq(_1cc2684ba_group *_self_, _1cc2684ba_group _other_);

struct _1cc2b3cb8_group {
	jule::Array<jule::Ptr<_1e5ce3416_FnIns>,8> _field_keys;
	jule::Array<jule::Slice<jule::Uintptr>,8> _field_values;
	

};
struct _1cc266177__Map {
	jule::Slice<jule::Array<jule::I8,8>> _field_ctrl;
	jule::Slice<_1cc2684ba_group> _field_groups;
	jule::I64 _field_resident;
	jule::I64 _field_dead;
	jule::I64 _field_limit;
	

};struct _1cc2b1b84__Map {
	jule::Slice<jule::Array<jule::I8,8>> _field_ctrl;
	jule::Slice<_1cc2b3cb8_group> _field_groups;
	jule::I64 _field_resident;
	jule::I64 _field_dead;
	jule::I64 _field_limit;
	

};
struct _1cc272903_mapIterator {
	jule::Ptr<_1cc266177__Map> _field_m;
	jule::Slice<jule::Array<jule::I8,8>> _field_ctrl;
	jule::Slice<_1cc2684ba_group> _field_groups;
	jule::I64 _field_n;
	jule::I64 _field_g;
	jule::I64 _field_s;
	

};struct _1cc2bb265_mapIterator {
	jule::Ptr<_1cc2b1b84__Map> _field_m;
	jule::Slice<jule::Array<jule::I8,8>> _field_ctrl;
	jule::Slice<_1cc2b3cb8_group> _field_groups;
	jule::I64 _field_n;
	jule::I64 _field_g;
	jule::I64 _field_s;
	

};
struct _224497295_StrBuilder {
	jule::Slice<jule::U8> _field_buf;
	

};
struct _225691812_foldPair {
	jule::U16 _field_from;
	jule::U16 _field_to;
	

};
inline jule::Bool _225691812_foldPair_eq(_225691812_foldPair *_self_, _225691812_foldPair _other_);


struct _225691d0c_CaseRange {
	jule::U32 _field_Lo;
	jule::U32 _field_Hi;
	jule::Array<jule::I32,3> _field_Delta;
	

};
inline jule::Bool _225691d0c_CaseRange_eq(_225691d0c_CaseRange *_self_, _225691d0c_CaseRange _other_);


struct _2256922b3_Range16 {
	jule::U16 _field_Lo;
	jule::U16 _field_Hi;
	jule::U16 _field_Stride;
	

};
inline jule::Bool _2256922b3_Range16_eq(_2256922b3_Range16 *_self_, _2256922b3_Range16 _other_);


struct _2256927e1_Range32 {
	jule::U32 _field_Lo;
	jule::U32 _field_Hi;
	jule::U32 _field_Stride;
	

};
inline jule::Bool _2256927e1_Range32_eq(_2256927e1_Range32 *_self_, _2256927e1_Range32 _other_);


struct _225692c64_RangeTable {
	jule::Slice<_2256922b3_Range16> _field_R16;
	jule::Slice<_2256927e1_Range32> _field_R32;
	jule::I64 _field_LatinOffset;
	

};
struct _2256e1565_lazyBuff {
	jule::Str _field_path;
	jule::Slice<jule::U8> _field_buff;
	jule::I64 _field_w;
	jule::Str _field_volAndPath;
	jule::I64 _field_volLen;
	

};
struct _2243de341_DirEntry {
	jule::Str _field_Name;
	jule::Ptr<_2243e290a_Status> _field_Stat;
	

};
inline jule::Bool _2243de341_DirEntry_eq(_2243de341_DirEntry *_self_, _2243de341_DirEntry _other_);


struct _2243de5c7_Directory {
	

};
inline jule::Bool _2243de5c7_Directory_eq(_2243de5c7_Directory *_self_, _2243de5c7_Directory _other_);


struct _2243e07c6_File {
	jule::Uintptr _field_handle;
	

};
inline jule::Bool _2243e07c6_File_eq(_2243e07c6_File *_self_, _2243e07c6_File _other_);


struct _2243e290a_Status {
	jule::I64 _field_mode;
	jule::U64 _field_size;
	

};
inline jule::Bool _2243e290a_Status_eq(_2243e290a_Status *_self_, _2243e290a_Status _other_);


struct _225861262_cmdAttrs {
	HANDLE _field_hProcess;
	HANDLE _field_hThread;
	

};
inline jule::Bool _225861262_cmdAttrs_eq(_225861262_cmdAttrs *_self_, _225861262_cmdAttrs _other_);


struct _22578b38a_Log {
	jule::I64 _field_Kind;
	jule::I64 _field_Row;
	jule::I64 _field_Column;
	jule::Str _field_Path;
	jule::Str _field_Text;
	jule::Str _field_Line;
	jule::Str _field_Suggestion;
	

};
inline jule::Bool _22578b38a_Log_eq(_22578b38a_Log *_self_, _22578b38a_Log _other_);


struct _1e217ce36_floatInfo {
	jule::U64 _field_mantbits;
	jule::U64 _field_expbits;
	jule::I64 _field_bias;
	

};
inline jule::Bool _1e217ce36_floatInfo_eq(_1e217ce36_floatInfo *_self_, _1e217ce36_floatInfo _other_);


struct _1e217dab3_decimalSlice {
	jule::Slice<jule::U8> _field_d;
	jule::I64 _field_nd;
	jule::I64 _field_dp;
	jule::Bool _field_neg;
	

};
struct _1e2190d06_leftCheat {
	jule::I64 _field_delta;
	jule::Str _field_cutoff;
	

};
inline jule::Bool _1e2190d06_leftCheat_eq(_1e2190d06_leftCheat *_self_, _1e2190d06_leftCheat _other_);


struct _1e219181d_decimal {
	jule::Array<jule::U8,800> _field_d;
	jule::I64 _field_nd;
	jule::I64 _field_dp;
	jule::Bool _field_neg;
	jule::Bool _field_trunc;
	

};
inline jule::Bool _1e219181d_decimal_eq(_1e219181d_decimal *_self_, _1e219181d_decimal _other_);


inline jule::Bool _1e21aa084_Eq(_1e21a449b_Const* _self_, _1e21a449b_Const _26014_x);
inline jule::Bool _1e21aa3c5_Lt(_1e21a449b_Const* _self_, _1e21a449b_Const _28714_x);
inline jule::Bool _1e21aa716_LtEq(_1e21a449b_Const* _self_, _1e21a449b_Const _31016_x);
inline jule::Bool _1e21aaa57_Gt(_1e21a449b_Const* _self_, _1e21a449b_Const _33314_x);
inline jule::Bool _1e21aad98_GtEq(_1e21a449b_Const* _self_, _1e21a449b_Const _35616_x);
struct _1e21a449b_Const {
	jule::Str _field_Kind;
	jule::Any _field_data;
	

};
struct _1e5c8eacc_Token {
	jule::Ptr<_1e5c95363_File> _field_File;
	jule::I64 _field_Row;
	jule::I64 _field_Column;
	jule::Str _field_Kind;
	jule::U64 _field_Id;
	

};
inline jule::Bool _1e5c8eacc_Token_eq(_1e5c8eacc_Token *_self_, _1e5c8eacc_Token _other_);


struct _1e5c95363_File {
	jule::Str _field_Path;
	jule::Slice<jule::U8> _field_Data;
	jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _field_Tokens;
	

};
struct _1e5c974b9_kindPair {
	jule::Str _field_kind;
	jule::U64 _field_id;
	

};
inline jule::Bool _1e5c974b9_kindPair_eq(_1e5c974b9_kindPair *_self_, _1e5c974b9_kindPair _other_);


struct _1e5c9d49d_lex {
	jule::I64 _field_mode;
	jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _field_tokens;
	jule::Ptr<_1e5c95363_File> _field_file;
	jule::I64 _field_pos;
	jule::I64 _field_column;
	jule::I64 _field_row;
	jule::Slice<_22578b38a_Log> _field_errors;
	

};
struct _1e5ca3173_AST {
	jule::Ptr<_1e5c95363_File> _field_File;
	jule::Slice<jule::Ptr<_1e5ca44a4_Directive>> _field_TopDirectives;
	jule::Slice<jule::Ptr<_1e5cbd18d_UseDecl>> _field_UseDecls;
	jule::Slice<_1e5ca4086_Node> _field_Nodes;
	

};
struct _1e5ca4086_Node {
	jule::Ptr<_1e5c8eacc_Token> _field_Token;
	jule::Any _field_Data;
	

};
inline jule::Bool _1e5ca4086_Node_eq(_1e5ca4086_Node *_self_, _1e5ca4086_Node _other_);


struct _1e5ca44a4_Directive {
	jule::Ptr<_1e5c8eacc_Token> _field_Tag;
	jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _field_Args;
	

};
struct _1e5ca5087_TypeDecl {
	jule::Ptr<_1e5c8eacc_Token> _field_Token;
	jule::Any _field_Kind;
	

};
inline jule::Bool _1e5ca5087_TypeDecl_eq(_1e5ca5087_TypeDecl *_self_, _1e5ca5087_TypeDecl _other_);


struct _1e5ca5692_IdentTypeDecl {
	jule::Ptr<_1e5c8eacc_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
	jule::Slice<jule::Ptr<_1e5ca5087_TypeDecl>> _field_Generics;
	

};
struct _1e5ca595b_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_1e5ca5692_IdentTypeDecl>> _field_Idents;
	

};
struct _1e5ca5d35_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _field_Idents;
	jule::Ptr<_1e5ca5087_TypeDecl> _field_Kind;
	

};
struct _1e5ca6132_SptrTypeDecl {
	jule::Ptr<_1e5ca5087_TypeDecl> _field_Elem;
	

};
inline jule::Bool _1e5ca6132_SptrTypeDecl_eq(_1e5ca6132_SptrTypeDecl *_self_, _1e5ca6132_SptrTypeDecl _other_);


struct _1e5ca64b7_SlcTypeDecl {
	jule::Ptr<_1e5ca5087_TypeDecl> _field_Elem;
	

};
inline jule::Bool _1e5ca64b7_SlcTypeDecl_eq(_1e5ca64b7_SlcTypeDecl *_self_, _1e5ca64b7_SlcTypeDecl _other_);


struct _1e5ca67b4_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1e5ca5087_TypeDecl>> _field_Types;
	

};
struct _1e5ca6ab1_PtrTypeDecl {
	jule::Ptr<_1e5ca5087_TypeDecl> _field_Elem;
	

};
inline jule::Bool _1e5ca6ab1_PtrTypeDecl_eq(_1e5ca6ab1_PtrTypeDecl *_self_, _1e5ca6ab1_PtrTypeDecl _other_);


struct _1e5ca7353_ArrTypeDecl {
	jule::Ptr<_1e5ca5087_TypeDecl> _field_Elem;
	jule::Ptr<_1e5ca93bb_Expr> _field_Size;
	

};
inline jule::Bool _1e5ca7353_ArrTypeDecl_eq(_1e5ca7353_ArrTypeDecl *_self_, _1e5ca7353_ArrTypeDecl _other_);


struct _1e5ca7aa1_MapTypeDecl {
	jule::Ptr<_1e5ca5087_TypeDecl> _field_Key;
	jule::Ptr<_1e5ca5087_TypeDecl> _field_Val;
	

};
inline jule::Bool _1e5ca7aa1_MapTypeDecl_eq(_1e5ca7aa1_MapTypeDecl *_self_, _1e5ca7aa1_MapTypeDecl _other_);


struct _1e5ca7e7a_RetTypeDecl {
	jule::Ptr<_1e5ca5087_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _field_Idents;
	

};
struct _1e5ca93bb_Expr {
	jule::Ptr<_1e5c8eacc_Token> _field_Token;
	jule::Ptr<_1e5c8eacc_Token> _field_End;
	jule::Any _field_Kind;
	

};
inline jule::Bool _1e5ca93bb_Expr_eq(_1e5ca93bb_Expr *_self_, _1e5ca93bb_Expr _other_);


struct _1e5ca9685_RangeExpr {
	jule::Ptr<_1e5ca93bb_Expr> _field_Expr;
	

};
inline jule::Bool _1e5ca9685_RangeExpr_eq(_1e5ca9685_RangeExpr *_self_, _1e5ca9685_RangeExpr _other_);


struct _1e5ca9c90_UseExpr {
	jule::Ptr<_1e5c8eacc_Token> _field_Token;
	jule::Ptr<_1e5ca93bb_Expr> _field_Expr;
	

};
inline jule::Bool _1e5ca9c90_UseExpr_eq(_1e5ca9c90_UseExpr *_self_, _1e5ca9c90_UseExpr _other_);


struct _1e5ca9eb0_TupleExpr {
	jule::Slice<jule::Ptr<_1e5ca93bb_Expr>> _field_Expr;
	

};
struct _1e5caa356_LitExpr {
	jule::Ptr<_1e5c8eacc_Token> _field_Token;
	jule::Str _field_Value;
	

};
inline jule::Bool _1e5caa356_LitExpr_eq(_1e5caa356_LitExpr *_self_, _1e5caa356_LitExpr _other_);


struct _1e5caa730_UnsafeExpr {
	jule::Ptr<_1e5c8eacc_Token> _field_Token;
	jule::Ptr<_1e5ca93bb_Expr> _field_Expr;
	

};
inline jule::Bool _1e5caa730_UnsafeExpr_eq(_1e5caa730_UnsafeExpr *_self_, _1e5caa730_UnsafeExpr _other_);


struct _1e5caabd6_IdentExpr {
	jule::Ptr<_1e5c8eacc_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
	

};
inline jule::Bool _1e5caabd6_IdentExpr_eq(_1e5caabd6_IdentExpr *_self_, _1e5caabd6_IdentExpr _other_);


struct _1e5cab478_UnaryExpr {
	jule::Ptr<_1e5c8eacc_Token> _field_Op;
	jule::Ptr<_1e5ca93bb_Expr> _field_Expr;
	

};
inline jule::Bool _1e5cab478_UnaryExpr_eq(_1e5cab478_UnaryExpr *_self_, _1e5cab478_UnaryExpr _other_);


struct _1e5cab852_VariadicExpr {
	jule::Ptr<_1e5c8eacc_Token> _field_Token;
	jule::Ptr<_1e5ca93bb_Expr> _field_Expr;
	

};
inline jule::Bool _1e5cab852_VariadicExpr_eq(_1e5cab852_VariadicExpr *_self_, _1e5cab852_VariadicExpr _other_);


struct _1e5cabc2b_CastExpr {
	jule::Ptr<_1e5ca5087_TypeDecl> _field_Kind;
	jule::Ptr<_1e5ca93bb_Expr> _field_Expr;
	

};
inline jule::Bool _1e5cabc2b_CastExpr_eq(_1e5cabc2b_CastExpr *_self_, _1e5cabc2b_CastExpr _other_);


struct _1e5cac105_NsSelectionExpr {
	jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _field_Ns;
	jule::Ptr<_1e5c8eacc_Token> _field_Ident;
	

};
struct _1e5cac4ce_SubIdentExpr {
	jule::Ptr<_1e5ca93bb_Expr> _field_Expr;
	jule::Ptr<_1e5c8eacc_Token> _field_Ident;
	

};
inline jule::Bool _1e5cac4ce_SubIdentExpr_eq(_1e5cac4ce_SubIdentExpr *_self_, _1e5cac4ce_SubIdentExpr _other_);


struct _1e5cac985_BinaryExpr {
	jule::Ptr<_1e5ca93bb_Expr> _field_Left;
	jule::Ptr<_1e5ca93bb_Expr> _field_Right;
	jule::Ptr<_1e5c8eacc_Token> _field_Op;
	

};
inline jule::Bool _1e5cac985_BinaryExpr_eq(_1e5cac985_BinaryExpr *_self_, _1e5cac985_BinaryExpr _other_);


struct _1e5cad0e5_FnCallExpr {
	jule::Ptr<_1e5c8eacc_Token> _field_Token;
	jule::Ptr<_1e5ca93bb_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1e5ca93bb_Expr>> _field_Args;
	jule::Ptr<_1e5cb50a8_ScopeTree> _field_Exception;
	jule::Bool _field_IsCo;
	

};
struct _1e5cadada_FieldExprPair {
	jule::Ptr<_1e5c8eacc_Token> _field_Field;
	jule::Ptr<_1e5ca93bb_Expr> _field_Expr;
	

};
inline jule::Bool _1e5cadada_FieldExprPair_eq(_1e5cadada_FieldExprPair *_self_, _1e5cadada_FieldExprPair _other_);


struct _1e5cae415_StructLit {
	jule::Ptr<_1e5c8eacc_Token> _field_End;
	jule::Ptr<_1e5ca5087_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1e5ca93bb_Expr>> _field_Exprs;
	

};
struct _1e5cae8bb_BraceLit {
	jule::Ptr<_1e5c8eacc_Token> _field_Token;
	jule::Ptr<_1e5c8eacc_Token> _field_End;
	jule::Slice<jule::Ptr<_1e5ca93bb_Expr>> _field_Exprs;
	

};
struct _1e5cb01e6_KeyValPair {
	jule::Ptr<_1e5ca93bb_Expr> _field_Key;
	jule::Ptr<_1e5ca93bb_Expr> _field_Val;
	jule::Ptr<_1e5c8eacc_Token> _field_Colon;
	

};
inline jule::Bool _1e5cb01e6_KeyValPair_eq(_1e5cb01e6_KeyValPair *_self_, _1e5cb01e6_KeyValPair _other_);


struct _1e5cb0922_SliceExpr {
	jule::Ptr<_1e5c8eacc_Token> _field_Token;
	jule::Ptr<_1e5c8eacc_Token> _field_End;
	jule::Slice<jule::Ptr<_1e5ca93bb_Expr>> _field_Exprs;
	

};
struct _1e5cb137e_IndexingExpr {
	jule::Ptr<_1e5c8eacc_Token> _field_Token;
	jule::Ptr<_1e5c8eacc_Token> _field_End;
	jule::Ptr<_1e5ca93bb_Expr> _field_Expr;
	jule::Ptr<_1e5ca93bb_Expr> _field_Index;
	

};
inline jule::Bool _1e5cb137e_IndexingExpr_eq(_1e5cb137e_IndexingExpr *_self_, _1e5cb137e_IndexingExpr _other_);


struct _1e5cb19de_SlicingExpr {
	jule::Ptr<_1e5c8eacc_Token> _field_Token;
	jule::Ptr<_1e5c8eacc_Token> _field_End;
	jule::Ptr<_1e5ca93bb_Expr> _field_Expr;
	jule::Ptr<_1e5ca93bb_Expr> _field_Start;
	jule::Ptr<_1e5ca93bb_Expr> _field_To;
	

};
inline jule::Bool _1e5cb19de_SlicingExpr_eq(_1e5cb19de_SlicingExpr *_self_, _1e5cb19de_SlicingExpr _other_);


struct _1e5cb1cdb_Constraint {
	jule::Slice<jule::Ptr<_1e5ca5087_TypeDecl>> _field_Mask;
	

};
struct _1e5cb2292_GenericDecl {
	jule::Ptr<_1e5c8eacc_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1e5cb1cdb_Constraint> _field_Constraint;
	

};
inline jule::Bool _1e5cb2292_GenericDecl_eq(_1e5cb2292_GenericDecl *_self_, _1e5cb2292_GenericDecl _other_);


struct _1e5cb266b_LabelSt {
	jule::Ptr<_1e5c8eacc_Token> _field_Token;
	jule::Str _field_Ident;
	

};
inline jule::Bool _1e5cb266b_LabelSt_eq(_1e5cb266b_LabelSt *_self_, _1e5cb266b_LabelSt _other_);


struct _1e5cb2a45_GotoSt {
	jule::Ptr<_1e5c8eacc_Token> _field_Token;
	jule::Ptr<_1e5c8eacc_Token> _field_Label;
	

};
inline jule::Bool _1e5cb2a45_GotoSt_eq(_1e5cb2a45_GotoSt *_self_, _1e5cb2a45_GotoSt _other_);


struct _1e5cb2d42_FallSt {
	jule::Ptr<_1e5c8eacc_Token> _field_Token;
	

};
inline jule::Bool _1e5cb2d42_FallSt_eq(_1e5cb2d42_FallSt *_self_, _1e5cb2d42_FallSt _other_);


struct _1e5cb34a2_AssignLeft {
	jule::Ptr<_1e5c8eacc_Token> _field_Token;
	jule::Bool _field_Mutable;
	jule::Bool _field_Reference;
	jule::Str _field_Ident;
	jule::Ptr<_1e5ca93bb_Expr> _field_Expr;
	

};
inline jule::Bool _1e5cb34a2_AssignLeft_eq(_1e5cb34a2_AssignLeft *_self_, _1e5cb34a2_AssignLeft _other_);


struct _1e5cb3a35_AssignSt {
	jule::Bool _field_Declarative;
	jule::Ptr<_1e5c8eacc_Token> _field_Setter;
	jule::Slice<jule::Ptr<_1e5cb34a2_AssignLeft>> _field_Left;
	jule::Ptr<_1e5ca93bb_Expr> _field_Right;
	

};
struct _1e5cb4948_Stmt {
	jule::Ptr<_1e5c8eacc_Token> _field_Token;
	jule::Any _field_Data;
	

};
inline jule::Bool _1e5cb4948_Stmt_eq(_1e5cb4948_Stmt *_self_, _1e5cb4948_Stmt _other_);


struct _1e5cb50a8_ScopeTree {
	jule::Ptr<_1e5cb50a8_ScopeTree> _field_Parent;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Deferred;
	jule::Slice<_1e5cb4948_Stmt> _field_Stmts;
	jule::Ptr<_1e5c8eacc_Token> _field_End;
	

};
struct _1e5cb57e5_ParamDecl {
	jule::Ptr<_1e5c8eacc_Token> _field_Token;
	jule::Bool _field_Mutable;
	jule::Bool _field_Variadic;
	jule::Bool _field_Reference;
	jule::Ptr<_1e5ca5087_TypeDecl> _field_Kind;
	jule::Str _field_Ident;
	

};
inline jule::Bool _1e5cb57e5_ParamDecl_eq(_1e5cb57e5_ParamDecl *_self_, _1e5cb57e5_ParamDecl _other_);


struct _1e5cb6c47_FnDecl {
	jule::Ptr<_1e5c8eacc_Token> _field_Token;
	jule::Bool _field_Global;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Bool _field_Statically;
	jule::Bool _field_Exceptional;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1e5ca44a4_Directive>> _field_Directives;
	jule::Ptr<_1e5cb50a8_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1e5cb2292_GenericDecl>> _field_Generics;
	jule::Ptr<_1e5ca7e7a_RetTypeDecl> _field_Result;
	jule::Slice<jule::Ptr<_1e5cb57e5_ParamDecl>> _field_Params;
	

};
struct _1e5cb7e02_VarDecl {
	jule::Ptr<_1e5cb50a8_ScopeTree> _field_Scope;
	jule::Ptr<_1e5c8eacc_Token> _field_Token;
	jule::Ptr<_1e5c8eacc_Token> _field_Setter;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
	jule::Bool _field_Public;
	jule::Bool _field_Mutable;
	jule::Bool _field_Constant;
	jule::Bool _field_Statically;
	jule::Bool _field_Reference;
	jule::Slice<jule::Ptr<_1e5ca44a4_Directive>> _field_Directives;
	jule::Ptr<_1e5ca5087_TypeDecl> _field_Kind;
	jule::Ptr<_1e5ca93bb_Expr> _field_Expr;
	

};
struct _1e5cb82cb_RetSt {
	jule::Ptr<_1e5c8eacc_Token> _field_Token;
	jule::Ptr<_1e5ca93bb_Expr> _field_Expr;
	

};
inline jule::Bool _1e5cb82cb_RetSt_eq(_1e5cb82cb_RetSt *_self_, _1e5cb82cb_RetSt _other_);


struct _1e5cb8a4b_Iter {
	jule::Bool _field_Comptime;
	jule::Ptr<_1e5c8eacc_Token> _field_Token;
	jule::Any _field_Kind;
	jule::Ptr<_1e5cb50a8_ScopeTree> _field_Scope;
	

};
inline jule::Bool _1e5cb8a4b_Iter_eq(_1e5cb8a4b_Iter *_self_, _1e5cb8a4b_Iter _other_);


struct _1e5cb9376_WhileKind {
	jule::Ptr<_1e5ca93bb_Expr> _field_Expr;
	jule::Any _field_Next;
	jule::Ptr<_1e5c8eacc_Token> _field_NextToken;
	

};
inline jule::Bool _1e5cb9376_WhileKind_eq(_1e5cb9376_WhileKind *_self_, _1e5cb9376_WhileKind _other_);


struct _1e5cb9c7d_RangeKind {
	jule::Ptr<_1e5c8eacc_Token> _field_InToken;
	jule::Ptr<_1e5ca93bb_Expr> _field_Expr;
	jule::Ptr<_1e5cb7e02_VarDecl> _field_KeyA;
	jule::Ptr<_1e5cb7e02_VarDecl> _field_KeyB;
	

};
inline jule::Bool _1e5cb9c7d_RangeKind_eq(_1e5cb9c7d_RangeKind *_self_, _1e5cb9c7d_RangeKind _other_);


struct _1e5cba157_BreakSt {
	jule::Ptr<_1e5c8eacc_Token> _field_Token;
	jule::Ptr<_1e5c8eacc_Token> _field_Label;
	

};
inline jule::Bool _1e5cba157_BreakSt_eq(_1e5cba157_BreakSt *_self_, _1e5cba157_BreakSt _other_);


struct _1e5cba531_ContSt {
	jule::Ptr<_1e5c8eacc_Token> _field_Token;
	jule::Ptr<_1e5c8eacc_Token> _field_Label;
	

};
inline jule::Bool _1e5cba531_ContSt_eq(_1e5cba531_ContSt *_self_, _1e5cba531_ContSt _other_);


struct _1e5cba9d7_If {
	jule::Ptr<_1e5c8eacc_Token> _field_Token;
	jule::Ptr<_1e5ca93bb_Expr> _field_Expr;
	jule::Ptr<_1e5cb50a8_ScopeTree> _field_Scope;
	

};
inline jule::Bool _1e5cba9d7_If_eq(_1e5cba9d7_If *_self_, _1e5cba9d7_If _other_);


struct _1e5cbadb1_Else {
	jule::Ptr<_1e5c8eacc_Token> _field_Token;
	jule::Ptr<_1e5cb50a8_ScopeTree> _field_Scope;
	

};
inline jule::Bool _1e5cbadb1_Else_eq(_1e5cbadb1_Else *_self_, _1e5cbadb1_Else _other_);


struct _1e5cbb367_Conditional {
	jule::Ptr<_1e5cba9d7_If> _field_Head;
	jule::Slice<jule::Ptr<_1e5cba9d7_If>> _field_Tail;
	jule::Ptr<_1e5cbadb1_Else> _field_Default;
	

};
struct _1e5cbbaa4_TypeAliasDecl {
	jule::Ptr<_1e5cb50a8_ScopeTree> _field_Scope;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Ptr<_1e5c8eacc_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1e5ca5087_TypeDecl> _field_Kind;
	

};
inline jule::Bool _1e5cbbaa4_TypeAliasDecl_eq(_1e5cbbaa4_TypeAliasDecl *_self_, _1e5cbbaa4_TypeAliasDecl _other_);


struct _1e5cbc05a_Case {
	jule::Ptr<_1e5c8eacc_Token> _field_Token;
	jule::Ptr<_1e5cb50a8_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1e5ca93bb_Expr>> _field_Exprs;
	

};
struct _1e5cbc874_MatchCase {
	jule::Bool _field_Comptime;
	jule::Ptr<_1e5c8eacc_Token> _field_Token;
	jule::Ptr<_1e5c8eacc_Token> _field_End;
	jule::Bool _field_TypeMatch;
	jule::Ptr<_1e5ca93bb_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1e5cbc05a_Case>> _field_Cases;
	jule::Ptr<_1e5cbadb1_Else> _field_Default;
	

};
struct _1e5cbd18d_UseDecl {
	jule::Ptr<_1e5c8eacc_Token> _field_Token;
	jule::Str _field_LinkPath;
	jule::Str _field_Alias;
	jule::Bool _field_Full;
	jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _field_Selected;
	jule::Bool _field_Binded;
	jule::Bool _field_Std;
	

};
struct _1e5cbd644_EnumItemDecl {
	jule::Ptr<_1e5c8eacc_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1e5ca93bb_Expr> _field_Expr;
	

};
inline jule::Bool _1e5cbd644_EnumItemDecl_eq(_1e5cbd644_EnumItemDecl *_self_, _1e5cbd644_EnumItemDecl _other_);


struct _1e5cbe205_EnumDecl {
	jule::Ptr<_1e5c8eacc_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Ptr<_1e5ca5087_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1e5cbd644_EnumItemDecl>> _field_Items;
	jule::Ptr<_1e5c8eacc_Token> _field_End;
	

};
struct _1e5cbea30_TypeEnumItemDecl {
	jule::Ptr<_1e5c8eacc_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1e5ca5087_TypeDecl> _field_Kind;
	

};
inline jule::Bool _1e5cbea30_TypeEnumItemDecl_eq(_1e5cbea30_TypeEnumItemDecl *_self_, _1e5cbea30_TypeEnumItemDecl _other_);


struct _1e5cc0190_TypeEnumDecl {
	jule::Ptr<_1e5c8eacc_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1e5cbea30_TypeEnumItemDecl>> _field_Items;
	jule::Ptr<_1e5c8eacc_Token> _field_End;
	

};
struct _1e5cc0459_FieldDecl {
	jule::Ptr<_1e5c8eacc_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Bool _field_Mutable;
	jule::Str _field_Ident;
	jule::Ptr<_1e5ca5087_TypeDecl> _field_Kind;
	jule::Ptr<_1e5ca93bb_Expr> _field_Default;
	

};
inline jule::Bool _1e5cc0459_FieldDecl_eq(_1e5cc0459_FieldDecl *_self_, _1e5cc0459_FieldDecl _other_);


struct _1e5cc0d50_StructDecl {
	jule::Ptr<_1e5c8eacc_Token> _field_Token;
	jule::Ptr<_1e5c8eacc_Token> _field_End;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1e5cc0459_FieldDecl>> _field_Fields;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Slice<jule::Ptr<_1e5ca44a4_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1e5cb2292_GenericDecl>> _field_Generics;
	

};
struct _1e5cc158c_TraitDecl {
	jule::Ptr<_1e5c8eacc_Token> _field_Token;
	jule::Ptr<_1e5c8eacc_Token> _field_End;
	jule::Str _field_Ident;
	jule::Bool _field_Public;
	jule::Slice<jule::Ptr<_1e5ca5087_TypeDecl>> _field_Inherits;
	jule::Slice<jule::Ptr<_1e5cb6c47_FnDecl>> _field_Methods;
	

};
struct _1e5cc1bec_Impl {
	jule::Ptr<_1e5c8eacc_Token> _field_End;
	jule::Ptr<_1e5ca5087_TypeDecl> _field_Base;
	jule::Ptr<_1e5ca5087_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1e5cb6c47_FnDecl>> _field_Methods;
	jule::Slice<jule::Ptr<_1e5cb7e02_VarDecl>> _field_Statics;
	

};
struct _1e5cc2eea_Field {
	jule::Ptr<_1e5cc5e21_Struct> _field_Owner;
	jule::Ptr<_1e5c8eacc_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Bool _field_Mutable;
	jule::Str _field_Ident;
	jule::Ptr<_1e5e4900b_TypeSymbol> _field_Kind;
	jule::Ptr<_1e5ca93bb_Expr> _field_Default;
	

};
inline jule::Bool _1e5cc2eea_Field_eq(_1e5cc2eea_Field *_self_, _1e5cc2eea_Field _other_);


struct _1e5cc500d_Operators {
	jule::Ptr<_1e5ce3416_FnIns> _field_Eq;
	jule::Ptr<_1e5ce3416_FnIns> _field_Gt;
	jule::Ptr<_1e5ce3416_FnIns> _field_GtEq;
	jule::Ptr<_1e5ce3416_FnIns> _field_Lt;
	jule::Ptr<_1e5ce3416_FnIns> _field_LtEq;
	jule::Ptr<_1e5ce3416_FnIns> _field_Shl;
	jule::Ptr<_1e5ce3416_FnIns> _field_Shr;
	jule::Ptr<_1e5ce3416_FnIns> _field_Add;
	jule::Ptr<_1e5ce3416_FnIns> _field_Sub;
	jule::Ptr<_1e5ce3416_FnIns> _field_Div;
	jule::Ptr<_1e5ce3416_FnIns> _field_Mul;
	jule::Ptr<_1e5ce3416_FnIns> _field_Mod;
	jule::Ptr<_1e5ce3416_FnIns> _field_BitAnd;
	jule::Ptr<_1e5ce3416_FnIns> _field_BitOr;
	jule::Ptr<_1e5ce3416_FnIns> _field_BitXor;
	jule::Ptr<_1e5ce3416_FnIns> _field_Neg;
	jule::Ptr<_1e5ce3416_FnIns> _field_Pos;
	jule::Ptr<_1e5ce3416_FnIns> _field_BitNot;
	jule::Ptr<_1e5ce3416_FnIns> _field_AddAssign;
	jule::Ptr<_1e5ce3416_FnIns> _field_SubAssign;
	jule::Ptr<_1e5ce3416_FnIns> _field_DivAssign;
	jule::Ptr<_1e5ce3416_FnIns> _field_MulAssign;
	jule::Ptr<_1e5ce3416_FnIns> _field_ModAssign;
	jule::Ptr<_1e5ce3416_FnIns> _field_ShlAssign;
	jule::Ptr<_1e5ce3416_FnIns> _field_ShrAssign;
	jule::Ptr<_1e5ce3416_FnIns> _field_BitOrAssign;
	jule::Ptr<_1e5ce3416_FnIns> _field_BitAndAssign;
	jule::Ptr<_1e5ce3416_FnIns> _field_BitXorAssign;
	

};
inline jule::Bool _1e5cc500d_Operators_eq(_1e5cc500d_Operators *_self_, _1e5cc500d_Operators _other_);


struct _1e5cc5e21_Struct {
	jule::Ptr<_1e5d7b768_sema> _field_sema;
	jule::Slice<jule::Ptr<_1e5cc5e21_Struct>> _field_Depends;
	jule::Slice<jule::Ptr<_1e5cc5e21_Struct>> _field_Uses;
	jule::Ptr<_1e5c8eacc_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1e5cc2eea_Field>> _field_Fields;
	jule::Slice<jule::Ptr<_1e5ce0358_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1e5da0bcc_Var>> _field_Statics;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Slice<jule::Ptr<_1e5ca44a4_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1e5cb2292_GenericDecl>> _field_Generics;
	jule::Slice<jule::Ptr<_1e5d03db6_Trait>> _field_Implements;
	jule::Slice<jule::Ptr<_1e5cc8c7b_StructIns>> _field_Instances;
	

};
struct _1e5cc81cb_FieldIns {
	jule::Ptr<_1e5cc8c7b_StructIns> _field_Owner;
	jule::Ptr<_1e5cc2eea_Field> _field_Decl;
	jule::Ptr<_1e5e417ea_TypeKind> _field_Kind;
	jule::Ptr<_1e5e08c13_Data> _field_Default;
	

};
inline jule::Bool _1e5cc81cb_FieldIns_eq(_1e5cc81cb_FieldIns *_self_, _1e5cc81cb_FieldIns _other_);


struct _1e5cc8c7b_StructIns {
	jule::Bool _field_Checked;
	jule::Ptr<_1e5cc5e21_Struct> _field_Decl;
	jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1e5cc81cb_FieldIns>> _field_Fields;
	jule::Slice<jule::Ptr<_1e5da0bcc_Var>> _field_Statics;
	jule::Slice<jule::Ptr<_1e5ce0358_Fn>> _field_Methods;
	jule::Bool _field_Mutable;
	jule::Bool _field_Comparable;
	jule::Ptr<_1e5ce65a1_ReferenceStack> _field_Refers;
	_1e5cc500d_Operators _field_Operators;
	

};
struct _1e5cd2856_OperandExprModel {
	jule::Ptr<_1e5e417ea_TypeKind> _field_Kind;
	jule::Any _field_Model;
	

};
inline jule::Bool _1e5cd2856_OperandExprModel_eq(_1e5cd2856_OperandExprModel *_self_, _1e5cd2856_OperandExprModel _other_);


struct _1e5cd2d51_BinaryExprModel {
	jule::Ptr<_1e5cd2856_OperandExprModel> _field_Left;
	jule::Ptr<_1e5cd2856_OperandExprModel> _field_Right;
	jule::Ptr<_1e5c8eacc_Token> _field_Op;
	

};
inline jule::Bool _1e5cd2d51_BinaryExprModel_eq(_1e5cd2d51_BinaryExprModel *_self_, _1e5cd2d51_BinaryExprModel _other_);


struct _1e5cd322a_UnaryExprModel {
	jule::Ptr<_1e5e08c13_Data> _field_Expr;
	jule::Ptr<_1e5c8eacc_Token> _field_Op;
	

};
inline jule::Bool _1e5cd322a_UnaryExprModel_eq(_1e5cd322a_UnaryExprModel *_self_, _1e5cd322a_UnaryExprModel _other_);


struct _1e5cd3758_StructArgExprModel {
	jule::Ptr<_1e5c8eacc_Token> _field_Token;
	jule::Ptr<_1e5cc81cb_FieldIns> _field_Field;
	jule::Ptr<_1e5e08c13_Data> _field_Expr;
	

};
inline jule::Bool _1e5cd3758_StructArgExprModel_eq(_1e5cd3758_StructArgExprModel *_self_, _1e5cd3758_StructArgExprModel _other_);


struct _1e5cd3aee_StructLitExprModel {
	jule::Ptr<_1e5cc8c7b_StructIns> _field_Strct;
	jule::Slice<jule::Ptr<_1e5cd3758_StructArgExprModel>> _field_Args;
	

};
struct _1e5cd3deb_AllocStructLitExprModel {
	jule::Ptr<_1e5cd3aee_StructLitExprModel> _field_Lit;
	

};
inline jule::Bool _1e5cd3deb_AllocStructLitExprModel_eq(_1e5cd3deb_AllocStructLitExprModel *_self_, _1e5cd3deb_AllocStructLitExprModel _other_);


struct _1e5cd447e_CastingExprModel {
	jule::Ptr<_1e5c8eacc_Token> _field_Token;
	jule::Ptr<_1e5e08c13_Data> _field_Expr;
	jule::Ptr<_1e5e417ea_TypeKind> _field_Kind;
	jule::Ptr<_1e5e417ea_TypeKind> _field_ExprKind;
	

};
inline jule::Bool _1e5cd447e_CastingExprModel_eq(_1e5cd447e_CastingExprModel *_self_, _1e5cd447e_CastingExprModel _other_);


struct _1e5cd4d31_FnCallExprModel {
	jule::Ptr<_1e5c8eacc_Token> _field_Token;
	jule::Ptr<_1e5ce3416_FnIns> _field_Func;
	jule::Bool _field_IsCo;
	jule::Any _field_Expr;
	jule::Slice<jule::Any> _field_Args;
	jule::Ptr<_1e5d384d3_Scope> _field_Except;
	jule::Bool _field_Assigned;
	

};
struct _1e5cd520a_SliceExprModel {
	jule::Ptr<_1e5e417ea_TypeKind> _field_ElemKind;
	jule::Slice<jule::Any> _field_Elems;
	

};
struct _1e5cd56b1_IndexingExprModel {
	jule::Ptr<_1e5c8eacc_Token> _field_Token;
	jule::Ptr<_1e5e08c13_Data> _field_Expr;
	jule::Ptr<_1e5e08c13_Data> _field_Index;
	

};
inline jule::Bool _1e5cd56b1_IndexingExprModel_eq(_1e5cd56b1_IndexingExprModel *_self_, _1e5cd56b1_IndexingExprModel _other_);


struct _1e5cd5b67_AnonFnExprModel {
	jule::Slice<jule::Ptr<_1e5da0bcc_Var>> _field_Captured;
	jule::Ptr<_1e5ce3416_FnIns> _field_Func;
	jule::Bool _field_Global;
	

};
struct _1e5cd6041_KeyValPairExprModel {
	jule::Any _field_Key;
	jule::Any _field_Val;
	

};
inline jule::Bool _1e5cd6041_KeyValPairExprModel_eq(_1e5cd6041_KeyValPairExprModel *_self_, _1e5cd6041_KeyValPairExprModel _other_);


struct _1e5cd641a_MapExprModel {
	jule::Ptr<_1e5e505a6_Map> _field_Kind;
	jule::Slice<jule::Ptr<_1e5cd6041_KeyValPairExprModel>> _field_Entries;
	

};
struct _1e5cd699d_SlicingExprModel {
	jule::Ptr<_1e5c8eacc_Token> _field_Token;
	jule::Any _field_Expr;
	jule::Any _field_Left;
	jule::Any _field_Right;
	

};
inline jule::Bool _1e5cd699d_SlicingExprModel_eq(_1e5cd699d_SlicingExprModel *_self_, _1e5cd699d_SlicingExprModel _other_);


struct _1e5cd7031_TraitSubIdentExprModel {
	jule::Ptr<_1e5c8eacc_Token> _field_Token;
	jule::Any _field_Expr;
	jule::Ptr<_1e5ce0358_Fn> _field_Method;
	jule::Ptr<_1e5d03db6_Trait> _field_Trt;
	

};
inline jule::Bool _1e5cd7031_TraitSubIdentExprModel_eq(_1e5cd7031_TraitSubIdentExprModel *_self_, _1e5cd7031_TraitSubIdentExprModel _other_);


struct _1e5cd78c2_StructSubIdentExprModel {
	jule::Ptr<_1e5c8eacc_Token> _field_Token;
	jule::Ptr<_1e5e08c13_Data> _field_Expr;
	jule::Ptr<_1e5ce3416_FnIns> _field_Method;
	jule::Ptr<_1e5cc81cb_FieldIns> _field_Field;
	jule::Ptr<_1e5cc8c7b_StructIns> _field_Owner;
	

};
inline jule::Bool _1e5cd78c2_StructSubIdentExprModel_eq(_1e5cd78c2_StructSubIdentExprModel *_self_, _1e5cd78c2_StructSubIdentExprModel _other_);


struct _1e5cd7c68_StructStaticIdentExprModel {
	jule::Ptr<_1e5cc8c7b_StructIns> _field_Structure;
	jule::Any _field_Expr;
	jule::Ptr<_1e5ce3416_FnIns> _field_Method;
	

};
inline jule::Bool _1e5cd7c68_StructStaticIdentExprModel_eq(_1e5cd7c68_StructStaticIdentExprModel *_self_, _1e5cd7c68_StructStaticIdentExprModel _other_);


struct _1e5cd8142_ArrayExprModel {
	jule::Ptr<_1e5e51233_Arr> _field_Kind;
	jule::Slice<jule::Any> _field_Elems;
	

};
struct _1e5cd843e_TupleExprModel {
	jule::Slice<jule::Ptr<_1e5e08c13_Data>> _field_Datas;
	

};
struct _1e5cd8818_BuiltinOutCallExprModel {
	jule::Ptr<_1e5e08c13_Data> _field_Expr;
	jule::Bool _field_Debug;
	

};
inline jule::Bool _1e5cd8818_BuiltinOutCallExprModel_eq(_1e5cd8818_BuiltinOutCallExprModel *_self_, _1e5cd8818_BuiltinOutCallExprModel _other_);


struct _1e5cd8be2_BuiltinOutlnCallExprModel {
	jule::Ptr<_1e5e08c13_Data> _field_Expr;
	jule::Bool _field_Debug;
	

};
inline jule::Bool _1e5cd8be2_BuiltinOutlnCallExprModel_eq(_1e5cd8be2_BuiltinOutlnCallExprModel *_self_, _1e5cd8be2_BuiltinOutlnCallExprModel _other_);


struct _1e5cd90bb_BuiltinNewCallExprModel {
	jule::Ptr<_1e5e417ea_TypeKind> _field_Kind;
	jule::Any _field_Init;
	

};
inline jule::Bool _1e5cd90bb_BuiltinNewCallExprModel_eq(_1e5cd90bb_BuiltinNewCallExprModel *_self_, _1e5cd90bb_BuiltinNewCallExprModel _other_);


struct _1e5cd9495_BuiltinPanicCallExprModel {
	jule::Ptr<_1e5c8eacc_Token> _field_Token;
	jule::Any _field_Expr;
	

};
inline jule::Bool _1e5cd9495_BuiltinPanicCallExprModel_eq(_1e5cd9495_BuiltinPanicCallExprModel *_self_, _1e5cd9495_BuiltinPanicCallExprModel _other_);


struct _1e5cd994b_BuiltinMakeCallExprModel {
	jule::Ptr<_1e5e417ea_TypeKind> _field_Kind;
	jule::Any _field_Len;
	jule::Any _field_Cap;
	

};
inline jule::Bool _1e5cd994b_BuiltinMakeCallExprModel_eq(_1e5cd994b_BuiltinMakeCallExprModel *_self_, _1e5cd994b_BuiltinMakeCallExprModel _other_);


struct _1e5cd9d25_BuiltinAppendCallExprModel {
	jule::Any _field_Dest;
	jule::Any _field_Elements;
	

};
inline jule::Bool _1e5cd9d25_BuiltinAppendCallExprModel_eq(_1e5cd9d25_BuiltinAppendCallExprModel *_self_, _1e5cd9d25_BuiltinAppendCallExprModel _other_);


struct _1e5cda122_BuiltinLenCallExprModel {
	jule::Ptr<_1e5e08c13_Data> _field_Expr;
	

};
inline jule::Bool _1e5cda122_BuiltinLenCallExprModel_eq(_1e5cda122_BuiltinLenCallExprModel *_self_, _1e5cda122_BuiltinLenCallExprModel _other_);


struct _1e5cda41e_BuiltinCapCallExprModel {
	jule::Ptr<_1e5e08c13_Data> _field_Expr;
	

};
inline jule::Bool _1e5cda41e_BuiltinCapCallExprModel_eq(_1e5cda41e_BuiltinCapCallExprModel *_self_, _1e5cda41e_BuiltinCapCallExprModel _other_);


struct _1e5cda7e8_BuiltinDeleteCallExprModel {
	jule::Ptr<_1e5e08c13_Data> _field_Dest;
	jule::Ptr<_1e5e08c13_Data> _field_Key;
	

};
inline jule::Bool _1e5cda7e8_BuiltinDeleteCallExprModel_eq(_1e5cda7e8_BuiltinDeleteCallExprModel *_self_, _1e5cda7e8_BuiltinDeleteCallExprModel _other_);


struct _1e5cdabc2_BuiltinCopyCallExprModel {
	jule::Ptr<_1e5e08c13_Data> _field_Dest;
	jule::Ptr<_1e5e08c13_Data> _field_Src;
	

};
inline jule::Bool _1e5cdabc2_BuiltinCopyCallExprModel_eq(_1e5cdabc2_BuiltinCopyCallExprModel *_self_, _1e5cdabc2_BuiltinCopyCallExprModel _other_);


struct _1e5cdb09b_BuiltinErrorCallExprModel {
	jule::Ptr<_1e5ce3416_FnIns> _field_Func;
	jule::Ptr<_1e5e08c13_Data> _field_Err;
	

};
inline jule::Bool _1e5cdb09b_BuiltinErrorCallExprModel_eq(_1e5cdb09b_BuiltinErrorCallExprModel *_self_, _1e5cdb09b_BuiltinErrorCallExprModel _other_);


struct _1e5cdb398_SizeofExprModel {
	jule::Any _field_Expr;
	

};
inline jule::Bool _1e5cdb398_SizeofExprModel_eq(_1e5cdb398_SizeofExprModel *_self_, _1e5cdb398_SizeofExprModel _other_);


struct _1e5cdba4c_AlignofExprModel {
	jule::Any _field_Expr;
	

};
inline jule::Bool _1e5cdba4c_AlignofExprModel_eq(_1e5cdba4c_AlignofExprModel *_self_, _1e5cdba4c_AlignofExprModel _other_);


struct _1e5cdbc39_RuneExprModel {
	jule::I32 _field_Code;
	

};
inline jule::Bool _1e5cdbc39_RuneExprModel_eq(_1e5cdbc39_RuneExprModel *_self_, _1e5cdbc39_RuneExprModel _other_);


struct _1e5cdc0ad_BackendEmitExprModel {
	jule::Str _field_Code;
	jule::Slice<jule::Any> _field_Exprs;
	

};
struct _1e5cdc3aa_FreeExprModel {
	jule::Any _field_Expr;
	

};
inline jule::Bool _1e5cdc3aa_FreeExprModel_eq(_1e5cdc3aa_FreeExprModel *_self_, _1e5cdc3aa_FreeExprModel _other_);


struct _1e5cdd147_RetType {
	jule::Ptr<_1e5e4900b_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _field_Idents;
	

};
struct _1e5cdd884_Param {
	jule::Ptr<_1e5c8eacc_Token> _field_Token;
	jule::Bool _field_Mutable;
	jule::Bool _field_Variadic;
	jule::Bool _field_Reference;
	jule::Ptr<_1e5e4900b_TypeSymbol> _field_Kind;
	jule::Str _field_Ident;
	

};
inline jule::Bool _1e5cdd884_Param_eq(_1e5cdd884_Param *_self_, _1e5cdd884_Param _other_);


struct _1e5ce0358_Fn {
	jule::Ptr<_1e5d7b768_sema> _field_sema;
	jule::Ptr<_1e5c8eacc_Token> _field_Token;
	jule::Bool _field_Global;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Bool _field_Statically;
	jule::Bool _field_Exceptional;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1e5ca44a4_Directive>> _field_Directives;
	jule::Ptr<_1e5cb50a8_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1e5cb2292_GenericDecl>> _field_Generics;
	jule::Ptr<_1e5cdd147_RetType> _field_Result;
	jule::Slice<jule::Ptr<_1e5cdd884_Param>> _field_Params;
	jule::Ptr<_1e5cc5e21_Struct> _field_Owner;
	jule::Slice<jule::Ptr<_1e5ce3416_FnIns>> _field_Instances;
	

};
struct _1e5ce22b1_ParamIns {
	jule::Ptr<_1e5cdd884_Param> _field_Decl;
	jule::Ptr<_1e5e417ea_TypeKind> _field_Kind;
	

};
inline jule::Bool _1e5ce22b1_ParamIns_eq(_1e5ce22b1_ParamIns *_self_, _1e5ce22b1_ParamIns _other_);


struct _1e5ce3416_FnIns {
	jule::Ptr<_1e5cc8c7b_StructIns> _field_Owner;
	jule::Ptr<_1e5ce0358_Fn> _field_Decl;
	jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>> _field_Params;
	jule::Ptr<_1e5e417ea_TypeKind> _field_Result;
	jule::Ptr<_1e5d384d3_Scope> _field_Scope;
	jule::Ptr<_1e5ce65a1_ReferenceStack> _field_Refers;
	jule::Bool _field_Anon;
	jule::Bool _field_AsAnon;
	jule::Bool _field_CalledCo;
	jule::Fn<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*> _field_caller;
	jule::Bool _field_reloaded;
	

};
struct _1e5ce65a1_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer;
	

};
struct _1e5ce7aad_Pass {
	jule::Ptr<_1e5c8eacc_Token> _field_Token;
	jule::Str _field_Text;
	

};
inline jule::Bool _1e5ce7aad_Pass_eq(_1e5ce7aad_Pass *_self_, _1e5ce7aad_Pass _other_);


struct _1e5cec563_symbolBuilder {
	jule::Ptr<_1e5cec563_symbolBuilder> _field_owner;
	jule::Trait _field_importer;
	jule::Slice<_22578b38a_Log> _field_errors;
	jule::Ptr<_1e5ca3173_AST> _field_ast;
	jule::Ptr<_1e5e03548_SymbolTable> _field_table;
	

};
struct _1e5d03db6_Trait {
	jule::Ptr<_1e5c8eacc_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Public;
	jule::Slice<jule::Ptr<_1e5e4900b_TypeSymbol>> _field_Inherits;
	jule::Slice<jule::Ptr<_1e5ce0358_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1e5cc5e21_Struct>> _field_Implemented;
	

};
struct _1e5d05a55_EnumItem {
	jule::Ptr<_1e5c8eacc_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1e5e09d8a_Value> _field_Value;
	

};
inline jule::Bool _1e5d05a55_EnumItem_eq(_1e5d05a55_EnumItem *_self_, _1e5d05a55_EnumItem _other_);


struct _1e5d065c2_Enum {
	jule::Ptr<_1e5c8eacc_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Ptr<_1e5e4900b_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1e5d05a55_EnumItem>> _field_Items;
	

};
struct _1e5d07705_TypeEnumItem {
	jule::Ptr<_1e5c8eacc_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1e5e4900b_TypeSymbol> _field_Kind;
	

};
inline jule::Bool _1e5d07705_TypeEnumItem_eq(_1e5d07705_TypeEnumItem *_self_, _1e5d07705_TypeEnumItem _other_);


struct _1e5d07ccc_TypeEnum {
	jule::Ptr<_1e5c8eacc_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1e5d07705_TypeEnumItem>> _field_Items;
	

};
struct _1e5d0a708_comptimeRange {
	jule::Trait _field_kind;
	

};
inline jule::Bool _1e5d0a708_comptimeRange_eq(_1e5d0a708_comptimeRange *_self_, _1e5d0a708_comptimeRange _other_);


struct _1e5d0b264_comptimeStructField {
	jule::Ptr<_1e5cc81cb_FieldIns> _field_field;
	

};
inline jule::Bool _1e5d0b264_comptimeStructField_eq(_1e5d0b264_comptimeStructField *_self_, _1e5d0b264_comptimeStructField _other_);


struct _1e5d0ca07_comptimeStructFields {
	jule::Slice<jule::Ptr<_1e5cc81cb_FieldIns>> _field_fields;
	

};
struct _1e5d0e487_comptimeStatic {
	jule::Ptr<_1e5da0bcc_Var> _field_field;
	

};
inline jule::Bool _1e5d0e487_comptimeStatic_eq(_1e5d0e487_comptimeStatic *_self_, _1e5d0e487_comptimeStatic _other_);


struct _1e5d10c3b_comptimeStatics {
	jule::Slice<jule::Ptr<_1e5da0bcc_Var>> _field_fields;
	

};
struct _1e5d126aa_comptimeEnumField {
	jule::Ptr<_1e5d05a55_EnumItem> _field_field;
	

};
inline jule::Bool _1e5d126aa_comptimeEnumField_eq(_1e5d126aa_comptimeEnumField *_self_, _1e5d126aa_comptimeEnumField _other_);


struct _1e5d139b9_comptimeEnumFields {
	jule::Slice<jule::Ptr<_1e5d05a55_EnumItem>> _field_fields;
	

};
struct _1e5d154c1_comptimeParam {
	jule::Ptr<_1e5ce22b1_ParamIns> _field_param;
	

};
inline jule::Bool _1e5d154c1_comptimeParam_eq(_1e5d154c1_comptimeParam *_self_, _1e5d154c1_comptimeParam _other_);


struct _1e5d1732a_comptimeParams {
	jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>> _field_params;
	

};
struct _1e5d18b89_comptimeTypeInfos {
	jule::Slice<jule::Ptr<_1e5d1a608_comptimeTypeInfo>> _field_types;
	

};
struct _1e5d1a608_comptimeTypeInfo {
	jule::Ptr<_1e5e417ea_TypeKind> _field_base;
	

};
inline jule::Bool _1e5d1a608_comptimeTypeInfo_eq(_1e5d1a608_comptimeTypeInfo *_self_, _1e5d1a608_comptimeTypeInfo _other_);


struct _1e5d2170d_comptimeValue {
	jule::Ptr<_1e5e08c13_Data> _field_data;
	

};
inline jule::Bool _1e5d2170d_comptimeValue_eq(_1e5d2170d_comptimeValue *_self_, _1e5d2170d_comptimeValue _other_);


struct _1e5d24469_comptimeFiles {
	jule::Slice<jule::Ptr<_1e5e03548_SymbolTable>> _field_files;
	

};
struct _1e5d25dd8_comptimeFile {
	jule::Ptr<_1e5e03548_SymbolTable> _field_file;
	

};
inline jule::Bool _1e5d25dd8_comptimeFile_eq(_1e5d25dd8_comptimeFile *_self_, _1e5d25dd8_comptimeFile _other_);


struct _1e5d27a11_comptimeDecls {
	jule::Slice<jule::Ptr<_1e5d29cee_comptimeDecl>> _field_decls;
	

};
struct _1e5d29cee_comptimeDecl {
	jule::Any _field_decl;
	

};
inline jule::Bool _1e5d29cee_comptimeDecl_eq(_1e5d29cee_comptimeDecl *_self_, _1e5d29cee_comptimeDecl _other_);


struct _1e5d318a5_constraintChecker {
	jule::Ptr<_1e5d7b768_sema> _field_s;
	jule::Slice<jule::Ptr<_1e5cb2292_GenericDecl>> _field_genericsD;
	jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>> _field_generics;
	jule::Slice<jule::Ptr<_1e5e40a08_TypeAlias>> _field_genericsA;
	jule::Ptr<_1e5ce3416_FnIns> _field_fi;
	jule::Ptr<_1e5cc8c7b_StructIns> _field_si;
	jule::Ptr<_1e5c8eacc_Token> _field_et;
	jule::Bool _field_uniq;
	

};
struct _1e5d33c09_Impl {
	jule::Ptr<_1e5ca5087_TypeDecl> _field_Base;
	jule::Ptr<_1e5ca5087_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1e5ce0358_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1e5da0bcc_Var>> _field_Statics;
	

};
struct _1e5d384d3_Scope {
	jule::Ptr<_1e5d384d3_Scope> _field_Parent;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Deferred;
	jule::Slice<jule::Any> _field_Stmts;
	jule::I64 _field_ChildIndex;
	jule::I64 _field_StmtIndex;
	

};
struct _1e5d38901_If {
	jule::Any _field_Expr;
	jule::Ptr<_1e5d384d3_Scope> _field_Scope;
	

};
inline jule::Bool _1e5d38901_If_eq(_1e5d38901_If *_self_, _1e5d38901_If _other_);


struct _1e5d38bed_Else {
	jule::Ptr<_1e5d384d3_Scope> _field_Scope;
	

};
inline jule::Bool _1e5d38bed_Else_eq(_1e5d38bed_Else *_self_, _1e5d38bed_Else _other_);


struct _1e5d3911b_Conditional {
	jule::Slice<jule::Ptr<_1e5d38901_If>> _field_Elifs;
	jule::Ptr<_1e5d38bed_Else> _field_Default;
	

};
struct _1e5d39418_InfIter {
	jule::Ptr<_1e5d384d3_Scope> _field_Scope;
	

};
inline jule::Bool _1e5d39418_InfIter_eq(_1e5d39418_InfIter *_self_, _1e5d39418_InfIter _other_);


struct _1e5d398be_WhileIter {
	jule::Ptr<_1e5d384d3_Scope> _field_Scope;
	jule::Any _field_Expr;
	jule::Any _field_Next;
	

};
inline jule::Bool _1e5d398be_WhileIter_eq(_1e5d398be_WhileIter *_self_, _1e5d398be_WhileIter _other_);


struct _1e5d3a31a_RangeIter {
	jule::Ptr<_1e5d384d3_Scope> _field_Scope;
	jule::Ptr<_1e5e08c13_Data> _field_Expr;
	jule::Ptr<_1e5da0bcc_Var> _field_KeyA;
	jule::Ptr<_1e5da0bcc_Var> _field_KeyB;
	

};
inline jule::Bool _1e5d3a31a_RangeIter_eq(_1e5d3a31a_RangeIter *_self_, _1e5d3a31a_RangeIter _other_);


struct _1e5d3a6a0_ContSt {
	jule::Uintptr _field_It;
	

};
inline jule::Bool _1e5d3a6a0_ContSt_eq(_1e5d3a6a0_ContSt *_self_, _1e5d3a6a0_ContSt _other_);


struct _1e5d3aa79_BreakSt {
	jule::Uintptr _field_It;
	jule::Uintptr _field_Mtch;
	

};
inline jule::Bool _1e5d3aa79_BreakSt_eq(_1e5d3aa79_BreakSt *_self_, _1e5d3aa79_BreakSt _other_);


struct _1e5d3b030_Label {
	jule::Str _field_Ident;
	jule::Ptr<_1e5d384d3_Scope> _field_Scope;
	jule::I64 _field_Index;
	

};
inline jule::Bool _1e5d3b030_Label_eq(_1e5d3b030_Label *_self_, _1e5d3b030_Label _other_);


struct _1e5d3b690_GotoSt {
	jule::Str _field_Ident;
	jule::Ptr<_1e5c8eacc_Token> _field_Token;
	jule::Ptr<_1e5d3b030_Label> _field_Label;
	jule::Ptr<_1e5d384d3_Scope> _field_Scope;
	jule::I64 _field_Index;
	

};
inline jule::Bool _1e5d3b690_GotoSt_eq(_1e5d3b690_GotoSt *_self_, _1e5d3b690_GotoSt _other_);


struct _1e5d3ba69_Postfix {
	jule::Any _field_Expr;
	jule::Str _field_Op;
	

};
inline jule::Bool _1e5d3ba69_Postfix_eq(_1e5d3ba69_Postfix *_self_, _1e5d3ba69_Postfix _other_);


struct _1e5d3c020_Assign {
	jule::Ptr<_1e5cd2856_OperandExprModel> _field_Left;
	jule::Ptr<_1e5cd2856_OperandExprModel> _field_Right;
	jule::Ptr<_1e5c8eacc_Token> _field_Op;
	

};
inline jule::Bool _1e5d3c020_Assign_eq(_1e5d3c020_Assign *_self_, _1e5d3c020_Assign _other_);


struct _1e5d3c4c6_MultiAssign {
	jule::Slice<jule::Ptr<_1e5da0bcc_Var>> _field_Decls;
	jule::Slice<jule::Ptr<_1e5e08c13_Data>> _field_Left;
	jule::Any _field_Right;
	

};
struct _1e5d3cc13_Match {
	jule::Ptr<_1e5d384d3_Scope> _field_Scope;
	jule::Ptr<_1e5e08c13_Data> _field_Expr;
	jule::Bool _field_TypeMatch;
	jule::Bool _field_Comptime;
	jule::Slice<jule::Ptr<_1e5d3d73b_Case>> _field_Cases;
	jule::Ptr<_1e5d3d73b_Case> _field_Default;
	

};
struct _1e5d3d73b_Case {
	jule::Ptr<_1e5d3cc13_Match> _field_Owner;
	jule::Ptr<_1e5d384d3_Scope> _field_Scope;
	jule::Slice<jule::Ptr<_1e5e08c13_Data>> _field_Exprs;
	jule::Ptr<_1e5d3d73b_Case> _field_Next;
	

};
struct _1e5d3de34_FallSt {
	jule::Uintptr _field_DestCase;
	

};
inline jule::Bool _1e5d3de34_FallSt_eq(_1e5d3de34_FallSt *_self_, _1e5d3de34_FallSt _other_);


struct _1e5d3e2ca_RetSt {
	jule::Ptr<_1e5ce3416_FnIns> _field_Func;
	jule::Any _field_Expr;
	

};
inline jule::Bool _1e5d3e2ca_RetSt_eq(_1e5d3e2ca_RetSt *_self_, _1e5d3e2ca_RetSt _other_);


struct _1e5d3e781_scopeLabel {
	jule::Ptr<_1e5c8eacc_Token> _field_token;
	jule::Ptr<_1e5d3b030_Label> _field_node;
	jule::Bool _field_used;
	

};
inline jule::Bool _1e5d3e781_scopeLabel_eq(_1e5d3e781_scopeLabel *_self_, _1e5d3e781_scopeLabel _other_);


struct _1e5d40771_scopeChecker {
	jule::Ptr<_1e5c8eacc_Token> _field_calledFrom;
	jule::Ptr<_1e5d7b768_sema> _field_s;
	jule::Ptr<_1e5ce3416_FnIns> _field_owner;
	jule::Ptr<_1e5d40771_scopeChecker> _field_parent;
	jule::I64 _field_childIndex;
	jule::Ptr<_1e5e03548_SymbolTable> _field_table;
	jule::Ptr<_1e5d384d3_Scope> _field_scope;
	jule::Ptr<_1e5cb50a8_ScopeTree> _field_tree;
	jule::Ptr<_1e5ce3416_FnIns> _field_result;
	jule::Uintptr _field_it;
	jule::Uintptr _field_cse;
	jule::Ptr<jule::Slice<jule::Ptr<_1e5da0bcc_Var>>> _field_captured;
	jule::Ptr<jule::Slice<jule::Ptr<_1e5d3e781_scopeLabel>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1e5d3b690_GotoSt>>> _field_gotos;
	jule::I64 _field_i;
	

};
inline jule::Bool _1e5d40771_scopeChecker_eq(_1e5d40771_scopeChecker *_self_, _1e5d40771_scopeChecker _other_);


struct _1e5d5470d_directiveChecker {
	jule::Ptr<_1e5d7b768_sema> _field_s;
	jule::Ptr<jule::Slice<jule::Ptr<_1e5ca44a4_Directive>>> _field_d;
	jule::Any _field_o;
	

};
inline jule::Bool _1e5d5470d_directiveChecker_eq(_1e5d5470d_directiveChecker *_self_, _1e5d5470d_directiveChecker _other_);


struct _1e5d5b2e7_ImportInfo {
	jule::Ptr<_1e5c8eacc_Token> _field_Token;
	jule::Str _field_Path;
	jule::Str _field_LinkPath;
	jule::Str _field_Ident;
	jule::Str _field_Alias;
	jule::Bool _field_Duplicate;
	jule::Bool _field_Binded;
	jule::Bool _field_Std;
	jule::Bool _field_ImportAll;
	jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _field_Selected;
	jule::Ptr<_1e5d5e21d_Package> _field_Package;
	jule::I64 _field_ModId;
	

};
struct _1e5d5e21d_Package {
	jule::Slice<jule::Ptr<_1e5e03548_SymbolTable>> _field_Files;
	

};
struct _1e5d7ab41_commonSemaMeta {
	jule::Slice<jule::Ptr<_1e5d1a608_comptimeTypeInfo>> _field_comptimeTypeInfos;
	jule::Ptr<_1e5d5b2e7_ImportInfo> _field_runtime;
	

};
struct _1e5d7b768_sema {
	jule::Slice<_22578b38a_Log> _field_errors;
	jule::Slice<jule::Ptr<_1e5e03548_SymbolTable>> _field_files;
	jule::Ptr<_1e5e03548_SymbolTable> _field_file;
	jule::I64 _field_flags;
	jule::Ptr<_1e5d7ab41_commonSemaMeta> _field_meta;
	

};
struct _1e5d9c525_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked;
	jule::Bool _field_falled;
	

};
struct _1e5da0bcc_Var {
	jule::Ptr<_1e5d384d3_Scope> _field_Scope;
	jule::Ptr<_1e5c8eacc_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
	jule::Bool _field_Constant;
	jule::Bool _field_Mutable;
	jule::Bool _field_Public;
	jule::Bool _field_Used;
	jule::Bool _field_Statically;
	jule::Bool _field_Reference;
	jule::Ptr<_1e5e4900b_TypeSymbol> _field_Kind;
	jule::Ptr<_1e5e09d8a_Value> _field_Value;
	jule::Ptr<_1e5ce65a1_ReferenceStack> _field_Refers;
	jule::Slice<jule::Ptr<_1e5ca44a4_Directive>> _field_Directives;
	jule::I64 _field_RetOrder;
	jule::Slice<jule::Ptr<_1e5da0bcc_Var>> _field_Depends;
	

};
struct _1e5da1c66_FuncPattern {
	

};
struct _1e5de049c_typeCompatibilityChecker {
	jule::Ptr<_1e5d7b768_sema> _field_s;
	jule::Ptr<_1e5e417ea_TypeKind> _field_dest;
	jule::Ptr<_1e5e417ea_TypeKind> _field_src;
	jule::Ptr<_1e5c8eacc_Token> _field_errorToken;
	

};
inline jule::Bool _1e5de049c_typeCompatibilityChecker_eq(_1e5de049c_typeCompatibilityChecker *_self_, _1e5de049c_typeCompatibilityChecker _other_);


struct _1e5de2328_assignTypeChecker {
	jule::Ptr<_1e5d7b768_sema> _field_s;
	jule::Ptr<_1e5e417ea_TypeKind> _field_dest;
	jule::Ptr<_1e5e08c13_Data> _field_d;
	jule::Ptr<_1e5c8eacc_Token> _field_errorToken;
	jule::Ptr<_1e5ce65a1_ReferenceStack> _field_refers;
	

};
inline jule::Bool _1e5de2328_assignTypeChecker_eq(_1e5de2328_assignTypeChecker *_self_, _1e5de2328_assignTypeChecker _other_);


struct _1e5de3bed_dynamicTypeAnnotation {
	jule::Ptr<_1e5e0a93a_eval> _field_e;
	jule::Ptr<_1e5ce3416_FnIns> _field_f;
	jule::Ptr<_1e5ce22b1_ParamIns> _field_p;
	jule::Ptr<_1e5e08c13_Data> _field_a;
	jule::Ptr<_1e5c8eacc_Token> _field_errorToken;
	jule::Ptr<_1e5e417ea_TypeKind>* _field_k;
	jule::Ptr<_1e5ca5087_TypeDecl> _field_c;
	jule::Slice<jule::Ptr<_1e5e417ea_TypeKind>> _field_ignored;
	

};
struct _1e5de8a5a_fnCallArgChecker {
	jule::Ptr<_1e5e0a93a_eval> _field_e;
	jule::Slice<jule::Ptr<_1e5ca93bb_Expr>> _field_args;
	jule::Ptr<_1e5c8eacc_Token> _field_errorToken;
	jule::Ptr<_1e5ce3416_FnIns> _field_f;
	jule::Bool _field_dynamicAnnotation;
	jule::Slice<jule::Any> _field_argModels;
	jule::Slice<jule::Ptr<_1e5e417ea_TypeKind>> _field_ignored;
	

};
struct _1e5deb992_structLitChecker {
	jule::Ptr<_1e5e0a93a_eval> _field_e;
	jule::Ptr<_1e5c8eacc_Token> _field_errorToken;
	jule::Ptr<_1e5cc8c7b_StructIns> _field_s;
	jule::Slice<jule::Ptr<_1e5cd3758_StructArgExprModel>> _field_args;
	

};
struct _1e5ded774_rangeChecker {
	jule::Ptr<_1e5d40771_scopeChecker> _field_sc;
	jule::Ptr<_1e5cb9c7d_RangeKind> _field_rang;
	jule::Ptr<_1e5d3a31a_RangeIter> _field_Kind;
	jule::Ptr<_1e5e08c13_Data> _field_d;
	

};
inline jule::Bool _1e5ded774_rangeChecker_eq(_1e5ded774_rangeChecker *_self_, _1e5ded774_rangeChecker _other_);


struct _1e5e00ed5_retTypeChecker {
	jule::Ptr<_1e5d40771_scopeChecker> _field_sc;
	jule::Ptr<_1e5ce3416_FnIns> _field_f;
	jule::Slice<jule::Ptr<_1e5e417ea_TypeKind>> _field_types;
	jule::Slice<jule::Ptr<_1e5ca93bb_Expr>> _field_exprs;
	jule::Ptr<_1e5c8eacc_Token> _field_errorToken;
	jule::Any _field_model;
	

};
struct _1e5e03548_SymbolTable {
	jule::Ptr<_1e5c95363_File> _field_File;
	jule::Slice<_1e5ce7aad_Pass> _field_Passes;
	jule::Slice<jule::Ptr<_1e5d5b2e7_ImportInfo>> _field_Imports;
	jule::Slice<jule::Ptr<_1e5da0bcc_Var>> _field_Vars;
	jule::Slice<jule::Ptr<_1e5e40a08_TypeAlias>> _field_TypeAliases;
	jule::Slice<jule::Ptr<_1e5cc5e21_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1e5ce0358_Fn>> _field_Funcs;
	jule::Slice<jule::Ptr<_1e5d03db6_Trait>> _field_Traits;
	jule::Slice<jule::Ptr<_1e5d065c2_Enum>> _field_Enums;
	jule::Slice<jule::Ptr<_1e5d07ccc_TypeEnum>> _field_TypeEnums;
	jule::Slice<jule::Ptr<_1e5d33c09_Impl>> _field_Impls;
	

};
struct _1e5e08c13_Data {
	jule::Bool _field_untyped;
	jule::Ptr<_1e5e417ea_TypeKind> _field_Kind;
	jule::Bool _field_Mutable;
	jule::Bool _field_Reference;
	jule::Bool _field_Lvalue;
	jule::Bool _field_IsRune;
	jule::Any _field_Model;
	jule::Bool _field_Decl;
	jule::Ptr<_1e21a449b_Const> _field_Constant;
	

};
inline jule::Bool _1e5e08c13_Data_eq(_1e5e08c13_Data *_self_, _1e5e08c13_Data _other_);


struct _1e5e09d8a_Value {
	jule::Ptr<_1e5ca93bb_Expr> _field_Expr;
	jule::Ptr<_1e5e08c13_Data> _field_Data;
	

};
inline jule::Bool _1e5e09d8a_Value_eq(_1e5e09d8a_Value *_self_, _1e5e09d8a_Value _other_);


struct _1e5e0a93a_eval {
	jule::Ptr<_1e5d7b768_sema> _field_s;
	jule::Trait _field_lookup;
	jule::Ptr<_1e5e417ea_TypeKind> _field_prefix;
	jule::Bool _field_unsafety;
	jule::Bool _field_immutable;
	jule::Bool _field_ignored;
	jule::Bool _field_disBuiltin;
	jule::Ptr<_1e5da0bcc_Var> _field_owner;
	jule::Ptr<_1e5cc81cb_FieldIns> _field_field;
	jule::Bool _field_arg;
	

};
inline jule::Bool _1e5e0a93a_eval_eq(_1e5e0a93a_eval *_self_, _1e5e0a93a_eval _other_);


struct _1e5e29c34_unaryEval {
	jule::Ptr<_1e5e0a93a_eval> _field_e;
	jule::Ptr<_1e5e08c13_Data> _field_d;
	jule::Ptr<_1e5cab478_UnaryExpr> _field_u;
	

};
inline jule::Bool _1e5e29c34_unaryEval_eq(_1e5e29c34_unaryEval *_self_, _1e5e29c34_unaryEval _other_);


struct _1e5e2bbc0_binaryEval {
	jule::Ptr<_1e5e0a93a_eval> _field_e;
	jule::Ptr<_1e5e08c13_Data> _field_l;
	jule::Ptr<_1e5e08c13_Data> _field_r;
	jule::Ptr<_1e5c8eacc_Token> _field_op;
	

};
inline jule::Bool _1e5e2bbc0_binaryEval_eq(_1e5e2bbc0_binaryEval *_self_, _1e5e2bbc0_binaryEval _other_);


struct _1e5e3ee14_InsGeneric {
	jule::Ptr<_1e5e417ea_TypeKind> _field_Kind;
	jule::Slice<jule::Ptr<_1e5e417ea_TypeKind>> _field_Constraint;
	

};
struct _1e5e40a08_TypeAlias {
	jule::Ptr<_1e5cb50a8_ScopeTree> _field_Scope;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Bool _field_Used;
	jule::Bool _field_Generic;
	jule::Ptr<_1e5c8eacc_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1e5e4900b_TypeSymbol> _field_Kind;
	jule::Slice<jule::Any> _field_Refers;
	jule::Slice<jule::Ptr<_1e5e40a08_TypeAlias>> _field_Generics;
	

};
struct _1e5e417ea_TypeKind {
	jule::Str _field_BindIdent;
	jule::Bool _field_Generic;
	jule::Bool _field_Variadic;
	jule::Trait _field_Kind;
	

};
inline jule::Bool _1e5e417ea_TypeKind_eq(_1e5e417ea_TypeKind *_self_, _1e5e417ea_TypeKind _other_);


struct _1e5e4900b_TypeSymbol {
	jule::Ptr<_1e5ca5087_TypeDecl> _field_Decl;
	jule::Ptr<_1e5e417ea_TypeKind> _field_Kind;
	

};
inline jule::Bool _1e5e4900b_TypeSymbol_eq(_1e5e4900b_TypeSymbol *_self_, _1e5e4900b_TypeSymbol _other_);


struct _1e5e49913_Prim {
	jule::Str _field_Kind;
	

};
inline jule::Bool _1e5e49913_Prim_eq(_1e5e49913_Prim *_self_, _1e5e49913_Prim _other_);


struct _1e5e4d43e_Sptr {
	jule::Ptr<_1e5e417ea_TypeKind> _field_Elem;
	

};
inline jule::Bool _1e5e4d43e_Sptr_eq(_1e5e4d43e_Sptr *_self_, _1e5e4d43e_Sptr _other_);


struct _1e5e4de12_Slc {
	jule::Ptr<_1e5e417ea_TypeKind> _field_Elem;
	

};
inline jule::Bool _1e5e4de12_Slc_eq(_1e5e4de12_Slc *_self_, _1e5e4de12_Slc _other_);


struct _1e5e4ea06_Tuple {
	jule::Slice<jule::Ptr<_1e5e417ea_TypeKind>> _field_Types;
	

};
struct _1e5e505a6_Map {
	jule::Ptr<_1e5e417ea_TypeKind> _field_Key;
	jule::Ptr<_1e5e417ea_TypeKind> _field_Val;
	

};
inline jule::Bool _1e5e505a6_Map_eq(_1e5e505a6_Map *_self_, _1e5e505a6_Map _other_);


struct _1e5e51233_Arr {
	jule::Bool _field_Auto;
	jule::I64 _field_N;
	jule::Ptr<_1e5e417ea_TypeKind> _field_Elem;
	

};
inline jule::Bool _1e5e51233_Arr_eq(_1e5e51233_Arr *_self_, _1e5e51233_Arr _other_);


struct _1e5e51c06_Ptr {
	jule::Ptr<_1e5e417ea_TypeKind> _field_Elem;
	

};
inline jule::Bool _1e5e51c06_Ptr_eq(_1e5e51c06_Ptr *_self_, _1e5e51c06_Ptr _other_);


struct _1e5e52c07_referencer {
	jule::Str _field_ident;
	jule::Any _field_owner;
	jule::Slice<jule::Any>* _field_refs;
	

};
inline jule::Bool _1e5e52c07_referencer_eq(_1e5e52c07_referencer *_self_, _1e5e52c07_referencer _other_);


struct _1e5e53be7_typeChecker {
	jule::Ptr<_1e5d7b768_sema> _field_s;
	jule::Trait _field_rootLookup;
	jule::Trait _field_lookup;
	jule::Ptr<_1e5e52c07_referencer> _field_referencer;
	jule::Ptr<_1e5ce65a1_ReferenceStack> _field_refers;
	jule::Ptr<_1e5c8eacc_Token> _field_errorToken;
	jule::Slice<jule::Ptr<_1e5cb2292_GenericDecl>> _field_ignoreGenerics;
	jule::Slice<jule::Ptr<_1e5e417ea_TypeKind>>* _field_ignoredGenerics;
	jule::Slice<jule::Ptr<_1e5e40a08_TypeAlias>> _field_useGenerics;
	jule::Bool _field_cycleRisk;
	jule::Bool _field_disBuiltin;
	jule::Bool _field_selection;
	jule::Ptr<_1e5e40a08_TypeAlias> _field_ownerAlias;
	jule::Slice<jule::Ptr<_1e5e40a08_TypeAlias>> _field_bannedGenerics;
	jule::Bool _field_inscatch;
	

};
struct _1e5e5bcaa_identTypeLookup {
	

};
inline jule::Bool _1e5e5bcaa_identTypeLookup_eq(_1e5e5bcaa_identTypeLookup *_self_, _1e5e5bcaa_identTypeLookup _other_);


struct _1e6970636_FileInfo {
	jule::Ptr<_1e5ca3173_AST> _field_Ast;
	jule::Slice<_22578b38a_Log> _field_Errors;
	

};
struct _1e69bb1dc_stmt {
	jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _field_tokens;
	jule::Bool _field_terminated;
	

};
struct _1e69bba7d_scopeParser {
	jule::Ptr<_1e69da10c_parser> _field_p;
	jule::Ptr<_1e5cb50a8_ScopeTree> _field_s;
	jule::Slice<jule::Ptr<_1e69bb1dc_stmt>> _field_stmts;
	jule::I64 _field_pos;
	

};
struct _1e69c94e7_exprBuilder {
	jule::Ptr<_1e69da10c_parser> _field_p;
	

};
inline jule::Bool _1e69c94e7_exprBuilder_eq(_1e69c94e7_exprBuilder *_self_, _1e69c94e7_exprBuilder _other_);


struct _1e69d6c0d_assignInfo {
	jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _field_l;
	jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _field_r;
	jule::Ptr<_1e5c8eacc_Token> _field_setter;
	jule::Bool _field_ok;
	

};
struct _1e69da10c_parser {
	jule::Ptr<_1e5ca3173_AST> _field_ast;
	jule::Slice<jule::Ptr<_1e5ca44a4_Directive>> _field_directives;
	jule::Slice<_22578b38a_Log> _field_errors;
	jule::Ptr<_1e69c94e7_exprBuilder> _field_ep;
	

};
struct _1e69ec22e_typeBuilder {
	jule::Ptr<_1e69da10c_parser> _field_p;
	jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _field_tokens;
	jule::I64* _field_i;
	jule::Bool _field_err;
	

};
struct _1e62091bc_CompileInfo {
	jule::Bool _field_Prod;
	jule::Bool _field_Test;
	jule::Str _field_Compiler;
	jule::Str _field_CppStd;
	

};
inline jule::Bool _1e62091bc_CompileInfo_eq(_1e62091bc_CompileInfo *_self_, _1e62091bc_CompileInfo _other_);


struct _1e620a696_directiveEval {
	jule::Slice<_22578b38a_Log> _field_logs;
	jule::Ptr<_1e5ca44a4_Directive> _field_d;
	jule::Slice<jule::Str> _field_vars;
	

};
struct _1e6a01222_JuleImporter {
	jule::Slice<jule::Str> _field_mods;
	jule::Str _field_mod;
	jule::Slice<jule::Ptr<_1e5d5b2e7_ImportInfo>> _field_pkgs;
	jule::Slice<jule::Str> _field_vars;
	

};
struct _1e6a07a0e_ExprInspector {
	jule::Bool _field_SkipChild;
	jule::Fn<void,jule::Any*> _field_handler;
	

};
struct _1e6a0e032_OrderedDefines {
	jule::Slice<jule::Ptr<_1e5cc5e21_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1e5da0bcc_Var>> _field_Globals;
	

};
struct _1c7edb1ed_specialCaseDefines {
	jule::Ptr<_1e5cc5e21_Struct> _field_runtime_Map;
	jule::Ptr<_1e5cc5e21_Struct> _field_runtime_mapIterator;
	

};
inline jule::Bool _1c7edb1ed_specialCaseDefines_eq(_1c7edb1ed_specialCaseDefines *_self_, _1c7edb1ed_specialCaseDefines _other_);


struct _1c7edbbe3_liveTable {
	jule::Slice<jule::Ptr<_1e5da0bcc_Var>> _field_vars;
	jule::Slice<jule::Ptr<_1e5ce3416_FnIns>> _field_fns;
	jule::Slice<jule::Ptr<_1e5cc8c7b_StructIns>> _field_structs;
	jule::Slice<jule::Ptr<_1e5d03db6_Trait>> _field_traits;
	

};
struct _1c7edc199_ObjectDeadCode {
	_1c7edbbe3_liveTable _field_live;
	jule::Ptr<_1e6a03ab5_IR> _field_ir;
	_1c7edb1ed_specialCaseDefines _field_scd;
	

};
struct _1c7ee12be_scopeDeadCode {
	jule::Ptr<_1c7ee12be_scopeDeadCode> _field_parent;
	jule::Ptr<_1e5d384d3_Scope> _field_s;
	jule::I64 _field_i;
	jule::Ptr<jule::Slice<jule::Ptr<_1e5d3b030_Label>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1e5d3b690_GotoSt>>> _field_gotos;
	jule::Bool _field_except;
	

};
inline jule::Bool _1c7ee12be_scopeDeadCode_eq(_1c7ee12be_scopeDeadCode *_self_, _1c7ee12be_scopeDeadCode _other_);


struct _1c7ee5966_exprDeadCode {
	jule::Ptr<_1c7ee12be_scopeDeadCode> _field_s;
	

};
inline jule::Bool _1c7ee5966_exprDeadCode_eq(_1c7ee5966_exprDeadCode *_self_, _1c7ee5966_exprDeadCode _other_);


struct _1e6036a22_ExceptionalForwardingExprModel {
	jule::Ptr<_1e5cd4d31_FnCallExprModel> _field_Expr;
	

};
inline jule::Bool _1e6036a22_ExceptionalForwardingExprModel_eq(_1e6036a22_ExceptionalForwardingExprModel *_self_, _1e6036a22_ExceptionalForwardingExprModel _other_);


struct _1e6036da7_SwapExprModel {
	jule::Ptr<_1e5e08c13_Data> _field_Left;
	jule::Ptr<_1e5e08c13_Data> _field_Right;
	

};
inline jule::Bool _1e6036da7_SwapExprModel_eq(_1e6036da7_SwapExprModel *_self_, _1e6036da7_SwapExprModel _other_);


struct _1e6037281_EmptyCompareExprModel {
	jule::Any _field_Expr;
	jule::Bool _field_Neg;
	

};
inline jule::Bool _1e6037281_EmptyCompareExprModel_eq(_1e6037281_EmptyCompareExprModel *_self_, _1e6037281_EmptyCompareExprModel _other_);


struct _1e6037605_RefExprModel {
	jule::Ptr<_1e5da0bcc_Var> _field_Var;
	

};
inline jule::Bool _1e6037605_RefExprModel_eq(_1e6037605_RefExprModel *_self_, _1e6037605_RefExprModel _other_);


struct _1e6037a78_StrCompExprModel {
	jule::Any _field_Left;
	jule::Ptr<_1e21a449b_Const> _field_Right;
	jule::Bool _field_NotEq;
	

};
inline jule::Bool _1e6037a78_StrCompExprModel_eq(_1e6037a78_StrCompExprModel *_self_, _1e6037a78_StrCompExprModel _other_);


struct _1e603810b_MutSlicingExprModel {
	jule::Ptr<_1e5c8eacc_Token> _field_Token;
	jule::Any _field_Expr;
	jule::Any _field_Left;
	jule::Any _field_Right;
	

};
inline jule::Bool _1e603810b_MutSlicingExprModel_eq(_1e603810b_MutSlicingExprModel *_self_, _1e603810b_MutSlicingExprModel _other_);


struct _1e6038408_UnsafeBinaryExprModel {
	jule::Ptr<_1e5cd2d51_BinaryExprModel> _field_Node;
	

};
inline jule::Bool _1e6038408_UnsafeBinaryExprModel_eq(_1e6038408_UnsafeBinaryExprModel *_self_, _1e6038408_UnsafeBinaryExprModel _other_);


struct _1e603878d_UnsafeIndexingExprModel {
	jule::Ptr<_1e5cd56b1_IndexingExprModel> _field_Node;
	

};
inline jule::Bool _1e603878d_UnsafeIndexingExprModel_eq(_1e603878d_UnsafeIndexingExprModel *_self_, _1e603878d_UnsafeIndexingExprModel _other_);


struct _1e6038b67_PushToSliceExprModel {
	jule::Any _field_Dest;
	jule::Ptr<_1e5cd520a_SliceExprModel> _field_Elems;
	

};
inline jule::Bool _1e6038b67_PushToSliceExprModel_eq(_1e6038b67_PushToSliceExprModel *_self_, _1e6038b67_PushToSliceExprModel _other_);


struct _1e6039041_AppendToSliceExprModel {
	jule::Any _field_Dest;
	jule::Any _field_Slice;
	

};
inline jule::Bool _1e6039041_AppendToSliceExprModel_eq(_1e6039041_AppendToSliceExprModel *_self_, _1e6039041_AppendToSliceExprModel _other_);


struct _1e603941a_StrRuneIter {
	jule::Ptr<_1e5e08c13_Data> _field_Expr;
	jule::Ptr<_1e5d3a31a_RangeIter> _field_Base;
	

};
inline jule::Bool _1e603941a_StrRuneIter_eq(_1e603941a_StrRuneIter *_self_, _1e603941a_StrRuneIter _other_);


struct _1e6039717_UnsafeDerefExprModel {
	jule::Ptr<_1e5cd322a_UnaryExprModel> _field_Base;
	

};
inline jule::Bool _1e6039717_UnsafeDerefExprModel_eq(_1e6039717_UnsafeDerefExprModel *_self_, _1e6039717_UnsafeDerefExprModel _other_);


struct _1e6039a14_UnsafeCastingExprModel {
	jule::Ptr<_1e5cd447e_CastingExprModel> _field_Base;
	

};
inline jule::Bool _1e6039a14_UnsafeCastingExprModel_eq(_1e6039a14_UnsafeCastingExprModel *_self_, _1e6039a14_UnsafeCastingExprModel _other_);


struct _1e603a6e6_nilVar {
	jule::Uintptr _field_var;
	jule::Bool _field_safe;
	

};
inline jule::Bool _1e603a6e6_nilVar_eq(_1e603a6e6_nilVar *_self_, _1e603a6e6_nilVar _other_);


struct _1e603aa37_nils {
	jule::Slice<_1e603a6e6_nilVar> _field_vars;
	

};
struct _1e6a10709_scopeOptimizer {
	jule::Ptr<_1e6a10709_scopeOptimizer> _field_parent;
	jule::I64 _field_i;
	jule::Ptr<_1e5d384d3_Scope> _field_scope;
	jule::Ptr<_1e6a2051b_data> _field_data;
	

};
inline jule::Bool _1e6a10709_scopeOptimizer_eq(_1e6a10709_scopeOptimizer *_self_, _1e6a10709_scopeOptimizer _other_);


struct _1e6a1715b_exprOptimizer {
	jule::Ptr<jule::Any> _field_model;
	jule::Ptr<_1e6a2051b_data> _field_data;
	jule::Ptr<_1e6a07a0e_ExprInspector> _field_inspector;
	

};
inline jule::Bool _1e6a1715b_exprOptimizer_eq(_1e6a1715b_exprOptimizer *_self_, _1e6a1715b_exprOptimizer _other_);


struct _1e6a1c54b_dynamicVar {
	jule::Uintptr _field_var;
	jule::Ptr<_1e5e417ea_TypeKind> _field_kind;
	

};
inline jule::Bool _1e6a1c54b_dynamicVar_eq(_1e6a1c54b_dynamicVar *_self_, _1e6a1c54b_dynamicVar _other_);


struct _1e6a1c88c_dynamic {
	jule::Slice<_1e6a1c54b_dynamicVar> _field_vars;
	

};
struct _1e6a2051b_data {
	jule::Ptr<_1e6a21e13_boundary> _field_boundary;
	jule::Ptr<_1e603aa37_nils> _field_nils;
	jule::Ptr<_1e6a1c88c_dynamic> _field_dynamic;
	

};
inline jule::Bool _1e6a2051b_data_eq(_1e6a2051b_data *_self_, _1e6a2051b_data _other_);


struct _1e6a21ac2_boundaryVar {
	jule::Uintptr _field_var;
	jule::Slice<jule::Any> _field_maxSize;
	

};
struct _1e6a21e13_boundary {
	jule::Slice<_1e6a21ac2_boundaryVar> _field_vars;
	

};
struct _1c7ee6b54_Optimizer {
	jule::Ptr<_1e6a03ab5_IR> _field_ir;
	

};
inline jule::Bool _1c7ee6b54_Optimizer_eq(_1c7ee6b54_Optimizer *_self_, _1c7ee6b54_Optimizer _other_);


struct _1c801d1a8_AnsiEscape {
	

};
inline jule::Bool _1c801d1a8_AnsiEscape_eq(_1c801d1a8_AnsiEscape *_self_, _1c801d1a8_AnsiEscape _other_);


struct _1c801e75e_Logger {
	

};
inline jule::Bool _1c801e75e_Logger_eq(_1c801e75e_Logger *_self_, _1c801e75e_Logger _other_);


struct _1c8a6b6d9_AbsTime {
	jule::U64 _field_Day;
	jule::U64 _field_WeekDay;
	jule::U64 _field_YearDay;
	jule::U64 _field_Month;
	jule::U64 _field_Year;
	jule::U64 _field_Second;
	jule::U64 _field_Minute;
	jule::U64 _field_Hour;
	

};
inline jule::Bool _1c8a6b6d9_AbsTime_eq(_1c8a6b6d9_AbsTime *_self_, _1c8a6b6d9_AbsTime _other_);


struct _1c8a6bdb0_Time {
	jule::U64 _field_sec;
	

};
inline jule::Bool _1c8a6bdb0_Time_eq(_1c8a6bdb0_Time *_self_, _1c8a6bdb0_Time _other_);


struct _1c899847e_scopeCoder {
	jule::Ptr<_1c8a7d92c_ObjectCoder> _field_oc;
	

};
inline jule::Bool _1c899847e_scopeCoder_eq(_1c899847e_scopeCoder *_self_, _1c899847e_scopeCoder _other_);


struct _1c89a4c60_exprCoder {
	jule::Ptr<_1c8a7d92c_ObjectCoder> _field_oc;
	jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_1e5da0bcc_Var>>> _field_varPrefixes;
	

};
struct _1c89b7514_TestCoder {
	jule::Ptr<_1e5cc8c7b_StructIns> _field_t;
	jule::Ptr<_1e5ce0358_Fn> _field_tmReset;
	jule::Ptr<_1e5ce0358_Fn> _field_tmFailed;
	jule::Ptr<_1e5ce0358_Fn> _field_tmSkipped;
	jule::Ptr<_1c8a7d92c_ObjectCoder> _field_oc;
	

};
inline jule::Bool _1c89b7514_TestCoder_eq(_1c89b7514_TestCoder *_self_, _1c89b7514_TestCoder _other_);


struct _1c89ba490_identCoder {
	

};
inline jule::Bool _1c89ba490_identCoder_eq(_1c89ba490_identCoder *_self_, _1c89ba490_identCoder _other_);


struct _1c8a767c1_SerializationInfo {
	jule::Str _field_Compiler;
	jule::Str _field_CompilerCommand;
	

};
inline jule::Bool _1c8a767c1_SerializationInfo_eq(_1c8a767c1_SerializationInfo *_self_, _1c8a767c1_SerializationInfo _other_);


struct _1c8a76bde_traitCast {
	jule::Ptr<_1e5d03db6_Trait> _field_t1;
	jule::Ptr<_1e5d03db6_Trait> _field_t2;
	

};
inline jule::Bool _1c8a76bde_traitCast_eq(_1c8a76bde_traitCast *_self_, _1c8a76bde_traitCast _other_);


struct _1c8a770b8_anonHash {
	jule::Ptr<_1e5cd5b67_AnonFnExprModel> _field_expr;
	jule::Str _field_ident;
	

};
inline jule::Bool _1c8a770b8_anonHash_eq(_1c8a770b8_anonHash *_self_, _1c8a770b8_anonHash _other_);


struct _1c8a7c299_metadata {
	jule::Bool _field_concurrent;
	

};
inline jule::Bool _1c8a7c299_metadata_eq(_1c8a7c299_metadata *_self_, _1c8a7c299_metadata _other_);


struct _1c8a7d92c_ObjectCoder {
	_224497295_StrBuilder _field_Buf;
	_224497295_StrBuilder _field_resultDecls;
	_224497295_StrBuilder _field_anyObj;
	_224497295_StrBuilder _field_anonObj;
	_224497295_StrBuilder _field_deallocObj;
	_224497295_StrBuilder _field_coSpawnObj;
	jule::Ptr<_1e6a03ab5_IR> _field_ir;
	_1c8a767c1_SerializationInfo _field_info;
	jule::Slice<jule::Ptr<_1c8a770b8_anonHash>> _field_anons;
	jule::Slice<jule::Ptr<_1e5e417ea_TypeKind>> _field_deallocated;
	jule::Slice<jule::U8> _field_indentBuffer;
	jule::Ptr<_1cc266177__Map> _field_resultMap;
	jule::Slice<jule::Ptr<_1e5e417ea_TypeKind>> _field_anyTypeMap;
	jule::Slice<_1c8a76bde_traitCast> _field_traitCastMap;
	jule::Slice<jule::Ptr<_1e5ce3416_FnIns>> _field_coSpawnMap;
	jule::Ptr<_1cc2b1b84__Map> _field_traitMetMap;
	jule::Ptr<_1c89a4c60_exprCoder> _field_ec;
	jule::Ptr<_1c899847e_scopeCoder> _field_sc;
	jule::Ptr<_1c8a8d95e_typeCoder> _field_tc;
	jule::I64 _field_headPos;
	jule::I64 _field_declPos;
	jule::I64 _field_wrapPos;
	_1c8a7c299_metadata _field_meta;
	

};
struct _1c8a8cd26_customType {
	jule::Str _field_kind;
	

};
inline jule::Bool _1c8a8cd26_customType_eq(_1c8a8cd26_customType *_self_, _1c8a8cd26_customType _other_);


struct _1c8a8d95e_typeCoder {
	jule::Ptr<_1c8a7d92c_ObjectCoder> _field_oc;
	jule::Ptr<_1c8a96549_resultCoder> _field_rc;
	

};
inline jule::Bool _1c8a8d95e_typeCoder_eq(_1c8a8d95e_typeCoder *_self_, _1c8a8d95e_typeCoder _other_);


struct _1c8a96549_resultCoder {
	jule::Ptr<_1c8a8d95e_typeCoder> _field_tc;
	

};
inline jule::Bool _1c8a96549_resultCoder_eq(_1c8a96549_resultCoder *_self_, _1c8a96549_resultCoder _other_);


struct _1cc970584_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::I64 _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::I64> _field_data;
	

};
inline jule::Bool _1cc970584_Flag_eq(_1cc970584_Flag *_self_, _1cc970584_Flag _other_);

struct _1cc973da1_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::U64 _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::U64> _field_data;
	

};
inline jule::Bool _1cc973da1_Flag_eq(_1cc973da1_Flag *_self_, _1cc973da1_Flag _other_);

struct _1cc9775ad_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::F64 _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::F64> _field_data;
	

};
inline jule::Bool _1cc9775ad_Flag_eq(_1cc9775ad_Flag *_self_, _1cc9775ad_Flag _other_);

struct _1cc97ad0e_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::Bool _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Bool> _field_data;
	

};
inline jule::Bool _1cc97ad0e_Flag_eq(_1cc97ad0e_Flag *_self_, _1cc97ad0e_Flag _other_);

struct _1cc97e51b_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::Str _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Str> _field_data;
	

};
inline jule::Bool _1cc97e51b_Flag_eq(_1cc97e51b_Flag *_self_, _1cc97e51b_Flag _other_);


struct _1c8b12692_FlagSet {
	jule::Slice<jule::Trait> _field_flags;
	

};
struct _1c8b15156_argParser {
	_1c8b12692_FlagSet _field_set;
	jule::Slice<jule::Str> _field_args;
	jule::Slice<jule::Str> _field_content;
	jule::I64 _field_i;
	

};
struct _1e6a20021_dataCheckpoint {
	_1e6a21e13_boundary _field_boundary;
	_1e603aa37_nils _field_nils;
	_1e6a1c88c_dynamic _field_dynamic;
	

};
struct _22584814a_Cmd {
	_225861262_cmdAttrs _field_attrs;
	jule::Str _field_path;
	jule::Slice<jule::Str> _field_Args;
	jule::Slice<jule::Str> _field_Env;
	

};
struct _1e6a03ab5_IR {
	jule::Str _field_Root;
	jule::Slice<jule::Str> _field_Passes;
	jule::Ptr<_1e5d5e21d_Package> _field_Main;
	jule::Ptr<_1e5d5b2e7_ImportInfo> _field_Runtime;
	jule::Slice<jule::Ptr<_1e5d5b2e7_ImportInfo>> _field_Used;
	_1e6a0e032_OrderedDefines _field_Ordered;
	

};
struct __jule_tuple_pstr__jule_tuple_pbool {
	jule::Str* __jule_result_arg0;
	jule::Bool* __jule_result_arg1;
};
struct __jule_tuple_px_1e5ce3416_FnIns__jule_tuple_psuintptr {
	jule::Ptr<_1e5ce3416_FnIns>* __jule_result_arg0;
	jule::Slice<jule::Uintptr>* __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_bool {
	jule::Bool __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1e5e08c13_Data__jule_tuple_x_1e5e08c13_Data {
	jule::Ptr<_1e5e08c13_Data> __jule_result_arg0;
	jule::Ptr<_1e5e08c13_Data> __jule_result_arg1;
};
struct __jule_tuple_x_1e5e08c13_Data__jule_tuple_bool {
	jule::Ptr<_1e5e08c13_Data> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1e5ca93bb_Expr__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1e5ca93bb_Expr>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1e5cbc05a_Case__jule_tuple_bool {
	jule::Ptr<_1e5cbc05a_Case> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1e5cbc05a_Case__jule_tuple_x_1e5cbadb1_Else {
	jule::Slice<jule::Ptr<_1e5cbc05a_Case>> __jule_result_arg0;
	jule::Ptr<_1e5cbadb1_Else> __jule_result_arg1;
};
struct __jule_tuple__1e5cb46e5_StmtData__jule_tuple_bool {
	jule::Any __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1e5cb3a35_AssignSt__jule_tuple_bool {
	jule::Ptr<_1e5cb3a35_AssignSt> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1e5ca5087_TypeDecl__jule_tuple_bool {
	jule::Ptr<_1e5ca5087_TypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1e5ca7e7a_RetTypeDecl__jule_tuple_bool {
	jule::Ptr<_1e5ca7e7a_RetTypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1e5ca3173_AST__jule_tuple_s_22578b38a_Log {
	jule::Slice<jule::Ptr<_1e5ca3173_AST>> __jule_result_arg0;
	jule::Slice<_22578b38a_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_s_22578b38a_Log {
	jule::Bool __jule_result_arg0;
	jule::Slice<_22578b38a_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1e5ce3416_FnIns__jule_tuple_bool {
	jule::Ptr<_1e5ce3416_FnIns> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_i64__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1e6a03ab5_IR__jule_tuple_s_22578b38a_Log {
	jule::Ptr<_1e6a03ab5_IR> __jule_result_arg0;
	jule::Slice<_22578b38a_Log> __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_i32 {
	jule::I32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_int {
	jule::I32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_u64 {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_i8 {
	jule::U64 __jule_result_arg0;
	jule::I8 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_f64 {
	jule::F64 __jule_result_arg0;
	jule::F64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple__1e1c55888_ConvError {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_bool {
	jule::F32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
	jule::Bool __jule_result_arg3;
	jule::Bool __jule_result_arg4;
	jule::I64 __jule_result_arg5;
	jule::Bool __jule_result_arg6;
};
struct __jule_tuple_f64__jule_tuple__1e1c55888_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_int__jule_tuple__1e1c55888_ConvError {
	jule::F32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple__1e1c55888_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
	jule::U64 __jule_result_arg2;
	jule::I64 __jule_result_arg3;
};
struct __jule_tuple_u32__jule_tuple_int__jule_tuple_bool {
	jule::U32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u32__jule_tuple_u32 {
	jule::U32 __jule_result_arg0;
	jule::U32 __jule_result_arg1;
};
struct __jule_tuple_su8__jule_tuple_str {
	jule::Slice<jule::U8> __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple_u8__jule_tuple_bool {
	jule::U8 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1e5e03548_SymbolTable__jule_tuple_s_22578b38a_Log {
	jule::Ptr<_1e5e03548_SymbolTable> __jule_result_arg0;
	jule::Slice<_22578b38a_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1e5d5e21d_Package__jule_tuple_s_22578b38a_Log {
	jule::Ptr<_1e5d5e21d_Package> __jule_result_arg0;
	jule::Slice<_22578b38a_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1e5ca3173_AST__jule_tuple_s_22578b38a_Log {
	jule::Ptr<_1e5ca3173_AST> __jule_result_arg0;
	jule::Slice<_22578b38a_Log> __jule_result_arg1;
};
struct __jule_tuple_int__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1e5c8eacc_Token__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1e5c8eacc_Token>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1e5c8eacc_Token__jule_tuple_sx_1e5c8eacc_Token {
	jule::Slice<jule::Ptr<_1e5c8eacc_Token>> __jule_result_arg0;
	jule::Slice<jule::Ptr<_1e5c8eacc_Token>> __jule_result_arg1;
};
struct __jule_tuple_sx_1e5c8eacc_Token__jule_tuple_int {
	jule::Slice<jule::Ptr<_1e5c8eacc_Token>> __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_ssx_1e5c8eacc_Token__jule_tuple_s_22578b38a_Log {
	jule::Slice<jule::Slice<jule::Ptr<_1e5c8eacc_Token>>> __jule_result_arg0;
	jule::Slice<_22578b38a_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_u64 {
	jule::Bool __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
inline jule::U32 static__22422397d_DecodeU32(jule::Slice<jule::U8> _4522_b);
inline jule::U64 static__2242243a7_DecodeU64(jule::Slice<jule::U8> _7522_b);
inline jule::Ptr<_1cc266177__Map> static__1cc26673d_make(void);
inline void _1cc266892_initData(_1cc266177__Map* _self_, jule::I64 _13524_cap);
inline jule::U64 _1cc2669e6_hash(_1cc266177__Map* _self_, jule::Str _14616_k);
inline void _1cc266b4a_rehash(_1cc266177__Map* _self_, jule::I64 _15122_n);
inline jule::I64 _1cc266c9e_nextSize(_1cc266177__Map* _self_);
inline void _1cc266e03_lookup(jule::Ptr<_1cc266177__Map> _self_, jule::Str _19134_k, jule::Bool* _19146_v, jule::Bool* _19159_ok);
inline jule::Bool _1cc267057_get(jule::Ptr<_1cc266177__Map> _self_, jule::Str _23024_k);
inline jule::Bool* _1cc2671ab_set(_1cc266177__Map* _self_, jule::Str _24123_k);
inline jule::Bool _1cc267310_del(jule::Ptr<_1cc266177__Map> _self_, jule::Str _27624_k);
inline void _1cc267464_clear(jule::Ptr<_1cc266177__Map> _self_);
inline jule::I64 _1cc2675b8_len(jule::Ptr<_1cc266177__Map> _self_);
inline jule::I64 _1cc26771c_cap(_1cc266177__Map* _self_);
inline _1cc272903_mapIterator _1cc267871_iterator(jule::Ptr<_1cc266177__Map> _self_);
inline jule::Ptr<_1cc2b1b84__Map> static__1cc2b21a1_make(void);
inline void _1cc2b2305_initData(_1cc2b1b84__Map* _self_, jule::I64 _13524_cap);
inline jule::U64 _1cc2b2459_hash(_1cc2b1b84__Map* _self_, jule::Ptr<_1e5ce3416_FnIns> _14616_k);
inline void _1cc2b25ad_rehash(_1cc2b1b84__Map* _self_, jule::I64 _15122_n);
inline jule::I64 _1cc2b2712_nextSize(_1cc2b1b84__Map* _self_);
inline void _1cc2b2866_lookup(jule::Ptr<_1cc2b1b84__Map> _self_, jule::Ptr<_1e5ce3416_FnIns> _19134_k, jule::Slice<jule::Uintptr>* _19146_v, jule::Bool* _19159_ok);
inline jule::Slice<jule::Uintptr> _1cc2b29ba_get(jule::Ptr<_1cc2b1b84__Map> _self_, jule::Ptr<_1e5ce3416_FnIns> _23024_k);
inline jule::Slice<jule::Uintptr>* _1cc2b2b1e_set(_1cc2b1b84__Map* _self_, jule::Ptr<_1e5ce3416_FnIns> _24123_k);
inline jule::Bool _1cc2b2c73_del(jule::Ptr<_1cc2b1b84__Map> _self_, jule::Ptr<_1e5ce3416_FnIns> _27624_k);
inline void _1cc2b2dc7_clear(jule::Ptr<_1cc2b1b84__Map> _self_);
inline jule::I64 _1cc2b302b_len(jule::Ptr<_1cc2b1b84__Map> _self_);
inline jule::I64 _1cc2b3180_cap(_1cc2b1b84__Map* _self_);
inline _1cc2bb265_mapIterator _1cc2b32d4_iterator(jule::Ptr<_1cc2b1b84__Map> _self_);
inline void _1cc272e86_init(_1cc272903_mapIterator* _self_);
inline __jule_tuple_pstr__jule_tuple_pbool _1cc2730da_next(_1cc272903_mapIterator* _self_);
inline void _1cc2bb7e8_init(_1cc2bb265_mapIterator* _self_);
inline __jule_tuple_px_1e5ce3416_FnIns__jule_tuple_psuintptr _1cc2bb94c_next(_1cc2bb265_mapIterator* _self_);
inline _224497295_StrBuilder static__2244a0b83_New(jule::I64 _1516_cap);
inline void _2244a0cd7_Write(_224497295_StrBuilder* _self_, jule::Slice<jule::U8> _2521_b);
inline void _2244a1090_WriteStr(_224497295_StrBuilder* _self_, jule::Str _3024_s);
inline void _2244a1348_WriteByte(_224497295_StrBuilder* _self_, jule::U8 _3525_b);
inline jule::Str _2244a1887_Str(_224497295_StrBuilder* _self_);
inline void _2244a1a85_Clear(_224497295_StrBuilder* _self_);
inline jule::I64 _2244a1d1b_Len(_224497295_StrBuilder* _self_);
inline jule::Slice<jule::U8> _2244a2338_Buf(_224497295_StrBuilder* _self_);
inline void _2244a25e1_SetBuf(_224497295_StrBuilder* _self_, jule::Slice<jule::U8> _7733_buf);
inline jule::U8 _2256e19e9_index(_2256e1565_lazyBuff* _self_, jule::I64 _5521_i);
inline void _2256e1ca2_append(_2256e1565_lazyBuff* _self_, jule::U8 _6222_c);
inline jule::Str _2256e2038_string(_2256e1565_lazyBuff* _self_);
inline jule::Exceptional<jule::Slice<jule::Ptr<_2243de341_DirEntry>>> static__2256e42d2_Read(jule::Str _1517_path);
inline jule::VoidExceptional static__2256e4513_Create(jule::Str _3919_path);
inline jule::VoidExceptional static__2256e4744_Remove(jule::Str _5319_path);
inline jule::Ptr<_2243e07c6_File> static__2243e0c27_New(jule::Uintptr _4516_handle);
inline jule::Exceptional<jule::Ptr<_2243e07c6_File>> static__2243e0ee1_Create(jule::Str _5519_path);
inline jule::Exceptional<jule::Slice<jule::U8>> static__2243e12aa_Read(jule::Str _6717_path);
inline jule::VoidExceptional static__2243e1651_Write(jule::Str _10518_path, jule::Slice<jule::U8> _10529_data, jule::I64 _10543_perm);
inline jule::VoidExceptional _2243e1d8d_Close(_2243e07c6_File* _self_);
inline jule::Exceptional<jule::Ptr<_2243e07c6_File>> static__2243e4324_Open(jule::Str _2217_path, jule::I64 _2228_flag, jule::I64 _2241_mode);
inline jule::VoidExceptional static__2243e4555_Remove(jule::Str _3519_path);
inline jule::Exceptional<jule::I64> _2243e49d9_Write(_2243e07c6_File* _self_, jule::Slice<jule::U8> _5021_buf);
inline jule::Exceptional<jule::I64> _2243e4d2a_Read(_2243e07c6_File* _self_, jule::Slice<jule::U8> _8024_buf);
inline jule::Bool _2243e2d17_IsDir(_2243e290a_Status* _self_);
inline jule::Bool _2243e309d_IsReg(_2243e290a_Status* _self_);
inline jule::U64 _2243e3334_Size(_2243e290a_Status* _self_);
inline jule::Exceptional<jule::Ptr<_2243e290a_Status>> static__2256e5107_Of(jule::Str _1215_path);
inline jule::Bool _1e2188282_set(_1e219181d_decimal* _self_, jule::Slice<jule::U8> _23819_s);
inline __jule_tuple_u64__jule_tuple_bool _1e21885c3_floatBits(_1e219181d_decimal* _self_, _1e217ce36_floatInfo* _33226_flt);
inline void _1e2191c08_assign(_1e219181d_decimal* _self_, jule::U64 _15126_v);
inline void _1e2191eb1_shift(_1e219181d_decimal* _self_, jule::I64 _17625_k);
inline void _1e2192269_roundDown(_1e219181d_decimal* _self_, jule::I64 _19625_nd);
inline void _1e2192522_roundUp(_1e219181d_decimal* _self_, jule::I64 _20523_nd);
inline void _1e21927ca_round(_1e219181d_decimal* _self_, jule::I64 _23221_nd);
inline jule::U64 _1e2192a61_roundedInteger(_1e219181d_decimal* _self_);
inline jule::Ptr<_1e21a449b_Const> static__1e21a491e_NewI64(jule::I64 _1619_x);
inline jule::Ptr<_1e21a449b_Const> static__1e21a4bd8_NewU64(jule::U64 _1919_x);
inline jule::Ptr<_1e21a449b_Const> static__1e21a4ea2_NewBool(jule::Bool _2220_x);
inline jule::Ptr<_1e21a449b_Const> static__1e21a526b_NewStr(jule::Str _2519_x);
inline jule::Ptr<_1e21a449b_Const> static__1e21a5535_NewF64(jule::F64 _2819_x);
inline jule::Ptr<_1e21a449b_Const> static__1e21a5744_NewNil(void);
inline jule::I64 _1e21a5da4_ReadI64(_1e21a449b_Const* _self_);
inline jule::U64 _1e21a613a_ReadU64(_1e21a449b_Const* _self_);
inline jule::Bool _1e21a63c1_ReadBool(_1e21a449b_Const* _self_);
inline jule::Str _1e21a6657_ReadStr(_1e21a449b_Const* _self_);
inline jule::F64 _1e21a68dd_ReadF64(_1e21a449b_Const* _self_);
inline jule::I64 _1e21a6b74_AsI64(_1e21a449b_Const* _self_);
inline jule::U64 _1e21a6e0a_AsU64(_1e21a449b_Const* _self_);
inline jule::F64 _1e21a7191_AsF64(_1e21a449b_Const* _self_);
inline void _1e21a7449_SetI64(_1e21a449b_Const* _self_, jule::I64 _13822_x);
inline void _1e21a7702_SetU64(_1e21a449b_Const* _self_, jule::U64 _14122_x);
inline void _1e21a79aa_SetBool(_1e21a449b_Const* _self_, jule::Bool _14423_x);
inline void _1e21a7c63_SetStr(_1e21a449b_Const* _self_, jule::Str _14722_x);
inline void _1e21a801b_SetF64(_1e21a449b_Const* _self_, jule::F64 _15022_x);
inline jule::Bool _1e21a84a0_IsI64(_1e21a449b_Const* _self_);
inline jule::Bool _1e21a8736_IsU64(_1e21a449b_Const* _self_);
inline jule::Bool _1e21a89bc_IsBool(_1e21a449b_Const* _self_);
inline jule::Bool _1e21a8c53_IsStr(_1e21a449b_Const* _self_);
inline jule::Bool _1e21a8ed9_IsF64(_1e21a449b_Const* _self_);
inline jule::Bool _1e21a9270_IsNil(_1e21a449b_Const* _self_);
inline jule::Bool _1e21a9902_And(_1e21a449b_Const* _self_, _1e21a449b_Const _23815_x);
inline jule::Bool _1e21a9c43_Or(_1e21a449b_Const* _self_, _1e21a449b_Const _24914_x);
inline jule::Bool _1e21ab1d9_Add(_1e21a449b_Const* _self_, _1e21a449b_Const _37719_x);
inline jule::Bool _1e21ab52a_Sub(_1e21a449b_Const* _self_, _1e21a449b_Const _40619_x);
inline jule::Bool _1e21ab86b_Mul(_1e21a449b_Const* _self_, _1e21a449b_Const _43019_x);
inline jule::Bool _1e21abbac_Div(_1e21a449b_Const* _self_, _1e21a449b_Const _45819_x);
inline jule::Bool _1e21abeed_Mod(_1e21a449b_Const* _self_, _1e21a449b_Const _48719_x);
inline jule::Bool _1e21ac33e_BitwiseAnd(_1e21a449b_Const* _self_, _1e21a449b_Const _50926_x);
inline jule::Bool _1e21ac680_BitwiseOr(_1e21a449b_Const* _self_, _1e21a449b_Const _52325_x);
inline jule::Bool _1e21ac9c1_Xor(_1e21a449b_Const* _self_, _1e21a449b_Const _53719_x);
inline jule::Bool _1e21acd12_Lshift(_1e21a449b_Const* _self_, _1e21a449b_Const _55122_x);
inline jule::Bool _1e21ad153_Rshift(_1e21a449b_Const* _self_, _1e21a449b_Const _57122_x);
inline jule::U8 _1e5c8ee84_Prec(_1e5c8eacc_Token* _self_);
inline void _1e5c957b4_Fill(_1e5c95363_File* _self_, jule::Slice<jule::U8> _1724_data);
inline jule::Str _1e5c95a4a_Dir(_1e5c95363_File* _self_);
inline jule::Str _1e5c95cd1_Name(_1e5c95363_File* _self_);
inline jule::Str _1e5c963a8_GetRow(_1e5c95363_File* _self_, jule::I64 _3818_row);
inline void _1e5c9da64_pushErr(_1e5c9d49d_lex* _self_, jule::Str _44723_fmt, jule::Slice<jule::Any> _44736_args);
inline void _1e5c9e0c5_lex(_1e5c9d49d_lex* _self_);
inline jule::Str _1e5c9e416_id(_1e5c9d49d_lex* _self_, jule::Slice<jule::U8>* _47119_ln);
inline jule::Slice<jule::U8> _1e5c9e69c_resume(_1e5c9d49d_lex* _self_);
inline void _1e5c9e955_lexLineComment(_1e5c9d49d_lex* _self_, jule::Ptr<_1e5c8eacc_Token>* _52135_token);
inline void _1e5c9ec0d_lexRangeComment(_1e5c9d49d_lex* _self_, jule::Ptr<_1e5c8eacc_Token>* _53636_token);
inline jule::Str _1e5ca004e_num(_1e5c9d49d_lex* _self_, jule::Slice<jule::U8>* _56420_txt);
inline jule::Str _1e5ca0390_escapeSeq(_1e5c9d49d_lex* _self_, jule::Slice<jule::U8>* _58626_txt);
inline jule::Str _1e5ca078b_getRune(_1e5c9d49d_lex* _self_, jule::Slice<jule::U8>* _61624_txt, jule::Bool _61637_raw);
inline jule::Str _1e5ca0acc_lexRune(_1e5c9d49d_lex* _self_, jule::Slice<jule::U8>* _62524_txt);
inline jule::Str _1e5ca0d63_lexStr(_1e5c9d49d_lex* _self_);
inline void _1e5ca12e7_newLine(_1e5c9d49d_lex* _self_);
inline jule::Bool _1e5ca1858_isOp(_1e5c9d49d_lex* _self_, jule::Slice<jule::U8>* _70721_txt, jule::Str _70734_kind, jule::U64 _70745_id, jule::Ptr<_1e5c8eacc_Token>* _70763_t);
inline jule::Bool _1e5ca1c54_lexBasicOps(_1e5c9d49d_lex* _self_, jule::Slice<jule::U8> _71727_txt, jule::Ptr<_1e5c8eacc_Token>* _71745_tok);
inline jule::Bool _1e5ca2150_lexId(_1e5c9d49d_lex* _self_, jule::Slice<jule::U8>* _72622_txt, jule::Ptr<_1e5c8eacc_Token>* _72640_t);
inline jule::Bool _1e5ca254b_lexNum(_1e5c9d49d_lex* _self_, jule::Slice<jule::U8>* _73623_txt, jule::Ptr<_1e5c8eacc_Token>* _73641_t);
inline jule::Ptr<_1e5c8eacc_Token> _1e5ca27d2_token(_1e5c9d49d_lex* _self_);
inline jule::Bool _1e5ca6e57_IsUnsafe(_1e5ca6ab1_PtrTypeDecl* _self_);
inline jule::Bool _1e5ca76e9_AutoSized(_1e5ca7353_ArrTypeDecl* _self_);
inline jule::Bool _1e5cad49c_Unhandled(_1e5cad0e5_FnCallExpr* _self_);
inline jule::Bool _1e5cad733_Ignored(_1e5cad0e5_FnCallExpr* _self_);
inline jule::Bool _1e5cb5b9c_IsSelf(_1e5cb57e5_ParamDecl* _self_);
inline jule::Bool _1e5cb70dd_IsAnon(_1e5cb6c47_FnDecl* _self_);
inline jule::Bool _1e5cb8de2_IsInf(_1e5cb8a4b_Iter* _self_);
inline jule::Bool _1e5cb971c_IsWhileNext(_1e5cb9376_WhileKind* _self_);
inline jule::Ptr<_1e5cc81cb_FieldIns> _1e5cc33d5_instance(jule::Ptr<_1e5cc2eea_Field> _self_);
inline jule::Ptr<_1e5cc8c7b_StructIns> _1e5cc63b6_instance(jule::Ptr<_1e5cc5e21_Struct> _self_);
inline jule::Ptr<_1e5cc8c7b_StructIns> _1e5cc66c4_appendInstance(_1e5cc5e21_Struct* _self_, jule::Ptr<_1e5cc8c7b_StructIns>* _13635_ins);
inline jule::Ptr<_1e5ce0358_Fn> _1e5cc6ac0_FindMethod(_1e5cc5e21_Struct* _self_, jule::Str _15426_ident, jule::Bool _15438_statically);
inline jule::Ptr<_1e5da0bcc_Var> _1e5cc6e11_FindStatic(_1e5cc5e21_Struct* _self_, jule::Str _16526_ident);
inline jule::Ptr<_1e5cc2eea_Field> _1e5cc7252_FindField(_1e5cc5e21_Struct* _self_, jule::Str _17625_ident);
inline jule::Bool _1e5cc7593_IsImplements(_1e5cc5e21_Struct* _self_, jule::Ptr<_1e5d03db6_Trait> _18624_t);
inline jule::Bool _1e5cc78d4_IsUses(_1e5cc5e21_Struct* _self_, jule::Ptr<_1e5cc5e21_Struct> _19618_s);
inline jule::Str _1e5cc9133_Str(_1e5cc8c7b_StructIns* _self_);
inline jule::Bool _1e5cc9474_Equal(jule::Ptr<_1e5cc8c7b_StructIns> _self_, jule::Ptr<_1e5e417ea_TypeKind> _25818_other);
inline jule::Bool _1e5cc992a_Same(_1e5cc8c7b_StructIns* _self_, jule::Ptr<_1e5cc8c7b_StructIns> _28616_s);
inline jule::Ptr<_1e5ce0358_Fn> _1e5cc9d26_FindMethod(_1e5cc8c7b_StructIns* _self_, jule::Str _30126_ident, jule::Bool _30138_statically);
inline jule::Ptr<_1e5cc81cb_FieldIns> _1e5cca167_FindField(_1e5cc8c7b_StructIns* _self_, jule::Str _31225_ident);
inline jule::Ptr<_1e5da0bcc_Var> _1e5cca4a8_FindStatic(_1e5cc8c7b_StructIns* _self_, jule::Str _32326_ident);
inline jule::Ptr<_1e5ce22b1_ParamIns> _1e5cddc4c_instance(jule::Ptr<_1e5cdd884_Param> _self_);
inline jule::Bool _1e5cdded3_IsSelf(_1e5cdd884_Param* _self_);
inline jule::Bool _1e5cde269_IsRef(_1e5cdd884_Param* _self_);
inline jule::Bool _1e5ce080e_IsVoid(_1e5ce0358_Fn* _self_);
inline jule::Bool _1e5ce0a95_IsMethod(_1e5ce0358_Fn* _self_);
inline jule::Bool _1e5ce0d2b_IsEntryPoint(_1e5ce0358_Fn* _self_);
inline jule::Bool _1e5ce10b2_IsInit(_1e5ce0358_Fn* _self_);
inline jule::Bool _1e5ce1348_IsAnon(_1e5ce0358_Fn* _self_);
inline jule::Bool _1e5ce15ce_AnyVar(_1e5ce0358_Fn* _self_);
inline jule::Ptr<_1e5ce3416_FnIns> _1e5ce1865_instanceForce(jule::Ptr<_1e5ce0358_Fn> _self_);
inline jule::Ptr<_1e5ce3416_FnIns> _1e5ce1aeb_instance(jule::Ptr<_1e5ce0358_Fn> _self_);
inline jule::Ptr<_1e5ce3416_FnIns> _1e5ce1e09_appendInstance(_1e5ce0358_Fn* _self_, jule::Ptr<_1e5ce3416_FnIns>* _13835_ins);
inline jule::Str _1e5ce2657_Str(_1e5ce22b1_ParamIns* _self_);
inline jule::Str _1e5ce378a_Str(_1e5ce3416_FnIns* _self_);
inline jule::Bool _1e5ce3acb_Equal(jule::Ptr<_1e5ce3416_FnIns> _self_, jule::Ptr<_1e5e417ea_TypeKind> _22918_other);
inline jule::Bool _1e5ce4071_EqualFn(jule::Ptr<_1e5ce3416_FnIns> _self_, jule::Ptr<_1e5ce3416_FnIns>* _24021_f);
inline jule::Bool _1e5ce43b2_equalTrait(jule::Ptr<_1e5ce3416_FnIns> _self_, jule::Ptr<_1e5ce3416_FnIns>* _29924_other);
inline jule::Slice<jule::Ptr<_1e5e417ea_TypeKind>> _1e5ce4648_Types(_1e5ce3416_FnIns* _self_);
inline jule::Bool _1e5ce48ce_IsBuiltin(_1e5ce3416_FnIns* _self_);
inline jule::Bool _1e5ce4b65_IsAnon(_1e5ce3416_FnIns* _self_);
inline jule::Bool _1e5ce4ea6_Same(_1e5ce3416_FnIns* _self_, jule::Ptr<_1e5ce3416_FnIns> _34216_f);
inline jule::Str _1e5ce52e7_GetKindStr(_1e5ce3416_FnIns* _self_, jule::Bool _35922_ident);
inline jule::Ptr<_1e5ce65a1_ReferenceStack> static__1e5ce68c0_new(void);
inline jule::I64 _1e5ce6cbb_Len(_1e5ce65a1_ReferenceStack* _self_);
inline jule::Any _1e5ce710c_At(_1e5ce65a1_ReferenceStack* _self_, jule::I64 _6818_i);
inline void _1e5ce73b5_Push(_1e5ce65a1_ReferenceStack* _self_, jule::Any _7324_ref);
inline jule::Bool _1caeb6ba9_Exist(_1e5ce65a1_ReferenceStack* _self_, jule::Ptr<_1e5ce3416_FnIns> _7820_t);
inline jule::Bool _1caecd60a_Exist(_1e5ce65a1_ReferenceStack* _self_, jule::Ptr<_1e5da0bcc_Var> _7820_t);
inline jule::Bool _1c8071a36_Exist(_1e5ce65a1_ReferenceStack* _self_, jule::Ptr<_1e5cc8c7b_StructIns> _7820_t);
inline jule::Bool _1cb767b96_Exist(_1e5ce65a1_ReferenceStack* _self_, jule::Ptr<_1e5d03db6_Trait> _7820_t);
inline void _1e5ced058_pushErr(_1e5cec563_symbolBuilder* _self_, jule::Ptr<_1e5c8eacc_Token>* _33224_token, jule::Str _33239_fmt, jule::Slice<jule::Any> _33252_args);
inline void _1e5ced7d9_pushSuggestion(_1e5cec563_symbolBuilder* _self_, jule::Str _34130_fmt, jule::Slice<jule::Any> _34143_args);
inline jule::Bool _1e5cedbd5_checkCppUseDeclPath(_1e5cec563_symbolBuilder* _self_, jule::Ptr<_1e5cbd18d_UseDecl>* _34536_decl, jule::Str* _34553_path);
inline jule::Ptr<_1e5d5b2e7_ImportInfo> _1e5cedee3_buildCppHeaderImport(_1e5cec563_symbolBuilder* _self_, jule::Ptr<_1e5cbd18d_UseDecl>* _36541_decl);
inline jule::Ptr<_1e5d5b2e7_ImportInfo> _1e5cee334_buildStdImport(_1e5cec563_symbolBuilder* _self_, jule::Ptr<_1e5cbd18d_UseDecl>* _39335_decl);
inline jule::Ptr<_1e5d5b2e7_ImportInfo> _1e5cee675_buildIdentImport(jule::Ptr<_1e5cec563_symbolBuilder> _self_, jule::Ptr<_1e5cbd18d_UseDecl>* _43338_decl);
inline jule::Ptr<_1e5d5b2e7_ImportInfo> _1e5cee9b6_buildImport(jule::Ptr<_1e5cec563_symbolBuilder> _self_, jule::Ptr<_1e5cbd18d_UseDecl>* _48733_decl);
inline jule::Ptr<_1e5d5b2e7_ImportInfo> _1e5ceed07_findUseDecl(_1e5cec563_symbolBuilder* _self_, jule::Ptr<_1e5d5b2e7_ImportInfo>* _49828_pkg);
inline jule::Bool _1e5d00148_checkDuplicateUseDecl(_1e5cec563_symbolBuilder* _self_, jule::Ptr<_1e5d5b2e7_ImportInfo>* _50642_pkg);
inline void _1e5d004ab_implImportSelections(_1e5cec563_symbolBuilder* _self_, jule::Ptr<_1e5d5b2e7_ImportInfo>* _51641_imp, jule::Ptr<_1e5cbd18d_UseDecl>* _51664_decl);
inline jule::Str _1e5d007ec_getAsLinkPath(jule::Ptr<_1e5cec563_symbolBuilder> _self_, jule::Str _53134_path);
inline void _1e5d00c1a_pushCycleError(jule::Ptr<_1e5cec563_symbolBuilder> _self_, jule::Ptr<_1e5cec563_symbolBuilder>* _54532_sb, jule::Str _54552_path, _224497295_StrBuilder* _54568_message);
inline void _1e5d01138_pushCrossCycleError(jule::Ptr<_1e5cec563_symbolBuilder> _self_, jule::Ptr<_1e5cec563_symbolBuilder>* _55837_target, jule::Ptr<_1e5d5b2e7_ImportInfo>* _55862_imp, jule::Ptr<_1e5c8eacc_Token>* _55881_errorToken);
inline jule::Bool _1e5d01534_checkImportCycles(jule::Ptr<_1e5cec563_symbolBuilder> _self_, jule::Ptr<_1e5d5b2e7_ImportInfo> _58134_imp, jule::Ptr<_1e5cbd18d_UseDecl>* _58153_decl);
inline void _1e5d01952_checkPackageAccessibility(_1e5cec563_symbolBuilder* _self_, jule::Ptr<_1e5cbd18d_UseDecl>* _61242_decl, jule::Str* _61259_mod, jule::Str* _61270_path);
inline jule::Bool _1e5d01d4d_importPackage(jule::Ptr<_1e5cec563_symbolBuilder> _self_, jule::Ptr<_1e5d5b2e7_ImportInfo>* _61835_imp, jule::Ptr<_1e5cbd18d_UseDecl>* _61858_decl);
inline jule::Ptr<_1e5d5b2e7_ImportInfo> _1e5d0218e_importUseDecl(jule::Ptr<_1e5cec563_symbolBuilder> _self_, jule::Ptr<_1e5cbd18d_UseDecl>* _66535_decl);
inline void _1e5d0238c_importUseDecls(jule::Ptr<_1e5cec563_symbolBuilder> _self_);
inline void _1e5d02645_appendNode(_1e5cec563_symbolBuilder* _self_, _1e5ca4086_Node* _69431_node);
inline void _1e5d02843_appendNodes(_1e5cec563_symbolBuilder* _self_);
inline void _1e5d02aeb_pushDirectivePass(_1e5cec563_symbolBuilder* _self_, jule::Ptr<_1e5ca44a4_Directive>* _73038_d);
inline void _1e5d02ce9_appendTopDirectives(_1e5cec563_symbolBuilder* _self_);
inline void _1e5d02ee7_build(jule::Ptr<_1e5cec563_symbolBuilder> _self_);
inline jule::Str _1e5d042b2_Str(_1e5d03db6_Trait* _self_);
inline jule::Bool _1e5d04603_Equal(jule::Ptr<_1e5d03db6_Trait> _self_, jule::Ptr<_1e5e417ea_TypeKind> _2518_other);
inline jule::Ptr<_1e5ce0358_Fn> _1e5d04a98_FindMethod(_1e5d03db6_Trait* _self_, jule::Str _3426_ident);
inline jule::Ptr<_1e5ce0358_Fn> _1e5d0522a_findMethodInherit(_1e5d03db6_Trait* _self_, jule::Str* _5534_ident);
inline jule::Bool _1e5d05e40_AutoExpr(_1e5d05a55_EnumItem* _self_);
inline jule::Str _1e5d06979_Str(_1e5d065c2_Enum* _self_);
inline jule::Bool _1e5d06cba_Equal(jule::Ptr<_1e5d065c2_Enum> _self_, jule::Ptr<_1e5e417ea_TypeKind> _3818_other);
inline jule::Ptr<_1e5d05a55_EnumItem> _1e5d071e9_FindItem(_1e5d065c2_Enum* _self_, jule::Str _4724_ident);
inline jule::Str _1e5d08151_Str(_1e5d07ccc_TypeEnum* _self_);
inline jule::Bool _1e5d08492_Equal(jule::Ptr<_1e5d07ccc_TypeEnum> _self_, jule::Ptr<_1e5e417ea_TypeKind> _8018_other);
inline jule::Ptr<_1e5d07705_TypeEnumItem> _1e5d088c1_FindItem(_1e5d07ccc_TypeEnum* _self_, jule::Str _8924_ident);
inline jule::Str _1e5d0ab04_Str(_1e5d0a708_comptimeRange* _self_);
inline jule::Bool _1e5d0ae45_Equal(jule::Ptr<_1e5d0a708_comptimeRange> _self_, jule::Ptr<_1e5e417ea_TypeKind> _2718_other);
inline jule::Str _1e5d0b61b_Str(_1e5d0b264_comptimeStructField* _self_);
inline jule::Bool _1e5d0b95c_Equal(jule::Ptr<_1e5d0b264_comptimeStructField> _self_, jule::Ptr<_1e5e417ea_TypeKind> _3718_other);
inline jule::Ptr<_1e5e08c13_Data> _1e5d0be68__Decl(jule::Ptr<_1e5d0b264_comptimeStructField> _self_, jule::Ptr<_1e5e0a93a_eval>* _4127_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _4142_fc);
inline jule::Ptr<_1e5e08c13_Data> _1e5d0c364__Type(jule::Ptr<_1e5d0b264_comptimeStructField> _self_, jule::Ptr<_1e5e0a93a_eval>* _5327_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _5342_fc);
inline jule::Ptr<_1e5e08c13_Data> _1e5d0c6a5_subIdent(jule::Ptr<_1e5d0b264_comptimeStructField> _self_, jule::Str* _6126_ident);
inline jule::Str _1e5d0cdc0_Str(_1e5d0ca07_comptimeStructFields* _self_);
inline jule::Bool _1e5d0d211_Equal(jule::Ptr<_1e5d0ca07_comptimeStructFields> _self_, jule::Ptr<_1e5e417ea_TypeKind> _9018_other);
inline void _1e5d0d695_ready(_1e5d0ca07_comptimeStructFields* _self_, jule::Ptr<_1e5da0bcc_Var>* _9426_keyA, jule::Ptr<_1e5da0bcc_Var>* _9443_keyB);
inline void _1e5d0da08_index(_1e5d0ca07_comptimeStructFields* _self_, jule::Ptr<_1e5e08c13_Data>* _11526_d, jule::I64 _11536_i);
inline void _1e5d0de26_step(_1e5d0ca07_comptimeStructFields* _self_, jule::I64 _12620_i, jule::Ptr<_1e5da0bcc_Var>* _12633_keyA, jule::Ptr<_1e5da0bcc_Var>* _12650_keyB);
inline jule::I64 _1e5d0e1ac_len(_1e5d0ca07_comptimeStructFields* _self_);
inline jule::Str _1e5d0e83e_Str(_1e5d0e487_comptimeStatic* _self_);
inline jule::Bool _1e5d0eb80_Equal(jule::Ptr<_1e5d0e487_comptimeStatic> _self_, jule::Ptr<_1e5e417ea_TypeKind> _15018_other);
inline jule::Ptr<_1e5e08c13_Data> _1e5d1018b__Decl(jule::Ptr<_1e5d0e487_comptimeStatic> _self_, jule::Ptr<_1e5e0a93a_eval>* _15427_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _15442_fc);
inline jule::Ptr<_1e5e08c13_Data> _1e5d10587__Type(jule::Ptr<_1e5d0e487_comptimeStatic> _self_, jule::Ptr<_1e5e0a93a_eval>* _16627_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _16642_fc);
inline jule::Ptr<_1e5e08c13_Data> _1e5d108c8_subIdent(jule::Ptr<_1e5d0e487_comptimeStatic> _self_, jule::Str* _17426_ident);
inline jule::Str _1e5d110e3_Str(_1e5d10c3b_comptimeStatics* _self_);
inline jule::Bool _1e5d11434_Equal(jule::Ptr<_1e5d10c3b_comptimeStatics> _self_, jule::Ptr<_1e5e417ea_TypeKind> _20318_other);
inline void _1e5d118b8_ready(_1e5d10c3b_comptimeStatics* _self_, jule::Ptr<_1e5da0bcc_Var>* _20726_keyA, jule::Ptr<_1e5da0bcc_Var>* _20743_keyB);
inline void _1e5d11c2b_index(_1e5d10c3b_comptimeStatics* _self_, jule::Ptr<_1e5e08c13_Data>* _22826_d, jule::I64 _22836_i);
inline void _1e5d12149_step(_1e5d10c3b_comptimeStatics* _self_, jule::I64 _23920_i, jule::Ptr<_1e5da0bcc_Var>* _23933_keyA, jule::Ptr<_1e5da0bcc_Var>* _23950_keyB);
inline jule::I64 _1e5d123d0_len(_1e5d10c3b_comptimeStatics* _self_);
inline jule::Str _1e5d12a62_Str(_1e5d126aa_comptimeEnumField* _self_);
inline jule::Bool _1e5d12da3_Equal(jule::Ptr<_1e5d126aa_comptimeEnumField> _self_, jule::Ptr<_1e5e417ea_TypeKind> _26318_other);
inline jule::Ptr<_1e5e08c13_Data> _1e5d1339d__Decl(jule::Ptr<_1e5d126aa_comptimeEnumField> _self_, jule::Ptr<_1e5e0a93a_eval>* _26727_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _26742_fc);
inline jule::Ptr<_1e5e08c13_Data> _1e5d136de_subIdent(jule::Ptr<_1e5d126aa_comptimeEnumField> _self_, jule::Str* _27926_ident);
inline jule::Str _1e5d13e81_Str(_1e5d139b9_comptimeEnumFields* _self_);
inline jule::Bool _1e5d142c2_Equal(jule::Ptr<_1e5d139b9_comptimeEnumFields> _self_, jule::Ptr<_1e5e417ea_TypeKind> _30118_other);
inline void _1e5d146ce_ready(_1e5d139b9_comptimeEnumFields* _self_, jule::Ptr<_1e5da0bcc_Var>* _30526_keyA, jule::Ptr<_1e5da0bcc_Var>* _30543_keyB);
inline void _1e5d14a42_index(_1e5d139b9_comptimeEnumFields* _self_, jule::Ptr<_1e5e08c13_Data>* _32626_d, jule::I64 _32636_i);
inline void _1e5d14e60_step(_1e5d139b9_comptimeEnumFields* _self_, jule::I64 _33720_i, jule::Ptr<_1e5da0bcc_Var>* _33733_keyA, jule::Ptr<_1e5da0bcc_Var>* _33750_keyB);
inline jule::I64 _1e5d151e6_len(_1e5d139b9_comptimeEnumFields* _self_);
inline jule::Str _1e5d15878_Str(_1e5d154c1_comptimeParam* _self_);
inline jule::Bool _1e5d15bb9_Equal(jule::Ptr<_1e5d154c1_comptimeParam> _self_, jule::Ptr<_1e5e417ea_TypeKind> _36118_other);
inline jule::Ptr<_1e5e08c13_Data> _1e5d161d6__Decl(jule::Ptr<_1e5d154c1_comptimeParam> _self_, jule::Ptr<_1e5e0a93a_eval>* _36527_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _36542_fc);
inline jule::Ptr<_1e5e08c13_Data> _1e5d165d2__Type(jule::Ptr<_1e5d154c1_comptimeParam> _self_, jule::Ptr<_1e5e0a93a_eval>* _37727_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _37742_fc);
inline jule::Ptr<_1e5e08c13_Data> _1e5d169cd__Recv(jule::Ptr<_1e5d154c1_comptimeParam> _self_, jule::Ptr<_1e5e0a93a_eval>* _38527_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _38542_fc);
inline jule::Ptr<_1e5e08c13_Data> _1e5d16d1e_subIdent(jule::Ptr<_1e5d154c1_comptimeParam> _self_, jule::Str* _39826_ident);
inline jule::Str _1e5d175c2_Str(_1e5d1732a_comptimeParams* _self_);
inline jule::Bool _1e5d17913_Equal(jule::Ptr<_1e5d1732a_comptimeParams> _self_, jule::Ptr<_1e5e417ea_TypeKind> _43418_other);
inline void _1e5d17d97_ready(_1e5d1732a_comptimeParams* _self_, jule::Ptr<_1e5da0bcc_Var>* _43826_keyA, jule::Ptr<_1e5da0bcc_Var>* _43843_keyB);
inline void _1e5d1820a_index(_1e5d1732a_comptimeParams* _self_, jule::Ptr<_1e5e08c13_Data>* _45926_d, jule::I64 _45936_i);
inline void _1e5d18628_step(_1e5d1732a_comptimeParams* _self_, jule::I64 _47020_i, jule::Ptr<_1e5da0bcc_Var>* _47033_keyA, jule::Ptr<_1e5da0bcc_Var>* _47050_keyB);
inline jule::I64 _1e5d188ae_len(_1e5d1732a_comptimeParams* _self_);
inline jule::Str _1e5d19041_Str(_1e5d18b89_comptimeTypeInfos* _self_);
inline jule::Bool _1e5d19382_Equal(jule::Ptr<_1e5d18b89_comptimeTypeInfos> _self_, jule::Ptr<_1e5e417ea_TypeKind> _49418_other);
inline void _1e5d19816_ready(_1e5d18b89_comptimeTypeInfos* _self_, jule::Ptr<_1e5da0bcc_Var>* _49826_keyA, jule::Ptr<_1e5da0bcc_Var>* _49843_keyB);
inline void _1e5d19b79_index(_1e5d18b89_comptimeTypeInfos* _self_, jule::Ptr<_1e5e08c13_Data>* _51926_d, jule::I64 _51936_i);
inline void _1e5d1a097_step(_1e5d18b89_comptimeTypeInfos* _self_, jule::I64 _52820_i, jule::Ptr<_1e5da0bcc_Var>* _52833_keyA, jule::Ptr<_1e5da0bcc_Var>* _52850_keyB);
inline jule::I64 _1e5d1a32d_len(_1e5d18b89_comptimeTypeInfos* _self_);
inline jule::Str _1e5d1a9b0_Str(_1e5d1a608_comptimeTypeInfo* _self_);
inline jule::Bool _1e5d1ad01_Equal(jule::Ptr<_1e5d1a608_comptimeTypeInfo> _self_, jule::Ptr<_1e5e417ea_TypeKind> _55218_other);
inline jule::Ptr<_1e5e08c13_Data> _1e5d1b43e__Decl(jule::Ptr<_1e5d1a608_comptimeTypeInfo> _self_, jule::Ptr<_1e5e0a93a_eval>* _55627_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _55642_fc);
inline jule::Ptr<_1e5e08c13_Data> _1e5d1b83a__Str(jule::Ptr<_1e5d1a608_comptimeTypeInfo> _self_, jule::Ptr<_1e5e0a93a_eval>* _59322_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _59337_fc);
inline jule::Ptr<_1e5e08c13_Data> _1e5d1bc36__Kind(jule::Ptr<_1e5d1a608_comptimeTypeInfo> _self_, jule::Ptr<_1e5e0a93a_eval>* _60627_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _60642_fc);
inline jule::Ptr<_1e5e08c13_Data> _1e5d1c132__Bits(jule::Ptr<_1e5d1a608_comptimeTypeInfo> _self_, jule::Ptr<_1e5e0a93a_eval>* _68627_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _68642_fc);
inline jule::Ptr<_1e5e08c13_Data> _1e5d1c52d__Elem(jule::Ptr<_1e5d1a608_comptimeTypeInfo> _self_, jule::Ptr<_1e5e0a93a_eval>* _71027_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _71042_fc);
inline jule::Ptr<_1e5e08c13_Data> _1e5d1c929__Size(jule::Ptr<_1e5d1a608_comptimeTypeInfo> _self_, jule::Ptr<_1e5e0a93a_eval>* _74327_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _74342_fc);
inline jule::Ptr<_1e5e08c13_Data> _1e5d1cd25__Key(jule::Ptr<_1e5d1a608_comptimeTypeInfo> _self_, jule::Ptr<_1e5e0a93a_eval>* _76226_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _76241_fc);
inline jule::Ptr<_1e5e08c13_Data> _1e5d1d221__Value(jule::Ptr<_1e5d1a608_comptimeTypeInfo> _self_, jule::Ptr<_1e5e0a93a_eval>* _77528_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _77543_fc);
inline jule::Ptr<_1e5e08c13_Data> _1e5d1d61c__Fields(jule::Ptr<_1e5d1a608_comptimeTypeInfo> _self_, jule::Ptr<_1e5e0a93a_eval>* _78829_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _78844_fc);
inline jule::Ptr<_1e5e08c13_Data> _1e5d1da18__Statics(jule::Ptr<_1e5d1a608_comptimeTypeInfo> _self_, jule::Ptr<_1e5e0a93a_eval>* _81730_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _81745_fc);
inline jule::Ptr<_1e5e08c13_Data> _1e5d1de14__Binded(jule::Ptr<_1e5d1a608_comptimeTypeInfo> _self_, jule::Ptr<_1e5e0a93a_eval>* _83629_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _83644_fc);
inline jule::Ptr<_1e5e08c13_Data> _1e5d1e310__Ordered(jule::Ptr<_1e5d1a608_comptimeTypeInfo> _self_, jule::Ptr<_1e5e0a93a_eval>* _84926_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _84941_fc);
inline jule::Ptr<_1e5e08c13_Data> _1e5d1e70b__Comparable(jule::Ptr<_1e5d1a608_comptimeTypeInfo> _self_, jule::Ptr<_1e5e0a93a_eval>* _86229_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _86244_fc);
inline jule::Ptr<_1e5e08c13_Data> _1e5d1eb07__Mutable(jule::Ptr<_1e5d1a608_comptimeTypeInfo> _self_, jule::Ptr<_1e5e0a93a_eval>* _87526_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _87541_fc);
inline jule::Ptr<_1e5e08c13_Data> _1e5d20003__Types(jule::Ptr<_1e5d1a608_comptimeTypeInfo> _self_, jule::Ptr<_1e5e0a93a_eval>* _88828_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _88843_fc);
inline jule::Ptr<_1e5e08c13_Data> _1e5d203ee__CanNil(jule::Ptr<_1e5d1a608_comptimeTypeInfo> _self_, jule::Ptr<_1e5e0a93a_eval>* _91129_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _91144_fc);
inline jule::Ptr<_1e5e08c13_Data> _1e5d207ea__GC(jule::Ptr<_1e5d1a608_comptimeTypeInfo> _self_, jule::Ptr<_1e5e0a93a_eval>* _92425_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _92440_fc);
inline jule::Ptr<_1e5e08c13_Data> _1e5d20be6__Result(jule::Ptr<_1e5d1a608_comptimeTypeInfo> _self_, jule::Ptr<_1e5e0a93a_eval>* _93729_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _93744_fc);
inline jule::Ptr<_1e5e08c13_Data> _1e5d210e2__Params(jule::Ptr<_1e5d1a608_comptimeTypeInfo> _self_, jule::Ptr<_1e5e0a93a_eval>* _95329_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _95344_fc);
inline jule::Ptr<_1e5e08c13_Data> _1e5d21433_subIdent(jule::Ptr<_1e5d1a608_comptimeTypeInfo> _self_, jule::Str* _97026_ident);
inline jule::Str _1e5d21ab5_Str(_1e5d2170d_comptimeValue* _self_);
inline jule::Bool _1e5d21e06_Equal(jule::Ptr<_1e5d2170d_comptimeValue> _self_, jule::Ptr<_1e5e417ea_TypeKind> _111818_other);
inline jule::Ptr<_1e5e08c13_Data> _1e5d22467__Unwrap(jule::Ptr<_1e5d2170d_comptimeValue> _self_, jule::Ptr<_1e5e0a93a_eval>* _112229_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _112244_fc);
inline jule::Ptr<_1e5e08c13_Data> _1e5d22863__Type(jule::Ptr<_1e5d2170d_comptimeValue> _self_, jule::Ptr<_1e5e0a93a_eval>* _113027_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _113042_fc);
inline jule::Ptr<_1e5e08c13_Data> _1e5d22c5e__Lvalue(jule::Ptr<_1e5d2170d_comptimeValue> _self_, jule::Ptr<_1e5e0a93a_eval>* _113829_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _113844_fc);
inline jule::Ptr<_1e5e08c13_Data> _1e5d2315a__Mutable(jule::Ptr<_1e5d2170d_comptimeValue> _self_, jule::Ptr<_1e5e0a93a_eval>* _115130_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _115145_fc);
inline jule::Ptr<_1e5e08c13_Data> _1e5d23556__Const(jule::Ptr<_1e5d2170d_comptimeValue> _self_, jule::Ptr<_1e5e0a93a_eval>* _116428_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _116443_fc);
inline jule::Ptr<_1e5e08c13_Data> _1e5d23952__Field(jule::Ptr<_1e5d2170d_comptimeValue> _self_, jule::Ptr<_1e5e0a93a_eval>* _117728_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _117743_fc);
inline jule::Ptr<_1e5e08c13_Data> _1e5d23d4d__Method(jule::Ptr<_1e5d2170d_comptimeValue> _self_, jule::Ptr<_1e5e0a93a_eval>* _121229_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _121244_fc);
inline jule::Ptr<_1e5e08c13_Data> _1e5d2418e_subIdent(jule::Ptr<_1e5d2170d_comptimeValue> _self_, jule::Str* _125826_ident);
inline jule::Str _1e5d24821_Str(_1e5d24469_comptimeFiles* _self_);
inline jule::Bool _1e5d24b62_Equal(jule::Ptr<_1e5d24469_comptimeFiles> _self_, jule::Ptr<_1e5e417ea_TypeKind> _132218_other);
inline void _1e5d250e6_ready(_1e5d24469_comptimeFiles* _self_, jule::Ptr<_1e5da0bcc_Var>* _132626_keyA, jule::Ptr<_1e5da0bcc_Var>* _132643_keyB);
inline void _1e5d25459_index(_1e5d24469_comptimeFiles* _self_, jule::Ptr<_1e5e08c13_Data>* _134726_d, jule::I64 _134736_i);
inline void _1e5d25877_step(_1e5d24469_comptimeFiles* _self_, jule::I64 _135820_i, jule::Ptr<_1e5da0bcc_Var>* _135833_keyA, jule::Ptr<_1e5da0bcc_Var>* _135850_keyB);
inline jule::I64 _1e5d25b0d_len(_1e5d24469_comptimeFiles* _self_);
inline jule::Str _1e5d26290_Str(_1e5d25dd8_comptimeFile* _self_);
inline jule::Bool _1e5d265d1_Equal(jule::Ptr<_1e5d25dd8_comptimeFile> _self_, jule::Ptr<_1e5e417ea_TypeKind> _138218_other);
inline jule::Ptr<_1e5e08c13_Data> _1e5d26aed__Path(jule::Ptr<_1e5d25dd8_comptimeFile> _self_, jule::Ptr<_1e5e0a93a_eval>* _138627_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _138642_fc);
inline jule::Ptr<_1e5e08c13_Data> _1e5d26ee9__Name(jule::Ptr<_1e5d25dd8_comptimeFile> _self_, jule::Ptr<_1e5e0a93a_eval>* _139927_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _139942_fc);
inline jule::Ptr<_1e5e08c13_Data> _1e5d273e5__Dir(jule::Ptr<_1e5d25dd8_comptimeFile> _self_, jule::Ptr<_1e5e0a93a_eval>* _141226_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _141241_fc);
inline jule::Ptr<_1e5e08c13_Data> _1e5d27736_subIdent(jule::Ptr<_1e5d25dd8_comptimeFile> _self_, jule::Str* _142526_ident);
inline jule::Str _1e5d280e9_Str(_1e5d27a11_comptimeDecls* _self_);
inline jule::Bool _1e5d2843a_Equal(jule::Ptr<_1e5d27a11_comptimeDecls> _self_, jule::Ptr<_1e5e417ea_TypeKind> _146118_other);
inline void _1e5d287ae_ready(_1e5d27a11_comptimeDecls* _self_, jule::Ptr<_1e5da0bcc_Var>* _146526_keyA, jule::Ptr<_1e5da0bcc_Var>* _146543_keyB);
inline void _1e5d28b22_index(_1e5d27a11_comptimeDecls* _self_, jule::Ptr<_1e5e08c13_Data>* _148626_d, jule::I64 _148636_i);
inline void _1e5d29040_step(_1e5d27a11_comptimeDecls* _self_, jule::I64 _149520_i, jule::Ptr<_1e5da0bcc_Var>* _149533_keyA, jule::Ptr<_1e5da0bcc_Var>* _149550_keyB);
inline jule::I64 _1e5d292c6_len(_1e5d27a11_comptimeDecls* _self_);
inline jule::Str _1e5d2a1a6_Str(_1e5d29cee_comptimeDecl* _self_);
inline jule::Bool _1e5d2a4e7_Equal(jule::Ptr<_1e5d29cee_comptimeDecl> _self_, jule::Ptr<_1e5e417ea_TypeKind> _153418_other);
inline jule::Str _1e5d2a948_declAsStr(_1e5d29cee_comptimeDecl* _self_);
inline jule::Ptr<_1e5e08c13_Data> _1e5d2ad44__Name(jule::Ptr<_1e5d29cee_comptimeDecl> _self_, jule::Ptr<_1e5e0a93a_eval>* _156527_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _156542_fc);
inline jule::Ptr<_1e5e08c13_Data> _1e5d2b240__Public(jule::Ptr<_1e5d29cee_comptimeDecl> _self_, jule::Ptr<_1e5e0a93a_eval>* _160329_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _160344_fc);
inline jule::Ptr<_1e5e08c13_Data> _1e5d2b63b__Binded(jule::Ptr<_1e5d29cee_comptimeDecl> _self_, jule::Ptr<_1e5e0a93a_eval>* _164129_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _164144_fc);
inline jule::Ptr<_1e5e08c13_Data> _1e5d2ba37__Exceptional(jule::Ptr<_1e5d29cee_comptimeDecl> _self_, jule::Ptr<_1e5e0a93a_eval>* _167534_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _167549_fc);
inline jule::Ptr<_1e5e08c13_Data> _1e5d2be33__Mutable(jule::Ptr<_1e5d29cee_comptimeDecl> _self_, jule::Ptr<_1e5e0a93a_eval>* _169630_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _169645_fc);
inline jule::Ptr<_1e5e08c13_Data> _1e5d2c32e__Variadic(jule::Ptr<_1e5d29cee_comptimeDecl> _self_, jule::Ptr<_1e5e0a93a_eval>* _172931_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _172946_fc);
inline jule::Ptr<_1e5e08c13_Data> _1e5d2c72a__Reference(jule::Ptr<_1e5d29cee_comptimeDecl> _self_, jule::Ptr<_1e5e0a93a_eval>* _176032_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _176047_fc);
inline jule::Ptr<_1e5e08c13_Data> _1e5d2cb26__Params(jule::Ptr<_1e5d29cee_comptimeDecl> _self_, jule::Ptr<_1e5e0a93a_eval>* _179229_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _179244_fc);
inline jule::Ptr<_1e5e08c13_Data> _1e5d2d022__Fields(jule::Ptr<_1e5d29cee_comptimeDecl> _self_, jule::Ptr<_1e5e0a93a_eval>* _182729_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _182744_fc);
inline jule::Ptr<_1e5e08c13_Data> _1e5d2d41d__Statics(jule::Ptr<_1e5d29cee_comptimeDecl> _self_, jule::Ptr<_1e5e0a93a_eval>* _186830_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _186845_fc);
inline jule::Ptr<_1e5e08c13_Data> _1e5d2d819__Methods(jule::Ptr<_1e5d29cee_comptimeDecl> _self_, jule::Ptr<_1e5e0a93a_eval>* _190430_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _190445_fc);
inline jule::Ptr<_1e5e08c13_Data> _1e5d2db5a_subIdent(jule::Ptr<_1e5d29cee_comptimeDecl> _self_, jule::Str* _194526_ident);
inline jule::Fn<jule::Bool,jule::Ptr<_1e5d7b768_sema>*,jule::Slice<jule::Ptr<_1e5e40a08_TypeAlias>>*> _1e5d31cd4_readyFn(jule::Ptr<_1e5d318a5_constraintChecker> _self_);
inline jule::Bool _1e5d3206a_readyFi(jule::Ptr<_1e5d318a5_constraintChecker> _self_);
inline jule::Bool _1e5d32301_readySi(jule::Ptr<_1e5d318a5_constraintChecker> _self_);
inline jule::Bool _1e5d32587_ready(jule::Ptr<_1e5d318a5_constraintChecker> _self_);
inline jule::Bool _1e5d3281d_check(jule::Ptr<_1e5d318a5_constraintChecker> _self_);
inline jule::Bool _1e5d34105_IsTraitImpl(_1e5d33c09_Impl* _self_);
inline jule::Bool _1e5d3438b_IsStructImpl(_1e5d33c09_Impl* _self_);
inline jule::Bool _1e5d39c65_IsWhileNext(_1e5d398be_WhileIter* _self_);
inline jule::Ptr<_1e5d5b2e7_ImportInfo> _1e5d40c49_SelectPackage(_1e5d40771_scopeChecker* _self_, jule::Fn<jule::Bool,jule::Ptr<_1e5d5b2e7_ImportInfo>> _37429_selector);
inline jule::Ptr<_1e5da0bcc_Var> _1e5d41145_FindVar(_1e5d40771_scopeChecker* _self_, jule::Str _38523_ident, jule::Bool _38535_binded);
inline jule::Ptr<_1e5e40a08_TypeAlias> _1e5d41541_FindTypeAlias(_1e5d40771_scopeChecker* _self_, jule::Str _40229_ident, jule::Bool _40241_binded);
inline jule::Ptr<_1e5cc5e21_Struct> _1e5d4193c_FindStruct(_1e5d40771_scopeChecker* _self_, jule::Str _42726_ident, jule::Bool _42738_binded);
inline jule::Ptr<_1e5ce0358_Fn> _1e5d41d38_FindFn(_1e5d40771_scopeChecker* _self_, jule::Str _43622_ident, jule::Bool _43634_binded);
inline jule::Ptr<_1e5d03db6_Trait> _1e5d42179_FindTrait(_1e5d40771_scopeChecker* _self_, jule::Str _44525_ident);
inline jule::Ptr<_1e5d065c2_Enum> _1e5d424ba_FindEnum(_1e5d40771_scopeChecker* _self_, jule::Str _45424_ident);
inline jule::Ptr<_1e5d07ccc_TypeEnum> _1e5d4280b_FindTypeEnum(_1e5d40771_scopeChecker* _self_, jule::Str _46328_ident);
inline jule::Bool _1e5d42b5d_isUnsafe(jule::Ptr<_1e5d40771_scopeChecker> _self_);
inline jule::Bool _1e5d42de4_isRoot(_1e5d40771_scopeChecker* _self_);
inline void _1e5d430e2_stop(_1e5d40771_scopeChecker* _self_);
inline jule::Bool _1e5d43378_stopped(_1e5d40771_scopeChecker* _self_);
inline jule::Bool _1e5d4360e_isDeferred(jule::Ptr<_1e5d40771_scopeChecker> _self_);
inline void _1e5d438b7_pushCaptured(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5da0bcc_Var>* _52534_v);
inline jule::Ptr<_1e5d40771_scopeChecker> _1e5d43b4d_getRoot(jule::Ptr<_1e5d40771_scopeChecker> _self_);
inline jule::Ptr<_1e5d40771_scopeChecker> _1e5d43dd4_getHardRoot(jule::Ptr<_1e5d40771_scopeChecker> _self_);
inline jule::Ptr<_1e5ce65a1_ReferenceStack> _1e5d4416a_getOwnerRefers(jule::Ptr<_1e5d40771_scopeChecker> _self_);
inline jule::Ptr<_1e5da0bcc_Var> _1e5d444ab_findVar(_1e5d40771_scopeChecker* _self_, jule::Str _57223_ident);
inline jule::Ptr<_1e5d3b030_Label> _1e5d447ec_findLabel(_1e5d40771_scopeChecker* _self_, jule::Str* _59326_ident);
inline jule::Ptr<_1e5d3e781_scopeLabel> _1e5d44b3d_findLabelScope(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Str* _60932_ident);
inline jule::Ptr<_1e5d3e781_scopeLabel> _1e5d44e7e_findLabelAll(_1e5d40771_scopeChecker* _self_, jule::Str* _62029_ident);
inline jule::Bool _1e5d4537a_isDuplicatedIdent(_1e5d40771_scopeChecker* _self_, jule::Uintptr _63233_itself, jule::Str* _63251_ident);
inline void _1e5d45633_checkVarDecl(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cb7e02_VarDecl> _65233_decl);
inline void _1e5d458db_checkTypeAlias(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5e40a08_TypeAlias>* _68336_ta);
inline void _1e5d45b94_checkTypeAliasDecl(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cbbaa4_TypeAliasDecl> _69939_decl);
inline jule::Ptr<_1e5d384d3_Scope> _1e5d45e2a_getChild(_1e5d40771_scopeChecker* _self_);
inline void _1e5d46348_checkChildSsc(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cb50a8_ScopeTree>* _71035_tree, jule::Ptr<_1e5d384d3_Scope>* _71058_s, jule::Ptr<_1e5d40771_scopeChecker>* _71074_ssc);
inline jule::Ptr<_1e5d384d3_Scope> _1e5d46744_checkChildSc(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cb50a8_ScopeTree>* _71734_tree, jule::Ptr<_1e5d40771_scopeChecker>* _71757_ssc);
inline jule::Ptr<_1e5d384d3_Scope> _1e5d46a85_checkChild(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cb50a8_ScopeTree>* _72332_tree);
inline void _1e5d46d3d_checkAnonScope(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cb50a8_ScopeTree> _72835_tree);
inline void _1e5d471a1_processErrorCall(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cdb09b_BuiltinErrorCallExprModel>* _73338_m, jule::Ptr<_1e5c8eacc_Token> _73369_err);
inline void _1e5d47459_checkExpr(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5ca93bb_Expr> _74630_expr);
inline jule::Ptr<_1e5d38901_If> _1e5d4779a_checkIf(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cba9d7_If> _77628_i);
inline jule::Ptr<_1e5d38bed_Else> _1e5d47adb_checkElse(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cbadb1_Else> _79630_e);
inline void _1e5d47d94_checkConditional(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cbb367_Conditional> _80237_conditional);
inline void _1e5d4836c_checkIterScopeSsc(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Uintptr _81834_it, jule::Ptr<_1e5cb50a8_ScopeTree> _81851_tree, jule::Ptr<_1e5d384d3_Scope>* _81874_s, jule::Ptr<_1e5d40771_scopeChecker> _81889_ssc);
inline jule::Ptr<_1e5d384d3_Scope> _1e5d48823_checkIterScopeSc(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Uintptr _82333_it, jule::Ptr<_1e5cb50a8_ScopeTree> _82350_tree, jule::Ptr<_1e5d40771_scopeChecker> _82372_ssc);
inline jule::Ptr<_1e5d384d3_Scope> _1e5d48c1e_checkIterScope(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Uintptr _82931_it, jule::Ptr<_1e5cb50a8_ScopeTree>* _82949_tree);
inline void _1e5d48ec7_checkInfIter(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cb8a4b_Iter>* _83434_it);
inline void _1e5d49280_checkWhileIter(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cb8a4b_Iter>* _84036_it);
inline void _1e5d4969d_checkComptimeRangeIter(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cb8a4b_Iter>* _89044_it, jule::Ptr<_1e5d3a31a_RangeIter>* _89060_kind, jule::Ptr<_1e5e08c13_Data>* _89083_d);
inline void _1e5d49956_checkRangeIter(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cb8a4b_Iter>* _94736_it);
inline void _1e5d49c0e_checkIter(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cb8a4b_Iter> _100730_it);
inline jule::Bool _1e5d4a050_checkValidContLabel(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Uintptr _103136_it);
inline jule::Bool _1e5d4a391_checkValidBreakLabel(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Uintptr _104737_ptr);
inline jule::Ptr<_1e5d3a6a0_ContSt> _1e5d4a6d2_checkContValidScope(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cba531_ContSt> _107036_c);
inline void _1e5d4a98a_checkCont(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cba531_ContSt> _109426_c);
inline void _1e5d4ac43_checkLabel(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cb266b_LabelSt> _114131_l);
inline void _1e5d4aeeb_pushGoto(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cb2a45_GotoSt> _116029_gt);
inline void _1e5d4b2a4_checkPostfix(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cb3a35_AssignSt> _117133_a);
inline jule::Bool _1e5d4b5e5_isNewAssignIdent(_1e5d40771_scopeChecker* _self_, jule::Str _120432_ident);
inline void _1e5d4b89d_removeInteriorMutRisk(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5e08c13_Data>* _121743_d);
inline jule::Bool _1e5d4bd54_checkStructureAssignOp(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cc8c7b_StructIns>* _123144_s, jule::Ptr<_1e5cb3a35_AssignSt>* _123164_a, jule::Ptr<_1e5e08c13_Data>* _123183_r);
inline void _1e5d4c10c_checkSingleAssign(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cb3a35_AssignSt>* _127039_a);
inline void _1e5d4c74a_processEndPartOfMultiAssign(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5d3c4c6_MultiAssign>* _135249_st, jule::Ptr<_1e5cb3a35_AssignSt>* _135272_a, jule::Ptr<_1e5cb34a2_AssignLeft>* _13538_lexpr, jule::Ptr<_1e5e08c13_Data>* _135333_l, jule::Ptr<_1e5e08c13_Data>* _135348_r, jule::Bool _135358_strict);
inline void _1e5d4ca03_checkMultiAssign(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cb3a35_AssignSt>* _142838_a);
inline void _1e5d4ccab_checkAssignSt(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cb3a35_AssignSt> _149534_a);
inline jule::Ptr<_1e5d384d3_Scope> _1e5d4d1a7_checkCaseScope(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5d3d73b_Case>* _150632_c, jule::Ptr<_1e5cb50a8_ScopeTree>* _150647_tree);
inline jule::Ptr<_1e5d3d73b_Case> _1e5d4d718_checkCase(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5d3cc13_Match> _151230_m, jule::I64 _151241_i, jule::Ptr<_1e5cbc05a_Case> _151253_c, jule::Ptr<_1e5e08c13_Data> _151272_expr);
inline void _1e5d4db36_checkCases(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cbc874_MatchCase>* _158932_m, jule::Ptr<_1e5d3cc13_Match> _158951_rm, jule::Ptr<_1e5e08c13_Data> _158967_expr);
inline jule::Ptr<_1e5d3d73b_Case> _1e5d4e032_checkDefault(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5d3cc13_Match> _161033_m, jule::Ptr<_1e5cbadb1_Else> _161048_d);
inline void _1e5d4e395_checkComptimePanic(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5c8eacc_Token> _161839_callToken, jule::Ptr<_1e5d384d3_Scope>* _161859_s);
inline void _1e5d4e708_processConstMatch(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5d3cc13_Match>* _165039_tm, jule::Ptr<_1e5cbc874_MatchCase>* _165056_m);
inline void _1e5d4e9b1_checkTypeMatch(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cbc874_MatchCase>* _167936_m);
inline void _1e5d4ec69_checkCommonMatch(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cbc874_MatchCase>* _172238_m);
inline void _1e5d50022_checkMatch(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cbc874_MatchCase> _177331_m);
inline void _1e5d502ca_checkFall(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cb2d42_FallSt> _178126_f);
inline jule::Ptr<_1e5d3aa79_BreakSt> _1e5d5061b_checkBreakWithLabel(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cba157_BreakSt> _180436_b);
inline jule::Ptr<_1e5d3aa79_BreakSt> _1e5d5095c_checkPlainBreak(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cba157_BreakSt> _186232_b);
inline void _1e5d50c15_checkBreak(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cba157_BreakSt> _188427_b);
inline void _1e5d50ebd_checkRet(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cb82cb_RetSt> _189529_r);
inline void _1e5d51276_checkUseExpr(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5ca9c90_UseExpr> _192029_ue);
inline void _1e5d5152e_checkNode(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Any* _193631_node);
inline void _1e5d5172c_checkResult(jule::Ptr<_1e5d40771_scopeChecker> _self_);
inline void _1e5d5192a_checkTree(jule::Ptr<_1e5d40771_scopeChecker> _self_);
inline void _1e5d51c8d_checkGoto(_1e5d40771_scopeChecker* _self_, jule::Ptr<_1e5d3b690_GotoSt>* _203830_gt, jule::Ptr<_1e5d3e781_scopeLabel>* _203848_label);
inline void _1e5d51e8b_checkGotos(_1e5d40771_scopeChecker* _self_);
inline void _1e5d52189_checkLabels(_1e5d40771_scopeChecker* _self_);
inline void _1e5d52387_checkVars(_1e5d40771_scopeChecker* _self_);
inline void _1e5d52585_checkAliases(_1e5d40771_scopeChecker* _self_);
inline void _1e5d528e8_check(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cb50a8_ScopeTree>* _213327_tree, jule::Ptr<_1e5d384d3_Scope>* _213350_s);
inline jule::Ptr<_1e5d40771_scopeChecker> _1e5d52b7e_newChildChecker(jule::Ptr<_1e5d40771_scopeChecker> _self_);
inline void _1e5d54b5e_checkCdef(_1e5d5470d_directiveChecker* _self_, jule::Ptr<_1e5ca44a4_Directive>* _1626_d);
inline void _1e5d54e17_checkTypedef(_1e5d5470d_directiveChecker* _self_, jule::Ptr<_1e5ca44a4_Directive>* _3229_d);
inline void _1e5d551c0_checkNamespace(_1e5d5470d_directiveChecker* _self_, jule::Ptr<_1e5ca44a4_Directive>* _4835_d);
inline void _1e5d55478_checkDeprecated(_1e5d5470d_directiveChecker* _self_, jule::Ptr<_1e5ca44a4_Directive>* _10036_d);
inline void _1e5d55731_checkTest(_1e5d5470d_directiveChecker* _self_, jule::Ptr<_1e5ca44a4_Directive>* _14126_d);
inline void _1e5d559d9_checkExport(_1e5d5470d_directiveChecker* _self_, jule::Ptr<_1e5ca44a4_Directive>* _16232_d);
inline void _1e5d55c92_checkDirective(_1e5d5470d_directiveChecker* _self_, jule::Ptr<_1e5ca44a4_Directive>* _20035_d);
inline void _1e5d55e90_check(_1e5d5470d_directiveChecker* _self_);
inline jule::Ptr<_1e5d5b2e7_ImportInfo> _1e5d5b814_SelectPackage(_1e5d5b2e7_ImportInfo* _self_, jule::Fn<jule::Bool,jule::Ptr<_1e5d5b2e7_ImportInfo>> );
inline jule::Ptr<_1e5da0bcc_Var> _1e5d5bc10_FindVar(_1e5d5b2e7_ImportInfo* _self_, jule::Str _19823_ident, jule::Bool );
inline jule::Ptr<_1e5e40a08_TypeAlias> _1e5d5c10b_FindTypeAlias(_1e5d5b2e7_ImportInfo* _self_, jule::Str _21029_ident, jule::Bool );
inline jule::Ptr<_1e5cc5e21_Struct> _1e5d5c507_FindStruct(_1e5d5b2e7_ImportInfo* _self_, jule::Str _22226_ident, jule::Bool );
inline jule::Ptr<_1e5ce0358_Fn> _1e5d5c903_FindFn(_1e5d5b2e7_ImportInfo* _self_, jule::Str _23422_ident, jule::Bool );
inline jule::Ptr<_1e5d03db6_Trait> _1e5d5cc44_FindTrait(_1e5d5b2e7_ImportInfo* _self_, jule::Str _24525_ident);
inline jule::Ptr<_1e5d065c2_Enum> _1e5d5d085_FindEnum(_1e5d5b2e7_ImportInfo* _self_, jule::Str _25624_ident);
inline jule::Ptr<_1e5d07ccc_TypeEnum> _1e5d5d3c6_FindTypeEnum(_1e5d5b2e7_ImportInfo* _self_, jule::Str _26728_ident);
inline jule::Bool _1e5d5d86b_isLookupable(_1e5d5b2e7_ImportInfo* _self_, jule::Str* _27625_ident);
inline jule::Bool _1e5d5dbac_existIdent(_1e5d5b2e7_ImportInfo* _self_, jule::Str _29622_ident);
inline jule::Bool _1e5d5de43_isAccessibleViaSelection(_1e5d5b2e7_ImportInfo* _self_);
inline jule::Ptr<_1e5d5b2e7_ImportInfo> _1e5d5e6e6_SelectPackage(_1e5d5e21d_Package* _self_, jule::Fn<jule::Bool,jule::Ptr<_1e5d5b2e7_ImportInfo>> );
inline jule::Ptr<_1e5da0bcc_Var> _1e5d5eae2_FindVar(_1e5d5e21d_Package* _self_, jule::Str _32323_ident, jule::Bool _32335_binded);
inline jule::Ptr<_1e5e40a08_TypeAlias> _1e5d5eedd_FindTypeAlias(_1e5d5e21d_Package* _self_, jule::Str _32929_ident, jule::Bool _32941_binded);
inline jule::Ptr<_1e5cc5e21_Struct> _1e5d603d9_FindStruct(_1e5d5e21d_Package* _self_, jule::Str _33526_ident, jule::Bool _33538_binded);
inline jule::Ptr<_1e5ce0358_Fn> _1e5d607d5_FindFn(_1e5d5e21d_Package* _self_, jule::Str _34122_ident, jule::Bool _34134_binded);
inline jule::Ptr<_1e5d03db6_Trait> _1e5d60b26_FindTrait(_1e5d5e21d_Package* _self_, jule::Str _34725_ident);
inline jule::Ptr<_1e5d065c2_Enum> _1e5d60e67_FindEnum(_1e5d5e21d_Package* _self_, jule::Str _35324_ident);
inline jule::Ptr<_1e5d07ccc_TypeEnum> _1e5d612a8_FindTypeEnum(_1e5d5e21d_Package* _self_, jule::Str _35928_ident);
inline jule::Ptr<_1e5d1a608_comptimeTypeInfo> _1e5d7b0d6_pushComptimeTypeInfo(_1e5d7ab41_commonSemaMeta* _self_, jule::Ptr<_1e5e417ea_TypeKind>* _22341_t);
inline jule::Ptr<_1e5d5b2e7_ImportInfo> _1e5d7bc41_SelectPackage(_1e5d7b768_sema* _self_, jule::Fn<jule::Bool,jule::Ptr<_1e5d5b2e7_ImportInfo>> _25229_selector);
inline jule::Ptr<_1e5da0bcc_Var> _1e5d7c13c_FindVar(_1e5d7b768_sema* _self_, jule::Str _26223_ident, jule::Bool _26235_binded);
inline jule::Ptr<_1e5e40a08_TypeAlias> _1e5d7c538_FindTypeAlias(_1e5d7b768_sema* _self_, jule::Str _29429_ident, jule::Bool _29441_binded);
inline jule::Ptr<_1e5cc5e21_Struct> _1e5d7c934_FindStruct(_1e5d7b768_sema* _self_, jule::Str _32626_ident, jule::Bool _32638_binded);
inline jule::Ptr<_1e5ce0358_Fn> _1e5d7cd30_FindFn(_1e5d7b768_sema* _self_, jule::Str _35722_ident, jule::Bool _35734_binded);
inline jule::Ptr<_1e5d03db6_Trait> _1e5d7d171_FindTrait(_1e5d7b768_sema* _self_, jule::Str _38925_ident);
inline jule::Ptr<_1e5d065c2_Enum> _1e5d7d4b2_FindEnum(_1e5d7b768_sema* _self_, jule::Str _42124_ident);
inline jule::Ptr<_1e5d07ccc_TypeEnum> _1e5d7d803_FindTypeEnum(_1e5d7b768_sema* _self_, jule::Str _45328_ident);
inline jule::Bool _1e5d7dc10_isFlag(_1e5d7b768_sema* _self_, jule::I64 _48218_flags);
inline jule::Ptr<_1e5e03548_SymbolTable> _1e5d7de96_getCurrentFile(_1e5d7b768_sema* _self_);
inline void _1e5d7e24e_setCurrentFile(_1e5d7b768_sema* _self_, jule::Ptr<_1e5e03548_SymbolTable> _48534_f);
inline void _1e5d7e66c_pushErr(_1e5d7b768_sema* _self_, jule::Ptr<_1e5c8eacc_Token> _48723_token, jule::Str _48738_fmt, jule::Slice<jule::Any> _48751_args);
inline void _1e5d7e9d0_pushSuggestion(_1e5d7b768_sema* _self_, jule::Str _49230_fmt, jule::Slice<jule::Any> _49243_args);
inline jule::Bool _1e5d7edcb_isAccessibleDefine(_1e5d7b768_sema* _self_, jule::Bool _49830_public, jule::Ptr<_1e5c8eacc_Token> _49844_token);
inline jule::Bool _1e5d80382_isDuplicatedIdent(_1e5d7b768_sema* _self_, jule::Uintptr _52129_itself, jule::Str* _52147_ident, jule::Bool _52159_binded);
inline void _1e5d806e5_checkDirectives(jule::Ptr<_1e5d7b768_sema> _self_, jule::Slice<jule::Ptr<_1e5ca44a4_Directive>>* _53837_d, jule::Any _53863_o);
inline jule::Bool _1e5d80b9b_checkGenericQuantity(_1e5d7b768_sema* _self_, jule::I64 _54736_required, jule::I64 _54751_given, jule::Ptr<_1e5c8eacc_Token> _54763_token);
inline jule::Bool _1e5d81097_isDuplicatedImportSelection(_1e5d7b768_sema* _self_, jule::Uintptr _56639_itself, jule::Str* _56657_ident);
inline jule::Any _1e5d81493_getImportDef(_1e5d7b768_sema* _self_, jule::Str* _57925_ident, jule::Ptr<_1e5d5b2e7_ImportInfo>* _57942_imp);
inline jule::Bool _1cabda03c_checkImportSelection(_1e5d7b768_sema* _self_, jule::Ptr<_1e5c8eacc_Token>* _59440_ident, jule::Ptr<_1e5da0bcc_Var>* _59456_s);
inline jule::Bool _1cabde96a_checkImportSelection(_1e5d7b768_sema* _self_, jule::Ptr<_1e5c8eacc_Token>* _59440_ident, jule::Ptr<_1e5e40a08_TypeAlias>* _59456_s);
inline jule::Bool _1cabe40ce_checkImportSelection(_1e5d7b768_sema* _self_, jule::Ptr<_1e5c8eacc_Token>* _59440_ident, jule::Ptr<_1e5cc5e21_Struct>* _59456_s);
inline jule::Bool _1cabe87a9_checkImportSelection(_1e5d7b768_sema* _self_, jule::Ptr<_1e5c8eacc_Token>* _59440_ident, jule::Ptr<_1e5d03db6_Trait>* _59456_s);
inline jule::Bool _1cabece51_checkImportSelection(_1e5d7b768_sema* _self_, jule::Ptr<_1e5c8eacc_Token>* _59440_ident, jule::Ptr<_1e5d065c2_Enum>* _59456_s);
inline jule::Bool _1cac02362_checkImportSelection(_1e5d7b768_sema* _self_, jule::Ptr<_1e5c8eacc_Token>* _59440_ident, jule::Ptr<_1e5d07ccc_TypeEnum>* _59456_s);
inline jule::Bool _1cac069c6_checkImportSelection(_1e5d7b768_sema* _self_, jule::Ptr<_1e5c8eacc_Token>* _59440_ident, jule::Ptr<_1e5ce0358_Fn>* _59456_s);
inline jule::Bool _1e5d81bd0_checkImportSelectedSelections(_1e5d7b768_sema* _self_, jule::Ptr<_1e5d5b2e7_ImportInfo>* _60850_imp);
inline jule::Bool _1cac0b679_checkImportsAllSelectionsFromCollection(_1e5d7b768_sema* _self_, jule::Slice<jule::Ptr<_1e5da0bcc_Var>>* _65759_s, jule::Ptr<_1e5c8eacc_Token>* _65768_et);
inline jule::Bool _1cac0c812_checkImportsAllSelectionsFromCollection(_1e5d7b768_sema* _self_, jule::Slice<jule::Ptr<_1e5e40a08_TypeAlias>>* _65759_s, jule::Ptr<_1e5c8eacc_Token>* _65768_et);
inline jule::Bool _1cac0e8ad_checkImportsAllSelectionsFromCollection(_1e5d7b768_sema* _self_, jule::Slice<jule::Ptr<_1e5cc5e21_Struct>>* _65759_s, jule::Ptr<_1e5c8eacc_Token>* _65768_et);
inline jule::Bool _1cac127a1_checkImportsAllSelectionsFromCollection(_1e5d7b768_sema* _self_, jule::Slice<jule::Ptr<_1e5ce0358_Fn>>* _65759_s, jule::Ptr<_1e5c8eacc_Token>* _65768_et);
inline jule::Bool _1cac15485_checkImportsAllSelectionsFromCollection(_1e5d7b768_sema* _self_, jule::Slice<jule::Ptr<_1e5d03db6_Trait>>* _65759_s, jule::Ptr<_1e5c8eacc_Token>* _65768_et);
inline jule::Bool _1cac17ba2_checkImportsAllSelectionsFromCollection(_1e5d7b768_sema* _self_, jule::Slice<jule::Ptr<_1e5d065c2_Enum>>* _65759_s, jule::Ptr<_1e5c8eacc_Token>* _65768_et);
inline jule::Bool _1cac1a37a_checkImportsAllSelectionsFromCollection(_1e5d7b768_sema* _self_, jule::Slice<jule::Ptr<_1e5d07ccc_TypeEnum>>* _65759_s, jule::Ptr<_1e5c8eacc_Token>* _65768_et);
inline jule::Bool _1e5d8241c_checkImportAllSelections(_1e5d7b768_sema* _self_, jule::Ptr<_1e5d5b2e7_ImportInfo>* _66741_imp);
inline jule::Bool _1e5d8275d_checkImportSelections(_1e5d7b768_sema* _self_, jule::Ptr<_1e5d5b2e7_ImportInfo>* _68142_imp);
inline jule::Bool _1e5d82a9e_isUseAliasDuplication(_1e5d7b768_sema* _self_, jule::Ptr<_1e5d5b2e7_ImportInfo>* _69038_imp);
inline jule::Bool _1e5d82de0_checkImport(_1e5d7b768_sema* _self_, jule::Ptr<_1e5d5b2e7_ImportInfo>* _70632_imp);
inline void _1e5d830dd_checkImports(_1e5d7b768_sema* _self_);
inline void _1e5d832db_implFileImpls(jule::Ptr<_1e5d7b768_sema> _self_);
inline void _1e5d834d9_implImpls(jule::Ptr<_1e5d7b768_sema> _self_);
inline void _1e5d836d7_checkEnums(jule::Ptr<_1e5d7b768_sema> _self_);
inline void _1e5d838d5_checkFileInherits(jule::Ptr<_1e5d7b768_sema> _self_);
inline void _1e5d83ad3_checkInherits(jule::Ptr<_1e5d7b768_sema> _self_);
inline _1e5e53be7_typeChecker _1e5d84089_typeChecker(jule::Ptr<_1e5d7b768_sema> _self_, jule::Trait _79532_l, jule::Slice<jule::Ptr<_1e5e40a08_TypeAlias>> _79547_generics, jule::Ptr<_1e5e52c07_referencer> _7967_referencer);
inline jule::Ptr<_1e5e417ea_TypeKind> _1e5d845ea_buildTypeWithRefers(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5ca5087_TypeDecl>* _82241_t, jule::Trait _82264_l, jule::Slice<jule::Ptr<_1e5e40a08_TypeAlias>> _8237_generics, jule::Ptr<_1e5e52c07_referencer> _82335_referencer);
inline jule::Bool _1e5d84b5b_checkTypeWithRefers(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5e4900b_TypeSymbol>* _82941_t, jule::Trait _82961_l, jule::Slice<jule::Ptr<_1e5e40a08_TypeAlias>> _8307_generics, jule::Ptr<_1e5e52c07_referencer> _83035_referencer);
inline jule::Ptr<_1e5d318a5_constraintChecker> _1e5d84de2_constraintChecker(jule::Ptr<_1e5d7b768_sema> _self_);
inline jule::Bool _1e5d852dd_checkType(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5e4900b_TypeSymbol>* _84431_t, jule::Trait _84451_l);
inline jule::Ptr<_1e5e417ea_TypeKind> _1e5d85794_checkTypeRefers(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5ca5087_TypeDecl>* _84937_t, jule::Trait _84960_l, jule::Ptr<_1e5ce65a1_ReferenceStack> _84975_refers);
inline jule::Ptr<_1e5e417ea_TypeKind> _1e5d85c4a_buildTypeWithGenerics(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5ca5087_TypeDecl>* _86143_t, jule::Slice<jule::Ptr<_1e5e40a08_TypeAlias>> _8627_generics, jule::Ptr<_1e5ce65a1_ReferenceStack> _86235_refers);
inline jule::Ptr<_1e5e417ea_TypeKind> _1e5d863cc_selectType(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5ca5087_TypeDecl>* _87932_t);
inline jule::Ptr<_1e5e0a93a_eval> _1e5d86883_evalpd(jule::Ptr<_1e5d7b768_sema> _self_, jule::Trait _89127_l, jule::Ptr<_1e5e417ea_TypeKind> _89142_p, jule::Ptr<_1e5da0bcc_Var> _89160_owner);
inline jule::Ptr<_1e5e0a93a_eval> _1e5d86c7e_evalp(jule::Ptr<_1e5d7b768_sema> _self_, jule::Trait _90626_l, jule::Ptr<_1e5e417ea_TypeKind> _90641_p);
inline jule::Ptr<_1e5e0a93a_eval> _1e5d870c0_eval(jule::Ptr<_1e5d7b768_sema> _self_, jule::Trait _91125_l);
inline jule::Bool _1e5d876db_checkAssignType(jule::Ptr<_1e5d7b768_sema> _self_, jule::Bool _91532_destIsRef, jule::Ptr<_1e5e417ea_TypeKind>* _91554_dest, jule::Ptr<_1e5e08c13_Data>* _9168_d, jule::Ptr<_1e5c8eacc_Token> _91622_errorToken, jule::Ptr<_1e5ce65a1_ReferenceStack> _91646_refers);
inline jule::Bool _1e5d87b92__checkTypeCompatibility(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5e417ea_TypeKind>* _95845_dest, jule::Ptr<_1e5e417ea_TypeKind>* _95867_src, jule::Ptr<_1e5c8eacc_Token> _9597_errorToken);
inline jule::Bool _1e5d88148_checkTypeCompatibility(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5e417ea_TypeKind>* _97644_dest, jule::Ptr<_1e5e417ea_TypeKind>* _9778_src, jule::Ptr<_1e5c8eacc_Token>* _97729_errorToken);
inline void _1e5d88566_pushCompatiblityError(_1e5d7b768_sema* _self_, jule::Ptr<_1e5e417ea_TypeKind>* _98542_dest, jule::Ptr<_1e5e08c13_Data>* _98564_src, jule::Ptr<_1e5c8eacc_Token>* _9868_errorToken);
inline jule::Bool _1e5d88a1c_checkTypeCompatibility1(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5e417ea_TypeKind>* _100345_dest, jule::Ptr<_1e5e08c13_Data>* _100367_src, jule::Ptr<_1e5c8eacc_Token>* _10048_errorToken);
inline jule::Ptr<_1e5e417ea_TypeKind> _1e5d88ec3_buildNonGenericTypeKind(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5ca5087_TypeDecl>* _101845_ast, jule::Slice<jule::Ptr<_1e5cb2292_GenericDecl>>* _10198_generics, jule::Slice<jule::Ptr<_1e5e417ea_TypeKind>>* _101944_ignored);
inline jule::Bool _1e5d893be_buildFnNonGenericTypeKinds(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5ce3416_FnIns> _103047_f, jule::Slice<jule::Ptr<_1e5e417ea_TypeKind>>* _103063_ignored);
inline jule::Ptr<_1e5ce3416_FnIns> _1e5d89710_getTraitCheckFnKind(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5ce0358_Fn>* _105341_f);
inline jule::Bool _1e5d89bb6_checkConstraintsFn(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5ce3416_FnIns>* _108240_f, jule::Ptr<_1e5c8eacc_Token>* _108256_et, jule::Ptr<_1e5ce3416_FnIns> _108272_exist);
inline jule::Bool _1e5d8a16c_checkConstraintsStruct(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5cc8c7b_StructIns>* _109644_s, jule::Ptr<_1e5c8eacc_Token>* _109664_et, jule::Ptr<_1e5cc8c7b_StructIns> _109680_exist);
inline jule::Bool _1e5d8a568_basicFnEnvironment(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5ce3416_FnIns>* _111340_f, jule::Fn<jule::Bool,jule::Ptr<_1e5d7b768_sema>*> _111351_algo);
inline jule::Bool _1e5d8a964_fnEnvironment(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5ce3416_FnIns>* _113335_f, jule::Fn<jule::Bool,jule::Ptr<_1e5d7b768_sema>*,jule::Slice<jule::Ptr<_1e5e40a08_TypeAlias>>*> _113346_algo);
inline void _1e5d8ac1c_checkFnParamKind(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5ce22b1_ParamIns>* _114538_p);
inline jule::Bool _1e5d8b05d_reloadFnInsTypes(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5ce3416_FnIns> _115237_f);
inline jule::Bool _1e5d8b514_checkRefValidityForInitExpr(jule::Ptr<_1e5d7b768_sema> _self_, jule::Bool _119244_leftMut, jule::Ptr<_1e5e08c13_Data>* _119264_d, jule::Ptr<_1e5c8eacc_Token>* _119279_errorToken);
inline jule::Bool _1e5d8b855_isMutRiskyStruct(_1e5d7b768_sema* _self_, jule::Ptr<_1e5cc8c7b_StructIns>* _120929_s);
inline jule::Bool _1e5d8be71_checkValidityForInitExpr(jule::Ptr<_1e5d7b768_sema> _self_, jule::Bool _123641_leftMut, jule::Bool _123656_leftRef, jule::Ptr<_1e5e417ea_TypeKind>* _12374_leftKind, jule::Ptr<_1e5e08c13_Data>* _123730_d, jule::Ptr<_1e5c8eacc_Token>* _123745_errorToken);
inline jule::Bool _1e5d8c36c_checkTypeAliasDeclKind(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5e40a08_TypeAlias>* _126444_ta, jule::Trait _126464_l);
inline void _1e5d8c6d0_checkTypeAliasDecl(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5e40a08_TypeAlias>* _128740_ta, jule::Trait _128760_l);
inline void _1e5d8c988_checkTypeAliasDeclDup(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5e40a08_TypeAlias>* _129543_ta);
inline jule::Bool _1e5d8cc1e_checkTypeAliasDecls(jule::Ptr<_1e5d7b768_sema> _self_);
inline void _1caccbc77_checkEnumItemsDup(_1e5d7b768_sema* _self_, jule::Slice<jule::Ptr<_1e5d05a55_EnumItem>> _131936_items);
inline void _1cacd9dea_checkEnumItemsDup(_1e5d7b768_sema* _self_, jule::Slice<jule::Ptr<_1e5d07705_TypeEnumItem>> _131936_items);
inline void _1e5d8d280_checkEnumItemsStr(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5d065c2_Enum>* _133939_e);
inline void _1cacaac34_checkEnumItemInt(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5e0a93a_eval>* _136643_eval, jule::Ptr<_1e5d065c2_Enum>* _136661_e, jule::Ptr<_1e5e49913_Prim>* _136672_prim, jule::Ptr<_1e5d05a55_EnumItem>* _136690_item, jule::U64* _1366112_n);
inline void _1cacbb7b1_checkEnumItemInt(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5e0a93a_eval>* _136643_eval, jule::Ptr<_1e5d065c2_Enum>* _136661_e, jule::Ptr<_1e5e49913_Prim>* _136672_prim, jule::Ptr<_1e5d05a55_EnumItem>* _136690_item, jule::I64* _1366112_n);
inline void _1caca6d95_checkEnumItemsInt1(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5e49913_Prim>* _140241_prim, jule::Ptr<_1e5d065c2_Enum>* _140259_e);
inline void _1caca7181_checkEnumItemsInt1(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5e49913_Prim>* _140241_prim, jule::Ptr<_1e5d065c2_Enum>* _140259_e);
inline void _1e5d8de2e_checkEnumItemsInt(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5d065c2_Enum>* _143739_e);
inline void _1e5d8e1d7_checkEnumDecl(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5d065c2_Enum>* _144735_e);
inline void _1e5d8e490_checkTypeEnumDecl(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5d07ccc_TypeEnum>* _148839_e);
inline jule::Bool _1e5d8e726_checkEnumDecls(jule::Ptr<_1e5d7b768_sema> _self_);
inline jule::Bool _1e5d8e9ac_checkTypeEnumDecls(jule::Ptr<_1e5d7b768_sema> _self_);
inline jule::Bool _1e5d8eced_checkDeclGenerics(_1e5d7b768_sema* _self_, jule::Slice<jule::Ptr<_1e5cb2292_GenericDecl>>* _155134_generics);
inline jule::Bool _1e5d9013e_checkFnDeclParamsDup(_1e5d7b768_sema* _self_, jule::Ptr<_1e5ce0358_Fn>* _157837_f);
inline jule::Bool _1e5d90480_checkFnDeclResultDup(_1e5d7b768_sema* _self_, jule::Ptr<_1e5ce0358_Fn>* _161537_f);
inline jule::Bool _1e5d907c1_checkFnVariadicParam(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5ce0358_Fn>* _166042_f);
inline void _1e5d90a79_checkFnDeclPrototype(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5ce0358_Fn>* _167342_f);
inline jule::Bool _1e5d91030_catchTraitInheritCycle(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5d03db6_Trait> _169539_t1, jule::Ptr<_1e5d03db6_Trait> _169555_t2, _224497295_StrBuilder* _169572_message);
inline jule::Bool _1e5d91371__checkTraitDeclInherits(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5d03db6_Trait>* _171445_t);
inline void _1e5d91629_checkTraitDeclInherits(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5d03db6_Trait>* _175544_t);
inline void _1e5d918d2_checkTraitDeclMethod(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5ce0358_Fn>* _178042_f);
inline void _1e5d91b8a_checkTraitDeclMethods(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5d03db6_Trait>* _179443_t);
inline void _1e5d91e43_checkTraitDecl(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5d03db6_Trait>* _183036_t);
inline jule::Bool _1e5d921c9_checkTraitDecls(jule::Ptr<_1e5d7b768_sema> _self_);
inline jule::Bool _1e5d925c5_checkTraitImplMethods(_1e5d7b768_sema* _self_, jule::Ptr<_1e5d03db6_Trait>* _185442_base, jule::Ptr<_1e5d33c09_Impl>* _185457_ipl);
inline jule::Bool _1e5d929c1_implToStruct(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5cc5e21_Struct>* _186534_dest, jule::Ptr<_1e5d33c09_Impl>* _186554_ipl);
inline void _1e5d92c79_implTrait(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5d33c09_Impl>* _190731_decl);
inline void _1e5d93032_implStruct(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5d33c09_Impl>* _195032_decl);
inline void _1e5d932da_implImpl(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5d33c09_Impl>* _197430_decl);
inline void _1e5d9364d_checkVarDecl(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5da0bcc_Var>* _198534_decl, jule::Trait _198550_l);
inline void _1e5d93906_checkGlobalVarDecl(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5da0bcc_Var>* _203140_decl);
inline jule::Bool _1e5d93b8c_checkGlobalDecls(jule::Ptr<_1e5d7b768_sema> _self_);
inline jule::Bool _1e5d94088_checkStructTraitImpl(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5cc5e21_Struct>* _205942_strct, jule::Ptr<_1e5d03db6_Trait>* _205963_trt);
inline jule::Bool _1e5d943c9_checkStructImpls(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5cc5e21_Struct>* _208538_s);
inline jule::Bool _1e5d9471a_checkStructFields(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5cc5e21_Struct>* _209339_st);
inline void _1e5d949c3_checkStructDecl(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5cc5e21_Struct>* _211037_s);
inline jule::Bool _1e5d94c59_checkStructDecls(jule::Ptr<_1e5d7b768_sema> _self_);
inline void _1e5d95012_checkAnonFuncDecl(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5ce0358_Fn>* _214039_f);
inline void _1e5d952ba_checkFuncDecl(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5ce0358_Fn>* _214535_f);
inline jule::Bool _1e5d9560b_checkFuncDeclsBy(jule::Ptr<_1e5d7b768_sema> _self_, jule::Slice<jule::Ptr<_1e5ce0358_Fn>>* _216738_funcs);
inline jule::Bool _1e5d95892_checkFuncDecls(jule::Ptr<_1e5d7b768_sema> _self_);
inline void _1e5d95cb0_pushCycleError(_1e5d7b768_sema* _self_, jule::Str* _218327_st1, jule::Str* _218338_st2, _224497295_StrBuilder* _218353_message);
inline void _1e5d96464_checkPackageDecls(jule::Ptr<_1e5d7b768_sema> _self_);
inline void _1e5d967c7_checkDataForTypeInference(_1e5d7b768_sema* _self_, jule::Ptr<_1e5e08c13_Data>* _224342_d, jule::Ptr<_1e5c8eacc_Token>* _224353_err_token);
inline void _1e5d96a80_checkVarValue(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5da0bcc_Var>* _225535_v);
inline void _1e5d96de3_evalVarValue(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5da0bcc_Var>* _230834_decl, jule::Trait _230850_l);
inline void _1e5d97256_checkVar(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5da0bcc_Var>* _232530_decl, jule::Trait _232546_l);
inline void _1e5d97454_checkGlobals(jule::Ptr<_1e5d7b768_sema> _self_);
inline jule::Ptr<_1e5ce3416_FnIns> _1e5d97850_readyToCheckFn(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5cc8c7b_StructIns>* _234936_s, jule::Ptr<_1e5ce0358_Fn>* _234956_f);
inline __jule_tuple_bool__jule_tuple_bool _1e5d97c4b_checkGenericFn(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5ce3416_FnIns>* _236536_f, jule::Ptr<_1e5c8eacc_Token>* _236552_et);
inline void _1e5d980ae_checkTypeMethod(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5cc8c7b_StructIns>* _238837_s, jule::Ptr<_1e5ce0358_Fn>* _238857_f);
inline jule::Ptr<_1e5ce3416_FnIns> _1e5d98565_checkStructInsOp(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5cc8c7b_StructIns>* _240138_s, jule::Ptr<_1e5ce0358_Fn>* _240158_f, jule::Fn<jule::Bool,jule::Ptr<_1e5ce0358_Fn>> _240166_p);
inline jule::Bool _1e5d98961_checkStructEnv(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5cc8c7b_StructIns>* _241136_s, jule::Ptr<_1e5c8eacc_Token> _241155_errorToken);
inline jule::Bool _1e5d98d5c_precheckStructIns(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5cc8c7b_StructIns>* _250839_s, jule::Ptr<_1e5c8eacc_Token> _250858_errorToken);
inline void _1e5d99115_checkStructIns(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5cc8c7b_StructIns>* _254536_s);
inline void _1e5d993bd_checkTypeStruct(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5cc5e21_Struct>* _255137_s);
inline void _1e5d995bb_checkStructTypes(jule::Ptr<_1e5d7b768_sema> _self_);
inline void _1e5d99874_checkStructInsOperators(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5cc8c7b_StructIns> _257544_s);
inline void _1e5d99b2c_precheckStructType(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5cc5e21_Struct>* _263940_s);
inline void _1e5d99d2a_precheckStructTypes(jule::Ptr<_1e5d7b768_sema> _self_);
inline void _1e5d9a0d3_checkRets(_1e5d7b768_sema* _self_, jule::Ptr<_1e5ce3416_FnIns>* _266530_f);
inline void _1e5d9a446_checkFnInsSc(_1e5d7b768_sema* _self_, jule::Ptr<_1e5ce3416_FnIns>* _267633_f, jule::Ptr<_1e5d40771_scopeChecker>* _267649_sc);
inline void _1e5d9a7a9_checkFnInsCaller(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5ce3416_FnIns>* _268938_f, jule::Ptr<_1e5c8eacc_Token> _268953_caller);
inline void _1e5d9aa62_checkFnIns(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5ce3416_FnIns>* _271132_f);
inline void _1e5d9ad1a_checkFunc(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5ce0358_Fn>* _271531_f);
inline void _1e5d9b0c3_checkTestFn(_1e5d7b768_sema* _self_, jule::Ptr<_1e5ce3416_FnIns>* _273032_f);
inline void _1e5d9b37b_precheckFunc(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5ce0358_Fn>* _276334_f);
inline void _1e5d9b579_precheckFuncs(jule::Ptr<_1e5d7b768_sema> _self_);
inline void _1e5d9b777_checkFuncs(jule::Ptr<_1e5d7b768_sema> _self_);
inline void _1e5d9b975_checkPackageTypes(jule::Ptr<_1e5d7b768_sema> _self_);
inline void _1e5d9bb73_setFileSemaFields(jule::Ptr<_1e5d7b768_sema> _self_);
inline void _1e5d9bd71_setSemaFields(jule::Ptr<_1e5d7b768_sema> _self_);
inline void _1e5d9c129_check(jule::Ptr<_1e5d7b768_sema> _self_, jule::Slice<jule::Ptr<_1e5e03548_SymbolTable>>* _284127_files);
inline _1e5d9c525_missingRetChecker static__1e5d9c921_new(void);
inline jule::Bool _1e5d9cc2e_checkConditional(_1e5d9c525_missingRetChecker* _self_, jule::Ptr<_1e5d3911b_Conditional> _288932_c);
inline jule::Bool _1e5d9d070_checkMatch(_1e5d9c525_missingRetChecker* _self_, jule::Ptr<_1e5d3cc13_Match> _290126_m);
inline jule::Bool _1e5d9d46b_checkInfIter(_1e5d9c525_missingRetChecker* _self_, jule::Uintptr _292724_it, jule::Ptr<_1e5d384d3_Scope>* _292742_s);
inline jule::Bool _1e5d9d7ac_checkScope(_1e5d9c525_missingRetChecker* _self_, jule::Ptr<_1e5d384d3_Scope> _294526_s);
inline jule::Bool _1e5d9daed_check(_1e5d9c525_missingRetChecker* _self_, jule::Ptr<_1e5d384d3_Scope> _300021_s);
inline jule::Bool _1e5da10d9_IsInitialized(_1e5da0bcc_Var* _self_);
inline jule::Bool _1e5da1370_IsTypeInferred(_1e5da0bcc_Var* _self_);
inline jule::Bool _1e5da1606_untypedConstant(_1e5da0bcc_Var* _self_);
inline jule::Bool static__1e5da22c7_Dispose(jule::Ptr<_1e5ce0358_Fn> _1020_f);
inline jule::Bool static__1e5da2591_Str(jule::Ptr<_1e5ce0358_Fn> _2416_f);
inline jule::Bool static__1e5da2915_logical(jule::Ptr<_1e5ce0358_Fn>* _4621_f, jule::Str _4629_ident);
inline jule::Bool static__1e5da2bce_Eq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5ce0358_Fn> _7215_f);
inline jule::Bool static__1e5da2e98_Gt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5ce0358_Fn> _7715_f);
inline jule::Bool static__1e5da3262_GtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5ce0358_Fn> _8217_f);
inline jule::Bool static__1e5da352b_Lt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5ce0358_Fn> _8715_f);
inline jule::Bool static__1e5da37e5_LtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5ce0358_Fn> _9217_f);
inline jule::Bool static__1e5da3b69_result(jule::Ptr<_1e5ce0358_Fn>* _9620_f, jule::Str _9628_ident);
inline jule::Bool static__1e5da3e33_Shl(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5ce0358_Fn> _11816_f);
inline jule::Bool static__1e5da41ec_Shr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5ce0358_Fn> _12316_f);
inline jule::Bool static__1e5da44b6_Add(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5ce0358_Fn> _12816_f);
inline jule::Bool static__1e5da4780_Sub(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5ce0358_Fn> _13316_f);
inline jule::Bool static__1e5da4a49_Div(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5ce0358_Fn> _13816_f);
inline jule::Bool static__1e5da4d13_Mul(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5ce0358_Fn> _14316_f);
inline jule::Bool static__1e5da50cc_Mod(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5ce0358_Fn> _14816_f);
inline jule::Bool static__1e5da5396_BitAnd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5ce0358_Fn> _15319_f);
inline jule::Bool static__1e5da5660_BitOr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5ce0358_Fn> _15818_f);
inline jule::Bool static__1e5da5929_BitXor(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5ce0358_Fn> _16319_f);
inline jule::Bool static__1e5da5c9d_unary(jule::Ptr<_1e5ce0358_Fn>* _16719_f, jule::Str _16727_ident);
inline jule::Bool static__1e5da6067_Neg(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5ce0358_Fn> _18716_f);
inline jule::Bool static__1e5da6331_Pos(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5ce0358_Fn> _19216_f);
inline jule::Bool static__1e5da65ea_BitNot(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5ce0358_Fn> _19719_f);
inline jule::Bool static__1e5da696e_assign(jule::Ptr<_1e5ce0358_Fn>* _20120_f, jule::Str _20128_ident);
inline jule::Bool static__1e5da6c38_AddAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5ce0358_Fn> _22122_f);
inline jule::Bool static__1e5da7002_SubAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5ce0358_Fn> _22622_f);
inline jule::Bool static__1e5da72bb_DivAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5ce0358_Fn> _23122_f);
inline jule::Bool static__1e5da7585_MulAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5ce0358_Fn> _23622_f);
inline jule::Bool static__1e5da784e_ModAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5ce0358_Fn> _24122_f);
inline jule::Bool static__1e5da7b18_ShlAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5ce0358_Fn> _24622_f);
inline jule::Bool static__1e5da7dd2_ShrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5ce0358_Fn> _25122_f);
inline jule::Bool static__1e5da819b_BitOrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5ce0358_Fn> _25624_f);
inline jule::Bool static__1e5da8465_BitAndAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5ce0358_Fn> _26125_f);
inline jule::Bool static__1e5da872e_BitXorAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5ce0358_Fn> _26625_f);
inline void _1e5de09ca_pushErr(_1e5de049c_typeCompatibilityChecker* _self_, jule::Str _11923_fmt, jule::Slice<jule::Any> _11936_args);
inline jule::Bool _1e5de0c61_checkTrait(_1e5de049c_typeCompatibilityChecker* _self_);
inline jule::Bool _1e5de0ee7_checkPtr(_1e5de049c_typeCompatibilityChecker* _self_);
inline jule::Bool _1e5de127d_checkPrim(_1e5de049c_typeCompatibilityChecker* _self_);
inline jule::Bool _1e5de1679_typeEnum(_1e5de049c_typeCompatibilityChecker* _self_, jule::Ptr<_1e5d07ccc_TypeEnum>* _19925_e, jule::Ptr<_1e5e417ea_TypeKind>* _19944_t2);
inline jule::Bool _1e5de1910_checkTypeEnum(_1e5de049c_typeCompatibilityChecker* _self_);
inline jule::Bool _1e5de1b96_check(_1e5de049c_typeCompatibilityChecker* _self_);
inline void _1e5de27e0_pushErr(_1e5de2328_assignTypeChecker* _self_, jule::Str _25623_fmt, jule::Slice<jule::Any> _25636_args);
inline jule::Bool _1e5de2a76_checkValidity(_1e5de2328_assignTypeChecker* _self_);
inline jule::Bool _1e5de2d0c_checkConst(_1e5de2328_assignTypeChecker* _self_);
inline jule::Bool _1e5de3093_checkCompatibility(_1e5de2328_assignTypeChecker* _self_);
inline jule::Bool _1e5de3329_check(_1e5de2328_assignTypeChecker* _self_);
inline jule::Bool _1cb103510_annotateConstraintElem(_1e5de3bed_dynamicTypeAnnotation* _self_, jule::Ptr<_1e5e417ea_TypeKind>* _35846_k);
inline jule::Bool _1cb1037a7_annotateConstraintElem(_1e5de3bed_dynamicTypeAnnotation* _self_, jule::Ptr<_1e5e417ea_TypeKind>* _35846_k);
inline jule::Bool _1cb10a6b0_annotateConstraintElem(_1e5de3bed_dynamicTypeAnnotation* _self_, jule::Ptr<_1e5e417ea_TypeKind>* _35846_k);
inline jule::Bool _1cb111331_annotateConstraintElem(_1e5de3bed_dynamicTypeAnnotation* _self_, jule::Ptr<_1e5e417ea_TypeKind>* _35846_k);
inline jule::Bool _1e5de4627_annotateConstraintMap(_1e5de3bed_dynamicTypeAnnotation* _self_, jule::Ptr<_1e5e417ea_TypeKind>* _37842_k);
inline jule::Bool _1e5de4968_annotateConstraintTup(_1e5de3bed_dynamicTypeAnnotation* _self_, jule::Ptr<_1e5e417ea_TypeKind>* _39342_k);
inline jule::Bool _1e5de4ca9_annotateConstraintFn(_1e5de3bed_dynamicTypeAnnotation* _self_, jule::Ptr<_1e5e417ea_TypeKind>* _41041_k);
inline jule::Bool _1e5de50ea_annotateConstraintIdent(_1e5de3bed_dynamicTypeAnnotation* _self_, jule::Ptr<_1e5e417ea_TypeKind>* _43144_k);
inline jule::Bool _1e5de543b_annotateConstraint(_1e5de3bed_dynamicTypeAnnotation* _self_, jule::Ptr<_1e5e417ea_TypeKind>* _46039_k);
inline void _1e5de579e_pushGeneric(_1e5de3bed_dynamicTypeAnnotation* _self_, jule::Ptr<_1e5e417ea_TypeKind>* _48532_k, jule::I64 _48546_i);
inline jule::Bool _1e5de5ae0_annotatePrim(_1e5de3bed_dynamicTypeAnnotation* _self_, jule::Ptr<_1e5e417ea_TypeKind>* _50040_k);
inline jule::Bool _1e5de5e31_annotateArr(_1e5de3bed_dynamicTypeAnnotation* _self_, jule::Ptr<_1e5e417ea_TypeKind>* _50439_k);
inline jule::Bool _1e5de6272_annotateSlc(_1e5de3bed_dynamicTypeAnnotation* _self_, jule::Ptr<_1e5e417ea_TypeKind>* _51439_k);
inline jule::Bool _1e5de666d_checkMapKey(_1e5de3bed_dynamicTypeAnnotation* _self_, jule::Ptr<_1e5e417ea_TypeKind>* _52438_k, jule::Ptr<_1e5e417ea_TypeKind>* _52458_ck);
inline jule::Bool _1e5de69ae_annotateMap(_1e5de3bed_dynamicTypeAnnotation* _self_, jule::Ptr<_1e5e417ea_TypeKind>* _53239_k);
inline jule::Bool _1e5de6d00_annotateFn(_1e5de3bed_dynamicTypeAnnotation* _self_, jule::Ptr<_1e5e417ea_TypeKind>* _54238_k);
inline jule::Bool _1e5de7141_annotatePtr(_1e5de3bed_dynamicTypeAnnotation* _self_, jule::Ptr<_1e5e417ea_TypeKind>* _57139_k);
inline jule::Bool _1e5de7482_annotateSptr(_1e5de3bed_dynamicTypeAnnotation* _self_, jule::Ptr<_1e5e417ea_TypeKind>* _58140_k);
inline jule::Bool _1e5de77c3_annotateStruct(_1e5de3bed_dynamicTypeAnnotation* _self_, jule::Ptr<_1e5e417ea_TypeKind>* _59142_k);
inline jule::Bool _1e5de7b14_annotateAny(_1e5de3bed_dynamicTypeAnnotation* _self_, jule::Ptr<_1e5e417ea_TypeKind>* _61339_k);
inline jule::Bool _1e5de7e55_annotateKind(_1e5de3bed_dynamicTypeAnnotation* _self_, jule::Ptr<_1e5e417ea_TypeKind>* _63440_k);
inline jule::Bool _1e5de81db_annotate(_1e5de3bed_dynamicTypeAnnotation* _self_);
inline void _1e5de90ee_pushErrToken(_1e5de8a5a_fnCallArgChecker* _self_, jule::Ptr<_1e5c8eacc_Token> _67928_token, jule::Str _67943_fmt, jule::Slice<jule::Any> _67956_args);
inline void _1e5de9462_pushErr(_1e5de8a5a_fnCallArgChecker* _self_, jule::Str _68323_fmt, jule::Slice<jule::Any> _68336_args);
inline jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>> _1e5de96e8_getParams(_1e5de8a5a_fnCallArgChecker* _self_);
inline jule::Bool _1e5de9a39_checkCounts(_1e5de8a5a_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>* _69628_params);
inline jule::Bool _1e5de9ee0_checkArg(_1e5de8a5a_fnCallArgChecker* _self_, jule::Ptr<_1e5ce22b1_ParamIns>* _72829_p, jule::Ptr<_1e5e08c13_Data>* _72848_arg, jule::Ptr<_1e5c8eacc_Token>* _72865_errorToken);
inline jule::Bool _1e5dea3db_push(_1e5de8a5a_fnCallArgChecker* _self_, jule::Ptr<_1e5ce22b1_ParamIns>* _75725_p, jule::Ptr<_1e5ca93bb_Expr> _75743_arg);
inline jule::Bool _1e5dea7d7_pushVariadic(_1e5de8a5a_fnCallArgChecker* _self_, jule::Ptr<_1e5ce22b1_ParamIns>* _78133_p, jule::I64 _78151_i);
inline jule::Bool _1e5deab28_checkArgs(_1e5de8a5a_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>* _86230_params);
inline jule::Bool _1e5deadae_checkDynamicTypeAnnotation(_1e5de8a5a_fnCallArgChecker* _self_);
inline jule::Bool _1e5deb145_check(_1e5de8a5a_fnCallArgChecker* _self_);
inline void _1e5dec025_pushErr(_1e5deb992_structLitChecker* _self_, jule::Ptr<_1e5c8eacc_Token> _94223_token, jule::Str _94238_fmt, jule::Slice<jule::Any> _94251_args);
inline void _1e5dec388_pushSuggestion(_1e5deb992_structLitChecker* _self_, jule::Str _94730_fmt, jule::Slice<jule::Any> _94743_args);
inline void _1e5dec7a6_pushMatch(_1e5deb992_structLitChecker* _self_, jule::Ptr<_1e5cc81cb_FieldIns>* _95130_f, jule::Ptr<_1e5e08c13_Data>* _95149_d, jule::Ptr<_1e5c8eacc_Token>* _95164_errorToken);
inline void _1e5decb19_checkPair(_1e5deb992_structLitChecker* _self_, jule::Ptr<_1e5cadada_FieldExprPair>* _97030_pair, jule::Slice<jule::Ptr<_1e5ca93bb_Expr>>* _97057_exprs);
inline jule::Bool _1e5dece5a_readyExprs(_1e5deb992_structLitChecker* _self_, jule::Slice<jule::Ptr<_1e5ca93bb_Expr>>* _100931_exprs);
inline void _1e5ded213_check(_1e5deb992_structLitChecker* _self_, jule::Slice<jule::Ptr<_1e5ca93bb_Expr>>* _103326_exprs);
inline jule::Ptr<_1e5da0bcc_Var> _1e5dedc91_buildVar(_1e5ded774_rangeChecker* _self_, jule::Ptr<_1e5cb7e02_VarDecl>* _110925_decl);
inline void _1e5dede8e_setSizeKey(_1e5ded774_rangeChecker* _self_);
inline void _1e5dee3ac_checkRangeExprValidity(_1e5ded774_rangeChecker* _self_, jule::Ptr<_1e5e08c13_Data>* _112843_d, jule::Ptr<_1e5da0bcc_Var>* _112854_key, jule::Ptr<_1e5e417ea_TypeKind>* _112870_k);
inline void _1e5dee5aa_checkSlice(_1e5ded774_rangeChecker* _self_);
inline void _1e5dee7a8_checkArray(_1e5ded774_rangeChecker* _self_);
inline void _1e5dee9a6_checkMapKeyA(_1e5ded774_rangeChecker* _self_);
inline void _1e5deeba4_checkMapKeyB(_1e5ded774_rangeChecker* _self_);
inline void _1e5deeda2_checkMap(_1e5ded774_rangeChecker* _self_);
inline void _1e5e000a0_checkStr(_1e5ded774_rangeChecker* _self_);
inline void _1e5e0029d_checkComptime(_1e5ded774_rangeChecker* _self_);
inline jule::Bool _1e5e00534_checkComptimeRange(_1e5ded774_rangeChecker* _self_);
inline jule::Bool _1e5e007ba_check(_1e5ded774_rangeChecker* _self_);
inline void _1e5e01447_prepareTypes(_1e5e00ed5_retTypeChecker* _self_);
inline void _1e5e01700_prepareExprs(_1e5e00ed5_retTypeChecker* _self_, jule::Ptr<_1e5ca93bb_Expr>* _128733_e);
inline void _1e5e018ed_checkExprs(_1e5e00ed5_retTypeChecker* _self_);
inline jule::Bool _1e5e01b84_tryFuncMultiRetForward(_1e5e00ed5_retTypeChecker* _self_);
inline jule::Bool _1e5e01ec5_check(_1e5e00ed5_retTypeChecker* _self_, jule::Ptr<_1e5ca93bb_Expr>* _138926_e);
inline jule::Ptr<_1e5d5b2e7_ImportInfo> _1e5e03a65_SelectPackage(_1e5e03548_SymbolTable* _self_, jule::Fn<jule::Bool,jule::Ptr<_1e5d5b2e7_ImportInfo>> _2729_selector);
inline jule::Ptr<_1e5da0bcc_Var> _1e5e03e61_FindVar(_1e5e03548_SymbolTable* _self_, jule::Str _4123_ident, jule::Bool _4135_binded);
inline jule::Ptr<_1e5e40a08_TypeAlias> _1e5e0435c_FindTypeAlias(_1e5e03548_SymbolTable* _self_, jule::Str _4729_ident, jule::Bool _4741_binded);
inline jule::Ptr<_1e5cc5e21_Struct> _1e5e04758_FindStruct(_1e5e03548_SymbolTable* _self_, jule::Str _5326_ident, jule::Bool _5338_binded);
inline jule::Ptr<_1e5ce0358_Fn> _1e5e04b54_FindFn(_1e5e03548_SymbolTable* _self_, jule::Str _6422_ident, jule::Bool _6434_binded);
inline jule::Ptr<_1e5d03db6_Trait> _1e5e04e95_FindTrait(_1e5e03548_SymbolTable* _self_, jule::Str _7525_ident);
inline jule::Ptr<_1e5d065c2_Enum> _1e5e052d6_FindEnum(_1e5e03548_SymbolTable* _self_, jule::Str _8624_ident);
inline jule::Ptr<_1e5d07ccc_TypeEnum> _1e5e05627_FindTypeEnum(_1e5e03548_SymbolTable* _self_, jule::Str _9728_ident);
inline jule::I64 _1e5e05ade_findVar1(_1e5e03548_SymbolTable* _self_, jule::Ptr<_1e5da0bcc_Var>* _10825_v);
inline jule::Ptr<_1e5da0bcc_Var> _1e5e06095_findVar(_1e5e03548_SymbolTable* _self_, jule::Str* _11724_ident, jule::Bool _11736_binded, jule::Bool _11750_reverse);
inline jule::Ptr<_1e5e40a08_TypeAlias> _1e5e0654b_findTypeAlias(_1e5e03548_SymbolTable* _self_, jule::Str* _13630_ident, jule::Bool _13642_binded, jule::Bool _13656_reverse);
inline jule::Any _1e5e06947_defByIdent(_1e5e03548_SymbolTable* _self_, jule::Str* _15727_ident, jule::Bool _15739_binded);
inline jule::Bool _1e5e06ded_isDuplicatedIdent(_1e5e03548_SymbolTable* _self_, jule::Uintptr _21029_itself, jule::Str* _21047_ident, jule::Bool _21059_binded);
inline jule::Bool _1e5e09131_IsNil(_1e5e08c13_Data* _self_);
inline jule::Bool _1e5e093b7_IsVoid(_1e5e08c13_Data* _self_);
inline jule::Bool _1e5e0964d_IsConst(_1e5e08c13_Data* _self_);
inline jule::Bool _1e5e0998e_GoodOperand(_1e5e08c13_Data* _self_, jule::Ptr<_1e5e08c13_Data>* _10628_other);
inline void _1e5e0aebd_pushErr(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5c8eacc_Token> _13723_token, jule::Str _13738_fmt, jule::Slice<jule::Any> _13751_args);
inline void _1e5e0b331_pushSuggestion(_1e5e0a93a_eval* _self_, jule::Str _14230_fmt, jule::Slice<jule::Any> _14243_args);
inline void _1e5e0b52e_allowBuiltin(_1e5e0a93a_eval* _self_);
inline void _1e5e0b72c_disallowBuiltin(_1e5e0a93a_eval* _self_);
inline jule::Bool _1e5e0b9b3_isUnsafe(_1e5e0a93a_eval* _self_);
inline jule::Bool _1e5e0bc49_isGlobal(_1e5e0a93a_eval* _self_);
inline jule::Bool _1e5e0c057_applyNumericPrefix(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5e08c13_Data>* _16939_d);
inline jule::Ptr<_1e5e08c13_Data> _1e5e0c398_litStr(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5caa356_LitExpr>* _20419_l);
inline jule::Ptr<_1e5e08c13_Data> _1e5e0c6d9_litRune(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5caa356_LitExpr>* _22120_l);
inline jule::Ptr<_1e5e08c13_Data> _1e5e0ca2a_litFloat(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5caa356_LitExpr>* _24021_l);
inline jule::Ptr<_1e5e08c13_Data> _1e5e0cd6b_litInt(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5caa356_LitExpr>* _25223_l);
inline jule::Ptr<_1e5e08c13_Data> _1e5e0d1ac_litNum(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5caa356_LitExpr>* _30723_l);
inline jule::Ptr<_1e5e08c13_Data> _1e5e0d4ed_evalLit(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5caa356_LitExpr> _31623_lit);
inline jule::Any _1e5e0d83e_findBuiltins(_1e5e0a93a_eval* _self_, jule::Str* _32929_ident);
inline jule::Any _1e5e0dc3a_getDef(_1e5e0a93a_eval* _self_, jule::Str* _35623_ident, jule::Bool _35635_binded);
inline jule::Ptr<_1e5ce65a1_ReferenceStack> _1e5e0dec1_getOwnerRefers(_1e5e0a93a_eval* _self_);
inline void _1caeb4712_pushReference(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5ce3416_FnIns>* _41437_ref);
inline void _1caecb2b7_pushReference(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5da0bcc_Var>* _41437_ref);
inline void _1c806e3c4_pushReference(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5cc8c7b_StructIns>* _41437_ref);
inline jule::Ptr<_1e5e08c13_Data> _1e5e0e5ba__evalEnum(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5d065c2_Enum> _42125_enm);
inline jule::Ptr<_1e5e08c13_Data> _1e5e0e9b6_evalEnum(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5d065c2_Enum> _43028_enm, jule::Ptr<_1e5c8eacc_Token> _43040_errorToken);
inline jule::Ptr<_1e5e08c13_Data> _1e5e0ed07__evalTypeEnum(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5d07ccc_TypeEnum> _43929_enm);
inline jule::Ptr<_1e5e08c13_Data> _1e5e10203_evalTypeEnum(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5d07ccc_TypeEnum> _44832_enm, jule::Ptr<_1e5c8eacc_Token> _44848_errorToken);
inline jule::Ptr<_1e5e08c13_Data> _1e5e10544__evalStruct(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5cc8c7b_StructIns> _45727_s);
inline jule::Ptr<_1e5e08c13_Data> _1e5e10940_evalStruct(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5cc5e21_Struct> _47130_s, jule::Ptr<_1e5c8eacc_Token> _47146_errorToken);
inline jule::Ptr<_1e5e08c13_Data> _1e5e10c81_evalFnIns(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5ce3416_FnIns> _50025_f);
inline void _1e5e110e4_checkDeprecated(_1e5e0a93a_eval* _self_, jule::Slice<jule::Ptr<_1e5ca44a4_Directive>>* _50936_directives, jule::Ptr<_1e5c8eacc_Token> _50967_tok);
inline jule::Ptr<_1e5e08c13_Data> _1e5e114e0_evalFn(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5ce0358_Fn> _52526_f, jule::Ptr<_1e5c8eacc_Token> _52534_errorToken);
inline void _1e5e1190d_pushIllegalCycleError(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5da0bcc_Var>* _55038_v1, jule::Ptr<_1e5da0bcc_Var>* _55049_v2, _224497295_StrBuilder* _55064_message);
inline jule::Bool _1e5e11d09_checkCrossCycle(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5da0bcc_Var>* _56032_v, _224497295_StrBuilder* _56046_message);
inline jule::Bool _1e5e12205_checkIllegalCycles(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5da0bcc_Var>* _57739_v, jule::Ptr<_1e5c8eacc_Token> _57748_declToken);
inline jule::Ptr<_1e5e08c13_Data> _1e5e12601_evalVar(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5da0bcc_Var> _60527_v, jule::Ptr<_1e5c8eacc_Token> _60536_errorToken);
inline jule::Ptr<_1e5e08c13_Data> _1e5e129ec_evalTypeAlias(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5e40a08_TypeAlias> _72833_ta, jule::Ptr<_1e5c8eacc_Token> _72849_errorToken);
inline jule::Ptr<_1e5e08c13_Data> _1e5e12de8_evalDef(_1e5e0a93a_eval* _self_, jule::Any* _76728_def, jule::Ptr<_1e5c8eacc_Token> _76742_ident);
inline jule::Ptr<_1e5e08c13_Data> _1e5e13239_evalIdent(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5caabd6_IdentExpr> _79129_ident);
inline jule::Ptr<_1e5e08c13_Data> _1e5e1357a_evalUnary(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Ptr<_1e5cab478_UnaryExpr> _79630_u);
inline jule::Ptr<_1e5e08c13_Data> _1e5e138bb_evalVariadic(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Ptr<_1e5cab852_VariadicExpr> _80133_v);
inline jule::Ptr<_1e5e08c13_Data> _1e5e13c0c_evalUnsafe(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Ptr<_1e5caa730_UnsafeExpr> _82331_u);
inline jule::Ptr<_1e5e08c13_Data> _1e5e1404d_evalArr(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Ptr<_1e5cb0922_SliceExpr> _83128_s);
inline jule::Ptr<_1e5e08c13_Data> _1e5e14504_evalExpSlc(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Ptr<_1e5cb0922_SliceExpr> _90831_s, jule::Ptr<_1e5e417ea_TypeKind> _90850_t, jule::Any _90868_first);
inline jule::Ptr<_1e5e08c13_Data> _1e5e14845_evalSliceExpr(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Ptr<_1e5cb0922_SliceExpr> _94634_s);
inline jule::Bool _1e5e14c41_checkIntegerIndexingByData(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5e08c13_Data>* _98247_d, jule::Ptr<_1e5c8eacc_Token> _98261_token);
inline void _1e5e1515e_indexingPtr(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5e08c13_Data>* _99532_d, jule::Ptr<_1e5e08c13_Data>* _99547_index, jule::Ptr<_1e5cb137e_IndexingExpr>* _99566_i);
inline void _1e5e1557c_indexingArr(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5e08c13_Data>* _101132_d, jule::Ptr<_1e5e08c13_Data>* _101147_index, jule::Ptr<_1e5cb137e_IndexingExpr>* _101166_i);
inline void _1e5e1599a_indexingSlc(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5e08c13_Data>* _102132_d, jule::Ptr<_1e5e08c13_Data>* _102147_index, jule::Ptr<_1e5cb137e_IndexingExpr>* _102166_i);
inline void _1e5e15db8_indexingMap(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5e08c13_Data>* _104432_d, jule::Ptr<_1e5e08c13_Data>* _104447_index, jule::Ptr<_1e5cb137e_IndexingExpr>* _104466_i);
inline void _1e5e162d6_indexingStr(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5e08c13_Data>* _106132_d, jule::Ptr<_1e5e08c13_Data>* _106147_index, jule::Ptr<_1e5cb137e_IndexingExpr>* _106166_i);
inline void _1e5e16704_comptimeRange(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5e08c13_Data>* _108934_d, jule::Ptr<_1e5e08c13_Data>* _108949_index, jule::Ptr<_1e5cb137e_IndexingExpr>* _108968_i);
inline void _1e5e16b22_toIndexing(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5e08c13_Data>* _111431_d, jule::Ptr<_1e5e08c13_Data>* _111446_index, jule::Ptr<_1e5cb137e_IndexingExpr>* _111465_i);
inline jule::Bool _1e5e170c8_pushGenericsFromExprSubIdent(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Ptr<_1e5cac4ce_SubIdentExpr>* _114250_sexpr, jule::Slice<jule::Ptr<_1e5ca5087_TypeDecl>>* _11438_generics, jule::Ptr<_1e5ca93bb_Expr>* _114336_expr);
inline jule::Bool _1e5e174c4_pushGenericsFromData(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Slice<jule::Ptr<_1e5ca5087_TypeDecl>>* _115342_generics, jule::Ptr<_1e5ca93bb_Expr>* _115370_expr);
inline void _1e5e17837_evalIdentDeclFromIndexing(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Ptr<_1e5e08c13_Data>* _122347_d, jule::Ptr<_1e5cb137e_IndexingExpr>* _122362_i);
inline __jule_tuple_bool__jule_tuple_bool _1e5e17cdd_checkGenericFn(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Ptr<_1e5ce3416_FnIns>* _126636_f, jule::Ptr<_1e5c8eacc_Token>* _126652_et, jule::Any* _126669_model);
inline void _1e5e18151_evalFnGenericFromIndexing(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Ptr<_1e5e08c13_Data>* _128247_d, jule::Ptr<_1e5cb137e_IndexingExpr>* _128262_i);
inline jule::Ptr<_1e5e08c13_Data> _1e5e18492_evalIndexing(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Ptr<_1e5cb137e_IndexingExpr> _132233_i);
inline __jule_tuple_x_1e5e08c13_Data__jule_tuple_x_1e5e08c13_Data _1e5e187d3_evalSlicingExprs(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Ptr<_1e5cb19de_SlicingExpr>* _138238_s);
inline void _1e5e18a8b_slicingArr(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5e08c13_Data>* _141827_d);
inline void _1e5e18ea9_slicingStr(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5e08c13_Data>* _143327_d, jule::Ptr<_1e5e08c13_Data>* _143338_l, jule::Ptr<_1e5e08c13_Data>* _143349_r);
inline void _1e5e19482_checkSlicing(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5e08c13_Data>* _147133_d, jule::Ptr<_1e5e08c13_Data>* _147144_l, jule::Ptr<_1e5e08c13_Data>* _147155_r, jule::Ptr<_1e5cb19de_SlicingExpr>* _147166_s);
inline jule::Ptr<_1e5e08c13_Data> _1e5e197c3_evalSlicing(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Ptr<_1e5cb19de_SlicingExpr> _149032_s);
inline void _1e5e19be1_castPtr(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5e417ea_TypeKind> _152727_t, jule::Ptr<_1e5e08c13_Data> _152745_d, jule::Ptr<_1e5c8eacc_Token> _152755_errorToken);
inline void _1e5e1a10e_castStruct(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5e417ea_TypeKind> _154930_t, jule::Ptr<_1e5e08c13_Data> _154948_d, jule::Ptr<_1e5c8eacc_Token> _154958_errorToken);
inline void _1e5e1a52c_castRef(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5e417ea_TypeKind> _156627_t, jule::Ptr<_1e5e08c13_Data> _156645_d, jule::Ptr<_1e5c8eacc_Token> _156655_errorToken);
inline void _1e5e1a94a_castSlc(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5e417ea_TypeKind> _158927_t, jule::Ptr<_1e5e08c13_Data> _158945_d, jule::Ptr<_1e5c8eacc_Token> _158955_errorToken);
inline void _1e5e1acad_castStr(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5e08c13_Data> _164427_d, jule::Ptr<_1e5c8eacc_Token> _164437_errorToken);
inline void _1e5e1b1cb_castInt(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5e417ea_TypeKind> _169127_t, jule::Ptr<_1e5e08c13_Data> _169145_d, jule::Ptr<_1e5c8eacc_Token> _169155_errorToken);
inline void _1e5e1b5e9_castNum(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5e417ea_TypeKind> _173727_t, jule::Ptr<_1e5e08c13_Data> _173745_d, jule::Ptr<_1e5c8eacc_Token> _173755_errorToken);
inline void _1e5e1ba17_castPrim(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5e417ea_TypeKind> _176828_t, jule::Ptr<_1e5e08c13_Data> _176846_d, jule::Ptr<_1e5c8eacc_Token> _176856_errorToken);
inline void _1e5e1bd7a_castConstant(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5e417ea_TypeKind>* _178433_t, jule::Ptr<_1e5e08c13_Data>* _178452_d);
inline void _1e5e1c298_castTypeEnum(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5e417ea_TypeKind>* _179333_t, jule::Ptr<_1e5e08c13_Data>* _179352_d, jule::Ptr<_1e5c8eacc_Token>* _179367_errorToken);
inline void _1e5e1c6b6_castTypeEnumT(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5e417ea_TypeKind>* _180334_t, jule::Ptr<_1e5e08c13_Data>* _180353_d, jule::Ptr<_1e5c8eacc_Token>* _180368_errorToken);
inline jule::Ptr<_1e5e08c13_Data> _1e5e1cb6c_evalCastByTypeNData(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5e417ea_TypeKind> _181339_t, jule::Ptr<_1e5e08c13_Data> _181357_d, jule::Ptr<_1e5c8eacc_Token> _181371_errorToken);
inline jule::Ptr<_1e5e08c13_Data> _1e5e1d123_evalCastT(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Ptr<_1e5e417ea_TypeKind>* _189031_t, jule::Ptr<_1e5ca93bb_Expr>* _189050_e, jule::Ptr<_1e5c8eacc_Token>* _189065_et);
inline jule::Ptr<_1e5e08c13_Data> _1e5e1d464_evalCast(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Ptr<_1e5cabc2b_CastExpr> _190729_c);
inline jule::Ptr<_1e5e08c13_Data> _1e5e1d7a5_evalNsSelection(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5cac105_NsSelectionExpr> _191635_s);
inline jule::Ptr<_1e5e08c13_Data> _1e5e1dc5b_evalStructLitExplicit(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Ptr<_1e5cc8c7b_StructIns> _194242_s, jule::Slice<jule::Ptr<_1e5ca93bb_Expr>> _19437_exprs, jule::Ptr<_1e5c8eacc_Token> _194327_errorToken);
inline jule::Ptr<_1e5e08c13_Data> _1e5e1e09c_evalStructLit(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Ptr<_1e5cae415_StructLit> _198034_lit);
inline _1e5e53be7_typeChecker _1e5e1e333_typeChecker(_1e5e0a93a_eval* _self_);
inline jule::Ptr<_1e5e08c13_Data> _1e5e1e674_evalType(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5ca5087_TypeDecl> _201228_t);
inline void _1e5e1e9d7_callTypeFn(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Ptr<_1e5cad0e5_FnCallExpr>* _202532_fc, jule::Ptr<_1e5e08c13_Data>* _202554_d);
inline void _1e5e1ed4a_callBuiltinFn(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Ptr<_1e5cad0e5_FnCallExpr>* _205135_fc, jule::Ptr<_1e5e08c13_Data>* _205157_d);
inline void _1e5e201ad_checkFnOfConcurrentCall(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5ce3416_FnIns>* _206340_f, jule::Ptr<_1e5c8eacc_Token> _206351_errorToken);
inline void _1e5e205cb_processExceptionalHandler(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5ce3416_FnIns>* _208246_f, jule::Ptr<_1e5cad0e5_FnCallExpr>* _208262_fc, jule::Ptr<_1e5e08c13_Data>* _208284_d);
inline void _1e5e2093e_callFn(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Ptr<_1e5cad0e5_FnCallExpr>* _210928_fc, jule::Ptr<_1e5e08c13_Data>* _210950_d);
inline jule::Ptr<_1e5e08c13_Data> _1e5e20c80_evalFnCall(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Ptr<_1e5cad0e5_FnCallExpr> _225831_fc);
inline jule::Ptr<_1e5e08c13_Data> _1e5e2117b_evalEnumStatic(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5d065c2_Enum> _229134_enm, jule::Ptr<_1e5c8eacc_Token> _229150_ident);
inline jule::Ptr<_1e5e08c13_Data> _1e5e21577_evalTypeEnumStatic(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5d07ccc_TypeEnum> _229938_enm, jule::Ptr<_1e5c8eacc_Token> _229954_ident);
inline jule::Ptr<_1e5e08c13_Data> _1e5e21973_evalStructStatic(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5cc8c7b_StructIns> _232236_s, jule::Ptr<_1e5c8eacc_Token> _232251_ident);
inline jule::Ptr<_1e5e08c13_Data> _1e5e21e29_evalTraitSubIdent(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5e08c13_Data> _235737_d, jule::Ptr<_1e5d03db6_Trait> _235751_trt, jule::Ptr<_1e5c8eacc_Token> _235768_ident);
inline jule::Ptr<_1e5e08c13_Data> _1e5e2248a_evalStructSubIdentField(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5e08c13_Data>* _237944_d, jule::Ptr<_1e5cc8c7b_StructIns>* _237959_s, jule::Ptr<_1e5c8eacc_Token>* _237979_tok, jule::Ptr<_1e5cc81cb_FieldIns>* _237997_f);
inline jule::Ptr<_1e5e08c13_Data> _1e5e22aa6_evalStructSubIdentMethod(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5e08c13_Data>* _240445_d, jule::Ptr<_1e5cc8c7b_StructIns>* _240460_s, jule::Ptr<_1e5c8eacc_Token>* _240480_tok, jule::Ptr<_1e5ce0358_Fn>* _240498_m, jule::Bool _2404106_ref);
inline jule::Ptr<_1e5e08c13_Data> _1e5e23117_evalStructSubIdent(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5e08c13_Data> _242538_d, jule::Ptr<_1e5cc8c7b_StructIns> _242552_s, jule::Ptr<_1e5cac4ce_SubIdentExpr> _242571_si, jule::Bool _242590_ref);
inline jule::Ptr<_1e5e08c13_Data> _1e5e23458_evalIntTypeStatic(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5c8eacc_Token> _244933_ident);
inline jule::Ptr<_1e5e08c13_Data> _1e5e23799_evalUintTypeStatic(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5c8eacc_Token> _247634_ident);
inline jule::Ptr<_1e5e08c13_Data> _1e5e23ada_evalI8TypeStatic(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5c8eacc_Token> _249432_ident);
inline jule::Ptr<_1e5e08c13_Data> _1e5e23e2b_evalI16TypeStatic(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5c8eacc_Token> _252333_ident);
inline jule::Ptr<_1e5e08c13_Data> _1e5e2426c_evalI32TypeStatic(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5c8eacc_Token> _255233_ident);
inline jule::Ptr<_1e5e08c13_Data> _1e5e245ad_evalI64TypeStatic(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5c8eacc_Token> _258133_ident);
inline jule::Ptr<_1e5e08c13_Data> _1e5e248ee_evalU8TypeStatic(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5c8eacc_Token> _261032_ident);
inline jule::Ptr<_1e5e08c13_Data> _1e5e24c40_evalU16TypeStatic(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5c8eacc_Token> _262933_ident);
inline jule::Ptr<_1e5e08c13_Data> _1e5e25081_evalU32TypeStatic(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5c8eacc_Token> _264833_ident);
inline jule::Ptr<_1e5e08c13_Data> _1e5e253c2_evalU64TypeStatic(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5c8eacc_Token> _266733_ident);
inline jule::Ptr<_1e5e08c13_Data> _1e5e25713_evalF32TypeStatic(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5c8eacc_Token> _268633_ident);
inline jule::Ptr<_1e5e08c13_Data> _1e5e25a54_evalF64TypeStatic(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5c8eacc_Token> _272533_ident);
inline jule::Ptr<_1e5e08c13_Data> _1e5e25e50_evalPrimStatic(_1e5e0a93a_eval* _self_, jule::Str _276430_kind, jule::Ptr<_1e5c8eacc_Token> _276441_ident);
inline jule::Ptr<_1e5e08c13_Data> _1e5e2634b_evalTypeStatic(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5e08c13_Data> _279634_d, jule::Ptr<_1e5cac4ce_SubIdentExpr> _279648_si);
inline jule::Ptr<_1e5e08c13_Data> _1cb50a807_comptimeObjSubIdent(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5d1a608_comptimeTypeInfo>* _281254_ct, jule::Ptr<_1e5e08c13_Data>* _281274_d, jule::Ptr<_1e5cac4ce_SubIdentExpr>* _281285_si);
inline jule::Ptr<_1e5e08c13_Data> _1cb5100e2_comptimeObjSubIdent(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5d0b264_comptimeStructField>* _281254_ct, jule::Ptr<_1e5e08c13_Data>* _281274_d, jule::Ptr<_1e5cac4ce_SubIdentExpr>* _281285_si);
inline jule::Ptr<_1e5e08c13_Data> _1cb514866_comptimeObjSubIdent(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5d126aa_comptimeEnumField>* _281254_ct, jule::Ptr<_1e5e08c13_Data>* _281274_d, jule::Ptr<_1e5cac4ce_SubIdentExpr>* _281285_si);
inline jule::Ptr<_1e5e08c13_Data> _1cb51912e_comptimeObjSubIdent(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5d154c1_comptimeParam>* _281254_ct, jule::Ptr<_1e5e08c13_Data>* _281274_d, jule::Ptr<_1e5cac4ce_SubIdentExpr>* _281285_si);
inline jule::Ptr<_1e5e08c13_Data> _1cb51db28_comptimeObjSubIdent(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5d0e487_comptimeStatic>* _281254_ct, jule::Ptr<_1e5e08c13_Data>* _281274_d, jule::Ptr<_1e5cac4ce_SubIdentExpr>* _281285_si);
inline jule::Ptr<_1e5e08c13_Data> _1cb52339c_comptimeObjSubIdent(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5d2170d_comptimeValue>* _281254_ct, jule::Ptr<_1e5e08c13_Data>* _281274_d, jule::Ptr<_1e5cac4ce_SubIdentExpr>* _281285_si);
inline jule::Ptr<_1e5e08c13_Data> _1cb527b21_comptimeObjSubIdent(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5d25dd8_comptimeFile>* _281254_ct, jule::Ptr<_1e5e08c13_Data>* _281274_d, jule::Ptr<_1e5cac4ce_SubIdentExpr>* _281285_si);
inline jule::Ptr<_1e5e08c13_Data> _1cb52c42d_comptimeObjSubIdent(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5d29cee_comptimeDecl>* _281254_ct, jule::Ptr<_1e5e08c13_Data>* _281274_d, jule::Ptr<_1e5cac4ce_SubIdentExpr>* _281285_si);
inline __jule_tuple_x_1e5e08c13_Data__jule_tuple_bool _1e5e26bed_tryComptimeObjSubIdent(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5e08c13_Data>* _282043_d, jule::Ptr<_1e5cac4ce_SubIdentExpr> _282057_si);
inline jule::Ptr<_1e5e08c13_Data> _1e5e270e9_evalObjSubIdent(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5e08c13_Data> _285135_d, jule::Ptr<_1e5cac4ce_SubIdentExpr> _285149_si);
inline jule::Ptr<_1e5e08c13_Data> _1e5e2743a_evalSubIdent(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Ptr<_1e5cac4ce_SubIdentExpr> _289533_si);
inline jule::Ptr<_1e5e08c13_Data> _1e5e2777b_evalTuple(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Ptr<_1e5ca9eb0_TupleExpr> _290930_tup);
inline jule::Ptr<_1e5e08c13_Data> _1e5e27b77_evalMap(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Ptr<_1e5e505a6_Map> _293828_m, jule::Ptr<_1e5cae8bb_BraceLit> _293841_lit);
inline jule::Ptr<_1e5e08c13_Data> _1e5e27eb8_evalBraceLit(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Ptr<_1e5cae8bb_BraceLit> _298633_lit);
inline jule::Ptr<_1e5e08c13_Data> _1e5e28309_evalAnonFunc(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Ptr<_1e5cb6c47_FnDecl> _300133_decl);
inline jule::Ptr<_1e5e08c13_Data> _1e5e2864a_evalBinary(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Ptr<_1e5cac985_BinaryExpr> _303931_op);
inline jule::Ptr<_1e5e08c13_Data> _1e5e2898b_evalExprKind(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Any _305433_kind);
inline jule::Ptr<_1e5e08c13_Data> _1e5e28ccc_eval1(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Ptr<_1e5ca93bb_Expr> _310226_expr);
inline jule::Ptr<_1e5e08c13_Data> _1e5e2911d_eval(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Ptr<_1e5ca93bb_Expr> _314725_expr);
inline jule::Ptr<_1e5e08c13_Data> _1e5e2945e_evalExpr1(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Ptr<_1e5ca93bb_Expr> _316230_expr);
inline jule::Ptr<_1e5e08c13_Data> _1e5e297a0_evalExpr(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Ptr<_1e5ca93bb_Expr> _317829_expr);
inline _1e5e29c34_unaryEval static__1e5e2a1a7_new(jule::Ptr<_1e5e0a93a_eval> _319920_e);
inline void _1e5e2a3a5_minus(_1e5e29c34_unaryEval* _self_);
inline void _1e5e2a5a3_plus(_1e5e29c34_unaryEval* _self_);
inline void _1e5e2a7a1_caret(_1e5e29c34_unaryEval* _self_);
inline void _1e5e2a99e_excl(_1e5e29c34_unaryEval* _self_);
inline void _1e5e2ab9c_star(_1e5e29c34_unaryEval* _self_);
inline void _1e5e2ad9a_amper(_1e5e29c34_unaryEval* _self_);
inline void _1e5e2b098_typeDecl(_1e5e29c34_unaryEval* _self_);
inline void _1e5e2b296_evalData(_1e5e29c34_unaryEval* _self_);
inline jule::Ptr<_1e5e08c13_Data> _1e5e2b5d7_eval(_1e5e29c34_unaryEval* _self_, jule::Ptr<_1e5cab478_UnaryExpr> _345924_u);
inline _1e5e2bbc0_binaryEval static__1e5e2c2a8_newPlain(jule::Ptr<_1e5e0a93a_eval> _350725_e);
inline _1e5e2bbc0_binaryEval static__1e5e2c62c_new(jule::Ptr<_1e5e0a93a_eval> _351320_e, jule::Ptr<_1e5c8eacc_Token> _351334_op);
inline jule::Bool _1e5e2c8b3_checkTypeCompatibility(_1e5e2bbc0_binaryEval* _self_);
inline jule::Bool _1e5e2cb49_checkStructCommonOperatorCompatibility(_1e5e2bbc0_binaryEval* _self_);
inline jule::Ptr<_1e5e08c13_Data> _1e5e2cdd0_evalComptimeTypeInfo(_1e5e2bbc0_binaryEval* _self_);
inline jule::Ptr<_1e5e08c13_Data> _1e5e2d166_evalNil(_1e5e2bbc0_binaryEval* _self_);
inline jule::Ptr<_1e5e08c13_Data> _1e5e2d3ec_evalEnum(_1e5e2bbc0_binaryEval* _self_);
inline jule::Ptr<_1e5e08c13_Data> _1e5e2d683_evalTypeEnum(_1e5e2bbc0_binaryEval* _self_);
inline jule::Ptr<_1e5e08c13_Data> _1e5e2d919_evalSptr(_1e5e2bbc0_binaryEval* _self_);
inline jule::Ptr<_1e5e08c13_Data> _1e5e2dba0_evalPtr(_1e5e2bbc0_binaryEval* _self_);
inline jule::Ptr<_1e5e08c13_Data> _1e5e2de36_evalArr(_1e5e2bbc0_binaryEval* _self_);
inline jule::Ptr<_1e5e08c13_Data> _1e5e2e1bc_evalStruct(_1e5e2bbc0_binaryEval* _self_);
inline jule::Ptr<_1e5e08c13_Data> _1e5e2e453_evalTrait(_1e5e2bbc0_binaryEval* _self_);
inline jule::Ptr<_1e5e08c13_Data> _1e5e2e6d9_evalAny(_1e5e2bbc0_binaryEval* _self_);
inline jule::Ptr<_1e5e08c13_Data> _1e5e2e970_evalBool(_1e5e2bbc0_binaryEval* _self_);
inline jule::Ptr<_1e5e08c13_Data> _1e5e2ec06_evalStr(_1e5e2bbc0_binaryEval* _self_);
inline void _1e5e2ee04_setTypeToGreater(_1e5e2bbc0_binaryEval* _self_);
inline void _1e5e301ac_checkModData(_1e5e2bbc0_binaryEval* _self_, jule::Ptr<_1e5e08c13_Data>* _391233_d);
inline void _1e5e303aa_mod(_1e5e2bbc0_binaryEval* _self_);
inline jule::Bool _1e5e307a6_numbersAreCompatibile(_1e5e2bbc0_binaryEval* _self_, jule::Str* _393434_lk, jule::Str* _393444_rk);
inline jule::Ptr<_1e5e08c13_Data> _1e5e30a3c_shift(_1e5e2bbc0_binaryEval* _self_);
inline jule::Ptr<_1e5e08c13_Data> _1e5e30cc3_evalFloat(_1e5e2bbc0_binaryEval* _self_);
inline jule::Ptr<_1e5e08c13_Data> _1e5e31059_evalInt(_1e5e2bbc0_binaryEval* _self_);
inline jule::Ptr<_1e5e08c13_Data> _1e5e312e0_evalPrim(_1e5e2bbc0_binaryEval* _self_);
inline jule::Bool _1e5e31576_checkSpecialCases(_1e5e2bbc0_binaryEval* _self_);
inline jule::Ptr<_1e5e08c13_Data> _1e5e3180c_evalOp(_1e5e2bbc0_binaryEval* _self_);
inline void _1e5e31ab5_evalConst(_1e5e2bbc0_binaryEval* _self_, jule::Ptr<_1e5e08c13_Data>* _422430_d);
inline void _1e5e31d6d_checkData(_1e5e2bbc0_binaryEval* _self_, jule::Ptr<_1e5e08c13_Data>* _430230_d);
inline void _1e5e3206b_checkDatas(_1e5e2bbc0_binaryEval* _self_);
inline void _1e5e32324_setModel(_1e5e2bbc0_binaryEval* _self_, jule::Ptr<_1e5e08c13_Data>* _431429_d);
inline void _1e5e325cc_postEval(_1e5e2bbc0_binaryEval* _self_, jule::Ptr<_1e5e08c13_Data>* _434329_d);
inline jule::Ptr<_1e5e08c13_Data> _1e5e329c8_solveExplicit(_1e5e2bbc0_binaryEval* _self_, jule::Ptr<_1e5e08c13_Data>* _434834_l, jule::Ptr<_1e5e08c13_Data>* _434849_r);
inline jule::Ptr<_1e5e08c13_Data> _1e5e32d19_eval(_1e5e2bbc0_binaryEval* _self_, jule::Ptr<_1e5cac985_BinaryExpr>* _436825_op);
inline jule::Str _1e5e41be6_Str(_1e5e417ea_TypeKind* _self_);
inline jule::Bool _1e5e42037_Equal(jule::Ptr<_1e5e417ea_TypeKind> _self_, jule::Ptr<_1e5e417ea_TypeKind> _9018_other);
inline jule::Bool _1e5e42697_Binded(_1e5e417ea_TypeKind* _self_);
inline jule::Bool _1e5e4292d_IsNil(_1e5e417ea_TypeKind* _self_);
inline jule::Bool _1e5e42bb4_Void(_1e5e417ea_TypeKind* _self_);
inline jule::Bool _1e5e42e4a_Comparable(_1e5e417ea_TypeKind* _self_);
inline jule::Bool _1e5e431d1_Mutable(_1e5e417ea_TypeKind* _self_);
inline jule::Bool _1e5e43467_Ordered(_1e5e417ea_TypeKind* _self_);
inline jule::Bool _1e5e436ed_NilCompatible(_1e5e417ea_TypeKind* _self_);
inline jule::Bool _1e5e43984_GC(_1e5e417ea_TypeKind* _self_);
inline jule::Bool _1e5e43c1a_Variadicable(_1e5e417ea_TypeKind* _self_);
inline jule::Ptr<_1e5e49913_Prim> _1e5e43ea1_Prim(_1e5e417ea_TypeKind* _self_);
inline jule::Ptr<_1e5e4d43e_Sptr> _1e5e44237_Sptr(_1e5e417ea_TypeKind* _self_);
inline jule::Ptr<_1e5e51c06_Ptr> _1e5e444bd_Ptr(_1e5e417ea_TypeKind* _self_);
inline jule::Ptr<_1e5d065c2_Enum> _1e5e44754_Enum(_1e5e417ea_TypeKind* _self_);
inline jule::Ptr<_1e5d07ccc_TypeEnum> _1e5e449da_TypeEnum(_1e5e417ea_TypeKind* _self_);
inline jule::Ptr<_1e5e51233_Arr> _1e5e44c71_Arr(_1e5e417ea_TypeKind* _self_);
inline jule::Ptr<_1e5e4de12_Slc> _1e5e45007_Slc(_1e5e417ea_TypeKind* _self_);
inline jule::Ptr<_1e5ce3416_FnIns> _1e5e4528d_Fn(_1e5e417ea_TypeKind* _self_);
inline jule::Ptr<_1e5cc8c7b_StructIns> _1e5e45524_Struct(_1e5e417ea_TypeKind* _self_);
inline jule::Ptr<_1e5d03db6_Trait> _1e5e457aa_Trait(_1e5e417ea_TypeKind* _self_);
inline jule::Ptr<_1e5e505a6_Map> _1e5e45a41_Map(_1e5e417ea_TypeKind* _self_);
inline jule::Ptr<_1e5e4ea06_Tuple> _1e5e45cc7_Tup(_1e5e417ea_TypeKind* _self_);
inline jule::Bool _1e5e4605d_comptime(_1e5e417ea_TypeKind* _self_);
inline jule::Ptr<_1e5d0ca07_comptimeStructFields> _1e5e462e4_comptimeStructFields(_1e5e417ea_TypeKind* _self_);
inline jule::Ptr<_1e5d0b264_comptimeStructField> _1e5e4657a_comptimeStructField(_1e5e417ea_TypeKind* _self_);
inline jule::Ptr<_1e5d139b9_comptimeEnumFields> _1e5e46811_comptimeEnumFields(_1e5e417ea_TypeKind* _self_);
inline jule::Ptr<_1e5d126aa_comptimeEnumField> _1e5e46a97_comptimeEnumField(_1e5e417ea_TypeKind* _self_);
inline jule::Ptr<_1e5d1732a_comptimeParams> _1e5e46d2d_comptimeParams(_1e5e417ea_TypeKind* _self_);
inline jule::Ptr<_1e5d154c1_comptimeParam> _1e5e470b4_comptimeParam(_1e5e417ea_TypeKind* _self_);
inline jule::Ptr<_1e5d0a708_comptimeRange> _1e5e4734a_comptimeRange(_1e5e417ea_TypeKind* _self_);
inline jule::Ptr<_1e5d18b89_comptimeTypeInfos> _1e5e475d1_comptimeTypeInfos(_1e5e417ea_TypeKind* _self_);
inline jule::Ptr<_1e5d1a608_comptimeTypeInfo> _1e5e47867_comptimeTypeInfo(_1e5e417ea_TypeKind* _self_);
inline jule::Ptr<_1e5d10c3b_comptimeStatics> _1e5e47aed_comptimeStatics(_1e5e417ea_TypeKind* _self_);
inline jule::Ptr<_1e5d0e487_comptimeStatic> _1e5e47d84_comptimeStatic(_1e5e417ea_TypeKind* _self_);
inline jule::Ptr<_1e5d2170d_comptimeValue> _1e5e4811a_comptimeValue(_1e5e417ea_TypeKind* _self_);
inline jule::Ptr<_1e5d29cee_comptimeDecl> _1e5e483a1_comptimeDecl(_1e5e417ea_TypeKind* _self_);
inline jule::Ptr<_1e5d27a11_comptimeDecls> _1e5e48637_comptimeDecls(_1e5e417ea_TypeKind* _self_);
inline jule::Ptr<_1e5d25dd8_comptimeFile> _1e5e488bd_comptimeFile(_1e5e417ea_TypeKind* _self_);
inline jule::Ptr<_1e5d24469_comptimeFiles> _1e5e48b54_comptimeFiles(_1e5e417ea_TypeKind* _self_);
inline jule::Bool _1e5e493b3_checked(_1e5e4900b_TypeSymbol* _self_);
inline jule::Str _1e5e49c87_Str(_1e5e49913_Prim* _self_);
inline jule::Bool _1e5e4a0c8_Equal(jule::Ptr<_1e5e49913_Prim> _self_, jule::Ptr<_1e5e417ea_TypeKind> _53218_other);
inline jule::Bool _1e5e4a56d_IsConstraint(_1e5e49913_Prim* _self_);
inline jule::Bool _1e5e4a804_IsI8(_1e5e49913_Prim* _self_);
inline jule::Bool _1e5e4aa8a_IsI16(_1e5e49913_Prim* _self_);
inline jule::Bool _1e5e4ad21_IsI32(_1e5e49913_Prim* _self_);
inline jule::Bool _1e5e4b0a7_IsI64(_1e5e49913_Prim* _self_);
inline jule::Bool _1e5e4b33d_IsU8(_1e5e49913_Prim* _self_);
inline jule::Bool _1e5e4b5c4_IsU16(_1e5e49913_Prim* _self_);
inline jule::Bool _1e5e4b85a_IsU32(_1e5e49913_Prim* _self_);
inline jule::Bool _1e5e4bae1_IsU64(_1e5e49913_Prim* _self_);
inline jule::Bool _1e5e4bd77_IsF32(_1e5e49913_Prim* _self_);
inline jule::Bool _1e5e4c10d_IsF64(_1e5e49913_Prim* _self_);
inline jule::Bool _1e5e4c394_IsInt(_1e5e49913_Prim* _self_);
inline jule::Bool _1e5e4c62a_IsUint(_1e5e49913_Prim* _self_);
inline jule::Bool _1e5e4c8b1_IsUintptr(_1e5e49913_Prim* _self_);
inline jule::Bool _1e5e4cb47_IsBool(_1e5e49913_Prim* _self_);
inline jule::Bool _1e5e4cdcd_IsStr(_1e5e49913_Prim* _self_);
inline jule::Bool _1e5e4d164_IsAny(_1e5e49913_Prim* _self_);
inline jule::Str _1e5e4d7e6_Str(_1e5e4d43e_Sptr* _self_);
inline jule::Bool _1e5e4db37_Equal(jule::Ptr<_1e5e4d43e_Sptr> _self_, jule::Ptr<_1e5e417ea_TypeKind> _60918_other);
inline jule::Str _1e5e4e3c9_Str(_1e5e4de12_Slc* _self_);
inline jule::Bool _1e5e4e71a_Equal(jule::Ptr<_1e5e4de12_Slc> _self_, jule::Ptr<_1e5e417ea_TypeKind> _62818_other);
inline jule::Str _1e5e4edad_Str(_1e5e4ea06_Tuple* _self_);
inline jule::Bool _1e5e501ee_Equal(jule::Ptr<_1e5e4ea06_Tuple> _self_, jule::Ptr<_1e5e417ea_TypeKind> _65718_other);
inline jule::Str _1e5e5095d_Str(_1e5e505a6_Map* _self_);
inline jule::Bool _1e5e50c9e_Equal(jule::Ptr<_1e5e505a6_Map> _self_, jule::Ptr<_1e5e417ea_TypeKind> _69418_other);
inline jule::Str _1e5e515da_Str(_1e5e51233_Arr* _self_);
inline jule::Bool _1e5e5192b_Equal(jule::Ptr<_1e5e51233_Arr> _self_, jule::Ptr<_1e5e417ea_TypeKind> _72218_other);
inline jule::Str _1e5e520ad_Str(_1e5e51c06_Ptr* _self_);
inline jule::Bool _1e5e523ee_Equal(jule::Ptr<_1e5e51c06_Ptr> _self_, jule::Ptr<_1e5e417ea_TypeKind> _74618_other);
inline jule::Bool _1e5e52773_IsUnsafe(_1e5e51c06_Ptr* _self_);
inline void _1e5e54478_pushErr(_1e5e53be7_typeChecker* _self_, jule::Ptr<_1e5c8eacc_Token> _83823_token, jule::Str _83838_fmt, jule::Slice<jule::Any> _83851_args);
inline void _1e5e54676_allowBuiltin(_1e5e53be7_typeChecker* _self_);
inline void _1e5e54874_disallowBuiltin(_1e5e53be7_typeChecker* _self_);
inline void _1cb7634bb_pushReference(_1e5e53be7_typeChecker* _self_, jule::Ptr<_1e5cc8c7b_StructIns>* _85037_t);
inline void _1cb765e91_pushReference(_1e5e53be7_typeChecker* _self_, jule::Ptr<_1e5d03db6_Trait>* _85037_t);
inline void _1e5e54dd5_pushReferenceByKind(_1e5e53be7_typeChecker* _self_, jule::Ptr<_1e5e417ea_TypeKind>* _86040_k);
inline void _1e5e55303_pushCycleError(_1e5e53be7_typeChecker* _self_, jule::Any _87126_def1, jule::Any _87137_def2, _224497295_StrBuilder* _87153_message);
inline jule::Bool _1e5e556ee_checkCrossCycle(_1e5e53be7_typeChecker* _self_, jule::Any _89327_decl, _224497295_StrBuilder* _89343_message);
inline jule::Bool _1e5e55aea_checkIllegalCycles(_1e5e53be7_typeChecker* _self_, jule::Ptr<_1e5ca5692_IdentTypeDecl>* _92735_ident, jule::Any _92762_decl);
inline jule::Trait _1e5e55ee6_fromTypeAlias(_1e5e53be7_typeChecker* _self_, jule::Ptr<_1e5ca5692_IdentTypeDecl>* _97730_decl, jule::Ptr<_1e5e40a08_TypeAlias>* _97757_ta);
inline jule::Ptr<_1e5d065c2_Enum> _1e5e563e2_fromEnum(_1e5e53be7_typeChecker* _self_, jule::Ptr<_1e5ca5692_IdentTypeDecl>* _105425_decl, jule::Ptr<_1e5d065c2_Enum>* _105452_e);
inline jule::Ptr<_1e5d07ccc_TypeEnum> _1e5e567dd_fromTypeEnum(_1e5e53be7_typeChecker* _self_, jule::Ptr<_1e5ca5692_IdentTypeDecl>* _106629_decl, jule::Ptr<_1e5d07ccc_TypeEnum>* _106656_e);
inline jule::Ptr<_1e5d03db6_Trait> _1e5e56bd9_fromTrait(_1e5e53be7_typeChecker* _self_, jule::Ptr<_1e5ca5692_IdentTypeDecl>* _107826_decl, jule::Ptr<_1e5d03db6_Trait>* _107853_t);
inline jule::Bool _1e5e570d5_checkStructIns(_1e5e53be7_typeChecker* _self_, jule::Ptr<_1e5cc8c7b_StructIns>* _109135_ins, jule::Ptr<_1e5c8eacc_Token>* _109157_errorToken);
inline void _1e5e5738d_appendUsedStructReference(_1e5e53be7_typeChecker* _self_, jule::Ptr<_1e5cc5e21_Struct>* _111246_s);
inline jule::Ptr<_1e5cc8c7b_StructIns> _1e5e57789_buildStructInstance(_1e5e53be7_typeChecker* _self_, jule::Ptr<_1e5ca5692_IdentTypeDecl>* _112540_decl, jule::Ptr<_1e5cc5e21_Struct>* _112567_s);
inline jule::Ptr<_1e5cc8c7b_StructIns> _1e5e57b85_fromStructIns(_1e5e53be7_typeChecker* _self_, jule::Ptr<_1e5cc8c7b_StructIns>* _117334_ins, jule::Ptr<_1e5c8eacc_Token> _117355_token);
inline jule::Ptr<_1e5cc8c7b_StructIns> _1e5e58081_fromStruct(_1e5e53be7_typeChecker* _self_, jule::Ptr<_1e5ca5692_IdentTypeDecl>* _119131_decl, jule::Ptr<_1e5cc5e21_Struct>* _119158_s);
inline jule::Trait _1e5e583c2_getDef(_1e5e53be7_typeChecker* _self_, jule::Ptr<_1e5ca5692_IdentTypeDecl>* _123527_decl);
inline jule::Trait _1e5e58713_buildIdent(_1e5e53be7_typeChecker* _self_, jule::Ptr<_1e5ca5692_IdentTypeDecl> _129630_decl);
inline jule::Trait _1e5e58a54_buildSubIdent(_1e5e53be7_typeChecker* _self_, jule::Ptr<_1e5ca595b_SubIdentTypeDecl> _130033_decl);
inline jule::Ptr<_1e5e4d43e_Sptr> _1e5e58d95_buildSptrFromType(_1e5e53be7_typeChecker* _self_, jule::Ptr<_1e5e417ea_TypeKind>* _133438_elem);
inline jule::Ptr<_1e5e4d43e_Sptr> _1e5e591d6_buildSptr(_1e5e53be7_typeChecker* _self_, jule::Ptr<_1e5ca6132_SptrTypeDecl> _135429_decl);
inline jule::Ptr<_1e5e51c06_Ptr> _1e5e59527_buildPtrFromType(_1e5e53be7_typeChecker* _self_, jule::Ptr<_1e5e417ea_TypeKind>* _136337_elem);
inline jule::Ptr<_1e5e51c06_Ptr> _1e5e59868_buildPtr(_1e5e53be7_typeChecker* _self_, jule::Ptr<_1e5ca6ab1_PtrTypeDecl> _137828_decl);
inline jule::Ptr<_1e5e4de12_Slc> _1e5e59ba9_buildSlc(_1e5e53be7_typeChecker* _self_, jule::Ptr<_1e5ca64b7_SlcTypeDecl> _139528_decl);
inline jule::Ptr<_1e5e51233_Arr> _1e5e59eea_buildArr(_1e5e53be7_typeChecker* _self_, jule::Ptr<_1e5ca7353_ArrTypeDecl> _141628_decl);
inline jule::Ptr<_1e5e505a6_Map> _1e5e5a33b_buildMap(_1e5e53be7_typeChecker* _self_, jule::Ptr<_1e5ca7aa1_MapTypeDecl> _146528_decl);
inline jule::Ptr<_1e5e4ea06_Tuple> _1e5e5a67c_buildTuple(_1e5e53be7_typeChecker* _self_, jule::Ptr<_1e5ca67b4_TupleTypeDecl> _149730_decl);
inline jule::Bool _1e5e5a9bd_checkFuncTypes(_1e5e53be7_typeChecker* _self_, jule::Ptr<_1e5ce3416_FnIns>* _151035_f);
inline jule::Ptr<_1e5ce3416_FnIns> _1e5e5ad0e_buildFunc(_1e5e53be7_typeChecker* _self_, jule::Ptr<_1e5cb6c47_FnDecl> _152829_decl);
inline jule::Trait _1e5e5b150_buildByNamespace(_1e5e53be7_typeChecker* _self_, jule::Ptr<_1e5ca5d35_NamespaceTypeDecl> _155836_decl);
inline jule::Ptr<_1e5e417ea_TypeKind> _1e5e5b491_build(_1e5e53be7_typeChecker* _self_, jule::Any* _158226_declKind);
inline jule::Ptr<_1e5e417ea_TypeKind> _1e5e5b7d2_checkDecl(_1e5e53be7_typeChecker* _self_, jule::Ptr<_1e5ca5087_TypeDecl>* _167030_decl);
inline jule::Bool static__1e5e5c22d_prim(jule::Str* _169718_ident, jule::Ptr<_1e5e49913_Prim> _169730_t);
inline jule::Bool static__1e5e5c5a2_exist(jule::Str* _170119_ident, jule::Ptr<_1e5e417ea_TypeKind>* _170136_k);
inline void _1e69bc232_stop(_1e69bba7d_scopeParser* _self_);
inline jule::Bool _1e69bc4b8_stopped(_1e69bba7d_scopeParser* _self_);
inline jule::Bool _1e69bc74e_finished(_1e69bba7d_scopeParser* _self_);
inline jule::Bool _1e69bc9d5_isLastSt(_1e69bba7d_scopeParser* _self_);
inline void _1e69bcd48_pushErr(_1e69bba7d_scopeParser* _self_, jule::Ptr<_1e5c8eacc_Token> _18823_token, jule::Str _18838_fmt);
inline void _1e69bd1ab_pushSuggestion(_1e69bba7d_scopeParser* _self_, jule::Str _19330_fmt, jule::Slice<jule::Any> _19343_args);
inline void _1e69bd464_insertAsNext(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _19733_tokens);
inline jule::Ptr<_1e69bb1dc_stmt> _1e69bd6ea_next(_1e69bba7d_scopeParser* _self_);
inline jule::Ptr<_1e5cb50a8_ScopeTree> _1e69bdae6_buildScope(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _20731_tokens, jule::Ptr<_1e5c8eacc_Token> _20753_end);
inline jule::Ptr<_1e5cb7e02_VarDecl> _1e69bde37_buildVarSt(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _21831_tokens);
inline jule::Ptr<_1e5cb82cb_RetSt> _1e69be278_buildRetSt(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _22630_tokens);
inline jule::Ptr<_1e5cb8a4b_Iter> _1e69be5b9_buildWhileNextIter(_1e69bba7d_scopeParser* _self_, jule::Ptr<_1e69bb1dc_stmt>* _23739_s);
inline jule::Ptr<_1e5cb9376_WhileKind> _1e69be90a_buildWhileIterKind(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _28239_tokens);
inline jule::Slice<jule::Slice<jule::Ptr<_1e5c8eacc_Token>>> _1e69bec4b_getRangeKindKeysTokens(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _28843_toks);
inline jule::Ptr<_1e5cb7e02_VarDecl> _1e69c008c_buildRangeKindKey(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _29438_tokens);
inline jule::Slice<jule::Ptr<_1e5cb7e02_VarDecl>> _1e69c03cd_buildRangeKindKeys(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1e5c8eacc_Token>>>* _32039_parts);
inline void _1e69c0741_setupRangeKindKeysPlain(_1e69bba7d_scopeParser* _self_, jule::Ptr<_1e5cb9c7d_RangeKind>* _32844_rng, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _32866_tokens);
inline void _1e69c0aa4_setupRangeKindKeysExplicit(_1e69bba7d_scopeParser* _self_, jule::Ptr<_1e5cb9c7d_RangeKind>* _34347_rng, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _34369_tokens);
inline void _1e69c0e17_setupRangeKindKeys(_1e69bba7d_scopeParser* _self_, jule::Ptr<_1e5cb9c7d_RangeKind>* _35239_rng, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _35261_tokens);
inline jule::Ptr<_1e5cb9c7d_RangeKind> _1e69c13bd_buildRangeIterKind(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _36039_var_tokens, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _3618_exprTokens, jule::Ptr<_1e5c8eacc_Token>* _36135_inToken);
inline jule::Any _1e69c17b9_buildCommonIterKind(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _37640_tokens, jule::Ptr<_1e5c8eacc_Token>* _37659_err_tok);
inline jule::Ptr<_1e5cb8a4b_Iter> _1e69c1b0a_buildCommonIter(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _40335_tokens);
inline jule::Ptr<_1e5cb8a4b_Iter> _1e69c1e4b_buildIterSt(_1e69bba7d_scopeParser* _self_, jule::Ptr<_1e69bb1dc_stmt>* _43332_st);
inline jule::Ptr<_1e5cba157_BreakSt> _1e69c228c_buildBreakSt(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _44033_tokens);
inline jule::Ptr<_1e5cba531_ContSt> _1e69c25cd_buildContSt(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _45832_tokens);
inline jule::Ptr<_1e5cba9d7_If> _1e69c291e_buildIf(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _47628_tokens);
inline jule::Ptr<_1e5cbadb1_Else> _1e69c2c60_buildElse(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _50930_tokens);
inline jule::Ptr<_1e5cbb367_Conditional> _1e69c30a1_buildIfElseChain(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _53336_tokens);
inline jule::Ptr<_1e5ca93bb_Expr> _1e69c33e2_buildCoCallSt(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _55633_tokens);
inline jule::Ptr<_1e5cb2a45_GotoSt> _1e69c3733_buildGotoSt(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _57232_tokens);
inline jule::Ptr<_1e5cb2d42_FallSt> _1e69c3a74_buildFallSt(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _59232_tokens);
inline jule::Ptr<_1e5cbbaa4_TypeAliasDecl> _1e69c3db5_buildTypeAliasSt(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _60237_tokens);
inline void _1e69c438d_pushCaseExpr(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _60832_tokens, jule::Ptr<_1e5c8eacc_Token> _60854_token, jule::Bool _6093_typeMatch, jule::Slice<jule::Ptr<_1e5ca93bb_Expr>>* _60925_exprs);
inline __jule_tuple_sx_1e5ca93bb_Expr__jule_tuple_bool _1e69c4844_buildCaseExprs(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _63135_tokens, jule::Ptr<_1e5c8eacc_Token>* _63158_colon, jule::Bool _63173_typeMatch);
inline jule::Ptr<_1e5cb50a8_ScopeTree> _1e69c4b85_buildCaseScope(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _67335_tokens);
inline __jule_tuple_x_1e5cbc05a_Case__jule_tuple_bool _1e69c5081_buildCase(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _70030_tokens, jule::Bool _70048_typeMatch);
inline __jule_tuple_sx_1e5cbc05a_Case__jule_tuple_x_1e5cbadb1_Else _1e69c547c_buildCases(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _71930_tokens, jule::Bool _71948_typeMatch);
inline jule::Ptr<_1e5cbc874_MatchCase> _1e69c57bd_buildMatchCase(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _75334_tokens);
inline jule::Ptr<_1e5cb50a8_ScopeTree> _1e69c5b0e_buildScopeSt(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _78632_tokens);
inline jule::Ptr<_1e5cb266b_LabelSt> _1e69c5e50_buildLabelSt(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _82933_tokens);
inline __jule_tuple__1e5cb46e5_StmtData__jule_tuple_bool _1e69c6291_buildIdSt(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _84430_tokens);
inline jule::Ptr<_1e69d6c0d_assignInfo> _1e69c65d2_buildAssignInfo(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _85836_tokens);
inline jule::Ptr<_1e5cb34a2_AssignLeft> _1e69c6923_buildAssignL(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _90333_tokens);
inline jule::Slice<jule::Ptr<_1e5cb34a2_AssignLeft>> _1e69c6c64_buildAssignLs(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1e5c8eacc_Token>>>* _91434_parts);
inline __jule_tuple__1e5cb46e5_StmtData__jule_tuple_bool _1e69c70a5_buildPlainAssign(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _92337_tokens);
inline jule::Bool _1e69c74a1_buildDeclAssign1(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _97737_lefts, jule::Ptr<_1e5cb3a35_AssignSt>* _97759_assign);
inline __jule_tuple_x_1e5cb3a35_AssignSt__jule_tuple_bool _1e69c77e2_buildDeclAssign(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _102535_tokens);
inline __jule_tuple__1e5cb46e5_StmtData__jule_tuple_bool _1e69c7b33_buildAssignSt(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _105934_tokens);
inline jule::Ptr<_1e5ca9c90_UseExpr> _1e69c7e74_buildUseExpr(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _107233_tokens);
inline jule::Any _1e69c82b5_buildConstSt(_1e69bba7d_scopeParser* _self_, jule::Ptr<_1e69bb1dc_stmt>* _108533_st);
inline jule::Any _1e69c8606_buildSt(_1e69bba7d_scopeParser* _self_, jule::Ptr<_1e69bb1dc_stmt>* _111028_st);
inline void _1e69c8969_build(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _117426_tokens, jule::Ptr<_1e5cb50a8_ScopeTree>* _117449_s);
inline void _1e69c9cbc_pushErr(_1e69c94e7_exprBuilder* _self_, jule::Ptr<_1e5c8eacc_Token> _4523_token, jule::Str _4538_fmt, jule::Slice<jule::Any> _4551_args);
inline void _1e69ca130_pushSuggestion(_1e69c94e7_exprBuilder* _self_, jule::Str _5030_fmt, jule::Slice<jule::Any> _5043_args);
inline jule::Ptr<_1e5ca9eb0_TupleExpr> _1e69ca471_buildTuple(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1e5c8eacc_Token>>>* _5431_parts);
inline jule::Ptr<_1e5caa356_LitExpr> _1e69ca7b2_buildLit(_1e69c94e7_exprBuilder* _self_, jule::Ptr<_1e5c8eacc_Token> _6424_token);
inline jule::Any _1e69cae44_buildSingle(_1e69c94e7_exprBuilder* _self_, jule::Ptr<_1e5c8eacc_Token> _7531_token);
inline jule::Ptr<_1e5caabd6_IdentExpr> _1e69cb285_buildBindIdent(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _9235_tokens);
inline jule::Ptr<_1e5cab478_UnaryExpr> _1e69cb5c6_buildUnary(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _11130_tokens);
inline jule::Ptr<_1e5cac4ce_SubIdentExpr> _1e69cb917_buildObjSubIdent(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _13236_tokens);
inline jule::Ptr<_1e5cac105_NsSelectionExpr> _1e69cbc58_buildNsSubIdent(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _14736_tokens);
inline jule::Ptr<_1e5ca5087_TypeDecl> _1e69cc099_buildType(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _17230_tokens);
inline jule::Any _1e69cc3da_buildSubIdent(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _18634_tokens);
inline jule::Ptr<_1e5cab852_VariadicExpr> _1e69cc72b_buildVariadic(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _20833_tokens);
inline jule::Ptr<_1e5ca9685_RangeExpr> _1e69cca6c_buildBetweenParentheses(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _21743_tokens);
inline jule::Ptr<_1e5cabc2b_CastExpr> _1e69ccdad_tryBuildCast(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _22933_tokens);
inline void _1e69cd2cb_pushArg(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5ca93bb_Expr>>* _30328_args, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _30347_tokens, jule::Ptr<_1e5c8eacc_Token> _30365_err_token);
inline jule::Slice<jule::Ptr<_1e5ca93bb_Expr>> _1e69cd61c_buildArgs(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _31229_tokens);
inline jule::Ptr<_1e5cad0e5_FnCallExpr> _1e69cde14_buildFnCall(_1e69c94e7_exprBuilder* _self_, jule::Ptr<_1e5c8eacc_Token>* _37832_token, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _37852_expr, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _37873_args);
inline jule::Any _1e69ce255_buildParenthesesRange(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _38642_tokens);
inline jule::Ptr<_1e5caa730_UnsafeExpr> _1e69ce596_buildUnsafeExpr(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _40835_tokens);
inline jule::Ptr<_1e5cb6c47_FnDecl> _1e69ce8d7_buildAnonFn(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _42332_tokens);
inline jule::Any _1e69cec28_buildUnsafe(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _43232_tokens);
inline void _1e69d0146_pushRangeLitPart(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _44236_part, jule::Ptr<_1e5c8eacc_Token> _4433_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1e5c8eacc_Token>>>* _44328_parts);
inline jule::Slice<jule::Slice<jule::Ptr<_1e5c8eacc_Token>>> _1e69d0487_getBraceRangeLitExprParts(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _45345_tokens);
inline jule::Ptr<_1e5cadada_FieldExprPair> _1e69d07c8_buildFieldExprPair(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _49538_tokens);
inline jule::Ptr<_1e5ca93bb_Expr> _1e69d0b19_buildStructLitExpr(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _50839_tokens);
inline jule::Slice<jule::Ptr<_1e5ca93bb_Expr>> _1e69d0e5a_buildStructLitExprs(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _52340_tokens);
inline jule::Ptr<_1e5cae415_StructLit> _1e69d129b_buildTypedStructLiteral(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _53643_tokens);
inline jule::Ptr<_1e5ca93bb_Expr> _1e69d15dc_buildBraceLitPart(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _56038_tokens);
inline jule::Ptr<_1e5cae8bb_BraceLit> _1e69d192d_buildBraceLit(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _57734_tokens);
inline jule::Any _1e69d1c6e_buildBraceRange(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _59636_tokens);
inline jule::Slice<jule::Slice<jule::Ptr<_1e5c8eacc_Token>>> _1e69d20b0_getEnumerableParts(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _64838_tokens);
inline jule::Ptr<_1e5cb0922_SliceExpr> _1e69d2401_buildSlice(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _65530_tokens);
inline jule::Ptr<_1e5cb137e_IndexingExpr> _1e69d28a7_buildIndexing(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _67733_exprTokens, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _6787_tokens, jule::Ptr<_1e5c8eacc_Token> _67829_errorToken);
inline jule::Ptr<_1e5cb19de_SlicingExpr> _1e69d2ec3_buildSlicing(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _70133_exprTokens, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _70160_start, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _7028_to, jule::Ptr<_1e5c8eacc_Token>* _70227_errorToken, jule::Ptr<_1e5c8eacc_Token> _70251_end);
inline jule::Any _1e69d3314_buildBracketRange(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _71737_tokens);
inline jule::Any _1e69d3655_buildExclRight(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _74235_tokens);
inline jule::Any _1e69d3996_buildData(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _76030_tokens);
inline jule::Any _1e69d3d92_buildBinary(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _82932_tokens, jule::I64 _82950_i);
inline jule::Any _1e69d41d3_build(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _85426_tokens);
inline jule::Any _1e69d4524_buildKind(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _86530_tokens);
inline jule::Ptr<_1e5ca93bb_Expr> _1e69d4865_buildFromTokens(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _87635_tokens);
inline void _1e69da43c_stop(_1e69da10c_parser* _self_);
inline jule::Bool _1e69da6c3_stopped(_1e69da10c_parser* _self_);
inline void _1e69daae1_pushErr(_1e69da10c_parser* _self_, jule::Ptr<_1e5c8eacc_Token> _20823_token, jule::Str _20838_fmt, jule::Slice<jule::Any> _20851_args);
inline void _1e69dae54_pushSuggestion(_1e69da10c_parser* _self_, jule::Str _21330_fmt, jule::Slice<jule::Any> _21343_args);
inline jule::Ptr<_1e5ca93bb_Expr> _1e69db295_buildExpr(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _21731_tokens);
inline jule::Ptr<_1e5ca44a4_Directive> _1e69db5d6_buildDirective(_1e69da10c_parser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _22134_tokens);
inline void _1e69db88e_pushDirective(_1e69da10c_parser* _self_, jule::Ptr<_1e5ca44a4_Directive> _23633_d);
inline jule::Ptr<_1e5cb50a8_ScopeTree> _1e69dbc8a_buildScope(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _24932_tokens, jule::Ptr<_1e5c8eacc_Token> _24954_end);
inline __jule_tuple_x_1e5ca5087_TypeDecl__jule_tuple_bool _1e69dc241__buildType(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _25939_tokens, jule::I64* _2607_i, jule::Bool _26016_err);
inline __jule_tuple_x_1e5ca5087_TypeDecl__jule_tuple_bool _1e69dc6e7_buildType(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _27138_tokens, jule::I64* _2727_i, jule::Bool _27216_err);
inline jule::Ptr<_1e5cbbaa4_TypeAliasDecl> _1e69dca38_buildTypeAliasDecl(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _28140_tokens);
inline void _1e69dcd9b_buildVarTypeAndExpr(jule::Ptr<_1e69da10c_parser> _self_, jule::Ptr<_1e5cb7e02_VarDecl>* _32141_v, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _32159_tokens);
inline void _1e69dd20e_buildVarCommon(jule::Ptr<_1e69da10c_parser> _self_, jule::Ptr<_1e5cb7e02_VarDecl>* _35436_v, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _35453_tokens);
inline void _1e69dd572_buildVarBegin(_1e69da10c_parser* _self_, jule::Ptr<_1e5cb7e02_VarDecl>* _37034_v, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _37052_tokens);
inline jule::Ptr<_1e5cb7e02_VarDecl> _1e69dd8b3_buildVar(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _39829_tokens);
inline jule::Ptr<_1e5cb2292_GenericDecl> _1e69ddc04_buildGeneric(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _41734_tokens);
inline jule::Slice<jule::Ptr<_1e5cb2292_GenericDecl>> _1e69de100_buildGenerics(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _45435_tokens, jule::Ptr<_1e5c8eacc_Token>* _45454_errorToken);
inline jule::Ptr<_1e5cb57e5_ParamDecl> _1e69de441_buildSelfParam(_1e69da10c_parser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _47434_tokens);
inline void _1e69de85e_paramTypeBegin(_1e69da10c_parser* _self_, jule::Ptr<_1e5cb57e5_ParamDecl>* _51435_param, jule::I64* _51459_i, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _51468_tokens);
inline void _1e69debc2_buildParamType(jule::Ptr<_1e69da10c_parser> _self_, jule::Ptr<_1e5cb57e5_ParamDecl>* _52936_param, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _52960_tokens);
inline void _1e69e0035_buildParamBody(jule::Ptr<_1e69da10c_parser> _self_, jule::Ptr<_1e5cb57e5_ParamDecl>* _54236_param, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _54259_tokens);
inline jule::Ptr<_1e5cb57e5_ParamDecl> _1e69e0376_buildParam(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _56231_tokens);
inline void _1e69e062e_checkParams(_1e69da10c_parser* _self_, jule::Slice<jule::Ptr<_1e5cb57e5_ParamDecl>>* _60532_params);
inline jule::Slice<jule::Ptr<_1e5cb57e5_ParamDecl>> _1e69e0a2a_buildParams(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _62533_tokens, jule::Bool _62551_method);
inline __jule_tuple_x_1e5ca7e7a_RetTypeDecl__jule_tuple_bool _1e69e0e26_buildMultiRetType(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _65539_tokens, jule::I64* _65562_i);
inline __jule_tuple_x_1e5ca7e7a_RetTypeDecl__jule_tuple_bool _1e69e1322_buildRetType(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _72634_tokens, jule::I64* _72657_i);
inline jule::Ptr<_1e5cb6c47_FnDecl> _1e69e17c8_buildFnPrototype(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _76538_tokens, jule::I64* _76561_i, jule::Bool _76569_method);
inline jule::Ptr<_1e5cb6c47_FnDecl> _1e69e1c7e_buildFn(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _84229_tokens, jule::Bool _84247_method, jule::Bool _84261_prototype);
inline jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _1e69e20c0_getUseDeclSelectors(_1e69da10c_parser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _87639_tokens);
inline void _1e69e2433_buildBindUseDecl(_1e69da10c_parser* _self_, jule::Ptr<_1e5cbd18d_UseDecl>* _90137_decl, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _90154_tokens);
inline jule::Str _1e69e2774_useDeclTokstoa(_1e69da10c_parser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _91431_tokens);
inline void _1e69e2ad7_buildStdUseDecl(_1e69da10c_parser* _self_, jule::Ptr<_1e5cbd18d_UseDecl>* _92936_decl, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _92956_tokens);
inline void _1e69e2e4a_buildIdentUseDecl(_1e69da10c_parser* _self_, jule::Ptr<_1e5cbd18d_UseDecl>* _98738_decl, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _98758_tokens);
inline void _1e69e32ad_parseUseDecl(_1e69da10c_parser* _self_, jule::Ptr<_1e5cbd18d_UseDecl>* _103533_decl, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _103553_tokens);
inline jule::Ptr<_1e5cbd18d_UseDecl> _1e69e36a9_buildUseDecl(_1e69da10c_parser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _106932_tokens, jule::Bool _106950_binded);
inline jule::Ptr<_1e5ca5087_TypeDecl> _1e69e3aa5_buildTypeEnumItemKind(jule::Ptr<_1e69da10c_parser> _self_, jule::I64* _108343_i, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _108356_tokens);
inline jule::Slice<jule::Ptr<_1e5cbea30_TypeEnumItemDecl>> _1e69e3de6_buildTypeEnumItems(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _112040_tokens);
inline jule::Ptr<_1e5cc0190_TypeEnumDecl> _1e69e4237_buildTypeEnumDecl(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _114439_tokens);
inline jule::Ptr<_1e5ca93bb_Expr> _1e69e4633_buildEnumItemExpr(jule::Ptr<_1e69da10c_parser> _self_, jule::I64* _117139_i, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _117152_tokens);
inline jule::Slice<jule::Ptr<_1e5cbd644_EnumItemDecl>> _1e69e4974_buildEnumItems(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _120336_tokens);
inline jule::Ptr<_1e5cbe205_EnumDecl> _1e69e4cb5_buildEnumDecl(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _124035_tokens);
inline jule::Any _1e69e5106_buildNodeEnumDecl(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _128539_tokens);
inline jule::Ptr<_1e5cc0459_FieldDecl> _1e69e5447_buildField(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _129431_tokens);
inline jule::Slice<jule::Ptr<_1e5cc0459_FieldDecl>> _1e69e5788_buildStructDeclFields(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _134342_tokens);
inline jule::Ptr<_1e5cc0d50_StructDecl> _1e69e5ac9_buildStructDecl(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _135437_tokens);
inline void _1e69e5d82_checkMethodReceiver(_1e69da10c_parser* _self_, jule::Ptr<_1e5cb6c47_FnDecl>* _140236_f);
inline void _1e69e61e5_buildTraitBody(jule::Ptr<_1e69da10c_parser> _self_, jule::Ptr<_1e5cc158c_TraitDecl>* _142136_t, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _142155_tokens);
inline jule::Ptr<_1e5cc158c_TraitDecl> _1e69e6536_buildTraitDecl(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _145336_tokens);
inline jule::Ptr<_1e5cb6c47_FnDecl> _1e69e6877_buildBindFn(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _148332_tokens);
inline jule::Ptr<_1e5cb7e02_VarDecl> _1e69e6bb8_buildBindVar(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _149333_tokens);
inline jule::Ptr<_1e5cc0d50_StructDecl> _1e69e7009_buildBindStruct(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _150636_tokens);
inline jule::Ptr<_1e5cbbaa4_TypeAliasDecl> _1e69e734a_buildBindTypeAlias(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _152039_tokens);
inline jule::Ptr<_1e5cbd18d_UseDecl> _1e69e768b_buildBindUse(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _153033_tokens);
inline jule::Any _1e69e79cc_buildBind(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _154131_tokens);
inline jule::Ptr<_1e5cb6c47_FnDecl> _1e69e7d1d_getMethod(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _156531_tokens);
inline void _1e69e8181_parseImplBody(jule::Ptr<_1e69da10c_parser> _self_, jule::Ptr<_1e5cc1bec_Impl>* _159435_ipl, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _159452_tokens);
inline jule::Ptr<_1e5cc1bec_Impl> _1e69e84c2_buildImpl(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _162730_tokens);
inline jule::Any _1e69e8813_buildNodeData(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _169835_tokens);
inline void _1e69e8abb_applyFnMeta(_1e69da10c_parser* _self_, jule::Ptr<_1e5cb6c47_FnDecl>* _173132_f);
inline void _1e69e8d74_applyMeta(_1e69da10c_parser* _self_, _1e5ca4086_Node* _173630_node);
inline void _1e69e912c_pushUseDecl(jule::Ptr<_1e69da10c_parser> _self_, jule::Ptr<_1e5cbd18d_UseDecl>* _176133_decl);
inline jule::Bool _1e69e946d_pushMetaNodes(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _176935_tokens);
inline _1e5ca4086_Node _1e69e97ae_parseNode(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _178931_st);
inline void _1e69e9a67_appendNode(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _181332_st);
inline void _1e69ea040_removeRange(_1e69da10c_parser* _self_, jule::I64 _182327_i, jule::U64 _182335_id, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _182349_tokens, jule::Slice<jule::I64>* _182372_ranges);
inline void _1e69ea45d_pushWrongOrderCloseErr(_1e69da10c_parser* _self_, jule::Ptr<_1e5c8eacc_Token>* _183539_t, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _183551_tokens, jule::Slice<jule::I64>* _183570_ranges);
inline void _1e69ea936_pushRangeClose(_1e69da10c_parser* _self_, jule::Ptr<_1e5c8eacc_Token> _184630_t, jule::U64 _184641_left, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _184657_tokens, jule::Slice<jule::I64>* _184680_ranges);
inline void _1e69eabde_checkRanges(_1e69da10c_parser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _186428_tokens);
inline void _1e69eae97_parse(jule::Ptr<_1e69da10c_parser> _self_, jule::Ptr<_1e5c95363_File>* _189527_f);
inline void _1e69ec806_pushErr(_1e69ec22e_typeBuilder* _self_, jule::Ptr<_1e5c8eacc_Token> _4123_token, jule::Str _4138_fmt);
inline void _1e69ecb69_pushSuggestion(_1e69ec22e_typeBuilder* _self_, jule::Str _4830_fmt, jule::Slice<jule::Any> _4843_args);
inline jule::Ptr<_1e5ca5087_TypeDecl> _1e69ece00_buildNamespace(_1e69ec22e_typeBuilder* _self_);
inline jule::Slice<jule::Ptr<_1e5ca5087_TypeDecl>> _1e69ed186_buildGenerics(_1e69ec22e_typeBuilder* _self_);
inline jule::Slice<jule::Slice<jule::Ptr<_1e5c8eacc_Token>>> _1e69ed41c_identGenerics(_1e69ec22e_typeBuilder* _self_);
inline jule::Ptr<_1e5ca5087_TypeDecl> _1e69ed6a3_buildIdent(_1e69ec22e_typeBuilder* _self_);
inline jule::Ptr<_1e5ca5087_TypeDecl> _1e69ed939_buildCppLink(_1e69ec22e_typeBuilder* _self_);
inline jule::Ptr<_1e5ca5087_TypeDecl> _1e69edbc0_buildFn(_1e69ec22e_typeBuilder* _self_);
inline jule::Ptr<_1e5ca5087_TypeDecl> _1e69ede56_buildPtr(_1e69ec22e_typeBuilder* _self_);
inline jule::Ptr<_1e5ca5087_TypeDecl> _1e69ee1dc_buildSptr(_1e69ec22e_typeBuilder* _self_);
inline jule::Ptr<_1e5ca5087_TypeDecl> _1e69ee473_buildSlc(_1e69ec22e_typeBuilder* _self_);
inline jule::Ptr<_1e5ca5087_TypeDecl> _1e69ee709_buildArr(_1e69ec22e_typeBuilder* _self_);
inline jule::Ptr<_1e5ca5087_TypeDecl> _1e69ee990_buildMap(_1e69ec22e_typeBuilder* _self_);
inline jule::Ptr<_1e5ca5087_TypeDecl> _1e69eec26_buildEnumerable(_1e69ec22e_typeBuilder* _self_);
inline jule::Ptr<_1e5ca5087_TypeDecl> _1e69eeeac_step(_1e69ec22e_typeBuilder* _self_);
inline __jule_tuple_x_1e5ca5087_TypeDecl__jule_tuple_bool _1e6a00243_build(_1e69ec22e_typeBuilder* _self_);
inline void _1e620ac29_pushErr(_1e620a696_directiveEval* _self_, jule::Ptr<_1e5c8eacc_Token> _2123_t, jule::Str _2134_fmt, jule::Slice<jule::Any> _2147_args);
inline jule::Slice<jule::Slice<jule::Ptr<_1e5c8eacc_Token>>> _1e620b125_splitOperans(_1e620a696_directiveEval* _self_, jule::U64 _3328_op, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _3346_tokens);
inline jule::Bool _1e620b466_evalDirectiveIdent(_1e620a696_directiveEval* _self_, jule::Str _6430_ident);
inline jule::Bool _1e620b7a7_evalDirectivePart(_1e620a696_directiveEval* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _7837_part);
inline jule::Bool _1e620ba3d_eval(_1e620a696_directiveEval* _self_);
inline jule::Ptr<_1e6a01222_JuleImporter> static__1e6a01651_New(_1e62091bc_CompileInfo _5816_info);
inline jule::Slice<jule::Ptr<_1e5d5b2e7_ImportInfo>> _1e6a018d7_AllPackages(_1e6a01222_JuleImporter* _self_);
inline void _1e6a01d27_SetModPath(_1e6a01222_JuleImporter* _self_, jule::Str _7526_path);
inline jule::Str _1e6a020ad_GetModPath(_1e6a01222_JuleImporter* _self_);
inline jule::Str _1e6a023ee_ModById(_1e6a01222_JuleImporter* _self_, jule::I64 _8319_id);
inline jule::Ptr<_1e5d5b2e7_ImportInfo> _1e6a02740_GetImport(_1e6a01222_JuleImporter* _self_, jule::Str _8725_path);
inline __jule_tuple_sx_1e5ca3173_AST__jule_tuple_s_22578b38a_Log _1e6a02b3b_ImportPackage(_1e6a01222_JuleImporter* _self_, jule::Str _9729_path, jule::Bool _9740_updateMod);
inline void _1e6a02de4_Imported(_1e6a01222_JuleImporter* _self_, jule::Ptr<_1e5d5b2e7_ImportInfo> _15428_imp);
inline __jule_tuple_bool__jule_tuple_s_22578b38a_Log _1e6a03323_isPassBuildDirectives(_1e6a01222_JuleImporter* _self_, jule::Ptr<_1e5ca3173_AST>* _18142_file);
inline jule::Ptr<_1e6a07a0e_ExprInspector> static__1e6a07da5_New(void);
inline void _1e6a0815d_args(_1e6a07a0e_ExprInspector* _self_, jule::Slice<jule::Any> _5524_args);
inline void _1e6a08416_inspect(_1e6a07a0e_ExprInspector* _self_, jule::Any* _6128_m);
inline void _1e6a08779_Inspect(_1e6a07a0e_ExprInspector* _self_, jule::Any* _18528_m, jule::Fn<void,jule::Any*> _18542_f);
inline jule::Bool _1c7edb63d_isAllMethodsLive(_1c7edb1ed_specialCaseDefines* _self_, jule::Ptr<_1e5cc5e21_Struct> _3028_s);
inline jule::Ptr<_1c7edc199_ObjectDeadCode> static__1c7edc71b_new(jule::Ptr<_1e6a03ab5_IR>* _5021_ir);
inline jule::Bool _1cbe68cd1_isLive(jule::Ptr<_1c7edc199_ObjectDeadCode> _self_, jule::Ptr<_1e5cc8c7b_StructIns>* _5627_t);
inline jule::Bool _1cbe70bc8_isLive(jule::Ptr<_1c7edc199_ObjectDeadCode> _self_, jule::Ptr<_1e5ce3416_FnIns>* _5627_t);
inline jule::Bool _1cbe97804_isLive(jule::Ptr<_1c7edc199_ObjectDeadCode> _self_, jule::Ptr<_1e5d03db6_Trait>* _5627_t);
inline jule::Bool _1cbea2a2e_isLive(jule::Ptr<_1c7edc199_ObjectDeadCode> _self_, jule::Ptr<_1e5da0bcc_Var>* _5627_t);
inline void _1cbe696d8_pushLive(jule::Ptr<_1c7edc199_ObjectDeadCode> _self_, jule::Ptr<_1e5cc8c7b_StructIns> _7632_t);
inline void _1cbe710d5_pushLive(jule::Ptr<_1c7edc199_ObjectDeadCode> _self_, jule::Ptr<_1e5ce3416_FnIns> _7632_t);
inline void _1cbe9820b_pushLive(jule::Ptr<_1c7edc199_ObjectDeadCode> _self_, jule::Ptr<_1e5d03db6_Trait> _7632_t);
inline void _1cbea2dd6_pushLive(jule::Ptr<_1c7edc199_ObjectDeadCode> _self_, jule::Ptr<_1e5da0bcc_Var> _7632_t);
inline void _1c7edd08a_pushStructAsLive(jule::Ptr<_1c7edc199_ObjectDeadCode> _self_, jule::Ptr<_1e5cc8c7b_StructIns>* _8938_s);
inline void _1c7edd343_setReferencesAsLive(jule::Ptr<_1c7edc199_ObjectDeadCode> _self_, jule::Ptr<_1e5ce65a1_ReferenceStack>* _15241_rs);
inline void _1c7edd5eb_inits(jule::Ptr<_1c7edc199_ObjectDeadCode> _self_, jule::Ptr<_1e5d5e21d_Package>* _20227_pkg);
inline void _1c7edd8a4_collectLivePackage(jule::Ptr<_1c7edc199_ObjectDeadCode> _self_, jule::Ptr<_1e5d5e21d_Package>* _21640_pkg);
inline void _1c7eddaa2_collectLive(jule::Ptr<_1c7edc199_ObjectDeadCode> _self_);
inline void _1c7eddd5a_removeDeadGlobals(jule::Ptr<_1c7edc199_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1e5da0bcc_Var>>* _29239_vars);
inline void _1c7ede113_removeDeadFns(jule::Ptr<_1c7edc199_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1e5ce0358_Fn>>* _30435_funcs);
inline void _1c7ede3bb_removeDeadStructs(jule::Ptr<_1c7edc199_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1e5cc5e21_Struct>>* _32539_structs);
inline void _1c7ede674_removeDeadTraits(jule::Ptr<_1c7edc199_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1e5d03db6_Trait>>* _34738_traits);
inline void _1c7ede92c_removeDeadsFile(jule::Ptr<_1c7edc199_ObjectDeadCode> _self_, jule::Ptr<_1e5e03548_SymbolTable>* _36837_file);
inline void _1c7edebd5_removeDeadsPackage(jule::Ptr<_1c7edc199_ObjectDeadCode> _self_, jule::Ptr<_1e5d5e21d_Package>* _37540_pkg);
inline void _1c7ededd3_removeDeads(jule::Ptr<_1c7edc199_ObjectDeadCode> _self_);
inline void _1c7ee00d1_collectSpecialCaseDefines(jule::Ptr<_1c7edc199_ObjectDeadCode> _self_);
inline void _1c7ee02ce_elimanate(jule::Ptr<_1c7edc199_ObjectDeadCode> _self_);
inline void _1c7ee17db_optimizeChild(jule::Ptr<_1c7ee12be_scopeDeadCode> _self_, jule::Ptr<_1e5d384d3_Scope>* _3935_s);
inline void _1c7ee1a94_optimizeBodyChildExceptional(jule::Ptr<_1c7ee12be_scopeDeadCode> _self_, jule::Ptr<_1e5d384d3_Scope>* _4950_s);
inline void _1c7ee1d4c_optimizeBodyChild(jule::Ptr<_1c7ee12be_scopeDeadCode> _self_, jule::Ptr<_1e5d384d3_Scope>* _5939_s);
inline void _1c7ee2105_optimizeExprModel(jule::Ptr<_1c7ee12be_scopeDeadCode> _self_, jule::Any* _6839_model);
inline void _1c7ee2303_eliminateFollowed(_1c7ee12be_scopeDeadCode* _self_);
inline void _1c7ee25ab_pushGoto(jule::Ptr<_1c7ee12be_scopeDeadCode> _self_, jule::Ptr<_1e5d3b690_GotoSt> _8929_gt);
inline void _1c7ee2864_pushLabel(jule::Ptr<_1c7ee12be_scopeDeadCode> _self_, jule::Ptr<_1e5d3b030_Label> _9930_l);
inline void _1c7ee2b1c_optimizeRangeIter(jule::Ptr<_1c7ee12be_scopeDeadCode> _self_, jule::Ptr<_1e5d3a31a_RangeIter> _11238_it);
inline void _1c7ee2dc5_optimizeWhileIter(jule::Ptr<_1c7ee12be_scopeDeadCode> _self_, jule::Ptr<_1e5d398be_WhileIter> _11738_it);
inline void _1c7ee317d_optimizeInfIter(jule::Ptr<_1c7ee12be_scopeDeadCode> _self_, jule::Ptr<_1e5d39418_InfIter> _12536_it);
inline void _1c7ee3436_optimizeConditional(jule::Ptr<_1c7ee12be_scopeDeadCode> _self_, jule::Ptr<_1e5d3911b_Conditional> _12940_c);
inline void _1c7ee36de_optimizeMatch(jule::Ptr<_1c7ee12be_scopeDeadCode> _self_, jule::Ptr<_1e5d3cc13_Match> _14734_m);
inline void _1c7ee3997_optimizeAssign(jule::Ptr<_1c7ee12be_scopeDeadCode> _self_, jule::Ptr<_1e5d3c020_Assign> _16535_assign);
inline void _1c7ee3c50_optimizeMultiAssign(jule::Ptr<_1c7ee12be_scopeDeadCode> _self_, jule::Ptr<_1e5d3c4c6_MultiAssign> _17040_assign);
inline void _1c7ee4008_optimizeStmt(jule::Ptr<_1c7ee12be_scopeDeadCode> _self_, jule::Any _17933_st);
inline void _1c7ee4206_optimizeStmts(jule::Ptr<_1c7ee12be_scopeDeadCode> _self_);
inline _1c7ee5966_exprDeadCode static__1c7ee5d2e_new(jule::Ptr<_1c7ee12be_scopeDeadCode>* _1821_s);
inline void _1c7ee60d7_optimize(_1c7ee5966_exprDeadCode* _self_, jule::Any* _2425_model);
inline void _1e603aecc_pushVar(_1e603aa37_nils* _self_, jule::Uintptr _2923_var, jule::Bool _2937_safe);
inline jule::Bool _1e603b31d_removeVar(_1e603aa37_nils* _self_, jule::Uintptr _5225_var);
inline jule::Bool _1e603b65e_isSafe(_1e603aa37_nils* _self_, jule::Uintptr _6622_var);
inline jule::Ptr<_1e6a10709_scopeOptimizer> static__1e6a10cae_new(jule::Ptr<_1e5d384d3_Scope> _5120_scope);
inline void _1e6a11067_setCurrentStmt(jule::Ptr<_1e6a10709_scopeOptimizer> _self_, jule::Any _6335_stmt);
inline void _1e6a11265_removeCurrent(jule::Ptr<_1e6a10709_scopeOptimizer> _self_);
inline jule::Bool _1e6a114eb_isLastStmt(jule::Ptr<_1e6a10709_scopeOptimizer> _self_);
inline jule::Bool _1e6a11782_isIter(jule::Ptr<_1e6a10709_scopeOptimizer> _self_);
inline void _1e6a11a3a_optimizeData(jule::Ptr<_1e6a10709_scopeOptimizer> _self_, jule::Ptr<_1e5e08c13_Data> _9533_d);
inline void _1e6a11ce3_optimizeVar(jule::Ptr<_1e6a10709_scopeOptimizer> _self_, jule::Ptr<_1e5da0bcc_Var> _12132_v);
inline void _1e6a1209b_optimizeConditional(jule::Ptr<_1e6a10709_scopeOptimizer> _self_, jule::Ptr<_1e5d3911b_Conditional> _14240_c);
inline void _1e6a124b9_buildDefaultConstantTrueCase(jule::Ptr<_1e6a10709_scopeOptimizer> _self_, jule::Ptr<_1e5d3d73b_Case> _21649_case, jule::I64* _21667_i, jule::Ptr<_1e5d3cc13_Match>* _21680_m);
inline void _1e6a12772_optimizeMatch(jule::Ptr<_1e6a10709_scopeOptimizer> _self_, jule::Ptr<_1e5d3cc13_Match> _24234_m);
inline void _1e6a12a2a_optimizeRangeIter(jule::Ptr<_1e6a10709_scopeOptimizer> _self_, jule::Ptr<_1e5d3a31a_RangeIter> _32438_it);
inline void _1e6a12cd3_optimizeWhileIter(jule::Ptr<_1e6a10709_scopeOptimizer> _self_, jule::Ptr<_1e5d398be_WhileIter> _36938_it);
inline jule::Bool _1e6a13124_substr(jule::Ptr<_1e6a10709_scopeOptimizer> _self_, jule::Ptr<_1e5d3c020_Assign> _37527_a);
inline jule::Bool _1e6a13465_strAssign(jule::Ptr<_1e6a10709_scopeOptimizer> _self_, jule::Ptr<_1e5d3c020_Assign> _39530_a);
inline jule::Bool _1e6a137a6_sliceAssign(jule::Ptr<_1e6a10709_scopeOptimizer> _self_, jule::Ptr<_1e5d3c020_Assign> _40632_a);
inline void _1e6a13a5e_optimizePostfix(jule::Ptr<_1e6a10709_scopeOptimizer> _self_, jule::Ptr<_1e5d3ba69_Postfix> _41436_postfix);
inline void _1e6a13d17_optimizeAssign(jule::Ptr<_1e6a10709_scopeOptimizer> _self_, jule::Ptr<_1e5d3c020_Assign> _42135_assign);
inline jule::Bool _1e6a14158_tryOptimizeSwap(jule::Ptr<_1e6a10709_scopeOptimizer> _self_, jule::Ptr<_1e5d3c4c6_MultiAssign>* _53537_assign);
inline void _1e6a14411_optimizeMultiAssign(jule::Ptr<_1e6a10709_scopeOptimizer> _self_, jule::Ptr<_1e5d3c4c6_MultiAssign> _57240_assign);
inline void _1e6a146b9_optimizeRet(jule::Ptr<_1e6a10709_scopeOptimizer> _self_, jule::Ptr<_1e5d3e2ca_RetSt> _61832_r);
inline void _1e6a14972_optimizeStmt(jule::Ptr<_1e6a10709_scopeOptimizer> _self_, jule::Any _64233_stmt);
inline void _1e6a14c2a_optimizeChild(jule::Ptr<_1e6a10709_scopeOptimizer> _self_, jule::Ptr<_1e5d384d3_Scope> _67134_child);
inline void _1e6a14e28_optimize(jule::Ptr<_1e6a10709_scopeOptimizer> _self_);
inline void static__1e6a17634_optimize(jule::Any* _3626_model);
inline void static__1e6a17920_optimizeData(jule::Any* _4030_model, jule::Ptr<_1e6a2051b_data>* _4053_d);
inline jule::Bool _1e6a17c61_selfCmpCond(_1e6a1715b_exprOptimizer* _self_, jule::Ptr<_1e5cd2d51_BinaryExprModel>* _5228_m);
inline jule::Bool _1e6a180a2_boolCond(_1e6a1715b_exprOptimizer* _self_, jule::Ptr<_1e5cd2d51_BinaryExprModel>* _7625_m);
inline jule::Bool _1e6a183e3_strCond(_1e6a1715b_exprOptimizer* _self_, jule::Ptr<_1e5cd2d51_BinaryExprModel> _12923_m);
inline jule::Bool _1e6a18899_tryNeutralElement1(_1e6a1715b_exprOptimizer* _self_, jule::Ptr<_1e5cd2d51_BinaryExprModel>* _18635_m, jule::Ptr<_1e21a449b_Const> _18660_c, jule::Ptr<_1e5cd2856_OperandExprModel>* _18672_nc);
inline jule::Bool _1e6a18bda_tryNeutralElement(_1e6a1715b_exprOptimizer* _self_, jule::Ptr<_1e5cd2d51_BinaryExprModel>* _23034_m);
inline void _1e6a18e93_checkBinaryForBoundary(_1e6a1715b_exprOptimizer* _self_, jule::Ptr<_1e5cd2d51_BinaryExprModel>* _24539_m);
inline void _1e6a1924b_checkBinaryForNil(_1e6a1715b_exprOptimizer* _self_, jule::Ptr<_1e5cd2d51_BinaryExprModel>* _29734_m);
inline void _1e6a19504_binary(_1e6a1715b_exprOptimizer* _self_, jule::Ptr<_1e5cd2d51_BinaryExprModel> _32922_m);
inline void _1e6a197ac_unary(_1e6a1715b_exprOptimizer* _self_, jule::Ptr<_1e5cd322a_UnaryExprModel> _42721_m);
inline void _1e6a19a65_structureLit(_1e6a1715b_exprOptimizer* _self_, jule::Ptr<_1e5cd3aee_StructLitExprModel> _47028_m);
inline void _1e6a19d1d_casting(_1e6a1715b_exprOptimizer* _self_, jule::Ptr<_1e5cd447e_CastingExprModel> _48623_m);
inline void _1e6a1a181_args(_1e6a1715b_exprOptimizer* _self_, jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>> _50020_params, jule::Slice<jule::Any>* _50046_args);
inline void _1e6a1a439_scope(_1e6a1715b_exprOptimizer* _self_, jule::Ptr<_1e5d384d3_Scope>* _52222_s);
inline void _1e6a1a6e2_funcCall(_1e6a1715b_exprOptimizer* _self_, jule::Ptr<_1e5cd4d31_FnCallExprModel> _52824_m);
inline void _1e6a1a99a_indexing(_1e6a1715b_exprOptimizer* _self_, jule::Ptr<_1e5cd56b1_IndexingExprModel> _53524_m);
inline void _1e6a1ac53_anonFunc(_1e6a1715b_exprOptimizer* _self_, jule::Ptr<_1e5cd5b67_AnonFnExprModel> _55924_m);
inline void _1e6a1ae51_do(_1e6a1715b_exprOptimizer* _self_);
inline void _1e6a1cd32_pushVar(jule::Ptr<_1e6a1c88c_dynamic> _self_, jule::Uintptr _3224_var, jule::Ptr<_1e5e417ea_TypeKind> _3242_kind);
inline jule::Bool _1e6a1d173_removeVar(_1e6a1c88c_dynamic* _self_, jule::Uintptr _5525_var);
inline jule::Bool _1e6a1d56e_isFits(_1e6a1c88c_dynamic* _self_, jule::Uintptr _6922_var, jule::Ptr<_1e5e417ea_TypeKind> _6936_kind);
inline _1e6a20021_dataCheckpoint _1e6a208c3_getCheckpoint(_1e6a2051b_data* _self_);
inline void _1e6a20b7b_loadCheckpoint(_1e6a2051b_data* _self_, _1e6a20021_dataCheckpoint* _3535_c);
inline void _1e6a223a8_pushVar(_1e6a21e13_boundary* _self_, jule::Uintptr _2423_var, jule::Any _2441_maxSize);
inline jule::Bool _1e6a22ae5_fitsMaxSize(_1e6a21e13_boundary* _self_, jule::Uintptr _7127_var, jule::Any _7141_expr);
inline jule::Ptr<_1c7ee6b54_Optimizer> static__1c7ee710a_New(jule::Ptr<_1e6a03ab5_IR>* _2621_ir);
inline void _1c7ee73b3_optimizeGlobal(_1c7ee6b54_Optimizer* _self_, jule::Ptr<_1e5da0bcc_Var>* _3235_v);
inline void _1c7ee766b_optimizeFunction(_1c7ee6b54_Optimizer* _self_, jule::Ptr<_1e5ce0358_Fn>* _3837_func);
inline void _1c7ee7924_optimizeStruct(_1c7ee6b54_Optimizer* _self_, jule::Ptr<_1e5cc5e21_Struct>* _4835_s);
inline void _1c7ee7bcc_optimizeGlobals(_1c7ee6b54_Optimizer* _self_, jule::Ptr<_1e5d5e21d_Package>* _6436_p);
inline void _1c7ee7e85_optimizeFunctions(_1c7ee6b54_Optimizer* _self_, jule::Ptr<_1e5d5e21d_Package>* _7238_p);
inline void _1c7ee823d_optimizeStructs(_1c7ee6b54_Optimizer* _self_, jule::Ptr<_1e5d5e21d_Package>* _8036_p);
inline void _1c7ee84e6_optimizePackage(_1c7ee6b54_Optimizer* _self_, jule::Ptr<_1e5d5e21d_Package>* _8836_p);
inline void _1c7ee86e4_Optimize(_1c7ee6b54_Optimizer* _self_);
inline void static__1c7ee8ea8_Reset(void);
inline void static__1c801c031_Print(jule::Str _1918_escape, jule::Str _1931_text);
inline void static__1c801ea39_LogFlat(_22578b38a_Log* _1421_l);
inline void static__1c801ec6a_LogError(_22578b38a_Log* _1922_l);
inline void static__1c801ee9b_Log(_22578b38a_Log* _6417_l);
inline void static__1c80201cc_PrintLogs(jule::Slice<_22578b38a_Log>* _7423_logs);
inline _1c8a6bdb0_Time static__1c8a6c29a_Unix(jule::U64 _9117_sec);
inline _1c8a6bdb0_Time static__1c8a6c4a9_Now(void);
inline _1c8a6b6d9_AbsTime _1c8a6db92_Abs(_1c8a6bdb0_Time* _self_);
inline jule::Ptr<_1c899847e_scopeCoder> static__1c8998b77_new(jule::Ptr<_1c8a7d92c_ObjectCoder>* _7321_oc);
inline void _1cc38c39c_iterHead(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5d3a31a_RangeIter>* _8029_it, jule::Bool* _8041_ref, jule::Str _8052_begin);
inline void _1c899934d_rangeIndexIter(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5d3a31a_RangeIter>* _12936_it);
inline void _1c8999606_rangeHashmapIter(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5d3a31a_RangeIter>* _19638_it);
inline void _1c89998ae_strRuneIter(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e603941a_StrRuneIter> _27932_it);
inline void _1c8999b67_ifCase(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5d38901_If> _39127_i);
inline void _1c8999e20_conditional(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5d3911b_Conditional> _40032_c);
inline void _1c899a1c8_infIter(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5d39418_InfIter> _42028_it);
inline void _1c899a481_whileIter(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5d398be_WhileIter> _43730_it);
inline void _1c899a739_rangeIter(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5d3a31a_RangeIter> _47630_it);
inline void _1c899a9e2_cont(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5d3a6a0_ContSt> _48921_c);
inline void _1c899ac9a_label(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5d3b030_Label> _49422_l);
inline void _1c899b053_gotoSt(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5d3b690_GotoSt> _49923_gt);
inline void _1c899b30b_postfix(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5d3ba69_Postfix> _50428_p);
inline void _1c899b5b4_assignLeft(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Any* _51132_model);
inline void _1c899b86c_shl(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5d3c020_Assign> _54324_a);
inline void _1c899bb25_shr(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5d3c020_Assign> _54924_a);
inline void _1c899bdcd_divByZeroAssign(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5d3c020_Assign> _55536_a);
inline void _1c899c3a6_operatorOverloadingAssign(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5cc8c7b_StructIns>* _56147_s, jule::Ptr<_1e5cd2856_OperandExprModel>* _56173_l, jule::Ptr<_1e5cd2856_OperandExprModel>* _5628_r, jule::U64 _56236_op);
inline void _1c899c65e_assign(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5d3c020_Assign> _57627_a);
inline void _1c899c917_mapLookupAssign(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5d3c4c6_MultiAssign>* _60937_a);
inline void _1c899cbc0_multiAssignTup(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5d3c4c6_MultiAssign>* _64236_a);
inline void _1c899ce78_multiAssignFn(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5d3c4c6_MultiAssign>* _69135_a);
inline void _1c899d231_multiAssign(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5d3c4c6_MultiAssign> _75032_a);
inline jule::Fn<void> _1c899d572_matchExpr(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5d3cc13_Match> _77630_m);
inline void _1c899d8d5_case(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5d3cc13_Match> _78625_m, jule::Ptr<_1e5d3d73b_Case> _78640_c);
inline void _1c899db8d_matchSt(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5d3cc13_Match> _85628_m);
inline void _1c899de46_fallSt(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5d3de34_FallSt> _91123_f);
inline void _1c899e1ee_breakSt(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5d3aa79_BreakSt> _91624_b);
inline void _1c899e4a7_setResult(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5d3e2ca_RetSt> _92530_r);
inline void _1c899e760_retSt(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5d3e2ca_RetSt> _95326_r);
inline void _1c899ea18_var(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5da0bcc_Var> _98924_v);
inline void _1c899ecc1_mutSlicing(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e603810b_MutSlicingExprModel> _99531_m);
inline void _1c89a0079_swap(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e6036da7_SwapExprModel> _101225_m);
inline void _1c89a0332_exceptionalForwarding(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e6036a22_ExceptionalForwardingExprModel> _102042_m);
inline void _1c89a05da_st(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Any _102623_st);
inline void _1c89a0893_scopeStmts(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5d384d3_Scope>* _108232_s);
inline void _1c89a0b4b_scope(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5d384d3_Scope> _109126_s);
inline void _1c89a0e04_commonFuncScope(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5ce3416_FnIns>* _110637_f);
inline void _1c89a1267_anonFuncScope(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5cd5b67_AnonFnExprModel> _114634_m, jule::Str _114655_ident);
inline void _1c89a1520_funcScope(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5ce3416_FnIns> _117830_f);
inline jule::Ptr<_1c89a4c60_exprCoder> static__1c89a515b_new(jule::Ptr<_1c8a7d92c_ObjectCoder>* _11221_oc);
inline void _1c89a5414_string(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e21a449b_Const>* _11824_c);
inline void _1c89a56bc_boolean(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Bool _13324_b);
inline void _1c89a58ba_nilLit(jule::Ptr<_1c89a4c60_exprCoder> _self_);
inline jule::Bool _1c89a5c0b_ftoaSpecialCases(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::F64* _14534_x);
inline void _1c89a5eb4_float32(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e21a449b_Const>* _15925_c);
inline void _1c89a626c_float64(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e21a449b_Const>* _17825_c);
inline void _1c89a6525_constant(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e21a449b_Const> _19629_c);
inline void _1c89a6943_operatorOverloadingUnary(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cc8c7b_StructIns>* _22046_s, jule::U64 _22061_op, jule::Any _22078_e);
inline void _1c89a6d61_divByZeroBinary(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5c8eacc_Token>* _23233_op, jule::Ptr<_1e5cd2856_OperandExprModel>* _23250_l, jule::Ptr<_1e5cd2856_OperandExprModel>* _23277_r);
inline void _1c89a7559__unsafeBinary(jule::Ptr<_1c89a4c60_exprCoder> _self_, _224497295_StrBuilder* _27135_buf, jule::Str* _27153_l, jule::Str* _27162_r, jule::Ptr<_1e5e417ea_TypeKind>* _2728_lk, jule::Ptr<_1e5e417ea_TypeKind>* _27228_rk, jule::U64 _27243_op, jule::Str _27256_kind);
inline void _1c89a7812_unsafeBinary(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd2d51_BinaryExprModel> _34233_m);
inline void _1c89a7b75_shl(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd2856_OperandExprModel>* _35425_l, jule::Ptr<_1e5cd2856_OperandExprModel>* _35452_r);
inline void _1c89a7ed8_shr(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd2856_OperandExprModel>* _38225_l, jule::Ptr<_1e5cd2856_OperandExprModel>* _38252_r);
inline void _1c89a8291_binary(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd2d51_BinaryExprModel> _41027_m);
inline void _1c89a8549_var(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5da0bcc_Var> _43424_m);
inline void _1c89a8802_structureIns(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cc8c7b_StructIns> _45033_m);
inline void _1c89a8aaa_unary(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd322a_UnaryExprModel> _45426_m);
inline void _1c89a8d63_structureLit(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd3aee_StructLitExprModel> _48533_m);
inline void _1c89a911b_allocStructure(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd3deb_AllocStructLitExprModel> _52835_m);
inline void _1c89a93c4_possibleRefExpr(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Any _53632_expr);
inline void _1c89a97e2_castTraitFromTrait(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd447e_CastingExprModel>* _55040_m, jule::Ptr<_1e5d03db6_Trait> _55066_t1, jule::Ptr<_1e5d03db6_Trait> _55082_t2);
inline void _1c89a9a9a_casting(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd447e_CastingExprModel> _56328_m);
inline void _1c89a9d53_args(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd4d31_FnCallExprModel>* _71026_m);
inline void _1c89aa10b_modelForCall(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Any _74133_expr);
inline void _1c89aa3b4_pushCallInf(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd4d31_FnCallExprModel>* _75629_m);
inline jule::Bool _1c89aa705_isWrapped(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd4d31_FnCallExprModel>* _77931_m);
inline jule::Bool _1c89aaa46_writeReceiver(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Any _80334_m);
inline void _1c89aacee_pureFuncCall(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd4d31_FnCallExprModel>* _81634_m);
inline void _1c89ab0a7_coFuncCall(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd4d31_FnCallExprModel>* _90632_m);
inline void _1c89ab41a_writeUseExpr(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5ce3416_FnIns>* _98434_f, jule::Ptr<_1e5e08c13_Data> _98449_d);
inline void _1c89ab6c3_funcCall(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd4d31_FnCallExprModel> _100529_m);
inline void _1c89ab97b_slice(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd520a_SliceExprModel> _107826_m);
inline void _1c89abc34_indexing(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd56b1_IndexingExprModel> _110729_m);
inline void _1c89abedc_unsafeIndexing(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e603878d_UnsafeIndexingExprModel> _115935_m);
inline void _1c89ac295_anonFunc(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd5b67_AnonFnExprModel> _117629_m);
inline void _1c89ac54d_mapExpr(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd641a_MapExprModel> _120728_m);
inline void _1c89ac806_slicing(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd699d_SlicingExprModel> _124328_m);
inline void _1c89acaae_traitSub(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd7031_TraitSubIdentExprModel> _125929_m);
inline void _1c89acd67_structureSub(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd78c2_StructSubIdentExprModel> _127533_m);
inline void _1c89ad120_array(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd8142_ArrayExprModel> _128426_m);
inline void _1c89ad3c8_funcInsCommon(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5ce3416_FnIns> _133434_m);
inline void _1c89ad681_funcIns(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5ce3416_FnIns> _134128_m);
inline void _1c89ad939_tuple(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd843e_TupleExprModel> _135226_m);
inline void _1c89adbe2_newCall(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd90bb_BuiltinNewCallExprModel> _136328_m);
inline void _1c89ade9a_outCall(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd8818_BuiltinOutCallExprModel> _137528_m);
inline void _1c89ae253_outlnCall(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd8be2_BuiltinOutlnCallExprModel> _138830_m);
inline void _1c89ae50b_panicCall(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd9495_BuiltinPanicCallExprModel> _140130_m);
inline void _1c89ae7b4_errorCall(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cdb09b_BuiltinErrorCallExprModel> _140930_m);
inline void _1c89aea6c_copyCall(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cdabc2_BuiltinCopyCallExprModel> _144129_m);
inline void _1c89aed25_lenCall(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cda122_BuiltinLenCallExprModel> _144928_m);
inline void _1c89b00cd_capCall(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cda41e_BuiltinCapCallExprModel> _146628_m);
inline void _1c89b0386_deleteCall(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cda7e8_BuiltinDeleteCallExprModel> _147131_m);
inline void _1c89b063e_makeCallSlice(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd994b_BuiltinMakeCallExprModel>* _149635_m);
inline void _1c89b08e7_makeCallStr(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd994b_BuiltinMakeCallExprModel>* _152033_m);
inline void _1c89b0ba0_makeCall(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd994b_BuiltinMakeCallExprModel> _153129_m);
inline void _1c89b0e58_pushToSlice(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e6038b67_PushToSliceExprModel> _153932_m);
inline void _1c89b1211_appendToSlice(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e6039041_AppendToSliceExprModel> _159934_m);
inline void _1c89b14b9_appendCall(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd9d25_BuiltinAppendCallExprModel> _160731_m);
inline void _1c89b1772_sizeof(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cdb398_SizeofExprModel> _161527_m);
inline void _1c89b1a2a_alignof(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cdba4c_AlignofExprModel> _162128_m);
inline void _1c89b1cd3_runeLit(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cdbc39_RuneExprModel> _162724_m);
inline void _1c89b208b_structureStatic(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd7c68_StructStaticIdentExprModel> _164136_m);
inline void _1c89b2344_backendEmit(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cdc0ad_BackendEmitExprModel> _164532_m);
inline void _1c89b25ec_free(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cdc3aa_FreeExprModel> _166125_m);
inline void _1c89b28a5_strComp(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e6037a78_StrCompExprModel> _167028_m);
inline void _1c89b2b5d_emptyCompare(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e6037281_EmptyCompareExprModel> _168633_m);
inline void _1c89b2e16_unsafeDeref(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e6039717_UnsafeDerefExprModel> _169532_m);
inline void _1c89b31be_unsafeCasting(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e6039a14_UnsafeCastingExprModel> _170634_m);
inline void _1c89b3477_model(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Any _172326_m);
inline jule::Bool _1c89b37b8_handleFieldByDefault(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cc81cb_FieldIns>* _182342_f);
inline void _1c89b3a71_initStructLit(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cc8c7b_StructIns>* _184435_s);
inline void _1c89b3d29_fillCollectionByDefault(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5e417ea_TypeKind>* _186645_elem);
inline void _1c89b40d2_initCollection(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5e417ea_TypeKind>* _188136_elem);
inline void _1c89b438a_initArray(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5e51233_Arr>* _189531_arr);
inline void _1c89b4643_initExpr(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5e417ea_TypeKind> _190929_t);
inline jule::Ptr<_1c89b7514_TestCoder> static__1c89b79ba_New(jule::Ptr<_1c8a7d92c_ObjectCoder>* _2921_oc);
inline jule::Ptr<_1e5d5b2e7_ImportInfo> _1c89b7c51_findTestingPackage(jule::Ptr<_1c89b7514_TestCoder> _self_);
inline void _1c89b8009_appendTest(jule::Ptr<_1c89b7514_TestCoder> _self_, jule::Ptr<_1e5ce3416_FnIns> _4431_f);
inline void _1c89b82b2_appendPackageTests(jule::Ptr<_1c89b7514_TestCoder> _self_, jule::Ptr<_1e5d5e21d_Package>* _5940_p);
inline jule::Bool _1c89b8548_readyTestingPackage(jule::Ptr<_1c89b7514_TestCoder> _self_);
inline void _1c89b8746_callTmReset(jule::Ptr<_1c89b7514_TestCoder> _self_);
inline void _1c89b8944_callTmFailed(jule::Ptr<_1c89b7514_TestCoder> _self_);
inline void _1c89b8b42_callTmSkipped(jule::Ptr<_1c89b7514_TestCoder> _self_);
inline void _1c89b8d40_Serialize(jule::Ptr<_1c89b7514_TestCoder> _self_);
inline void static__1c89ba9ce_writeIdentTo(_224497295_StrBuilder* _3530_buf, jule::Str* _3548_ident);
inline void static__1c89bad75_toOut(_224497295_StrBuilder* _6323_buf, jule::Str _6340_ident, jule::Uintptr _6352_addr);
inline void static__1c89bb2c6_toLocal(_224497295_StrBuilder* _7825_buf, jule::I64 _7842_row, jule::I64 _7852_col, jule::Str* _7863_ident);
inline void static__1c89bb5b2_func(_224497295_StrBuilder* _8622_buf, jule::Ptr<_1e5ce0358_Fn>* _8644_f);
inline void static__1c89bb89d_funcIns(_224497295_StrBuilder* _10725_buf, jule::Ptr<_1e5ce3416_FnIns>* _10747_f);
inline void static__1c89bbb89_traitDecl(_224497295_StrBuilder* _12227_buf, jule::Ptr<_1e5d03db6_Trait> _12244_t);
inline void static__1c89bbe75_param(_224497295_StrBuilder* _12623_buf, jule::Ptr<_1e5cdd884_Param>* _12641_p);
inline void static__1c89bc261_structure(_224497295_StrBuilder* _14127_buf, jule::Ptr<_1e5cc5e21_Struct>* _14145_s);
inline void static__1c89bc54c_structureIns(_224497295_StrBuilder* _15230_buf, jule::Ptr<_1e5cc8c7b_StructIns>* _15248_s);
inline void static__1c89bc838_field(_224497295_StrBuilder* _16023_buf, jule::Ptr<_1e5cc2eea_Field>* _16041_f);
inline void static__1c89bcb24_var(_224497295_StrBuilder* _17021_buf, jule::Ptr<_1e5da0bcc_Var> _17042_v);
inline void static__1c89bce10_iterBegin(_224497295_StrBuilder* _19727_buf, jule::Uintptr _19744_it);
inline void static__1c89bd1eb_iterEnd(_224497295_StrBuilder* _20225_buf, jule::Uintptr _20242_it);
inline void static__1c89bd4d7_iterNext(_224497295_StrBuilder* _20726_buf, jule::Uintptr _20743_it);
inline void static__1c89bd7c3_label(_224497295_StrBuilder* _21223_buf, jule::Uintptr _21240_u);
inline void static__1c89bdaae_matchEnd(_224497295_StrBuilder* _21726_buf, jule::Uintptr _21743_m);
inline void static__1c89bdd9a_caseBegin(_224497295_StrBuilder* _22227_buf, jule::Uintptr _22244_c);
inline jule::Ptr<_1c8a7d92c_ObjectCoder> static__1c8a7dd8e_New(jule::Ptr<_1e6a03ab5_IR>* _14021_ir, _1c8a767c1_SerializationInfo _14030_info);
inline void _1c8a7e147_write(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Str _15322_s);
inline void _1c8a7e400_writeBytes(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Slice<jule::U8> _15727_b);
inline void _1c8a7e5ed_addIndent(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_);
inline void _1c8a7e7eb_doneIndent(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_);
inline void _1c8a7e9e9_indent(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_);
inline jule::I64 _1c8a7ed3a_findAnyType(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5e417ea_TypeKind>* _17633_t);
inline jule::I64 _1c8a8017b_pushCoSpawn(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5ce3416_FnIns> _18532_f);
inline jule::I64 _1c8a804bc_pushDealloc(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5e417ea_TypeKind> _28832_t);
inline jule::Str _1c8a8080d_pushAnonFn(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5cd5b67_AnonFnExprModel>* _30432_m);
inline jule::I64 _1c8a80b4e_pushAnyType(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5e417ea_TypeKind> _34632_t);
inline void _1c8a80e07_pushResultIns(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5ce3416_FnIns>* _45735_f);
inline void _1c8a811b0_pushResult(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5ce0358_Fn>* _47832_f);
inline void _1c8a81523_pushAndWriteMaskMapper(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5d03db6_Trait> _49143_t1, jule::Ptr<_1e5d03db6_Trait> _49159_t2);
inline void _1c8a817cb_locInfo(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5c8eacc_Token>* _54225_t);
inline void _1c8a819c9_head(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_);
inline void _1c8a81c82_links(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Bool _60922_std);
inline void _1c8a8203a_prepareStructure(_1c8a7d92c_ObjectCoder* _self_, jule::Ptr<_1e5cc5e21_Struct>* _63237_s);
inline void _1c8a82238_prepareStructures(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_);
inline void _1c8a824e1_structurePlainDecl(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5cc5e21_Struct>* _66340_s);
inline void _1c8a826de_structurePlainDecls(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_);
inline void _1c8a82997_fieldDecl(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5cc81cb_FieldIns>* _67931_f);
inline void _1c8a82c50_structureDestructor(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5cc8c7b_StructIns>* _68641_s);
inline void _1c8a8316d_structureOperatorEq(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Str _70236_ident, jule::Ptr<_1e5cc8c7b_StructIns>* _70253_s, jule::Bool _70268_decl);
inline void _1c8a834d1_structureOperators(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5cc8c7b_StructIns>* _77040_s, jule::Bool _77055_decl);
inline void _1c8a83789_structureInsDecl(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5cc8c7b_StructIns>* _77938_s);
inline void _1c8a83a42_structureDecl(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5cc5e21_Struct>* _80935_s);
inline void _1c8a83c40_structureDecls(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_);
inline void _1c8a83e3d_structureMethodDecls(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_);
inline void _1c8a84416_funcHead(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, _224497295_StrBuilder* _84330_buf, jule::Ptr<_1e5ce3416_FnIns>* _84352_f, jule::Bool _84363_ptr, jule::Str _84374_ident);
inline void _1c8a84779_funcDeclIns(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5ce3416_FnIns>* _86233_f, jule::Bool _86244_ptr);
inline void _1c8a84adc_funcDecl(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5ce0358_Fn>* _87030_f, jule::Bool _87038_ptr);
inline void _1c8a84d95_funcDeclTrait(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5ce0358_Fn>* _87635_f);
inline void _1c8a85093_funcDecls(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_);
inline void _1c8a8534b_traitDataTypeMethods(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5d03db6_Trait>* _89842_t);
inline void _1c8a85549_traitDataTypes(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_);
inline void _1c8a858ac_paramIns(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, _224497295_StrBuilder* _93430_buf, jule::Ptr<_1e5ce22b1_ParamIns>* _93452_p);
inline void _1c8a85c20_paramsIns(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, _224497295_StrBuilder* _94031_buf, jule::Ptr<_1e5ce3416_FnIns>* _94053_f);
inline void _1c8a86083_varInitExpr(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5da0bcc_Var>* _96133_v, jule::Fn<void> _96142_init);
inline void _1c8a8633b_var(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5da0bcc_Var> _97924_v);
inline void _1c8a8669e_anonFuncInsDecl(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5cd5b67_AnonFnExprModel>* _101037_m, jule::Str _101058_ident);
inline void _1c8a86a12_anonFuncIns(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5cd5b67_AnonFnExprModel>* _101633_m, jule::Str _101654_ident);
inline void _1c8a86d75_funcIns(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5ce3416_FnIns> _102628_f, jule::Str _102639_ident);
inline void _1c8a8712d_func(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5ce0358_Fn>* _103626_f);
inline void _1c8a87491_funcTrait(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5cc8c7b_StructIns>* _104227_s, jule::Ptr<_1e5ce3416_FnIns>* _104247_f);
inline __jule_tuple_x_1e5ce3416_FnIns__jule_tuple_bool _1c8a877d2_findTraitMetMap(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5ce0358_Fn>* _105737_m);
inline void _1c8a87b45_traitWrapper(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5d03db6_Trait>* _106934_t, jule::Ptr<_1e5ce0358_Fn>* _106950_m);
inline void _1c8a87d43_traitWrappers(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_);
inline void _1c8a881a6_traitDataMethods(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5d03db6_Trait>* _113638_t, jule::Ptr<_1e5cc8c7b_StructIns> _113649_s);
inline void _1c8a885c4_traitData(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5d03db6_Trait>* _115331_t, jule::I64 _115342_i, jule::Ptr<_1e5cc8c7b_StructIns>* _115355_s);
inline void _1c8a887c2_traitDatas(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_);
inline void _1c8a889c0_globalDecls(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_);
inline void _1c8a88bbd_decls(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_);
inline void _1c8a88e76_structureMethods(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5cc8c7b_StructIns>* _121638_s);
inline void _1c8a8922e_structureIns(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5cc8c7b_StructIns>* _122334_s);
inline void _1c8a894d7_structure(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5cc5e21_Struct>* _122931_s);
inline void _1c8a896d5_structures(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_);
inline void _1c8a898d3_funcs(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_);
inline void _1c8a89b8b_pushInit(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5d5e21d_Package>* _126830_pkg);
inline void _1c8a89d89_anonHashes(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_);
inline void _1c8a8a087_initGlobals(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_);
inline void _1c8a8a285_initCaller(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_);
inline void _1c8a8a483_end(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_);
inline void _1c8a8a7e6_insertBuf(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, _224497295_StrBuilder* _133931_buf, jule::I64 _133948_pos);
inline void _1c8a8a9e4_implementRC(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_);
inline void _1c8a8abe2_serializeHead(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_);
inline void _1c8a8ade0_Serialize(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_);
inline jule::Str _1c8a8d222_Str(_1c8a8cd26_customType* _self_);
inline jule::Bool _1c8a8d563_Equal(jule::Ptr<_1c8a8cd26_customType> _self_, jule::Ptr<_1e5e417ea_TypeKind> _4418_k);
inline jule::Ptr<_1c8a8d95e_typeCoder> static__1c8a8deae_new(jule::Ptr<_1c8a7d92c_ObjectCoder>* _6921_oc);
inline void _1c8a8e322_toType(_1c8a8d95e_typeCoder* _self_, _224497295_StrBuilder* _7627_buf, jule::Str _7648_id);
inline void _1c8a8e685_prim(_1c8a8d95e_typeCoder* _self_, _224497295_StrBuilder* _9025_buf, jule::Ptr<_1e5e49913_Prim> _9042_p);
inline void _1c8a8e9e8_tuple(_1c8a8d95e_typeCoder* _self_, _224497295_StrBuilder* _9526_buf, jule::Ptr<_1e5e4ea06_Tuple> _9547_t);
inline void _1c8a8ed5b_asSptr(_1c8a8d95e_typeCoder* _self_, _224497295_StrBuilder* _10727_buf, jule::Slice<jule::U8> _10744_elem);
inline void _1c8a901be_sptr(_1c8a8d95e_typeCoder* _self_, _224497295_StrBuilder* _11425_buf, jule::Ptr<_1e5e4d43e_Sptr> _11446_sptr);
inline void _1c8a90532_ptr(_1c8a8d95e_typeCoder* _self_, _224497295_StrBuilder* _12124_buf, jule::Ptr<_1e5e51c06_Ptr> _12145_p);
inline void _1c8a90895_enumDecl(_1c8a8d95e_typeCoder* _self_, _224497295_StrBuilder* _13229_buf, jule::Ptr<_1e5d065c2_Enum> _13250_e);
inline void _1c8a90c08_typeEnumDecl(_1c8a8d95e_typeCoder* _self_, _224497295_StrBuilder* _13733_buf, jule::Ptr<_1e5d07ccc_TypeEnum> _13754_e);
inline void _1c8a9106b_asSlice(_1c8a8d95e_typeCoder* _self_, _224497295_StrBuilder* _14128_buf, jule::Ptr<_1e5e417ea_TypeKind> _14149_elem);
inline void _1c8a913ce_slice(_1c8a8d95e_typeCoder* _self_, _224497295_StrBuilder* _14826_buf, jule::Ptr<_1e5e4de12_Slc> _14847_s);
inline void _1c8a91742_mapType(_1c8a8d95e_typeCoder* _self_, _224497295_StrBuilder* _15328_buf, jule::Ptr<_1e5e505a6_Map> _15349_m);
inline void _1c8a91e18_structureIns(_1c8a8d95e_typeCoder* _self_, _224497295_StrBuilder* _16733_buf, jule::Ptr<_1e5cc8c7b_StructIns> _16754_s);
inline void _1c8a9227b_array(_1c8a8d95e_typeCoder* _self_, _224497295_StrBuilder* _19126_buf, jule::Ptr<_1e5e51233_Arr> _19147_a);
inline void _1c8a92952_paramIns(_1c8a8d95e_typeCoder* _self_, _224497295_StrBuilder* _21429_buf, jule::Ptr<_1e5ce22b1_ParamIns>* _21451_p);
inline void _1c8a93128_funcInsResult(_1c8a8d95e_typeCoder* _self_, _224497295_StrBuilder* _24634_s, jule::Ptr<_1e5ce3416_FnIns>* _24654_f);
inline void _1c8a9348b_anonFunc(_1c8a8d95e_typeCoder* _self_, _224497295_StrBuilder* _26429_buf, jule::Ptr<_1e5ce3416_FnIns> _26450_f);
inline void _1c8a937ee_func(_1c8a8d95e_typeCoder* _self_, _224497295_StrBuilder* _28525_buf, jule::Ptr<_1e5ce3416_FnIns> _28546_f);
inline void _1c8a93b62_kind(_1c8a8d95e_typeCoder* _self_, _224497295_StrBuilder* _29225_buf, jule::Ptr<_1e5e417ea_TypeKind> _29246_k);
inline jule::Ptr<_1c8a96549_resultCoder> static__1c8a96a55_new(jule::Ptr<_1c8a8d95e_typeCoder>* _36021_tc);
inline void _1c8a96db8_ptr(_1c8a96549_resultCoder* _self_, _224497295_StrBuilder* _36424_s, jule::Ptr<_1e5e51c06_Ptr> _36443_p);
inline void _1c8a9722b_sptr(_1c8a96549_resultCoder* _self_, _224497295_StrBuilder* _36925_s, jule::Ptr<_1e5e4d43e_Sptr> _36944_p);
inline void _1c8a9758e_mapType(_1c8a96549_resultCoder* _self_, _224497295_StrBuilder* _37428_s, jule::Ptr<_1e5e505a6_Map> _37447_p);
inline void _1c8a97902_slice(_1c8a96549_resultCoder* _self_, _224497295_StrBuilder* _38026_s, jule::Ptr<_1e5e4de12_Slc> _38045_slc);
inline void _1c8a97c65_arr(_1c8a96549_resultCoder* _self_, _224497295_StrBuilder* _38524_s, jule::Ptr<_1e5e51233_Arr> _38543_arr);
inline void _1c8a980c8_func(_1c8a96549_resultCoder* _self_, _224497295_StrBuilder* _39125_s, jule::Ptr<_1e5ce3416_FnIns> _39144_f);
inline void _1c8a9843b_tup(_1c8a96549_resultCoder* _self_, _224497295_StrBuilder* _40424_s, jule::Ptr<_1e5e4ea06_Tuple> _40443_tup);
inline void _1c8a9879e_codeMut(_1c8a96549_resultCoder* _self_, _224497295_StrBuilder* _41128_s, jule::Ptr<_1e5e417ea_TypeKind>* _41148_t);
inline void _1c8a98b12_codeMut1(_1c8a96549_resultCoder* _self_, _224497295_StrBuilder* _45129_s, jule::Ptr<_1e5e417ea_TypeKind>* _45149_t);
inline jule::Slice<jule::U8> _1c8a98e20_code(_1c8a96549_resultCoder* _self_, jule::Ptr<_1e5e417ea_TypeKind>* _46025_t);
inline jule::Str _1cc9703db_Name(_1cc970584_Flag* _self_);
inline jule::Str _1cc970870_What(_1cc970584_Flag* _self_);
inline void _1cc9709b3_Reset(_1cc970584_Flag* _self_);
inline jule::I32 _1cc970b06_Short(_1cc970584_Flag* _self_);
inline jule::Str _1cc973a2c_Name(_1cc973da1_Flag* _self_);
inline jule::Str _1cc97418c_What(_1cc973da1_Flag* _self_);
inline void _1cc9742d0_Reset(_1cc973da1_Flag* _self_);
inline jule::I32 _1cc974423_Short(_1cc973da1_Flag* _self_);
inline jule::Str _1cc977239_Name(_1cc9775ad_Flag* _self_);
inline jule::Str _1cc977899_What(_1cc9775ad_Flag* _self_);
inline void _1cc9779dc_Reset(_1cc9775ad_Flag* _self_);
inline jule::I32 _1cc977b30_Short(_1cc9775ad_Flag* _self_);
inline jule::Str _1cc97a98a_Name(_1cc97ad0e_Flag* _self_);
inline jule::Str _1cc97b0ea_What(_1cc97ad0e_Flag* _self_);
inline void _1cc97b23d_Reset(_1cc97ad0e_Flag* _self_);
inline jule::I32 _1cc97b381_Short(_1cc97ad0e_Flag* _self_);
inline jule::Str _1cc97e197_Name(_1cc97e51b_Flag* _self_);
inline jule::Str _1cc97e807_What(_1cc97e51b_Flag* _self_);
inline void _1cc97e94a_Reset(_1cc97e51b_Flag* _self_);
inline jule::I32 _1cc97ea8d_Short(_1cc97e51b_Flag* _self_);
inline jule::Ptr<_1c8b12692_FlagSet> static__1c8b129b1_New(void);
inline jule::Trait _1c8b12e67_FindFlag(_1c8b12692_FlagSet* _self_, jule::Str _7124_name);
inline jule::Trait _1c8b132a8_FindFlagShort(_1c8b12692_FlagSet* _self_, jule::I32 _8129_name);
inline jule::Exceptional<jule::Slice<jule::Str>> _1c8b13880_Parse(_1c8b12692_FlagSet* _self_, jule::Slice<jule::Str> _11521_args);
inline jule::Ptr<_1cc97e51b_Flag> _1cca1303e_addFlagCommon(_1c8b12692_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what);
inline jule::Ptr<_1cc97ad0e_Flag> _1cca1c114_addFlagCommon(_1c8b12692_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what);
inline void _1cca10811_AddVar(_1c8b12692_FlagSet* _self_, jule::Ptr<jule::Str> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what);
inline void _1cca1992a_AddVar(_1c8b12692_FlagSet* _self_, jule::Ptr<jule::Bool> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what);
inline __jule_tuple_i64__jule_tuple_bool _1cc9922dc_parseInteger(_1c8b15156_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I64> _18536_parser);
inline __jule_tuple_u64__jule_tuple_bool _1cc999db6_parseInteger(_1c8b15156_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I64> _18536_parser);
inline jule::Str _1c8b159a3_getData(_1c8b15156_argParser* _self_);
inline jule::VoidExceptional _1c8b15c28_processFlag(_1c8b15156_argParser* _self_, jule::Trait* _21232_flag);
inline jule::VoidExceptional _1c8b15ed1_singleDash(_1c8b15156_argParser* _self_, jule::Str* _25227_arg);
inline jule::VoidExceptional _1c8b16289_doubleDash(_1c8b15156_argParser* _self_, jule::Str* _26627_arg);
inline jule::VoidExceptional _1c8b16487_tryArg(_1c8b15156_argParser* _self_);
inline jule::VoidExceptional _1c8b16685_parse(_1c8b15156_argParser* _self_);
inline jule::Ptr<_22584814a_Cmd> static__22584858a_New(jule::Str _2616_path);
inline jule::VoidExceptional _225848788_Spawn(_22584814a_Cmd* _self_);
inline jule::Exceptional<jule::I64> _225848c1c_Wait(_22584814a_Cmd* _self_);
inline jule::VoidExceptional _225861619_spawn(_22584814a_Cmd* _self_);
inline jule::Exceptional<jule::I64> _225861a9d_wait(_22584814a_Cmd* _self_);
inline __jule_tuple_x_1e6a03ab5_IR__jule_tuple_s_22578b38a_Log static__1e6a0408d_Build(jule::Str _2918_path, jule::I64 _2929_flags);
inline void _1e6a04577_appendStructs(_1e6a03ab5_IR* _self_, jule::Ptr<_1e5d5e21d_Package>* _6730_p, jule::Slice<jule::Ptr<_1e5cc5e21_Struct>>* _6754_buffer);
inline jule::Slice<jule::Ptr<_1e5cc5e21_Struct>> _1e6a0480d_GetAllStructures(_1e6a03ab5_IR* _self_);
inline void _1e6a04b71_appendGlobals(_1e6a03ab5_IR* _self_, jule::Ptr<_1e5d5e21d_Package>* _9030_p, jule::Slice<jule::Ptr<_1e5da0bcc_Var>>* _9054_buffer);
inline jule::Slice<jule::Ptr<_1e5da0bcc_Var>> _1e6a04e07_GetAllGlobals(_1e6a03ab5_IR* _self_);
inline void _1e6a05105_Order(_1e6a03ab5_IR* _self_);
inline jule::I32 _223c7736c_DecodeRune(jule::I32 _6815_r1, jule::I32 _6825_r2);
inline __jule_tuple_i32__jule_tuple_i32 _223c77636_EncodeRune(jule::I32 _7819_r);
inline jule::Slice<jule::U16> _223c77977_Encode(jule::Slice<jule::I32> _8711_s);
inline jule::Slice<jule::I32> _223c77c0d_Decode(jule::Slice<jule::U16> _11911_s);
inline jule::Slice<jule::U16> _223c78082_AppendRune(jule::Slice<jule::U16> _14919_a, jule::I32 _14929_r);
inline jule::Slice<jule::U16> _223c78318_UTF16FromStr(jule::Str _1017_s);
inline jule::Str _223c78626_UTF16ToStr(jule::Slice<jule::U16> _3015_s);
inline jule::Str _223c788e0_U16PtrToStr(jule::U16* _4623_s);
inline jule::Str _223c7967c_Str(jule::U8* _108_b, jule::I64 _1018_n);
inline jule::Slice<jule::U8> _1c8b46385_Slice(jule::U8* _2216_e, jule::I64 _2226_len, jule::I64 _2236_cap);
inline jule::Slice<jule::U8> _223c7a2b5_StrBytes(jule::Str _4013_s);
inline jule::Str _223c7a54b_BytesStr(jule::Slice<jule::U8> _4913_b);
inline jule::Str _223c7a815_StrFromBytes(jule::Slice<jule::U8> _5717_b);
inline jule::I64 _223c7be65_GetLastErrno(void);
inline jule::Uintptr _224088bab_GetStdHandle(jule::Uintptr _6417_stdh);
inline jule::Bool _224088e75_CloseHandle(jule::Uintptr _6523_stdh);
inline jule::I64 _2240892e9_Wstat(jule::U16* _6817_path, struct _stat* _6833_stat);
inline jule::I64 _224089728_Wopen(jule::U16* _7317_path, jule::I64 _7329_flag, jule::I64 _7340_mode);
inline jule::U32 _224089937_GetLastError(void);
inline jule::U32 _224089cab_GetCurrentDirectory(jule::U32 _8231_bufflen, jule::U16* _8249_buff);
inline jule::Bool _22408a33e_DeleteFile(jule::U16* _9322_path);
inline jule::Bool _22408a608_CreateDirectory(jule::U16* _9827_path);
inline jule::Bool _22408a8c2_RemoveDirectory(jule::U16* _10327_path);
inline jule::U32 _22408adab_GetFullPathName(jule::U16* _10827_path, jule::U32 _10839_bufflen, jule::U16* _1092_buff, jule::U16** _10914_fname);
inline jule::Bool _22408b230_GetConsoleMode(jule::Uintptr _11419_handle, jule::I64* _11440_mode);
inline jule::Bool _22408b83a_SetConsoleMode(jule::Uintptr _11919_handle, jule::I64 _11935_mode);
inline jule::Bool _22408bd8a_WriteConsole(jule::Uintptr _12424_handle, jule::U16* _12440_buffer, jule::U32 _12454_toWrite, jule::U32* _1257_written, void* _12521_reserved);
inline jule::Bool _22408c374_ReadConsole(jule::Uintptr _13223_handle, jule::U16* _13243_buffer, jule::U32 _13257_toRead, jule::U32* _1337_readed);
inline jule::Uintptr _22408c907_FindFirstFile(jule::U16* _14425_path, WIN32_FIND_DATAW* _14441_data);
inline jule::I64 _22408cc7b_FindNextFile(jule::Uintptr _14924_h, WIN32_FIND_DATAW* _14939_data);
inline jule::I64 _22408d045_FindClose(jule::Uintptr _15414_h);
inline jule::I64 _224090124_Read(jule::I64 _2016_handle, void* _2033_buff, jule::U64 _2048_n);
inline jule::I64 _2240904ed_Close(jule::I64 _2510_handle);
inline jule::I64 _2240908a5_Write(jule::I64 _2817_handle, void* _2830_buff, jule::U64 _2845_n);
inline void _224090ad6_Exit(jule::I64 _339_code);
inline __jule_tuple_i32__jule_tuple_int _2241a26a9_DecodeRune(jule::Slice<jule::U8> _18215_p);
inline __jule_tuple_i32__jule_tuple_int _2241a29ea_DecodeRuneStr(jule::Str _22918_s);
inline __jule_tuple_i32__jule_tuple_int _2241a304a_DecodeLastRuneStr(jule::Str _31722_s);
inline jule::I64 _2241a3314_RuneLen(jule::I32 _35212_r);
inline jule::I64 _2241a3798_EncodeRune(jule::Slice<jule::U8> _37419_p, jule::I32 _37434_r);
inline jule::Slice<jule::U8> _2241a3a95_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r);
inline jule::Slice<jule::U8> _2241a3e19_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r);
inline jule::I64 _2241a449c_RuneCountStr(jule::Str _47317_s);
inline jule::Bool _2241a4766_RuneStart(jule::U8 _51714_b);
inline jule::I64 _224315795_LeadingZeros64(jule::U64 _6119_x);
inline jule::I64 _2243166db_TrailingZeros(jule::U64 _8318_x);
inline jule::I64 _2243170c1_TrailingZeros32(jule::U32 _10520_x);
inline jule::I64 _22431738a_TrailingZeros64(jule::U64 _11420_x);
inline jule::I64 _22431cd63_Len32(jule::U32 _35214_x);
inline jule::I64 _22431d12c_Len64(jule::U64 _36614_x);
inline __jule_tuple_u64__jule_tuple_u64 _22431ddb9_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry);
inline __jule_tuple_u64__jule_tuple_u64 _2243206c3_Mul64(jule::U64 _49910_x, jule::U64 _49918_y);
inline jule::Bool __jule_coSpawn(void* _1319_func, void* _1334_args);
inline jule::I64 _23c3719a3_randInt(jule::U64 _716_seed, jule::I64 _727_max);
inline jule::Bool _1c8d98395_arrayCmp(jule::Str* _1020_a1, jule::Str* _1032_a2, jule::I64 _1040_n);
inline jule::Bool _1c8de6954_arrayCmp(jule::I32* _1020_a1, jule::I32* _1032_a2, jule::I64 _1040_n);
inline jule::Bool _1c9e4bb51_arrayCmp(jule::U8* _1020_a1, jule::U8* _1032_a2, jule::I64 _1040_n);
inline jule::Bool _1cc268c07_arrayCmp(jule::Bool* _1020_a1, jule::Bool* _1032_a2, jule::I64 _1040_n);
inline jule::Bool __jule_ptrEqual(void* _1313_a, void* _1325_b);
inline void __jule_panic(jule::U8* _1318_m, jule::I64 _1328_n);
inline void _2241a5569__handleRW(jule::Slice<jule::U8>* _1115_b);
inline jule::I64 _2241a5877_writeConsole(jule::Uintptr _1524_handle, jule::Slice<jule::U8> _1545_buf);
inline jule::I64 _2241a5beb_readConsole(jule::Uintptr _3023_handle, jule::Slice<jule::U8> _3048_buf);
inline jule::I64 __jule_writeStdout(jule::Slice<jule::U8> _5820_buf);
inline jule::I64 __jule_writeStderr(jule::Slice<jule::U8> _6620_buf);
inline jule::I64 __jule_readStdin(jule::Slice<jule::U8> _7418_buf);
inline jule::U64 _1c8ce70a2_atomicLoad(jule::U64* _3525_p, jule::I64 _3532_mo);
inline jule::U64 _1c8ce726c_atomicAdd(jule::U64* _4628_p, jule::U64 _4635_delta, jule::I64 _4645_mo);
inline jule::Slice<jule::Str> _2241ac4e9_args(void);
inline jule::Str _2241ac9a0_executable(void);
inline jule::U64* __jule_RCNew(void);
inline jule::U64 __jule_RCLoad(jule::U64* _4019_p);
inline jule::U64 __jule_RCLoadAtomic(jule::U64* _4625_p);
inline void __jule_RCAdd(jule::U64* _5722_p);
inline void __jule_RCAddAtomic(jule::U64* _6328_p);
inline jule::Bool __jule_RCDrop(jule::U64* _7523_p);
inline jule::Bool __jule_RCDropAtomic(jule::U64* _8429_p);
inline void __jule_RCFree(jule::U64* _9219_p);
inline jule::Str __jule_ptrToStr(void* _1113_p);
inline jule::Str __jule_boolToStr(jule::Bool _3214_b);
inline jule::Str __jule_i64ToStr(jule::I64 _4113_x);
inline jule::Str __jule_u64ToStr(jule::U64 _5017_x);
inline jule::I64 _2241b7735_u64ToBuf(jule::Slice<jule::U8> _5917_buf, jule::U64 _5934_x);
inline jule::Str __jule_f64ToStr(jule::F64 _8017_f);
inline jule::Str _1cc9cb0c3_arrToStr(jule::Slice<jule::U8> _12316_x);
inline jule::Str _1cc9c0e64_structToStr(_224497295_StrBuilder _15619_x);
inline jule::Str _1c8d672ba_toStr(jule::Any _19713_x);
inline jule::Str _1c8d69498_toStr(jule::Str _19713_x);
inline jule::Str _1c8d69be6_toStr(jule::I64 _19713_x);
inline jule::Str _1c8d6e954_toStr(jule::I8 _19713_x);
inline jule::Str _1c8d6c688_toStr(jule::I16 _19713_x);
inline jule::Str _1c8d74d66_toStr(jule::I32 _19713_x);
inline jule::Str _1c8d7784c_toStr(jule::I64 _19713_x);
inline jule::Str _1c8d7a399_toStr(jule::U64 _19713_x);
inline jule::Str _1c8d77dad_toStr(jule::Uintptr _19713_x);
inline jule::Str _1c8d7d07d_toStr(jule::U8 _19713_x);
inline jule::Str _1c8d804c0_toStr(jule::U16 _19713_x);
inline jule::Str _1c8d82912_toStr(jule::U32 _19713_x);
inline jule::Str _1c8d84d54_toStr(jule::U64 _19713_x);
inline jule::Str _1c8d88231_toStr(jule::F32 _19713_x);
inline jule::Str _1c8d872da_toStr(jule::F64 _19713_x);
inline jule::Str _1c8d75240_toStr(jule::Bool _19713_x);
inline jule::Str _1c8d8e4bd_toStr(jule::I64 _19713_x);
inline jule::Str _1c9b5a486_toStr(jule::I64 _19713_x);
inline jule::Str _1c9b8779e_toStr(jule::I64 _19713_x);
inline jule::Str _1c9ee0e26_toStr(jule::I64 _19713_x);
inline jule::Str _1ca6dbba4_toStr(jule::Ptr<_1e5cc1bec_Impl> _19713_x);
inline jule::Str _1ca6dbe5c_toStr(jule::Ptr<_1e5cbbaa4_TypeAliasDecl> _19713_x);
inline jule::Str _1ca6de789_toStr(jule::Ptr<_1e5cc0d50_StructDecl> _19713_x);
inline jule::Str _1ca6e6b15_toStr(jule::Ptr<_1e5cb6c47_FnDecl> _19713_x);
inline jule::Str _1ca6ea70c_toStr(jule::Ptr<_1e5cc158c_TraitDecl> _19713_x);
inline jule::Str _1ca6ee304_toStr(jule::Ptr<_1e5cb7e02_VarDecl> _19713_x);
inline jule::Str _1ca702deb_toStr(jule::Ptr<_1e5cbe205_EnumDecl> _19713_x);
inline jule::Str _1ca70677e_toStr(jule::Ptr<_1e5cc0190_TypeEnumDecl> _19713_x);
inline jule::Str _1ca7286d5_toStr(jule::Ptr<_1e5cc2eea_Field> _19713_x);
inline jule::Str _1ca73a7c4_toStr(jule::Ptr<_1e21a449b_Const> _19713_x);
inline jule::Str _1ca74192e_toStr(jule::Ptr<_1e5da0bcc_Var> _19713_x);
inline jule::Str _1ca75789b_toStr(jule::Ptr<_1e5d05a55_EnumItem> _19713_x);
inline jule::Str _1ca768e95_toStr(jule::Ptr<_1e5cdd884_Param> _19713_x);
inline jule::Str _1ca790a5a_toStr(jule::Ptr<_1e5cc5e21_Struct> _19713_x);
inline jule::Str _1ca793145_toStr(jule::Ptr<_1e5d03db6_Trait> _19713_x);
inline jule::Str _1ca7968b8_toStr(jule::Ptr<_1e5d065c2_Enum> _19713_x);
inline jule::Str _1ca79a13b_toStr(jule::Ptr<_1e5d07ccc_TypeEnum> _19713_x);
inline jule::Str _1ca7a2c8c_toStr(jule::Ptr<_1e5ce0358_Fn> _19713_x);
inline jule::Str _1ca86160e_toStr(jule::Str _19713_x);
inline jule::Str _1ca8a936b_toStr(jule::Ptr<_1e5e40a08_TypeAlias> _19713_x);
inline jule::Str _1ca93ab6c_toStr(jule::Ptr<_1e5ca5692_IdentTypeDecl> _19713_x);
inline jule::Str _1ca952d3d_toStr(jule::Ptr<_1e5cd843e_TupleExprModel> _19713_x);
inline jule::Str _1ca9556e2_toStr(jule::Ptr<_1e5ca9eb0_TupleExpr> _19713_x);
inline jule::Str _1e19ec575_toStr(jule::Ptr<_1e5cb3a35_AssignSt> _19713_x);
inline jule::Str _1e1a006bb_toStr(jule::Ptr<_1e5ca93bb_Expr> _19713_x);
inline jule::Str _1e1a02899_toStr(jule::Ptr<_1e5d3ba69_Postfix> _19713_x);
inline jule::Str _1e1a05539_toStr(jule::Ptr<_1e5d3c020_Assign> _19713_x);
inline jule::Str _1e1a03070_toStr(jule::Ptr<_1e5d3c4c6_MultiAssign> _19713_x);
inline jule::Str _1e1a09780_toStr(jule::Ptr<_1e5e08c13_Data> _19713_x);
inline jule::Str _1e1a0e3bc_toStr(jule::Ptr<_1e5cd4d31_FnCallExprModel> _19713_x);
inline jule::Str _1e1a40e7b_toStr(jule::Ptr<_1e5d3b030_Label> _19713_x);
inline jule::Str _1e1a5e8a1_toStr(jule::Ptr<_1e5d384d3_Scope> _19713_x);
inline jule::Str _1e1a68d1c_toStr(jule::Ptr<_1e5cdb09b_BuiltinErrorCallExprModel> _19713_x);
inline jule::Str _1e1a6d4a3_toStr(jule::Ptr<_1e5cdc0ad_BackendEmitExprModel> _19713_x);
inline jule::Str _1e1a6db8a_toStr(jule::Ptr<_1e5cd9d25_BuiltinAppendCallExprModel> _19713_x);
inline jule::Str _1e1a74124_toStr(jule::Ptr<_1e5cd8818_BuiltinOutCallExprModel> _19713_x);
inline jule::Str _1e1a757a7_toStr(jule::Ptr<_1e5cd8be2_BuiltinOutlnCallExprModel> _19713_x);
inline jule::Str _1e1a7837b_toStr(jule::Ptr<_1e5cd9495_BuiltinPanicCallExprModel> _19713_x);
inline jule::Str _1e1a7ae50_toStr(jule::Ptr<_1e5cdabc2_BuiltinCopyCallExprModel> _19713_x);
inline jule::Str _1e1a7da24_toStr(jule::Ptr<_1e5cda7e8_BuiltinDeleteCallExprModel> _19713_x);
inline jule::Str _1e1a815e8_toStr(jule::Ptr<_1e5cdc3aa_FreeExprModel> _19713_x);
inline jule::Str _1e1a8bee9_toStr(jule::Ptr<_1e5d3911b_Conditional> _19713_x);
inline jule::Str _1e1a978c8_toStr(jule::Ptr<_1e5d39418_InfIter> _19713_x);
inline jule::Str _1e1a9d758_toStr(jule::Ptr<_1e5d398be_WhileIter> _19713_x);
inline jule::Str _1ca99747b_toStr(jule::Ptr<_1e5d3a31a_RangeIter> _19713_x);
inline jule::Str _1ca9a718e_toStr(jule::Ptr<_1e5cb9376_WhileKind> _19713_x);
inline jule::Str _1ca9a9d1d_toStr(jule::Ptr<_1e5cb9c7d_RangeKind> _19713_x);
inline jule::Str _1ca9c6686_toStr(jule::Ptr<_1e5d3a6a0_ContSt> _19713_x);
inline jule::Str _1ca9d053b_toStr(jule::Ptr<_1e5d3b690_GotoSt> _19713_x);
inline jule::Str _1caa165d8_toStr(jule::Ptr<_1e5caabd6_IdentExpr> _19713_x);
inline jule::Str _1caa2b224_toStr(jule::Ptr<_1e5cd56b1_IndexingExprModel> _19713_x);
inline jule::Str _1caa748dd_toStr(jule::Ptr<_1e5d3cc13_Match> _19713_x);
inline jule::Str _1caa88c21_toStr(jule::Ptr<_1e5d3de34_FallSt> _19713_x);
inline jule::Str _1caaa4c81_toStr(jule::Ptr<_1e5d3aa79_BreakSt> _19713_x);
inline jule::Str _1caaab42a_toStr(jule::Ptr<_1e5d3e2ca_RetSt> _19713_x);
inline jule::Str _1caab5da2_toStr(jule::Ptr<_1e5cb50a8_ScopeTree> _19713_x);
inline jule::Str _1caabab43_toStr(jule::Ptr<_1e5cbb367_Conditional> _19713_x);
inline jule::Str _1caabad96_toStr(jule::Ptr<_1e5cb8a4b_Iter> _19713_x);
inline jule::Str _1caabd0da_toStr(jule::Ptr<_1e5cba531_ContSt> _19713_x);
inline jule::Str _1caac12ca_toStr(jule::Ptr<_1e5cb266b_LabelSt> _19713_x);
inline jule::Str _1caac818e_toStr(jule::Ptr<_1e5cb2a45_GotoSt> _19713_x);
inline jule::Str _1caaca878_toStr(jule::Ptr<_1e5cbc874_MatchCase> _19713_x);
inline jule::Str _1caacab0e_toStr(jule::Ptr<_1e5cb2d42_FallSt> _19713_x);
inline jule::Str _1caace0a7_toStr(jule::Ptr<_1e5cba157_BreakSt> _19713_x);
inline jule::Str _1caadb03c_toStr(jule::Ptr<_1e5cb82cb_RetSt> _19713_x);
inline jule::Str _1caada2e4_toStr(jule::Ptr<_1e5ca9c90_UseExpr> _19713_x);
inline jule::Str _1cab71ba5_toStr(jule::Ptr<_1e5cd78c2_StructSubIdentExprModel> _19713_x);
inline jule::Str _1cab72436_toStr(jule::Ptr<_1e5cd322a_UnaryExprModel> _19713_x);
inline jule::Str _1caba6d1c_toStr(jule::Ptr<_1e5ce3416_FnIns> _19713_x);
inline jule::Str _1cb0db394_toStr(jule::Ptr<_1e5ca7aa1_MapTypeDecl> _19713_x);
inline jule::Str _1cb0e1c29_toStr(jule::Ptr<_1e5ca67b4_TupleTypeDecl> _19713_x);
inline jule::Str _1cb10516b_toStr(jule::Ptr<_1e5ca7353_ArrTypeDecl> _19713_x);
inline jule::Str _1cb10b606_toStr(jule::Ptr<_1e5ca64b7_SlcTypeDecl> _19713_x);
inline jule::Str _1cb112b5c_toStr(jule::Ptr<_1e5ca6ab1_PtrTypeDecl> _19713_x);
inline jule::Str _1cb118c62_toStr(jule::Ptr<_1e5ca6132_SptrTypeDecl> _19713_x);
inline jule::Str _1cb169202_toStr(jule::Ptr<_1e5cab852_VariadicExpr> _19713_x);
inline jule::Str _1cb16ee83_toStr(jule::Ptr<_1e5cd520a_SliceExprModel> _19713_x);
inline jule::Str _1cb189d05_toStr(jule::Ptr<_1e5cadada_FieldExprPair> _19713_x);
inline jule::Str _1cb193825_toStr(jule::Ptr<_1e5cb01e6_KeyValPair> _19713_x);
inline jule::Str _1cb1ea030_toStr(jule::Ptr<_1e5cad0e5_FnCallExpr> _19713_x);
inline jule::Str _1cae24056_toStr(jule::Ptr<_1e5cd3deb_AllocStructLitExprModel> _19713_x);
inline jule::Str _1cae38950_toStr(jule::Ptr<_1e5cd447e_CastingExprModel> _19713_x);
inline jule::Str _1cae510c7_toStr(jule::Ptr<_1e5cd7c68_StructStaticIdentExprModel> _19713_x);
inline jule::Str _1cae5376c_toStr(jule::Ptr<_1e5cac4ce_SubIdentExpr> _19713_x);
inline jule::Str _1cae604c1_toStr(jule::Ptr<_1e5cd3aee_StructLitExprModel> _19713_x);
inline jule::Str _1cae809db_toStr(jule::Ptr<_1e5cdbc39_RuneExprModel> _19713_x);
inline jule::Str _1caea3778_toStr(jule::Ptr<_1e5cc8c7b_StructIns> _19713_x);
inline jule::Str _1caee393e_toStr(jule::Ptr<_1e5e417ea_TypeKind> _19713_x);
inline jule::Str _1cb2d1e6e_toStr(jule::Ptr<_1e5cd8142_ArrayExprModel> _19713_x);
inline jule::Str _1cb31ae53_toStr(jule::Ptr<_1e5ca595b_SubIdentTypeDecl> _19713_x);
inline jule::Str _1cb320562_toStr(jule::Ptr<_1e5cab478_UnaryExpr> _19713_x);
inline jule::Str _1cb3296e2_toStr(jule::Ptr<_1e5ca5087_TypeDecl> _19713_x);
inline jule::Str _1cb32e164_toStr(jule::Ptr<_1e5cac105_NsSelectionExpr> _19713_x);
inline jule::Str _1cb335b4e_toStr(jule::Ptr<_1e5ca5d35_NamespaceTypeDecl> _19713_x);
inline jule::Str _1c80621a8_toStr(jule::Ptr<_1e5cd699d_SlicingExprModel> _19713_x);
inline jule::Str _1cb434a94_toStr(jule::Ptr<_1e5cb0922_SliceExpr> _19713_x);
inline jule::Str _1cb4a2b12_toStr(jule::Ptr<_1e5cd7031_TraitSubIdentExprModel> _19713_x);
inline jule::Str _1cb54d4b5_toStr(jule::Ptr<_1e5cd641a_MapExprModel> _19713_x);
inline jule::Str _1cb55da36_toStr(jule::Ptr<_1e5cd5b67_AnonFnExprModel> _19713_x);
inline jule::Str _1cb565ae8_toStr(jule::Ptr<_1e5ca9685_RangeExpr> _19713_x);
inline jule::Str _1cb565da1_toStr(jule::Ptr<_1e5caa356_LitExpr> _19713_x);
inline jule::Str _1cb56dc55_toStr(jule::Ptr<_1e5caa730_UnsafeExpr> _19713_x);
inline jule::Str _1cb5713c8_toStr(jule::Ptr<_1e5cb137e_IndexingExpr> _19713_x);
inline jule::Str _1cb56c050_toStr(jule::Ptr<_1e5cb19de_SlicingExpr> _19713_x);
inline jule::Str _1cb577c5e_toStr(jule::Ptr<_1e5cabc2b_CastExpr> _19713_x);
inline jule::Str _1cb57ae2c_toStr(jule::Ptr<_1e5cae415_StructLit> _19713_x);
inline jule::Str _1cb580074_toStr(jule::Ptr<_1e5cae8bb_BraceLit> _19713_x);
inline jule::Str _1cb587c3b_toStr(jule::Ptr<_1e5cac985_BinaryExpr> _19713_x);
inline jule::Str _1cb6cee4e_toStr(jule::Ptr<_1e5cd2d51_BinaryExprModel> _19713_x);
inline jule::Str _1cb87c492_toStr(jule::Ptr<_1e5cd90bb_BuiltinNewCallExprModel> _19713_x);
inline jule::Str _1cb893123_toStr(jule::Ptr<_1e5cd994b_BuiltinMakeCallExprModel> _19713_x);
inline jule::Str _1cb8c7e16_toStr(jule::Ptr<_1e5cda122_BuiltinLenCallExprModel> _19713_x);
inline jule::Str _1cb8e2bde_toStr(jule::Ptr<_1e5cda41e_BuiltinCapCallExprModel> _19713_x);
inline jule::Str _1cb93984b_toStr(jule::Ptr<_1e5cdb398_SizeofExprModel> _19713_x);
inline jule::Str _1cb943855_toStr(jule::Ptr<_1e5cdba4c_AlignofExprModel> _19713_x);
inline jule::Str _1cbdbd1ca_toStr(jule::Str _19713_x);
inline jule::Str _1cc0856c2_toStr(jule::Ptr<_1e6036a22_ExceptionalForwardingExprModel> _19713_x);
inline jule::Str _1cc0bc709_toStr(jule::Ptr<_1e603941a_StrRuneIter> _19713_x);
inline jule::Str _1cc0c514b_toStr(jule::Ptr<_1e603810b_MutSlicingExprModel> _19713_x);
inline jule::Str _1cc0ea21a_toStr(jule::Ptr<_1e6039041_AppendToSliceExprModel> _19713_x);
inline jule::Str _1cc0eca47_toStr(jule::Ptr<_1e6038b67_PushToSliceExprModel> _19713_x);
inline jule::Str _1cc10a626_toStr(jule::Ptr<_1e6036da7_SwapExprModel> _19713_x);
inline jule::Str _1cc14819c_toStr(jule::Ptr<_1e6037281_EmptyCompareExprModel> _19713_x);
inline jule::Str _1cc14ae2a_toStr(jule::Ptr<_1e6037a78_StrCompExprModel> _19713_x);
inline jule::Str _1cc18401d_toStr(jule::Ptr<_1e6038408_UnsafeBinaryExprModel> _19713_x);
inline jule::Str _1cc18c3bc_toStr(jule::Ptr<_1e6039717_UnsafeDerefExprModel> _19713_x);
inline jule::Str _1cc198a8d_toStr(jule::Ptr<_1e6037605_RefExprModel> _19713_x);
inline jule::Str _1cc19d136_toStr(jule::Ptr<_1e5cd3758_StructArgExprModel> _19713_x);
inline jule::Str _1cc1a4901_toStr(jule::Ptr<_1e6039a14_UnsafeCastingExprModel> _19713_x);
inline jule::Str _1cc1b3767_toStr(jule::Ptr<_1e603878d_UnsafeIndexingExprModel> _19713_x);
inline jule::Str _1cc73aad0_toStr(jule::Ptr<jule::Str> _19713_x);
inline jule::Str _1cc9baea3_toStr(_224497295_StrBuilder _19713_x);
inline jule::Str _1cc9c77ea_toStr(jule::Slice<jule::U8> _19713_x);
inline jule::Str _1cc9c2b25_toStr(jule::Str _19713_x);
inline jule::Str _1cc9c9c3c_toStr(jule::Str _19713_x);
inline void _2241b88ce_rev(jule::Slice<jule::U8> _25012_b);
inline jule::I64 __jule_compareStr(jule::Str* _1016_a, jule::Str* _1025_b);
inline jule::Str __jule_bytesToStr(jule::Slice<jule::U8> _3615_bytes);
inline jule::Str __jule_runesToStr(jule::Slice<jule::I32> _4415_runes);
inline jule::Slice<jule::I32> __jule_strToRunes(jule::Str _5415_s);
inline jule::Slice<jule::U8> __jule_strToBytes(jule::Str _6715_s);
inline jule::Str __jule_strFromByte(jule::U8 _7516_b);
inline jule::Str __jule_strFromRune(jule::I32 _8316_r);
inline void __jule_runeStep(jule::U8* _9420_s, jule::I64 _9430_n, jule::I32* _9442_r, jule::I64* _9456_outLen);
inline void _2241bad98_handleRW(jule::Slice<jule::U8>* _814_b);
inline jule::Bool _2241bbddd__coSpawn(void* _1020_func, void* _1035_args);
inline jule::U64 _224227eb0_hash128to64(_224227b08_u128 _4316_sum);
inline jule::U64 _2242282bd_fetch64(jule::Slice<jule::U8> _5312_bytes);
inline jule::U32 _224228587_fetch32(jule::Slice<jule::U8> _5412_bytes);
inline jule::U64 _2242288c8_shiftMix(jule::U64 _5513_z);
inline jule::U64 _224228c19_hashLen16(jule::U64 _5614_u, jule::U64 _5622_v);
inline jule::U64 _22422908d_rotate64(jule::U64 _5813_val, jule::U32 _5823_shift);
inline jule::U64 _2242294bc_hashLen16_3(jule::U64 _6616_u, jule::U64 _6624_v, jule::U64 _6632_mul);
inline jule::U64 _224229951_hashLen0to16(jule::Slice<jule::U8> _7517_bytes, jule::I64 _7532_n);
inline _224227b08_u128 _224229d08_hashMurmur(jule::Slice<jule::U8> _10319_bytes, jule::I64 _10334_n, _224227b08_u128 _10342_seed);
inline _224227b08_u128 _22422a457_weakHashLen32WithSeeds(jule::U64 _14527_w, jule::U64 _14535_x, jule::U64 _14543_y, jule::U64 _14551_z, jule::U64 _14563_a, jule::U64 _14575_b);
inline _224227b08_u128 _22422a886_weakHashLen32WithSeeds_3(jule::Slice<jule::U8> _15529_bytes, jule::U64 _15544_a, jule::U64 _15552_b);
inline _224227b08_u128 _22422acb5_hashWithSeed(jule::Slice<jule::U8> _16021_bytes, jule::I64 _16040_n, _224227b08_u128 _16048_seed);
inline jule::U64 _22422b07e_hash(jule::Slice<jule::U8> _23413_bytes);
inline jule::U64 _224324c05_metaMatchH2(jule::Array<jule::I8,8>* _5523_m, jule::I8 _5537_h);
inline jule::U64 _224325013_metaMatchEmpty(jule::Array<jule::I8,8>* _6026_m);
inline jule::U32 _2243252cc_nextMatch(jule::U64* _6419_b);
inline jule::U64 _22432561d_hasZeroByte(jule::U64 _7016_x);
inline jule::U64 _2243258a4_castU64(jule::Array<jule::I8,8>* _7419_m);
inline jule::I64 _224325b6d_numGroups(jule::I64 _7914_n);
inline jule::Array<jule::I8,8> _224325d7c_newEmptyMetadata(void);
inline __jule_tuple_u64__jule_tuple_i8 _224326256_splitHash(jule::U64 _9414_h);
inline jule::U32 _224326553_probeStart(jule::U64 _9815_hi, jule::I64 _9823_groups);
inline jule::U32 _2243268c7_fastModN(jule::U32 _10313_x, jule::U32 _10321_n);
inline jule::I64 _2244cc85d_getLastOsErrorWindows(void);
inline jule::Slice<jule::Str> _2244cd474_Args(void);
inline jule::Exceptional<jule::Str> _2244cd8d6_WorkingDir(void);
inline jule::Exceptional<jule::Str> _2244ce860_getwd(void);
inline jule::Bool _2256285ce_IsLetter(jule::I32 _7613_r);
inline jule::Bool _225694051_is16(jule::Slice<_2256922b3_Range16> _1919_ranges, jule::U16 _19128_r);
inline jule::Bool _2256943c5_is32(jule::Slice<_2256927e1_Range32> _2289_ranges, jule::U32 _22828_r);
inline jule::Bool _225694bcd_isExcludingLatin(jule::Ptr<_225692c64_RangeTable> _27821_rangeTab, jule::I32 _27844_r);
inline jule::Bool _225694e20_IsUpper(jule::I32 _29512_r);
inline jule::I32 _225695618_convertCase(jule::I64 _31316_case, jule::I32 _31327_r, jule::Ptr<_225691d0c_CaseRange> _31336_cr);
inline jule::Ptr<_225691d0c_CaseRange> _22569598c_lookupCaseRange(jule::I32 _33320_r, jule::Slice<_225691d0c_CaseRange> _33329_caseRange);
inline jule::I32 _225695c56_SimpleFold(jule::I32 _37015_r);
inline jule::I64 _2256d6219_findLastByte(jule::U8* _4517_begin, jule::U8* _4535_end, jule::U8 _4547_b);
inline jule::I64 _2256d6846_FindByteStr(jule::Str _6816_s, jule::U8 _6824_b);
inline jule::I64 _2256d6bba_FindLastByteStr(jule::Str _7920_s, jule::U8 _7928_b);
inline jule::Str _2256d6eb7_Repeat(jule::Str _1111_s, jule::I64 _1123_n);
inline jule::Bool _2256d7380_HasPrefix(jule::Str _2614_s, jule::Str _2622_sub);
inline jule::Bool _2256d7704_HasSuffix(jule::Str _3114_s, jule::Str _3122_sub);
inline jule::I64 _2256d7baa_FindAt(jule::Str _3911_s, jule::Str _3919_sub, jule::I64 _3933_i);
inline jule::I64 _2256d7eeb_Find(jule::Str _549_s, jule::Str _5417_sub);
inline jule::I64 _2256d842a_FindLastAt(jule::Str _6215_s, jule::Str _6223_sub, jule::I64 _6233_i);
inline jule::I64 _2256d879e_FindLast(jule::Str _8413_s, jule::Str _8421_sub);
inline jule::I64 _2256da086_FindLastByte(jule::Str _14817_s, jule::U8 _14825_b);
inline jule::I64 _2256da40a_FindRune(jule::Str _15513_s, jule::I32 _15521_r);
inline jule::I64 _2256dad34_FindAny(jule::Str _18512_s, jule::Str _18520_runes);
inline jule::Slice<jule::Str> _2256db4c7_Split(jule::Str _21510_s, jule::Str _21518_sub, jule::I64 _21532_n);
inline jule::Bool _2256db84b_Contains(jule::Str _24313_s, jule::Str _24321_sub);
inline jule::Bool _2256dc3b8_ContainsAny(jule::Str _25816_s, jule::Str _25824_runes);
inline jule::I64 _2256dc73c_Count(jule::Str _26410_s, jule::Str _26418_sub);
inline jule::Str _2256dcc26_Replace(jule::Str _28412_s, jule::Str _28420_sub, jule::Str _28430_new, jule::I64 _28444_n);
inline jule::Str _2256dd9a2_TrimLeft(jule::Str _34117_s, jule::Str _34125_cutset);
inline jule::Str _2256ddd26_TrimRight(jule::Str _35514_s, jule::Str _35522_cutset);
inline jule::Str _2256de19a_Trim(jule::Str _3699_s, jule::Str _36917_cutset);
inline jule::Bool _2256e1004_EqualFold(jule::Str _5518_s, jule::Str _5530_t);
inline jule::Bool _2244a3119_IsPathSep(jule::U8 _4914_c);
inline jule::Bool _2244a3427_isSlash(jule::U8 _5312_c);
inline jule::U8 _2244a36e1_toUpper(jule::U8 _5512_c);
inline jule::I64 _2244a3cb8_volumeNameLen(jule::Str _8318_path);
inline __jule_tuple_str__jule_tuple_str__jule_tuple_bool _2244a4082_cutPath(jule::Str _12012_path);
inline __jule_tuple_str__jule_tuple_bool _2244a434b_fullPath(jule::Str _12913_name);
inline __jule_tuple_str__jule_tuple_bool _2244a4725_abs(jule::Str _14612_path);
inline jule::Str _2244a4967_join(jule::Slice<jule::Str> _1609_elem);
inline jule::Str _2256e23bd_Clean(jule::Str _10914_path);
inline jule::Str _2256e2995_FromSlash(jule::Str _21214_path);
inline jule::Str _2256e2cd6_Join(jule::Slice<jule::Str> _2269_elem);
inline jule::Str _2256e306c_Ext(jule::Str _2318_path);
inline __jule_tuple_str__jule_tuple_bool _2256e3336_Abs(jule::Str _2468_path);
inline jule::Str _2256e3600_Base(jule::Str _25213_path);
inline jule::Str _2256e39c9_Dir(jule::Str _2838_path);
inline jule::Str _2256e3c1b_VolumeName(jule::Str _30115_path);
inline jule::I64 _2243ddc8b_getLastFsError(void);
inline jule::Bool _2243e516b_isConsoleHandle(jule::Uintptr _10220_handle);
inline void _225861e22_appendEscapeArg(_224497295_StrBuilder* _10225_s, jule::Str _10240_arg);
inline jule::Str _2258621db_makeCmdLine(jule::Slice<jule::Str> _16316_args);
inline jule::Exceptional<jule::Slice<jule::U16>> _2258625b5_createEnvBlock(jule::Slice<jule::Str> _17919_env);
inline jule::I64 _2258635b6_processErrorFromCode(jule::I64 _1125_code);
inline jule::I64 _2258637d6_getLastProcessError(void);
inline void _225864023_Exit(jule::I64 _109_code);
inline jule::Str _225864254_Executable(void);
inline jule::Bool _225778e9e_IsStdHeaderPath(jule::Str _2620_p);
inline jule::Bool _225779279_IsValidHeaderExt(jule::Str _3121_ext);
inline jule::Bool _225779543_IsValidCppExt(jule::Str _4118_ext);
inline jule::Str _22578b7ec_Logf(jule::Str _3229_fmt, jule::Slice<jule::Any> _32222_args);
inline jule::Str _22578bb0a_argToStr(jule::Any _32613_arg);
inline jule::I64 _22578bdc4_findNextFmt(jule::Str _33916_fmt);
inline jule::Str _22578c28c_applyFmt(jule::Str _34817_fmt, jule::Slice<jule::Any> _34827_args);
inline jule::Bool _22578d18e_IsTopDirective(jule::Str _2319_directive);
inline jule::Bool _22578e5ad_IsWindows(jule::Str _3714_os);
inline jule::Bool _22578e8bb_IsDarwin(jule::Str _4013_os);
inline jule::Bool _22578eb85_IsLinux(jule::Str _4312_os);
inline jule::Bool _22578eec6_IsI386(jule::Str _4611_arch);
inline jule::Bool _22579025c_IsAmd64(jule::Str _4912_arch);
inline jule::Bool _225790526_IsArm64(jule::Str _5212_arch);
inline jule::Bool _2257907e0_IsUnix(jule::Str _5511_os);
inline jule::Bool _225790bb9_Is32Bit(jule::Str _5812_arch);
inline jule::Bool _225790e0b_Is64Bit(jule::Str _6112_arch);
inline void _225865497_init(void);
inline jule::U32 _1e2141c63_F32Bits(jule::F32 _4112_f);
inline jule::F32 _1e2142071_F32FromBits(jule::U32 _4716_b);
inline jule::U64 _1e214233a_F64Bits(jule::F64 _5212_f);
inline jule::F64 _1e214267b_F64FromBits(jule::U64 _5816_b);
inline __jule_tuple_f64__jule_tuple_int _1e2144bde_Frexp(jule::F64 _4714_f);
inline jule::F64 _1e214a1ab_NaN(void);
inline jule::Bool _1e214a4b9_IsNaN(jule::F64 _5210_f);
inline jule::F64 _1e214a783_Inf(jule::I64 _618_sign);
inline jule::Bool _1e214ab4b_IsInf(jule::F64 _7210_f, jule::I64 _7218_sign);
inline __jule_tuple_f64__jule_tuple_int _1e214ae15_normalize(jule::F64 _8214_x);
inline jule::F64 _1e214c8d9_Log(jule::F64 _1118_x);
inline jule::F64 _1e214d2be_Abs(jule::F64 _438_x);
inline __jule_tuple_f64__jule_tuple_f64 _1e2154d97_Modf(jule::F64 _449_f);
inline jule::F64 _1e21556a0_Log2(jule::F64 _449_x);
inline jule::Str _1e217e146_FmtFloat(jule::F64 _7913_f, jule::U8 _7921_fmt, jule::I64 _7932_prec, jule::I64 _7943_bitSize);
inline jule::Slice<jule::U8> _1e217e72e_genericFtoa(jule::Slice<jule::U8> _8720_dst, jule::F64 _8733_val, jule::U8 _8743_fmt, jule::I64 _8758_prec, jule::I64 _8769_bitSize);
inline jule::Slice<jule::U8> _1e217ee38_bigFtoa(jule::Slice<jule::U8> _18716_dst, jule::I64 _18733_prec, jule::U8 _18744_fmt, jule::Bool _18755_neg, jule::U64 _1882_mant, jule::I64 _18813_exp, _1e217ce36_floatInfo* _18824_flt);
inline jule::Slice<jule::U8> _1e218060e_fmtDigits(jule::Slice<jule::U8> _22418_dst, jule::Bool _22431_shortest, jule::Bool _22447_neg, _1e217dab3_decimalSlice _2252_digs, jule::I64 _22526_prec, jule::U8 _22537_fmt);
inline void _1e2180a2c_roundShortest(_1e219181d_decimal* _26223_d, jule::U64 _26235_mant, jule::I64 _26246_exp, _1e217ce36_floatInfo* _26257_flt);
inline jule::Slice<jule::U8> _1e21810c1_fmtE(jule::Slice<jule::U8> _40113_dst, jule::Bool _40126_neg, _1e217dab3_decimalSlice _40137_d, jule::I64 _40154_prec, jule::U8 _40165_fmt);
inline jule::Slice<jule::U8> _1e21815aa_fmtF(jule::Slice<jule::U8> _45613_dst, jule::Bool _45626_neg, _1e217dab3_decimalSlice _45637_d, jule::I64 _45654_prec);
inline jule::Slice<jule::U8> _1e2181c5e_fmtB(jule::Slice<jule::U8> _48913_dst, jule::Bool _48926_neg, jule::U64 _48937_mant, jule::I64 _48952_exp, _1e217ce36_floatInfo* _48963_flt);
inline jule::Slice<jule::U8> _1e21823e1_fmtX(jule::Slice<jule::U8> _51113_dst, jule::I64 _51126_prec, jule::U8 _51137_fmt, jule::Bool _51148_neg, jule::U64 _5126_mant, jule::I64 _51221_exp, _1e217ce36_floatInfo* _51232_flt);
inline jule::I64 _1e2182765_min(jule::I64 _5968_a, jule::I64 _59616_b);
inline jule::I64 _1e2182ad9_max(jule::I64 _6038_a, jule::I64 _60316_b);
inline jule::U8 _1e2183777_lower(jule::U8 _4710_c);
inline __jule_tuple_u64__jule_tuple__1e1c55888_ConvError _1e2183bea_parseUint(jule::Str* _5119_s, jule::I64 _5131_base, jule::I64 _5146_bitSize);
inline jule::Exceptional<jule::U64> _1e2184129_ParseUint(jule::Str _14618_s, jule::I64 _14630_base, jule::I64 _14645_bitSize);
inline jule::Exceptional<jule::I64> _1e21845d0_ParseInt(jule::Str _17217_s, jule::I64 _17225_base, jule::I64 _17240_bitSize);
inline __jule_tuple_f64__jule_tuple_bool _1e2185290_eiselLemire64(jule::U64 _4122_man, jule::I64 _4132_exp10, jule::Bool _4144_neg);
inline __jule_tuple_f32__jule_tuple_bool _1e2185713_eiselLemire32(jule::U64 _11022_man, jule::I64 _11032_exp10, jule::Bool _11044_neg);
inline jule::I64 _1e21874e5_commonPrefixLenIgnoreCase(jule::Str _4630_s, jule::Str _4638_prefix);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1e2187803_special(jule::Str _6912_s);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1e2187abc_readFloat(jule::Str* _10815_s);
inline __jule_tuple_f64__jule_tuple_bool _1e2189618_atof64exact(jule::U64 _48616_mantissa, jule::I64 _48635_exp, jule::Bool _48645_neg);
inline __jule_tuple_f32__jule_tuple_bool _1e2189a47_atof32exact(jule::U64 _52016_mantissa, jule::I64 _52035_exp, jule::Bool _52049_neg);
inline __jule_tuple_f64__jule_tuple__1e1c55888_ConvError _1e218a0db_atofHex(_1e217ce36_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I64 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc);
inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1e1c55888_ConvError _1e218a4b5_atof32(jule::Str _62111_s);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1e1c55888_ConvError _1e218a707_atof64(jule::Str _67911_s);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1e1c55888_ConvError _1e218aa7b_parseFloatPrefix(jule::Str* _73622_s, jule::I64 _73630_bitSize);
inline jule::Exceptional<jule::F64> _1e218ae00_ParseFloat(jule::Str _76815_s, jule::I64 _76823_bitSize);
inline void _1e218b780_ryuFtoaFixed32(_1e217dab3_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I64 _4956_exp, jule::I64 _4966_prec);
inline void _1e218bc25_ryuFtoaFixed64(_1e217dab3_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I64 _12156_exp, jule::I64 _12166_prec);
inline void _1e218c561_formatDecimal(_1e217dab3_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I64 _20088_prec);
inline void _1e218ca39_ryuFtoaShortest(_1e217dab3_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I64 _26157_exp, _1e217ce36_floatInfo* _26168_flt);
inline jule::I64 _1e218ccc0_mulByLog2Log10(jule::I64 _37719_x);
inline jule::I64 _1e218d089_mulByLog10Log2(jule::I64 _38719_x);
inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1e218d4b8_computeBounds(jule::U64 _39518_mant, jule::I64 _39529_exp, _1e217ce36_floatInfo* _3963_flt);
inline void _1e218db17_ryuDigits(_1e217dab3_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup);
inline void _1e218e288_ryuDigits32(_1e217dab3_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4556_upper, jule::Bool _45522_c0, jule::Bool _45536_cup, jule::I64 _45551_endindex);
inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1e218e6b7_mult64bitPow10(jule::U32 _53419_m, jule::I64 _53431_e2, jule::I64 _53440_q);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1e218eae6_mult128bitPow10(jule::U64 _56220_m, jule::I64 _56232_e2, jule::I64 _56241_q);
inline jule::Bool _1e218ee6a_divisibleByPow5(jule::U64 _58624_m, jule::I64 _58632_k);
inline __jule_tuple_u32__jule_tuple_u32 _1e2190234_divmod1e9(jule::U64 _60214_x);
inline void _1e219316b_trim(_1e219181d_decimal* _27414_a);
inline void _1e2193457_rightShift(_1e219181d_decimal* _28420_a, jule::U64 _28432_k);
inline jule::Bool _1e219390d_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I64 _33835_end, jule::Str* _33846_s);
inline void _1e2193bb6_leftShift(_1e219181d_decimal* _35219_a, jule::U64 _35231_k);
inline jule::Bool _1e219403a_shouldRoundUp(_1e219181d_decimal* _39919_a, jule::I64 _39931_nd);
inline jule::Str _1e21957bc_FmtUint(jule::U64 _6112_i, jule::I64 _6120_base);
inline jule::Str _1e2195b85_FmtInt(jule::I64 _7211_i, jule::I64 _7219_base);
inline jule::Str _1e2195e4e_Itoa(jule::I64 _819_i);
inline jule::Str _1e2196290_small(jule::I64 _8610_i);
inline jule::Bool _1e2196526_isPowerOfTwo(jule::I64 _9617_x);
inline __jule_tuple_su8__jule_tuple_str _1e2196aba_fmtBits(jule::Slice<jule::U8> _10516_dst, jule::U64 _10533_u, jule::I64 _10541_base, jule::Bool _10552_neg, jule::Bool _10563_append_);
inline jule::Str _1e219854a_RealKindOf(jule::Str _4515_kind);
inline jule::I64 _1e2198814_BitsizeOf(jule::Str _5914_k);
inline jule::Str _1e2198b55_IntFromBits(jule::I64 _8716_bits);
inline jule::Str _1e2198ddb_UintFromBits(jule::I64 _10517_bits);
inline jule::Str _1e21991a5_FloatFromBits(jule::I64 _12318_bits);
inline jule::Bool _1e2199caa_CheckBitFloat(jule::Str _15118_val, jule::I64 _15128_bit);
inline jule::I64 _1e219a074_BitsizeOfFloat(jule::F64 _16119_x);
inline jule::I64 _1e219a33d_BitsizeOfInt(jule::I64 _17717_x);
inline jule::I64 _1e219a607_BitsizeOfUint(jule::U64 _19718_x);
inline void _1e219a7a0_UpdateTarget(void);
inline void _1e219a926_init(void);
inline jule::I64 _1e219e584_MinI(jule::Str _6113_k);
inline jule::I64 _1e219e892_MaxI(jule::Str _7913_k);
inline jule::U64 _1e219eb5b_MaxU(jule::Str _9713_k);
inline jule::F64 _1e219ee9c_Min(jule::Str _11512_k);
inline jule::F64 _1e21a0233_Max(jule::Str _13312_k);
inline jule::Bool _1e21a3258_IsSigInt(jule::Str _2717_k);
inline jule::Bool _1e21a3566_IsUnsigInt(jule::Str _3619_k);
inline jule::Bool _1e21a3830_IsInt(jule::Str _4610_k);
inline jule::Bool _1e21a3b71_IsFloat(jule::Str _5112_k);
inline jule::Bool _1e21a3e07_IsNum(jule::Str _5610_k);
inline jule::Bool _1e21a41c1_IsSigNum(jule::Str _6113_k);
inline void _1e21ad4b6_lshiftUnsig(_1e21a449b_Const* _59021_c, _1e21a449b_Const* _59032_x);
inline void _1e21ad7e6_rshiftUnsig(_1e21a449b_Const* _59621_c, _1e21a449b_Const* _59632_x);
inline jule::Bool _1e5c90319_IsUnaryOp(jule::U64 _33414_id);
inline jule::Bool _1e5c90627_IsBinOp(jule::U64 _34412_id);
inline jule::Bool _1e5c90c32_IsStr(jule::Str _36410_k);
inline jule::Bool _1e5c90eb8_IsRawStr(jule::Str _36713_k);
inline jule::Bool _1e5c91282_IsRune(jule::Str _37111_k);
inline jule::Bool _1e5c91b67_IsFloat(jule::Str _38012_k);
inline jule::Bool _1e5c91e31_IsNum(jule::Str _38810_k);
inline jule::Bool _1e5c924b4_IsIgnoreIdent(jule::Str _40318_ident);
inline jule::Bool _1e5c9277d_IsAnonIdent(jule::Str _40616_ident);
inline jule::Bool _1e5c92d11_IsSpace(jule::I32 _41912_r);
inline jule::Bool _1e5c9330b_IsLetter(jule::I32 _42913_r);
inline jule::Bool _1e5c9377e_IsDecimal(jule::U8 _44914_b);
inline jule::Bool _1e5c93a48_IsBinary(jule::U8 _45213_b);
inline jule::Bool _1e5c93d12_IsOctal(jule::U8 _45512_b);
inline jule::Bool _1e5c940cb_IsHex(jule::U8 _45810_b);
inline jule::Bool _1e5c94395_IsAssign(jule::U64 _47313_id);
inline jule::Bool _1e5c9465e_IsPostfixOp(jule::U64 _48516_id);
inline jule::Bool _1e5c94928_IsAssignOp(jule::U64 _49515_id);
inline jule::Ptr<_1e5c95363_File> _1e5c9673d_NewFileSet(jule::Str _5715_path);
inline _22578b38a_Log _1e5c98267_makeErr(jule::I64 _10012_row, jule::I64 _10022_col, jule::Ptr<_1e5c95363_File>* _10033_f, jule::Str _10043_fmt, jule::Slice<jule::Any> _10056_args);
inline jule::Bool _1e5c98630_bytesHasPrefix(jule::Slice<jule::U8>* _11020_bytes, jule::Str _11035_prefix);
inline jule::Str _1e5c989a4_floatFmtE(jule::Slice<jule::U8>* _12215_txt, jule::I64 _12232_i);
inline jule::Str _1e5c98d6c_floatFmtP(jule::Slice<jule::U8>* _15615_txt, jule::I64 _15628_i);
inline jule::Str _1e5c991e1_floatFmtDotnp(jule::Slice<jule::U8>* _16019_txt, jule::I64 _16036_i);
inline jule::Str _1e5c99565_floatFmtDotfp(jule::Slice<jule::U8>* _18119_txt, jule::I64 _18136_i);
inline jule::Str _1e5c998d9_floatFmtDotp(jule::Slice<jule::U8>* _18618_txt, jule::I64 _18635_i);
inline jule::Str _1e5c99d6d_floatNum(jule::Slice<jule::U8>* _19114_txt, jule::I64 _19131_i);
inline jule::Str _1e5c9a0b0_commonNum(jule::Slice<jule::U8>* _21615_txt);
inline jule::Str _1e5c9a379_binaryNum(jule::Slice<jule::U8>* _23915_txt);
inline jule::Bool _1e5c9a6ed_isFloatFmtE(jule::U8 _26116_b, jule::I64 _26125_i);
inline jule::Bool _1e5c9aa72_isFloatFmtP(jule::U8 _26516_b, jule::I64 _26525_i);
inline jule::Bool _1e5c9ade6_isFloatFmtDotnp(jule::Slice<jule::U8>* _26921_txt, jule::I64 _26938_i);
inline jule::Bool _1e5c9b26a_isFloatFmtDotp(jule::Slice<jule::U8>* _29020_txt, jule::I64 _29033_i);
inline jule::Bool _1e5c9b5de_isFloatFmtDotfp(jule::Slice<jule::U8>* _30321_txt, jule::I64 _30334_i);
inline jule::Str _1e5c9bad9_octalNum(jule::Slice<jule::U8>* _31814_txt);
inline jule::Str _1e5c9bcb5_hexNum(jule::Slice<jule::U8>* _36012_txt);
inline jule::Str _1e5c9c117_hexEscape(jule::Slice<jule::U8>* _39315_txt, jule::I64 _39328_n);
inline jule::Str _1e5c9c3d1_bigUnicodePointEscape(jule::Slice<jule::U8>* _41127_txt);
inline jule::Str _1e5c9c69a_littleUnicodePointEscape(jule::Slice<jule::U8>* _41630_txt);
inline jule::Str _1e5c9c964_hexByteEscape(jule::Slice<jule::U8>* _42119_txt);
inline jule::Str _1e5c9cc2d_byteEscape(jule::Slice<jule::U8>* _42616_txt);
inline jule::Slice<_22578b38a_Log> _1e5ca2c22_Lex(jule::Ptr<_1e5c95363_File> _80612_f, jule::I64 _80622_mode);
inline jule::Bool _1e5d77885_FindModuleFile(jule::Slice<jule::Ptr<_2243de341_DirEntry>>* _1320_dirents);
inline jule::Str _1e5d77b3d_FindModuleFileDeep(jule::Str _2527_path);
inline jule::Slice<_22578b38a_Log> _1e5d77e07_CheckModuleFile(jule::Str* _4721_path);
inline jule::Bool _1e5d78754_IsPub(jule::Str _910_ident);
inline jule::Bool _1e5dc268d_IsAscii(jule::I32 _1112_r);
inline jule::I32 _1e5ddc7b8_ToRune(jule::Str _2015_lit);
inline jule::Str _1e5ddc9c7_ToRawStr(jule::Str _3613_lit);
inline jule::Str _1e5ddcd18_ToStr(jule::Str _4714_lit);
inline __jule_tuple_u8__jule_tuple_bool _1e5ddd09e_tryBtoaCommonEsq(jule::Str _8321_s);
inline jule::I32 _1e5ddd423_runeFromEsqSeq(jule::Str _11319_s, jule::I64* _11332_i);
inline void _1e5ddd7b9_strEsqSeq(jule::Slice<jule::U8>* _14519_buf, jule::Str _14532_s, jule::I64* _14545_i);
inline jule::I64 _1e6021ad9_findFormatPrefix(jule::Slice<jule::U8>* _1222_bytes, jule::I64 _1241_i);
inline jule::Slice<jule::U8> _1e6021ea2_getFormatRange(jule::I64* _2824_i, jule::Slice<jule::U8>* _2837_bytes);
inline void _1e602228d_FmtByDefault(_224497295_StrBuilder* _4822_buf, jule::Any* _4840_arg);
inline void _1e60226ab_applyFmtByDefault(_224497295_StrBuilder* _8727_buf, jule::I64* _8749_j, jule::Slice<jule::Any> _8757_args);
inline void _1e6022ac9_applyFmt(jule::Slice<jule::U8>* _9518_fmt, _224497295_StrBuilder* _9536_buf, jule::I64* _9558_j, jule::Slice<jule::Any> _9566_args);
inline jule::Slice<jule::U8> _1e6022e4d_Format(jule::Str _11611_fmt, jule::Slice<jule::Any> _11621_args);
inline jule::Str _1e6024e72_Format(jule::Str _3111_fmt, jule::Slice<jule::Any> _3121_args);
inline jule::Ptr<_1e5ce0358_Fn> _1e21ae8d5_runtimeFindFn(jule::Ptr<_1e5d5b2e7_ImportInfo>* _1023_runtime, jule::Str _1045_ident);
inline jule::Ptr<_1e5cc5e21_Struct> _1e21ade45_runtimeFindStruct(jule::Ptr<_1e5d5b2e7_ImportInfo>* _2327_runtime, jule::Str _2349_ident);
inline jule::Bool _1e5ce56e3_parameterUsesGenerics(jule::Ptr<_1e5ce22b1_ParamIns>* _39531_p, jule::Slice<jule::Ptr<_1e5cb2292_GenericDecl>>* _39546_generics);
inline jule::Ptr<_1e5e4900b_TypeSymbol> _1e5ce7e21_buildType(jule::Ptr<_1e5ca5087_TypeDecl> _9418_t);
inline jule::Ptr<_1e5e09d8a_Value> _1e5ce822e_buildExpr(jule::Ptr<_1e5ca93bb_Expr> _10318_expr);
inline jule::Ptr<_1e5e40a08_TypeAlias> _1e5ce84e8_buildTypeAlias(jule::Ptr<_1e5cbbaa4_TypeAliasDecl> _11223_decl);
inline jule::Ptr<_1e5cc2eea_Field> _1e5ce8839_buildField(jule::Ptr<_1e5cc0459_FieldDecl> _12319_decl);
inline jule::Slice<jule::Ptr<_1e5cc2eea_Field>> _1e5ce8ac0_buildFields(jule::Slice<jule::Ptr<_1e5cc0459_FieldDecl>>* _13421_decls);
inline jule::Ptr<_1e5cc5e21_Struct> _1e5ce8d89_buildStruct(jule::Ptr<_1e5cc0d50_StructDecl> _14220_decl);
inline jule::Ptr<_1e5cdd884_Param> _1e5ce9153_buildParam(jule::Ptr<_1e5cb57e5_ParamDecl> _15419_decl);
inline jule::Slice<jule::Ptr<_1e5cdd884_Param>> _1e5ce952c_buildParams(jule::Slice<jule::Ptr<_1e5cb57e5_ParamDecl>>* _16521_decls);
inline jule::Ptr<_1e5cdd147_RetType> _1e5ce976e_buildRetType(jule::Ptr<_1e5ca7e7a_RetTypeDecl> _17321_decl);
inline jule::Ptr<_1e5ce0358_Fn> _1e5ce9a38_buildFunc(jule::Ptr<_1e5cb6c47_FnDecl> _18318_decl);
inline jule::Slice<jule::Ptr<_1e5ce0358_Fn>> _1e5ce9d02_buildMethods(jule::Slice<jule::Ptr<_1e5cb6c47_FnDecl>>* _20122_decls);
inline jule::Slice<jule::Ptr<_1e5e4900b_TypeSymbol>> _1e5cea0bb_buildTraitInherits(jule::Slice<jule::Ptr<_1e5ca5087_TypeDecl>>* _20928_inherits);
inline jule::Ptr<_1e5d03db6_Trait> _1e5cea385_buildTrait(jule::Ptr<_1e5cc158c_TraitDecl> _21719_decl);
inline jule::Ptr<_1e5d05a55_EnumItem> _1e5cea64e_buildEnumItem(jule::Ptr<_1e5cbd644_EnumItemDecl> _22722_decl);
inline jule::Slice<jule::Ptr<_1e5d05a55_EnumItem>> _1e5cea918_buildEnumItems(jule::Slice<jule::Ptr<_1e5cbd644_EnumItemDecl>>* _23524_decls);
inline jule::Ptr<_1e5d065c2_Enum> _1e5ceae13_buildEnum(jule::Ptr<_1e5cbe205_EnumDecl> _24318_decl);
inline jule::Ptr<_1e5d07705_TypeEnumItem> _1e5ceb0de_buildTypeEnumItem(jule::Ptr<_1e5cbea30_TypeEnumItemDecl> _25326_decl);
inline jule::Slice<jule::Ptr<_1e5d07705_TypeEnumItem>> _1e5ceb386_buildTypeEnumItems(jule::Slice<jule::Ptr<_1e5cbea30_TypeEnumItemDecl>>* _26128_decls);
inline jule::Ptr<_1e5d07ccc_TypeEnum> _1e5ceb650_buildTypeEnum(jule::Ptr<_1e5cc0190_TypeEnumDecl> _26922_decl);
inline jule::Ptr<_1e5da0bcc_Var> _1e5ceb919_buildVar(jule::Ptr<_1e5cb7e02_VarDecl> _27817_decl);
inline jule::Slice<jule::Ptr<_1e5da0bcc_Var>> _1e5cebbd3_buildVars(jule::Slice<jule::Ptr<_1e5cb7e02_VarDecl>> _29518_decls);
inline jule::Ptr<_1e5d33c09_Impl> _1e5cebe9c_buildImpl(jule::Ptr<_1e5cc1bec_Impl> _30318_decl);
inline jule::Bool _1e5d033b0_isImplicitImport(jule::Ptr<_1e5d5b2e7_ImportInfo> _78821_imp);
inline jule::Ptr<_1e5e08c13_Data> _1e5d2e2dc_buildAsComptimeMethodData(jule::Ptr<_1e5ce3416_FnIns>* _203035_f);
inline jule::Ptr<_1e5d5b2e7_ImportInfo> _1e5d2e4eb_findComptimePackage(jule::Ptr<_1e5d7b768_sema>* _203829_s);
inline jule::Ptr<_1e5e08c13_Data> _1e5d2e870_buildComptimeTypeInfoData(jule::Ptr<_1e5d7b768_sema>* _204435_s, jule::Ptr<_1e5e417ea_TypeKind>* _204450_t);
inline jule::Ptr<_1e5e08c13_Data> _1e5d2ebb1_buildComptimeValue(jule::Ptr<_1e5e08c13_Data>* _205228_d);
inline jule::Str _1e5d32ba3_toStrConstraints(jule::Ptr<_1e5e3ee14_InsGeneric> _14321_g);
inline jule::Bool _1e5d3306b_matchConstraint(jule::Str* _15421_c, jule::Ptr<_1e5e417ea_TypeKind>* _15434_g);
inline jule::Bool _1e5d33335_isBuiltinConstraint(jule::Str* _19325_ident);
inline jule::Ptr<_1e5d40771_scopeChecker> _1e5d35e3c_newScopeCheckerBase(jule::Ptr<_1e5d7b768_sema>* _5829_s, jule::Ptr<_1e5ce3416_FnIns> _5843_owner);
inline jule::Ptr<_1e5d40771_scopeChecker> _1e5d36305_newScopeChecker(jule::Ptr<_1e5d7b768_sema>* _6625_s, jule::Ptr<_1e5ce3416_FnIns> _6639_owner);
inline jule::Ptr<_1e5d3e781_scopeLabel> _1e5d36679_findLabelParent(jule::Str* _7621_ident, jule::Ptr<_1e5d40771_scopeChecker> _7637_scope);
inline jule::Slice<jule::Ptr<_1e5e08c13_Data>> _1e5d369ba_getDatasFromTupleData(jule::Ptr<_1e5e08c13_Data>* _8831_d);
inline jule::Bool _1e5d3723a_checkMut(jule::Ptr<_1e5d7b768_sema>* _12318_s, jule::Ptr<_1e5e08c13_Data>* _12329_left, jule::Ptr<_1e5e08c13_Data> _12346_right, jule::Ptr<_1e5c8eacc_Token> _12360_op);
inline jule::Bool _1e5d37724_checkAssign(jule::Ptr<_1e5d7b768_sema>* _14221_s, jule::Ptr<_1e5e08c13_Data>* _14236_left, jule::Ptr<_1e5e08c13_Data> _14253_right, jule::Ptr<_1e5c8eacc_Token> _14267_op);
inline jule::Bool _1e5d37aed_isValidAstStForNextSt(jule::Any* _16431_n);
inline jule::Bool _1e5d37d40_isValidStForNextSt(jule::Any* _17524_st);
inline jule::U64 _1e5d52ec0_removeEqFromOp(jule::U64 _216619_op);
inline void _1e5d53201_makeComptimeRange(jule::Ptr<_1e5e08c13_Data>* _219527_d);
inline jule::Bool _1e5d534ba_canComptimeMatch(jule::Ptr<_1e5e08c13_Data>* _221826_d);
inline jule::Bool _1e5d53784_stmtIsDef(jule::Any* _222615_stmt);
inline jule::I64 _1e5d53b08_countMatchType(jule::Ptr<_1e5d3cc13_Match>* _223820_m, jule::Ptr<_1e5e417ea_TypeKind>* _223832_t);
inline jule::Ptr<_1e5e03548_SymbolTable> _1e5d5839e_findVarFileInPackage(jule::Slice<jule::Ptr<_1e5e03548_SymbolTable>>* _4430_files, jule::Ptr<_1e5da0bcc_Var>* _4454_v);
inline jule::Ptr<_1e5da0bcc_Var> _1e5d58822_findVarInPackage(jule::Slice<jule::Ptr<_1e5e03548_SymbolTable>>* _5526_files, jule::Str* _5550_ident, jule::Bool _5562_binded);
inline jule::Ptr<_1e5e40a08_TypeAlias> _1e5d58c51_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1e5e03548_SymbolTable>>* _6732_files, jule::Str* _6756_ident, jule::Bool _6768_binded);
inline jule::Ptr<_1e5cc5e21_Struct> _1e5d59207_findStructInPackage(jule::Slice<jule::Ptr<_1e5e03548_SymbolTable>>* _7929_files, jule::Str* _7953_ident, jule::Bool _7965_binded);
inline jule::Ptr<_1e5ce0358_Fn> _1e5d59603_findFnInPackage(jule::Slice<jule::Ptr<_1e5e03548_SymbolTable>>* _9125_files, jule::Str* _9149_ident, jule::Bool _9161_binded);
inline jule::Ptr<_1e5d03db6_Trait> _1e5d59977_findTraitInPackage(jule::Slice<jule::Ptr<_1e5e03548_SymbolTable>>* _10328_files, jule::Str* _10352_ident);
inline jule::Ptr<_1e5d065c2_Enum> _1e5d59ceb_findEnumInPackage(jule::Slice<jule::Ptr<_1e5e03548_SymbolTable>>* _11527_files, jule::Str* _11551_ident);
inline jule::Ptr<_1e5d07ccc_TypeEnum> _1e5d5a280_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1e5e03548_SymbolTable>>* _12731_files, jule::Str* _12755_ident);
inline jule::Any _1e5d5a637_defByIdentPackage(jule::Slice<jule::Ptr<_1e5e03548_SymbolTable>>* _13827_files, jule::Str* _13851_ident, jule::Bool _13863_binded);
inline jule::Bool _1e5d616e8_isStdPackage(jule::Str* _36918_f, jule::Str _36926_p);
inline jule::Bool _1e5d78d2b_isValidModelForRef(jule::Any* _1328_m);
inline _22578b38a_Log _1e5d792d2_compilerErr(jule::Ptr<_1e5c8eacc_Token>* _4717_token, jule::Bool _4732_line, jule::Str _4744_fmt, jule::Slice<jule::Any> _4757_args);
inline jule::Bool _1e5d79656_impIsLookupable(jule::Ptr<_1e5d5b2e7_ImportInfo>* _6121_i, jule::Str* _6138_ident);
inline void _1e5d79986_appendRetVars(jule::Slice<jule::Ptr<_1e5da0bcc_Var>>* _7323_dest, jule::Ptr<_1e5ce3416_FnIns>* _7342_f);
inline void _1e5d79c72_appendParamVars(jule::Slice<jule::Ptr<_1e5da0bcc_Var>>* _10325_dest, jule::Ptr<_1e5ce3416_FnIns>* _10344_f);
inline void _1e5d7a05d_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1e5e40a08_TypeAlias>>* _16334_dest, jule::Ptr<_1e5ce3416_FnIns>* _16359_f);
inline jule::Ptr<_1e5e03548_SymbolTable> _1e5d7a3d2_findFile(jule::Slice<jule::Ptr<_1e5e03548_SymbolTable>>* _20418_files, jule::Ptr<_1e5c95363_File>* _20442_handler);
inline void _1e5d7a888_pushSuggestion(_22578b38a_Log* _21330_log, jule::Str _21341_fmt, jule::Slice<jule::Any> _21354_args);
inline void _1e5d9de61_pushImplemented(jule::Ptr<_1e5d03db6_Trait> _300524_t, jule::Ptr<_1e5cc5e21_Struct>* _300540_d);
inline void _1e5d9e24c_pushImplements(jule::Ptr<_1e5cc5e21_Struct>* _302324_s, jule::Ptr<_1e5d03db6_Trait> _302340_t);
inline void _1e5d9e69d_pushRuntimeToStr(jule::Ptr<_1e5d7b768_sema>* _304126_s, jule::Ptr<_1e5e417ea_TypeKind>* _304141_t, jule::Ptr<_1e5c8eacc_Token>* _304160_token, jule::Ptr<_1e5ce65a1_ReferenceStack> _30426_refers);
inline jule::Bool _1e5dde06c_traitHasReferenceReceiver(jule::Ptr<_1e5d03db6_Trait>* _2831_t);
inline jule::Bool _1e5dde402_floatAssignable(jule::Str* _4321_kind, jule::Ptr<_1e5e08c13_Data>* _4333_d);
inline jule::Bool _1e5dde776_sigAssignable(jule::Str _4818_kind, jule::Ptr<_1e5e08c13_Data>* _4830_d);
inline jule::Bool _1e5ddeb3e_unsigAssignable(jule::Str _7120_kind, jule::Ptr<_1e5e08c13_Data>* _7132_d);
inline jule::Bool _1e5ddeeb3_intAssignable(jule::Str _10018_kind, jule::Ptr<_1e5e08c13_Data>* _10030_d);
inline void _1e5deb4a8_checkMutRiskOfStructLit(jule::Ptr<_1e5d7b768_sema>* _92133_s, jule::Ptr<_1e5cd3aee_StructLitExprModel>* _92144_m);
inline jule::Ptr<_1e5e417ea_TypeKind> _1e5e022e4_lenKind(void);
inline jule::Bool _1e5e02646_isGoodValueToInfer(jule::Ptr<_1e5e08c13_Data>* _142624_d);
inline jule::Ptr<_1e5ca44a4_Directive> _1e5e33215_findDirective(jule::Slice<jule::Ptr<_1e5ca44a4_Directive>>* _440223_directives, jule::Str _440254_d);
inline jule::Any _1e5e335cd_findBuiltinsImport(jule::Str* _441124_ident, jule::Ptr<_1e5d5b2e7_ImportInfo> _441136_imp);
inline void _1e5e3380e_fitBitsize(jule::Ptr<_1e5e08c13_Data>* _442020_d);
inline void _1e5e33b3e_makeStructLitAlloc(jule::Ptr<_1e5e08c13_Data>* _444928_d, jule::Ptr<_1e5cd3aee_StructLitExprModel>* _444943_lit);
inline jule::Ptr<_1e5da0bcc_Var> _1e5e33eb3_buildErrorVar(jule::Ptr<_1e5d384d3_Scope>* _446023_s, jule::Ptr<_1e5cad0e5_FnCallExpr>* _446039_fc);
inline jule::Any _1e5e34337_findBuiltinsSema(jule::Str* _447522_ident, jule::Ptr<_1e5d7b768_sema> _447538_s);
inline jule::Bool _1e5e34601_isOkForShifting(jule::Ptr<_1e5e08c13_Data>* _450025_d);
inline jule::Bool _1e5e349ca_isInstancedStruct(jule::Ptr<_1e5cc8c7b_StructIns> _451722_s);
inline jule::Bool _1e5e34cc7_isPtrArithmeticCompatible(jule::Ptr<_1e5e08c13_Data>* _452135_l, jule::Ptr<_1e5e08c13_Data>* _452150_r);
inline void _1e5e352d3_applyRuntimeToStr(jule::Ptr<_1e5d7b768_sema>* _454227_s, jule::Ptr<_1e5e417ea_TypeKind>* _454242_from, jule::Ptr<_1e5e417ea_TypeKind>* _454264_to, jule::Ptr<_1e5c8eacc_Token>* _45437_token, jule::Ptr<_1e5ce65a1_ReferenceStack> _454326_refers);
inline void _1e5e357de_applyCastKindModel(jule::Ptr<_1e5d7b768_sema>* _455728_s, jule::Ptr<_1e5e08c13_Data>* _455743_d, jule::Ptr<_1e5e417ea_TypeKind>* _455758_t, jule::Ptr<_1e5c8eacc_Token>* _45587_token, jule::Ptr<_1e5ce65a1_ReferenceStack> _455826_refers);
inline void _1e5e35cea_applyCastKind(jule::Ptr<_1e5d7b768_sema>* _456823_s, jule::Ptr<_1e5e08c13_Data>* _456838_d, jule::Ptr<_1e5e417ea_TypeKind>* _456853_t, jule::Ptr<_1e5c8eacc_Token>* _45697_token, jule::Ptr<_1e5ce65a1_ReferenceStack> _456926_refers);
inline jule::Ptr<_1e5e08c13_Data> _1e5e36009_buildVoidData(void);
inline jule::Str _1e5e3b350_checkDataForIntegerIndexing(jule::Ptr<_1e5d7b768_sema>* _458037_s, jule::Ptr<_1e5e08c13_Data>* _458052_d, jule::Ptr<_1e5c8eacc_Token>* _45817_token, jule::Ptr<_1e5ce65a1_ReferenceStack> _458126_refers);
inline void _1e5e3b85b_applyCastModelByEnum(jule::Ptr<_1e5d7b768_sema>* _460630_s, jule::Ptr<_1e5e08c13_Data>* _460645_d, jule::Ptr<_1e5d065c2_Enum> _460659_e, jule::Ptr<_1e5c8eacc_Token>* _46077_token, jule::Ptr<_1e5ce65a1_ReferenceStack> _460726_refers);
inline void _1e5e3bd78_castConstByType(jule::Str* _461421_t, jule::Ptr<_1e5e08c13_Data>* _461434_d);
inline void _1e5e3c054_updateModelToGenericIns(jule::Any* _464833_m, jule::Ptr<_1e5ce3416_FnIns>* _464852_f);
inline jule::Bool _1e5e3c3c8_pushSubIdentFromExpr(jule::Any _465929_expr, jule::Ptr<_1e5ca595b_SubIdentTypeDecl>* _465950_t);
inline jule::Str _1e5e3c692_constoa(jule::Ptr<_1e21a449b_Const>* _468213_c);
inline jule::Ptr<_1e5e08c13_Data> _1e5e3cc36_evalEnumStatic(jule::Ptr<_1e5d7b768_sema>* _469324_s, jule::Ptr<_1e5d065c2_Enum>* _469339_enm, jule::Ptr<_1e5d05a55_EnumItem>* _469356_item, jule::Ptr<_1e5c8eacc_Token>* _46947_token, jule::Ptr<_1e5ce65a1_ReferenceStack> _469426_refers);
inline jule::Ptr<_1e5cd3aee_StructLitExprModel> _1e5e3d000_isLitBased(jule::Any* _471120_m);
inline void _1e5e3d2db_makeImplicitDeref(jule::Ptr<_1e5e08c13_Data>* _472827_d, jule::Ptr<_1e5c8eacc_Token> _472841_baseToken);
inline void _1c8034a71_updateRefer(jule::Ptr<_1e5ce65a1_ReferenceStack> _473923_ref, jule::Ptr<_1e5ce3416_FnIns>* _473946_old, jule::Ptr<_1e5ce3416_FnIns>* _473959_new);
inline void _1e5e3d96d_makeVariadic(jule::Ptr<_1e5e08c13_Data>* _474722_d, jule::Ptr<_1e5e417ea_TypeKind> _474736_elem);
inline jule::Bool _1e5e3dd9c_isVarCaptured(jule::Ptr<_1e5d40771_scopeChecker> _476118_r, jule::Ptr<_1e5d40771_scopeChecker> _476140_s, jule::Ptr<_1e5da0bcc_Var> _476158_v);
inline jule::Bool _1e5e5c99d_kindUsesGenerics(jule::Ptr<_1e5e417ea_TypeKind>* _175726_k, jule::Slice<jule::Ptr<_1e5cb2292_GenericDecl>>* _175741_generics);
inline jule::Bool _1e5e5cd66_hasDirective(jule::Slice<jule::Ptr<_1e5ca44a4_Directive>>* _176722_directives, jule::Str _176753_tag);
inline jule::Bool _1e5e5d130_canGetPtr(jule::Ptr<_1e5e08c13_Data>* _177619_d);
inline jule::Bool _1e5e5d471_isValidForSptrType(jule::Ptr<_1e5e417ea_TypeKind>* _177928_t);
inline jule::Bool _1e5e5d707_isValidForRef(jule::Ptr<_1e5e417ea_TypeKind>* _178823_t);
inline jule::Bool _1e5e5d9c1_isBuiltinStrConvertable(jule::Ptr<_1e5e417ea_TypeKind>* _179133_t);
inline jule::Str _1e5e5dc8a_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _179527_tokens);
inline jule::Ptr<_1e5e49913_Prim> _1e5e5e164_buildPrimType(jule::Str _181418_kind);
inline void _1e5e5e8b2_applyImplicitCast(jule::Ptr<_1e5d7b768_sema>* _184227_s, jule::Ptr<_1e5e417ea_TypeKind>* _184242_dest, jule::Ptr<_1e5e08c13_Data>* _184264_d, jule::Ptr<_1e5c8eacc_Token>* _18437_token, jule::Ptr<_1e5ce65a1_ReferenceStack> _184326_refers);
inline jule::Bool _1e5e5eb7b_validTypeForXof(jule::Ptr<_1e5e417ea_TypeKind>* _187125_t);
inline __jule_tuple_x_1e5e03548_SymbolTable__jule_tuple_s_22578b38a_Log _1e5e62c8e_buildSymbols(jule::Ptr<_1e5ca3173_AST>* _1622_ast, jule::Trait* _1638_importer, jule::Ptr<_1e5cec563_symbolBuilder> _1662_owner);
inline void _1e5e630be_collectImplicitImports(jule::Ptr<_1e5d7b768_sema>* _3132_s, jule::Ptr<_1e5e03548_SymbolTable>* _3147_file);
inline __jule_tuple_x_1e5d5e21d_Package__jule_tuple_s_22578b38a_Log _1e5e634ed_analyzePackage(jule::Slice<jule::Ptr<_1e5ca3173_AST>>* _4524_files, jule::Trait* _4544_importer, jule::I64* _4565_flags);
inline __jule_tuple_x_1e5d5e21d_Package__jule_tuple_s_22578b38a_Log _1e5e639a4_AnalyzePackage(jule::Slice<jule::Ptr<_1e5ca3173_AST>> _9523_files, jule::Trait _9542_importer, jule::I64 _9562_flags);
inline jule::Ptr<_1e5ce3416_FnIns> _1e6025912_findBuiltinFunc(jule::Str* _2621_ident);
inline jule::Ptr<_1e5e40a08_TypeAlias> _1e6025c20_primTypeAlias(jule::Ptr<_1e5e417ea_TypeKind>* _6323_k);
inline jule::Ptr<_1e5da0bcc_Var> _1e60295c5_findBuiltinVar(jule::Str* _9120_ident);
inline jule::Ptr<_1e5e40a08_TypeAlias> _1e6029916_findBuiltinTypeAlias(jule::Str _13925_ident);
inline jule::Any _1e6029b9c_findBuiltinDef(jule::Str* _19420_ident);
inline jule::Any _1e6029e66_findBuiltinDefStdDebug(jule::Str* _21028_ident);
inline jule::Any _1e602a230_findBuiltinDefStdMem(jule::Str* _22326_ident);
inline jule::Any _1e602a609_findBuiltinDefStdComptime(jule::Str* _23931_ident);
inline jule::Any _1e602a84b_findBuiltinDefStdJuleIntegrated(jule::Str* _26437_ident);
inline jule::Any _1e602abc0_findPackageBuiltinDef(jule::Str* _27927_linkPath, jule::Str* _27943_ident);
inline jule::Ptr<_1e5e08c13_Data> _1e602b044_builtinCallerError(jule::Ptr<_1e5e0a93a_eval>* _29428_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _29443_fc);
inline jule::Ptr<_1e5e08c13_Data> _1e602b473_builtinCallerOut(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _32526_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _32541_fc, jule::Ptr<_1e5e08c13_Data>* );
inline jule::Ptr<_1e5e08c13_Data> _1e602b8a2_builtinCallerOutln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _35228_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _35243_fc, jule::Ptr<_1e5e08c13_Data>* _35265_d);
inline jule::Ptr<_1e5e08c13_Data> _1e602bcd1_builtinCallerNew(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _36426_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _36441_fc, jule::Ptr<_1e5e08c13_Data>* _36463_d);
inline jule::Ptr<_1e5e08c13_Data> _1e602c210_builtinCallerPanic(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _42628_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _42643_fc, jule::Ptr<_1e5e08c13_Data>* );
inline jule::Ptr<_1e5e08c13_Data> _1e602c870_builtinCallerMake(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _45227_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _45242_fc, jule::Ptr<_1e5e08c13_Data>* _45264_d);
inline jule::Ptr<_1e5e08c13_Data> _1e602cb8e_builtinCallerAppend(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _50329_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _50344_fc, jule::Ptr<_1e5e08c13_Data>* _50366_d);
inline jule::Ptr<_1e5e08c13_Data> _1e602d178_callerCopySlice(jule::Ptr<_1e5e08c13_Data>* _62325_dest, jule::Ptr<_1e5e0a93a_eval>* _62343_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _62358_fc, jule::Ptr<_1e5e08c13_Data>* _62380_d);
inline jule::Ptr<_1e5e08c13_Data> _1e602d5a7_builtinCallerCopy(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _65727_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _65742_fc, jule::Ptr<_1e5e08c13_Data>* _65764_d);
inline jule::Ptr<_1e5e08c13_Data> _1e602d92b_callerLenSlice(jule::Ptr<_1e5e08c13_Data>* _68224_expr, jule::Ptr<_1e5e08c13_Data>* _68242_d);
inline jule::Ptr<_1e5e08c13_Data> _1e602dca0_callerLenMap(jule::Ptr<_1e5e08c13_Data>* _69022_expr, jule::Ptr<_1e5e08c13_Data>* _69040_d);
inline jule::Ptr<_1e5e08c13_Data> _1e602e124_callerLenArr(jule::Ptr<_1e5e08c13_Data>* _69822_expr, jule::Ptr<_1e5e08c13_Data>* _69840_d);
inline jule::Ptr<_1e5e08c13_Data> _1e602e498_callerLenStr(jule::Ptr<_1e5e08c13_Data>* _70522_expr, jule::Ptr<_1e5e08c13_Data>* _70540_d);
inline jule::Ptr<_1e5e08c13_Data> _1e602e81c_callerLenComptime(jule::Ptr<_1e5e08c13_Data>* _71827_d, jule::I64 _71837_n);
inline jule::Ptr<_1e5e08c13_Data> _1e602ec4b_builtinCallerLen(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _72526_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _72541_fc, jule::Ptr<_1e5e08c13_Data>* _72563_d);
inline jule::Ptr<_1e5e08c13_Data> _1e60300c0_callerCapSlice(jule::Ptr<_1e5e08c13_Data>* _76524_expr, jule::Ptr<_1e5e08c13_Data>* _76542_d);
inline jule::Ptr<_1e5e08c13_Data> _1e60304ee_builtinCallerCap(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _77326_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _77341_fc, jule::Ptr<_1e5e08c13_Data>* _77363_d);
inline jule::Ptr<_1e5e08c13_Data> _1e60309d8_callerDeleteMap(jule::Ptr<_1e5e0a93a_eval>* _79625_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _79640_fc, jule::Ptr<_1e5e08c13_Data>* _79662_expr, jule::Ptr<_1e5e08c13_Data>* _79680_d);
inline jule::Ptr<_1e5e08c13_Data> _1e6030e17_builtinCallerDelete(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _82529_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _82544_fc, jule::Ptr<_1e5e08c13_Data>* _82566_d);
inline jule::Ptr<_1e5e08c13_Data> _1e6031346_builtinCallerStdComptimeTypeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _84840_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _84855_fc, jule::Ptr<_1e5e08c13_Data>* );
inline jule::Ptr<_1e5e08c13_Data> _1e6031775_builtinCallerStdComptimeValueOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _88441_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _88456_fc, jule::Ptr<_1e5e08c13_Data>* );
inline jule::Ptr<_1e5e08c13_Data> _1e6031de6_builtinCallerStdComptimeLine(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _90438_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _90453_fc, jule::Ptr<_1e5e08c13_Data>* );
inline jule::Ptr<_1e5e08c13_Data> _1e6032325_builtinCallerStdComptimeFile(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _91638_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _91653_fc, jule::Ptr<_1e5e08c13_Data>* );
inline jule::Ptr<_1e5e08c13_Data> _1e6032754_builtinCallerStdComptimeFiles(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _92939_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _92954_fc, jule::Ptr<_1e5e08c13_Data>* );
inline jule::Ptr<_1e5e08c13_Data> _1e6032b83_builtinCallerStdComptimeTypeAlias(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _94243_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _94258_fc, jule::Ptr<_1e5e08c13_Data>* );
inline jule::Ptr<_1e5e08c13_Data> _1e60330b2_builtinCallerStdMemSizeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _100235_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _100250_fc, jule::Ptr<_1e5e08c13_Data>* );
inline jule::Ptr<_1e5e08c13_Data> _1e60334e1_builtinCallerStdMemAlignOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _102736_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _102751_fc, jule::Ptr<_1e5e08c13_Data>* );
inline jule::Ptr<_1e5e08c13_Data> _1e6033920_builtinCallerStdMemFree(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _105233_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _105248_fc, jule::Ptr<_1e5e08c13_Data>* );
inline jule::Ptr<_1e5e08c13_Data> _1e6033d4e_builtinCallerStdJuleIntegratedEmit(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _107544_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _107559_fc, jule::Ptr<_1e5e08c13_Data>* _107581_d);
inline jule::Ptr<_1e5e08c13_Data> _1e603427d_builtinCallerStdDebugOut(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _112634_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _112649_fc, jule::Ptr<_1e5e08c13_Data>* _112671_d);
inline jule::Ptr<_1e5e08c13_Data> _1e60346ac_builtinCallerStdDebugOutln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _113536_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _113551_fc, jule::Ptr<_1e5e08c13_Data>* _113573_d);
inline jule::Ptr<_1e6970636_FileInfo> _1e6973408_ParseFile(jule::Ptr<_1e5c95363_File> _2318_f);
inline __jule_tuple_x_1e5ca3173_AST__jule_tuple_s_22578b38a_Log _1e69b94c6_parseFileset(jule::Ptr<_1e5c95363_File> _5521_f);
inline jule::Ptr<_1e5cb50a8_ScopeTree> _1e69b9e99_newScope(void);
inline __jule_tuple_bool__jule_tuple_bool _1e69ba2eb_isSt(jule::Ptr<_1e5c8eacc_Token> _499_current, jule::Ptr<_1e5c8eacc_Token> _4926_prev);
inline jule::Bool _1e69ba670_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _5526_tokens, jule::I64* _5545_i);
inline __jule_tuple_int__jule_tuple_bool _1e69baa38_nextStPos(jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _6815_tokens, jule::I64 _6833_start);
inline __jule_tuple_sx_1e5c8eacc_Token__jule_tuple_bool _1e69badac_skipSt(jule::I64* _13016_i, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _13028_tokens);
inline jule::Slice<jule::Ptr<_1e69bb1dc_stmt>> _1e69bb594_splitStmts(jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _15120_tokens);
inline jule::Bool _1e69d4bea_isTypeOp(jule::U64* _89314_id);
inline jule::Bool _1e69d5008_isTypeRange(jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _90021_tokens);
inline jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _1e69d52c2_getBlockExpr(jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _93322_tokens);
inline __jule_tuple_sx_1e5c8eacc_Token__jule_tuple_sx_1e5c8eacc_Token _1e69d568a_splitDelim(jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _96520_tokens, jule::U64 _96538_delim);
inline jule::I64 _1e69d5954_findLowestPrecOp(jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _100422_tokens);
inline jule::Ptr<_1e5caabd6_IdentExpr> _1e69d5c1d_buildIdentExpr(jule::Ptr<_1e5c8eacc_Token>* _106924_token);
inline __jule_tuple_sx_1e5c8eacc_Token__jule_tuple_int _1e69d5ed7_getRangeExprTokens(jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _107728_tokens);
inline jule::Bool _1e69d63b1_isAnonFnHead(jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _110018_tokens);
inline jule::Bool _1e69d70b5_checkAssignTokens(jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _1623_tokens);
inline _22578b38a_Log _1e69d8281_makeErr(jule::I64 _5112_row, jule::I64 _5122_col, jule::Ptr<_1e5c95363_File>* _5133_f, jule::Str _5143_fmt, jule::Slice<jule::Any> _5156_args);
inline jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _1e69d87ae_range(jule::I64* _6915_i, jule::U64 _6923_open, jule::U64 _6938_close, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _6959_tokens);
inline __jule_tuple_sx_1e5c8eacc_Token__jule_tuple_sx_1e5c8eacc_Token _1e69d8a78_rangeLast(jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _9919_tokens);
inline __jule_tuple_ssx_1e5c8eacc_Token__jule_tuple_s_22578b38a_Log _1e69d902e_parts(jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _13715_tokens, jule::U64 _13733_id, jule::Bool _13746_exprMust);
inline jule::U64 _1e69d92b5_getCloseOfBrace(jule::U64 _16720_left);
inline _22578b38a_Log _1e69d96e4_compilerErr(jule::Ptr<_1e5c8eacc_Token>* _18017_token, jule::Str* _18033_fmt, jule::Slice<jule::Any> _18046_args);
inline void _1e69d9a8a_pushSuggestion(_22578b38a_Log* _19130_log, jule::Str _19141_fmt, jule::Slice<jule::Any> _19154_args);
inline jule::Ptr<_1e5ca5087_TypeDecl> _1e69eb99d_buildVoidType(void);
inline __jule_tuple_bool__jule_tuple_bool _1e61d870c_checkOs(jule::Str _912_arg);
inline __jule_tuple_bool__jule_tuple_bool _1e61d8850_checkArch(jule::Str _2814_arg);
inline jule::Bool _1e61d89e8_isPassFileAnnotation(jule::Str _5029_p);
inline void _1e62094db_setOsVars(jule::Slice<jule::Str>* _3619_vars);
inline void _1e6209761_setArchVars(jule::Slice<jule::Str>* _4421_vars);
inline void _1e6209a4c_initVars(jule::Slice<jule::Str>* _5518_vars, _1e62091bc_CompileInfo* _5532_info);
inline jule::Slice<jule::U8> _1e6a0092a_readBuff(jule::Str _3013_path);
inline _22578b38a_Log _1e6a00c38_flatCompilerErr(jule::Str _4120_text);
inline jule::Ptr<_1e5ce0358_Fn> _1e614dc8d_RuntimeFindFn(jule::Ptr<_1e5d5b2e7_ImportInfo>* _1823_runtime, jule::Str _1845_ident);
inline jule::Ptr<_1e5cc5e21_Struct> _1e61560a3_RuntimeFindStruct(jule::Ptr<_1e5d5b2e7_ImportInfo>* _3327_runtime, jule::Str _3349_ident);
inline void _1e6a05468_pushPasses(jule::Ptr<_1e5d5e21d_Package>* _12220_p, jule::Slice<jule::Str>* _12244_passes);
inline jule::Slice<jule::Str> _1e6a05831_getAllUniquePasses(jule::Ptr<_1e5d5e21d_Package>* _13928_pkg, jule::Slice<jule::Ptr<_1e5d5b2e7_ImportInfo>> _13953_uses);
inline _1e62091bc_CompileInfo _1e6a05a40_buildCompileInfo(void);
inline void _1e6a05ce8_pushRuntimeToAST(jule::Ptr<_1e5ca3173_AST>* _17826_f);
inline void _1e6a06447_IterPackages(jule::Ptr<_1e6a03ab5_IR>* _722_ir, jule::Fn<void,jule::Ptr<_1e5d5e21d_Package>*> _731_f);
inline void _1e6a06777_IterFiles(jule::Ptr<_1e5d5e21d_Package>* _1619_pkg, jule::Fn<void,jule::Ptr<_1e5e03548_SymbolTable>*> _1634_f);
inline void _1e6a06b1d_iterTraitInheritMethods(jule::Ptr<_1e5d03db6_Trait>* _2233_base, jule::Ptr<_1e5d03db6_Trait>* _2252_t, jule::Fn<void,jule::Ptr<_1e5ce0358_Fn>*> _2263_f);
inline void _1e6a0703b_iterTraitInheritMethods1(jule::Ptr<_1e5d03db6_Trait>* _3134_base, jule::Ptr<_1e5d03db6_Trait>* _3153_t, jule::Fn<void,jule::Ptr<_1e5ce0358_Fn>*> _3164_f);
inline void _1e6a072e4_IterTraitMethods(jule::Ptr<_1e5d03db6_Trait>* _3926_t, jule::Fn<void,jule::Ptr<_1e5ce0358_Fn>*> _3937_f);
inline jule::Bool _1e6a0957c_IsForwarded(jule::Ptr<_1e5d384d3_Scope>* _2417_s);
inline jule::Bool _1e6a0988a_IsExprComesFromBind(jule::Ptr<_1e5e08c13_Data>* _4025_d);
inline jule::Bool _1e6a09b54_IsAny(jule::Ptr<_1e5e417ea_TypeKind>* _5215_t);
inline jule::Bool _1e6a09e95_IsClosure(jule::Ptr<_1e5cd5b67_AnonFnExprModel>* _6115_m);
inline jule::Bool _1e6a0a22b_IsOpMethod(jule::Ptr<_1e5ce0358_Fn>* _6416_m);
inline jule::Bool _1e6a0a5a0_IsTraitMethod(jule::Ptr<_1e5cc8c7b_StructIns>* _8023_owner, jule::Ptr<_1e5ce3416_FnIns>* _8043_f);
inline jule::Bool _1e6a0a924_IsStdPackage(jule::Str _9417_f, jule::Str _9425_p);
inline jule::Ptr<_1e5ca44a4_Directive> _1e6a0b925_FindDirective(jule::Slice<jule::Ptr<_1e5ca44a4_Directive>>* _1123_directives, jule::Str _1154_tag);
inline jule::Bool _1e6a0bcdd_HasDirective(jule::Slice<jule::Ptr<_1e5ca44a4_Directive>>* _2118_directives, jule::Str _2149_tag);
inline jule::Bool _1e6a0c162_ContainsTraitMethod(jule::Ptr<_1e5d03db6_Trait>* _2629_t, jule::Str* _2641_ident);
inline jule::I64 _1e6a0c827_FindTraitTypeOffsetS(jule::Ptr<_1e5d03db6_Trait> _3925_t, jule::Ptr<_1e5cc8c7b_StructIns> _3940_s);
inline jule::I64 _1e6a0cb9b_FindTraitTypeOffset(jule::Ptr<_1e5d03db6_Trait> _6224_t, jule::Ptr<_1e5e417ea_TypeKind> _6239_k);
inline jule::Ptr<_1e5ce3416_FnIns> _1e6a0d0ca_FindOperator(jule::Ptr<_1e5cc8c7b_StructIns>* _7822_s, jule::U64 _7837_op, jule::Bool _7850_unary);
inline jule::Ptr<_1e5ce3416_FnIns> _1e6a0d44e_FindFnGenericInstance(jule::Ptr<_1e5ce0358_Fn>* _14731_f, jule::Slice<jule::Ptr<_1e5e417ea_TypeKind>> _14739_generics);
inline jule::Ptr<_1e5cc8c7b_StructIns> _1e6a0d8d3_FindStructGenericInstance(jule::Ptr<_1e5cc5e21_Struct>* _16335_s, jule::Slice<jule::Ptr<_1e5e417ea_TypeKind>> _16347_generics);
inline jule::Bool _1cbde1363_isOrdered(jule::Ptr<_1e5da0bcc_Var>* _1418_t, jule::Slice<jule::Ptr<_1e5da0bcc_Var>> _1425_s);
inline jule::Bool _1cbde70d3_isOrdered(jule::Ptr<_1e5cc5e21_Struct>* _1418_t, jule::Slice<jule::Ptr<_1e5cc5e21_Struct>> _1425_s);
inline void _1cbddd98c_order(jule::Slice<jule::Ptr<_1e5da0bcc_Var>> _3717_s);
inline void _1cbdde570_order(jule::Slice<jule::Ptr<_1e5cc5e21_Struct>> _3717_s);
inline void _1c7ee0587_EliminateDefines(jule::Ptr<_1e6a03ab5_IR>* _40226_ir);
inline void _1c7ee4503_eliminateDeadCodeOfScope(jule::Ptr<_1e5d384d3_Scope> _23833_s);
inline void _1c7ee4778_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1e5ce0358_Fn>>* _25033_funcs);
inline void _1c7ee49a9_eliminateScopeStructMethods(jule::Slice<jule::Ptr<_1e5cc5e21_Struct>>* _25937_structs);
inline void _1c7ee4c62_eliminateFunctionsScopePackage(jule::Ptr<_1e5d5e21d_Package>* _26740_pkg);
inline void _1c7ee4e60_eliminateScopePackage(jule::Ptr<_1e5d5e21d_Package>* _27431_pkg);
inline void _1c7ee5191_EliminateScopes(jule::Ptr<_1e6a03ab5_IR>* _27925_ir);
inline jule::Uintptr _1e6034833_typeData(jule::Any* _1714_m);
inline jule::Bool _1e6034b41_equalConst(jule::Ptr<_1e21a449b_Const> _2115_l, jule::Ptr<_1e21a449b_Const> _2126_r);
inline jule::Bool _1e6034eb5_equalCasting(jule::Ptr<_1e5cd447e_CastingExprModel> _4017_l, jule::Ptr<_1e5cd447e_CastingExprModel> _4039_r);
inline jule::Bool _1e603537d_equalUnary(jule::Ptr<_1e5cd322a_UnaryExprModel> _4715_l, jule::Ptr<_1e5cd322a_UnaryExprModel> _4735_r);
inline jule::Bool _1e6035702_equalIndexing(jule::Ptr<_1e5cd56b1_IndexingExprModel> _5418_l, jule::Ptr<_1e5cd56b1_IndexingExprModel> _5441_r);
inline jule::Bool _1e6035a76_equalBinary(jule::Ptr<_1e5cd2d51_BinaryExprModel> _5916_l, jule::Ptr<_1e5cd2d51_BinaryExprModel> _5937_r);
inline jule::Bool _1e6035dea_equalModels(jule::Any _7016_l, jule::Any _7030_r);
inline void _1e603ba16_possibleNilRemove(jule::Ptr<_1e603aa37_nils>* _7827_n, jule::Any _7837_m);
inline jule::Bool _1e603bdce_isGuaranteedNonNilExpr(jule::Ptr<_1e603aa37_nils>* _8432_n, jule::Any _8442_m);
inline jule::Bool _1e603c198_isNilValidType(jule::Ptr<_1e5e417ea_TypeKind> _9223_t);
inline jule::Uintptr _1e603c4d9_getNilVar(jule::Any _9414_m);
inline jule::Bool _1e6a152ad_isConstantValidConditionalCase(jule::Ptr<_1e5d38901_If>* _68736_i);
inline jule::Bool _1e6a155bb_isUnreachableExpr(jule::Any* _69623_expr);
inline jule::Bool _1e6a15885_isConstantValidMatchCase(jule::Ptr<_1e5d3d73b_Case>* _71130_case);
inline jule::Bool _1e6a15bc6_isUnreachableConditionalCase(jule::Ptr<_1e5d38901_If>* _72034_i);
inline jule::Bool _1e6a15e5c_isUnreachableMatchCase(jule::Ptr<_1e5d3d73b_Case>* _72428_case);
inline __jule_tuple_bool__jule_tuple_u64 _1e6a1b391_checkForBitShiftOpt(jule::Ptr<_1e5cd2856_OperandExprModel>* _59625_l, jule::Ptr<_1e5cd2856_OperandExprModel>* _59648_r);
inline jule::Bool _1e6a1b759_areSameLvalueExprModel(jule::Any* _61328_l, jule::Any* _61343_r);
inline void _1e6a1d926_possibleDynamicRemove(jule::Ptr<_1e6a1c88c_dynamic>* _8131_d, jule::Any _8144_m);
inline jule::Bool _1e6a1dc34_isDynamicValidType(jule::Ptr<_1e5e417ea_TypeKind> _8727_t);
inline jule::Ptr<_1e5e417ea_TypeKind> _1e6a1e163_isTypeGuaranteedDynamicData(jule::Ptr<_1e6a1c88c_dynamic>* _8937_dy, jule::Ptr<_1e5e417ea_TypeKind> _8955_t, jule::Any _8973_m);
inline jule::Uintptr _1e6a1e4a4_getDynamicVar(jule::Any _11418_m);
inline jule::Bool _1e6a22e7a_isValidBoundaryInfo(jule::Any _8424_m);
inline jule::I64 _1e6a23343_fitsMaxSize(jule::Slice<jule::Any> _8916_max, jule::Any _8934_expr);
inline jule::Bool _1e6a236b7_fitsSize(jule::Any _9813_e1, jule::Any _9828_e2);
inline void _1e6a239e7_possibleBoundaryRemove(jule::Ptr<_1e6a21e13_boundary>* _12432_b, jule::Any _12446_model);
inline jule::Bool _1e6a23cb1_isBoundaryRiskyType(jule::Ptr<_1e5e417ea_TypeKind> _13628_t);
inline jule::Bool _1e6a2407a_isBoundaryValidType(jule::Ptr<_1e5e417ea_TypeKind> _14128_t);
inline jule::Uintptr _1e6a24344_getBoundaryVar(jule::Any _14319_m);
inline void _1e6a273be_PushOptLevel(jule::I64 _3217_level);
inline void _1c7ee8958_detectEnabled(void);
inline void _1c8020b5b_Throw(jule::Str _910_msg);
inline jule::U64 _1c8a6dea0_unix(void);
inline jule::Bool _1c89a18a5_isCopyOptimizable(jule::Ptr<_1e5e08c13_Data>* _119123_expr);
inline jule::Bool _1c89a1c6d_isIterCopyOptimizable(jule::Ptr<_1e5e08c13_Data>* _120227_expr, jule::Ptr<_1e5da0bcc_Var>* _120241_v);
inline jule::Bool _1c89a219c_captureVarHandling(jule::Ptr<_1c8a7d92c_ObjectCoder>* _120928_oc, jule::Ptr<_1e5cd5b67_AnonFnExprModel>* _120951_m, jule::Ptr<_1e5da0bcc_Var>* _120977_v);
inline jule::Str _1c89b49c8_decomposeCommonEsq(jule::U8 _197423_b);
inline jule::Str _1c89b4cd6_sbtoa(jule::U8 _200110_b);
inline void _1c89b50c2_cstrBytes(_224497295_StrBuilder* _202119_s, jule::Str _202134_ctx);
inline void _1c89b5402_cstrLit(_224497295_StrBuilder* _202717_s, jule::Str _202732_ctx);
inline void _1c89b5798_ftoa(_224497295_StrBuilder* _203314_s, jule::F64 _203329_f, jule::I64 _203337_bitsize);
inline void _1c89b5a84_itoa(_224497295_StrBuilder* _205114_s, jule::I64 _205129_x);
inline void _1c89b5d70_utoa(_224497295_StrBuilder* _206814_s, jule::U64 _206829_x);
inline void _1c89b64be_operatorOverloadingBinary(_224497295_StrBuilder* _208235_buf, jule::Ptr<_1e5cc8c7b_StructIns>* _208257_s, jule::Str* _208273_l, jule::Str* _20833_r, jule::U64 _208311_op, jule::Str _208324_kind);
inline jule::Slice<jule::U8> _1c8a8b275_concatAllParts(jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _140919_parts);
inline jule::Bool _1c8a8b583_isHeadDecl(jule::Ptr<_1e5ce0358_Fn>* _142520_m);
inline jule::Bool _1c8a8b84c_defaultEq(jule::Ptr<_1e5cc8c7b_StructIns>* _143815_s);
inline jule::Bool _1c8a9aa15_ableToInit(jule::Ptr<_1e5e417ea_TypeKind>* _46820_t);
inline jule::Bool _1c8a9ace0_shouldInitialized(jule::Ptr<_1e5e417ea_TypeKind>* _47527_t);
inline void _22586d88a_printErrorMessage(jule::Str _3022_msg);
inline void _22586db10_help(jule::Slice<jule::Str>* _3510_args);
inline void _22586dd41_version(jule::Slice<jule::Str>* _6313_args);
inline void _22586e050_toolDistos(void);
inline void _22586e1b5_toolDistarch(void);
inline void _22586e3b3_tool(jule::Slice<jule::Str>* _9410_args);
inline void _22586e5e4_julenv(jule::Slice<jule::Str>* _11712_args);
inline void _22586e935_mod(jule::Slice<jule::Str>* _1309_args);
inline jule::Bool _22586eb77_processCommand(jule::Slice<jule::Str>* _15320_args);
inline void _22586ed20_showInfo(void);
void entry_point(void);
inline void _22587079e_enableVtp(void);
inline void _225870969_init(void);
inline void _1c8b17e06_init(void);
inline jule::Ptr<_2243e07c6_File> _1c8b181c0_openOutput(jule::Str* _4316_path);
inline void _1c8b18368_clearObjects(void);
inline void _1c8b18676_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd);
inline jule::Bool _1c8b18940_isCppSourceFile(jule::Str _9920_path);
inline void _1c8b18b71_pushCompCmdClang(_224497295_StrBuilder* _10726_cmd);
inline void _1c8b18da2_pushCompCmdGcc(_224497295_StrBuilder* _13324_cmd);
inline __jule_tuple_str__jule_tuple_str _1c8b19336_genCompileCmd(jule::Str _15918_sourcePath, jule::Ptr<_1e6a03ab5_IR>* _15936_ir);
inline jule::Str _1c8b194bd_getCompilePath(void);
inline void _1c8b196ee_applyTargetIndependentOptimizations(jule::Ptr<_1e6a03ab5_IR>* _20545_ir);
inline void _1c8b19897_checkCompilerFlag(void);
inline void _1c8b19aa6_checkTargetArch(jule::Str _22720_arch);
inline void _1c8b19cd7_checkTargetOs(jule::Str _23518_os);
inline void _1c8b1a018_checkTargetFlag(jule::Str* _24321_target);
inline void _1c8b1a249_checkOptFlag(jule::Str* _26618_opt);
inline void _1c8b1a612_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _1c8b1a7cc_checkFlags(jule::Slice<jule::Str>* _29216_args);
inline void _1c8b1a9db_setupSemaFlags(jule::I64* _33724_flags);
inline jule::Ptr<_1e6a03ab5_IR> _1c8b1aca5_buildIr(jule::Slice<jule::Str>* _34313_args);
inline void _1c8b1aed6_compileCommand(jule::Slice<jule::Str>* _38324_args);


struct _1e5d0a4d8_comptimeRangeKindMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	void(*_1e5d0986c_index)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1e5e08c13_Data>* _1426_d, jule::I64 _1436_i);
	void(*_1e5d09bd0_ready)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1e5da0bcc_Var>* _1526_keyA, jule::Ptr<_1e5da0bcc_Var>* _1543_keyB);
	void(*_1e5d0a0ed_step)(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_1e5da0bcc_Var>* _1633_keyA, jule::Ptr<_1e5da0bcc_Var>* _1650_keyB);
	jule::I64(*_1e5d0a384_len)(jule::Ptr<jule::Uintptr> _self_);
};

struct _1e5d5805d_ImporterMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	void(*_1e5d56d3c_SetModPath)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1726_path);
	jule::Str(*_1e5d570c3_GetModPath)(jule::Ptr<jule::Uintptr> _self_);
	jule::Str(*_1e5d57414_ModById)(jule::Ptr<jule::Uintptr> _self_, jule::I64 _2519_id);
	jule::Ptr<_1e5d5b2e7_ImportInfo>(*_1e5d57755_GetImport)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3125_path);
	__jule_tuple_sx_1e5ca3173_AST__jule_tuple_s_22578b38a_Log(*_1e5d57b51_ImportPackage)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3729_path, jule::Bool _3740_update_mod);
	void(*_1e5d57e09_Imported)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1e5d5b2e7_ImportInfo> _4128__0);
};

struct _1e5e41344_KindMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Str(*_1e5e40d9e_Str)(jule::Ptr<jule::Uintptr> _self_);
	jule::Bool(*_1e5e411e0_Equal)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1e5e417ea_TypeKind> _5618_other);
};

struct _1e5e61e9c_LookupMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Ptr<_1e5d5b2e7_ImportInfo>(*_1e5e60286_SelectPackage)(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1e5d5b2e7_ImportInfo>> _929_selector);
	jule::Ptr<_1e5da0bcc_Var>(*_1e5e60682_FindVar)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded);
	jule::Ptr<_1e5e40a08_TypeAlias>(*_1e5e60a7d_FindTypeAlias)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded);
	jule::Ptr<_1e5cc5e21_Struct>(*_1e5e60e79_FindStruct)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded);
	jule::Ptr<_1e5ce0358_Fn>(*_1e5e61375_FindFn)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded);
	jule::Ptr<_1e5d03db6_Trait>(*_1e5e616b6_FindTrait)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident);
	jule::Ptr<_1e5d065c2_Enum>(*_1e5e61a07_FindEnum)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident);
	jule::Ptr<_1e5d07ccc_TypeEnum>(*_1e5e61d48_FindTypeEnum)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident);
};

struct _1c8b10abe_CommonFlagMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Str(*_1c8ace97d_Name)(jule::Ptr<jule::Uintptr> _self_);
	jule::I32(*_1c8aceac1_Short)(jule::Ptr<jule::Uintptr> _self_);
	jule::Str(*_1c8acec14_What)(jule::Ptr<jule::Uintptr> _self_);
	void(*_1c8b1096a_Reset)(jule::Ptr<jule::Uintptr> _self_);
};



void __jule_type_deallocator0(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5d0ca07_comptimeStructFields>().dealloc(); }
void __jule_type_deallocator1(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5d10c3b_comptimeStatics>().dealloc(); }
void __jule_type_deallocator2(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5d139b9_comptimeEnumFields>().dealloc(); }
void __jule_type_deallocator3(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5d1732a_comptimeParams>().dealloc(); }
void __jule_type_deallocator4(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5d18b89_comptimeTypeInfos>().dealloc(); }
void __jule_type_deallocator5(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5d24469_comptimeFiles>().dealloc(); }
void __jule_type_deallocator6(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5d27a11_comptimeDecls>().dealloc(); }
void __jule_type_deallocator7(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e6a01222_JuleImporter>().dealloc(); }
void __jule_type_deallocator8(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cc8c7b_StructIns>().dealloc(); }
void __jule_type_deallocator9(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5ce3416_FnIns>().dealloc(); }
void __jule_type_deallocator10(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5d03db6_Trait>().dealloc(); }
void __jule_type_deallocator11(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5d065c2_Enum>().dealloc(); }
void __jule_type_deallocator12(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5d07ccc_TypeEnum>().dealloc(); }
void __jule_type_deallocator13(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5d0a708_comptimeRange>().dealloc(); }
void __jule_type_deallocator14(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5d0b264_comptimeStructField>().dealloc(); }
void __jule_type_deallocator15(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5d0e487_comptimeStatic>().dealloc(); }
void __jule_type_deallocator16(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5d126aa_comptimeEnumField>().dealloc(); }
void __jule_type_deallocator17(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5d154c1_comptimeParam>().dealloc(); }
void __jule_type_deallocator18(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5d1a608_comptimeTypeInfo>().dealloc(); }
void __jule_type_deallocator19(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5d2170d_comptimeValue>().dealloc(); }
void __jule_type_deallocator20(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5d25dd8_comptimeFile>().dealloc(); }
void __jule_type_deallocator21(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5d29cee_comptimeDecl>().dealloc(); }
void __jule_type_deallocator22(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5e417ea_TypeKind>().dealloc(); }
void __jule_type_deallocator23(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5e49913_Prim>().dealloc(); }
void __jule_type_deallocator24(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5e4d43e_Sptr>().dealloc(); }
void __jule_type_deallocator25(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5e4de12_Slc>().dealloc(); }
void __jule_type_deallocator26(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5e4ea06_Tuple>().dealloc(); }
void __jule_type_deallocator27(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5e505a6_Map>().dealloc(); }
void __jule_type_deallocator28(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5e51233_Arr>().dealloc(); }
void __jule_type_deallocator29(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5e51c06_Ptr>().dealloc(); }
void __jule_type_deallocator30(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c8a8cd26_customType>().dealloc(); }
void __jule_type_deallocator31(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5d40771_scopeChecker>().dealloc(); }
void __jule_type_deallocator32(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5d5b2e7_ImportInfo>().dealloc(); }
void __jule_type_deallocator33(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5d5e21d_Package>().dealloc(); }
void __jule_type_deallocator34(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5d7b768_sema>().dealloc(); }
void __jule_type_deallocator35(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5e03548_SymbolTable>().dealloc(); }
void __jule_type_deallocator36(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cc970584_Flag>().dealloc(); }
void __jule_type_deallocator37(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cc973da1_Flag>().dealloc(); }
void __jule_type_deallocator38(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cc9775ad_Flag>().dealloc(); }
void __jule_type_deallocator39(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cc97ad0e_Flag>().dealloc(); }
void __jule_type_deallocator40(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cc97e51b_Flag>().dealloc(); }
void __jule_type_deallocator41(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
void __jule_type_deallocator42(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
void __jule_type_deallocator43(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U64>().dealloc(); }
void __jule_type_deallocator44(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Bool>().dealloc(); }
void __jule_type_deallocator45(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
void __jule_type_deallocator46(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F64>().dealloc(); }
void __jule_type_deallocator47(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
void __jule_type_deallocator48(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5da0bcc_Var>().dealloc(); }
void __jule_type_deallocator49(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cc1bec_Impl>().dealloc(); }
void __jule_type_deallocator50(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cbbaa4_TypeAliasDecl>().dealloc(); }
void __jule_type_deallocator51(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cc0d50_StructDecl>().dealloc(); }
void __jule_type_deallocator52(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cb6c47_FnDecl>().dealloc(); }
void __jule_type_deallocator53(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cc158c_TraitDecl>().dealloc(); }
void __jule_type_deallocator54(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cb7e02_VarDecl>().dealloc(); }
void __jule_type_deallocator55(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cbe205_EnumDecl>().dealloc(); }
void __jule_type_deallocator56(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cc0190_TypeEnumDecl>().dealloc(); }
void __jule_type_deallocator57(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cc2eea_Field>().dealloc(); }
void __jule_type_deallocator58(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e21a449b_Const>().dealloc(); }
void __jule_type_deallocator59(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5d05a55_EnumItem>().dealloc(); }
void __jule_type_deallocator60(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cdd884_Param>().dealloc(); }
void __jule_type_deallocator61(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cc5e21_Struct>().dealloc(); }
void __jule_type_deallocator62(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5ce0358_Fn>().dealloc(); }
void __jule_type_deallocator63(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5e40a08_TypeAlias>().dealloc(); }
void __jule_type_deallocator64(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5d3b030_Label>().dealloc(); }
void __jule_type_deallocator65(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5d384d3_Scope>().dealloc(); }
void __jule_type_deallocator66(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cdb09b_BuiltinErrorCallExprModel>().dealloc(); }
void __jule_type_deallocator67(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5e08c13_Data>().dealloc(); }
void __jule_type_deallocator68(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cdc0ad_BackendEmitExprModel>().dealloc(); }
void __jule_type_deallocator69(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cd9d25_BuiltinAppendCallExprModel>().dealloc(); }
void __jule_type_deallocator70(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cd8818_BuiltinOutCallExprModel>().dealloc(); }
void __jule_type_deallocator71(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cd8be2_BuiltinOutlnCallExprModel>().dealloc(); }
void __jule_type_deallocator72(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cd9495_BuiltinPanicCallExprModel>().dealloc(); }
void __jule_type_deallocator73(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cdabc2_BuiltinCopyCallExprModel>().dealloc(); }
void __jule_type_deallocator74(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cda7e8_BuiltinDeleteCallExprModel>().dealloc(); }
void __jule_type_deallocator75(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cdc3aa_FreeExprModel>().dealloc(); }
void __jule_type_deallocator76(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cd4d31_FnCallExprModel>().dealloc(); }
void __jule_type_deallocator77(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5d3911b_Conditional>().dealloc(); }
void __jule_type_deallocator78(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5d39418_InfIter>().dealloc(); }
void __jule_type_deallocator79(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cb9376_WhileKind>().dealloc(); }
void __jule_type_deallocator80(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5d398be_WhileIter>().dealloc(); }
void __jule_type_deallocator81(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cb9c7d_RangeKind>().dealloc(); }
void __jule_type_deallocator82(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5d3a31a_RangeIter>().dealloc(); }
void __jule_type_deallocator83(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5d3a6a0_ContSt>().dealloc(); }
void __jule_type_deallocator84(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5d3b690_GotoSt>().dealloc(); }
void __jule_type_deallocator85(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5d3ba69_Postfix>().dealloc(); }
void __jule_type_deallocator86(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5d3c020_Assign>().dealloc(); }
void __jule_type_deallocator87(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5caabd6_IdentExpr>().dealloc(); }
void __jule_type_deallocator88(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cd56b1_IndexingExprModel>().dealloc(); }
void __jule_type_deallocator89(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5d3c4c6_MultiAssign>().dealloc(); }
void __jule_type_deallocator90(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5d3cc13_Match>().dealloc(); }
void __jule_type_deallocator91(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5d3de34_FallSt>().dealloc(); }
void __jule_type_deallocator92(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5d3aa79_BreakSt>().dealloc(); }
void __jule_type_deallocator93(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5d3e2ca_RetSt>().dealloc(); }
void __jule_type_deallocator94(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cb50a8_ScopeTree>().dealloc(); }
void __jule_type_deallocator95(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5ca93bb_Expr>().dealloc(); }
void __jule_type_deallocator96(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cbb367_Conditional>().dealloc(); }
void __jule_type_deallocator97(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cb8a4b_Iter>().dealloc(); }
void __jule_type_deallocator98(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cba531_ContSt>().dealloc(); }
void __jule_type_deallocator99(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cb266b_LabelSt>().dealloc(); }
void __jule_type_deallocator100(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cb2a45_GotoSt>().dealloc(); }
void __jule_type_deallocator101(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cb3a35_AssignSt>().dealloc(); }
void __jule_type_deallocator102(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cbc874_MatchCase>().dealloc(); }
void __jule_type_deallocator103(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cb2d42_FallSt>().dealloc(); }
void __jule_type_deallocator104(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cba157_BreakSt>().dealloc(); }
void __jule_type_deallocator105(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cb82cb_RetSt>().dealloc(); }
void __jule_type_deallocator106(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5ca9c90_UseExpr>().dealloc(); }
void __jule_type_deallocator107(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5ca7353_ArrTypeDecl>().dealloc(); }
void __jule_type_deallocator108(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5ca64b7_SlcTypeDecl>().dealloc(); }
void __jule_type_deallocator109(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5ca6ab1_PtrTypeDecl>().dealloc(); }
void __jule_type_deallocator110(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5ca6132_SptrTypeDecl>().dealloc(); }
void __jule_type_deallocator111(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5ca7aa1_MapTypeDecl>().dealloc(); }
void __jule_type_deallocator112(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5ca67b4_TupleTypeDecl>().dealloc(); }
void __jule_type_deallocator113(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5ca5692_IdentTypeDecl>().dealloc(); }
void __jule_type_deallocator114(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cab852_VariadicExpr>().dealloc(); }
void __jule_type_deallocator115(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cd520a_SliceExprModel>().dealloc(); }
void __jule_type_deallocator116(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cadada_FieldExprPair>().dealloc(); }
void __jule_type_deallocator117(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cb01e6_KeyValPair>().dealloc(); }
void __jule_type_deallocator118(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5ca9eb0_TupleExpr>().dealloc(); }
void __jule_type_deallocator119(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cd843e_TupleExprModel>().dealloc(); }
void __jule_type_deallocator120(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cad0e5_FnCallExpr>().dealloc(); }
void __jule_type_deallocator121(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cdbc39_RuneExprModel>().dealloc(); }
void __jule_type_deallocator122(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cd8142_ArrayExprModel>().dealloc(); }
void __jule_type_deallocator123(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cac4ce_SubIdentExpr>().dealloc(); }
void __jule_type_deallocator124(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5ca595b_SubIdentTypeDecl>().dealloc(); }
void __jule_type_deallocator125(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cab478_UnaryExpr>().dealloc(); }
void __jule_type_deallocator126(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5ca5087_TypeDecl>().dealloc(); }
void __jule_type_deallocator127(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cac105_NsSelectionExpr>().dealloc(); }
void __jule_type_deallocator128(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5ca5d35_NamespaceTypeDecl>().dealloc(); }
void __jule_type_deallocator129(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cd699d_SlicingExprModel>().dealloc(); }
void __jule_type_deallocator130(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cd447e_CastingExprModel>().dealloc(); }
void __jule_type_deallocator131(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cb0922_SliceExpr>().dealloc(); }
void __jule_type_deallocator132(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cd3aee_StructLitExprModel>().dealloc(); }
void __jule_type_deallocator133(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cd7c68_StructStaticIdentExprModel>().dealloc(); }
void __jule_type_deallocator134(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cd7031_TraitSubIdentExprModel>().dealloc(); }
void __jule_type_deallocator135(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cd78c2_StructSubIdentExprModel>().dealloc(); }
void __jule_type_deallocator136(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cd641a_MapExprModel>().dealloc(); }
void __jule_type_deallocator137(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cd5b67_AnonFnExprModel>().dealloc(); }
void __jule_type_deallocator138(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5ca9685_RangeExpr>().dealloc(); }
void __jule_type_deallocator139(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5caa356_LitExpr>().dealloc(); }
void __jule_type_deallocator140(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5caa730_UnsafeExpr>().dealloc(); }
void __jule_type_deallocator141(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cb137e_IndexingExpr>().dealloc(); }
void __jule_type_deallocator142(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cb19de_SlicingExpr>().dealloc(); }
void __jule_type_deallocator143(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cabc2b_CastExpr>().dealloc(); }
void __jule_type_deallocator144(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cae415_StructLit>().dealloc(); }
void __jule_type_deallocator145(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cae8bb_BraceLit>().dealloc(); }
void __jule_type_deallocator146(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cac985_BinaryExpr>().dealloc(); }
void __jule_type_deallocator147(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cd322a_UnaryExprModel>().dealloc(); }
void __jule_type_deallocator148(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cd2d51_BinaryExprModel>().dealloc(); }
void __jule_type_deallocator149(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cd3deb_AllocStructLitExprModel>().dealloc(); }
void __jule_type_deallocator150(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cd90bb_BuiltinNewCallExprModel>().dealloc(); }
void __jule_type_deallocator151(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cd994b_BuiltinMakeCallExprModel>().dealloc(); }
void __jule_type_deallocator152(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cda122_BuiltinLenCallExprModel>().dealloc(); }
void __jule_type_deallocator153(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cda41e_BuiltinCapCallExprModel>().dealloc(); }
void __jule_type_deallocator154(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cdb398_SizeofExprModel>().dealloc(); }
void __jule_type_deallocator155(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cdba4c_AlignofExprModel>().dealloc(); }
void __jule_type_deallocator156(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e6036a22_ExceptionalForwardingExprModel>().dealloc(); }
void __jule_type_deallocator157(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e603941a_StrRuneIter>().dealloc(); }
void __jule_type_deallocator158(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e603810b_MutSlicingExprModel>().dealloc(); }
void __jule_type_deallocator159(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e6038b67_PushToSliceExprModel>().dealloc(); }
void __jule_type_deallocator160(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e6039041_AppendToSliceExprModel>().dealloc(); }
void __jule_type_deallocator161(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e6036da7_SwapExprModel>().dealloc(); }
void __jule_type_deallocator162(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e6037281_EmptyCompareExprModel>().dealloc(); }
void __jule_type_deallocator163(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e6037a78_StrCompExprModel>().dealloc(); }
void __jule_type_deallocator164(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e6038408_UnsafeBinaryExprModel>().dealloc(); }
void __jule_type_deallocator165(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e6039717_UnsafeDerefExprModel>().dealloc(); }
void __jule_type_deallocator166(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e6037605_RefExprModel>().dealloc(); }
void __jule_type_deallocator167(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e5cd3758_StructArgExprModel>().dealloc(); }
void __jule_type_deallocator168(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e6039a14_UnsafeCastingExprModel>().dealloc(); }
void __jule_type_deallocator169(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e603878d_UnsafeIndexingExprModel>().dealloc(); }
void __jule_type_deallocator170(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U8>().dealloc(); }
void __jule_type_deallocator171(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F32>().dealloc(); }
void __jule_type_deallocator172(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I8>().dealloc(); }
void __jule_type_deallocator173(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I16>().dealloc(); }
void __jule_type_deallocator174(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U16>().dealloc(); }
void __jule_type_deallocator175(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U32>().dealloc(); }
inline void __jule_trait_method_1ca55be42_1ca500644(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1e5e08c13_Data>* _1426_d, jule::I64 _1436_i) {
	_1e5d0da08_index(_self_.as<_1e5d0ca07_comptimeStructFields>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1ca55be42_1ca5190a8(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1e5e08c13_Data>* _1426_d, jule::I64 _1436_i) {
	_1e5d11c2b_index(_self_.as<_1e5d10c3b_comptimeStatics>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1ca55be42_1ca50697a(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1e5e08c13_Data>* _1426_d, jule::I64 _1436_i) {
	_1e5d14a42_index(_self_.as<_1e5d139b9_comptimeEnumFields>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1ca55be42_1ca50c486(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1e5e08c13_Data>* _1426_d, jule::I64 _1436_i) {
	_1e5d1820a_index(_self_.as<_1e5d1732a_comptimeParams>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1ca55be42_1ca5157d0(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1e5e08c13_Data>* _1426_d, jule::I64 _1436_i) {
	_1e5d19b79_index(_self_.as<_1e5d18b89_comptimeTypeInfos>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1ca55be42_1ca535e4e(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1e5e08c13_Data>* _1426_d, jule::I64 _1436_i) {
	_1e5d25459_index(_self_.as<_1e5d24469_comptimeFiles>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1ca55be42_1ca52e2dd(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1e5e08c13_Data>* _1426_d, jule::I64 _1436_i) {
	_1e5d28b22_index(_self_.as<_1e5d27a11_comptimeDecls>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1ca55c45e_1ca500644(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1e5da0bcc_Var>* _1526_keyA, jule::Ptr<_1e5da0bcc_Var>* _1543_keyB) {
	_1e5d0d695_ready(_self_.as<_1e5d0ca07_comptimeStructFields>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1ca55c45e_1ca5190a8(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1e5da0bcc_Var>* _1526_keyA, jule::Ptr<_1e5da0bcc_Var>* _1543_keyB) {
	_1e5d118b8_ready(_self_.as<_1e5d10c3b_comptimeStatics>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1ca55c45e_1ca50697a(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1e5da0bcc_Var>* _1526_keyA, jule::Ptr<_1e5da0bcc_Var>* _1543_keyB) {
	_1e5d146ce_ready(_self_.as<_1e5d139b9_comptimeEnumFields>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1ca55c45e_1ca50c486(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1e5da0bcc_Var>* _1526_keyA, jule::Ptr<_1e5da0bcc_Var>* _1543_keyB) {
	_1e5d17d97_ready(_self_.as<_1e5d1732a_comptimeParams>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1ca55c45e_1ca5157d0(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1e5da0bcc_Var>* _1526_keyA, jule::Ptr<_1e5da0bcc_Var>* _1543_keyB) {
	_1e5d19816_ready(_self_.as<_1e5d18b89_comptimeTypeInfos>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1ca55c45e_1ca535e4e(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1e5da0bcc_Var>* _1526_keyA, jule::Ptr<_1e5da0bcc_Var>* _1543_keyB) {
	_1e5d250e6_ready(_self_.as<_1e5d24469_comptimeFiles>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1ca55c45e_1ca52e2dd(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1e5da0bcc_Var>* _1526_keyA, jule::Ptr<_1e5da0bcc_Var>* _1543_keyB) {
	_1e5d287ae_ready(_self_.as<_1e5d27a11_comptimeDecls>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1ca55cb35_1ca500644(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_1e5da0bcc_Var>* _1633_keyA, jule::Ptr<_1e5da0bcc_Var>* _1650_keyB) {
	_1e5d0de26_step(_self_.as<_1e5d0ca07_comptimeStructFields>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1ca55cb35_1ca5190a8(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_1e5da0bcc_Var>* _1633_keyA, jule::Ptr<_1e5da0bcc_Var>* _1650_keyB) {
	_1e5d12149_step(_self_.as<_1e5d10c3b_comptimeStatics>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1ca55cb35_1ca50697a(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_1e5da0bcc_Var>* _1633_keyA, jule::Ptr<_1e5da0bcc_Var>* _1650_keyB) {
	_1e5d14e60_step(_self_.as<_1e5d139b9_comptimeEnumFields>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1ca55cb35_1ca50c486(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_1e5da0bcc_Var>* _1633_keyA, jule::Ptr<_1e5da0bcc_Var>* _1650_keyB) {
	_1e5d18628_step(_self_.as<_1e5d1732a_comptimeParams>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1ca55cb35_1ca5157d0(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_1e5da0bcc_Var>* _1633_keyA, jule::Ptr<_1e5da0bcc_Var>* _1650_keyB) {
	_1e5d1a097_step(_self_.as<_1e5d18b89_comptimeTypeInfos>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1ca55cb35_1ca535e4e(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_1e5da0bcc_Var>* _1633_keyA, jule::Ptr<_1e5da0bcc_Var>* _1650_keyB) {
	_1e5d25877_step(_self_.as<_1e5d24469_comptimeFiles>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1ca55cb35_1ca52e2dd(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_1e5da0bcc_Var>* _1633_keyA, jule::Ptr<_1e5da0bcc_Var>* _1650_keyB) {
	_1e5d29040_step(_self_.as<_1e5d27a11_comptimeDecls>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline jule::I64 __jule_trait_method_1ca55d31c_1ca500644(jule::Ptr<jule::Uintptr> _self_) {
	return _1e5d0e1ac_len(_self_.as<_1e5d0ca07_comptimeStructFields>().alloc);
}
inline jule::I64 __jule_trait_method_1ca55d31c_1ca5190a8(jule::Ptr<jule::Uintptr> _self_) {
	return _1e5d123d0_len(_self_.as<_1e5d10c3b_comptimeStatics>().alloc);
}
inline jule::I64 __jule_trait_method_1ca55d31c_1ca50697a(jule::Ptr<jule::Uintptr> _self_) {
	return _1e5d151e6_len(_self_.as<_1e5d139b9_comptimeEnumFields>().alloc);
}
inline jule::I64 __jule_trait_method_1ca55d31c_1ca50c486(jule::Ptr<jule::Uintptr> _self_) {
	return _1e5d188ae_len(_self_.as<_1e5d1732a_comptimeParams>().alloc);
}
inline jule::I64 __jule_trait_method_1ca55d31c_1ca5157d0(jule::Ptr<jule::Uintptr> _self_) {
	return _1e5d1a32d_len(_self_.as<_1e5d18b89_comptimeTypeInfos>().alloc);
}
inline jule::I64 __jule_trait_method_1ca55d31c_1ca535e4e(jule::Ptr<jule::Uintptr> _self_) {
	return _1e5d25b0d_len(_self_.as<_1e5d24469_comptimeFiles>().alloc);
}
inline jule::I64 __jule_trait_method_1ca55d31c_1ca52e2dd(jule::Ptr<jule::Uintptr> _self_) {
	return _1e5d292c6_len(_self_.as<_1e5d27a11_comptimeDecls>().alloc);
}
inline void __jule_trait_method_1ca55d65d_1cbd68252(jule::Ptr<jule::Uintptr> _self_, jule::Str _1726_path) {
	_1e6a01d27_SetModPath(_self_.as<_1e6a01222_JuleImporter>().alloc, _1726_path);
}
inline jule::Str __jule_trait_method_1ca55daae_1cbd68252(jule::Ptr<jule::Uintptr> _self_) {
	return _1e6a020ad_GetModPath(_self_.as<_1e6a01222_JuleImporter>().alloc);
}
inline jule::Str __jule_trait_method_1ca55debb_1cbd68252(jule::Ptr<jule::Uintptr> _self_, jule::I64 _2519_id) {
	return _1e6a023ee_ModById(_self_.as<_1e6a01222_JuleImporter>().alloc, _2519_id);
}
inline jule::Ptr<_1e5d5b2e7_ImportInfo> __jule_trait_method_1ca55e483_1cbd68252(jule::Ptr<jule::Uintptr> _self_, jule::Str _3125_path) {
	return _1e6a02740_GetImport(_self_.as<_1e6a01222_JuleImporter>().alloc, _3125_path);
}
inline __jule_tuple_sx_1e5ca3173_AST__jule_tuple_s_22578b38a_Log __jule_trait_method_1ca55ea6b_1cbd68252(jule::Ptr<jule::Uintptr> _self_, jule::Str _3729_path, jule::Bool _3740_update_mod) {
	return _1e6a02b3b_ImportPackage(_self_.as<_1e6a01222_JuleImporter>().alloc, _3729_path, _3740_update_mod);
}
inline void __jule_trait_method_1ca5603b8_1cbd68252(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1e5d5b2e7_ImportInfo> _4128__0) {
	_1e6a02de4_Imported(_self_.as<_1e6a01222_JuleImporter>().alloc, _4128__0);
}
inline jule::Str __jule_trait_method_1ca560918_1ca3cb3ee(jule::Ptr<jule::Uintptr> _self_) {
	return _1e5cc9133_Str(_self_.as<_1e5cc8c7b_StructIns>().alloc);
}
inline jule::Str __jule_trait_method_1ca560918_1ca3ca772(jule::Ptr<jule::Uintptr> _self_) {
	return _1e5ce378a_Str(_self_.as<_1e5ce3416_FnIns>().alloc);
}
inline jule::Str __jule_trait_method_1ca560918_1ca3e3d40(jule::Ptr<jule::Uintptr> _self_) {
	return _1e5d042b2_Str(_self_.as<_1e5d03db6_Trait>().alloc);
}
inline jule::Str __jule_trait_method_1ca560918_1ca3bc720(jule::Ptr<jule::Uintptr> _self_) {
	return _1e5d06979_Str(_self_.as<_1e5d065c2_Enum>().alloc);
}
inline jule::Str __jule_trait_method_1ca560918_1ca3c4848(jule::Ptr<jule::Uintptr> _self_) {
	return _1e5d08151_Str(_self_.as<_1e5d07ccc_TypeEnum>().alloc);
}
inline jule::Str __jule_trait_method_1ca560918_1ca5140e7(jule::Ptr<jule::Uintptr> _self_) {
	return _1e5d0ab04_Str(_self_.as<_1e5d0a708_comptimeRange>().alloc);
}
inline jule::Str __jule_trait_method_1ca560918_1ca503911(jule::Ptr<jule::Uintptr> _self_) {
	return _1e5d0b61b_Str(_self_.as<_1e5d0b264_comptimeStructField>().alloc);
}
inline jule::Str __jule_trait_method_1ca560918_1ca500644(jule::Ptr<jule::Uintptr> _self_) {
	return _1e5d0cdc0_Str(_self_.as<_1e5d0ca07_comptimeStructFields>().alloc);
}
inline jule::Str __jule_trait_method_1ca560918_1ca51c375(jule::Ptr<jule::Uintptr> _self_) {
	return _1e5d0e83e_Str(_self_.as<_1e5d0e487_comptimeStatic>().alloc);
}
inline jule::Str __jule_trait_method_1ca560918_1ca5190a8(jule::Ptr<jule::Uintptr> _self_) {
	return _1e5d110e3_Str(_self_.as<_1e5d10c3b_comptimeStatics>().alloc);
}
inline jule::Str __jule_trait_method_1ca560918_1ca509c47(jule::Ptr<jule::Uintptr> _self_) {
	return _1e5d12a62_Str(_self_.as<_1e5d126aa_comptimeEnumField>().alloc);
}
inline jule::Str __jule_trait_method_1ca560918_1ca50697a(jule::Ptr<jule::Uintptr> _self_) {
	return _1e5d13e81_Str(_self_.as<_1e5d139b9_comptimeEnumFields>().alloc);
}
inline jule::Str __jule_trait_method_1ca560918_1ca510753(jule::Ptr<jule::Uintptr> _self_) {
	return _1e5d15878_Str(_self_.as<_1e5d154c1_comptimeParam>().alloc);
}
inline jule::Str __jule_trait_method_1ca560918_1ca50c486(jule::Ptr<jule::Uintptr> _self_) {
	return _1e5d175c2_Str(_self_.as<_1e5d1732a_comptimeParams>().alloc);
}
inline jule::Str __jule_trait_method_1ca560918_1ca5157d0(jule::Ptr<jule::Uintptr> _self_) {
	return _1e5d19041_Str(_self_.as<_1e5d18b89_comptimeTypeInfos>().alloc);
}
inline jule::Str __jule_trait_method_1ca560918_1ca40b330(jule::Ptr<jule::Uintptr> _self_) {
	return _1e5d1a9b0_Str(_self_.as<_1e5d1a608_comptimeTypeInfo>().alloc);
}
inline jule::Str __jule_trait_method_1ca560918_1ca5203de(jule::Ptr<jule::Uintptr> _self_) {
	return _1e5d21ab5_Str(_self_.as<_1e5d2170d_comptimeValue>().alloc);
}
inline jule::Str __jule_trait_method_1ca560918_1ca535e4e(jule::Ptr<jule::Uintptr> _self_) {
	return _1e5d24821_Str(_self_.as<_1e5d24469_comptimeFiles>().alloc);
}
inline jule::Str __jule_trait_method_1ca560918_1ca5325aa(jule::Ptr<jule::Uintptr> _self_) {
	return _1e5d26290_Str(_self_.as<_1e5d25dd8_comptimeFile>().alloc);
}
inline jule::Str __jule_trait_method_1ca560918_1ca52e2dd(jule::Ptr<jule::Uintptr> _self_) {
	return _1e5d280e9_Str(_self_.as<_1e5d27a11_comptimeDecls>().alloc);
}
inline jule::Str __jule_trait_method_1ca560918_1ca52603d(jule::Ptr<jule::Uintptr> _self_) {
	return _1e5d2a1a6_Str(_self_.as<_1e5d29cee_comptimeDecl>().alloc);
}
inline jule::Str __jule_trait_method_1ca560918_1ca3ace19(jule::Ptr<jule::Uintptr> _self_) {
	return _1e5e41be6_Str(_self_.as<_1e5e417ea_TypeKind>().alloc);
}
inline jule::Str __jule_trait_method_1ca560918_1ca3b28be(jule::Ptr<jule::Uintptr> _self_) {
	return _1e5e49c87_Str(_self_.as<_1e5e49913_Prim>().alloc);
}
inline jule::Str __jule_trait_method_1ca560918_1ca3b91cd(jule::Ptr<jule::Uintptr> _self_) {
	return _1e5e4d7e6_Str(_self_.as<_1e5e4d43e_Sptr>().alloc);
}
inline jule::Str __jule_trait_method_1ca560918_1ca3c8de1(jule::Ptr<jule::Uintptr> _self_) {
	return _1e5e4e3c9_Str(_self_.as<_1e5e4de12_Slc>().alloc);
}
inline jule::Str __jule_trait_method_1ca560918_1ca446ca5(jule::Ptr<jule::Uintptr> _self_) {
	return _1e5e4edad_Str(_self_.as<_1e5e4ea06_Tuple>().alloc);
}
inline jule::Str __jule_trait_method_1ca560918_1ca445237(jule::Ptr<jule::Uintptr> _self_) {
	return _1e5e5095d_Str(_self_.as<_1e5e505a6_Map>().alloc);
}
inline jule::Str __jule_trait_method_1ca560918_1ca3c7494(jule::Ptr<jule::Uintptr> _self_) {
	return _1e5e515da_Str(_self_.as<_1e5e51233_Arr>().alloc);
}
inline jule::Str __jule_trait_method_1ca560918_1ca3ba993(jule::Ptr<jule::Uintptr> _self_) {
	return _1e5e520ad_Str(_self_.as<_1e5e51c06_Ptr>().alloc);
}
inline jule::Str __jule_trait_method_1ca560918_1cc384460(jule::Ptr<jule::Uintptr> _self_) {
	return _1c8a8d222_Str(_self_.as<_1c8a8cd26_customType>().alloc);
}
inline jule::Bool __jule_trait_method_1ca560c8c_1ca3cb3ee(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1e5e417ea_TypeKind> _5618_other) {
	return _1e5cc9474_Equal(_self_.as<_1e5cc8c7b_StructIns>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1ca560c8c_1ca3ca772(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1e5e417ea_TypeKind> _5618_other) {
	return _1e5ce3acb_Equal(_self_.as<_1e5ce3416_FnIns>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1ca560c8c_1ca3e3d40(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1e5e417ea_TypeKind> _5618_other) {
	return _1e5d04603_Equal(_self_.as<_1e5d03db6_Trait>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1ca560c8c_1ca3bc720(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1e5e417ea_TypeKind> _5618_other) {
	return _1e5d06cba_Equal(_self_.as<_1e5d065c2_Enum>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1ca560c8c_1ca3c4848(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1e5e417ea_TypeKind> _5618_other) {
	return _1e5d08492_Equal(_self_.as<_1e5d07ccc_TypeEnum>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1ca560c8c_1ca5140e7(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1e5e417ea_TypeKind> _5618_other) {
	return _1e5d0ae45_Equal(_self_.as<_1e5d0a708_comptimeRange>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1ca560c8c_1ca503911(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1e5e417ea_TypeKind> _5618_other) {
	return _1e5d0b95c_Equal(_self_.as<_1e5d0b264_comptimeStructField>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1ca560c8c_1ca500644(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1e5e417ea_TypeKind> _5618_other) {
	return _1e5d0d211_Equal(_self_.as<_1e5d0ca07_comptimeStructFields>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1ca560c8c_1ca51c375(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1e5e417ea_TypeKind> _5618_other) {
	return _1e5d0eb80_Equal(_self_.as<_1e5d0e487_comptimeStatic>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1ca560c8c_1ca5190a8(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1e5e417ea_TypeKind> _5618_other) {
	return _1e5d11434_Equal(_self_.as<_1e5d10c3b_comptimeStatics>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1ca560c8c_1ca509c47(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1e5e417ea_TypeKind> _5618_other) {
	return _1e5d12da3_Equal(_self_.as<_1e5d126aa_comptimeEnumField>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1ca560c8c_1ca50697a(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1e5e417ea_TypeKind> _5618_other) {
	return _1e5d142c2_Equal(_self_.as<_1e5d139b9_comptimeEnumFields>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1ca560c8c_1ca510753(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1e5e417ea_TypeKind> _5618_other) {
	return _1e5d15bb9_Equal(_self_.as<_1e5d154c1_comptimeParam>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1ca560c8c_1ca50c486(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1e5e417ea_TypeKind> _5618_other) {
	return _1e5d17913_Equal(_self_.as<_1e5d1732a_comptimeParams>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1ca560c8c_1ca5157d0(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1e5e417ea_TypeKind> _5618_other) {
	return _1e5d19382_Equal(_self_.as<_1e5d18b89_comptimeTypeInfos>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1ca560c8c_1ca40b330(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1e5e417ea_TypeKind> _5618_other) {
	return _1e5d1ad01_Equal(_self_.as<_1e5d1a608_comptimeTypeInfo>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1ca560c8c_1ca5203de(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1e5e417ea_TypeKind> _5618_other) {
	return _1e5d21e06_Equal(_self_.as<_1e5d2170d_comptimeValue>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1ca560c8c_1ca535e4e(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1e5e417ea_TypeKind> _5618_other) {
	return _1e5d24b62_Equal(_self_.as<_1e5d24469_comptimeFiles>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1ca560c8c_1ca5325aa(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1e5e417ea_TypeKind> _5618_other) {
	return _1e5d265d1_Equal(_self_.as<_1e5d25dd8_comptimeFile>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1ca560c8c_1ca52e2dd(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1e5e417ea_TypeKind> _5618_other) {
	return _1e5d2843a_Equal(_self_.as<_1e5d27a11_comptimeDecls>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1ca560c8c_1ca52603d(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1e5e417ea_TypeKind> _5618_other) {
	return _1e5d2a4e7_Equal(_self_.as<_1e5d29cee_comptimeDecl>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1ca560c8c_1ca3ace19(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1e5e417ea_TypeKind> _5618_other) {
	return _1e5e42037_Equal(_self_.as<_1e5e417ea_TypeKind>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1ca560c8c_1ca3b28be(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1e5e417ea_TypeKind> _5618_other) {
	return _1e5e4a0c8_Equal(_self_.as<_1e5e49913_Prim>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1ca560c8c_1ca3b91cd(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1e5e417ea_TypeKind> _5618_other) {
	return _1e5e4db37_Equal(_self_.as<_1e5e4d43e_Sptr>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1ca560c8c_1ca3c8de1(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1e5e417ea_TypeKind> _5618_other) {
	return _1e5e4e71a_Equal(_self_.as<_1e5e4de12_Slc>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1ca560c8c_1ca446ca5(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1e5e417ea_TypeKind> _5618_other) {
	return _1e5e501ee_Equal(_self_.as<_1e5e4ea06_Tuple>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1ca560c8c_1ca445237(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1e5e417ea_TypeKind> _5618_other) {
	return _1e5e50c9e_Equal(_self_.as<_1e5e505a6_Map>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1ca560c8c_1ca3c7494(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1e5e417ea_TypeKind> _5618_other) {
	return _1e5e5192b_Equal(_self_.as<_1e5e51233_Arr>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1ca560c8c_1ca3ba993(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1e5e417ea_TypeKind> _5618_other) {
	return _1e5e523ee_Equal(_self_.as<_1e5e51c06_Ptr>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1ca560c8c_1cc384460(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1e5e417ea_TypeKind> _5618_other) {
	return _1c8a8d563_Equal(_self_.as<_1c8a8cd26_customType>(), _5618_other);
}
inline jule::Ptr<_1e5d5b2e7_ImportInfo> __jule_trait_method_1ca56130e_1ca4a9d3a(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1e5d5b2e7_ImportInfo>> _929_selector) {
	return _1e5d40c49_SelectPackage(_self_.as<_1e5d40771_scopeChecker>().alloc, _929_selector);
}
inline jule::Ptr<_1e5d5b2e7_ImportInfo> __jule_trait_method_1ca56130e_1ca3ced70(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1e5d5b2e7_ImportInfo>> _929_selector) {
	return _1e5d5b814_SelectPackage(_self_.as<_1e5d5b2e7_ImportInfo>().alloc, _929_selector);
}
inline jule::Ptr<_1e5d5b2e7_ImportInfo> __jule_trait_method_1ca56130e_1ca3d1019(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1e5d5b2e7_ImportInfo>> _929_selector) {
	return _1e5d5e6e6_SelectPackage(_self_.as<_1e5d5e21d_Package>().alloc, _929_selector);
}
inline jule::Ptr<_1e5d5b2e7_ImportInfo> __jule_trait_method_1ca56130e_1ca3ccc19(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1e5d5b2e7_ImportInfo>> _929_selector) {
	return _1e5d7bc41_SelectPackage(_self_.as<_1e5d7b768_sema>().alloc, _929_selector);
}
inline jule::Ptr<_1e5d5b2e7_ImportInfo> __jule_trait_method_1ca56130e_1ca3cd70e(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1e5d5b2e7_ImportInfo>> _929_selector) {
	return _1e5e03a65_SelectPackage(_self_.as<_1e5e03548_SymbolTable>().alloc, _929_selector);
}
inline jule::Ptr<_1e5da0bcc_Var> __jule_trait_method_1ca562189_1ca4a9d3a(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1e5d41145_FindVar(_self_.as<_1e5d40771_scopeChecker>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1e5da0bcc_Var> __jule_trait_method_1ca562189_1ca3ced70(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1e5d5bc10_FindVar(_self_.as<_1e5d5b2e7_ImportInfo>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1e5da0bcc_Var> __jule_trait_method_1ca562189_1ca3d1019(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1e5d5eae2_FindVar(_self_.as<_1e5d5e21d_Package>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1e5da0bcc_Var> __jule_trait_method_1ca562189_1ca3ccc19(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1e5d7c13c_FindVar(_self_.as<_1e5d7b768_sema>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1e5da0bcc_Var> __jule_trait_method_1ca562189_1ca3cd70e(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1e5e03e61_FindVar(_self_.as<_1e5e03548_SymbolTable>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1e5e40a08_TypeAlias> __jule_trait_method_1ca562761_1ca4a9d3a(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1e5d41541_FindTypeAlias(_self_.as<_1e5d40771_scopeChecker>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1e5e40a08_TypeAlias> __jule_trait_method_1ca562761_1ca3ced70(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1e5d5c10b_FindTypeAlias(_self_.as<_1e5d5b2e7_ImportInfo>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1e5e40a08_TypeAlias> __jule_trait_method_1ca562761_1ca3d1019(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1e5d5eedd_FindTypeAlias(_self_.as<_1e5d5e21d_Package>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1e5e40a08_TypeAlias> __jule_trait_method_1ca562761_1ca3ccc19(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1e5d7c538_FindTypeAlias(_self_.as<_1e5d7b768_sema>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1e5e40a08_TypeAlias> __jule_trait_method_1ca562761_1ca3cd70e(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1e5e0435c_FindTypeAlias(_self_.as<_1e5e03548_SymbolTable>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1e5cc5e21_Struct> __jule_trait_method_1ca562d6b_1ca4a9d3a(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1e5d4193c_FindStruct(_self_.as<_1e5d40771_scopeChecker>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1e5cc5e21_Struct> __jule_trait_method_1ca562d6b_1ca3ced70(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1e5d5c507_FindStruct(_self_.as<_1e5d5b2e7_ImportInfo>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1e5cc5e21_Struct> __jule_trait_method_1ca562d6b_1ca3d1019(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1e5d603d9_FindStruct(_self_.as<_1e5d5e21d_Package>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1e5cc5e21_Struct> __jule_trait_method_1ca562d6b_1ca3ccc19(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1e5d7c934_FindStruct(_self_.as<_1e5d7b768_sema>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1e5cc5e21_Struct> __jule_trait_method_1ca562d6b_1ca3cd70e(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1e5e04758_FindStruct(_self_.as<_1e5e03548_SymbolTable>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1e5ce0358_Fn> __jule_trait_method_1ca563476_1ca4a9d3a(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1e5d41d38_FindFn(_self_.as<_1e5d40771_scopeChecker>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1e5ce0358_Fn> __jule_trait_method_1ca563476_1ca3ced70(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1e5d5c903_FindFn(_self_.as<_1e5d5b2e7_ImportInfo>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1e5ce0358_Fn> __jule_trait_method_1ca563476_1ca3d1019(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1e5d607d5_FindFn(_self_.as<_1e5d5e21d_Package>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1e5ce0358_Fn> __jule_trait_method_1ca563476_1ca3ccc19(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1e5d7cd30_FindFn(_self_.as<_1e5d7b768_sema>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1e5ce0358_Fn> __jule_trait_method_1ca563476_1ca3cd70e(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1e5e04b54_FindFn(_self_.as<_1e5e03548_SymbolTable>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1e5d03db6_Trait> __jule_trait_method_1ca563a81_1ca4a9d3a(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1e5d42179_FindTrait(_self_.as<_1e5d40771_scopeChecker>().alloc, _2925_ident);
}
inline jule::Ptr<_1e5d03db6_Trait> __jule_trait_method_1ca563a81_1ca3ced70(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1e5d5cc44_FindTrait(_self_.as<_1e5d5b2e7_ImportInfo>().alloc, _2925_ident);
}
inline jule::Ptr<_1e5d03db6_Trait> __jule_trait_method_1ca563a81_1ca3d1019(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1e5d60b26_FindTrait(_self_.as<_1e5d5e21d_Package>().alloc, _2925_ident);
}
inline jule::Ptr<_1e5d03db6_Trait> __jule_trait_method_1ca563a81_1ca3ccc19(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1e5d7d171_FindTrait(_self_.as<_1e5d7b768_sema>().alloc, _2925_ident);
}
inline jule::Ptr<_1e5d03db6_Trait> __jule_trait_method_1ca563a81_1ca3cd70e(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1e5e04e95_FindTrait(_self_.as<_1e5e03548_SymbolTable>().alloc, _2925_ident);
}
inline jule::Ptr<_1e5d065c2_Enum> __jule_trait_method_1ca5640d1_1ca4a9d3a(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1e5d424ba_FindEnum(_self_.as<_1e5d40771_scopeChecker>().alloc, _3324_ident);
}
inline jule::Ptr<_1e5d065c2_Enum> __jule_trait_method_1ca5640d1_1ca3ced70(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1e5d5d085_FindEnum(_self_.as<_1e5d5b2e7_ImportInfo>().alloc, _3324_ident);
}
inline jule::Ptr<_1e5d065c2_Enum> __jule_trait_method_1ca5640d1_1ca3d1019(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1e5d60e67_FindEnum(_self_.as<_1e5d5e21d_Package>().alloc, _3324_ident);
}
inline jule::Ptr<_1e5d065c2_Enum> __jule_trait_method_1ca5640d1_1ca3ccc19(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1e5d7d4b2_FindEnum(_self_.as<_1e5d7b768_sema>().alloc, _3324_ident);
}
inline jule::Ptr<_1e5d065c2_Enum> __jule_trait_method_1ca5640d1_1ca3cd70e(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1e5e052d6_FindEnum(_self_.as<_1e5e03548_SymbolTable>().alloc, _3324_ident);
}
inline jule::Ptr<_1e5d07ccc_TypeEnum> __jule_trait_method_1ca564631_1ca4a9d3a(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1e5d4280b_FindTypeEnum(_self_.as<_1e5d40771_scopeChecker>().alloc, _3728_ident);
}
inline jule::Ptr<_1e5d07ccc_TypeEnum> __jule_trait_method_1ca564631_1ca3ced70(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1e5d5d3c6_FindTypeEnum(_self_.as<_1e5d5b2e7_ImportInfo>().alloc, _3728_ident);
}
inline jule::Ptr<_1e5d07ccc_TypeEnum> __jule_trait_method_1ca564631_1ca3d1019(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1e5d612a8_FindTypeEnum(_self_.as<_1e5d5e21d_Package>().alloc, _3728_ident);
}
inline jule::Ptr<_1e5d07ccc_TypeEnum> __jule_trait_method_1ca564631_1ca3ccc19(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1e5d7d803_FindTypeEnum(_self_.as<_1e5d7b768_sema>().alloc, _3728_ident);
}
inline jule::Ptr<_1e5d07ccc_TypeEnum> __jule_trait_method_1ca564631_1ca3cd70e(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1e5e05627_FindTypeEnum(_self_.as<_1e5e03548_SymbolTable>().alloc, _3728_ident);
}
inline jule::Str __jule_trait_method_1cc981540_1cc970584(jule::Ptr<jule::Uintptr> _self_) {
	return _1cc9703db_Name(_self_.as<_1cc970584_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1cc981540_1cc973da1(jule::Ptr<jule::Uintptr> _self_) {
	return _1cc973a2c_Name(_self_.as<_1cc973da1_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1cc981540_1cc9775ad(jule::Ptr<jule::Uintptr> _self_) {
	return _1cc977239_Name(_self_.as<_1cc9775ad_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1cc981540_1cc97ad0e(jule::Ptr<jule::Uintptr> _self_) {
	return _1cc97a98a_Name(_self_.as<_1cc97ad0e_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1cc981540_1cc97e51b(jule::Ptr<jule::Uintptr> _self_) {
	return _1cc97e197_Name(_self_.as<_1cc97e51b_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1cc98162d_1cc970584(jule::Ptr<jule::Uintptr> _self_) {
	return _1cc970b06_Short(_self_.as<_1cc970584_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1cc98162d_1cc973da1(jule::Ptr<jule::Uintptr> _self_) {
	return _1cc974423_Short(_self_.as<_1cc973da1_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1cc98162d_1cc9775ad(jule::Ptr<jule::Uintptr> _self_) {
	return _1cc977b30_Short(_self_.as<_1cc9775ad_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1cc98162d_1cc97ad0e(jule::Ptr<jule::Uintptr> _self_) {
	return _1cc97b381_Short(_self_.as<_1cc97ad0e_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1cc98162d_1cc97e51b(jule::Ptr<jule::Uintptr> _self_) {
	return _1cc97ea8d_Short(_self_.as<_1cc97e51b_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1cc983003_1cc970584(jule::Ptr<jule::Uintptr> _self_) {
	return _1cc970870_What(_self_.as<_1cc970584_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1cc983003_1cc973da1(jule::Ptr<jule::Uintptr> _self_) {
	return _1cc97418c_What(_self_.as<_1cc973da1_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1cc983003_1cc9775ad(jule::Ptr<jule::Uintptr> _self_) {
	return _1cc977899_What(_self_.as<_1cc9775ad_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1cc983003_1cc97ad0e(jule::Ptr<jule::Uintptr> _self_) {
	return _1cc97b0ea_What(_self_.as<_1cc97ad0e_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1cc983003_1cc97e51b(jule::Ptr<jule::Uintptr> _self_) {
	return _1cc97e807_What(_self_.as<_1cc97e51b_Flag>().alloc);
}
inline void __jule_trait_method_1cc983410_1cc970584(jule::Ptr<jule::Uintptr> _self_) {
	_1cc9709b3_Reset(_self_.as<_1cc970584_Flag>().alloc);
}
inline void __jule_trait_method_1cc983410_1cc973da1(jule::Ptr<jule::Uintptr> _self_) {
	_1cc9742d0_Reset(_self_.as<_1cc973da1_Flag>().alloc);
}
inline void __jule_trait_method_1cc983410_1cc9775ad(jule::Ptr<jule::Uintptr> _self_) {
	_1cc9779dc_Reset(_self_.as<_1cc9775ad_Flag>().alloc);
}
inline void __jule_trait_method_1cc983410_1cc97ad0e(jule::Ptr<jule::Uintptr> _self_) {
	_1cc97b23d_Reset(_self_.as<_1cc97ad0e_Flag>().alloc);
}
inline void __jule_trait_method_1cc983410_1cc97e51b(jule::Ptr<jule::Uintptr> _self_) {
	_1cc97e94a_Reset(_self_.as<_1cc97e51b_Flag>().alloc);
}


static _1e5d0a4d8_comptimeRangeKindMptrData _1e5d0a4d8_comptimeRangeKind_mptr_data0 {
	.dealloc=__jule_type_deallocator0,
	._1e5d0986c_index=__jule_trait_method_1ca55be42_1ca500644,
	._1e5d09bd0_ready=__jule_trait_method_1ca55c45e_1ca500644,
	._1e5d0a0ed_step=__jule_trait_method_1ca55cb35_1ca500644,
	._1e5d0a384_len=__jule_trait_method_1ca55d31c_1ca500644,
};
static _1e5d0a4d8_comptimeRangeKindMptrData _1e5d0a4d8_comptimeRangeKind_mptr_data1 {
	.dealloc=__jule_type_deallocator1,
	._1e5d0986c_index=__jule_trait_method_1ca55be42_1ca5190a8,
	._1e5d09bd0_ready=__jule_trait_method_1ca55c45e_1ca5190a8,
	._1e5d0a0ed_step=__jule_trait_method_1ca55cb35_1ca5190a8,
	._1e5d0a384_len=__jule_trait_method_1ca55d31c_1ca5190a8,
};
static _1e5d0a4d8_comptimeRangeKindMptrData _1e5d0a4d8_comptimeRangeKind_mptr_data2 {
	.dealloc=__jule_type_deallocator2,
	._1e5d0986c_index=__jule_trait_method_1ca55be42_1ca50697a,
	._1e5d09bd0_ready=__jule_trait_method_1ca55c45e_1ca50697a,
	._1e5d0a0ed_step=__jule_trait_method_1ca55cb35_1ca50697a,
	._1e5d0a384_len=__jule_trait_method_1ca55d31c_1ca50697a,
};
static _1e5d0a4d8_comptimeRangeKindMptrData _1e5d0a4d8_comptimeRangeKind_mptr_data3 {
	.dealloc=__jule_type_deallocator3,
	._1e5d0986c_index=__jule_trait_method_1ca55be42_1ca50c486,
	._1e5d09bd0_ready=__jule_trait_method_1ca55c45e_1ca50c486,
	._1e5d0a0ed_step=__jule_trait_method_1ca55cb35_1ca50c486,
	._1e5d0a384_len=__jule_trait_method_1ca55d31c_1ca50c486,
};
static _1e5d0a4d8_comptimeRangeKindMptrData _1e5d0a4d8_comptimeRangeKind_mptr_data4 {
	.dealloc=__jule_type_deallocator4,
	._1e5d0986c_index=__jule_trait_method_1ca55be42_1ca5157d0,
	._1e5d09bd0_ready=__jule_trait_method_1ca55c45e_1ca5157d0,
	._1e5d0a0ed_step=__jule_trait_method_1ca55cb35_1ca5157d0,
	._1e5d0a384_len=__jule_trait_method_1ca55d31c_1ca5157d0,
};
static _1e5d0a4d8_comptimeRangeKindMptrData _1e5d0a4d8_comptimeRangeKind_mptr_data5 {
	.dealloc=__jule_type_deallocator5,
	._1e5d0986c_index=__jule_trait_method_1ca55be42_1ca535e4e,
	._1e5d09bd0_ready=__jule_trait_method_1ca55c45e_1ca535e4e,
	._1e5d0a0ed_step=__jule_trait_method_1ca55cb35_1ca535e4e,
	._1e5d0a384_len=__jule_trait_method_1ca55d31c_1ca535e4e,
};
static _1e5d0a4d8_comptimeRangeKindMptrData _1e5d0a4d8_comptimeRangeKind_mptr_data6 {
	.dealloc=__jule_type_deallocator6,
	._1e5d0986c_index=__jule_trait_method_1ca55be42_1ca52e2dd,
	._1e5d09bd0_ready=__jule_trait_method_1ca55c45e_1ca52e2dd,
	._1e5d0a0ed_step=__jule_trait_method_1ca55cb35_1ca52e2dd,
	._1e5d0a384_len=__jule_trait_method_1ca55d31c_1ca52e2dd,
};
static _1e5d5805d_ImporterMptrData _1e5d5805d_Importer_mptr_data0 {
	.dealloc=__jule_type_deallocator7,
	._1e5d56d3c_SetModPath=__jule_trait_method_1ca55d65d_1cbd68252,
	._1e5d570c3_GetModPath=__jule_trait_method_1ca55daae_1cbd68252,
	._1e5d57414_ModById=__jule_trait_method_1ca55debb_1cbd68252,
	._1e5d57755_GetImport=__jule_trait_method_1ca55e483_1cbd68252,
	._1e5d57b51_ImportPackage=__jule_trait_method_1ca55ea6b_1cbd68252,
	._1e5d57e09_Imported=__jule_trait_method_1ca5603b8_1cbd68252,
};
static _1e5e41344_KindMptrData _1e5e41344_Kind_mptr_data0 {
	.dealloc=__jule_type_deallocator8,
	._1e5e40d9e_Str=__jule_trait_method_1ca560918_1ca3cb3ee,
	._1e5e411e0_Equal=__jule_trait_method_1ca560c8c_1ca3cb3ee,
};
static _1e5e41344_KindMptrData _1e5e41344_Kind_mptr_data1 {
	.dealloc=__jule_type_deallocator9,
	._1e5e40d9e_Str=__jule_trait_method_1ca560918_1ca3ca772,
	._1e5e411e0_Equal=__jule_trait_method_1ca560c8c_1ca3ca772,
};
static _1e5e41344_KindMptrData _1e5e41344_Kind_mptr_data2 {
	.dealloc=__jule_type_deallocator10,
	._1e5e40d9e_Str=__jule_trait_method_1ca560918_1ca3e3d40,
	._1e5e411e0_Equal=__jule_trait_method_1ca560c8c_1ca3e3d40,
};
static _1e5e41344_KindMptrData _1e5e41344_Kind_mptr_data3 {
	.dealloc=__jule_type_deallocator11,
	._1e5e40d9e_Str=__jule_trait_method_1ca560918_1ca3bc720,
	._1e5e411e0_Equal=__jule_trait_method_1ca560c8c_1ca3bc720,
};
static _1e5e41344_KindMptrData _1e5e41344_Kind_mptr_data4 {
	.dealloc=__jule_type_deallocator12,
	._1e5e40d9e_Str=__jule_trait_method_1ca560918_1ca3c4848,
	._1e5e411e0_Equal=__jule_trait_method_1ca560c8c_1ca3c4848,
};
static _1e5e41344_KindMptrData _1e5e41344_Kind_mptr_data5 {
	.dealloc=__jule_type_deallocator13,
	._1e5e40d9e_Str=__jule_trait_method_1ca560918_1ca5140e7,
	._1e5e411e0_Equal=__jule_trait_method_1ca560c8c_1ca5140e7,
};
static _1e5e41344_KindMptrData _1e5e41344_Kind_mptr_data6 {
	.dealloc=__jule_type_deallocator14,
	._1e5e40d9e_Str=__jule_trait_method_1ca560918_1ca503911,
	._1e5e411e0_Equal=__jule_trait_method_1ca560c8c_1ca503911,
};
static _1e5e41344_KindMptrData _1e5e41344_Kind_mptr_data7 {
	.dealloc=__jule_type_deallocator0,
	._1e5e40d9e_Str=__jule_trait_method_1ca560918_1ca500644,
	._1e5e411e0_Equal=__jule_trait_method_1ca560c8c_1ca500644,
};
static _1e5e41344_KindMptrData _1e5e41344_Kind_mptr_data8 {
	.dealloc=__jule_type_deallocator15,
	._1e5e40d9e_Str=__jule_trait_method_1ca560918_1ca51c375,
	._1e5e411e0_Equal=__jule_trait_method_1ca560c8c_1ca51c375,
};
static _1e5e41344_KindMptrData _1e5e41344_Kind_mptr_data9 {
	.dealloc=__jule_type_deallocator1,
	._1e5e40d9e_Str=__jule_trait_method_1ca560918_1ca5190a8,
	._1e5e411e0_Equal=__jule_trait_method_1ca560c8c_1ca5190a8,
};
static _1e5e41344_KindMptrData _1e5e41344_Kind_mptr_data10 {
	.dealloc=__jule_type_deallocator16,
	._1e5e40d9e_Str=__jule_trait_method_1ca560918_1ca509c47,
	._1e5e411e0_Equal=__jule_trait_method_1ca560c8c_1ca509c47,
};
static _1e5e41344_KindMptrData _1e5e41344_Kind_mptr_data11 {
	.dealloc=__jule_type_deallocator2,
	._1e5e40d9e_Str=__jule_trait_method_1ca560918_1ca50697a,
	._1e5e411e0_Equal=__jule_trait_method_1ca560c8c_1ca50697a,
};
static _1e5e41344_KindMptrData _1e5e41344_Kind_mptr_data12 {
	.dealloc=__jule_type_deallocator17,
	._1e5e40d9e_Str=__jule_trait_method_1ca560918_1ca510753,
	._1e5e411e0_Equal=__jule_trait_method_1ca560c8c_1ca510753,
};
static _1e5e41344_KindMptrData _1e5e41344_Kind_mptr_data13 {
	.dealloc=__jule_type_deallocator3,
	._1e5e40d9e_Str=__jule_trait_method_1ca560918_1ca50c486,
	._1e5e411e0_Equal=__jule_trait_method_1ca560c8c_1ca50c486,
};
static _1e5e41344_KindMptrData _1e5e41344_Kind_mptr_data14 {
	.dealloc=__jule_type_deallocator4,
	._1e5e40d9e_Str=__jule_trait_method_1ca560918_1ca5157d0,
	._1e5e411e0_Equal=__jule_trait_method_1ca560c8c_1ca5157d0,
};
static _1e5e41344_KindMptrData _1e5e41344_Kind_mptr_data15 {
	.dealloc=__jule_type_deallocator18,
	._1e5e40d9e_Str=__jule_trait_method_1ca560918_1ca40b330,
	._1e5e411e0_Equal=__jule_trait_method_1ca560c8c_1ca40b330,
};
static _1e5e41344_KindMptrData _1e5e41344_Kind_mptr_data16 {
	.dealloc=__jule_type_deallocator19,
	._1e5e40d9e_Str=__jule_trait_method_1ca560918_1ca5203de,
	._1e5e411e0_Equal=__jule_trait_method_1ca560c8c_1ca5203de,
};
static _1e5e41344_KindMptrData _1e5e41344_Kind_mptr_data17 {
	.dealloc=__jule_type_deallocator5,
	._1e5e40d9e_Str=__jule_trait_method_1ca560918_1ca535e4e,
	._1e5e411e0_Equal=__jule_trait_method_1ca560c8c_1ca535e4e,
};
static _1e5e41344_KindMptrData _1e5e41344_Kind_mptr_data18 {
	.dealloc=__jule_type_deallocator20,
	._1e5e40d9e_Str=__jule_trait_method_1ca560918_1ca5325aa,
	._1e5e411e0_Equal=__jule_trait_method_1ca560c8c_1ca5325aa,
};
static _1e5e41344_KindMptrData _1e5e41344_Kind_mptr_data19 {
	.dealloc=__jule_type_deallocator6,
	._1e5e40d9e_Str=__jule_trait_method_1ca560918_1ca52e2dd,
	._1e5e411e0_Equal=__jule_trait_method_1ca560c8c_1ca52e2dd,
};
static _1e5e41344_KindMptrData _1e5e41344_Kind_mptr_data20 {
	.dealloc=__jule_type_deallocator21,
	._1e5e40d9e_Str=__jule_trait_method_1ca560918_1ca52603d,
	._1e5e411e0_Equal=__jule_trait_method_1ca560c8c_1ca52603d,
};
static _1e5e41344_KindMptrData _1e5e41344_Kind_mptr_data21 {
	.dealloc=__jule_type_deallocator22,
	._1e5e40d9e_Str=__jule_trait_method_1ca560918_1ca3ace19,
	._1e5e411e0_Equal=__jule_trait_method_1ca560c8c_1ca3ace19,
};
static _1e5e41344_KindMptrData _1e5e41344_Kind_mptr_data22 {
	.dealloc=__jule_type_deallocator23,
	._1e5e40d9e_Str=__jule_trait_method_1ca560918_1ca3b28be,
	._1e5e411e0_Equal=__jule_trait_method_1ca560c8c_1ca3b28be,
};
static _1e5e41344_KindMptrData _1e5e41344_Kind_mptr_data23 {
	.dealloc=__jule_type_deallocator24,
	._1e5e40d9e_Str=__jule_trait_method_1ca560918_1ca3b91cd,
	._1e5e411e0_Equal=__jule_trait_method_1ca560c8c_1ca3b91cd,
};
static _1e5e41344_KindMptrData _1e5e41344_Kind_mptr_data24 {
	.dealloc=__jule_type_deallocator25,
	._1e5e40d9e_Str=__jule_trait_method_1ca560918_1ca3c8de1,
	._1e5e411e0_Equal=__jule_trait_method_1ca560c8c_1ca3c8de1,
};
static _1e5e41344_KindMptrData _1e5e41344_Kind_mptr_data25 {
	.dealloc=__jule_type_deallocator26,
	._1e5e40d9e_Str=__jule_trait_method_1ca560918_1ca446ca5,
	._1e5e411e0_Equal=__jule_trait_method_1ca560c8c_1ca446ca5,
};
static _1e5e41344_KindMptrData _1e5e41344_Kind_mptr_data26 {
	.dealloc=__jule_type_deallocator27,
	._1e5e40d9e_Str=__jule_trait_method_1ca560918_1ca445237,
	._1e5e411e0_Equal=__jule_trait_method_1ca560c8c_1ca445237,
};
static _1e5e41344_KindMptrData _1e5e41344_Kind_mptr_data27 {
	.dealloc=__jule_type_deallocator28,
	._1e5e40d9e_Str=__jule_trait_method_1ca560918_1ca3c7494,
	._1e5e411e0_Equal=__jule_trait_method_1ca560c8c_1ca3c7494,
};
static _1e5e41344_KindMptrData _1e5e41344_Kind_mptr_data28 {
	.dealloc=__jule_type_deallocator29,
	._1e5e40d9e_Str=__jule_trait_method_1ca560918_1ca3ba993,
	._1e5e411e0_Equal=__jule_trait_method_1ca560c8c_1ca3ba993,
};
static _1e5e41344_KindMptrData _1e5e41344_Kind_mptr_data29 {
	.dealloc=__jule_type_deallocator30,
	._1e5e40d9e_Str=__jule_trait_method_1ca560918_1cc384460,
	._1e5e411e0_Equal=__jule_trait_method_1ca560c8c_1cc384460,
};
static _1e5e61e9c_LookupMptrData _1e5e61e9c_Lookup_mptr_data0 {
	.dealloc=__jule_type_deallocator31,
	._1e5e60286_SelectPackage=__jule_trait_method_1ca56130e_1ca4a9d3a,
	._1e5e60682_FindVar=__jule_trait_method_1ca562189_1ca4a9d3a,
	._1e5e60a7d_FindTypeAlias=__jule_trait_method_1ca562761_1ca4a9d3a,
	._1e5e60e79_FindStruct=__jule_trait_method_1ca562d6b_1ca4a9d3a,
	._1e5e61375_FindFn=__jule_trait_method_1ca563476_1ca4a9d3a,
	._1e5e616b6_FindTrait=__jule_trait_method_1ca563a81_1ca4a9d3a,
	._1e5e61a07_FindEnum=__jule_trait_method_1ca5640d1_1ca4a9d3a,
	._1e5e61d48_FindTypeEnum=__jule_trait_method_1ca564631_1ca4a9d3a,
};
static _1e5e61e9c_LookupMptrData _1e5e61e9c_Lookup_mptr_data1 {
	.dealloc=__jule_type_deallocator32,
	._1e5e60286_SelectPackage=__jule_trait_method_1ca56130e_1ca3ced70,
	._1e5e60682_FindVar=__jule_trait_method_1ca562189_1ca3ced70,
	._1e5e60a7d_FindTypeAlias=__jule_trait_method_1ca562761_1ca3ced70,
	._1e5e60e79_FindStruct=__jule_trait_method_1ca562d6b_1ca3ced70,
	._1e5e61375_FindFn=__jule_trait_method_1ca563476_1ca3ced70,
	._1e5e616b6_FindTrait=__jule_trait_method_1ca563a81_1ca3ced70,
	._1e5e61a07_FindEnum=__jule_trait_method_1ca5640d1_1ca3ced70,
	._1e5e61d48_FindTypeEnum=__jule_trait_method_1ca564631_1ca3ced70,
};
static _1e5e61e9c_LookupMptrData _1e5e61e9c_Lookup_mptr_data2 {
	.dealloc=__jule_type_deallocator33,
	._1e5e60286_SelectPackage=__jule_trait_method_1ca56130e_1ca3d1019,
	._1e5e60682_FindVar=__jule_trait_method_1ca562189_1ca3d1019,
	._1e5e60a7d_FindTypeAlias=__jule_trait_method_1ca562761_1ca3d1019,
	._1e5e60e79_FindStruct=__jule_trait_method_1ca562d6b_1ca3d1019,
	._1e5e61375_FindFn=__jule_trait_method_1ca563476_1ca3d1019,
	._1e5e616b6_FindTrait=__jule_trait_method_1ca563a81_1ca3d1019,
	._1e5e61a07_FindEnum=__jule_trait_method_1ca5640d1_1ca3d1019,
	._1e5e61d48_FindTypeEnum=__jule_trait_method_1ca564631_1ca3d1019,
};
static _1e5e61e9c_LookupMptrData _1e5e61e9c_Lookup_mptr_data3 {
	.dealloc=__jule_type_deallocator34,
	._1e5e60286_SelectPackage=__jule_trait_method_1ca56130e_1ca3ccc19,
	._1e5e60682_FindVar=__jule_trait_method_1ca562189_1ca3ccc19,
	._1e5e60a7d_FindTypeAlias=__jule_trait_method_1ca562761_1ca3ccc19,
	._1e5e60e79_FindStruct=__jule_trait_method_1ca562d6b_1ca3ccc19,
	._1e5e61375_FindFn=__jule_trait_method_1ca563476_1ca3ccc19,
	._1e5e616b6_FindTrait=__jule_trait_method_1ca563a81_1ca3ccc19,
	._1e5e61a07_FindEnum=__jule_trait_method_1ca5640d1_1ca3ccc19,
	._1e5e61d48_FindTypeEnum=__jule_trait_method_1ca564631_1ca3ccc19,
};
static _1e5e61e9c_LookupMptrData _1e5e61e9c_Lookup_mptr_data4 {
	.dealloc=__jule_type_deallocator35,
	._1e5e60286_SelectPackage=__jule_trait_method_1ca56130e_1ca3cd70e,
	._1e5e60682_FindVar=__jule_trait_method_1ca562189_1ca3cd70e,
	._1e5e60a7d_FindTypeAlias=__jule_trait_method_1ca562761_1ca3cd70e,
	._1e5e60e79_FindStruct=__jule_trait_method_1ca562d6b_1ca3cd70e,
	._1e5e61375_FindFn=__jule_trait_method_1ca563476_1ca3cd70e,
	._1e5e616b6_FindTrait=__jule_trait_method_1ca563a81_1ca3cd70e,
	._1e5e61a07_FindEnum=__jule_trait_method_1ca5640d1_1ca3cd70e,
	._1e5e61d48_FindTypeEnum=__jule_trait_method_1ca564631_1ca3cd70e,
};
static _1c8b10abe_CommonFlagMptrData _1c8b10abe_CommonFlag_mptr_data0 {
	.dealloc=__jule_type_deallocator36,
	._1c8ace97d_Name=__jule_trait_method_1cc981540_1cc970584,
	._1c8aceac1_Short=__jule_trait_method_1cc98162d_1cc970584,
	._1c8acec14_What=__jule_trait_method_1cc983003_1cc970584,
	._1c8b1096a_Reset=__jule_trait_method_1cc983410_1cc970584,
};
static _1c8b10abe_CommonFlagMptrData _1c8b10abe_CommonFlag_mptr_data1 {
	.dealloc=__jule_type_deallocator37,
	._1c8ace97d_Name=__jule_trait_method_1cc981540_1cc973da1,
	._1c8aceac1_Short=__jule_trait_method_1cc98162d_1cc973da1,
	._1c8acec14_What=__jule_trait_method_1cc983003_1cc973da1,
	._1c8b1096a_Reset=__jule_trait_method_1cc983410_1cc973da1,
};
static _1c8b10abe_CommonFlagMptrData _1c8b10abe_CommonFlag_mptr_data2 {
	.dealloc=__jule_type_deallocator38,
	._1c8ace97d_Name=__jule_trait_method_1cc981540_1cc9775ad,
	._1c8aceac1_Short=__jule_trait_method_1cc98162d_1cc9775ad,
	._1c8acec14_What=__jule_trait_method_1cc983003_1cc9775ad,
	._1c8b1096a_Reset=__jule_trait_method_1cc983410_1cc9775ad,
};
static _1c8b10abe_CommonFlagMptrData _1c8b10abe_CommonFlag_mptr_data3 {
	.dealloc=__jule_type_deallocator39,
	._1c8ace97d_Name=__jule_trait_method_1cc981540_1cc97ad0e,
	._1c8aceac1_Short=__jule_trait_method_1cc98162d_1cc97ad0e,
	._1c8acec14_What=__jule_trait_method_1cc983003_1cc97ad0e,
	._1c8b1096a_Reset=__jule_trait_method_1cc983410_1cc97ad0e,
};
static _1c8b10abe_CommonFlagMptrData _1c8b10abe_CommonFlag_mptr_data4 {
	.dealloc=__jule_type_deallocator40,
	._1c8ace97d_Name=__jule_trait_method_1cc981540_1cc97e51b,
	._1c8aceac1_Short=__jule_trait_method_1cc98162d_1cc97e51b,
	._1c8acec14_What=__jule_trait_method_1cc983003_1cc97e51b,
	._1c8b1096a_Reset=__jule_trait_method_1cc983410_1cc97e51b,
};


jule::Bool __jule_any_type0_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other)); }
jule::Str __jule_any_type0_to_str(void *alloc) noexcept { return _1c9b5a486_toStr(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type0{.dealloc=__jule_type_deallocator41, .eq=__jule_any_type0_eq, .to_str=__jule_any_type0_to_str};
jule::Bool __jule_any_type0_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type0 && __jule_any_type0_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type1_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other)); }
jule::Str __jule_any_type1_to_str(void *alloc) noexcept { return _1c8d7784c_toStr(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type1{.dealloc=__jule_type_deallocator42, .eq=__jule_any_type1_eq, .to_str=__jule_any_type1_to_str};
jule::Bool __jule_any_type1_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type1 && __jule_any_type1_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type2_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U64*>(alloc) == *reinterpret_cast<jule::U64*>(other)); }
jule::Str __jule_any_type2_to_str(void *alloc) noexcept { return _1c8d84d54_toStr(*reinterpret_cast<const jule::U64*>(alloc)); }
struct jule::Any::Type __jule_any_type2{.dealloc=__jule_type_deallocator43, .eq=__jule_any_type2_eq, .to_str=__jule_any_type2_to_str};
jule::Bool __jule_any_type2_compare(const jule::Any &any, const jule::U64 &other) { return any.type == &__jule_any_type2 && __jule_any_type2_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type3_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::Bool*>(alloc) == *reinterpret_cast<jule::Bool*>(other)); }
jule::Str __jule_any_type3_to_str(void *alloc) noexcept { return _1c8d75240_toStr(*reinterpret_cast<const jule::Bool*>(alloc)); }
struct jule::Any::Type __jule_any_type3{.dealloc=__jule_type_deallocator44, .eq=__jule_any_type3_eq, .to_str=__jule_any_type3_to_str};
jule::Bool __jule_any_type3_compare(const jule::Any &any, const jule::Bool &other) { return any.type == &__jule_any_type3 && __jule_any_type3_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type4_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::Str*>(alloc) == *reinterpret_cast<jule::Str*>(other)); }
jule::Str __jule_any_type4_to_str(void *alloc) noexcept { return _1c8d69498_toStr(*reinterpret_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type4{.dealloc=__jule_type_deallocator45, .eq=__jule_any_type4_eq, .to_str=__jule_any_type4_to_str};
jule::Bool __jule_any_type4_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type4 && __jule_any_type4_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type5_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::F64*>(alloc) == *reinterpret_cast<jule::F64*>(other)); }
jule::Str __jule_any_type5_to_str(void *alloc) noexcept { return _1c8d872da_toStr(*reinterpret_cast<const jule::F64*>(alloc)); }
struct jule::Any::Type __jule_any_type5{.dealloc=__jule_type_deallocator46, .eq=__jule_any_type5_eq, .to_str=__jule_any_type5_to_str};
jule::Bool __jule_any_type5_compare(const jule::Any &any, const jule::F64 &other) { return any.type == &__jule_any_type5 && __jule_any_type5_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type6_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other)); }
jule::Str __jule_any_type6_to_str(void *alloc) noexcept { return _1c8d74d66_toStr(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type6{.dealloc=__jule_type_deallocator47, .eq=__jule_any_type6_eq, .to_str=__jule_any_type6_to_str};
jule::Bool __jule_any_type6_compare(const jule::Any &any, const jule::I32 &other) { return any.type == &__jule_any_type6 && __jule_any_type6_eq(any.data.alloc, (void*)&other); }
struct jule::Any::Type __jule_any_type7{.dealloc=__jule_type_deallocator9, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type7_compare(const jule::Any &any, const jule::Ptr<_1e5ce3416_FnIns> &other) { return any.type == &__jule_any_type7 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type8{.dealloc=__jule_type_deallocator48, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type8_compare(const jule::Any &any, const jule::Ptr<_1e5da0bcc_Var> &other) { return any.type == &__jule_any_type8 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type9{.dealloc=__jule_type_deallocator8, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type9_compare(const jule::Any &any, const jule::Ptr<_1e5cc8c7b_StructIns> &other) { return any.type == &__jule_any_type9 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type10{.dealloc=__jule_type_deallocator10, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type10_compare(const jule::Any &any, const jule::Ptr<_1e5d03db6_Trait> &other) { return any.type == &__jule_any_type10 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type11{.dealloc=__jule_type_deallocator49, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type11_compare(const jule::Any &any, const jule::Ptr<_1e5cc1bec_Impl> &other) { return any.type == &__jule_any_type11 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type12{.dealloc=__jule_type_deallocator50, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type12_compare(const jule::Any &any, const jule::Ptr<_1e5cbbaa4_TypeAliasDecl> &other) { return any.type == &__jule_any_type12 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type13{.dealloc=__jule_type_deallocator51, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type13_compare(const jule::Any &any, const jule::Ptr<_1e5cc0d50_StructDecl> &other) { return any.type == &__jule_any_type13 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type14{.dealloc=__jule_type_deallocator52, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type14_compare(const jule::Any &any, const jule::Ptr<_1e5cb6c47_FnDecl> &other) { return any.type == &__jule_any_type14 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type15{.dealloc=__jule_type_deallocator53, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type15_compare(const jule::Any &any, const jule::Ptr<_1e5cc158c_TraitDecl> &other) { return any.type == &__jule_any_type15 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type16{.dealloc=__jule_type_deallocator54, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type16_compare(const jule::Any &any, const jule::Ptr<_1e5cb7e02_VarDecl> &other) { return any.type == &__jule_any_type16 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type17{.dealloc=__jule_type_deallocator55, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type17_compare(const jule::Any &any, const jule::Ptr<_1e5cbe205_EnumDecl> &other) { return any.type == &__jule_any_type17 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type18{.dealloc=__jule_type_deallocator56, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type18_compare(const jule::Any &any, const jule::Ptr<_1e5cc0190_TypeEnumDecl> &other) { return any.type == &__jule_any_type18 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type19{.dealloc=__jule_type_deallocator57, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type19_compare(const jule::Any &any, const jule::Ptr<_1e5cc2eea_Field> &other) { return any.type == &__jule_any_type19 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type20{.dealloc=__jule_type_deallocator58, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type20_compare(const jule::Any &any, const jule::Ptr<_1e21a449b_Const> &other) { return any.type == &__jule_any_type20 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type21{.dealloc=__jule_type_deallocator59, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type21_compare(const jule::Any &any, const jule::Ptr<_1e5d05a55_EnumItem> &other) { return any.type == &__jule_any_type21 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type22{.dealloc=__jule_type_deallocator60, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type22_compare(const jule::Any &any, const jule::Ptr<_1e5cdd884_Param> &other) { return any.type == &__jule_any_type22 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type23{.dealloc=__jule_type_deallocator61, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type23_compare(const jule::Any &any, const jule::Ptr<_1e5cc5e21_Struct> &other) { return any.type == &__jule_any_type23 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type24{.dealloc=__jule_type_deallocator11, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type24_compare(const jule::Any &any, const jule::Ptr<_1e5d065c2_Enum> &other) { return any.type == &__jule_any_type24 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type25{.dealloc=__jule_type_deallocator12, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type25_compare(const jule::Any &any, const jule::Ptr<_1e5d07ccc_TypeEnum> &other) { return any.type == &__jule_any_type25 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type26{.dealloc=__jule_type_deallocator62, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type26_compare(const jule::Any &any, const jule::Ptr<_1e5ce0358_Fn> &other) { return any.type == &__jule_any_type26 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type27{.dealloc=__jule_type_deallocator63, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type27_compare(const jule::Any &any, const jule::Ptr<_1e5e40a08_TypeAlias> &other) { return any.type == &__jule_any_type27 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type28{.dealloc=__jule_type_deallocator64, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type28_compare(const jule::Any &any, const jule::Ptr<_1e5d3b030_Label> &other) { return any.type == &__jule_any_type28 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type29{.dealloc=__jule_type_deallocator65, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type29_compare(const jule::Any &any, const jule::Ptr<_1e5d384d3_Scope> &other) { return any.type == &__jule_any_type29 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type30{.dealloc=__jule_type_deallocator66, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type30_compare(const jule::Any &any, const jule::Ptr<_1e5cdb09b_BuiltinErrorCallExprModel> &other) { return any.type == &__jule_any_type30 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type31{.dealloc=__jule_type_deallocator67, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type31_compare(const jule::Any &any, const jule::Ptr<_1e5e08c13_Data> &other) { return any.type == &__jule_any_type31 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type32{.dealloc=__jule_type_deallocator68, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type32_compare(const jule::Any &any, const jule::Ptr<_1e5cdc0ad_BackendEmitExprModel> &other) { return any.type == &__jule_any_type32 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type33{.dealloc=__jule_type_deallocator69, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type33_compare(const jule::Any &any, const jule::Ptr<_1e5cd9d25_BuiltinAppendCallExprModel> &other) { return any.type == &__jule_any_type33 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type34{.dealloc=__jule_type_deallocator70, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type34_compare(const jule::Any &any, const jule::Ptr<_1e5cd8818_BuiltinOutCallExprModel> &other) { return any.type == &__jule_any_type34 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type35{.dealloc=__jule_type_deallocator71, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type35_compare(const jule::Any &any, const jule::Ptr<_1e5cd8be2_BuiltinOutlnCallExprModel> &other) { return any.type == &__jule_any_type35 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type36{.dealloc=__jule_type_deallocator72, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type36_compare(const jule::Any &any, const jule::Ptr<_1e5cd9495_BuiltinPanicCallExprModel> &other) { return any.type == &__jule_any_type36 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type37{.dealloc=__jule_type_deallocator73, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type37_compare(const jule::Any &any, const jule::Ptr<_1e5cdabc2_BuiltinCopyCallExprModel> &other) { return any.type == &__jule_any_type37 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type38{.dealloc=__jule_type_deallocator74, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type38_compare(const jule::Any &any, const jule::Ptr<_1e5cda7e8_BuiltinDeleteCallExprModel> &other) { return any.type == &__jule_any_type38 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type39{.dealloc=__jule_type_deallocator75, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type39_compare(const jule::Any &any, const jule::Ptr<_1e5cdc3aa_FreeExprModel> &other) { return any.type == &__jule_any_type39 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type40{.dealloc=__jule_type_deallocator76, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type40_compare(const jule::Any &any, const jule::Ptr<_1e5cd4d31_FnCallExprModel> &other) { return any.type == &__jule_any_type40 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type41{.dealloc=__jule_type_deallocator77, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type41_compare(const jule::Any &any, const jule::Ptr<_1e5d3911b_Conditional> &other) { return any.type == &__jule_any_type41 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type42{.dealloc=__jule_type_deallocator78, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type42_compare(const jule::Any &any, const jule::Ptr<_1e5d39418_InfIter> &other) { return any.type == &__jule_any_type42 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type43{.dealloc=__jule_type_deallocator79, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type43_compare(const jule::Any &any, const jule::Ptr<_1e5cb9376_WhileKind> &other) { return any.type == &__jule_any_type43 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type44{.dealloc=__jule_type_deallocator80, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type44_compare(const jule::Any &any, const jule::Ptr<_1e5d398be_WhileIter> &other) { return any.type == &__jule_any_type44 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type45{.dealloc=__jule_type_deallocator81, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type45_compare(const jule::Any &any, const jule::Ptr<_1e5cb9c7d_RangeKind> &other) { return any.type == &__jule_any_type45 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type46{.dealloc=__jule_type_deallocator82, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type46_compare(const jule::Any &any, const jule::Ptr<_1e5d3a31a_RangeIter> &other) { return any.type == &__jule_any_type46 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type47{.dealloc=__jule_type_deallocator83, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type47_compare(const jule::Any &any, const jule::Ptr<_1e5d3a6a0_ContSt> &other) { return any.type == &__jule_any_type47 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type48{.dealloc=__jule_type_deallocator84, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type48_compare(const jule::Any &any, const jule::Ptr<_1e5d3b690_GotoSt> &other) { return any.type == &__jule_any_type48 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type49{.dealloc=__jule_type_deallocator85, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type49_compare(const jule::Any &any, const jule::Ptr<_1e5d3ba69_Postfix> &other) { return any.type == &__jule_any_type49 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type50{.dealloc=__jule_type_deallocator86, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type50_compare(const jule::Any &any, const jule::Ptr<_1e5d3c020_Assign> &other) { return any.type == &__jule_any_type50 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type51{.dealloc=__jule_type_deallocator87, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type51_compare(const jule::Any &any, const jule::Ptr<_1e5caabd6_IdentExpr> &other) { return any.type == &__jule_any_type51 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type52{.dealloc=__jule_type_deallocator88, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type52_compare(const jule::Any &any, const jule::Ptr<_1e5cd56b1_IndexingExprModel> &other) { return any.type == &__jule_any_type52 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type53{.dealloc=__jule_type_deallocator89, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type53_compare(const jule::Any &any, const jule::Ptr<_1e5d3c4c6_MultiAssign> &other) { return any.type == &__jule_any_type53 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type54{.dealloc=__jule_type_deallocator90, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type54_compare(const jule::Any &any, const jule::Ptr<_1e5d3cc13_Match> &other) { return any.type == &__jule_any_type54 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type55{.dealloc=__jule_type_deallocator91, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type55_compare(const jule::Any &any, const jule::Ptr<_1e5d3de34_FallSt> &other) { return any.type == &__jule_any_type55 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type56{.dealloc=__jule_type_deallocator92, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type56_compare(const jule::Any &any, const jule::Ptr<_1e5d3aa79_BreakSt> &other) { return any.type == &__jule_any_type56 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type57{.dealloc=__jule_type_deallocator93, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type57_compare(const jule::Any &any, const jule::Ptr<_1e5d3e2ca_RetSt> &other) { return any.type == &__jule_any_type57 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type58{.dealloc=__jule_type_deallocator94, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type58_compare(const jule::Any &any, const jule::Ptr<_1e5cb50a8_ScopeTree> &other) { return any.type == &__jule_any_type58 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type59{.dealloc=__jule_type_deallocator95, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type59_compare(const jule::Any &any, const jule::Ptr<_1e5ca93bb_Expr> &other) { return any.type == &__jule_any_type59 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type60{.dealloc=__jule_type_deallocator96, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type60_compare(const jule::Any &any, const jule::Ptr<_1e5cbb367_Conditional> &other) { return any.type == &__jule_any_type60 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type61{.dealloc=__jule_type_deallocator97, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type61_compare(const jule::Any &any, const jule::Ptr<_1e5cb8a4b_Iter> &other) { return any.type == &__jule_any_type61 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type62{.dealloc=__jule_type_deallocator98, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type62_compare(const jule::Any &any, const jule::Ptr<_1e5cba531_ContSt> &other) { return any.type == &__jule_any_type62 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type63{.dealloc=__jule_type_deallocator99, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type63_compare(const jule::Any &any, const jule::Ptr<_1e5cb266b_LabelSt> &other) { return any.type == &__jule_any_type63 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type64{.dealloc=__jule_type_deallocator100, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type64_compare(const jule::Any &any, const jule::Ptr<_1e5cb2a45_GotoSt> &other) { return any.type == &__jule_any_type64 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type65{.dealloc=__jule_type_deallocator101, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type65_compare(const jule::Any &any, const jule::Ptr<_1e5cb3a35_AssignSt> &other) { return any.type == &__jule_any_type65 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type66{.dealloc=__jule_type_deallocator102, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type66_compare(const jule::Any &any, const jule::Ptr<_1e5cbc874_MatchCase> &other) { return any.type == &__jule_any_type66 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type67{.dealloc=__jule_type_deallocator103, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type67_compare(const jule::Any &any, const jule::Ptr<_1e5cb2d42_FallSt> &other) { return any.type == &__jule_any_type67 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type68{.dealloc=__jule_type_deallocator104, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type68_compare(const jule::Any &any, const jule::Ptr<_1e5cba157_BreakSt> &other) { return any.type == &__jule_any_type68 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type69{.dealloc=__jule_type_deallocator105, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type69_compare(const jule::Any &any, const jule::Ptr<_1e5cb82cb_RetSt> &other) { return any.type == &__jule_any_type69 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type70{.dealloc=__jule_type_deallocator106, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type70_compare(const jule::Any &any, const jule::Ptr<_1e5ca9c90_UseExpr> &other) { return any.type == &__jule_any_type70 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type71{.dealloc=__jule_type_deallocator107, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type71_compare(const jule::Any &any, const jule::Ptr<_1e5ca7353_ArrTypeDecl> &other) { return any.type == &__jule_any_type71 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type72{.dealloc=__jule_type_deallocator108, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type72_compare(const jule::Any &any, const jule::Ptr<_1e5ca64b7_SlcTypeDecl> &other) { return any.type == &__jule_any_type72 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type73{.dealloc=__jule_type_deallocator109, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type73_compare(const jule::Any &any, const jule::Ptr<_1e5ca6ab1_PtrTypeDecl> &other) { return any.type == &__jule_any_type73 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type74{.dealloc=__jule_type_deallocator110, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type74_compare(const jule::Any &any, const jule::Ptr<_1e5ca6132_SptrTypeDecl> &other) { return any.type == &__jule_any_type74 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type75{.dealloc=__jule_type_deallocator111, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type75_compare(const jule::Any &any, const jule::Ptr<_1e5ca7aa1_MapTypeDecl> &other) { return any.type == &__jule_any_type75 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type76{.dealloc=__jule_type_deallocator112, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type76_compare(const jule::Any &any, const jule::Ptr<_1e5ca67b4_TupleTypeDecl> &other) { return any.type == &__jule_any_type76 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type77{.dealloc=__jule_type_deallocator113, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type77_compare(const jule::Any &any, const jule::Ptr<_1e5ca5692_IdentTypeDecl> &other) { return any.type == &__jule_any_type77 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type78{.dealloc=__jule_type_deallocator114, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type78_compare(const jule::Any &any, const jule::Ptr<_1e5cab852_VariadicExpr> &other) { return any.type == &__jule_any_type78 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type79{.dealloc=__jule_type_deallocator115, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type79_compare(const jule::Any &any, const jule::Ptr<_1e5cd520a_SliceExprModel> &other) { return any.type == &__jule_any_type79 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type80{.dealloc=__jule_type_deallocator116, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type80_compare(const jule::Any &any, const jule::Ptr<_1e5cadada_FieldExprPair> &other) { return any.type == &__jule_any_type80 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type81{.dealloc=__jule_type_deallocator117, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type81_compare(const jule::Any &any, const jule::Ptr<_1e5cb01e6_KeyValPair> &other) { return any.type == &__jule_any_type81 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type82{.dealloc=__jule_type_deallocator118, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type82_compare(const jule::Any &any, const jule::Ptr<_1e5ca9eb0_TupleExpr> &other) { return any.type == &__jule_any_type82 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type83{.dealloc=__jule_type_deallocator119, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type83_compare(const jule::Any &any, const jule::Ptr<_1e5cd843e_TupleExprModel> &other) { return any.type == &__jule_any_type83 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type84{.dealloc=__jule_type_deallocator120, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type84_compare(const jule::Any &any, const jule::Ptr<_1e5cad0e5_FnCallExpr> &other) { return any.type == &__jule_any_type84 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type85{.dealloc=__jule_type_deallocator121, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type85_compare(const jule::Any &any, const jule::Ptr<_1e5cdbc39_RuneExprModel> &other) { return any.type == &__jule_any_type85 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type86{.dealloc=__jule_type_deallocator22, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type86_compare(const jule::Any &any, const jule::Ptr<_1e5e417ea_TypeKind> &other) { return any.type == &__jule_any_type86 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type87{.dealloc=__jule_type_deallocator122, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type87_compare(const jule::Any &any, const jule::Ptr<_1e5cd8142_ArrayExprModel> &other) { return any.type == &__jule_any_type87 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type88{.dealloc=__jule_type_deallocator123, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type88_compare(const jule::Any &any, const jule::Ptr<_1e5cac4ce_SubIdentExpr> &other) { return any.type == &__jule_any_type88 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type89{.dealloc=__jule_type_deallocator124, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type89_compare(const jule::Any &any, const jule::Ptr<_1e5ca595b_SubIdentTypeDecl> &other) { return any.type == &__jule_any_type89 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type90{.dealloc=__jule_type_deallocator125, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type90_compare(const jule::Any &any, const jule::Ptr<_1e5cab478_UnaryExpr> &other) { return any.type == &__jule_any_type90 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type91{.dealloc=__jule_type_deallocator126, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type91_compare(const jule::Any &any, const jule::Ptr<_1e5ca5087_TypeDecl> &other) { return any.type == &__jule_any_type91 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type92{.dealloc=__jule_type_deallocator127, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type92_compare(const jule::Any &any, const jule::Ptr<_1e5cac105_NsSelectionExpr> &other) { return any.type == &__jule_any_type92 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type93{.dealloc=__jule_type_deallocator128, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type93_compare(const jule::Any &any, const jule::Ptr<_1e5ca5d35_NamespaceTypeDecl> &other) { return any.type == &__jule_any_type93 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type94{.dealloc=__jule_type_deallocator129, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type94_compare(const jule::Any &any, const jule::Ptr<_1e5cd699d_SlicingExprModel> &other) { return any.type == &__jule_any_type94 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type95{.dealloc=__jule_type_deallocator130, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type95_compare(const jule::Any &any, const jule::Ptr<_1e5cd447e_CastingExprModel> &other) { return any.type == &__jule_any_type95 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type96{.dealloc=__jule_type_deallocator131, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type96_compare(const jule::Any &any, const jule::Ptr<_1e5cb0922_SliceExpr> &other) { return any.type == &__jule_any_type96 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type97{.dealloc=__jule_type_deallocator132, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type97_compare(const jule::Any &any, const jule::Ptr<_1e5cd3aee_StructLitExprModel> &other) { return any.type == &__jule_any_type97 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type98{.dealloc=__jule_type_deallocator133, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type98_compare(const jule::Any &any, const jule::Ptr<_1e5cd7c68_StructStaticIdentExprModel> &other) { return any.type == &__jule_any_type98 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type99{.dealloc=__jule_type_deallocator134, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type99_compare(const jule::Any &any, const jule::Ptr<_1e5cd7031_TraitSubIdentExprModel> &other) { return any.type == &__jule_any_type99 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type100{.dealloc=__jule_type_deallocator135, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type100_compare(const jule::Any &any, const jule::Ptr<_1e5cd78c2_StructSubIdentExprModel> &other) { return any.type == &__jule_any_type100 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type101{.dealloc=__jule_type_deallocator136, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type101_compare(const jule::Any &any, const jule::Ptr<_1e5cd641a_MapExprModel> &other) { return any.type == &__jule_any_type101 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type102{.dealloc=__jule_type_deallocator137, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type102_compare(const jule::Any &any, const jule::Ptr<_1e5cd5b67_AnonFnExprModel> &other) { return any.type == &__jule_any_type102 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type103{.dealloc=__jule_type_deallocator138, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type103_compare(const jule::Any &any, const jule::Ptr<_1e5ca9685_RangeExpr> &other) { return any.type == &__jule_any_type103 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type104{.dealloc=__jule_type_deallocator139, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type104_compare(const jule::Any &any, const jule::Ptr<_1e5caa356_LitExpr> &other) { return any.type == &__jule_any_type104 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type105{.dealloc=__jule_type_deallocator140, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type105_compare(const jule::Any &any, const jule::Ptr<_1e5caa730_UnsafeExpr> &other) { return any.type == &__jule_any_type105 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type106{.dealloc=__jule_type_deallocator141, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type106_compare(const jule::Any &any, const jule::Ptr<_1e5cb137e_IndexingExpr> &other) { return any.type == &__jule_any_type106 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type107{.dealloc=__jule_type_deallocator142, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type107_compare(const jule::Any &any, const jule::Ptr<_1e5cb19de_SlicingExpr> &other) { return any.type == &__jule_any_type107 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type108{.dealloc=__jule_type_deallocator143, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type108_compare(const jule::Any &any, const jule::Ptr<_1e5cabc2b_CastExpr> &other) { return any.type == &__jule_any_type108 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type109{.dealloc=__jule_type_deallocator144, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type109_compare(const jule::Any &any, const jule::Ptr<_1e5cae415_StructLit> &other) { return any.type == &__jule_any_type109 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type110{.dealloc=__jule_type_deallocator145, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type110_compare(const jule::Any &any, const jule::Ptr<_1e5cae8bb_BraceLit> &other) { return any.type == &__jule_any_type110 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type111{.dealloc=__jule_type_deallocator146, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type111_compare(const jule::Any &any, const jule::Ptr<_1e5cac985_BinaryExpr> &other) { return any.type == &__jule_any_type111 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type112{.dealloc=__jule_type_deallocator147, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type112_compare(const jule::Any &any, const jule::Ptr<_1e5cd322a_UnaryExprModel> &other) { return any.type == &__jule_any_type112 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type113{.dealloc=__jule_type_deallocator148, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type113_compare(const jule::Any &any, const jule::Ptr<_1e5cd2d51_BinaryExprModel> &other) { return any.type == &__jule_any_type113 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type114{.dealloc=__jule_type_deallocator149, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type114_compare(const jule::Any &any, const jule::Ptr<_1e5cd3deb_AllocStructLitExprModel> &other) { return any.type == &__jule_any_type114 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type115{.dealloc=__jule_type_deallocator150, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type115_compare(const jule::Any &any, const jule::Ptr<_1e5cd90bb_BuiltinNewCallExprModel> &other) { return any.type == &__jule_any_type115 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type116{.dealloc=__jule_type_deallocator151, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type116_compare(const jule::Any &any, const jule::Ptr<_1e5cd994b_BuiltinMakeCallExprModel> &other) { return any.type == &__jule_any_type116 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type117{.dealloc=__jule_type_deallocator152, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type117_compare(const jule::Any &any, const jule::Ptr<_1e5cda122_BuiltinLenCallExprModel> &other) { return any.type == &__jule_any_type117 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type118{.dealloc=__jule_type_deallocator153, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type118_compare(const jule::Any &any, const jule::Ptr<_1e5cda41e_BuiltinCapCallExprModel> &other) { return any.type == &__jule_any_type118 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type119{.dealloc=__jule_type_deallocator154, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type119_compare(const jule::Any &any, const jule::Ptr<_1e5cdb398_SizeofExprModel> &other) { return any.type == &__jule_any_type119 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type120{.dealloc=__jule_type_deallocator155, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type120_compare(const jule::Any &any, const jule::Ptr<_1e5cdba4c_AlignofExprModel> &other) { return any.type == &__jule_any_type120 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type121{.dealloc=__jule_type_deallocator156, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type121_compare(const jule::Any &any, const jule::Ptr<_1e6036a22_ExceptionalForwardingExprModel> &other) { return any.type == &__jule_any_type121 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type122{.dealloc=__jule_type_deallocator157, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type122_compare(const jule::Any &any, const jule::Ptr<_1e603941a_StrRuneIter> &other) { return any.type == &__jule_any_type122 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type123{.dealloc=__jule_type_deallocator158, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type123_compare(const jule::Any &any, const jule::Ptr<_1e603810b_MutSlicingExprModel> &other) { return any.type == &__jule_any_type123 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type124{.dealloc=__jule_type_deallocator159, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type124_compare(const jule::Any &any, const jule::Ptr<_1e6038b67_PushToSliceExprModel> &other) { return any.type == &__jule_any_type124 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type125{.dealloc=__jule_type_deallocator160, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type125_compare(const jule::Any &any, const jule::Ptr<_1e6039041_AppendToSliceExprModel> &other) { return any.type == &__jule_any_type125 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type126{.dealloc=__jule_type_deallocator161, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type126_compare(const jule::Any &any, const jule::Ptr<_1e6036da7_SwapExprModel> &other) { return any.type == &__jule_any_type126 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type127{.dealloc=__jule_type_deallocator162, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type127_compare(const jule::Any &any, const jule::Ptr<_1e6037281_EmptyCompareExprModel> &other) { return any.type == &__jule_any_type127 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type128{.dealloc=__jule_type_deallocator163, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type128_compare(const jule::Any &any, const jule::Ptr<_1e6037a78_StrCompExprModel> &other) { return any.type == &__jule_any_type128 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type129{.dealloc=__jule_type_deallocator164, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type129_compare(const jule::Any &any, const jule::Ptr<_1e6038408_UnsafeBinaryExprModel> &other) { return any.type == &__jule_any_type129 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type130{.dealloc=__jule_type_deallocator165, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type130_compare(const jule::Any &any, const jule::Ptr<_1e6039717_UnsafeDerefExprModel> &other) { return any.type == &__jule_any_type130 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type131{.dealloc=__jule_type_deallocator166, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type131_compare(const jule::Any &any, const jule::Ptr<_1e6037605_RefExprModel> &other) { return any.type == &__jule_any_type131 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type132{.dealloc=__jule_type_deallocator167, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type132_compare(const jule::Any &any, const jule::Ptr<_1e5cd3758_StructArgExprModel> &other) { return any.type == &__jule_any_type132 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type133{.dealloc=__jule_type_deallocator168, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type133_compare(const jule::Any &any, const jule::Ptr<_1e6039a14_UnsafeCastingExprModel> &other) { return any.type == &__jule_any_type133 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type134{.dealloc=__jule_type_deallocator169, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type134_compare(const jule::Any &any, const jule::Ptr<_1e603878d_UnsafeIndexingExprModel> &other) { return any.type == &__jule_any_type134 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type135{.dealloc=__jule_type_deallocator45, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type135_compare(const jule::Any &any, const jule::Ptr<jule::Str> &other) { return any.type == &__jule_any_type135 && __jule_ptrEqual(any.data.alloc, other.alloc); }
jule::Bool __jule_any_type136_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U8*>(alloc) == *reinterpret_cast<jule::U8*>(other)); }
jule::Str __jule_any_type136_to_str(void *alloc) noexcept { return _1c8d7d07d_toStr(*reinterpret_cast<const jule::U8*>(alloc)); }
struct jule::Any::Type __jule_any_type136{.dealloc=__jule_type_deallocator170, .eq=__jule_any_type136_eq, .to_str=__jule_any_type136_to_str};
jule::Bool __jule_any_type136_compare(const jule::Any &any, const jule::U8 &other) { return any.type == &__jule_any_type136 && __jule_any_type136_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type137_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::F32*>(alloc) == *reinterpret_cast<jule::F32*>(other)); }
jule::Str __jule_any_type137_to_str(void *alloc) noexcept { return _1c8d88231_toStr(*reinterpret_cast<const jule::F32*>(alloc)); }
struct jule::Any::Type __jule_any_type137{.dealloc=__jule_type_deallocator171, .eq=__jule_any_type137_eq, .to_str=__jule_any_type137_to_str};
jule::Bool __jule_any_type137_compare(const jule::Any &any, const jule::F32 &other) { return any.type == &__jule_any_type137 && __jule_any_type137_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type138_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I8*>(alloc) == *reinterpret_cast<jule::I8*>(other)); }
jule::Str __jule_any_type138_to_str(void *alloc) noexcept { return _1c8d6e954_toStr(*reinterpret_cast<const jule::I8*>(alloc)); }
struct jule::Any::Type __jule_any_type138{.dealloc=__jule_type_deallocator172, .eq=__jule_any_type138_eq, .to_str=__jule_any_type138_to_str};
jule::Bool __jule_any_type138_compare(const jule::Any &any, const jule::I8 &other) { return any.type == &__jule_any_type138 && __jule_any_type138_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type139_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I16*>(alloc) == *reinterpret_cast<jule::I16*>(other)); }
jule::Str __jule_any_type139_to_str(void *alloc) noexcept { return _1c8d6c688_toStr(*reinterpret_cast<const jule::I16*>(alloc)); }
struct jule::Any::Type __jule_any_type139{.dealloc=__jule_type_deallocator173, .eq=__jule_any_type139_eq, .to_str=__jule_any_type139_to_str};
jule::Bool __jule_any_type139_compare(const jule::Any &any, const jule::I16 &other) { return any.type == &__jule_any_type139 && __jule_any_type139_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type140_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U16*>(alloc) == *reinterpret_cast<jule::U16*>(other)); }
jule::Str __jule_any_type140_to_str(void *alloc) noexcept { return _1c8d804c0_toStr(*reinterpret_cast<const jule::U16*>(alloc)); }
struct jule::Any::Type __jule_any_type140{.dealloc=__jule_type_deallocator174, .eq=__jule_any_type140_eq, .to_str=__jule_any_type140_to_str};
jule::Bool __jule_any_type140_compare(const jule::Any &any, const jule::U16 &other) { return any.type == &__jule_any_type140 && __jule_any_type140_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type141_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U32*>(alloc) == *reinterpret_cast<jule::U32*>(other)); }
jule::Str __jule_any_type141_to_str(void *alloc) noexcept { return _1c8d82912_toStr(*reinterpret_cast<const jule::U32*>(alloc)); }
struct jule::Any::Type __jule_any_type141{.dealloc=__jule_type_deallocator175, .eq=__jule_any_type141_eq, .to_str=__jule_any_type141_to_str};
jule::Bool __jule_any_type141_compare(const jule::Any &any, const jule::U32 &other) { return any.type == &__jule_any_type141 && __jule_any_type141_eq(any.data.alloc, (void*)&other); }
inline jule::Bool __jule_anon1ca65449b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5ce22b1_ParamIns> _25021_p1, jule::Ptr<_1e5ce22b1_ParamIns> _25036_p2);
struct __jule_anon_1ca6ad9cd_ctx{
	jule::Ptr<_1e5d5b2e7_ImportInfo> *_49828_pkg;
};
static void __jule_anon_1ca6ad9cd_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ca6ad9cd_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1ca6ad9cd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5d5b2e7_ImportInfo> _49935_spkg);
struct __jule_anon_1ca730038_ctx{
	jule::Ptr<_1e5d0b264_comptimeStructField> _self_;
};
static void __jule_anon_1ca730038_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ca730038_ctx>().dealloc(); }
inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca730038(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _6521_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _6536_fc, jule::Ptr<_1e5e08c13_Data>* );
struct __jule_anon_1ca731eb3_ctx{
	jule::Ptr<_1e5d0b264_comptimeStructField> _self_;
};
static void __jule_anon_1ca731eb3_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ca731eb3_ctx>().dealloc(); }
inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca731eb3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _7221_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _7236_fc, jule::Ptr<_1e5e08c13_Data>* );
struct __jule_anon_1ca7488e2_ctx{
	jule::Ptr<_1e5d0e487_comptimeStatic> _self_;
};
static void __jule_anon_1ca7488e2_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ca7488e2_ctx>().dealloc(); }
inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca7488e2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _17821_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _17836_fc, jule::Ptr<_1e5e08c13_Data>* );
struct __jule_anon_1ca74a86c_ctx{
	jule::Ptr<_1e5d0e487_comptimeStatic> _self_;
};
static void __jule_anon_1ca74a86c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ca74a86c_ctx>().dealloc(); }
inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca74a86c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _18521_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _18536_fc, jule::Ptr<_1e5e08c13_Data>* );
struct __jule_anon_1ca75bcce_ctx{
	jule::Ptr<_1e5d126aa_comptimeEnumField> _self_;
};
static void __jule_anon_1ca75bcce_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ca75bcce_ctx>().dealloc(); }
inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca75bcce(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _28321_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _28336_fc, jule::Ptr<_1e5e08c13_Data>* );
struct __jule_anon_1ca77360e_ctx{
	jule::Ptr<_1e5d154c1_comptimeParam> _self_;
};
static void __jule_anon_1ca77360e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ca77360e_ctx>().dealloc(); }
inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca77360e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _40221_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _40236_fc, jule::Ptr<_1e5e08c13_Data>* );
struct __jule_anon_1ca775589_ctx{
	jule::Ptr<_1e5d154c1_comptimeParam> _self_;
};
static void __jule_anon_1ca775589_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ca775589_ctx>().dealloc(); }
inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca775589(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _40921_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _40936_fc, jule::Ptr<_1e5e08c13_Data>* );
struct __jule_anon_1ca777514_ctx{
	jule::Ptr<_1e5d154c1_comptimeParam> _self_;
};
static void __jule_anon_1ca777514_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ca777514_ctx>().dealloc(); }
inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca777514(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _41621_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _41636_fc, jule::Ptr<_1e5e08c13_Data>* );
struct __jule_anon_1ca824e74_ctx{
	jule::Ptr<_1e5d1a608_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ca824e74_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ca824e74_ctx>().dealloc(); }
inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca824e74(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _97421_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _97436_fc, jule::Ptr<_1e5e08c13_Data>* );
struct __jule_anon_1ca826dee_ctx{
	jule::Ptr<_1e5d1a608_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ca826dee_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ca826dee_ctx>().dealloc(); }
inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca826dee(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _98121_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _98136_fc, jule::Ptr<_1e5e08c13_Data>* );
struct __jule_anon_1ca828d79_ctx{
	jule::Ptr<_1e5d1a608_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ca828d79_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ca828d79_ctx>().dealloc(); }
inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca828d79(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _98821_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _98836_fc, jule::Ptr<_1e5e08c13_Data>* );
struct __jule_anon_1ca82ad04_ctx{
	jule::Ptr<_1e5d1a608_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ca82ad04_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ca82ad04_ctx>().dealloc(); }
inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca82ad04(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _99521_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _99536_fc, jule::Ptr<_1e5e08c13_Data>* );
struct __jule_anon_1ca82cc7e_ctx{
	jule::Ptr<_1e5d1a608_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ca82cc7e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ca82cc7e_ctx>().dealloc(); }
inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca82cc7e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _100221_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _100236_fc, jule::Ptr<_1e5e08c13_Data>* );
struct __jule_anon_1ca82ec09_ctx{
	jule::Ptr<_1e5d1a608_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ca82ec09_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ca82ec09_ctx>().dealloc(); }
inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca82ec09(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _100921_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _100936_fc, jule::Ptr<_1e5e08c13_Data>* );
struct __jule_anon_1ca831b84_ctx{
	jule::Ptr<_1e5d1a608_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ca831b84_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ca831b84_ctx>().dealloc(); }
inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca831b84(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _101621_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _101636_fc, jule::Ptr<_1e5e08c13_Data>* );
struct __jule_anon_1ca833b0e_ctx{
	jule::Ptr<_1e5d1a608_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ca833b0e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ca833b0e_ctx>().dealloc(); }
inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca833b0e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _102321_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _102336_fc, jule::Ptr<_1e5e08c13_Data>* );
struct __jule_anon_1ca835bcc_ctx{
	jule::Ptr<_1e5d1a608_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ca835bcc_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ca835bcc_ctx>().dealloc(); }
inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca835bcc(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _103021_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _103036_fc, jule::Ptr<_1e5e08c13_Data>* );
struct __jule_anon_1ca837b57_ctx{
	jule::Ptr<_1e5d1a608_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ca837b57_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ca837b57_ctx>().dealloc(); }
inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca837b57(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _103721_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _103736_fc, jule::Ptr<_1e5e08c13_Data>* );
struct __jule_anon_1ca839ad2_ctx{
	jule::Ptr<_1e5d1a608_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ca839ad2_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ca839ad2_ctx>().dealloc(); }
inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca839ad2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _104421_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _104436_fc, jule::Ptr<_1e5e08c13_Data>* );
struct __jule_anon_1ca83ba5c_ctx{
	jule::Ptr<_1e5d1a608_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ca83ba5c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ca83ba5c_ctx>().dealloc(); }
inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca83ba5c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _105121_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _105136_fc, jule::Ptr<_1e5e08c13_Data>* );
struct __jule_anon_1ca83d9d7_ctx{
	jule::Ptr<_1e5d1a608_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ca83d9d7_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ca83d9d7_ctx>().dealloc(); }
inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca83d9d7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _105821_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _105836_fc, jule::Ptr<_1e5e08c13_Data>* );
struct __jule_anon_1ca840962_ctx{
	jule::Ptr<_1e5d1a608_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ca840962_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ca840962_ctx>().dealloc(); }
inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca840962(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _106521_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _106536_fc, jule::Ptr<_1e5e08c13_Data>* );
struct __jule_anon_1ca8428dc_ctx{
	jule::Ptr<_1e5d1a608_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ca8428dc_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ca8428dc_ctx>().dealloc(); }
inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca8428dc(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _107221_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _107236_fc, jule::Ptr<_1e5e08c13_Data>* );
struct __jule_anon_1ca844867_ctx{
	jule::Ptr<_1e5d1a608_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ca844867_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ca844867_ctx>().dealloc(); }
inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca844867(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _107921_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _107936_fc, jule::Ptr<_1e5e08c13_Data>* );
struct __jule_anon_1ca8467e2_ctx{
	jule::Ptr<_1e5d1a608_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ca8467e2_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ca8467e2_ctx>().dealloc(); }
inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca8467e2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _108621_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _108636_fc, jule::Ptr<_1e5e08c13_Data>* );
struct __jule_anon_1ca84876c_ctx{
	jule::Ptr<_1e5d1a608_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ca84876c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ca84876c_ctx>().dealloc(); }
inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca84876c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _109321_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _109336_fc, jule::Ptr<_1e5e08c13_Data>* );
struct __jule_anon_1ca84a6e7_ctx{
	jule::Ptr<_1e5d1a608_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ca84a6e7_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ca84a6e7_ctx>().dealloc(); }
inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca84a6e7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _110021_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _110036_fc, jule::Ptr<_1e5e08c13_Data>* );
struct __jule_anon_1ca8769cb_ctx{
	jule::Ptr<_1e5d2170d_comptimeValue> _self_;
};
static void __jule_anon_1ca8769cb_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ca8769cb_ctx>().dealloc(); }
inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca8769cb(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _126221_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _126236_fc, jule::Ptr<_1e5e08c13_Data>* );
struct __jule_anon_1ca878956_ctx{
	jule::Ptr<_1e5d2170d_comptimeValue> _self_;
};
static void __jule_anon_1ca878956_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ca878956_ctx>().dealloc(); }
inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca878956(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _126921_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _126936_fc, jule::Ptr<_1e5e08c13_Data>* );
struct __jule_anon_1ca87a8d1_ctx{
	jule::Ptr<_1e5d2170d_comptimeValue> _self_;
};
static void __jule_anon_1ca87a8d1_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ca87a8d1_ctx>().dealloc(); }
inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca87a8d1(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _127621_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _127636_fc, jule::Ptr<_1e5e08c13_Data>* );
struct __jule_anon_1ca87c85b_ctx{
	jule::Ptr<_1e5d2170d_comptimeValue> _self_;
};
static void __jule_anon_1ca87c85b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ca87c85b_ctx>().dealloc(); }
inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca87c85b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _128321_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _128336_fc, jule::Ptr<_1e5e08c13_Data>* );
struct __jule_anon_1ca87e7d6_ctx{
	jule::Ptr<_1e5d2170d_comptimeValue> _self_;
};
static void __jule_anon_1ca87e7d6_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ca87e7d6_ctx>().dealloc(); }
inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca87e7d6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _129021_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _129036_fc, jule::Ptr<_1e5e08c13_Data>* );
struct __jule_anon_1ca881761_ctx{
	jule::Ptr<_1e5d2170d_comptimeValue> _self_;
};
static void __jule_anon_1ca881761_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ca881761_ctx>().dealloc(); }
inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca881761(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _129721_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _129736_fc, jule::Ptr<_1e5e08c13_Data>* );
struct __jule_anon_1ca8836db_ctx{
	jule::Ptr<_1e5d2170d_comptimeValue> _self_;
};
static void __jule_anon_1ca8836db_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ca8836db_ctx>().dealloc(); }
inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca8836db(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _130421_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _130436_fc, jule::Ptr<_1e5e08c13_Data>* );
struct __jule_anon_1ca898404_ctx{
	jule::Ptr<_1e5d25dd8_comptimeFile> _self_;
};
static void __jule_anon_1ca898404_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ca898404_ctx>().dealloc(); }
inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca898404(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _142921_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _142936_fc, jule::Ptr<_1e5e08c13_Data>* );
struct __jule_anon_1ca89a37e_ctx{
	jule::Ptr<_1e5d25dd8_comptimeFile> _self_;
};
static void __jule_anon_1ca89a37e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ca89a37e_ctx>().dealloc(); }
inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca89a37e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _143621_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _143636_fc, jule::Ptr<_1e5e08c13_Data>* );
struct __jule_anon_1ca89c309_ctx{
	jule::Ptr<_1e5d25dd8_comptimeFile> _self_;
};
static void __jule_anon_1ca89c309_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ca89c309_ctx>().dealloc(); }
inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca89c309(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _144321_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _144336_fc, jule::Ptr<_1e5e08c13_Data>* );
struct __jule_anon_1ca913b34_ctx{
	jule::Ptr<_1e5d29cee_comptimeDecl> _self_;
};
static void __jule_anon_1ca913b34_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ca913b34_ctx>().dealloc(); }
inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca913b34(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _194921_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _194936_fc, jule::Ptr<_1e5e08c13_Data>* );
struct __jule_anon_1ca915aae_ctx{
	jule::Ptr<_1e5d29cee_comptimeDecl> _self_;
};
static void __jule_anon_1ca915aae_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ca915aae_ctx>().dealloc(); }
inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca915aae(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _195621_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _195636_fc, jule::Ptr<_1e5e08c13_Data>* );
struct __jule_anon_1ca917a39_ctx{
	jule::Ptr<_1e5d29cee_comptimeDecl> _self_;
};
static void __jule_anon_1ca917a39_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ca917a39_ctx>().dealloc(); }
inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca917a39(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _196321_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _196336_fc, jule::Ptr<_1e5e08c13_Data>* );
struct __jule_anon_1ca9199b4_ctx{
	jule::Ptr<_1e5d29cee_comptimeDecl> _self_;
};
static void __jule_anon_1ca9199b4_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ca9199b4_ctx>().dealloc(); }
inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca9199b4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _197021_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _197036_fc, jule::Ptr<_1e5e08c13_Data>* );
struct __jule_anon_1ca91b93e_ctx{
	jule::Ptr<_1e5d29cee_comptimeDecl> _self_;
};
static void __jule_anon_1ca91b93e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ca91b93e_ctx>().dealloc(); }
inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca91b93e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _197721_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _197736_fc, jule::Ptr<_1e5e08c13_Data>* );
struct __jule_anon_1ca91d8b9_ctx{
	jule::Ptr<_1e5d29cee_comptimeDecl> _self_;
};
static void __jule_anon_1ca91d8b9_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ca91d8b9_ctx>().dealloc(); }
inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca91d8b9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _198421_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _198436_fc, jule::Ptr<_1e5e08c13_Data>* );
struct __jule_anon_1ca920844_ctx{
	jule::Ptr<_1e5d29cee_comptimeDecl> _self_;
};
static void __jule_anon_1ca920844_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ca920844_ctx>().dealloc(); }
inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca920844(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _199121_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _199136_fc, jule::Ptr<_1e5e08c13_Data>* );
struct __jule_anon_1ca9227be_ctx{
	jule::Ptr<_1e5d29cee_comptimeDecl> _self_;
};
static void __jule_anon_1ca9227be_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ca9227be_ctx>().dealloc(); }
inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca9227be(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _199821_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _199836_fc, jule::Ptr<_1e5e08c13_Data>* );
struct __jule_anon_1ca92488c_ctx{
	jule::Ptr<_1e5d29cee_comptimeDecl> _self_;
};
static void __jule_anon_1ca92488c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ca92488c_ctx>().dealloc(); }
inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca92488c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _200521_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _200536_fc, jule::Ptr<_1e5e08c13_Data>* );
struct __jule_anon_1ca926817_ctx{
	jule::Ptr<_1e5d29cee_comptimeDecl> _self_;
};
static void __jule_anon_1ca926817_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ca926817_ctx>().dealloc(); }
inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca926817(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _201221_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _201236_fc, jule::Ptr<_1e5e08c13_Data>* );
struct __jule_anon_1ca928792_ctx{
	jule::Ptr<_1e5d29cee_comptimeDecl> _self_;
};
static void __jule_anon_1ca928792_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ca928792_ctx>().dealloc(); }
inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca928792(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _201921_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _201936_fc, jule::Ptr<_1e5e08c13_Data>* );
struct __jule_anon_1ca934a67_ctx{
	jule::Ptr<_1e5d318a5_constraintChecker> _self_;
};
static void __jule_anon_1ca934a67_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ca934a67_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1ca934a67(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5d7b768_sema>* _6415_sema, jule::Slice<jule::Ptr<_1e5e40a08_TypeAlias>>* _6433_generics);
struct __jule_anon_1cac61646_ctx{
	jule::Ptr<_1e5ce3416_FnIns> _103047_f;
	jule::Slice<jule::Ptr<_1e5cb2292_GenericDecl>> _103111_generics;
	jule::Slice<jule::Ptr<_1e5e417ea_TypeKind>> *_103063_ignored;
};
static void __jule_anon_1cac61646_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1cac61646_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1cac61646(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5d7b768_sema>* _103742_sema);
struct __jule_anon_1cac7961a_ctx{
	jule::Fn<jule::Bool,jule::Ptr<_1e5d7b768_sema>*,jule::Slice<jule::Ptr<_1e5e40a08_TypeAlias>>*> _113346_algo;
	jule::Slice<jule::Ptr<_1e5e40a08_TypeAlias>> _11387_generics;
};
static void __jule_anon_1cac7961a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1cac7961a_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1cac7961a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5d7b768_sema>* _114042_sema);
struct __jule_anon_1cac7de05_ctx{
	jule::Ptr<_1e5ce3416_FnIns> _115237_f;
	jule::Ptr<_1e5d7b768_sema> _self_;
};
static void __jule_anon_1cac7de05_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1cac7de05_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1cac7de05(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5d7b768_sema>* _115637_sema, jule::Slice<jule::Ptr<_1e5e40a08_TypeAlias>>* _115655_generics);
struct __jule_anon_1cb43c6b2_ctx{
	jule::Ptr<_1e5cac105_NsSelectionExpr> _191635_s;
	jule::Str _19173_path;
};
static void __jule_anon_1cb43c6b2_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1cb43c6b2_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1cb43c6b2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5d5b2e7_ImportInfo> _191843_imp);
inline jule::Str __jule_anon1cb76a061(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _87319_def);
struct __jule_anon_1cb7eecb6_ctx{
	jule::Ptr<_1e5ca5d35_NamespaceTypeDecl> _155836_decl;
	jule::Str _15593_path;
};
static void __jule_anon_1cb7eecb6_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1cb7eecb6_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1cb7eecb6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5d5b2e7_ImportInfo> _156043_imp);
struct __jule_anon_1cbeabd8a_ctx{
	jule::Ptr<_1c7edc199_ObjectDeadCode> _self_;
};
static void __jule_anon_1cbeabd8a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1cbeabd8a_ctx>().dealloc(); }
inline void __jule_anon_1cbeabd8a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e03548_SymbolTable>* _22131_file);
struct __jule_anon_1cc014e59_ctx{
	_1c7ee5966_exprDeadCode *_self_;
};
static void __jule_anon_1cc014e59_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1cc014e59_ctx>().dealloc(); }
inline void __jule_anon_1cc014e59(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _2636_expr);
struct __jule_anon_1cc1bbd14_ctx{
	_1e6a1715b_exprOptimizer *_self_;
};
static void __jule_anon_1cc1bbd14_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1cc1bbd14_ctx>().dealloc(); }
inline void __jule_anon_1cc1bbd14(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _56447_m);
struct __jule_anon_1cc39cdb3_ctx{
	jule::Ptr<_1c899847e_scopeCoder> _self_;
	jule::Bool _1377_ref;
};
static void __jule_anon_1cc39cdb3_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1cc39cdb3_ctx>().dealloc(); }
inline void __jule_anon_1cc39cdb3(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1cc3a18bc_ctx{
	jule::Ptr<_1c899847e_scopeCoder> _self_;
	jule::Ptr<_1e5d3a31a_RangeIter> *_12936_it;
};
static void __jule_anon_1cc3a18bc_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1cc3a18bc_ctx>().dealloc(); }
inline void __jule_anon_1cc3a18bc(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1cc3c1ea3_ctx{
	jule::Ptr<_1c899847e_scopeCoder> _self_;
};
static void __jule_anon_1cc3c1ea3_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1cc3c1ea3_ctx>().dealloc(); }
inline void __jule_anon_1cc3c1ea3(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1cc3c448e_ctx{
	jule::Ptr<_1c899847e_scopeCoder> _self_;
};
static void __jule_anon_1cc3c448e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1cc3c448e_ctx>().dealloc(); }
inline void __jule_anon_1cc3c448e(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1cc3dd453_ctx{
	jule::Ptr<_1c899847e_scopeCoder> _self_;
};
static void __jule_anon_1cc3dd453_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1cc3dd453_ctx>().dealloc(); }
inline void __jule_anon_1cc3dd453(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1cc47ce71_ctx{
	jule::Ptr<_1c899847e_scopeCoder> _self_;
};
static void __jule_anon_1cc47ce71_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1cc47ce71_ctx>().dealloc(); }
inline void __jule_anon_1cc47ce71(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1cc47e2a2_ctx{
	jule::Ptr<_1c899847e_scopeCoder> _self_;
	jule::Ptr<_1e5d3cc13_Match> _77630_m;
};
static void __jule_anon_1cc47e2a2_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1cc47e2a2_ctx>().dealloc(); }
inline void __jule_anon_1cc47e2a2(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1cc4eeb6e_ctx{
	jule::Ptr<_1c899847e_scopeCoder> _self_;
	jule::Ptr<_1e5cd5b67_AnonFnExprModel> _114634_m;
};
static void __jule_anon_1cc4eeb6e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1cc4eeb6e_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1cc4eeb6e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5da0bcc_Var> _115267_v);
struct __jule_anon_1cc8906a2_ctx{
	jule::Ptr<_1c8a7d92c_ObjectCoder> _self_;
};
static void __jule_anon_1cc8906a2_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1cc8906a2_ctx>().dealloc(); }
inline void __jule_anon_1cc8906a2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5d5e21d_Package>* _88638_pkg);
struct __jule_anon_1cc891b7b_ctx{
	jule::Ptr<_1c8a7d92c_ObjectCoder> _self_;
};
static void __jule_anon_1cc891b7b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1cc891b7b_ctx>().dealloc(); }
inline void __jule_anon_1cc891b7b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5ce0358_Fn>* _89936_m);
struct __jule_anon_1cc8972e1_ctx{
	jule::Ptr<_1c8a7d92c_ObjectCoder> _self_;
};
static void __jule_anon_1cc8972e1_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1cc8972e1_ctx>().dealloc(); }
inline void __jule_anon_1cc8972e1(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5d5e21d_Package>* _91238_pkg);
struct __jule_anon_1cc8a7994_ctx{
	jule::Ptr<_1c8a7d92c_ObjectCoder> _self_;
	jule::Ptr<_1e5da0bcc_Var> _97924_v;
};
static void __jule_anon_1cc8a7994_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1cc8a7994_ctx>().dealloc(); }
inline void __jule_anon_1cc8a7994(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1cc8a9a84_ctx{
	jule::Ptr<_1c8a7d92c_ObjectCoder> _self_;
	jule::Ptr<_1e5da0bcc_Var> _97924_v;
};
static void __jule_anon_1cc8a9a84_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1cc8a9a84_ctx>().dealloc(); }
inline void __jule_anon_1cc8a9a84(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1cc8ac290_ctx{
	jule::Ptr<_1c8a7d92c_ObjectCoder> _self_;
};
static void __jule_anon_1cc8ac290_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1cc8ac290_ctx>().dealloc(); }
inline void __jule_anon_1cc8ac290(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1cc8ad439_ctx{
	jule::Ptr<_1c8a7d92c_ObjectCoder> _self_;
	jule::Ptr<_1e5da0bcc_Var> _97924_v;
};
static void __jule_anon_1cc8ad439_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1cc8ad439_ctx>().dealloc(); }
inline void __jule_anon_1cc8ad439(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1cc8cb600_ctx{
	jule::Ptr<_1c8a7d92c_ObjectCoder> _self_;
};
static void __jule_anon_1cc8cb600_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1cc8cb600_ctx>().dealloc(); }
inline void __jule_anon_1cc8cb600(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5d5e21d_Package>* _112238_pkg);
struct __jule_anon_1cc8cc975_ctx{
	jule::Ptr<_1c8a7d92c_ObjectCoder> _self_;
	jule::Ptr<_1e5cc8c7b_StructIns> _113649_s;
};
static void __jule_anon_1cc8cc975_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1cc8cc975_ctx>().dealloc(); }
inline void __jule_anon_1cc8cc975(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5ce0358_Fn>* _113736_m);
struct __jule_anon_1cc8da301_ctx{
	jule::Ptr<_1c8a7d92c_ObjectCoder> _self_;
};
static void __jule_anon_1cc8da301_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1cc8da301_ctx>().dealloc(); }
inline void __jule_anon_1cc8da301(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5d5e21d_Package>* _117438_pkg);
struct __jule_anon_1cc8ea92c_ctx{
	jule::Ptr<_1c8a7d92c_ObjectCoder> _self_;
};
static void __jule_anon_1cc8ea92c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1cc8ea92c_ctx>().dealloc(); }
inline void __jule_anon_1cc8ea92c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5d5e21d_Package>* _124638_pkg);
struct __jule_anon_1cc8ebe06_ctx{
	jule::Ptr<_1c8a7d92c_ObjectCoder> _self_;
};
static void __jule_anon_1cc8ebe06_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1cc8ebe06_ctx>().dealloc(); }
inline void __jule_anon_1cc8ebe06(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e03548_SymbolTable>* _126931_file);
struct __jule_anon_1cc908297_ctx{
	jule::Ptr<_1c8a7d92c_ObjectCoder> _self_;
};
static void __jule_anon_1cc908297_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1cc908297_ctx>().dealloc(); }
inline void __jule_anon_1cc908297(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5d5e21d_Package>* _130838_pkg);
inline __jule_tuple_i64__jule_tuple_bool __jule_anon1cc995ce6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _22856_s, jule::I64 _22864_base);
inline __jule_tuple_u64__jule_tuple_bool __jule_anon1cc99d958(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _23657_s, jule::I64 _23665_base);
inline jule::Bool __jule_anon1ca72389a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5d5b2e7_ImportInfo> _203925_pkg);
struct __jule_anon_1cc8915b5_ctx{
	jule::Ptr<_1c8a7d92c_ObjectCoder> _self_;
};
static void __jule_anon_1cc8915b5_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1cc8915b5_ctx>().dealloc(); }
inline void __jule_anon_1cc8915b5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e03548_SymbolTable>* _88732_file);
struct __jule_anon_1cc898204_ctx{
	jule::Ptr<_1c8a7d92c_ObjectCoder> _self_;
};
static void __jule_anon_1cc898204_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1cc898204_ctx>().dealloc(); }
inline void __jule_anon_1cc898204(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e03548_SymbolTable>* _91332_file);
struct __jule_anon_1cc8cc502_ctx{
	jule::Ptr<_1c8a7d92c_ObjectCoder> _self_;
};
static void __jule_anon_1cc8cc502_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1cc8cc502_ctx>().dealloc(); }
inline void __jule_anon_1cc8cc502(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e03548_SymbolTable>* _112332_file);
struct __jule_anon_1cc8db214_ctx{
	jule::Ptr<_1c8a7d92c_ObjectCoder> _self_;
};
static void __jule_anon_1cc8db214_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1cc8db214_ctx>().dealloc(); }
inline void __jule_anon_1cc8db214(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e03548_SymbolTable>* _117532_file);
struct __jule_anon_1cc8eb840_ctx{
	jule::Ptr<_1e5d5e21d_Package> *_124638_pkg;
	jule::Ptr<_1c8a7d92c_ObjectCoder> _self_;
};
static void __jule_anon_1cc8eb840_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1cc8eb840_ctx>().dealloc(); }
inline void __jule_anon_1cc8eb840(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e03548_SymbolTable>* _124732_file);
struct __jule_anon_1cc8ce4e3_ctx{
	jule::Ptr<_1c8a7d92c_ObjectCoder> _self_;
	jule::Ptr<_1e5d03db6_Trait> _112417_t;
};
static void __jule_anon_1cc8ce4e3_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1cc8ce4e3_ctx>().dealloc(); }
inline void __jule_anon_1cc8ce4e3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5ce0358_Fn>* _112839_m);
jule::Array<jule::Array<jule::Str,2>,5> _22586d6ae_HelpMap;
jule::Str _1c8b176ca_OutDir;
jule::Str _1c8b17994_OutName;
jule::Str _1c8b17c4c_Out;
jule::Uintptr _2240883a3_STDIN;
jule::Uintptr _22408864a_STDOUT;
jule::Uintptr _224088947_STDERR;
jule::Array<jule::U8,256> _2241a1422_first;
jule::Array<_2241a19c7_acceptRange,16> _2241a1d6d_acceptRanges;
jule::Array<jule::U8,32> _224315dd3__DE_BRUIJN32_TAB;
jule::Array<jule::U8,64> _224316477__DE_BRUIJN64_TAB;
jule::I64 __jule_argc;
jule::U8** __jule_argv;
jule::U8** __jule_envp;
jule::Ptr<_225692c64_RangeTable> _22563051a__L;
jule::Ptr<_225692c64_RangeTable> _22563142d__LU;
jule::Ptr<_225692c64_RangeTable> _225637412_Letter;
jule::Ptr<_225692c64_RangeTable> _22563d6d2_Upper;
jule::Slice<_225691d0c_CaseRange> _22568adc2__CaseRanges;
jule::Array<jule::U8,256> _22568b1ad__PROPERTIES;
jule::Array<jule::U16,128> _22568ce90_asciiFold;
jule::Slice<_225691812_foldPair> _22568d27b_caseOrbit;
jule::Array<jule::Str,4> _2257784a9_CppHeaderExts;
jule::Array<jule::Str,3> _2256e6b86_CppExts;
jule::Array<jule::Str,1> _225777321_ObjectiveCppExts;
jule::Str _2258644eb_PathStdlib;
jule::Str _22586473d_PathExec;
jule::Str _2258649e6_PathWd;
jule::Str _225864ce3_PathApi;
jule::Str _22586509b_Os;
jule::Str _225865354_Arch;
jule::Str _225869c82_Compiler;
jule::Str _22586b17e_CompilerPath;
jule::Str _22586b38d_CppStd;
jule::Bool _22586b5be_Shadowing;
jule::Bool _22586b877_Transpilation;
jule::Bool _22586bb30_Test;
jule::Bool _22586bdd8_RC;
jule::Bool _22586c2a1_Safety;
jule::Bool _22586c4e3_Production;
_1e217ce36_floatInfo _1e217d332_f32info;
_1e217ce36_floatInfo _1e217d62e_f64info;
jule::Array<jule::Array<jule::U64,2>,696> _1e2186109_detailedPowsOfTen;
jule::Slice<jule::I64> _1e2187e1e_powtab;
jule::Slice<jule::F64> _1e21889d0_f64pow10;
jule::Slice<jule::F32> _1e2188d10_f32pow10;
jule::Array<jule::U64,20> _1e218c066_u64pow10;
jule::Slice<_1e2190d06_leftCheat> _1e2191235_leftCheats;
jule::I64 _1e2197769_BitSize;
jule::Str _1e2197a66_SysInt;
jule::Str _1e2197d1e_SysUint;
jule::Array<jule::I32,5> _1e5be5bcb_Spaces;
jule::Array<jule::U64,6> _1e5be5dda_UnaryOps;
jule::Array<jule::U64,18> _1e5be612c_BinOps;
jule::Array<jule::U64,2> _1e5c890b0_PostfixOps;
jule::Array<jule::U64,11> _1e5c8939b_AssignOps;
jule::Array<_1e5c974b9_kindPair,28> _1e5c978e8_keywords;
jule::Array<_1e5c974b9_kindPair,46> _1e5c97c28_basicOps;
jule::Slice<jule::Str> _1e5d31069_builtinConstraints;
jule::Ptr<_1e5e417ea_TypeKind> _1e602602d_primNil;
jule::Ptr<_1e5e417ea_TypeKind> _1e602632a_primVoid;
jule::Ptr<_1e5e417ea_TypeKind> _1e60265d3_primAny;
jule::Ptr<_1e5e417ea_TypeKind> _1e60268d0_primStr;
jule::Ptr<_1e5e417ea_TypeKind> _1e6026b88_primBool;
jule::Ptr<_1e5e417ea_TypeKind> _1e6026e41_primUintptr;
jule::Ptr<_1e5e417ea_TypeKind> _1e60271e9_primUint;
jule::Ptr<_1e5e417ea_TypeKind> _1e60275b2_primInt;
jule::Ptr<_1e5e417ea_TypeKind> _1e6027804_primI8;
jule::Ptr<_1e5e417ea_TypeKind> _1e6027a9b_primI16;
jule::Ptr<_1e5e417ea_TypeKind> _1e6027d54_primI32;
jule::Ptr<_1e5e417ea_TypeKind> _1e602810c_primI64;
jule::Ptr<_1e5e417ea_TypeKind> _1e60283b5_primU8;
jule::Ptr<_1e5e417ea_TypeKind> _1e602866d_primU16;
jule::Ptr<_1e5e417ea_TypeKind> _1e6028926_primU32;
jule::Ptr<_1e5e417ea_TypeKind> _1e6028e10_primU64;
jule::Ptr<_1e5e417ea_TypeKind> _1e6029152_primF32;
jule::Ptr<_1e5e417ea_TypeKind> _1e6029361_primF64;
jule::Ptr<_1e6a2051b_data> _1e6a1eb25_emptyData;
jule::Bool _1e6a24aa3_Copy;
jule::Bool _1e6a24da0_Deadcode;
jule::Bool _1e6a25158_Append;
jule::Bool _1e6a25455_Math;
jule::Bool _1e6a2570d_Access;
jule::Bool _1e6a259b6_Inline;
jule::Bool _1e6a25c6e_Ptr;
jule::Bool _1e6a26137_Cond;
jule::Bool _1e6a26379_Str;
jule::Bool _1e6a26621_Slice;
jule::Bool _1e6a268c9_Assign;
jule::Bool _1e6a26b82_Exceptional;
jule::Bool _1e6a26e3a_Iter;
jule::Bool _1e6a271e3_Dynamic;
jule::Bool _1c7ee66ae_exprEnabled;
jule::Bool _1c7ee6956_scopeEnabled;
jule::Array<jule::U64,12> _1c8a6ab4a_mdays;
jule::Str _1c8997c20_assignArgName;
jule::Ptr<_1e5e417ea_TypeKind> _1c8a764e6_generalGCPtr;
jule::Slice<_225691d0c_CaseRange> _22568aad6_CaseRanges;


inline jule::Bool _2241a19c7_acceptRange_eq(_2241a19c7_acceptRange *_self_, _2241a19c7_acceptRange _other_) {
	return 
		(_self_->_field_lo == _other_._field_lo) &&
		(_self_->_field_hi == _self_->_field_hi);
}






inline jule::Bool _22420d10a_LittleEndian_eq(_22420d10a_LittleEndian *_self_, _22420d10a_LittleEndian _other_) { return true; }

inline jule::U32 static__22422397d_DecodeU32(jule::Slice<jule::U8> _4522_b) {
	return (((static_cast<jule::U32>(_4522_b[0LL]) | (jule::U32)(static_cast<jule::U32>(_4522_b[1LL]) << 8LLU)) | (jule::U32)(static_cast<jule::U32>(_4522_b[2LL]) << 16LLU)) | (jule::U32)(static_cast<jule::U32>(_4522_b[3LL]) << 24LLU));;
}



inline jule::U64 static__2242243a7_DecodeU64(jule::Slice<jule::U8> _7522_b) {
	return (((((((static_cast<jule::U64>(_7522_b[0LL]) | (jule::U64)(static_cast<jule::U64>(_7522_b[1LL]) << 8LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[2LL]) << 16LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[3LL]) << 24LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[4LL]) << 32LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[5LL]) << 40LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[6LL]) << 48LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[7LL]) << 56LLU));;
}








inline jule::Bool _224227b08_u128_eq(_224227b08_u128 *_self_, _224227b08_u128 _other_) {
	return 
		(_self_->_field_hi == _other_._field_hi) &&
		(_self_->_field_lo == _self_->_field_lo);
}






inline jule::Bool _1cc2684ba_group_eq(_1cc2684ba_group *_self_, _1cc2684ba_group _other_) {
	return 
		_1c8d98395_arrayCmp(_self_->_field_keys.begin(), _other_._field_keys.begin(), 8) &&
		_1cc268c07_arrayCmp(_self_->_field_values.begin(), _self_->_field_values.begin(), 8);
}







inline jule::Ptr<_1cc266177__Map> static__1cc26673d_make(void) {
	return jule::new_ptr<_1cc266177__Map>(_1cc266177__Map{._field_ctrl=jule::Slice<jule::Array<jule::I8,8>>(nullptr), ._field_groups=jule::Slice<_1cc2684ba_group>(nullptr), ._field_resident=0, ._field_dead=0, ._field_limit=0});;
}



inline void _1cc266892_initData(_1cc266177__Map* _self_, jule::I64 _13524_cap) {
	jule::I64 _1363_groups = _224325b6d_numGroups(_13524_cap);;
	(*(_self_))._field_ctrl=({ auto __jule_collection = jule::Slice<jule::Array<jule::I8,8>>::alloc(_1363_groups, _1363_groups); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }); __jule_collection; });
	(*(_self_))._field_groups=({ auto __jule_collection = jule::Slice<_1cc2684ba_group>::alloc(_1363_groups, _1363_groups); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1cc2684ba_group{._field_keys=({ auto __jule_collection = jule::Array<jule::Str,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; }), ._field_values=({ auto __jule_collection = jule::Array<jule::Bool,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = false; __jule_collection; })}; __jule_collection; });
	(*(_self_))._field_limit=({ jule::I64 __jule_x = _1363_groups; jule::I64 __jule_y = 2LLU; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc2859d2:;
		if (it != expr_end) {
			jule::I64 _1407_i = it - expr->begin();
			{
				(*(_self_))._field_ctrl[_1407_i]=_224325d7c_newEmptyMetadata();
			}
			_iter_next_1cc2859d2:;
			++it;
			_1407_i++;
			goto _iter_begin_1cc2859d2;
		}
		_iter_end_1cc2859d2:;
	};
}



inline jule::U64 _1cc2669e6_hash(_1cc266177__Map* _self_, jule::Str _14616_k) {
	jule::Str _1473_bytes = _1c8d69498_toStr(_14616_k);;
	return _22422b07e_hash(_223c7a2b5_StrBytes(_1473_bytes));;
}



inline void _1cc266b4a_rehash(_1cc266177__Map* _self_, jule::I64 _15122_n) {
	if (((*(_self_))._field_groups == nullptr)) {
		_1cc266892_initData(_self_, 8LL);
		return;;
	};
	jule::Slice<_1cc2684ba_group> _1587_groups;
	jule::Slice<jule::Array<jule::I8,8>> _15815_ctrl;
	({
		jule::Slice<_1cc2684ba_group> ___jule_assign_arg = (*(_self_))._field_groups;
		jule::Slice<jule::Array<jule::I8,8>> _1___jule_assign_arg = (*(_self_))._field_ctrl;
		_1587_groups = ___jule_assign_arg;
		_15815_ctrl = _1___jule_assign_arg;
	});
	(*(_self_))._field_groups=({ auto __jule_collection = jule::Slice<_1cc2684ba_group>::alloc(_15122_n, _15122_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1cc2684ba_group{._field_keys=({ auto __jule_collection = jule::Array<jule::Str,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; }), ._field_values=({ auto __jule_collection = jule::Array<jule::Bool,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = false; __jule_collection; })}; __jule_collection; });
	(*(_self_))._field_ctrl=({ auto __jule_collection = jule::Slice<jule::Array<jule::I8,8>>::alloc(_15122_n, _15122_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }); __jule_collection; });
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc2890ce:;
		if (it != expr_end) {
			jule::I64 _1617_i = it - expr->begin();
			{
				(*(_self_))._field_ctrl[_1617_i]=_224325d7c_newEmptyMetadata();
			}
			_iter_next_1cc2890ce:;
			++it;
			_1617_i++;
			goto _iter_begin_1cc2890ce;
		}
		_iter_end_1cc2890ce:;
	};
	(*(_self_))._field_limit=({ jule::I64 __jule_x = _15122_n; jule::I64 __jule_y = 2LLU; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		(*(_self_))._field_resident = ___jule_assign_arg;
		(*(_self_))._field_dead = _1___jule_assign_arg;
	});
	{
		auto expr = &(_15815_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc288c38:;
		if (it != expr_end) {
			jule::I64 _1667_g = it - expr->begin();
			{
				{
					auto expr = &(_15815_ctrl[_1667_g]);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cc28aab4:;
					if (it != expr_end) {
						jule::I64 _1678_s = it - expr->begin();
						{
							jule::I8 _1685_c = _15815_ctrl[_1667_g][_1678_s];;
							if (((_1685_c == -128LL) || (_1685_c == -2LL))) {
								goto _iter_next_1cc28aab4;
							};
							{
								(*(_1cc2671ab_set(_self_, _1587_groups[_1667_g]._field_keys[_1678_s])))=_1587_groups[_1667_g]._field_values[_1678_s];
							};
						}
						_iter_next_1cc28aab4:;
						++it;
						_1678_s++;
						goto _iter_begin_1cc28aab4;
					}
					_iter_end_1cc28aab4:;
				};
			}
			_iter_next_1cc288c38:;
			++it;
			_1667_g++;
			goto _iter_begin_1cc288c38;
		}
		_iter_end_1cc288c38:;
	};
}



inline jule::I64 _1cc266c9e_nextSize(_1cc266177__Map* _self_) {
	jule::I64 __jule_func_result = 0;
	if (((*(_self_))._field_groups == nullptr)) {
		__jule_func_result = 8LL;
		return __jule_func_result;;
	};
	__jule_func_result=((*(_self_))._field_groups.len() << 2LL);
	if (((*(_self_))._field_dead >= ((*(_self_))._field_resident >> 1LL))) {
		__jule_func_result=(*(_self_))._field_groups.len();
	};
	return __jule_func_result;;
}



inline void _1cc266e03_lookup(jule::Ptr<_1cc266177__Map> _self_, jule::Str _19134_k, jule::Bool* _19146_v, jule::Bool* _19159_ok) {
	if (((_self_ == nullptr) || ((*(_self_))._field_groups == nullptr))) {
		if ((_19159_ok != nullptr)) {
			(*(_19159_ok))=false;
		};
		return;;
	};
	jule::U64 _1983_hi;
	jule::I8 _1987_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _224326256_splitHash(_1cc2669e6_hash(_self_.ptr(), _19134_k));
		_1983_hi = __jule_assign_result.__jule_result_arg0;
		_1987_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _1997_g = _224326553_probeStart(_1983_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2018_matches = _224324c05_metaMatchH2((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_1997_g)])), _1987_lo);;
			while ((_2018_matches != 0LLU)) {
				{
					jule::U32 _2035_s = _2243252cc_nextMatch(&(_2018_matches));;
					if ((_19134_k == (*(_self_))._field_groups[static_cast<jule::I64>(_1997_g)]._field_keys[static_cast<jule::I64>(_2035_s)])) {
						if ((_19146_v != nullptr)) {
							(*(_19146_v))=(*(_self_))._field_groups[static_cast<jule::I64>(_1997_g)]._field_values[static_cast<jule::I64>(_2035_s)];
						};
						if ((_19159_ok != nullptr)) {
							(*(_19159_ok))=true;
						};
						return;;
					};
				}
			_iter_next_1cc2922a2:;
			}
			_iter_end_1cc2922a2:;;
			_2018_matches=_224325013_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_1997_g)])));
			if ((_2018_matches != 0LLU)) {
				if ((_19159_ok != nullptr)) {
					(*(_19159_ok))=false;
				};
				return;;
			};
			_1997_g+=1LLU;
			if ((_1997_g >= static_cast<jule::U32>((*(_self_))._field_groups.len()))) {
				_1997_g=0LLU;
			};
		}
	_iter_next_1cc28dea2:;
	}
	_iter_end_1cc28dea2:;;
}



inline jule::Bool _1cc267057_get(jule::Ptr<_1cc266177__Map> _self_, jule::Str _23024_k) {
	jule::Bool _23111_v = false;;
	if ((_self_ != nullptr)) {
		jule::Bool _2338_ok = false;;
		{
			_1cc266e03_lookup(_self_, _23024_k, (&(_23111_v)), (&(_2338_ok)));
		};
	};
	return _23111_v;;
}



inline jule::Bool* _1cc2671ab_set(_1cc266177__Map* _self_, jule::Str _24123_k) {
	jule::Bool* __jule_func_result = nullptr;
	if (((*(_self_))._field_resident >= (*(_self_))._field_limit)) {
		_1cc266b4a_rehash(_self_, _1cc266c9e_nextSize(_self_));
	};
	jule::U64 _2453_hi;
	jule::I8 _2457_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _224326256_splitHash(_1cc2669e6_hash(_self_, _24123_k));
		_2453_hi = __jule_assign_result.__jule_result_arg0;
		_2457_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _2467_g = _224326553_probeStart(_2453_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2488_matches = _224324c05_metaMatchH2((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2467_g)])), _2457_lo);;
			while ((_2488_matches != 0LLU)) {
				{
					jule::U32 _2505_s = _2243252cc_nextMatch(&(_2488_matches));;
					if ((_24123_k == (*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_keys[static_cast<jule::I64>(_2505_s)])) {
						(*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_keys[static_cast<jule::I64>(_2505_s)]=_24123_k;
						__jule_func_result=(&((*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_values[static_cast<jule::I64>(_2505_s)]));
						return __jule_func_result;;
					};
				}
			_iter_next_1cc29a0e0:;
			}
			_iter_end_1cc29a0e0:;;
			_2488_matches=_224325013_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2467_g)])));
			if ((_2488_matches != 0LLU)) {
				jule::U32 _2615_s = _2243252cc_nextMatch(&(_2488_matches));;
				(*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_keys[static_cast<jule::I64>(_2615_s)]=_24123_k;
				__jule_func_result=(&((*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_values[static_cast<jule::I64>(_2615_s)]));
				(*(_self_))._field_ctrl[static_cast<jule::I64>(_2467_g)][static_cast<jule::I64>(_2615_s)]=static_cast<jule::I8>(_2457_lo);
				((*(_self_))._field_resident)++;
				return __jule_func_result;;
			};
			_2467_g+=1LLU;
			if ((_2467_g >= static_cast<jule::U32>((*(_self_))._field_groups.len()))) {
				_2467_g=0LLU;
			};
		}
	_iter_next_1cc299089:;
	}
	_iter_end_1cc299089:;;
}



inline jule::Bool _1cc267310_del(jule::Ptr<_1cc266177__Map> _self_, jule::Str _27624_k) {
	jule::Bool __jule_func_result = false;
	if (((_self_ == nullptr) || ((*(_self_))._field_groups == nullptr))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::U64 _2803_hi;
	jule::I8 _2807_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _224326256_splitHash(_1cc2669e6_hash(_self_.ptr(), _27624_k));
		_2803_hi = __jule_assign_result.__jule_result_arg0;
		_2807_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _2817_g = _224326553_probeStart(_2803_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2838_matches = _224324c05_metaMatchH2((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)])), _2807_lo);;
			while ((_2838_matches != 0LLU)) {
				{
					jule::U32 _2855_s = _2243252cc_nextMatch(&(_2838_matches));;
					if ((_27624_k == (*(_self_))._field_groups[static_cast<jule::I64>(_2817_g)]._field_keys[static_cast<jule::I64>(_2855_s)])) {
						__jule_func_result=true;
						if ((_224325013_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)]))) != 0LLU)) {
							(*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)][static_cast<jule::I64>(_2855_s)]=-128LL;
							((*(_self_))._field_resident)--;
						} else {
							(*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)][static_cast<jule::I64>(_2855_s)]=-2LL;
							((*(_self_))._field_dead)++;
						};
						jule::Str _30214_key;;
						jule::Bool _30314_val = false;;
						(*(_self_))._field_groups[static_cast<jule::I64>(_2817_g)]._field_keys[static_cast<jule::I64>(_2855_s)]=_30214_key;
						(*(_self_))._field_groups[static_cast<jule::I64>(_2817_g)]._field_values[static_cast<jule::I64>(_2855_s)]=_30314_val;
						return __jule_func_result;;
					};
				}
			_iter_next_1cc2a2cc9:;
			}
			_iter_end_1cc2a2cc9:;;
			_2838_matches=_224325013_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)])));
			if ((_2838_matches != 0LLU)) {
				__jule_func_result=false;
				return __jule_func_result;;
			};
			_2817_g+=1LLU;
			if ((_2817_g >= static_cast<jule::U32>((*(_self_))._field_groups.len()))) {
				_2817_g=0LLU;
			};
		}
	_iter_next_1cc2a1a53:;
	}
	_iter_end_1cc2a1a53:;;
}



inline void _1cc267464_clear(jule::Ptr<_1cc266177__Map> _self_) {
	if ((_self_ == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc2a9572:;
		if (it != expr_end) {
			jule::I64 _3287_i = it - expr->begin();
			jule::Array<jule::I8,8> _32810_c = *it;
			{
				{
					auto expr = &(_32810_c);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cc2a9ee0:;
					if (it != expr_end) {
						jule::I64 _3298_j = it - expr->begin();
						{
							(*(_self_))._field_ctrl[_3287_i][_3298_j]=-128LL;
						}
						_iter_next_1cc2a9ee0:;
						++it;
						_3298_j++;
						goto _iter_begin_1cc2a9ee0;
					}
					_iter_end_1cc2a9ee0:;
				};
			}
			_iter_next_1cc2a9572:;
			++it;
			_3287_i++;
			goto _iter_begin_1cc2a9572;
		}
		_iter_end_1cc2a9572:;
	};
	jule::Str _33311_k;;
	jule::Bool _33411_v = false;;
	{
		auto expr = &((*(_self_))._field_groups);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc2a2108:;
		if (it != expr_end) {
			jule::I64 _3357_i = it - expr->begin();
			{
				_1cc2684ba_group* _3368_g = (&((*(_self_))._field_groups[_3357_i]));;
				{
					{
						auto expr = &((*(_3368_g))._field_keys);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1cc2ac641:;
						if (it != expr_end) {
							jule::I64 _3389_j = it - expr->begin();
							{
								(*(_3368_g))._field_keys[_3389_j]=_33311_k;
								(*(_3368_g))._field_values[_3389_j]=_33411_v;
							}
							_iter_next_1cc2ac641:;
							++it;
							_3389_j++;
							goto _iter_begin_1cc2ac641;
						}
						_iter_end_1cc2ac641:;
					};
				};
			}
			_iter_next_1cc2a2108:;
			++it;
			_3357_i++;
			goto _iter_begin_1cc2a2108;
		}
		_iter_end_1cc2a2108:;
	};
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		(*(_self_))._field_resident = ___jule_assign_arg;
		(*(_self_))._field_dead = _1___jule_assign_arg;
	});
}



inline jule::I64 _1cc2675b8_len(jule::Ptr<_1cc266177__Map> _self_) {
	if ((_self_ == nullptr)) {
		return 0LL;;
	};
	return ((*(_self_))._field_resident - (*(_self_))._field_dead);;
}



inline jule::I64 _1cc26771c_cap(_1cc266177__Map* _self_) {
	return ((*(_self_))._field_limit - (*(_self_))._field_resident);;
}



inline _1cc272903_mapIterator _1cc267871_iterator(jule::Ptr<_1cc266177__Map> _self_) {
	_1cc272903_mapIterator _3607_iterator = _1cc272903_mapIterator{._field_m=_self_, ._field_ctrl=jule::Slice<jule::Array<jule::I8,8>>(nullptr), ._field_groups=jule::Slice<_1cc2684ba_group>(nullptr), ._field_n=0, ._field_g=0, ._field_s=0};;
	_1cc272e86_init(&_3607_iterator);
	return _3607_iterator;;
}





inline jule::Ptr<_1cc2b1b84__Map> static__1cc2b21a1_make(void) {
	return jule::new_ptr<_1cc2b1b84__Map>(_1cc2b1b84__Map{._field_ctrl=jule::Slice<jule::Array<jule::I8,8>>(nullptr), ._field_groups=jule::Slice<_1cc2b3cb8_group>(nullptr), ._field_resident=0, ._field_dead=0, ._field_limit=0});;
}



inline void _1cc2b2305_initData(_1cc2b1b84__Map* _self_, jule::I64 _13524_cap) {
	jule::I64 _1363_groups = _224325b6d_numGroups(_13524_cap);;
	(*(_self_))._field_ctrl=({ auto __jule_collection = jule::Slice<jule::Array<jule::I8,8>>::alloc(_1363_groups, _1363_groups); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }); __jule_collection; });
	(*(_self_))._field_groups=({ auto __jule_collection = jule::Slice<_1cc2b3cb8_group>::alloc(_1363_groups, _1363_groups); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1cc2b3cb8_group{._field_keys=({ auto __jule_collection = jule::Array<jule::Ptr<_1e5ce3416_FnIns>,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1e5ce3416_FnIns>(nullptr); __jule_collection; }), ._field_values=({ auto __jule_collection = jule::Array<jule::Slice<jule::Uintptr>,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Slice<jule::Uintptr>(nullptr); __jule_collection; })}; __jule_collection; });
	(*(_self_))._field_limit=({ jule::I64 __jule_x = _1363_groups; jule::I64 __jule_y = 2LLU; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc2ce3cc:;
		if (it != expr_end) {
			jule::I64 _1407_i = it - expr->begin();
			{
				(*(_self_))._field_ctrl[_1407_i]=_224325d7c_newEmptyMetadata();
			}
			_iter_next_1cc2ce3cc:;
			++it;
			_1407_i++;
			goto _iter_begin_1cc2ce3cc;
		}
		_iter_end_1cc2ce3cc:;
	};
}



inline jule::U64 _1cc2b2459_hash(_1cc2b1b84__Map* _self_, jule::Ptr<_1e5ce3416_FnIns> _14616_k) {
	jule::Str _1473_bytes = _1caba6d1c_toStr(_14616_k);;
	return _22422b07e_hash(_223c7a2b5_StrBytes(_1473_bytes));;
}



inline void _1cc2b25ad_rehash(_1cc2b1b84__Map* _self_, jule::I64 _15122_n) {
	if (((*(_self_))._field_groups == nullptr)) {
		_1cc2b2305_initData(_self_, 8LL);
		return;;
	};
	jule::Slice<_1cc2b3cb8_group> _1587_groups;
	jule::Slice<jule::Array<jule::I8,8>> _15815_ctrl;
	({
		jule::Slice<_1cc2b3cb8_group> ___jule_assign_arg = (*(_self_))._field_groups;
		jule::Slice<jule::Array<jule::I8,8>> _1___jule_assign_arg = (*(_self_))._field_ctrl;
		_1587_groups = ___jule_assign_arg;
		_15815_ctrl = _1___jule_assign_arg;
	});
	(*(_self_))._field_groups=({ auto __jule_collection = jule::Slice<_1cc2b3cb8_group>::alloc(_15122_n, _15122_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1cc2b3cb8_group{._field_keys=({ auto __jule_collection = jule::Array<jule::Ptr<_1e5ce3416_FnIns>,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1e5ce3416_FnIns>(nullptr); __jule_collection; }), ._field_values=({ auto __jule_collection = jule::Array<jule::Slice<jule::Uintptr>,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Slice<jule::Uintptr>(nullptr); __jule_collection; })}; __jule_collection; });
	(*(_self_))._field_ctrl=({ auto __jule_collection = jule::Slice<jule::Array<jule::I8,8>>::alloc(_15122_n, _15122_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }); __jule_collection; });
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc2d29c9:;
		if (it != expr_end) {
			jule::I64 _1617_i = it - expr->begin();
			{
				(*(_self_))._field_ctrl[_1617_i]=_224325d7c_newEmptyMetadata();
			}
			_iter_next_1cc2d29c9:;
			++it;
			_1617_i++;
			goto _iter_begin_1cc2d29c9;
		}
		_iter_end_1cc2d29c9:;
	};
	(*(_self_))._field_limit=({ jule::I64 __jule_x = _15122_n; jule::I64 __jule_y = 2LLU; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		(*(_self_))._field_resident = ___jule_assign_arg;
		(*(_self_))._field_dead = _1___jule_assign_arg;
	});
	{
		auto expr = &(_15815_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc2d2633:;
		if (it != expr_end) {
			jule::I64 _1667_g = it - expr->begin();
			{
				{
					auto expr = &(_15815_ctrl[_1667_g]);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cc2d44ae:;
					if (it != expr_end) {
						jule::I64 _1678_s = it - expr->begin();
						{
							jule::I8 _1685_c = _15815_ctrl[_1667_g][_1678_s];;
							if (((_1685_c == -128LL) || (_1685_c == -2LL))) {
								goto _iter_next_1cc2d44ae;
							};
							{
								(*(_1cc2b2b1e_set(_self_, _1587_groups[_1667_g]._field_keys[_1678_s])))=_1587_groups[_1667_g]._field_values[_1678_s];
							};
						}
						_iter_next_1cc2d44ae:;
						++it;
						_1678_s++;
						goto _iter_begin_1cc2d44ae;
					}
					_iter_end_1cc2d44ae:;
				};
			}
			_iter_next_1cc2d2633:;
			++it;
			_1667_g++;
			goto _iter_begin_1cc2d2633;
		}
		_iter_end_1cc2d2633:;
	};
}



inline jule::I64 _1cc2b2712_nextSize(_1cc2b1b84__Map* _self_) {
	jule::I64 __jule_func_result = 0;
	if (((*(_self_))._field_groups == nullptr)) {
		__jule_func_result = 8LL;
		return __jule_func_result;;
	};
	__jule_func_result=((*(_self_))._field_groups.len() << 2LL);
	if (((*(_self_))._field_dead >= ((*(_self_))._field_resident >> 1LL))) {
		__jule_func_result=(*(_self_))._field_groups.len();
	};
	return __jule_func_result;;
}



inline void _1cc2b2866_lookup(jule::Ptr<_1cc2b1b84__Map> _self_, jule::Ptr<_1e5ce3416_FnIns> _19134_k, jule::Slice<jule::Uintptr>* _19146_v, jule::Bool* _19159_ok) {
	if (((_self_ == nullptr) || ((*(_self_))._field_groups == nullptr))) {
		if ((_19159_ok != nullptr)) {
			(*(_19159_ok))=false;
		};
		return;;
	};
	jule::U64 _1983_hi;
	jule::I8 _1987_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _224326256_splitHash(_1cc2b2459_hash(_self_.ptr(), _19134_k));
		_1983_hi = __jule_assign_result.__jule_result_arg0;
		_1987_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _1997_g = _224326553_probeStart(_1983_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2018_matches = _224324c05_metaMatchH2((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_1997_g)])), _1987_lo);;
			while ((_2018_matches != 0LLU)) {
				{
					jule::U32 _2035_s = _2243252cc_nextMatch(&(_2018_matches));;
					if ((_19134_k == (*(_self_))._field_groups[static_cast<jule::I64>(_1997_g)]._field_keys[static_cast<jule::I64>(_2035_s)])) {
						if ((_19146_v != nullptr)) {
							(*(_19146_v))=(*(_self_))._field_groups[static_cast<jule::I64>(_1997_g)]._field_values[static_cast<jule::I64>(_2035_s)];
						};
						if ((_19159_ok != nullptr)) {
							(*(_19159_ok))=true;
						};
						return;;
					};
				}
			_iter_next_1cc2dab9c:;
			}
			_iter_end_1cc2dab9c:;;
			_2018_matches=_224325013_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_1997_g)])));
			if ((_2018_matches != 0LLU)) {
				if ((_19159_ok != nullptr)) {
					(*(_19159_ok))=false;
				};
				return;;
			};
			_1997_g+=1LLU;
			if ((_1997_g >= static_cast<jule::U32>((*(_self_))._field_groups.len()))) {
				_1997_g=0LLU;
			};
		}
	_iter_next_1cc2d789c:;
	}
	_iter_end_1cc2d789c:;;
}



inline jule::Slice<jule::Uintptr> _1cc2b29ba_get(jule::Ptr<_1cc2b1b84__Map> _self_, jule::Ptr<_1e5ce3416_FnIns> _23024_k) {
	jule::Slice<jule::Uintptr> _23111_v;;
	if ((_self_ != nullptr)) {
		jule::Bool _2338_ok = false;;
		{
			_1cc2b2866_lookup(_self_, _23024_k, (&(_23111_v)), (&(_2338_ok)));
		};
	};
	return _23111_v;;
}



inline jule::Slice<jule::Uintptr>* _1cc2b2b1e_set(_1cc2b1b84__Map* _self_, jule::Ptr<_1e5ce3416_FnIns> _24123_k) {
	jule::Slice<jule::Uintptr>* __jule_func_result = nullptr;
	if (((*(_self_))._field_resident >= (*(_self_))._field_limit)) {
		_1cc2b25ad_rehash(_self_, _1cc2b2712_nextSize(_self_));
	};
	jule::U64 _2453_hi;
	jule::I8 _2457_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _224326256_splitHash(_1cc2b2459_hash(_self_, _24123_k));
		_2453_hi = __jule_assign_result.__jule_result_arg0;
		_2457_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _2467_g = _224326553_probeStart(_2453_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2488_matches = _224324c05_metaMatchH2((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2467_g)])), _2457_lo);;
			while ((_2488_matches != 0LLU)) {
				{
					jule::U32 _2505_s = _2243252cc_nextMatch(&(_2488_matches));;
					if ((_24123_k == (*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_keys[static_cast<jule::I64>(_2505_s)])) {
						(*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_keys[static_cast<jule::I64>(_2505_s)]=_24123_k;
						__jule_func_result=(&((*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_values[static_cast<jule::I64>(_2505_s)]));
						return __jule_func_result;;
					};
				}
			_iter_next_1cc2e39da:;
			}
			_iter_end_1cc2e39da:;;
			_2488_matches=_224325013_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2467_g)])));
			if ((_2488_matches != 0LLU)) {
				jule::U32 _2615_s = _2243252cc_nextMatch(&(_2488_matches));;
				(*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_keys[static_cast<jule::I64>(_2615_s)]=_24123_k;
				__jule_func_result=(&((*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_values[static_cast<jule::I64>(_2615_s)]));
				(*(_self_))._field_ctrl[static_cast<jule::I64>(_2467_g)][static_cast<jule::I64>(_2615_s)]=static_cast<jule::I8>(_2457_lo);
				((*(_self_))._field_resident)++;
				return __jule_func_result;;
			};
			_2467_g+=1LLU;
			if ((_2467_g >= static_cast<jule::U32>((*(_self_))._field_groups.len()))) {
				_2467_g=0LLU;
			};
		}
	_iter_next_1cc2e2984:;
	}
	_iter_end_1cc2e2984:;;
}



inline jule::Bool _1cc2b2c73_del(jule::Ptr<_1cc2b1b84__Map> _self_, jule::Ptr<_1e5ce3416_FnIns> _27624_k) {
	jule::Bool __jule_func_result = false;
	if (((_self_ == nullptr) || ((*(_self_))._field_groups == nullptr))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::U64 _2803_hi;
	jule::I8 _2807_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _224326256_splitHash(_1cc2b2459_hash(_self_.ptr(), _27624_k));
		_2803_hi = __jule_assign_result.__jule_result_arg0;
		_2807_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _2817_g = _224326553_probeStart(_2803_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2838_matches = _224324c05_metaMatchH2((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)])), _2807_lo);;
			while ((_2838_matches != 0LLU)) {
				{
					jule::U32 _2855_s = _2243252cc_nextMatch(&(_2838_matches));;
					if ((_27624_k == (*(_self_))._field_groups[static_cast<jule::I64>(_2817_g)]._field_keys[static_cast<jule::I64>(_2855_s)])) {
						__jule_func_result=true;
						if ((_224325013_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)]))) != 0LLU)) {
							(*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)][static_cast<jule::I64>(_2855_s)]=-128LL;
							((*(_self_))._field_resident)--;
						} else {
							(*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)][static_cast<jule::I64>(_2855_s)]=-2LL;
							((*(_self_))._field_dead)++;
						};
						jule::Ptr<_1e5ce3416_FnIns> _30214_key;;
						jule::Slice<jule::Uintptr> _30314_val;;
						(*(_self_))._field_groups[static_cast<jule::I64>(_2817_g)]._field_keys[static_cast<jule::I64>(_2855_s)]=_30214_key;
						(*(_self_))._field_groups[static_cast<jule::I64>(_2817_g)]._field_values[static_cast<jule::I64>(_2855_s)]=_30314_val;
						return __jule_func_result;;
					};
				}
			_iter_next_1cc301531:;
			}
			_iter_end_1cc301531:;;
			_2838_matches=_224325013_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)])));
			if ((_2838_matches != 0LLU)) {
				__jule_func_result=false;
				return __jule_func_result;;
			};
			_2817_g+=1LLU;
			if ((_2817_g >= static_cast<jule::U32>((*(_self_))._field_groups.len()))) {
				_2817_g=0LLU;
			};
		}
	_iter_next_1cc3002aa:;
	}
	_iter_end_1cc3002aa:;;
}



inline void _1cc2b2dc7_clear(jule::Ptr<_1cc2b1b84__Map> _self_) {
	if ((_self_ == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc307cc9:;
		if (it != expr_end) {
			jule::I64 _3287_i = it - expr->begin();
			jule::Array<jule::I8,8> _32810_c = *it;
			{
				{
					auto expr = &(_32810_c);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cc308747:;
					if (it != expr_end) {
						jule::I64 _3298_j = it - expr->begin();
						{
							(*(_self_))._field_ctrl[_3287_i][_3298_j]=-128LL;
						}
						_iter_next_1cc308747:;
						++it;
						_3298_j++;
						goto _iter_begin_1cc308747;
					}
					_iter_end_1cc308747:;
				};
			}
			_iter_next_1cc307cc9:;
			++it;
			_3287_i++;
			goto _iter_begin_1cc307cc9;
		}
		_iter_end_1cc307cc9:;
	};
	jule::Ptr<_1e5ce3416_FnIns> _33311_k;;
	jule::Slice<jule::Uintptr> _33411_v;;
	{
		auto expr = &((*(_self_))._field_groups);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc300860:;
		if (it != expr_end) {
			jule::I64 _3357_i = it - expr->begin();
			{
				_1cc2b3cb8_group* _3368_g = (&((*(_self_))._field_groups[_3357_i]));;
				{
					{
						auto expr = &((*(_3368_g))._field_keys);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1cc30ad98:;
						if (it != expr_end) {
							jule::I64 _3389_j = it - expr->begin();
							{
								(*(_3368_g))._field_keys[_3389_j]=_33311_k;
								(*(_3368_g))._field_values[_3389_j]=_33411_v;
							}
							_iter_next_1cc30ad98:;
							++it;
							_3389_j++;
							goto _iter_begin_1cc30ad98;
						}
						_iter_end_1cc30ad98:;
					};
				};
			}
			_iter_next_1cc300860:;
			++it;
			_3357_i++;
			goto _iter_begin_1cc300860;
		}
		_iter_end_1cc300860:;
	};
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		(*(_self_))._field_resident = ___jule_assign_arg;
		(*(_self_))._field_dead = _1___jule_assign_arg;
	});
}



inline jule::I64 _1cc2b302b_len(jule::Ptr<_1cc2b1b84__Map> _self_) {
	if ((_self_ == nullptr)) {
		return 0LL;;
	};
	return ((*(_self_))._field_resident - (*(_self_))._field_dead);;
}



inline jule::I64 _1cc2b3180_cap(_1cc2b1b84__Map* _self_) {
	return ((*(_self_))._field_limit - (*(_self_))._field_resident);;
}



inline _1cc2bb265_mapIterator _1cc2b32d4_iterator(jule::Ptr<_1cc2b1b84__Map> _self_) {
	_1cc2bb265_mapIterator _3607_iterator = _1cc2bb265_mapIterator{._field_m=_self_, ._field_ctrl=jule::Slice<jule::Array<jule::I8,8>>(nullptr), ._field_groups=jule::Slice<_1cc2b3cb8_group>(nullptr), ._field_n=0, ._field_g=0, ._field_s=0};;
	_1cc2bb7e8_init(&_3607_iterator);
	return _3607_iterator;;
}







inline void _1cc272e86_init(_1cc272903_mapIterator* _self_) {
	if (((*(_self_))._field_m == nullptr)) {
		return;;
	};
	({
		jule::Slice<jule::Array<jule::I8,8>> ___jule_assign_arg = (*((*(_self_))._field_m))._field_ctrl;
		jule::Slice<_1cc2684ba_group> _1___jule_assign_arg = (*((*(_self_))._field_m))._field_groups;
		(*(_self_))._field_ctrl = ___jule_assign_arg;
		(*(_self_))._field_groups = _1___jule_assign_arg;
	});
	if ((_1cc2675b8_len((*(_self_))._field_m) > 0LL)) {
		(*(_self_))._field_g=_23c3719a3_randInt(static_cast<jule::U64>(((jule::Uintptr)(_self_))), (*(_self_))._field_groups.len());
	};
	(*(_self_))._field_n=0LL;
	(*(_self_))._field_s=0LL;
}



inline __jule_tuple_pstr__jule_tuple_pbool _1cc2730da_next(_1cc272903_mapIterator* _self_) {
	__jule_tuple_pstr__jule_tuple_pbool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	for (; ((*(_self_))._field_n < (*(_self_))._field_groups.len()); ((*(_self_))._field_n)++) {
		{
			jule::Array<jule::I8,8>* _4004_ctrl = (&((*(_self_))._field_ctrl[(*(_self_))._field_g]));;
			for (; ((*(_self_))._field_s < 8LL); ((*(_self_))._field_s)++) {
				{
					jule::I8 _4025_c = (*(_4004_ctrl))[(*(_self_))._field_s];;
					if (((_4025_c == -128LL) || (_4025_c == -2LL))) {
						goto _iter_next_1cc27aa71;
					};
					jule::Str* _4069_k = (&((*(_self_))._field_groups[(*(_self_))._field_g]._field_keys[(*(_self_))._field_s]));;
					jule::Bool* _4079_v = (&((*(_self_))._field_groups[(*(_self_))._field_g]._field_values[(*(_self_))._field_s]));;
					((*(_self_))._field_s)++;
					if (((*(_self_))._field_s >= 8LL)) {
						((*(_self_))._field_n)++;
						(*(_self_))._field_s=0LL;
						((*(_self_))._field_g)++;
						if (((*(_self_))._field_g >= (*(_self_))._field_groups.len())) {
							(*(_self_))._field_g=0LL;
						};
					};
					__jule_func_result.__jule_result_arg0 = _4069_k;
					__jule_func_result.__jule_result_arg1 = _4079_v;
					return __jule_func_result;;
				}
			_iter_next_1cc27aa71:;
			}
			_iter_end_1cc27aa71:;;
			((*(_self_))._field_g)++;
			(*(_self_))._field_s=0LL;
			if (((*(_self_))._field_g >= (*(_self_))._field_groups.len())) {
				(*(_self_))._field_g=0LL;
			};
		}
	_iter_next_1cc279d06:;
	}
	_iter_end_1cc279d06:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}





inline void _1cc2bb7e8_init(_1cc2bb265_mapIterator* _self_) {
	if (((*(_self_))._field_m == nullptr)) {
		return;;
	};
	({
		jule::Slice<jule::Array<jule::I8,8>> ___jule_assign_arg = (*((*(_self_))._field_m))._field_ctrl;
		jule::Slice<_1cc2b3cb8_group> _1___jule_assign_arg = (*((*(_self_))._field_m))._field_groups;
		(*(_self_))._field_ctrl = ___jule_assign_arg;
		(*(_self_))._field_groups = _1___jule_assign_arg;
	});
	if ((_1cc2b302b_len((*(_self_))._field_m) > 0LL)) {
		(*(_self_))._field_g=_23c3719a3_randInt(static_cast<jule::U64>(((jule::Uintptr)(_self_))), (*(_self_))._field_groups.len());
	};
	(*(_self_))._field_n=0LL;
	(*(_self_))._field_s=0LL;
}



inline __jule_tuple_px_1e5ce3416_FnIns__jule_tuple_psuintptr _1cc2bb94c_next(_1cc2bb265_mapIterator* _self_) {
	__jule_tuple_px_1e5ce3416_FnIns__jule_tuple_psuintptr __jule_func_result;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	for (; ((*(_self_))._field_n < (*(_self_))._field_groups.len()); ((*(_self_))._field_n)++) {
		{
			jule::Array<jule::I8,8>* _4004_ctrl = (&((*(_self_))._field_ctrl[(*(_self_))._field_g]));;
			for (; ((*(_self_))._field_s < 8LL); ((*(_self_))._field_s)++) {
				{
					jule::I8 _4025_c = (*(_4004_ctrl))[(*(_self_))._field_s];;
					if (((_4025_c == -128LL) || (_4025_c == -2LL))) {
						goto _iter_next_1cc2c446b;
					};
					jule::Ptr<_1e5ce3416_FnIns>* _4069_k = (&((*(_self_))._field_groups[(*(_self_))._field_g]._field_keys[(*(_self_))._field_s]));;
					jule::Slice<jule::Uintptr>* _4079_v = (&((*(_self_))._field_groups[(*(_self_))._field_g]._field_values[(*(_self_))._field_s]));;
					((*(_self_))._field_s)++;
					if (((*(_self_))._field_s >= 8LL)) {
						((*(_self_))._field_n)++;
						(*(_self_))._field_s=0LL;
						((*(_self_))._field_g)++;
						if (((*(_self_))._field_g >= (*(_self_))._field_groups.len())) {
							(*(_self_))._field_g=0LL;
						};
					};
					__jule_func_result.__jule_result_arg0 = _4069_k;
					__jule_func_result.__jule_result_arg1 = _4079_v;
					return __jule_func_result;;
				}
			_iter_next_1cc2c446b:;
			}
			_iter_end_1cc2c446b:;;
			((*(_self_))._field_g)++;
			(*(_self_))._field_s=0LL;
			if (((*(_self_))._field_g >= (*(_self_))._field_groups.len())) {
				(*(_self_))._field_g=0LL;
			};
		}
	_iter_next_1cc2c3701:;
	}
	_iter_end_1cc2c3701:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}







inline _224497295_StrBuilder static__2244a0b83_New(jule::I64 _1516_cap) {
	if ((_1516_cap < 0LL)) {
		__jule_panic_s(jule::Str::lit("std::strings: StrBuilder.New: cap < 0", 37) + jule::Str("\nlocation: std/internal/strings/builder.jule:17:4"));;
	};
	return _224497295_StrBuilder{._field_buf=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, _1516_cap); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; })};;
}



inline void _2244a0cd7_Write(_224497295_StrBuilder* _self_, jule::Slice<jule::U8> _2521_b) {
	((*(_self_))._field_buf).append(_2521_b);;
}



inline void _2244a1090_WriteStr(_224497295_StrBuilder* _self_, jule::Str _3024_s) {
	((*(_self_))._field_buf).append(_3024_s);;
}



inline void _2244a1348_WriteByte(_224497295_StrBuilder* _self_, jule::U8 _3525_b) {
	{ jule::Slice<jule::U8> &__jule_push_dest = (*(_self_))._field_buf; __jule_push_dest.push(_3525_b); };
}



inline jule::Str _2244a1887_Str(_224497295_StrBuilder* _self_) {
	jule::Str _507_s = _223c7a815_StrFromBytes((*(_self_))._field_buf);;
	_2244a1a85_Clear(_self_);
	return _507_s;;
}



inline void _2244a1a85_Clear(_224497295_StrBuilder* _self_) {
	(*(_self_))._field_buf=nullptr;
}



inline jule::I64 _2244a1d1b_Len(_224497295_StrBuilder* _self_) {
	return (*(_self_))._field_buf.len();;
}



inline jule::Slice<jule::U8> _2244a2338_Buf(_224497295_StrBuilder* _self_) {
	return (*(_self_))._field_buf;;
}



inline void _2244a25e1_SetBuf(_224497295_StrBuilder* _self_, jule::Slice<jule::U8> _7733_buf) {
	(*(_self_))._field_buf=_7733_buf;
}








inline jule::Bool _225691812_foldPair_eq(_225691812_foldPair *_self_, _225691812_foldPair _other_) {
	return 
		(_self_->_field_from == _other_._field_from) &&
		(_self_->_field_to == _self_->_field_to);
}






inline jule::Bool _225691d0c_CaseRange_eq(_225691d0c_CaseRange *_self_, _225691d0c_CaseRange _other_) {
	return 
		(_self_->_field_Lo == _other_._field_Lo) &&
		(_self_->_field_Hi == _self_->_field_Hi) &&
		_1c8de6954_arrayCmp(_self_->_field_Delta.begin(), _self_->_field_Delta.begin(), 3);
}






inline jule::Bool _2256922b3_Range16_eq(_2256922b3_Range16 *_self_, _2256922b3_Range16 _other_) {
	return 
		(_self_->_field_Lo == _other_._field_Lo) &&
		(_self_->_field_Hi == _self_->_field_Hi) &&
		(_self_->_field_Stride == _self_->_field_Stride);
}






inline jule::Bool _2256927e1_Range32_eq(_2256927e1_Range32 *_self_, _2256927e1_Range32 _other_) {
	return 
		(_self_->_field_Lo == _other_._field_Lo) &&
		(_self_->_field_Hi == _self_->_field_Hi) &&
		(_self_->_field_Stride == _self_->_field_Stride);
}









inline jule::U8 _2256e19e9_index(_2256e1565_lazyBuff* _self_, jule::I64 _5521_i) {
	if (((*(_self_))._field_buff != nullptr)) {
		return (*(_self_))._field_buff[_5521_i];;
	};
	return (*(_self_))._field_path[_5521_i];;
}



inline void _2256e1ca2_append(_2256e1565_lazyBuff* _self_, jule::U8 _6222_c) {
	if (((*(_self_))._field_buff == nullptr)) {
		if ((((*(_self_))._field_w < (*(_self_))._field_path.len()) && ((*(_self_))._field_path[(*(_self_))._field_w] == _6222_c))) {
			((*(_self_))._field_w)++;
			return;;
		};
		(*(_self_))._field_buff=({ auto __jule_collection = jule::Slice<jule::U8>::alloc((*(_self_))._field_path.len(), (*(_self_))._field_path.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
		jule::copy((*(_self_))._field_buff, (*(_self_))._field_path.slice(0LL, (*(_self_))._field_w));
	};
	(*(_self_))._field_buff[(*(_self_))._field_w]=_6222_c;
	((*(_self_))._field_w)++;
}



inline jule::Str _2256e2038_string(_2256e1565_lazyBuff* _self_) {
	if (((*(_self_))._field_buff == nullptr)) {
		return (*(_self_))._field_volAndPath.slice(0LL, ((*(_self_))._field_volLen + (*(_self_))._field_w));;
	};
	return ((*(_self_))._field_volAndPath.slice(0LL, (*(_self_))._field_volLen) + _223c7a54b_BytesStr((*(_self_))._field_buff.slice(0LL, (*(_self_))._field_w)));;
}








inline jule::Bool _2243de341_DirEntry_eq(_2243de341_DirEntry *_self_, _2243de341_DirEntry _other_) {
	return 
		(_self_->_field_Name == _other_._field_Name) &&
		(_self_->_field_Stat == _self_->_field_Stat);
}






inline jule::Bool _2243de5c7_Directory_eq(_2243de5c7_Directory *_self_, _2243de5c7_Directory _other_) { return true; }

inline jule::Exceptional<jule::Slice<jule::Ptr<_2243de341_DirEntry>>> static__2256e42d2_Read(jule::Str _1517_path) {
	jule::Slice<jule::Ptr<_2243de341_DirEntry>> __jule_func_result;
	jule::Slice<jule::U16> _163_utf16Path = _223c78318_UTF16FromStr(_2256e2cd6_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1517_path; (*it++) = jule::Str::lit("*", 1); __jule_collection; })));;
	WIN32_FIND_DATAW _177_data = (WIN32_FIND_DATAW){};;
	jule::Uintptr _183_handle = _22408c907_FindFirstFile((&(_163_utf16Path[0LL])), (&(_177_data)));;
	if ((_183_handle == jule::MAX_U64)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_2243de341_DirEntry>>>{.result=__jule_func_result};;
	};
	for (;;) {
		{
			jule::Ptr<_2243de341_DirEntry> _238_entry = jule::new_ptr<_2243de341_DirEntry>(_2243de341_DirEntry{._field_Name=_223c788e0_U16PtrToStr(((jule::U16*)(_177_data.cFileName))), ._field_Stat=jule::Ptr<_2243e290a_Status>(nullptr)});;
			(*(_238_entry))._field_Stat=({
				auto except = static__2256e5107_Of(_2256e2cd6_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1517_path; (*it++) = (*_238_entry.alloc)._field_Name; __jule_collection; })));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::Ptr<_2243de341_DirEntry>>>{.error=except.error};
				} jule::Ptr<_2243e290a_Status>(nullptr);});
			});
			{ jule::Slice<jule::Ptr<_2243de341_DirEntry>> &__jule_push_dest = __jule_func_result; __jule_push_dest.push(_238_entry); };
			if ((_22408cc7b_FindNextFile(_183_handle, (&(_177_data))) == 0LL)) {
				goto _iter_end_1c9b56e66;
			};
		}
	_iter_next_1c9b56e66:;
	}
	_iter_end_1c9b56e66:;;
	_22408d045_FindClose(_183_handle);
	return jule::Exceptional<jule::Slice<jule::Ptr<_2243de341_DirEntry>>>{.result=__jule_func_result};;
}



inline jule::VoidExceptional static__2256e4513_Create(jule::Str _3919_path) {
	jule::Slice<jule::U16> _443_utf16Path = _223c78318_UTF16FromStr(_3919_path);;
	if ((!(_22408a608_CreateDirectory((&(_443_utf16Path[0LL])))))) {
		return jule::VoidExceptional{.error=jule::Any(_2243ddc8b_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional static__2256e4744_Remove(jule::Str _5319_path) {
	jule::Slice<jule::U16> _543_utf16Path = _223c78318_UTF16FromStr(_5319_path);;
	if ((!(_22408a8c2_RemoveDirectory((&(_543_utf16Path[0LL])))))) {
		return jule::VoidExceptional{.error=jule::Any(_2243ddc8b_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}








inline jule::Bool _2243e07c6_File_eq(_2243e07c6_File *_self_, _2243e07c6_File _other_) {
	return 
		(_self_->_field_handle == _other_._field_handle);
}

inline jule::Ptr<_2243e07c6_File> static__2243e0c27_New(jule::Uintptr _4516_handle) {
	return jule::new_ptr<_2243e07c6_File>(_2243e07c6_File{._field_handle=_4516_handle});;
}



inline jule::Exceptional<jule::Ptr<_2243e07c6_File>> static__2243e0ee1_Create(jule::Str _5519_path) {
	return static__2243e4324_Open(_5519_path, static_cast<jule::I64>(770LL), 438LL);
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__2243e12aa_Read(jule::Str _6717_path) {
	jule::Ptr<_2243e290a_Status> _683_s = ({
		auto except = static__2256e5107_Of(_6717_path);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		} jule::Ptr<_2243e290a_Status>(nullptr);});
	});;
	if ((!(_2243e309d_IsReg(_683_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>{.error=jule::Any(static_cast<jule::I64>(14LL), &__jule_any_type0)};
	};
	jule::I64 _737_sz = static_cast<jule::I64>(_2243e3334_Size(_683_s));;
	if ((_737_sz != static_cast<jule::I64>(_2243e3334_Size(_683_s)))) {
		_737_sz=0LL;
	};
	if ((_737_sz < 512LLU)) {
		_737_sz=512LLU;
	};
	jule::Ptr<_2243e07c6_File> _867_f = ({
		auto except = static__2243e4324_Open(_6717_path, static_cast<jule::I64>(0LL), 0LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		} jule::Ptr<_2243e07c6_File>(nullptr);});
	});;
	jule::Slice<jule::U8> _877_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_737_sz, _737_sz); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _887_n = 0LL;;
	while ((_887_n < _737_sz)) {
		{
			jule::I64 _904_rn = ({
				auto except = _2243e4d2a_Read(_867_f.ptr(), _877_buf.slice(_887_n));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
				} 0;});
			});;
			if ((_904_rn == 0LL)) {
				goto _iter_end_1c9b60788;
			};
			_887_n+=_904_rn;
		}
	_iter_next_1c9b60788:;
	}
	_iter_end_1c9b60788:;;
	({
		auto except = _2243e1d8d_Close(_867_f);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		}
	});
	return jule::Exceptional<jule::Slice<jule::U8>>{.result=_877_buf.slice(0LL, _887_n)};;
}



inline jule::VoidExceptional static__2243e1651_Write(jule::Str _10518_path, jule::Slice<jule::U8> _10529_data, jule::I64 _10543_perm) {
	jule::Ptr<_2243e07c6_File> _1067_f = ({
		auto except = static__2243e4324_Open(_10518_path, static_cast<jule::I64>(769LL), _10543_perm);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional{.error=std::move(except.error)};
		} jule::Ptr<_2243e07c6_File>(nullptr);});
	});;
	jule::I64 _1077_n = 0LL;;
	while ((_1077_n < _10529_data.len())) {
		{
			_1077_n+=({
				auto except = _2243e49d9_Write(_1067_f.ptr(), _10529_data.slice(_1077_n));
				(except.ok()) ? (except.result) : ({{

					return jule::VoidExceptional{.error=std::move(except.error)};
				} 0;});
			});
		}
	_iter_next_1c9b65b9a:;
	}
	_iter_end_1c9b65b9a:;;
	return _2243e1d8d_Close(_1067_f);
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _2243e1d8d_Close(_2243e07c6_File* _self_) {
	if ((_2240904ed_Close(static_cast<jule::I64>((*(_self_))._field_handle)) == -1LL)) {
		return jule::VoidExceptional{.error=jule::Any(_2243ddc8b_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::Ptr<_2243e07c6_File>> static__2243e4324_Open(jule::Str _2217_path, jule::I64 _2228_flag, jule::I64 _2241_mode) {
	jule::Slice<jule::U16> _233_utf16Path = _223c78318_UTF16FromStr(_2217_path);;
	jule::I64 _243_handle = _224089728_Wopen((&(_233_utf16Path[0LL])), _2228_flag, _2241_mode);;
	if ((_243_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_2243e07c6_File>>{.error=jule::Any(_2243ddc8b_getLastFsError(), &__jule_any_type0)};
	};
	return jule::Exceptional<jule::Ptr<_2243e07c6_File>>{.result=static__2243e0c27_New(static_cast<jule::Uintptr>(_243_handle))};;
}



inline jule::VoidExceptional static__2243e4555_Remove(jule::Str _3519_path) {
	jule::Slice<jule::U16> _363_utf16Path = _223c78318_UTF16FromStr(_3519_path);;
	if ((!(_22408a33e_DeleteFile((&(_363_utf16Path[0LL])))))) {
		return jule::VoidExceptional{.error=jule::Any(_2243ddc8b_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I64> _2243e49d9_Write(_2243e07c6_File* _self_, jule::Slice<jule::U8> _5021_buf) {
	jule::I64 __jule_func_result = 0;
	if ((_5021_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
	};
	_2241bad98_handleRW(&(_5021_buf));
	if (_2243e516b_isConsoleHandle((*(_self_))._field_handle)) {
		__jule_func_result=_2241a5877_writeConsole((*(_self_))._field_handle, _5021_buf);
		if ((__jule_func_result == -1LL)) {
			return jule::Exceptional<jule::I64>{.error=jule::Any(_2243ddc8b_getLastFsError(), &__jule_any_type0)};
		};
		__jule_func_result = __jule_func_result;
		return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
	};
	__jule_func_result=_2240908a5_Write(static_cast<jule::I64>((*(_self_))._field_handle), (&(_5021_buf[0LL])), static_cast<jule::U64>(_5021_buf.len()));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(_2243ddc8b_getLastFsError(), &__jule_any_type0)};
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
}



inline jule::Exceptional<jule::I64> _2243e4d2a_Read(_2243e07c6_File* _self_, jule::Slice<jule::U8> _8024_buf) {
	jule::I64 __jule_func_result = 0;
	if ((_8024_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
	};
	_2241bad98_handleRW(&(_8024_buf));
	if (_2243e516b_isConsoleHandle((*(_self_))._field_handle)) {
		__jule_func_result=_2241a5beb_readConsole((*(_self_))._field_handle, _8024_buf);
		if ((__jule_func_result == -1LL)) {
			return jule::Exceptional<jule::I64>{.error=jule::Any(_2243ddc8b_getLastFsError(), &__jule_any_type0)};
		};
		__jule_func_result = __jule_func_result;
		return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
	};
	__jule_func_result=_224090124_Read(static_cast<jule::I64>((*(_self_))._field_handle), (&(_8024_buf[0LL])), static_cast<jule::U64>(_8024_buf.len()));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(_2243ddc8b_getLastFsError(), &__jule_any_type0)};
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
}








inline jule::Bool _2243e290a_Status_eq(_2243e290a_Status *_self_, _2243e290a_Status _other_) {
	return 
		(_self_->_field_mode == _other_._field_mode) &&
		(_self_->_field_size == _self_->_field_size);
}

inline jule::Bool _2243e2d17_IsDir(_2243e290a_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL));;
}



inline jule::Bool _2243e309d_IsReg(_2243e290a_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(2LL)) == static_cast<jule::I64>(2LL));;
}



inline jule::U64 _2243e3334_Size(_2243e290a_Status* _self_) {
	return (*(_self_))._field_size;;
}



inline jule::Exceptional<jule::Ptr<_2243e290a_Status>> static__2256e5107_Of(jule::Str _1215_path) {
	if ((_1215_path).empty()) {
		return jule::Exceptional<jule::Ptr<_2243e290a_Status>>{.error=jule::Any(static_cast<jule::I64>(4LL), &__jule_any_type0)};
	};
	jule::Slice<jule::U16> _163_utf16Path = _223c78318_UTF16FromStr(_1215_path);;
	struct _stat _177_handle = (struct _stat){};;
	jule::I64 _183_code = _2240892e9_Wstat((&(_163_utf16Path[0LL])), (&(_177_handle)));;
	if ((_183_code == -1LL)) {
		return jule::Exceptional<jule::Ptr<_2243e290a_Status>>{.error=jule::Any(_2243ddc8b_getLastFsError(), &__jule_any_type0)};
	};
	jule::Ptr<_2243e290a_Status> _227_stat = jule::new_ptr<_2243e290a_Status>(_2243e290a_Status{._field_mode=0LL, ._field_size=0});;
	(*_227_stat.alloc)._field_size=_177_handle.st_size;
	if (((_177_handle.st_mode & 16384LLU) == 16384LLU)) {
		(*_227_stat.alloc)._field_mode|=static_cast<jule::I64>(1LL);
	} else if (((_177_handle.st_mode & 32768LLU) == 32768LLU)) {
		(*_227_stat.alloc)._field_mode|=static_cast<jule::I64>(2LL);
	};
	return jule::Exceptional<jule::Ptr<_2243e290a_Status>>{.result=_227_stat};;
}








inline jule::Bool _225861262_cmdAttrs_eq(_225861262_cmdAttrs *_self_, _225861262_cmdAttrs _other_) {
	return 
		(_self_->_field_hProcess == _other_._field_hProcess) &&
		(_self_->_field_hThread == _self_->_field_hThread);
}






inline jule::Bool _22578b38a_Log_eq(_22578b38a_Log *_self_, _22578b38a_Log _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_Row == _self_->_field_Row) &&
		(_self_->_field_Column == _self_->_field_Column) &&
		(_self_->_field_Path == _self_->_field_Path) &&
		(_self_->_field_Text == _self_->_field_Text) &&
		(_self_->_field_Line == _self_->_field_Line) &&
		(_self_->_field_Suggestion == _self_->_field_Suggestion);
}






inline jule::Bool _1e217ce36_floatInfo_eq(_1e217ce36_floatInfo *_self_, _1e217ce36_floatInfo _other_) {
	return 
		(_self_->_field_mantbits == _other_._field_mantbits) &&
		(_self_->_field_expbits == _self_->_field_expbits) &&
		(_self_->_field_bias == _self_->_field_bias);
}










inline jule::Bool _1e2190d06_leftCheat_eq(_1e2190d06_leftCheat *_self_, _1e2190d06_leftCheat _other_) {
	return 
		(_self_->_field_delta == _other_._field_delta) &&
		(_self_->_field_cutoff == _self_->_field_cutoff);
}






inline jule::Bool _1e219181d_decimal_eq(_1e219181d_decimal *_self_, _1e219181d_decimal _other_) {
	return 
		_1c9e4bb51_arrayCmp(_self_->_field_d.begin(), _other_._field_d.begin(), 800) &&
		(_self_->_field_nd == _self_->_field_nd) &&
		(_self_->_field_dp == _self_->_field_dp) &&
		(_self_->_field_neg == _self_->_field_neg) &&
		(_self_->_field_trunc == _self_->_field_trunc);
}

inline jule::Bool _1e2188282_set(_1e219181d_decimal* _self_, jule::Slice<jule::U8> _23819_s) {
	jule::Bool __jule_func_result = false;
	jule::I64 _2397_i = 0LL;;
	(*(_self_))._field_neg=false;
	(*(_self_))._field_trunc=false;
	if ((_2397_i >= _23819_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_23819_s[_2397_i] == '+')) {
			_case_begin_1ca141b9d:;
			{
				(_2397_i)++;
			}
		}
		else if ((_23819_s[_2397_i] == '-')) {
			_case_begin_1ca141d35:;
			{
				(*(_self_))._field_neg=true;
				(_2397_i)++;
			}
		}
		_match_end_1ca141b37:;
	};
	jule::Bool _2567_sawdot = false;;
	jule::Bool _2577_sawdigits = false;;
	for (; (_2397_i < _23819_s.len()); (_2397_i)++) {
		{
			{
				
				if ((_23819_s[_2397_i] == '_')) {
					_case_begin_1ca143782:;
					{
						goto _iter_next_1ca143012;
					}
				}
				else if ((_23819_s[_2397_i] == '.')) {
					_case_begin_1ca14382b:;
					{
						if (_2567_sawdot) {
							return __jule_func_result;;
						};
						_2567_sawdot=true;
						(*(_self_))._field_dp=(*(_self_))._field_nd;
						goto _iter_next_1ca143012;
					}
				}
				else if ((('0' <= _23819_s[_2397_i]) && (_23819_s[_2397_i] <= '9'))) {
					_case_begin_1ca143892:;
					{
						_2577_sawdigits=true;
						if (((_23819_s[_2397_i] == '0') && ((*(_self_))._field_nd == 0LL))) {
							((*(_self_))._field_dp)--;
							goto _iter_next_1ca143012;
						};
						if (((*(_self_))._field_nd < 800LL)) {
							(*(_self_))._field_d[(*(_self_))._field_nd]=_23819_s[_2397_i];
							((*(_self_))._field_nd)++;
						} else if ((_23819_s[_2397_i] != '0')) {
							(*(_self_))._field_trunc=true;
						};
						goto _iter_next_1ca143012;
					}
				}
				_match_end_1ca143650:;
			};
			goto _iter_end_1ca143012;
		}
	_iter_next_1ca143012:;
	}
	_iter_end_1ca143012:;;
	if ((!(_2577_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_2567_sawdot))) {
		(*(_self_))._field_dp=(*(_self_))._field_nd;
	};
	if (((_2397_i < _23819_s.len()) && (_1e2183777_lower(_23819_s[_2397_i]) == 'e'))) {
		(_2397_i)++;
		if ((_2397_i >= _23819_s.len())) {
			return __jule_func_result;;
		};
		jule::I64 _3028_esign = 1LL;;
		if ((_23819_s[_2397_i] == '+')) {
			(_2397_i)++;
		} else if ((_23819_s[_2397_i] == '-')) {
			(_2397_i)++;
			_3028_esign=-1LL;
		};
		if ((((_2397_i >= _23819_s.len()) || (_23819_s[_2397_i] < '0')) || (_23819_s[_2397_i] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _3128_e = 0LL;;
		for (; ((_2397_i < _23819_s.len()) && ((('0' <= _23819_s[_2397_i]) && (_23819_s[_2397_i] <= '9')) || (_23819_s[_2397_i] == '_'))); (_2397_i)++) {
			{
				if ((_23819_s[_2397_i] == '_')) {
					goto _iter_next_1ca1496ab;
				};
				if ((_3128_e < 10000LL)) {
					_3128_e=(((_3128_e * 10LL) + static_cast<jule::I64>(_23819_s[_2397_i])) - '0');
				};
			}
		_iter_next_1ca1496ab:;
		}
		_iter_end_1ca1496ab:;;
		(*(_self_))._field_dp+=(_3128_e * _3028_esign);
	};
	if ((_2397_i != _23819_s.len())) {
		return __jule_func_result;;
	};
	__jule_func_result=true;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_bool _1e21885c3_floatBits(_1e219181d_decimal* _self_, _1e217ce36_floatInfo* _33226_flt) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _3337_exp = 0LL;;
	jule::U64 _3347_mant = static_cast<jule::U64>(0LLU);;
	if (((*(_self_))._field_nd == 0LL)) {
		_3347_mant=0LLU;
		_3337_exp=(*(_33226_flt))._field_bias;
		goto _julec_label_1ca158203;
	};
	if (((*(_self_))._field_dp > 310LL)) {
		goto _julec_label_1ca157257;
	};
	if (((*(_self_))._field_dp < -330LL)) {
		_3347_mant=0LLU;
		_3337_exp=(*(_33226_flt))._field_bias;
		goto _julec_label_1ca158203;
	};
	_3337_exp=0LL;
	while (((*(_self_))._field_dp > 0LL)) {
		{
			jule::I64 _3598_n = 0LL;;
			if (((*(_self_))._field_dp >= _1e2187e1e_powtab.len())) {
				_3598_n=27LL;
			} else {
				_3598_n=_1e2187e1e_powtab[(*(_self_))._field_dp];
			};
			_1e2191eb1_shift(_self_, (-(_3598_n)));
			_3337_exp+=_3598_n;
		}
	_iter_next_1ca14ea68:;
	}
	_iter_end_1ca14ea68:;;
	while ((((*(_self_))._field_dp < 0LL) || (((*(_self_))._field_dp == 0LL) && ((*(_self_))._field_d[0LL] < '5')))) {
		{
			jule::I64 _3698_n = 0LL;;
			if (((-((*(_self_))._field_dp)) >= _1e2187e1e_powtab.len())) {
				_3698_n=27LL;
			} else {
				_3698_n=_1e2187e1e_powtab[(-((*(_self_))._field_dp))];
			};
			_1e2191eb1_shift(_self_, _3698_n);
			_3337_exp-=_3698_n;
		}
	_iter_next_1ca14d0b6:;
	}
	_iter_end_1ca14d0b6:;;
	(_3337_exp)--;
	if ((_3337_exp < ((*(_33226_flt))._field_bias + 1LL))) {
		jule::I64 _3864_n = (((*(_33226_flt))._field_bias + 1LL) - _3337_exp);;
		_1e2191eb1_shift(_self_, (-(_3864_n)));
		_3337_exp+=_3864_n;
	};
	if (((_3337_exp - (*(_33226_flt))._field_bias) >= static_cast<jule::I64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*(_33226_flt))._field_expbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL)))) {
		goto _julec_label_1ca157257;
	};
	_1e2191eb1_shift(_self_, static_cast<jule::I64>((jule::U64)(1LL + (*(_33226_flt))._field_mantbits)));
	_3347_mant=_1e2192a61_roundedInteger(_self_);
	if ((_3347_mant == ({ jule::U64 __jule_x = 2LLU; jule::U64 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }))) {
		_3347_mant=(_3347_mant >> 1LLU);
		(_3337_exp)++;
		if (((_3337_exp - (*(_33226_flt))._field_bias) >= static_cast<jule::I64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*(_33226_flt))._field_expbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL)))) {
			goto _julec_label_1ca157257;
		};
	};
	if (((_3347_mant & ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) == 0LLU)) {
		_3337_exp=(*(_33226_flt))._field_bias;
	};
	goto _julec_label_1ca158203;
	_julec_label_1ca157257:;
	_3347_mant=0LLU;
	_3337_exp=static_cast<jule::I64>((jule::U64)((jule::U64)(({ jule::U64 __jule_x = static_cast<jule::U64>(1LLU); jule::U64 __jule_y = (*(_33226_flt))._field_expbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LLU) + static_cast<jule::U64>((*(_33226_flt))._field_bias)));
	__jule_func_result.__jule_result_arg1=true;
	_julec_label_1ca158203:;
	jule::U64 _4227_bits = (_3347_mant & (jule::U64)(({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LLU));;
	_4227_bits|=({ jule::U64 __jule_x = static_cast<jule::U64>(((_3337_exp - (*(_33226_flt))._field_bias) & static_cast<jule::I64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*(_33226_flt))._field_expbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL)))); jule::U64 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	if ((*(_self_))._field_neg) {
		_4227_bits|=({ jule::U64 __jule_x = ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }); jule::U64 __jule_y = (*(_33226_flt))._field_expbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	};
	__jule_func_result.__jule_result_arg0 = _4227_bits;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline void _1e2191c08_assign(_1e219181d_decimal* _self_, jule::U64 _15126_v) {
	jule::Array<jule::U8,24> _15211_buf = ({ auto __jule_collection = jule::Array<jule::U8,24>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _1557_n = 0LL;;
	while ((_15126_v > 0LLU)) {
		{
			jule::U64 _1574_v1 = (_15126_v / 10LLU);;
			_15126_v-=(jule::U64)(10LLU * _1574_v1);
			_15211_buf[_1557_n]=static_cast<jule::U8>((jule::U64)(_15126_v + '0'));
			(_1557_n)++;
			_15126_v=_1574_v1;
		}
	_iter_next_1ca15a975:;
	}
	_iter_end_1ca15a975:;;
	(*(_self_))._field_nd=0LL;
	(_1557_n)--;
	for (; (_1557_n >= 0LL); (_1557_n)--) {
		{
			(*(_self_))._field_d[(*(_self_))._field_nd]=_15211_buf[_1557_n];
			((*(_self_))._field_nd)++;
		}
	_iter_next_1ca15b3e3:;
	}
	_iter_end_1ca15b3e3:;;
	(*(_self_))._field_dp=(*(_self_))._field_nd;
	_1e219316b_trim(_self_);
}



inline void _1e2191eb1_shift(_1e219181d_decimal* _self_, jule::I64 _17625_k) {
	{
		
		if (((*(_self_))._field_nd == 0LL)) {
			_case_begin_1ca15d36d:;
		}
		else if ((_17625_k > 0LL)) {
			_case_begin_1ca15d417:;
			{
				while ((_17625_k > 60LL)) {
					{
						_1e2193bb6_leftShift(_self_, 60LLU);
						_17625_k-=60LL;
					}
				_iter_next_1ca15e01c:;
				}
				_iter_end_1ca15e01c:;;
				_1e2193bb6_leftShift(_self_, static_cast<jule::U64>(_17625_k));
			}
		}
		else if ((_17625_k < 0LL)) {
			_case_begin_1ca15d47d:;
			{
				while ((_17625_k < -60LL)) {
					{
						_1e2193457_rightShift(_self_, 60LLU);
						_17625_k+=60LL;
					}
				_iter_next_1ca15de40:;
				}
				_iter_end_1ca15de40:;;
				_1e2193457_rightShift(_self_, static_cast<jule::U64>((-(_17625_k))));
			}
		}
		_match_end_1ca15d208:;
	};
}



inline void _1e2192269_roundDown(_1e219181d_decimal* _self_, jule::I64 _19625_nd) {
	if (((_19625_nd < 0LL) || (_19625_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	(*(_self_))._field_nd=_19625_nd;
	_1e219316b_trim(_self_);
}



inline void _1e2192522_roundUp(_1e219181d_decimal* _self_, jule::I64 _20523_nd) {
	if (((_20523_nd < 0LL) || (_20523_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	jule::I64 _2117_i = (_20523_nd - 1LL);;
	for (; (_2117_i >= 0LL); (_2117_i)--) {
		{
			jule::U8 _2134_c = (*(_self_))._field_d[_2117_i];;
			if ((_2134_c < '9')) {
				((*(_self_))._field_d[_2117_i])++;
				(*(_self_))._field_nd=(_2117_i + 1LL);
				return;;
			};
		}
	_iter_next_1ca1623c7:;
	}
	_iter_end_1ca1623c7:;;
	(*(_self_))._field_d[0LL]='1';
	(*(_self_))._field_nd=1LL;
	((*(_self_))._field_dp)++;
}



inline void _1e21927ca_round(_1e219181d_decimal* _self_, jule::I64 _23221_nd) {
	if (((_23221_nd < 0LL) || (_23221_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	if (_1e219403a_shouldRoundUp(_self_, _23221_nd)) {
		_1e2192522_roundUp(_self_, _23221_nd);
	} else {
		_1e2192269_roundDown(_self_, _23221_nd);
	};
}



inline jule::U64 _1e2192a61_roundedInteger(_1e219181d_decimal* _self_) {
	if (((*(_self_))._field_dp > 20LL)) {
		return jule::MAX_U64;;
	};
	jule::I64 _2497_i = 0LL;;
	jule::U64 _2507_n = static_cast<jule::U64>(0LLU);;
	for (; ((_2497_i < (*(_self_))._field_dp) && (_2497_i < (*(_self_))._field_nd)); (_2497_i)++) {
		{
			_2507_n=(jule::U64)((jule::U64)(_2507_n * 10LLU) + static_cast<jule::U64>((jule::U8)((*(_self_))._field_d[_2497_i] - '0')));
		}
	_iter_next_1ca165331:;
	}
	_iter_end_1ca165331:;;
	for (; (_2497_i < (*(_self_))._field_dp); (_2497_i)++) {
		{
			_2507_n*=10LLU;
		}
	_iter_next_1ca167333:;
	}
	_iter_end_1ca167333:;;
	if (_1e219403a_shouldRoundUp(_self_, (*(_self_))._field_dp)) {
		(_2507_n)++;
	};
	return _2507_n;;
}







inline jule::Ptr<_1e21a449b_Const> static__1e21a491e_NewI64(jule::I64 _1619_x) {
	return jule::new_ptr<_1e21a449b_Const>(_1e21a449b_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_1619_x, &__jule_any_type1)});;
}



inline jule::Ptr<_1e21a449b_Const> static__1e21a4bd8_NewU64(jule::U64 _1919_x) {
	return jule::new_ptr<_1e21a449b_Const>(_1e21a449b_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_1919_x, &__jule_any_type2)});;
}



inline jule::Ptr<_1e21a449b_Const> static__1e21a4ea2_NewBool(jule::Bool _2220_x) {
	return jule::new_ptr<_1e21a449b_Const>(_1e21a449b_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_2220_x, &__jule_any_type3)});;
}



inline jule::Ptr<_1e21a449b_Const> static__1e21a526b_NewStr(jule::Str _2519_x) {
	return jule::new_ptr<_1e21a449b_Const>(_1e21a449b_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_2519_x, &__jule_any_type4)});;
}



inline jule::Ptr<_1e21a449b_Const> static__1e21a5535_NewF64(jule::F64 _2819_x) {
	return jule::new_ptr<_1e21a449b_Const>(_1e21a449b_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_2819_x, &__jule_any_type5)});;
}



inline jule::Ptr<_1e21a449b_Const> static__1e21a5744_NewNil(void) {
	return jule::new_ptr<_1e21a449b_Const>(_1e21a449b_Const{._field_Kind=jule::Str(), ._field_data=nullptr});;
}



inline jule::I64 _1e21a5da4_ReadI64(_1e21a449b_Const* _self_) {
	if ((!(_1e21a84a0_IsI64(_self_)))) {
		return 0LL;;
	};
	return (*(_self_))._field_data.cast<jule::I64>(&__jule_any_type1);;
}



inline jule::U64 _1e21a613a_ReadU64(_1e21a449b_Const* _self_) {
	if ((!(_1e21a8736_IsU64(_self_)))) {
		return 0LLU;;
	};
	return (*(_self_))._field_data.cast<jule::U64>(&__jule_any_type2);;
}



inline jule::Bool _1e21a63c1_ReadBool(_1e21a449b_Const* _self_) {
	if ((!(_1e21a89bc_IsBool(_self_)))) {
		return false;;
	};
	return (*(_self_))._field_data.cast<jule::Bool>(&__jule_any_type3);;
}



inline jule::Str _1e21a6657_ReadStr(_1e21a449b_Const* _self_) {
	if ((!(_1e21a8c53_IsStr(_self_)))) {
		return jule::Str();;
	};
	return (*(_self_))._field_data.cast<jule::Str>(&__jule_any_type4);;
}



inline jule::F64 _1e21a68dd_ReadF64(_1e21a449b_Const* _self_) {
	if ((!(_1e21a8ed9_IsF64(_self_)))) {
		return 0LL;;
	};
	return (*(_self_))._field_data.cast<jule::F64>(&__jule_any_type5);;
}



inline jule::I64 _1e21a6b74_AsI64(_1e21a449b_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1ca1d2997:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::I64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1ca1d33e3:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.unsafe_cast<jule::U64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1ca1d3459:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.unsafe_cast<jule::F64>());;
			}
		}
		else {
			_case_begin_1ca1d2e4d:;
			{
				return 0LL;;
			}
		}
		_match_end_1ca1d2ca5:;
	};
}



inline jule::U64 _1e21a6e0a_AsU64(_1e21a449b_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1ca1d403c:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::U64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1ca1d4c63:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.unsafe_cast<jule::I64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1ca1d4cc9:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.unsafe_cast<jule::F64>());;
			}
		}
		else {
			_case_begin_1ca1d4515:;
			{
				return 0LLU;;
			}
		}
		_match_end_1ca1d449e:;
	};
}



inline jule::F64 _1e21a7191_AsF64(_1e21a449b_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1ca1d67c0:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::F64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1ca1d589b:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.unsafe_cast<jule::I64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1ca1d65b1:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.unsafe_cast<jule::U64>());;
			}
		}
		else {
			_case_begin_1ca1d5d63:;
			{
				return 0LL;;
			}
		}
		_match_end_1ca1d5cec:;
	};
}



inline void _1e21a7449_SetI64(_1e21a449b_Const* _self_, jule::I64 _13822_x) {
	(*(_self_))._field_data=jule::Any(_13822_x, &__jule_any_type1);
}



inline void _1e21a7702_SetU64(_1e21a449b_Const* _self_, jule::U64 _14122_x) {
	(*(_self_))._field_data=jule::Any(_14122_x, &__jule_any_type2);
}



inline void _1e21a79aa_SetBool(_1e21a449b_Const* _self_, jule::Bool _14423_x) {
	(*(_self_))._field_data=jule::Any(_14423_x, &__jule_any_type3);
}



inline void _1e21a7c63_SetStr(_1e21a449b_Const* _self_, jule::Str _14722_x) {
	(*(_self_))._field_data=jule::Any(_14722_x, &__jule_any_type4);
}



inline void _1e21a801b_SetF64(_1e21a449b_Const* _self_, jule::F64 _15022_x) {
	(*(_self_))._field_data=jule::Any(_15022_x, &__jule_any_type5);
}



inline jule::Bool _1e21a84a0_IsI64(_1e21a449b_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1ca1da1b9:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ca1da3ea:;
			{
				return false;;
			}
		}
		_match_end_1ca1da384:;
	};
}



inline jule::Bool _1e21a8736_IsU64(_1e21a449b_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1ca1dac58:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ca1da52c:;
			{
				return false;;
			}
		}
		_match_end_1ca1da4b6:;
	};
}



inline jule::Bool _1e21a89bc_IsBool(_1e21a449b_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1ca1db198:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ca1db682:;
			{
				return false;;
			}
		}
		_match_end_1ca1db61b:;
	};
}



inline jule::Bool _1e21a8c53_IsStr(_1e21a449b_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1ca1dbb27:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ca1dc111:;
			{
				return false;;
			}
		}
		_match_end_1ca1dc09a:;
	};
}



inline jule::Bool _1e21a8ed9_IsF64(_1e21a449b_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1ca1dc5a6:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ca1dca90:;
			{
				return false;;
			}
		}
		_match_end_1ca1dca29:;
	};
}



inline jule::Bool _1e21a9270_IsNil(_1e21a449b_Const* _self_) {
	return ((*(_self_))._field_data == nullptr);;
}



inline jule::Bool _1e21a9902_And(_1e21a449b_Const* _self_, _1e21a449b_Const _23815_x) {
	{
		
		if ((_1e21a89bc_IsBool(_self_) && _1e21a89bc_IsBool(&_23815_x))) {
			_case_begin_1ca1e2039:;
			{
				return (_1e21a63c1_ReadBool(_self_) && _1e21a63c1_ReadBool(&_23815_x));;
			}
		}
		else {
			_case_begin_1ca1e1ec3:;
			{
				return false;;
			}
		}
		_match_end_1ca1e1a83:;
	};
}



inline jule::Bool _1e21a9c43_Or(_1e21a449b_Const* _self_, _1e21a449b_Const _24914_x) {
	{
		
		if ((_1e21a89bc_IsBool(_self_) && _1e21a89bc_IsBool(&_24914_x))) {
			_case_begin_1ca1e3337:;
			{
				return (_1e21a63c1_ReadBool(_self_) || _1e21a63c1_ReadBool(&_24914_x));;
			}
		}
		else {
			_case_begin_1ca1e2a1d:;
			{
				return false;;
			}
		}
		_match_end_1ca1e2930:;
	};
}



inline jule::Bool _1e21aa084_Eq(_1e21a449b_Const* _self_, _1e21a449b_Const _26014_x) {
	{
		
		if (_1e21a9270_IsNil(_self_)) {
			_case_begin_1ca1e469b:;
			{
				return _1e21a9270_IsNil(&_26014_x);;
			}
		}
		else if (_1e21a89bc_IsBool(_self_)) {
			_case_begin_1ca1e4712:;
			{
				return (_1e21a89bc_IsBool(&_26014_x) && (_1e21a63c1_ReadBool(_self_) == _1e21a63c1_ReadBool(&_26014_x)));;
			}
		}
		else if (_1e21a8c53_IsStr(_self_)) {
			_case_begin_1ca1e4778:;
			{
				return (_1e21a8c53_IsStr(&_26014_x) && (_1e21a6657_ReadStr(_self_) == _1e21a6657_ReadStr(&_26014_x)));;
			}
		}
		else if (_1e21a84a0_IsI64(_self_)) {
			_case_begin_1ca1e4800:;
			{
				return (_1e21a5da4_ReadI64(_self_) == _1e21a6b74_AsI64(&_26014_x));;
			}
		}
		else if (_1e21a8736_IsU64(_self_)) {
			_case_begin_1ca1e4877:;
			{
				return (_1e21a613a_ReadU64(_self_) == _1e21a6e0a_AsU64(&_26014_x));;
			}
		}
		else if (_1e21a8ed9_IsF64(_self_)) {
			_case_begin_1ca1e4a20:;
			{
				return (_1e21a68dd_ReadF64(_self_) == _1e21a7191_AsF64(&_26014_x));;
			}
		}
		else {
			_case_begin_1ca1e3d0a:;
			{
				return false;;
			}
		}
		_match_end_1ca1e3c1c:;
	};
}



inline jule::Bool _1e21aa3c5_Lt(_1e21a449b_Const* _self_, _1e21a449b_Const _28714_x) {
	{
		
		if (_1e21a8c53_IsStr(_self_)) {
			_case_begin_1ca1e83c5:;
			{
				return (_1e21a8c53_IsStr(&_28714_x) && (_1e21a6657_ReadStr(_self_) < _1e21a6657_ReadStr(&_28714_x)));;
			}
		}
		else if (_1e21a84a0_IsI64(_self_)) {
			_case_begin_1ca1e843b:;
			{
				return (_1e21a5da4_ReadI64(_self_) < _1e21a6b74_AsI64(&_28714_x));;
			}
		}
		else if (_1e21a8736_IsU64(_self_)) {
			_case_begin_1ca1e84a2:;
			{
				return (_1e21a613a_ReadU64(_self_) < _1e21a6e0a_AsU64(&_28714_x));;
			}
		}
		else if (_1e21a8ed9_IsF64(_self_)) {
			_case_begin_1ca1e8529:;
			{
				return (_1e21a68dd_ReadF64(_self_) < _1e21a7191_AsF64(&_28714_x));;
			}
		}
		else {
			_case_begin_1ca1e515d:;
			{
				return false;;
			}
		}
		_match_end_1ca1e5081:;
	};
}



inline jule::Bool _1e21aa716_LtEq(_1e21a449b_Const* _self_, _1e21a449b_Const _31016_x) {
	{
		
		if (_1e21a8c53_IsStr(_self_)) {
			_case_begin_1ca1eb0cb:;
			{
				return (_1e21a8c53_IsStr(&_31016_x) && (_1e21a6657_ReadStr(_self_) <= _1e21a6657_ReadStr(&_31016_x)));;
			}
		}
		else if (_1e21a84a0_IsI64(_self_)) {
			_case_begin_1ca1eb142:;
			{
				return (_1e21a5da4_ReadI64(_self_) <= _1e21a6b74_AsI64(&_31016_x));;
			}
		}
		else if (_1e21a8736_IsU64(_self_)) {
			_case_begin_1ca1eb1a8:;
			{
				return (_1e21a613a_ReadU64(_self_) <= _1e21a6e0a_AsU64(&_31016_x));;
			}
		}
		else if (_1e21a8ed9_IsF64(_self_)) {
			_case_begin_1ca1eb230:;
			{
				return (_1e21a68dd_ReadF64(_self_) <= _1e21a7191_AsF64(&_31016_x));;
			}
		}
		else {
			_case_begin_1ca1e8c88:;
			{
				return false;;
			}
		}
		_match_end_1ca1e8bab:;
	};
}



inline jule::Bool _1e21aaa57_Gt(_1e21a449b_Const* _self_, _1e21a449b_Const _33314_x) {
	{
		
		if (_1e21a8c53_IsStr(_self_)) {
			_case_begin_1ca1edcd2:;
			{
				return (_1e21a8c53_IsStr(&_33314_x) && (_1e21a6657_ReadStr(_self_) > _1e21a6657_ReadStr(&_33314_x)));;
			}
		}
		else if (_1e21a84a0_IsI64(_self_)) {
			_case_begin_1ca1edd48:;
			{
				return (_1e21a5da4_ReadI64(_self_) > _1e21a6b74_AsI64(&_33314_x));;
			}
		}
		else if (_1e21a8736_IsU64(_self_)) {
			_case_begin_1ca1eddae:;
			{
				return (_1e21a613a_ReadU64(_self_) > _1e21a6e0a_AsU64(&_33314_x));;
			}
		}
		else if (_1e21a8ed9_IsF64(_self_)) {
			_case_begin_1ca1ede36:;
			{
				return (_1e21a68dd_ReadF64(_self_) > _1e21a7191_AsF64(&_33314_x));;
			}
		}
		else {
			_case_begin_1ca1eb98e:;
			{
				return false;;
			}
		}
		_match_end_1ca1eb8b2:;
	};
}



inline jule::Bool _1e21aad98_GtEq(_1e21a449b_Const* _self_, _1e21a449b_Const _35616_x) {
	{
		
		if (_1e21a8c53_IsStr(_self_)) {
			_case_begin_1ca2019d8:;
			{
				return (_1e21a8c53_IsStr(&_35616_x) && (_1e21a6657_ReadStr(_self_) >= _1e21a6657_ReadStr(&_35616_x)));;
			}
		}
		else if (_1e21a84a0_IsI64(_self_)) {
			_case_begin_1ca201a4e:;
			{
				return (_1e21a5da4_ReadI64(_self_) >= _1e21a6b74_AsI64(&_35616_x));;
			}
		}
		else if (_1e21a8736_IsU64(_self_)) {
			_case_begin_1ca201ab5:;
			{
				return (_1e21a613a_ReadU64(_self_) >= _1e21a6e0a_AsU64(&_35616_x));;
			}
		}
		else if (_1e21a8ed9_IsF64(_self_)) {
			_case_begin_1ca201b3c:;
			{
				return (_1e21a68dd_ReadF64(_self_) >= _1e21a7191_AsF64(&_35616_x));;
			}
		}
		else {
			_case_begin_1ca1ee695:;
			{
				return false;;
			}
		}
		_match_end_1ca1ee5b8:;
	};
}



inline jule::Bool _1e21ab1d9_Add(_1e21a449b_Const* _self_, _1e21a449b_Const _37719_x) {
	{
		
		if (_1e21a8c53_IsStr(_self_)) {
			_case_begin_1ca2046de:;
			{
				if ((!(_1e21a8c53_IsStr(&_37719_x)))) {
					return false;;
				};
				_1e21a7c63_SetStr(_self_, (_1e21a6657_ReadStr(_self_) + _1e21a6657_ReadStr(&_37719_x)));
			}
		}
		else if (_1e21a8ed9_IsF64(_self_)) {
			_case_begin_1ca204755:;
			{
				_1e21a801b_SetF64(_self_, (_1e21a68dd_ReadF64(_self_) + _1e21a7191_AsF64(&_37719_x)));
			}
		}
		else if (_1e21a84a0_IsI64(_self_)) {
			_case_begin_1ca2047bb:;
			{
				if (_1e21a8ed9_IsF64(&_37719_x)) {
					_1e21a801b_SetF64(_self_, (_1e21a7191_AsF64(_self_) + _1e21a68dd_ReadF64(&_37719_x)));
				} else {
					_1e21a7449_SetI64(_self_, (_1e21a5da4_ReadI64(_self_) + _1e21a6b74_AsI64(&_37719_x)));
				};
			}
		}
		else if (_1e21a8736_IsU64(_self_)) {
			_case_begin_1ca204843:;
			{
				if (_1e21a8ed9_IsF64(&_37719_x)) {
					_1e21a801b_SetF64(_self_, (_1e21a7191_AsF64(_self_) + _1e21a68dd_ReadF64(&_37719_x)));
				} else {
					_1e21a7702_SetU64(_self_, (jule::U64)(_1e21a613a_ReadU64(_self_) + _1e21a6e0a_AsU64(&_37719_x)));
				};
			}
		}
		else {
			_case_begin_1ca20239b:;
			{
				return false;;
			}
		}
		_match_end_1ca2022be:;
	};
	return true;;
}



inline jule::Bool _1e21ab52a_Sub(_1e21a449b_Const* _self_, _1e21a449b_Const _40619_x) {
	{
		
		if (_1e21a8ed9_IsF64(_self_)) {
			_case_begin_1ca209518:;
			{
				_1e21a801b_SetF64(_self_, (_1e21a68dd_ReadF64(_self_) - _1e21a7191_AsF64(&_40619_x)));
			}
		}
		else if (_1e21a84a0_IsI64(_self_)) {
			_case_begin_1ca20957e:;
			{
				if (_1e21a8ed9_IsF64(&_40619_x)) {
					_1e21a801b_SetF64(_self_, (_1e21a7191_AsF64(_self_) - _1e21a68dd_ReadF64(&_40619_x)));
				} else {
					_1e21a7449_SetI64(_self_, (_1e21a5da4_ReadI64(_self_) - _1e21a6b74_AsI64(&_40619_x)));
				};
			}
		}
		else if (_1e21a8736_IsU64(_self_)) {
			_case_begin_1ca2095e5:;
			{
				if (_1e21a8ed9_IsF64(&_40619_x)) {
					_1e21a801b_SetF64(_self_, (_1e21a7191_AsF64(_self_) - _1e21a68dd_ReadF64(&_40619_x)));
				} else {
					_1e21a7702_SetU64(_self_, (jule::U64)(_1e21a613a_ReadU64(_self_) - _1e21a6e0a_AsU64(&_40619_x)));
				};
			}
		}
		else {
			_case_begin_1ca208c54:;
			{
				return false;;
			}
		}
		_match_end_1ca208b55:;
	};
	return true;;
}



inline jule::Bool _1e21ab86b_Mul(_1e21a449b_Const* _self_, _1e21a449b_Const _43019_x) {
	{
		
		if (_1e21a8ed9_IsF64(_self_)) {
			_case_begin_1ca20d42e:;
			{
				_1e21a801b_SetF64(_self_, (_1e21a68dd_ReadF64(_self_) * _1e21a7191_AsF64(&_43019_x)));
			}
		}
		else if (_1e21a84a0_IsI64(_self_)) {
			_case_begin_1ca20d495:;
			{
				if (_1e21a8ed9_IsF64(&_43019_x)) {
					_1e21a801b_SetF64(_self_, (_1e21a7191_AsF64(_self_) * _1e21a68dd_ReadF64(&_43019_x)));
				} else {
					_1e21a7449_SetI64(_self_, (_1e21a5da4_ReadI64(_self_) * _1e21a6b74_AsI64(&_43019_x)));
				};
			}
		}
		else if (_1e21a8736_IsU64(_self_)) {
			_case_begin_1ca20d50b:;
			{
				if (_1e21a8ed9_IsF64(&_43019_x)) {
					_1e21a801b_SetF64(_self_, (_1e21a7191_AsF64(_self_) * _1e21a68dd_ReadF64(&_43019_x)));
				} else {
					_1e21a7702_SetU64(_self_, (jule::U64)(_1e21a613a_ReadU64(_self_) * _1e21a6e0a_AsU64(&_43019_x)));
				};
			}
		}
		else {
			_case_begin_1ca20ca05:;
			{
				return false;;
			}
		}
		_match_end_1ca20c917:;
	};
	return true;;
}



inline jule::Bool _1e21abbac_Div(_1e21a449b_Const* _self_, _1e21a449b_Const _45819_x) {
	{
		
		if (_1e21a8ed9_IsF64(_self_)) {
			_case_begin_1ca212334:;
			{
				jule::F64 _4614_l = _1e21a7191_AsF64(&_45819_x);;
				if ((_4614_l == 0LL)) {
					return false;;
				};
				_1e21a801b_SetF64(_self_, ({ jule::F64 __jule_x = _1e21a68dd_ReadF64(_self_); jule::F64 __jule_y = _4614_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); }));
			}
		}
		else if (_1e21a84a0_IsI64(_self_)) {
			_case_begin_1ca21239a:;
			{
				jule::F64 _4674_l = _1e21a7191_AsF64(&_45819_x);;
				if ((_4674_l == 0LL)) {
					return false;;
				};
				_1e21a801b_SetF64(_self_, ({ jule::F64 __jule_x = _1e21a7191_AsF64(_self_); jule::F64 __jule_y = _4674_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); }));
			}
		}
		else if (_1e21a8736_IsU64(_self_)) {
			_case_begin_1ca212411:;
			{
				jule::F64 _4734_l = _1e21a7191_AsF64(&_45819_x);;
				if ((_4734_l == 0LL)) {
					return false;;
				};
				_1e21a801b_SetF64(_self_, ({ jule::F64 __jule_x = _1e21a7191_AsF64(_self_); jule::F64 __jule_y = _4734_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); }));
			}
		}
		else {
			_case_begin_1ca21190a:;
			{
				return false;;
			}
		}
		_match_end_1ca21181c:;
	};
	return true;;
}



inline jule::Bool _1e21abeed_Mod(_1e21a449b_Const* _self_, _1e21a449b_Const _48719_x) {
	{
		
		if (_1e21a84a0_IsI64(_self_)) {
			_case_begin_1ca216217:;
			{
				jule::I64 _4904_l = _1e21a6b74_AsI64(&_48719_x);;
				if ((_4904_l == 0LL)) {
					return false;;
				};
				_1e21a7449_SetI64(_self_, ({ jule::I64 __jule_x = _1e21a5da4_ReadI64(_self_); jule::I64 __jule_y = _4904_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x % __jule_y)); }));
			}
		}
		else if (_1e21a8736_IsU64(_self_)) {
			_case_begin_1ca216624:;
			{
				jule::U64 _4964_l = _1e21a6e0a_AsU64(&_48719_x);;
				if ((_4964_l == 0LLU)) {
					return false;;
				};
				_1e21a7702_SetU64(_self_, ({ jule::U64 __jule_x = _1e21a613a_ReadU64(_self_); jule::U64 __jule_y = _4964_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U64)(__jule_x % __jule_y)); }));
			}
		}
		else {
			_case_begin_1ca216190:;
			{
				return false;;
			}
		}
		_match_end_1ca216080:;
	};
	return true;;
}



inline jule::Bool _1e21ac33e_BitwiseAnd(_1e21a449b_Const* _self_, _1e21a449b_Const _50926_x) {
	{
		
		if (_1e21a84a0_IsI64(_self_)) {
			_case_begin_1ca219083:;
			{
				_1e21a7449_SetI64(_self_, (_1e21a5da4_ReadI64(_self_) & _1e21a6b74_AsI64(&_50926_x)));
			}
		}
		else if (_1e21a8736_IsU64(_self_)) {
			_case_begin_1ca219490:;
			{
				_1e21a7702_SetU64(_self_, (_1e21a613a_ReadU64(_self_) & _1e21a6e0a_AsU64(&_50926_x)));
			}
		}
		else {
			_case_begin_1ca21900b:;
			{
				return false;;
			}
		}
		_match_end_1ca218deb:;
	};
	return true;;
}



inline jule::Bool _1e21ac680_BitwiseOr(_1e21a449b_Const* _self_, _1e21a449b_Const _52325_x) {
	{
		
		if (_1e21a84a0_IsI64(_self_)) {
			_case_begin_1ca21ad54:;
			{
				_1e21a7449_SetI64(_self_, (_1e21a5da4_ReadI64(_self_) | _1e21a6b74_AsI64(&_52325_x)));
			}
		}
		else if (_1e21a8736_IsU64(_self_)) {
			_case_begin_1ca21b261:;
			{
				_1e21a7702_SetU64(_self_, (_1e21a613a_ReadU64(_self_) | _1e21a6e0a_AsU64(&_52325_x)));
			}
		}
		else {
			_case_begin_1ca21accc:;
			{
				return false;;
			}
		}
		_match_end_1ca21abbc:;
	};
	return true;;
}



inline jule::Bool _1e21ac9c1_Xor(_1e21a449b_Const* _self_, _1e21a449b_Const _53719_x) {
	{
		
		if (_1e21a84a0_IsI64(_self_)) {
			_case_begin_1ca21cb25:;
			{
				_1e21a7449_SetI64(_self_, (_1e21a5da4_ReadI64(_self_) ^ _1e21a6b74_AsI64(&_53719_x)));
			}
		}
		else if (_1e21a8736_IsU64(_self_)) {
			_case_begin_1ca21d032:;
			{
				_1e21a7702_SetU64(_self_, (_1e21a613a_ReadU64(_self_) ^ _1e21a6e0a_AsU64(&_53719_x)));
			}
		}
		else {
			_case_begin_1ca21ca9d:;
			{
				return false;;
			}
		}
		_match_end_1ca21c98d:;
	};
	return true;;
}



inline jule::Bool _1e21acd12_Lshift(_1e21a449b_Const* _self_, _1e21a449b_Const _55122_x) {
	{
		
		if (_1e21a84a0_IsI64(_self_)) {
			_case_begin_1ca21e8e6:;
			{
				jule::I64 _5544_l = _1e21a6b74_AsI64(_self_);;
				if ((_5544_l < 0LL)) {
					jule::U64 _5565_r = _1e21a6e0a_AsU64(&_55122_x);;
					_1e21a7449_SetI64(_self_, ({ jule::I64 __jule_x = _5544_l; jule::U64 __jule_y = _5565_r; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));
				} else {
					_1e21ad4b6_lshiftUnsig(_self_, &(_55122_x));
				};
			}
		}
		else if (_1e21a8736_IsU64(_self_)) {
			_case_begin_1ca21ed03:;
			{
				_1e21ad4b6_lshiftUnsig(_self_, &(_55122_x));
			}
		}
		else {
			_case_begin_1ca21e86e:;
			{
				return false;;
			}
		}
		_match_end_1ca21e75e:;
	};
	return true;;
}



inline jule::Bool _1e21ad153_Rshift(_1e21a449b_Const* _self_, _1e21a449b_Const _57122_x) {
	{
		
		if (_1e21a84a0_IsI64(_self_)) {
			_case_begin_1ca221e7b:;
			{
				jule::I64 _5744_l = _1e21a6b74_AsI64(_self_);;
				if ((_5744_l < 0LL)) {
					jule::U64 _5765_r = _1e21a6e0a_AsU64(&_57122_x);;
					_1e21a7449_SetI64(_self_, ({ jule::I64 __jule_x = _5744_l; jule::U64 __jule_y = _5765_r; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }));
				} else {
					_1e21ad7e6_rshiftUnsig(_self_, &(_57122_x));
				};
			}
		}
		else if (_1e21a8736_IsU64(_self_)) {
			_case_begin_1ca222388:;
			{
				_1e21ad7e6_rshiftUnsig(_self_, &(_57122_x));
			}
		}
		else {
			_case_begin_1ca221e04:;
			{
				return false;;
			}
		}
		_match_end_1ca221d05:;
	};
	return true;;
}








inline jule::Bool _1e5c8eacc_Token_eq(_1e5c8eacc_Token *_self_, _1e5c8eacc_Token _other_) {
	return 
		(_self_->_field_File == _other_._field_File) &&
		(_self_->_field_Row == _self_->_field_Row) &&
		(_self_->_field_Column == _self_->_field_Column) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Id == _self_->_field_Id);
}

inline jule::U8 _1e5c8ee84_Prec(_1e5c8eacc_Token* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(64LLU) || _match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(57LLU) || _match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1ca282959:;
			{
				return 5LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1ca28244d:;
			{
				return 4LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(71LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1ca2824b4:;
			{
				return 3LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1ca2829c0:;
			{
				return 2LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1ca282a47:;
			{
				return 1LLU;;
			}
		}
		else {
			_case_begin_1ca281e86:;
			{
				return 0LLU;;
			}
		}
		_match_end_1ca282360:;
	};
}







inline void _1e5c957b4_Fill(_1e5c95363_File* _self_, jule::Slice<jule::U8> _1724_data) {
	(*(_self_))._field_Data=_1724_data;
}



inline jule::Str _1e5c95a4a_Dir(_1e5c95363_File* _self_) {
	return _2256e39c9_Dir((*(_self_))._field_Path);;
}



inline jule::Str _1e5c95cd1_Name(_1e5c95363_File* _self_) {
	return _2256e3600_Base((*(_self_))._field_Path);;
}



inline jule::Str _1e5c963a8_GetRow(_1e5c95363_File* _self_, jule::I64 _3818_row) {
	jule::I64 _397_n = 0LL;;
	jule::I64 _407_lineStart = 0LL;;
	jule::I64 _417_i = 0LL;;
	for (; (_417_i < (*(_self_))._field_Data.len()); (_417_i)++) {
		{
			if (((*(_self_))._field_Data[_417_i] != '\n')) {
				goto _iter_next_1ca288212;
			};
			(_397_n)++;
			if ((_397_n == _3818_row)) {
				return __jule_bytesToStr((*(_self_))._field_Data.slice(_407_lineStart, _417_i));;
			};
			_407_lineStart=(_417_i + 1LL);
		}
	_iter_next_1ca288212:;
	}
	_iter_end_1ca288212:;;
	return jule::Str();;
}








inline jule::Bool _1e5c974b9_kindPair_eq(_1e5c974b9_kindPair *_self_, _1e5c974b9_kindPair _other_) {
	return 
		(_self_->_field_kind == _other_._field_kind) &&
		(_self_->_field_id == _self_->_field_id);
}





inline void _1e5c9da64_pushErr(_1e5c9d49d_lex* _self_, jule::Str _44723_fmt, jule::Slice<jule::Any> _44736_args) {
	{ jule::Slice<_22578b38a_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1e5c98267_makeErr((*(_self_))._field_row, (*(_self_))._field_column, &((*(_self_))._field_file), _44723_fmt, _44736_args)); };
}



inline void _1e5c9e0c5_lex(_1e5c9d49d_lex* _self_) {
	(*(_self_))._field_errors=nullptr;
	_1e5ca12e7_newLine(_self_);
	while (((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len())) {
		{
			jule::Ptr<_1e5c8eacc_Token> _4628_token = _1e5ca27d2_token(_self_);;
			if (((*(_4628_token))._field_Id != static_cast<jule::U64>(0LLU))) {
				{ jule::Slice<jule::Ptr<_1e5c8eacc_Token>> &__jule_push_dest = (*(_self_))._field_tokens; __jule_push_dest.push(_4628_token); };
			};
		}
	_iter_next_1ca2bb0ad:;
	}
	_iter_end_1ca2bb0ad:;;
}



inline jule::Str _1e5c9e416_id(_1e5c9d49d_lex* _self_, jule::Slice<jule::U8>* _47119_ln) {
	if (((*(_47119_ln)).len() == 0LL)) {
		return jule::Str();;
	};
	jule::I32 _4753_r;
	jule::I64 _47510_i;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2241a26a9_DecodeRune((*(_47119_ln)));
		_4753_r = __jule_assign_result.__jule_result_arg0;
		_47510_i = __jule_assign_result.__jule_result_arg1;
	});
	if (((_4753_r != '_') && (!(_1e5c9330b_IsLetter(_4753_r))))) {
		return jule::Str();;
	};
	while ((_47510_i < (*(_47119_ln)).len())) {
		{
			jule::I32 _4814_pr;
			jule::I64 _4818_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2241a26a9_DecodeRune((*(_47119_ln)).slice(_47510_i));
				_4814_pr = __jule_assign_result.__jule_result_arg0;
				_4818_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_4814_pr != '_') && (!(_1e5c9377e_IsDecimal(static_cast<jule::U8>(_4814_pr))))) && (!(_1e5c9330b_IsLetter(_4814_pr))))) {
				(*(_self_))._field_pos+=_47510_i;
				return __jule_bytesToStr((*(_47119_ln)).slice(0LL, _47510_i));;
			};
			_47510_i+=_4818_n;
		}
	_iter_next_1ca2be237:;
	}
	_iter_end_1ca2be237:;;
	(*(_self_))._field_pos+=(*(_47119_ln)).len();
	return __jule_bytesToStr((*(_47119_ln)));;
}



inline jule::Slice<jule::U8> _1e5c9e69c_resume(_1e5c9d49d_lex* _self_) {
	jule::I64 _4967_i = (*(_self_))._field_pos;;
	for (; (_4967_i < (*((*(_self_))._field_file))._field_Data.len()); (_4967_i)++) {
		{
			jule::I32 _4984_r = static_cast<jule::I32>((*((*(_self_))._field_file))._field_Data[_4967_i]);;
			if (_1e5c92d11_IsSpace(_4984_r)) {
				((*(_self_))._field_pos)++;
				{
					auto &_match_expr{ _4984_r };
					
					if (_match_expr == '\n') {
						_case_begin_1ca2c356b:;
						{
							_1e5ca12e7_newLine(_self_);
						}
					}
					else {
						_case_begin_1ca2c2d40:;
						{
							((*(_self_))._field_column)++;
						}
					}
					_match_end_1ca2c311a:;
				};
				goto _iter_next_1ca2bde6d;
			};
			jule::I64 _5108_j = _4967_i;;
			for (; (_5108_j < (*(*(_self_))._field_file.alloc)._field_Data.len()); (_5108_j)++) {
				{
					if (((*(*(_self_))._field_file.alloc)._field_Data[_5108_j] == '\n')) {
						goto _iter_end_1ca2c2911;
					};
				}
			_iter_next_1ca2c2911:;
			}
			_iter_end_1ca2c2911:;;
			return (*(*(_self_))._field_file.alloc)._field_Data.slice(_4967_i, _5108_j);;
		}
	_iter_next_1ca2bde6d:;
	}
	_iter_end_1ca2bde6d:;;
	return nullptr;;
}



inline void _1e5c9e955_lexLineComment(_1e5c9d49d_lex* _self_, jule::Ptr<_1e5c8eacc_Token>* _52135_token) {
	jule::I64 _5223_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _5254_r = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if (((_5254_r == '\n') || (_5254_r == '\r'))) {
				goto _iter_end_1ca2c5b45;
			};
		}
	_iter_next_1ca2c5b45:;
	}
	_iter_end_1ca2c5b45:;;
	if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
		(*((*(_52135_token))))._field_Id=static_cast<jule::U64>(15LLU);
		(*((*(_52135_token))))._field_Kind=__jule_bytesToStr((*(*(_self_))._field_file.alloc)._field_Data.slice(_5223_start, (*(_self_))._field_pos));
	};
}



inline void _1e5c9ec0d_lexRangeComment(_1e5c9d49d_lex* _self_, jule::Ptr<_1e5c8eacc_Token>* _53636_token) {
	jule::I64 _5373_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _5404_r = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if ((_5404_r == '\r')) {
				goto _iter_next_1ca2c92db;
			};
			if ((_5404_r == '\n')) {
				_1e5ca12e7_newLine(_self_);
				goto _iter_next_1ca2c92db;
			};
			(*(_self_))._field_column+=1LL;
			if ((((((*(_self_))._field_pos + 1LL) < (*(*(_self_))._field_file.alloc)._field_Data.len()) && (_5404_r == '*')) && ((*(*(_self_))._field_file.alloc)._field_Data[((*(_self_))._field_pos + 1LL)] == '/'))) {
				(*(_self_))._field_column+=2LL;
				(*(_self_))._field_pos+=2LL;
				if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
					(*((*(_53636_token))))._field_Id=static_cast<jule::U64>(15LLU);
					(*((*(_53636_token))))._field_Kind=__jule_bytesToStr((*(*(_self_))._field_file.alloc)._field_Data.slice(_5373_start, (*(_self_))._field_pos));
				};
				return;;
			};
		}
	_iter_next_1ca2c92db:;
	}
	_iter_end_1ca2c92db:;;
	_1e5c9da64_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("missing block comment close", 27)), jule::Slice<jule::Any>());
}



inline jule::Str _1e5ca004e_num(_1e5c9d49d_lex* _self_, jule::Slice<jule::U8>* _56420_txt) {
	jule::Str __jule_func_result;
	if (((*(_56420_txt))[0LL] == '_')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result=_1e5c9bcb5_hexNum(_56420_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1ca2d0ea2;
	};
	__jule_func_result=_1e5c9bad9_octalNum(_56420_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1ca2d0ea2;
	};
	__jule_func_result=_1e5c9a379_binaryNum(_56420_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1ca2d0ea2;
	};
	__jule_func_result=_1e5c9a0b0_commonNum(_56420_txt);
	_julec_label_1ca2d0ea2:;
	(*(_self_))._field_pos+=__jule_func_result.len();
	return __jule_func_result;;
}



inline jule::Str _1e5ca0390_escapeSeq(_1e5c9d49d_lex* _self_, jule::Slice<jule::U8>* _58626_txt) {
	jule::Str _5877_seq = jule::Str();;
	if (((*(_58626_txt)).len() < 2LL)) {
		goto _julec_label_1ca2d4ca8;
	};
	{
		auto &_match_expr{ (*(_58626_txt))[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1ca2d2a20:;
			{
				(*(_self_))._field_pos+=2LL;
				return __jule_bytesToStr((*(_58626_txt)).slice(0LL, 2LL));;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1ca2d2a86:;
			{
				_5877_seq=_1e5c9c3d1_bigUnicodePointEscape(_58626_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1ca2d2701:;
			{
				_5877_seq=_1e5c9c69a_littleUnicodePointEscape(_58626_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1ca2d2767:;
			{
				_5877_seq=_1e5c9c964_hexByteEscape(_58626_txt);
			}
		}
		else {
			_case_begin_1ca2d1ec5:;
			{
				_5877_seq=_1e5c9cc2d_byteEscape(_58626_txt);
			}
		}
		_match_end_1ca2d257a:;
	};
	_julec_label_1ca2d4ca8:;
	if ((_5877_seq).empty()) {
		((*(_self_))._field_pos)++;
		_1e5c9da64_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("invalid escape sequence", 23)), jule::Slice<jule::Any>());
		return jule::Str();;
	};
	(*(_self_))._field_pos+=_5877_seq.len();
	return _5877_seq;;
}



inline jule::Str _1e5ca078b_getRune(_1e5c9d49d_lex* _self_, jule::Slice<jule::U8>* _61624_txt, jule::Bool _61637_raw) {
	if (((!(_61637_raw)) && ((*(_61624_txt))[0LL] == '\\'))) {
		return _1e5ca0390_escapeSeq(_self_, _61624_txt);;
	};
	jule::I32 _6203_r;
	jule::I64 _6206_n;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2241a26a9_DecodeRune((*(_61624_txt)));
		_6203_r = __jule_assign_result.__jule_result_arg0;
		_6206_n = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_pos+=_6206_n;
	return __jule_strFromRune(_6203_r);;
}



inline jule::Str _1e5ca0acc_lexRune(_1e5c9d49d_lex* _self_, jule::Slice<jule::U8>* _62524_txt) {
	_224497295_StrBuilder _6267_run = static__2244a0b83_New(8LL);;
	_2244a1348_WriteByte(&_6267_run, '\'');
	((*(_self_))._field_column)++;
	jule::I64 _6297_n = 0LL;;
	jule::I64 _6307_i = 1LL;;
	for (; (_6307_i < (*(_62524_txt)).len()); (_6307_i)++) {
		{
			if (((*(_62524_txt))[_6307_i] == '\r')) {
				goto _iter_next_1ca2d8aae;
			};
			if (((*(_62524_txt))[_6307_i] == '\n')) {
				_1e5c9da64_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("rune is not finished", 20)), jule::Slice<jule::Any>());
				((*(_self_))._field_pos)++;
				_1e5ca12e7_newLine(_self_);
				return jule::Str();;
			};
			jule::Slice<jule::U8> _6424_part = (*(_62524_txt)).slice(_6307_i);;
			jule::Str _6434_r = _1e5ca078b_getRune(_self_, &(_6424_part), false);;
			_2244a1090_WriteStr(&_6267_run, _6434_r);
			(*(_self_))._field_column+=_2241a449c_RuneCountStr(_6434_r);
			if (_6434_r.equal("'", 1)) {
				((*(_self_))._field_pos)++;
				goto _iter_end_1ca2d8aae;
			};
			if ((_6434_r.len() > 1LL)) {
				_6307_i+=(_6434_r.len() - 1LL);
			};
			(_6297_n)++;
		}
	_iter_next_1ca2d8aae:;
	}
	_iter_end_1ca2d8aae:;;
	if ((_6297_n == 0LL)) {
		_1e5c9da64_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("rune is cannot empty", 20)), jule::Slice<jule::Any>());
	} else if ((_6297_n > 1LL)) {
		_1e5c9da64_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("rune is should be single", 24)), jule::Slice<jule::Any>());
	};
	return _2244a1887_Str(&_6267_run);;
}



inline jule::Str _1e5ca0d63_lexStr(_1e5c9d49d_lex* _self_) {
	_224497295_StrBuilder _6667_s = static__2244a0b83_New(16LL);;
	jule::U8 _6673_mark = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
	((*(_self_))._field_pos)++;
	jule::Bool _6693_raw = (_6673_mark == '`');;
	_2244a1348_WriteByte(&_6667_s, _6673_mark);
	((*(_self_))._field_column)++;
	while (((*(_self_))._field_pos < (*(*(_self_))._field_file.alloc)._field_Data.len())) {
		{
			jule::U8 _6744_ch = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if ((_6744_ch == '\r')) {
				goto _iter_next_1ca2de90b;
			};
			if ((_6744_ch == '\n')) {
				_1e5ca12e7_newLine(_self_);
				if ((!(_6693_raw))) {
					_1e5c9da64_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("string is not finished", 22)), jule::Slice<jule::Any>());
					((*(_self_))._field_pos)++;
					return jule::Str();;
				};
			};
			jule::Slice<jule::U8> _6868_part = (*(*(_self_))._field_file.alloc)._field_Data.slice((*(_self_))._field_pos);;
			jule::Str _6874_r = _1e5ca078b_getRune(_self_, &(_6868_part), _6693_raw);;
			_2244a1090_WriteStr(&_6667_s, _6874_r);
			(*(_self_))._field_column+=_2241a449c_RuneCountStr(_6874_r);
			if ((_6744_ch == _6673_mark)) {
				goto _iter_end_1ca2de90b;
			};
		}
	_iter_next_1ca2de90b:;
	}
	_iter_end_1ca2de90b:;;
	return _2244a1887_Str(&_6667_s);;
}



inline void _1e5ca12e7_newLine(_1e5c9d49d_lex* _self_) {
	((*(_self_))._field_row)++;
	(*(_self_))._field_column=1LL;
}



inline jule::Bool _1e5ca1858_isOp(_1e5c9d49d_lex* _self_, jule::Slice<jule::U8>* _70721_txt, jule::Str _70734_kind, jule::U64 _70745_id, jule::Ptr<_1e5c8eacc_Token>* _70763_t) {
	if ((!(_1e5c98630_bytesHasPrefix(_70721_txt, _70734_kind)))) {
		return false;;
	};
	(*((*(_70763_t))))._field_Kind=_70734_kind;
	(*((*(_70763_t))))._field_Id=_70745_id;
	(*(_self_))._field_pos+=_70734_kind.len();
	return true;;
}



inline jule::Bool _1e5ca1c54_lexBasicOps(_1e5c9d49d_lex* _self_, jule::Slice<jule::U8> _71727_txt, jule::Ptr<_1e5c8eacc_Token>* _71745_tok) {
	{
		auto expr = &(_1e5c97c28_basicOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca2e60b6:;
		if (it != expr_end) {
			_1e5c974b9_kindPair *_71810_pair = it;
			{
				if (_1e5ca1858_isOp(_self_, &(_71727_txt), (*(_71810_pair))._field_kind, (*(_71810_pair))._field_id, _71745_tok)) {
					return true;;
				};
			}
			_iter_next_1ca2e60b6:;
			++it;
			goto _iter_begin_1ca2e60b6;
		}
		_iter_end_1ca2e60b6:;
	};
	return false;;
}



inline jule::Bool _1e5ca2150_lexId(_1e5c9d49d_lex* _self_, jule::Slice<jule::U8>* _72622_txt, jule::Ptr<_1e5c8eacc_Token>* _72640_t) {
	jule::Str _7273_lex = _1e5c9e416_id(_self_, _72622_txt);;
	if ((_7273_lex).empty()) {
		return false;;
	};
	(*((*(_72640_t))))._field_Kind=_7273_lex;
	(*((*(_72640_t))))._field_Id=static_cast<jule::U64>(1LLU);
	return true;;
}



inline jule::Bool _1e5ca254b_lexNum(_1e5c9d49d_lex* _self_, jule::Slice<jule::U8>* _73623_txt, jule::Ptr<_1e5c8eacc_Token>* _73641_t) {
	jule::Str _7373_lex = _1e5ca004e_num(_self_, _73623_txt);;
	if ((_7373_lex).empty()) {
		return false;;
	};
	(*((*(_73641_t))))._field_Kind=_7373_lex;
	(*((*(_73641_t))))._field_Id=static_cast<jule::U64>(4LLU);
	return true;;
}



inline jule::Ptr<_1e5c8eacc_Token> _1e5ca27d2_token(_1e5c9d49d_lex* _self_) {
	jule::Ptr<_1e5c8eacc_Token> _7487_t = jule::new_ptr<_1e5c8eacc_Token>(_1e5c8eacc_Token{._field_File=(*(_self_))._field_file, ._field_Row=0, ._field_Column=0, ._field_Kind=jule::Str(), ._field_Id=static_cast<jule::U64>(0LLU)});;
	jule::Slice<jule::U8> _7533_txt = _1e5c9e69c_resume(_self_);;
	if ((_7533_txt == nullptr)) {
		return _7487_t;;
	};
	(*(_7487_t))._field_Column=(*(_self_))._field_column;
	(*_7487_t.alloc)._field_Row=(*(_self_))._field_row;
	{
		
		if (_1e5ca254b_lexNum(_self_, &(_7533_txt), &(_7487_t))) {
			_case_begin_1ca2ed277:;
			{
				goto _match_end_1ca2eb132;
			}
		}
		else if ((_7533_txt[0LL] == '\'')) {
			_case_begin_1ca2ebc8c:;
			{
				(*_7487_t.alloc)._field_Kind=_1e5ca0acc_lexRune(_self_, &(_7533_txt));
				(*_7487_t.alloc)._field_Id=static_cast<jule::U64>(4LLU);
				return _7487_t;;
			}
		}
		else if (((_7533_txt[0LL] == '\"') || (_7533_txt[0LL] == '`'))) {
			_case_begin_1ca2ebd03:;
			{
				(*_7487_t.alloc)._field_Kind=_1e5ca0d63_lexStr(_self_);
				(*_7487_t.alloc)._field_Id=static_cast<jule::U64>(4LLU);
				return _7487_t;;
			}
		}
		else if (_1e5c98630_bytesHasPrefix(&(_7533_txt), static_cast<jule::Str>(jule::Str::lit("//", 2)))) {
			_case_begin_1ca2ebd69:;
			{
				_1e5c9e955_lexLineComment(_self_, &(_7487_t));
				return _7487_t;;
			}
		}
		else if (_1e5c98630_bytesHasPrefix(&(_7533_txt), static_cast<jule::Str>(jule::Str::lit("/*", 2)))) {
			_case_begin_1ca2ebdd0:;
			{
				_1e5c9ec0d_lexRangeComment(_self_, &(_7487_t));
				return _7487_t;;
			}
		}
		else if (_1e5ca1c54_lexBasicOps(_self_, _7533_txt, &(_7487_t))) {
			_case_begin_1ca2ebe46:;
			{
				goto _match_end_1ca2eb132;
			}
		}
		else if (_1e5ca2150_lexId(_self_, &(_7533_txt), &(_7487_t))) {
			_case_begin_1ca2ebeac:;
			{
				{
					auto expr = &(_1e5c978e8_keywords);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ca3022c0:;
					if (it != expr_end) {
						_1e5c974b9_kindPair *_78511_pair = it;
						{
							if (((*(_78511_pair))._field_kind == (*_7487_t.alloc)._field_Kind)) {
								(*_7487_t.alloc)._field_Id=(*(_78511_pair))._field_id;
								goto _iter_end_1ca3022c0;
							};
						}
						_iter_next_1ca3022c0:;
						++it;
						goto _iter_begin_1ca3022c0;
					}
					_iter_end_1ca3022c0:;
				};
			}
		}
		else {
			_case_begin_1ca2ebc26:;
			{
				jule::I32 _7924_r;
				jule::I64 _7927_sz;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2241a26a9_DecodeRune(_7533_txt);
					_7924_r = __jule_assign_result.__jule_result_arg0;
					_7927_sz = __jule_assign_result.__jule_result_arg1;
				});
				_1e5c9da64_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("undefined token: @", 18)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7924_r, &__jule_any_type6); __jule_collection; }));
				((*(_self_))._field_column)++;
				(*(_self_))._field_pos+=_7927_sz;
				return _7487_t;;
			}
		}
		_match_end_1ca2eb132:;
	};
	(*(_self_))._field_column+=_2241a449c_RuneCountStr((*_7487_t.alloc)._field_Kind);
	return _7487_t;;
}












inline jule::Bool _1e5ca4086_Node_eq(_1e5ca4086_Node *_self_, _1e5ca4086_Node _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Data == _self_->_field_Data);
}










inline jule::Bool _1e5ca5087_TypeDecl_eq(_1e5ca5087_TypeDecl *_self_, _1e5ca5087_TypeDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}


















inline jule::Bool _1e5ca6132_SptrTypeDecl_eq(_1e5ca6132_SptrTypeDecl *_self_, _1e5ca6132_SptrTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}






inline jule::Bool _1e5ca64b7_SlcTypeDecl_eq(_1e5ca64b7_SlcTypeDecl *_self_, _1e5ca64b7_SlcTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}










inline jule::Bool _1e5ca6ab1_PtrTypeDecl_eq(_1e5ca6ab1_PtrTypeDecl *_self_, _1e5ca6ab1_PtrTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Bool _1e5ca6e57_IsUnsafe(_1e5ca6ab1_PtrTypeDecl* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}








inline jule::Bool _1e5ca7353_ArrTypeDecl_eq(_1e5ca7353_ArrTypeDecl *_self_, _1e5ca7353_ArrTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem) &&
		(_self_->_field_Size == _self_->_field_Size);
}

inline jule::Bool _1e5ca76e9_AutoSized(_1e5ca7353_ArrTypeDecl* _self_) {
	return ((*(_self_))._field_Size == nullptr);;
}








inline jule::Bool _1e5ca7aa1_MapTypeDecl_eq(_1e5ca7aa1_MapTypeDecl *_self_, _1e5ca7aa1_MapTypeDecl _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val);
}










inline jule::Bool _1e5ca93bb_Expr_eq(_1e5ca93bb_Expr *_self_, _1e5ca93bb_Expr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_End == _self_->_field_End) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}






inline jule::Bool _1e5ca9685_RangeExpr_eq(_1e5ca9685_RangeExpr *_self_, _1e5ca9685_RangeExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1e5ca9c90_UseExpr_eq(_1e5ca9c90_UseExpr *_self_, _1e5ca9c90_UseExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}










inline jule::Bool _1e5caa356_LitExpr_eq(_1e5caa356_LitExpr *_self_, _1e5caa356_LitExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Value == _self_->_field_Value);
}






inline jule::Bool _1e5caa730_UnsafeExpr_eq(_1e5caa730_UnsafeExpr *_self_, _1e5caa730_UnsafeExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1e5caabd6_IdentExpr_eq(_1e5caabd6_IdentExpr *_self_, _1e5caabd6_IdentExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Binded == _self_->_field_Binded);
}






inline jule::Bool _1e5cab478_UnaryExpr_eq(_1e5cab478_UnaryExpr *_self_, _1e5cab478_UnaryExpr _other_) {
	return 
		(_self_->_field_Op == _other_._field_Op) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1e5cab852_VariadicExpr_eq(_1e5cab852_VariadicExpr *_self_, _1e5cab852_VariadicExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1e5cabc2b_CastExpr_eq(_1e5cabc2b_CastExpr *_self_, _1e5cabc2b_CastExpr _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}










inline jule::Bool _1e5cac4ce_SubIdentExpr_eq(_1e5cac4ce_SubIdentExpr *_self_, _1e5cac4ce_SubIdentExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}






inline jule::Bool _1e5cac985_BinaryExpr_eq(_1e5cac985_BinaryExpr *_self_, _1e5cac985_BinaryExpr _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_Op == _self_->_field_Op);
}





inline jule::Bool _1e5cad49c_Unhandled(_1e5cad0e5_FnCallExpr* _self_) {
	return ((*(_self_))._field_Exception == nullptr);;
}



inline jule::Bool _1e5cad733_Ignored(_1e5cad0e5_FnCallExpr* _self_) {
	return (((*(_self_))._field_Exception != nullptr) && (*(*(_self_))._field_Exception.alloc)._field_Deferred);;
}








inline jule::Bool _1e5cadada_FieldExprPair_eq(_1e5cadada_FieldExprPair *_self_, _1e5cadada_FieldExprPair _other_) {
	return 
		(_self_->_field_Field == _other_._field_Field) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}














inline jule::Bool _1e5cb01e6_KeyValPair_eq(_1e5cb01e6_KeyValPair *_self_, _1e5cb01e6_KeyValPair _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val) &&
		(_self_->_field_Colon == _self_->_field_Colon);
}










inline jule::Bool _1e5cb137e_IndexingExpr_eq(_1e5cb137e_IndexingExpr *_self_, _1e5cb137e_IndexingExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_End == _self_->_field_End) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Index == _self_->_field_Index);
}






inline jule::Bool _1e5cb19de_SlicingExpr_eq(_1e5cb19de_SlicingExpr *_self_, _1e5cb19de_SlicingExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_End == _self_->_field_End) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Start == _self_->_field_Start) &&
		(_self_->_field_To == _self_->_field_To);
}










inline jule::Bool _1e5cb2292_GenericDecl_eq(_1e5cb2292_GenericDecl *_self_, _1e5cb2292_GenericDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Constraint == _self_->_field_Constraint);
}






inline jule::Bool _1e5cb266b_LabelSt_eq(_1e5cb266b_LabelSt *_self_, _1e5cb266b_LabelSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}






inline jule::Bool _1e5cb2a45_GotoSt_eq(_1e5cb2a45_GotoSt *_self_, _1e5cb2a45_GotoSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Label == _self_->_field_Label);
}






inline jule::Bool _1e5cb2d42_FallSt_eq(_1e5cb2d42_FallSt *_self_, _1e5cb2d42_FallSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token);
}






inline jule::Bool _1e5cb34a2_AssignLeft_eq(_1e5cb34a2_AssignLeft *_self_, _1e5cb34a2_AssignLeft _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}










inline jule::Bool _1e5cb4948_Stmt_eq(_1e5cb4948_Stmt *_self_, _1e5cb4948_Stmt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Data == _self_->_field_Data);
}










inline jule::Bool _1e5cb57e5_ParamDecl_eq(_1e5cb57e5_ParamDecl *_self_, _1e5cb57e5_ParamDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Variadic == _self_->_field_Variadic) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}

inline jule::Bool _1e5cb5b9c_IsSelf(_1e5cb57e5_ParamDecl* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}







inline jule::Bool _1e5cb70dd_IsAnon(_1e5cb6c47_FnDecl* _self_) {
	return ((*(_self_))._field_Ident == static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11)));;
}












inline jule::Bool _1e5cb82cb_RetSt_eq(_1e5cb82cb_RetSt *_self_, _1e5cb82cb_RetSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1e5cb8a4b_Iter_eq(_1e5cb8a4b_Iter *_self_, _1e5cb8a4b_Iter _other_) {
	return 
		(_self_->_field_Comptime == _other_._field_Comptime) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}

inline jule::Bool _1e5cb8de2_IsInf(_1e5cb8a4b_Iter* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}








inline jule::Bool _1e5cb9376_WhileKind_eq(_1e5cb9376_WhileKind *_self_, _1e5cb9376_WhileKind _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Next == _self_->_field_Next) &&
		(_self_->_field_NextToken == _self_->_field_NextToken);
}

inline jule::Bool _1e5cb971c_IsWhileNext(_1e5cb9376_WhileKind* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}








inline jule::Bool _1e5cb9c7d_RangeKind_eq(_1e5cb9c7d_RangeKind *_self_, _1e5cb9c7d_RangeKind _other_) {
	return 
		(_self_->_field_InToken == _other_._field_InToken) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_KeyA == _self_->_field_KeyA) &&
		(_self_->_field_KeyB == _self_->_field_KeyB);
}






inline jule::Bool _1e5cba157_BreakSt_eq(_1e5cba157_BreakSt *_self_, _1e5cba157_BreakSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Label == _self_->_field_Label);
}






inline jule::Bool _1e5cba531_ContSt_eq(_1e5cba531_ContSt *_self_, _1e5cba531_ContSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Label == _self_->_field_Label);
}






inline jule::Bool _1e5cba9d7_If_eq(_1e5cba9d7_If *_self_, _1e5cba9d7_If _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}






inline jule::Bool _1e5cbadb1_Else_eq(_1e5cbadb1_Else *_self_, _1e5cbadb1_Else _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}










inline jule::Bool _1e5cbbaa4_TypeAliasDecl_eq(_1e5cbbaa4_TypeAliasDecl *_self_, _1e5cbbaa4_TypeAliasDecl _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope) &&
		(_self_->_field_Public == _self_->_field_Public) &&
		(_self_->_field_Binded == _self_->_field_Binded) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}


















inline jule::Bool _1e5cbd644_EnumItemDecl_eq(_1e5cbd644_EnumItemDecl *_self_, _1e5cbd644_EnumItemDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}










inline jule::Bool _1e5cbea30_TypeEnumItemDecl_eq(_1e5cbea30_TypeEnumItemDecl *_self_, _1e5cbea30_TypeEnumItemDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}










inline jule::Bool _1e5cc0459_FieldDecl_eq(_1e5cc0459_FieldDecl *_self_, _1e5cc0459_FieldDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Public == _self_->_field_Public) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Default == _self_->_field_Default);
}


















inline jule::Bool _1e5cc2eea_Field_eq(_1e5cc2eea_Field *_self_, _1e5cc2eea_Field _other_) {
	return 
		(_self_->_field_Owner == _other_._field_Owner) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Public == _self_->_field_Public) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Default == _self_->_field_Default);
}

inline jule::Ptr<_1e5cc81cb_FieldIns> _1e5cc33d5_instance(jule::Ptr<_1e5cc2eea_Field> _self_) {
	return jule::new_ptr<_1e5cc81cb_FieldIns>(_1e5cc81cb_FieldIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=_self_, ._field_Kind=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Default=jule::Ptr<_1e5e08c13_Data>(nullptr)});;
}








inline jule::Bool _1e5cc500d_Operators_eq(_1e5cc500d_Operators *_self_, _1e5cc500d_Operators _other_) {
	return 
		(_self_->_field_Eq == _other_._field_Eq) &&
		(_self_->_field_Gt == _self_->_field_Gt) &&
		(_self_->_field_GtEq == _self_->_field_GtEq) &&
		(_self_->_field_Lt == _self_->_field_Lt) &&
		(_self_->_field_LtEq == _self_->_field_LtEq) &&
		(_self_->_field_Shl == _self_->_field_Shl) &&
		(_self_->_field_Shr == _self_->_field_Shr) &&
		(_self_->_field_Add == _self_->_field_Add) &&
		(_self_->_field_Sub == _self_->_field_Sub) &&
		(_self_->_field_Div == _self_->_field_Div) &&
		(_self_->_field_Mul == _self_->_field_Mul) &&
		(_self_->_field_Mod == _self_->_field_Mod) &&
		(_self_->_field_BitAnd == _self_->_field_BitAnd) &&
		(_self_->_field_BitOr == _self_->_field_BitOr) &&
		(_self_->_field_BitXor == _self_->_field_BitXor) &&
		(_self_->_field_Neg == _self_->_field_Neg) &&
		(_self_->_field_Pos == _self_->_field_Pos) &&
		(_self_->_field_BitNot == _self_->_field_BitNot) &&
		(_self_->_field_AddAssign == _self_->_field_AddAssign) &&
		(_self_->_field_SubAssign == _self_->_field_SubAssign) &&
		(_self_->_field_DivAssign == _self_->_field_DivAssign) &&
		(_self_->_field_MulAssign == _self_->_field_MulAssign) &&
		(_self_->_field_ModAssign == _self_->_field_ModAssign) &&
		(_self_->_field_ShlAssign == _self_->_field_ShlAssign) &&
		(_self_->_field_ShrAssign == _self_->_field_ShrAssign) &&
		(_self_->_field_BitOrAssign == _self_->_field_BitOrAssign) &&
		(_self_->_field_BitAndAssign == _self_->_field_BitAndAssign) &&
		(_self_->_field_BitXorAssign == _self_->_field_BitXorAssign);
}





inline jule::Ptr<_1e5cc8c7b_StructIns> _1e5cc63b6_instance(jule::Ptr<_1e5cc5e21_Struct> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*_self_.alloc)._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	jule::Ptr<_1e5cc8c7b_StructIns> _1007_ins = jule::new_ptr<_1e5cc8c7b_StructIns>(_1e5cc8c7b_StructIns{._field_Checked=false, ._field_Decl=_self_, ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5cc81cb_FieldIns>>::alloc(0LL, (*_self_.alloc)._field_Fields.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1e5cc81cb_FieldIns>(nullptr); __jule_collection; }), ._field_Statics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5da0bcc_Var>>::alloc(0LL, (*_self_.alloc)._field_Statics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1e5da0bcc_Var>(nullptr); __jule_collection; }), ._field_Methods=jule::Slice<jule::Ptr<_1e5ce0358_Fn>>(nullptr), ._field_Mutable=false, ._field_Comparable=false, ._field_Refers=static__1e5ce68c0_new(), ._field_Operators=_1e5cc500d_Operators{._field_Eq=jule::Ptr<_1e5ce3416_FnIns>(nullptr), ._field_Gt=jule::Ptr<_1e5ce3416_FnIns>(nullptr), ._field_GtEq=jule::Ptr<_1e5ce3416_FnIns>(nullptr), ._field_Lt=jule::Ptr<_1e5ce3416_FnIns>(nullptr), ._field_LtEq=jule::Ptr<_1e5ce3416_FnIns>(nullptr), ._field_Shl=jule::Ptr<_1e5ce3416_FnIns>(nullptr), ._field_Shr=jule::Ptr<_1e5ce3416_FnIns>(nullptr), ._field_Add=jule::Ptr<_1e5ce3416_FnIns>(nullptr), ._field_Sub=jule::Ptr<_1e5ce3416_FnIns>(nullptr), ._field_Div=jule::Ptr<_1e5ce3416_FnIns>(nullptr), ._field_Mul=jule::Ptr<_1e5ce3416_FnIns>(nullptr), ._field_Mod=jule::Ptr<_1e5ce3416_FnIns>(nullptr), ._field_BitAnd=jule::Ptr<_1e5ce3416_FnIns>(nullptr), ._field_BitOr=jule::Ptr<_1e5ce3416_FnIns>(nullptr), ._field_BitXor=jule::Ptr<_1e5ce3416_FnIns>(nullptr), ._field_Neg=jule::Ptr<_1e5ce3416_FnIns>(nullptr), ._field_Pos=jule::Ptr<_1e5ce3416_FnIns>(nullptr), ._field_BitNot=jule::Ptr<_1e5ce3416_FnIns>(nullptr), ._field_AddAssign=jule::Ptr<_1e5ce3416_FnIns>(nullptr), ._field_SubAssign=jule::Ptr<_1e5ce3416_FnIns>(nullptr), ._field_DivAssign=jule::Ptr<_1e5ce3416_FnIns>(nullptr), ._field_MulAssign=jule::Ptr<_1e5ce3416_FnIns>(nullptr), ._field_ModAssign=jule::Ptr<_1e5ce3416_FnIns>(nullptr), ._field_ShlAssign=jule::Ptr<_1e5ce3416_FnIns>(nullptr), ._field_ShrAssign=jule::Ptr<_1e5ce3416_FnIns>(nullptr), ._field_BitOrAssign=jule::Ptr<_1e5ce3416_FnIns>(nullptr), ._field_BitAndAssign=jule::Ptr<_1e5ce3416_FnIns>(nullptr), ._field_BitXorAssign=jule::Ptr<_1e5ce3416_FnIns>(nullptr)}});;
	{
		auto expr = &((*_self_.alloc)._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca61ca4c:;
		if (it != expr_end) {
			jule::Ptr<_1e5da0bcc_Var> _10715_s = *it;
			{
				(*(_1007_ins))._field_Statics=jule::append((*_1007_ins.alloc)._field_Statics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5da0bcc_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1e5da0bcc_Var>((*(_10715_s))); __jule_collection; }));
			}
			_iter_next_1ca61ca4c:;
			++it;
			goto _iter_begin_1ca61ca4c;
		}
		_iter_end_1ca61ca4c:;
	};
	{
		auto expr = &((*_self_.alloc)._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca61d90a:;
		if (it != expr_end) {
			jule::Ptr<_1e5cc2eea_Field> _11115_f = *it;
			{
				jule::Ptr<_1e5cc81cb_FieldIns> _1128_f2 = _1e5cc33d5_instance(_11115_f);;
				(*(_1128_f2))._field_Owner=_1007_ins;
				(*_1007_ins.alloc)._field_Fields=jule::append((*_1007_ins.alloc)._field_Fields,({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5cc81cb_FieldIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1128_f2; __jule_collection; }));
				if ((((!((*_11115_f.alloc)._field_Mutable)) && ((*((*_11115_f.alloc)._field_Kind))._field_Kind != nullptr)) && _1e5e431d1_Mutable((*((*(_11115_f))._field_Kind))._field_Kind))) {
					(*_1007_ins.alloc)._field_Mutable=true;
				};
			}
			_iter_next_1ca61d90a:;
			++it;
			goto _iter_begin_1ca61d90a;
		}
		_iter_end_1ca61d90a:;
	};
	if (((*_self_.alloc)._field_Generics.len() == 0LL)) {
		(*_1007_ins.alloc)._field_Methods=(*_self_.alloc)._field_Methods;
	} else {
		(*_1007_ins.alloc)._field_Methods=({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5ce0358_Fn>>::alloc(0LL, (*_self_.alloc)._field_Methods.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1e5ce0358_Fn>(nullptr); __jule_collection; });
		{
			auto expr = &((*_self_.alloc)._field_Methods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ca622c61:;
			if (it != expr_end) {
				jule::Ptr<_1e5ce0358_Fn> _12416_f = *it;
				{
					jule::Ptr<_1e5ce0358_Fn> _1259_fins = jule::new_ptr<_1e5ce0358_Fn>((*(_12416_f)));;
					(*_1259_fins.alloc)._field_Instances=nullptr;
					(*_1007_ins.alloc)._field_Methods=jule::append((*_1007_ins.alloc)._field_Methods,({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5ce0358_Fn>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1259_fins; __jule_collection; }));
				}
				_iter_next_1ca622c61:;
				++it;
				goto _iter_begin_1ca622c61;
			}
			_iter_end_1ca622c61:;
		};
	};
	return _1007_ins;;
}



inline jule::Ptr<_1e5cc8c7b_StructIns> _1e5cc66c4_appendInstance(_1e5cc5e21_Struct* _self_, jule::Ptr<_1e5cc8c7b_StructIns>* _13635_ins) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca623118:;
		if (it != expr_end) {
			jule::Ptr<_1e5cc8c7b_StructIns> _14215_ains = *it;
			{
				if (_1e5cc992a_Same(_14215_ains.ptr(), (*(_13635_ins)))) {
					return _14215_ains;;
				};
			}
			_iter_next_1ca623118:;
			++it;
			goto _iter_begin_1ca623118;
		}
		_iter_end_1ca623118:;
	};
	{ jule::Slice<jule::Ptr<_1e5cc8c7b_StructIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13635_ins))); };
	return nullptr;;
}



inline jule::Ptr<_1e5ce0358_Fn> _1e5cc6ac0_FindMethod(_1e5cc5e21_Struct* _self_, jule::Str _15426_ident, jule::Bool _15438_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca62665a:;
		if (it != expr_end) {
			jule::Ptr<_1e5ce0358_Fn> _15515_f = *it;
			{
				if ((((*(_15515_f))._field_Statically == _15438_statically) && ((*_15515_f.alloc)._field_Ident == _15426_ident))) {
					return _15515_f;;
				};
			}
			_iter_next_1ca62665a:;
			++it;
			goto _iter_begin_1ca62665a;
		}
		_iter_end_1ca62665a:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e5da0bcc_Var> _1e5cc6e11_FindStatic(_1e5cc5e21_Struct* _self_, jule::Str _16526_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca62798b:;
		if (it != expr_end) {
			jule::Ptr<_1e5da0bcc_Var> _16615_v = *it;
			{
				if (((*(_16615_v))._field_Ident == _16526_ident)) {
					return _16615_v;;
				};
			}
			_iter_next_1ca62798b:;
			++it;
			goto _iter_begin_1ca62798b;
		}
		_iter_end_1ca62798b:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e5cc2eea_Field> _1e5cc7252_FindField(_1e5cc5e21_Struct* _self_, jule::Str _17625_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca62898c:;
		if (it != expr_end) {
			jule::Ptr<_1e5cc2eea_Field> _17715_f = *it;
			{
				if (((*(_17715_f))._field_Ident == _17625_ident)) {
					return _17715_f;;
				};
			}
			_iter_next_1ca62898c:;
			++it;
			goto _iter_begin_1ca62898c;
		}
		_iter_end_1ca62898c:;
	};
	return nullptr;;
}



inline jule::Bool _1e5cc7593_IsImplements(_1e5cc5e21_Struct* _self_, jule::Ptr<_1e5d03db6_Trait> _18624_t) {
	{
		auto expr = &((*(_self_))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca62997c:;
		if (it != expr_end) {
			jule::Ptr<_1e5d03db6_Trait> *_18710_it = it;
			{
				if ((_18624_t == (*(_18710_it)))) {
					return true;;
				};
			}
			_iter_next_1ca62997c:;
			++it;
			goto _iter_begin_1ca62997c;
		}
		_iter_end_1ca62997c:;
	};
	return false;;
}



inline jule::Bool _1e5cc78d4_IsUses(_1e5cc5e21_Struct* _self_, jule::Ptr<_1e5cc5e21_Struct> _19618_s) {
	{
		auto expr = &((*(_self_))._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca62a40b:;
		if (it != expr_end) {
			jule::Ptr<_1e5cc5e21_Struct> *_19710_u = it;
			{
				while ((_19618_s == (*(_19710_u)))) {
					{
						return true;;
					}
				_iter_next_1ca62ae34:;
				}
				_iter_end_1ca62ae34:;;
			}
			_iter_next_1ca62a40b:;
			++it;
			goto _iter_begin_1ca62a40b;
		}
		_iter_end_1ca62a40b:;
	};
	return false;;
}








inline jule::Bool _1e5cc81cb_FieldIns_eq(_1e5cc81cb_FieldIns *_self_, _1e5cc81cb_FieldIns _other_) {
	return 
		(_self_->_field_Owner == _other_._field_Owner) &&
		(_self_->_field_Decl == _self_->_field_Decl) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Default == _self_->_field_Default);
}





inline jule::Str _1e5cc9133_Str(_1e5cc8c7b_StructIns* _self_) {
	_224497295_StrBuilder _2427_kind = static__2244a0b83_New(32LL);;
	_2244a1090_WriteStr(&_2427_kind, (*((*(_self_))._field_Decl))._field_Ident);
	if (((*(_self_))._field_Generics.len() > 0LL)) {
		_2244a1348_WriteByte(&_2427_kind, '[');
		{
			auto expr = &((*(_self_))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ca62db4b:;
			if (it != expr_end) {
				jule::I64 _2468_i = it - expr->begin();
				jule::Ptr<_1e5e3ee14_InsGeneric> *_24611_g = it;
				{
					_2244a1090_WriteStr(&_2427_kind, _1e5e41be6_Str((*((*(_24611_g))))._field_Kind.ptr()));
					if ((_2468_i < ((*(_self_))._field_Generics.len() - 1LL))) {
						_2244a1348_WriteByte(&_2427_kind, ',');
					};
				}
				_iter_next_1ca62db4b:;
				++it;
				_2468_i++;
				goto _iter_begin_1ca62db4b;
			}
			_iter_end_1ca62db4b:;
		};
		_2244a1348_WriteByte(&_2427_kind, ']');
	};
	return _2244a1887_Str(&_2427_kind);;
}



inline jule::Bool _1e5cc9474_Equal(jule::Ptr<_1e5cc8c7b_StructIns> _self_, jule::Ptr<_1e5e417ea_TypeKind> _25818_other) {
	jule::Ptr<_1e5cc8c7b_StructIns> _2593_s = _1e5e45524_Struct(_25818_other.ptr());;
	if ((_2593_s == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Decl != (*(_2593_s))._field_Decl)) {
		return false;;
	};
	if (((*_self_.alloc)._field_Generics.len() != (*(_2593_s))._field_Generics.len())) {
		return false;;
	};
	jule::I64 _2727_i = 0LL;;
	for (; (_2727_i < (*_self_.alloc)._field_Generics.len()); (_2727_i)++) {
		{
			if ((!(_1e5e42037_Equal((*((*(_self_))._field_Generics[_2727_i]))._field_Kind, (*((*(_2593_s))._field_Generics[_2727_i]))._field_Kind)))) {
				return false;;
			};
		}
	_iter_next_1ca632ee6:;
	}
	_iter_end_1ca632ee6:;;
	return true;;
}



inline jule::Bool _1e5cc992a_Same(_1e5cc8c7b_StructIns* _self_, jule::Ptr<_1e5cc8c7b_StructIns> _28616_s) {
	if ((((*(_self_))._field_Decl != (*(_28616_s))._field_Decl) || ((*_28616_s.alloc)._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca635218:;
		if (it != expr_end) {
			jule::I64 _2907_i = it - expr->begin();
			jule::Ptr<_1e5e3ee14_InsGeneric> *_29010_g = it;
			{
				jule::Ptr<_1e5e3ee14_InsGeneric> _2914_g2 = (*(_28616_s))._field_Generics[_2907_i];;
				if ((((*((*((*(_29010_g))))._field_Kind))._field_BindIdent != (*(*(_2914_g2))._field_Kind.alloc)._field_BindIdent) || (!(_1e5e42037_Equal((*((*(_29010_g))))._field_Kind, (*(_2914_g2))._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1ca635218:;
			++it;
			_2907_i++;
			goto _iter_begin_1ca635218;
		}
		_iter_end_1ca635218:;
	};
	return true;;
}



inline jule::Ptr<_1e5ce0358_Fn> _1e5cc9d26_FindMethod(_1e5cc8c7b_StructIns* _self_, jule::Str _30126_ident, jule::Bool _30138_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca6384d5:;
		if (it != expr_end) {
			jule::Ptr<_1e5ce0358_Fn> _30215_f = *it;
			{
				if ((((*(_30215_f))._field_Statically == _30138_statically) && ((*_30215_f.alloc)._field_Ident == _30126_ident))) {
					return _30215_f;;
				};
			}
			_iter_next_1ca6384d5:;
			++it;
			goto _iter_begin_1ca6384d5;
		}
		_iter_end_1ca6384d5:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e5cc81cb_FieldIns> _1e5cca167_FindField(_1e5cc8c7b_StructIns* _self_, jule::Str _31225_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca639816:;
		if (it != expr_end) {
			jule::Ptr<_1e5cc81cb_FieldIns> _31315_f = *it;
			{
				if (((*((*(_31315_f))._field_Decl))._field_Ident == _31225_ident)) {
					return _31315_f;;
				};
			}
			_iter_next_1ca639816:;
			++it;
			goto _iter_begin_1ca639816;
		}
		_iter_end_1ca639816:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e5da0bcc_Var> _1e5cca4a8_FindStatic(_1e5cc8c7b_StructIns* _self_, jule::Str _32326_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca63a0ca:;
		if (it != expr_end) {
			jule::Ptr<_1e5da0bcc_Var> _32415_v = *it;
			{
				if (((*(_32415_v))._field_Ident == _32326_ident)) {
					return _32415_v;;
				};
			}
			_iter_next_1ca63a0ca:;
			++it;
			goto _iter_begin_1ca63a0ca;
		}
		_iter_end_1ca63a0ca:;
	};
	return nullptr;;
}








inline jule::Bool _1e5cd2856_OperandExprModel_eq(_1e5cd2856_OperandExprModel *_self_, _1e5cd2856_OperandExprModel _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_Model == _self_->_field_Model);
}






inline jule::Bool _1e5cd2d51_BinaryExprModel_eq(_1e5cd2d51_BinaryExprModel *_self_, _1e5cd2d51_BinaryExprModel _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_Op == _self_->_field_Op);
}






inline jule::Bool _1e5cd322a_UnaryExprModel_eq(_1e5cd322a_UnaryExprModel *_self_, _1e5cd322a_UnaryExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Op == _self_->_field_Op);
}






inline jule::Bool _1e5cd3758_StructArgExprModel_eq(_1e5cd3758_StructArgExprModel *_self_, _1e5cd3758_StructArgExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Field == _self_->_field_Field) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}










inline jule::Bool _1e5cd3deb_AllocStructLitExprModel_eq(_1e5cd3deb_AllocStructLitExprModel *_self_, _1e5cd3deb_AllocStructLitExprModel _other_) {
	return 
		(_self_->_field_Lit == _other_._field_Lit);
}






inline jule::Bool _1e5cd447e_CastingExprModel_eq(_1e5cd447e_CastingExprModel *_self_, _1e5cd447e_CastingExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_ExprKind == _self_->_field_ExprKind);
}














inline jule::Bool _1e5cd56b1_IndexingExprModel_eq(_1e5cd56b1_IndexingExprModel *_self_, _1e5cd56b1_IndexingExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Index == _self_->_field_Index);
}










inline jule::Bool _1e5cd6041_KeyValPairExprModel_eq(_1e5cd6041_KeyValPairExprModel *_self_, _1e5cd6041_KeyValPairExprModel _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val);
}










inline jule::Bool _1e5cd699d_SlicingExprModel_eq(_1e5cd699d_SlicingExprModel *_self_, _1e5cd699d_SlicingExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Left == _self_->_field_Left) &&
		(_self_->_field_Right == _self_->_field_Right);
}






inline jule::Bool _1e5cd7031_TraitSubIdentExprModel_eq(_1e5cd7031_TraitSubIdentExprModel *_self_, _1e5cd7031_TraitSubIdentExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Method == _self_->_field_Method) &&
		(_self_->_field_Trt == _self_->_field_Trt);
}






inline jule::Bool _1e5cd78c2_StructSubIdentExprModel_eq(_1e5cd78c2_StructSubIdentExprModel *_self_, _1e5cd78c2_StructSubIdentExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Method == _self_->_field_Method) &&
		(_self_->_field_Field == _self_->_field_Field) &&
		(_self_->_field_Owner == _self_->_field_Owner);
}






inline jule::Bool _1e5cd7c68_StructStaticIdentExprModel_eq(_1e5cd7c68_StructStaticIdentExprModel *_self_, _1e5cd7c68_StructStaticIdentExprModel _other_) {
	return 
		(_self_->_field_Structure == _other_._field_Structure) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Method == _self_->_field_Method);
}














inline jule::Bool _1e5cd8818_BuiltinOutCallExprModel_eq(_1e5cd8818_BuiltinOutCallExprModel *_self_, _1e5cd8818_BuiltinOutCallExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Debug == _self_->_field_Debug);
}






inline jule::Bool _1e5cd8be2_BuiltinOutlnCallExprModel_eq(_1e5cd8be2_BuiltinOutlnCallExprModel *_self_, _1e5cd8be2_BuiltinOutlnCallExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Debug == _self_->_field_Debug);
}






inline jule::Bool _1e5cd90bb_BuiltinNewCallExprModel_eq(_1e5cd90bb_BuiltinNewCallExprModel *_self_, _1e5cd90bb_BuiltinNewCallExprModel _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_Init == _self_->_field_Init);
}






inline jule::Bool _1e5cd9495_BuiltinPanicCallExprModel_eq(_1e5cd9495_BuiltinPanicCallExprModel *_self_, _1e5cd9495_BuiltinPanicCallExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1e5cd994b_BuiltinMakeCallExprModel_eq(_1e5cd994b_BuiltinMakeCallExprModel *_self_, _1e5cd994b_BuiltinMakeCallExprModel _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_Len == _self_->_field_Len) &&
		(_self_->_field_Cap == _self_->_field_Cap);
}






inline jule::Bool _1e5cd9d25_BuiltinAppendCallExprModel_eq(_1e5cd9d25_BuiltinAppendCallExprModel *_self_, _1e5cd9d25_BuiltinAppendCallExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Elements == _self_->_field_Elements);
}






inline jule::Bool _1e5cda122_BuiltinLenCallExprModel_eq(_1e5cda122_BuiltinLenCallExprModel *_self_, _1e5cda122_BuiltinLenCallExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1e5cda41e_BuiltinCapCallExprModel_eq(_1e5cda41e_BuiltinCapCallExprModel *_self_, _1e5cda41e_BuiltinCapCallExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1e5cda7e8_BuiltinDeleteCallExprModel_eq(_1e5cda7e8_BuiltinDeleteCallExprModel *_self_, _1e5cda7e8_BuiltinDeleteCallExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Key == _self_->_field_Key);
}






inline jule::Bool _1e5cdabc2_BuiltinCopyCallExprModel_eq(_1e5cdabc2_BuiltinCopyCallExprModel *_self_, _1e5cdabc2_BuiltinCopyCallExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Src == _self_->_field_Src);
}






inline jule::Bool _1e5cdb09b_BuiltinErrorCallExprModel_eq(_1e5cdb09b_BuiltinErrorCallExprModel *_self_, _1e5cdb09b_BuiltinErrorCallExprModel _other_) {
	return 
		(_self_->_field_Func == _other_._field_Func) &&
		(_self_->_field_Err == _self_->_field_Err);
}






inline jule::Bool _1e5cdb398_SizeofExprModel_eq(_1e5cdb398_SizeofExprModel *_self_, _1e5cdb398_SizeofExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1e5cdba4c_AlignofExprModel_eq(_1e5cdba4c_AlignofExprModel *_self_, _1e5cdba4c_AlignofExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1e5cdbc39_RuneExprModel_eq(_1e5cdbc39_RuneExprModel *_self_, _1e5cdbc39_RuneExprModel _other_) {
	return 
		(_self_->_field_Code == _other_._field_Code);
}










inline jule::Bool _1e5cdc3aa_FreeExprModel_eq(_1e5cdc3aa_FreeExprModel *_self_, _1e5cdc3aa_FreeExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}










inline jule::Bool _1e5cdd884_Param_eq(_1e5cdd884_Param *_self_, _1e5cdd884_Param _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Variadic == _self_->_field_Variadic) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}

inline jule::Ptr<_1e5ce22b1_ParamIns> _1e5cddc4c_instance(jule::Ptr<_1e5cdd884_Param> _self_) {
	return jule::new_ptr<_1e5ce22b1_ParamIns>(_1e5ce22b1_ParamIns{._field_Decl=_self_, ._field_Kind=jule::Ptr<_1e5e417ea_TypeKind>(nullptr)});;
}



inline jule::Bool _1e5cdded3_IsSelf(_1e5cdd884_Param* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}



inline jule::Bool _1e5cde269_IsRef(_1e5cdd884_Param* _self_) {
	return (!((*(_self_))._field_Ident).empty() && ((*(_self_))._field_Ident[0LL] == '&'));;
}







inline jule::Bool _1e5ce080e_IsVoid(_1e5ce0358_Fn* _self_) {
	return ((*(_self_))._field_Result == nullptr);;
}



inline jule::Bool _1e5ce0a95_IsMethod(_1e5ce0358_Fn* _self_) {
	if (((*(_self_))._field_Owner != nullptr)) {
		return true;;
	};
	if (((*(_self_))._field_Params.len() > 0LL)) {
		jule::Ptr<_1e5cdd884_Param> _804_p = (*(_self_))._field_Params[0LL];;
		if (_1e5cdded3_IsSelf(_804_p.ptr())) {
			return true;;
		};
	};
	return false;;
}



inline jule::Bool _1e5ce0d2b_IsEntryPoint(_1e5ce0358_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("main", 4);;
}



inline jule::Bool _1e5ce10b2_IsInit(_1e5ce0358_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("init", 4);;
}



inline jule::Bool _1e5ce1348_IsAnon(_1e5ce0358_Fn* _self_) {
	return _1e5c9277d_IsAnonIdent((*(_self_))._field_Ident);;
}



inline jule::Bool _1e5ce15ce_AnyVar(_1e5ce0358_Fn* _self_) {
	return (((*(_self_))._field_Result != nullptr) && ((*(*(_self_))._field_Result.alloc)._field_Idents.len() > 0LL));;
}



inline jule::Ptr<_1e5ce3416_FnIns> _1e5ce1865_instanceForce(jule::Ptr<_1e5ce0358_Fn> _self_) {
	jule::Ptr<_1e5ce3416_FnIns> _1107_ins = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=_self_, ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::new_ptr<_1e5d384d3_Scope>(_1e5d384d3_Scope{._field_Parent=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Unsafety=false, ._field_Deferred=false, ._field_Stmts=jule::Slice<jule::Any>(nullptr), ._field_ChildIndex=0, ._field_StmtIndex=0}), ._field_Refers=static__1e5ce68c0_new(), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>(nullptr), ._field_reloaded=false});;
	(*(_1107_ins))._field_Params=({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>::alloc(0LL, (*(_self_))._field_Params.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1e5ce22b1_ParamIns>(nullptr); __jule_collection; });
	{
		auto expr = &((*_self_.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca643d92:;
		if (it != expr_end) {
			jule::Ptr<_1e5cdd884_Param> _11715_p = *it;
			{
				(*_1107_ins.alloc)._field_Params=jule::append((*_1107_ins.alloc)._field_Params,({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1e5cddc4c_instance(_11715_p); __jule_collection; }));
			}
			_iter_next_1ca643d92:;
			++it;
			goto _iter_begin_1ca643d92;
		}
		_iter_end_1ca643d92:;
	};
	if (((*((*_1107_ins.alloc)._field_Decl))._field_Result != nullptr)) {
		(*_1107_ins.alloc)._field_Result=(*((*(*((*(_1107_ins))._field_Decl))._field_Result.alloc)._field_Kind))._field_Kind;
	};
	return _1107_ins;;
}



inline jule::Ptr<_1e5ce3416_FnIns> _1e5ce1aeb_instance(jule::Ptr<_1e5ce0358_Fn> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*_self_.alloc)._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	return _1e5ce1865_instanceForce(_self_);;
}



inline jule::Ptr<_1e5ce3416_FnIns> _1e5ce1e09_appendInstance(_1e5ce0358_Fn* _self_, jule::Ptr<_1e5ce3416_FnIns>* _13835_ins) {
	if (((*(_self_))._field_Generics.len() == 0LL)) {
		if (((*(_self_))._field_Instances.len() == 1LL)) {
			return (*(_self_))._field_Instances[0LL];;
		};
		{ jule::Slice<jule::Ptr<_1e5ce3416_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13835_ins))); };
		return nullptr;;
	};
	if (((*(_self_))._field_Instances.len() == 0LL)) {
		{ jule::Slice<jule::Ptr<_1e5ce3416_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13835_ins))); };
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca648d53:;
		if (it != expr_end) {
			jule::Ptr<_1e5ce3416_FnIns> _15415_ains = *it;
			{
				if (_1e5ce4ea6_Same(_15415_ains.ptr(), (*(_13835_ins)))) {
					return _15415_ains;;
				};
			}
			_iter_next_1ca648d53:;
			++it;
			goto _iter_begin_1ca648d53;
		}
		_iter_end_1ca648d53:;
	};
	{ jule::Slice<jule::Ptr<_1e5ce3416_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13835_ins))); };
	return nullptr;;
}








inline jule::Bool _1e5ce22b1_ParamIns_eq(_1e5ce22b1_ParamIns *_self_, _1e5ce22b1_ParamIns _other_) {
	return 
		(_self_->_field_Decl == _other_._field_Decl) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}

inline jule::Str _1e5ce2657_Str(_1e5ce22b1_ParamIns* _self_) {
	_224497295_StrBuilder _1767_s = static__2244a0b83_New(32LL);;
	if ((*((*(_self_))._field_Decl))._field_Mutable) {
		_2244a1090_WriteStr(&_1767_s, jule::Str::lit("mut ", 4));
	};
	if ((*(*(_self_))._field_Decl.alloc)._field_Reference) {
		_2244a1090_WriteStr(&_1767_s, jule::Str::lit("&_:", 3));
	};
	if (_1e5cdded3_IsSelf((*(_self_))._field_Decl)) {
		if (_1e5cde269_IsRef((*(_self_))._field_Decl)) {
			_2244a1348_WriteByte(&_1767_s, '&');
		};
		_2244a1090_WriteStr(&_1767_s, jule::Str::lit("self", 4));
		return _2244a1887_Str(&_1767_s);;
	};
	if ((*(*(_self_))._field_Decl.alloc)._field_Variadic) {
		_2244a1090_WriteStr(&_1767_s, jule::Str::lit("...", 3));
	};
	if (((*(_self_))._field_Kind != nullptr)) {
		_2244a1090_WriteStr(&_1767_s, _1e5e41be6_Str((*(_self_))._field_Kind));
	};
	return _2244a1887_Str(&_1767_s);;
}







inline jule::Str _1e5ce378a_Str(_1e5ce3416_FnIns* _self_) {
	;
	return _1e5ce52e7_GetKindStr(_self_, false);;
}



inline jule::Bool _1e5ce3acb_Equal(jule::Ptr<_1e5ce3416_FnIns> _self_, jule::Ptr<_1e5e417ea_TypeKind> _22918_other) {
	jule::Ptr<_1e5ce3416_FnIns> _2303_f = _1e5e4528d_Fn(_22918_other.ptr());;
	if ((_2303_f == nullptr)) {
		return false;;
	};
	return _1e5ce4071_EqualFn(_self_, &(_2303_f));;
}



inline jule::Bool _1e5ce4071_EqualFn(jule::Ptr<_1e5ce3416_FnIns> _self_, jule::Ptr<_1e5ce3416_FnIns>* _24021_f) {
	if (((*((*(_self_))._field_Decl))._field_Exceptional != (*(*((*(_24021_f))))._field_Decl.alloc)._field_Exceptional)) {
		return false;;
	};
	if (((*(*(_self_))._field_Decl.alloc)._field_Unsafety != (*(*((*(_24021_f))))._field_Decl.alloc)._field_Unsafety)) {
		return false;;
	};
	if ((_1e5ce080e_IsVoid((*(_self_))._field_Decl) != _1e5ce080e_IsVoid((*((*(_24021_f))))._field_Decl))) {
		return false;;
	};
	jule::Fn<jule::Bool,jule::Ptr<_1e5ce22b1_ParamIns>,jule::Ptr<_1e5ce22b1_ParamIns>> _2503_checkParams = jule::__new_closure<jule::Bool,jule::Ptr<_1e5ce22b1_ParamIns>,jule::Ptr<_1e5ce22b1_ParamIns>>((void*)__jule_anon1ca65449b, nullptr, nullptr);;
	if (((*((*(_24021_f))))._field_Params.len() != (*_self_.alloc)._field_Params.len())) {
		return false;;
	};
	jule::I64 _2827_i = 0LL;;
	for (; (_2827_i < (*_self_.alloc)._field_Params.len()); (_2827_i)++) {
		{
			if ((!(_2503_checkParams((*(_self_))._field_Params[_2827_i], (*((*(_24021_f))))._field_Params[_2827_i])))) {
				return false;;
			};
		}
	_iter_next_1ca65a309:;
	}
	_iter_end_1ca65a309:;;
	if ((!(_1e5ce080e_IsVoid((*(_self_))._field_Decl)))) {
		if ((!(_1e5e42037_Equal((*_self_.alloc)._field_Result, (*((*(_24021_f))))._field_Result)))) {
			return false;;
		};
	};
	return true;;
}



inline jule::Bool _1e5ce43b2_equalTrait(jule::Ptr<_1e5ce3416_FnIns> _self_, jule::Ptr<_1e5ce3416_FnIns>* _29924_other) {
	if (((*((*(_self_))._field_Decl))._field_Public != (*(*((*(_29924_other))))._field_Decl.alloc)._field_Public)) {
		return false;;
	};
	if (((*(*(_self_))._field_Decl.alloc)._field_Ident != (*(*((*(_29924_other))))._field_Decl.alloc)._field_Ident)) {
		return false;;
	};
	if ((!(_1e5ce4071_EqualFn(_self_, _29924_other)))) {
		return false;;
	};
	if (((*(*(_self_))._field_Decl.alloc)._field_Generics.len() != (*(*((*(_29924_other))))._field_Decl.alloc)._field_Generics.len())) {
		return false;;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1e5e417ea_TypeKind>> _1e5ce4648_Types(_1e5ce3416_FnIns* _self_) {
	{
		
		if (((*(_self_))._field_Result == nullptr)) {
			_case_begin_1ca660e9c:;
			{
				return nullptr;;
			}
		}
		else if ((_1e5e45cc7_Tup((*(_self_))._field_Result.ptr()) == nullptr)) {
			_case_begin_1ca661013:;
			{
				return ({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5e417ea_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_self_))._field_Result; __jule_collection; });;
			}
		}
		else {
			_case_begin_1ca660a29:;
			{
				return (*(_1e5e45cc7_Tup((*(_self_))._field_Result.ptr())))._field_Types;;
			}
		}
		_match_end_1ca660919:;
	};
}



inline jule::Bool _1e5ce48ce_IsBuiltin(_1e5ce3416_FnIns* _self_) {
	return ((*(_self_))._field_caller != nullptr);;
}



inline jule::Bool _1e5ce4b65_IsAnon(_1e5ce3416_FnIns* _self_) {
	return ((*(_self_))._field_Anon || (((*(_self_))._field_Decl != nullptr) && _1e5ce1348_IsAnon((*(_self_))._field_Decl)));;
}



inline jule::Bool _1e5ce4ea6_Same(_1e5ce3416_FnIns* _self_, jule::Ptr<_1e5ce3416_FnIns> _34216_f) {
	if ((((*(_self_))._field_Decl != (*(_34216_f))._field_Decl) || ((*_34216_f.alloc)._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca663bb4:;
		if (it != expr_end) {
			jule::I64 _3477_i = it - expr->begin();
			jule::Ptr<_1e5e3ee14_InsGeneric> *_34710_g = it;
			{
				jule::Ptr<_1e5e3ee14_InsGeneric> _3484_g2 = (*(_34216_f))._field_Generics[_3477_i];;
				if ((((*((*((*(_34710_g))))._field_Kind))._field_BindIdent != (*(*(_3484_g2))._field_Kind.alloc)._field_BindIdent) || (!(_1e5e42037_Equal((*((*(_34710_g))))._field_Kind, (*(_3484_g2))._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1ca663bb4:;
			++it;
			_3477_i++;
			goto _iter_begin_1ca663bb4;
		}
		_iter_end_1ca663bb4:;
	};
	return true;;
}



inline jule::Str _1e5ce52e7_GetKindStr(_1e5ce3416_FnIns* _self_, jule::Bool _35922_ident) {
	_224497295_StrBuilder _3607_s = static__2244a0b83_New(32LL);;
	if ((((*(_self_))._field_Decl != nullptr) && (*(*(_self_))._field_Decl.alloc)._field_Unsafety)) {
		_2244a1090_WriteStr(&_3607_s, jule::Str::lit("unsafe ", 7));
	};
	_2244a1090_WriteStr(&_3607_s, jule::Str::lit("fn", 2));
	if ((_35922_ident && ((*(_self_))._field_Decl != nullptr))) {
		_2244a1348_WriteByte(&_3607_s, ' ');
		_2244a1090_WriteStr(&_3607_s, (*(*(_self_))._field_Decl.alloc)._field_Ident);
	};
	_2244a1348_WriteByte(&_3607_s, '(');
	jule::I64 _3743_n = (*(_self_))._field_Params.len();;
	if ((_3743_n > 0LL)) {
		{
			auto expr = &((*(_self_))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ca669acc:;
			if (it != expr_end) {
				jule::I64 _3768_i = it - expr->begin();
				jule::Ptr<_1e5ce22b1_ParamIns> *_37611_p = it;
				{
					_2244a1090_WriteStr(&_3607_s, _1e5ce2657_Str((*(_37611_p)).ptr()));
					if ((_3768_i < ((*(_self_))._field_Params.len() - 1LL))) {
						_2244a1348_WriteByte(&_3607_s, ',');
					};
				}
				_iter_next_1ca669acc:;
				++it;
				_3768_i++;
				goto _iter_begin_1ca669acc;
			}
			_iter_end_1ca669acc:;
		};
	};
	_2244a1348_WriteByte(&_3607_s, ')');
	if ((((*(_self_))._field_Decl != nullptr) && (*(*(_self_))._field_Decl.alloc)._field_Exceptional)) {
		_2244a1348_WriteByte(&_3607_s, '!');
	};
	if ((((*(_self_))._field_Decl != nullptr) && (!(_1e5ce080e_IsVoid((*(_self_))._field_Decl))))) {
		_2244a1348_WriteByte(&_3607_s, ':');
		_2244a1090_WriteStr(&_3607_s, _1e5e41be6_Str((*(_self_))._field_Result.ptr()));
	};
	return _2244a1887_Str(&_3607_s);;
}







inline jule::Ptr<_1e5ce65a1_ReferenceStack> static__1e5ce68c0_new(void) {
	return jule::new_ptr<_1e5ce65a1_ReferenceStack>(_1e5ce65a1_ReferenceStack{._field_buffer=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, 10LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
}



inline jule::I64 _1e5ce6cbb_Len(_1e5ce65a1_ReferenceStack* _self_) {
	return (*(_self_))._field_buffer.len();;
}



inline jule::Any _1e5ce710c_At(_1e5ce65a1_ReferenceStack* _self_, jule::I64 _6818_i) {
	return (*(_self_))._field_buffer[_6818_i];;
}



inline void _1e5ce73b5_Push(_1e5ce65a1_ReferenceStack* _self_, jule::Any _7324_ref) {
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_buffer; __jule_push_dest.push(_7324_ref); };
}



inline jule::Bool _1caeb6ba9_Exist(_1e5ce65a1_ReferenceStack* _self_, jule::Ptr<_1e5ce3416_FnIns> _7820_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1caeb801d:;
		if (it != expr_end) {
			jule::Any *_7910_ref = it;
			{
				if ((jule::Any(_7820_t, &__jule_any_type7) == (*(_7910_ref)))) {
					return true;;
				};
			}
			_iter_next_1caeb801d:;
			++it;
			goto _iter_begin_1caeb801d;
		}
		_iter_end_1caeb801d:;
	};
	return false;;
}

inline jule::Bool _1caecd60a_Exist(_1e5ce65a1_ReferenceStack* _self_, jule::Ptr<_1e5da0bcc_Var> _7820_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1caece92a:;
		if (it != expr_end) {
			jule::Any *_7910_ref = it;
			{
				if ((jule::Any(_7820_t, &__jule_any_type8) == (*(_7910_ref)))) {
					return true;;
				};
			}
			_iter_next_1caece92a:;
			++it;
			goto _iter_begin_1caece92a;
		}
		_iter_end_1caece92a:;
	};
	return false;;
}

inline jule::Bool _1c8071a36_Exist(_1e5ce65a1_ReferenceStack* _self_, jule::Ptr<_1e5cc8c7b_StructIns> _7820_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c8072dde:;
		if (it != expr_end) {
			jule::Any *_7910_ref = it;
			{
				if ((jule::Any(_7820_t, &__jule_any_type9) == (*(_7910_ref)))) {
					return true;;
				};
			}
			_iter_next_1c8072dde:;
			++it;
			goto _iter_begin_1c8072dde;
		}
		_iter_end_1c8072dde:;
	};
	return false;;
}

inline jule::Bool _1cb767b96_Exist(_1e5ce65a1_ReferenceStack* _self_, jule::Ptr<_1e5d03db6_Trait> _7820_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb768ea5:;
		if (it != expr_end) {
			jule::Any *_7910_ref = it;
			{
				if ((jule::Any(_7820_t, &__jule_any_type10) == (*(_7910_ref)))) {
					return true;;
				};
			}
			_iter_next_1cb768ea5:;
			++it;
			goto _iter_begin_1cb768ea5;
		}
		_iter_end_1cb768ea5:;
	};
	return false;;
}








inline jule::Bool _1e5ce7aad_Pass_eq(_1e5ce7aad_Pass *_self_, _1e5ce7aad_Pass _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Text == _self_->_field_Text);
}





inline void _1e5ced058_pushErr(_1e5cec563_symbolBuilder* _self_, jule::Ptr<_1e5c8eacc_Token>* _33224_token, jule::Str _33239_fmt, jule::Slice<jule::Any> _33252_args) {
	{ jule::Slice<_22578b38a_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1e5d792d2_compilerErr(_33224_token, true, _33239_fmt, _33252_args)); };
}



inline void _1e5ced7d9_pushSuggestion(_1e5cec563_symbolBuilder* _self_, jule::Str _34130_fmt, jule::Slice<jule::Any> _34143_args) {
	{
		_1e5d7a888_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _34130_fmt, _34143_args);
	};
}



inline jule::Bool _1e5cedbd5_checkCppUseDeclPath(_1e5cec563_symbolBuilder* _self_, jule::Ptr<_1e5cbd18d_UseDecl>* _34536_decl, jule::Str* _34553_path) {
	jule::Bool __jule_func_result = false;
	jule::Str _3463_ext = _2256e306c_Ext((*(_34553_path)));;
	if (((!(_225779279_IsValidHeaderExt(_3463_ext))) && (!(_225779543_IsValidCppExt(_3463_ext))))) {
		_1e5ced058_pushErr(_self_, &((*((*(_34536_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("invalid C++ extension: @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_3463_ext, &__jule_any_type4); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_2243e290a_Status> _3533_info = ({
		auto except = static__2256e5107_Of((*(_34553_path)));
		(except.ok()) ? (except.result) : ({{
			_1e5ced058_pushErr(_self_, &((*((*(_34536_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_34536_decl))))._field_LinkPath, &__jule_any_type4); __jule_collection; }));
			__jule_func_result = false;
			return __jule_func_result;;
		} jule::Ptr<_2243e290a_Status>(nullptr);});
	});;
	if (_2243e2d17_IsDir(_3533_info.ptr())) {
		_1e5ced058_pushErr(_self_, &((*((*(_34536_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_34536_decl))))._field_LinkPath, &__jule_any_type4); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1e5d5b2e7_ImportInfo> _1e5cedee3_buildCppHeaderImport(_1e5cec563_symbolBuilder* _self_, jule::Ptr<_1e5cbd18d_UseDecl>* _36541_decl) {
	jule::Str _3667_path = (*((*(_36541_decl))))._field_LinkPath;;
	if ((!(_225778e9e_IsStdHeaderPath((*((*(_36541_decl))))._field_LinkPath)))) {
		_3667_path=_2256e2cd6_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1e5c95a4a_Dir((*((*((*(_36541_decl))))._field_Token))._field_File.ptr()); (*it++) = (*((*(_36541_decl))))._field_LinkPath; __jule_collection; }));
		jule::Bool _3708_ok = _1e5cedbd5_checkCppUseDeclPath(_self_, _36541_decl, &(_3667_path));;
		if ((!(_3708_ok))) {
			return nullptr;;
		};
		({
			__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2256e3336_Abs(_3667_path);
			_3667_path = __jule_assign_result.__jule_result_arg0;
			_3708_ok = __jule_assign_result.__jule_result_arg1;
		});
		if ((!(_3708_ok))) {
			_1e5ced058_pushErr(_self_, &((*((*(_36541_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_36541_decl))))._field_LinkPath, &__jule_any_type4); __jule_collection; }));
		};
	};
	return jule::new_ptr<_1e5d5b2e7_ImportInfo>(_1e5d5b2e7_ImportInfo{._field_Token=(*((*(_36541_decl))))._field_Token, ._field_Path=_3667_path, ._field_LinkPath=(*((*(_36541_decl))))._field_LinkPath, ._field_Ident=jule::Str(), ._field_Alias=jule::Str(), ._field_Duplicate=false, ._field_Binded=true, ._field_Std=false, ._field_ImportAll=false, ._field_Selected=jule::Slice<jule::Ptr<_1e5c8eacc_Token>>(nullptr), ._field_Package=nullptr, ._field_ModId=0});;
}



inline jule::Ptr<_1e5d5b2e7_ImportInfo> _1e5cee334_buildStdImport(_1e5cec563_symbolBuilder* _self_, jule::Ptr<_1e5cbd18d_UseDecl>* _39335_decl) {
	jule::Str _3957_path = (*((*(_39335_decl))))._field_LinkPath.slice(5LL);;
	_3957_path=_2256dcc26_Replace(_3957_path, static_cast<jule::Str>(jule::Str::lit("::", 2)), jule::Str::lit("\\", 1), -1LL);
	_3957_path=_2256e2cd6_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _2258644eb_PathStdlib; (*it++) = _3957_path; __jule_collection; }));
	jule::Bool _3989_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2256e3336_Abs(_3957_path);
		_3957_path = __jule_assign_result.__jule_result_arg0;
		_3989_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_3989_ok))) {
		_1e5ced058_pushErr(_self_, &((*((*(_39335_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_39335_decl))))._field_LinkPath, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_2243e290a_Status> _4053_info = ({
		auto except = static__2256e5107_Of(_3957_path);
		(except.ok()) ? (except.result) : ({{
			_1e5ced058_pushErr(_self_, &((*((*(_39335_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_39335_decl))))._field_LinkPath, &__jule_any_type4); __jule_collection; }));
			return nullptr;;
		} jule::Ptr<_2243e290a_Status>(nullptr);});
	});;
	if ((!(_2243e2d17_IsDir(_4053_info.ptr())))) {
		_1e5ced058_pushErr(_self_, &((*((*(_39335_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_39335_decl))))._field_LinkPath, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::I64 _4153_i = (_2256d879e_FindLast((*((*(_39335_decl))))._field_LinkPath, static_cast<jule::Str>(jule::Str::lit("::", 2))) + 1LL);;
	jule::Str _4163_ident = (*((*(_39335_decl))))._field_LinkPath.slice(_4153_i);;
	return jule::new_ptr<_1e5d5b2e7_ImportInfo>(_1e5d5b2e7_ImportInfo{._field_Token=(*((*(_39335_decl))))._field_Token, ._field_Path=_3957_path, ._field_LinkPath=(*((*(_39335_decl))))._field_LinkPath, ._field_Ident=_4163_ident, ._field_Alias=(*((*(_39335_decl))))._field_Alias, ._field_Duplicate=false, ._field_Binded=false, ._field_Std=true, ._field_ImportAll=(*((*(_39335_decl))))._field_Full, ._field_Selected=jule::Slice<jule::Ptr<_1e5c8eacc_Token>>(nullptr), ._field_Package=jule::new_ptr<_1e5d5e21d_Package>(_1e5d5e21d_Package{._field_Files=nullptr}), ._field_ModId=0});;
}



inline jule::Ptr<_1e5d5b2e7_ImportInfo> _1e5cee675_buildIdentImport(jule::Ptr<_1e5cec563_symbolBuilder> _self_, jule::Ptr<_1e5cbd18d_UseDecl>* _43338_decl) {
	if ((((*((*(_43338_decl))))._field_LinkPath.equal("_", 1) || (_2256d7eeb_Find((*((*(_43338_decl))))._field_LinkPath, jule::Str::lit("::_::", 5)) != -1LL)) || _2256d7704_HasSuffix((*((*(_43338_decl))))._field_LinkPath, jule::Str::lit("::_", 3)))) {
		_1e5ced058_pushErr(_self_.ptr(), &((*((*(_43338_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("use declaration paths cannot contain blank identifier", 53)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _4413_modPath = ((_1e5d5805d_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1e5d570c3_GetModPath((*_self_.alloc)._field_importer.data);;
	if ((_4413_modPath.len() == 0LL)) {
		_1e5ced058_pushErr(_self_, &((*((*(_43338_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("no module file found in current directory or any parent directory", 65)), jule::Slice<jule::Any>());
		_1e5ced7d9_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use \"julec mod init\" command to initialize module", 49)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _4487_path = (*((*(_43338_decl))))._field_LinkPath;;
	_4487_path=_2256dcc26_Replace(_4487_path, static_cast<jule::Str>(jule::Str::lit("::", 2)), jule::Str::lit("\\", 1), -1LL);
	_4487_path=_2256e2cd6_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _4413_modPath; (*it++) = _4487_path; __jule_collection; }));
	jule::Bool _4529_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2256e3336_Abs(_4487_path);
		_4487_path = __jule_assign_result.__jule_result_arg0;
		_4529_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_4529_ok))) {
		_1e5ced058_pushErr(_self_, &((*((*(_43338_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_43338_decl))))._field_LinkPath, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_2243e290a_Status> _4593_info = ({
		auto except = static__2256e5107_Of(_4487_path);
		(except.ok()) ? (except.result) : ({{
			_1e5ced058_pushErr(_self_, &((*((*(_43338_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_43338_decl))))._field_LinkPath, &__jule_any_type4); __jule_collection; }));
			return nullptr;;
		} jule::Ptr<_2243e290a_Status>(nullptr);});
	});;
	if ((!(_2243e2d17_IsDir(_4593_info.ptr())))) {
		_1e5ced058_pushErr(_self_, &((*((*(_43338_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_43338_decl))))._field_LinkPath, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::I64 _4693_i = (_2256d879e_FindLast((*((*(_43338_decl))))._field_LinkPath, static_cast<jule::Str>(jule::Str::lit("::", 2))) + 1LL);;
	jule::Str _4703_ident = (*((*(_43338_decl))))._field_LinkPath.slice(_4693_i);;
	return jule::new_ptr<_1e5d5b2e7_ImportInfo>(_1e5d5b2e7_ImportInfo{._field_Token=(*((*(_43338_decl))))._field_Token, ._field_Path=_4487_path, ._field_LinkPath=(*((*(_43338_decl))))._field_LinkPath, ._field_Ident=_4703_ident, ._field_Alias=(*((*(_43338_decl))))._field_Alias, ._field_Duplicate=false, ._field_Binded=false, ._field_Std=false, ._field_ImportAll=(*((*(_43338_decl))))._field_Full, ._field_Selected=jule::Slice<jule::Ptr<_1e5c8eacc_Token>>(nullptr), ._field_Package=jule::new_ptr<_1e5d5e21d_Package>(_1e5d5e21d_Package{._field_Files=nullptr}), ._field_ModId=0});;
}



inline jule::Ptr<_1e5d5b2e7_ImportInfo> _1e5cee9b6_buildImport(jule::Ptr<_1e5cec563_symbolBuilder> _self_, jule::Ptr<_1e5cbd18d_UseDecl>* _48733_decl) {
	{
		
		if ((*((*(_48733_decl))))._field_Binded) {
			_case_begin_1ca6ab679:;
			{
				return _1e5cedee3_buildCppHeaderImport(_self_.ptr(), _48733_decl);;
			}
		}
		else if ((*((*(_48733_decl))))._field_Std) {
			_case_begin_1ca6aba86:;
			{
				return _1e5cee334_buildStdImport(_self_.ptr(), _48733_decl);;
			}
		}
		else {
			_case_begin_1ca6ab613:;
			{
				return _1e5cee675_buildIdentImport(_self_, _48733_decl);;
			}
		}
		_match_end_1ca6ab503:;
	};
}



inline jule::Ptr<_1e5d5b2e7_ImportInfo> _1e5ceed07_findUseDecl(_1e5cec563_symbolBuilder* _self_, jule::Ptr<_1e5d5b2e7_ImportInfo>* _49828_pkg) {
	return _1e5e03a65_SelectPackage((*(_self_))._field_table.ptr(), jule::__new_closure<jule::Bool,jule::Ptr<_1e5d5b2e7_ImportInfo>>((void*)__jule_anon_1ca6ad9cd, jule::Ptr<__jule_anon_1ca6ad9cd_ctx>::make(__jule_anon_1ca6ad9cd_ctx{._49828_pkg=_49828_pkg}).as<jule::Uintptr>(), __jule_anon_1ca6ad9cd_ctx_handler));;
}



inline jule::Bool _1e5d00148_checkDuplicateUseDecl(_1e5cec563_symbolBuilder* _self_, jule::Ptr<_1e5d5b2e7_ImportInfo>* _50642_pkg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1e5d5b2e7_ImportInfo> _5077_lpkg = _1e5ceed07_findUseDecl(_self_, _50642_pkg);;
	if ((_5077_lpkg == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_1e5ced058_pushErr(_self_, &((*((*(_50642_pkg))))._field_Token), static_cast<jule::Str>(jule::Str::lit("use declaration duplication: @ is already used above", 52)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_50642_pkg))))._field_LinkPath, &__jule_any_type4); __jule_collection; }));
	_1e5ced7d9_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("remove this use declaration, already used, it is safe", 53)), jule::Slice<jule::Any>());
	__jule_func_result = false;
	return __jule_func_result;;
}



inline void _1e5d004ab_implImportSelections(_1e5cec563_symbolBuilder* _self_, jule::Ptr<_1e5d5b2e7_ImportInfo>* _51641_imp, jule::Ptr<_1e5cbd18d_UseDecl>* _51664_decl) {
	(*((*(_51641_imp))))._field_Selected=(*((*(_51664_decl))))._field_Selected;
	{
		auto expr = &((*((*(_51641_imp))))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca6b7245:;
		if (it != expr_end) {
			jule::Ptr<_1e5c8eacc_Token> _51810_item = *it;
			{
				{
					auto expr = &((*((*(_51641_imp))))._field_Selected);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ca6b7b4c:;
					if (it != expr_end) {
						jule::Ptr<_1e5c8eacc_Token> _51911_citem = *it;
						{
							if ((_51810_item == _51911_citem)) {
								goto _iter_end_1ca6b7b4c;
							} else if (((*(_51810_item))._field_Kind == (*(_51911_citem))._field_Kind)) {
								_1e5ced058_pushErr(_self_, &(_51810_item), static_cast<jule::Str>(jule::Str::lit("duplicated selection: @ is already selected", 43)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_51810_item.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
								_1e5ced7d9_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("remove this use selection, already selected, it is safe", 55)), jule::Slice<jule::Any>());
								goto _iter_end_1ca6b7b4c;
							};
						}
						_iter_next_1ca6b7b4c:;
						++it;
						goto _iter_begin_1ca6b7b4c;
					}
					_iter_end_1ca6b7b4c:;
				};
			}
			_iter_next_1ca6b7245:;
			++it;
			goto _iter_begin_1ca6b7245;
		}
		_iter_end_1ca6b7245:;
	};
}



inline jule::Str _1e5d007ec_getAsLinkPath(jule::Ptr<_1e5cec563_symbolBuilder> _self_, jule::Str _53134_path) {
	if (_2256d7380_HasPrefix(_53134_path, _2258644eb_PathStdlib)) {
		(_53134_path).mut_slice(_2258644eb_PathStdlib.len());;
		return (jule::Str::lit("std", 3) + _2256dcc26_Replace(_53134_path, jule::Str::lit("\\", 1), static_cast<jule::Str>(jule::Str::lit("::", 2)), -1LL));;
	};
	jule::Str _5373_root;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2256e3336_Abs(((_1e5d5805d_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1e5d570c3_GetModPath((*(_self_))._field_importer.data));
		_5373_root = __jule_assign_result.__jule_result_arg0;
	});
	(_53134_path).mut_slice(_5373_root.len());;
	if ((_53134_path[0LL] == 92LLU)) {
		(_53134_path).mut_slice(1LL);;
	};
	return _2256dcc26_Replace(_53134_path, jule::Str::lit("\\", 1), static_cast<jule::Str>(jule::Str::lit("::", 2)), -1LL);;
}



inline void _1e5d00c1a_pushCycleError(jule::Ptr<_1e5cec563_symbolBuilder> _self_, jule::Ptr<_1e5cec563_symbolBuilder>* _54532_sb, jule::Str _54552_path, _224497295_StrBuilder* _54568_message) {
	;
	jule::Str _5473_refersTo = _22578b7ec_Logf(static_cast<jule::Str>(jule::Str::lit("@ refers to @", 13)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5d007ec_getAsLinkPath(_self_, _1e5c95a4a_Dir((*((*((*(_54532_sb))))._field_table))._field_File.ptr())), &__jule_any_type4); (*it++) = jule::Any(_1e5d007ec_getAsLinkPath(_self_, _54552_path), &__jule_any_type4); __jule_collection; }));;
	jule::Str _5513_m = _2244a1887_Str(_54568_message);;
	_2244a1090_WriteStr(_54568_message, _2256d6eb7_Repeat(jule::Str::lit(" ", 1), 7LL));
	_2244a1090_WriteStr(_54568_message, _5473_refersTo);
	_2244a1348_WriteByte(_54568_message, '\n');
	_2244a1090_WriteStr(_54568_message, _5513_m);
}



inline void _1e5d01138_pushCrossCycleError(jule::Ptr<_1e5cec563_symbolBuilder> _self_, jule::Ptr<_1e5cec563_symbolBuilder>* _55837_target, jule::Ptr<_1e5d5b2e7_ImportInfo>* _55862_imp, jule::Ptr<_1e5c8eacc_Token>* _55881_errorToken) {
	_224497295_StrBuilder _5597_message = static__2244a0b83_New(32LL);;
	_1e5d00c1a_pushCycleError(_self_, &(_self_), (*((*(_55862_imp))))._field_Path, &(_5597_message));
	jule::Ptr<_1e5cec563_symbolBuilder> _5637_owner = (*_self_.alloc)._field_owner;;
	jule::Ptr<_1e5cec563_symbolBuilder> _5647_old = _self_;;
	while (((*(_5637_owner))._field_owner != nullptr)) {
		{
			_1e5d00c1a_pushCycleError(_self_, &((*_5647_old.alloc)._field_owner), _1e5c95a4a_Dir((*((*_5647_old.alloc)._field_table))._field_File.ptr()), &(_5597_message));
			if (((*_5637_owner.alloc)._field_owner == (*(_55837_target)))) {
				_1e5d00c1a_pushCycleError(_self_, _55837_target, _1e5c95a4a_Dir((*((*(_5637_owner))._field_table))._field_File), &(_5597_message));
				goto _iter_end_1ca6c0da8;
			};
			_5647_old=_5637_owner;
			_5637_owner=(*_5637_owner.alloc)._field_owner;
		}
	_iter_next_1ca6c0da8:;
	}
	_iter_end_1ca6c0da8:;;
	_1e5ced058_pushErr(_self_, _55881_errorToken, static_cast<jule::Str>(jule::Str::lit("illegal cross cycle in use declarations;\n@", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2244a1887_Str(&_5597_message), &__jule_any_type4); __jule_collection; }));
}



inline jule::Bool _1e5d01534_checkImportCycles(jule::Ptr<_1e5cec563_symbolBuilder> _self_, jule::Ptr<_1e5d5b2e7_ImportInfo> _58134_imp, jule::Ptr<_1e5cbd18d_UseDecl>* _58153_decl) {
	if (((*(_58134_imp))._field_Path == _1e5c95a4a_Dir((*((*(_self_))._field_table))._field_File.ptr()))) {
		_1e5ced058_pushErr(_self_, &((*((*(_58153_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("illegal cycle in use declaration, package @ refers to itself", 60)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5d007ec_getAsLinkPath(_self_, (*_58134_imp.alloc)._field_Path), &__jule_any_type4); __jule_collection; }));
		return false;;
	};
	if (((*_self_.alloc)._field_owner == nullptr)) {
		return true;;
	};
	jule::Ptr<_1e5cec563_symbolBuilder> _5917_owner = (*_self_.alloc)._field_owner;;
	_julec_label_1ca6c564e:;
	if ((_1e5c95a4a_Dir((*((*(_5917_owner))._field_table))._field_File) == (*_58134_imp.alloc)._field_Path)) {
		_1e5d01138_pushCrossCycleError(_self_, &(_5917_owner), &(_58134_imp), &((*((*(_58153_decl))))._field_Token));
		return false;;
	};
	if (((*(_5917_owner))._field_owner != nullptr)) {
		_5917_owner=(*_5917_owner.alloc)._field_owner;
		goto _julec_label_1ca6c564e;
	};
	return true;;
}



inline void _1e5d01952_checkPackageAccessibility(_1e5cec563_symbolBuilder* _self_, jule::Ptr<_1e5cbd18d_UseDecl>* _61242_decl, jule::Str* _61259_mod, jule::Str* _61270_path) {
	if (((((_1e5d5805d_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1e5d570c3_GetModPath((*(_self_))._field_importer.data) != (*(_61259_mod))) && _2256db84b_Contains((*(_61270_path)), jule::Str::lit("internal", 8)))) {
		_1e5ced058_pushErr(_self_, &((*((*(_61242_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("you cannot access to internal packages", 38)), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1e5d01d4d_importPackage(jule::Ptr<_1e5cec563_symbolBuilder> _self_, jule::Ptr<_1e5d5b2e7_ImportInfo>* _61835_imp, jule::Ptr<_1e5cbd18d_UseDecl>* _61858_decl) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_61835_imp))))._field_Binded) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1e5d5b2e7_ImportInfo> _6237_port = ((_1e5d5805d_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1e5d57755_GetImport((*(_self_))._field_importer.data, (*((*(_61835_imp))))._field_Path);;
	if ((_6237_port != nullptr)) {
		(*((*(_61835_imp))))._field_Package=(*_6237_port.alloc)._field_Package;
		(*((*(_61835_imp))))._field_Duplicate=true;
		jule::Str _6284_oldMod = ((_1e5d5805d_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1e5d570c3_GetModPath((*_self_.alloc)._field_importer.data);;
		((_1e5d5805d_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1e5d56d3c_SetModPath((*_self_.alloc)._field_importer.data, ((_1e5d5805d_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1e5d57414_ModById((*_self_.alloc)._field_importer.data, (*((*(_61835_imp))))._field_ModId));
		_1e5d01952_checkPackageAccessibility(_self_, _61858_decl, &(_6284_oldMod), &((*_6237_port.alloc)._field_Path));
		((_1e5d5805d_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1e5d56d3c_SetModPath((*_self_.alloc)._field_importer.data, _6284_oldMod);
	} else {
		if ((!(_1e5d01534_checkImportCycles(_self_, (*(_61835_imp)), _61858_decl)))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
		jule::Str _6374_oldMod = ((_1e5d5805d_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1e5d570c3_GetModPath((*_self_.alloc)._field_importer.data);;
		__JULE_DEFER({
			((_1e5d5805d_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1e5d56d3c_SetModPath((*_self_.alloc)._field_importer.data, _6374_oldMod);
		});;
		if ((*((*(_61835_imp))))._field_Std) {
			((_1e5d5805d_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1e5d56d3c_SetModPath((*_self_.alloc)._field_importer.data, _2258644eb_PathStdlib);
		};
		jule::Slice<jule::Ptr<_1e5ca3173_AST>> _6428_asts;
		jule::Slice<_22578b38a_Log> _64218_errors;
		({
			__jule_tuple_sx_1e5ca3173_AST__jule_tuple_s_22578b38a_Log __jule_assign_result = ((_1e5d5805d_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1e5d57b51_ImportPackage((*_self_.alloc)._field_importer.data, (*((*(_61835_imp))))._field_Path, (!((*((*(_61835_imp))))._field_Std)));
			_6428_asts = __jule_assign_result.__jule_result_arg0;
			_64218_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_64218_errors.len() > 0LL)) {
			(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_64218_errors);
			__jule_func_result = false;
			return __jule_func_result;;
		};
		_1e5d01952_checkPackageAccessibility(_self_, _61858_decl, &(_6374_oldMod), &((*((*(_61835_imp))))._field_Path));
		{
			auto expr = &(_6428_asts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ca6d3a8b:;
			if (it != expr_end) {
				jule::Ptr<_1e5ca3173_AST> _65016_ast = *it;
				{
					jule::Ptr<_1e5e03548_SymbolTable> _65113_table = nullptr;;
					({
						__jule_tuple_x_1e5e03548_SymbolTable__jule_tuple_s_22578b38a_Log __jule_assign_result = _1e5e62c8e_buildSymbols(&(_65016_ast), &((*_self_.alloc)._field_importer), _self_);
						_65113_table = __jule_assign_result.__jule_result_arg0;
						_64218_errors = __jule_assign_result.__jule_result_arg1;
					});
					if ((_64218_errors.len() > 0LL)) {
						(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_64218_errors);
						__jule_func_result = false;
						return __jule_func_result;;
					};
					(*((*((*(_61835_imp))))._field_Package))._field_Files=jule::append((*(*((*(_61835_imp))))._field_Package.alloc)._field_Files,({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5e03548_SymbolTable>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _65113_table; __jule_collection; }));
				}
				_iter_next_1ca6d3a8b:;
				++it;
				goto _iter_begin_1ca6d3a8b;
			}
			_iter_end_1ca6d3a8b:;
		};
	};
	_1e5d004ab_implImportSelections(_self_, _61835_imp, _61858_decl);
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1e5d5b2e7_ImportInfo> _1e5d0218e_importUseDecl(jule::Ptr<_1e5cec563_symbolBuilder> _self_, jule::Ptr<_1e5cbd18d_UseDecl>* _66535_decl) {
	jule::Ptr<_1e5d5b2e7_ImportInfo> _6667_imp = _1e5cee9b6_buildImport(_self_, _66535_decl);;
	if ((_6667_imp == nullptr)) {
		return nullptr;;
	};
	jule::Bool _6717_ok = _1e5d00148_checkDuplicateUseDecl(_self_, &(_6667_imp));;
	if ((!(_6717_ok))) {
		return nullptr;;
	};
	_6717_ok=_1e5d01d4d_importPackage(_self_, &(_6667_imp), _66535_decl);
	(*((*_self_.alloc)._field_table))._field_Imports=jule::append((*(*(_self_))._field_table.alloc)._field_Imports,({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5d5b2e7_ImportInfo>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6667_imp; __jule_collection; }));
	if (_6717_ok) {
		((_1e5d5805d_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1e5d57e09_Imported((*_self_.alloc)._field_importer.data, _6667_imp);
		return _6667_imp;;
	};
	return nullptr;;
}



inline void _1e5d0238c_importUseDecls(jule::Ptr<_1e5cec563_symbolBuilder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ast))._field_UseDecls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca6d971d:;
		if (it != expr_end) {
			jule::Ptr<_1e5cbd18d_UseDecl> _68515_decl = *it;
			{
				_1e5d0218e_importUseDecl(_self_, &(_68515_decl));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					goto _iter_end_1ca6d971d;
				};
			}
			_iter_next_1ca6d971d:;
			++it;
			goto _iter_begin_1ca6d971d;
		}
		_iter_end_1ca6d971d:;
	};
}



inline void _1e5d02645_appendNode(_1e5cec563_symbolBuilder* _self_, _1e5ca4086_Node* _69431_node) {
	{
		auto &_match_expr{ (*(_69431_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1ca6db258:;
			{
				(*((*(_self_))._field_table))._field_Impls=jule::append((*(*(_self_))._field_table.alloc)._field_Impls,({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5d33c09_Impl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1e5cebe9c_buildImpl((*(_69431_node))._field_Data.cast_ptr<_1e5cc1bec_Impl>(&__jule_any_type11)); __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1ca6d9c5c:;
			{
				jule::Ptr<_1e5e40a08_TypeAlias> _6998_ta = _1e5ce84e8_buildTypeAlias((*(_69431_node))._field_Data.cast_ptr<_1e5cbbaa4_TypeAliasDecl>(&__jule_any_type12));;
				(*((*(_self_))._field_table))._field_TypeAliases=jule::append((*(*(_self_))._field_table.alloc)._field_TypeAliases,({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5e40a08_TypeAlias>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6998_ta; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1ca6dacb3:;
			{
				jule::Ptr<_1e5cc5e21_Struct> _7028_srct = _1e5ce8d89_buildStruct((*(_69431_node))._field_Data.cast_ptr<_1e5cc0d50_StructDecl>(&__jule_any_type13));;
				(*((*(_self_))._field_table))._field_Structs=jule::append((*(*(_self_))._field_table.alloc)._field_Structs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5cc5e21_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7028_srct; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1ca6dad29:;
			{
				jule::Ptr<_1e5ce0358_Fn> _7058_f = _1e5ce9a38_buildFunc((*(_69431_node))._field_Data.cast_ptr<_1e5cb6c47_FnDecl>(&__jule_any_type14));;
				(*((*(_self_))._field_table))._field_Funcs=jule::append((*(*(_self_))._field_table.alloc)._field_Funcs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5ce0358_Fn>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7058_f; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1ca6dad90:;
			{
				jule::Ptr<_1e5d03db6_Trait> _7088_t = _1e5cea385_buildTrait((*(_69431_node))._field_Data.cast_ptr<_1e5cc158c_TraitDecl>(&__jule_any_type15));;
				(*((*(_self_))._field_table))._field_Traits=jule::append((*(*(_self_))._field_table.alloc)._field_Traits,({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5d03db6_Trait>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7088_t; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1ca6dae06:;
			{
				jule::Ptr<_1e5da0bcc_Var> _7118_v = _1e5ceb919_buildVar((*(_69431_node))._field_Data.cast_ptr<_1e5cb7e02_VarDecl>(&__jule_any_type16));;
				(*((*(_self_))._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5da0bcc_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7118_v; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1ca6dae6c:;
			{
				jule::Ptr<_1e5d065c2_Enum> _7148_e = _1e5ceae13_buildEnum((*(_69431_node))._field_Data.cast_ptr<_1e5cbe205_EnumDecl>(&__jule_any_type17));;
				(*((*(_self_))._field_table))._field_Enums=jule::append((*(*(_self_))._field_table.alloc)._field_Enums,({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5d065c2_Enum>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7148_e; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type18) {
			_case_begin_1ca6db742:;
			{
				jule::Ptr<_1e5d07ccc_TypeEnum> _7178_e = _1e5ceb650_buildTypeEnum((*(_69431_node))._field_Data.cast_ptr<_1e5cc0190_TypeEnumDecl>(&__jule_any_type18));;
				(*((*(_self_))._field_table))._field_TypeEnums=jule::append((*(*(_self_))._field_table.alloc)._field_TypeEnums,({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5d07ccc_TypeEnum>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7178_e; __jule_collection; }));
			}
		}
		else {
			_case_begin_1ca6daba3:;
			{
				_1e5ced058_pushErr(_self_, &((*(_69431_node))._field_Token), static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ca6dab3c:;
	};
}



inline void _1e5d02843_appendNodes(_1e5cec563_symbolBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_Nodes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca70a442:;
		if (it != expr_end) {
			_1e5ca4086_Node _72515_node = *it;
			{
				_1e5d02645_appendNode(_self_, &(_72515_node));
			}
			_iter_next_1ca70a442:;
			++it;
			goto _iter_begin_1ca70a442;
		}
		_iter_end_1ca70a442:;
	};
}



inline void _1e5d02aeb_pushDirectivePass(_1e5cec563_symbolBuilder* _self_, jule::Ptr<_1e5ca44a4_Directive>* _73038_d) {
	if (((*((*(_73038_d))))._field_Args.len() == 0LL)) {
		_1e5ced058_pushErr(_self_, &((*((*(_73038_d))))._field_Tag), static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_73038_d))))._field_Args.len() > 1LL)) {
		jule::Ptr<_1e5c8eacc_Token> _7354_arg = (*((*(_73038_d))))._field_Args[1LL];;
		_1e5ced058_pushErr(_self_, &(_7354_arg), static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_73038_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1e5c8eacc_Token> _7393_arg = (*((*(_73038_d))))._field_Args[0LL];;
	if (((*(_7393_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1e5ced058_pushErr(_self_, &(_7393_arg), static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_7393_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1e5ced058_pushErr(_self_, &(_7393_arg), static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_self_))._field_table))._field_Passes=jule::append((*(*(_self_))._field_table.alloc)._field_Passes,({ auto __jule_collection = jule::Slice<_1e5ce7aad_Pass>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1e5ce7aad_Pass{._field_Token=(*((*(_73038_d))))._field_Tag, ._field_Text=(*_7393_arg.alloc)._field_Kind.slice(1LL, ((*_7393_arg.alloc)._field_Kind.len() - 1LL))}; __jule_collection; }));
}



inline void _1e5d02ce9_appendTopDirectives(_1e5cec563_symbolBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca7123b1:;
		if (it != expr_end) {
			jule::Ptr<_1e5ca44a4_Directive> _75715_d = *it;
			{
				{
					auto &_match_expr{ (*((*(_75715_d))._field_Tag))._field_Kind };
					
					if (_match_expr == static_cast<jule::Str>(jule::Str::lit("pass", 4))) {
						_case_begin_1ca713d1e:;
						{
							_1e5d02aeb_pushDirectivePass(_self_, &(_75715_d));
						}
					}
					_match_end_1ca713c42:;
				};
			}
			_iter_next_1ca7123b1:;
			++it;
			goto _iter_begin_1ca7123b1;
		}
		_iter_end_1ca7123b1:;
	};
}



inline void _1e5d02ee7_build(jule::Ptr<_1e5cec563_symbolBuilder> _self_) {
	(*(_self_))._field_table=jule::new_ptr<_1e5e03548_SymbolTable>(_1e5e03548_SymbolTable{._field_File=(*((*_self_.alloc)._field_ast))._field_File, ._field_Passes=jule::Slice<_1e5ce7aad_Pass>(nullptr), ._field_Imports=jule::Slice<jule::Ptr<_1e5d5b2e7_ImportInfo>>(nullptr), ._field_Vars=jule::Slice<jule::Ptr<_1e5da0bcc_Var>>(nullptr), ._field_TypeAliases=jule::Slice<jule::Ptr<_1e5e40a08_TypeAlias>>(nullptr), ._field_Structs=jule::Slice<jule::Ptr<_1e5cc5e21_Struct>>(nullptr), ._field_Funcs=jule::Slice<jule::Ptr<_1e5ce0358_Fn>>(nullptr), ._field_Traits=jule::Slice<jule::Ptr<_1e5d03db6_Trait>>(nullptr), ._field_Enums=jule::Slice<jule::Ptr<_1e5d065c2_Enum>>(nullptr), ._field_TypeEnums=jule::Slice<jule::Ptr<_1e5d07ccc_TypeEnum>>(nullptr), ._field_Impls=jule::Slice<jule::Ptr<_1e5d33c09_Impl>>(nullptr)});
	_1e5d02ce9_appendTopDirectives(_self_);
	_1e5d0238c_importUseDecls(_self_);
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	_1e5d02843_appendNodes(_self_);
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
}







inline jule::Str _1e5d042b2_Str(_1e5d03db6_Trait* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1e5d04603_Equal(jule::Ptr<_1e5d03db6_Trait> _self_, jule::Ptr<_1e5e417ea_TypeKind> _2518_other) {
	jule::Ptr<_1e5d03db6_Trait> _263_trt = _1e5e457aa_Trait(_2518_other.ptr());;
	return (_self_ == _263_trt);;
}



inline jule::Ptr<_1e5ce0358_Fn> _1e5d04a98_FindMethod(_1e5d03db6_Trait* _self_, jule::Str _3426_ident) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca7177e5:;
		if (it != expr_end) {
			jule::Ptr<_1e5ce0358_Fn> _3515_f = *it;
			{
				if (((*(_3515_f))._field_Ident == _3426_ident)) {
					return _3515_f;;
				};
			}
			_iter_next_1ca7177e5:;
			++it;
			goto _iter_begin_1ca7177e5;
		}
		_iter_end_1ca7177e5:;
	};
	return _1e5d0522a_findMethodInherit(_self_, &(_3426_ident));;
}



inline jule::Ptr<_1e5ce0358_Fn> _1e5d0522a_findMethodInherit(_1e5d03db6_Trait* _self_, jule::Str* _5534_ident) {
	{
		auto expr = &((*(_self_))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca71a9b3:;
		if (it != expr_end) {
			jule::Ptr<_1e5e4900b_TypeSymbol> _5615_i = *it;
			{
				if (((*(_5615_i))._field_Kind == nullptr)) {
					goto _iter_next_1ca71a9b3;
				};
				jule::Ptr<_1e5d03db6_Trait> _608_t = _1e5e457aa_Trait((*_5615_i.alloc)._field_Kind.ptr());;
				if ((_608_t != nullptr)) {
					jule::Ptr<_1e5ce0358_Fn> _629_f2 = _1e5d04a98_FindMethod(_608_t, (*(_5534_ident)));;
					if ((_629_f2 != nullptr)) {
						return _629_f2;;
					};
				};
			}
			_iter_next_1ca71a9b3:;
			++it;
			goto _iter_begin_1ca71a9b3;
		}
		_iter_end_1ca71a9b3:;
	};
	return nullptr;;
}








inline jule::Bool _1e5d05a55_EnumItem_eq(_1e5d05a55_EnumItem *_self_, _1e5d05a55_EnumItem _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Value == _self_->_field_Value);
}

inline jule::Bool _1e5d05e40_AutoExpr(_1e5d05a55_EnumItem* _self_) {
	return ((*(_self_))._field_Value == nullptr);;
}







inline jule::Str _1e5d06979_Str(_1e5d065c2_Enum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1e5d06cba_Equal(jule::Ptr<_1e5d065c2_Enum> _self_, jule::Ptr<_1e5e417ea_TypeKind> _3818_other) {
	jule::Ptr<_1e5d065c2_Enum> _393_enm = _1e5e44754_Enum(_3818_other.ptr());;
	return (_self_ == _393_enm);;
}



inline jule::Ptr<_1e5d05a55_EnumItem> _1e5d071e9_FindItem(_1e5d065c2_Enum* _self_, jule::Str _4724_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca71e2be:;
		if (it != expr_end) {
			jule::Ptr<_1e5d05a55_EnumItem> _4815_item = *it;
			{
				if (((*(_4815_item))._field_Ident == _4724_ident)) {
					return _4815_item;;
				};
			}
			_iter_next_1ca71e2be:;
			++it;
			goto _iter_begin_1ca71e2be;
		}
		_iter_end_1ca71e2be:;
	};
	return nullptr;;
}








inline jule::Bool _1e5d07705_TypeEnumItem_eq(_1e5d07705_TypeEnumItem *_self_, _1e5d07705_TypeEnumItem _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}





inline jule::Str _1e5d08151_Str(_1e5d07ccc_TypeEnum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1e5d08492_Equal(jule::Ptr<_1e5d07ccc_TypeEnum> _self_, jule::Ptr<_1e5e417ea_TypeKind> _8018_other) {
	jule::Ptr<_1e5d07ccc_TypeEnum> _813_tenm = _1e5e449da_TypeEnum(_8018_other.ptr());;
	return (_self_ == _813_tenm);;
}



inline jule::Ptr<_1e5d07705_TypeEnumItem> _1e5d088c1_FindItem(_1e5d07ccc_TypeEnum* _self_, jule::Str _8924_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca721568:;
		if (it != expr_end) {
			jule::Ptr<_1e5d07705_TypeEnumItem> _9015_item = *it;
			{
				if (((*(_9015_item))._field_Ident == _8924_ident)) {
					return _9015_item;;
				};
			}
			_iter_next_1ca721568:;
			++it;
			goto _iter_begin_1ca721568;
		}
		_iter_end_1ca721568:;
	};
	return nullptr;;
}








inline jule::Bool _1e5d0a708_comptimeRange_eq(_1e5d0a708_comptimeRange *_self_, _1e5d0a708_comptimeRange _other_) {
	return 
		(_self_->_field_kind == _other_._field_kind);
}

inline jule::Str _1e5d0ab04_Str(_1e5d0a708_comptimeRange* _self_) {
	return jule::Str::lit("comptimeRange", 13);;
}



inline jule::Bool _1e5d0ae45_Equal(jule::Ptr<_1e5d0a708_comptimeRange> _self_, jule::Ptr<_1e5e417ea_TypeKind> _2718_other) {
	return false;;
}








inline jule::Bool _1e5d0b264_comptimeStructField_eq(_1e5d0b264_comptimeStructField *_self_, _1e5d0b264_comptimeStructField _other_) {
	return 
		(_self_->_field_field == _other_._field_field);
}

inline jule::Str _1e5d0b61b_Str(_1e5d0b264_comptimeStructField* _self_) {
	return jule::Str::lit("comptimeStructField", 19);;
}



inline jule::Bool _1e5d0b95c_Equal(jule::Ptr<_1e5d0b264_comptimeStructField> _self_, jule::Ptr<_1e5e417ea_TypeKind> _3718_other) {
	return false;;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5d0be68__Decl(jule::Ptr<_1e5d0b264_comptimeStructField> _self_, jule::Ptr<_1e5e0a93a_eval>* _4127_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _4142_fc) {
	if (((*((*(_4142_fc))))._field_Args.len() > 0LL)) {
		_1e5e0aebd_pushErr((*(_4127_e)).ptr(), (*((*((*(_4142_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1e5d29cee_comptimeDecl>(_1e5d29cee_comptimeDecl{._field_decl=jule::Any((*((*(_self_))._field_field))._field_Decl, &__jule_any_type19)}), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)});;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5d0c364__Type(jule::Ptr<_1e5d0b264_comptimeStructField> _self_, jule::Ptr<_1e5e0a93a_eval>* _5327_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _5342_fc) {
	if (((*((*(_5342_fc))))._field_Args.len() > 0LL)) {
		_1e5e0aebd_pushErr((*(_5327_e)).ptr(), (*((*((*(_5342_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return _1e5d2e870_buildComptimeTypeInfoData(&((*((*(_5327_e))))._field_s), &((*((*(_self_))._field_field))._field_Kind));;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5d0c6a5_subIdent(jule::Ptr<_1e5d0b264_comptimeStructField> _self_, jule::Str* _6126_ident) {
	{
		auto &_match_expr{ (*(_6126_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1ca72dcb2:;
			{
				jule::Ptr<_1e5ce3416_FnIns> _648_method = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>((void*)__jule_anon_1ca730038, jule::Ptr<__jule_anon_1ca730038_ctx>::make(__jule_anon_1ca730038_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ca730038_ctx_handler), ._field_reloaded=false});;
				return _1e5d2e2dc_buildAsComptimeMethodData(&(_648_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1ca72dd4a:;
			{
				jule::Ptr<_1e5ce3416_FnIns> _718_method = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>((void*)__jule_anon_1ca731eb3, jule::Ptr<__jule_anon_1ca731eb3_ctx>::make(__jule_anon_1ca731eb3_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ca731eb3_ctx_handler), ._field_reloaded=false});;
				return _1e5d2e2dc_buildAsComptimeMethodData(&(_718_method));;
			}
		}
		else {
			_case_begin_1ca72dae7:;
			{
				return nullptr;;
			}
		}
		_match_end_1ca72dc07:;
	};
}







inline jule::Str _1e5d0cdc0_Str(_1e5d0ca07_comptimeStructFields* _self_) {
	return jule::Str::lit("comptimeStructFields", 20);;
}



inline jule::Bool _1e5d0d211_Equal(jule::Ptr<_1e5d0ca07_comptimeStructFields> _self_, jule::Ptr<_1e5e417ea_TypeKind> _9018_other) {
	return false;;
}



inline void _1e5d0d695_ready(_1e5d0ca07_comptimeStructFields* _self_, jule::Ptr<_1e5da0bcc_Var>* _9426_keyA, jule::Ptr<_1e5da0bcc_Var>* _9443_keyB) {
	if (((*(_9426_keyA)) != nullptr)) {
		(*((*(_9426_keyA))))._field_Constant=true;
		(*((*(_9426_keyA))))._field_Value=jule::new_ptr<_1e5e09d8a_Value>(_1e5e09d8a_Value{._field_Expr=jule::Ptr<_1e5ca93bb_Expr>(nullptr), ._field_Data=jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)})});
		(*((*(_9426_keyA))))._field_Kind=(*(_1e6029916_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_Kind;
	};
	if (((*(_9443_keyB)) != nullptr)) {
		(*((*(_9443_keyB))))._field_Constant=true;
		(*((*(_9443_keyB))))._field_Value=jule::new_ptr<_1e5e09d8a_Value>(_1e5e09d8a_Value{._field_Expr=jule::Ptr<_1e5ca93bb_Expr>(nullptr), ._field_Data=jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)})});
		(*((*(_9443_keyB))))._field_Kind=jule::new_ptr<_1e5e4900b_TypeSymbol>(_1e5e4900b_TypeSymbol{._field_Decl=jule::Ptr<_1e5ca5087_TypeDecl>(nullptr), ._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1e5d0b264_comptimeStructField>(_1e5d0b264_comptimeStructField{._field_field=jule::Ptr<_1e5cc81cb_FieldIns>(nullptr)}), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data6)})});
	};
}



inline void _1e5d0da08_index(_1e5d0ca07_comptimeStructFields* _self_, jule::Ptr<_1e5e08c13_Data>* _11526_d, jule::I64 _11536_i) {
	(*((*(_11526_d))))._field_Decl=false;
	(*((*(_11526_d))))._field_untyped=false;
	(*((*(_11526_d))))._field_Constant=nullptr;
	(*((*(_11526_d))))._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1e5d0b264_comptimeStructField>(_1e5d0b264_comptimeStructField{._field_field=(*(_self_))._field_fields[_11536_i]}), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data6)});
}



inline void _1e5d0de26_step(_1e5d0ca07_comptimeStructFields* _self_, jule::I64 _12620_i, jule::Ptr<_1e5da0bcc_Var>* _12633_keyA, jule::Ptr<_1e5da0bcc_Var>* _12650_keyB) {
	if (((*(_12633_keyA)) != nullptr)) {
		(*((*((*((*(_12633_keyA))))._field_Value))._field_Data))._field_Constant=static__1e21a491e_NewI64(static_cast<jule::I64>(_12620_i));
		(*(*((*((*(_12633_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_12633_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type20);
	};
	if (((*(_12650_keyB)) != nullptr)) {
		(*(_1e5e4657a_comptimeStructField((*((*((*(_12650_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_12620_i];
	};
}



inline jule::I64 _1e5d0e1ac_len(_1e5d0ca07_comptimeStructFields* _self_) {
	return (*(_self_))._field_fields.len();;
}








inline jule::Bool _1e5d0e487_comptimeStatic_eq(_1e5d0e487_comptimeStatic *_self_, _1e5d0e487_comptimeStatic _other_) {
	return 
		(_self_->_field_field == _other_._field_field);
}

inline jule::Str _1e5d0e83e_Str(_1e5d0e487_comptimeStatic* _self_) {
	return jule::Str::lit("comptimeStatic", 14);;
}



inline jule::Bool _1e5d0eb80_Equal(jule::Ptr<_1e5d0e487_comptimeStatic> _self_, jule::Ptr<_1e5e417ea_TypeKind> _15018_other) {
	return false;;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5d1018b__Decl(jule::Ptr<_1e5d0e487_comptimeStatic> _self_, jule::Ptr<_1e5e0a93a_eval>* _15427_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _15442_fc) {
	if (((*((*(_15442_fc))))._field_Args.len() > 0LL)) {
		_1e5e0aebd_pushErr((*(_15427_e)).ptr(), (*((*((*(_15442_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1e5d29cee_comptimeDecl>(_1e5d29cee_comptimeDecl{._field_decl=jule::Any((*(_self_))._field_field, &__jule_any_type8)}), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)});;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5d10587__Type(jule::Ptr<_1e5d0e487_comptimeStatic> _self_, jule::Ptr<_1e5e0a93a_eval>* _16627_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _16642_fc) {
	if (((*((*(_16642_fc))))._field_Args.len() > 0LL)) {
		_1e5e0aebd_pushErr((*(_16627_e)).ptr(), (*((*((*(_16642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return _1e5d2e870_buildComptimeTypeInfoData(&((*((*(_16627_e))))._field_s), &((*((*((*(_self_))._field_field))._field_Kind))._field_Kind));;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5d108c8_subIdent(jule::Ptr<_1e5d0e487_comptimeStatic> _self_, jule::Str* _17426_ident) {
	{
		auto &_match_expr{ (*(_17426_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1ca74766b:;
			{
				jule::Ptr<_1e5ce3416_FnIns> _1778_method = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>((void*)__jule_anon_1ca7488e2, jule::Ptr<__jule_anon_1ca7488e2_ctx>::make(__jule_anon_1ca7488e2_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ca7488e2_ctx_handler), ._field_reloaded=false});;
				return _1e5d2e2dc_buildAsComptimeMethodData(&(_1778_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1ca747704:;
			{
				jule::Ptr<_1e5ce3416_FnIns> _1848_method = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>((void*)__jule_anon_1ca74a86c, jule::Ptr<__jule_anon_1ca74a86c_ctx>::make(__jule_anon_1ca74a86c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ca74a86c_ctx_handler), ._field_reloaded=false});;
				return _1e5d2e2dc_buildAsComptimeMethodData(&(_1848_method));;
			}
		}
		else {
			_case_begin_1ca7474a1:;
			{
				return nullptr;;
			}
		}
		_match_end_1ca7475b1:;
	};
}







inline jule::Str _1e5d110e3_Str(_1e5d10c3b_comptimeStatics* _self_) {
	return jule::Str::lit("comptimeStatics", 15);;
}



inline jule::Bool _1e5d11434_Equal(jule::Ptr<_1e5d10c3b_comptimeStatics> _self_, jule::Ptr<_1e5e417ea_TypeKind> _20318_other) {
	return false;;
}



inline void _1e5d118b8_ready(_1e5d10c3b_comptimeStatics* _self_, jule::Ptr<_1e5da0bcc_Var>* _20726_keyA, jule::Ptr<_1e5da0bcc_Var>* _20743_keyB) {
	if (((*(_20726_keyA)) != nullptr)) {
		(*((*(_20726_keyA))))._field_Constant=true;
		(*((*(_20726_keyA))))._field_Value=jule::new_ptr<_1e5e09d8a_Value>(_1e5e09d8a_Value{._field_Expr=jule::Ptr<_1e5ca93bb_Expr>(nullptr), ._field_Data=jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)})});
		(*((*(_20726_keyA))))._field_Kind=(*(_1e6029916_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_Kind;
	};
	if (((*(_20743_keyB)) != nullptr)) {
		(*((*(_20743_keyB))))._field_Constant=true;
		(*((*(_20743_keyB))))._field_Value=jule::new_ptr<_1e5e09d8a_Value>(_1e5e09d8a_Value{._field_Expr=jule::Ptr<_1e5ca93bb_Expr>(nullptr), ._field_Data=jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)})});
		(*((*(_20743_keyB))))._field_Kind=jule::new_ptr<_1e5e4900b_TypeSymbol>(_1e5e4900b_TypeSymbol{._field_Decl=jule::Ptr<_1e5ca5087_TypeDecl>(nullptr), ._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1e5d0e487_comptimeStatic>(_1e5d0e487_comptimeStatic{._field_field=jule::Ptr<_1e5da0bcc_Var>(nullptr)}), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data8)})});
	};
}



inline void _1e5d11c2b_index(_1e5d10c3b_comptimeStatics* _self_, jule::Ptr<_1e5e08c13_Data>* _22826_d, jule::I64 _22836_i) {
	(*((*(_22826_d))))._field_Decl=false;
	(*((*(_22826_d))))._field_untyped=false;
	(*((*(_22826_d))))._field_Constant=nullptr;
	(*((*(_22826_d))))._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1e5d0e487_comptimeStatic>(_1e5d0e487_comptimeStatic{._field_field=(*(_self_))._field_fields[_22836_i]}), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data8)});
}



inline void _1e5d12149_step(_1e5d10c3b_comptimeStatics* _self_, jule::I64 _23920_i, jule::Ptr<_1e5da0bcc_Var>* _23933_keyA, jule::Ptr<_1e5da0bcc_Var>* _23950_keyB) {
	if (((*(_23933_keyA)) != nullptr)) {
		(*((*((*((*(_23933_keyA))))._field_Value))._field_Data))._field_Constant=static__1e21a491e_NewI64(static_cast<jule::I64>(_23920_i));
		(*(*((*((*(_23933_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_23933_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type20);
	};
	if (((*(_23950_keyB)) != nullptr)) {
		(*(_1e5e47d84_comptimeStatic((*((*((*(_23950_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_23920_i];
	};
}



inline jule::I64 _1e5d123d0_len(_1e5d10c3b_comptimeStatics* _self_) {
	return (*(_self_))._field_fields.len();;
}








inline jule::Bool _1e5d126aa_comptimeEnumField_eq(_1e5d126aa_comptimeEnumField *_self_, _1e5d126aa_comptimeEnumField _other_) {
	return 
		(_self_->_field_field == _other_._field_field);
}

inline jule::Str _1e5d12a62_Str(_1e5d126aa_comptimeEnumField* _self_) {
	return jule::Str::lit("comptimeEnumField", 17);;
}



inline jule::Bool _1e5d12da3_Equal(jule::Ptr<_1e5d126aa_comptimeEnumField> _self_, jule::Ptr<_1e5e417ea_TypeKind> _26318_other) {
	return false;;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5d1339d__Decl(jule::Ptr<_1e5d126aa_comptimeEnumField> _self_, jule::Ptr<_1e5e0a93a_eval>* _26727_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _26742_fc) {
	if (((*((*(_26742_fc))))._field_Args.len() > 0LL)) {
		_1e5e0aebd_pushErr((*(_26727_e)).ptr(), (*((*((*(_26742_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1e5d29cee_comptimeDecl>(_1e5d29cee_comptimeDecl{._field_decl=jule::Any((*(_self_))._field_field, &__jule_any_type21)}), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)});;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5d136de_subIdent(jule::Ptr<_1e5d126aa_comptimeEnumField> _self_, jule::Str* _27926_ident) {
	{
		auto &_match_expr{ (*(_27926_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1ca757b76:;
			{
				jule::Ptr<_1e5ce3416_FnIns> _2828_method = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>((void*)__jule_anon_1ca75bcce, jule::Ptr<__jule_anon_1ca75bcce_ctx>::make(__jule_anon_1ca75bcce_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ca75bcce_ctx_handler), ._field_reloaded=false});;
				return _1e5d2e2dc_buildAsComptimeMethodData(&(_2828_method));;
			}
		}
		else {
			_case_begin_1ca7571b4:;
			{
				return nullptr;;
			}
		}
		_match_end_1ca75714d:;
	};
}







inline jule::Str _1e5d13e81_Str(_1e5d139b9_comptimeEnumFields* _self_) {
	return jule::Str::lit("comptimeEnumFields", 18);;
}



inline jule::Bool _1e5d142c2_Equal(jule::Ptr<_1e5d139b9_comptimeEnumFields> _self_, jule::Ptr<_1e5e417ea_TypeKind> _30118_other) {
	return false;;
}



inline void _1e5d146ce_ready(_1e5d139b9_comptimeEnumFields* _self_, jule::Ptr<_1e5da0bcc_Var>* _30526_keyA, jule::Ptr<_1e5da0bcc_Var>* _30543_keyB) {
	if (((*(_30526_keyA)) != nullptr)) {
		(*((*(_30526_keyA))))._field_Constant=true;
		(*((*(_30526_keyA))))._field_Value=jule::new_ptr<_1e5e09d8a_Value>(_1e5e09d8a_Value{._field_Expr=jule::Ptr<_1e5ca93bb_Expr>(nullptr), ._field_Data=jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)})});
		(*((*(_30526_keyA))))._field_Kind=(*(_1e6029916_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_Kind;
	};
	if (((*(_30543_keyB)) != nullptr)) {
		(*((*(_30543_keyB))))._field_Constant=true;
		(*((*(_30543_keyB))))._field_Value=jule::new_ptr<_1e5e09d8a_Value>(_1e5e09d8a_Value{._field_Expr=jule::Ptr<_1e5ca93bb_Expr>(nullptr), ._field_Data=jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)})});
		(*((*(_30543_keyB))))._field_Kind=jule::new_ptr<_1e5e4900b_TypeSymbol>(_1e5e4900b_TypeSymbol{._field_Decl=jule::Ptr<_1e5ca5087_TypeDecl>(nullptr), ._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1e5d126aa_comptimeEnumField>(_1e5d126aa_comptimeEnumField{._field_field=jule::Ptr<_1e5d05a55_EnumItem>(nullptr)}), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data10)})});
	};
}



inline void _1e5d14a42_index(_1e5d139b9_comptimeEnumFields* _self_, jule::Ptr<_1e5e08c13_Data>* _32626_d, jule::I64 _32636_i) {
	(*((*(_32626_d))))._field_Decl=false;
	(*((*(_32626_d))))._field_untyped=false;
	(*((*(_32626_d))))._field_Constant=nullptr;
	(*((*(_32626_d))))._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1e5d126aa_comptimeEnumField>(_1e5d126aa_comptimeEnumField{._field_field=(*(_self_))._field_fields[_32636_i]}), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data10)});
}



inline void _1e5d14e60_step(_1e5d139b9_comptimeEnumFields* _self_, jule::I64 _33720_i, jule::Ptr<_1e5da0bcc_Var>* _33733_keyA, jule::Ptr<_1e5da0bcc_Var>* _33750_keyB) {
	if (((*(_33733_keyA)) != nullptr)) {
		(*((*((*((*(_33733_keyA))))._field_Value))._field_Data))._field_Constant=static__1e21a491e_NewI64(static_cast<jule::I64>(_33720_i));
		(*(*((*((*(_33733_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_33733_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type20);
	};
	if (((*(_33750_keyB)) != nullptr)) {
		(*(_1e5e46a97_comptimeEnumField((*((*((*(_33750_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_33720_i];
	};
}



inline jule::I64 _1e5d151e6_len(_1e5d139b9_comptimeEnumFields* _self_) {
	return (*(_self_))._field_fields.len();;
}








inline jule::Bool _1e5d154c1_comptimeParam_eq(_1e5d154c1_comptimeParam *_self_, _1e5d154c1_comptimeParam _other_) {
	return 
		(_self_->_field_param == _other_._field_param);
}

inline jule::Str _1e5d15878_Str(_1e5d154c1_comptimeParam* _self_) {
	return jule::Str::lit("comptimeParam", 13);;
}



inline jule::Bool _1e5d15bb9_Equal(jule::Ptr<_1e5d154c1_comptimeParam> _self_, jule::Ptr<_1e5e417ea_TypeKind> _36118_other) {
	return false;;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5d161d6__Decl(jule::Ptr<_1e5d154c1_comptimeParam> _self_, jule::Ptr<_1e5e0a93a_eval>* _36527_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _36542_fc) {
	if (((*((*(_36542_fc))))._field_Args.len() > 0LL)) {
		_1e5e0aebd_pushErr((*(_36527_e)).ptr(), (*((*((*(_36542_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1e5d29cee_comptimeDecl>(_1e5d29cee_comptimeDecl{._field_decl=jule::Any((*((*(_self_))._field_param))._field_Decl, &__jule_any_type22)}), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)});;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5d165d2__Type(jule::Ptr<_1e5d154c1_comptimeParam> _self_, jule::Ptr<_1e5e0a93a_eval>* _37727_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _37742_fc) {
	if (((*((*(_37742_fc))))._field_Args.len() > 0LL)) {
		_1e5e0aebd_pushErr((*(_37727_e)).ptr(), (*((*((*(_37742_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return _1e5d2e870_buildComptimeTypeInfoData(&((*((*(_37727_e))))._field_s), &((*((*(_self_))._field_param))._field_Kind));;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5d169cd__Recv(jule::Ptr<_1e5d154c1_comptimeParam> _self_, jule::Ptr<_1e5e0a93a_eval>* _38527_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _38542_fc) {
	if (((*((*(_38542_fc))))._field_Args.len() > 0LL)) {
		_1e5e0aebd_pushErr((*(_38527_e)).ptr(), (*((*((*(_38542_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Recv", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1e21a449b_Const> _3907_constant = static__1e21a4ea2_NewBool(_1e5cdded3_IsSelf((*((*(_self_))._field_param))._field_Decl.ptr()));;
	return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=_1e6026b88_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_3907_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_3907_constant});;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5d16d1e_subIdent(jule::Ptr<_1e5d154c1_comptimeParam> _self_, jule::Str* _39826_ident) {
	{
		auto &_match_expr{ (*(_39826_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1ca7722de:;
			{
				jule::Ptr<_1e5ce3416_FnIns> _4018_method = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>((void*)__jule_anon_1ca77360e, jule::Ptr<__jule_anon_1ca77360e_ctx>::make(__jule_anon_1ca77360e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ca77360e_ctx_handler), ._field_reloaded=false});;
				return _1e5d2e2dc_buildAsComptimeMethodData(&(_4018_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Recv", 4)) {
			_case_begin_1ca772388:;
			{
				jule::Ptr<_1e5ce3416_FnIns> _4088_method = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>((void*)__jule_anon_1ca775589, jule::Ptr<__jule_anon_1ca775589_ctx>::make(__jule_anon_1ca775589_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ca775589_ctx_handler), ._field_reloaded=false});;
				return _1e5d2e2dc_buildAsComptimeMethodData(&(_4088_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1ca772410:;
			{
				jule::Ptr<_1e5ce3416_FnIns> _4158_method = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>((void*)__jule_anon_1ca777514, jule::Ptr<__jule_anon_1ca777514_ctx>::make(__jule_anon_1ca777514_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ca777514_ctx_handler), ._field_reloaded=false});;
				return _1e5d2e2dc_buildAsComptimeMethodData(&(_4158_method));;
			}
		}
		else {
			_case_begin_1ca771ed1:;
			{
				return nullptr;;
			}
		}
		_match_end_1ca772201:;
	};
}







inline jule::Str _1e5d175c2_Str(_1e5d1732a_comptimeParams* _self_) {
	return jule::Str::lit("comptimeParams", 14);;
}



inline jule::Bool _1e5d17913_Equal(jule::Ptr<_1e5d1732a_comptimeParams> _self_, jule::Ptr<_1e5e417ea_TypeKind> _43418_other) {
	return false;;
}



inline void _1e5d17d97_ready(_1e5d1732a_comptimeParams* _self_, jule::Ptr<_1e5da0bcc_Var>* _43826_keyA, jule::Ptr<_1e5da0bcc_Var>* _43843_keyB) {
	if (((*(_43826_keyA)) != nullptr)) {
		(*((*(_43826_keyA))))._field_Constant=true;
		(*((*(_43826_keyA))))._field_Value=jule::new_ptr<_1e5e09d8a_Value>(_1e5e09d8a_Value{._field_Expr=jule::Ptr<_1e5ca93bb_Expr>(nullptr), ._field_Data=jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)})});
		(*((*(_43826_keyA))))._field_Kind=(*(_1e6029916_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_Kind;
	};
	if (((*(_43843_keyB)) != nullptr)) {
		(*((*(_43843_keyB))))._field_Constant=true;
		(*((*(_43843_keyB))))._field_Value=jule::new_ptr<_1e5e09d8a_Value>(_1e5e09d8a_Value{._field_Expr=jule::Ptr<_1e5ca93bb_Expr>(nullptr), ._field_Data=jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)})});
		(*((*(_43843_keyB))))._field_Kind=jule::new_ptr<_1e5e4900b_TypeSymbol>(_1e5e4900b_TypeSymbol{._field_Decl=jule::Ptr<_1e5ca5087_TypeDecl>(nullptr), ._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1e5d154c1_comptimeParam>(_1e5d154c1_comptimeParam{._field_param=jule::Ptr<_1e5ce22b1_ParamIns>(nullptr)}), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data12)})});
	};
}



inline void _1e5d1820a_index(_1e5d1732a_comptimeParams* _self_, jule::Ptr<_1e5e08c13_Data>* _45926_d, jule::I64 _45936_i) {
	(*((*(_45926_d))))._field_Decl=false;
	(*((*(_45926_d))))._field_untyped=false;
	(*((*(_45926_d))))._field_Constant=nullptr;
	(*((*(_45926_d))))._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1e5d154c1_comptimeParam>(_1e5d154c1_comptimeParam{._field_param=(*(_self_))._field_params[_45936_i]}), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data12)});
}



inline void _1e5d18628_step(_1e5d1732a_comptimeParams* _self_, jule::I64 _47020_i, jule::Ptr<_1e5da0bcc_Var>* _47033_keyA, jule::Ptr<_1e5da0bcc_Var>* _47050_keyB) {
	if (((*(_47033_keyA)) != nullptr)) {
		(*((*((*((*(_47033_keyA))))._field_Value))._field_Data))._field_Constant=static__1e21a491e_NewI64(static_cast<jule::I64>(_47020_i));
		(*(*((*((*(_47033_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_47033_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type20);
	};
	if (((*(_47050_keyB)) != nullptr)) {
		(*(_1e5e470b4_comptimeParam((*((*((*(_47050_keyB))))._field_Kind))._field_Kind.ptr())))._field_param=(*(_self_))._field_params[_47020_i];
	};
}



inline jule::I64 _1e5d188ae_len(_1e5d1732a_comptimeParams* _self_) {
	return (*(_self_))._field_params.len();;
}







inline jule::Str _1e5d19041_Str(_1e5d18b89_comptimeTypeInfos* _self_) {
	return jule::Str::lit("comptimeTypeInfos", 17);;
}



inline jule::Bool _1e5d19382_Equal(jule::Ptr<_1e5d18b89_comptimeTypeInfos> _self_, jule::Ptr<_1e5e417ea_TypeKind> _49418_other) {
	return false;;
}



inline void _1e5d19816_ready(_1e5d18b89_comptimeTypeInfos* _self_, jule::Ptr<_1e5da0bcc_Var>* _49826_keyA, jule::Ptr<_1e5da0bcc_Var>* _49843_keyB) {
	if (((*(_49826_keyA)) != nullptr)) {
		(*((*(_49826_keyA))))._field_Constant=true;
		(*((*(_49826_keyA))))._field_Value=jule::new_ptr<_1e5e09d8a_Value>(_1e5e09d8a_Value{._field_Expr=jule::Ptr<_1e5ca93bb_Expr>(nullptr), ._field_Data=jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)})});
		(*((*(_49826_keyA))))._field_Kind=(*(_1e6029916_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_Kind;
	};
	if (((*(_49843_keyB)) != nullptr)) {
		(*((*(_49843_keyB))))._field_Constant=true;
		(*((*(_49843_keyB))))._field_Value=jule::new_ptr<_1e5e09d8a_Value>(_1e5e09d8a_Value{._field_Expr=jule::Ptr<_1e5ca93bb_Expr>(nullptr), ._field_Data=jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)})});
		(*((*(_49843_keyB))))._field_Kind=jule::new_ptr<_1e5e4900b_TypeSymbol>(_1e5e4900b_TypeSymbol{._field_Decl=jule::Ptr<_1e5ca5087_TypeDecl>(nullptr), ._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1e5d1a608_comptimeTypeInfo>(_1e5d1a608_comptimeTypeInfo{._field_base=jule::Ptr<_1e5e417ea_TypeKind>(nullptr)}), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data15)})});
	};
}



inline void _1e5d19b79_index(_1e5d18b89_comptimeTypeInfos* _self_, jule::Ptr<_1e5e08c13_Data>* _51926_d, jule::I64 _51936_i) {
	(*((*(_51926_d))))._field_Decl=false;
	(*((*(_51926_d))))._field_untyped=false;
	(*((*(_51926_d))))._field_Constant=nullptr;
	(*((*(_51926_d))))._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_self_))._field_types[_51936_i], (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data15)});
}



inline void _1e5d1a097_step(_1e5d18b89_comptimeTypeInfos* _self_, jule::I64 _52820_i, jule::Ptr<_1e5da0bcc_Var>* _52833_keyA, jule::Ptr<_1e5da0bcc_Var>* _52850_keyB) {
	if (((*(_52833_keyA)) != nullptr)) {
		(*((*((*((*(_52833_keyA))))._field_Value))._field_Data))._field_Constant=static__1e21a491e_NewI64(static_cast<jule::I64>(_52820_i));
		(*(*((*((*(_52833_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_52833_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type20);
	};
	if (((*(_52850_keyB)) != nullptr)) {
		(*((*((*((*(_52850_keyB))))._field_Kind))._field_Kind))._field_Kind=jule::Trait((*(_self_))._field_types[_52820_i], (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data15);
	};
}



inline jule::I64 _1e5d1a32d_len(_1e5d18b89_comptimeTypeInfos* _self_) {
	return (*(_self_))._field_types.len();;
}








inline jule::Bool _1e5d1a608_comptimeTypeInfo_eq(_1e5d1a608_comptimeTypeInfo *_self_, _1e5d1a608_comptimeTypeInfo _other_) {
	return 
		(_self_->_field_base == _other_._field_base);
}

inline jule::Str _1e5d1a9b0_Str(_1e5d1a608_comptimeTypeInfo* _self_) {
	return ((jule::Str::lit("comptimeTypeInfo[", 17) + _1e5e41be6_Str((*(_self_))._field_base.ptr())) + jule::Str::lit("]", 1));;
}



inline jule::Bool _1e5d1ad01_Equal(jule::Ptr<_1e5d1a608_comptimeTypeInfo> _self_, jule::Ptr<_1e5e417ea_TypeKind> _55218_other) {
	return false;;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5d1b43e__Decl(jule::Ptr<_1e5d1a608_comptimeTypeInfo> _self_, jule::Ptr<_1e5e0a93a_eval>* _55627_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _55642_fc) {
	if (((*((*(_55642_fc))))._field_Args.len() > 0LL)) {
		_1e5e0aebd_pushErr((*(_55627_e)).ptr(), (*((*((*(_55642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Any _5617_decl = jule::Any();;
	{
		
		if ((_1e5e45524_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ca78e51a:;
			{
				_5617_decl=jule::Any((*(_1e5e45524_Struct((*(_self_))._field_base)))._field_Decl, &__jule_any_type23);
			}
		}
		else if ((_1e5e457aa_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ca78e581:;
			{
				_5617_decl=jule::Any(_1e5e457aa_Trait((*(_self_))._field_base), &__jule_any_type10);
			}
		}
		else if ((_1e5e44754_Enum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ca78d052:;
			{
				_5617_decl=jule::Any(_1e5e44754_Enum((*(_self_))._field_base), &__jule_any_type24);
			}
		}
		else if ((_1e5e449da_TypeEnum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ca78d0b8:;
			{
				_5617_decl=jule::Any(_1e5e449da_TypeEnum((*(_self_))._field_base), &__jule_any_type25);
			}
		}
		else if ((_1e5e4528d_Fn((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ca78d12e:;
			{
				jule::Ptr<_1e5ce3416_FnIns> _5728_f = _1e5e4528d_Fn((*(_self_))._field_base);;
				{
					
					if (_1e5ce48ce_IsBuiltin(_5728_f.ptr())) {
						_case_begin_1ca79d9d0:;
						{
							_1e5e0aebd_pushErr((*(_55627_e)).ptr(), (*((*(_55642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("<built-in function>", 19), &__jule_any_type4); __jule_collection; }));
							return nullptr;;
						}
					}
					else if (_1e5ce4b65_IsAnon(_5728_f.ptr())) {
						_case_begin_1ca79da79:;
						{
							_1e5e0aebd_pushErr((*(_55627_e)).ptr(), (*((*(_55642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("<anonymous function>", 20), &__jule_any_type4); __jule_collection; }));
							return nullptr;;
						}
					}
					_match_end_1ca79d947:;
				};
				_5617_decl=jule::Any((*(_5728_f))._field_Decl, &__jule_any_type26);
			}
		}
		else {
			_case_begin_1ca78cedb:;
			{
				_1e5e0aebd_pushErr((*(_55627_e)).ptr(), (*((*(_55642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*(_self_))._field_base.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1ca78cdba:;
	};
	return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1e5d29cee_comptimeDecl>(_1e5d29cee_comptimeDecl{._field_decl=_5617_decl}), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)});;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5d1b83a__Str(jule::Ptr<_1e5d1a608_comptimeTypeInfo> _self_, jule::Ptr<_1e5e0a93a_eval>* _59322_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _59337_fc) {
	if (((*((*(_59337_fc))))._field_Args.len() > 0LL)) {
		_1e5e0aebd_pushErr((*(_59322_e)).ptr(), (*((*((*(_59337_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Str", 3), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1e21a449b_Const> _5987_constant = static__1e21a526b_NewStr(_1e5e41be6_Str((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=_1e60268d0_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_5987_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_5987_constant});;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5d1bc36__Kind(jule::Ptr<_1e5d1a608_comptimeTypeInfo> _self_, jule::Ptr<_1e5e0a93a_eval>* _60627_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _60642_fc) {
	if (((*((*(_60642_fc))))._field_Args.len() > 0LL)) {
		_1e5e0aebd_pushErr((*(_60627_e)).ptr(), (*((*((*(_60642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Kind", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1e5d065c2_Enum> _6117_enm = _1e5d5d085_FindEnum(_1e5d2e4eb_findComptimePackage(&((*((*(_60627_e))))._field_s)).ptr(), jule::Str::lit("Kind", 4));;
	jule::Ptr<_1e5d05a55_EnumItem> _61211_item = nullptr;;
	{
		
		if (_1e5e42bb4_Void((*(_self_))._field_base.ptr())) {
			_case_begin_1ca7ab614:;
			{
				_61211_item=_1e5d071e9_FindItem(_6117_enm.ptr(), jule::Str::lit("Void", 4));
			}
		}
		else if ((_1e5e45524_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ca7ab526:;
			{
				_61211_item=_1e5d071e9_FindItem(_6117_enm.ptr(), jule::Str::lit("Struct", 6));
			}
		}
		else if ((_1e5e457aa_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ca7ab2c3:;
			{
				_61211_item=_1e5d071e9_FindItem(_6117_enm.ptr(), jule::Str::lit("Trait", 5));
			}
		}
		else if ((_1e5e444bd_Ptr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ca7ab339:;
			{
				if (_1e5e52773_IsUnsafe(_1e5e444bd_Ptr((*(_self_))._field_base).ptr())) {
					_61211_item=_1e5d071e9_FindItem(_6117_enm.ptr(), jule::Str::lit("UnsafePtr", 9));
				} else {
					_61211_item=_1e5d071e9_FindItem(_6117_enm.ptr(), jule::Str::lit("Ptr", 3));
				};
			}
		}
		else if ((_1e5e44237_Sptr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ca7ab3a0:;
			{
				_61211_item=_1e5d071e9_FindItem(_6117_enm.ptr(), jule::Str::lit("SmartPtr", 8));
			}
		}
		else if ((_1e5e44754_Enum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ca7ab416:;
			{
				_61211_item=_1e5d071e9_FindItem(_6117_enm.ptr(), jule::Str::lit("Enum", 4));
			}
		}
		else if ((_1e5e449da_TypeEnum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ca7abd73:;
			{
				_61211_item=_1e5d071e9_FindItem(_6117_enm.ptr(), jule::Str::lit("TypeEnum", 8));
			}
		}
		else if ((_1e5e45a41_Map((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ca7abdd9:;
			{
				_61211_item=_1e5d071e9_FindItem(_6117_enm.ptr(), jule::Str::lit("Map", 3));
			}
		}
		else if ((_1e5e45007_Slc((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ca7abe50:;
			{
				_61211_item=_1e5d071e9_FindItem(_6117_enm.ptr(), jule::Str::lit("Slice", 5));
			}
		}
		else if ((_1e5e44c71_Arr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ca7abeb6:;
			{
				_61211_item=_1e5d071e9_FindItem(_6117_enm.ptr(), jule::Str::lit("Array", 5));
			}
		}
		else if ((_1e5e4528d_Fn((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ca7ac03d:;
			{
				_61211_item=_1e5d071e9_FindItem(_6117_enm.ptr(), jule::Str::lit("Func", 4));
			}
		}
		else if ((_1e5e45cc7_Tup((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ca7ac0b5:;
			{
				_61211_item=_1e5d071e9_FindItem(_6117_enm.ptr(), jule::Str::lit("Tuple", 5));
			}
		}
		else if ((_1e5e43ea1_Prim((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ca7ac13c:;
			{
				jule::Ptr<_1e5e49913_Prim> _6434_prim = _1e5e43ea1_Prim((*(_self_))._field_base);;
				{
					
					if (_1e5e4d164_IsAny(_6434_prim.ptr())) {
						_case_begin_1ca7b8a94:;
						{
							_61211_item=_1e5d071e9_FindItem(_6117_enm.ptr(), jule::Str::lit("Any", 3));
						}
					}
					else if (_1e5e4cb47_IsBool(_6434_prim.ptr())) {
						_case_begin_1ca7b89a6:;
						{
							_61211_item=_1e5d071e9_FindItem(_6117_enm.ptr(), jule::Str::lit("Bool", 4));
						}
					}
					else if (_1e5e4cdcd_IsStr(_6434_prim.ptr())) {
						_case_begin_1ca7b8786:;
						{
							_61211_item=_1e5d071e9_FindItem(_6117_enm.ptr(), jule::Str::lit("Str", 3));
						}
					}
					else if (_1e5e4bd77_IsF32(_6434_prim.ptr())) {
						_case_begin_1ca7b87ec:;
						{
							_61211_item=_1e5d071e9_FindItem(_6117_enm.ptr(), jule::Str::lit("F32", 3));
						}
					}
					else if (_1e5e4c10d_IsF64(_6434_prim.ptr())) {
						_case_begin_1ca7b8863:;
						{
							_61211_item=_1e5d071e9_FindItem(_6117_enm.ptr(), jule::Str::lit("F64", 3));
						}
					}
					else if (_1e5e4a804_IsI8(_6434_prim.ptr())) {
						_case_begin_1ca7b88c9:;
						{
							_61211_item=_1e5d071e9_FindItem(_6117_enm.ptr(), jule::Str::lit("I8", 2));
						}
					}
					else if (_1e5e4aa8a_IsI16(_6434_prim.ptr())) {
						_case_begin_1ca7b9303:;
						{
							_61211_item=_1e5d071e9_FindItem(_6117_enm.ptr(), jule::Str::lit("I16", 3));
						}
					}
					else if (_1e5e4ad21_IsI32(_6434_prim.ptr())) {
						_case_begin_1ca7b937a:;
						{
							_61211_item=_1e5d071e9_FindItem(_6117_enm.ptr(), jule::Str::lit("I32", 3));
						}
					}
					else if (_1e5e4b0a7_IsI64(_6434_prim.ptr())) {
						_case_begin_1ca7b9402:;
						{
							_61211_item=_1e5d071e9_FindItem(_6117_enm.ptr(), jule::Str::lit("I64", 3));
						}
					}
					else if (_1e5e4b33d_IsU8(_6434_prim.ptr())) {
						_case_begin_1ca7b9479:;
						{
							_61211_item=_1e5d071e9_FindItem(_6117_enm.ptr(), jule::Str::lit("U8", 2));
						}
					}
					else if (_1e5e4b5c4_IsU16(_6434_prim.ptr())) {
						_case_begin_1ca7b9501:;
						{
							_61211_item=_1e5d071e9_FindItem(_6117_enm.ptr(), jule::Str::lit("U16", 3));
						}
					}
					else if (_1e5e4b85a_IsU32(_6434_prim.ptr())) {
						_case_begin_1ca7b9578:;
						{
							_61211_item=_1e5d071e9_FindItem(_6117_enm.ptr(), jule::Str::lit("U32", 3));
						}
					}
					else if (_1e5e4bae1_IsU64(_6434_prim.ptr())) {
						_case_begin_1ca7b9600:;
						{
							_61211_item=_1e5d071e9_FindItem(_6117_enm.ptr(), jule::Str::lit("U64", 3));
						}
					}
					else if (_1e5e4c394_IsInt(_6434_prim.ptr())) {
						_case_begin_1ca7b9677:;
						{
							_61211_item=_1e5d071e9_FindItem(_6117_enm.ptr(), jule::Str::lit("Int", 3));
						}
					}
					else if (_1e5e4c62a_IsUint(_6434_prim.ptr())) {
						_case_begin_1ca7b96ee:;
						{
							_61211_item=_1e5d071e9_FindItem(_6117_enm.ptr(), jule::Str::lit("Uint", 4));
						}
					}
					else if (_1e5e4c8b1_IsUintptr(_6434_prim.ptr())) {
						_case_begin_1ca7b9776:;
						{
							_61211_item=_1e5d071e9_FindItem(_6117_enm.ptr(), jule::Str::lit("Uintptr", 7));
						}
					}
					else {
						_case_begin_1ca7b85dd:;
						{
							__jule_panic_s((jule::Str::lit("Kind(): unimplemented type for std::comptime: ", 46) + _1e5e41be6_Str((*(_self_))._field_base)) + jule::Str("\nlocation: std/jule/sema/comptime.jule:678:5"));;
						}
					}
					_match_end_1ca7b8566:;
				};
			}
		}
		else {
			_case_begin_1ca7ab15d:;
			{
				__jule_panic_s((jule::Str::lit("Kind(): unimplemented type for std::comptime: ", 46) + _1e5e41be6_Str((*(_self_))._field_base.ptr())) + jule::Str("\nlocation: std/jule/sema/comptime.jule:681:4"));;
			}
		}
		_match_end_1ca7ab0a3:;
	};
	return _1e5e3cc36_evalEnumStatic(&((*((*(_60627_e))))._field_s), &(_6117_enm), &(_61211_item), &((*((*(_60642_fc))))._field_Token), _1e5e0dec1_getOwnerRefers((*(_60627_e)).ptr()));;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5d1c132__Bits(jule::Ptr<_1e5d1a608_comptimeTypeInfo> _self_, jule::Ptr<_1e5e0a93a_eval>* _68627_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _68642_fc) {
	if (((*((*(_68642_fc))))._field_Args.len() > 0LL)) {
		_1e5e0aebd_pushErr((*(_68627_e)).ptr(), (*((*((*(_68642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1e5e49913_Prim> _6913_prim = _1e5e43ea1_Prim((*(_self_))._field_base.ptr());;
	if ((_6913_prim == nullptr)) {
		_1e5e0aebd_pushErr((*(_68627_e)).ptr(), (*((*(_68642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::I64 _6963_n = _1e2198814_BitsizeOf((*(_6913_prim))._field_Kind);;
	if ((_6963_n == -1LL)) {
		_1e5e0aebd_pushErr((*(_68627_e)).ptr(), (*((*(_68642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1e21a449b_Const> _7017_constant = static__1e21a491e_NewI64(static_cast<jule::I64>(_6963_n));;
	return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=true, ._field_Kind=_1e60275b2_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_7017_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_7017_constant});;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5d1c52d__Elem(jule::Ptr<_1e5d1a608_comptimeTypeInfo> _self_, jule::Ptr<_1e5e0a93a_eval>* _71027_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _71042_fc) {
	if (((*((*(_71042_fc))))._field_Args.len() > 0LL)) {
		_1e5e0aebd_pushErr((*(_71027_e)).ptr(), (*((*((*(_71042_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1e5e51c06_Ptr> _7157_ptr = _1e5e444bd_Ptr((*(_self_))._field_base.ptr());;
	if ((_7157_ptr != nullptr)) {
		if (_1e5e52773_IsUnsafe(_7157_ptr)) {
			_1e5e0aebd_pushErr((*(_71027_e)).ptr(), (*((*(_71042_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4); __jule_collection; }));
			return nullptr;;
		};
		return _1e5d2e870_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*_7157_ptr.alloc)._field_Elem));;
	};
	jule::Ptr<_1e5e4d43e_Sptr> _7237_sptr = _1e5e44237_Sptr((*(_self_))._field_base);;
	if ((_7237_sptr != nullptr)) {
		return _1e5d2e870_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*_7237_sptr.alloc)._field_Elem));;
	};
	jule::Ptr<_1e5e4de12_Slc> _7277_slice = _1e5e45007_Slc((*(_self_))._field_base);;
	if ((_7277_slice != nullptr)) {
		return _1e5d2e870_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*_7277_slice.alloc)._field_Elem));;
	};
	jule::Ptr<_1e5e51233_Arr> _7317_array = _1e5e44c71_Arr((*(_self_))._field_base);;
	if ((_7317_array != nullptr)) {
		return _1e5d2e870_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*_7317_array.alloc)._field_Elem));;
	};
	jule::Ptr<_1e5d065c2_Enum> _7357_enm = _1e5e44754_Enum((*(_self_))._field_base);;
	if ((_7357_enm != nullptr)) {
		return _1e5d2e870_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*((*_7357_enm.alloc)._field_Kind))._field_Kind));;
	};
	_1e5e0aebd_pushErr((*(_71027_e)).ptr(), (*((*(_71042_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5d1c929__Size(jule::Ptr<_1e5d1a608_comptimeTypeInfo> _self_, jule::Ptr<_1e5e0a93a_eval>* _74327_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _74342_fc) {
	if (((*((*(_74342_fc))))._field_Args.len() > 0LL)) {
		_1e5e0aebd_pushErr((*(_74327_e)).ptr(), (*((*((*(_74342_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Size", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1e5e51233_Arr> _7487_arr = _1e5e44c71_Arr((*(_self_))._field_base.ptr());;
	if ((_7487_arr == nullptr)) {
		_1e5e0aebd_pushErr((*(_74327_e)).ptr(), (*((*(_74342_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Size", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1e21a449b_Const> _7537_constant = static__1e21a491e_NewI64(static_cast<jule::I64>((*(_7487_arr))._field_N));;
	return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=true, ._field_Kind=_1e60275b2_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_7537_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_7537_constant});;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5d1cd25__Key(jule::Ptr<_1e5d1a608_comptimeTypeInfo> _self_, jule::Ptr<_1e5e0a93a_eval>* _76226_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _76241_fc) {
	if (((*((*(_76241_fc))))._field_Args.len() > 0LL)) {
		_1e5e0aebd_pushErr((*(_76226_e)).ptr(), (*((*((*(_76241_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Key", 3), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1e5e505a6_Map> _7677_m = _1e5e45a41_Map((*(_self_))._field_base.ptr());;
	if ((_7677_m == nullptr)) {
		_1e5e0aebd_pushErr((*(_76226_e)).ptr(), (*((*(_76241_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Key", 3), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return _1e5d2e870_buildComptimeTypeInfoData(&((*((*(_76226_e))))._field_s), &((*(_7677_m))._field_Key));;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5d1d221__Value(jule::Ptr<_1e5d1a608_comptimeTypeInfo> _self_, jule::Ptr<_1e5e0a93a_eval>* _77528_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _77543_fc) {
	if (((*((*(_77543_fc))))._field_Args.len() > 0LL)) {
		_1e5e0aebd_pushErr((*(_77528_e)).ptr(), (*((*((*(_77543_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Value", 5), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1e5e505a6_Map> _7807_m = _1e5e45a41_Map((*(_self_))._field_base.ptr());;
	if ((_7807_m == nullptr)) {
		_1e5e0aebd_pushErr((*(_77528_e)).ptr(), (*((*(_77543_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Value", 5), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return _1e5d2e870_buildComptimeTypeInfoData(&((*((*(_77528_e))))._field_s), &((*(_7807_m))._field_Val));;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5d1d61c__Fields(jule::Ptr<_1e5d1a608_comptimeTypeInfo> _self_, jule::Ptr<_1e5e0a93a_eval>* _78829_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _78844_fc) {
	if (((*((*(_78844_fc))))._field_Args.len() > 0LL)) {
		_1e5e0aebd_pushErr((*(_78829_e)).ptr(), (*((*((*(_78844_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1e5cc8c7b_StructIns> _7937_s = _1e5e45524_Struct((*(_self_))._field_base.ptr());;
	if ((_7937_s != nullptr)) {
		return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1e5d0ca07_comptimeStructFields>(_1e5d0ca07_comptimeStructFields{._field_fields=(*_7937_s.alloc)._field_Fields}), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data7)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)});;
	};
	jule::Ptr<_1e5d065c2_Enum> _8037_enm = _1e5e44754_Enum((*(_self_))._field_base);;
	if ((_8037_enm != nullptr)) {
		return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1e5d139b9_comptimeEnumFields>(_1e5d139b9_comptimeEnumFields{._field_fields=(*_8037_enm.alloc)._field_Items}), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data11)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)});;
	};
	_1e5e0aebd_pushErr((*(_78829_e)).ptr(), (*((*(_78844_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5d1da18__Statics(jule::Ptr<_1e5d1a608_comptimeTypeInfo> _self_, jule::Ptr<_1e5e0a93a_eval>* _81730_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _81745_fc) {
	if (((*((*(_81745_fc))))._field_Args.len() > 0LL)) {
		_1e5e0aebd_pushErr((*(_81730_e)).ptr(), (*((*((*(_81745_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1e5cc8c7b_StructIns> _8227_s = _1e5e45524_Struct((*(_self_))._field_base.ptr());;
	if ((_8227_s == nullptr)) {
		_1e5e0aebd_pushErr((*(_81730_e)).ptr(), (*((*(_81745_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1e5d10c3b_comptimeStatics>(_1e5d10c3b_comptimeStatics{._field_fields=(*(_8227_s))._field_Statics}), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data9)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)});;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5d1de14__Binded(jule::Ptr<_1e5d1a608_comptimeTypeInfo> _self_, jule::Ptr<_1e5e0a93a_eval>* _83629_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _83644_fc) {
	if (((*((*(_83644_fc))))._field_Args.len() > 0LL)) {
		_1e5e0aebd_pushErr((*(_83629_e)).ptr(), (*((*((*(_83644_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1e21a449b_Const> _8417_constant = static__1e21a4ea2_NewBool(_1e5e42697_Binded((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=_1e6026b88_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8417_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_8417_constant});;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5d1e310__Ordered(jule::Ptr<_1e5d1a608_comptimeTypeInfo> _self_, jule::Ptr<_1e5e0a93a_eval>* _84926_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _84941_fc) {
	if (((*((*(_84941_fc))))._field_Args.len() > 0LL)) {
		_1e5e0aebd_pushErr((*(_84926_e)).ptr(), (*((*((*(_84941_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Ordered", 7), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1e21a449b_Const> _8547_constant = static__1e21a4ea2_NewBool(_1e5e43467_Ordered((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=_1e6026b88_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8547_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_8547_constant});;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5d1e70b__Comparable(jule::Ptr<_1e5d1a608_comptimeTypeInfo> _self_, jule::Ptr<_1e5e0a93a_eval>* _86229_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _86244_fc) {
	if (((*((*(_86244_fc))))._field_Args.len() > 0LL)) {
		_1e5e0aebd_pushErr((*(_86229_e)).ptr(), (*((*((*(_86244_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Comparable", 10), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1e21a449b_Const> _8677_constant = static__1e21a4ea2_NewBool(_1e5e42e4a_Comparable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=_1e6026b88_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8677_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_8677_constant});;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5d1eb07__Mutable(jule::Ptr<_1e5d1a608_comptimeTypeInfo> _self_, jule::Ptr<_1e5e0a93a_eval>* _87526_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _87541_fc) {
	if (((*((*(_87541_fc))))._field_Args.len() > 0LL)) {
		_1e5e0aebd_pushErr((*(_87526_e)).ptr(), (*((*((*(_87541_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1e21a449b_Const> _8807_constant = static__1e21a4ea2_NewBool(_1e5e431d1_Mutable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=_1e6026b88_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8807_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_8807_constant});;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5d20003__Types(jule::Ptr<_1e5d1a608_comptimeTypeInfo> _self_, jule::Ptr<_1e5e0a93a_eval>* _88828_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _88843_fc) {
	if (((*((*(_88843_fc))))._field_Args.len() > 0LL)) {
		_1e5e0aebd_pushErr((*(_88828_e)).ptr(), (*((*((*(_88843_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Types", 5), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1e5e4ea06_Tuple> _8937_tup = _1e5e45cc7_Tup((*(_self_))._field_base.ptr());;
	if ((_8937_tup == nullptr)) {
		_1e5e0aebd_pushErr((*(_88828_e)).ptr(), (*((*(_88843_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Types", 5), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1e5d18b89_comptimeTypeInfos> _8987_infos = jule::new_ptr<_1e5d18b89_comptimeTypeInfos>(_1e5d18b89_comptimeTypeInfos{._field_types=({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5d1a608_comptimeTypeInfo>>::alloc(0LL, (*(_8937_tup))._field_Types.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1e5d1a608_comptimeTypeInfo>(nullptr); __jule_collection; })});;
	{
		auto expr = &((*(_8937_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca80c38a:;
		if (it != expr_end) {
			jule::Ptr<_1e5e417ea_TypeKind> _90115_t = *it;
			{
				(*(_8987_infos))._field_types=jule::append((*_8987_infos.alloc)._field_types,({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5d1a608_comptimeTypeInfo>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1e5d7b0d6_pushComptimeTypeInfo((*((*((*(_88828_e))))._field_s))._field_meta.ptr(), &(_90115_t)); __jule_collection; }));
			}
			_iter_next_1ca80c38a:;
			++it;
			goto _iter_begin_1ca80c38a;
		}
		_iter_end_1ca80c38a:;
	};
	return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_8987_infos, (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data14)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)});;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5d203ee__CanNil(jule::Ptr<_1e5d1a608_comptimeTypeInfo> _self_, jule::Ptr<_1e5e0a93a_eval>* _91129_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _91144_fc) {
	if (((*((*(_91144_fc))))._field_Args.len() > 0LL)) {
		_1e5e0aebd_pushErr((*(_91129_e)).ptr(), (*((*((*(_91144_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("CanNil", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1e21a449b_Const> _9167_constant = static__1e21a4ea2_NewBool(_1e5e436ed_NilCompatible((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=_1e6026b88_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_9167_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_9167_constant});;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5d207ea__GC(jule::Ptr<_1e5d1a608_comptimeTypeInfo> _self_, jule::Ptr<_1e5e0a93a_eval>* _92425_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _92440_fc) {
	if (((*((*(_92440_fc))))._field_Args.len() > 0LL)) {
		_1e5e0aebd_pushErr((*(_92425_e)).ptr(), (*((*((*(_92440_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("GC", 2), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1e21a449b_Const> _9297_constant = static__1e21a4ea2_NewBool(_1e5e43984_GC((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=_1e6026b88_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_9297_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_9297_constant});;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5d20be6__Result(jule::Ptr<_1e5d1a608_comptimeTypeInfo> _self_, jule::Ptr<_1e5e0a93a_eval>* _93729_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _93744_fc) {
	if (((*((*(_93744_fc))))._field_Args.len() > 0LL)) {
		_1e5e0aebd_pushErr((*(_93729_e)).ptr(), (*((*((*(_93744_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Result", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1e5ce3416_FnIns> _9427_f = _1e5e4528d_Fn((*(_self_))._field_base.ptr());;
	if ((_9427_f == nullptr)) {
		_1e5e0aebd_pushErr((*(_93729_e)).ptr(), (*((*(_93744_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Result", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*(_9427_f))._field_Result == nullptr)) {
		return _1e5d2e870_buildComptimeTypeInfoData(&((*((*(_93729_e))))._field_s), &(_1e602632a_primVoid));;
	};
	return _1e5d2e870_buildComptimeTypeInfoData(&((*((*(_93729_e))))._field_s), &((*(_9427_f))._field_Result));;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5d210e2__Params(jule::Ptr<_1e5d1a608_comptimeTypeInfo> _self_, jule::Ptr<_1e5e0a93a_eval>* _95329_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _95344_fc) {
	if (((*((*(_95344_fc))))._field_Args.len() > 0LL)) {
		_1e5e0aebd_pushErr((*(_95329_e)).ptr(), (*((*((*(_95344_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1e5ce3416_FnIns> _9587_f = _1e5e4528d_Fn((*(_self_))._field_base.ptr());;
	if ((_9587_f == nullptr)) {
		_1e5e0aebd_pushErr((*(_95329_e)).ptr(), (*((*(_95344_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1e5d1732a_comptimeParams>(_1e5d1732a_comptimeParams{._field_params=(*(_9587_f))._field_Params}), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data13)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)});;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5d21433_subIdent(jule::Ptr<_1e5d1a608_comptimeTypeInfo> _self_, jule::Str* _97026_ident) {
	{
		auto &_match_expr{ (*(_97026_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1ca8233b2:;
			{
				jule::Ptr<_1e5ce3416_FnIns> _9738_method = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>((void*)__jule_anon_1ca824e74, jule::Ptr<__jule_anon_1ca824e74_ctx>::make(__jule_anon_1ca824e74_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ca824e74_ctx_handler), ._field_reloaded=false});;
				return _1e5d2e2dc_buildAsComptimeMethodData(&(_9738_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Str", 3)) {
			_case_begin_1ca823428:;
			{
				jule::Ptr<_1e5ce3416_FnIns> _9808_method = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>((void*)__jule_anon_1ca826dee, jule::Ptr<__jule_anon_1ca826dee_ctx>::make(__jule_anon_1ca826dee_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ca826dee_ctx_handler), ._field_reloaded=false});;
				return _1e5d2e2dc_buildAsComptimeMethodData(&(_9808_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Bits", 4)) {
			_case_begin_1ca82348e:;
			{
				jule::Ptr<_1e5ce3416_FnIns> _9878_method = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>((void*)__jule_anon_1ca828d79, jule::Ptr<__jule_anon_1ca828d79_ctx>::make(__jule_anon_1ca828d79_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ca828d79_ctx_handler), ._field_reloaded=false});;
				return _1e5d2e2dc_buildAsComptimeMethodData(&(_9878_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Elem", 4)) {
			_case_begin_1ca823626:;
			{
				jule::Ptr<_1e5ce3416_FnIns> _9948_method = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>((void*)__jule_anon_1ca82ad04, jule::Ptr<__jule_anon_1ca82ad04_ctx>::make(__jule_anon_1ca82ad04_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ca82ad04_ctx_handler), ._field_reloaded=false});;
				return _1e5d2e2dc_buildAsComptimeMethodData(&(_9948_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Size", 4)) {
			_case_begin_1ca82369d:;
			{
				jule::Ptr<_1e5ce3416_FnIns> _10018_method = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>((void*)__jule_anon_1ca82cc7e, jule::Ptr<__jule_anon_1ca82cc7e_ctx>::make(__jule_anon_1ca82cc7e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ca82cc7e_ctx_handler), ._field_reloaded=false});;
				return _1e5d2e2dc_buildAsComptimeMethodData(&(_10018_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Key", 3)) {
			_case_begin_1ca823725:;
			{
				jule::Ptr<_1e5ce3416_FnIns> _10088_method = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>((void*)__jule_anon_1ca82ec09, jule::Ptr<__jule_anon_1ca82ec09_ctx>::make(__jule_anon_1ca82ec09_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ca82ec09_ctx_handler), ._field_reloaded=false});;
				return _1e5d2e2dc_buildAsComptimeMethodData(&(_10088_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Value", 5)) {
			_case_begin_1ca82379c:;
			{
				jule::Ptr<_1e5ce3416_FnIns> _10158_method = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>((void*)__jule_anon_1ca831b84, jule::Ptr<__jule_anon_1ca831b84_ctx>::make(__jule_anon_1ca831b84_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ca831b84_ctx_handler), ._field_reloaded=false});;
				return _1e5d2e2dc_buildAsComptimeMethodData(&(_10158_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Fields", 6)) {
			_case_begin_1ca8238ac:;
			{
				jule::Ptr<_1e5ce3416_FnIns> _10228_method = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>((void*)__jule_anon_1ca833b0e, jule::Ptr<__jule_anon_1ca833b0e_ctx>::make(__jule_anon_1ca833b0e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ca833b0e_ctx_handler), ._field_reloaded=false});;
				return _1e5d2e2dc_buildAsComptimeMethodData(&(_10228_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Statics", 7)) {
			_case_begin_1ca823923:;
			{
				jule::Ptr<_1e5ce3416_FnIns> _10298_method = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>((void*)__jule_anon_1ca835bcc, jule::Ptr<__jule_anon_1ca835bcc_ctx>::make(__jule_anon_1ca835bcc_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ca835bcc_ctx_handler), ._field_reloaded=false});;
				return _1e5d2e2dc_buildAsComptimeMethodData(&(_10298_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Params", 6)) {
			_case_begin_1ca823989:;
			{
				jule::Ptr<_1e5ce3416_FnIns> _10368_method = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>((void*)__jule_anon_1ca837b57, jule::Ptr<__jule_anon_1ca837b57_ctx>::make(__jule_anon_1ca837b57_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ca837b57_ctx_handler), ._field_reloaded=false});;
				return _1e5d2e2dc_buildAsComptimeMethodData(&(_10368_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Types", 5)) {
			_case_begin_1ca823a00:;
			{
				jule::Ptr<_1e5ce3416_FnIns> _10438_method = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>((void*)__jule_anon_1ca839ad2, jule::Ptr<__jule_anon_1ca839ad2_ctx>::make(__jule_anon_1ca839ad2_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ca839ad2_ctx_handler), ._field_reloaded=false});;
				return _1e5d2e2dc_buildAsComptimeMethodData(&(_10438_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Binded", 6)) {
			_case_begin_1ca823a77:;
			{
				jule::Ptr<_1e5ce3416_FnIns> _10508_method = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>((void*)__jule_anon_1ca83ba5c, jule::Ptr<__jule_anon_1ca83ba5c_ctx>::make(__jule_anon_1ca83ba5c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ca83ba5c_ctx_handler), ._field_reloaded=false});;
				return _1e5d2e2dc_buildAsComptimeMethodData(&(_10508_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Ordered", 7)) {
			_case_begin_1ca823aee:;
			{
				jule::Ptr<_1e5ce3416_FnIns> _10578_method = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>((void*)__jule_anon_1ca83d9d7, jule::Ptr<__jule_anon_1ca83d9d7_ctx>::make(__jule_anon_1ca83d9d7_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ca83d9d7_ctx_handler), ._field_reloaded=false});;
				return _1e5d2e2dc_buildAsComptimeMethodData(&(_10578_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Comparable", 10)) {
			_case_begin_1ca823b76:;
			{
				jule::Ptr<_1e5ce3416_FnIns> _10648_method = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>((void*)__jule_anon_1ca840962, jule::Ptr<__jule_anon_1ca840962_ctx>::make(__jule_anon_1ca840962_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ca840962_ctx_handler), ._field_reloaded=false});;
				return _1e5d2e2dc_buildAsComptimeMethodData(&(_10648_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1ca823bed:;
			{
				jule::Ptr<_1e5ce3416_FnIns> _10718_method = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>((void*)__jule_anon_1ca8428dc, jule::Ptr<__jule_anon_1ca8428dc_ctx>::make(__jule_anon_1ca8428dc_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ca8428dc_ctx_handler), ._field_reloaded=false});;
				return _1e5d2e2dc_buildAsComptimeMethodData(&(_10718_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("CanNil", 6)) {
			_case_begin_1ca823c75:;
			{
				jule::Ptr<_1e5ce3416_FnIns> _10788_method = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>((void*)__jule_anon_1ca844867, jule::Ptr<__jule_anon_1ca844867_ctx>::make(__jule_anon_1ca844867_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ca844867_ctx_handler), ._field_reloaded=false});;
				return _1e5d2e2dc_buildAsComptimeMethodData(&(_10788_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("GC", 2)) {
			_case_begin_1ca823cec:;
			{
				jule::Ptr<_1e5ce3416_FnIns> _10858_method = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>((void*)__jule_anon_1ca8467e2, jule::Ptr<__jule_anon_1ca8467e2_ctx>::make(__jule_anon_1ca8467e2_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ca8467e2_ctx_handler), ._field_reloaded=false});;
				return _1e5d2e2dc_buildAsComptimeMethodData(&(_10858_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Result", 6)) {
			_case_begin_1ca823d74:;
			{
				jule::Ptr<_1e5ce3416_FnIns> _10928_method = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>((void*)__jule_anon_1ca84876c, jule::Ptr<__jule_anon_1ca84876c_ctx>::make(__jule_anon_1ca84876c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ca84876c_ctx_handler), ._field_reloaded=false});;
				return _1e5d2e2dc_buildAsComptimeMethodData(&(_10928_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Kind", 4)) {
			_case_begin_1ca823deb:;
			{
				jule::Ptr<_1e5ce3416_FnIns> _10998_method = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>((void*)__jule_anon_1ca84a6e7, jule::Ptr<__jule_anon_1ca84a6e7_ctx>::make(__jule_anon_1ca84a6e7_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ca84a6e7_ctx_handler), ._field_reloaded=false});;
				return _1e5d2e2dc_buildAsComptimeMethodData(&(_10998_method));;
			}
		}
		else {
			_case_begin_1ca820dd7:;
			{
				return nullptr;;
			}
		}
		_match_end_1ca823192:;
	};
}








inline jule::Bool _1e5d2170d_comptimeValue_eq(_1e5d2170d_comptimeValue *_self_, _1e5d2170d_comptimeValue _other_) {
	return 
		(_self_->_field_data == _other_._field_data);
}

inline jule::Str _1e5d21ab5_Str(_1e5d2170d_comptimeValue* _self_) {
	return jule::Str::lit("comptimeValue", 13);;
}



inline jule::Bool _1e5d21e06_Equal(jule::Ptr<_1e5d2170d_comptimeValue> _self_, jule::Ptr<_1e5e417ea_TypeKind> _111818_other) {
	return false;;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5d22467__Unwrap(jule::Ptr<_1e5d2170d_comptimeValue> _self_, jule::Ptr<_1e5e0a93a_eval>* _112229_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _112244_fc) {
	if (((*((*(_112244_fc))))._field_Args.len() > 0LL)) {
		_1e5e0aebd_pushErr((*(_112229_e)).ptr(), (*((*((*(_112244_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Unwrap", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return (*(_self_))._field_data;;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5d22863__Type(jule::Ptr<_1e5d2170d_comptimeValue> _self_, jule::Ptr<_1e5e0a93a_eval>* _113027_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _113042_fc) {
	if (((*((*(_113042_fc))))._field_Args.len() > 0LL)) {
		_1e5e0aebd_pushErr((*(_113027_e)).ptr(), (*((*((*(_113042_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return _1e5d2e870_buildComptimeTypeInfoData(&((*((*(_113027_e))))._field_s), &((*((*(_self_))._field_data))._field_Kind));;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5d22c5e__Lvalue(jule::Ptr<_1e5d2170d_comptimeValue> _self_, jule::Ptr<_1e5e0a93a_eval>* _113829_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _113844_fc) {
	if (((*((*(_113844_fc))))._field_Args.len() > 0LL)) {
		_1e5e0aebd_pushErr((*(_113829_e)).ptr(), (*((*((*(_113844_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Lvalue", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1e21a449b_Const> _11437_constant = static__1e21a4ea2_NewBool((*((*(_self_))._field_data))._field_Lvalue);;
	return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=_1e6026b88_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_11437_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_11437_constant});;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5d2315a__Mutable(jule::Ptr<_1e5d2170d_comptimeValue> _self_, jule::Ptr<_1e5e0a93a_eval>* _115130_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _115145_fc) {
	if (((*((*(_115145_fc))))._field_Args.len() > 0LL)) {
		_1e5e0aebd_pushErr((*(_115130_e)).ptr(), (*((*((*(_115145_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1e21a449b_Const> _11567_constant = static__1e21a4ea2_NewBool((*((*(_self_))._field_data))._field_Mutable);;
	return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=_1e6026b88_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_11567_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_11567_constant});;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5d23556__Const(jule::Ptr<_1e5d2170d_comptimeValue> _self_, jule::Ptr<_1e5e0a93a_eval>* _116428_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _116443_fc) {
	if (((*((*(_116443_fc))))._field_Args.len() > 0LL)) {
		_1e5e0aebd_pushErr((*(_116428_e)).ptr(), (*((*((*(_116443_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Const", 5), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1e21a449b_Const> _11697_constant = static__1e21a4ea2_NewBool(_1e5e0964d_IsConst((*(_self_))._field_data.ptr()));;
	return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=_1e6026b88_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_11697_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_11697_constant});;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5d23952__Field(jule::Ptr<_1e5d2170d_comptimeValue> _self_, jule::Ptr<_1e5e0a93a_eval>* _117728_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _117743_fc) {
	if (((*((*(_117743_fc))))._field_Args.len() > 1LL)) {
		_1e5e0aebd_pushErr((*(_117728_e)).ptr(), (*((*((*(_117743_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Field", 5), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1e5cc8c7b_StructIns> _11827_s = _1e5e45524_Struct((*((*(_self_))._field_data))._field_Kind.ptr());;
	if ((_11827_s == nullptr)) {
		_1e5e0aebd_pushErr((*(_117728_e)).ptr(), (*((*(_117743_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*((*(_self_))._field_data))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Field", 5), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1e5ca93bb_Expr> _11877_arg = (*((*(_117743_fc))))._field_Args[0LL];;
	jule::Ptr<_1e5e08c13_Data> _11887_d = _1e5e297a0_evalExpr((*(_117728_e)), _11877_arg);;
	if ((_11887_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1e5e0964d_IsConst(_11887_d.ptr())))) {
		_1e5e0aebd_pushErr((*(_117728_e)).ptr(), (*(_11877_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1e5e49913_Prim> _11963_prim = _1e5e43ea1_Prim((*(_11887_d))._field_Kind);;
	if (((_11963_prim == nullptr) || (!(_1e5e4cdcd_IsStr(_11963_prim.ptr()))))) {
		_1e5e0aebd_pushErr((*(_117728_e)).ptr(), (*_11877_arg.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type4); (*it++) = jule::Any(_1e5e41be6_Str((*(_11887_d))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Str _12013_ident = _1e21a6657_ReadStr((*(_11887_d))._field_Constant.ptr());;
	jule::Ptr<_1e5cc81cb_FieldIns> _12027_f = _1e5cca167_FindField(_11827_s.ptr(), _12013_ident);;
	if ((_12027_f == nullptr)) {
		_1e5e0aebd_pushErr((*(_117728_e)).ptr(), (*_11877_arg.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_11827_s))._field_Decl))._field_Ident, &__jule_any_type4); (*it++) = jule::Any(_12013_ident, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	_11887_d=jule::new_ptr<_1e5e08c13_Data>((*(*(_self_))._field_data.alloc));
	_11887_d=_1e5e2248a_evalStructSubIdentField((*(_117728_e)).ptr(), &(_11887_d), &(_11827_s), &((*_11877_arg.alloc)._field_Token), &(_12027_f));
	return _1e5d2ebb1_buildComptimeValue(&(_11887_d));;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5d23d4d__Method(jule::Ptr<_1e5d2170d_comptimeValue> _self_, jule::Ptr<_1e5e0a93a_eval>* _121229_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _121244_fc) {
	if (((*((*(_121244_fc))))._field_Args.len() > 1LL)) {
		_1e5e0aebd_pushErr((*(_121229_e)).ptr(), (*((*((*(_121244_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Method", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _12177_ref = false;;
	jule::Ptr<_1e5cc8c7b_StructIns> _12187_s = static_cast<jule::Ptr<_1e5cc8c7b_StructIns>>(nullptr);;
	if ((_1e5e44237_Sptr((*((*(_self_))._field_data))._field_Kind.ptr()) != nullptr)) {
		_12187_s=_1e5e45524_Struct((*(_1e5e44237_Sptr((*((*(_self_))._field_data))._field_Kind)))._field_Elem.ptr());
		_12177_ref=true;
	} else {
		_12187_s=_1e5e45524_Struct((*((*(_self_))._field_data))._field_Kind.ptr());
	};
	if ((_12187_s == nullptr)) {
		_1e5e0aebd_pushErr((*(_121229_e)).ptr(), (*((*(_121244_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*((*(_self_))._field_data))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Method", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1e5ca93bb_Expr> _12297_arg = (*((*(_121244_fc))))._field_Args[0LL];;
	jule::Ptr<_1e5e08c13_Data> _12307_d = _1e5e297a0_evalExpr((*(_121229_e)), _12297_arg);;
	if ((_12307_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1e5e0964d_IsConst(_12307_d.ptr())))) {
		_1e5e0aebd_pushErr((*(_121229_e)).ptr(), (*(_12297_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1e5e49913_Prim> _12383_prim = _1e5e43ea1_Prim((*(_12307_d))._field_Kind);;
	if (((_12383_prim == nullptr) || (!(_1e5e4cdcd_IsStr(_12383_prim.ptr()))))) {
		_1e5e0aebd_pushErr((*(_121229_e)).ptr(), (*_12297_arg.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type4); (*it++) = jule::Any(_1e5e41be6_Str((*(_12307_d))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Str _12433_ident = _1e21a6657_ReadStr((*(_12307_d))._field_Constant.ptr());;
	;
	jule::Ptr<_1e5ce0358_Fn> _12457_m = _1e5cc9d26_FindMethod(_12187_s.ptr(), _12433_ident, false);;
	if ((_12457_m == nullptr)) {
		_1e5e0aebd_pushErr((*(_121229_e)).ptr(), (*_12297_arg.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_12187_s))._field_Decl))._field_Ident, &__jule_any_type4); (*it++) = jule::Any(_12433_ident, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	_12307_d=jule::new_ptr<_1e5e08c13_Data>((*(*(_self_))._field_data.alloc));
	if (_12177_ref) {
		_1e5e3d2db_makeImplicitDeref(&(_12307_d), (*((*(_121244_fc))))._field_Token);
	};
	_12307_d=_1e5e22aa6_evalStructSubIdentMethod((*(_121229_e)).ptr(), &(_12307_d), &(_12187_s), &((*_12297_arg.alloc)._field_Token), &(_12457_m), _12177_ref);
	return _1e5d2ebb1_buildComptimeValue(&(_12307_d));;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5d2418e_subIdent(jule::Ptr<_1e5d2170d_comptimeValue> _self_, jule::Str* _125826_ident) {
	{
		auto &_match_expr{ (*(_125826_ident)) };
		
		if (_match_expr == jule::Str::lit("Unwrap", 6)) {
			_case_begin_1ca875513:;
			{
				jule::Ptr<_1e5ce3416_FnIns> _12618_method = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>((void*)__jule_anon_1ca8769cb, jule::Ptr<__jule_anon_1ca8769cb_ctx>::make(__jule_anon_1ca8769cb_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ca8769cb_ctx_handler), ._field_reloaded=false});;
				return _1e5d2e2dc_buildAsComptimeMethodData(&(_12618_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1ca875579:;
			{
				jule::Ptr<_1e5ce3416_FnIns> _12688_method = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>((void*)__jule_anon_1ca878956, jule::Ptr<__jule_anon_1ca878956_ctx>::make(__jule_anon_1ca878956_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ca878956_ctx_handler), ._field_reloaded=false});;
				return _1e5d2e2dc_buildAsComptimeMethodData(&(_12688_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Lvalue", 6)) {
			_case_begin_1ca8755e0:;
			{
				jule::Ptr<_1e5ce3416_FnIns> _12758_method = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>((void*)__jule_anon_1ca87a8d1, jule::Ptr<__jule_anon_1ca87a8d1_ctx>::make(__jule_anon_1ca87a8d1_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ca87a8d1_ctx_handler), ._field_reloaded=false});;
				return _1e5d2e2dc_buildAsComptimeMethodData(&(_12758_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1ca875667:;
			{
				jule::Ptr<_1e5ce3416_FnIns> _12828_method = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>((void*)__jule_anon_1ca87c85b, jule::Ptr<__jule_anon_1ca87c85b_ctx>::make(__jule_anon_1ca87c85b_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ca87c85b_ctx_handler), ._field_reloaded=false});;
				return _1e5d2e2dc_buildAsComptimeMethodData(&(_12828_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Const", 5)) {
			_case_begin_1ca875854:;
			{
				jule::Ptr<_1e5ce3416_FnIns> _12898_method = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>((void*)__jule_anon_1ca87e7d6, jule::Ptr<__jule_anon_1ca87e7d6_ctx>::make(__jule_anon_1ca87e7d6_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ca87e7d6_ctx_handler), ._field_reloaded=false});;
				return _1e5d2e2dc_buildAsComptimeMethodData(&(_12898_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Field", 5)) {
			_case_begin_1ca8758ba:;
			{
				jule::Ptr<_1e5ce3416_FnIns> _12968_method = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>((void*)__jule_anon_1ca881761, jule::Ptr<__jule_anon_1ca881761_ctx>::make(__jule_anon_1ca881761_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ca881761_ctx_handler), ._field_reloaded=false});;
				return _1e5d2e2dc_buildAsComptimeMethodData(&(_12968_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Method", 6)) {
			_case_begin_1ca875931:;
			{
				jule::Ptr<_1e5ce3416_FnIns> _13038_method = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>((void*)__jule_anon_1ca8836db, jule::Ptr<__jule_anon_1ca8836db_ctx>::make(__jule_anon_1ca8836db_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ca8836db_ctx_handler), ._field_reloaded=false});;
				return _1e5d2e2dc_buildAsComptimeMethodData(&(_13038_method));;
			}
		}
		else {
			_case_begin_1ca874ed5:;
			{
				return nullptr;;
			}
		}
		_match_end_1ca8753c0:;
	};
}







inline jule::Str _1e5d24821_Str(_1e5d24469_comptimeFiles* _self_) {
	return jule::Str::lit("comptimeFiles", 13);;
}



inline jule::Bool _1e5d24b62_Equal(jule::Ptr<_1e5d24469_comptimeFiles> _self_, jule::Ptr<_1e5e417ea_TypeKind> _132218_other) {
	return false;;
}



inline void _1e5d250e6_ready(_1e5d24469_comptimeFiles* _self_, jule::Ptr<_1e5da0bcc_Var>* _132626_keyA, jule::Ptr<_1e5da0bcc_Var>* _132643_keyB) {
	if (((*(_132626_keyA)) != nullptr)) {
		(*((*(_132626_keyA))))._field_Constant=true;
		(*((*(_132626_keyA))))._field_Value=jule::new_ptr<_1e5e09d8a_Value>(_1e5e09d8a_Value{._field_Expr=jule::Ptr<_1e5ca93bb_Expr>(nullptr), ._field_Data=jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)})});
		(*((*(_132626_keyA))))._field_Kind=(*(_1e6029916_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_Kind;
	};
	if (((*(_132643_keyB)) != nullptr)) {
		(*((*(_132643_keyB))))._field_Constant=true;
		(*((*(_132643_keyB))))._field_Value=jule::new_ptr<_1e5e09d8a_Value>(_1e5e09d8a_Value{._field_Expr=jule::Ptr<_1e5ca93bb_Expr>(nullptr), ._field_Data=jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)})});
		(*((*(_132643_keyB))))._field_Kind=jule::new_ptr<_1e5e4900b_TypeSymbol>(_1e5e4900b_TypeSymbol{._field_Decl=jule::Ptr<_1e5ca5087_TypeDecl>(nullptr), ._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1e5d25dd8_comptimeFile>(_1e5d25dd8_comptimeFile{._field_file=jule::Ptr<_1e5e03548_SymbolTable>(nullptr)}), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data18)})});
	};
}



inline void _1e5d25459_index(_1e5d24469_comptimeFiles* _self_, jule::Ptr<_1e5e08c13_Data>* _134726_d, jule::I64 _134736_i) {
	(*((*(_134726_d))))._field_Decl=false;
	(*((*(_134726_d))))._field_untyped=false;
	(*((*(_134726_d))))._field_Constant=nullptr;
	(*((*(_134726_d))))._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1e5d25dd8_comptimeFile>(_1e5d25dd8_comptimeFile{._field_file=(*(_self_))._field_files[_134736_i]}), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data18)});
}



inline void _1e5d25877_step(_1e5d24469_comptimeFiles* _self_, jule::I64 _135820_i, jule::Ptr<_1e5da0bcc_Var>* _135833_keyA, jule::Ptr<_1e5da0bcc_Var>* _135850_keyB) {
	if (((*(_135833_keyA)) != nullptr)) {
		(*((*((*((*(_135833_keyA))))._field_Value))._field_Data))._field_Constant=static__1e21a491e_NewI64(static_cast<jule::I64>(_135820_i));
		(*(*((*((*(_135833_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_135833_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type20);
	};
	if (((*(_135850_keyB)) != nullptr)) {
		(*((*((*((*((*(_135850_keyB))))._field_Kind))._field_Kind))._field_Kind.cast_ptr<_1e5d25dd8_comptimeFile>((jule::Trait::Type*)&_1e5e41344_Kind_mptr_data18)))._field_file=(*(_self_))._field_files[_135820_i];
	};
}



inline jule::I64 _1e5d25b0d_len(_1e5d24469_comptimeFiles* _self_) {
	return (*(_self_))._field_files.len();;
}








inline jule::Bool _1e5d25dd8_comptimeFile_eq(_1e5d25dd8_comptimeFile *_self_, _1e5d25dd8_comptimeFile _other_) {
	return 
		(_self_->_field_file == _other_._field_file);
}

inline jule::Str _1e5d26290_Str(_1e5d25dd8_comptimeFile* _self_) {
	return jule::Str::lit("comptimeFile", 12);;
}



inline jule::Bool _1e5d265d1_Equal(jule::Ptr<_1e5d25dd8_comptimeFile> _self_, jule::Ptr<_1e5e417ea_TypeKind> _138218_other) {
	return false;;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5d26aed__Path(jule::Ptr<_1e5d25dd8_comptimeFile> _self_, jule::Ptr<_1e5e0a93a_eval>* _138627_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _138642_fc) {
	if (((*((*(_138642_fc))))._field_Args.len() > 0LL)) {
		_1e5e0aebd_pushErr((*(_138627_e)).ptr(), (*((*((*(_138642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Path", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1e21a449b_Const> _13917_constant = static__1e21a526b_NewStr((*((*((*(_self_))._field_file))._field_File))._field_Path);;
	return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=_1e60268d0_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_13917_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_13917_constant});;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5d26ee9__Name(jule::Ptr<_1e5d25dd8_comptimeFile> _self_, jule::Ptr<_1e5e0a93a_eval>* _139927_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _139942_fc) {
	if (((*((*(_139942_fc))))._field_Args.len() > 0LL)) {
		_1e5e0aebd_pushErr((*(_139927_e)).ptr(), (*((*((*(_139942_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1e21a449b_Const> _14047_constant = static__1e21a526b_NewStr(_1e5c95cd1_Name((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=_1e60268d0_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_14047_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_14047_constant});;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5d273e5__Dir(jule::Ptr<_1e5d25dd8_comptimeFile> _self_, jule::Ptr<_1e5e0a93a_eval>* _141226_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _141241_fc) {
	if (((*((*(_141241_fc))))._field_Args.len() > 0LL)) {
		_1e5e0aebd_pushErr((*(_141226_e)).ptr(), (*((*((*(_141241_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Dir", 3), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1e21a449b_Const> _14177_constant = static__1e21a526b_NewStr(_1e5c95a4a_Dir((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=_1e60268d0_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_14177_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_14177_constant});;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5d27736_subIdent(jule::Ptr<_1e5d25dd8_comptimeFile> _self_, jule::Str* _142526_ident) {
	{
		auto &_match_expr{ (*(_142526_ident)) };
		
		if (_match_expr == jule::Str::lit("Path", 4)) {
			_case_begin_1ca8970d4:;
			{
				jule::Ptr<_1e5ce3416_FnIns> _14288_method = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>((void*)__jule_anon_1ca898404, jule::Ptr<__jule_anon_1ca898404_ctx>::make(__jule_anon_1ca898404_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ca898404_ctx_handler), ._field_reloaded=false});;
				return _1e5d2e2dc_buildAsComptimeMethodData(&(_14288_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1ca89717d:;
			{
				jule::Ptr<_1e5ce3416_FnIns> _14358_method = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>((void*)__jule_anon_1ca89a37e, jule::Ptr<__jule_anon_1ca89a37e_ctx>::make(__jule_anon_1ca89a37e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ca89a37e_ctx_handler), ._field_reloaded=false});;
				return _1e5d2e2dc_buildAsComptimeMethodData(&(_14358_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Dir", 3)) {
			_case_begin_1ca897205:;
			{
				jule::Ptr<_1e5ce3416_FnIns> _14428_method = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>((void*)__jule_anon_1ca89c309, jule::Ptr<__jule_anon_1ca89c309_ctx>::make(__jule_anon_1ca89c309_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ca89c309_ctx_handler), ._field_reloaded=false});;
				return _1e5d2e2dc_buildAsComptimeMethodData(&(_14428_method));;
			}
		}
		else {
			_case_begin_1ca896cc6:;
			{
				return nullptr;;
			}
		}
		_match_end_1ca896ee6:;
	};
}







inline jule::Str _1e5d280e9_Str(_1e5d27a11_comptimeDecls* _self_) {
	return jule::Str::lit("comptimeDecls", 13);;
}



inline jule::Bool _1e5d2843a_Equal(jule::Ptr<_1e5d27a11_comptimeDecls> _self_, jule::Ptr<_1e5e417ea_TypeKind> _146118_other) {
	return false;;
}



inline void _1e5d287ae_ready(_1e5d27a11_comptimeDecls* _self_, jule::Ptr<_1e5da0bcc_Var>* _146526_keyA, jule::Ptr<_1e5da0bcc_Var>* _146543_keyB) {
	if (((*(_146526_keyA)) != nullptr)) {
		(*((*(_146526_keyA))))._field_Constant=true;
		(*((*(_146526_keyA))))._field_Value=jule::new_ptr<_1e5e09d8a_Value>(_1e5e09d8a_Value{._field_Expr=jule::Ptr<_1e5ca93bb_Expr>(nullptr), ._field_Data=jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)})});
		(*((*(_146526_keyA))))._field_Kind=(*(_1e6029916_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_Kind;
	};
	if (((*(_146543_keyB)) != nullptr)) {
		(*((*(_146543_keyB))))._field_Constant=true;
		(*((*(_146543_keyB))))._field_Value=jule::new_ptr<_1e5e09d8a_Value>(_1e5e09d8a_Value{._field_Expr=jule::Ptr<_1e5ca93bb_Expr>(nullptr), ._field_Data=jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)})});
		(*((*(_146543_keyB))))._field_Kind=jule::new_ptr<_1e5e4900b_TypeSymbol>(_1e5e4900b_TypeSymbol{._field_Decl=jule::Ptr<_1e5ca5087_TypeDecl>(nullptr), ._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1e5d29cee_comptimeDecl>(_1e5d29cee_comptimeDecl{._field_decl=jule::Any(nullptr)}), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data20)})});
	};
}



inline void _1e5d28b22_index(_1e5d27a11_comptimeDecls* _self_, jule::Ptr<_1e5e08c13_Data>* _148626_d, jule::I64 _148636_i) {
	(*((*(_148626_d))))._field_Decl=false;
	(*((*(_148626_d))))._field_untyped=false;
	(*((*(_148626_d))))._field_Constant=nullptr;
	(*((*(_148626_d))))._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_self_))._field_decls[_148636_i], (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data20)});
}



inline void _1e5d29040_step(_1e5d27a11_comptimeDecls* _self_, jule::I64 _149520_i, jule::Ptr<_1e5da0bcc_Var>* _149533_keyA, jule::Ptr<_1e5da0bcc_Var>* _149550_keyB) {
	if (((*(_149533_keyA)) != nullptr)) {
		(*((*((*((*(_149533_keyA))))._field_Value))._field_Data))._field_Constant=static__1e21a491e_NewI64(static_cast<jule::I64>(_149520_i));
		(*(*((*((*(_149533_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_149533_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type20);
	};
	if (((*(_149550_keyB)) != nullptr)) {
		(*((*((*((*((*(_149550_keyB))))._field_Kind))._field_Kind))._field_Kind.cast_ptr<_1e5d29cee_comptimeDecl>((jule::Trait::Type*)&_1e5e41344_Kind_mptr_data20)))._field_decl=(*((*(_self_))._field_decls[_149520_i]))._field_decl;
	};
}



inline jule::I64 _1e5d292c6_len(_1e5d27a11_comptimeDecls* _self_) {
	return (*(_self_))._field_decls.len();;
}








inline jule::Bool _1e5d29cee_comptimeDecl_eq(_1e5d29cee_comptimeDecl *_self_, _1e5d29cee_comptimeDecl _other_) {
	return 
		(_self_->_field_decl == _other_._field_decl);
}

inline jule::Str _1e5d2a1a6_Str(_1e5d29cee_comptimeDecl* _self_) {
	return jule::Str::lit("comptimeDecl", 12);;
}



inline jule::Bool _1e5d2a4e7_Equal(jule::Ptr<_1e5d29cee_comptimeDecl> _self_, jule::Ptr<_1e5e417ea_TypeKind> _153418_other) {
	return false;;
}



inline jule::Str _1e5d2a948_declAsStr(_1e5d29cee_comptimeDecl* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ca8a7402:;
			{
				return jule::Str::lit("<struct>", 8);;
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1ca8a6da2:;
			{
				return jule::Str::lit("<fn>", 4);;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1ca8a72ae:;
			{
				return jule::Str::lit("<enum>", 6);;
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1ca8a7336:;
			{
				return jule::Str::lit("<type enum>", 11);;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1ca8a75ab:;
			{
				return jule::Str::lit("<trait>", 7);;
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ca8a7633:;
			{
				return jule::Str::lit("<field>", 7);;
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1ca8a78a8:;
			{
				return jule::Str::lit("<type alias>", 12);;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ca8a791e:;
			{
				return jule::Str::lit("<var>", 5);;
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1ca8a7985:;
			{
				return jule::Str::lit("<enum item>", 11);;
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1ca8a79eb:;
			{
				return jule::Str::lit("<param>", 7);;
			}
		}
		else {
			_case_begin_1ca8a7248:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Name: unimplemented declaration kind", 55) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1561:4"));;
			}
		}
		_match_end_1ca8a6ed4:;
	};
}



inline jule::Ptr<_1e5e08c13_Data> _1e5d2ad44__Name(jule::Ptr<_1e5d29cee_comptimeDecl> _self_, jule::Ptr<_1e5e0a93a_eval>* _156527_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _156542_fc) {
	if (((*((*(_156542_fc))))._field_Args.len() > 0LL)) {
		_1e5e0aebd_pushErr((*(_156527_e)).ptr(), (*((*((*(_156542_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Str _15707_name = jule::Str();;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ca8aea25:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1e5cc5e21_Struct>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1ca8aedcc:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1e5ce0358_Fn>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1ca8aee43:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1e5d065c2_Enum>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1ca8aeeba:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1e5d07ccc_TypeEnum>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1ca8b0042:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1e5d03db6_Trait>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ca8b00b9:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1e5cc2eea_Field>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1ca8b0471:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1e5e40a08_TypeAlias>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ca8b04d7:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1e5da0bcc_Var>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1ca8b054d:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1e5d05a55_EnumItem>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1ca8b05b4:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1e5cdd884_Param>()))._field_Ident;
			}
		}
		else {
			_case_begin_1ca8aed66:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Name: unimplemented declaration kind", 55) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1593:4"));;
			}
		}
		_match_end_1ca8aed00:;
	};
	jule::Ptr<_1e21a449b_Const> _15957_constant = static__1e21a526b_NewStr(_15707_name);;
	return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=_1e60268d0_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_15957_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_15957_constant});;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5d2b240__Public(jule::Ptr<_1e5d29cee_comptimeDecl> _self_, jule::Ptr<_1e5e0a93a_eval>* _160329_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _160344_fc) {
	if (((*((*(_160344_fc))))._field_Args.len() > 0LL)) {
		_1e5e0aebd_pushErr((*(_160329_e)).ptr(), (*((*((*(_160344_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _16087_public = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type21 || _match_expr.type == &__jule_any_type22) {
			_case_begin_1ca8b8e08:;
			{
				_1e5e0aebd_pushErr((*(_160329_e)).ptr(), (*((*(_160344_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5d2a948_declAsStr(_self_.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ca8b929e:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1e5cc5e21_Struct>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1ca8b9315:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1e5ce0358_Fn>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1ca8b937b:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1e5d065c2_Enum>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1ca8b9403:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1e5d07ccc_TypeEnum>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1ca8b947a:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1e5d03db6_Trait>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ca8b9502:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1e5cc2eea_Field>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1ca8b9854:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1e5e40a08_TypeAlias>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ca8b98cb:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1e5da0bcc_Var>()))._field_Public;
			}
		}
		else {
			_case_begin_1ca8b9238:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Public: unimplemented declaration kind", 57) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1631:4"));;
			}
		}
		_match_end_1ca8b91c2:;
	};
	jule::Ptr<_1e21a449b_Const> _16337_constant = static__1e21a4ea2_NewBool(_16087_public);;
	return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=_1e6026b88_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_16337_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_16337_constant});;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5d2b63b__Binded(jule::Ptr<_1e5d29cee_comptimeDecl> _self_, jule::Ptr<_1e5e0a93a_eval>* _164129_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _164144_fc) {
	if (((*((*(_164144_fc))))._field_Args.len() > 0LL)) {
		_1e5e0aebd_pushErr((*(_164129_e)).ptr(), (*((*((*(_164144_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _16467_binded = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type24 || _match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type19 || _match_expr.type == &__jule_any_type21 || _match_expr.type == &__jule_any_type22) {
			_case_begin_1ca8c38d5:;
			{
				_1e5e0aebd_pushErr((*(_164129_e)).ptr(), (*((*(_164144_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5d2a948_declAsStr(_self_.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ca8c35b6:;
			{
				_16467_binded=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1e5cc5e21_Struct>()))._field_Binded;
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1ca8c362c:;
			{
				_16467_binded=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1e5ce0358_Fn>()))._field_Binded;
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1ca8c3693:;
			{
				_16467_binded=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1e5e40a08_TypeAlias>()))._field_Binded;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ca8c3709:;
			{
				_16467_binded=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1e5da0bcc_Var>()))._field_Binded;
			}
		}
		else {
			_case_begin_1ca8c3550:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Binded: unimplemented declaration kind", 57) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1665:4"));;
			}
		}
		_match_end_1ca8c34d9:;
	};
	jule::Ptr<_1e21a449b_Const> _16677_constant = static__1e21a4ea2_NewBool(_16467_binded);;
	return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=_1e6026b88_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_16677_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_16677_constant});;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5d2ba37__Exceptional(jule::Ptr<_1e5d29cee_comptimeDecl> _self_, jule::Ptr<_1e5e0a93a_eval>* _167534_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _167549_fc) {
	if (((*((*(_167549_fc))))._field_Args.len() > 0LL)) {
		_1e5e0aebd_pushErr((*(_167534_e)).ptr(), (*((*((*(_167549_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1ca8c8da2:;
			{
				goto _match_end_1ca8ca238;
			}
		}
		else {
			_case_begin_1ca8ca29e:;
			{
				_1e5e0aebd_pushErr((*(_167534_e)).ptr(), (*((*(_167549_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5d2a948_declAsStr(_self_.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1ca8ca238:;
	};
	jule::Ptr<_1e5ce0358_Fn> _16877_f = (*(_self_))._field_decl.cast_ptr<_1e5ce0358_Fn>(&__jule_any_type26);;
	jule::Ptr<_1e21a449b_Const> _16887_constant = static__1e21a4ea2_NewBool((*(_16877_f))._field_Exceptional);;
	return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=_1e6026b88_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_16887_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_16887_constant});;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5d2be33__Mutable(jule::Ptr<_1e5d29cee_comptimeDecl> _self_, jule::Ptr<_1e5e0a93a_eval>* _169630_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _169645_fc) {
	if (((*((*(_169645_fc))))._field_Args.len() > 0LL)) {
		_1e5e0aebd_pushErr((*(_169630_e)).ptr(), (*((*((*(_169645_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _17017_mutable = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type23 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type24 || _match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type21) {
			_case_begin_1ca8d0293:;
			{
				_1e5e0aebd_pushErr((*(_169630_e)).ptr(), (*((*(_169645_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5d2a948_declAsStr(_self_.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1ca8cee74:;
			{
				_17017_mutable=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1e5cdd884_Param>()))._field_Mutable;
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ca8ceeda:;
			{
				_17017_mutable=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1e5cc2eea_Field>()))._field_Mutable;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ca8d0051:;
			{
				_17017_mutable=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1e5da0bcc_Var>()))._field_Mutable;
			}
		}
		else {
			_case_begin_1ca8cee0d:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Mutable: unimplemented declaration kind", 58) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1719:4"));;
			}
		}
		_match_end_1ca8ced97:;
	};
	jule::Ptr<_1e21a449b_Const> _17217_constant = static__1e21a4ea2_NewBool(_17017_mutable);;
	return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=_1e6026b88_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_17217_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_17217_constant});;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5d2c32e__Variadic(jule::Ptr<_1e5d29cee_comptimeDecl> _self_, jule::Ptr<_1e5e0a93a_eval>* _172931_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _172946_fc) {
	if (((*((*(_172946_fc))))._field_Args.len() > 0LL)) {
		_1e5e0aebd_pushErr((*(_172931_e)).ptr(), (*((*((*(_172946_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Variadic", 8), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _17347_variadic = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type23 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type24 || _match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type21 || _match_expr.type == &__jule_any_type19 || _match_expr.type == &__jule_any_type8) {
			_case_begin_1ca8d6ad5:;
			{
				_1e5e0aebd_pushErr((*(_172931_e)).ptr(), (*((*(_172946_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5d2a948_declAsStr(_self_.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Variadic", 8), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1ca8d67b6:;
			{
				_17347_variadic=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1e5cdd884_Param>()))._field_Variadic;
			}
		}
		else {
			_case_begin_1ca8d6750:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Variadic: unimplemented declaration kind", 59) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1750:4"));;
			}
		}
		_match_end_1ca8d66d9:;
	};
	jule::Ptr<_1e21a449b_Const> _17527_constant = static__1e21a4ea2_NewBool(_17347_variadic);;
	return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=_1e6026b88_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_17527_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_17527_constant});;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5d2c72a__Reference(jule::Ptr<_1e5d29cee_comptimeDecl> _self_, jule::Ptr<_1e5e0a93a_eval>* _176032_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _176047_fc) {
	if (((*((*(_176047_fc))))._field_Args.len() > 0LL)) {
		_1e5e0aebd_pushErr((*(_176032_e)).ptr(), (*((*((*(_176047_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Reference", 9), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _17657_ref = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type23 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type24 || _match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type21 || _match_expr.type == &__jule_any_type19) {
			_case_begin_1ca8dc338:;
			{
				_1e5e0aebd_pushErr((*(_176032_e)).ptr(), (*((*(_176047_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5d2a948_declAsStr(_self_.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Reference", 9), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ca8dc019:;
			{
				_17657_ref=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1e5da0bcc_Var>()))._field_Reference;
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1ca8dc080:;
			{
				_17657_ref=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1e5cdd884_Param>()))._field_Reference;
			}
		}
		else {
			_case_begin_1ca8dbea3:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Reference: unimplemented declaration kind", 60) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1782:4"));;
			}
		}
		_match_end_1ca8dbe3c:;
	};
	jule::Ptr<_1e21a449b_Const> _17847_constant = static__1e21a4ea2_NewBool(_17657_ref);;
	return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=_1e6026b88_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_17847_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_17847_constant});;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5d2cb26__Params(jule::Ptr<_1e5d29cee_comptimeDecl> _self_, jule::Ptr<_1e5e0a93a_eval>* _179229_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _179244_fc) {
	if (((*((*(_179244_fc))))._field_Args.len() > 0LL)) {
		_1e5e0aebd_pushErr((*(_179229_e)).ptr(), (*((*((*(_179244_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type23 || _match_expr.type == &__jule_any_type24 || _match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type21 || _match_expr.type == &__jule_any_type19 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type22) {
			_case_begin_1ca8e1716:;
			{
				_1e5e0aebd_pushErr((*(_179229_e)).ptr(), (*((*(_179244_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5d2a948_declAsStr(_self_.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1ca8e300e:;
			{
				jule::Ptr<_1e5ce0358_Fn> _18108_f = (*(_self_))._field_decl.unsafe_cast_ptr<_1e5ce0358_Fn>();;
				jule::Slice<jule::Ptr<_1e5d29cee_comptimeDecl>> _18118_params = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5d29cee_comptimeDecl>>::alloc((*(_18108_f))._field_Params.len(), (*(_18108_f))._field_Params.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1e5d29cee_comptimeDecl>(nullptr); __jule_collection; });;
				{
					auto expr = &((*_18108_f.alloc)._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ca8e6540:;
					if (it != expr_end) {
						jule::I64 _18129_i = it - expr->begin();
						jule::Ptr<_1e5cdd884_Param> _181216_param = *it;
						{
							_18118_params[_18129_i]=jule::new_ptr<_1e5d29cee_comptimeDecl>(_1e5d29cee_comptimeDecl{._field_decl=jule::Any(_181216_param, &__jule_any_type22)});
						}
						_iter_next_1ca8e6540:;
						++it;
						_18129_i++;
						goto _iter_begin_1ca8e6540;
					}
					_iter_end_1ca8e6540:;
				};
				return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1e5d27a11_comptimeDecls>(_1e5d27a11_comptimeDecls{._field_decls=_18118_params}), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data19)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1ca8e2b13:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Params: unimplemented declaration kind", 57) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1823:4"));;
			}
		}
		_match_end_1ca8e2a9c:;
	};
}



inline jule::Ptr<_1e5e08c13_Data> _1e5d2d022__Fields(jule::Ptr<_1e5d29cee_comptimeDecl> _self_, jule::Ptr<_1e5e0a93a_eval>* _182729_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _182744_fc) {
	if (((*((*(_182744_fc))))._field_Args.len() > 0LL)) {
		_1e5e0aebd_pushErr((*(_182729_e)).ptr(), (*((*((*(_182744_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1e5d29cee_comptimeDecl>> _18327_fields = static_cast<jule::Slice<jule::Ptr<_1e5d29cee_comptimeDecl>>>(nullptr);;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type21 || _match_expr.type == &__jule_any_type19 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type22 || _match_expr.type == &__jule_any_type26) {
			_case_begin_1ca8ea05a:;
			{
				_1e5e0aebd_pushErr((*(_182729_e)).ptr(), (*((*(_182744_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5d2a948_declAsStr(_self_.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1ca8e9c3b:;
			{
				jule::Ptr<_1e5d065c2_Enum> _18458_enm = (*(_self_))._field_decl.unsafe_cast_ptr<_1e5d065c2_Enum>();;
				_18327_fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5d29cee_comptimeDecl>>::alloc((*(_18458_enm))._field_Items.len(), (*(_18458_enm))._field_Items.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1e5d29cee_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_18458_enm.alloc)._field_Items);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ca8ed25b:;
					if (it != expr_end) {
						jule::I64 _18479_i = it - expr->begin();
						jule::Ptr<_1e5d05a55_EnumItem> _184716_item = *it;
						{
							_18327_fields[_18479_i]=jule::new_ptr<_1e5d29cee_comptimeDecl>(_1e5d29cee_comptimeDecl{._field_decl=jule::Any(_184716_item, &__jule_any_type21)});
						}
						_iter_next_1ca8ed25b:;
						++it;
						_18479_i++;
						goto _iter_begin_1ca8ed25b;
					}
					_iter_end_1ca8ed25b:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ca8e9ca2:;
			{
				jule::Ptr<_1e5cc5e21_Struct> _18518_s = (*(_self_))._field_decl.unsafe_cast_ptr<_1e5cc5e21_Struct>();;
				_18327_fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5d29cee_comptimeDecl>>::alloc((*(_18518_s))._field_Fields.len(), (*(_18518_s))._field_Fields.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1e5d29cee_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_18518_s.alloc)._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ca900170:;
					if (it != expr_end) {
						jule::I64 _18539_i = it - expr->begin();
						jule::Ptr<_1e5cc2eea_Field> _185316_field = *it;
						{
							_18327_fields[_18539_i]=jule::new_ptr<_1e5d29cee_comptimeDecl>(_1e5d29cee_comptimeDecl{._field_decl=jule::Any(_185316_field, &__jule_any_type19)});
						}
						_iter_next_1ca900170:;
						++it;
						_18539_i++;
						goto _iter_begin_1ca900170;
					}
					_iter_end_1ca900170:;
				};
			}
		}
		else {
			_case_begin_1ca8e9bc5:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Fields: unimplemented declaration kind", 57) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1857:4"));;
			}
		}
		_match_end_1ca8e9b5e:;
	};
	return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1e5d27a11_comptimeDecls>(_1e5d27a11_comptimeDecls{._field_decls=_18327_fields}), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data19)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)});;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5d2d41d__Statics(jule::Ptr<_1e5d29cee_comptimeDecl> _self_, jule::Ptr<_1e5e0a93a_eval>* _186830_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _186845_fc) {
	if (((*((*(_186845_fc))))._field_Args.len() > 0LL)) {
		_1e5e0aebd_pushErr((*(_186830_e)).ptr(), (*((*((*(_186845_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1e5d29cee_comptimeDecl>> _18737_fields = static_cast<jule::Slice<jule::Ptr<_1e5d29cee_comptimeDecl>>>(nullptr);;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type21 || _match_expr.type == &__jule_any_type19 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type22 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type24) {
			_case_begin_1ca903c01:;
			{
				_1e5e0aebd_pushErr((*(_186830_e)).ptr(), (*((*(_186845_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5d2a948_declAsStr(_self_.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ca9038d2:;
			{
				jule::Ptr<_1e5cc5e21_Struct> _18878_s = (*(_self_))._field_decl.unsafe_cast_ptr<_1e5cc5e21_Struct>();;
				_18737_fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5d29cee_comptimeDecl>>::alloc((*(_18878_s))._field_Statics.len(), (*(_18878_s))._field_Statics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1e5d29cee_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_18878_s.alloc)._field_Statics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ca906ee0:;
					if (it != expr_end) {
						jule::I64 _18899_i = it - expr->begin();
						jule::Ptr<_1e5da0bcc_Var> _188916_field = *it;
						{
							_18737_fields[_18899_i]=jule::new_ptr<_1e5d29cee_comptimeDecl>(_1e5d29cee_comptimeDecl{._field_decl=jule::Any(_188916_field, &__jule_any_type8)});
						}
						_iter_next_1ca906ee0:;
						++it;
						_18899_i++;
						goto _iter_begin_1ca906ee0;
					}
					_iter_end_1ca906ee0:;
				};
			}
		}
		else {
			_case_begin_1ca90386b:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Statics: unimplemented declaration kind", 58) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1893:4"));;
			}
		}
		_match_end_1ca903805:;
	};
	return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1e5d27a11_comptimeDecls>(_1e5d27a11_comptimeDecls{._field_decls=_18737_fields}), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data19)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)});;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5d2d819__Methods(jule::Ptr<_1e5d29cee_comptimeDecl> _self_, jule::Ptr<_1e5e0a93a_eval>* _190430_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _190445_fc) {
	if (((*((*(_190445_fc))))._field_Args.len() > 0LL)) {
		_1e5e0aebd_pushErr((*(_190430_e)).ptr(), (*((*((*(_190445_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Methods", 7), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1e5d29cee_comptimeDecl>> _19097_methods = static_cast<jule::Slice<jule::Ptr<_1e5d29cee_comptimeDecl>>>(nullptr);;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type21 || _match_expr.type == &__jule_any_type19 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type22 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type24) {
			_case_begin_1ca90aa71:;
			{
				_1e5e0aebd_pushErr((*(_190430_e)).ptr(), (*((*(_190445_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5d2a948_declAsStr(_self_.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Methods", 7), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1ca90a752:;
			{
				jule::Ptr<_1e5d03db6_Trait> _19228_t = (*(_self_))._field_decl.unsafe_cast_ptr<_1e5d03db6_Trait>();;
				_19097_methods=({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5d29cee_comptimeDecl>>::alloc((*(_19228_t))._field_Methods.len(), (*(_19228_t))._field_Methods.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1e5d29cee_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_19228_t.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ca90dc72:;
					if (it != expr_end) {
						jule::I64 _19249_i = it - expr->begin();
						jule::Ptr<_1e5ce0358_Fn> _192416_method = *it;
						{
							_19097_methods[_19249_i]=jule::new_ptr<_1e5d29cee_comptimeDecl>(_1e5d29cee_comptimeDecl{._field_decl=jule::Any(_192416_method, &__jule_any_type26)});
						}
						_iter_next_1ca90dc72:;
						++it;
						_19249_i++;
						goto _iter_begin_1ca90dc72;
					}
					_iter_end_1ca90dc72:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ca90a7b8:;
			{
				jule::Ptr<_1e5cc5e21_Struct> _19288_s = (*(_self_))._field_decl.unsafe_cast_ptr<_1e5cc5e21_Struct>();;
				_19097_methods=({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5d29cee_comptimeDecl>>::alloc((*(_19288_s))._field_Methods.len(), (*(_19288_s))._field_Methods.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1e5d29cee_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_19288_s.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ca910b86:;
					if (it != expr_end) {
						jule::I64 _19309_i = it - expr->begin();
						jule::Ptr<_1e5ce0358_Fn> _193016_method = *it;
						{
							_19097_methods[_19309_i]=jule::new_ptr<_1e5d29cee_comptimeDecl>(_1e5d29cee_comptimeDecl{._field_decl=jule::Any(_193016_method, &__jule_any_type26)});
						}
						_iter_next_1ca910b86:;
						++it;
						_19309_i++;
						goto _iter_begin_1ca910b86;
					}
					_iter_end_1ca910b86:;
				};
			}
		}
		else {
			_case_begin_1ca90a6db:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Methods: unimplemented declaration kind", 58) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1934:4"));;
			}
		}
		_match_end_1ca90a675:;
	};
	return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1e5d27a11_comptimeDecls>(_1e5d27a11_comptimeDecls{._field_decls=_19097_methods}), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data19)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)});;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5d2db5a_subIdent(jule::Ptr<_1e5d29cee_comptimeDecl> _self_, jule::Str* _194526_ident) {
	{
		auto &_match_expr{ (*(_194526_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1ca91244b:;
			{
				jule::Ptr<_1e5ce3416_FnIns> _19488_method = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>((void*)__jule_anon_1ca913b34, jule::Ptr<__jule_anon_1ca913b34_ctx>::make(__jule_anon_1ca913b34_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ca913b34_ctx_handler), ._field_reloaded=false});;
				return _1e5d2e2dc_buildAsComptimeMethodData(&(_19488_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1ca9124b2:;
			{
				jule::Ptr<_1e5ce3416_FnIns> _19558_method = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>((void*)__jule_anon_1ca915aae, jule::Ptr<__jule_anon_1ca915aae_ctx>::make(__jule_anon_1ca915aae_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ca915aae_ctx_handler), ._field_reloaded=false});;
				return _1e5d2e2dc_buildAsComptimeMethodData(&(_19558_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Binded", 6)) {
			_case_begin_1ca912539:;
			{
				jule::Ptr<_1e5ce3416_FnIns> _19628_method = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>((void*)__jule_anon_1ca917a39, jule::Ptr<__jule_anon_1ca917a39_ctx>::make(__jule_anon_1ca917a39_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ca917a39_ctx_handler), ._field_reloaded=false});;
				return _1e5d2e2dc_buildAsComptimeMethodData(&(_19628_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Exceptional", 11)) {
			_case_begin_1ca9125b1:;
			{
				jule::Ptr<_1e5ce3416_FnIns> _19698_method = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>((void*)__jule_anon_1ca9199b4, jule::Ptr<__jule_anon_1ca9199b4_ctx>::make(__jule_anon_1ca9199b4_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ca9199b4_ctx_handler), ._field_reloaded=false});;
				return _1e5d2e2dc_buildAsComptimeMethodData(&(_19698_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1ca91276a:;
			{
				jule::Ptr<_1e5ce3416_FnIns> _19768_method = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>((void*)__jule_anon_1ca91b93e, jule::Ptr<__jule_anon_1ca91b93e_ctx>::make(__jule_anon_1ca91b93e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ca91b93e_ctx_handler), ._field_reloaded=false});;
				return _1e5d2e2dc_buildAsComptimeMethodData(&(_19768_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Variadic", 8)) {
			_case_begin_1ca9127d1:;
			{
				jule::Ptr<_1e5ce3416_FnIns> _19838_method = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>((void*)__jule_anon_1ca91d8b9, jule::Ptr<__jule_anon_1ca91d8b9_ctx>::make(__jule_anon_1ca91d8b9_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ca91d8b9_ctx_handler), ._field_reloaded=false});;
				return _1e5d2e2dc_buildAsComptimeMethodData(&(_19838_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Reference", 9)) {
			_case_begin_1ca912858:;
			{
				jule::Ptr<_1e5ce3416_FnIns> _19908_method = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>((void*)__jule_anon_1ca920844, jule::Ptr<__jule_anon_1ca920844_ctx>::make(__jule_anon_1ca920844_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ca920844_ctx_handler), ._field_reloaded=false});;
				return _1e5d2e2dc_buildAsComptimeMethodData(&(_19908_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Params", 6)) {
			_case_begin_1ca9128d0:;
			{
				jule::Ptr<_1e5ce3416_FnIns> _19978_method = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>((void*)__jule_anon_1ca9227be, jule::Ptr<__jule_anon_1ca9227be_ctx>::make(__jule_anon_1ca9227be_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ca9227be_ctx_handler), ._field_reloaded=false});;
				return _1e5d2e2dc_buildAsComptimeMethodData(&(_19978_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Fields", 6)) {
			_case_begin_1ca912a01:;
			{
				jule::Ptr<_1e5ce3416_FnIns> _20048_method = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>((void*)__jule_anon_1ca92488c, jule::Ptr<__jule_anon_1ca92488c_ctx>::make(__jule_anon_1ca92488c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ca92488c_ctx_handler), ._field_reloaded=false});;
				return _1e5d2e2dc_buildAsComptimeMethodData(&(_20048_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Statics", 7)) {
			_case_begin_1ca912a67:;
			{
				jule::Ptr<_1e5ce3416_FnIns> _20118_method = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>((void*)__jule_anon_1ca926817, jule::Ptr<__jule_anon_1ca926817_ctx>::make(__jule_anon_1ca926817_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ca926817_ctx_handler), ._field_reloaded=false});;
				return _1e5d2e2dc_buildAsComptimeMethodData(&(_20118_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Methods", 7)) {
			_case_begin_1ca912acd:;
			{
				jule::Ptr<_1e5ce3416_FnIns> _20188_method = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>((void*)__jule_anon_1ca928792, jule::Ptr<__jule_anon_1ca928792_ctx>::make(__jule_anon_1ca928792_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ca928792_ctx_handler), ._field_reloaded=false});;
				return _1e5d2e2dc_buildAsComptimeMethodData(&(_20188_method));;
			}
		}
		else {
			_case_begin_1ca90cbe9:;
			{
				return nullptr;;
			}
		}
		_match_end_1ca912209:;
	};
}







inline jule::Fn<jule::Bool,jule::Ptr<_1e5d7b768_sema>*,jule::Slice<jule::Ptr<_1e5e40a08_TypeAlias>>*> _1e5d31cd4_readyFn(jule::Ptr<_1e5d318a5_constraintChecker> _self_) {
	return jule::__new_closure<jule::Bool,jule::Ptr<_1e5d7b768_sema>*,jule::Slice<jule::Ptr<_1e5e40a08_TypeAlias>>*>((void*)__jule_anon_1ca934a67, jule::Ptr<__jule_anon_1ca934a67_ctx>::make(__jule_anon_1ca934a67_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ca934a67_ctx_handler);;
}



inline jule::Bool _1e5d3206a_readyFi(jule::Ptr<_1e5d318a5_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*_self_.alloc)._field_fi))._field_Decl))._field_Generics;
	(*_self_.alloc)._field_generics=(*(*(_self_))._field_fi.alloc)._field_Generics;
	return ((!((*_self_.alloc)._field_uniq)) || _1e5d8a964_fnEnvironment((*_self_.alloc)._field_s, &((*_self_.alloc)._field_fi), _1e5d31cd4_readyFn(_self_)));;
}



inline jule::Bool _1e5d32301_readySi(jule::Ptr<_1e5d318a5_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*_self_.alloc)._field_si))._field_Decl))._field_Generics;
	(*_self_.alloc)._field_generics=(*(*(_self_))._field_si.alloc)._field_Generics;
	return ((!((*_self_.alloc)._field_uniq)) || _1e5d31cd4_readyFn(_self_)(&((*_self_.alloc)._field_s), &((*_self_.alloc)._field_genericsA)));;
}



inline jule::Bool _1e5d32587_ready(jule::Ptr<_1e5d318a5_constraintChecker> _self_) {
	if (((*(_self_))._field_fi != nullptr)) {
		return _1e5d3206a_readyFi(_self_);;
	};
	return _1e5d32301_readySi(_self_);;
}



inline jule::Bool _1e5d3281d_check(jule::Ptr<_1e5d318a5_constraintChecker> _self_) {
	if ((!(_1e5d32587_ready(_self_)))) {
		return false;;
	};
	_julec_label_1ca94566b:;
	{
		auto expr = &((*_self_.alloc)._field_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca945b22:;
		if (it != expr_end) {
			jule::I64 _1208_i = it - expr->begin();
			jule::Ptr<_1e5e3ee14_InsGeneric> _12015_g = *it;
			{
				if (((*(_12015_g))._field_Constraint == nullptr)) {
					goto _iter_next_1ca945b22;
				};
				{
					auto expr = &((*_12015_g.alloc)._field_Constraint);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ca946d32:;
					if (it != expr_end) {
						jule::Ptr<_1e5e417ea_TypeKind> _12416_c2 = *it;
						{
							jule::Ptr<_1e5e49913_Prim> _1259_prim = _1e5e43ea1_Prim(_12416_c2.ptr());;
							if (((_1259_prim != nullptr) && _1e5e4a56d_IsConstraint(_1259_prim))) {
								if (_1e5d3306b_matchConstraint(&((*_1259_prim.alloc)._field_Kind), &((*_12015_g.alloc)._field_Kind))) {
									goto _iter_next_1ca945b22;
								};
								goto _iter_next_1ca946d32;
							};
							if (_1e5e42037_Equal(_12416_c2, (*_12015_g.alloc)._field_Kind)) {
								goto _iter_next_1ca945b22;
							};
						}
						_iter_next_1ca946d32:;
						++it;
						goto _iter_begin_1ca946d32;
					}
					_iter_end_1ca946d32:;
				};
				_1e5d7e66c_pushErr((*_self_.alloc)._field_s.ptr(), (*_self_.alloc)._field_et, static_cast<jule::Str>(jule::Str::lit("type @ is not matched with @'s constraint\n       constraint: @", 62)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(3, 3); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*_12015_g.alloc)._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any((*((*_self_.alloc)._field_genericsD[_1208_i]))._field_Ident, &__jule_any_type4); (*it++) = jule::Any(_1e5d32ba3_toStrConstraints(_12015_g), &__jule_any_type4); __jule_collection; }));
				return false;;
			}
			_iter_next_1ca945b22:;
			++it;
			_1208_i++;
			goto _iter_begin_1ca945b22;
		}
		_iter_end_1ca945b22:;
	};
	return true;;
}







inline jule::Bool _1e5d34105_IsTraitImpl(_1e5d33c09_Impl* _self_) {
	return ((*(_self_))._field_Base != nullptr);;
}



inline jule::Bool _1e5d3438b_IsStructImpl(_1e5d33c09_Impl* _self_) {
	return ((*(_self_))._field_Base == nullptr);;
}












inline jule::Bool _1e5d38901_If_eq(_1e5d38901_If *_self_, _1e5d38901_If _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}






inline jule::Bool _1e5d38bed_Else_eq(_1e5d38bed_Else *_self_, _1e5d38bed_Else _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope);
}










inline jule::Bool _1e5d39418_InfIter_eq(_1e5d39418_InfIter *_self_, _1e5d39418_InfIter _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope);
}






inline jule::Bool _1e5d398be_WhileIter_eq(_1e5d398be_WhileIter *_self_, _1e5d398be_WhileIter _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Next == _self_->_field_Next);
}

inline jule::Bool _1e5d39c65_IsWhileNext(_1e5d398be_WhileIter* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}








inline jule::Bool _1e5d3a31a_RangeIter_eq(_1e5d3a31a_RangeIter *_self_, _1e5d3a31a_RangeIter _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_KeyA == _self_->_field_KeyA) &&
		(_self_->_field_KeyB == _self_->_field_KeyB);
}






inline jule::Bool _1e5d3a6a0_ContSt_eq(_1e5d3a6a0_ContSt *_self_, _1e5d3a6a0_ContSt _other_) {
	return 
		(_self_->_field_It == _other_._field_It);
}






inline jule::Bool _1e5d3aa79_BreakSt_eq(_1e5d3aa79_BreakSt *_self_, _1e5d3aa79_BreakSt _other_) {
	return 
		(_self_->_field_It == _other_._field_It) &&
		(_self_->_field_Mtch == _self_->_field_Mtch);
}






inline jule::Bool _1e5d3b030_Label_eq(_1e5d3b030_Label *_self_, _1e5d3b030_Label _other_) {
	return 
		(_self_->_field_Ident == _other_._field_Ident) &&
		(_self_->_field_Scope == _self_->_field_Scope) &&
		(_self_->_field_Index == _self_->_field_Index);
}






inline jule::Bool _1e5d3b690_GotoSt_eq(_1e5d3b690_GotoSt *_self_, _1e5d3b690_GotoSt _other_) {
	return 
		(_self_->_field_Ident == _other_._field_Ident) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Label == _self_->_field_Label) &&
		(_self_->_field_Scope == _self_->_field_Scope) &&
		(_self_->_field_Index == _self_->_field_Index);
}






inline jule::Bool _1e5d3ba69_Postfix_eq(_1e5d3ba69_Postfix *_self_, _1e5d3ba69_Postfix _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Op == _self_->_field_Op);
}






inline jule::Bool _1e5d3c020_Assign_eq(_1e5d3c020_Assign *_self_, _1e5d3c020_Assign _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_Op == _self_->_field_Op);
}


















inline jule::Bool _1e5d3de34_FallSt_eq(_1e5d3de34_FallSt *_self_, _1e5d3de34_FallSt _other_) {
	return 
		(_self_->_field_DestCase == _other_._field_DestCase);
}






inline jule::Bool _1e5d3e2ca_RetSt_eq(_1e5d3e2ca_RetSt *_self_, _1e5d3e2ca_RetSt _other_) {
	return 
		(_self_->_field_Func == _other_._field_Func) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1e5d3e781_scopeLabel_eq(_1e5d3e781_scopeLabel *_self_, _1e5d3e781_scopeLabel _other_) {
	return 
		(_self_->_field_token == _other_._field_token) &&
		(_self_->_field_node == _self_->_field_node) &&
		(_self_->_field_used == _self_->_field_used);
}






inline jule::Bool _1e5d40771_scopeChecker_eq(_1e5d40771_scopeChecker *_self_, _1e5d40771_scopeChecker _other_) {
	return 
		(_self_->_field_calledFrom == _other_._field_calledFrom) &&
		(_self_->_field_s == _self_->_field_s) &&
		(_self_->_field_owner == _self_->_field_owner) &&
		(_self_->_field_parent == _self_->_field_parent) &&
		(_self_->_field_childIndex == _self_->_field_childIndex) &&
		(_self_->_field_table == _self_->_field_table) &&
		(_self_->_field_scope == _self_->_field_scope) &&
		(_self_->_field_tree == _self_->_field_tree) &&
		(_self_->_field_result == _self_->_field_result) &&
		(_self_->_field_it == _self_->_field_it) &&
		(_self_->_field_cse == _self_->_field_cse) &&
		(_self_->_field_captured == _self_->_field_captured) &&
		(_self_->_field_labels == _self_->_field_labels) &&
		(_self_->_field_gotos == _self_->_field_gotos) &&
		(_self_->_field_i == _self_->_field_i);
}

inline jule::Ptr<_1e5d5b2e7_ImportInfo> _1e5d40c49_SelectPackage(_1e5d40771_scopeChecker* _self_, jule::Fn<jule::Bool,jule::Ptr<_1e5d5b2e7_ImportInfo>> _37429_selector) {
	return _1e5d7bc41_SelectPackage((*(_self_))._field_s.ptr(), _37429_selector);;
}



inline jule::Ptr<_1e5da0bcc_Var> _1e5d41145_FindVar(_1e5d40771_scopeChecker* _self_, jule::Str _38523_ident, jule::Bool _38535_binded) {
	if ((!(_38535_binded))) {
		jule::Ptr<_1e5da0bcc_Var> _3878_v = _1e5d444ab_findVar(_self_, _38523_ident);;
		if ((_3878_v != nullptr)) {
			return _3878_v;;
		};
	};
	return _1e5d7c13c_FindVar((*(_self_))._field_s.ptr(), _38523_ident, _38535_binded);;
}



inline jule::Ptr<_1e5e40a08_TypeAlias> _1e5d41541_FindTypeAlias(_1e5d40771_scopeChecker* _self_, jule::Str _40229_ident, jule::Bool _40241_binded) {
	;
	jule::Ptr<_1e5e40a08_TypeAlias> _4057_ta = _1e5e0654b_findTypeAlias((*(_self_))._field_table.ptr(), &(_40229_ident), _40241_binded, true);;
	if ((_4057_ta != nullptr)) {
		return _4057_ta;;
	};
	jule::Ptr<_1e5d40771_scopeChecker> _4107_parent = (*(_self_))._field_parent;;
	while ((_4107_parent != nullptr)) {
		{
			_4057_ta=_1e5e0654b_findTypeAlias((*(_4107_parent))._field_table, &(_40229_ident), _40241_binded, true);
			if ((_4057_ta != nullptr)) {
				return _4057_ta;;
			};
			_4107_parent=(*_4107_parent.alloc)._field_parent;
		}
	_iter_next_1e1a2bdbd:;
	}
	_iter_end_1e1a2bdbd:;;
	return _1e5d7c538_FindTypeAlias((*(_self_))._field_s.ptr(), _40229_ident, _40241_binded);;
}



inline jule::Ptr<_1e5cc5e21_Struct> _1e5d4193c_FindStruct(_1e5d40771_scopeChecker* _self_, jule::Str _42726_ident, jule::Bool _42738_binded) {
	return _1e5d7c934_FindStruct((*(_self_))._field_s.ptr(), _42726_ident, _42738_binded);;
}



inline jule::Ptr<_1e5ce0358_Fn> _1e5d41d38_FindFn(_1e5d40771_scopeChecker* _self_, jule::Str _43622_ident, jule::Bool _43634_binded) {
	return _1e5d7cd30_FindFn((*(_self_))._field_s.ptr(), _43622_ident, _43634_binded);;
}



inline jule::Ptr<_1e5d03db6_Trait> _1e5d42179_FindTrait(_1e5d40771_scopeChecker* _self_, jule::Str _44525_ident) {
	return _1e5d7d171_FindTrait((*(_self_))._field_s.ptr(), _44525_ident);;
}



inline jule::Ptr<_1e5d065c2_Enum> _1e5d424ba_FindEnum(_1e5d40771_scopeChecker* _self_, jule::Str _45424_ident) {
	return _1e5d7d4b2_FindEnum((*(_self_))._field_s.ptr(), _45424_ident);;
}



inline jule::Ptr<_1e5d07ccc_TypeEnum> _1e5d4280b_FindTypeEnum(_1e5d40771_scopeChecker* _self_, jule::Str _46328_ident) {
	return _1e5d7d803_FindTypeEnum((*(_self_))._field_s.ptr(), _46328_ident);;
}



inline jule::Bool _1e5d42b5d_isUnsafe(jule::Ptr<_1e5d40771_scopeChecker> _self_) {
	jule::Ptr<_1e5d40771_scopeChecker> _4717_scope = _self_;;
	_julec_label_1e1a3218c:;
	if ((*((*(_4717_scope))._field_scope))._field_Unsafety) {
		return true;;
	};
	if (((*_4717_scope.alloc)._field_parent != nullptr)) {
		_4717_scope=(*_4717_scope.alloc)._field_parent;
		goto _julec_label_1e1a3218c;
	};
	return false;;
}



inline jule::Bool _1e5d42de4_isRoot(_1e5d40771_scopeChecker* _self_) {
	return (((*(_self_))._field_parent == nullptr) || ((*(_self_))._field_owner != nullptr));;
}



inline void _1e5d430e2_stop(_1e5d40771_scopeChecker* _self_) {
	(*(_self_))._field_i=-1LL;
}



inline jule::Bool _1e5d43378_stopped(_1e5d40771_scopeChecker* _self_) {
	return ((*(_self_))._field_i == -1LL);;
}



inline jule::Bool _1e5d4360e_isDeferred(jule::Ptr<_1e5d40771_scopeChecker> _self_) {
	jule::Ptr<_1e5d40771_scopeChecker> _5047_scope = _self_;;
	_julec_label_1e1a34c61:;
	if ((*((*(_5047_scope))._field_scope))._field_Deferred) {
		return true;;
	};
	if (((*_5047_scope.alloc)._field_parent != nullptr)) {
		_5047_scope=(*_5047_scope.alloc)._field_parent;
		goto _julec_label_1e1a34c61;
	};
	return false;;
}



inline void _1e5d438b7_pushCaptured(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5da0bcc_Var>* _52534_v) {
	jule::Ptr<_1e5d40771_scopeChecker> _5267_sc = _self_;;
	for (;;) {
		{
			if (((*(_5267_sc))._field_captured != nullptr)) {
				{
					auto expr = &((*(*(_5267_sc))._field_captured.alloc));
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e1a37390:;
					if (it != expr_end) {
						jule::Ptr<_1e5da0bcc_Var> _52912_cv = *it;
						{
							if ((_52912_cv == (*(_52534_v)))) {
								goto _julec_label_1e1a382d6;
							};
						}
						_iter_next_1e1a37390:;
						++it;
						goto _iter_begin_1e1a37390;
					}
					_iter_end_1e1a37390:;
				};
				(*(*(_5267_sc))._field_captured.alloc)=jule::append((*(*(_5267_sc))._field_captured.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5da0bcc_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_52534_v)); __jule_collection; }));
				_julec_label_1e1a382d6:;
			};
			if (((*_5267_sc.alloc)._field_parent == nullptr)) {
				goto _iter_end_1e1a36636;
			};
			_5267_sc=(*_5267_sc.alloc)._field_parent;
			if ((!(_1e5e3dd9c_isVarCaptured(_5267_sc, _5267_sc, (*(_52534_v)))))) {
				goto _iter_end_1e1a36636;
			};
		}
	_iter_next_1e1a36636:;
	}
	_iter_end_1e1a36636:;;
}



inline jule::Ptr<_1e5d40771_scopeChecker> _1e5d43b4d_getRoot(jule::Ptr<_1e5d40771_scopeChecker> _self_) {
	jule::Ptr<_1e5d40771_scopeChecker> _5507_root = _self_;;
	while ((((*(_5507_root))._field_parent != nullptr) && ((*_5507_root.alloc)._field_owner == nullptr))) {
		{
			_5507_root=(*_5507_root.alloc)._field_parent;
		}
	_iter_next_1e1a393b4:;
	}
	_iter_end_1e1a393b4:;;
	return _5507_root;;
}



inline jule::Ptr<_1e5d40771_scopeChecker> _1e5d43dd4_getHardRoot(jule::Ptr<_1e5d40771_scopeChecker> _self_) {
	jule::Ptr<_1e5d40771_scopeChecker> _5607_root = _self_;;
	while (((*(_5607_root))._field_parent != nullptr)) {
		{
			_5607_root=(*_5607_root.alloc)._field_parent;
		}
	_iter_next_1e1a3a64b:;
	}
	_iter_end_1e1a3a64b:;;
	return _5607_root;;
}



inline jule::Ptr<_1e5ce65a1_ReferenceStack> _1e5d4416a_getOwnerRefers(jule::Ptr<_1e5d40771_scopeChecker> _self_) {
	return (*((*(_1e5d43dd4_getHardRoot(_self_)))._field_owner))._field_Refers;;
}



inline jule::Ptr<_1e5da0bcc_Var> _1e5d444ab_findVar(_1e5d40771_scopeChecker* _self_, jule::Str _57223_ident) {
	;
	;
	jule::Ptr<_1e5da0bcc_Var> _5757_v = _1e5e06095_findVar((*(_self_))._field_table.ptr(), &(_57223_ident), false, true);;
	if ((_5757_v != nullptr)) {
		return _5757_v;;
	};
	jule::Ptr<_1e5d40771_scopeChecker> _5797_parent = (*(_self_))._field_parent;;
	while ((_5797_parent != nullptr)) {
		{
			_5757_v=_1e5e06095_findVar((*(_5797_parent))._field_table, &(_57223_ident), false, true);
			if ((_5757_v != nullptr)) {
				return _5757_v;;
			};
			_5797_parent=(*_5797_parent.alloc)._field_parent;
		}
	_iter_next_1e1a3d1cb:;
	}
	_iter_end_1e1a3d1cb:;;
	return nullptr;;
}



inline jule::Ptr<_1e5d3b030_Label> _1e5d447ec_findLabel(_1e5d40771_scopeChecker* _self_, jule::Str* _59326_ident) {
	{
		auto expr = &((*((*(_self_))._field_scope))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e1a40211:;
		if (it != expr_end) {
			jule::Any _59415_st = *it;
			{
				{
					auto &_match_expr{ _59415_st };
					
					if (_match_expr.type == &__jule_any_type28) {
						_case_begin_1e1a40a08:;
						{
							jule::Ptr<_1e5d3b030_Label> _5979_label = _59415_st.unsafe_cast_ptr<_1e5d3b030_Label>();;
							if (((*(_5979_label))._field_Ident == (*(_59326_ident)))) {
								return _5979_label;;
							};
						}
					}
					_match_end_1e1a40992:;
				};
			}
			_iter_next_1e1a40211:;
			++it;
			goto _iter_begin_1e1a40211;
		}
		_iter_end_1e1a40211:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e5d3e781_scopeLabel> _1e5d44b3d_findLabelScope(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Str* _60932_ident) {
	jule::Ptr<_1e5d3e781_scopeLabel> _6107_label = _1e5d44e7e_findLabelAll(_self_.ptr(), _60932_ident);;
	if (((_6107_label != nullptr) && ((*((*_6107_label.alloc)._field_node))._field_Scope == (*_self_.alloc)._field_scope))) {
		return _6107_label;;
	};
	return nullptr;;
}



inline jule::Ptr<_1e5d3e781_scopeLabel> _1e5d44e7e_findLabelAll(_1e5d40771_scopeChecker* _self_, jule::Str* _62029_ident) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e1a45e3c:;
		if (it != expr_end) {
			jule::Ptr<_1e5d3e781_scopeLabel> _62115_lbl = *it;
			{
				if (((*((*(_62115_lbl))._field_node))._field_Ident == (*(_62029_ident)))) {
					return _62115_lbl;;
				};
			}
			_iter_next_1e1a45e3c:;
			++it;
			goto _iter_begin_1e1a45e3c;
		}
		_iter_end_1e1a45e3c:;
	};
	return nullptr;;
}



inline jule::Bool _1e5d4537a_isDuplicatedIdent(_1e5d40771_scopeChecker* _self_, jule::Uintptr _63233_itself, jule::Str* _63251_ident) {
	jule::Ptr<_1e5da0bcc_Var> _6333_v = _1e5d41145_FindVar(_self_, (*(_63251_ident)), false);;
	if (((_6333_v != nullptr) && (static_cast<jule::Uintptr>(_6333_v) != _63233_itself))) {
		if (((*_6333_v.alloc)._field_Scope == nullptr)) {
			return false;;
		};
		return (((*_6333_v.alloc)._field_Scope == (*(_self_))._field_scope) || (!(_1e5d7dc10_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	jule::Ptr<_1e5e40a08_TypeAlias> _6413_ta = _1e5d41541_FindTypeAlias(_self_, (*(_63251_ident)), false);;
	if (((_6413_ta != nullptr) && (static_cast<jule::Uintptr>(_6413_ta) != _63233_itself))) {
		if (((*_6413_ta.alloc)._field_Scope == nullptr)) {
			return false;;
		};
		return (((*_6413_ta.alloc)._field_Scope == (*(_self_))._field_tree) || (!(_1e5d7dc10_isFlag((*(_self_))._field_s, static_cast<jule::I64>(1LL)))));;
	};
	return false;;
}



inline void _1e5d45633_checkVarDecl(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cb7e02_VarDecl> _65233_decl) {
	jule::Ptr<_1e5da0bcc_Var> _6537_v = _1e5ceb919_buildVar(_65233_decl);;
	(*(_6537_v))._field_Scope=(*(_self_))._field_scope;
	__JULE_DEFER({
		(*((*_self_.alloc)._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5da0bcc_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6537_v; __jule_collection; }));
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_6537_v, &__jule_any_type8); __jule_collection; }));
	});;
	if (_1e5d4537a_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>(_6537_v), &((*_6537_v.alloc)._field_Ident))) {
		_1e5d7e66c_pushErr((*_self_.alloc)._field_s.ptr(), (*_6537_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_6537_v.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1e5d7e9d0_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		_1e5d430e2_stop(_self_);
		return;;
	};
	_1e5d9364d_checkVarDecl((*(_self_))._field_s, &(_6537_v), jule::Trait(_self_, (jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data0));
	if (((!(_1e5da1370_IsTypeInferred(_6537_v))) && (((*_6537_v.alloc)._field_Kind == nullptr) || ((*((*_6537_v.alloc)._field_Kind))._field_Kind == nullptr)))) {
		return;;
	};
	_1e5d96de3_evalVarValue((*(_self_))._field_s, &(_6537_v), jule::Trait(_self_, (jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data0));
	if (((!(_1e5da10d9_IsInitialized(_6537_v))) || ((*((*_6537_v.alloc)._field_Value))._field_Data == nullptr))) {
		return;;
	};
	_1e5d4b89d_removeInteriorMutRisk(_self_, &((*(*(_6537_v))._field_Value.alloc)._field_Data));
	_1e5d96a80_checkVarValue((*(_self_))._field_s, &(_6537_v));
}



inline void _1e5d458db_checkTypeAlias(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5e40a08_TypeAlias>* _68336_ta) {
	if (_1e5d4537a_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_68336_ta))), &((*((*(_68336_ta))))._field_Ident))) {
		_1e5d7e66c_pushErr((*_self_.alloc)._field_s.ptr(), (*((*(_68336_ta))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_68336_ta))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1e5d7e9d0_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		_1e5d430e2_stop(_self_);
		return;;
	};
	_1e5d8c6d0_checkTypeAliasDecl((*(_self_))._field_s, _68336_ta, jule::Trait(_self_, (jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data0));
	(*((*_self_.alloc)._field_table))._field_TypeAliases=jule::append((*(*(_self_))._field_table.alloc)._field_TypeAliases,({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5e40a08_TypeAlias>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_68336_ta)); __jule_collection; }));
	if (((*((*((*(_68336_ta))))._field_Kind))._field_Kind == nullptr)) {
		_1e5d430e2_stop(_self_);
	};
}



inline void _1e5d45b94_checkTypeAliasDecl(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cbbaa4_TypeAliasDecl> _69939_decl) {
	jule::Ptr<_1e5e40a08_TypeAlias> _7007_ta = _1e5ce84e8_buildTypeAlias(_69939_decl);;
	_1e5d458db_checkTypeAlias(_self_, &(_7007_ta));
}



inline jule::Ptr<_1e5d384d3_Scope> _1e5d45e2a_getChild(_1e5d40771_scopeChecker* _self_) {
	return jule::new_ptr<_1e5d384d3_Scope>(_1e5d384d3_Scope{._field_Parent=(*(_self_))._field_scope, ._field_Unsafety=false, ._field_Deferred=false, ._field_Stmts=jule::Slice<jule::Any>(nullptr), ._field_ChildIndex=0, ._field_StmtIndex=0});;
}



inline void _1e5d46348_checkChildSsc(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cb50a8_ScopeTree>* _71035_tree, jule::Ptr<_1e5d384d3_Scope>* _71058_s, jule::Ptr<_1e5d40771_scopeChecker>* _71074_ssc) {
	(*((*(_71058_s))))._field_StmtIndex=(*(_self_))._field_i;
	(*((*(_71058_s))))._field_ChildIndex=(*((*(_71074_ssc))))._field_childIndex;
	(*((*(_71074_ssc))))._field_parent=_self_;
	_1e5d528e8_check((*(_71074_ssc)), _71035_tree, _71058_s);
}



inline jule::Ptr<_1e5d384d3_Scope> _1e5d46744_checkChildSc(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cb50a8_ScopeTree>* _71734_tree, jule::Ptr<_1e5d40771_scopeChecker>* _71757_ssc) {
	jule::Ptr<_1e5d384d3_Scope> _7187_s = _1e5d45e2a_getChild(_self_.ptr());;
	_1e5d46348_checkChildSsc(_self_, _71734_tree, &(_7187_s), _71757_ssc);
	return _7187_s;;
}



inline jule::Ptr<_1e5d384d3_Scope> _1e5d46a85_checkChild(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cb50a8_ScopeTree>* _72332_tree) {
	jule::Ptr<_1e5d40771_scopeChecker> _7247_ssc = _1e5d52b7e_newChildChecker(_self_);;
	return _1e5d46744_checkChildSc(_self_, _72332_tree, &(_7247_ssc));;
}



inline void _1e5d46d3d_checkAnonScope(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cb50a8_ScopeTree> _72835_tree) {
	jule::Ptr<_1e5d384d3_Scope> _7297_s = _1e5d46a85_checkChild(_self_, &(_72835_tree));;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7297_s, &__jule_any_type29); __jule_collection; }));
}



inline void _1e5d471a1_processErrorCall(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cdb09b_BuiltinErrorCallExprModel>* _73338_m, jule::Ptr<_1e5c8eacc_Token> _73369_err) {
	if (_1e5d4360e_isDeferred(_self_)) {
		_1e5d7e66c_pushErr((*_self_.alloc)._field_s.ptr(), _73369_err, static_cast<jule::Str>(jule::Str::lit("deferred scopes are not supports error calls", 44)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e5d40771_scopeChecker> _7387_root = _1e5d43b4d_getRoot(_self_);;
	if ((!((*((*((*(_7387_root))._field_owner))._field_Decl))._field_Exceptional))) {
		_1e5d7e66c_pushErr((*(_self_))._field_s, _73369_err, static_cast<jule::Str>(jule::Str::lit("error call can only useable for exceptional functions", 53)), jule::Slice<jule::Any>());
		_1e5d7e9d0_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("you can declare an exceptional function with \"!\" operator", 57)), jule::Slice<jule::Any>());
	};
	(*((*(_73338_m))))._field_Func=(*_7387_root.alloc)._field_owner;
}



inline void _1e5d47459_checkExpr(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5ca93bb_Expr> _74630_expr) {
	jule::Ptr<_1e5e0a93a_eval> _7477_eval = _1e5d870c0_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data0));;
	(*(_7477_eval))._field_ignored=true;
	jule::Ptr<_1e5e08c13_Data> _7497_d = _1e5e297a0_evalExpr(_7477_eval, _74630_expr);;
	if (((_7497_d == nullptr) || ((*(_7497_d))._field_Model == nullptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_7497_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1e1a67689:;
			{
				jule::Ptr<_1e5cdb09b_BuiltinErrorCallExprModel> _7588_m = (*(_7497_d))._field_Model.unsafe_cast_ptr<_1e5cdb09b_BuiltinErrorCallExprModel>();;
				_1e5d471a1_processErrorCall(_self_, &(_7588_m), (*(_74630_expr))._field_Token);
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7497_d, &__jule_any_type31); __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type32 || _match_expr.type == &__jule_any_type33 || _match_expr.type == &__jule_any_type34 || _match_expr.type == &__jule_any_type35 || _match_expr.type == &__jule_any_type36 || _match_expr.type == &__jule_any_type37 || _match_expr.type == &__jule_any_type38 || _match_expr.type == &__jule_any_type39 || _match_expr.type == &__jule_any_type40) {
			_case_begin_1e1a67ca5:;
			{
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7497_d, &__jule_any_type31); __jule_collection; }));
			}
		}
		else {
			_case_begin_1e1a67c3e:;
			{
				_1e5d7e66c_pushErr((*(_self_))._field_s, (*(_74630_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1e1a67bc8:;
	};
}



inline jule::Ptr<_1e5d38901_If> _1e5d4779a_checkIf(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cba9d7_If> _77628_i) {
	jule::Ptr<_1e5d384d3_Scope> _7777_s = _1e5d46a85_checkChild(_self_, &((*(_77628_i))._field_Scope));;
	jule::Ptr<_1e5e08c13_Data> _7797_d = _1e5e297a0_evalExpr(_1e5d870c0_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data0)), (*_77628_i.alloc)._field_Expr);;
	if ((_7797_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1e5e49913_Prim> _7847_prim = _1e5e43ea1_Prim((*(_7797_d))._field_Kind.ptr());;
	if (((_7847_prim == nullptr) || (!(_1e5e4cb47_IsBool(_7847_prim.ptr()))))) {
		_1e5d7e66c_pushErr((*(_self_))._field_s, (*((*_77628_i.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("if conditions must be have boolean expression", 45)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1e5d38901_If>(_1e5d38901_If{._field_Expr=(*(_7797_d))._field_Model, ._field_Scope=_7777_s});;
}



inline jule::Ptr<_1e5d38bed_Else> _1e5d47adb_checkElse(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cbadb1_Else> _79630_e) {
	return jule::new_ptr<_1e5d38bed_Else>(_1e5d38bed_Else{._field_Scope=_1e5d46a85_checkChild(_self_, &((*(_79630_e))._field_Scope))});;
}



inline void _1e5d47d94_checkConditional(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cbb367_Conditional> _80237_conditional) {
	jule::Ptr<_1e5d3911b_Conditional> _8037_c = jule::new_ptr<_1e5d3911b_Conditional>(_1e5d3911b_Conditional{._field_Elifs=jule::Slice<jule::Ptr<_1e5d38901_If>>(nullptr), ._field_Default=jule::Ptr<_1e5d38bed_Else>(nullptr)});;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_8037_c, &__jule_any_type41); __jule_collection; }));
	(*_8037_c.alloc)._field_Elifs=({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5d38901_If>>::alloc(0LL, ((*(_80237_conditional))._field_Tail.len() + 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1e5d38901_If>(nullptr); __jule_collection; });
	(*_8037_c.alloc)._field_Elifs=jule::append((*_8037_c.alloc)._field_Elifs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5d38901_If>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1e5d4779a_checkIf(_self_, (*_80237_conditional.alloc)._field_Head); __jule_collection; }));
	{
		auto expr = &((*_80237_conditional.alloc)._field_Tail);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e1a8ea13:;
		if (it != expr_end) {
			jule::Ptr<_1e5cba9d7_If> _80915_elif = *it;
			{
				(*_8037_c.alloc)._field_Elifs=jule::append((*_8037_c.alloc)._field_Elifs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5d38901_If>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1e5d4779a_checkIf(_self_, _80915_elif); __jule_collection; }));
			}
			_iter_next_1e1a8ea13:;
			++it;
			goto _iter_begin_1e1a8ea13;
		}
		_iter_end_1e1a8ea13:;
	};
	if (((*_80237_conditional.alloc)._field_Default != nullptr)) {
		(*_8037_c.alloc)._field_Default=_1e5d47adb_checkElse(_self_, (*_80237_conditional.alloc)._field_Default);
	};
}



inline void _1e5d4836c_checkIterScopeSsc(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Uintptr _81834_it, jule::Ptr<_1e5cb50a8_ScopeTree> _81851_tree, jule::Ptr<_1e5d384d3_Scope>* _81874_s, jule::Ptr<_1e5d40771_scopeChecker> _81889_ssc) {
	(*(_81889_ssc))._field_it=_81834_it;
	_1e5d46348_checkChildSsc(_self_, &(_81851_tree), _81874_s, &(_81889_ssc));
}



inline jule::Ptr<_1e5d384d3_Scope> _1e5d48823_checkIterScopeSc(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Uintptr _82333_it, jule::Ptr<_1e5cb50a8_ScopeTree> _82350_tree, jule::Ptr<_1e5d40771_scopeChecker> _82372_ssc) {
	jule::Ptr<_1e5d384d3_Scope> _8247_scope = _1e5d45e2a_getChild(_self_.ptr());;
	_1e5d4836c_checkIterScopeSsc(_self_, _82333_it, _82350_tree, &(_8247_scope), _82372_ssc);
	return _8247_scope;;
}



inline jule::Ptr<_1e5d384d3_Scope> _1e5d48c1e_checkIterScope(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Uintptr _82931_it, jule::Ptr<_1e5cb50a8_ScopeTree>* _82949_tree) {
	jule::Ptr<_1e5d40771_scopeChecker> _8307_ssc = _1e5d52b7e_newChildChecker(_self_);;
	return _1e5d48823_checkIterScopeSc(_self_, _82931_it, (*(_82949_tree)), _8307_ssc);;
}



inline void _1e5d48ec7_checkInfIter(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cb8a4b_Iter>* _83434_it) {
	jule::Ptr<_1e5d39418_InfIter> _8357_kind = jule::new_ptr<_1e5d39418_InfIter>(_1e5d39418_InfIter{._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr)});;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_8357_kind, &__jule_any_type42); __jule_collection; }));
	(*_8357_kind.alloc)._field_Scope=_1e5d48c1e_checkIterScope(_self_, static_cast<jule::Uintptr>(_8357_kind), &((*((*(_83434_it))))._field_Scope));
}



inline void _1e5d49280_checkWhileIter(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cb8a4b_Iter>* _84036_it) {
	jule::Ptr<_1e5cb9376_WhileKind> _8417_wh = (*((*(_84036_it))))._field_Kind.cast_ptr<_1e5cb9376_WhileKind>(&__jule_any_type43);;
	if ((((*(_8417_wh))._field_Expr == nullptr) && ((*_8417_wh.alloc)._field_Next == nullptr))) {
		_1e5d48ec7_checkInfIter(_self_, _84036_it);
		return;;
	};
	jule::Ptr<_1e5d398be_WhileIter> _8477_kind = jule::new_ptr<_1e5d398be_WhileIter>(_1e5d398be_WhileIter{._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Expr=jule::Any(nullptr), ._field_Next=jule::Any(nullptr)});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_8477_kind, &__jule_any_type44); __jule_collection; }));
	(*_8477_kind.alloc)._field_Scope=_1e5d48c1e_checkIterScope(_self_, static_cast<jule::Uintptr>(_8477_kind), &((*((*(_84036_it))))._field_Scope));
	if (((*_8417_wh.alloc)._field_Expr != nullptr)) {
		jule::Ptr<_1e5e08c13_Data> _8528_d = _1e5e297a0_evalExpr(_1e5d870c0_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data0)), (*_8417_wh.alloc)._field_Expr);;
		if ((_8528_d == nullptr)) {
			return;;
		};
		jule::Ptr<_1e5e49913_Prim> _8574_prim = _1e5e43ea1_Prim((*(_8528_d))._field_Kind.ptr());;
		if ((_8574_prim == nullptr)) {
			_1e5d7e66c_pushErr((*(_self_))._field_s, (*((*(_84036_it))))._field_Token, static_cast<jule::Str>(jule::Str::lit("while iterations must be have boolean expression", 48)), jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_1e5e4cb47_IsBool(_8574_prim.ptr())))) {
			_1e5d7e66c_pushErr((*(_self_))._field_s, (*((*(_84036_it))))._field_Token, static_cast<jule::Str>(jule::Str::lit("while iterations must be have boolean expression", 48)), jule::Slice<jule::Any>());
			return;;
		};
		(*_8477_kind.alloc)._field_Expr=(*(_8528_d))._field_Model;
	};
	if (_1e5cb971c_IsWhileNext(_8417_wh)) {
		if ((!(_1e5d37aed_isValidAstStForNextSt(&((*_8417_wh.alloc)._field_Next))))) {
			_1e5d7e66c_pushErr((*(_self_))._field_s, (*_8417_wh.alloc)._field_NextToken, static_cast<jule::Str>(jule::Str::lit("invalid statement for while-next", 32)), jule::Slice<jule::Any>());
			return;;
		};
		jule::I64 _8774_n = (*(*(_self_))._field_scope.alloc)._field_Stmts.len();;
		_1e5d5152e_checkNode(_self_, &((*_8417_wh.alloc)._field_Next));
		if ((_8774_n < (*(*(_self_))._field_scope.alloc)._field_Stmts.len())) {
			jule::Any _8809_st = (*((*(_self_))._field_scope))._field_Stmts[_8774_n];;
			((*((*(_self_))._field_scope))._field_Stmts).mut_slice(0LL, _8774_n);;
			if ((!(_1e5d37d40_isValidStForNextSt(&(_8809_st))))) {
				_1e5d7e66c_pushErr((*(_self_))._field_s, (*_8417_wh.alloc)._field_NextToken, static_cast<jule::Str>(jule::Str::lit("invalid statement for while-next", 32)), jule::Slice<jule::Any>());
			};
			(*_8477_kind.alloc)._field_Next=_8809_st;
		};
	};
}



inline void _1e5d4969d_checkComptimeRangeIter(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cb8a4b_Iter>* _89044_it, jule::Ptr<_1e5d3a31a_RangeIter>* _89060_kind, jule::Ptr<_1e5e08c13_Data>* _89083_d) {
	if (((*((*(_89060_kind))))._field_KeyA != nullptr)) {
		if (((!(_1e5d7dc10_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1e5d4537a_isDuplicatedIdent(_self_, 0LLU, &((*(*((*(_89060_kind))))._field_KeyA.alloc)._field_Ident)))) {
			_1e5d7e66c_pushErr((*(_self_))._field_s, (*(*((*(_89060_kind))))._field_KeyA.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_89060_kind))))._field_KeyA.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
			_1e5d7e9d0_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		};
	};
	if (((*((*(_89060_kind))))._field_KeyB != nullptr)) {
		if (((!(_1e5d7dc10_isFlag((*(_self_))._field_s, static_cast<jule::I64>(1LL)))) && _1e5d4537a_isDuplicatedIdent(_self_, 0LLU, &((*(*((*(_89060_kind))))._field_KeyB.alloc)._field_Ident)))) {
			_1e5d7e66c_pushErr((*(_self_))._field_s, (*(*((*(_89060_kind))))._field_KeyB.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_89060_kind))))._field_KeyB.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
			_1e5d7e9d0_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		};
	};
	jule::Ptr<_1e5cb9c7d_RangeKind> _9047_rang = (*((*(_89044_it))))._field_Kind.cast_ptr<_1e5cb9c7d_RangeKind>(&__jule_any_type45);;
	_1e5d53201_makeComptimeRange(_89083_d);
	if ((*((*(_89083_d))))._field_Decl) {
		_1e5d7e66c_pushErr((*(_self_))._field_s, (*((*(_9047_rang))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not supports comptime iterations", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*((*(_89083_d))))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
		return;;
	};
	_1e5ded774_rangeChecker _9117_rc = _1e5ded774_rangeChecker{._field_sc=_self_, ._field_rang=_9047_rang, ._field_Kind=(*(_89060_kind)), ._field_d=(*(_89083_d))};;
	jule::Bool _9173_ok = _1e5e007ba_check(&_9117_rc);;
	if ((!(_9173_ok))) {
		return;;
	};
	jule::Ptr<_1e5d0a708_comptimeRange> _9227_comptime = _1e5e4734a_comptimeRange((*((*(_89083_d))))._field_Kind);;
	((_1e5d0a4d8_comptimeRangeKindMptrData*)(*(_9227_comptime))._field_kind.safe_type())->_1e5d09bd0_ready((*(_9227_comptime))._field_kind.data, &((*((*(_89060_kind))))._field_KeyA), &((*((*(_89060_kind))))._field_KeyB));
	jule::I64 _9247_i = 0LL;;
	jule::I64 _9253_errors = (*(*(_self_))._field_s.alloc)._field_errors.len();;
	for (; (_9247_i < ((_1e5d0a4d8_comptimeRangeKindMptrData*)(*_9227_comptime.alloc)._field_kind.safe_type())->_1e5d0a384_len((*_9227_comptime.alloc)._field_kind.data)); (_9247_i)++) {
		{
			jule::Ptr<_1e5d40771_scopeChecker> _9278_ssc = _1e5d52b7e_newChildChecker(_self_);;
			jule::Ptr<_1e5d384d3_Scope> _9288_scope = _1e5d45e2a_getChild(_self_);;
			if (((*((*(_89060_kind))))._field_KeyA != nullptr)) {
				(*(*((*(_89060_kind))))._field_KeyA.alloc)._field_Scope=_9288_scope;
				(*((*(_9278_ssc))._field_table))._field_Vars=jule::append((*(*(_9278_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5da0bcc_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*((*(_89060_kind))))._field_KeyA; __jule_collection; }));
			};
			if (((*((*(_89060_kind))))._field_KeyB != nullptr)) {
				(*(*((*(_89060_kind))))._field_KeyB.alloc)._field_Scope=_9288_scope;
				(*(*(_9278_ssc))._field_table.alloc)._field_Vars=jule::append((*(*(_9278_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5da0bcc_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*((*(_89060_kind))))._field_KeyB; __jule_collection; }));
			};
			((_1e5d0a4d8_comptimeRangeKindMptrData*)(*_9227_comptime.alloc)._field_kind.safe_type())->_1e5d0a0ed_step((*_9227_comptime.alloc)._field_kind.data, _9247_i, &((*((*(_89060_kind))))._field_KeyA), &((*((*(_89060_kind))))._field_KeyB));
			_1e5d46348_checkChildSsc(_self_, &((*((*(_89044_it))))._field_Scope), &(_9288_scope), &(_9278_ssc));
			if ((_9253_errors != (*(*(_self_))._field_s.alloc)._field_errors.len())) {
				goto _iter_end_1ca989418;
			};
			(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_9288_scope, &__jule_any_type29); __jule_collection; }));
		}
	_iter_next_1ca989418:;
	}
	_iter_end_1ca989418:;;
}



inline void _1e5d49956_checkRangeIter(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cb8a4b_Iter>* _94736_it) {
	jule::Ptr<_1e5cb9c7d_RangeKind> _9487_rang = (*((*(_94736_it))))._field_Kind.cast_ptr<_1e5cb9c7d_RangeKind>(&__jule_any_type45);;
	jule::Ptr<_1e5e08c13_Data> _9507_d = _1e5e2945e_evalExpr1(_1e5d870c0_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data0)), (*(_9487_rang))._field_Expr);;
	if ((_9507_d == nullptr)) {
		return;;
	};
	jule::Ptr<_1e5d3a31a_RangeIter> _9557_kind = jule::new_ptr<_1e5d3a31a_RangeIter>(_1e5d3a31a_RangeIter{._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Expr=_9507_d, ._field_KeyA=jule::Ptr<_1e5da0bcc_Var>(nullptr), ._field_KeyB=jule::Ptr<_1e5da0bcc_Var>(nullptr)});;
	if ((*((*(_94736_it))))._field_Comptime) {
		_1e5d4969d_checkComptimeRangeIter(_self_, _94736_it, &(_9557_kind), &(_9507_d));
		return;;
	};
	if (_1e5e4605d_comptime((*(_9507_d))._field_Kind.ptr())) {
		_1e5d7e66c_pushErr((*(_self_))._field_s, (*((*_9487_rang.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime expressions cannot be iterated at runtime", 50)), jule::Slice<jule::Any>());
		_1e5d7e9d0_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("declarate comptime iteration like: const for ...", 48)), jule::Slice<jule::Any>());
		return;;
	};
	_1e5ded774_rangeChecker _9697_rc = _1e5ded774_rangeChecker{._field_sc=_self_, ._field_rang=_9487_rang, ._field_Kind=_9557_kind, ._field_d=_9507_d};;
	jule::Bool _9753_ok = _1e5e007ba_check(&_9697_rc);;
	if ((!(_9753_ok))) {
		return;;
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_9557_kind, &__jule_any_type46); __jule_collection; }));
	jule::Ptr<_1e5d40771_scopeChecker> _9827_ssc = _1e5d52b7e_newChildChecker(_self_);;
	jule::Ptr<_1e5d384d3_Scope> _9837_scope = _1e5d45e2a_getChild(_self_);;
	if (((*(_9557_kind))._field_KeyA != nullptr)) {
		if (((!(_1e5d7dc10_isFlag((*(_self_))._field_s, static_cast<jule::I64>(1LL)))) && _1e5d4537a_isDuplicatedIdent(_self_, 0LLU, &((*(*(_9557_kind))._field_KeyA.alloc)._field_Ident)))) {
			_1e5d7e66c_pushErr((*(_self_))._field_s, (*(*(_9557_kind))._field_KeyA.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_9557_kind))._field_KeyA.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
			_1e5d7e9d0_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		};
		(*(*(_9557_kind))._field_KeyA.alloc)._field_Scope=_9837_scope;
		(*((*(_9827_ssc))._field_table))._field_Vars=jule::append((*(*(_9827_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5da0bcc_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*_9557_kind.alloc)._field_KeyA; __jule_collection; }));
	};
	if (((*_9557_kind.alloc)._field_KeyB != nullptr)) {
		if (((!(_1e5d7dc10_isFlag((*(_self_))._field_s, static_cast<jule::I64>(1LL)))) && _1e5d4537a_isDuplicatedIdent(_self_, 0LLU, &((*(*(_9557_kind))._field_KeyB.alloc)._field_Ident)))) {
			_1e5d7e66c_pushErr((*(_self_))._field_s, (*(*(_9557_kind))._field_KeyB.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_9557_kind))._field_KeyB.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
			_1e5d7e9d0_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		};
		(*(*(_9557_kind))._field_KeyB.alloc)._field_Scope=_9837_scope;
		(*(*(_9827_ssc))._field_table.alloc)._field_Vars=jule::append((*(*(_9827_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5da0bcc_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*_9557_kind.alloc)._field_KeyB; __jule_collection; }));
	};
	_1e5d4836c_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(_9557_kind), (*((*(_94736_it))))._field_Scope, &(_9837_scope), _9827_ssc);
	(*_9557_kind.alloc)._field_Scope=_9837_scope;
}



inline void _1e5d49c0e_checkIter(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cb8a4b_Iter> _100730_it) {
	if (_1e5cb8de2_IsInf(_100730_it.ptr())) {
		if ((*_100730_it.alloc)._field_Comptime) {
			_1e5d7e66c_pushErr((*(_self_))._field_s.ptr(), (*_100730_it.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime iterations can only be range iteration", 47)), jule::Slice<jule::Any>());
			return;;
		};
		_1e5d48ec7_checkInfIter(_self_, &(_100730_it));
		return;;
	};
	{
		auto &_match_expr{ (*(_100730_it))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1ca9a5665:;
			{
				if ((*_100730_it.alloc)._field_Comptime) {
					_1e5d7e66c_pushErr((*(_self_))._field_s, (*_100730_it.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime iterations can only be range iteration", 47)), jule::Slice<jule::Any>());
					return;;
				};
				_1e5d49280_checkWhileIter(_self_, &(_100730_it));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1ca9a6831:;
			{
				_1e5d49956_checkRangeIter(_self_, &(_100730_it));
			}
		}
		else {
			_case_begin_1ca9a67ba:;
			{
				jule::outln(_1c8d69498_toStr(jule::Str::lit("error <unimplemented iteration kind>", 36)));
			}
		}
		_match_end_1ca9a6754:;
	};
}



inline jule::Bool _1e5d4a050_checkValidContLabel(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Uintptr _103136_it) {
	jule::Ptr<_1e5d40771_scopeChecker> _10327_scope = _self_;;
	_julec_label_1ca9ad45e:;
	if (((*(_10327_scope))._field_it == _103136_it)) {
		return true;;
	};
	if (((*_10327_scope.alloc)._field_parent != nullptr)) {
		_10327_scope=(*_10327_scope.alloc)._field_parent;
		goto _julec_label_1ca9ad45e;
	};
	return false;;
}



inline jule::Bool _1e5d4a391_checkValidBreakLabel(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Uintptr _104737_ptr) {
	jule::Ptr<_1e5d40771_scopeChecker> _10487_scope = _self_;;
	_julec_label_1ca9b1033:;
	if (((*(_10487_scope))._field_it == _104737_ptr)) {
		return true;;
	};
	if (((*_10487_scope.alloc)._field_cse != 0LLU)) {
		jule::Uintptr _10564_mtch = static_cast<jule::Uintptr>((*(((_1e5d3d73b_Case*)((*_10487_scope.alloc)._field_cse))))._field_Owner);;
		if ((_10564_mtch == _104737_ptr)) {
			return true;;
		};
	};
	if (((*_10487_scope.alloc)._field_parent != nullptr)) {
		_10487_scope=(*_10487_scope.alloc)._field_parent;
		goto _julec_label_1ca9b1033;
	};
	return false;;
}



inline jule::Ptr<_1e5d3a6a0_ContSt> _1e5d4a6d2_checkContValidScope(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cba531_ContSt> _107036_c) {
	if (_1e5d4360e_isDeferred(_self_)) {
		_1e5d7e66c_pushErr((*_self_.alloc)._field_s.ptr(), (*(_107036_c))._field_Token, static_cast<jule::Str>(jule::Str::lit("continue keyword is cannot used at out of iteration", 51)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*_107036_c.alloc)._field_Label != nullptr)) {
		return jule::new_ptr<_1e5d3a6a0_ContSt>(_1e5d3a6a0_ContSt{._field_It=0});;
	};
	jule::Ptr<_1e5d40771_scopeChecker> _10807_scope = _self_;;
	_julec_label_1ca9b37e9:;
	{
		
		if (((((*_10807_scope.alloc)._field_it == 0LLU) && ((*_10807_scope.alloc)._field_parent != nullptr)) && ((*_10807_scope.alloc)._field_owner == nullptr))) {
			_case_begin_1ca9b5499:;
			{
				_10807_scope=(*_10807_scope.alloc)._field_parent;
				goto _julec_label_1ca9b37e9;
			}
		}
		else if (((*_10807_scope.alloc)._field_it != 0LLU)) {
			_case_begin_1ca9b5532:;
			{
				return jule::new_ptr<_1e5d3a6a0_ContSt>(_1e5d3a6a0_ContSt{._field_It=(*_10807_scope.alloc)._field_it});;
			}
		}
		_match_end_1ca9b5400:;
	};
	_1e5d7e66c_pushErr((*(_self_))._field_s, (*_107036_c.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("continue keyword is cannot used at out of iteration", 51)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1e5d4a98a_checkCont(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cba531_ContSt> _109426_c) {
	jule::Ptr<_1e5d3a6a0_ContSt> _10957_cont = _1e5d4a6d2_checkContValidScope(_self_, _109426_c);;
	if ((_10957_cont == nullptr)) {
		return;;
	};
	if (((*(_109426_c))._field_Label != nullptr)) {
		jule::Ptr<_1e5d3e781_scopeLabel> _11018_label = _1e5d36679_findLabelParent(&((*(*(_109426_c))._field_Label.alloc)._field_Kind), (*_self_.alloc)._field_parent);;
		if ((_11018_label == nullptr)) {
			_1e5d7e66c_pushErr((*_self_.alloc)._field_s.ptr(), (*_109426_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("not exist any label in this identifier: @", 41)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_109426_c))._field_Label.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
			return;;
		};
		(*(_11018_label))._field_used=true;
		if ((((*((*(_11018_label))._field_node))._field_Index + 1LL) >= (*((*(*(_11018_label))._field_node.alloc)._field_Scope))._field_Stmts.len())) {
			_1e5d7e66c_pushErr((*(_self_))._field_s, (*_109426_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_109426_c))._field_Label.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
			return;;
		};
		jule::I64 _11144_i = ((*(*(_11018_label))._field_node.alloc)._field_Index + 1LL);;
		if ((_11144_i >= (*(*((*(_11018_label))._field_node))._field_Scope.alloc)._field_Stmts.len())) {
			_1e5d7e66c_pushErr((*(_self_))._field_s, (*_109426_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), jule::Slice<jule::Any>());
		} else {
			jule::Any _11189_st = (*(*((*(_11018_label))._field_node))._field_Scope.alloc)._field_Stmts[_11144_i];;
			{
				auto &_match_expr{ _11189_st };
				
				if (_match_expr.type == &__jule_any_type42) {
					_case_begin_1ca9c220e:;
					{
						(*(_10957_cont))._field_It=static_cast<jule::Uintptr>(_11189_st.unsafe_cast_ptr<_1e5d39418_InfIter>());
					}
				}
				else if (_match_expr.type == &__jule_any_type46) {
					_case_begin_1ca9c0d78:;
					{
						(*(_10957_cont))._field_It=static_cast<jule::Uintptr>(_11189_st.unsafe_cast_ptr<_1e5d3a31a_RangeIter>());
					}
				}
				else if (_match_expr.type == &__jule_any_type44) {
					_case_begin_1ca9c1065:;
					{
						(*(_10957_cont))._field_It=static_cast<jule::Uintptr>(_11189_st.unsafe_cast_ptr<_1e5d398be_WhileIter>());
					}
				}
				else {
					_case_begin_1ca9c0eee:;
					{
						_1e5d7e66c_pushErr((*(_self_))._field_s, (*_109426_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_109426_c))._field_Label.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
					}
				}
				_match_end_1ca9c0e88:;
			};
		};
	};
	if (((*(_10957_cont))._field_It != 0LLU)) {
		if ((!(_1e5d4a050_checkValidContLabel(_self_, (*(_10957_cont))._field_It)))) {
			_1e5d7e66c_pushErr((*(_self_))._field_s, (*_109426_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_109426_c))._field_Label.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		};
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_10957_cont, &__jule_any_type47); __jule_collection; }));
}



inline void _1e5d4ac43_checkLabel(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cb266b_LabelSt> _114131_l) {
	if ((_1e5d447ec_findLabel(_self_.ptr(), &((*(_114131_l))._field_Ident)) != nullptr)) {
		_1e5d7e66c_pushErr((*_self_.alloc)._field_s.ptr(), (*_114131_l.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("label is already exist in this identifier: @", 44)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_114131_l.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
		return;;
	};
	jule::Ptr<_1e5d3b030_Label> _11477_label = jule::new_ptr<_1e5d3b030_Label>(_1e5d3b030_Label{._field_Ident=(*_114131_l.alloc)._field_Ident, ._field_Scope=(*_self_.alloc)._field_scope, ._field_Index=(*_self_.alloc)._field_i});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_11477_label, &__jule_any_type28); __jule_collection; }));
	(*((*_self_.alloc)._field_labels))=jule::append((*(*(_self_))._field_labels.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5d3e781_scopeLabel>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1e5d3e781_scopeLabel>(_1e5d3e781_scopeLabel{._field_token=(*_114131_l.alloc)._field_Token, ._field_node=_11477_label, ._field_used=false}); __jule_collection; }));
}



inline void _1e5d4aeeb_pushGoto(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cb2a45_GotoSt> _116029_gt) {
	jule::Ptr<_1e5d3b690_GotoSt> _11617_st = jule::new_ptr<_1e5d3b690_GotoSt>(_1e5d3b690_GotoSt{._field_Ident=(*((*_116029_gt.alloc)._field_Label))._field_Kind, ._field_Token=(*(_116029_gt))._field_Label, ._field_Label=jule::Ptr<_1e5d3b030_Label>(nullptr), ._field_Scope=(*(_self_))._field_scope, ._field_Index=(*_self_.alloc)._field_i});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_11617_st, &__jule_any_type48); __jule_collection; }));
	(*((*_self_.alloc)._field_gotos))=jule::append((*(*(_self_))._field_gotos.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5d3b690_GotoSt>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _11617_st; __jule_collection; }));
}



inline void _1e5d4b2a4_checkPostfix(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cb3a35_AssignSt> _117133_a) {
	if (((*(_117133_a))._field_Left.len() > 1LL)) {
		_1e5d7e66c_pushErr((*(_self_))._field_s.ptr(), (*_117133_a.alloc)._field_Setter, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e5ca93bb_Expr> _11777_expr = (*((*(_117133_a))._field_Left[0LL]))._field_Expr;;
	jule::Ptr<_1e5e08c13_Data> _11787_d = _1e5e297a0_evalExpr(_1e5d870c0_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data0)), _11777_expr);;
	if ((_11787_d == nullptr)) {
		return;;
	};
	_1e5d37724_checkAssign(&((*_self_.alloc)._field_s), &(_11787_d), nullptr, (*_117133_a.alloc)._field_Setter);
	if ((_1e5e444bd_Ptr((*(_11787_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1e5e51c06_Ptr> _11868_ptr = _1e5e444bd_Ptr((*(_11787_d))._field_Kind);;
		if (_1e5e52773_IsUnsafe(_11868_ptr.ptr())) {
			_1e5d7e66c_pushErr((*(_self_))._field_s, (*_117133_a.alloc)._field_Setter, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_117133_a.alloc)._field_Setter))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1e5e41be6_Str((*(_11787_d))._field_Kind), &__jule_any_type4); __jule_collection; }));
			return;;
		};
	} else {
		if (((_1e5e43ea1_Prim((*(_11787_d))._field_Kind.ptr()) == nullptr) || (!(_1e21a3e07_IsNum((*(_1e5e43ea1_Prim((*(_11787_d))._field_Kind)))._field_Kind))))) {
			_1e5d7e66c_pushErr((*(_self_))._field_s, (*_117133_a.alloc)._field_Setter, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_117133_a.alloc)._field_Setter))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1e5e41be6_Str((*(_11787_d))._field_Kind), &__jule_any_type4); __jule_collection; }));
			return;;
		};
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::new_ptr<_1e5d3ba69_Postfix>(_1e5d3ba69_Postfix{._field_Expr=(*(_11787_d))._field_Model, ._field_Op=(*((*_117133_a.alloc)._field_Setter))._field_Kind}), &__jule_any_type49); __jule_collection; }));
}



inline jule::Bool _1e5d4b5e5_isNewAssignIdent(_1e5d40771_scopeChecker* _self_, jule::Str _120432_ident) {
	if ((_1e5c924b4_IsIgnoreIdent(_120432_ident) || (_120432_ident).empty())) {
		return false;;
	};
	return (_1e5e06947_defByIdent((*(_self_))._field_table.ptr(), &(_120432_ident), false) == nullptr);;
}



inline void _1e5d4b89d_removeInteriorMutRisk(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5e08c13_Data>* _121743_d) {
	jule::Ptr<_1e5cc8c7b_StructIns> _12183_s = _1e5e45524_Struct((*((*(_121743_d))))._field_Kind.ptr());;
	if ((_12183_s == nullptr)) {
		return;;
	};
	jule::Ptr<_1e5d40771_scopeChecker> _12223_root = _1e5d43dd4_getHardRoot(_self_);;
	if (((*((*(_12223_root))._field_owner))._field_Owner != _12183_s)) {
		return;;
	};
	(*((*(_121743_d))))._field_Mutable=true;
}



inline jule::Bool _1e5d4bd54_checkStructureAssignOp(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cc8c7b_StructIns>* _123144_s, jule::Ptr<_1e5cb3a35_AssignSt>* _123164_a, jule::Ptr<_1e5e08c13_Data>* _123183_r) {
	jule::Ptr<_1e5ce3416_FnIns> _123411_overload = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_123164_a))))._field_Setter))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1ca9e3043:;
			{
				_123411_overload=(*((*(_123144_s))))._field_Operators._field_AddAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_1ca9e2be1:;
			{
				_123411_overload=(*((*(_123144_s))))._field_Operators._field_SubAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1ca9e2c57:;
			{
				_123411_overload=(*((*(_123144_s))))._field_Operators._field_DivAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_1ca9e2cbd:;
			{
				_123411_overload=(*((*(_123144_s))))._field_Operators._field_MulAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1ca9e2d34:;
			{
				_123411_overload=(*((*(_123144_s))))._field_Operators._field_ModAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1ca9e2d9a:;
			{
				_123411_overload=(*((*(_123144_s))))._field_Operators._field_ShlAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1ca9e2e11:;
			{
				_123411_overload=(*((*(_123144_s))))._field_Operators._field_ShrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_1ca9e46b5:;
			{
				_123411_overload=(*((*(_123144_s))))._field_Operators._field_BitOrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_1ca9e472b:;
			{
				_123411_overload=(*((*(_123144_s))))._field_Operators._field_BitAndAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_1ca9e4792:;
			{
				_123411_overload=(*((*(_123144_s))))._field_Operators._field_BitXorAssign;
			}
		}
		else {
			_case_begin_1ca9e24c6:;
			{
				_1e5d7e66c_pushErr((*(_self_))._field_s.ptr(), (*((*(_123164_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_123164_a))))._field_Setter))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1e5cc9133_Str((*(_123144_s)).ptr()), &__jule_any_type4); __jule_collection; }));
				return false;;
			}
		}
		_match_end_1ca9e2b69:;
	};
	if ((_123411_overload == nullptr)) {
		_1e5d7e66c_pushErr((*(_self_))._field_s.ptr(), (*((*(_123164_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_123164_a))))._field_Setter))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1e5cc9133_Str((*(_123144_s)).ptr()), &__jule_any_type4); __jule_collection; }));
		return false;;
	};
	jule::Ptr<_1e5ce22b1_ParamIns> _12667_p = (*(_123411_overload))._field_Params[1LL];;
	return _1e5d876db_checkAssignType((*(_self_))._field_s, (*((*(_12667_p))._field_Decl))._field_Reference, &((*_12667_p.alloc)._field_Kind), _123183_r, (*((*(_123164_a))))._field_Setter, _1e5d4416a_getOwnerRefers(_self_));;
}



inline void _1e5d4c10c_checkSingleAssign(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cb3a35_AssignSt>* _127039_a) {
	jule::Ptr<_1e5e08c13_Data> _127111_l = nullptr;;
	if ((!(_1e5c924b4_IsIgnoreIdent((*((*((*(_127039_a))))._field_Left[0LL]))._field_Ident)))) {
		jule::Ptr<_1e5ca93bb_Expr> _12748_expr = (*((*((*(_127039_a))))._field_Left[0LL]))._field_Expr;;
		_127111_l=_1e5e297a0_evalExpr(_1e5d870c0_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data0)), _12748_expr);
		if ((_127111_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1e5e0a93a_eval> _12817_eval = static_cast<jule::Ptr<_1e5e0a93a_eval>>(nullptr);;
	if ((_127111_l != nullptr)) {
		_12817_eval=_1e5d86c7e_evalp((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data0), (*(_127111_l))._field_Kind);
	} else {
		_12817_eval=_1e5d870c0_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data0));
	};
	(*(_12817_eval))._field_unsafety=_1e5d42b5d_isUnsafe(_self_);
	jule::Ptr<_1e5e08c13_Data> _12887_r = _1e5e297a0_evalExpr(_12817_eval, (*((*(_127039_a))))._field_Right);;
	if ((_12887_r == nullptr)) {
		return;;
	};
	_1e5d4b89d_removeInteriorMutRisk(_self_, &(_12887_r));
	if ((_127111_l == nullptr)) {
		if (_1e5e42bb4_Void((*(_12887_r))._field_Kind.ptr())) {
			_1e5d7e66c_pushErr((*(_self_))._field_s, (*((*((*(_127039_a))))._field_Right))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		};
		if (((*((*((*(_127039_a))))._field_Setter))._field_Id != static_cast<jule::U64>(71LLU))) {
			_1e5d7e66c_pushErr((*(_self_))._field_s, (*((*(_127039_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		};
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_12887_r, &__jule_any_type31); __jule_collection; }));
		return;;
	};
	if ((!(_1e5d37724_checkAssign(&((*_self_.alloc)._field_s), &(_127111_l), _12887_r, (*((*(_127039_a))))._field_Setter)))) {
		return;;
	};
	if ((_1e5e45cc7_Tup((*(_12887_r))._field_Kind) != nullptr)) {
		_1e5d7e66c_pushErr((*(_self_))._field_s, (*((*(_127039_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("missing identifier(s) for multiple assignment", 45)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e5cd2856_OperandExprModel> _13157_lm = jule::new_ptr<_1e5cd2856_OperandExprModel>(_1e5cd2856_OperandExprModel{._field_Kind=(*(_127111_l))._field_Kind, ._field_Model=(*(_127111_l))._field_Model});;
	jule::Ptr<_1e5cd2856_OperandExprModel> _13197_rm = jule::new_ptr<_1e5cd2856_OperandExprModel>(_1e5cd2856_OperandExprModel{._field_Kind=(*(_12887_r))._field_Kind, ._field_Model=(*(_12887_r))._field_Model});;
	(*(*(_self_))._field_scope.alloc)._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::new_ptr<_1e5d3c020_Assign>(_1e5d3c020_Assign{._field_Left=_13157_lm, ._field_Right=_13197_rm, ._field_Op=(*((*(_127039_a))))._field_Setter}), &__jule_any_type50); __jule_collection; }));
	if (((*(*((*(_127039_a))))._field_Setter.alloc)._field_Id == static_cast<jule::U64>(71LLU))) {
		_1e5de2328_assignTypeChecker _13268_checker = _1e5de2328_assignTypeChecker{._field_s=(*_self_.alloc)._field_s, ._field_dest=(*(_127111_l))._field_Kind, ._field_d=_12887_r, ._field_errorToken=(*((*(_127039_a))))._field_Setter, ._field_refers=_1e5d4416a_getOwnerRefers(_self_)};;
		if (_1e5de3329_check(&_13268_checker)) {
			(*(_13197_rm))._field_Model=(*(_12887_r))._field_Model;
			(*(_13157_lm))._field_Model=(*(_127111_l))._field_Model;
		};
		return;;
	};
	jule::Ptr<_1e5cc8c7b_StructIns> _13397_strct = _1e5e45524_Struct((*(_127111_l))._field_Kind);;
	if ((_13397_strct != nullptr)) {
		_1e5d4bd54_checkStructureAssignOp(_self_, &(_13397_strct), _127039_a, &(_12887_r));
		return;;
	};
	jule::U64 _13443_id = (*(*((*(_127039_a))))._field_Setter.alloc)._field_Id;;
	(*(*((*(_127039_a))))._field_Setter.alloc)._field_Id=_1e5d52ec0_removeEqFromOp((*(*((*(_127039_a))))._field_Setter.alloc)._field_Id);
	_1e5e2bbc0_binaryEval _13467_solver = static__1e5e2c62c_new(_12817_eval, (*((*(_127039_a))))._field_Setter);;
	({
		jule::Ptr<_1e5e08c13_Data> ___jule_assign_arg = _127111_l;
		jule::Ptr<_1e5e08c13_Data> _1___jule_assign_arg = _12887_r;
		_13467_solver._field_l = ___jule_assign_arg;
		_13467_solver._field_r = _1___jule_assign_arg;
	});
	_1e5e3180c_evalOp(&_13467_solver);
	(*(*((*(_127039_a))))._field_Setter.alloc)._field_Id=_13443_id;
}



inline void _1e5d4c74a_processEndPartOfMultiAssign(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5d3c4c6_MultiAssign>* _135249_st, jule::Ptr<_1e5cb3a35_AssignSt>* _135272_a, jule::Ptr<_1e5cb34a2_AssignLeft>* _13538_lexpr, jule::Ptr<_1e5e08c13_Data>* _135333_l, jule::Ptr<_1e5e08c13_Data>* _135348_r, jule::Bool _135358_strict) {
	if (((!((*((*(_13538_lexpr))))._field_Reference)) && _1e5c924b4_IsIgnoreIdent((*((*(_13538_lexpr))))._field_Ident))) {
		if (_1e5e42bb4_Void((*((*(_135348_r))))._field_Kind.ptr())) {
			_1e5d7e66c_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_135272_a))))._field_Right))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		};
		{ jule::Slice<jule::Ptr<_1e5e08c13_Data>> &__jule_push_dest = (*((*(_135249_st))))._field_Left; __jule_push_dest.push(nullptr); };
		return;;
	};
	if ((*((*(_135272_a))))._field_Declarative) {
		{
			auto &_match_expr{ (*((*((*(_13538_lexpr))))._field_Expr))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type51) {
				_case_begin_1caa14d9a:;
				{
					if ((!(_1e5d4b5e5_isNewAssignIdent(_self_, (*((*(_13538_lexpr))))._field_Ident)))) {
						goto _julec_label_1caa2089a;
					};
				}
			}
			else {
				_case_begin_1caa14d34:;
				{
					if (((*((*(_13538_lexpr))))._field_Mutable || (*((*(_13538_lexpr))))._field_Reference)) {
						_1e5d7e66c_pushErr((*(_self_))._field_s, (*((*(_13538_lexpr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
						return;;
					};
					goto _julec_label_1caa2089a;
				}
			}
			_match_end_1caa14cbd:;
		};
		if (_1e5d4537a_isDuplicatedIdent(_self_, 0LLU, &((*((*(_13538_lexpr))))._field_Ident))) {
			_1e5d7e66c_pushErr((*(_self_))._field_s, (*((*(_13538_lexpr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_13538_lexpr))))._field_Ident, &__jule_any_type4); __jule_collection; }));
			_1e5d7e9d0_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
			_1e5d430e2_stop(_self_);
			return;;
		};
		if (_1e5c924b4_IsIgnoreIdent((*((*(_13538_lexpr))))._field_Ident)) {
			_1e5d7e66c_pushErr((*(_self_))._field_s, (*((*(_13538_lexpr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1e5da0bcc_Var> _13858_v = jule::new_ptr<_1e5da0bcc_Var>(_1e5da0bcc_Var{._field_Scope=(*_self_.alloc)._field_scope, ._field_Token=(*((*(_13538_lexpr))))._field_Token, ._field_Ident=(*((*(_13538_lexpr))))._field_Ident, ._field_Binded=false, ._field_Constant=false, ._field_Mutable=(*((*(_13538_lexpr))))._field_Mutable, ._field_Public=false, ._field_Used=false, ._field_Statically=false, ._field_Reference=(*((*(_13538_lexpr))))._field_Reference, ._field_Kind=jule::Ptr<_1e5e4900b_TypeSymbol>(nullptr), ._field_Value=jule::new_ptr<_1e5e09d8a_Value>(_1e5e09d8a_Value{._field_Expr=(*((*(_135272_a))))._field_Right, ._field_Data=(*(_135348_r))}), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1e5ca44a4_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1e5da0bcc_Var>>(nullptr)});;
		_1e5d96a80_checkVarValue((*(_self_))._field_s, &(_13858_v));
		{ jule::Slice<jule::Ptr<_1e5e08c13_Data>> &__jule_push_dest = (*((*(_135249_st))))._field_Left; __jule_push_dest.push(jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=(*((*_13858_v.alloc)._field_Kind))._field_Kind, ._field_Mutable=(*_13858_v.alloc)._field_Mutable, ._field_Reference=(*_13858_v.alloc)._field_Reference, ._field_Lvalue=(!((*(_13858_v))._field_Constant)), ._field_IsRune=false, ._field_Model=jule::Any(_13858_v, &__jule_any_type8), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)})); };
		{ jule::Slice<jule::Ptr<_1e5da0bcc_Var>> &__jule_push_dest = (*((*(_135249_st))))._field_Decls; __jule_push_dest.push(_13858_v); };
		(*((*_self_.alloc)._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5da0bcc_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _13858_v; __jule_collection; }));
		return;;
	};
	_julec_label_1caa2089a:;
	if (((*((*(_13538_lexpr))))._field_Mutable || (*((*(_13538_lexpr))))._field_Reference)) {
		_1e5d7e66c_pushErr((*(_self_))._field_s, (*((*(_13538_lexpr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_13538_lexpr))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1e5d7e9d0_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	if ((!(_1e5d37724_checkAssign(&((*_self_.alloc)._field_s), _135333_l, (*(_135348_r)), (*((*(_13538_lexpr))))._field_Token)))) {
		return;;
	};
	jule::Bool _14207_reference = false;;
	if (_1e5d8be71_checkValidityForInitExpr((*(_self_))._field_s, (*((*(_135333_l))))._field_Mutable, _14207_reference, &((*((*(_135333_l))))._field_Kind), _135348_r, &((*((*(_13538_lexpr))))._field_Token))) {
		_14207_reference=_135358_strict;
		_1e5d876db_checkAssignType((*(_self_))._field_s, _14207_reference, &((*((*(_135333_l))))._field_Kind), _135348_r, (*((*(_13538_lexpr))))._field_Token, _1e5d4416a_getOwnerRefers(_self_));
	};
	{ jule::Slice<jule::Ptr<_1e5e08c13_Data>> &__jule_push_dest = (*((*(_135249_st))))._field_Left; __jule_push_dest.push((*(_135333_l))); };
}



inline void _1e5d4ca03_checkMultiAssign(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cb3a35_AssignSt>* _142838_a) {
	if ((((*((*((*(_142838_a))))._field_Setter))._field_Id != static_cast<jule::U64>(71LLU)) && ((*(*((*(_142838_a))))._field_Setter.alloc)._field_Id != static_cast<jule::U64>(38LLU)))) {
		_1e5d7e66c_pushErr((*(_self_))._field_s.ptr(), (*((*(_142838_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e5e08c13_Data> _14337_rd = _1e5e297a0_evalExpr(_1e5d870c0_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data0)), (*((*(_142838_a))))._field_Right);;
	if ((_14337_rd == nullptr)) {
		return;;
	};
	jule::Bool _14377_strict = false;;
	jule::Slice<jule::Ptr<_1e5e08c13_Data>> _14387_right = _1e5d369ba_getDatasFromTupleData(&(_14337_rd));;
	if ((_14387_right.len() == 1LL)) {
		{
			auto &_match_expr{ (*(_14387_right[0LL]))._field_Model };
			
			if (_match_expr.type == &__jule_any_type52) {
				_case_begin_1caa2aca1:;
				{
					jule::Ptr<_1e5cd56b1_IndexingExprModel> _14429_iem = (*(_14387_right[0LL]))._field_Model.unsafe_cast_ptr<_1e5cd56b1_IndexingExprModel>();;
					if ((_1e5e45a41_Map((*((*(_14429_iem))._field_Expr))._field_Kind.ptr()) != nullptr)) {
						_14377_strict=true;
						_14387_right=({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5e08c13_Data>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=(*(_1e5e45a41_Map((*((*(_14429_iem))._field_Expr))._field_Kind)))._field_Val, ._field_Mutable=(*(_14387_right[0LL]))._field_Mutable, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)}); (*it++) = jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=_1e6026b88_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)}); __jule_collection; });
					};
				}
			}
			_match_end_1caa2abe6:;
		};
	};
	{
		
		if (((*((*(_142838_a))))._field_Left.len() > _14387_right.len())) {
			_case_begin_1caa2b5cb:;
			{
				_1e5d7e66c_pushErr((*(_self_))._field_s, (*((*(_142838_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("overflow multi assignment identifers", 36)), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (((*((*(_142838_a))))._field_Left.len() < _14387_right.len())) {
			_case_begin_1caa2b642:;
			{
				_1e5d7e66c_pushErr((*(_self_))._field_s, (*((*(_142838_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("missing identifier(s) for multiple assignment", 45)), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1caa2b532:;
	};
	jule::Ptr<_1e5d3c4c6_MultiAssign> _14627_st = jule::new_ptr<_1e5d3c4c6_MultiAssign>(_1e5d3c4c6_MultiAssign{._field_Decls=jule::Slice<jule::Ptr<_1e5da0bcc_Var>>(nullptr), ._field_Left=jule::Slice<jule::Ptr<_1e5e08c13_Data>>(nullptr), ._field_Right=(*(_14337_rd))._field_Model});;
	{
		auto expr = &((*((*(_142838_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1caa3434d:;
		if (it != expr_end) {
			jule::I64 _14657_i = it - expr->begin();
			{
				jule::Ptr<_1e5cb34a2_AssignLeft> _14668_lexpr = (*((*(_142838_a))))._field_Left[_14657_i];;
				jule::Ptr<_1e5e08c13_Data> _146712_l = nullptr;;
				if ((!(_1e5c924b4_IsIgnoreIdent((*(_14668_lexpr))._field_Ident)))) {
					if ((!((*((*(_142838_a))))._field_Declarative))) {
						goto _julec_label_1caa35ae1;
					};
					if (((*_14668_lexpr.alloc)._field_Mutable && (*_14668_lexpr.alloc)._field_Reference)) {
						goto _julec_label_1caa388e6;
					};
					{
						auto &_match_expr{ (*((*(_14668_lexpr))._field_Expr))._field_Kind };
						
						if (_match_expr.type == &__jule_any_type51) {
							_case_begin_1caa36d01:;
							{
								if (_1e5d4b5e5_isNewAssignIdent(_self_, (*_14668_lexpr.alloc)._field_Ident)) {
									goto _julec_label_1caa388e6;
								};
							}
						}
						_match_end_1caa36c79:;
					};
					_julec_label_1caa35ae1:;
					_146712_l=_1e5e297a0_evalExpr(_1e5d870c0_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data0)), (*_14668_lexpr.alloc)._field_Expr);
					if ((_146712_l == nullptr)) {
						goto _iter_next_1caa3434d;
					};
					_julec_label_1caa388e6:;
				};
				jule::Ptr<_1e5e08c13_Data> _14888_r = _14387_right[_14657_i];;
				_1e5d4b89d_removeInteriorMutRisk(_self_, &(_14888_r));
				_1e5d4c74a_processEndPartOfMultiAssign(_self_, &(_14627_st), _142838_a, &(_14668_lexpr), &(_146712_l), &(_14888_r), _14377_strict);
			}
			_iter_next_1caa3434d:;
			++it;
			_14657_i++;
			goto _iter_begin_1caa3434d;
		}
		_iter_end_1caa3434d:;
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_14627_st, &__jule_any_type53); __jule_collection; }));
}



inline void _1e5d4ccab_checkAssignSt(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cb3a35_AssignSt> _149534_a) {
	{
		
		if (_1e5c9465e_IsPostfixOp((*((*(_149534_a))._field_Setter))._field_Id)) {
			_case_begin_1caa3a794:;
			{
				_1e5d4b2a4_checkPostfix(_self_, _149534_a);
			}
		}
		else if (((*(_149534_a))._field_Left.len() == 1LL)) {
			_case_begin_1caa3a442:;
			{
				_1e5d4c10c_checkSingleAssign(_self_, &(_149534_a));
			}
		}
		else {
			_case_begin_1caa3a3cb:;
			{
				_1e5d4ca03_checkMultiAssign(_self_, &(_149534_a));
			}
		}
		_match_end_1caa3a2dd:;
	};
}



inline jule::Ptr<_1e5d384d3_Scope> _1e5d4d1a7_checkCaseScope(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5d3d73b_Case>* _150632_c, jule::Ptr<_1e5cb50a8_ScopeTree>* _150647_tree) {
	jule::Ptr<_1e5d40771_scopeChecker> _15077_ssc = _1e5d52b7e_newChildChecker(_self_);;
	(*(_15077_ssc))._field_cse=static_cast<jule::Uintptr>((*(_150632_c)));
	return _1e5d46744_checkChildSc(_self_, _150647_tree, &(_15077_ssc));;
}



inline jule::Ptr<_1e5d3d73b_Case> _1e5d4d718_checkCase(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5d3cc13_Match> _151230_m, jule::I64 _151241_i, jule::Ptr<_1e5cbc05a_Case> _151253_c, jule::Ptr<_1e5e08c13_Data> _151272_expr) {
	jule::Ptr<_1e5d3d73b_Case> _15137_case = (*(_151230_m))._field_Cases[_151241_i];;
	(*(_15137_case))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5e08c13_Data>>::alloc(0LL, (*(_151253_c))._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1e5e08c13_Data>(nullptr); __jule_collection; });
	jule::Bool _15157_constMatched = false;;
	jule::Ptr<_1e5e0a93a_eval> _15167_eval = _1e5d870c0_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data0));;
	{
		auto expr = &((*_151253_c.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1caa4103b:;
		if (it != expr_end) {
			jule::Ptr<_1e5ca93bb_Expr> _151715_e = *it;
			{
				jule::Ptr<_1e5e08c13_Data> _15188_d = _1e5e2898b_evalExprKind(_15167_eval, (*(_151715_e))._field_Kind);;
				if ((_15188_d == nullptr)) {
					goto _iter_next_1caa4103b;
				};
				if ((*_151230_m.alloc)._field_TypeMatch) {
					(*_15137_case.alloc)._field_Exprs=jule::append((*_15137_case.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5e08c13_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _15188_d; __jule_collection; }));
					if ((_1e5d53b08_countMatchType(&(_151230_m), &((*(_15188_d))._field_Kind)) > 1LL)) {
						_1e5d7e66c_pushErr((*(_self_))._field_s, (*_151715_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("duplicated pattern: type @ is already matched", 45)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*(_15188_d))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
					};
					if ((*_151230_m.alloc)._field_Comptime) {
						_15157_constMatched=(_15157_constMatched || _1e5e42037_Equal((*(_151272_expr))._field_Kind, (*(_15188_d))._field_Kind));
					} else {
						if ((_1e5e449da_TypeEnum((*(_151272_expr))._field_Kind) != nullptr)) {
							_1e5d88148_checkTypeCompatibility((*(_self_))._field_s, &((*(_151272_expr))._field_Kind), &((*(_15188_d))._field_Kind), &((*_151715_e.alloc)._field_Token));
						} else {
							jule::Ptr<_1e5d03db6_Trait> _15377_trt = _1e5e457aa_Trait((*(_151272_expr))._field_Kind);;
							if ((_15377_trt != nullptr)) {
								_1e5d88148_checkTypeCompatibility((*(_self_))._field_s, &((*(_151272_expr))._field_Kind), &((*(_15188_d))._field_Kind), &((*_151715_e.alloc)._field_Token));
							};
						};
					};
					_1e5e352d3_applyRuntimeToStr(&((*_self_.alloc)._field_s), &((*(_15188_d))._field_Kind), &((*((*_151230_m.alloc)._field_Expr))._field_Kind), &((*_151715_e.alloc)._field_Token), _1e5d4416a_getOwnerRefers(_self_));
					goto _iter_next_1caa4103b;
				};
				if ((*(_15188_d))._field_Decl) {
					_1e5d7e66c_pushErr((*(_self_))._field_s, (*_151715_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("expecting expression, found type declaration", 44)), jule::Slice<jule::Any>());
					_1e5d7e9d0_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("you can use type-match if you want to match types", 49)), jule::Slice<jule::Any>());
					goto _iter_next_1caa4103b;
				};
				if ((*_151230_m.alloc)._field_Comptime) {
					if (((!(_1e5e0964d_IsConst(_15188_d.ptr()))) && (_1e5e47867_comptimeTypeInfo((*(_15188_d))._field_Kind) == nullptr))) {
						_1e5d7e66c_pushErr((*(_self_))._field_s, (*_151715_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
						_1e5d7e9d0_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("comptime-matching requires constant expression", 46)), jule::Slice<jule::Any>());
						goto _iter_next_1caa4103b;
					};
					if ((!(_15157_constMatched))) {
						if (_1e5e0964d_IsConst(_15188_d.ptr())) {
							_15157_constMatched=(_1e5e0964d_IsConst(_151272_expr.ptr()) && _1e21aa084_Eq((*(_15188_d))._field_Constant.ptr(), (*((*(_151272_expr))._field_Constant))));
						} else {
							jule::Ptr<_1e5d1a608_comptimeTypeInfo> _15637_exprCti = _1e5e47867_comptimeTypeInfo((*(_151272_expr))._field_Kind);;
							_15157_constMatched=((_15637_exprCti != nullptr) && _1e5e42037_Equal((*(_1e5e47867_comptimeTypeInfo((*(_15188_d))._field_Kind)))._field_base, (*_15637_exprCti.alloc)._field_base));
						};
					};
				};
				(*_15137_case.alloc)._field_Exprs=jule::append((*_15137_case.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5e08c13_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _15188_d; __jule_collection; }));
				if ((((!((*_151230_m.alloc)._field_Comptime)) || (_1e5e47867_comptimeTypeInfo((*(_151272_expr))._field_Kind) == nullptr)) || (_1e5e47867_comptimeTypeInfo((*(_15188_d))._field_Kind) == nullptr))) {
					_1e5de2328_assignTypeChecker _15739_checker = _1e5de2328_assignTypeChecker{._field_s=(*_self_.alloc)._field_s, ._field_dest=(*(_151272_expr))._field_Kind, ._field_d=_15188_d, ._field_errorToken=(*_151715_e.alloc)._field_Token, ._field_refers=_1e5d4416a_getOwnerRefers(_self_)};;
					_1e5de3329_check(&_15739_checker);
				};
			}
			_iter_next_1caa4103b:;
			++it;
			goto _iter_begin_1caa4103b;
		}
		_iter_end_1caa4103b:;
	};
	if (((!((*_151230_m.alloc)._field_Comptime)) || _15157_constMatched)) {
		(*_15137_case.alloc)._field_Scope=_1e5d4d1a7_checkCaseScope(_self_, &(_15137_case), &((*_151253_c.alloc)._field_Scope));
	};
	return _15137_case;;
}



inline void _1e5d4db36_checkCases(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cbc874_MatchCase>* _158932_m, jule::Ptr<_1e5d3cc13_Match> _158951_rm, jule::Ptr<_1e5e08c13_Data> _158967_expr) {
	(*(_158951_rm))._field_Cases=({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5d3d73b_Case>>::alloc(0LL, (*((*(_158932_m))))._field_Cases.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1e5d3d73b_Case>(nullptr); __jule_collection; });
	{
		auto expr = &((*((*(_158932_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1caa54e95:;
		if (it != expr_end) {
			jule::I64 _15917_i = it - expr->begin();
			{
				jule::Ptr<_1e5d3d73b_Case> _15928_case = jule::new_ptr<_1e5d3d73b_Case>(_1e5d3d73b_Case{._field_Owner=_158951_rm, ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Exprs=jule::Slice<jule::Ptr<_1e5e08c13_Data>>(nullptr), ._field_Next=jule::Ptr<_1e5d3d73b_Case>(nullptr)});;
				if ((_15917_i > 0LL)) {
					(*((*_158951_rm.alloc)._field_Cases[(_15917_i - 1LL)]))._field_Next=_15928_case;
				};
				(*_158951_rm.alloc)._field_Cases=jule::append((*_158951_rm.alloc)._field_Cases,({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5d3d73b_Case>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _15928_case; __jule_collection; }));
			}
			_iter_next_1caa54e95:;
			++it;
			_15917_i++;
			goto _iter_begin_1caa54e95;
		}
		_iter_end_1caa54e95:;
	};
	if ((((*_158951_rm.alloc)._field_Default != nullptr) && ((*((*(_158932_m))))._field_Cases.len() > 0LL))) {
		(*((*_158951_rm.alloc)._field_Cases[((*_158951_rm.alloc)._field_Cases.len() - 1LL)]))._field_Next=(*_158951_rm.alloc)._field_Default;
	};
	{
		auto expr = &((*((*(_158932_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1caa584d7:;
		if (it != expr_end) {
			jule::I64 _16058_i = it - expr->begin();
			jule::Ptr<_1e5cbc05a_Case> _160515_c = *it;
			{
				_1e5d4d718_checkCase(_self_, _158951_rm, _16058_i, _160515_c, _158967_expr);
			}
			_iter_next_1caa584d7:;
			++it;
			_16058_i++;
			goto _iter_begin_1caa584d7;
		}
		_iter_end_1caa584d7:;
	};
}



inline jule::Ptr<_1e5d3d73b_Case> _1e5d4e032_checkDefault(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5d3cc13_Match> _161033_m, jule::Ptr<_1e5cbadb1_Else> _161048_d) {
	jule::Ptr<_1e5d3d73b_Case> _16117_def = jule::new_ptr<_1e5d3d73b_Case>(_1e5d3d73b_Case{._field_Owner=_161033_m, ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Exprs=jule::Slice<jule::Ptr<_1e5e08c13_Data>>(nullptr), ._field_Next=jule::Ptr<_1e5d3d73b_Case>(nullptr)});;
	(*(_16117_def))._field_Scope=_1e5d4d1a7_checkCaseScope(_self_, &(_16117_def), &((*(_161048_d))._field_Scope));
	return _16117_def;;
}



inline void _1e5d4e395_checkComptimePanic(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5c8eacc_Token> _161839_callToken, jule::Ptr<_1e5d384d3_Scope>* _161859_s) {
	if (((*((*(_161859_s))))._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _16223_stmt = (*((*(_161859_s))))._field_Stmts[0LL];;
	{
		auto &_match_expr{ _16223_stmt };
		
		if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1caa5bbd3:;
			{
				jule::Ptr<_1e5e08c13_Data> _16254_d = _16223_stmt.unsafe_cast_ptr<_1e5e08c13_Data>();;
				{
					auto &_match_expr{ (*(_16254_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type36) {
						_case_begin_1caa5cbb2:;
						{
							jule::Ptr<_1e5cd9495_BuiltinPanicCallExprModel> _16289_m = (*(_16254_d))._field_Model.unsafe_cast_ptr<_1e5cd9495_BuiltinPanicCallExprModel>();;
							{
								auto &_match_expr{ (*(_16289_m))._field_Expr };
								
								if (_match_expr.type == &__jule_any_type20) {
									_case_begin_1caa5dd7d:;
									{
										jule::Ptr<_1e21a449b_Const> _16316_c = (*(_16289_m))._field_Expr.unsafe_cast_ptr<_1e21a449b_Const>();;
										if ((!(_1e21a8c53_IsStr(_16316_c.ptr())))) {
											goto _match_end_1caa5dd06;
										};
										if ((_161839_callToken == nullptr)) {
											jule::Ptr<_1e5d40771_scopeChecker> _163611_root = _1e5d43dd4_getHardRoot(_self_);;
											if (((*(_163611_root))._field_calledFrom == nullptr)) {
												_161839_callToken=(*(_16289_m))._field_Token;
											} else {
												_161839_callToken=(*(_163611_root))._field_calledFrom;
											};
										};
										_1e5d7e66c_pushErr((*_self_.alloc)._field_s.ptr(), _161839_callToken, static_cast<jule::Str>(jule::Str::lit("compile-time panic: @", 21)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e21a6657_ReadStr(_16316_c), &__jule_any_type4); __jule_collection; }));
										_1e5d430e2_stop(_self_);
									}
								}
								_match_end_1caa5dd06:;
							};
						}
					}
					_match_end_1caa5cb4b:;
				};
			}
		}
		_match_end_1caa5b221:;
	};
}



inline void _1e5d4e708_processConstMatch(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5d3cc13_Match>* _165039_tm, jule::Ptr<_1e5cbc874_MatchCase>* _165056_m) {
	{
		auto expr = &((*((*(_165039_tm))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1caa5e301:;
		if (it != expr_end) {
			jule::I64 _16518_i = it - expr->begin();
			jule::Ptr<_1e5d3d73b_Case> _165115_c = *it;
			{
				if (((*(_165115_c))._field_Scope != nullptr)) {
					jule::Ptr<_1e5c8eacc_Token> _165313_token = nullptr;;
					if (((!((*((*(_165039_tm))))._field_TypeMatch)) && ((*(*(_165115_c))._field_Scope.alloc)._field_Stmts.len() > 0LL))) {
						_165313_token=(*((*((*((*(_165056_m))))._field_Cases[_16518_i]))._field_Scope))._field_Stmts[0LL]._field_Token;
					};
					_1e5d4e395_checkComptimePanic(_self_, _165313_token, &((*_165115_c.alloc)._field_Scope));
					(*((*(_165039_tm))))._field_Default=_165115_c;
					(*((*(_165039_tm))))._field_Cases=nullptr;
					return;;
				};
			}
			_iter_next_1caa5e301:;
			++it;
			_16518_i++;
			goto _iter_begin_1caa5e301;
		}
		_iter_end_1caa5e301:;
	};
	if (((*((*(_165056_m))))._field_Default != nullptr)) {
		(*((*(_165039_tm))))._field_Cases=nullptr;
		(*((*(_165039_tm))))._field_Default=_1e5d4e032_checkDefault(_self_, (*(_165039_tm)), (*((*(_165056_m))))._field_Default);
		if (((*((*(_165039_tm))))._field_Default != nullptr)) {
			jule::Ptr<_1e5c8eacc_Token> _166713_token = nullptr;;
			if ((!((*((*(_165039_tm))))._field_TypeMatch))) {
				_166713_token=(*((*((*((*(_165056_m))))._field_Default))._field_Scope))._field_Stmts[0LL]._field_Token;
			};
			_1e5d4e395_checkComptimePanic(_self_, _166713_token, &((*(*((*(_165039_tm))))._field_Default.alloc)._field_Scope));
		};
	} else {
		(*((*(_165039_tm))))._field_Cases=nullptr;
	};
}



inline void _1e5d4e9b1_checkTypeMatch(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cbc874_MatchCase>* _167936_m) {
	jule::Ptr<_1e5e08c13_Data> _16807_d = _1e5e28ccc_eval1(_1e5d870c0_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data0)), (*((*(_167936_m))))._field_Expr);;
	if ((_16807_d == nullptr)) {
		return;;
	};
	if ((*((*(_167936_m))))._field_Comptime) {
		jule::Ptr<_1e5d1a608_comptimeTypeInfo> _16868_cti = _1e5e47867_comptimeTypeInfo((*(_16807_d))._field_Kind.ptr());;
		if ((_16868_cti == nullptr)) {
			if ((!((*(_16807_d))._field_Decl))) {
				_1e5d7e66c_pushErr((*(_self_))._field_s, (*((*((*(_167936_m))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime type-match expressions can take only type declarations", 63)), jule::Slice<jule::Any>());
				return;;
			};
		} else {
			(*(_16807_d))._field_Kind=(*(_16868_cti))._field_base;
		};
	} else if (((*(_16807_d))._field_Decl || (!(((((_1e5e43ea1_Prim((*(_16807_d))._field_Kind.ptr()) != nullptr) && _1e5e4d164_IsAny(_1e5e43ea1_Prim((*(_16807_d))._field_Kind).ptr())) || (_1e5e457aa_Trait((*(_16807_d))._field_Kind) != nullptr)) || (_1e5e449da_TypeEnum((*(_16807_d))._field_Kind) != nullptr)))))) {
		_1e5d7e66c_pushErr((*(_self_))._field_s, (*((*((*(_167936_m))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e5d3cc13_Match> _17007_tm = jule::new_ptr<_1e5d3cc13_Match>(_1e5d3cc13_Match{._field_Scope=(*_self_.alloc)._field_scope, ._field_Expr=_16807_d, ._field_TypeMatch=true, ._field_Comptime=(*((*(_167936_m))))._field_Comptime, ._field_Cases=jule::Slice<jule::Ptr<_1e5d3d73b_Case>>(nullptr), ._field_Default=jule::Ptr<_1e5d3d73b_Case>(nullptr)});;
	if (((!((*(_17007_tm))._field_Comptime)) && ((*((*(_167936_m))))._field_Default != nullptr))) {
		(*_17007_tm.alloc)._field_Default=_1e5d4e032_checkDefault(_self_, _17007_tm, (*((*(_167936_m))))._field_Default);
	};
	_1e5d4db36_checkCases(_self_, _167936_m, _17007_tm, _16807_d);
	if ((*_17007_tm.alloc)._field_Comptime) {
		_1e5d4e708_processConstMatch(_self_, &(_17007_tm), _167936_m);
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_17007_tm, &__jule_any_type54); __jule_collection; }));
}



inline void _1e5d4ec69_checkCommonMatch(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cbc874_MatchCase>* _172238_m) {
	jule::Ptr<_1e5e08c13_Data> _172311_d = nullptr;;
	if (((*((*(_172238_m))))._field_Expr == nullptr)) {
		_172311_d=jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=_1e6026b88_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1e21a4ea2_NewBool(true)});
		(*(_172311_d))._field_Model=jule::Any((*_172311_d.alloc)._field_Constant, &__jule_any_type20);
	} else {
		_172311_d=_1e5e2945e_evalExpr1(_1e5d870c0_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data0)), (*((*(_172238_m))))._field_Expr);
		if ((_172311_d == nullptr)) {
			return;;
		};
	};
	if ((*((*(_172238_m))))._field_Comptime) {
		if ((!(_1e5d534ba_canComptimeMatch(&(_172311_d))))) {
			_1e5d7e66c_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_172238_m))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
			_1e5d7e9d0_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("comptime-matching requires constant expression", 46)), jule::Slice<jule::Any>());
			return;;
		};
	} else if (_1e5e4605d_comptime((*(_172311_d))._field_Kind.ptr())) {
		_1e5d7e66c_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_172238_m))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		_1e5d7e9d0_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("comptime-matching requires constant expression", 46)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e5d3cc13_Match> _17497_mc = jule::new_ptr<_1e5d3cc13_Match>(_1e5d3cc13_Match{._field_Scope=(*(_self_))._field_scope, ._field_Expr=_172311_d, ._field_TypeMatch=false, ._field_Comptime=(*((*(_172238_m))))._field_Comptime, ._field_Cases=jule::Slice<jule::Ptr<_1e5d3d73b_Case>>(nullptr), ._field_Default=jule::Ptr<_1e5d3d73b_Case>(nullptr)});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_17497_mc, &__jule_any_type54); __jule_collection; }));
	if (((!((*(_17497_mc))._field_Comptime)) && ((*((*(_172238_m))))._field_Default != nullptr))) {
		(*_17497_mc.alloc)._field_Default=_1e5d4e032_checkDefault(_self_, _17497_mc, (*((*(_172238_m))))._field_Default);
	};
	_1e5d4db36_checkCases(_self_, _172238_m, _17497_mc, _172311_d);
	if ((*_17497_mc.alloc)._field_Comptime) {
		_1e5d4e708_processConstMatch(_self_, &(_17497_mc), _172238_m);
	};
}



inline void _1e5d50022_checkMatch(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cbc874_MatchCase> _177331_m) {
	if ((*(_177331_m))._field_TypeMatch) {
		_1e5d4e9b1_checkTypeMatch(_self_, &(_177331_m));
		return;;
	};
	_1e5d4ec69_checkCommonMatch(_self_, &(_177331_m));
}



inline void _1e5d502ca_checkFall(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cb2d42_FallSt> _178126_f) {
	if (((((*(_self_))._field_cse == 0LLU) || (((*((*_self_.alloc)._field_scope))._field_Stmts.len() + 1LL) < (*(*(_self_))._field_scope.alloc)._field_Stmts.len())) || _1e5d4360e_isDeferred(_self_))) {
		_1e5d7e66c_pushErr((*_self_.alloc)._field_s.ptr(), (*(_178126_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("fall keyword can only useable at end of the case scopes", 55)), jule::Slice<jule::Any>());
		return;;
	};
	_1e5d3d73b_Case* _17897_case = ((_1e5d3d73b_Case*)((*_self_.alloc)._field_cse));;
	if ((*((*(_17897_case))._field_Owner))._field_Comptime) {
		_1e5d7e66c_pushErr((*(_self_))._field_s, (*_178126_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("the fall statement is not allowed for comptime-matching", 55)), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_17897_case))._field_Next == nullptr)) {
		_1e5d7e66c_pushErr((*(_self_))._field_s, (*_178126_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("fall cannot useable at final case", 33)), jule::Slice<jule::Any>());
		_1e5d7e9d0_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("remove \"fall\" keyword", 21)), jule::Slice<jule::Any>());
		return;;
	};
	(*(*(_self_))._field_scope.alloc)._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::new_ptr<_1e5d3de34_FallSt>(_1e5d3de34_FallSt{._field_DestCase=static_cast<jule::Uintptr>((*(_17897_case))._field_Next)}), &__jule_any_type55); __jule_collection; }));
}



inline jule::Ptr<_1e5d3aa79_BreakSt> _1e5d5061b_checkBreakWithLabel(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cba157_BreakSt> _180436_b) {
	jule::Ptr<_1e5d3aa79_BreakSt> _18057_brk = _1e5d5095c_checkPlainBreak(_self_, _180436_b);;
	if ((_18057_brk == nullptr)) {
		return nullptr;;
	};
	(*(_18057_brk))._field_It=0LLU;
	(*(_18057_brk))._field_Mtch=0LLU;
	jule::Ptr<_1e5d3e781_scopeLabel> _18157_label = _1e5d36679_findLabelParent(&((*((*(_180436_b))._field_Label))._field_Kind), (*_self_.alloc)._field_parent);;
	if ((_18157_label == nullptr)) {
		_1e5d7e66c_pushErr((*_self_.alloc)._field_s.ptr(), (*_180436_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("not exist any label in this identifier: @", 41)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_180436_b))._field_Label.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	(*(_18157_label))._field_used=true;
	if ((((*((*(_18157_label))._field_node))._field_Index + 1LL) >= (*((*(*(_18157_label))._field_node.alloc)._field_Scope))._field_Stmts.len())) {
		_1e5d7e66c_pushErr((*(_self_))._field_s, (*_180436_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_180436_b))._field_Label.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::I64 _18283_i = ((*(*(_18157_label))._field_node.alloc)._field_Index + 1LL);;
	if ((_18283_i >= (*(*((*(_18157_label))._field_node))._field_Scope.alloc)._field_Stmts.len())) {
		_1e5d7e66c_pushErr((*(_self_))._field_s, (*_180436_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_180436_b))._field_Label.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	} else {
		jule::Any _18328_st = (*(*((*(_18157_label))._field_node))._field_Scope.alloc)._field_Stmts[_18283_i];;
		{
			auto &_match_expr{ _18328_st };
			
			if (_match_expr.type == &__jule_any_type42) {
				_case_begin_1caa96a86:;
				{
					(*(_18057_brk))._field_It=static_cast<jule::Uintptr>(_18328_st.unsafe_cast_ptr<_1e5d39418_InfIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type46) {
				_case_begin_1caa95700:;
				{
					(*(_18057_brk))._field_It=static_cast<jule::Uintptr>(_18328_st.unsafe_cast_ptr<_1e5d3a31a_RangeIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type44) {
				_case_begin_1caa958dc:;
				{
					(*(_18057_brk))._field_It=static_cast<jule::Uintptr>(_18328_st.unsafe_cast_ptr<_1e5d398be_WhileIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type54) {
				_case_begin_1caa95953:;
				{
					(*(_18057_brk))._field_Mtch=static_cast<jule::Uintptr>(_18328_st.unsafe_cast_ptr<_1e5d3cc13_Match>());
				}
			}
			else {
				_case_begin_1caa95876:;
				{
					_1e5d7e66c_pushErr((*(_self_))._field_s, (*_180436_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_180436_b))._field_Label.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
				}
			}
			_match_end_1caa95810:;
		};
	};
	if (((*(_18057_brk))._field_It != 0LLU)) {
		if ((!(_1e5d4a391_checkValidBreakLabel(_self_, (*(_18057_brk))._field_It)))) {
			_1e5d7e66c_pushErr((*(_self_))._field_s, (*_180436_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_180436_b))._field_Label.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		};
	};
	if (((*(_18057_brk))._field_Mtch != 0LLU)) {
		if ((!(_1e5d4a391_checkValidBreakLabel(_self_, (*(_18057_brk))._field_Mtch)))) {
			_1e5d7e66c_pushErr((*(_self_))._field_s, (*_180436_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_180436_b))._field_Label.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		};
	};
	return _18057_brk;;
}



inline jule::Ptr<_1e5d3aa79_BreakSt> _1e5d5095c_checkPlainBreak(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cba157_BreakSt> _186232_b) {
	if (_1e5d4360e_isDeferred(_self_)) {
		_1e5d7e66c_pushErr((*_self_.alloc)._field_s.ptr(), (*(_186232_b))._field_Token, static_cast<jule::Str>(jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1e5d40771_scopeChecker> _18687_scope = _self_;;
	_julec_label_1caa9d285:;
	{
		
		if ((((((*_18687_scope.alloc)._field_it == 0LLU) && ((*_18687_scope.alloc)._field_cse == 0LLU)) && ((*_18687_scope.alloc)._field_parent != nullptr)) && ((*_18687_scope.alloc)._field_owner == nullptr))) {
			_case_begin_1caa9e462:;
			{
				_18687_scope=(*_18687_scope.alloc)._field_parent;
				goto _julec_label_1caa9d285;
			}
		}
		else if (((*_18687_scope.alloc)._field_it != 0LLU)) {
			_case_begin_1caa9e4ea:;
			{
				return jule::new_ptr<_1e5d3aa79_BreakSt>(_1e5d3aa79_BreakSt{._field_It=(*_18687_scope.alloc)._field_it, ._field_Mtch=0});;
			}
		}
		else if (((*_18687_scope.alloc)._field_cse != 0LLU)) {
			_case_begin_1caa9e561:;
			{
				return jule::new_ptr<_1e5d3aa79_BreakSt>(_1e5d3aa79_BreakSt{._field_It=0, ._field_Mtch=static_cast<jule::Uintptr>((*(((_1e5d3d73b_Case*)((*_18687_scope.alloc)._field_cse))))._field_Owner)});;
			}
		}
		_match_end_1caa9e363:;
	};
	_1e5d7e66c_pushErr((*(_self_))._field_s, (*_186232_b.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1e5d50c15_checkBreak(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cba157_BreakSt> _188427_b) {
	if (((*(_188427_b))._field_Label != nullptr)) {
		jule::Ptr<_1e5d3aa79_BreakSt> _18868_brk = _1e5d5061b_checkBreakWithLabel(_self_, _188427_b);;
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_18868_brk, &__jule_any_type56); __jule_collection; }));
		return;;
	};
	jule::Ptr<_1e5d3aa79_BreakSt> _18917_brk = _1e5d5095c_checkPlainBreak(_self_, _188427_b);;
	(*(*(_self_))._field_scope.alloc)._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_18917_brk, &__jule_any_type56); __jule_collection; }));
}



inline void _1e5d50ebd_checkRet(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cb82cb_RetSt> _189529_r) {
	if (_1e5d4360e_isDeferred(_self_)) {
		_1e5d7e66c_pushErr((*_self_.alloc)._field_s.ptr(), (*(_189529_r))._field_Token, static_cast<jule::Str>(jule::Str::lit("deferred scopes are not supports return statements", 50)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e5d3e2ca_RetSt> _19007_rt = jule::new_ptr<_1e5d3e2ca_RetSt>(_1e5d3e2ca_RetSt{._field_Func=(*(_1e5d43b4d_getRoot(_self_)))._field_owner, ._field_Expr=jule::Any(nullptr)});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_19007_rt, &__jule_any_type57); __jule_collection; }));
	jule::Ptr<_1e5e00ed5_retTypeChecker> _19057_rtc = jule::new_ptr<_1e5e00ed5_retTypeChecker>(_1e5e00ed5_retTypeChecker{._field_sc=_self_, ._field_f=(*(_19007_rt))._field_Func, ._field_types=jule::Slice<jule::Ptr<_1e5e417ea_TypeKind>>(nullptr), ._field_exprs=jule::Slice<jule::Ptr<_1e5ca93bb_Expr>>(nullptr), ._field_errorToken=(*_189529_r.alloc)._field_Token, ._field_model=jule::Any(nullptr)});;
	jule::Bool _19103_ok = _1e5e01ec5_check(_19057_rtc.ptr(), &((*_189529_r.alloc)._field_Expr));;
	if ((!(_19103_ok))) {
		return;;
	};
	if (((*_189529_r.alloc)._field_Expr != nullptr)) {
		(*_19007_rt.alloc)._field_Expr=(*_19057_rtc.alloc)._field_model;
	};
}



inline void _1e5d51276_checkUseExpr(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5ca9c90_UseExpr> _192029_ue) {
	if (((*(_self_))._field_result == nullptr)) {
		_1e5d7e66c_pushErr((*_self_.alloc)._field_s.ptr(), (*(_192029_ue))._field_Token, static_cast<jule::Str>(jule::Str::lit("use expressions cannot useable out of non-void returned exceptional handler scopes", 82)), jule::Slice<jule::Any>());
		return;;
	};
	if (_1e5d4360e_isDeferred(_self_)) {
		_1e5d7e66c_pushErr((*(_self_))._field_s, (*_192029_ue.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("use expressions cannot useable in deferred scopes", 49)), jule::Slice<jule::Any>());
	};
	if ((((*_self_.alloc)._field_i + 1LL) < (*((*_self_.alloc)._field_tree))._field_Stmts.len())) {
		_1e5d7e66c_pushErr((*(_self_))._field_s, (*_192029_ue.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("use expressions must be last statement of scope", 47)), jule::Slice<jule::Any>());
	};
}



inline void _1e5d5152e_checkNode(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Any* _193631_node) {
	{
		auto &_match_expr{ (*(_193631_node)) };
		
		if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1caab4b92:;
			{
				_1e5d46d3d_checkAnonScope(_self_, (*(_193631_node)).cast_ptr<_1e5cb50a8_ScopeTree>(&__jule_any_type58));
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1caab5005:;
			{
				_1e5d45633_checkVarDecl(_self_, (*(_193631_node)).cast_ptr<_1e5cb7e02_VarDecl>(&__jule_any_type16));
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1caab506b:;
			{
				_1e5d45b94_checkTypeAliasDecl(_self_, (*(_193631_node)).cast_ptr<_1e5cbbaa4_TypeAliasDecl>(&__jule_any_type12));
			}
		}
		else if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1caab50d2:;
			{
				_1e5d47459_checkExpr(_self_, (*(_193631_node)).cast_ptr<_1e5ca93bb_Expr>(&__jule_any_type59));
			}
		}
		else if (_match_expr.type == &__jule_any_type60) {
			_case_begin_1caab5423:;
			{
				_1e5d47d94_checkConditional(_self_, (*(_193631_node)).cast_ptr<_1e5cbb367_Conditional>(&__jule_any_type60));
			}
		}
		else if (_match_expr.type == &__jule_any_type61) {
			_case_begin_1caab5489:;
			{
				_1e5d49c0e_checkIter(_self_, (*(_193631_node)).cast_ptr<_1e5cb8a4b_Iter>(&__jule_any_type61));
			}
		}
		else if (_match_expr.type == &__jule_any_type62) {
			_case_begin_1caab5500:;
			{
				_1e5d4a98a_checkCont(_self_, (*(_193631_node)).cast_ptr<_1e5cba531_ContSt>(&__jule_any_type62));
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1caab5566:;
			{
				_1e5d4ac43_checkLabel(_self_, (*(_193631_node)).cast_ptr<_1e5cb266b_LabelSt>(&__jule_any_type63));
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1caab55cc:;
			{
				_1e5d4aeeb_pushGoto(_self_, (*(_193631_node)).cast_ptr<_1e5cb2a45_GotoSt>(&__jule_any_type64));
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1caab5643:;
			{
				_1e5d4ccab_checkAssignSt(_self_, (*(_193631_node)).cast_ptr<_1e5cb3a35_AssignSt>(&__jule_any_type65));
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1caab56ba:;
			{
				_1e5d50022_checkMatch(_self_, (*(_193631_node)).cast_ptr<_1e5cbc874_MatchCase>(&__jule_any_type66));
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1caab5742:;
			{
				_1e5d502ca_checkFall(_self_, (*(_193631_node)).cast_ptr<_1e5cb2d42_FallSt>(&__jule_any_type67));
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1caab57b9:;
			{
				_1e5d50c15_checkBreak(_self_, (*(_193631_node)).cast_ptr<_1e5cba157_BreakSt>(&__jule_any_type68));
			}
		}
		else if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1caab5841:;
			{
				_1e5d50ebd_checkRet(_self_, (*(_193631_node)).cast_ptr<_1e5cb82cb_RetSt>(&__jule_any_type69));
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1caab58b8:;
			{
				_1e5d51276_checkUseExpr(_self_, (*(_193631_node)).cast_ptr<_1e5ca9c90_UseExpr>(&__jule_any_type70));
			}
		}
		else {
			_case_begin_1caab4d6d:;
			{
				jule::outln(_1c8d69498_toStr(jule::Str::lit("error <unimplemented scope node>", 32)));
			}
		}
		_match_end_1caab4d07:;
	};
}



inline void _1e5d5172c_checkResult(jule::Ptr<_1e5d40771_scopeChecker> _self_) {
	_1e5cb4948_Stmt _19747_stmt = (*((*(_self_))._field_tree))._field_Stmts[((*(*(_self_))._field_tree.alloc)._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _19747_stmt._field_Data };
		
		if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1caae1e77:;
			{
				jule::Ptr<_1e5ca9c90_UseExpr> _19778_ue = _19747_stmt._field_Data.unsafe_cast_ptr<_1e5ca9c90_UseExpr>();;
				jule::Ptr<_1e5e08c13_Data> _19788_d = _1e5e297a0_evalExpr(_1e5d870c0_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data0)), (*(_19778_ue))._field_Expr);;
				if ((_19788_d == nullptr)) {
					return;;
				};
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_19788_d, &__jule_any_type31); __jule_collection; }));
				jule::Ptr<_1e5e00ed5_retTypeChecker> _19838_rtc = jule::new_ptr<_1e5e00ed5_retTypeChecker>(_1e5e00ed5_retTypeChecker{._field_sc=_self_, ._field_f=jule::Ptr<_1e5ce3416_FnIns>(nullptr), ._field_types=_1e5ce4648_Types((*_self_.alloc)._field_result.ptr()), ._field_exprs=jule::Slice<jule::Ptr<_1e5ca93bb_Expr>>(nullptr), ._field_errorToken=(*((*_19778_ue.alloc)._field_Expr))._field_Token, ._field_model=jule::Any(nullptr)});;
				_1e5e01ec5_check(_19838_rtc.ptr(), &((*_19778_ue.alloc)._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1caae3d9c:;
			{
				jule::Ptr<_1e5ca93bb_Expr> _19908_expr = _19747_stmt._field_Data.unsafe_cast_ptr<_1e5ca93bb_Expr>();;
				jule::Ptr<_1e5e08c13_Data> _19918_d = _1e5e297a0_evalExpr(_1e5d870c0_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data0)), _19908_expr);;
				if ((_19918_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ (*(_19918_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type30) {
						_case_begin_1caae9a51:;
						{
							jule::Ptr<_1e5cdb09b_BuiltinErrorCallExprModel> _19979_m = (*(_19918_d))._field_Model.unsafe_cast_ptr<_1e5cdb09b_BuiltinErrorCallExprModel>();;
							_1e5d471a1_processErrorCall(_self_, &(_19979_m), (*(_19908_expr))._field_Token);
							(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_19918_d, &__jule_any_type31); __jule_collection; }));
						}
					}
					else {
						_case_begin_1caae9c2c:;
						{
							return;;
						}
					}
					_match_end_1caae9bb6:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type64 || _match_expr.type == &__jule_any_type68 || _match_expr.type == &__jule_any_type62 || _match_expr.type == &__jule_any_type69) {
			_case_begin_1caae350b:;
			{
				_1e5d5152e_checkNode(_self_, &(_19747_stmt._field_Data));
			}
		}
		else {
			_case_begin_1caae3495:;
			{
				_1e5d5152e_checkNode(_self_, &(_19747_stmt._field_Data));
				return;;
			}
		}
		_match_end_1caae342e:;
	};
	(*_self_.alloc)._field_result=nullptr;
}



inline void _1e5d5192a_checkTree(jule::Ptr<_1e5d40771_scopeChecker> _self_) {
	(*(_self_))._field_i=0LL;
	jule::I64 _20197_n = (*((*_self_.alloc)._field_tree))._field_Stmts.len();;
	if (((*_self_.alloc)._field_result != nullptr)) {
		(_20197_n)--;
	};
	for (; ((*_self_.alloc)._field_i < _20197_n); ((*_self_.alloc)._field_i)++) {
		{
			_1e5cb4948_Stmt _20278_stmt = (*(*(_self_))._field_tree.alloc)._field_Stmts[(*_self_.alloc)._field_i];;
			_1e5d5152e_checkNode(_self_, &(_20278_stmt._field_Data));
			if (_1e5d43378_stopped(_self_)) {
				return;;
			};
		}
	_iter_next_1caaed89b:;
	}
	_iter_end_1caaed89b:;;
	if ((((*_self_.alloc)._field_result != nullptr) && ((*(*(_self_))._field_tree.alloc)._field_Stmts.len() != 0LL))) {
		_1e5d5172c_checkResult(_self_);
	};
}



inline void _1e5d51c8d_checkGoto(_1e5d40771_scopeChecker* _self_, jule::Ptr<_1e5d3b690_GotoSt>* _203830_gt, jule::Ptr<_1e5d3e781_scopeLabel>* _203848_label) {
	jule::I64 _20397_n = 0LL;;
	if (((*((*(_203830_gt))))._field_Scope == (*((*((*(_203848_label))))._field_node))._field_Scope)) {
		if (((*((*(_203830_gt))))._field_Index > (*(*((*(_203848_label))))._field_node.alloc)._field_Index)) {
			return;;
		};
		_20397_n=(*((*(_203830_gt))))._field_Index;
	} else if (((*((*((*(_203830_gt))))._field_Scope))._field_ChildIndex > (*((*((*((*(_203848_label))))._field_node))._field_Scope))._field_ChildIndex)) {
		jule::Ptr<_1e5d384d3_Scope> _20528_gtsc = (*((*(_203830_gt))))._field_Scope;;
		while ((((*_20528_gtsc.alloc)._field_ChildIndex - 1LL) > (*(*((*((*(_203848_label))))._field_node))._field_Scope.alloc)._field_ChildIndex)) {
			{
				_20528_gtsc=(*_20528_gtsc.alloc)._field_Parent;
			}
		_iter_next_1cab03d02:;
		}
		_iter_end_1cab03d02:;;
		if (((*_20528_gtsc.alloc)._field_StmtIndex > (*(*((*(_203848_label))))._field_node.alloc)._field_Index)) {
			return;;
		};
		_20397_n=(*_20528_gtsc.alloc)._field_StmtIndex;
	} else {
		_20397_n=0LL;
	};
	jule::Ptr<_1e5d384d3_Scope> _20747_s = (*((*((*(_203848_label))))._field_node))._field_Scope;;
	jule::I64 _20757_i = ((*(*((*(_203848_label))))._field_node.alloc)._field_Index - 1LL);;
	for (;;) {
		{
			for (; (_20757_i >= _20397_n); (_20757_i)--) {
				{
					jule::Any _20789_stmt = (*(_20747_s))._field_Stmts[_20757_i];;
					if (_1e5d53784_stmtIsDef(&(_20789_stmt))) {
						_1e5d7e66c_pushErr((*(_self_))._field_s.ptr(), (*((*(_203830_gt))))._field_Token, static_cast<jule::Str>(jule::Str::lit("goto @ jumps over declaration(s)", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_203830_gt))))._field_Ident, &__jule_any_type4); __jule_collection; }));
						return;;
					};
				}
			_iter_next_1cab0780b:;
			}
			_iter_end_1cab0780b:;;
			if (((*_20747_s.alloc)._field_ChildIndex > (*((*((*(_203830_gt))))._field_Scope))._field_ChildIndex)) {
				_20747_s=(*_20747_s.alloc)._field_Parent;
				_20757_i=((*_20747_s.alloc)._field_StmtIndex - 1LL);
				goto _iter_next_1cab07487;
			};
			goto _iter_end_1cab07487;
		}
	_iter_next_1cab07487:;
	}
	_iter_end_1cab07487:;;
}



inline void _1e5d51e8b_checkGotos(_1e5d40771_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_gotos)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cab0a4bd:;
		if (it != expr_end) {
			jule::Ptr<_1e5d3b690_GotoSt> _209615_gt = *it;
			{
				jule::Ptr<_1e5d3e781_scopeLabel> _20978_label = _1e5d44e7e_findLabelAll(_self_, &((*(_209615_gt))._field_Ident));;
				if ((_20978_label == nullptr)) {
					_1e5d7e66c_pushErr((*(_self_))._field_s.ptr(), (*_209615_gt.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("not exist any label in this identifier: @", 41)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_209615_gt.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
					goto _iter_next_1cab0a4bd;
				};
				(*_209615_gt.alloc)._field_Label=(*(_20978_label))._field_node;
				(*(_20978_label))._field_used=true;
				_1e5d51c8d_checkGoto(_self_, &(_209615_gt), &(_20978_label));
			}
			_iter_next_1cab0a4bd:;
			++it;
			goto _iter_begin_1cab0a4bd;
		}
		_iter_end_1cab0a4bd:;
	};
}



inline void _1e5d52189_checkLabels(_1e5d40771_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cab0d0a3:;
		if (it != expr_end) {
			jule::Ptr<_1e5d3e781_scopeLabel> _210910_l = *it;
			{
				if ((!((*(_210910_l))._field_used))) {
					_1e5d7e66c_pushErr((*(_self_))._field_s.ptr(), (*_210910_l.alloc)._field_token, static_cast<jule::Str>(jule::Str::lit("@ declared but not used", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_210910_l.alloc)._field_node))._field_Ident, &__jule_any_type4); __jule_collection; }));
				};
			}
			_iter_next_1cab0d0a3:;
			++it;
			goto _iter_begin_1cab0d0a3;
		}
		_iter_end_1cab0d0a3:;
	};
}



inline void _1e5d52387_checkVars(_1e5d40771_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cab0ed52:;
		if (it != expr_end) {
			jule::Ptr<_1e5da0bcc_Var> _211710_v = *it;
			{
				if (((((!((*(_211710_v))._field_Used)) && (!((*_211710_v.alloc)._field_Constant))) && (!(_1e5c924b4_IsIgnoreIdent((*_211710_v.alloc)._field_Ident)))) && (!(_1e5c9277d_IsAnonIdent((*_211710_v.alloc)._field_Ident))))) {
					_1e5d7e66c_pushErr((*(_self_))._field_s.ptr(), (*_211710_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("@ declared but not used", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_211710_v.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
				};
			}
			_iter_next_1cab0ed52:;
			++it;
			goto _iter_begin_1cab0ed52;
		}
		_iter_end_1cab0ed52:;
	};
}



inline void _1e5d52585_checkAliases(_1e5d40771_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cab1265c:;
		if (it != expr_end) {
			jule::Ptr<_1e5e40a08_TypeAlias> _212510_a = *it;
			{
				if ((((!((*(_212510_a))._field_Used)) && (!(_1e5c924b4_IsIgnoreIdent((*_212510_a.alloc)._field_Ident)))) && (!(_1e5c9277d_IsAnonIdent((*_212510_a.alloc)._field_Ident))))) {
					_1e5d7e66c_pushErr((*(_self_))._field_s.ptr(), (*_212510_a.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("@ declared but not used", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_212510_a.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
				};
			}
			_iter_next_1cab1265c:;
			++it;
			goto _iter_begin_1cab1265c;
		}
		_iter_end_1cab1265c:;
	};
}



inline void _1e5d528e8_check(jule::Ptr<_1e5d40771_scopeChecker> _self_, jule::Ptr<_1e5cb50a8_ScopeTree>* _213327_tree, jule::Ptr<_1e5d384d3_Scope>* _213350_s) {
	(*((*(_213350_s))))._field_Deferred=(*((*(_213327_tree))))._field_Deferred;
	(*((*(_213350_s))))._field_Unsafety=(*((*(_213327_tree))))._field_Unsafety;
	jule::I64 _21373_errors = (*((*(_self_))._field_s))._field_errors.len();;
	(*_self_.alloc)._field_tree=(*(_213327_tree));
	(*_self_.alloc)._field_scope=(*(_213350_s));
	_1e5d5192a_checkTree(_self_);
	if ((_21373_errors == (*(*(_self_))._field_s.alloc)._field_errors.len())) {
		_1e5d52387_checkVars(_self_);
		_1e5d52585_checkAliases(_self_);
		if (_1e5d42de4_isRoot(_self_)) {
			_1e5d51e8b_checkGotos(_self_);
			_1e5d52189_checkLabels(_self_);
		};
	};
}



inline jule::Ptr<_1e5d40771_scopeChecker> _1e5d52b7e_newChildChecker(jule::Ptr<_1e5d40771_scopeChecker> _self_) {
	jule::Ptr<_1e5d40771_scopeChecker> _21577_base = _1e5d35e3c_newScopeCheckerBase(&((*(_self_))._field_s), nullptr);;
	(*(_21577_base))._field_parent=_self_;
	(*_21577_base.alloc)._field_labels=(*_self_.alloc)._field_labels;
	(*_21577_base.alloc)._field_gotos=(*_self_.alloc)._field_gotos;
	(*_21577_base.alloc)._field_childIndex=((*_self_.alloc)._field_childIndex + 1LL);
	return _21577_base;;
}








inline jule::Bool _1e5d5470d_directiveChecker_eq(_1e5d5470d_directiveChecker *_self_, _1e5d5470d_directiveChecker _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_d == _self_->_field_d) &&
		(_self_->_field_o == _self_->_field_o);
}

inline void _1e5d54b5e_checkCdef(_1e5d5470d_directiveChecker* _self_, jule::Ptr<_1e5ca44a4_Directive>* _1626_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1cab1b8ca:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1e5ce0358_Fn>()))._field_Binded) {
					goto _match_end_1cab1a731;
				};
				goto _case_begin_1cab1a797;
			}
		}
		else {
			_case_begin_1cab1a797:;
			{
				_1e5d7e66c_pushErr((*(_self_))._field_s.ptr(), (*((*(_1626_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_1626_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
			}
		}
		_match_end_1cab1a731:;
	};
	if (((*((*(_1626_d))))._field_Args.len() > 0LL)) {
		_1e5d7e66c_pushErr((*(_self_))._field_s.ptr(), (*((*(_1626_d))))._field_Args[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
}



inline void _1e5d54e17_checkTypedef(_1e5d5470d_directiveChecker* _self_, jule::Ptr<_1e5ca44a4_Directive>* _3229_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1cab1eaed:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1e5cc5e21_Struct>()))._field_Binded) {
					goto _match_end_1cab1d954;
				};
				goto _case_begin_1cab1d9ba;
			}
		}
		else {
			_case_begin_1cab1d9ba:;
			{
				_1e5d7e66c_pushErr((*(_self_))._field_s.ptr(), (*((*(_3229_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_3229_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
			}
		}
		_match_end_1cab1d954:;
	};
	if (((*((*(_3229_d))))._field_Args.len() > 0LL)) {
		_1e5d7e66c_pushErr((*(_self_))._field_s.ptr(), (*((*(_3229_d))))._field_Args[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
}



inline void _1e5d551c0_checkNamespace(_1e5d5470d_directiveChecker* _self_, jule::Ptr<_1e5ca44a4_Directive>* _4835_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1cab22d21:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1e5cc5e21_Struct>()))._field_Binded))) {
					_1e5d7e66c_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1cab21946:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1e5ce0358_Fn>()))._field_Binded))) {
					_1e5d7e66c_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1cab21c54:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1e5da0bcc_Var>()))._field_Binded))) {
					_1e5d7e66c_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
				};
			}
		}
		else {
			_case_begin_1cab21bdd:;
			{
				_1e5d7e66c_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
			}
		}
		_match_end_1cab21b77:;
	};
	if (((*((*(_4835_d))))._field_Args.len() == 0LL)) {
		_1e5d7e66c_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_4835_d))))._field_Args.len() > 1LL)) {
		_1e5d7e66c_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Args[1LL], static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1e5c8eacc_Token> _733_arg = (*((*(_4835_d))))._field_Args[0LL];;
	if (((*(_733_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1e5d7e66c_pushErr((*(_self_))._field_s.ptr(), _733_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_733_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1e5d7e66c_pushErr((*(_self_))._field_s, _733_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_4835_d))))._field_Args[0LL]))._field_Kind=(*_733_arg.alloc)._field_Kind.slice(1LL, ((*_733_arg.alloc)._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1cab2d4be:;
			{
				if ((_1e5e33215_findDirective(&((*((*(_self_))._field_d))), static_cast<jule::Str>(jule::Str::lit("typedef", 7))) == nullptr)) {
					jule::Ptr<_1e5ca44a4_Directive> _919_typedef = jule::new_ptr<_1e5ca44a4_Directive>(_1e5ca44a4_Directive{._field_Tag=(*((*(_4835_d))))._field_Tag, ._field_Args=jule::Slice<jule::Ptr<_1e5c8eacc_Token>>(nullptr)});;
					(*((*(_919_typedef))._field_Tag))._field_Kind=static_cast<jule::Str>(jule::Str::lit("typedef", 7));
					(*(*(_self_))._field_d.alloc)=jule::append((*(*(_self_))._field_d.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5ca44a4_Directive>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _919_typedef; __jule_collection; }));
				};
			}
		}
		_match_end_1cab2d458:;
	};
}



inline void _1e5d55478_checkDeprecated(_1e5d5470d_directiveChecker* _self_, jule::Ptr<_1e5ca44a4_Directive>* _10036_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1cab31bed:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1e5cc5e21_Struct>()))._field_Binded) {
					_1e5d7e66c_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1cab308bc:;
			{
				jule::Ptr<_1e5ce0358_Fn> _1078_f = (*(_self_))._field_o.unsafe_cast_ptr<_1e5ce0358_Fn>();;
				if ((((*(_1078_f))._field_Binded || _1e5ce0d2b_IsEntryPoint(_1078_f)) || _1e5ce10b2_IsInit(_1078_f))) {
					_1e5d7e66c_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1cab30b31:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1e5da0bcc_Var>()))._field_Binded) {
					_1e5d7e66c_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
				};
			}
		}
		else {
			_case_begin_1cab30aba:;
			{
				_1e5d7e66c_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
			}
		}
		_match_end_1cab30a54:;
	};
	if (((*((*(_10036_d))))._field_Args.len() == 0LL)) {
		return;;
	};
	if (((*((*(_10036_d))))._field_Args.len() > 1LL)) {
		_1e5d7e66c_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Args[1LL], static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1e5c8eacc_Token> _1263_arg = (*((*(_10036_d))))._field_Args[0LL];;
	if (((*(_1263_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1e5d7e66c_pushErr((*(_self_))._field_s, _1263_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_1263_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1e5d7e66c_pushErr((*(_self_))._field_s, _1263_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_10036_d))))._field_Args[0LL]))._field_Kind=(*_1263_arg.alloc)._field_Kind.slice(1LL, ((*_1263_arg.alloc)._field_Kind.len() - 1LL));
}



inline void _1e5d55731_checkTest(_1e5d5470d_directiveChecker* _self_, jule::Ptr<_1e5ca44a4_Directive>* _14126_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1cab3d9eb:;
			{
				jule::Ptr<_1e5ce0358_Fn> _1444_f = (*(_self_))._field_o.unsafe_cast_ptr<_1e5ce0358_Fn>();;
				if ((((!((*(_1444_f))._field_Binded)) && (!(_1e5ce10b2_IsInit(_1444_f)))) && (!(_1e5ce0d2b_IsEntryPoint(_1444_f))))) {
					goto _match_end_1cab3c852;
				};
				if (_1e5ce0a95_IsMethod(_1444_f)) {
					_1e5d7e66c_pushErr((*(_self_))._field_s.ptr(), (*_1444_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("you cannot declare test methods", 31)), jule::Slice<jule::Any>());
					goto _match_end_1cab3c852;
				};
				goto _case_begin_1cab3c8b8;
			}
		}
		else {
			_case_begin_1cab3c8b8:;
			{
				_1e5d7e66c_pushErr((*(_self_))._field_s.ptr(), (*((*(_14126_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_14126_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
			}
		}
		_match_end_1cab3c852:;
	};
	if (((*((*(_14126_d))))._field_Args.len() > 0LL)) {
		_1e5d7e66c_pushErr((*(_self_))._field_s.ptr(), (*((*(_14126_d))))._field_Args[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
}



inline void _1e5d559d9_checkExport(_1e5d5470d_directiveChecker* _self_, jule::Ptr<_1e5ca44a4_Directive>* _16232_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1cab43748:;
			{
				jule::Ptr<_1e5ce0358_Fn> _1654_f = (*(_self_))._field_o.unsafe_cast_ptr<_1e5ce0358_Fn>();;
				if ((((((*(_1654_f))._field_Binded || _1e5ce10b2_IsInit(_1654_f)) || _1e5ce0d2b_IsEntryPoint(_1654_f)) || _1e5ce0a95_IsMethod(_1654_f)) || ((*_1654_f.alloc)._field_Generics.len() > 0LL))) {
					_1e5d7e66c_pushErr((*(_self_))._field_s.ptr(), (*((*(_16232_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_16232_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
					return;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1cab4236d:;
			{
				jule::Ptr<_1e5da0bcc_Var> _1714_v = (*(_self_))._field_o.unsafe_cast_ptr<_1e5da0bcc_Var>();;
				if (((*(_1714_v))._field_Binded || (*_1714_v.alloc)._field_Constant)) {
					_1e5d7e66c_pushErr((*(_self_))._field_s.ptr(), (*((*(_16232_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_16232_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
				};
			}
		}
		else {
			_case_begin_1cab42615:;
			{
				_1e5d7e66c_pushErr((*(_self_))._field_s.ptr(), (*((*(_16232_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_16232_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return;;
			}
		}
		_match_end_1cab4259e:;
	};
	if (((*((*(_16232_d))))._field_Args.len() > 1LL)) {
		_1e5d7e66c_pushErr((*(_self_))._field_s.ptr(), (*((*(_16232_d))))._field_Args[1LL], static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_16232_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
		return;;
	};
	if (((*((*(_16232_d))))._field_Args.len() < 1LL)) {
		_1e5d7e66c_pushErr((*(_self_))._field_s, (*((*(_16232_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e5c8eacc_Token> _1873_arg = (*((*(_16232_d))))._field_Args[0LL];;
	if (((*(_1873_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1e5d7e66c_pushErr((*(_self_))._field_s, _1873_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_1873_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1e5d7e66c_pushErr((*(_self_))._field_s, _1873_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_16232_d))))._field_Args[0LL]))._field_Kind=(*_1873_arg.alloc)._field_Kind.slice(1LL, ((*_1873_arg.alloc)._field_Kind.len() - 1LL));
}



inline void _1e5d55c92_checkDirective(_1e5d5470d_directiveChecker* _self_, jule::Ptr<_1e5ca44a4_Directive>* _20035_d) {
	{
		auto &_match_expr{ (*((*((*(_20035_d))))._field_Tag))._field_Kind };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cdef", 4))) {
			_case_begin_1cab50986:;
			{
				_1e5d54b5e_checkCdef(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("typedef", 7))) {
			_case_begin_1cab4e831:;
			{
				_1e5d54e17_checkTypedef(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("namespace", 9))) {
			_case_begin_1cab4e897:;
			{
				_1e5d551c0_checkNamespace(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("deprecated", 10))) {
			_case_begin_1cab4e90d:;
			{
				_1e5d55478_checkDeprecated(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("test", 4))) {
			_case_begin_1cab4e974:;
			{
				_1e5d55731_checkTest(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("export", 6))) {
			_case_begin_1cab4e9da:;
			{
				_1e5d559d9_checkExport(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("build", 5)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("pass", 4))) {
			_case_begin_1cab4ea51:;
			{
				_1e5d7e66c_pushErr((*(_self_))._field_s.ptr(), (*((*(_20035_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_20035_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
			}
		}
		else {
			_case_begin_1cab49d37:;
			{
				_1e5d7e66c_pushErr((*(_self_))._field_s.ptr(), (*((*(_20035_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_20035_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
			}
		}
		_match_end_1cab4e754:;
	};
}



inline void _1e5d55e90_check(_1e5d5470d_directiveChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_d)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cab53747:;
		if (it != expr_end) {
			jule::Ptr<_1e5ca44a4_Directive> _22315_d = *it;
			{
				_1e5d55c92_checkDirective(_self_, &(_22315_d));
			}
			_iter_next_1cab53747:;
			++it;
			goto _iter_begin_1cab53747;
		}
		_iter_end_1cab53747:;
	};
}







inline jule::Ptr<_1e5d5b2e7_ImportInfo> _1e5d5b814_SelectPackage(_1e5d5b2e7_ImportInfo* _self_, jule::Fn<jule::Bool,jule::Ptr<_1e5d5b2e7_ImportInfo>> ) {
	return nullptr;;
}



inline jule::Ptr<_1e5da0bcc_Var> _1e5d5bc10_FindVar(_1e5d5b2e7_ImportInfo* _self_, jule::Str _19823_ident, jule::Bool ) {
	if ((!(_1e5d5d86b_isLookupable(_self_, &(_19823_ident))))) {
		return nullptr;;
	};
	return _1e5d58822_findVarInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_19823_ident), false);;
}



inline jule::Ptr<_1e5e40a08_TypeAlias> _1e5d5c10b_FindTypeAlias(_1e5d5b2e7_ImportInfo* _self_, jule::Str _21029_ident, jule::Bool ) {
	if ((!(_1e5d5d86b_isLookupable(_self_, &(_21029_ident))))) {
		return nullptr;;
	};
	return _1e5d58c51_findTypeAliasInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_21029_ident), false);;
}



inline jule::Ptr<_1e5cc5e21_Struct> _1e5d5c507_FindStruct(_1e5d5b2e7_ImportInfo* _self_, jule::Str _22226_ident, jule::Bool ) {
	if ((!(_1e5d5d86b_isLookupable(_self_, &(_22226_ident))))) {
		return nullptr;;
	};
	return _1e5d59207_findStructInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_22226_ident), false);;
}



inline jule::Ptr<_1e5ce0358_Fn> _1e5d5c903_FindFn(_1e5d5b2e7_ImportInfo* _self_, jule::Str _23422_ident, jule::Bool ) {
	if ((!(_1e5d5d86b_isLookupable(_self_, &(_23422_ident))))) {
		return nullptr;;
	};
	return _1e5d59603_findFnInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_23422_ident), false);;
}



inline jule::Ptr<_1e5d03db6_Trait> _1e5d5cc44_FindTrait(_1e5d5b2e7_ImportInfo* _self_, jule::Str _24525_ident) {
	if ((!(_1e5d5d86b_isLookupable(_self_, &(_24525_ident))))) {
		return nullptr;;
	};
	return _1e5d59977_findTraitInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_24525_ident));;
}



inline jule::Ptr<_1e5d065c2_Enum> _1e5d5d085_FindEnum(_1e5d5b2e7_ImportInfo* _self_, jule::Str _25624_ident) {
	if ((!(_1e5d5d86b_isLookupable(_self_, &(_25624_ident))))) {
		return nullptr;;
	};
	return _1e5d59ceb_findEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_25624_ident));;
}



inline jule::Ptr<_1e5d07ccc_TypeEnum> _1e5d5d3c6_FindTypeEnum(_1e5d5b2e7_ImportInfo* _self_, jule::Str _26728_ident) {
	if ((!(_1e5d5d86b_isLookupable(_self_, &(_26728_ident))))) {
		return nullptr;;
	};
	return _1e5d5a280_findTypeEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_26728_ident));;
}



inline jule::Bool _1e5d5d86b_isLookupable(_1e5d5b2e7_ImportInfo* _self_, jule::Str* _27625_ident) {
	if ((*(_self_))._field_Binded) {
		return false;;
	};
	if ((!((*(_self_))._field_ImportAll))) {
		if ((((*(_self_))._field_Alias.len() != 0LL) || _1e5d5dbac_existIdent(_self_, static_cast<jule::Str>(jule::Str::lit("self", 4))))) {
			return true;;
		};
		if (((*(_self_))._field_Selected.len() > 0LL)) {
			if ((!(_1e5d5dbac_existIdent(_self_, (*(_27625_ident)))))) {
				return false;;
			};
		};
	};
	return true;;
}



inline jule::Bool _1e5d5dbac_existIdent(_1e5d5b2e7_ImportInfo* _self_, jule::Str _29622_ident) {
	{
		auto expr = &((*(_self_))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cab6ab27:;
		if (it != expr_end) {
			jule::Ptr<_1e5c8eacc_Token> *_29710_sident = it;
			{
				if (((*((*(_29710_sident))))._field_Kind == _29622_ident)) {
					return true;;
				};
			}
			_iter_next_1cab6ab27:;
			++it;
			goto _iter_begin_1cab6ab27;
		}
		_iter_end_1cab6ab27:;
	};
	return false;;
}



inline jule::Bool _1e5d5de43_isAccessibleViaSelection(_1e5d5b2e7_ImportInfo* _self_) {
	return (((*(_self_))._field_ImportAll || ((*(_self_))._field_Selected.len() == 0LL)) || _1e5d5dbac_existIdent(_self_, static_cast<jule::Str>(jule::Str::lit("self", 4))));;
}







inline jule::Ptr<_1e5d5b2e7_ImportInfo> _1e5d5e6e6_SelectPackage(_1e5d5e21d_Package* _self_, jule::Fn<jule::Bool,jule::Ptr<_1e5d5b2e7_ImportInfo>> ) {
	return nullptr;;
}



inline jule::Ptr<_1e5da0bcc_Var> _1e5d5eae2_FindVar(_1e5d5e21d_Package* _self_, jule::Str _32323_ident, jule::Bool _32335_binded) {
	return _1e5d58822_findVarInPackage(&((*(_self_))._field_Files), &(_32323_ident), _32335_binded);;
}



inline jule::Ptr<_1e5e40a08_TypeAlias> _1e5d5eedd_FindTypeAlias(_1e5d5e21d_Package* _self_, jule::Str _32929_ident, jule::Bool _32941_binded) {
	return _1e5d58c51_findTypeAliasInPackage(&((*(_self_))._field_Files), &(_32929_ident), _32941_binded);;
}



inline jule::Ptr<_1e5cc5e21_Struct> _1e5d603d9_FindStruct(_1e5d5e21d_Package* _self_, jule::Str _33526_ident, jule::Bool _33538_binded) {
	return _1e5d59207_findStructInPackage(&((*(_self_))._field_Files), &(_33526_ident), _33538_binded);;
}



inline jule::Ptr<_1e5ce0358_Fn> _1e5d607d5_FindFn(_1e5d5e21d_Package* _self_, jule::Str _34122_ident, jule::Bool _34134_binded) {
	return _1e5d59603_findFnInPackage(&((*(_self_))._field_Files), &(_34122_ident), _34134_binded);;
}



inline jule::Ptr<_1e5d03db6_Trait> _1e5d60b26_FindTrait(_1e5d5e21d_Package* _self_, jule::Str _34725_ident) {
	return _1e5d59977_findTraitInPackage(&((*(_self_))._field_Files), &(_34725_ident));;
}



inline jule::Ptr<_1e5d065c2_Enum> _1e5d60e67_FindEnum(_1e5d5e21d_Package* _self_, jule::Str _35324_ident) {
	return _1e5d59ceb_findEnumInPackage(&((*(_self_))._field_Files), &(_35324_ident));;
}



inline jule::Ptr<_1e5d07ccc_TypeEnum> _1e5d612a8_FindTypeEnum(_1e5d5e21d_Package* _self_, jule::Str _35928_ident) {
	return _1e5d5a280_findTypeEnumInPackage(&((*(_self_))._field_Files), &(_35928_ident));;
}







inline jule::Ptr<_1e5d1a608_comptimeTypeInfo> _1e5d7b0d6_pushComptimeTypeInfo(_1e5d7ab41_commonSemaMeta* _self_, jule::Ptr<_1e5e417ea_TypeKind>* _22341_t) {
	{
		auto expr = &((*(_self_))._field_comptimeTypeInfos);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1caba778a:;
		if (it != expr_end) {
			jule::Ptr<_1e5d1a608_comptimeTypeInfo> _22415_t2 = *it;
			{
				if ((((*((*(_22415_t2))._field_base))._field_BindIdent == (*((*(_22341_t))))._field_BindIdent) && _1e5e42037_Equal((*(_22415_t2))._field_base, (*(_22341_t))))) {
					return _22415_t2;;
				};
			}
			_iter_next_1caba778a:;
			++it;
			goto _iter_begin_1caba778a;
		}
		_iter_end_1caba778a:;
	};
	jule::Ptr<_1e5d1a608_comptimeTypeInfo> _2297_t1 = jule::new_ptr<_1e5d1a608_comptimeTypeInfo>(_1e5d1a608_comptimeTypeInfo{._field_base=(*(_22341_t))});;
	{ jule::Slice<jule::Ptr<_1e5d1a608_comptimeTypeInfo>> &__jule_push_dest = (*(_self_))._field_comptimeTypeInfos; __jule_push_dest.push(_2297_t1); };
	return _2297_t1;;
}







inline jule::Ptr<_1e5d5b2e7_ImportInfo> _1e5d7bc41_SelectPackage(_1e5d7b768_sema* _self_, jule::Fn<jule::Bool,jule::Ptr<_1e5d5b2e7_ImportInfo>> _25229_selector) {
	return _1e5e03a65_SelectPackage((*(_self_))._field_file.ptr(), _25229_selector);;
}



inline jule::Ptr<_1e5da0bcc_Var> _1e5d7c13c_FindVar(_1e5d7b768_sema* _self_, jule::Str _26223_ident, jule::Bool _26235_binded) {
	jule::Ptr<_1e5da0bcc_Var> _2647_v = _1e5d58822_findVarInPackage(&((*(_self_))._field_files), &(_26223_ident), _26235_binded);;
	if ((_2647_v != nullptr)) {
		return _2647_v;;
	};
	if ((!(_1e5d78754_IsPub(_26223_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cabadc7a:;
		if (it != expr_end) {
			jule::Ptr<_1e5d5b2e7_ImportInfo> _27515_imp = *it;
			{
				if ((!(_1e5d79656_impIsLookupable(&(_27515_imp), &(_26223_ident))))) {
					goto _iter_next_1cabadc7a;
				};
				_2647_v=_1e5d5bc10_FindVar(_27515_imp.ptr(), _26223_ident, _26235_binded);
				if (((_2647_v != nullptr) && _1e5d7edcb_isAccessibleDefine(_self_, (*_2647_v.alloc)._field_Public, (*_2647_v.alloc)._field_Token))) {
					return _2647_v;;
				};
			}
			_iter_next_1cabadc7a:;
			++it;
			goto _iter_begin_1cabadc7a;
		}
		_iter_end_1cabadc7a:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e5e40a08_TypeAlias> _1e5d7c538_FindTypeAlias(_1e5d7b768_sema* _self_, jule::Str _29429_ident, jule::Bool _29441_binded) {
	jule::Ptr<_1e5e40a08_TypeAlias> _2967_ta = _1e5d58c51_findTypeAliasInPackage(&((*(_self_))._field_files), &(_29429_ident), _29441_binded);;
	if ((_2967_ta != nullptr)) {
		return _2967_ta;;
	};
	if ((!(_1e5d78754_IsPub(_29429_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cabb1bd4:;
		if (it != expr_end) {
			jule::Ptr<_1e5d5b2e7_ImportInfo> _30715_imp = *it;
			{
				if ((!(_1e5d79656_impIsLookupable(&(_30715_imp), &(_29429_ident))))) {
					goto _iter_next_1cabb1bd4;
				};
				_2967_ta=_1e5d5c10b_FindTypeAlias(_30715_imp.ptr(), _29429_ident, _29441_binded);
				if (((_2967_ta != nullptr) && _1e5d7edcb_isAccessibleDefine(_self_, (*_2967_ta.alloc)._field_Public, (*_2967_ta.alloc)._field_Token))) {
					return _2967_ta;;
				};
			}
			_iter_next_1cabb1bd4:;
			++it;
			goto _iter_begin_1cabb1bd4;
		}
		_iter_end_1cabb1bd4:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e5cc5e21_Struct> _1e5d7c934_FindStruct(_1e5d7b768_sema* _self_, jule::Str _32626_ident, jule::Bool _32638_binded) {
	jule::Ptr<_1e5cc5e21_Struct> _3287_s = _1e5d59207_findStructInPackage(&((*(_self_))._field_files), &(_32626_ident), _32638_binded);;
	if ((_3287_s != nullptr)) {
		return _3287_s;;
	};
	if ((!(_1e5d78754_IsPub(_32626_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cabb4b3d:;
		if (it != expr_end) {
			jule::Ptr<_1e5d5b2e7_ImportInfo> _33915_imp = *it;
			{
				if ((!(_1e5d79656_impIsLookupable(&(_33915_imp), &(_32626_ident))))) {
					goto _iter_next_1cabb4b3d;
				};
				_3287_s=_1e5d5c507_FindStruct(_33915_imp.ptr(), _32626_ident, _32638_binded);
				if (((_3287_s != nullptr) && _1e5d7edcb_isAccessibleDefine(_self_, (*_3287_s.alloc)._field_Public, (*_3287_s.alloc)._field_Token))) {
					return _3287_s;;
				};
			}
			_iter_next_1cabb4b3d:;
			++it;
			goto _iter_begin_1cabb4b3d;
		}
		_iter_end_1cabb4b3d:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e5ce0358_Fn> _1e5d7cd30_FindFn(_1e5d7b768_sema* _self_, jule::Str _35722_ident, jule::Bool _35734_binded) {
	jule::Ptr<_1e5ce0358_Fn> _3597_f = _1e5d59603_findFnInPackage(&((*(_self_))._field_files), &(_35722_ident), _35734_binded);;
	if ((_3597_f != nullptr)) {
		return _3597_f;;
	};
	if ((!(_1e5d78754_IsPub(_35722_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cabb7a97:;
		if (it != expr_end) {
			jule::Ptr<_1e5d5b2e7_ImportInfo> _37015_imp = *it;
			{
				if ((!(_1e5d79656_impIsLookupable(&(_37015_imp), &(_35722_ident))))) {
					goto _iter_next_1cabb7a97;
				};
				_3597_f=_1e5d5c903_FindFn(_37015_imp.ptr(), _35722_ident, _35734_binded);
				if (((_3597_f != nullptr) && _1e5d7edcb_isAccessibleDefine(_self_, (*_3597_f.alloc)._field_Public, (*_3597_f.alloc)._field_Token))) {
					return _3597_f;;
				};
			}
			_iter_next_1cabb7a97:;
			++it;
			goto _iter_begin_1cabb7a97;
		}
		_iter_end_1cabb7a97:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e5d03db6_Trait> _1e5d7d171_FindTrait(_1e5d7b768_sema* _self_, jule::Str _38925_ident) {
	jule::Ptr<_1e5d03db6_Trait> _3917_t = _1e5d59977_findTraitInPackage(&((*(_self_))._field_files), &(_38925_ident));;
	if ((_3917_t != nullptr)) {
		return _3917_t;;
	};
	if ((!(_1e5d78754_IsPub(_38925_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cabba7ae:;
		if (it != expr_end) {
			jule::Ptr<_1e5d5b2e7_ImportInfo> _40215_imp = *it;
			{
				if ((!(_1e5d79656_impIsLookupable(&(_40215_imp), &(_38925_ident))))) {
					goto _iter_next_1cabba7ae;
				};
				_3917_t=_1e5d5cc44_FindTrait(_40215_imp.ptr(), _38925_ident);
				if (((_3917_t != nullptr) && _1e5d7edcb_isAccessibleDefine(_self_, (*_3917_t.alloc)._field_Public, (*_3917_t.alloc)._field_Token))) {
					return _3917_t;;
				};
			}
			_iter_next_1cabba7ae:;
			++it;
			goto _iter_begin_1cabba7ae;
		}
		_iter_end_1cabba7ae:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e5d065c2_Enum> _1e5d7d4b2_FindEnum(_1e5d7b768_sema* _self_, jule::Str _42124_ident) {
	jule::Ptr<_1e5d065c2_Enum> _4237_e = _1e5d59ceb_findEnumInPackage(&((*(_self_))._field_files), &(_42124_ident));;
	if ((_4237_e != nullptr)) {
		return _4237_e;;
	};
	if ((!(_1e5d78754_IsPub(_42124_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cabbd4c6:;
		if (it != expr_end) {
			jule::Ptr<_1e5d5b2e7_ImportInfo> _43415_imp = *it;
			{
				if ((!(_1e5d79656_impIsLookupable(&(_43415_imp), &(_42124_ident))))) {
					goto _iter_next_1cabbd4c6;
				};
				_4237_e=_1e5d5d085_FindEnum(_43415_imp.ptr(), _42124_ident);
				if (((_4237_e != nullptr) && _1e5d7edcb_isAccessibleDefine(_self_, (*_4237_e.alloc)._field_Public, (*_4237_e.alloc)._field_Token))) {
					return _4237_e;;
				};
			}
			_iter_next_1cabbd4c6:;
			++it;
			goto _iter_begin_1cabbd4c6;
		}
		_iter_end_1cabbd4c6:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e5d07ccc_TypeEnum> _1e5d7d803_FindTypeEnum(_1e5d7b768_sema* _self_, jule::Str _45328_ident) {
	jule::Ptr<_1e5d07ccc_TypeEnum> _4557_e = _1e5d5a280_findTypeEnumInPackage(&((*(_self_))._field_files), &(_45328_ident));;
	if ((_4557_e != nullptr)) {
		return _4557_e;;
	};
	if ((!(_1e5d78754_IsPub(_45328_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cabc11dd:;
		if (it != expr_end) {
			jule::Ptr<_1e5d5b2e7_ImportInfo> _46615_imp = *it;
			{
				if ((!(_1e5d79656_impIsLookupable(&(_46615_imp), &(_45328_ident))))) {
					goto _iter_next_1cabc11dd;
				};
				_4557_e=_1e5d5d3c6_FindTypeEnum(_46615_imp.ptr(), _45328_ident);
				if (((_4557_e != nullptr) && _1e5d7edcb_isAccessibleDefine(_self_, (*_4557_e.alloc)._field_Public, (*_4557_e.alloc)._field_Token))) {
					return _4557_e;;
				};
			}
			_iter_next_1cabc11dd:;
			++it;
			goto _iter_begin_1cabc11dd;
		}
		_iter_end_1cabc11dd:;
	};
	return nullptr;;
}



inline jule::Bool _1e5d7dc10_isFlag(_1e5d7b768_sema* _self_, jule::I64 _48218_flags) {
	return (((*(_self_))._field_flags & _48218_flags) == _48218_flags);;
}



inline jule::Ptr<_1e5e03548_SymbolTable> _1e5d7de96_getCurrentFile(_1e5d7b768_sema* _self_) {
	return (*(_self_))._field_file;;
}



inline void _1e5d7e24e_setCurrentFile(_1e5d7b768_sema* _self_, jule::Ptr<_1e5e03548_SymbolTable> _48534_f) {
	(*(_self_))._field_file=_48534_f;
}



inline void _1e5d7e66c_pushErr(_1e5d7b768_sema* _self_, jule::Ptr<_1e5c8eacc_Token> _48723_token, jule::Str _48738_fmt, jule::Slice<jule::Any> _48751_args) {
	{ jule::Slice<_22578b38a_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1e5d792d2_compilerErr(&(_48723_token), true, _48738_fmt, _48751_args)); };
}



inline void _1e5d7e9d0_pushSuggestion(_1e5d7b768_sema* _self_, jule::Str _49230_fmt, jule::Slice<jule::Any> _49243_args) {
	{
		_1e5d7a888_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _49230_fmt, _49243_args);
	};
}



inline jule::Bool _1e5d7edcb_isAccessibleDefine(_1e5d7b768_sema* _self_, jule::Bool _49830_public, jule::Ptr<_1e5c8eacc_Token> _49844_token) {
	if ((_49830_public || ((*(_49844_token))._field_File == nullptr))) {
		return true;;
	};
	jule::Str _5033_selfDir = _1e5c95a4a_Dir((*((*(_self_))._field_file))._field_File.ptr());;
	jule::Str _5043_tokenDir = _1e5c95a4a_Dir((*_49844_token.alloc)._field_File.ptr());;
	if ((_5033_selfDir == _5043_tokenDir)) {
		return true;;
	};
	if ((_1e5d616e8_isStdPackage(&(_5043_tokenDir), jule::Str::lit("runtime", 7)) && _1e5d616e8_isStdPackage(&(_5033_selfDir), jule::Str()))) {
		return true;;
	};
	return false;;
}



inline jule::Bool _1e5d80382_isDuplicatedIdent(_1e5d7b768_sema* _self_, jule::Uintptr _52129_itself, jule::Str* _52147_ident, jule::Bool _52159_binded) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cabc901a:;
		if (it != expr_end) {
			jule::Ptr<_1e5e03548_SymbolTable> *_52210_f = it;
			{
				if (_1e5e06ded_isDuplicatedIdent((*(_52210_f)).ptr(), _52129_itself, _52147_ident, _52159_binded)) {
					return true;;
				};
				{
					auto expr = &((*(*(_52210_f)).alloc)._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cabca03d:;
					if (it != expr_end) {
						jule::Ptr<_1e5d5b2e7_ImportInfo> *_52711_imp = it;
						{
							{
								auto expr = &((*((*(_52711_imp))))._field_Selected);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1cabca945:;
								if (it != expr_end) {
									jule::Ptr<_1e5c8eacc_Token> *_52812_selected = it;
									{
										if (((*((*(_52812_selected))))._field_Kind == (*(_52147_ident)))) {
											return true;;
										};
									}
									_iter_next_1cabca945:;
									++it;
									goto _iter_begin_1cabca945;
								}
								_iter_end_1cabca945:;
							};
						}
						_iter_next_1cabca03d:;
						++it;
						goto _iter_begin_1cabca03d;
					}
					_iter_end_1cabca03d:;
				};
			}
			_iter_next_1cabc901a:;
			++it;
			goto _iter_begin_1cabc901a;
		}
		_iter_end_1cabc901a:;
	};
	return false;;
}



inline void _1e5d806e5_checkDirectives(jule::Ptr<_1e5d7b768_sema> _self_, jule::Slice<jule::Ptr<_1e5ca44a4_Directive>>* _53837_d, jule::Any _53863_o) {
	_1e5d5470d_directiveChecker _5397_dc = _1e5d5470d_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_1e5ca44a4_Directive>>>)(_53837_d)), ._field_o=_53863_o};;
	_1e5d55e90_check(&_5397_dc);
}



inline jule::Bool _1e5d80b9b_checkGenericQuantity(_1e5d7b768_sema* _self_, jule::I64 _54736_required, jule::I64 _54751_given, jule::Ptr<_1e5c8eacc_Token> _54763_token) {
	jule::Bool __jule_func_result = false;
	{
		
		if (((_54736_required == 0LL) && (_54751_given > 0LL))) {
			_case_begin_1cabcce64:;
			{
				_1e5d7e66c_pushErr(_self_, _54763_token, static_cast<jule::Str>(jule::Str::lit("type have not generics but instantiate like generics", 52)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if (((_54736_required > 0LL) && (_54751_given == 0LL))) {
			_case_begin_1cabccedb:;
			{
				_1e5d7e66c_pushErr(_self_, _54763_token, static_cast<jule::Str>(jule::Str::lit("type has generics and used without instantiate", 46)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_54736_required < _54751_given)) {
			_case_begin_1cabcd063:;
			{
				_1e5d7e66c_pushErr(_self_, _54763_token, static_cast<jule::Str>(jule::Str::lit("overflow generics", 17)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_54736_required > _54751_given)) {
			_case_begin_1cabcd0da:;
			{
				_1e5d7e66c_pushErr(_self_, _54763_token, static_cast<jule::Str>(jule::Str::lit("missing generics", 16)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1cabccd98:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1cabcccbb:;
	};
}



inline jule::Bool _1e5d81097_isDuplicatedImportSelection(_1e5d7b768_sema* _self_, jule::Uintptr _56639_itself, jule::Str* _56657_ident) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cabd130d:;
		if (it != expr_end) {
			jule::Ptr<_1e5d5b2e7_ImportInfo> *_56710_imp = it;
			{
				if ((static_cast<jule::Uintptr>((*(_56710_imp))) == _56639_itself)) {
					goto _iter_end_1cabd130d;
				};
				if (_1e5d5dbac_existIdent((*(_56710_imp)).ptr(), (*(_56657_ident)))) {
					return true;;
				};
			}
			_iter_next_1cabd130d:;
			++it;
			goto _iter_begin_1cabd130d;
		}
		_iter_end_1cabd130d:;
	};
	return false;;
}



inline jule::Any _1e5d81493_getImportDef(_1e5d7b768_sema* _self_, jule::Str* _57925_ident, jule::Ptr<_1e5d5b2e7_ImportInfo>* _57942_imp) {
	if ((_1e602abc0_findPackageBuiltinDef(&((*((*(_57942_imp))))._field_LinkPath), _57925_ident) != nullptr)) {
		return jule::Any(true, &__jule_any_type3);;
	};
	{
		auto expr = &((*((*((*(_57942_imp))))._field_Package))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cabd34a8:;
		if (it != expr_end) {
			jule::Ptr<_1e5e03548_SymbolTable> _58315_f = *it;
			{
				;
				jule::Any _5868_def = _1e5e06947_defByIdent(_58315_f.ptr(), _57925_ident, false);;
				if ((_5868_def != nullptr)) {
					return _5868_def;;
				};
			}
			_iter_next_1cabd34a8:;
			++it;
			goto _iter_begin_1cabd34a8;
		}
		_iter_end_1cabd34a8:;
	};
	return nullptr;;
}



inline jule::Bool _1cabda03c_checkImportSelection(_1e5d7b768_sema* _self_, jule::Ptr<_1e5c8eacc_Token>* _59440_ident, jule::Ptr<_1e5da0bcc_Var>* _59456_s) {
	if ((!(_1e5d7edcb_isAccessibleDefine(_self_, (*((*(_59456_s))))._field_Public, (*((*(_59456_s))))._field_Token)))) {
		_1e5d7e66c_pushErr(_self_, (*(_59440_ident)), static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59440_ident))))._field_Kind, &__jule_any_type4); __jule_collection; }));
		_1e5d7e9d0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1e5d5a637_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_59456_s))))._field_Ident), false) != nullptr)) {
		_1e5d7e66c_pushErr(_self_, (*(_59440_ident)), static_cast<jule::Str>(jule::Str::lit("selected identifier \"@\" is already exist in this package", 56)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59456_s))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return false;;
	};
	return true;;
}

inline jule::Bool _1cabde96a_checkImportSelection(_1e5d7b768_sema* _self_, jule::Ptr<_1e5c8eacc_Token>* _59440_ident, jule::Ptr<_1e5e40a08_TypeAlias>* _59456_s) {
	if ((!(_1e5d7edcb_isAccessibleDefine(_self_, (*((*(_59456_s))))._field_Public, (*((*(_59456_s))))._field_Token)))) {
		_1e5d7e66c_pushErr(_self_, (*(_59440_ident)), static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59440_ident))))._field_Kind, &__jule_any_type4); __jule_collection; }));
		_1e5d7e9d0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1e5d5a637_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_59456_s))))._field_Ident), false) != nullptr)) {
		_1e5d7e66c_pushErr(_self_, (*(_59440_ident)), static_cast<jule::Str>(jule::Str::lit("selected identifier \"@\" is already exist in this package", 56)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59456_s))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return false;;
	};
	return true;;
}

inline jule::Bool _1cabe40ce_checkImportSelection(_1e5d7b768_sema* _self_, jule::Ptr<_1e5c8eacc_Token>* _59440_ident, jule::Ptr<_1e5cc5e21_Struct>* _59456_s) {
	if ((!(_1e5d7edcb_isAccessibleDefine(_self_, (*((*(_59456_s))))._field_Public, (*((*(_59456_s))))._field_Token)))) {
		_1e5d7e66c_pushErr(_self_, (*(_59440_ident)), static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59440_ident))))._field_Kind, &__jule_any_type4); __jule_collection; }));
		_1e5d7e9d0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1e5d5a637_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_59456_s))))._field_Ident), false) != nullptr)) {
		_1e5d7e66c_pushErr(_self_, (*(_59440_ident)), static_cast<jule::Str>(jule::Str::lit("selected identifier \"@\" is already exist in this package", 56)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59456_s))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return false;;
	};
	return true;;
}

inline jule::Bool _1cabe87a9_checkImportSelection(_1e5d7b768_sema* _self_, jule::Ptr<_1e5c8eacc_Token>* _59440_ident, jule::Ptr<_1e5d03db6_Trait>* _59456_s) {
	if ((!(_1e5d7edcb_isAccessibleDefine(_self_, (*((*(_59456_s))))._field_Public, (*((*(_59456_s))))._field_Token)))) {
		_1e5d7e66c_pushErr(_self_, (*(_59440_ident)), static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59440_ident))))._field_Kind, &__jule_any_type4); __jule_collection; }));
		_1e5d7e9d0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1e5d5a637_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_59456_s))))._field_Ident), false) != nullptr)) {
		_1e5d7e66c_pushErr(_self_, (*(_59440_ident)), static_cast<jule::Str>(jule::Str::lit("selected identifier \"@\" is already exist in this package", 56)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59456_s))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return false;;
	};
	return true;;
}

inline jule::Bool _1cabece51_checkImportSelection(_1e5d7b768_sema* _self_, jule::Ptr<_1e5c8eacc_Token>* _59440_ident, jule::Ptr<_1e5d065c2_Enum>* _59456_s) {
	if ((!(_1e5d7edcb_isAccessibleDefine(_self_, (*((*(_59456_s))))._field_Public, (*((*(_59456_s))))._field_Token)))) {
		_1e5d7e66c_pushErr(_self_, (*(_59440_ident)), static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59440_ident))))._field_Kind, &__jule_any_type4); __jule_collection; }));
		_1e5d7e9d0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1e5d5a637_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_59456_s))))._field_Ident), false) != nullptr)) {
		_1e5d7e66c_pushErr(_self_, (*(_59440_ident)), static_cast<jule::Str>(jule::Str::lit("selected identifier \"@\" is already exist in this package", 56)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59456_s))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return false;;
	};
	return true;;
}

inline jule::Bool _1cac02362_checkImportSelection(_1e5d7b768_sema* _self_, jule::Ptr<_1e5c8eacc_Token>* _59440_ident, jule::Ptr<_1e5d07ccc_TypeEnum>* _59456_s) {
	if ((!(_1e5d7edcb_isAccessibleDefine(_self_, (*((*(_59456_s))))._field_Public, (*((*(_59456_s))))._field_Token)))) {
		_1e5d7e66c_pushErr(_self_, (*(_59440_ident)), static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59440_ident))))._field_Kind, &__jule_any_type4); __jule_collection; }));
		_1e5d7e9d0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1e5d5a637_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_59456_s))))._field_Ident), false) != nullptr)) {
		_1e5d7e66c_pushErr(_self_, (*(_59440_ident)), static_cast<jule::Str>(jule::Str::lit("selected identifier \"@\" is already exist in this package", 56)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59456_s))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return false;;
	};
	return true;;
}

inline jule::Bool _1cac069c6_checkImportSelection(_1e5d7b768_sema* _self_, jule::Ptr<_1e5c8eacc_Token>* _59440_ident, jule::Ptr<_1e5ce0358_Fn>* _59456_s) {
	if ((!(_1e5d7edcb_isAccessibleDefine(_self_, (*((*(_59456_s))))._field_Public, (*((*(_59456_s))))._field_Token)))) {
		_1e5d7e66c_pushErr(_self_, (*(_59440_ident)), static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59440_ident))))._field_Kind, &__jule_any_type4); __jule_collection; }));
		_1e5d7e9d0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1e5d5a637_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_59456_s))))._field_Ident), false) != nullptr)) {
		_1e5d7e66c_pushErr(_self_, (*(_59440_ident)), static_cast<jule::Str>(jule::Str::lit("selected identifier \"@\" is already exist in this package", 56)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59456_s))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return false;;
	};
	return true;;
}



inline jule::Bool _1e5d81bd0_checkImportSelectedSelections(_1e5d7b768_sema* _self_, jule::Ptr<_1e5d5b2e7_ImportInfo>* _60850_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_60850_imp))))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cabd5114:;
		if (it != expr_end) {
			jule::Ptr<_1e5c8eacc_Token> _61010_ident = *it;
			{
				if (((*(_61010_ident))._field_Kind == static_cast<jule::Str>(jule::Str::lit("self", 4)))) {
					goto _iter_next_1cabd5114;
				};
				if (_1e5d81097_isDuplicatedImportSelection(_self_, static_cast<jule::Uintptr>((*(_60850_imp))), &((*_61010_ident.alloc)._field_Kind))) {
					_1e5d7e66c_pushErr(_self_, _61010_ident, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_61010_ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
					_1e5d7e9d0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1cabd5114;
				};
				jule::Any _6228_def = _1e5d81493_getImportDef(_self_, &((*_61010_ident.alloc)._field_Kind), _60850_imp);;
				{
					auto &_match_expr{ _6228_def };
					
					if (_match_expr.type == &__jule_any_type3) {
						_case_begin_1cabd6302:;
						{
							goto _iter_next_1cabd5114;
						}
					}
					else if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1cabd8018:;
						{
							jule::Ptr<_1e5da0bcc_Var> _6289_v = _6228_def.unsafe_cast_ptr<_1e5da0bcc_Var>();;
							__jule_func_result=(_1cabda03c_checkImportSelection(_self_, &(_61010_ident), &(_6289_v)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type27) {
						_case_begin_1cabd807e:;
						{
							jule::Ptr<_1e5e40a08_TypeAlias> _6319_ta = _6228_def.unsafe_cast_ptr<_1e5e40a08_TypeAlias>();;
							__jule_func_result=(_1cabde96a_checkImportSelection(_self_, &(_61010_ident), &(_6319_ta)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1cabd80e5:;
						{
							jule::Ptr<_1e5cc5e21_Struct> _6349_s = _6228_def.unsafe_cast_ptr<_1e5cc5e21_Struct>();;
							__jule_func_result=(_1cabe40ce_checkImportSelection(_self_, &(_61010_ident), &(_6349_s)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type10) {
						_case_begin_1cabd815b:;
						{
							jule::Ptr<_1e5d03db6_Trait> _6379_t = _6228_def.unsafe_cast_ptr<_1e5d03db6_Trait>();;
							__jule_func_result=(_1cabe87a9_checkImportSelection(_self_, &(_61010_ident), &(_6379_t)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type24) {
						_case_begin_1cabd81c2:;
						{
							jule::Ptr<_1e5d065c2_Enum> _6409_e = _6228_def.unsafe_cast_ptr<_1e5d065c2_Enum>();;
							__jule_func_result=(_1cabece51_checkImportSelection(_self_, &(_61010_ident), &(_6409_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type25) {
						_case_begin_1cabd8d82:;
						{
							jule::Ptr<_1e5d07ccc_TypeEnum> _6439_e = _6228_def.unsafe_cast_ptr<_1e5d07ccc_TypeEnum>();;
							__jule_func_result=(_1cac02362_checkImportSelection(_self_, &(_61010_ident), &(_6439_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type26) {
						_case_begin_1cabd8de8:;
						{
							jule::Ptr<_1e5ce0358_Fn> _6469_f = _6228_def.unsafe_cast_ptr<_1e5ce0358_Fn>();;
							__jule_func_result=(_1cac069c6_checkImportSelection(_self_, &(_61010_ident), &(_6469_f)) && __jule_func_result);
						}
					}
					else {
						_case_begin_1cabd7e08:;
						{
							_1e5d7e66c_pushErr(_self_, _61010_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_61010_ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
							__jule_func_result=false;
							goto _iter_next_1cabd5114;
						}
					}
					_match_end_1cabd78ec:;
				};
			}
			_iter_next_1cabd5114:;
			++it;
			goto _iter_begin_1cabd5114;
		}
		_iter_end_1cabd5114:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1cac0b679_checkImportsAllSelectionsFromCollection(_1e5d7b768_sema* _self_, jule::Slice<jule::Ptr<_1e5da0bcc_Var>>* _65759_s, jule::Ptr<_1e5c8eacc_Token>* _65768_et) {
	jule::Bool _6587_ok = true;;
	{
		auto expr = _65759_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cac0d26e:;
		if (it != expr_end) {
			jule::Ptr<_1e5da0bcc_Var> *_65910_d = it;
			{
				if ((*((*(_65910_d))))._field_Public) {
					_6587_ok=(_1cabda03c_checkImportSelection(_self_, _65768_et, _65910_d) && _6587_ok);
				};
			}
			_iter_next_1cac0d26e:;
			++it;
			goto _iter_begin_1cac0d26e;
		}
		_iter_end_1cac0d26e:;
	};
	return _6587_ok;;
}

inline jule::Bool _1cac0c812_checkImportsAllSelectionsFromCollection(_1e5d7b768_sema* _self_, jule::Slice<jule::Ptr<_1e5e40a08_TypeAlias>>* _65759_s, jule::Ptr<_1e5c8eacc_Token>* _65768_et) {
	jule::Bool _6587_ok = true;;
	{
		auto expr = _65759_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cac1099c:;
		if (it != expr_end) {
			jule::Ptr<_1e5e40a08_TypeAlias> *_65910_d = it;
			{
				if ((*((*(_65910_d))))._field_Public) {
					_6587_ok=(_1cabde96a_checkImportSelection(_self_, _65768_et, _65910_d) && _6587_ok);
				};
			}
			_iter_next_1cac1099c:;
			++it;
			goto _iter_begin_1cac1099c;
		}
		_iter_end_1cac1099c:;
	};
	return _6587_ok;;
}

inline jule::Bool _1cac0e8ad_checkImportsAllSelectionsFromCollection(_1e5d7b768_sema* _self_, jule::Slice<jule::Ptr<_1e5cc5e21_Struct>>* _65759_s, jule::Ptr<_1e5c8eacc_Token>* _65768_et) {
	jule::Bool _6587_ok = true;;
	{
		auto expr = _65759_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cac131b9:;
		if (it != expr_end) {
			jule::Ptr<_1e5cc5e21_Struct> *_65910_d = it;
			{
				if ((*((*(_65910_d))))._field_Public) {
					_6587_ok=(_1cabe40ce_checkImportSelection(_self_, _65768_et, _65910_d) && _6587_ok);
				};
			}
			_iter_next_1cac131b9:;
			++it;
			goto _iter_begin_1cac131b9;
		}
		_iter_end_1cac131b9:;
	};
	return _6587_ok;;
}

inline jule::Bool _1cac127a1_checkImportsAllSelectionsFromCollection(_1e5d7b768_sema* _self_, jule::Slice<jule::Ptr<_1e5ce0358_Fn>>* _65759_s, jule::Ptr<_1e5c8eacc_Token>* _65768_et) {
	jule::Bool _6587_ok = true;;
	{
		auto expr = _65759_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cac15908:;
		if (it != expr_end) {
			jule::Ptr<_1e5ce0358_Fn> *_65910_d = it;
			{
				if ((*((*(_65910_d))))._field_Public) {
					_6587_ok=(_1cac069c6_checkImportSelection(_self_, _65768_et, _65910_d) && _6587_ok);
				};
			}
			_iter_next_1cac15908:;
			++it;
			goto _iter_begin_1cac15908;
		}
		_iter_end_1cac15908:;
	};
	return _6587_ok;;
}

inline jule::Bool _1cac15485_checkImportsAllSelectionsFromCollection(_1e5d7b768_sema* _self_, jule::Slice<jule::Ptr<_1e5d03db6_Trait>>* _65759_s, jule::Ptr<_1e5c8eacc_Token>* _65768_et) {
	jule::Bool _6587_ok = true;;
	{
		auto expr = _65759_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cac180d1:;
		if (it != expr_end) {
			jule::Ptr<_1e5d03db6_Trait> *_65910_d = it;
			{
				if ((*((*(_65910_d))))._field_Public) {
					_6587_ok=(_1cabe87a9_checkImportSelection(_self_, _65768_et, _65910_d) && _6587_ok);
				};
			}
			_iter_next_1cac180d1:;
			++it;
			goto _iter_begin_1cac180d1;
		}
		_iter_end_1cac180d1:;
	};
	return _6587_ok;;
}

inline jule::Bool _1cac17ba2_checkImportsAllSelectionsFromCollection(_1e5d7b768_sema* _self_, jule::Slice<jule::Ptr<_1e5d065c2_Enum>>* _65759_s, jule::Ptr<_1e5c8eacc_Token>* _65768_et) {
	jule::Bool _6587_ok = true;;
	{
		auto expr = _65759_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cac1a7a9:;
		if (it != expr_end) {
			jule::Ptr<_1e5d065c2_Enum> *_65910_d = it;
			{
				if ((*((*(_65910_d))))._field_Public) {
					_6587_ok=(_1cabece51_checkImportSelection(_self_, _65768_et, _65910_d) && _6587_ok);
				};
			}
			_iter_next_1cac1a7a9:;
			++it;
			goto _iter_begin_1cac1a7a9;
		}
		_iter_end_1cac1a7a9:;
	};
	return _6587_ok;;
}

inline jule::Bool _1cac1a37a_checkImportsAllSelectionsFromCollection(_1e5d7b768_sema* _self_, jule::Slice<jule::Ptr<_1e5d07ccc_TypeEnum>>* _65759_s, jule::Ptr<_1e5c8eacc_Token>* _65768_et) {
	jule::Bool _6587_ok = true;;
	{
		auto expr = _65759_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cac1d01a:;
		if (it != expr_end) {
			jule::Ptr<_1e5d07ccc_TypeEnum> *_65910_d = it;
			{
				if ((*((*(_65910_d))))._field_Public) {
					_6587_ok=(_1cac02362_checkImportSelection(_self_, _65768_et, _65910_d) && _6587_ok);
				};
			}
			_iter_next_1cac1d01a:;
			++it;
			goto _iter_begin_1cac1d01a;
		}
		_iter_end_1cac1d01a:;
	};
	return _6587_ok;;
}



inline jule::Bool _1e5d8241c_checkImportAllSelections(_1e5d7b768_sema* _self_, jule::Ptr<_1e5d5b2e7_ImportInfo>* _66741_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*((*(_66741_imp))))._field_Package))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cabd5499:;
		if (it != expr_end) {
			jule::Ptr<_1e5e03548_SymbolTable> *_66910_file = it;
			{
				__jule_func_result=(_1cac0b679_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_66910_file))))._field_Vars), &((*((*(_66741_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1cac0c812_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_66910_file)).alloc)._field_TypeAliases), &((*((*(_66741_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1cac0e8ad_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_66910_file)).alloc)._field_Structs), &((*((*(_66741_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1cac127a1_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_66910_file)).alloc)._field_Funcs), &((*((*(_66741_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1cac15485_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_66910_file)).alloc)._field_Traits), &((*((*(_66741_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1cac17ba2_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_66910_file)).alloc)._field_Enums), &((*((*(_66741_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1cac1a37a_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_66910_file)).alloc)._field_TypeEnums), &((*((*(_66741_imp))))._field_Token)) && __jule_func_result);
			}
			_iter_next_1cabd5499:;
			++it;
			goto _iter_begin_1cabd5499;
		}
		_iter_end_1cabd5499:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1e5d8275d_checkImportSelections(_1e5d7b768_sema* _self_, jule::Ptr<_1e5d5b2e7_ImportInfo>* _68142_imp) {
	jule::Bool __jule_func_result = false;
	if (((*((*(_68142_imp))))._field_Selected.len() > 0LL)) {
		__jule_func_result = _1e5d81bd0_checkImportSelectedSelections(_self_, _68142_imp);
		return __jule_func_result;;
	} else if ((*((*(_68142_imp))))._field_ImportAll) {
		__jule_func_result = _1e5d8241c_checkImportAllSelections(_self_, _68142_imp);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1e5d82a9e_isUseAliasDuplication(_1e5d7b768_sema* _self_, jule::Ptr<_1e5d5b2e7_ImportInfo>* _69038_imp) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cac2024d:;
		if (it != expr_end) {
			jule::Ptr<_1e5d5b2e7_ImportInfo> _69115_imp2 = *it;
			{
				if ((_69115_imp2 == (*(_69038_imp)))) {
					goto _iter_end_1cac2024d;
				};
				if (((*(_69115_imp2))._field_Alias == (*((*(_69038_imp))))._field_Alias)) {
					return true;;
				};
				if ((((*_69115_imp2.alloc)._field_Ident == (*_69115_imp2.alloc)._field_LinkPath) && ((*_69115_imp2.alloc)._field_Ident == (*((*(_69038_imp))))._field_Alias))) {
					return true;;
				};
			}
			_iter_next_1cac2024d:;
			++it;
			goto _iter_begin_1cac2024d;
		}
		_iter_end_1cac2024d:;
	};
	return false;;
}



inline jule::Bool _1e5d82de0_checkImport(_1e5d7b768_sema* _self_, jule::Ptr<_1e5d5b2e7_ImportInfo>* _70632_imp) {
	if (((*((*(_70632_imp))))._field_Binded || ((*((*((*(_70632_imp))))._field_Package))._field_Files.len() == 0LL))) {
		return true;;
	};
	if ((*((*(_70632_imp))))._field_LinkPath.equal("std::unsafe", 11)) {
		if ((((*((*(_70632_imp))))._field_ImportAll || !((*((*(_70632_imp))))._field_Alias).empty()) || ((*((*(_70632_imp))))._field_Selected.len() > 0LL))) {
			_1e5d7e66c_pushErr(_self_, (*((*(_70632_imp))))._field_Token, static_cast<jule::Str>(jule::Str::lit("expected plain use declaration for this package like: @", 55)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("use std::unsafe", 15), &__jule_any_type4); __jule_collection; }));
			return false;;
		};
	};
	if (((*((*(_70632_imp))))._field_Alias.len() != 0LL)) {
		if (_1e5c924b4_IsIgnoreIdent((*((*(_70632_imp))))._field_Alias)) {
			_1e5d7e66c_pushErr(_self_, (*((*(_70632_imp))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
		} else if (_1e5d82a9e_isUseAliasDuplication(_self_, _70632_imp)) {
			_1e5d7e66c_pushErr(_self_, (*((*(_70632_imp))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier duplication: @ is already used for another use declaration above", 75)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_70632_imp))))._field_Alias, &__jule_any_type4); __jule_collection; }));
			_1e5d7e9d0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename alias for this use declaration to avoid duplication", 58)), jule::Slice<jule::Any>());
		};
	};
	if ((!((*((*(_70632_imp))))._field_Duplicate))) {
		jule::Ptr<_1e5d7b768_sema> _7298_sema = jule::new_ptr<_1e5d7b768_sema>(_1e5d7b768_sema{._field_errors=jule::Slice<_22578b38a_Log>(nullptr), ._field_files=jule::Slice<jule::Ptr<_1e5e03548_SymbolTable>>(nullptr), ._field_file=jule::Ptr<_1e5e03548_SymbolTable>(nullptr), ._field_flags=(*(_self_))._field_flags, ._field_meta=(*(_self_))._field_meta});;
		_1e5d9c129_check(_7298_sema, &((*(*((*(_70632_imp))))._field_Package.alloc)._field_Files));
		if (((*_7298_sema.alloc)._field_errors.len() != 0LL)) {
			((*(_self_))._field_errors).append((*_7298_sema.alloc)._field_errors);;
			(*_7298_sema.alloc)._field_errors=nullptr;
			return false;;
		};
	};
	return _1e5d8275d_checkImportSelections(_self_, _70632_imp);;
}



inline void _1e5d830dd_checkImports(_1e5d7b768_sema* _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cac29d07:;
		if (it != expr_end) {
			jule::Ptr<_1e5e03548_SymbolTable> _74415_file = *it;
			{
				_1e5d7e24e_setCurrentFile(_self_, _74415_file);
				{
					auto expr = &((*(_74415_file))._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cac2a9ea:;
					if (it != expr_end) {
						jule::Ptr<_1e5d5b2e7_ImportInfo> _74616_imp = *it;
						{
							jule::Bool _7475_ok = _1e5d82de0_checkImport(_self_, &(_74616_imp));;
							if ((!(_7475_ok))) {
								return;;
							};
						}
						_iter_next_1cac2a9ea:;
						++it;
						goto _iter_begin_1cac2a9ea;
					}
					_iter_end_1cac2a9ea:;
				};
			}
			_iter_next_1cac29d07:;
			++it;
			goto _iter_begin_1cac29d07;
		}
		_iter_end_1cac29d07:;
	};
}



inline void _1e5d832db_implFileImpls(jule::Ptr<_1e5d7b768_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Impls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cac2ae3a:;
		if (it != expr_end) {
			jule::Ptr<_1e5d33c09_Impl> _75715_imp = *it;
			{
				_1e5d932da_implImpl(_self_, &(_75715_imp));
			}
			_iter_next_1cac2ae3a:;
			++it;
			goto _iter_begin_1cac2ae3a;
		}
		_iter_end_1cac2ae3a:;
	};
}



inline void _1e5d834d9_implImpls(jule::Ptr<_1e5d7b768_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cac2c865:;
		if (it != expr_end) {
			jule::Ptr<_1e5e03548_SymbolTable> _76315_file = *it;
			{
				_1e5d7e24e_setCurrentFile(_self_.ptr(), _76315_file);
				_1e5d832db_implFileImpls(_self_);
			}
			_iter_next_1cac2c865:;
			++it;
			goto _iter_begin_1cac2c865;
		}
		_iter_end_1cac2c865:;
	};
}



inline void _1e5d836d7_checkEnums(jule::Ptr<_1e5d7b768_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cac2d921:;
		if (it != expr_end) {
			jule::Ptr<_1e5e03548_SymbolTable> _77015_file = *it;
			{
				_1e5d7e24e_setCurrentFile(_self_.ptr(), _77015_file);
				{
					
					if ((!(_1e5d8e726_checkEnumDecls(_self_)))) {
						_case_begin_1cac2e070:;
					}
					else if ((!(_1e5d8e9ac_checkTypeEnumDecls(_self_)))) {
						_case_begin_1cac2e647:;
					}
					_match_end_1cac2e56a:;
				};
			}
			_iter_next_1cac2d921:;
			++it;
			goto _iter_begin_1cac2d921;
		}
		_iter_end_1cac2d921:;
	};
}



inline void _1e5d838d5_checkFileInherits(jule::Ptr<_1e5d7b768_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cac304c2:;
		if (it != expr_end) {
			jule::Ptr<_1e5d03db6_Trait> _78015_t = *it;
			{
				jule::Bool _7814_ok = _1e5d91371__checkTraitDeclInherits(_self_, &(_78015_t));;
				if ((!(_7814_ok))) {
					return;;
				};
			}
			_iter_next_1cac304c2:;
			++it;
			goto _iter_begin_1cac304c2;
		}
		_iter_end_1cac304c2:;
	};
}



inline void _1e5d83ad3_checkInherits(jule::Ptr<_1e5d7b768_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cac30a66:;
		if (it != expr_end) {
			jule::Ptr<_1e5e03548_SymbolTable> _78915_file = *it;
			{
				_1e5d7e24e_setCurrentFile(_self_.ptr(), _78915_file);
				_1e5d838d5_checkFileInherits(_self_);
			}
			_iter_next_1cac30a66:;
			++it;
			goto _iter_begin_1cac30a66;
		}
		_iter_end_1cac30a66:;
	};
}



inline _1e5e53be7_typeChecker _1e5d84089_typeChecker(jule::Ptr<_1e5d7b768_sema> _self_, jule::Trait _79532_l, jule::Slice<jule::Ptr<_1e5e40a08_TypeAlias>> _79547_generics, jule::Ptr<_1e5e52c07_referencer> _7967_referencer) {
	_1e5e53be7_typeChecker _7977_tc = _1e5e53be7_typeChecker{._field_s=_self_, ._field_rootLookup=_79532_l, ._field_lookup=_79532_l, ._field_referencer=_7967_referencer, ._field_refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1e5c8eacc_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1e5cb2292_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=_79547_generics, ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1e5e40a08_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1e5e40a08_TypeAlias>>(nullptr), ._field_inscatch=false};;
	{
		auto &_match_expr{ _79532_l };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data0)) {
			_case_begin_1cac3374a:;
			{
				jule::Ptr<_1e5d40771_scopeChecker> _8068_hard = _1e5d43dd4_getHardRoot(_79532_l.cast_ptr<_1e5d40771_scopeChecker>((jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data0));;
				_7977_tc._field_refers=(*((*(_8068_hard))._field_owner))._field_Refers;
			}
		}
		_match_end_1cac336d4:;
	};
	if (((_7967_referencer != nullptr) && ((*_7967_referencer.alloc)._field_refs != nullptr))) {
		{
			auto &_match_expr{ (*(_7967_referencer))._field_owner };
			
			if (_match_expr.type == &__jule_any_type27) {
				_case_begin_1cac350dc:;
				{
					_7977_tc._field_ownerAlias=(*(_7967_referencer))._field_owner.unsafe_cast_ptr<_1e5e40a08_TypeAlias>();
				}
			}
			_match_end_1cac35076:;
		};
	};
	return _7977_tc;;
}



inline jule::Ptr<_1e5e417ea_TypeKind> _1e5d845ea_buildTypeWithRefers(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5ca5087_TypeDecl>* _82241_t, jule::Trait _82264_l, jule::Slice<jule::Ptr<_1e5e40a08_TypeAlias>> _8237_generics, jule::Ptr<_1e5e52c07_referencer> _82335_referencer) {
	return ({ auto _wrap_copy = _1e5d84089_typeChecker(_self_, _82264_l, _8237_generics, _82335_referencer); _1e5e5b7d2_checkDecl(&_wrap_copy, _82241_t); });;
}



inline jule::Bool _1e5d84b5b_checkTypeWithRefers(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5e4900b_TypeSymbol>* _82941_t, jule::Trait _82961_l, jule::Slice<jule::Ptr<_1e5e40a08_TypeAlias>> _8307_generics, jule::Ptr<_1e5e52c07_referencer> _83035_referencer) {
	jule::Bool __jule_func_result = false;
	if (_1e5e493b3_checked((*(_82941_t)).ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_82941_t))))._field_Kind=_1e5d845ea_buildTypeWithRefers(_self_, &((*((*(_82941_t))))._field_Decl), _82961_l, _8307_generics, _83035_referencer);
	__jule_func_result = _1e5e493b3_checked((*(_82941_t)).ptr());
	return __jule_func_result;;
}



inline jule::Ptr<_1e5d318a5_constraintChecker> _1e5d84de2_constraintChecker(jule::Ptr<_1e5d7b768_sema> _self_) {
	return jule::new_ptr<_1e5d318a5_constraintChecker>(_1e5d318a5_constraintChecker{._field_s=_self_, ._field_genericsD=jule::Slice<jule::Ptr<_1e5cb2292_GenericDecl>>(nullptr), ._field_generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_genericsA=jule::Slice<jule::Ptr<_1e5e40a08_TypeAlias>>(nullptr), ._field_fi=jule::Ptr<_1e5ce3416_FnIns>(nullptr), ._field_si=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_et=jule::Ptr<_1e5c8eacc_Token>(nullptr), ._field_uniq=false});;
}



inline jule::Bool _1e5d852dd_checkType(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5e4900b_TypeSymbol>* _84431_t, jule::Trait _84451_l) {
	return _1e5d84b5b_checkTypeWithRefers(_self_, _84431_t, _84451_l, nullptr, nullptr);;
}



inline jule::Ptr<_1e5e417ea_TypeKind> _1e5d85794_checkTypeRefers(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5ca5087_TypeDecl>* _84937_t, jule::Trait _84960_l, jule::Ptr<_1e5ce65a1_ReferenceStack> _84975_refers) {
	jule::Ptr<_1e5e53be7_typeChecker> _8507_tc = jule::new_ptr<_1e5e53be7_typeChecker>(_1e5e53be7_typeChecker{._field_s=_self_, ._field_rootLookup=_84960_l, ._field_lookup=_84960_l, ._field_referencer=jule::Ptr<_1e5e52c07_referencer>(nullptr), ._field_refers=_84975_refers, ._field_errorToken=jule::Ptr<_1e5c8eacc_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1e5cb2292_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1e5e40a08_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1e5e40a08_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1e5e40a08_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _1e5e5b7d2_checkDecl(_8507_tc.ptr(), _84937_t);;
}



inline jule::Ptr<_1e5e417ea_TypeKind> _1e5d85c4a_buildTypeWithGenerics(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5ca5087_TypeDecl>* _86143_t, jule::Slice<jule::Ptr<_1e5e40a08_TypeAlias>> _8627_generics, jule::Ptr<_1e5ce65a1_ReferenceStack> _86235_refers) {
	jule::Ptr<_1e5e53be7_typeChecker> _8637_tc = jule::new_ptr<_1e5e53be7_typeChecker>(_1e5e53be7_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data3), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data3), ._field_referencer=jule::Ptr<_1e5e52c07_referencer>(nullptr), ._field_refers=_86235_refers, ._field_errorToken=jule::Ptr<_1e5c8eacc_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1e5cb2292_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=_8627_generics, ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1e5e40a08_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1e5e40a08_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _1e5e5b7d2_checkDecl(_8637_tc.ptr(), _86143_t);;
}



inline jule::Ptr<_1e5e417ea_TypeKind> _1e5d863cc_selectType(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5ca5087_TypeDecl>* _87932_t) {
	jule::Ptr<_1e5e53be7_typeChecker> _8807_tc = jule::new_ptr<_1e5e53be7_typeChecker>(_1e5e53be7_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data3), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data3), ._field_referencer=jule::Ptr<_1e5e52c07_referencer>(nullptr), ._field_refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1e5c8eacc_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1e5cb2292_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1e5e40a08_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=true, ._field_ownerAlias=jule::Ptr<_1e5e40a08_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1e5e40a08_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _1e5e5b7d2_checkDecl(_8807_tc.ptr(), _87932_t);;
}



inline jule::Ptr<_1e5e0a93a_eval> _1e5d86883_evalpd(jule::Ptr<_1e5d7b768_sema> _self_, jule::Trait _89127_l, jule::Ptr<_1e5e417ea_TypeKind> _89142_p, jule::Ptr<_1e5da0bcc_Var> _89160_owner) {
	jule::Ptr<_1e5e0a93a_eval> _8927_e = jule::new_ptr<_1e5e0a93a_eval>(_1e5e0a93a_eval{._field_s=_self_, ._field_lookup=_89127_l, ._field_prefix=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_unsafety=false, ._field_immutable=false, ._field_ignored=false, ._field_disBuiltin=false, ._field_owner=_89160_owner, ._field_field=jule::Ptr<_1e5cc81cb_FieldIns>(nullptr), ._field_arg=false});;
	{
		auto &_match_expr{ _89127_l };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data0)) {
			_case_begin_1cac457d4:;
			{
				(*(_8927_e))._field_unsafety=_1e5d42b5d_isUnsafe(_89127_l.cast_ptr<_1e5d40771_scopeChecker>((jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data0));
			}
		}
		_match_end_1cac4576d:;
	};
	(*_8927_e.alloc)._field_prefix=_89142_p;
	return _8927_e;;
}



inline jule::Ptr<_1e5e0a93a_eval> _1e5d86c7e_evalp(jule::Ptr<_1e5d7b768_sema> _self_, jule::Trait _90626_l, jule::Ptr<_1e5e417ea_TypeKind> _90641_p) {
	return _1e5d86883_evalpd(_self_, _90626_l, _90641_p, nullptr);;
}



inline jule::Ptr<_1e5e0a93a_eval> _1e5d870c0_eval(jule::Ptr<_1e5d7b768_sema> _self_, jule::Trait _91125_l) {
	return _1e5d86c7e_evalp(_self_, _91125_l, nullptr);;
}



inline jule::Bool _1e5d876db_checkAssignType(jule::Ptr<_1e5d7b768_sema> _self_, jule::Bool _91532_destIsRef, jule::Ptr<_1e5e417ea_TypeKind>* _91554_dest, jule::Ptr<_1e5e08c13_Data>* _9168_d, jule::Ptr<_1e5c8eacc_Token> _91622_errorToken, jule::Ptr<_1e5ce65a1_ReferenceStack> _91646_refers) {
	if ((*((*(_9168_d))))._field_Decl) {
		_1e5d7e66c_pushErr(_self_.ptr(), _91622_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return false;;
	};
	if (_91532_destIsRef) {
		if ((!(_1e5e42037_Equal((*(_91554_dest)), (*((*(_9168_d))))._field_Kind)))) {
			_1e5d7e66c_pushErr(_self_, _91622_errorToken, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*(_91554_dest)).ptr()), &__jule_any_type4); (*it++) = jule::Any(_1e5e41be6_Str((*((*(_9168_d))))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
			return false;;
		};
	} else {
		jule::Ptr<_1e5de2328_assignTypeChecker> _9278_atc = jule::new_ptr<_1e5de2328_assignTypeChecker>(_1e5de2328_assignTypeChecker{._field_s=_self_, ._field_dest=(*(_91554_dest)), ._field_d=(*(_9168_d)), ._field_errorToken=_91622_errorToken, ._field_refers=_91646_refers});;
		jule::Bool _9344_ok = _1e5de3329_check(_9278_atc.ptr());;
		if ((!(_9344_ok))) {
			return false;;
		};
	};
	if (((!(_1e5e0964d_IsConst((*(_9168_d)).ptr()))) || (_1e5e43ea1_Prim((*(_91554_dest)).ptr()) == nullptr))) {
		return true;;
	};
	jule::Str _9447_kind = (*(_1e5e43ea1_Prim((*(_91554_dest)).ptr())))._field_Kind;;
	{
		
		if (_1e21a3258_IsSigInt(_9447_kind)) {
			_case_begin_1cac4d963:;
			{
				_1e21a7449_SetI64((*((*(_9168_d))))._field_Constant.ptr(), _1e21a6b74_AsI64((*((*(_9168_d))))._field_Constant));
			}
		}
		else if (_1e21a3566_IsUnsigInt(_9447_kind)) {
			_case_begin_1cac4d9eb:;
			{
				_1e21a7702_SetU64((*((*(_9168_d))))._field_Constant.ptr(), _1e21a6e0a_AsU64((*((*(_9168_d))))._field_Constant));
			}
		}
		else if (_1e21a3b71_IsFloat(_9447_kind)) {
			_case_begin_1cac4da62:;
			{
				_1e21a801b_SetF64((*((*(_9168_d))))._field_Constant.ptr(), _1e21a7191_AsF64((*((*(_9168_d))))._field_Constant));
			}
		}
		_match_end_1cac4d8a8:;
	};
	return true;;
}



inline jule::Bool _1e5d87b92__checkTypeCompatibility(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5e417ea_TypeKind>* _95845_dest, jule::Ptr<_1e5e417ea_TypeKind>* _95867_src, jule::Ptr<_1e5c8eacc_Token> _9597_errorToken) {
	if (((*(_95867_src)) == nullptr)) {
		return false;;
	};
	if ((_1e5e45cc7_Tup((*(_95867_src)).ptr()) != nullptr)) {
		return false;;
	};
	_1e5de049c_typeCompatibilityChecker _9677_tcc = _1e5de049c_typeCompatibilityChecker{._field_s=_self_, ._field_dest=(*(_95845_dest)), ._field_src=(*(_95867_src)), ._field_errorToken=_9597_errorToken};;
	return _1e5de1b96_check(&_9677_tcc);;
}



inline jule::Bool _1e5d88148_checkTypeCompatibility(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5e417ea_TypeKind>* _97644_dest, jule::Ptr<_1e5e417ea_TypeKind>* _9778_src, jule::Ptr<_1e5c8eacc_Token>* _97729_errorToken) {
	if (_1e5d87b92__checkTypeCompatibility(_self_, _97644_dest, _9778_src, (*(_97729_errorToken)))) {
		return true;;
	};
	_1e5d7e66c_pushErr(_self_, (*(_97729_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*(_97644_dest)).ptr()), &__jule_any_type4); (*it++) = jule::Any(_1e5e41be6_Str((*(_9778_src)).ptr()), &__jule_any_type4); __jule_collection; }));
	return false;;
}



inline void _1e5d88566_pushCompatiblityError(_1e5d7b768_sema* _self_, jule::Ptr<_1e5e417ea_TypeKind>* _98542_dest, jule::Ptr<_1e5e08c13_Data>* _98564_src, jule::Ptr<_1e5c8eacc_Token>* _9868_errorToken) {
	if ((*((*(_98564_src))))._field_untyped) {
		{
			
			if (_1e21a84a0_IsI64((*((*(_98564_src))))._field_Constant.ptr())) {
				_case_begin_1cac55d88:;
				{
					_1e5d7e66c_pushErr(_self_, (*(_9868_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*(_98542_dest)).ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("untyped integer", 15), &__jule_any_type4); __jule_collection; }));
					return;;
				}
			}
			else if (_1e21a8736_IsU64((*((*(_98564_src))))._field_Constant.ptr())) {
				_case_begin_1cac55e32:;
				{
					_1e5d7e66c_pushErr(_self_, (*(_9868_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*(_98542_dest)).ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("untyped unsigned integer", 24), &__jule_any_type4); __jule_collection; }));
					return;;
				}
			}
			else if (_1e21a8ed9_IsF64((*((*(_98564_src))))._field_Constant.ptr())) {
				_case_begin_1cac55e98:;
				{
					_1e5d7e66c_pushErr(_self_, (*(_9868_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*(_98542_dest)).ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("untyped float", 13), &__jule_any_type4); __jule_collection; }));
					return;;
				}
			}
			_match_end_1cac55c56:;
		};
	};
	_1e5d7e66c_pushErr(_self_, (*(_9868_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*(_98542_dest)).ptr()), &__jule_any_type4); (*it++) = jule::Any(_1e5e41be6_Str((*((*(_98564_src))))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
}



inline jule::Bool _1e5d88a1c_checkTypeCompatibility1(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5e417ea_TypeKind>* _100345_dest, jule::Ptr<_1e5e08c13_Data>* _100367_src, jule::Ptr<_1e5c8eacc_Token>* _10048_errorToken) {
	if (_1e5d87b92__checkTypeCompatibility(_self_, _100345_dest, &((*((*(_100367_src))))._field_Kind), (*(_10048_errorToken)))) {
		return true;;
	};
	_1e5d88566_pushCompatiblityError(_self_, _100345_dest, _100367_src, _10048_errorToken);
	return false;;
}



inline jule::Ptr<_1e5e417ea_TypeKind> _1e5d88ec3_buildNonGenericTypeKind(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5ca5087_TypeDecl>* _101845_ast, jule::Slice<jule::Ptr<_1e5cb2292_GenericDecl>>* _10198_generics, jule::Slice<jule::Ptr<_1e5e417ea_TypeKind>>* _101944_ignored) {
	jule::Ptr<_1e5e53be7_typeChecker> _10207_tc = jule::new_ptr<_1e5e53be7_typeChecker>(_1e5e53be7_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data3), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data3), ._field_referencer=jule::Ptr<_1e5e52c07_referencer>(nullptr), ._field_refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1e5c8eacc_Token>(nullptr), ._field_ignoreGenerics=(*(_10198_generics)), ._field_ignoredGenerics=_101944_ignored, ._field_useGenerics=jule::Slice<jule::Ptr<_1e5e40a08_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1e5e40a08_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1e5e40a08_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _1e5e5b7d2_checkDecl(_10207_tc.ptr(), _101845_ast);;
}



inline jule::Bool _1e5d893be_buildFnNonGenericTypeKinds(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5ce3416_FnIns> _103047_f, jule::Slice<jule::Ptr<_1e5e417ea_TypeKind>>* _103063_ignored) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_1e5cb2292_GenericDecl>> _103111_generics = nullptr;;
	if (_1e5ce0a95_IsMethod((*(_103047_f))._field_Decl.ptr())) {
		_103111_generics=jule::append((*(*(_103047_f))._field_Decl.alloc)._field_Generics,(*((*(*(_103047_f))._field_Decl.alloc)._field_Owner))._field_Generics);
	} else {
		_103111_generics=(*((*(_103047_f))._field_Decl))._field_Generics;
	};
	__jule_func_result = _1e5d8a568_basicFnEnvironment(_self_, &(_103047_f), jule::__new_closure<jule::Bool,jule::Ptr<_1e5d7b768_sema>*>((void*)__jule_anon_1cac61646, jule::Ptr<__jule_anon_1cac61646_ctx>::make(__jule_anon_1cac61646_ctx{._103047_f=_103047_f,._103111_generics=_103111_generics,._103063_ignored=_103063_ignored}).as<jule::Uintptr>(), __jule_anon_1cac61646_ctx_handler));
	return __jule_func_result;;
}



inline jule::Ptr<_1e5ce3416_FnIns> _1e5d89710_getTraitCheckFnKind(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5ce0358_Fn>* _105341_f) {
	if (((*((*(_105341_f))))._field_Instances.len() == 1LL)) {
		return (*((*(_105341_f))))._field_Instances[0LL];;
	};
	jule::Ptr<_1e5ce3416_FnIns> _10577_ins = _1e5ce1865_instanceForce((*(_105341_f)));;
	jule::Ptr<_1e5e53be7_typeChecker> _10597_tc = jule::new_ptr<_1e5e53be7_typeChecker>(_1e5e53be7_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data3), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data3), ._field_referencer=jule::Ptr<_1e5e52c07_referencer>(nullptr), ._field_refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1e5c8eacc_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1e5cb2292_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1e5e40a08_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1e5e40a08_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1e5e40a08_TypeAlias>>(nullptr), ._field_inscatch=false});;
	{
		auto expr = &((*(_10577_ins))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cac67a48:;
		if (it != expr_end) {
			jule::Ptr<_1e5ce22b1_ParamIns> _106415_p = *it;
			{
				if ((!(_1e5cdded3_IsSelf((*(_106415_p))._field_Decl.ptr())))) {
					(*_106415_p.alloc)._field_Kind=_1e5e5b7d2_checkDecl(_10597_tc.ptr(), &((*((*(*(_106415_p))._field_Decl.alloc)._field_Kind))._field_Decl));
					if (((*_106415_p.alloc)._field_Kind == nullptr)) {
						return nullptr;;
					};
				};
			}
			_iter_next_1cac67a48:;
			++it;
			goto _iter_begin_1cac67a48;
		}
		_iter_end_1cac67a48:;
	};
	if ((!(_1e5ce080e_IsVoid((*(_105341_f)).ptr())))) {
		(*_10577_ins.alloc)._field_Result=_1e5e5b7d2_checkDecl(_10597_tc, &((*((*((*((*(_105341_f))))._field_Result))._field_Kind))._field_Decl));
		if (((*_10577_ins.alloc)._field_Result == nullptr)) {
			return nullptr;;
		};
	};
	return _10577_ins;;
}



inline jule::Bool _1e5d89bb6_checkConstraintsFn(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5ce3416_FnIns>* _108240_f, jule::Ptr<_1e5c8eacc_Token>* _108256_et, jule::Ptr<_1e5ce3416_FnIns> _108272_exist) {
	jule::Ptr<_1e5d318a5_constraintChecker> _10837_cc = _1e5d84de2_constraintChecker(_self_);;
	(*(_10837_cc))._field_et=(*(_108256_et));
	(*_10837_cc.alloc)._field_fi=(*(_108240_f));
	if ((_108272_exist != nullptr)) {
		{
			auto expr = &((*_108272_exist.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1cac6cbb3:;
			if (it != expr_end) {
				jule::I64 _10879_i = it - expr->begin();
				jule::Ptr<_1e5e3ee14_InsGeneric> _108716_g = *it;
				{
					(*((*((*(_108240_f))))._field_Generics[_10879_i]))._field_Constraint=(*(_108716_g))._field_Constraint;
				}
				_iter_next_1cac6cbb3:;
				++it;
				_10879_i++;
				goto _iter_begin_1cac6cbb3;
			}
			_iter_end_1cac6cbb3:;
		};
	} else {
		(*_10837_cc.alloc)._field_uniq=true;
	};
	return _1e5d3281d_check(_10837_cc);;
}



inline jule::Bool _1e5d8a16c_checkConstraintsStruct(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5cc8c7b_StructIns>* _109644_s, jule::Ptr<_1e5c8eacc_Token>* _109664_et, jule::Ptr<_1e5cc8c7b_StructIns> _109680_exist) {
	jule::Ptr<_1e5d318a5_constraintChecker> _10977_cc = _1e5d84de2_constraintChecker(_self_);;
	(*(_10977_cc))._field_et=(*(_109664_et));
	(*_10977_cc.alloc)._field_si=(*(_109644_s));
	if ((_109680_exist != nullptr)) {
		{
			auto expr = &((*_109680_exist.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1cac70d81:;
			if (it != expr_end) {
				jule::I64 _11019_i = it - expr->begin();
				jule::Ptr<_1e5e3ee14_InsGeneric> _110116_g = *it;
				{
					(*((*((*(_109644_s))))._field_Generics[_11019_i]))._field_Constraint=(*(_110116_g))._field_Constraint;
				}
				_iter_next_1cac70d81:;
				++it;
				_11019_i++;
				goto _iter_begin_1cac70d81;
			}
			_iter_end_1cac70d81:;
		};
	} else {
		(*_10977_cc.alloc)._field_uniq=true;
	};
	return _1e5d3281d_check(_10977_cc);;
}



inline jule::Bool _1e5d8a568_basicFnEnvironment(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5ce3416_FnIns>* _111340_f, jule::Fn<jule::Bool,jule::Ptr<_1e5d7b768_sema>*> _111351_algo) {
	jule::Ptr<_1e5d7b768_sema> _11147_sema = (*((*((*(_111340_f))))._field_Decl))._field_sema;;
	jule::Ptr<_1e5e03548_SymbolTable> _11157_old = _1e5d7de96_getCurrentFile(_11147_sema.ptr());;
	jule::Ptr<_1e5e03548_SymbolTable> _11167_file = _1e5d7a3d2_findFile(&((*_11147_sema.alloc)._field_files), &((*((*(*((*(_111340_f))))._field_Decl.alloc)._field_Token))._field_File));;
	if ((_11167_file != nullptr)) {
		_1e5d7e24e_setCurrentFile(_11147_sema, _11167_file);
	};
	jule::Bool _11213_ok = _111351_algo(&(_11147_sema));;
	if ((_11147_sema != _self_)) {
		(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,(*_11147_sema.alloc)._field_errors);
		(*_11147_sema.alloc)._field_errors=nullptr;
	};
	_1e5d7e24e_setCurrentFile(_11147_sema, _11157_old);
	return _11213_ok;;
}



inline jule::Bool _1e5d8a964_fnEnvironment(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5ce3416_FnIns>* _113335_f, jule::Fn<jule::Bool,jule::Ptr<_1e5d7b768_sema>*,jule::Slice<jule::Ptr<_1e5e40a08_TypeAlias>>*> _113346_algo) {
	jule::I64 _11347_size = (*((*(_113335_f))))._field_Generics.len();;
	if ((((*((*(_113335_f))))._field_Decl != nullptr) && ((*(*((*(_113335_f))))._field_Decl.alloc)._field_Owner != nullptr))) {
		_11347_size+=(*(*((*((*(_113335_f))))._field_Decl))._field_Owner.alloc)._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_1e5e40a08_TypeAlias>> _11387_generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5e40a08_TypeAlias>>::alloc(0LL, _11347_size); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1e5e40a08_TypeAlias>(nullptr); __jule_collection; });;
	_1e5d7a05d_appendGenericTypeAliases(&(_11387_generics), _113335_f);
	return _1e5d8a568_basicFnEnvironment(_self_, _113335_f, jule::__new_closure<jule::Bool,jule::Ptr<_1e5d7b768_sema>*>((void*)__jule_anon_1cac7961a, jule::Ptr<__jule_anon_1cac7961a_ctx>::make(__jule_anon_1cac7961a_ctx{._113346_algo=_113346_algo,._11387_generics=_11387_generics}).as<jule::Uintptr>(), __jule_anon_1cac7961a_ctx_handler));;
}



inline void _1e5d8ac1c_checkFnParamKind(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5ce22b1_ParamIns>* _114538_p) {
	(*((*((*(_114538_p))))._field_Kind))._field_Variadic=(*((*((*(_114538_p))))._field_Decl))._field_Variadic;
	if (((*(*((*(_114538_p))))._field_Decl.alloc)._field_Reference && (!(_1e5e5d707_isValidForRef(&((*((*(_114538_p))))._field_Kind)))))) {
		_1e5d7e66c_pushErr(_self_.ptr(), (*(*((*(_114538_p))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("references cannot points to type @", 34)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*((*(_114538_p))))._field_Kind), &__jule_any_type4); __jule_collection; }));
	};
}



inline jule::Bool _1e5d8b05d_reloadFnInsTypes(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5ce3416_FnIns> _115237_f) {
	if ((_1e5ce48ce_IsBuiltin(_115237_f.ptr()) || _1e5ce4b65_IsAnon(_115237_f))) {
		return true;;
	};
	return _1e5d8a964_fnEnvironment(_self_, &(_115237_f), jule::__new_closure<jule::Bool,jule::Ptr<_1e5d7b768_sema>*,jule::Slice<jule::Ptr<_1e5e40a08_TypeAlias>>*>((void*)__jule_anon_1cac7de05, jule::Ptr<__jule_anon_1cac7de05_ctx>::make(__jule_anon_1cac7de05_ctx{._115237_f=_115237_f,._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1cac7de05_ctx_handler));;
}



inline jule::Bool _1e5d8b514_checkRefValidityForInitExpr(jule::Ptr<_1e5d7b768_sema> _self_, jule::Bool _119244_leftMut, jule::Ptr<_1e5e08c13_Data>* _119264_d, jule::Ptr<_1e5c8eacc_Token>* _119279_errorToken) {
	if ((!(_1e5d78d2b_isValidModelForRef(&((*((*(_119264_d))))._field_Model))))) {
		_1e5d7e66c_pushErr(_self_.ptr(), (*(_119279_errorToken)), static_cast<jule::Str>(jule::Str::lit("references requires variable based expression for assignment", 60)), jule::Slice<jule::Any>());
		return false;;
	};
	if ((_119244_leftMut && (!((*((*(_119264_d))))._field_Mutable)))) {
		_1e5d7e66c_pushErr(_self_, (*(_119279_errorToken)), static_cast<jule::Str>(jule::Str::lit("mutable reference cannot point to immutable data", 48)), jule::Slice<jule::Any>());
		return false;;
	};
	return true;;
}



inline jule::Bool _1e5d8b855_isMutRiskyStruct(_1e5d7b768_sema* _self_, jule::Ptr<_1e5cc8c7b_StructIns>* _120929_s) {
	{
		auto expr = &((*((*(_120929_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cac8911e:;
		if (it != expr_end) {
			jule::Ptr<_1e5cc81cb_FieldIns> *_121010_f = it;
			{
				if ((((*((*((*(_121010_f))))._field_Decl))._field_Mutable && _1e5e431d1_Mutable((*(*(_121010_f)).alloc)._field_Kind.ptr())) && _1e5d7edcb_isAccessibleDefine(_self_, (*(*((*(_121010_f))))._field_Decl.alloc)._field_Public, (*(*((*(_121010_f))))._field_Decl.alloc)._field_Token))) {
					return true;;
				};
			}
			_iter_next_1cac8911e:;
			++it;
			goto _iter_begin_1cac8911e;
		}
		_iter_end_1cac8911e:;
	};
	return false;;
}



inline jule::Bool _1e5d8be71_checkValidityForInitExpr(jule::Ptr<_1e5d7b768_sema> _self_, jule::Bool _123641_leftMut, jule::Bool _123656_leftRef, jule::Ptr<_1e5e417ea_TypeKind>* _12374_leftKind, jule::Ptr<_1e5e08c13_Data>* _123730_d, jule::Ptr<_1e5c8eacc_Token>* _123745_errorToken) {
	if ((_123641_leftMut && (!((*((*(_123730_d))))._field_Mutable)))) {
		if ((_1e5e431d1_Mutable((*((*(_123730_d))))._field_Kind.ptr()) || (*(*((*(_123730_d))))._field_Kind.alloc)._field_Variadic)) {
			_1e5d7e66c_pushErr(_self_.ptr(), (*(_123745_errorToken)), static_cast<jule::Str>(jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*((*(_123730_d))))._field_Kind), &__jule_any_type4); __jule_collection; }));
			return false;;
		};
		jule::Ptr<_1e5cc8c7b_StructIns> _12454_s = _1e5e45524_Struct((*((*(_123730_d))))._field_Kind);;
		if (((_12454_s != nullptr) && _1e5d8b855_isMutRiskyStruct(_self_, &(_12454_s)))) {
			_1e5d7e66c_pushErr(_self_, (*(_123745_errorToken)), static_cast<jule::Str>(jule::Str::lit("struct @ cannot copied due to field which is stores mutable data", 64)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*((*(_123730_d))))._field_Kind), &__jule_any_type4); __jule_collection; }));
			return false;;
		};
	};
	if (_123656_leftRef) {
		if ((!(_1e5d8b514_checkRefValidityForInitExpr(_self_, _123641_leftMut, _123730_d, _123745_errorToken)))) {
			return false;;
		};
	};
	jule::Ptr<_1e5de2328_assignTypeChecker> _12567_atc = jule::new_ptr<_1e5de2328_assignTypeChecker>(_1e5de2328_assignTypeChecker{._field_s=_self_, ._field_dest=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_d=(*(_123730_d)), ._field_errorToken=(*(_123745_errorToken)), ._field_refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr)});;
	return _1e5de2a76_checkValidity(_12567_atc.ptr());;
}



inline jule::Bool _1e5d8c36c_checkTypeAliasDeclKind(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5e40a08_TypeAlias>* _126444_ta, jule::Trait _126464_l) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1e5e03548_SymbolTable> _12657_old = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1e5d7e24e_setCurrentFile(_self_, _12657_old);
	});;
	if (((*((*(_126444_ta))))._field_Token != nullptr)) {
		jule::Ptr<_1e5e03548_SymbolTable> _12708_file = _1e5d7a3d2_findFile(&((*_self_.alloc)._field_files), &((*(*((*(_126444_ta))))._field_Token.alloc)._field_File));;
		if ((_12708_file != nullptr)) {
			_1e5d7e24e_setCurrentFile(_self_, _12708_file);
		};
	};
	__jule_func_result=_1e5d84b5b_checkTypeWithRefers(_self_, &((*((*(_126444_ta))))._field_Kind), _126464_l, nullptr, jule::new_ptr<_1e5e52c07_referencer>(_1e5e52c07_referencer{._field_ident=(*((*(_126444_ta))))._field_Ident, ._field_owner=jule::Any((*(_126444_ta)), &__jule_any_type27), ._field_refs=(&((*((*(_126444_ta))))._field_Refers))}));
	if (((__jule_func_result && (_1e5e44c71_Arr((*((*((*(_126444_ta))))._field_Kind))._field_Kind.ptr()) != nullptr)) && (*(_1e5e44c71_Arr((*((*((*(_126444_ta))))._field_Kind))._field_Kind)))._field_Auto)) {
		_1e5d7e66c_pushErr(_self_, (*((*(*((*(_126444_ta))))._field_Kind.alloc)._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
		__jule_func_result=false;
	};
	return __jule_func_result;;
}



inline void _1e5d8c6d0_checkTypeAliasDecl(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5e40a08_TypeAlias>* _128740_ta, jule::Trait _128760_l) {
	if (_1e5c924b4_IsIgnoreIdent((*((*(_128740_ta))))._field_Ident)) {
		_1e5d7e66c_pushErr(_self_.ptr(), (*((*(_128740_ta))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	};
	_1e5d8c36c_checkTypeAliasDeclKind(_self_, _128740_ta, _128760_l);
}



inline void _1e5d8c988_checkTypeAliasDeclDup(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5e40a08_TypeAlias>* _129543_ta) {
	if (_1e5c924b4_IsIgnoreIdent((*((*(_129543_ta))))._field_Ident)) {
		_1e5d7e66c_pushErr(_self_.ptr(), (*((*(_129543_ta))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	};
	if (_1e5d80382_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>((*(_129543_ta))), &((*((*(_129543_ta))))._field_Ident), (*((*(_129543_ta))))._field_Binded)) {
		_1e5d7e66c_pushErr(_self_, (*((*(_129543_ta))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_129543_ta))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1e5d7e9d0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	_1e5d8c36c_checkTypeAliasDeclKind(_self_, _129543_ta, jule::Trait(_self_, (jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data3));
}



inline jule::Bool _1e5d8cc1e_checkTypeAliasDecls(jule::Ptr<_1e5d7b768_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cac9cc04:;
		if (it != expr_end) {
			jule::Ptr<_1e5e40a08_TypeAlias> _130815_ta = *it;
			{
				_1e5d8c988_checkTypeAliasDeclDup(_self_, &(_130815_ta));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1cac9cc04:;
			++it;
			goto _iter_begin_1cac9cc04;
		}
		_iter_end_1cac9cc04:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1caccbc77_checkEnumItemsDup(_1e5d7b768_sema* _self_, jule::Slice<jule::Ptr<_1e5d05a55_EnumItem>> _131936_items) {
	{
		auto expr = &(_131936_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1caccd185:;
		if (it != expr_end) {
			jule::Ptr<_1e5d05a55_EnumItem> *_132010_item = it;
			{
				if (((*((*(_132010_item))))._field_Ident).empty()) {
					goto _iter_next_1caccd185;
				} else if (_1e5c924b4_IsIgnoreIdent((*((*(_132010_item))))._field_Ident)) {
					_1e5d7e66c_pushErr(_self_, (*(*(_132010_item)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_131936_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1cacce3a6:;
						if (it != expr_end) {
							jule::Ptr<_1e5d05a55_EnumItem> *_132612_citem = it;
							{
								if (((*(_132010_item)) == (*(_132612_citem)))) {
									goto _iter_end_1cacce3a6;
								} else if (((*((*(_132010_item))))._field_Ident == (*((*(_132612_citem))))._field_Ident)) {
									_1e5d7e66c_pushErr(_self_, (*(*(_132010_item)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_132010_item)).alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
									_1e5d7e9d0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
									goto _iter_end_1cacce3a6;
								};
							}
							_iter_next_1cacce3a6:;
							++it;
							goto _iter_begin_1cacce3a6;
						}
						_iter_end_1cacce3a6:;
					};
				};
			}
			_iter_next_1caccd185:;
			++it;
			goto _iter_begin_1caccd185;
		}
		_iter_end_1caccd185:;
	};
}

inline void _1cacd9dea_checkEnumItemsDup(_1e5d7b768_sema* _self_, jule::Slice<jule::Ptr<_1e5d07705_TypeEnumItem>> _131936_items) {
	{
		auto expr = &(_131936_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cacdb2d6:;
		if (it != expr_end) {
			jule::Ptr<_1e5d07705_TypeEnumItem> *_132010_item = it;
			{
				if (((*((*(_132010_item))))._field_Ident).empty()) {
					goto _iter_next_1cacdb2d6;
				} else if (_1e5c924b4_IsIgnoreIdent((*((*(_132010_item))))._field_Ident)) {
					_1e5d7e66c_pushErr(_self_, (*(*(_132010_item)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_131936_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1cacdc507:;
						if (it != expr_end) {
							jule::Ptr<_1e5d07705_TypeEnumItem> *_132612_citem = it;
							{
								if (((*(_132010_item)) == (*(_132612_citem)))) {
									goto _iter_end_1cacdc507;
								} else if (((*((*(_132010_item))))._field_Ident == (*((*(_132612_citem))))._field_Ident)) {
									_1e5d7e66c_pushErr(_self_, (*(*(_132010_item)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_132010_item)).alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
									_1e5d7e9d0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
									goto _iter_end_1cacdc507;
								};
							}
							_iter_next_1cacdc507:;
							++it;
							goto _iter_begin_1cacdc507;
						}
						_iter_end_1cacdc507:;
					};
				};
			}
			_iter_next_1cacdb2d6:;
			++it;
			goto _iter_begin_1cacdb2d6;
		}
		_iter_end_1cacdb2d6:;
	};
}



inline void _1e5d8d280_checkEnumItemsStr(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5d065c2_Enum>* _133939_e) {
	jule::Ptr<_1e5e0a93a_eval> _13407_eval = _1e5d870c0_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data3));;
	{
		auto expr = &((*((*(_133939_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cac9e992:;
		if (it != expr_end) {
			jule::Ptr<_1e5d05a55_EnumItem> _134115_item = *it;
			{
				if (_1e5d05e40_AutoExpr(_134115_item.ptr())) {
					(*_134115_item.alloc)._field_Value=jule::new_ptr<_1e5e09d8a_Value>(_1e5e09d8a_Value{._field_Expr=jule::Ptr<_1e5ca93bb_Expr>(nullptr), ._field_Data=jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1e21a526b_NewStr((*_134115_item.alloc)._field_Ident)})});
					(*((*((*_134115_item.alloc)._field_Value))._field_Data))._field_Model=jule::Any((*(*((*(_134115_item))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type20);
				} else {
					jule::Ptr<_1e5e08c13_Data> _13509_d = _1e5e297a0_evalExpr(_13407_eval, (*((*(_134115_item))._field_Value))._field_Expr);;
					if ((_13509_d == nullptr)) {
						goto _iter_next_1cac9e992;
					};
					if ((!(_1e5e0964d_IsConst(_13509_d.ptr())))) {
						_1e5d7e66c_pushErr(_self_, (*((*(*(_134115_item))._field_Value.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
					};
					jule::Ptr<_1e5ce65a1_ReferenceStack> _13599_refers = static_cast<jule::Ptr<_1e5ce65a1_ReferenceStack>>(nullptr);;
					_1e5d876db_checkAssignType(_self_, false, &((*((*((*(_133939_e))))._field_Kind))._field_Kind), &(_13509_d), (*_134115_item.alloc)._field_Token, _13599_refers);
					(*(*(_134115_item))._field_Value.alloc)._field_Data=_13509_d;
				};
			}
			_iter_next_1cac9e992:;
			++it;
			goto _iter_begin_1cac9e992;
		}
		_iter_end_1cac9e992:;
	};
}



inline void _1cacaac34_checkEnumItemInt(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5e0a93a_eval>* _136643_eval, jule::Ptr<_1e5d065c2_Enum>* _136661_e, jule::Ptr<_1e5e49913_Prim>* _136672_prim, jule::Ptr<_1e5d05a55_EnumItem>* _136690_item, jule::U64* _1366112_n) {
	if (_1e5d05e40_AutoExpr((*(_136690_item)).ptr())) {
		(*((*(_136690_item))))._field_Value=jule::new_ptr<_1e5e09d8a_Value>(_1e5e09d8a_Value{._field_Expr=jule::Ptr<_1e5ca93bb_Expr>(nullptr), ._field_Data=jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)})});
		{
			
{
				_case_begin_1cacad143:;
				{
					(*((*((*((*(_136690_item))))._field_Value))._field_Data))._field_Constant=static__1e21a4bd8_NewU64((*(_1366112_n)));
				}
			}
			_match_end_1cacada06:;
		};
		(*((*((*((*(_136690_item))))._field_Value))._field_Data))._field_Model=jule::Any((*(*((*((*(_136690_item))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type20);
	} else {
		jule::Ptr<_1e5e08c13_Data> _13818_d = _1e5e297a0_evalExpr((*(_136643_eval)), (*((*((*(_136690_item))))._field_Value))._field_Expr);;
		if ((_13818_d == nullptr)) {
			return;;
		};
		if ((!(_1e5e0964d_IsConst(_13818_d.ptr())))) {
			_1e5d7e66c_pushErr(_self_.ptr(), (*((*(*((*(_136690_item))))._field_Value.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1e5ce65a1_ReferenceStack> _13888_refers = static_cast<jule::Ptr<_1e5ce65a1_ReferenceStack>>(nullptr);;
		_1e5d876db_checkAssignType(_self_, false, &((*((*((*(_136661_e))))._field_Kind))._field_Kind), &(_13818_d), (*((*(_136690_item))))._field_Token, _13888_refers);
		(*(*((*(_136690_item))))._field_Value.alloc)._field_Data=_13818_d;
		{
			
{
				_case_begin_1cacb2bb4:;
				{
					(*(_1366112_n))=_1e21a613a_ReadU64((*((*(*((*(_136690_item))))._field_Value.alloc)._field_Data))._field_Constant.ptr());
				}
			}
			_match_end_1cacb3ed4:;
		};
	};
}

inline void _1cacbb7b1_checkEnumItemInt(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5e0a93a_eval>* _136643_eval, jule::Ptr<_1e5d065c2_Enum>* _136661_e, jule::Ptr<_1e5e49913_Prim>* _136672_prim, jule::Ptr<_1e5d05a55_EnumItem>* _136690_item, jule::I64* _1366112_n) {
	if (_1e5d05e40_AutoExpr((*(_136690_item)).ptr())) {
		(*((*(_136690_item))))._field_Value=jule::new_ptr<_1e5e09d8a_Value>(_1e5e09d8a_Value{._field_Expr=jule::Ptr<_1e5ca93bb_Expr>(nullptr), ._field_Data=jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)})});
		{
			
{
				_case_begin_1cacbe583:;
				{
					(*((*((*((*(_136690_item))))._field_Value))._field_Data))._field_Constant=static__1e21a491e_NewI64((*(_1366112_n)));
				}
			}
			_match_end_1cacbe51c:;
		};
		(*((*((*((*(_136690_item))))._field_Value))._field_Data))._field_Model=jule::Any((*(*((*((*(_136690_item))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type20);
	} else {
		jule::Ptr<_1e5e08c13_Data> _13818_d = _1e5e297a0_evalExpr((*(_136643_eval)), (*((*((*(_136690_item))))._field_Value))._field_Expr);;
		if ((_13818_d == nullptr)) {
			return;;
		};
		if ((!(_1e5e0964d_IsConst(_13818_d.ptr())))) {
			_1e5d7e66c_pushErr(_self_.ptr(), (*((*(*((*(_136690_item))))._field_Value.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1e5ce65a1_ReferenceStack> _13888_refers = static_cast<jule::Ptr<_1e5ce65a1_ReferenceStack>>(nullptr);;
		_1e5d876db_checkAssignType(_self_, false, &((*((*((*(_136661_e))))._field_Kind))._field_Kind), &(_13818_d), (*((*(_136690_item))))._field_Token, _13888_refers);
		(*(*((*(_136690_item))))._field_Value.alloc)._field_Data=_13818_d;
		{
			
{
				_case_begin_1cacc4c09:;
				{
					(*(_1366112_n))=_1e21a5da4_ReadI64((*((*(*((*(_136690_item))))._field_Value.alloc)._field_Data))._field_Constant.ptr());
				}
			}
			_match_end_1cacc4b82:;
		};
	};
}



inline void _1caca6d95_checkEnumItemsInt1(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5e49913_Prim>* _140241_prim, jule::Ptr<_1e5d065c2_Enum>* _140259_e) {
	jule::U64 _14037_max = static_cast<jule::U64>(0LLU);;
	{
		
{
			_case_begin_1caca8a9a:;
			{
				_14037_max=_1e219eb5b_MaxU(_1e5e49c87_Str((*(_140241_prim)).ptr()));
			}
		}
		_match_end_1caca8c10:;
	};
	jule::Ptr<_1e5e0a93a_eval> _14137_eval = _1e5d870c0_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data3));;
	jule::U64 _14147_n = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1e5d05a55_EnumItem> _14157_first = (*((*(_140259_e))))._field_Items[0LL];;
	_1cacaac34_checkEnumItemInt(_self_, &(_14137_eval), _140259_e, _140241_prim, &(_14157_first), &(_14147_n));
	if (((*((*(_14157_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1caca83c4:;
				{
					_14147_n=_1e21a6e0a_AsU64((*(*((*(_14157_first))._field_Value))._field_Data.alloc)._field_Constant.ptr());
				}
			}
			_match_end_1cacb47a9:;
		};
	};
	{
		auto expr = (*((*(_140259_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1cacb073e:;
		if (it != expr_end) {
			jule::Ptr<_1e5d05a55_EnumItem> _142715_item = *it;
			{
				if (((_1e5d05e40_AutoExpr(_142715_item.ptr()) && (_14147_n > 0LLU)) && ((jule::U64)(_14037_max - _14147_n) <= 0LLU))) {
					_1e5d7e66c_pushErr(_self_, (*_142715_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
					goto _iter_end_1cacb073e;
				};
				(_14147_n)++;
				_1cacaac34_checkEnumItemInt(_self_, &(_14137_eval), _140259_e, _140241_prim, &(_142715_item), &(_14147_n));
			}
			_iter_next_1cacb073e:;
			++it;
			goto _iter_begin_1cacb073e;
		}
		_iter_end_1cacb073e:;
	};
}

inline void _1caca7181_checkEnumItemsInt1(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5e49913_Prim>* _140241_prim, jule::Ptr<_1e5d065c2_Enum>* _140259_e) {
	jule::I64 _14037_max = static_cast<jule::I64>(0LL);;
	{
		
{
			_case_begin_1cacb966b:;
			{
				_14037_max=_1e219e892_MaxI(_1e5e49c87_Str((*(_140241_prim)).ptr()));
			}
		}
		_match_end_1cacb9605:;
	};
	jule::Ptr<_1e5e0a93a_eval> _14137_eval = _1e5d870c0_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data3));;
	jule::I64 _14147_n = static_cast<jule::I64>(0LL);;
	jule::Ptr<_1e5d05a55_EnumItem> _14157_first = (*((*(_140259_e))))._field_Items[0LL];;
	_1cacbb7b1_checkEnumItemInt(_self_, &(_14137_eval), _140259_e, _140241_prim, &(_14157_first), &(_14147_n));
	if (((*((*(_14157_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1cacbc174:;
				{
					_14147_n=_1e21a6b74_AsI64((*(*((*(_14157_first))._field_Value))._field_Data.alloc)._field_Constant.ptr());
				}
			}
			_match_end_1cacc21ac:;
		};
	};
	{
		auto expr = (*((*(_140259_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1cacc68ed:;
		if (it != expr_end) {
			jule::Ptr<_1e5d05a55_EnumItem> _142715_item = *it;
			{
				if (((_1e5d05e40_AutoExpr(_142715_item.ptr()) && (_14147_n > 0LL)) && ((_14037_max - _14147_n) <= 0LL))) {
					_1e5d7e66c_pushErr(_self_, (*_142715_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
					goto _iter_end_1cacc68ed;
				};
				(_14147_n)++;
				_1cacbb7b1_checkEnumItemInt(_self_, &(_14137_eval), _140259_e, _140241_prim, &(_142715_item), &(_14147_n));
			}
			_iter_next_1cacc68ed:;
			++it;
			goto _iter_begin_1cacc68ed;
		}
		_iter_end_1cacc68ed:;
	};
}



inline void _1e5d8de2e_checkEnumItemsInt(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5d065c2_Enum>* _143739_e) {
	jule::Ptr<_1e5e49913_Prim> _14383_prim = _1e5e43ea1_Prim((*((*((*(_143739_e))))._field_Kind))._field_Kind.ptr());;
	{
		
		if (_1e21a3258_IsSigInt((*(_14383_prim))._field_Kind)) {
			_case_begin_1cacb65ad:;
			{
				_1caca7181_checkEnumItemsInt1(_self_, &(_14383_prim), _143739_e);
			}
		}
		else {
			_case_begin_1caca65e2:;
			{
				_1caca6d95_checkEnumItemsInt1(_self_, &(_14383_prim), _143739_e);
			}
		}
		_match_end_1caca656a:;
	};
}



inline void _1e5d8e1d7_checkEnumDecl(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5d065c2_Enum>* _144735_e) {
	if (_1e5c924b4_IsIgnoreIdent((*((*(_144735_e))))._field_Ident)) {
		_1e5d7e66c_pushErr(_self_.ptr(), (*((*(_144735_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1e5d80382_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_144735_e))), &((*((*(_144735_e))))._field_Ident), false)) {
		_1e5d7e66c_pushErr(_self_, (*((*(_144735_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_144735_e))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1e5d7e9d0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	if (((*((*(_144735_e))))._field_Items.len() == 0LL)) {
		_1e5d7e66c_pushErr(_self_.ptr(), (*((*(_144735_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("enum @ have no field", 20)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_144735_e))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return;;
	};
	_1caccbc77_checkEnumItemsDup(_self_, (*((*(_144735_e))))._field_Items);
	if (((*((*(_144735_e))))._field_Kind != nullptr)) {
		if ((!(_1e5d852dd_checkType(_self_, &((*((*(_144735_e))))._field_Kind), jule::Trait(_self_, (jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data3))))) {
			return;;
		};
	} else {
		(*((*(_144735_e))))._field_Kind=(*(_1e6029916_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_Kind;
	};
	jule::Ptr<_1e5e49913_Prim> _14717_t = _1e5e43ea1_Prim((*((*((*(_144735_e))))._field_Kind))._field_Kind.ptr());;
	if ((_14717_t == nullptr)) {
		_1e5d7e66c_pushErr(_self_, (*((*(_144735_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type source", 19)), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_1e5e4cdcd_IsStr(_14717_t.ptr())) {
			_case_begin_1cacd45a9:;
			{
				_1e5d8d280_checkEnumItemsStr(_self_, _144735_e);
			}
		}
		else if (_1e21a3830_IsInt(_1e5e49c87_Str(_14717_t.ptr()))) {
			_case_begin_1cacd428a:;
			{
				_1e5d8de2e_checkEnumItemsInt(_self_, _144735_e);
			}
		}
		else {
			_case_begin_1cacd4224:;
			{
				_1e5d7e66c_pushErr(_self_, (*((*(_144735_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type source", 19)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1cacd36eb:;
	};
}



inline void _1e5d8e490_checkTypeEnumDecl(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5d07ccc_TypeEnum>* _148839_e) {
	if (_1e5c924b4_IsIgnoreIdent((*((*(_148839_e))))._field_Ident)) {
		_1e5d7e66c_pushErr(_self_.ptr(), (*((*(_148839_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1e5d80382_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_148839_e))), &((*((*(_148839_e))))._field_Ident), false)) {
		_1e5d7e66c_pushErr(_self_, (*((*(_148839_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_148839_e))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1e5d7e9d0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	if (((*((*(_148839_e))))._field_Items.len() == 0LL)) {
		_1e5d7e66c_pushErr(_self_.ptr(), (*((*(_148839_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("enum @ have no field", 20)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_148839_e))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return;;
	};
	_1cacd9dea_checkEnumItemsDup(_self_, (*((*(_148839_e))))._field_Items);
	{
		auto expr = &((*((*(_148839_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cacda868:;
		if (it != expr_end) {
			jule::Ptr<_1e5d07705_TypeEnumItem> _150215_item = *it;
			{
				if (((*(_150215_item))._field_Kind == nullptr)) {
					_1e5d7e66c_pushErr(_self_, (*_150215_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
					goto _iter_next_1cacda868;
				};
				jule::Bool _15074_ok = _1e5d852dd_checkType(_self_, &((*_150215_item.alloc)._field_Kind), jule::Trait(_self_, (jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data3));;
				if ((!(_15074_ok))) {
					goto _iter_next_1cacda868;
				};
				jule::Ptr<_1e5e49913_Prim> _15114_p = _1e5e43ea1_Prim((*((*_150215_item.alloc)._field_Kind))._field_Kind.ptr());;
				if (((_15114_p != nullptr) && _1e5e4d164_IsAny(_15114_p))) {
					_1e5d7e66c_pushErr(_self_, (*_150215_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("the <any> type is not allowed for type-enum declarations", 56)), jule::Slice<jule::Any>());
				};
			}
			_iter_next_1cacda868:;
			++it;
			goto _iter_begin_1cacda868;
		}
		_iter_end_1cacda868:;
	};
	if (((*((*(_148839_e))))._field_Items.len() == 1LL)) {
		jule::Ptr<_1e5d07705_TypeEnumItem> _15178_item = (*((*(_148839_e))))._field_Items[0LL];;
		_1e5e417ea_TypeKind _15184_tk = _1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_148839_e)), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data4)};;
		if ((((*((*(_15178_item))._field_Kind))._field_Kind != nullptr) && _1e5e42037_Equal((*((*(_15178_item))._field_Kind))._field_Kind, ((jule::Ptr<_1e5e417ea_TypeKind>)((&(_15184_tk))))))) {
			_1e5d7e66c_pushErr(_self_, (*_15178_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5d08151_Str((*(_148839_e)).ptr()), &__jule_any_type4); __jule_collection; }));
		};
	};
}



inline jule::Bool _1e5d8e726_checkEnumDecls(jule::Ptr<_1e5d7b768_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cace69b7:;
		if (it != expr_end) {
			jule::Ptr<_1e5d065c2_Enum> _152915_e = *it;
			{
				_1e5d8e1d7_checkEnumDecl(_self_, &(_152915_e));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1cace69b7:;
			++it;
			goto _iter_begin_1cace69b7;
		}
		_iter_end_1cace69b7:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1e5d8e9ac_checkTypeEnumDecls(jule::Ptr<_1e5d7b768_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cace818e:;
		if (it != expr_end) {
			jule::Ptr<_1e5d07ccc_TypeEnum> _154115_e = *it;
			{
				_1e5d8e490_checkTypeEnumDecl(_self_, &(_154115_e));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1cace818e:;
			++it;
			goto _iter_begin_1cace818e;
		}
		_iter_end_1cace818e:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1e5d8eced_checkDeclGenerics(_1e5d7b768_sema* _self_, jule::Slice<jule::Ptr<_1e5cb2292_GenericDecl>>* _155134_generics) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = _155134_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cace8744:;
		if (it != expr_end) {
			jule::I64 _15537_i = it - expr->begin();
			jule::Ptr<_1e5cb2292_GenericDecl> *_155310_g = it;
			{
				if (_1e5c924b4_IsIgnoreIdent((*((*(_155310_g))))._field_Ident)) {
					_1e5d7e66c_pushErr(_self_, (*(*(_155310_g)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1cace8744;
				};
				_julec_label_1cacea6ad:;
				{
					auto expr = _155134_generics;
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1caceb1a3:;
					if (it != expr_end) {
						jule::I64 _15628_j = it - expr->begin();
						jule::Ptr<_1e5cb2292_GenericDecl> *_156211_ct = it;
						{
							{
								
								if ((_15628_j >= _15537_i)) {
									_case_begin_1cacebc75:;
									{
										goto _iter_end_1caceb1a3;
									}
								}
								else if (((*(*(_155310_g)).alloc)._field_Ident == (*((*(_156211_ct))))._field_Ident)) {
									_case_begin_1cacebd0d:;
									{
										_1e5d7e66c_pushErr(_self_, (*(*(_155310_g)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_155310_g)).alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
										_1e5d7e9d0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
										__jule_func_result=false;
										goto _iter_end_1caceb1a3;
									}
								}
								_match_end_1cacebb76:;
							};
						}
						_iter_next_1caceb1a3:;
						++it;
						_15628_j++;
						goto _iter_begin_1caceb1a3;
					}
					_iter_end_1caceb1a3:;
				};
			}
			_iter_next_1cace8744:;
			++it;
			_15537_i++;
			goto _iter_begin_1cace8744;
		}
		_iter_end_1cace8744:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1e5d9013e_checkFnDeclParamsDup(_1e5d7b768_sema* _self_, jule::Ptr<_1e5ce0358_Fn>* _157837_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	_julec_label_1caceba88:;
	{
		auto expr = &((*((*(_157837_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1caceca78:;
		if (it != expr_end) {
			jule::I64 _15817_i = it - expr->begin();
			jule::Ptr<_1e5cdd884_Param> *_158110_p = it;
			{
				{
					auto expr = &((*((*(_157837_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1caceea25:;
					if (it != expr_end) {
						jule::Ptr<_1e5cb2292_GenericDecl> *_158311_g = it;
						{
							if (((*((*(_158110_p))))._field_Ident == (*((*(_158311_g))))._field_Ident)) {
								__jule_func_result=false;
								_1e5d7e66c_pushErr(_self_, (*(*(_158110_p)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_158110_p)).alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
								_1e5d7e9d0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
								goto _iter_next_1caceca78;
							};
						}
						_iter_next_1caceea25:;
						++it;
						goto _iter_begin_1caceea25;
					}
					_iter_end_1caceea25:;
				};
				_julec_label_1cad01a38:;
				{
					auto expr = &((*((*(_157837_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1caceeeed:;
					if (it != expr_end) {
						jule::I64 _15938_j = it - expr->begin();
						jule::Ptr<_1e5cdd884_Param> *_159311_jp = it;
						{
							{
								
								if ((_15938_j >= _15817_i)) {
									_case_begin_1cad025e9:;
									{
										goto _iter_end_1caceeeed;
									}
								}
								else if (_1e5c924b4_IsIgnoreIdent((*(*(_158110_p)).alloc)._field_Ident) || _1e5c924b4_IsIgnoreIdent((*((*(_159311_jp))))._field_Ident) || _1e5c9277d_IsAnonIdent((*(*(_158110_p)).alloc)._field_Ident) || _1e5c9277d_IsAnonIdent((*(*(_159311_jp)).alloc)._field_Ident)) {
									_case_begin_1cad02682:;
									{
										goto _iter_end_1caceeeed;
									}
								}
								else if (((*(*(_158110_p)).alloc)._field_Ident == (*((*(_159311_jp))))._field_Ident)) {
									_case_begin_1cad026e8:;
									{
										__jule_func_result=false;
										_1e5d7e66c_pushErr(_self_, (*(*(_158110_p)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_158110_p)).alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
										_1e5d7e9d0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
										goto _iter_next_1caceca78;
									}
								}
								_match_end_1cad024a6:;
							};
						}
						_iter_next_1caceeeed:;
						++it;
						_15938_j++;
						goto _iter_begin_1caceeeed;
					}
					_iter_end_1caceeeed:;
				};
			}
			_iter_next_1caceca78:;
			++it;
			_15817_i++;
			goto _iter_begin_1caceca78;
		}
		_iter_end_1caceca78:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1e5d90480_checkFnDeclResultDup(_1e5d7b768_sema* _self_, jule::Ptr<_1e5ce0358_Fn>* _161537_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	if (_1e5ce080e_IsVoid((*(_161537_f)).ptr())) {
		return __jule_func_result;;
	};
	{
		auto expr = &((*(*((*(_161537_f))))._field_Result.alloc)._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cad05b6e:;
		if (it != expr_end) {
			jule::I64 _16227_i = it - expr->begin();
			jule::Ptr<_1e5c8eacc_Token> *_162210_v = it;
			{
				if ((_1e5c924b4_IsIgnoreIdent((*((*(_162210_v))))._field_Kind) || _1e5c9277d_IsAnonIdent((*(*(_162210_v)).alloc)._field_Kind))) {
					goto _iter_next_1cad05b6e;
				};
				{
					auto expr = &((*((*(_161537_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cad07258:;
					if (it != expr_end) {
						jule::Ptr<_1e5cb2292_GenericDecl> *_162711_g = it;
						{
							if (((*(*(_162210_v)).alloc)._field_Kind == (*((*(_162711_g))))._field_Ident)) {
								goto _julec_label_1cad087ed;
							};
						}
						_iter_next_1cad07258:;
						++it;
						goto _iter_begin_1cad07258;
					}
					_iter_end_1cad07258:;
				};
				{
					auto expr = &((*((*(_161537_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cad07654:;
					if (it != expr_end) {
						jule::Ptr<_1e5cdd884_Param> *_163311_p = it;
						{
							if (((*(*(_162210_v)).alloc)._field_Kind == (*((*(_163311_p))))._field_Ident)) {
								goto _julec_label_1cad087ed;
							};
						}
						_iter_next_1cad07654:;
						++it;
						goto _iter_begin_1cad07654;
					}
					_iter_end_1cad07654:;
				};
				_julec_label_1cad08cc6:;
				{
					auto expr = &((*((*((*(_161537_f))))._field_Result))._field_Idents);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cad091c2:;
					if (it != expr_end) {
						jule::I64 _16418_j = it - expr->begin();
						jule::Ptr<_1e5c8eacc_Token> *_164111_jv = it;
						{
							{
								
								if ((_16418_j >= _16227_i)) {
									_case_begin_1cad09c61:;
									{
										goto _iter_end_1cad091c2;
									}
								}
								else if (((*((*(_164111_jv))))._field_Kind == (*(*(_162210_v)).alloc)._field_Kind)) {
									_case_begin_1cad09ce9:;
									{
										goto _julec_label_1cad087ed;
									}
								}
								_match_end_1cad09b51:;
							};
						}
						_iter_next_1cad091c2:;
						++it;
						_16418_j++;
						goto _iter_begin_1cad091c2;
					}
					_iter_end_1cad091c2:;
				};
				goto _iter_next_1cad05b6e;
				_julec_label_1cad087ed:;
				_1e5d7e66c_pushErr(_self_, (*(_162210_v)), static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_162210_v)).alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
				_1e5d7e9d0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
				__jule_func_result=false;
			}
			_iter_next_1cad05b6e:;
			++it;
			_16227_i++;
			goto _iter_begin_1cad05b6e;
		}
		_iter_end_1cad05b6e:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1e5d907c1_checkFnVariadicParam(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5ce0358_Fn>* _166042_f) {
	if (((*((*(_166042_f))))._field_Params.len() == 0LL)) {
		return false;;
	};
	jule::Ptr<_1e5cdd884_Param> _16647_param = (*((*(_166042_f))))._field_Params[((*((*(_166042_f))))._field_Params.len() - 1LL)];;
	if (((*(_16647_param))._field_Variadic && (*_16647_param.alloc)._field_Reference)) {
		_1e5d7e66c_pushErr(_self_.ptr(), (*_16647_param.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("variadic storage cannot be reference", 36)), jule::Slice<jule::Any>());
	};
	return true;;
}



inline void _1e5d90a79_checkFnDeclPrototype(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5ce0358_Fn>* _167342_f) {
	if (((*((*(_167342_f))))._field_Exceptional && (*((*(_167342_f))))._field_Binded)) {
		_1e5d7e66c_pushErr(_self_.ptr(), (*((*(_167342_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("binded defines cannot be exceptional", 36)), jule::Slice<jule::Any>());
		return;;
	};
	if ((*((*(_167342_f))))._field_Exceptional) {
		if (_1e5ce0d2b_IsEntryPoint((*(_167342_f)).ptr())) {
			_1e5d7e66c_pushErr(_self_, (*((*(_167342_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("entry point cannot be exceptional", 33)), jule::Slice<jule::Any>());
		} else if (_1e5ce10b2_IsInit((*(_167342_f)).ptr())) {
			_1e5d7e66c_pushErr(_self_, (*((*(_167342_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("initializer function cannot be exceptional", 42)), jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_1e5d8eced_checkDeclGenerics(_self_, &((*((*(_167342_f))))._field_Generics))))) {
			_case_begin_1cad11a9d:;
		}
		else if ((!(_1e5d9013e_checkFnDeclParamsDup(_self_, _167342_f)))) {
			_case_begin_1cad11b14:;
		}
		else if ((!(_1e5d90480_checkFnDeclResultDup(_self_, _167342_f)))) {
			_case_begin_1cad11b7a:;
		}
		else if ((!(_1e5d907c1_checkFnVariadicParam(_self_, _167342_f)))) {
			_case_begin_1cad11be1:;
		}
		_match_end_1cad0ed43:;
	};
}



inline jule::Bool _1e5d91030_catchTraitInheritCycle(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5d03db6_Trait> _169539_t1, jule::Ptr<_1e5d03db6_Trait> _169555_t2, _224497295_StrBuilder* _169572_message) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*_169555_t2.alloc)._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cad14287:;
		if (it != expr_end) {
			jule::Ptr<_1e5e4900b_TypeSymbol> _169715_i = *it;
			{
				if (((*(_169715_i))._field_Kind == nullptr)) {
					goto _iter_next_1cad14287;
				};
				jule::Ptr<_1e5d03db6_Trait> _17018_t3 = _1e5e457aa_Trait((*_169715_i.alloc)._field_Kind.ptr());;
				if ((_169539_t1 == _17018_t3)) {
					_1e5d95cb0_pushCycleError(_self_.ptr(), &((*(_169555_t2))._field_Ident), &((*(_17018_t3))._field_Ident), _169572_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_1e5d91030_catchTraitInheritCycle(_self_, _169539_t1, _17018_t3, _169572_message)))) {
					_1e5d95cb0_pushCycleError(_self_, &((*_169555_t2.alloc)._field_Ident), &((*_17018_t3.alloc)._field_Ident), _169572_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1cad14287:;
			++it;
			goto _iter_begin_1cad14287;
		}
		_iter_end_1cad14287:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1e5d91371__checkTraitDeclInherits(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5d03db6_Trait>* _171445_t) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_171445_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cad17a4e:;
		if (it != expr_end) {
			jule::I64 _17168_i = it - expr->begin();
			jule::Ptr<_1e5e4900b_TypeSymbol> _171615_it = *it;
			{
				if ((!(_1e5d852dd_checkType(_self_, &(_171615_it), jule::Trait(_self_, (jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data3))))) {
					__jule_func_result=false;
					goto _iter_next_1cad17a4e;
				};
				jule::Ptr<_1e5d03db6_Trait> _17218_t2 = _1e5e457aa_Trait((*(_171615_it))._field_Kind.ptr());;
				if ((_17218_t2 == nullptr)) {
					_1e5d7e66c_pushErr(_self_, (*((*_171615_it.alloc)._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait @ cannot implement @, type should be trait", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_171445_t))))._field_Ident, &__jule_any_type4); (*it++) = jule::Any(_1e5e41be6_Str((*(_171615_it))._field_Kind), &__jule_any_type4); __jule_collection; }));
					__jule_func_result=false;
					goto _iter_next_1cad17a4e;
				};
				{
					auto expr = &((*((*(_171445_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cad198ca:;
					if (it != expr_end) {
						jule::I64 _17278_j = it - expr->begin();
						jule::Ptr<_1e5e4900b_TypeSymbol> _172711_it2 = *it;
						{
							if ((_17278_j >= _17168_i)) {
								goto _iter_end_1cad198ca;
							};
							if ((((*(_172711_it2))._field_Kind != nullptr) && _1e5e42037_Equal((*(_171615_it))._field_Kind, (*_172711_it2.alloc)._field_Kind))) {
								_1e5d7e66c_pushErr(_self_, (*(*(_171615_it))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_17218_t2))._field_Ident, &__jule_any_type4); __jule_collection; }));
								__jule_func_result=false;
								goto _iter_end_1cad198ca;
							};
						}
						_iter_next_1cad198ca:;
						++it;
						_17278_j++;
						goto _iter_begin_1cad198ca;
					}
					_iter_end_1cad198ca:;
				};
				if (((*(_171445_t)) == _17218_t2)) {
					_1e5d7e66c_pushErr(_self_, (*(*(_171615_it))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_171445_t))))._field_Ident, &__jule_any_type4); __jule_collection; }));
					__jule_func_result=false;
				} else {
					_224497295_StrBuilder _17419_message = static__2244a0b83_New(64LL);;
					__jule_func_result=(__jule_func_result && _1e5d91030_catchTraitInheritCycle(_self_, (*(_171445_t)), _17218_t2, &(_17419_message)));
					if ((_2244a1d1b_Len(&_17419_message) > 0LL)) {
						jule::Str _174410_errMsg = _2244a1887_Str(&_17419_message);;
						_2244a1a85_Clear(&_17419_message);
						_1e5d95cb0_pushCycleError(_self_, &((*((*(_171445_t))))._field_Ident), &((*(_17218_t2))._field_Ident), &(_17419_message));
						_174410_errMsg+=_2244a1887_Str(&_17419_message);
						_1e5d7e66c_pushErr(_self_, (*(*(_171615_it))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cross cycle in declarations;\n@", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_174410_errMsg, &__jule_any_type4); __jule_collection; }));
					};
				};
			}
			_iter_next_1cad17a4e:;
			++it;
			_17168_i++;
			goto _iter_begin_1cad17a4e;
		}
		_iter_end_1cad17a4e:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1e5d91629_checkTraitDeclInherits(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5d03db6_Trait>* _175544_t) {
	{
		auto expr = &((*((*(_175544_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cad18357:;
		if (it != expr_end) {
			jule::I64 _17568_i = it - expr->begin();
			jule::Ptr<_1e5e4900b_TypeSymbol> _175615_it = *it;
			{
				jule::Ptr<_1e5d03db6_Trait> _17578_t1 = _1e5e457aa_Trait((*(_175615_it))._field_Kind.ptr());;
				{
					auto expr = &((*((*(_175544_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cad24550:;
					if (it != expr_end) {
						jule::I64 _17589_j = it - expr->begin();
						jule::Ptr<_1e5e4900b_TypeSymbol> _175816_it2 = *it;
						{
							if ((_17589_j == _17568_i)) {
								goto _iter_next_1cad24550;
							};
							jule::Ptr<_1e5d03db6_Trait> _17629_t2 = _1e5e457aa_Trait((*(_175816_it2))._field_Kind);;
							{
								auto expr = &((*(_17578_t1))._field_Methods);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1cad25ce3:;
								if (it != expr_end) {
									jule::Ptr<_1e5ce0358_Fn> _176317_t1m = *it;
									{
										jule::Ptr<_1e5ce0358_Fn> _176410_t2m = _1e5d04a98_FindMethod(_17629_t2.ptr(), (*(_176317_t1m))._field_Ident);;
										if ((_176410_t2m == nullptr)) {
											goto _iter_next_1cad25ce3;
										};
										jule::Ptr<_1e5ce3416_FnIns> _17686_t1f = _1e5d89710_getTraitCheckFnKind(_self_, &(_176317_t1m));;
										jule::Ptr<_1e5ce3416_FnIns> _17696_t2f = _1e5d89710_getTraitCheckFnKind(_self_, &(_176410_t2m));;
										if ((!(_1e5ce43b2_equalTrait(_17686_t1f, &(_17696_t2f))))) {
											_1e5d7e66c_pushErr(_self_, (*((*_175615_it.alloc)._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait @ inherits trait @, but same identifiers implemented different;\n       @\n       @", 87)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(4, 4); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_175544_t))))._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*_17629_t2.alloc)._field_Ident, &__jule_any_type4); (*it++) = jule::Any(_1e5ce52e7_GetKindStr(_17686_t1f, true), &__jule_any_type4); (*it++) = jule::Any(_1e5ce52e7_GetKindStr(_17696_t2f.ptr(), true), &__jule_any_type4); __jule_collection; }));
											return;;
										};
									}
									_iter_next_1cad25ce3:;
									++it;
									goto _iter_begin_1cad25ce3;
								}
								_iter_end_1cad25ce3:;
							};
						}
						_iter_next_1cad24550:;
						++it;
						_17589_j++;
						goto _iter_begin_1cad24550;
					}
					_iter_end_1cad24550:;
				};
			}
			_iter_next_1cad18357:;
			++it;
			_17568_i++;
			goto _iter_begin_1cad18357;
		}
		_iter_end_1cad18357:;
	};
}



inline void _1e5d918d2_checkTraitDeclMethod(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5ce0358_Fn>* _178042_f) {
	if (_1e5c924b4_IsIgnoreIdent((*((*(_178042_f))))._field_Ident)) {
		_1e5d7e66c_pushErr(_self_.ptr(), (*((*(_178042_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1e5c9277d_IsAnonIdent((*((*(_178042_f))))._field_Ident)) {
		_1e5d7e66c_pushErr(_self_.ptr(), (*((*(_178042_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("anonymous functions are not allowed in this scope", 49)), jule::Slice<jule::Any>());
	};
	(*((*(_178042_f))))._field_sema=_self_;
	_1e5d90a79_checkFnDeclPrototype(_self_, _178042_f);
	jule::Ptr<_1e5ce3416_FnIns> _17887_ins = _1e5ce1aeb_instance((*(_178042_f)));;
	_1e5d8b05d_reloadFnInsTypes(_self_, _17887_ins);
	(*(_17887_ins))._field_reloaded=true;
	_1e5ce1e09_appendInstance((*(_178042_f)).ptr(), &(_17887_ins));
}



inline void _1e5d91b8a_checkTraitDeclMethods(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5d03db6_Trait>* _179443_t) {
	{
		auto expr = &((*((*(_179443_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cad2d58c:;
		if (it != expr_end) {
			jule::I64 _17958_i = it - expr->begin();
			jule::Ptr<_1e5ce0358_Fn> _179515_f = *it;
			{
				_1e5d918d2_checkTraitDeclMethod(_self_, &(_179515_f));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					return;;
				};
				if ((_1e5d0522a_findMethodInherit((*(_179443_t)).ptr(), &((*(_179515_f))._field_Ident)) != nullptr)) {
					_1e5d7e66c_pushErr(_self_, (*_179515_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_179515_f.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
					_1e5d7e9d0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
					goto _iter_next_1cad2d58c;
				};
				_julec_label_1cad31419:;
				{
					auto expr = &((*((*(_179443_t))))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cad31848:;
					if (it != expr_end) {
						jule::I64 _18118_j = it - expr->begin();
						jule::Ptr<_1e5ce0358_Fn> _181111_jf = *it;
						{
							{
								
								if ((_18118_j >= _17958_i)) {
									_case_begin_1cad323d7:;
									{
										goto _iter_end_1cad31848;
									}
								}
								else if (((*_179515_f.alloc)._field_Ident == (*(_181111_jf))._field_Ident)) {
									_case_begin_1cad32470:;
									{
										_1e5d7e66c_pushErr(_self_, (*_179515_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_179515_f.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
										_1e5d7e9d0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
										goto _iter_end_1cad31848;
									}
								}
								_match_end_1cad322c7:;
							};
						}
						_iter_next_1cad31848:;
						++it;
						_18118_j++;
						goto _iter_begin_1cad31848;
					}
					_iter_end_1cad31848:;
				};
			}
			_iter_next_1cad2d58c:;
			++it;
			_17958_i++;
			goto _iter_begin_1cad2d58c;
		}
		_iter_end_1cad2d58c:;
	};
}



inline void _1e5d91e43_checkTraitDecl(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5d03db6_Trait>* _183036_t) {
	if (_1e5c924b4_IsIgnoreIdent((*((*(_183036_t))))._field_Ident)) {
		_1e5d7e66c_pushErr(_self_.ptr(), (*((*(_183036_t))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1e5d80382_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_183036_t))), &((*((*(_183036_t))))._field_Ident), false)) {
		_1e5d7e66c_pushErr(_self_, (*((*(_183036_t))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_183036_t))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1e5d7e9d0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	_1e5d91629_checkTraitDeclInherits(_self_, _183036_t);
	_1e5d91b8a_checkTraitDeclMethods(_self_, _183036_t);
}



inline jule::Bool _1e5d921c9_checkTraitDecls(jule::Ptr<_1e5d7b768_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cad37695:;
		if (it != expr_end) {
			jule::Ptr<_1e5d03db6_Trait> _184415_t = *it;
			{
				_1e5d91e43_checkTraitDecl(_self_, &(_184415_t));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1cad37695:;
			++it;
			goto _iter_begin_1cad37695;
		}
		_iter_end_1cad37695:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1e5d925c5_checkTraitImplMethods(_1e5d7b768_sema* _self_, jule::Ptr<_1e5d03db6_Trait>* _185442_base, jule::Ptr<_1e5d33c09_Impl>* _185457_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_185457_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cad3917a:;
		if (it != expr_end) {
			jule::Ptr<_1e5ce0358_Fn> *_185610_f = it;
			{
				if ((_1e5d04a98_FindMethod((*(_185442_base)).ptr(), (*((*(_185610_f))))._field_Ident) == nullptr)) {
					_1e5d7e66c_pushErr(_self_, (*(*(_185610_f)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: trait @ has no define @", 45)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_185442_base))))._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*(*(_185610_f)).alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
					__jule_func_result=false;
				};
			}
			_iter_next_1cad3917a:;
			++it;
			goto _iter_begin_1cad3917a;
		}
		_iter_end_1cad3917a:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1e5d929c1_implToStruct(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5cc5e21_Struct>* _186534_dest, jule::Ptr<_1e5d33c09_Impl>* _186554_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_186554_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cad3b9eb:;
		if (it != expr_end) {
			jule::Ptr<_1e5ce0358_Fn> _186915_f = *it;
			{
				if (((_1e5cc6ac0_FindMethod((*(_186534_dest)).ptr(), (*(_186915_f))._field_Ident, (*_186915_f.alloc)._field_Statically) != nullptr) || (_1e5cc7252_FindField((*(_186534_dest)).ptr(), (*_186915_f.alloc)._field_Ident) != nullptr))) {
					_1e5d7e66c_pushErr(_self_.ptr(), (*_186915_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier duplication: struct @ already have define @", 54)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_186534_dest))))._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*_186915_f.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
					__jule_func_result=false;
					goto _iter_next_1cad3b9eb;
				};
				if ((((*((*(_186534_dest))))._field_Generics.len() > 0LL) && ((*_186915_f.alloc)._field_Generics.len() > 0LL))) {
					{
						auto expr = &((*_186915_f.alloc)._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1cad3ea87:;
						if (it != expr_end) {
							jule::Ptr<_1e5cb2292_GenericDecl> _187712_fg = *it;
							{
								{
									auto expr = &((*((*(_186534_dest))))._field_Generics);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1cad404e4:;
									if (it != expr_end) {
										jule::Ptr<_1e5cb2292_GenericDecl> _187813_dg = *it;
										{
											if (((*(_187712_fg))._field_Ident == (*(_187813_dg))._field_Ident)) {
												_1e5d7e66c_pushErr(_self_, (*_187712_fg.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("methods cannot have same generic identifier with owner same time", 64)), jule::Slice<jule::Any>());
												__jule_func_result=false;
											};
										}
										_iter_next_1cad404e4:;
										++it;
										goto _iter_begin_1cad404e4;
									}
									_iter_end_1cad404e4:;
								};
							}
							_iter_next_1cad3ea87:;
							++it;
							goto _iter_begin_1cad3ea87;
						}
						_iter_end_1cad3ea87:;
					};
				};
				_1e5d806e5_checkDirectives(_self_, &((*_186915_f.alloc)._field_Directives), jule::Any(_186915_f, &__jule_any_type26));
				(*_186915_f.alloc)._field_sema=_self_;
				(*_186915_f.alloc)._field_Owner=(*(_186534_dest));
				{ jule::Slice<jule::Ptr<_1e5ce0358_Fn>> &__jule_push_dest = (*((*(_186534_dest))))._field_Methods; __jule_push_dest.push(_186915_f); };
			}
			_iter_next_1cad3b9eb:;
			++it;
			goto _iter_begin_1cad3b9eb;
		}
		_iter_end_1cad3b9eb:;
	};
	{
		auto expr = &((*((*(_186554_ipl))))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cad3bdd6:;
		if (it != expr_end) {
			jule::Ptr<_1e5da0bcc_Var> _189415_v = *it;
			{
				;
				if (((_1e5cc6ac0_FindMethod((*(_186534_dest)).ptr(), (*(_189415_v))._field_Ident, true) != nullptr) || (_1e5cc6e11_FindStatic((*(_186534_dest)).ptr(), (*_189415_v.alloc)._field_Ident) != nullptr))) {
					_1e5d7e66c_pushErr(_self_, (*_189415_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier duplication: struct @ already have define @", 54)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_186534_dest))))._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*_189415_v.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
					__jule_func_result=false;
					goto _iter_next_1cad3bdd6;
				};
				{ jule::Slice<jule::Ptr<_1e5da0bcc_Var>> &__jule_push_dest = (*((*(_186534_dest))))._field_Statics; __jule_push_dest.push(_189415_v); };
			}
			_iter_next_1cad3bdd6:;
			++it;
			goto _iter_begin_1cad3bdd6;
		}
		_iter_end_1cad3bdd6:;
	};
	return __jule_func_result;;
}



inline void _1e5d92c79_implTrait(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5d33c09_Impl>* _190731_decl) {
	jule::Ptr<_1e5e417ea_TypeKind> _19087_base_t = _1e5d863cc_selectType(_self_, &((*((*(_190731_decl))))._field_Base));;
	if ((_19087_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1e5d03db6_Trait> _19127_base = _1e5e457aa_Trait(_19087_base_t.ptr());;
	if ((_19127_base == nullptr)) {
		_1e5d7e66c_pushErr(_self_, (*((*((*(_190731_decl))))._field_Base))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid base type for impl: @", 29)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str(_19087_base_t.ptr()), &__jule_any_type4); __jule_collection; }));
		_1e5d7e9d0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected trait, use a trait", 27)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e5e417ea_TypeKind> _19197_destT = _1e5d863cc_selectType(_self_, &((*((*(_190731_decl))))._field_Dest));;
	if ((_19197_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1e5cc8c7b_StructIns> _19237_destS = _1e5e45524_Struct(_19197_destT.ptr());;
	if ((_19237_destS == nullptr)) {
		_1e5d7e66c_pushErr(_self_, (*((*((*(_190731_decl))))._field_Dest))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid destination type for impl: @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str(_19197_destT.ptr()), &__jule_any_type4); __jule_collection; }));
		_1e5d7e9d0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected structure, use a structure", 35)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e5cc5e21_Struct> _19307_dest = (*(_19237_destS))._field_Decl;;
	if ((_1e5c95a4a_Dir((*((*(_19307_dest))._field_Token))._field_File.ptr()) != _1e5c95a4a_Dir((*((*_self_.alloc)._field_file))._field_File.ptr()))) {
		_1e5d7e66c_pushErr(_self_, (*(*((*(_190731_decl))))._field_Dest.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal implementation via definition from out of package", 57)), jule::Slice<jule::Any>());
		return;;
	};
	_1e5d9de61_pushImplemented(_19127_base, &(_19307_dest));
	_1e5d9e24c_pushImplements(&(_19307_dest), _19127_base);
	if (((*((*(_190731_decl))))._field_Statics.len() > 0LL)) {
		_1e5d7e66c_pushErr(_self_, (*((*((*(_190731_decl))))._field_Statics[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait implementations cannot implement static field", 51)), jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_1e5d925c5_checkTraitImplMethods(_self_, &(_19127_base), _190731_decl)))) {
			_case_begin_1ca9654d2:;
		}
		else if ((!(_1e5d929c1_implToStruct(_self_, &(_19307_dest), _190731_decl)))) {
			_case_begin_1ca965548:;
		}
		_match_end_1ca964525:;
	};
}



inline void _1e5d93032_implStruct(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5d33c09_Impl>* _195032_decl) {
	jule::Ptr<_1e5e417ea_TypeKind> _19517_destT = _1e5d863cc_selectType(_self_, &((*((*(_195032_decl))))._field_Dest));;
	if ((_19517_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1e5cc8c7b_StructIns> _19557_destS = _1e5e45524_Struct(_19517_destT.ptr());;
	if ((_19557_destS == nullptr)) {
		_1e5d7e66c_pushErr(_self_, (*((*((*(_195032_decl))))._field_Dest))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid destination type for impl: @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str(_19517_destT.ptr()), &__jule_any_type4); __jule_collection; }));
		_1e5d7e9d0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected structure, use a structure", 35)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e5cc5e21_Struct> _19627_dest = (*(_19557_destS))._field_Decl;;
	if ((_1e5c95a4a_Dir((*((*(_19627_dest))._field_Token))._field_File.ptr()) != _1e5c95a4a_Dir((*((*_self_.alloc)._field_file))._field_File.ptr()))) {
		_1e5d7e66c_pushErr(_self_, (*(*((*(_195032_decl))))._field_Dest.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal implementation via definition from out of package", 57)), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_1e5d929c1_implToStruct(_self_, &(_19627_dest), _195032_decl)))) {
			_case_begin_1ca96b351:;
		}
		_match_end_1ca969915:;
	};
}



inline void _1e5d932da_implImpl(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5d33c09_Impl>* _197430_decl) {
	{
		
		if (_1e5d34105_IsTraitImpl((*(_197430_decl)).ptr())) {
			_case_begin_1ca96bde0:;
			{
				_1e5d92c79_implTrait(_self_, _197430_decl);
			}
		}
		else if (_1e5d3438b_IsStructImpl((*(_197430_decl)).ptr())) {
			_case_begin_1ca96be89:;
			{
				_1e5d93032_implStruct(_self_, _197430_decl);
			}
		}
		_match_end_1ca96bcbe:;
	};
}



inline void _1e5d9364d_checkVarDecl(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5da0bcc_Var>* _198534_decl, jule::Trait _198550_l) {
	if (_1e5c924b4_IsIgnoreIdent((*((*(_198534_decl))))._field_Ident)) {
		_1e5d7e66c_pushErr(_self_.ptr(), (*((*(_198534_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	};
	if (_1e5da1370_IsTypeInferred((*(_198534_decl)).ptr())) {
		if ((!(_1e5da10d9_IsInitialized((*(_198534_decl)).ptr())))) {
			_1e5d7e66c_pushErr(_self_, (*((*(_198534_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type inferred declarations should have a initializer expression", 63)), jule::Slice<jule::Any>());
		};
	} else {
		jule::Ptr<_1e5ce65a1_ReferenceStack> _19958_refers = static_cast<jule::Ptr<_1e5ce65a1_ReferenceStack>>(nullptr);;
		{
			auto &_match_expr{ _198550_l };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data3)) {
				_case_begin_1ca9710d1:;
				{
					_19958_refers=(*((*(_198534_decl))))._field_Refers;
				}
			}
			else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data0)) {
				_case_begin_1ca9715a9:;
				{
					_19958_refers=_1e5d4416a_getOwnerRefers(_198550_l.cast_ptr<_1e5d40771_scopeChecker>((jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data0));
				}
			}
			else {
				_case_begin_1ca9711be:;
				{
					__jule_panic_s(jule::Str::lit("sema: checkVarDecl: unimplemented referencer", 44) + jule::Str("\nlocation: std/jule/sema/sema.jule:2002:5"));;
				}
			}
			_match_end_1ca971158:;
		};
		(*((*((*(_198534_decl))))._field_Kind))._field_Kind=_1e5d85794_checkTypeRefers(_self_, &((*(*((*(_198534_decl))))._field_Kind.alloc)._field_Decl), _198550_l, _19958_refers);
	};
	if ((*((*(_198534_decl))))._field_Reference) {
		if ((*((*(_198534_decl))))._field_Constant) {
			_1e5d7e66c_pushErr(_self_, (*((*(_198534_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("references cannot be constant", 29)), jule::Slice<jule::Any>());
		};
		if ((*((*(_198534_decl))))._field_Statically) {
			_1e5d7e66c_pushErr(_self_, (*((*(_198534_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("static variables cannot be reference", 36)), jule::Slice<jule::Any>());
		};
	};
	if ((!(_1e5da10d9_IsInitialized((*(_198534_decl)).ptr())))) {
		if ((*((*(_198534_decl))))._field_Constant) {
			_1e5d7e66c_pushErr(_self_, (*((*(_198534_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for constant variable initialization", 55)), jule::Slice<jule::Any>());
		};
		if ((*((*(_198534_decl))))._field_Statically) {
			_1e5d7e66c_pushErr(_self_, (*((*(_198534_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("static variables must be have initialize expression", 51)), jule::Slice<jule::Any>());
		};
		if ((*((*(_198534_decl))))._field_Reference) {
			_1e5d7e66c_pushErr(_self_, (*((*(_198534_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("reference variables must be have lvalue initialize expression", 61)), jule::Slice<jule::Any>());
		};
	};
}



inline void _1e5d93906_checkGlobalVarDecl(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5da0bcc_Var>* _203140_decl) {
	if (_1e5d80382_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_203140_decl))), &((*((*(_203140_decl))))._field_Ident), (*((*(_203140_decl))))._field_Binded)) {
		_1e5d7e66c_pushErr(_self_, (*((*(_203140_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_203140_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1e5d7e9d0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	if (((*((*(_203140_decl))))._field_Binded && (*((*(_203140_decl))))._field_Constant)) {
		_1e5d7e66c_pushErr(_self_, (*((*(_203140_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("binded variables cannot be constant", 35)), jule::Slice<jule::Any>());
	};
	if ((((!((*((*(_203140_decl))))._field_Binded)) && (!((*((*(_203140_decl))))._field_Constant))) && (!((*((*(_203140_decl))))._field_Statically)))) {
		_1e5d7e66c_pushErr(_self_, (*((*(_203140_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("global variables must be static", 31)), jule::Slice<jule::Any>());
		_1e5d7e9d0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use \"static\" keyword to define", 30)), jule::Slice<jule::Any>());
	};
	_1e5d806e5_checkDirectives(_self_, &((*((*(_203140_decl))))._field_Directives), jule::Any((*(_203140_decl)), &__jule_any_type8));
	_1e5d9364d_checkVarDecl(_self_, _203140_decl, jule::Trait(_self_, (jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data3));
}



inline jule::Bool _1e5d93b8c_checkGlobalDecls(jule::Ptr<_1e5d7b768_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cada523a:;
		if (it != expr_end) {
			jule::Ptr<_1e5da0bcc_Var> _204915_decl = *it;
			{
				_1e5d93906_checkGlobalVarDecl(_self_, &(_204915_decl));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1cada523a:;
			++it;
			goto _iter_begin_1cada523a;
		}
		_iter_end_1cada523a:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1e5d94088_checkStructTraitImpl(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5cc5e21_Struct>* _205942_strct, jule::Ptr<_1e5d03db6_Trait>* _205963_trt) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_205963_trt))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cada6b21:;
		if (it != expr_end) {
			jule::Ptr<_1e5ce0358_Fn> _206015_tf = *it;
			{
				jule::Bool _20618_exist = false;;
				jule::Ptr<_1e5ce0358_Fn> _20628_sf = _1e5cc6ac0_FindMethod((*(_205942_strct)).ptr(), (*(_206015_tf))._field_Ident, (*_206015_tf.alloc)._field_Statically);;
				jule::Ptr<_1e5ce3416_FnIns> _20634_tfK = _1e5d89710_getTraitCheckFnKind(_self_, &(_206015_tf));;
				if ((_20628_sf != nullptr)) {
					jule::Ptr<_1e5ce3416_FnIns> _20659_sfK = _1e5d89710_getTraitCheckFnKind(_self_, &(_20628_sf));;
					if ((_20659_sfK != nullptr)) {
						_20618_exist=_1e5ce43b2_equalTrait(_20634_tfK, &(_20659_sfK));
					};
				};
				if (_20618_exist) {
					jule::Ptr<_1e5ca44a4_Directive> _20715_d = _1e5e33215_findDirective(&((*_20628_sf.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("deprecated", 10)));;
					if ((_20715_d != nullptr)) {
						_1e5d7e66c_pushErr(_self_, (*_20715_d.alloc)._field_Tag, static_cast<jule::Str>(jule::Str::lit("trait implementations cannot have deprecated code", 49)), jule::Slice<jule::Any>());
					};
					__jule_func_result=false;
				} else {
					;
					_1e5d7e66c_pushErr(_self_, (*((*(_205942_strct))))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait @ derived but not implemented define @", 44)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_205963_trt))))._field_Ident, &__jule_any_type4); (*it++) = jule::Any(_1e5ce52e7_GetKindStr(_20634_tfK, true), &__jule_any_type4); __jule_collection; }));
					__jule_func_result=false;
				};
			}
			_iter_next_1cada6b21:;
			++it;
			goto _iter_begin_1cada6b21;
		}
		_iter_end_1cada6b21:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1e5d943c9_checkStructImpls(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5cc5e21_Struct>* _208538_s) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_208538_s))))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cadad034:;
		if (it != expr_end) {
			jule::Ptr<_1e5d03db6_Trait> _208715_trt = *it;
			{
				__jule_func_result=(_1e5d94088_checkStructTraitImpl(_self_, _208538_s, &(_208715_trt)) && __jule_func_result);
			}
			_iter_next_1cadad034:;
			++it;
			goto _iter_begin_1cadad034;
		}
		_iter_end_1cadad034:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1e5d9471a_checkStructFields(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5cc5e21_Struct>* _209339_st) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_209339_st))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cadae4ca:;
		if (it != expr_end) {
			jule::Ptr<_1e5cc2eea_Field> _209515_f = *it;
			{
				(*(_209515_f))._field_Owner=(*(_209339_st));
				{
					auto expr = &((*((*(_209339_st))))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cadb0201:;
					if (it != expr_end) {
						jule::Ptr<_1e5cc2eea_Field> _209711_cf = *it;
						{
							if ((_209515_f == _209711_cf)) {
								goto _iter_end_1cadb0201;
							} else if (((*_209515_f.alloc)._field_Ident == (*(_209711_cf))._field_Ident)) {
								_1e5d7e66c_pushErr(_self_.ptr(), (*_209515_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_209515_f.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
								_1e5d7e9d0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
								__jule_func_result=false;
							};
						}
						_iter_next_1cadb0201:;
						++it;
						goto _iter_begin_1cadb0201;
					}
					_iter_end_1cadb0201:;
				};
			}
			_iter_next_1cadae4ca:;
			++it;
			goto _iter_begin_1cadae4ca;
		}
		_iter_end_1cadae4ca:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1e5d949c3_checkStructDecl(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5cc5e21_Struct>* _211037_s) {
	if (_1e5c924b4_IsIgnoreIdent((*((*(_211037_s))))._field_Ident)) {
		_1e5d7e66c_pushErr(_self_.ptr(), (*((*(_211037_s))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1e5d80382_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_211037_s))), &((*((*(_211037_s))))._field_Ident), (*((*(_211037_s))))._field_Binded)) {
		_1e5d7e66c_pushErr(_self_, (*((*(_211037_s))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_211037_s))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1e5d7e9d0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	_1e5d806e5_checkDirectives(_self_, &((*((*(_211037_s))))._field_Directives), jule::Any((*(_211037_s)), &__jule_any_type23));
	{
		
		if ((!(_1e5d8eced_checkDeclGenerics(_self_, &((*((*(_211037_s))))._field_Generics))))) {
			_case_begin_1cadb55d0:;
		}
		else if ((!(_1e5d9471a_checkStructFields(_self_, _211037_s)))) {
			_case_begin_1cadb5646:;
		}
		else if ((!(_1e5d943c9_checkStructImpls(_self_, _211037_s)))) {
			_case_begin_1cadb56ac:;
		}
		else if ((!(_1e5d9560b_checkFuncDeclsBy(_self_, &((*((*(_211037_s))))._field_Methods))))) {
			_case_begin_1cadb5723:;
		}
		_match_end_1cadb549d:;
	};
}



inline jule::Bool _1e5d94c59_checkStructDecls(jule::Ptr<_1e5d7b768_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cadb7a77:;
		if (it != expr_end) {
			jule::Ptr<_1e5cc5e21_Struct> _213015_s = *it;
			{
				_1e5d949c3_checkStructDecl(_self_, &(_213015_s));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1cadb7a77:;
			++it;
			goto _iter_begin_1cadb7a77;
		}
		_iter_end_1cadb7a77:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1e5d95012_checkAnonFuncDecl(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5ce0358_Fn>* _214039_f) {
	(*((*(_214039_f))))._field_sema=_self_;
	_1e5d90a79_checkFnDeclPrototype(_self_, _214039_f);
}



inline void _1e5d952ba_checkFuncDecl(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5ce0358_Fn>* _214535_f) {
	if (_1e5c924b4_IsIgnoreIdent((*((*(_214535_f))))._field_Ident)) {
		_1e5d7e66c_pushErr(_self_.ptr(), (*((*(_214535_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1e5ce1348_IsAnon((*(_214535_f)).ptr())) {
		_1e5d7e66c_pushErr(_self_.ptr(), (*((*(_214535_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("anonymous functions are not allowed in this scope", 49)), jule::Slice<jule::Any>());
	};
	_1e5d806e5_checkDirectives(_self_, &((*((*(_214535_f))))._field_Directives), jule::Any((*(_214535_f)), &__jule_any_type26));
	_1e5d95012_checkAnonFuncDecl(_self_, _214535_f);
	if ((((*((*(_214535_f))))._field_Owner == nullptr) && _1e5d80382_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>((*(_214535_f))), &((*((*(_214535_f))))._field_Ident), (*((*(_214535_f))))._field_Binded))) {
		if ((*((*(_214535_f))))._field_Ident.equal("init", 4)) {
			jule::Ptr<_1e5ce0358_Fn> _21575_init = _1e5d7cd30_FindFn(_self_, jule::Str::lit("init", 4), false);;
			if ((_21575_init != nullptr)) {
				return;;
			};
		};
		_1e5d7e66c_pushErr(_self_, (*((*(_214535_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_214535_f))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1e5d7e9d0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1e5d9560b_checkFuncDeclsBy(jule::Ptr<_1e5d7b768_sema> _self_, jule::Slice<jule::Ptr<_1e5ce0358_Fn>>* _216738_funcs) {
	{
		auto expr = _216738_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cadc0486:;
		if (it != expr_end) {
			jule::Ptr<_1e5ce0358_Fn> _216815_f = *it;
			{
				_1e5d952ba_checkFuncDecl(_self_, &(_216815_f));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					return false;;
				};
			}
			_iter_next_1cadc0486:;
			++it;
			goto _iter_begin_1cadc0486;
		}
		_iter_end_1cadc0486:;
	};
	return true;;
}



inline jule::Bool _1e5d95892_checkFuncDecls(jule::Ptr<_1e5d7b768_sema> _self_) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1e5d9560b_checkFuncDeclsBy(_self_, &((*((*_self_.alloc)._field_file))._field_Funcs));
	return __jule_func_result;;
}



inline void _1e5d95cb0_pushCycleError(_1e5d7b768_sema* _self_, jule::Str* _218327_st1, jule::Str* _218338_st2, _224497295_StrBuilder* _218353_message) {
	;
	jule::Str _21853_refersTo = _22578b7ec_Logf(static_cast<jule::Str>(jule::Str::lit("@ refers to @", 13)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_218327_st1)), &__jule_any_type4); (*it++) = jule::Any((*(_218338_st2)), &__jule_any_type4); __jule_collection; }));;
	jule::Str _21863_m = _2244a1887_Str(_218353_message);;
	_2244a1090_WriteStr(_218353_message, _2256d6eb7_Repeat(jule::Str::lit(" ", 1), 7LL));
	_2244a1090_WriteStr(_218353_message, _21853_refersTo);
	_2244a1348_WriteByte(_218353_message, '\n');
	_2244a1090_WriteStr(_218353_message, _21863_m);
}



inline void _1e5d96464_checkPackageDecls(jule::Ptr<_1e5d7b768_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cadc726d:;
		if (it != expr_end) {
			jule::Ptr<_1e5e03548_SymbolTable> _221015_f = *it;
			{
				_1e5d7e24e_setCurrentFile(_self_.ptr(), _221015_f);
				if ((!(_1e5d8cc1e_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1cadc726d:;
			++it;
			goto _iter_begin_1cadc726d;
		}
		_iter_end_1cadc726d:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cadc7702:;
		if (it != expr_end) {
			jule::Ptr<_1e5e03548_SymbolTable> _221715_f = *it;
			{
				_1e5d7e24e_setCurrentFile(_self_, _221715_f);
				if ((!(_1e5d921c9_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1cadc7702:;
			++it;
			goto _iter_begin_1cadc7702;
		}
		_iter_end_1cadc7702:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cadc8714:;
		if (it != expr_end) {
			jule::Ptr<_1e5e03548_SymbolTable> _222415_f = *it;
			{
				_1e5d7e24e_setCurrentFile(_self_, _222415_f);
				if ((!(_1e5d93b8c_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1cadc8714:;
			++it;
			goto _iter_begin_1cadc8714;
		}
		_iter_end_1cadc8714:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cadc976a:;
		if (it != expr_end) {
			jule::Ptr<_1e5e03548_SymbolTable> _223115_f = *it;
			{
				_1e5d7e24e_setCurrentFile(_self_, _223115_f);
				{
					
					if ((!(_1e5d95892_checkFuncDecls(_self_)))) {
						_case_begin_1cadcadba:;
					}
					else if ((!(_1e5d94c59_checkStructDecls(_self_)))) {
						_case_begin_1cadcae64:;
					}
					else {
						_case_begin_1cadca815:;
						{
							goto _iter_next_1cadc976a;
						}
					}
					_match_end_1cadcad21:;
				};
				return;;
			}
			_iter_next_1cadc976a:;
			++it;
			goto _iter_begin_1cadc976a;
		}
		_iter_end_1cadc976a:;
	};
}



inline void _1e5d967c7_checkDataForTypeInference(_1e5d7b768_sema* _self_, jule::Ptr<_1e5e08c13_Data>* _224342_d, jule::Ptr<_1e5c8eacc_Token>* _224353_err_token) {
	{
		
		if (_1e5e09131_IsNil((*(_224342_d)).ptr())) {
			_case_begin_1cadcc064:;
			{
				_1e5d7e66c_pushErr(_self_, (*(_224353_err_token)), static_cast<jule::Str>(jule::Str::lit("nil is cannot use with type inferred definitions", 48)), jule::Slice<jule::Any>());
			}
		}
		else if (_1e5e093b7_IsVoid((*(_224342_d)).ptr())) {
			_case_begin_1cadcc10d:;
			{
				_1e5d7e66c_pushErr(_self_, (*(_224353_err_token)), static_cast<jule::Str>(jule::Str::lit("void data is cannot use for type inferred definitions", 53)), jule::Slice<jule::Any>());
			}
		}
		else if ((*((*((*(_224342_d))))._field_Kind))._field_Variadic) {
			_case_begin_1cadcc174:;
			{
				_1e5d7e66c_pushErr(_self_, (*(_224353_err_token)), static_cast<jule::Str>(jule::Str::lit("invalid expression for type inference", 37)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1cadcbe32:;
	};
}



inline void _1e5d96a80_checkVarValue(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5da0bcc_Var>* _225535_v) {
	if (_1e5da1370_IsTypeInferred((*(_225535_v)).ptr())) {
		(*((*(_225535_v))))._field_Kind=jule::new_ptr<_1e5e4900b_TypeSymbol>(_1e5e4900b_TypeSymbol{._field_Decl=jule::Ptr<_1e5ca5087_TypeDecl>(nullptr), ._field_Kind=(*((*((*((*(_225535_v))))._field_Value))._field_Data))._field_Kind});
		_1e5d967c7_checkDataForTypeInference(_self_.ptr(), &((*(*((*(_225535_v))))._field_Value.alloc)._field_Data), &((*((*(*((*(_225535_v))))._field_Value.alloc)._field_Expr))._field_Token));
		_1e5d8be71_checkValidityForInitExpr(_self_, (*((*(_225535_v))))._field_Mutable, (*((*(_225535_v))))._field_Reference, &((*((*((*(_225535_v))))._field_Kind))._field_Kind), &((*(*((*(_225535_v))))._field_Value.alloc)._field_Data), &((*(*((*((*(_225535_v))))._field_Value))._field_Expr.alloc)._field_Token));
	} else {
		jule::Ptr<_1e5e51233_Arr> _22688_arr = _1e5e44c71_Arr((*((*((*(_225535_v))))._field_Kind))._field_Kind.ptr());;
		if ((_22688_arr != nullptr)) {
			if ((*_22688_arr.alloc)._field_Auto) {
				jule::Ptr<_1e5e51233_Arr> _22716_dataArr = _1e5e44c71_Arr((*((*((*((*(_225535_v))))._field_Value))._field_Data))._field_Kind.ptr());;
				if ((_22716_dataArr != nullptr)) {
					(*_22688_arr.alloc)._field_N=(*_22716_dataArr.alloc)._field_N;
				};
			};
		};
		if (_1e5d876db_checkAssignType(_self_, (*((*(_225535_v))))._field_Reference, &((*(*((*(_225535_v))))._field_Kind.alloc)._field_Kind), &((*(*((*(_225535_v))))._field_Value.alloc)._field_Data), (*((*(*((*(_225535_v))))._field_Value.alloc)._field_Expr))._field_Token, (*((*(_225535_v))))._field_Refers)) {
			_1e5d8be71_checkValidityForInitExpr(_self_, (*((*(_225535_v))))._field_Mutable, (*((*(_225535_v))))._field_Reference, &((*(*((*(_225535_v))))._field_Kind.alloc)._field_Kind), &((*(*((*(_225535_v))))._field_Value.alloc)._field_Data), &((*(*((*((*(_225535_v))))._field_Value))._field_Expr.alloc)._field_Token));
		};
	};
	if (((*((*(_225535_v))))._field_Reference && (!(_1e5e5d707_isValidForRef(&((*((*((*(_225535_v))))._field_Kind))._field_Kind)))))) {
		_1e5d7e66c_pushErr(_self_.ptr(), (*((*(_225535_v))))._field_Token, static_cast<jule::Str>(jule::Str::lit("references cannot points to type @", 34)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*(*((*(_225535_v))))._field_Kind.alloc)._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
	};
	if ((*((*(_225535_v))))._field_Constant) {
		if (((!(_1e5e0964d_IsConst((*((*((*(_225535_v))))._field_Value))._field_Data.ptr()))) && (!(_1e5e4605d_comptime((*(*((*((*(_225535_v))))._field_Value))._field_Data.alloc)._field_Kind.ptr()))))) {
			_1e5d7e66c_pushErr(_self_, (*((*(*((*(_225535_v))))._field_Value.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		};
	} else {
		(*((*((*((*(_225535_v))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*(*((*((*(_225535_v))))._field_Value))._field_Data.alloc)._field_untyped=false;
	};
	if ((_1e5e45cc7_Tup((*((*((*(_225535_v))))._field_Kind))._field_Kind) != nullptr)) {
		(*(*((*(_225535_v))))._field_Kind.alloc)._field_Kind=nullptr;
	};
}



inline void _1e5d96de3_evalVarValue(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5da0bcc_Var>* _230834_decl, jule::Trait _230850_l) {
	if ((!(_1e5da10d9_IsInitialized((*(_230834_decl)).ptr())))) {
		return;;
	};
	jule::Ptr<_1e5e0a93a_eval> _23137_eval = static_cast<jule::Ptr<_1e5e0a93a_eval>>(nullptr);;
	if (((*((*(_230834_decl))))._field_Kind != nullptr)) {
		_23137_eval=_1e5d86883_evalpd(_self_, _230850_l, (*(*((*(_230834_decl))))._field_Kind.alloc)._field_Kind, (*(_230834_decl)));
	} else {
		_23137_eval=_1e5d86883_evalpd(_self_, _230850_l, nullptr, (*(_230834_decl)));
	};
	(*(_23137_eval))._field_immutable=(!((*((*(_230834_decl))))._field_Mutable));
	(*((*((*(_230834_decl))))._field_Value))._field_Data=_1e5e297a0_evalExpr(_23137_eval, (*(*((*(_230834_decl))))._field_Value.alloc)._field_Expr);
}



inline void _1e5d97256_checkVar(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5da0bcc_Var>* _232530_decl, jule::Trait _232546_l) {
	_1e5d96de3_evalVarValue(_self_, _232530_decl, _232546_l);
	if (((*((*((*(_232530_decl))))._field_Value))._field_Data == nullptr)) {
		return;;
	};
	_1e5d96a80_checkVarValue(_self_, _232530_decl);
}



inline void _1e5d97454_checkGlobals(jule::Ptr<_1e5d7b768_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cade4510:;
		if (it != expr_end) {
			jule::Ptr<_1e5da0bcc_Var> _233515_decl = *it;
			{
				if ((*(_233515_decl))._field_Binded) {
					goto _iter_next_1cade4510;
				};
				if (((_1e5da10d9_IsInitialized(_233515_decl) && ((*((*_233515_decl.alloc)._field_Value))._field_Data == nullptr)) || (_1e5da1370_IsTypeInferred(_233515_decl) && ((*((*_233515_decl.alloc)._field_Kind))._field_Kind == nullptr)))) {
					_1e5d97256_checkVar(_self_, &(_233515_decl), jule::Trait(_self_, (jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data3));
				};
			}
			_iter_next_1cade4510:;
			++it;
			goto _iter_begin_1cade4510;
		}
		_iter_end_1cade4510:;
	};
}



inline jule::Ptr<_1e5ce3416_FnIns> _1e5d97850_readyToCheckFn(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5cc8c7b_StructIns>* _234936_s, jule::Ptr<_1e5ce0358_Fn>* _234956_f) {
	jule::Ptr<_1e5ce3416_FnIns> _23507_ins = _1e5ce1aeb_instance((*(_234956_f)));;
	if (((*((*(_234956_f))))._field_Instances.len() != 0LL)) {
		return _23507_ins;;
	};
	(*(_23507_ins))._field_Owner=(*(_234936_s));
	_1e5ce1e09_appendInstance((*(_234956_f)).ptr(), &(_23507_ins));
	(*_23507_ins.alloc)._field_reloaded=true;
	if (_1e5d8b05d_reloadFnInsTypes(_self_, _23507_ins)) {
		return _23507_ins;;
	};
	return nullptr;;
}



inline __jule_tuple_bool__jule_tuple_bool _1e5d97c4b_checkGenericFn(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5ce3416_FnIns>* _236536_f, jule::Ptr<_1e5c8eacc_Token>* _236552_et) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=_1e5d8b05d_reloadFnInsTypes(_self_, (*(_236536_f)));
	(*((*(_236536_f))))._field_reloaded=true;
	if ((!(__jule_func_result.__jule_result_arg0))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1e5ce3416_FnIns> _23717_existInstance = _1e5ce1e09_appendInstance((*((*(_236536_f))))._field_Decl.ptr(), _236536_f);;
	if ((!(_1e5d89bb6_checkConstraintsFn(_self_, _236536_f, _236552_et, _23717_existInstance)))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	if ((_23717_existInstance != nullptr)) {
		(*(_236536_f))=_23717_existInstance;
		__jule_func_result.__jule_result_arg1=true;
	} else {
		_1e5d9a7a9_checkFnInsCaller(_self_, _236536_f, (*(_236552_et)));
	};
	__jule_func_result.__jule_result_arg0=true;
	return __jule_func_result;;
}



inline void _1e5d980ae_checkTypeMethod(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5cc8c7b_StructIns>* _238837_s, jule::Ptr<_1e5ce0358_Fn>* _238857_f) {
	if (((*((*(_238857_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_1e5ce3416_FnIns> _23937_ins = (*((*(_238857_f))))._field_Instances[0LL];;
	if (((*((*(_23937_ins))._field_Scope))._field_Stmts.len() > 0LL)) {
		return;;
	};
	_1e5d9aa62_checkFnIns(_self_, &(_23937_ins));
}



inline jule::Ptr<_1e5ce3416_FnIns> _1e5d98565_checkStructInsOp(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5cc8c7b_StructIns>* _240138_s, jule::Ptr<_1e5ce0358_Fn>* _240158_f, jule::Fn<jule::Bool,jule::Ptr<_1e5ce0358_Fn>> _240166_p) {
	if (((((*(_240158_f)) == nullptr) || ((*((*(_240158_f))))._field_Generics.len() > 0LL)) || (!(_240166_p((*(_240158_f))))))) {
		return nullptr;;
	};
	return (*((*(_240158_f))))._field_Instances[0LL];;
}



inline jule::Bool _1e5d98961_checkStructEnv(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5cc8c7b_StructIns>* _241136_s, jule::Ptr<_1e5c8eacc_Token> _241155_errorToken) {
	jule::Bool __jule_func_result = false;
	_1e5e53be7_typeChecker _24127_tc = _1e5e53be7_typeChecker{._field_s=(*((*((*(_241136_s))))._field_Decl))._field_sema, ._field_rootLookup=jule::Trait((*(*((*(_241136_s))))._field_Decl.alloc)._field_sema, (jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data3), ._field_lookup=jule::Trait((*(*((*(_241136_s))))._field_Decl.alloc)._field_sema, (jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data3), ._field_referencer=jule::new_ptr<_1e5e52c07_referencer>(_1e5e52c07_referencer{._field_ident=(*(*((*(_241136_s))))._field_Decl.alloc)._field_Ident, ._field_owner=jule::Any((*((*(_241136_s))))._field_Decl, &__jule_any_type23), ._field_refs=nullptr}), ._field_refers=(*((*(_241136_s))))._field_Refers, ._field_errorToken=jule::Ptr<_1e5c8eacc_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1e5cb2292_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1e5e40a08_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1e5e40a08_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1e5e40a08_TypeAlias>>(nullptr), ._field_inscatch=false};;
	if (((*((*(_241136_s))))._field_Generics.len() > 0LL)) {
		_24127_tc._field_useGenerics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5e40a08_TypeAlias>>::alloc(0LL, (*((*(_241136_s))))._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1e5e40a08_TypeAlias>(nullptr); __jule_collection; });
		{
			auto expr = &((*((*(_241136_s))))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e1d609b5:;
			if (it != expr_end) {
				jule::I64 _24259_i = it - expr->begin();
				jule::Ptr<_1e5e3ee14_InsGeneric> _242516_g = *it;
				{
					jule::Ptr<_1e5cb2292_GenericDecl> _24269_decl = (*(*((*(_241136_s))))._field_Decl.alloc)._field_Generics[_24259_i];;
					{ jule::Slice<jule::Ptr<_1e5e40a08_TypeAlias>> &__jule_push_dest = _24127_tc._field_useGenerics; __jule_push_dest.push(jule::new_ptr<_1e5e40a08_TypeAlias>(_1e5e40a08_TypeAlias{._field_Scope=jule::Ptr<_1e5cb50a8_ScopeTree>(nullptr), ._field_Public=false, ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=(*_24269_decl.alloc)._field_Token, ._field_Ident=(*(_24269_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1e5e4900b_TypeSymbol>(_1e5e4900b_TypeSymbol{._field_Decl=jule::Ptr<_1e5ca5087_TypeDecl>(nullptr), ._field_Kind=(*(_242516_g))._field_Kind}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e40a08_TypeAlias>>(nullptr)})); };
				}
				_iter_next_1e1d609b5:;
				++it;
				_24259_i++;
				goto _iter_begin_1e1d609b5;
			}
			_iter_end_1e1d609b5:;
		};
	};
	jule::Ptr<_1e5e03548_SymbolTable> _24357_oldFile = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1e5d7e24e_setCurrentFile(_self_, _24357_oldFile);
	});;
	if (((*((*_self_.alloc)._field_file))._field_File != (*((*(*((*(_241136_s))))._field_Decl.alloc)._field_Token))._field_File)) {
		jule::Ptr<_1e5e03548_SymbolTable> _24398_file = _1e5d7a3d2_findFile(&((*_self_.alloc)._field_files), &((*(*((*((*(_241136_s))))._field_Decl))._field_Token.alloc)._field_File));;
		if ((_24398_file != nullptr)) {
			_1e5d7e24e_setCurrentFile(_self_, _24398_file);
		};
	};
	if (((*((*(_241136_s))))._field_Generics.len() > 0LL)) {
		jule::Ptr<_1e5d318a5_constraintChecker> _24468_cc = _1e5d84de2_constraintChecker(_self_);;
		(*(_24468_cc))._field_et=_241155_errorToken;
		(*_24468_cc.alloc)._field_si=(*(_241136_s));
		(*_24468_cc.alloc)._field_genericsA=_24127_tc._field_useGenerics;
		(*_24468_cc.alloc)._field_uniq=true;
		if ((!(_1e5d3281d_check(_24468_cc)))) {
			return __jule_func_result;;
		};
	};
	__jule_func_result=true;
	if (((*((*(_241136_s))))._field_Statics.len() > 0LL)) {
		jule::I64 _24598_n = (*_self_.alloc)._field_errors.len();;
		(*((*_self_.alloc)._field_files[0LL]))._field_TypeAliases=jule::append(_24127_tc._field_useGenerics,(*((*(_self_))._field_files[0LL]))._field_TypeAliases);
		{
			auto expr = &((*((*(_241136_s))))._field_Statics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1e1d695e5:;
			if (it != expr_end) {
				jule::Ptr<_1e5da0bcc_Var> _246116_v = *it;
				{
					_1e5d9364d_checkVarDecl(_self_, &(_246116_v), jule::Trait(_self_, (jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data3));
					_1e5d97256_checkVar(_self_, &(_246116_v), jule::Trait(_self_, (jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data3));
					__jule_func_result=((((*_self_.alloc)._field_errors.len() - _24598_n) == 0LL) && __jule_func_result);
				}
				_iter_next_1e1d695e5:;
				++it;
				goto _iter_begin_1e1d695e5;
			}
			_iter_end_1e1d695e5:;
		};
		((*((*(_self_))._field_files[0LL]))._field_TypeAliases).mut_slice(_24127_tc._field_useGenerics.len());;
		if ((!(__jule_func_result))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	jule::Ptr<_1e5e0a93a_eval> _24727_eval = _1e5d870c0_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data3));;
	(*((*(_241136_s))))._field_Comparable=(!((*(*((*(_241136_s))))._field_Decl.alloc)._field_Binded));
	{
		auto expr = &((*((*(_241136_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e1d6d0aa:;
		if (it != expr_end) {
			jule::Ptr<_1e5cc81cb_FieldIns> _247415_f = *it;
			{
				jule::Ptr<_1e5e417ea_TypeKind> _24758_kind = _1e5e5b7d2_checkDecl(&_24127_tc, &((*((*((*(_247415_f))._field_Decl))._field_Kind))._field_Decl));;
				__jule_func_result=((_24758_kind != nullptr) && __jule_func_result);
				if ((_24758_kind == nullptr)) {
					if (((_self_ != (*(*((*(_241136_s))))._field_Decl.alloc)._field_sema) && ((*((*(*((*(_241136_s))))._field_Decl.alloc)._field_sema))._field_errors.len() > 0LL))) {
						(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,(*(*((*((*(_241136_s))))._field_Decl))._field_sema.alloc)._field_errors);
						(*(*((*((*(_241136_s))))._field_Decl))._field_sema.alloc)._field_errors=nullptr;
					};
					goto _iter_next_1e1d6d0aa;
				};
				(*_247415_f.alloc)._field_Kind=_24758_kind;
				(*((*(_241136_s))))._field_Mutable=((*((*(_241136_s))))._field_Mutable || ((!((*(*(_247415_f))._field_Decl.alloc)._field_Mutable)) && _1e5e431d1_Mutable((*(_247415_f))._field_Kind)));
				(*((*(_241136_s))))._field_Comparable=((*((*(_241136_s))))._field_Comparable && _1e5e42e4a_Comparable((*(_247415_f))._field_Kind));
				if (((*(*(_247415_f))._field_Decl.alloc)._field_Default == nullptr)) {
					goto _iter_next_1e1d6d0aa;
				};
				(*(_24727_eval))._field_prefix=(*_247415_f.alloc)._field_Kind;
				(*_24727_eval.alloc)._field_field=_247415_f;
				(*_247415_f.alloc)._field_Default=_1e5e297a0_evalExpr(_24727_eval, (*(*(_247415_f))._field_Decl.alloc)._field_Default);
				if (((*_247415_f.alloc)._field_Default == nullptr)) {
					goto _iter_next_1e1d6d0aa;
				};
				;
				_1e5d876db_checkAssignType(_self_, false, &((*_247415_f.alloc)._field_Kind), &((*_247415_f.alloc)._field_Default), (*((*(*(_247415_f))._field_Decl.alloc)._field_Default))._field_Token, (*((*(_241136_s))))._field_Refers);
			}
			_iter_next_1e1d6d0aa:;
			++it;
			goto _iter_begin_1e1d6d0aa;
		}
		_iter_end_1e1d6d0aa:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1e5d98d5c_precheckStructIns(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5cc8c7b_StructIns>* _250839_s, jule::Ptr<_1e5c8eacc_Token> _250858_errorToken) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=_1e5d98961_checkStructEnv(_self_, _250839_s, _250858_errorToken);
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if ((((*((*(_250839_s))))._field_Comparable && ((*((*(_250839_s))))._field_Operators._field_Eq == nullptr)) && ((*((*_self_.alloc)._field_meta))._field_runtime != nullptr))) {
		jule::Ptr<_1e5ce0358_Fn> _25198_decl = _1e21ae8d5_runtimeFindFn(&((*(*(_self_))._field_meta.alloc)._field_runtime), static_cast<jule::Str>(jule::Str::lit("arrayCmp", 8)));;
		{
			auto expr = &((*((*(_250839_s))))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1cb01260b:;
			if (it != expr_end) {
				jule::Ptr<_1e5cc81cb_FieldIns> _252016_field = *it;
				{
					jule::Ptr<_1e5e51233_Arr> _25219_arr = _1e5e44c71_Arr((*(_252016_field))._field_Kind.ptr());;
					if ((_25219_arr == nullptr)) {
						goto _iter_next_1cb01260b;
					};
					jule::Ptr<_1e5ce3416_FnIns> _25259_f = _1e5ce1865_instanceForce(_25198_decl);;
					(*(_25259_f))._field_Generics=jule::append((*_25259_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1e5e3ee14_InsGeneric>(_1e5e3ee14_InsGeneric{._field_Kind=(*(_25219_arr))._field_Elem, ._field_Constraint=jule::Slice<jule::Ptr<_1e5e417ea_TypeKind>>(nullptr)}); __jule_collection; }));
					({
						__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1e5d97c4b_checkGenericFn(_self_, &(_25259_f), &((*((*_252016_field.alloc)._field_Decl))._field_Token));
						__jule_func_result = __jule_assign_result.__jule_result_arg0;
					});
					if ((!(__jule_func_result))) {
						__jule_panic_s(jule::Str::lit("arrayCmp evaluation failed, this is an implementation mistake", 61) + jule::Str("\nlocation: std/jule/sema/sema.jule:2529:6"));;
					};
					_1e5ce73b5_Push((*((*(_250839_s))))._field_Refers.ptr(), jule::Any(_25259_f, &__jule_any_type7));
				}
				_iter_next_1cb01260b:;
				++it;
				goto _iter_begin_1cb01260b;
			}
			_iter_end_1cb01260b:;
		};
	};
	{
		auto expr = &((*((*(_250839_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb016687:;
		if (it != expr_end) {
			jule::Ptr<_1e5ce0358_Fn> _253515_f = *it;
			{
				if (((*(_253515_f))._field_Generics.len() == 0LL)) {
					if ((_1e5d97850_readyToCheckFn(_self_, _250839_s, &(_253515_f)) == nullptr)) {
						__jule_func_result = false;
						return __jule_func_result;;
					};
				};
			}
			_iter_next_1cb016687:;
			++it;
			goto _iter_begin_1cb016687;
		}
		_iter_end_1cb016687:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1e5d99115_checkStructIns(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5cc8c7b_StructIns>* _254536_s) {
	{
		auto expr = &((*((*(_254536_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb01828d:;
		if (it != expr_end) {
			jule::Ptr<_1e5ce0358_Fn> _254615_f = *it;
			{
				_1e5d980ae_checkTypeMethod(_self_, _254536_s, &(_254615_f));
			}
			_iter_next_1cb01828d:;
			++it;
			goto _iter_begin_1cb01828d;
		}
		_iter_end_1cb01828d:;
	};
}



inline void _1e5d993bd_checkTypeStruct(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5cc5e21_Struct>* _255137_s) {
	if ((*((*(_255137_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_255137_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_255137_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb019c95:;
		if (it != expr_end) {
			jule::Ptr<_1e5cc8c7b_StructIns> _256415_ins = *it;
			{
				_1e5d99115_checkStructIns(_self_, &(_256415_ins));
			}
			_iter_next_1cb019c95:;
			++it;
			goto _iter_begin_1cb019c95;
		}
		_iter_end_1cb019c95:;
	};
}



inline void _1e5d995bb_checkStructTypes(jule::Ptr<_1e5d7b768_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb01ac41:;
		if (it != expr_end) {
			jule::Ptr<_1e5cc5e21_Struct> _257015_s = *it;
			{
				_1e5d993bd_checkTypeStruct(_self_, &(_257015_s));
			}
			_iter_next_1cb01ac41:;
			++it;
			goto _iter_begin_1cb01ac41;
		}
		_iter_end_1cb01ac41:;
	};
}



inline void _1e5d99874_checkStructInsOperators(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5cc8c7b_StructIns> _257544_s) {
	{
		auto expr = &((*(_257544_s))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb01bbcb:;
		if (it != expr_end) {
			jule::Ptr<_1e5ce0358_Fn> _257615_m = *it;
			{
				{
					auto &_match_expr{ (*(_257615_m))._field_Ident };
					
					if (_match_expr == jule::Str::lit("Eq", 2)) {
						_case_begin_1cb01c35d:;
						{
							(*(_257544_s))._field_Operators._field_Eq=_1e5d98565_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1e5da2bce_Eq);
							(*_257544_s.alloc)._field_Comparable=((*_257544_s.alloc)._field_Operators._field_Eq != nullptr);
						}
					}
					else if (_match_expr == jule::Str::lit("Gt", 2)) {
						_case_begin_1cb01c957:;
						{
							(*(_257544_s))._field_Operators._field_Gt=_1e5d98565_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1e5da2e98_Gt);
						}
					}
					else if (_match_expr == jule::Str::lit("GtEq", 4)) {
						_case_begin_1cb01c9bd:;
						{
							(*(_257544_s))._field_Operators._field_GtEq=_1e5d98565_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1e5da3262_GtEq);
						}
					}
					else if (_match_expr == jule::Str::lit("Lt", 2)) {
						_case_begin_1cb01ca34:;
						{
							(*(_257544_s))._field_Operators._field_Lt=_1e5d98565_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1e5da352b_Lt);
						}
					}
					else if (_match_expr == jule::Str::lit("LtEq", 4)) {
						_case_begin_1cb01ca9a:;
						{
							(*(_257544_s))._field_Operators._field_LtEq=_1e5d98565_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1e5da37e5_LtEq);
						}
					}
					else if (_match_expr == jule::Str::lit("Shl", 3)) {
						_case_begin_1cb01cb22:;
						{
							(*(_257544_s))._field_Operators._field_Shl=_1e5d98565_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1e5da3e33_Shl);
						}
					}
					else if (_match_expr == jule::Str::lit("Shr", 3)) {
						_case_begin_1cb01cb99:;
						{
							(*(_257544_s))._field_Operators._field_Shr=_1e5d98565_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1e5da41ec_Shr);
						}
					}
					else if (_match_expr == jule::Str::lit("Add", 3)) {
						_case_begin_1cb01cc21:;
						{
							(*(_257544_s))._field_Operators._field_Add=_1e5d98565_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1e5da44b6_Add);
						}
					}
					else if (_match_expr == jule::Str::lit("Sub", 3)) {
						_case_begin_1cb01cc98:;
						{
							(*(_257544_s))._field_Operators._field_Sub=_1e5d98565_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1e5da4780_Sub);
						}
					}
					else if (_match_expr == jule::Str::lit("Div", 3)) {
						_case_begin_1cb01cd20:;
						{
							(*(_257544_s))._field_Operators._field_Div=_1e5d98565_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1e5da4a49_Div);
						}
					}
					else if (_match_expr == jule::Str::lit("Mul", 3)) {
						_case_begin_1cb01cd97:;
						{
							(*(_257544_s))._field_Operators._field_Mul=_1e5d98565_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1e5da4d13_Mul);
						}
					}
					else if (_match_expr == jule::Str::lit("Mod", 3)) {
						_case_begin_1cb01ce1e:;
						{
							(*(_257544_s))._field_Operators._field_Mod=_1e5d98565_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1e5da50cc_Mod);
						}
					}
					else if (_match_expr == jule::Str::lit("BitAnd", 6)) {
						_case_begin_1cb01ce96:;
						{
							(*(_257544_s))._field_Operators._field_BitAnd=_1e5d98565_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1e5da5396_BitAnd);
						}
					}
					else if (_match_expr == jule::Str::lit("BitOr", 5)) {
						_case_begin_1cb01d01d:;
						{
							(*(_257544_s))._field_Operators._field_BitOr=_1e5d98565_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1e5da5660_BitOr);
						}
					}
					else if (_match_expr == jule::Str::lit("BitXor", 6)) {
						_case_begin_1cb01d095:;
						{
							(*(_257544_s))._field_Operators._field_BitXor=_1e5d98565_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1e5da5929_BitXor);
						}
					}
					else if (_match_expr == jule::Str::lit("Neg", 3)) {
						_case_begin_1cb01d11c:;
						{
							(*(_257544_s))._field_Operators._field_Neg=_1e5d98565_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1e5da6067_Neg);
						}
					}
					else if (_match_expr == jule::Str::lit("Pos", 3)) {
						_case_begin_1cb01d194:;
						{
							(*(_257544_s))._field_Operators._field_Pos=_1e5d98565_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1e5da6331_Pos);
						}
					}
					else if (_match_expr == jule::Str::lit("BitNot", 6)) {
						_case_begin_1cb01d21b:;
						{
							(*(_257544_s))._field_Operators._field_BitNot=_1e5d98565_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1e5da65ea_BitNot);
						}
					}
					else if (_match_expr == jule::Str::lit("AddAssign", 9)) {
						_case_begin_1cb01d293:;
						{
							(*(_257544_s))._field_Operators._field_AddAssign=_1e5d98565_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1e5da6c38_AddAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("SubAssign", 9)) {
						_case_begin_1cb01d31a:;
						{
							(*(_257544_s))._field_Operators._field_SubAssign=_1e5d98565_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1e5da7002_SubAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("DivAssign", 9)) {
						_case_begin_1cb01d392:;
						{
							(*(_257544_s))._field_Operators._field_DivAssign=_1e5d98565_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1e5da72bb_DivAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("MulAssign", 9)) {
						_case_begin_1cb01d419:;
						{
							(*(_257544_s))._field_Operators._field_MulAssign=_1e5d98565_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1e5da7585_MulAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ModAssign", 9)) {
						_case_begin_1cb01d491:;
						{
							(*(_257544_s))._field_Operators._field_ModAssign=_1e5d98565_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1e5da784e_ModAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ShlAssign", 9)) {
						_case_begin_1cb01d518:;
						{
							(*(_257544_s))._field_Operators._field_ShlAssign=_1e5d98565_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1e5da7b18_ShlAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ShrAssign", 9)) {
						_case_begin_1cb01d590:;
						{
							(*(_257544_s))._field_Operators._field_ShrAssign=_1e5d98565_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1e5da7dd2_ShrAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitOrAssign", 11)) {
						_case_begin_1cb01d617:;
						{
							(*(_257544_s))._field_Operators._field_BitOrAssign=_1e5d98565_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1e5da819b_BitOrAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitAndAssign", 12)) {
						_case_begin_1cb01d68e:;
						{
							(*(_257544_s))._field_Operators._field_BitAndAssign=_1e5d98565_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1e5da8465_BitAndAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitXorAssign", 12)) {
						_case_begin_1cb01d716:;
						{
							(*(_257544_s))._field_Operators._field_BitXorAssign=_1e5d98565_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1e5da872e_BitXorAssign);
						}
					}
					_match_end_1cb01c638:;
				};
			}
			_iter_next_1cb01bbcb:;
			++it;
			goto _iter_begin_1cb01bbcb;
		}
		_iter_end_1cb01bbcb:;
	};
}



inline void _1e5d99b2c_precheckStructType(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5cc5e21_Struct>* _263940_s) {
	if ((*((*(_263940_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_263940_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_263940_s))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1e5cc8c7b_StructIns> _26508_ins = _1e5cc63b6_instance((*(_263940_s)));;
		(*(_26508_ins))._field_Checked=true;
		_1e5cc66c4_appendInstance((*(_263940_s)).ptr(), &(_26508_ins));
		_1e5d98d5c_precheckStructIns(_self_, &(_26508_ins), nullptr);
	};
	_1e5d99874_checkStructInsOperators(_self_, (*((*(_263940_s))))._field_Instances[0LL]);
}



inline void _1e5d99d2a_precheckStructTypes(jule::Ptr<_1e5d7b768_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb034980:;
		if (it != expr_end) {
			jule::Ptr<_1e5cc5e21_Struct> _266015_s = *it;
			{
				_1e5d99b2c_precheckStructType(_self_, &(_266015_s));
			}
			_iter_next_1cb034980:;
			++it;
			goto _iter_begin_1cb034980;
		}
		_iter_end_1cb034980:;
	};
}



inline void _1e5d9a0d3_checkRets(_1e5d7b768_sema* _self_, jule::Ptr<_1e5ce3416_FnIns>* _266530_f) {
	if (_1e5ce080e_IsVoid((*((*(_266530_f))))._field_Decl.ptr())) {
		return;;
	};
	_1e5d9c525_missingRetChecker _26693_mrc = static__1e5d9c921_new();;
	jule::Bool _26703_ok = _1e5d9daed_check(&_26693_mrc, (*((*(_266530_f))))._field_Scope);;
	if ((!(_26703_ok))) {
		_1e5d7e66c_pushErr(_self_, (*(*((*(_266530_f))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("missing return at end of function", 33)), jule::Slice<jule::Any>());
	};
}



inline void _1e5d9a446_checkFnInsSc(_1e5d7b768_sema* _self_, jule::Ptr<_1e5ce3416_FnIns>* _267633_f, jule::Ptr<_1e5d40771_scopeChecker>* _267649_sc) {
	_1e5d79986_appendRetVars(&((*((*((*(_267649_sc))))._field_table))._field_Vars), _267633_f);
	_1e5d79c72_appendParamVars(&((*(*((*(_267649_sc))))._field_table.alloc)._field_Vars), _267633_f);
	_1e5d7a05d_appendGenericTypeAliases(&((*(*((*(_267649_sc))))._field_table.alloc)._field_TypeAliases), _267633_f);
	_1e5d528e8_check((*(_267649_sc)), &((*((*((*(_267633_f))))._field_Decl))._field_Scope), &((*((*(_267633_f))))._field_Scope));
	if ((!(_1e5d43378_stopped((*(_267649_sc)).ptr())))) {
		_1e5d9a0d3_checkRets(_self_, _267633_f);
	};
}



inline void _1e5d9a7a9_checkFnInsCaller(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5ce3416_FnIns>* _268938_f, jule::Ptr<_1e5c8eacc_Token> _268953_caller) {
	if ((*((*((*(_268938_f))))._field_Decl))._field_Binded) {
		return;;
	};
	jule::Ptr<_1e5e03548_SymbolTable> _26947_old = (*((*(*((*(_268938_f))))._field_Decl.alloc)._field_sema))._field_file;;
	__JULE_DEFER({
		_1e5d7e24e_setCurrentFile((*((*((*(_268938_f))))._field_Decl))._field_sema, _26947_old);
	});;
	jule::Ptr<_1e5e03548_SymbolTable> _26967_file = _1e5d7a3d2_findFile(&((*(*((*((*(_268938_f))))._field_Decl))._field_sema.alloc)._field_files), &((*((*(*((*(_268938_f))))._field_Decl.alloc)._field_Token))._field_File));;
	if ((_26967_file != nullptr)) {
		_1e5d7e24e_setCurrentFile((*((*((*(_268938_f))))._field_Decl))._field_sema, _26967_file);
	};
	jule::Ptr<_1e5d40771_scopeChecker> _27017_sc = _1e5d36305_newScopeChecker(&((*(*((*(_268938_f))))._field_Decl.alloc)._field_sema), (*(_268938_f)));;
	(*(_27017_sc))._field_calledFrom=_268953_caller;
	_1e5d9a446_checkFnInsSc(_self_.ptr(), _268938_f, &(_27017_sc));
	if (((*(*((*(_268938_f))))._field_Decl.alloc)._field_sema != _self_)) {
		(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,(*(*((*((*(_268938_f))))._field_Decl))._field_sema.alloc)._field_errors);
		(*(*((*((*(_268938_f))))._field_Decl))._field_sema.alloc)._field_errors=nullptr;
	};
}



inline void _1e5d9aa62_checkFnIns(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5ce3416_FnIns>* _271132_f) {
	_1e5d9a7a9_checkFnInsCaller(_self_, _271132_f, nullptr);
}



inline void _1e5d9ad1a_checkFunc(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5ce0358_Fn>* _271531_f) {
	if ((*((*(_271531_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_271531_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_271531_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb0430ba:;
		if (it != expr_end) {
			jule::Ptr<_1e5ce3416_FnIns> _272515_ins = *it;
			{
				_1e5d9aa62_checkFnIns(_self_, &(_272515_ins));
			}
			_iter_next_1cb0430ba:;
			++it;
			goto _iter_begin_1cb0430ba;
		}
		_iter_end_1cb0430ba:;
	};
}



inline void _1e5d9b0c3_checkTestFn(_1e5d7b768_sema* _self_, jule::Ptr<_1e5ce3416_FnIns>* _273032_f) {
	if ((*((*((*(_273032_f))))._field_Decl))._field_Public) {
		_1e5d7e66c_pushErr(_self_, (*(*((*(_273032_f))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("test function cannot be public", 30)), jule::Slice<jule::Any>());
		_1e5d7e9d0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("dont use identifier which is starts with capital letter to avoid define as public", 81)), jule::Slice<jule::Any>());
		return;;
	};
	if (((((((*(*((*(_273032_f))))._field_Decl.alloc)._field_Unsafety || (!(_1e5ce080e_IsVoid((*((*(_273032_f))))._field_Decl)))) || ((*(*((*(_273032_f))))._field_Decl.alloc)._field_Generics.len() != 0LL)) || ((*((*(_273032_f))))._field_Params.len() != 1LL)) || (*((*(*((*(_273032_f))))._field_Decl.alloc)._field_Params[0LL]))._field_Mutable) || (*((*((*((*(_273032_f))))._field_Decl))._field_Params[0LL]))._field_Reference)) {
		_1e5d7e66c_pushErr(_self_, (*(*((*(_273032_f))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("wrong test function declaration", 31)), jule::Slice<jule::Any>());
		_1e5d7e9d0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e5e4d43e_Sptr> _27487_sptr = _1e5e44237_Sptr((*((*((*(_273032_f))))._field_Params[0LL]))._field_Kind.ptr());;
	if ((_27487_sptr == nullptr)) {
		_1e5d7e66c_pushErr(_self_, (*(*((*(_273032_f))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("wrong test function declaration", 31)), jule::Slice<jule::Any>());
		_1e5d7e9d0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e5cc8c7b_StructIns> _27553_s = _1e5e45524_Struct((*(_27487_sptr))._field_Elem.ptr());;
	if (((_27553_s == nullptr) || (!(_1e5d616e8_isStdPackage(&((*((*((*((*(_27553_s))._field_Decl))._field_Token))._field_File))._field_Path), jule::Str::lit("testing", 7)))))) {
		_1e5d7e66c_pushErr(_self_, (*(*((*(_273032_f))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("wrong test function declaration", 31)), jule::Slice<jule::Any>());
		_1e5d7e9d0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63)), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1e5d9b37b_precheckFunc(jule::Ptr<_1e5d7b768_sema> _self_, jule::Ptr<_1e5ce0358_Fn>* _276334_f) {
	if ((*((*(_276334_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_276334_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_276334_f))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1e5ce3416_FnIns> _27748_ins = _1e5ce1865_instanceForce((*(_276334_f)));;
		{ jule::Slice<jule::Ptr<_1e5ce3416_FnIns>> &__jule_push_dest = (*((*(_276334_f))))._field_Instances; __jule_push_dest.push(_27748_ins); };
		jule::Bool _27764_ok = _1e5d8b05d_reloadFnInsTypes(_self_, _27748_ins);;
		(*(_27748_ins))._field_reloaded=true;
		if ((_27764_ok && _1e5e5cd66_hasDirective(&((*((*(_276334_f))))._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4))))) {
			_1e5d9b0c3_checkTestFn(_self_, &(_27748_ins));
		};
	};
}



inline void _1e5d9b579_precheckFuncs(jule::Ptr<_1e5d7b768_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb051d10:;
		if (it != expr_end) {
			jule::Ptr<_1e5d03db6_Trait> _278715_decl = *it;
			{
				{
					auto expr = &((*(_278715_decl))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cb05276c:;
					if (it != expr_end) {
						jule::Ptr<_1e5ce0358_Fn> _278816_m = *it;
						{
							_1e5d9b37b_precheckFunc(_self_, &(_278816_m));
						}
						_iter_next_1cb05276c:;
						++it;
						goto _iter_begin_1cb05276c;
					}
					_iter_end_1cb05276c:;
				};
			}
			_iter_next_1cb051d10:;
			++it;
			goto _iter_begin_1cb051d10;
		}
		_iter_end_1cb051d10:;
	};
	{
		auto expr = &((*(*(_self_))._field_file.alloc)._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb052b13:;
		if (it != expr_end) {
			jule::Ptr<_1e5ce0358_Fn> _279215_decl = *it;
			{
				_1e5d9b37b_precheckFunc(_self_, &(_279215_decl));
			}
			_iter_next_1cb052b13:;
			++it;
			goto _iter_begin_1cb052b13;
		}
		_iter_end_1cb052b13:;
	};
}



inline void _1e5d9b777_checkFuncs(jule::Ptr<_1e5d7b768_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb054054:;
		if (it != expr_end) {
			jule::Ptr<_1e5ce0358_Fn> _279915_decl = *it;
			{
				_1e5d9ad1a_checkFunc(_self_, &(_279915_decl));
			}
			_iter_next_1cb054054:;
			++it;
			goto _iter_begin_1cb054054;
		}
		_iter_end_1cb054054:;
	};
}



inline void _1e5d9b975_checkPackageTypes(jule::Ptr<_1e5d7b768_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb054d46:;
		if (it != expr_end) {
			jule::Ptr<_1e5e03548_SymbolTable> _280715_f = *it;
			{
				_1e5d7e24e_setCurrentFile(_self_.ptr(), _280715_f);
				_1e5d97454_checkGlobals(_self_);
				_1e5d9b579_precheckFuncs(_self_);
				_1e5d99d2a_precheckStructTypes(_self_);
			}
			_iter_next_1cb054d46:;
			++it;
			goto _iter_begin_1cb054d46;
		}
		_iter_end_1cb054d46:;
	};
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb0568c5:;
		if (it != expr_end) {
			jule::Ptr<_1e5e03548_SymbolTable> _281815_f = *it;
			{
				_1e5d7e24e_setCurrentFile(_self_, _281815_f);
				_1e5d9b777_checkFuncs(_self_);
				_1e5d995bb_checkStructTypes(_self_);
			}
			_iter_next_1cb0568c5:;
			++it;
			goto _iter_begin_1cb0568c5;
		}
		_iter_end_1cb0568c5:;
	};
}



inline void _1e5d9bb73_setFileSemaFields(jule::Ptr<_1e5d7b768_sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb057e9d:;
		if (it != expr_end) {
			jule::Ptr<_1e5ce0358_Fn> _282615_f = *it;
			{
				(*(_282615_f))._field_sema=_self_;
			}
			_iter_next_1cb057e9d:;
			++it;
			goto _iter_begin_1cb057e9d;
		}
		_iter_end_1cb057e9d:;
	};
	{
		auto expr = &((*(*(_self_))._field_file.alloc)._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb058b19:;
		if (it != expr_end) {
			jule::Ptr<_1e5cc5e21_Struct> _282915_st = *it;
			{
				(*(_282915_st))._field_sema=_self_;
			}
			_iter_next_1cb058b19:;
			++it;
			goto _iter_begin_1cb058b19;
		}
		_iter_end_1cb058b19:;
	};
}



inline void _1e5d9bd71_setSemaFields(jule::Ptr<_1e5d7b768_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb0597da:;
		if (it != expr_end) {
			jule::Ptr<_1e5e03548_SymbolTable> _283515_file = *it;
			{
				_1e5d7e24e_setCurrentFile(_self_.ptr(), _283515_file);
				_1e5d9bb73_setFileSemaFields(_self_);
			}
			_iter_next_1cb0597da:;
			++it;
			goto _iter_begin_1cb0597da;
		}
		_iter_end_1cb0597da:;
	};
}



inline void _1e5d9c129_check(jule::Ptr<_1e5d7b768_sema> _self_, jule::Slice<jule::Ptr<_1e5e03548_SymbolTable>>* _284127_files) {
	(*(_self_))._field_files=(*(_284127_files));
	_1e5d9bd71_setSemaFields(_self_);
	_1e5d830dd_checkImports(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1e5d83ad3_checkInherits(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1e5d834d9_implImpls(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1e5d836d7_checkEnums(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1e5d96464_checkPackageDecls(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1e5d9b975_checkPackageTypes(_self_);
}







inline _1e5d9c525_missingRetChecker static__1e5d9c921_new(void) {
	return _1e5d9c525_missingRetChecker{._field_breaked=({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(16LLU, 16LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_falled=false};;
}



inline jule::Bool _1e5d9cc2e_checkConditional(_1e5d9c525_missingRetChecker* _self_, jule::Ptr<_1e5d3911b_Conditional> _288932_c) {
	{
		auto expr = &((*(_288932_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb05ee94:;
		if (it != expr_end) {
			jule::Ptr<_1e5d38901_If> _289015_elif = *it;
			{
				if ((_289015_elif == nullptr)) {
					return false;;
				};
				if ((!(_1e5d9d7ac_checkScope(_self_, (*(_289015_elif))._field_Scope)))) {
					return false;;
				};
			}
			_iter_next_1cb05ee94:;
			++it;
			goto _iter_begin_1cb05ee94;
		}
		_iter_end_1cb05ee94:;
	};
	return (((*_288932_c.alloc)._field_Default != nullptr) && _1e5d9d7ac_checkScope(_self_, (*(*(_288932_c))._field_Default.alloc)._field_Scope));;
}



inline jule::Bool _1e5d9d070_checkMatch(_1e5d9c525_missingRetChecker* _self_, jule::Ptr<_1e5d3cc13_Match> _290126_m) {
	{
		auto expr = &((*(_290126_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb062062:;
		if (it != expr_end) {
			jule::Ptr<_1e5d3d73b_Case> _290215_c = *it;
			{
				if ((_290215_c == nullptr)) {
					return false;;
				};
				jule::I64 _29064_n = (*(_self_))._field_breaked.len();;
				jule::Bool _29074_ok = _1e5d9d7ac_checkScope(_self_, (*(_290215_c))._field_Scope);;
				{
					
					if ((_29064_n != (*(_self_))._field_breaked.len())) {
						_case_begin_1cb063a36:;
						{
							return false;;
						}
					}
					else if ((!(_29074_ok))) {
						_case_begin_1cb063abe:;
						{
							if ((!((*(_self_))._field_falled))) {
								return false;;
							};
							goto _case_begin_1cb063b35;
						}
					}
					else if ((*(_self_))._field_falled) {
						_case_begin_1cb063b35:;
						{
							(*(_self_))._field_falled=false;
							if (((*(_290215_c))._field_Next == nullptr)) {
								return false;;
							};
							goto _iter_next_1cb062062;
						}
					}
					_match_end_1cb0639c0:;
				};
			}
			_iter_next_1cb062062:;
			++it;
			goto _iter_begin_1cb062062;
		}
		_iter_end_1cb062062:;
	};
	return (((*_290126_m.alloc)._field_Default != nullptr) && _1e5d9d7ac_checkScope(_self_, (*(*(_290126_m))._field_Default.alloc)._field_Scope));;
}



inline jule::Bool _1e5d9d46b_checkInfIter(_1e5d9c525_missingRetChecker* _self_, jule::Uintptr _292724_it, jule::Ptr<_1e5d384d3_Scope>* _292742_s) {
	jule::I64 _29283_n = (*(_self_))._field_breaked.len();;
	if (_1e5d9d7ac_checkScope(_self_, (*(_292742_s)))) {
		((*(_self_))._field_breaked).mut_slice(0LL, _29283_n);;
		return true;;
	};
	if ((_29283_n != (*(_self_))._field_breaked.len())) {
		{
			auto expr = (*(_self_))._field_breaked.slice(_29283_n);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1cb067474:;
			if (it != expr_end) {
				jule::Uintptr _293411_addr = *it;
				{
					if ((_292724_it == _293411_addr)) {
						((*(_self_))._field_breaked).mut_slice(0LL, _29283_n);;
						return false;;
					};
				}
				_iter_next_1cb067474:;
				++it;
				goto _iter_begin_1cb067474;
			}
			_iter_end_1cb067474:;
		};
		((*(_self_))._field_breaked).mut_slice(0LL, _29283_n);;
	};
	return true;;
}



inline jule::Bool _1e5d9d7ac_checkScope(_1e5d9c525_missingRetChecker* _self_, jule::Ptr<_1e5d384d3_Scope> _294526_s) {
	if ((_294526_s == nullptr)) {
		return false;;
	};
	{
		auto expr = &((*(_294526_s))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb068aa2:;
		if (it != expr_end) {
			jule::Any _294915_st = *it;
			{
				{
					auto &_match_expr{ _294915_st };
					
					if (_match_expr.type == &__jule_any_type55) {
						_case_begin_1cb069773:;
						{
							(*(_self_))._field_falled=true;
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type56) {
						_case_begin_1cb069553:;
						{
							jule::Uintptr _29555_addr = (*(_294915_st.unsafe_cast_ptr<_1e5d3aa79_BreakSt>()))._field_It;;
							if ((_29555_addr != 0LLU)) {
								{ jule::Slice<jule::Uintptr> &__jule_push_dest = (*(_self_))._field_breaked; __jule_push_dest.push(_29555_addr); };
							};
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type47) {
						_case_begin_1cb06980b:;
						{
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type42) {
						_case_begin_1cb069883:;
						{
							jule::Ptr<_1e5d39418_InfIter> _29639_ii = _294915_st.unsafe_cast_ptr<_1e5d39418_InfIter>();;
							if (_1e5d9d46b_checkInfIter(_self_, static_cast<jule::Uintptr>(_29639_ii), &((*(_29639_ii))._field_Scope))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type44) {
						_case_begin_1cb06990a:;
						{
							jule::Ptr<_1e5d398be_WhileIter> _29689_wn = _294915_st.unsafe_cast_ptr<_1e5d398be_WhileIter>();;
							if ((_1e5d39c65_IsWhileNext(_29689_wn.ptr()) && ((*_29689_wn.alloc)._field_Expr == nullptr))) {
								if (_1e5d9d46b_checkInfIter(_self_, static_cast<jule::Uintptr>(_29689_wn), &((*_29689_wn.alloc)._field_Scope))) {
									return true;;
								};
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type57) {
						_case_begin_1cb069982:;
						{
							return true;;
						}
					}
					else if (_match_expr.type == &__jule_any_type29) {
						_case_begin_1cb069a09:;
						{
							if (_1e5d9d7ac_checkScope(_self_, _294915_st.cast_ptr<_1e5d384d3_Scope>(&__jule_any_type29))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type31) {
						_case_begin_1cb069a81:;
						{
							{
								auto &_match_expr{ (*(_294915_st.cast_ptr<_1e5e08c13_Data>(&__jule_any_type31)))._field_Model };
								
								if (_match_expr.type == &__jule_any_type36 || _match_expr.type == &__jule_any_type30) {
									_case_begin_1cb070b20:;
									{
										return true;;
									}
								}
								_match_end_1cb070a76:;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type41) {
						_case_begin_1cb069b08:;
						{
							if (_1e5d9cc2e_checkConditional(_self_, _294915_st.cast_ptr<_1e5d3911b_Conditional>(&__jule_any_type41))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type54) {
						_case_begin_1cb069b80:;
						{
							if (_1e5d9d070_checkMatch(_self_, _294915_st.cast_ptr<_1e5d3cc13_Match>(&__jule_any_type54))) {
								return true;;
							};
						}
					}
					_match_end_1cb0695ca:;
				};
			}
			_iter_next_1cb068aa2:;
			++it;
			goto _iter_begin_1cb068aa2;
		}
		_iter_end_1cb068aa2:;
	};
	return false;;
}



inline jule::Bool _1e5d9daed_check(_1e5d9c525_missingRetChecker* _self_, jule::Ptr<_1e5d384d3_Scope> _300021_s) {
	return _1e5d9d7ac_checkScope(_self_, _300021_s);;
}







inline jule::Bool _1e5da10d9_IsInitialized(_1e5da0bcc_Var* _self_) {
	return ((*(_self_))._field_Value != nullptr);;
}



inline jule::Bool _1e5da1370_IsTypeInferred(_1e5da0bcc_Var* _self_) {
	return (((*(_self_))._field_Kind == nullptr) || ((*((*(_self_))._field_Kind))._field_Decl == nullptr));;
}



inline jule::Bool _1e5da1606_untypedConstant(_1e5da0bcc_Var* _self_) {
	return (_1e5da1370_IsTypeInferred(_self_) && (*((*((*(_self_))._field_Value))._field_Data))._field_untyped);;
}







inline jule::Bool static__1e5da22c7_Dispose(jule::Ptr<_1e5ce0358_Fn> _1020_f) {
	return ((((((((((_1020_f != nullptr) && ((*_1020_f.alloc)._field_Owner != nullptr)) && (*(_1020_f))._field_Ident.equal("Dispose", 7)) && (!((*_1020_f.alloc)._field_Statically))) && (!((*_1020_f.alloc)._field_Unsafety))) && _1e5ce080e_IsVoid(_1020_f)) && ((*_1020_f.alloc)._field_Generics.len() == 0LL)) && ((*_1020_f.alloc)._field_Params.len() == 1LL)) && (*((*(_1020_f))._field_Params[0LL]))._field_Mutable) && (!(_1e5cde269_IsRef((*(_1020_f))._field_Params[0LL].ptr()))));;
}



inline jule::Bool static__1e5da2591_Str(jule::Ptr<_1e5ce0358_Fn> _2416_f) {
	if (((((((((((_2416_f == nullptr) || ((*(_2416_f))._field_Owner == nullptr)) || (!(*(_2416_f))._field_Ident.equal("Str", 3))) || (*(_2416_f))._field_Statically) || (*(_2416_f))._field_Unsafety) || _1e5ce080e_IsVoid(_2416_f.ptr())) || ((*(_2416_f))._field_Generics.len() != 0LL)) || ((*(_2416_f))._field_Params.len() != 1LL)) || (*((*(_2416_f))._field_Params[0LL]))._field_Mutable) || _1e5cde269_IsRef((*(_2416_f))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1e5ce3416_FnIns> _387_ins = (*(_2416_f))._field_Instances[0LL];;
	jule::Ptr<_1e5e49913_Prim> _393_prim = _1e5e43ea1_Prim((*(_387_ins))._field_Result.ptr());;
	if ((_393_prim == nullptr)) {
		return false;;
	};
	return _1e5e4cdcd_IsStr(_393_prim.ptr());;
}



inline jule::Bool static__1e5da2915_logical(jule::Ptr<_1e5ce0358_Fn>* _4621_f, jule::Str _4629_ident) {
	if (((((((((((((((*(_4621_f)) == nullptr) || ((*((*(_4621_f))))._field_Ident != _4629_ident)) || ((*((*(_4621_f))))._field_Owner == nullptr)) || ((*((*(_4621_f))))._field_Instances.len() == 0LL)) || (*((*(_4621_f))))._field_Statically) || (*((*(_4621_f))))._field_Unsafety) || _1e5ce080e_IsVoid((*(_4621_f)).ptr())) || ((*((*(_4621_f))))._field_Generics.len() != 0LL)) || ((*((*(_4621_f))))._field_Params.len() != 2LL)) || (*((*((*(_4621_f))))._field_Params[0LL]))._field_Mutable) || _1e5cde269_IsRef((*((*(_4621_f))))._field_Params[0LL].ptr())) || (*((*((*(_4621_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_4621_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1e5ce3416_FnIns> _637_ins = (*((*(_4621_f))))._field_Instances[0LL];;
	jule::Ptr<_1e5e49913_Prim> _643_prim = _1e5e43ea1_Prim((*(_637_ins))._field_Result.ptr());;
	if (((_643_prim == nullptr) || (!(_1e5e4cb47_IsBool(_643_prim.ptr()))))) {
		return false;;
	};
	return ((*_637_ins.alloc)._field_Owner == _1e5e45524_Struct((*((*_637_ins.alloc)._field_Params[1LL]))._field_Kind.ptr()));;
}



inline jule::Bool static__1e5da2bce_Eq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5ce0358_Fn> _7215_f) {
	return static__1e5da2915_logical(&(_7215_f), jule::Str::lit("Eq", 2));;
}



inline jule::Bool static__1e5da2e98_Gt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5ce0358_Fn> _7715_f) {
	return static__1e5da2915_logical(&(_7715_f), jule::Str::lit("Gt", 2));;
}



inline jule::Bool static__1e5da3262_GtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5ce0358_Fn> _8217_f) {
	return static__1e5da2915_logical(&(_8217_f), jule::Str::lit("GtEq", 4));;
}



inline jule::Bool static__1e5da352b_Lt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5ce0358_Fn> _8715_f) {
	return static__1e5da2915_logical(&(_8715_f), jule::Str::lit("Lt", 2));;
}



inline jule::Bool static__1e5da37e5_LtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5ce0358_Fn> _9217_f) {
	return static__1e5da2915_logical(&(_9217_f), jule::Str::lit("LtEq", 4));;
}



inline jule::Bool static__1e5da3b69_result(jule::Ptr<_1e5ce0358_Fn>* _9620_f, jule::Str _9628_ident) {
	if (((((((((((((((*(_9620_f)) == nullptr) || ((*((*(_9620_f))))._field_Ident != _9628_ident)) || ((*((*(_9620_f))))._field_Owner == nullptr)) || ((*((*(_9620_f))))._field_Instances.len() == 0LL)) || (*((*(_9620_f))))._field_Statically) || (*((*(_9620_f))))._field_Unsafety) || _1e5ce080e_IsVoid((*(_9620_f)).ptr())) || ((*((*(_9620_f))))._field_Generics.len() != 0LL)) || ((*((*(_9620_f))))._field_Params.len() != 2LL)) || (*((*((*(_9620_f))))._field_Params[0LL]))._field_Mutable) || _1e5cde269_IsRef((*((*(_9620_f))))._field_Params[0LL].ptr())) || (*((*((*(_9620_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_9620_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1e5ce3416_FnIns> _1137_ins = (*((*(_9620_f))))._field_Instances[0LL];;
	return (_1e5e45524_Struct((*(_1137_ins))._field_Result.ptr()) == (*_1137_ins.alloc)._field_Owner);;
}



inline jule::Bool static__1e5da3e33_Shl(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5ce0358_Fn> _11816_f) {
	return static__1e5da3b69_result(&(_11816_f), jule::Str::lit("Shl", 3));;
}



inline jule::Bool static__1e5da41ec_Shr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5ce0358_Fn> _12316_f) {
	return static__1e5da3b69_result(&(_12316_f), jule::Str::lit("Shr", 3));;
}



inline jule::Bool static__1e5da44b6_Add(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5ce0358_Fn> _12816_f) {
	return static__1e5da3b69_result(&(_12816_f), jule::Str::lit("Add", 3));;
}



inline jule::Bool static__1e5da4780_Sub(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5ce0358_Fn> _13316_f) {
	return static__1e5da3b69_result(&(_13316_f), jule::Str::lit("Sub", 3));;
}



inline jule::Bool static__1e5da4a49_Div(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5ce0358_Fn> _13816_f) {
	return static__1e5da3b69_result(&(_13816_f), jule::Str::lit("Div", 3));;
}



inline jule::Bool static__1e5da4d13_Mul(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5ce0358_Fn> _14316_f) {
	return static__1e5da3b69_result(&(_14316_f), jule::Str::lit("Mul", 3));;
}



inline jule::Bool static__1e5da50cc_Mod(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5ce0358_Fn> _14816_f) {
	return static__1e5da3b69_result(&(_14816_f), jule::Str::lit("Mod", 3));;
}



inline jule::Bool static__1e5da5396_BitAnd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5ce0358_Fn> _15319_f) {
	return static__1e5da3b69_result(&(_15319_f), jule::Str::lit("BitAnd", 6));;
}



inline jule::Bool static__1e5da5660_BitOr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5ce0358_Fn> _15818_f) {
	return static__1e5da3b69_result(&(_15818_f), jule::Str::lit("BitOr", 5));;
}



inline jule::Bool static__1e5da5929_BitXor(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5ce0358_Fn> _16319_f) {
	return static__1e5da3b69_result(&(_16319_f), jule::Str::lit("BitXor", 6));;
}



inline jule::Bool static__1e5da5c9d_unary(jule::Ptr<_1e5ce0358_Fn>* _16719_f, jule::Str _16727_ident) {
	if (((((((((((((*(_16719_f)) == nullptr) || ((*((*(_16719_f))))._field_Ident != _16727_ident)) || ((*((*(_16719_f))))._field_Owner == nullptr)) || ((*((*(_16719_f))))._field_Instances.len() == 0LL)) || (*((*(_16719_f))))._field_Statically) || (*((*(_16719_f))))._field_Unsafety) || _1e5ce080e_IsVoid((*(_16719_f)).ptr())) || ((*((*(_16719_f))))._field_Generics.len() != 0LL)) || ((*((*(_16719_f))))._field_Params.len() != 1LL)) || (*((*((*(_16719_f))))._field_Params[0LL]))._field_Mutable) || _1e5cde269_IsRef((*((*(_16719_f))))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1e5ce3416_FnIns> _1827_ins = (*((*(_16719_f))))._field_Instances[0LL];;
	return (_1e5e45524_Struct((*(_1827_ins))._field_Result.ptr()) == (*_1827_ins.alloc)._field_Owner);;
}



inline jule::Bool static__1e5da6067_Neg(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5ce0358_Fn> _18716_f) {
	return static__1e5da5c9d_unary(&(_18716_f), jule::Str::lit("Neg", 3));;
}



inline jule::Bool static__1e5da6331_Pos(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5ce0358_Fn> _19216_f) {
	return static__1e5da5c9d_unary(&(_19216_f), jule::Str::lit("Pos", 3));;
}



inline jule::Bool static__1e5da65ea_BitNot(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5ce0358_Fn> _19719_f) {
	return static__1e5da5c9d_unary(&(_19719_f), jule::Str::lit("BitNot", 6));;
}



inline jule::Bool static__1e5da696e_assign(jule::Ptr<_1e5ce0358_Fn>* _20120_f, jule::Str _20128_ident) {
	if (((((((((((((((*(_20120_f)) == nullptr) || ((*((*(_20120_f))))._field_Ident != _20128_ident)) || ((*((*(_20120_f))))._field_Owner == nullptr)) || ((*((*(_20120_f))))._field_Instances.len() == 0LL)) || (*((*(_20120_f))))._field_Statically) || (*((*(_20120_f))))._field_Unsafety) || (!(_1e5ce080e_IsVoid((*(_20120_f)).ptr())))) || ((*((*(_20120_f))))._field_Generics.len() != 0LL)) || ((*((*(_20120_f))))._field_Params.len() != 2LL)) || (!((*((*((*(_20120_f))))._field_Params[0LL]))._field_Mutable))) || _1e5cde269_IsRef((*((*(_20120_f))))._field_Params[0LL].ptr())) || (*((*((*(_20120_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_20120_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	return true;;
}



inline jule::Bool static__1e5da6c38_AddAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5ce0358_Fn> _22122_f) {
	return static__1e5da696e_assign(&(_22122_f), jule::Str::lit("AddAssign", 9));;
}



inline jule::Bool static__1e5da7002_SubAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5ce0358_Fn> _22622_f) {
	return static__1e5da696e_assign(&(_22622_f), jule::Str::lit("SubAssign", 9));;
}



inline jule::Bool static__1e5da72bb_DivAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5ce0358_Fn> _23122_f) {
	return static__1e5da696e_assign(&(_23122_f), jule::Str::lit("DivAssign", 9));;
}



inline jule::Bool static__1e5da7585_MulAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5ce0358_Fn> _23622_f) {
	return static__1e5da696e_assign(&(_23622_f), jule::Str::lit("MulAssign", 9));;
}



inline jule::Bool static__1e5da784e_ModAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5ce0358_Fn> _24122_f) {
	return static__1e5da696e_assign(&(_24122_f), jule::Str::lit("ModAssign", 9));;
}



inline jule::Bool static__1e5da7b18_ShlAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5ce0358_Fn> _24622_f) {
	return static__1e5da696e_assign(&(_24622_f), jule::Str::lit("ShlAssign", 9));;
}



inline jule::Bool static__1e5da7dd2_ShrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5ce0358_Fn> _25122_f) {
	return static__1e5da696e_assign(&(_25122_f), jule::Str::lit("ShrAssign", 9));;
}



inline jule::Bool static__1e5da819b_BitOrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5ce0358_Fn> _25624_f) {
	return static__1e5da696e_assign(&(_25624_f), jule::Str::lit("BitOrAssign", 11));;
}



inline jule::Bool static__1e5da8465_BitAndAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5ce0358_Fn> _26125_f) {
	return static__1e5da696e_assign(&(_26125_f), jule::Str::lit("BitAndAssign", 12));;
}



inline jule::Bool static__1e5da872e_BitXorAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5ce0358_Fn> _26625_f) {
	return static__1e5da696e_assign(&(_26625_f), jule::Str::lit("BitXorAssign", 12));;
}








inline jule::Bool _1e5de049c_typeCompatibilityChecker_eq(_1e5de049c_typeCompatibilityChecker *_self_, _1e5de049c_typeCompatibilityChecker _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_dest == _self_->_field_dest) &&
		(_self_->_field_src == _self_->_field_src) &&
		(_self_->_field_errorToken == _self_->_field_errorToken);
}

inline void _1e5de09ca_pushErr(_1e5de049c_typeCompatibilityChecker* _self_, jule::Str _11923_fmt, jule::Slice<jule::Any> _11936_args) {
	_1e5d7e66c_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _11923_fmt, _11936_args);
}



inline jule::Bool _1e5de0c61_checkTrait(_1e5de049c_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1e5e4292d_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1e5d03db6_Trait> _1277_trt = _1e5e457aa_Trait((*(_self_))._field_dest.ptr());;
	jule::Bool _1287_ref = false;;
	{
		
		if ((_1e5e44237_Sptr((*(_self_))._field_src) != nullptr)) {
			_case_begin_1cb0b2447:;
			{
				_1287_ref=true;
				(*(_self_))._field_src=(*(_1e5e44237_Sptr((*(_self_))._field_src)))._field_Elem;
				if ((_1e5e45524_Struct((*(_self_))._field_src) == nullptr)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				goto _case_begin_1cb0b24e1;
			}
		}
		else if ((_1e5e45524_Struct((*(_self_))._field_src) != nullptr)) {
			_case_begin_1cb0b24e1:;
			{
				jule::Ptr<_1e5cc8c7b_StructIns> _1384_s = _1e5e45524_Struct((*(_self_))._field_src);;
				if ((!(_1e5cc7593_IsImplements((*(_1384_s))._field_Decl.ptr(), _1277_trt)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if (((!(_1287_ref)) && _1e5dde06c_traitHasReferenceReceiver(&(_1277_trt)))) {
					_1e5de09ca_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("trait has reference receiver parameter used method, cannot assign non-reference instance", 88)), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1e5e457aa_Trait((*(_self_))._field_src) != nullptr)) {
			_case_begin_1cb0b2568:;
			{
				jule::Ptr<_1e5d03db6_Trait> _1488_base = _1e5e457aa_Trait((*(_self_))._field_src);;
				if ((_1277_trt == _1488_base)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_julec_label_1cb0b7628:;
				{
					auto expr = &((*(_1488_base))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cb0b78ae:;
					if (it != expr_end) {
						jule::Ptr<_1e5cc5e21_Struct> _15311_s1 = *it;
						{
							{
								auto expr = &((*(_1277_trt))._field_Implemented);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1cb0b82b6:;
								if (it != expr_end) {
									jule::Ptr<_1e5cc5e21_Struct> _15412_s2 = *it;
									{
										if ((_15311_s1 == _15412_s2)) {
											goto _iter_next_1cb0b78ae;
										};
									}
									_iter_next_1cb0b82b6:;
									++it;
									goto _iter_begin_1cb0b82b6;
								}
								_iter_end_1cb0b82b6:;
							};
							__jule_func_result = false;
							return __jule_func_result;;
						}
						_iter_next_1cb0b78ae:;
						++it;
						goto _iter_begin_1cb0b78ae;
					}
					_iter_end_1cb0b78ae:;
				};
				{
					auto expr = &((*_1277_trt.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cb0b86a1:;
					if (it != expr_end) {
						jule::Ptr<_1e5ce0358_Fn> _16116_m1 = *it;
						{
							jule::Ptr<_1e5ce0358_Fn> _1629_m2 = _1e5d04a98_FindMethod(_1488_base, (*(_16116_m1))._field_Ident);;
							if ((_1629_m2 == nullptr)) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
							jule::Ptr<_1e5ce3416_FnIns> _1665_m1k = _1e5d89710_getTraitCheckFnKind((*(_self_))._field_s, &(_16116_m1));;
							jule::Ptr<_1e5ce3416_FnIns> _1675_m2k = _1e5d89710_getTraitCheckFnKind((*(_self_))._field_s, &(_1629_m2));;
							if ((!(_1e5ce43b2_equalTrait(_1665_m1k, &(_1675_m2k))))) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
						}
						_iter_next_1cb0b86a1:;
						++it;
						goto _iter_begin_1cb0b86a1;
					}
					_iter_end_1cb0b86a1:;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1cb0b23ae:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1cb0b2337:;
	};
}



inline jule::Bool _1e5de0ee7_checkPtr(_1e5de049c_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1e5e4292d_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1e5e51c06_Ptr> _1827_dest = _1e5e444bd_Ptr((*(_self_))._field_dest.ptr());;
	if (_1e5e52773_IsUnsafe(_1827_dest.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	__jule_func_result = _1e5e42037_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1e5de127d_checkPrim(_1e5de049c_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((!((*((*(_self_))._field_dest))._field_Variadic))) {
		jule::Ptr<_1e5e49913_Prim> _1914_prim = _1e5e43ea1_Prim((*(_self_))._field_dest);;
		if (((_1914_prim != nullptr) && _1e5e4d164_IsAny(_1914_prim))) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	__jule_func_result = _1e5e42037_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1e5de1679_typeEnum(_1e5de049c_typeCompatibilityChecker* _self_, jule::Ptr<_1e5d07ccc_TypeEnum>* _19925_e, jule::Ptr<_1e5e417ea_TypeKind>* _19944_t2) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_19925_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb0beb6e:;
		if (it != expr_end) {
			jule::Ptr<_1e5d07705_TypeEnumItem> _20015_item = *it;
			{
				if (_1e5e42037_Equal((*((*(_20015_item))._field_Kind))._field_Kind, (*(_19944_t2)))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				jule::Ptr<_1e5d07ccc_TypeEnum> _2048_ke = _1e5e449da_TypeEnum((*((*(_20015_item))._field_Kind))._field_Kind);;
				if ((_2048_ke == nullptr)) {
					goto _iter_next_1cb0beb6e;
				};
				if (_1e5de1679_typeEnum(_self_, &(_2048_ke), _19944_t2)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1cb0beb6e:;
			++it;
			goto _iter_begin_1cb0beb6e;
		}
		_iter_end_1cb0beb6e:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1e5de1910_checkTypeEnum(_1e5de049c_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1e5e42037_Equal((*(_self_))._field_dest, (*(_self_))._field_src)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1e5d07ccc_TypeEnum> _2197_e = _1e5e449da_TypeEnum((*(_self_))._field_dest);;
	__jule_func_result = _1e5de1679_typeEnum(_self_, &(_2197_e), &((*(_self_))._field_src));
	return __jule_func_result;;
}



inline jule::Bool _1e5de1b96_check(_1e5de049c_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((_1e5e444bd_Ptr((*(_self_))._field_dest.ptr()) != nullptr)) {
		__jule_func_result = _1e5de0ee7_checkPtr(_self_);
		return __jule_func_result;;
	};
	if (_1e5e436ed_NilCompatible((*(_self_))._field_dest)) {
		if (_1e5e4292d_IsNil((*(_self_))._field_src.ptr())) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	{
		
		if ((_1e5e43ea1_Prim((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1cb0c547c:;
			{
				__jule_func_result = _1e5de127d_checkPrim(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1e5e449da_TypeEnum((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1cb0c5515:;
			{
				__jule_func_result = _1e5de1910_checkTypeEnum(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1e5e457aa_Trait((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1cb0c4e0a:;
			{
				__jule_func_result = _1e5de0c61_checkTrait(_self_);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1cb0c4a42:;
			{
				__jule_func_result = _1e5e42037_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
				return __jule_func_result;;
			}
		}
		_match_end_1cb0c40b3:;
	};
}








inline jule::Bool _1e5de2328_assignTypeChecker_eq(_1e5de2328_assignTypeChecker *_self_, _1e5de2328_assignTypeChecker _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_dest == _self_->_field_dest) &&
		(_self_->_field_d == _self_->_field_d) &&
		(_self_->_field_errorToken == _self_->_field_errorToken) &&
		(_self_->_field_refers == _self_->_field_refers);
}

inline void _1e5de27e0_pushErr(_1e5de2328_assignTypeChecker* _self_, jule::Str _25623_fmt, jule::Slice<jule::Any> _25636_args) {
	_1e5d7e66c_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _25623_fmt, _25636_args);
}



inline jule::Bool _1e5de2a76_checkValidity(_1e5de2328_assignTypeChecker* _self_) {
	jule::Bool _2617_valid = true;;
	{
		
		if ((_1e5e4528d_Fn((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cb0c8282:;
			{
				jule::Ptr<_1e5ce3416_FnIns> _2644_f = _1e5e4528d_Fn((*((*(_self_))._field_d))._field_Kind);;
				{
					
					if (_1e5ce48ce_IsBuiltin(_2644_f.ptr())) {
						_case_begin_1cb0c9b02:;
						{
							_1e5de27e0_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("builtin define cannot use as anonymous function", 47)), jule::Slice<jule::Any>());
							_2617_valid=false;
						}
					}
					else if ((*((*(_2644_f))._field_Decl))._field_Binded) {
						_case_begin_1cb0c9b9b:;
						{
							_1e5de27e0_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("binded functions cannot use as anonymous function", 49)), jule::Slice<jule::Any>());
							_2617_valid=false;
						}
					}
					else if (((!((*((*(_2644_f))._field_Decl))._field_Statically)) && _1e5ce0a95_IsMethod((*(_2644_f))._field_Decl))) {
						_case_begin_1cb0c9c12:;
						{
							_1e5de27e0_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("non-static methods cannot use as anonymous function", 51)), jule::Slice<jule::Any>());
							_2617_valid=false;
						}
					}
					else if ((((*((*(_2644_f))._field_Decl))._field_Generics.len() > 0LL) && ((*_2644_f.alloc)._field_Generics.len() == 0LL))) {
						_case_begin_1cb0c9c78:;
						{
							_1e5de27e0_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("genericed functions cannot use as anonymous function", 52)), jule::Slice<jule::Any>());
							_1e5d7e9d0_pushSuggestion((*(_self_))._field_s.ptr(), static_cast<jule::Str>(jule::Str::lit("instantiate generic function to use as anonymous function", 57)), jule::Slice<jule::Any>());
							_2617_valid=false;
						}
					}
					_match_end_1cb0c9a14:;
				};
			}
		}
		else if ((_1e5e45cc7_Tup((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cb0c832b:;
			{
				_1e5de27e0_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("tuples cannot assign to single define in same time", 50)), jule::Slice<jule::Any>());
				_2617_valid=false;
			}
		}
		_match_end_1cb0c81e9:;
	};
	return _2617_valid;;
}



inline jule::Bool _1e5de2d0c_checkConst(_1e5de2328_assignTypeChecker* _self_) {
	if (((!((*((*(_self_))._field_d))._field_untyped)) || (_1e5e43ea1_Prim((*(_self_))._field_dest.ptr()) == nullptr))) {
		return false;;
	};
	jule::Str _2933_kind = (*(_1e5e43ea1_Prim((*(_self_))._field_dest)))._field_Kind;;
	{
		
		if (_1e21a3b71_IsFloat(_2933_kind)) {
			_case_begin_1cb0d14bb:;
			{
				if ((!(_1e5dde402_floatAssignable(&(_2933_kind), &((*(_self_))._field_d))))) {
					return false;;
				};
				(*((*(*(_self_))._field_d.alloc)._field_Constant))._field_Kind=_2933_kind;
			}
		}
		else if (_1e21a3830_IsInt(_2933_kind)) {
			_case_begin_1cb0d1554:;
			{
				if ((!(_1e5ddeeb3_intAssignable(_2933_kind, &((*(_self_))._field_d))))) {
					return false;;
				};
				(*((*(*(_self_))._field_d.alloc)._field_Constant))._field_Kind=_2933_kind;
			}
		}
		else {
			_case_begin_1cb0d1455:;
			{
				return false;;
			}
		}
		_match_end_1cb0d1323:;
	};
	return true;;
}



inline jule::Bool _1e5de3093_checkCompatibility(_1e5de2328_assignTypeChecker* _self_) {
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1cb0d37dc:;
			{
				return false;;
			}
		}
		else if ((!(_1e5de2a76_checkValidity(_self_)))) {
			_case_begin_1cb0d3864:;
			{
				return false;;
			}
		}
		else if (_1e5de2d0c_checkConst(_self_)) {
			_case_begin_1cb0d38ca:;
			{
				return true;;
			}
		}
		else if ((_1e5e44754_Enum((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cb0d3941:;
			{
				jule::Ptr<_1e5e417ea_TypeKind> _3228_dkind = (*(_self_))._field_dest;;
				if ((_1e5e44754_Enum((*(_self_))._field_dest.ptr()) != nullptr)) {
					_3228_dkind=(*((*(_1e5e44754_Enum((*(_self_))._field_dest)))._field_Kind))._field_Kind;
				};
				jule::Ptr<_1e5e49913_Prim> _3264_prim = _1e5e43ea1_Prim((*(_self_))._field_dest);;
				if (((_3264_prim == nullptr) || _1e5e4d164_IsAny(_3264_prim.ptr()))) {
					goto _match_end_1cb0d2ad8;
				};
				jule::Ptr<_1e5e417ea_TypeKind> _3318_dest = (*(*(_1e5e44754_Enum((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Kind.alloc)._field_Kind;;
				return _1e5d88148_checkTypeCompatibility((*(_self_))._field_s, &(_3318_dest), &(_3228_dkind), &((*(_self_))._field_errorToken));;
			}
		}
		_match_end_1cb0d2ad8:;
	};
	return _1e5d88a1c_checkTypeCompatibility1((*(_self_))._field_s, &((*(_self_))._field_dest), &((*(_self_))._field_d), &((*(_self_))._field_errorToken));;
}



inline jule::Bool _1e5de3329_check(_1e5de2328_assignTypeChecker* _self_) {
	jule::Bool _3383_ok = _1e5de3093_checkCompatibility(_self_);;
	if ((_3383_ok && (!((*((*((*(_self_))._field_d))._field_Kind))._field_Variadic)))) {
		_1e5e5e8b2_applyImplicitCast(&((*(_self_))._field_s), &((*(_self_))._field_dest), &((*(_self_))._field_d), &((*(_self_))._field_errorToken), (*(_self_))._field_refers);
	};
	return _3383_ok;;
}







inline jule::Bool _1cb103510_annotateConstraintElem(_1e5de3bed_dynamicTypeAnnotation* _self_, jule::Ptr<_1e5e417ea_TypeKind>* _35846_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1cb104c2b:;
			{
				jule::Ptr<_1e5e417ea_TypeKind> _36112_elem = nullptr;;
				{
					
{
						_case_begin_1cb10837d:;
						{
							_36112_elem=(*(_1e5e44c71_Arr((*(_35846_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1cb108317:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1e5ca7353_ArrTypeDecl>()))._field_Elem;
				return _1e5de543b_annotateConstraint(_self_, &(_36112_elem));;
			}
		}
		_match_end_1cb104ba4:;
	};
	return false;;
}

inline jule::Bool _1cb1037a7_annotateConstraintElem(_1e5de3bed_dynamicTypeAnnotation* _self_, jule::Ptr<_1e5e417ea_TypeKind>* _35846_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1cb10b1b6:;
			{
				jule::Ptr<_1e5e417ea_TypeKind> _36112_elem = nullptr;;
				{
					
{
						_case_begin_1cb10e582:;
						{
							_36112_elem=(*(_1e5e45007_Slc((*(_35846_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1cb10e7a2:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1e5ca64b7_SlcTypeDecl>()))._field_Elem;
				return _1e5de543b_annotateConstraint(_self_, &(_36112_elem));;
			}
		}
		_match_end_1cb10b13e:;
	};
	return false;;
}

inline jule::Bool _1cb10a6b0_annotateConstraintElem(_1e5de3bed_dynamicTypeAnnotation* _self_, jule::Ptr<_1e5e417ea_TypeKind>* _35846_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1cb11271c:;
			{
				jule::Ptr<_1e5e417ea_TypeKind> _36112_elem = nullptr;;
				{
					
{
						_case_begin_1cb115de6:;
						{
							_36112_elem=(*(_1e5e444bd_Ptr((*(_35846_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1cb115d08:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1e5ca6ab1_PtrTypeDecl>()))._field_Elem;
				return _1e5de543b_annotateConstraint(_self_, &(_36112_elem));;
			}
		}
		_match_end_1cb112695:;
	};
	return false;;
}

inline jule::Bool _1cb111331_annotateConstraintElem(_1e5de3bed_dynamicTypeAnnotation* _self_, jule::Ptr<_1e5e417ea_TypeKind>* _35846_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1cb118822:;
			{
				jule::Ptr<_1e5e417ea_TypeKind> _36112_elem = nullptr;;
				{
					
{
						_case_begin_1cb11ae0c:;
						{
							_36112_elem=(*(_1e5e44237_Sptr((*(_35846_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1cb11be0d:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1e5ca6132_SptrTypeDecl>()))._field_Elem;
				return _1e5de543b_annotateConstraint(_self_, &(_36112_elem));;
			}
		}
		_match_end_1cb11879a:;
	};
	return false;;
}



inline jule::Bool _1e5de4627_annotateConstraintMap(_1e5de3bed_dynamicTypeAnnotation* _self_, jule::Ptr<_1e5e417ea_TypeKind>* _37842_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1cb0dae32:;
			{
				jule::Ptr<_1e5e505a6_Map> _3818_m = _1e5e45a41_Map((*(_37842_k)).ptr());;
				jule::Ptr<_1e5ca7aa1_MapTypeDecl> _3828_m2 = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1e5ca7aa1_MapTypeDecl>();;
				(*(_self_))._field_c=(*(_3828_m2))._field_Key;
				if ((!(_1e5de543b_annotateConstraint(_self_, &((*(_3818_m))._field_Key))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				(*(_self_))._field_c=(*_3828_m2.alloc)._field_Val;
				__jule_func_result = _1e5de543b_annotateConstraint(_self_, &((*_3818_m.alloc)._field_Val));
				return __jule_func_result;;
			}
		}
		_match_end_1cb0dadaa:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1e5de4968_annotateConstraintTup(_1e5de3bed_dynamicTypeAnnotation* _self_, jule::Ptr<_1e5e417ea_TypeKind>* _39342_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1cb0e17b7:;
			{
				jule::Ptr<_1e5ca67b4_TupleTypeDecl> _3968_tup = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1e5ca67b4_TupleTypeDecl>();;
				jule::Ptr<_1e5e4ea06_Tuple> _3978_tup2 = _1e5e45cc7_Tup((*(_39342_k)).ptr());;
				{
					auto expr = &((*(_3978_tup2))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cb0e4754:;
					if (it != expr_end) {
						jule::Ptr<_1e5e417ea_TypeKind> _39816_t2 = *it;
						{
							{
								auto expr = &((*(_3968_tup))._field_Types);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1cb0e649d:;
								if (it != expr_end) {
									jule::Ptr<_1e5ca5087_TypeDecl> _39917_t = *it;
									{
										(*(_self_))._field_c=_39917_t;
										if (_1e5de543b_annotateConstraint(_self_, &(_39816_t2))) {
											__jule_func_result = true;
											return __jule_func_result;;
										};
									}
									_iter_next_1cb0e649d:;
									++it;
									goto _iter_begin_1cb0e649d;
								}
								_iter_end_1cb0e649d:;
							};
						}
						_iter_next_1cb0e4754:;
						++it;
						goto _iter_begin_1cb0e4754;
					}
					_iter_end_1cb0e4754:;
				};
			}
		}
		_match_end_1cb0e1740:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1e5de4ca9_annotateConstraintFn(_1e5de3bed_dynamicTypeAnnotation* _self_, jule::Ptr<_1e5e417ea_TypeKind>* _41041_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1cb0e605d:;
			{
				jule::Ptr<_1e5cb6c47_FnDecl> _4138_pf = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1e5cb6c47_FnDecl>();;
				jule::Ptr<_1e5ce3416_FnIns> _4148_f = _1e5e4528d_Fn((*(_41041_k)).ptr());;
				{
					auto expr = &((*(_4148_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cb0e89ab:;
					if (it != expr_end) {
						jule::I64 _4159_i = it - expr->begin();
						jule::Ptr<_1e5ce22b1_ParamIns> _41516_fp = *it;
						{
							(*(_self_))._field_c=(*((*(_4138_pf))._field_Params[_4159_i]))._field_Kind;
							if (_1e5de543b_annotateConstraint(_self_, &((*(_41516_fp))._field_Kind))) {
								__jule_func_result = true;
								return __jule_func_result;;
							};
						}
						_iter_next_1cb0e89ab:;
						++it;
						_4159_i++;
						goto _iter_begin_1cb0e89ab;
					}
					_iter_end_1cb0e89ab:;
				};
				if (((*_4138_pf.alloc)._field_Result != nullptr)) {
					(*(_self_))._field_c=(*(*(_4138_pf))._field_Result.alloc)._field_Kind;
					if (_1e5de543b_annotateConstraint(_self_, &((*_4148_f.alloc)._field_Result))) {
						__jule_func_result = true;
						return __jule_func_result;;
					};
				};
			}
		}
		_match_end_1cb0e5ee7:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1e5de50ea_annotateConstraintIdent(_1e5de3bed_dynamicTypeAnnotation* _self_, jule::Ptr<_1e5e417ea_TypeKind>* _43144_k) {
	jule::Ptr<_1e5ca5692_IdentTypeDecl> _4327_ident = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_1e5ca5692_IdentTypeDecl>(&__jule_any_type77);;
	jule::Ptr<_1e5cc8c7b_StructIns> _4337_s = _1e5e45524_Struct((*(_43144_k)).ptr());;
	{
		auto expr = &((*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb0ec471:;
		if (it != expr_end) {
			jule::I64 _4347_i = it - expr->begin();
			jule::Ptr<_1e5cb2292_GenericDecl> _43410_g = *it;
			{
				if (((*(_43410_g))._field_Ident == (*(_4327_ident))._field_Ident)) {
					jule::Ptr<_1e5e3ee14_InsGeneric> _4369_fg = (*((*(_self_))._field_f))._field_Generics[_4347_i];;
					if ((_4369_fg != nullptr)) {
						return false;;
					};
					_1e5de579e_pushGeneric(_self_, _43144_k, _4347_i);
					return true;;
				};
				if ((_4337_s == nullptr)) {
					goto _iter_next_1cb0ec471;
				};
				jule::Ptr<_1e5ca5087_TypeDecl> _4468_c = (*(_self_))._field_c;;
				{
					auto expr = &((*_4327_ident.alloc)._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cb100012:;
					if (it != expr_end) {
						jule::Ptr<_1e5ca5087_TypeDecl> _44716_ig = *it;
						{
							(*(_self_))._field_c=_44716_ig;
							{
								auto expr = &((*(_4337_s))._field_Generics);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1cb100b28:;
								if (it != expr_end) {
									jule::Ptr<_1e5e3ee14_InsGeneric> _44917_sg = *it;
									{
										if (_1e5de543b_annotateConstraint(_self_, &((*(_44917_sg))._field_Kind))) {
											return true;;
										};
									}
									_iter_next_1cb100b28:;
									++it;
									goto _iter_begin_1cb100b28;
								}
								_iter_end_1cb100b28:;
							};
						}
						_iter_next_1cb100012:;
						++it;
						goto _iter_begin_1cb100012;
					}
					_iter_end_1cb100012:;
				};
				(*(_self_))._field_c=_4468_c;
			}
			_iter_next_1cb0ec471:;
			++it;
			_4347_i++;
			goto _iter_begin_1cb0ec471;
		}
		_iter_end_1cb0ec471:;
	};
	return false;;
}



inline jule::Bool _1e5de543b_annotateConstraint(_1e5de3bed_dynamicTypeAnnotation* _self_, jule::Ptr<_1e5e417ea_TypeKind>* _46039_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1cb101079:;
			{
				return _1e5de50ea_annotateConstraintIdent(_self_, _46039_k);;
			}
		}
		_match_end_1cb101013:;
	};
	{
		
		if ((_1e5e44c71_Arr((*(_46039_k)).ptr()) != nullptr)) {
			_case_begin_1cb101e48:;
			{
				return _1cb103510_annotateConstraintElem(_self_, _46039_k);;
			}
		}
		else if ((_1e5e45007_Slc((*(_46039_k)).ptr()) != nullptr)) {
			_case_begin_1cb101eae:;
			{
				return _1cb1037a7_annotateConstraintElem(_self_, _46039_k);;
			}
		}
		else if ((_1e5e444bd_Ptr((*(_46039_k)).ptr()) != nullptr)) {
			_case_begin_1cb102025:;
			{
				return _1cb10a6b0_annotateConstraintElem(_self_, _46039_k);;
			}
		}
		else if ((_1e5e44237_Sptr((*(_46039_k)).ptr()) != nullptr)) {
			_case_begin_1cb10208b:;
			{
				return _1cb111331_annotateConstraintElem(_self_, _46039_k);;
			}
		}
		else if ((_1e5e45a41_Map((*(_46039_k)).ptr()) != nullptr)) {
			_case_begin_1cb102113:;
			{
				return _1e5de4627_annotateConstraintMap(_self_, _46039_k);;
			}
		}
		else if ((_1e5e4528d_Fn((*(_46039_k)).ptr()) != nullptr)) {
			_case_begin_1cb102564:;
			{
				return _1e5de4ca9_annotateConstraintFn(_self_, _46039_k);;
			}
		}
		else if ((_1e5e45cc7_Tup((*(_46039_k)).ptr()) != nullptr)) {
			_case_begin_1cb1025db:;
			{
				return _1e5de4968_annotateConstraintTup(_self_, _46039_k);;
			}
		}
		else {
			_case_begin_1cb101d49:;
			{
				return false;;
			}
		}
		_match_end_1cb101cd3:;
	};
}



inline void _1e5de579e_pushGeneric(_1e5de3bed_dynamicTypeAnnotation* _self_, jule::Ptr<_1e5e417ea_TypeKind>* _48532_k, jule::I64 _48546_i) {
	(*((*(_self_))._field_f))._field_Generics[_48546_i]=jule::new_ptr<_1e5e3ee14_InsGeneric>(_1e5e3ee14_InsGeneric{._field_Kind=(*(_48532_k)), ._field_Constraint=jule::Slice<jule::Ptr<_1e5e417ea_TypeKind>>(nullptr)});
	jule::Ptr<_1e5cb2292_GenericDecl> _4877_gd = (*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics[_48546_i];;
	{
		auto expr = &((*(_self_))._field_ignored);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb11e185:;
		if (it != expr_end) {
			jule::Ptr<_1e5e417ea_TypeKind> _48815_ignored = *it;
			{
				if (((*(_4877_gd))._field_Ident == _1e5e41be6_Str(_48815_ignored.ptr()))) {
					(*_48815_ignored.alloc)._field_Kind=(*((*(_48532_k))))._field_Kind;
				};
			}
			_iter_next_1cb11e185:;
			++it;
			goto _iter_begin_1cb11e185;
		}
		_iter_end_1cb11e185:;
	};
	if ((((*_4877_gd.alloc)._field_Constraint == nullptr) || ((*((*_4877_gd.alloc)._field_Constraint))._field_Mask.len() != 1LL))) {
		return;;
	};
	(*(_self_))._field_c=(*((*_4877_gd.alloc)._field_Constraint))._field_Mask[0LL];
	_1e5de543b_annotateConstraint(_self_, _48532_k);
}



inline jule::Bool _1e5de5ae0_annotatePrim(_1e5de3bed_dynamicTypeAnnotation* _self_, jule::Ptr<_1e5e417ea_TypeKind>* _50040_k) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1e5de7b14_annotateAny(_self_, _50040_k);
	return __jule_func_result;;
}



inline jule::Bool _1e5de5e31_annotateArr(_1e5de3bed_dynamicTypeAnnotation* _self_, jule::Ptr<_1e5e417ea_TypeKind>* _50439_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1e5e51233_Arr> _5057_parr = _1e5e44c71_Arr((*((*(_self_))._field_k)).ptr());;
	if ((_5057_parr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1e5e51233_Arr> _5097_arr = _1e5e44c71_Arr((*(_50439_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5057_parr))._field_Elem));
	__jule_func_result = _1e5de7e55_annotateKind(_self_, &((*(_5097_arr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1e5de6272_annotateSlc(_1e5de3bed_dynamicTypeAnnotation* _self_, jule::Ptr<_1e5e417ea_TypeKind>* _51439_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1e5e4de12_Slc> _5157_pslc = _1e5e45007_Slc((*((*(_self_))._field_k)).ptr());;
	if ((_5157_pslc == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1e5e4de12_Slc> _5197_slc = _1e5e45007_Slc((*(_51439_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5157_pslc))._field_Elem));
	__jule_func_result = _1e5de7e55_annotateKind(_self_, &((*(_5197_slc))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1e5de666d_checkMapKey(_1e5de3bed_dynamicTypeAnnotation* _self_, jule::Ptr<_1e5e417ea_TypeKind>* _52438_k, jule::Ptr<_1e5e417ea_TypeKind>* _52458_ck) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1e5e417ea_TypeKind>* _5257_old = (*(_self_))._field_k;;
	(*(_self_))._field_k=_52438_k;
	__jule_func_result=_1e5de7e55_annotateKind(_self_, _52458_ck);
	(*(_self_))._field_k=_5257_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1e5de69ae_annotateMap(_1e5de3bed_dynamicTypeAnnotation* _self_, jule::Ptr<_1e5e417ea_TypeKind>* _53239_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1e5e505a6_Map> _5337_pmap = _1e5e45a41_Map((*((*(_self_))._field_k)).ptr());;
	if ((_5337_pmap == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1e5e505a6_Map> _5377_m = _1e5e45a41_Map((*(_53239_k)).ptr());;
	__jule_func_result = (_1e5de666d_checkMapKey(_self_, (&((*(_5337_pmap))._field_Key)), &((*(_5377_m))._field_Key)) && _1e5de666d_checkMapKey(_self_, (&((*(_5337_pmap))._field_Val)), &((*_5377_m.alloc)._field_Val)));
	return __jule_func_result;;
}



inline jule::Bool _1e5de6d00_annotateFn(_1e5de3bed_dynamicTypeAnnotation* _self_, jule::Ptr<_1e5e417ea_TypeKind>* _54238_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1e5ce3416_FnIns> _5437_pf = _1e5e4528d_Fn((*((*(_self_))._field_k)).ptr());;
	if ((_5437_pf == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1e5ce3416_FnIns> _5477_f = _1e5e4528d_Fn((*(_54238_k)).ptr());;
	{
		
		if (((*(_5437_pf))._field_Params.len() != (*(_5477_f))._field_Params.len())) {
			_case_begin_1cb12ca45:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_1e5ce080e_IsVoid((*(_5437_pf))._field_Decl.ptr()) != _1e5ce080e_IsVoid((*(_5477_f))._field_Decl))) {
			_case_begin_1cb12cacd:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1cb12c99b:;
	};
	__jule_func_result=true;
	jule::Ptr<_1e5e417ea_TypeKind>* _5567_old = (*(_self_))._field_k;;
	{
		auto expr = &((*(_5477_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb12e96a:;
		if (it != expr_end) {
			jule::I64 _5578_i = it - expr->begin();
			jule::Ptr<_1e5ce22b1_ParamIns> _55715_fp = *it;
			{
				(*(_self_))._field_k=(&((*((*(_5437_pf))._field_Params[_5578_i]))._field_Kind));
				__jule_func_result=(_1e5de7e55_annotateKind(_self_, &((*(_55715_fp))._field_Kind)) && __jule_func_result);
			}
			_iter_next_1cb12e96a:;
			++it;
			_5578_i++;
			goto _iter_begin_1cb12e96a;
		}
		_iter_end_1cb12e96a:;
	};
	if ((!(_1e5ce080e_IsVoid((*(_5437_pf))._field_Decl.ptr())))) {
		(*(_self_))._field_k=(&((*(_5437_pf))._field_Result));
		__jule_func_result=(_1e5de7e55_annotateKind(_self_, &((*_5477_f.alloc)._field_Result)) && __jule_func_result);
	};
	(*(_self_))._field_k=_5567_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1e5de7141_annotatePtr(_1e5de3bed_dynamicTypeAnnotation* _self_, jule::Ptr<_1e5e417ea_TypeKind>* _57139_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1e5e51c06_Ptr> _5727_pptr = _1e5e444bd_Ptr((*((*(_self_))._field_k)).ptr());;
	if ((_5727_pptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1e5e51c06_Ptr> _5767_ptr = _1e5e444bd_Ptr((*(_57139_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5727_pptr))._field_Elem));
	__jule_func_result = _1e5de7e55_annotateKind(_self_, &((*(_5767_ptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1e5de7482_annotateSptr(_1e5de3bed_dynamicTypeAnnotation* _self_, jule::Ptr<_1e5e417ea_TypeKind>* _58140_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1e5e4d43e_Sptr> _5827_ssptr = _1e5e44237_Sptr((*((*(_self_))._field_k)).ptr());;
	if ((_5827_ssptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1e5e4d43e_Sptr> _5867_sptr = _1e5e44237_Sptr((*(_58140_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5827_ssptr))._field_Elem));
	__jule_func_result = _1e5de7e55_annotateKind(_self_, &((*(_5867_sptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1e5de77c3_annotateStruct(_1e5de3bed_dynamicTypeAnnotation* _self_, jule::Ptr<_1e5e417ea_TypeKind>* _59142_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1e5cc8c7b_StructIns> _5927_s = _1e5e45524_Struct((*((*(_self_))._field_k)).ptr());;
	if ((_5927_s == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1e5cc8c7b_StructIns> _5967_s2 = _1e5e45524_Struct((*(_59142_k)).ptr());;
	if (((*(_5927_s))._field_Generics.len() != (*(_5967_s2))._field_Generics.len())) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_5927_s))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb138941:;
		if (it != expr_end) {
			jule::I64 _6008_i = it - expr->begin();
			jule::Ptr<_1e5e3ee14_InsGeneric> _60015_g = *it;
			{
				jule::Ptr<_1e5e3ee14_InsGeneric> _6018_g2 = (*(_5967_s2))._field_Generics[_6008_i];;
				if (_1e5e42037_Equal((*(_60015_g))._field_Kind, (*(_6018_g2))._field_Kind)) {
					goto _iter_next_1cb138941;
				};
				(*(_self_))._field_k=(&((*_60015_g.alloc)._field_Kind));
				if ((!(_1e5de7e55_annotateKind(_self_, &((*_6018_g2.alloc)._field_Kind))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1cb138941:;
			++it;
			_6008_i++;
			goto _iter_begin_1cb138941;
		}
		_iter_end_1cb138941:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1e5de7b14_annotateAny(_1e5de3bed_dynamicTypeAnnotation* _self_, jule::Ptr<_1e5e417ea_TypeKind>* _61339_k) {
	jule::Bool __jule_func_result = false;
	jule::Str _6143_kind = _1e5e41be6_Str((*((*(_self_))._field_k)).ptr());;
	{
		auto expr = &((*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb13c00a:;
		if (it != expr_end) {
			jule::I64 _6157_i = it - expr->begin();
			jule::Ptr<_1e5cb2292_GenericDecl> _61510_g = *it;
			{
				if ((_6143_kind != (*(_61510_g))._field_Ident)) {
					goto _iter_next_1cb13c00a;
				};
				jule::Ptr<_1e5e3ee14_InsGeneric> _6194_t = (*((*(_self_))._field_f))._field_Generics[_6157_i];;
				{
					
					if ((_6194_t == nullptr) || ((*(_6194_t))._field_Kind == nullptr)) {
						_case_begin_1cb13d858:;
						{
							_1e5de579e_pushGeneric(_self_, _61339_k, _6157_i);
						}
					}
					else if ((!(_1e5e42037_Equal((*(_6194_t))._field_Kind, (*(_61339_k)))))) {
						_case_begin_1cb13d902:;
						{
							__jule_func_result = false;
							return __jule_func_result;;
						}
					}
					_match_end_1cb13d715:;
				};
				(*((*((*(_self_))._field_k))))._field_Kind=(*((*(_61339_k))))._field_Kind;
				__jule_func_result = true;
				return __jule_func_result;;
			}
			_iter_next_1cb13c00a:;
			++it;
			_6157_i++;
			goto _iter_begin_1cb13c00a;
		}
		_iter_end_1cb13c00a:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1e5de7e55_annotateKind(_1e5de3bed_dynamicTypeAnnotation* _self_, jule::Ptr<_1e5e417ea_TypeKind>* _63440_k) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_k == nullptr) || ((*((*(_self_))._field_k)) == nullptr))) {
		return __jule_func_result;;
	};
	{
		
		if (_1e5de7b14_annotateAny(_self_, _63440_k)) {
			_case_begin_1cb140e98:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1e5e43ea1_Prim((*(_63440_k)).ptr()) != nullptr)) {
			_case_begin_1cb14100e:;
			{
				__jule_func_result = _1e5de5ae0_annotatePrim(_self_, _63440_k);
				return __jule_func_result;;
			}
		}
		else if ((_1e5e44c71_Arr((*(_63440_k)).ptr()) != nullptr)) {
			_case_begin_1cb141075:;
			{
				__jule_func_result = _1e5de5e31_annotateArr(_self_, _63440_k);
				return __jule_func_result;;
			}
		}
		else if ((_1e5e45007_Slc((*(_63440_k)).ptr()) != nullptr)) {
			_case_begin_1cb1410ec:;
			{
				__jule_func_result = _1e5de6272_annotateSlc(_self_, _63440_k);
				return __jule_func_result;;
			}
		}
		else if ((_1e5e45a41_Map((*(_63440_k)).ptr()) != nullptr)) {
			_case_begin_1cb1412a6:;
			{
				__jule_func_result = _1e5de69ae_annotateMap(_self_, _63440_k);
				return __jule_func_result;;
			}
		}
		else if ((_1e5e4528d_Fn((*(_63440_k)).ptr()) != nullptr)) {
			_case_begin_1cb14131c:;
			{
				__jule_func_result = _1e5de6d00_annotateFn(_self_, _63440_k);
				return __jule_func_result;;
			}
		}
		else if ((_1e5e444bd_Ptr((*(_63440_k)).ptr()) != nullptr)) {
			_case_begin_1cb141383:;
			{
				__jule_func_result = _1e5de7141_annotatePtr(_self_, _63440_k);
				return __jule_func_result;;
			}
		}
		else if ((_1e5e44237_Sptr((*(_63440_k)).ptr()) != nullptr)) {
			_case_begin_1cb1413e9:;
			{
				__jule_func_result = _1e5de7482_annotateSptr(_self_, _63440_k);
				return __jule_func_result;;
			}
		}
		else if ((_1e5e45524_Struct((*(_63440_k)).ptr()) != nullptr)) {
			_case_begin_1cb141471:;
			{
				__jule_func_result = _1e5de77c3_annotateStruct(_self_, _63440_k);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1cb140d77:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1cb140904:;
	};
}



inline jule::Bool _1e5de81db_annotate(_1e5de3bed_dynamicTypeAnnotation* _self_) {
	jule::Bool __jule_func_result = false;
	(*(_self_))._field_k=(&((*((*(_self_))._field_p))._field_Kind));
	__jule_func_result = _1e5de7e55_annotateKind(_self_, &((*((*(_self_))._field_a))._field_Kind));
	return __jule_func_result;;
}







inline void _1e5de90ee_pushErrToken(_1e5de8a5a_fnCallArgChecker* _self_, jule::Ptr<_1e5c8eacc_Token> _67928_token, jule::Str _67943_fmt, jule::Slice<jule::Any> _67956_args) {
	_1e5d7e66c_pushErr((*((*(_self_))._field_e))._field_s.ptr(), _67928_token, _67943_fmt, _67956_args);
}



inline void _1e5de9462_pushErr(_1e5de8a5a_fnCallArgChecker* _self_, jule::Str _68323_fmt, jule::Slice<jule::Any> _68336_args) {
	_1e5de90ee_pushErrToken(_self_, (*(_self_))._field_errorToken, _68323_fmt, _68336_args);
}



inline jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>> _1e5de96e8_getParams(_1e5de8a5a_fnCallArgChecker* _self_) {
	if (((((*((*(_self_))._field_f))._field_Params.len() > 0LL) && ((*((*((*(_self_))._field_f))._field_Params[0LL]))._field_Decl != nullptr)) && _1e5cdded3_IsSelf((*((*((*(_self_))._field_f))._field_Params[0LL]))._field_Decl))) {
		return (*(*(_self_))._field_f.alloc)._field_Params.slice(1LL);;
	};
	return (*(*(_self_))._field_f.alloc)._field_Params;;
}



inline jule::Bool _1e5de9a39_checkCounts(_1e5de8a5a_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>* _69628_params) {
	jule::Bool __jule_func_result = false;
	jule::I64 _6977_n = (*(_69628_params)).len();;
	if (((_6977_n > 0LL) && _1e5cdded3_IsSelf((*((*(_69628_params))[0LL]))._field_Decl.ptr()))) {
		(_6977_n)--;
	};
	jule::I64 _7027_diff = (_6977_n - (*(_self_))._field_args.len());;
	jule::Str _7037_log = static_cast<jule::Str>(jule::Str());;
	{
		
		if ((_7027_diff == 0LL)) {
			_case_begin_1cb14d01b:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_6977_n > 0LL) && (*(*((*(_69628_params))[(_6977_n - 1LL)]))._field_Decl.alloc)._field_Variadic)) {
			_case_begin_1cb14cbb9:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_7027_diff < 0LL) || (_7027_diff > (*(_69628_params)).len()))) {
			_case_begin_1cb14cc30:;
			{
				_7037_log=static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63));
			}
		}
		else {
			_case_begin_1cb14cb53:;
			{
				_7037_log=static_cast<jule::Str>(jule::Str::lit("missing arguments to call @", 27));
			}
		}
		_match_end_1cb14cacb:;
	};
	_224497295_StrBuilder _7147_err = static__2244a0b83_New(32LL);;
	_2244a1090_WriteStr(&_7147_err, (*((*((*(_self_))._field_f))._field_Decl))._field_Ident);
	_2244a1090_WriteStr(&_7147_err, jule::Str::lit("\n       want (", 14));
	{
		auto expr = _69628_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb14c5c0:;
		if (it != expr_end) {
			jule::I64 _7177_i = it - expr->begin();
			jule::Ptr<_1e5ce22b1_ParamIns> *_71710_p = it;
			{
				_2244a1090_WriteStr(&_7147_err, _1e5e41be6_Str((*((*(_71710_p))))._field_Kind.ptr()));
				if ((((*(_69628_params)).len() - _7177_i) > 1LL)) {
					_2244a1090_WriteStr(&_7147_err, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1cb14c5c0:;
			++it;
			_7177_i++;
			goto _iter_begin_1cb14c5c0;
		}
		_iter_end_1cb14c5c0:;
	};
	_2244a1348_WriteByte(&_7147_err, ')');
	_1e5de9462_pushErr(_self_, _7037_log, ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2244a1887_Str(&_7147_err), &__jule_any_type4); __jule_collection; }));
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1e5de9ee0_checkArg(_1e5de8a5a_fnCallArgChecker* _self_, jule::Ptr<_1e5ce22b1_ParamIns>* _72829_p, jule::Ptr<_1e5e08c13_Data>* _72848_arg, jule::Ptr<_1e5c8eacc_Token>* _72865_errorToken) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_dynamicAnnotation && _1e5ce56e3_parameterUsesGenerics(_72829_p, &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics)))) {
		__jule_func_result=((!((*((*((*(_72829_p))))._field_Decl))._field_Variadic)) && _1e5e02646_isGoodValueToInfer(_72848_arg));
		if (__jule_func_result) {
			_1e5de3bed_dynamicTypeAnnotation _7339_dta = _1e5de3bed_dynamicTypeAnnotation{._field_e=(*(_self_))._field_e, ._field_f=(*(_self_))._field_f, ._field_p=(*(_72829_p)), ._field_a=(*(_72848_arg)), ._field_errorToken=(*(_72865_errorToken)), ._field_k=nullptr, ._field_c=jule::Ptr<_1e5ca5087_TypeDecl>(nullptr), ._field_ignored=(*(_self_))._field_ignored};;
			__jule_func_result=_1e5de81db_annotate(&_7339_dta);
		};
		if ((!(__jule_func_result))) {
			_1e5de90ee_pushErrToken(_self_, (*(_72865_errorToken)), static_cast<jule::Str>(jule::Str::lit("dynamic type annotation failed", 30)), jule::Slice<jule::Any>());
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	if (_1e5d8be71_checkValidityForInitExpr((*((*(_self_))._field_e))._field_s, (*(*((*(_72829_p))))._field_Decl.alloc)._field_Mutable, (*(*((*(_72829_p))))._field_Decl.alloc)._field_Reference, &((*((*(_72829_p))))._field_Kind), _72848_arg, _72865_errorToken)) {
		__jule_func_result = _1e5d876db_checkAssignType((*((*(_self_))._field_e))._field_s, (*(*((*(_72829_p))))._field_Decl.alloc)._field_Reference, &((*((*(_72829_p))))._field_Kind), _72848_arg, (*(_72865_errorToken)), _1e5e0dec1_getOwnerRefers((*(_self_))._field_e));
		return __jule_func_result;;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1e5dea3db_push(_1e5de8a5a_fnCallArgChecker* _self_, jule::Ptr<_1e5ce22b1_ParamIns>* _75725_p, jule::Ptr<_1e5ca93bb_Expr> _75743_arg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1e5e417ea_TypeKind> _7587_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Bool _7593_oldImmut = (*(*(_self_))._field_e.alloc)._field_immutable;;
	(*(*(_self_))._field_e.alloc)._field_immutable=(!((*((*((*(_75725_p))))._field_Decl))._field_Mutable));
	if (((!((*(_self_))._field_dynamicAnnotation)) && (!((*(*((*(_75725_p))))._field_Decl.alloc)._field_Variadic)))) {
		(*(*(_self_))._field_e.alloc)._field_prefix=(*((*(_75725_p))))._field_Kind;
	} else {
		(*(*(_self_))._field_e.alloc)._field_prefix=nullptr;
	};
	jule::Ptr<_1e5e08c13_Data> _7677_d = _1e5e297a0_evalExpr((*(_self_))._field_e, _75743_arg);;
	(*(*(_self_))._field_e.alloc)._field_prefix=_7587_old;
	(*(*(_self_))._field_e.alloc)._field_immutable=_7593_oldImmut;
	if ((_7677_d == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1e5de9ee0_checkArg(_self_, _75725_p, &(_7677_d), &((*(_75743_arg))._field_Token));
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_7677_d))._field_Model); };
	return __jule_func_result;;
}



inline jule::Bool _1e5dea7d7_pushVariadic(_1e5de8a5a_fnCallArgChecker* _self_, jule::Ptr<_1e5ce22b1_ParamIns>* _78133_p, jule::I64 _78151_i) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _7837_variadiced = false;;
	jule::Bool _7843_more = ((_78151_i + 1LL) < (*(_self_))._field_args.len());;
	jule::Ptr<_1e5cd520a_SliceExprModel> _7857_model = jule::new_ptr<_1e5cd520a_SliceExprModel>(_1e5cd520a_SliceExprModel{._field_ElemKind=(*((*(_78133_p))))._field_Kind, ._field_Elems=jule::Slice<jule::Any>(nullptr)});;
	jule::Ptr<_1e5e417ea_TypeKind> _7897_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Ptr<_1e5e417ea_TypeKind> _7967_oldKind = (*((*(_78133_p))))._field_Kind;;
	(*((*(_78133_p))))._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>((*(*((*(_78133_p))))._field_Kind.alloc));
	(*(*((*(_78133_p))))._field_Kind.alloc)._field_Variadic=false;
	__JULE_DEFER({
		(*(*((*(_78133_p))))._field_Kind.alloc)._field_Variadic=false;
		(*((*(_78133_p))))._field_Kind=_7967_oldKind;
	});;
	for (; (_78151_i < (*(_self_))._field_args.len()); (_78151_i)++) {
		{
			jule::Ptr<_1e5ca93bb_Expr> _8058_arg = (*(_self_))._field_args[_78151_i];;
			{
				auto &_match_expr{ (*(_8058_arg))._field_Kind };
				
				if (_match_expr.type == &__jule_any_type78) {
					_case_begin_1cb168223:;
					{
						(*(*(_self_))._field_e.alloc)._field_prefix=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1e5e4de12_Slc>(_1e5e4de12_Slc{._field_Elem=(*((*(_78133_p))))._field_Kind}), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data24)});
					}
				}
				else {
					_case_begin_1cb168520:;
					{
						(*(*(_self_))._field_e.alloc)._field_prefix=(*((*(_78133_p))))._field_Kind;
					}
				}
				_match_end_1cb1684a9:;
			};
			jule::Ptr<_1e5e08c13_Data> _8188_d = _1e5e2911d_eval((*(_self_))._field_e, _8058_arg);;
			if ((_8188_d == nullptr)) {
				__jule_func_result=false;
				goto _iter_next_1cb1676a6;
			};
			if ((*((*(_8188_d))._field_Kind))._field_Variadic) {
				_7837_variadiced=true;
				(*(*((*(_78133_p))))._field_Kind.alloc)._field_Variadic=true;
				__jule_func_result=(__jule_func_result && _1e5de9ee0_checkArg(_self_, _78133_p, &(_8188_d), &((*(_8058_arg))._field_Token)));
				(*(*((*(_78133_p))))._field_Kind.alloc)._field_Variadic=false;
				{
					auto &_match_expr{ (*(_8188_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type79) {
						_case_begin_1cb16be80:;
						{
							_7857_model=(*(_8188_d))._field_Model.unsafe_cast_ptr<_1e5cd520a_SliceExprModel>();
							(*(_7857_model))._field_ElemKind=(*((*(_78133_p))))._field_Kind;
						}
					}
					else {
						_case_begin_1cb16ec96:;
						{
							_7857_model=nullptr;
							{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_8188_d))._field_Model); };
						}
					}
					_match_end_1cb16ec30:;
				};
				(_78151_i)++;
				goto _iter_end_1cb1676a6;
			};
			__jule_func_result=(__jule_func_result && _1e5de9ee0_checkArg(_self_, _78133_p, &(_8188_d), &((*_8058_arg.alloc)._field_Token)));
			(*(_7857_model))._field_Elems=jule::append((*_7857_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_8188_d))._field_Model; __jule_collection; }));
		}
	_iter_next_1cb1676a6:;
	}
	_iter_end_1cb1676a6:;;
	(*(*(_self_))._field_e.alloc)._field_prefix=_7897_old;
	if ((_7837_variadiced && _7843_more)) {
		_1e5de90ee_pushErrToken(_self_, (*((*(_self_))._field_args[_78151_i]))._field_Token, static_cast<jule::Str>(jule::Str::lit("variadic argument can't use with more argument", 46)), jule::Slice<jule::Any>());
	};
	if ((_7857_model != nullptr)) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push(jule::Any(_7857_model, &__jule_any_type79)); };
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1e5deab28_checkArgs(_1e5de8a5a_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>* _86230_params) {
	jule::Bool __jule_func_result = false;
	jule::Bool _8633_arg = (*((*(_self_))._field_e))._field_arg;;
	(*(*(_self_))._field_e.alloc)._field_arg=true;
	__jule_func_result=true;
	jule::I64 _8677_i = 0LL;;
	if ((((*(_86230_params)).len() > 0LL) && _1e5cdded3_IsSelf((*((*(_86230_params))[0LL]))._field_Decl.ptr()))) {
		(_8677_i)++;
	};
	_julec_label_1cb178112:;
	while ((_8677_i < (*(_86230_params)).len())) {
		{
			jule::Ptr<_1e5ce22b1_ParamIns> _8748_p = (*(_86230_params))[_8677_i];;
			{
				
				if ((*(*(_8748_p))._field_Decl.alloc)._field_Variadic) {
					_case_begin_1cb179ab4:;
					{
						__jule_func_result=(_1e5dea7d7_pushVariadic(_self_, &(_8748_p), _8677_i) && __jule_func_result);
						goto _iter_end_1cb1783a9;
					}
				}
				else if (((*(_self_))._field_args.len() <= _8677_i)) {
					_case_begin_1cb179ba2:;
					{
						__jule_func_result=false;
						goto _iter_end_1cb1783a9;
					}
				}
				else {
					_case_begin_1cb1796eb:;
					{
						__jule_func_result=(_1e5dea3db_push(_self_, &(_8748_p), (*(_self_))._field_args[_8677_i]) && __jule_func_result);
					}
				}
				_match_end_1cb179674:;
			};
			(_8677_i)++;
		}
	_iter_next_1cb1783a9:;
	}
	_iter_end_1cb1783a9:;;
	(*(*(_self_))._field_e.alloc)._field_arg=_8633_arg;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1e5deadae_checkDynamicTypeAnnotation(_1e5de8a5a_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_f))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb17b8eb:;
		if (it != expr_end) {
			jule::Ptr<_1e5e3ee14_InsGeneric> _89410_g = *it;
			{
				if ((_89410_g == nullptr)) {
					_1e5de9462_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("dynamic type annotation failed", 30)), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1cb17b8eb:;
			++it;
			goto _iter_begin_1cb17b8eb;
		}
		_iter_end_1cb17b8eb:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1e5deb145_check(_1e5de8a5a_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>> _9047_params = _1e5de96e8_getParams(_self_);;
	__jule_func_result=_1e5de9a39_checkCounts(_self_, &(_9047_params));
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1e5deab28_checkArgs(_self_, &(_9047_params));
	if ((__jule_func_result && (*(_self_))._field_dynamicAnnotation)) {
		__jule_func_result=_1e5deadae_checkDynamicTypeAnnotation(_self_);
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}







inline void _1e5dec025_pushErr(_1e5deb992_structLitChecker* _self_, jule::Ptr<_1e5c8eacc_Token> _94223_token, jule::Str _94238_fmt, jule::Slice<jule::Any> _94251_args) {
	_1e5e0aebd_pushErr((*(_self_))._field_e.ptr(), _94223_token, _94238_fmt, _94251_args);
}



inline void _1e5dec388_pushSuggestion(_1e5deb992_structLitChecker* _self_, jule::Str _94730_fmt, jule::Slice<jule::Any> _94743_args) {
	_1e5e0b331_pushSuggestion((*(_self_))._field_e.ptr(), _94730_fmt, _94743_args);
}



inline void _1e5dec7a6_pushMatch(_1e5deb992_structLitChecker* _self_, jule::Ptr<_1e5cc81cb_FieldIns>* _95130_f, jule::Ptr<_1e5e08c13_Data>* _95149_d, jule::Ptr<_1e5c8eacc_Token>* _95164_errorToken) {
	;
	jule::Bool _9573_mutable = ((!((*((*(_self_))._field_e))._field_immutable)) || ((*((*((*(_95130_f))))._field_Decl))._field_Mutable && ((*((*(_self_))._field_s))._field_Methods.len() > 0LL)));;
	if (_1e5d8be71_checkValidityForInitExpr((*(*(_self_))._field_e.alloc)._field_s, _9573_mutable, false, &((*((*(_95130_f))))._field_Kind), _95149_d, _95164_errorToken)) {
		_1e5d876db_checkAssignType((*((*(_self_))._field_e))._field_s, false, &((*((*(_95130_f))))._field_Kind), _95149_d, (*(_95164_errorToken)), _1e5e0dec1_getOwnerRefers((*(_self_))._field_e));
	};
	{ jule::Slice<jule::Ptr<_1e5cd3758_StructArgExprModel>> &__jule_push_dest = (*(_self_))._field_args; __jule_push_dest.push(jule::new_ptr<_1e5cd3758_StructArgExprModel>(_1e5cd3758_StructArgExprModel{._field_Token=(*(_95164_errorToken)), ._field_Field=(*(_95130_f)), ._field_Expr=(*(_95149_d))})); };
}



inline void _1e5decb19_checkPair(_1e5deb992_structLitChecker* _self_, jule::Ptr<_1e5cadada_FieldExprPair>* _97030_pair, jule::Slice<jule::Ptr<_1e5ca93bb_Expr>>* _97057_exprs) {
	jule::Ptr<_1e5cc81cb_FieldIns> _9727_f = _1e5cca167_FindField((*(_self_))._field_s.ptr(), (*((*((*(_97030_pair))))._field_Field))._field_Kind);;
	if ((_9727_f == nullptr)) {
		_1e5dec025_pushErr(_self_, (*((*(_97030_pair))))._field_Field, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_97030_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		return;;
	};
	if ((!(_1e5d7edcb_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_9727_f))._field_Decl))._field_Public, (*(*(_9727_f))._field_Decl.alloc)._field_Token)))) {
		_1e5dec025_pushErr(_self_, (*((*(_97030_pair))))._field_Field, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_97030_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		_1e5dec388_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
	};
	_julec_label_1cb187dbe:;
	{
		auto expr = _97057_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb188d8c:;
		if (it != expr_end) {
			jule::Ptr<_1e5ca93bb_Expr> _98415_expr = *it;
			{
				{
					auto &_match_expr{ (*(_98415_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type80) {
						_case_begin_1cb189882:;
						{
							jule::Ptr<_1e5cadada_FieldExprPair> _9879_dpair = (*(_98415_expr))._field_Kind.unsafe_cast_ptr<_1e5cadada_FieldExprPair>();;
							{
								
								if (((*(_97030_pair)) == _9879_dpair)) {
									_case_begin_1cb18c005:;
									{
										goto _iter_end_1cb188d8c;
									}
								}
								else if (((*(*((*(_97030_pair))))._field_Field.alloc)._field_Kind == (*(*(_9879_dpair))._field_Field.alloc)._field_Kind)) {
									_case_begin_1cb18c09e:;
									{
										_1e5dec025_pushErr(_self_, (*((*(_97030_pair))))._field_Field, static_cast<jule::Str>(jule::Str::lit("@ already has expression", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_97030_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
										goto _iter_end_1cb188d8c;
									}
								}
								_match_end_1cb18be8e:;
							};
						}
					}
					_match_end_1cb18980a:;
				};
			}
			_iter_next_1cb188d8c:;
			++it;
			goto _iter_begin_1cb188d8c;
		}
		_iter_end_1cb188d8c:;
	};
	jule::Ptr<_1e5e417ea_TypeKind> _9987_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
	__JULE_DEFER({
		(*(*(_self_))._field_e.alloc)._field_prefix=_9987_prefix;
	});;
	(*(*(_self_))._field_e.alloc)._field_prefix=(*(_9727_f))._field_Kind;
	jule::Ptr<_1e5e08c13_Data> _10027_d = _1e5e297a0_evalExpr((*(_self_))._field_e, (*((*(_97030_pair))))._field_Expr);;
	if ((_10027_d == nullptr)) {
		return;;
	};
	_1e5dec7a6_pushMatch(_self_, &(_9727_f), &(_10027_d), &((*((*(_97030_pair))))._field_Field));
}



inline jule::Bool _1e5dece5a_readyExprs(_1e5deb992_structLitChecker* _self_, jule::Slice<jule::Ptr<_1e5ca93bb_Expr>>* _100931_exprs) {
	jule::Bool _10107_ok = true;;
	{
		auto expr = _100931_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb1926ae:;
		if (it != expr_end) {
			jule::I64 _10118_i = it - expr->begin();
			jule::Ptr<_1e5ca93bb_Expr> _101115_expr = *it;
			{
				{
					auto &_match_expr{ (*(_101115_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type81) {
						_case_begin_1cb1933a2:;
						{
							jule::Ptr<_1e5cb01e6_KeyValPair> _10149_pair = (*(_101115_expr))._field_Kind.unsafe_cast_ptr<_1e5cb01e6_KeyValPair>();;
							{
								auto &_match_expr{ (*((*(_10149_pair))._field_Key))._field_Kind };
								
								if (_match_expr.type == &__jule_any_type51) {
									_case_begin_1cb196a6a:;
									{
										goto _match_end_1cb195d66;
									}
								}
								else {
									_case_begin_1cb195dcc:;
									{
										_1e5dec025_pushErr(_self_, (*(_10149_pair))._field_Colon, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
										_10107_ok=false;
										goto _iter_next_1cb1926ae;
									}
								}
								_match_end_1cb195d66:;
							};
							(*((*(_100931_exprs))[_10118_i]))._field_Kind=jule::Any(jule::new_ptr<_1e5cadada_FieldExprPair>(_1e5cadada_FieldExprPair{._field_Field=(*((*(_10149_pair))._field_Key))._field_Token, ._field_Expr=(*_10149_pair.alloc)._field_Val}), &__jule_any_type80);
						}
					}
					_match_end_1cb19332a:;
				};
			}
			_iter_next_1cb1926ae:;
			++it;
			_10118_i++;
			goto _iter_begin_1cb1926ae;
		}
		_iter_end_1cb1926ae:;
	};
	return _10107_ok;;
}



inline void _1e5ded213_check(_1e5deb992_structLitChecker* _self_, jule::Slice<jule::Ptr<_1e5ca93bb_Expr>>* _103326_exprs) {
	if (((*(_103326_exprs)).len() == 0LL)) {
		return;;
	};
	if ((!(_1e5dece5a_readyExprs(_self_, _103326_exprs)))) {
		return;;
	};
	jule::Bool _10407_paired = false;;
	{
		auto expr = _103326_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb1995d9:;
		if (it != expr_end) {
			jule::I64 _10418_i = it - expr->begin();
			jule::Ptr<_1e5ca93bb_Expr> _104115_expr = *it;
			{
				{
					auto &_match_expr{ (*(_104115_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type80) {
						_case_begin_1cb1a049c:;
						{
							jule::Ptr<_1e5cadada_FieldExprPair> _10449_pair = (*(_104115_expr))._field_Kind.unsafe_cast_ptr<_1e5cadada_FieldExprPair>();;
							if (((_10418_i > 0LL) && (!(_10407_paired)))) {
								_1e5dec025_pushErr(_self_, (*(_10449_pair))._field_Field, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
							};
							_10407_paired=true;
							_1e5decb19_checkPair(_self_, &(_10449_pair), _103326_exprs);
						}
					}
					else {
						_case_begin_1cb19a794:;
						{
							if (_10407_paired) {
								_1e5dec025_pushErr(_self_, (*(_104115_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument must target to field", 29)), jule::Slice<jule::Any>());
							};
							if ((_10418_i >= (*((*(_self_))._field_s))._field_Fields.len())) {
								_1e5dec025_pushErr(_self_, (*_104115_expr.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), jule::Slice<jule::Any>());
								goto _iter_next_1cb1995d9;
							};
							jule::Ptr<_1e5cc81cb_FieldIns> _10599_field = (*(*(_self_))._field_s.alloc)._field_Fields[_10418_i];;
							if ((!(_1e5d7edcb_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_10599_field))._field_Decl))._field_Public, (*(*(_10599_field))._field_Decl.alloc)._field_Token)))) {
								_1e5dec025_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("structure cannot instantiating because it has non-public fields", 63)), jule::Slice<jule::Any>());
								_1e5dec388_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use field:expression pairs to instantiate", 41)), jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_1e5e417ea_TypeKind> _10679_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
							__JULE_DEFER({
								(*(*(_self_))._field_e.alloc)._field_prefix=_10679_prefix;
							});;
							(*(*(_self_))._field_e.alloc)._field_prefix=(*_10599_field.alloc)._field_Kind;
							jule::Ptr<_1e5e08c13_Data> _10719_d = _1e5e297a0_evalExpr((*(_self_))._field_e, _104115_expr);;
							if ((_10719_d == nullptr)) {
								goto _iter_next_1cb1995d9;
							};
							_1e5dec7a6_pushMatch(_self_, &(_10599_field), &(_10719_d), &((*_104115_expr.alloc)._field_Token));
						}
					}
					_match_end_1cb19a72d:;
				};
			}
			_iter_next_1cb1995d9:;
			++it;
			_10418_i++;
			goto _iter_begin_1cb1995d9;
		}
		_iter_end_1cb1995d9:;
	};
	if ((!(_10407_paired))) {
		jule::I64 _10824_n = (*((*(_self_))._field_s))._field_Fields.len();;
		jule::I64 _10838_diff = (_10824_n - (*(_103326_exprs)).len());;
		{
			
			if ((_10838_diff <= 0LL)) {
				_case_begin_1cb1a40b6:;
				{
					return;;
				}
			}
			_match_end_1cb1a3e95:;
		};
		_224497295_StrBuilder _10898_idents = static__2244a0b83_New(32LL);;
		for (; (_10838_diff > 0LL); (_10838_diff)--) {
			{
				_2244a1090_WriteStr(&_10898_idents, jule::Str::lit(", ", 2));
				_2244a1090_WriteStr(&_10898_idents, (*((*((*(*(_self_))._field_s.alloc)._field_Fields[(_10824_n - _10838_diff)]))._field_Decl))._field_Ident);
			}
		_iter_next_1cb1a4b99:;
		}
		_iter_end_1cb1a4b99:;;
		_1e5dec025_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(__jule_bytesToStr(_2244a2338_Buf(&_10898_idents).slice(2LL)), &__jule_any_type4); __jule_collection; }));
	};
}








inline jule::Bool _1e5ded774_rangeChecker_eq(_1e5ded774_rangeChecker *_self_, _1e5ded774_rangeChecker _other_) {
	return 
		(_self_->_field_sc == _other_._field_sc) &&
		(_self_->_field_rang == _self_->_field_rang) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_d == _self_->_field_d);
}

inline jule::Ptr<_1e5da0bcc_Var> _1e5dedc91_buildVar(_1e5ded774_rangeChecker* _self_, jule::Ptr<_1e5cb7e02_VarDecl>* _110925_decl) {
	jule::Ptr<_1e5da0bcc_Var> _11107_v = _1e5ceb919_buildVar((*(_110925_decl)));;
	return _11107_v;;
}



inline void _1e5dede8e_setSizeKey(_1e5ded774_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1e5c924b4_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyA))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyA=_1e5dedc91_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyA));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyA))._field_Kind=(*(_1e6029916_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_Kind;
}



inline void _1e5dee3ac_checkRangeExprValidity(_1e5ded774_rangeChecker* _self_, jule::Ptr<_1e5e08c13_Data>* _112843_d, jule::Ptr<_1e5da0bcc_Var>* _112854_key, jule::Ptr<_1e5e417ea_TypeKind>* _112870_k) {
	jule::Bool _11297__mut = (*((*(_112854_key))))._field_Mutable;;
	if ((_11297__mut && (!(_1e5e431d1_Mutable((*(_112870_k)).ptr()))))) {
		_11297__mut=false;
	};
	_1e5d8be71_checkValidityForInitExpr((*((*(_self_))._field_sc))._field_s, _11297__mut, (*((*(_112854_key))))._field_Reference, &((*((*((*(_112854_key))))._field_Kind))._field_Kind), _112843_d, &((*((*(_self_))._field_rang))._field_InToken));
}



inline void _1e5dee5aa_checkSlice(_1e5ded774_rangeChecker* _self_) {
	_1e5dede8e_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1e5c924b4_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1e5e4de12_Slc> _11477_slc = _1e5e45007_Slc((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1e5dedc91_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=jule::new_ptr<_1e5e4900b_TypeSymbol>(_1e5e4900b_TypeSymbol{._field_Decl=jule::Ptr<_1e5ca5087_TypeDecl>(nullptr), ._field_Kind=(*(_11477_slc))._field_Elem});
	_1e5dee3ac_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_11477_slc.alloc)._field_Elem));
}



inline void _1e5dee7a8_checkArray(_1e5ded774_rangeChecker* _self_) {
	_1e5dede8e_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1e5c924b4_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1e5e51233_Arr> _11607_arr = _1e5e44c71_Arr((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1e5dedc91_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=jule::new_ptr<_1e5e4900b_TypeSymbol>(_1e5e4900b_TypeSymbol{._field_Decl=jule::Ptr<_1e5ca5087_TypeDecl>(nullptr), ._field_Kind=(*(_11607_arr))._field_Elem});
	_1e5dee3ac_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_11607_arr.alloc)._field_Elem));
}



inline void _1e5dee9a6_checkMapKeyA(_1e5ded774_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1e5c924b4_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyA))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1e5e505a6_Map> _11727_m = _1e5e45a41_Map((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyA=_1e5dedc91_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyA));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyA))._field_Kind=jule::new_ptr<_1e5e4900b_TypeSymbol>(_1e5e4900b_TypeSymbol{._field_Decl=jule::Ptr<_1e5ca5087_TypeDecl>(nullptr), ._field_Kind=(*(_11727_m))._field_Key});
	jule::Ptr<_1e5e08c13_Data> _11767_d = jule::new_ptr<_1e5e08c13_Data>((*(*(_self_))._field_d.alloc));;
	(*_11767_d.alloc)._field_Kind=(*_11727_m.alloc)._field_Key;
	_1e5dee3ac_checkRangeExprValidity(_self_, &(_11767_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyA), &((*_11727_m.alloc)._field_Key));
}



inline void _1e5deeba4_checkMapKeyB(_1e5ded774_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1e5c924b4_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1e5e505a6_Map> _11877_m = _1e5e45a41_Map((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1e5dedc91_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=jule::new_ptr<_1e5e4900b_TypeSymbol>(_1e5e4900b_TypeSymbol{._field_Decl=jule::Ptr<_1e5ca5087_TypeDecl>(nullptr), ._field_Kind=(*(_11877_m))._field_Val});
	jule::Ptr<_1e5e08c13_Data> _11917_d = jule::new_ptr<_1e5e08c13_Data>((*(*(_self_))._field_d.alloc));;
	(*_11917_d.alloc)._field_Kind=(*_11877_m.alloc)._field_Val;
	_1e5dee3ac_checkRangeExprValidity(_self_, &(_11917_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_11877_m.alloc)._field_Val));
}



inline void _1e5deeda2_checkMap(_1e5ded774_rangeChecker* _self_) {
	_1e5dee9a6_checkMapKeyA(_self_);
	_1e5deeba4_checkMapKeyB(_self_);
}



inline void _1e5e000a0_checkStr(_1e5ded774_rangeChecker* _self_) {
	_1e5dede8e_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1e5c924b4_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1e5dedc91_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=(*(_1e6029916_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("u8", 2)))))._field_Kind;
}



inline void _1e5e0029d_checkComptime(_1e5ded774_rangeChecker* _self_) {
	_1e5dede8e_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyA != nullptr) && (*(*((*(_self_))._field_rang))._field_KeyA.alloc)._field_Mutable)) {
		_1e5d7e66c_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(*((*(_self_))._field_rang))._field_KeyA.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("define @ cannot be mutable", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_self_))._field_rang))._field_KeyA.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
	};
	if ((((*(*(_self_))._field_rang.alloc)._field_KeyB != nullptr) && (*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Mutable)) {
		_1e5d7e66c_pushErr((*((*(_self_))._field_sc))._field_s, (*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("define @ cannot be mutable", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
	};
	if ((((*(*(_self_))._field_rang.alloc)._field_KeyB == nullptr) || _1e5c924b4_IsIgnoreIdent((*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1e5dedc91_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
}



inline jule::Bool _1e5e00534_checkComptimeRange(_1e5ded774_rangeChecker* _self_) {
	jule::Ptr<_1e5d0a708_comptimeRange> _12267_range = _1e5e4734a_comptimeRange((*((*(_self_))._field_d))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*(_12267_range))._field_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5d0a4d8_comptimeRangeKind_mptr_data0) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1e5d0a4d8_comptimeRangeKind_mptr_data2) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1e5d0a4d8_comptimeRangeKind_mptr_data3) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1e5d0a4d8_comptimeRangeKind_mptr_data4) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1e5d0a4d8_comptimeRangeKind_mptr_data1) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1e5d0a4d8_comptimeRangeKind_mptr_data5) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1e5d0a4d8_comptimeRangeKind_mptr_data6)) {
			_case_begin_1cb1c623c:;
			{
				_1e5e0029d_checkComptime(_self_);
				return true;;
			}
		}
		else {
			_case_begin_1cb1c654a:;
			{
				_1e5d7e66c_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, static_cast<jule::Str>(jule::Str::lit("range iterations must be have enumerable expression", 51)), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1cb1c64d4:;
	};
}



inline jule::Bool _1e5e007ba_check(_1e5ded774_rangeChecker* _self_) {
	{
		
		if ((*((*((*(_self_))._field_d))._field_Kind))._field_Variadic) {
			_case_begin_1cb1c99c1:;
		}
		else if ((_1e5e45007_Slc((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cb1c8371:;
			{
				_1e5dee5aa_checkSlice(_self_);
				return true;;
			}
		}
		else if ((_1e5e44c71_Arr((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cb1c83d7:;
			{
				_1e5dee7a8_checkArray(_self_);
				return true;;
			}
		}
		else if ((_1e5e45a41_Map((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cb1c8937:;
			{
				_1e5deeda2_checkMap(_self_);
				return true;;
			}
		}
		else if ((_1e5e4734a_comptimeRange((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cb1c899d:;
			{
				return _1e5e00534_checkComptimeRange(_self_);;
			}
		}
		else {
			_case_begin_1cb1c82d8:;
			{
				jule::Ptr<_1e5e49913_Prim> _12594_prim = _1e5e43ea1_Prim((*((*(_self_))._field_d))._field_Kind.ptr());;
				if (((_12594_prim != nullptr) && _1e5e4cdcd_IsStr(_12594_prim))) {
					_1e5e000a0_checkStr(_self_);
					return true;;
				};
			}
		}
		_match_end_1cb1c81c8:;
	};
	_1e5d7e66c_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, static_cast<jule::Str>(jule::Str::lit("range iterations must be have enumerable expression", 51)), jule::Slice<jule::Any>());
	return false;;
}







inline void _1e5e01447_prepareTypes(_1e5e00ed5_retTypeChecker* _self_) {
	if (((*(_self_))._field_f != nullptr)) {
		(*(_self_))._field_types=_1e5ce4648_Types((*(_self_))._field_f);
	};
}



inline void _1e5e01700_prepareExprs(_1e5e00ed5_retTypeChecker* _self_, jule::Ptr<_1e5ca93bb_Expr>* _128733_e) {
	if (((*(_128733_e)) == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_128733_e))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1cb1d0ec2:;
			{
				(*(_self_))._field_exprs=(*((*((*(_128733_e))))._field_Kind.unsafe_cast_ptr<_1e5ca9eb0_TupleExpr>()))._field_Expr;
			}
		}
		else {
			_case_begin_1cb1d0851:;
			{
				{ jule::Slice<jule::Ptr<_1e5ca93bb_Expr>> &__jule_push_dest = (*(_self_))._field_exprs; __jule_push_dest.push((*(_128733_e))); };
			}
		}
		_match_end_1cb1d03bc:;
	};
}



inline void _1e5e018ed_checkExprs(_1e5e00ed5_retTypeChecker* _self_) {
	if (((*(_self_))._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1e5e08c13_Data>> _13037_datas = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5e08c13_Data>>::alloc(0LL, (*(_self_))._field_exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1e5e08c13_Data>(nullptr); __jule_collection; });;
	jule::Ptr<_1e5e0a93a_eval> _13047_eval = _1e5d870c0_eval((*((*(_self_))._field_sc))._field_s, jule::Trait((*(_self_))._field_sc, (jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data0));;
	{
		auto expr = &((*(_self_))._field_exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb1d369a:;
		if (it != expr_end) {
			jule::I64 _13058_i = it - expr->begin();
			jule::Ptr<_1e5ca93bb_Expr> _130515_expr = *it;
			{
				if ((_13058_i >= (*(_self_))._field_types.len())) {
					goto _iter_end_1cb1d369a;
				};
				jule::Ptr<_1e5e417ea_TypeKind> _13108_t = (*(_self_))._field_types[_13058_i];;
				(*(_13047_eval))._field_prefix=_13108_t;
				jule::Ptr<_1e5e08c13_Data> _13138_d = _1e5e297a0_evalExpr(_13047_eval, _130515_expr);;
				if ((_13138_d == nullptr)) {
					goto _iter_next_1cb1d369a;
				};
				{ jule::Slice<jule::Ptr<_1e5e08c13_Data>> &__jule_push_dest = _13037_datas; __jule_push_dest.push(_13138_d); };
				if (((!((*(_13138_d))._field_Mutable)) && _1e5e431d1_Mutable((*(_13138_d))._field_Kind.ptr()))) {
					_1e5d7e66c_pushErr((*((*(_self_))._field_sc))._field_s, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("mutable typed return expressions should be mutable", 50)), jule::Slice<jule::Any>());
					return;;
				};
				_1e5de2328_assignTypeChecker _13258_ac = _1e5de2328_assignTypeChecker{._field_s=(*(*(_self_))._field_sc.alloc)._field_s, ._field_dest=_13108_t, ._field_d=_13138_d, ._field_errorToken=(*(_self_))._field_errorToken, ._field_refers=(*((*(_1e5d43dd4_getHardRoot((*(_self_))._field_sc)))._field_owner))._field_Refers};;
				_1e5de3329_check(&_13258_ac);
			}
			_iter_next_1cb1d369a:;
			++it;
			_13058_i++;
			goto _iter_begin_1cb1d369a;
		}
		_iter_end_1cb1d369a:;
	};
	if ((_13037_datas.len() > 1LL)) {
		(*(_self_))._field_model=jule::Any(jule::new_ptr<_1e5cd843e_TupleExprModel>(_1e5cd843e_TupleExprModel{._field_Datas=_13037_datas}), &__jule_any_type83);
	} else if ((_13037_datas.len() == 1LL)) {
		(*(_self_))._field_model=(*(_13037_datas[0LL]))._field_Model;
	};
}



inline jule::Bool _1e5e01b84_tryFuncMultiRetForward(_1e5e00ed5_retTypeChecker* _self_) {
	jule::Ptr<_1e5e0a93a_eval> _13477_eval = _1e5d870c0_eval((*((*(_self_))._field_sc))._field_s, jule::Trait((*(_self_))._field_sc, (jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data0));;
	jule::Ptr<_1e5e08c13_Data> _13487_d = _1e5e297a0_evalExpr(_13477_eval, (*(_self_))._field_exprs[0LL]);;
	if ((_13487_d == nullptr)) {
		return true;;
	};
	jule::Ptr<_1e5e4ea06_Tuple> _13547_tup = _1e5e45cc7_Tup((*(_13487_d))._field_Kind.ptr());;
	if ((_13547_tup == nullptr)) {
		return false;;
	};
	if (((*(_13547_tup))._field_Types.len() != (*(_self_))._field_types.len())) {
		goto _julec_label_1cb1de7a5;
	};
	(*(_self_))._field_model=(*(_13487_d))._field_Model;
	{
		auto expr = &((*(_self_))._field_types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb1dc8d5:;
		if (it != expr_end) {
			jule::I64 _13627_i = it - expr->begin();
			{
				jule::Ptr<_1e5e417ea_TypeKind> _13638_t1 = (*(_self_))._field_types[_13627_i];;
				jule::Ptr<_1e5e417ea_TypeKind> _13648_t2 = (*(_13547_tup))._field_Types[_13627_i];;
				if ((!(_1e5d87b92__checkTypeCompatibility((*((*(_self_))._field_sc))._field_s, &(_13638_t1), &(_13648_t2), (*(_self_))._field_errorToken)))) {
					goto _julec_label_1cb1de7a5;
				};
			}
			_iter_next_1cb1dc8d5:;
			++it;
			_13627_i++;
			goto _iter_begin_1cb1dc8d5;
		}
		_iter_end_1cb1dc8d5:;
	};
	return true;;
	_julec_label_1cb1de7a5:;
	_224497295_StrBuilder _13717_wanted = static__2244a0b83_New(32LL);;
	{
		auto expr = &((*(_self_))._field_types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb1dead5:;
		if (it != expr_end) {
			jule::I64 _13727_i = it - expr->begin();
			jule::Ptr<_1e5e417ea_TypeKind> _137210_t = *it;
			{
				_2244a1090_WriteStr(&_13717_wanted, _1e5e41be6_Str(_137210_t.ptr()));
				if ((((*(_self_))._field_types.len() - _13727_i) > 1LL)) {
					_2244a1090_WriteStr(&_13717_wanted, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1cb1dead5:;
			++it;
			_13727_i++;
			goto _iter_begin_1cb1dead5;
		}
		_iter_end_1cb1dead5:;
	};
	_224497295_StrBuilder _13787_given = static__2244a0b83_New(32LL);;
	{
		auto expr = &((*(_13547_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb1e1b70:;
		if (it != expr_end) {
			jule::I64 _13797_i = it - expr->begin();
			jule::Ptr<_1e5e417ea_TypeKind> _137910_t = *it;
			{
				_2244a1090_WriteStr(&_13787_given, _1e5e41be6_Str(_137910_t.ptr()));
				if ((((*(_self_))._field_types.len() - _13797_i) > 1LL)) {
					_2244a1090_WriteStr(&_13787_given, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1cb1e1b70:;
			++it;
			_13797_i++;
			goto _iter_begin_1cb1e1b70;
		}
		_iter_end_1cb1e1b70:;
	};
	_1e5d7e66c_pushErr((*((*(_self_))._field_sc))._field_s, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("function return forwaring is wrong\n       want (@)\n       have (@)", 66)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2244a1887_Str(&_13717_wanted), &__jule_any_type4); (*it++) = jule::Any(_2244a1887_Str(&_13787_given), &__jule_any_type4); __jule_collection; }));
	return false;;
}



inline jule::Bool _1e5e01ec5_check(_1e5e00ed5_retTypeChecker* _self_, jule::Ptr<_1e5ca93bb_Expr>* _138926_e) {
	_1e5e01447_prepareTypes(_self_);
	_1e5e01700_prepareExprs(_self_, _138926_e);
	{
		
		if ((((*(_self_))._field_exprs.len() == 0LL) && ((*(_self_))._field_types.len() > 0LL))) {
			_case_begin_1cb1e505d:;
			{
				if ((!(_1e5ce15ce_AnyVar((*((*(_self_))._field_f))._field_Decl.ptr())))) {
					_1e5d7e66c_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("return statements of non-void functions should have return expression", 69)), jule::Slice<jule::Any>());
					return false;;
				};
				return true;;
			}
		}
		else if (((((*(_self_))._field_exprs.len() > 0LL) && ((*(_self_))._field_f != nullptr)) && _1e5ce080e_IsVoid((*(*(_self_))._field_f.alloc)._field_Decl.ptr()))) {
			_case_begin_1cb1e50c4:;
			{
				_1e5d7e66c_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("void functions is cannot returns any value", 42)), jule::Slice<jule::Any>());
				return false;;
			}
		}
		else if ((((*(_self_))._field_exprs.len() == 1LL) && ((*(_self_))._field_types.len() > 1LL))) {
			_case_begin_1cb1e513a:;
			{
				{
					auto &_match_expr{ (*((*(_self_))._field_exprs[0LL]))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type84) {
						_case_begin_1cb1e9aac:;
						{
							if (_1e5e01b84_tryFuncMultiRetForward(_self_)) {
								return true;;
							};
						}
					}
					_match_end_1cb1e9a02:;
				};
				_1e5d7e66c_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("missing return expressions for multi-return", 43)), jule::Slice<jule::Any>());
				return false;;
			}
		}
		else if (((*(_self_))._field_exprs.len() < (*(_self_))._field_types.len())) {
			_case_begin_1cb1e51a1:;
			{
				_1e5d7e66c_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("missing return expressions for multi-return", 43)), jule::Slice<jule::Any>());
			}
		}
		else if (((*(_self_))._field_exprs.len() > (*(_self_))._field_types.len())) {
			_case_begin_1cb1e5217:;
			{
				_1e5d7e66c_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("overflow return expressions", 27)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1cb1e4de8:;
	};
	_1e5e018ed_checkExprs(_self_);
	return true;;
}







inline jule::Ptr<_1e5d5b2e7_ImportInfo> _1e5e03a65_SelectPackage(_1e5e03548_SymbolTable* _self_, jule::Fn<jule::Bool,jule::Ptr<_1e5d5b2e7_ImportInfo>> _2729_selector) {
	if ((_2729_selector == nullptr)) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb201003:;
		if (it != expr_end) {
			jule::Ptr<_1e5d5b2e7_ImportInfo> _3115_pkg = *it;
			{
				if (_2729_selector(_3115_pkg)) {
					return _3115_pkg;;
				};
			}
			_iter_next_1cb201003:;
			++it;
			goto _iter_begin_1cb201003;
		}
		_iter_end_1cb201003:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e5da0bcc_Var> _1e5e03e61_FindVar(_1e5e03548_SymbolTable* _self_, jule::Str _4123_ident, jule::Bool _4135_binded) {
	return _1e5e06095_findVar(_self_, &(_4123_ident), _4135_binded, false);;
}



inline jule::Ptr<_1e5e40a08_TypeAlias> _1e5e0435c_FindTypeAlias(_1e5e03548_SymbolTable* _self_, jule::Str _4729_ident, jule::Bool _4741_binded) {
	return _1e5e0654b_findTypeAlias(_self_, &(_4729_ident), _4741_binded, false);;
}



inline jule::Ptr<_1e5cc5e21_Struct> _1e5e04758_FindStruct(_1e5e03548_SymbolTable* _self_, jule::Str _5326_ident, jule::Bool _5338_binded) {
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb202c80:;
		if (it != expr_end) {
			jule::Ptr<_1e5cc5e21_Struct> _5415_s = *it;
			{
				if ((((*(_5415_s))._field_Ident == _5326_ident) && ((*_5415_s.alloc)._field_Binded == _5338_binded))) {
					return _5415_s;;
				};
			}
			_iter_next_1cb202c80:;
			++it;
			goto _iter_begin_1cb202c80;
		}
		_iter_end_1cb202c80:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e5ce0358_Fn> _1e5e04b54_FindFn(_1e5e03548_SymbolTable* _self_, jule::Str _6422_ident, jule::Bool _6434_binded) {
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb204996:;
		if (it != expr_end) {
			jule::Ptr<_1e5ce0358_Fn> _6515_f = *it;
			{
				if ((((*(_6515_f))._field_Ident == _6422_ident) && ((*_6515_f.alloc)._field_Binded == _6434_binded))) {
					return _6515_f;;
				};
			}
			_iter_next_1cb204996:;
			++it;
			goto _iter_begin_1cb204996;
		}
		_iter_end_1cb204996:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e5d03db6_Trait> _1e5e04e95_FindTrait(_1e5e03548_SymbolTable* _self_, jule::Str _7525_ident) {
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca4a7c39:;
		if (it != expr_end) {
			jule::Ptr<_1e5d03db6_Trait> _7615_t = *it;
			{
				if (((*(_7615_t))._field_Ident == _7525_ident)) {
					return _7615_t;;
				};
			}
			_iter_next_1ca4a7c39:;
			++it;
			goto _iter_begin_1ca4a7c39;
		}
		_iter_end_1ca4a7c39:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e5d065c2_Enum> _1e5e052d6_FindEnum(_1e5e03548_SymbolTable* _self_, jule::Str _8624_ident) {
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1caded173:;
		if (it != expr_end) {
			jule::Ptr<_1e5d065c2_Enum> _8715_e = *it;
			{
				if (((*(_8715_e))._field_Ident == _8624_ident)) {
					return _8715_e;;
				};
			}
			_iter_next_1caded173:;
			++it;
			goto _iter_begin_1caded173;
		}
		_iter_end_1caded173:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e5d07ccc_TypeEnum> _1e5e05627_FindTypeEnum(_1e5e03548_SymbolTable* _self_, jule::Str _9728_ident) {
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cadee163:;
		if (it != expr_end) {
			jule::Ptr<_1e5d07ccc_TypeEnum> _9815_e = *it;
			{
				if (((*(_9815_e))._field_Ident == _9728_ident)) {
					return _9815_e;;
				};
			}
			_iter_next_1cadee163:;
			++it;
			goto _iter_begin_1cadee163;
		}
		_iter_end_1cadee163:;
	};
	return nullptr;;
}



inline jule::I64 _1e5e05ade_findVar1(_1e5e03548_SymbolTable* _self_, jule::Ptr<_1e5da0bcc_Var>* _10825_v) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cae00153:;
		if (it != expr_end) {
			jule::I64 _1097_i = it - expr->begin();
			{
				if (((*(_self_))._field_Vars[_1097_i] == (*(_10825_v)))) {
					return _1097_i;;
				};
			}
			_iter_next_1cae00153:;
			++it;
			_1097_i++;
			goto _iter_begin_1cae00153;
		}
		_iter_end_1cae00153:;
	};
	return -1LL;;
}



inline jule::Ptr<_1e5da0bcc_Var> _1e5e06095_findVar(_1e5e03548_SymbolTable* _self_, jule::Str* _11724_ident, jule::Bool _11736_binded, jule::Bool _11750_reverse) {
	if (_11750_reverse) {
		jule::I64 _1198_i = ((*(_self_))._field_Vars.len() - 1LL);;
		for (; (_1198_i >= 0LL); (_1198_i)--) {
			{
				jule::Ptr<_1e5da0bcc_Var> _1219_v = (*(_self_))._field_Vars[_1198_i];;
				if ((((*(_1219_v))._field_Ident == (*(_11724_ident))) && ((*_1219_v.alloc)._field_Binded == _11736_binded))) {
					return _1219_v;;
				};
			}
		_iter_next_1cae01ebd:;
		}
		_iter_end_1cae01ebd:;;
	} else {
		{
			auto expr = &((*(_self_))._field_Vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1cae03453:;
			if (it != expr_end) {
				jule::Ptr<_1e5da0bcc_Var> _12716_v = *it;
				{
					if ((((*(_12716_v))._field_Ident == (*(_11724_ident))) && ((*_12716_v.alloc)._field_Binded == _11736_binded))) {
						return _12716_v;;
					};
				}
				_iter_next_1cae03453:;
				++it;
				goto _iter_begin_1cae03453;
			}
			_iter_end_1cae03453:;
		};
	};
	return nullptr;;
}



inline jule::Ptr<_1e5e40a08_TypeAlias> _1e5e0654b_findTypeAlias(_1e5e03548_SymbolTable* _self_, jule::Str* _13630_ident, jule::Bool _13642_binded, jule::Bool _13656_reverse) {
	if (_13656_reverse) {
		jule::I64 _1388_i = ((*(_self_))._field_TypeAliases.len() - 1LL);;
		for (; (_1388_i >= 0LL); (_1388_i)--) {
			{
				jule::Ptr<_1e5e40a08_TypeAlias> _1409_ta = (*(_self_))._field_TypeAliases[_1388_i];;
				if ((((*(_1409_ta))._field_Ident == (*(_13630_ident))) && ((*_1409_ta.alloc)._field_Binded == _13642_binded))) {
					return _1409_ta;;
				};
			}
		_iter_next_1cae05312:;
		}
		_iter_end_1cae05312:;;
	} else {
		{
			auto expr = &((*(_self_))._field_TypeAliases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1cae06797:;
			if (it != expr_end) {
				jule::Ptr<_1e5e40a08_TypeAlias> _14616_ta = *it;
				{
					if ((((*(_14616_ta))._field_Ident == (*(_13630_ident))) && ((*_14616_ta.alloc)._field_Binded == _13642_binded))) {
						return _14616_ta;;
					};
				}
				_iter_next_1cae06797:;
				++it;
				goto _iter_begin_1cae06797;
			}
			_iter_end_1cae06797:;
		};
	};
	return nullptr;;
}



inline jule::Any _1e5e06947_defByIdent(_1e5e03548_SymbolTable* _self_, jule::Str* _15727_ident, jule::Bool _15739_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cae07a0c:;
		if (it != expr_end) {
			jule::Ptr<_1e5da0bcc_Var> _15815_v = *it;
			{
				if ((((*(_15815_v))._field_Ident == (*(_15727_ident))) && ((*_15815_v.alloc)._field_Binded == _15739_binded))) {
					return jule::Any(_15815_v, &__jule_any_type8);;
				};
			}
			_iter_next_1cae07a0c:;
			++it;
			goto _iter_begin_1cae07a0c;
		}
		_iter_end_1cae07a0c:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cae07d70:;
		if (it != expr_end) {
			jule::Ptr<_1e5e40a08_TypeAlias> _16415_ta = *it;
			{
				if ((((*(_16415_ta))._field_Ident == (*(_15727_ident))) && ((*_16415_ta.alloc)._field_Binded == _15739_binded))) {
					return jule::Any(_16415_ta, &__jule_any_type27);;
				};
			}
			_iter_next_1cae07d70:;
			++it;
			goto _iter_begin_1cae07d70;
		}
		_iter_end_1cae07d70:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cae08678:;
		if (it != expr_end) {
			jule::Ptr<_1e5cc5e21_Struct> _17015_s = *it;
			{
				if ((((*(_17015_s))._field_Ident == (*(_15727_ident))) && ((*_17015_s.alloc)._field_Binded == _15739_binded))) {
					return jule::Any(_17015_s, &__jule_any_type23);;
				};
			}
			_iter_next_1cae08678:;
			++it;
			goto _iter_begin_1cae08678;
		}
		_iter_end_1cae08678:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cae09cd9:;
		if (it != expr_end) {
			jule::Ptr<_1e5ce0358_Fn> _17615_f = *it;
			{
				if ((((*(_17615_f))._field_Ident == (*(_15727_ident))) && ((*_17615_f.alloc)._field_Binded == _15739_binded))) {
					return jule::Any(_17615_f, &__jule_any_type26);;
				};
			}
			_iter_next_1cae09cd9:;
			++it;
			goto _iter_begin_1cae09cd9;
		}
		_iter_end_1cae09cd9:;
	};
	if (_15739_binded) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cae0ba99:;
		if (it != expr_end) {
			jule::Ptr<_1e5d03db6_Trait> _18615_t = *it;
			{
				if (((*(_18615_t))._field_Ident == (*(_15727_ident)))) {
					return jule::Any(_18615_t, &__jule_any_type10);;
				};
			}
			_iter_next_1cae0ba99:;
			++it;
			goto _iter_begin_1cae0ba99;
		}
		_iter_end_1cae0ba99:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cae0c418:;
		if (it != expr_end) {
			jule::Ptr<_1e5d065c2_Enum> _19215_e = *it;
			{
				if (((*(_19215_e))._field_Ident == (*(_15727_ident)))) {
					return jule::Any(_19215_e, &__jule_any_type24);;
				};
			}
			_iter_next_1cae0c418:;
			++it;
			goto _iter_begin_1cae0c418;
		}
		_iter_end_1cae0c418:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cae0d0d9:;
		if (it != expr_end) {
			jule::Ptr<_1e5d07ccc_TypeEnum> _19815_te = *it;
			{
				if (((*(_19815_te))._field_Ident == (*(_15727_ident)))) {
					return jule::Any(_19815_te, &__jule_any_type25);;
				};
			}
			_iter_next_1cae0d0d9:;
			++it;
			goto _iter_begin_1cae0d0d9;
		}
		_iter_end_1cae0d0d9:;
	};
	return nullptr;;
}



inline jule::Bool _1e5e06ded_isDuplicatedIdent(_1e5e03548_SymbolTable* _self_, jule::Uintptr _21029_itself, jule::Str* _21047_ident, jule::Bool _21059_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cae0e5d5:;
		if (it != expr_end) {
			jule::Ptr<_1e5da0bcc_Var> *_21110_v = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21110_v))) != _21029_itself) && ((*((*(_21110_v))))._field_Ident == (*(_21047_ident)))) && ((*(*(_21110_v)).alloc)._field_Binded == _21059_binded))) {
					return true;;
				};
			}
			_iter_next_1cae0e5d5:;
			++it;
			goto _iter_begin_1cae0e5d5;
		}
		_iter_end_1cae0e5d5:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cae0e97b:;
		if (it != expr_end) {
			jule::Ptr<_1e5e40a08_TypeAlias> *_21710_ta = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21710_ta))) != _21029_itself) && ((*((*(_21710_ta))))._field_Ident == (*(_21047_ident)))) && ((*(*(_21710_ta)).alloc)._field_Binded == _21059_binded))) {
					return true;;
				};
			}
			_iter_next_1cae0e97b:;
			++it;
			goto _iter_begin_1cae0e97b;
		}
		_iter_end_1cae0e97b:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cae0ed44:;
		if (it != expr_end) {
			jule::Ptr<_1e5cc5e21_Struct> *_22310_s = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22310_s))) != _21029_itself) && ((*((*(_22310_s))))._field_Ident == (*(_21047_ident)))) && ((*(*(_22310_s)).alloc)._field_Binded == _21059_binded))) {
					return true;;
				};
			}
			_iter_next_1cae0ed44:;
			++it;
			goto _iter_begin_1cae0ed44;
		}
		_iter_end_1cae0ed44:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cae11de0:;
		if (it != expr_end) {
			jule::Ptr<_1e5ce0358_Fn> *_22910_f = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22910_f))) != _21029_itself) && ((*((*(_22910_f))))._field_Ident == (*(_21047_ident)))) && ((*(*(_22910_f)).alloc)._field_Binded == _21059_binded))) {
					return true;;
				};
			}
			_iter_next_1cae11de0:;
			++it;
			goto _iter_begin_1cae11de0;
		}
		_iter_end_1cae11de0:;
	};
	if (_21059_binded) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cae14365:;
		if (it != expr_end) {
			jule::Ptr<_1e5d03db6_Trait> *_23910_t = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23910_t))) != _21029_itself) && ((*((*(_23910_t))))._field_Ident == (*(_21047_ident))))) {
					return true;;
				};
			}
			_iter_next_1cae14365:;
			++it;
			goto _iter_begin_1cae14365;
		}
		_iter_end_1cae14365:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cae1440e:;
		if (it != expr_end) {
			jule::Ptr<_1e5d065c2_Enum> *_24510_e = it;
			{
				if (((static_cast<jule::Uintptr>((*(_24510_e))) != _21029_itself) && ((*((*(_24510_e))))._field_Ident == (*(_21047_ident))))) {
					return true;;
				};
			}
			_iter_next_1cae1440e:;
			++it;
			goto _iter_begin_1cae1440e;
		}
		_iter_end_1cae1440e:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cae15410:;
		if (it != expr_end) {
			jule::Ptr<_1e5d07ccc_TypeEnum> *_25110_te = it;
			{
				if (((static_cast<jule::Uintptr>((*(_25110_te))) != _21029_itself) && ((*((*(_25110_te))))._field_Ident == (*(_21047_ident))))) {
					return true;;
				};
			}
			_iter_next_1cae15410:;
			++it;
			goto _iter_begin_1cae15410;
		}
		_iter_end_1cae15410:;
	};
	return false;;
}








inline jule::Bool _1e5e08c13_Data_eq(_1e5e08c13_Data *_self_, _1e5e08c13_Data _other_) {
	return 
		(_self_->_field_untyped == _other_._field_untyped) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_Lvalue == _self_->_field_Lvalue) &&
		(_self_->_field_IsRune == _self_->_field_IsRune) &&
		(_self_->_field_Model == _self_->_field_Model) &&
		(_self_->_field_Decl == _self_->_field_Decl) &&
		(_self_->_field_Constant == _self_->_field_Constant);
}

inline jule::Bool _1e5e09131_IsNil(_1e5e08c13_Data* _self_) {
	return _1e5e4292d_IsNil((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1e5e093b7_IsVoid(_1e5e08c13_Data* _self_) {
	return _1e5e42bb4_Void((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1e5e0964d_IsConst(_1e5e08c13_Data* _self_) {
	return ((*(_self_))._field_Constant != nullptr);;
}



inline jule::Bool _1e5e0998e_GoodOperand(_1e5e08c13_Data* _self_, jule::Ptr<_1e5e08c13_Data>* _10628_other) {
	if ((_1e5e449da_TypeEnum((*((*(_10628_other))))._field_Kind.ptr()) != nullptr)) {
		return false;;
	};
	return ((((_1e5e43ea1_Prim((*((*(_10628_other))))._field_Kind) == nullptr) || (!(_1e5e4d164_IsAny(_1e5e43ea1_Prim((*((*(_10628_other))))._field_Kind).ptr())))) && (_1e5e457aa_Trait((*((*(_10628_other))))._field_Kind) == nullptr)) && (!(_1e5e4292d_IsNil((*(_self_))._field_Kind))));;
}








inline jule::Bool _1e5e09d8a_Value_eq(_1e5e09d8a_Value *_self_, _1e5e09d8a_Value _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Data == _self_->_field_Data);
}






inline jule::Bool _1e5e0a93a_eval_eq(_1e5e0a93a_eval *_self_, _1e5e0a93a_eval _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_lookup == _self_->_field_lookup) &&
		(_self_->_field_prefix == _self_->_field_prefix) &&
		(_self_->_field_unsafety == _self_->_field_unsafety) &&
		(_self_->_field_immutable == _self_->_field_immutable) &&
		(_self_->_field_ignored == _self_->_field_ignored) &&
		(_self_->_field_disBuiltin == _self_->_field_disBuiltin) &&
		(_self_->_field_owner == _self_->_field_owner) &&
		(_self_->_field_field == _self_->_field_field) &&
		(_self_->_field_arg == _self_->_field_arg);
}

inline void _1e5e0aebd_pushErr(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5c8eacc_Token> _13723_token, jule::Str _13738_fmt, jule::Slice<jule::Any> _13751_args) {
	_1e5d7e66c_pushErr((*(_self_))._field_s.ptr(), _13723_token, _13738_fmt, _13751_args);
}



inline void _1e5e0b331_pushSuggestion(_1e5e0a93a_eval* _self_, jule::Str _14230_fmt, jule::Slice<jule::Any> _14243_args) {
	_1e5d7e9d0_pushSuggestion((*(_self_))._field_s.ptr(), _14230_fmt, _14243_args);
}



inline void _1e5e0b52e_allowBuiltin(_1e5e0a93a_eval* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1e5e0b72c_disallowBuiltin(_1e5e0a93a_eval* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline jule::Bool _1e5e0b9b3_isUnsafe(_1e5e0a93a_eval* _self_) {
	return (*(_self_))._field_unsafety;;
}



inline jule::Bool _1e5e0bc49_isGlobal(_1e5e0a93a_eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data3)) {
			_case_begin_1cae71a87:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1cae71e94:;
			{
				return false;;
			}
		}
		_match_end_1cae71e2d:;
	};
}



inline jule::Bool _1e5e0c057_applyNumericPrefix(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5e08c13_Data>* _16939_d) {
	if ((((((*(_16939_d)) == nullptr) || (!(_1e5e0964d_IsConst((*(_16939_d)).ptr())))) || (_1e5e43ea1_Prim((*((*(_16939_d))))._field_Kind.ptr()) == nullptr)) || ((*(_self_))._field_prefix == nullptr))) {
		return false;;
	};
	jule::Ptr<_1e5e49913_Prim> _1763_prim = _1e5e43ea1_Prim((*(_self_))._field_prefix.ptr());;
	if ((_1763_prim == nullptr)) {
		return false;;
	};
	{
		
		if (_1e21a3b71_IsFloat(_1e5e49c87_Str(_1763_prim.ptr()))) {
			_case_begin_1cae74606:;
			{
				(*((*(_16939_d))))._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>((*((*(_self_))._field_prefix)));
				_1e21a801b_SetF64((*((*(_16939_d))))._field_Constant.ptr(), _1e21a7191_AsF64((*((*(_16939_d))))._field_Constant));
				(*(*((*(_16939_d))))._field_Constant.alloc)._field_Kind=(*(_1763_prim))._field_Kind;
			}
		}
		else if (_1e21a3258_IsSigInt(_1e5e49c87_Str(_1763_prim.ptr()))) {
			_case_begin_1cae7466c:;
			{
				if ((!(_1e5dde776_sigAssignable(_1e5e49c87_Str(_1763_prim.ptr()), _16939_d)))) {
					return false;;
				};
				(*((*(_16939_d))))._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>((*((*(_self_))._field_prefix)));
				_1e21a7449_SetI64((*((*(_16939_d))))._field_Constant.ptr(), _1e21a6b74_AsI64((*((*(_16939_d))))._field_Constant));
				(*(*((*(_16939_d))))._field_Constant.alloc)._field_Kind=(*(_1763_prim))._field_Kind;
			}
		}
		else if (_1e21a3566_IsUnsigInt(_1e5e49c87_Str(_1763_prim.ptr()))) {
			_case_begin_1cae746d3:;
			{
				if ((!(_1e5ddeb3e_unsigAssignable(_1e5e49c87_Str(_1763_prim.ptr()), _16939_d)))) {
					return false;;
				};
				(*((*(_16939_d))))._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>((*((*(_self_))._field_prefix)));
				_1e21a7702_SetU64((*((*(_16939_d))))._field_Constant.ptr(), _1e21a6e0a_AsU64((*((*(_16939_d))))._field_Constant));
				(*(*((*(_16939_d))))._field_Constant.alloc)._field_Kind=(*(_1763_prim))._field_Kind;
			}
		}
		_match_end_1cae74518:;
	};
	return true;;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e0c398_litStr(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5caa356_LitExpr>* _20419_l) {
	jule::Str _2057_s = jule::Str();;
	if (_1e5c90eb8_IsRawStr((*((*(_20419_l))))._field_Value)) {
		_2057_s=_1e5ddc9c7_ToRawStr((*((*(_20419_l))))._field_Value);
	} else {
		_2057_s=_1e5ddcd18_ToStr((*((*(_20419_l))))._field_Value);
	};
	jule::Ptr<_1e21a449b_Const> _2117_constant = static__1e21a526b_NewStr(_2057_s);;
	return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=_1e60268d0_primStr, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_2117_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_2117_constant});;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e0c6d9_litRune(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5caa356_LitExpr>* _22120_l) {
	jule::I32 _2223_r = _1e5ddc7b8_ToRune((*((*(_22120_l))))._field_Value);;
	jule::Ptr<_1e5e08c13_Data> _2237_data = jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1e21a491e_NewI64(static_cast<jule::I64>(_2223_r))});;
	if ((_2223_r <= 255LL)) {
		(*(_2237_data))._field_Kind=_1e60283b5_primU8;
	} else {
		(*(_2237_data))._field_Kind=_1e6027d54_primI32;
	};
	(*(_2237_data))._field_Model=jule::Any(jule::new_ptr<_1e5cdbc39_RuneExprModel>(_1e5cdbc39_RuneExprModel{._field_Code=_2223_r}), &__jule_any_type85);
	(*_2237_data.alloc)._field_Mutable=true;
	(*_2237_data.alloc)._field_IsRune=true;
	(*_2237_data.alloc)._field_untyped=true;
	return _2237_data;;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e0ca2a_litFloat(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5caa356_LitExpr>* _24021_l) {
	jule::F64 _2413_f = ({
		auto except = _1e218ae00_ParseFloat((*((*(_24021_l))))._field_Value, 64LL);
		(except.ok()) ? (except.result) : ({

			jule::MAX_F64;
		});
	});;
	jule::Ptr<_1e21a449b_Const> _2427_constant = static__1e21a5535_NewF64(_2413_f);;
	return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=true, ._field_Kind=_1e6029361_primF64, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_2427_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_2427_constant});;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e0cd6b_litInt(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5caa356_LitExpr>* _25223_l) {
	;
	jule::Str _2557_lit = (*((*(_25223_l))))._field_Value;;
	jule::I64 _2567_base = 0LL;;
	{
		
		if (_2256d7380_HasPrefix(_2557_lit, jule::Str::lit("0x", 2))) {
			_case_begin_1cae86a47:;
			{
				(_2557_lit).mut_slice(2LL);;
				_2567_base=16LLU;
			}
		}
		else if (_2256d7380_HasPrefix(_2557_lit, jule::Str::lit("0b", 2))) {
			_case_begin_1cae86b35:;
			{
				(_2557_lit).mut_slice(2LL);;
				_2567_base=2LLU;
			}
		}
		else if (_2256d7380_HasPrefix(_2557_lit, jule::Str::lit("0o", 2))) {
			_case_begin_1cae866e5:;
			{
				(_2557_lit).mut_slice(2LL);;
				_2567_base=8LLU;
			}
		}
		else if (((_2557_lit[0LL] == '0') && (_2557_lit.len() > 1LL))) {
			_case_begin_1cae8675b:;
			{
				(_2557_lit).mut_slice(1LL);;
				_2567_base=8LLU;
			}
		}
		else {
			_case_begin_1cae8667e:;
			{
				_2567_base=10LLU;
			}
		}
		_match_end_1cae86607:;
	};
	jule::Ptr<_1e5e08c13_Data> _2767_d = jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)});;
	jule::Bool _2787_ok = true;;
	jule::I64 _2793_sig = ({
		auto except = _1e21845d0_ParseInt(_2557_lit, _2567_base, 64LL);
		(except.ok()) ? (except.result) : ({
			_2787_ok=false;

			0LL;
		});
	});;
	if (_2787_ok) {
		(*_2767_d.alloc)._field_Constant=static__1e21a491e_NewI64(_2793_sig);
		(*_2767_d.alloc)._field_Kind=_1e60275b2_primInt;
	} else {
		jule::U64 _2874_unsig = ({
			auto except = _1e2184129_ParseUint(_2557_lit, _2567_base, 64LL);
			(except.ok()) ? (except.result) : ({
				_1e5e0aebd_pushErr(_self_, (*((*(_25223_l))))._field_Token, static_cast<jule::Str>(jule::Str::lit("arithmetic value overflow: this value too big", 45)), jule::Slice<jule::Any>());
				_1e5e0b331_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("floating-point literals may solve your problem", 46)), jule::Slice<jule::Any>());

				jule::MAX_U64;
			});
		});;
		(*_2767_d.alloc)._field_Constant=static__1e21a4bd8_NewU64(_2874_unsig);
		(*_2767_d.alloc)._field_Kind=_1e60271e9_primUint;
	};
	(*_2767_d.alloc)._field_Model=jule::Any((*_2767_d.alloc)._field_Constant, &__jule_any_type20);
	(*_2767_d.alloc)._field_untyped=true;
	if ((!(_1e5e0c057_applyNumericPrefix(_self_, &(_2767_d))))) {
		_1e5e3380e_fitBitsize(&(_2767_d));
	};
	return _2767_d;;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e0d1ac_litNum(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5caa356_LitExpr>* _30723_l) {
	{
		
		if (_1e5c91b67_IsFloat((*((*(_30723_l))))._field_Value)) {
			_case_begin_1cae8dbb4:;
			{
				return _1e5e0ca2a_litFloat(_self_, _30723_l);;
			}
		}
		else {
			_case_begin_1cae8db4d:;
			{
				return _1e5e0cd6b_litInt(_self_, _30723_l);;
			}
		}
		_match_end_1cae8da3d:;
	};
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e0d4ed_evalLit(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5caa356_LitExpr> _31623_lit) {
	{
		
		if (_1e5c90c32_IsStr((*(_31623_lit))._field_Value)) {
			_case_begin_1cae8edd5:;
			{
				return _1e5e0c398_litStr(_self_, &(_31623_lit));;
			}
		}
		else if (_1e5c91282_IsRune((*(_31623_lit))._field_Value)) {
			_case_begin_1cae8ee4b:;
			{
				return _1e5e0c6d9_litRune(_self_, &(_31623_lit));;
			}
		}
		else if (_1e5c91e31_IsNum((*(_31623_lit))._field_Value)) {
			_case_begin_1cae8eeb2:;
			{
				return _1e5e0d1ac_litNum(_self_, &(_31623_lit));;
			}
		}
		else {
			_case_begin_1cae8e7ca:;
			{
				return nullptr;;
			}
		}
		_match_end_1cae8e6ba:;
	};
}



inline jule::Any _1e5e0d83e_findBuiltins(_1e5e0a93a_eval* _self_, jule::Str* _32929_ident) {
	if (_1e5d78754_IsPub((*(_32929_ident)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data1)) {
				_case_begin_1cae9224a:;
				{
					jule::Any _3339_def = _1e5e335cd_findBuiltinsImport(_32929_ident, (*(_self_))._field_lookup.cast_ptr<_1e5d5b2e7_ImportInfo>((jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data1));;
					if ((_3339_def != nullptr)) {
						return _3339_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data3)) {
				_case_begin_1cae91e92:;
				{
					jule::Any _3389_def = _1e5e34337_findBuiltinsSema(_32929_ident, (*(_self_))._field_lookup.cast_ptr<_1e5d7b768_sema>((jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data3));;
					if ((_3389_def != nullptr)) {
						return _3389_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data0)) {
				_case_begin_1cae922b1:;
				{
					jule::Any _3439_def = _1e5e34337_findBuiltinsSema(_32929_ident, (*((*(_self_))._field_lookup.cast_ptr<_1e5d40771_scopeChecker>((jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data0)))._field_s);;
					if ((_3439_def != nullptr)) {
						return _3439_def;;
					};
				}
			}
			_match_end_1cae92190:;
		};
		return nullptr;;
	};
	if ((*(_self_))._field_disBuiltin) {
		return nullptr;;
	};
	return _1e6029b9c_findBuiltinDef(_32929_ident);;
}



inline jule::Any _1e5e0dc3a_getDef(_1e5e0a93a_eval* _self_, jule::Str* _35623_ident, jule::Bool _35635_binded) {
	jule::Ptr<_1e5da0bcc_Var> _3617_v = ((_1e5e61e9c_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1e5e60682_FindVar((*(_self_))._field_lookup.data, (*(_35623_ident)), _35635_binded);;
	if ((_3617_v != nullptr)) {
		return jule::Any(_3617_v, &__jule_any_type8);;
	};
	jule::Ptr<_1e5e40a08_TypeAlias> _3667_ta = ((_1e5e61e9c_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1e5e60a7d_FindTypeAlias((*(_self_))._field_lookup.data, (*(_35623_ident)), _35635_binded);;
	if ((_3667_ta != nullptr)) {
		return jule::Any(_3667_ta, &__jule_any_type27);;
	};
	if ((!(_35635_binded))) {
		jule::Ptr<_1e5d065c2_Enum> _3728_enm = ((_1e5e61e9c_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1e5e61a07_FindEnum((*(_self_))._field_lookup.data, (*(_35623_ident)));;
		if ((_3728_enm != nullptr)) {
			return jule::Any(_3728_enm, &__jule_any_type24);;
		};
		jule::Ptr<_1e5d07ccc_TypeEnum> _3778_tenm = ((_1e5e61e9c_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1e5e61d48_FindTypeEnum((*(_self_))._field_lookup.data, (*(_35623_ident)));;
		if ((_3778_tenm != nullptr)) {
			return jule::Any(_3778_tenm, &__jule_any_type25);;
		};
	};
	jule::Ptr<_1e5ce0358_Fn> _3837_f = ((_1e5e61e9c_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1e5e61375_FindFn((*(_self_))._field_lookup.data, (*(_35623_ident)), _35635_binded);;
	if ((_3837_f != nullptr)) {
		return jule::Any(_3837_f, &__jule_any_type26);;
	};
	jule::Ptr<_1e5cc5e21_Struct> _3887_s = ((_1e5e61e9c_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1e5e60e79_FindStruct((*(_self_))._field_lookup.data, (*(_35623_ident)), _35635_binded);;
	if ((_3887_s != nullptr)) {
		return jule::Any(_3887_s, &__jule_any_type23);;
	};
	return _1e5e0d83e_findBuiltins(_self_, _35623_ident);;
}



inline jule::Ptr<_1e5ce65a1_ReferenceStack> _1e5e0dec1_getOwnerRefers(_1e5e0a93a_eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data0)) {
			_case_begin_1cae9b771:;
			{
				return _1e5d4416a_getOwnerRefers((*(_self_))._field_lookup.cast_ptr<_1e5d40771_scopeChecker>((jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data0));;
			}
		}
		else {
			_case_begin_1cae9a110:;
			{
				if ((((*(_self_))._field_owner != nullptr) && ((*(*(_self_))._field_owner.alloc)._field_Scope == nullptr))) {
					return (*(*(_self_))._field_owner.alloc)._field_Refers;;
				};
				if (((*(_self_))._field_field != nullptr)) {
					return (*((*(*(_self_))._field_field.alloc)._field_Owner))._field_Refers;;
				};
			}
		}
		_match_end_1cae9a099:;
	};
	return nullptr;;
}



inline void _1caeb4712_pushReference(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5ce3416_FnIns>* _41437_ref) {
	jule::Ptr<_1e5ce65a1_ReferenceStack> _4157_refers = _1e5e0dec1_getOwnerRefers(_self_);;
	if (((_4157_refers != nullptr) && (!(_1caeb6ba9_Exist(_4157_refers, (*(_41437_ref))))))) {
		_1e5ce73b5_Push(_4157_refers, jule::Any((*(_41437_ref)), &__jule_any_type7));
	};
}

inline void _1caecb2b7_pushReference(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5da0bcc_Var>* _41437_ref) {
	jule::Ptr<_1e5ce65a1_ReferenceStack> _4157_refers = _1e5e0dec1_getOwnerRefers(_self_);;
	if (((_4157_refers != nullptr) && (!(_1caecd60a_Exist(_4157_refers, (*(_41437_ref))))))) {
		_1e5ce73b5_Push(_4157_refers, jule::Any((*(_41437_ref)), &__jule_any_type8));
	};
}

inline void _1c806e3c4_pushReference(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5cc8c7b_StructIns>* _41437_ref) {
	jule::Ptr<_1e5ce65a1_ReferenceStack> _4157_refers = _1e5e0dec1_getOwnerRefers(_self_);;
	if (((_4157_refers != nullptr) && (!(_1c8071a36_Exist(_4157_refers, (*(_41437_ref))))))) {
		_1e5ce73b5_Push(_4157_refers, jule::Any((*(_41437_ref)), &__jule_any_type9));
	};
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e0e5ba__evalEnum(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5d065c2_Enum> _42125_enm) {
	return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_42125_enm, (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data3)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)});;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e0e9b6_evalEnum(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5d065c2_Enum> _43028_enm, jule::Ptr<_1e5c8eacc_Token> _43040_errorToken) {
	if ((!(_1e5d7edcb_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_43028_enm))._field_Public, (*_43028_enm.alloc)._field_Token)))) {
		_1e5e0aebd_pushErr(_self_, _43040_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_43028_enm.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1e5e0b331_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1e5e0e5ba__evalEnum(_self_, _43028_enm);;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e0ed07__evalTypeEnum(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5d07ccc_TypeEnum> _43929_enm) {
	return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_43929_enm, (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data4)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)});;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e10203_evalTypeEnum(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5d07ccc_TypeEnum> _44832_enm, jule::Ptr<_1e5c8eacc_Token> _44848_errorToken) {
	if ((!(_1e5d7edcb_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_44832_enm))._field_Public, (*_44832_enm.alloc)._field_Token)))) {
		_1e5e0aebd_pushErr(_self_, _44848_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_44832_enm.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1e5e0b331_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1e5e0ed07__evalTypeEnum(_self_, _44832_enm);;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e10544__evalStruct(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5cc8c7b_StructIns> _45727_s) {
	jule::Ptr<_1e5e08c13_Data> _4587_d = jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_45727_s, (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data0)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_45727_s, &__jule_any_type9), ._field_Decl=true, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)});;
	if ((((*(_45727_s))._field_Decl != nullptr) && (*(*(_45727_s))._field_Decl.alloc)._field_Binded)) {
		(*((*(_4587_d))._field_Kind))._field_BindIdent=(*(*(_45727_s))._field_Decl.alloc)._field_Ident;
	};
	return _4587_d;;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e10940_evalStruct(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5cc5e21_Struct> _47130_s, jule::Ptr<_1e5c8eacc_Token> _47146_errorToken) {
	if ((!(_1e5d7edcb_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_47130_s))._field_Public, (*_47130_s.alloc)._field_Token)))) {
		_1e5e0aebd_pushErr(_self_, _47146_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_47130_s.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1e5e0b331_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1e5e110e4_checkDeprecated(_self_, &((*_47130_s.alloc)._field_Directives), _47146_errorToken);
	jule::Ptr<_1e5cc8c7b_StructIns> _4807_ins = _1e5cc63b6_instance(_47130_s);;
	if (((*_47130_s.alloc)._field_Generics.len() == 0LL)) {
		jule::Ptr<_1e5cc8c7b_StructIns> _4878_exist = _1e5cc66c4_appendInstance(_47130_s, &(_4807_ins));;
		if ((_4878_exist != nullptr)) {
			_4807_ins=_4878_exist;
		} else {
			if ((!(_1e5d98d5c_precheckStructIns((*(_self_))._field_s, &(_4807_ins), _47146_errorToken)))) {
				return nullptr;;
			};
		};
	};
	return _1e5e10544__evalStruct(_self_, _4807_ins);;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e10c81_evalFnIns(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5ce3416_FnIns> _50025_f) {
	return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_50025_f, (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data1)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_50025_f, &__jule_any_type7), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)});;
}



inline void _1e5e110e4_checkDeprecated(_1e5e0a93a_eval* _self_, jule::Slice<jule::Ptr<_1e5ca44a4_Directive>>* _50936_directives, jule::Ptr<_1e5c8eacc_Token> _50967_tok) {
	if (_1e5e0b9b3_isUnsafe(_self_)) {
		return;;
	};
	jule::Ptr<_1e5ca44a4_Directive> _5143_d = _1e5e33215_findDirective(_50936_directives, static_cast<jule::Str>(jule::Str::lit("deprecated", 10)));;
	if ((_5143_d != nullptr)) {
		if (((*_5143_d.alloc)._field_Args.len() == 0LL)) {
			_1e5e0aebd_pushErr(_self_, _50967_tok, static_cast<jule::Str>(jule::Str::lit("deprecated usage: @", 19)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("this code is deprecated", 23), &__jule_any_type4); __jule_collection; }));
		} else {
			_1e5e0aebd_pushErr(_self_, _50967_tok, static_cast<jule::Str>(jule::Str::lit("deprecated usage: @", 19)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_5143_d.alloc)._field_Args[0LL]))._field_Kind, &__jule_any_type4); __jule_collection; }));
		};
		_1e5e0b331_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use Unsafe Jule for deprecated codes or replace to successor", 60)), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e114e0_evalFn(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5ce0358_Fn> _52526_f, jule::Ptr<_1e5c8eacc_Token> _52534_errorToken) {
	if ((!(_1e5d7edcb_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_52526_f))._field_Public, (*_52526_f.alloc)._field_Token)))) {
		_1e5e0aebd_pushErr(_self_, _52534_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_52526_f.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1e5e0b331_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1e5e110e4_checkDeprecated(_self_, &((*_52526_f.alloc)._field_Directives), _52534_errorToken);
	jule::Ptr<_1e5ce3416_FnIns> _5347_ins = _1e5ce1aeb_instance(_52526_f);;
	if (((*_52526_f.alloc)._field_Generics.len() == 0LL)) {
		jule::Ptr<_1e5ce3416_FnIns> _5418_exist = _1e5ce1e09_appendInstance(_52526_f, &(_5347_ins));;
		if ((_5418_exist != nullptr)) {
			_5347_ins=_5418_exist;
		};
	};
	_1caeb4712_pushReference(_self_, &(_5347_ins));
	return _1e5e10c81_evalFnIns(_self_, _5347_ins);;
}



inline void _1e5e1190d_pushIllegalCycleError(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5da0bcc_Var>* _55038_v1, jule::Ptr<_1e5da0bcc_Var>* _55049_v2, _224497295_StrBuilder* _55064_message) {
	;
	jule::Str _5523_refers_to = _22578b7ec_Logf(static_cast<jule::Str>(jule::Str::lit("@ refers to @", 13)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_55038_v1))))._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*((*(_55049_v2))))._field_Ident, &__jule_any_type4); __jule_collection; }));;
	jule::Slice<jule::U8> _5533_buf = _2244a2338_Buf(_55064_message);;
	_2244a1090_WriteStr(_55064_message, _2256d6eb7_Repeat(jule::Str::lit(" ", 1), 7LL));
	_2244a1090_WriteStr(_55064_message, _5523_refers_to);
	_2244a1348_WriteByte(_55064_message, '\n');
	_2244a0cd7_Write(_55064_message, _5533_buf);
}



inline jule::Bool _1e5e11d09_checkCrossCycle(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5da0bcc_Var>* _56032_v, _224497295_StrBuilder* _56046_message) {
	{
		auto expr = &((*((*(_56032_v))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1caebb076:;
		if (it != expr_end) {
			jule::Ptr<_1e5da0bcc_Var> *_56110_d = it;
			{
				if (((*(_56110_d)) == (*(_self_))._field_owner)) {
					_1e5e1190d_pushIllegalCycleError(_self_, _56032_v, _56110_d, _56046_message);
					return false;;
				};
				if ((!(_1e5e11d09_checkCrossCycle(_self_, _56110_d, _56046_message)))) {
					_1e5e1190d_pushIllegalCycleError(_self_, _56032_v, _56110_d, _56046_message);
					return false;;
				};
			}
			_iter_next_1caebb076:;
			++it;
			goto _iter_begin_1caebb076;
		}
		_iter_end_1caebb076:;
	};
	return true;;
}



inline jule::Bool _1e5e12205_checkIllegalCycles(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5da0bcc_Var>* _57739_v, jule::Ptr<_1e5c8eacc_Token> _57748_declToken) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_owner == nullptr) || ((*((*(_self_))._field_owner))._field_Scope != nullptr))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_self_))._field_owner == (*(_57739_v)))) {
		_1e5e0aebd_pushErr(_self_, (*((*(_self_))._field_owner))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_owner))._field_Ident, &__jule_any_type4); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_224497295_StrBuilder _5907_message = static__2244a0b83_New(32LL);;
	if ((!(_1e5e11d09_checkCrossCycle(_self_, _57739_v, &(_5907_message))))) {
		jule::Str _5938_errMsg = _2244a1887_Str(&_5907_message);;
		_2244a1a85_Clear(&_5907_message);
		_1e5e1190d_pushIllegalCycleError(_self_, &((*(_self_))._field_owner), _57739_v, &(_5907_message));
		_5938_errMsg+=_2244a1887_Str(&_5907_message);
		_1e5e0aebd_pushErr(_self_, _57748_declToken, static_cast<jule::Str>(jule::Str::lit("illegal cross cycle in declarations;\n@", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_5938_errMsg, &__jule_any_type4); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{ jule::Slice<jule::Ptr<_1e5da0bcc_Var>> &__jule_push_dest = (*((*(_self_))._field_owner))._field_Depends; __jule_push_dest.push((*(_57739_v))); };
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e12601_evalVar(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5da0bcc_Var> _60527_v, jule::Ptr<_1e5c8eacc_Token> _60536_errorToken) {
	if ((!(_1e5d7edcb_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_60527_v))._field_Public, (*_60527_v.alloc)._field_Token)))) {
		_1e5e0aebd_pushErr(_self_, _60536_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_60527_v.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1e5e0b331_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1e5e110e4_checkDeprecated(_self_, &((*_60527_v.alloc)._field_Directives), _60536_errorToken);
	if (((*_60527_v.alloc)._field_Token == nullptr)) {
		goto _julec_label_1caed3951;
	};
	(*_60527_v.alloc)._field_Used=true;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data3)) {
			_case_begin_1caec4d0a:;
			{
				jule::Bool _6244_ok = _1e5e12205_checkIllegalCycles(_self_, &(_60527_v), _60536_errorToken);;
				if ((!(_6244_ok))) {
					return nullptr;;
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data0)) {
			_case_begin_1caec43ae:;
			{
				jule::Ptr<_1e5d40771_scopeChecker> _6298_s = (*(_self_))._field_lookup.cast_ptr<_1e5d40771_scopeChecker>((jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data0);;
				jule::Ptr<_1e5d40771_scopeChecker> _6308_root = _1e5d43b4d_getRoot(_6298_s);;
				if ((((((*_60527_v.alloc)._field_Scope != nullptr) && (!((*_60527_v.alloc)._field_Constant))) && ((*(_6308_root))._field_captured != nullptr)) && _1e5e3dd9c_isVarCaptured(_6308_root, _6298_s, _60527_v))) {
					_1e5d438b7_pushCaptured(_6308_root, &(_60527_v));
				};
				if (((!((*_60527_v.alloc)._field_Reference)) || _1e5e0b9b3_isUnsafe(_self_))) {
					goto _match_end_1caec4c72;
				};
				while ((((*_6298_s.alloc)._field_owner == nullptr) && ((*_6298_s.alloc)._field_parent != nullptr))) {
					{
						_6298_s=(*_6298_s.alloc)._field_parent;
					}
				_iter_next_1caec887a:;
				}
				_iter_end_1caec887a:;;
				if (((((*_6298_s.alloc)._field_owner != nullptr) && (*((*_6298_s.alloc)._field_owner))._field_Anon) && ((*_60527_v.alloc)._field_Scope != (*((*_6298_s.alloc)._field_owner))._field_Scope))) {
					_1e5e0aebd_pushErr(_self_, _60536_errorToken, static_cast<jule::Str>(jule::Str::lit("anonymous functions cannot access to reference definition @ of parent scope", 75)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_60527_v.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
				};
			}
		}
		_match_end_1caec4c72:;
	};
	if (((*_60527_v.alloc)._field_Scope == nullptr)) {
		_1caecb2b7_pushReference(_self_, &(_60527_v));
	};
	if (((((!((*_60527_v.alloc)._field_Binded)) && (*_60527_v.alloc)._field_Constant) && ((*_60527_v.alloc)._field_Scope == nullptr)) && (((*_60527_v.alloc)._field_Value == nullptr) || ((*((*_60527_v.alloc)._field_Value))._field_Data == nullptr)))) {
		jule::Ptr<_1e5e03548_SymbolTable> _6588_varfile = _1e5d5839e_findVarFileInPackage(&((*(*(_self_))._field_s.alloc)._field_files), &(_60527_v));;
		jule::Ptr<_1e5e03548_SymbolTable> _6598_file = _1e5d7de96_getCurrentFile((*(_self_))._field_s);;
		_1e5d7e24e_setCurrentFile((*(_self_))._field_s, _6588_varfile);
		_1e5d97256_checkVar((*(_self_))._field_s, &(_60527_v), jule::Trait((*(_self_))._field_s, (jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data3));
		_1e5d7e24e_setCurrentFile((*(_self_))._field_s, _6598_file);
		if ((((*_60527_v.alloc)._field_Value == nullptr) || ((*((*_60527_v.alloc)._field_Value))._field_Data == nullptr))) {
			return nullptr;;
		};
	};
	if ((((*_60527_v.alloc)._field_Kind == nullptr) || ((*((*_60527_v.alloc)._field_Kind))._field_Kind == nullptr))) {
		if (((*_60527_v.alloc)._field_Scope != nullptr)) {
			return nullptr;;
		};
		jule::Ptr<_1e5e03548_SymbolTable> _6888_varfile = _1e5d5839e_findVarFileInPackage(&((*(*(_self_))._field_s.alloc)._field_files), &(_60527_v));;
		jule::Ptr<_1e5e03548_SymbolTable> _6898_file = _1e5d7de96_getCurrentFile((*(_self_))._field_s);;
		_1e5d7e24e_setCurrentFile((*(_self_))._field_s, _6888_varfile);
		_1e5d97256_checkVar((*(_self_))._field_s, &(_60527_v), (*(_self_))._field_lookup);
		_1e5d7e24e_setCurrentFile((*(_self_))._field_s, _6898_file);
		if ((((*_60527_v.alloc)._field_Kind == nullptr) || ((*((*_60527_v.alloc)._field_Kind))._field_Kind == nullptr))) {
			return nullptr;;
		};
	};
	_julec_label_1caed3951:;
	jule::Ptr<_1e5e08c13_Data> _7047_d = jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=(*((*_60527_v.alloc)._field_Kind))._field_Kind, ._field_Mutable=(*_60527_v.alloc)._field_Mutable, ._field_Reference=(*_60527_v.alloc)._field_Reference, ._field_Lvalue=(!((*_60527_v.alloc)._field_Constant)), ._field_IsRune=false, ._field_Model=jule::Any(_60527_v, &__jule_any_type8), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)});;
	if ((((!((*_60527_v.alloc)._field_Binded)) && _1e5da10d9_IsInitialized(_60527_v)) && ((*((*_60527_v.alloc)._field_Value))._field_Data != nullptr))) {
		(*(_7047_d))._field_IsRune=(*((*((*_60527_v.alloc)._field_Value))._field_Data))._field_IsRune;
	};
	if (((*_60527_v.alloc)._field_Constant && ((*((*((*_60527_v.alloc)._field_Value))._field_Data))._field_Constant != nullptr))) {
		(*_7047_d.alloc)._field_Constant=jule::new_ptr<_1e21a449b_Const>((*(*((*((*(_60527_v))._field_Value))._field_Data))._field_Constant.alloc));
		(*_7047_d.alloc)._field_Model=jule::Any((*_7047_d.alloc)._field_Constant, &__jule_any_type20);
		if (_1e5da1606_untypedConstant(_60527_v)) {
			_1e5e0c057_applyNumericPrefix(_self_, &(_7047_d));
			(*_7047_d.alloc)._field_untyped=true;
		};
	};
	return _7047_d;;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e129ec_evalTypeAlias(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5e40a08_TypeAlias> _72833_ta, jule::Ptr<_1e5c8eacc_Token> _72849_errorToken) {
	if ((!(_1e5d7edcb_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_72833_ta))._field_Public, (*_72833_ta.alloc)._field_Token)))) {
		_1e5e0aebd_pushErr(_self_, _72849_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_72833_ta.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1e5e0b331_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_72833_ta.alloc)._field_Used=true;
	jule::Trait _7377_kind = (*((*((*_72833_ta.alloc)._field_Kind))._field_Kind))._field_Kind;;
	jule::Ptr<_1e5e08c13_Data> _73811_d = nullptr;;
	{
		auto &_match_expr{ _7377_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5e41344_Kind_mptr_data0)) {
			_case_begin_1caee1d8d:;
			{
				_73811_d=_1e5e10544__evalStruct(_self_, _7377_kind.cast_ptr<_1e5cc8c7b_StructIns>((jule::Trait::Type*)&_1e5e41344_Kind_mptr_data0));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5e41344_Kind_mptr_data3)) {
			_case_begin_1caee4b60:;
			{
				_73811_d=_1e5e0e5ba__evalEnum(_self_, _7377_kind.cast_ptr<_1e5d065c2_Enum>((jule::Trait::Type*)&_1e5e41344_Kind_mptr_data3));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5e41344_Kind_mptr_data4)) {
			_case_begin_1caee50e4:;
			{
				_73811_d=_1e5e0ed07__evalTypeEnum(_self_, _7377_kind.cast_ptr<_1e5d07ccc_TypeEnum>((jule::Trait::Type*)&_1e5e41344_Kind_mptr_data4));
			}
		}
		else {
			_case_begin_1caee0793:;
			{
				_73811_d=jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=(*(*((*(_72833_ta))._field_Kind))._field_Kind.alloc)._field_Kind}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)});
				if ((*_72833_ta.alloc)._field_Binded) {
					(*((*(_73811_d))._field_Kind))._field_BindIdent=(*_72833_ta.alloc)._field_Ident;
				} else {
					(*((*(_73811_d))._field_Kind))._field_BindIdent=(*(*((*(_72833_ta))._field_Kind))._field_Kind.alloc)._field_BindIdent;
				};
				(*(_73811_d))._field_Model=jule::Any((*_73811_d.alloc)._field_Kind, &__jule_any_type86);
			}
		}
		_match_end_1caee061c:;
	};
	(*((*(_73811_d))._field_Kind))._field_Generic=(*_72833_ta.alloc)._field_Generic;
	return _73811_d;;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e12de8_evalDef(_1e5e0a93a_eval* _self_, jule::Any* _76728_def, jule::Ptr<_1e5c8eacc_Token> _76742_ident) {
	{
		auto &_match_expr{ (*(_76728_def)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1caee87e0:;
			{
				return _1e5e12601_evalVar(_self_, (*(_76728_def)).cast_ptr<_1e5da0bcc_Var>(&__jule_any_type8), _76742_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1caee85ae:;
			{
				return _1e5e0e9b6_evalEnum(_self_, (*(_76728_def)).cast_ptr<_1e5d065c2_Enum>(&__jule_any_type24), _76742_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1caee8856:;
			{
				return _1e5e10203_evalTypeEnum(_self_, (*(_76728_def)).cast_ptr<_1e5d07ccc_TypeEnum>(&__jule_any_type25), _76742_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1caee88bc:;
			{
				return _1e5e10940_evalStruct(_self_, (*(_76728_def)).cast_ptr<_1e5cc5e21_Struct>(&__jule_any_type23), _76742_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1caee8933:;
			{
				jule::Ptr<_1e5ce0358_Fn> _7788_f = (*(_76728_def)).cast_ptr<_1e5ce0358_Fn>(&__jule_any_type26);;
				if ((!(*(_7788_f))._field_Ident.equal("init", 4))) {
					return _1e5e114e0_evalFn(_self_, _7788_f, _76742_ident);;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1caee89aa:;
			{
				return _1e5e10c81_evalFnIns(_self_, (*(_76728_def)).cast_ptr<_1e5ce3416_FnIns>(&__jule_any_type7));;
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1caee8a32:;
			{
				return _1e5e129ec_evalTypeAlias(_self_, (*(_76728_def)).cast_ptr<_1e5e40a08_TypeAlias>(&__jule_any_type27), _76742_ident);;
			}
		}
		_match_end_1caee86e1:;
	};
	_1e5e0aebd_pushErr(_self_, _76742_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_76742_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e13239_evalIdent(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5caabd6_IdentExpr> _79129_ident) {
	jule::Any _7927_def = _1e5e0dc3a_getDef(_self_, &((*(_79129_ident))._field_Ident), (*_79129_ident.alloc)._field_Binded);;
	return _1e5e12de8_evalDef(_self_, &(_7927_def), (*_79129_ident.alloc)._field_Token);;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e1357a_evalUnary(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Ptr<_1e5cab478_UnaryExpr> _79630_u) {
	_1e5e29c34_unaryEval _7977_unary = static__1e5e2a1a7_new(_self_);;
	return _1e5e2b5d7_eval(&_7977_unary, _79630_u);;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e138bb_evalVariadic(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Ptr<_1e5cab852_VariadicExpr> _80133_v) {
	if (((*(_80133_v))._field_Expr == nullptr)) {
		_1e5e0aebd_pushErr(_self_.ptr(), (*_80133_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1e5e417ea_TypeKind> _8077_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_8077_prefix;
	});;
	jule::Ptr<_1e5e08c13_Data> _8117_d = _1e5e297a0_evalExpr(_self_, (*_80133_v.alloc)._field_Expr);;
	if ((_8117_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1e5e43c1a_Variadicable((*(_8117_d))._field_Kind.ptr())))) {
		_1e5e0aebd_pushErr(_self_, (*_80133_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not variadicable", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*(_8117_d))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	_1e5e3d96d_makeVariadic(&(_8117_d), (*(_1e5e45007_Slc((*(_8117_d))._field_Kind)))._field_Elem);
	return _8117_d;;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e13c0c_evalUnsafe(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Ptr<_1e5caa730_UnsafeExpr> _82331_u) {
	jule::Bool _8243_unsafety = (*(_self_))._field_unsafety;;
	(*_self_.alloc)._field_unsafety=true;
	jule::Ptr<_1e5e08c13_Data> _8267_d = _1e5e297a0_evalExpr(_self_, (*(_82331_u))._field_Expr);;
	(*_self_.alloc)._field_unsafety=_8243_unsafety;
	return _8267_d;;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e1404d_evalArr(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Ptr<_1e5cb0922_SliceExpr> _83128_s) {
	jule::Ptr<_1e5e51233_Arr> _8337_pt = _1e5e44c71_Arr((*(_self_))._field_prefix.ptr());;
	jule::Ptr<_1e5e51233_Arr> _8357_arr = jule::new_ptr<_1e5e51233_Arr>(_1e5e51233_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=(*(_8337_pt))._field_Elem});;
	jule::Bool _8417_filled = false;;
	if (((*(_83128_s))._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ (*((*(_83128_s))._field_Exprs[1LL]))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type78) {
				_case_begin_1cb2c5171:;
				{
					if (((*((*((*(_83128_s))._field_Exprs[1LL]))._field_Kind.unsafe_cast_ptr<_1e5cab852_VariadicExpr>()))._field_Expr != nullptr)) {
						goto _match_end_1cb2c50b6;
					};
					if ((*_8337_pt.alloc)._field_Auto) {
						_1e5e0aebd_pushErr(_self_, (*_83128_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("auto-sized arrays cannot filled", 31)), jule::Slice<jule::Any>());
						return nullptr;;
					};
					_8417_filled=true;
					((*(_83128_s))._field_Exprs).mut_slice(0LL, 1LL);;
				}
			}
			_match_end_1cb2c50b6:;
		};
	};
	(*(_8357_arr))._field_N=(*_83128_s.alloc)._field_Exprs.len();
	if ((!((*_8337_pt.alloc)._field_Auto))) {
		if (((*_8357_arr.alloc)._field_N > (*_8337_pt.alloc)._field_N)) {
			_1e5e0aebd_pushErr(_self_, (*_83128_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
		} else if (((*_8357_arr.alloc)._field_N < (*_8337_pt.alloc)._field_N)) {
			(*_8357_arr.alloc)._field_N=(*_8337_pt.alloc)._field_N;
		};
	};
	jule::Ptr<_1e5cd8142_ArrayExprModel> _8707_model = jule::new_ptr<_1e5cd8142_ArrayExprModel>(_1e5cd8142_ArrayExprModel{._field_Kind=_8357_arr, ._field_Elems=jule::Slice<jule::Any>(nullptr)});;
	if (_8417_filled) {
		(*(_8707_model))._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, 2LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });
	} else {
		(*(_8707_model))._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, (*_83128_s.alloc)._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });
	};
	jule::Ptr<_1e5e417ea_TypeKind> _8797_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=(*_8357_arr.alloc)._field_Elem;
	{
		auto expr = &((*_83128_s.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb2cc189:;
		if (it != expr_end) {
			jule::Ptr<_1e5ca93bb_Expr> _88115_elem = *it;
			{
				jule::Ptr<_1e5e08c13_Data> _8828_d = _1e5e297a0_evalExpr(_self_, _88115_elem);;
				if ((_8828_d == nullptr)) {
					goto _iter_next_1cb2cc189;
				};
				;
				if (_1e5d8be71_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_8357_arr.alloc)._field_Elem), &(_8828_d), &((*(_88115_elem))._field_Token))) {
					_1e5d876db_checkAssignType((*(_self_))._field_s, false, &((*_8357_arr.alloc)._field_Elem), &(_8828_d), (*_88115_elem.alloc)._field_Token, _1e5e0dec1_getOwnerRefers(_self_));
				};
				(*(_8707_model))._field_Elems=jule::append((*_8707_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_8828_d))._field_Model; __jule_collection; }));
			}
			_iter_next_1cb2cc189:;
			++it;
			goto _iter_begin_1cb2cc189;
		}
		_iter_end_1cb2cc189:;
	};
	(*_self_.alloc)._field_prefix=_8797_prefix;
	if (_8417_filled) {
		(*_8707_model.alloc)._field_Elems=jule::append((*_8707_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = nullptr; __jule_collection; }));
	};
	return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_8357_arr, (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data27)}), ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8707_model, &__jule_any_type87), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)});;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e14504_evalExpSlc(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Ptr<_1e5cb0922_SliceExpr> _90831_s, jule::Ptr<_1e5e417ea_TypeKind> _90850_t, jule::Any _90868_first) {
	jule::Ptr<_1e5e4de12_Slc> _9097_slc = jule::new_ptr<_1e5e4de12_Slc>(_1e5e4de12_Slc{._field_Elem=_90850_t});;
	jule::I64 _9137_i = 0LL;;
	jule::Ptr<_1e5cd520a_SliceExprModel> _9147_model = jule::new_ptr<_1e5cd520a_SliceExprModel>(_1e5cd520a_SliceExprModel{._field_ElemKind=_90850_t, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, (*(_90831_s))._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
	if ((_90868_first != nullptr)) {
		(*(_9147_model))._field_Elems=jule::append((*_9147_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _90868_first; __jule_collection; }));
		_9137_i=1LL;
	};
	jule::Ptr<_1e5e417ea_TypeKind> _9237_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=(*(_9097_slc))._field_Elem;
	{
		auto expr = (*_90831_s.alloc)._field_Exprs.slice(_9137_i);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1cb2d7ddc:;
		if (it != expr_end) {
			jule::Ptr<_1e5ca93bb_Expr> _92515_elem = *it;
			{
				jule::Ptr<_1e5e08c13_Data> _9268_d = _1e5e297a0_evalExpr(_self_, _92515_elem);;
				if ((_9268_d != nullptr)) {
					;
					if (_1e5d8be71_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_9097_slc.alloc)._field_Elem), &(_9268_d), &((*(_92515_elem))._field_Token))) {
						_1e5d876db_checkAssignType((*(_self_))._field_s, false, &((*_9097_slc.alloc)._field_Elem), &(_9268_d), (*_92515_elem.alloc)._field_Token, _1e5e0dec1_getOwnerRefers(_self_));
					};
					(*_9147_model.alloc)._field_Elems=jule::append((*_9147_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*_9268_d.alloc)._field_Model; __jule_collection; }));
				};
			}
			_iter_next_1cb2d7ddc:;
			++it;
			goto _iter_begin_1cb2d7ddc;
		}
		_iter_end_1cb2d7ddc:;
	};
	(*_self_.alloc)._field_prefix=_9237_prefix;
	return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_9097_slc, (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data24)}), ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_9147_model, &__jule_any_type79), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)});;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e14845_evalSliceExpr(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Ptr<_1e5cb0922_SliceExpr> _94634_s) {
	if (((*(_self_))._field_prefix != nullptr)) {
		{
			
			if ((_1e5e44c71_Arr((*(_self_))._field_prefix) != nullptr)) {
				_case_begin_1cb2dcb28:;
				{
					return _1e5e1404d_evalArr(_self_, _94634_s);;
				}
			}
			else if ((_1e5e45007_Slc((*(_self_))._field_prefix) != nullptr)) {
				_case_begin_1cb2dcbc2:;
				{
					jule::Ptr<_1e5e4de12_Slc> _9529_pt = _1e5e45007_Slc((*(_self_))._field_prefix);;
					return _1e5e14504_evalExpSlc(_self_, _94634_s, (*(_9529_pt))._field_Elem, nullptr);;
				}
			}
			_match_end_1cb2dca6d:;
		};
	};
	jule::Ptr<_1e5e417ea_TypeKind> _9577_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	if (((*(_94634_s))._field_Exprs.len() == 0LL)) {
		_1e5e0aebd_pushErr(_self_, (*_94634_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("dynamic type annotation failed", 30)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1e5ca93bb_Expr> _9657_firstExpr = (*_94634_s.alloc)._field_Exprs[0LL];;
	jule::Ptr<_1e5e08c13_Data> _9667_firstElem = _1e5e297a0_evalExpr(_self_, _9657_firstExpr);;
	if ((_9667_firstElem == nullptr)) {
		return nullptr;;
	};
	;
	_1e5d8be71_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*(_9667_firstElem))._field_Kind), &(_9667_firstElem), &((*(_9657_firstExpr))._field_Token));
	jule::Ptr<_1e5e08c13_Data> _9767_d = _1e5e14504_evalExpSlc(_self_, _94634_s, (*(_9667_firstElem))._field_Kind, (*(_9667_firstElem))._field_Model);;
	(*_self_.alloc)._field_prefix=_9577_prefix;
	return _9767_d;;
}



inline jule::Bool _1e5e14c41_checkIntegerIndexingByData(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5e08c13_Data>* _98247_d, jule::Ptr<_1e5c8eacc_Token> _98261_token) {
	jule::Str _9833_errKey = _1e5e3b350_checkDataForIntegerIndexing(&((*(_self_))._field_s), _98247_d, &(_98261_token), _1e5e0dec1_getOwnerRefers(_self_));;
	{
		auto &_match_expr{ _9833_errKey };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str())) {
			_case_begin_1cb2e5c85:;
			{
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("type @ is invalid for indexing", 30))) {
			_case_begin_1cb2e5966:;
			{
				_1e5e0aebd_pushErr(_self_, _98261_token, _9833_errKey, ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*((*(_98247_d))))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
			}
		}
		else {
			_case_begin_1cb2e52b2:;
			{
				_1e5e0aebd_pushErr(_self_, _98261_token, _9833_errKey, jule::Slice<jule::Any>());
			}
		}
		_match_end_1cb2e5900:;
	};
	return false;;
}



inline void _1e5e1515e_indexingPtr(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5e08c13_Data>* _99532_d, jule::Ptr<_1e5e08c13_Data>* _99547_index, jule::Ptr<_1e5cb137e_IndexingExpr>* _99566_i) {
	_1e5e14c41_checkIntegerIndexingByData(_self_, _99547_index, (*((*(_99566_i))))._field_Token);
	(*((*(_99532_d))))._field_Lvalue=true;
	jule::Ptr<_1e5e51c06_Ptr> _9997_ptr = _1e5e444bd_Ptr((*((*(_99532_d))))._field_Kind.ptr());;
	{
		
		if (_1e5e52773_IsUnsafe(_9997_ptr.ptr())) {
			_case_begin_1cb2e8b56:;
			{
				_1e5e0aebd_pushErr(_self_, (*((*(_99566_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("unsafe pointers are not supports indexing", 41)), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_1e5e0b9b3_isUnsafe(_self_)))) {
			_case_begin_1cb2e8bde:;
			{
				_1e5e0aebd_pushErr(_self_, (*((*(_99566_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1cb2e8aac:;
	};
	(*((*(_99532_d))))._field_Kind=(*(_9997_ptr))._field_Elem;
}



inline void _1e5e1557c_indexingArr(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5e08c13_Data>* _101132_d, jule::Ptr<_1e5e08c13_Data>* _101147_index, jule::Ptr<_1e5cb137e_IndexingExpr>* _101166_i) {
	jule::Ptr<_1e5e51233_Arr> _10127_arr = _1e5e44c71_Arr((*((*(_101132_d))))._field_Kind.ptr());;
	(*((*(_101132_d))))._field_Kind=(*(_10127_arr))._field_Elem;
	_1e5e14c41_checkIntegerIndexingByData(_self_, _101147_index, (*((*(_101166_i))))._field_Token);
	(*((*(_101132_d))))._field_Lvalue=true;
	if ((_1e5e0964d_IsConst((*(_101147_index)).ptr()) && (_1e21a7191_AsF64((*((*(_101147_index))))._field_Constant.ptr()) >= static_cast<jule::F64>((*_10127_arr.alloc)._field_N)))) {
		_1e5e0aebd_pushErr(_self_, (*((*(_101166_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
	};
}



inline void _1e5e1599a_indexingSlc(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5e08c13_Data>* _102132_d, jule::Ptr<_1e5e08c13_Data>* _102147_index, jule::Ptr<_1e5cb137e_IndexingExpr>* _102166_i) {
	jule::Ptr<_1e5e4de12_Slc> _10227_slc = _1e5e45007_Slc((*((*(_102132_d))))._field_Kind.ptr());;
	(*((*(_102132_d))))._field_Kind=(*(_10227_slc))._field_Elem;
	_1e5e14c41_checkIntegerIndexingByData(_self_, _102147_index, (*((*(_102166_i))))._field_Token);
	(*((*(_102132_d))))._field_Lvalue=true;
	if ((!(_1e5e0964d_IsConst((*(_102147_index)).ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_102132_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1cb301378:;
			{
				jule::Ptr<_1e5cd520a_SliceExprModel> _10338_m = (*((*(_102132_d))))._field_Model.unsafe_cast_ptr<_1e5cd520a_SliceExprModel>();;
				jule::F64 _10344_indx = _1e21a7191_AsF64((*((*(_102147_index))))._field_Constant.ptr());;
				if ((_10344_indx >= static_cast<jule::F64>((*(_10338_m))._field_Elems.len()))) {
					_1e5e0aebd_pushErr(_self_, (*((*(_102166_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
				} else {
					(*((*(_102132_d))))._field_Model=(*(_10338_m))._field_Elems[static_cast<jule::I64>(static_cast<jule::U64>(_10344_indx))];
					(*((*(_102132_d))))._field_Decl=true;
				};
			}
		}
		_match_end_1cb301312:;
	};
}



inline void _1e5e15db8_indexingMap(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5e08c13_Data>* _104432_d, jule::Ptr<_1e5e08c13_Data>* _104447_index, jule::Ptr<_1e5cb137e_IndexingExpr>* _104466_i) {
	(*((*(_104432_d))))._field_Lvalue=true;
	if (((*(_104447_index)) == nullptr)) {
		return;;
	};
	jule::Ptr<_1e5e505a6_Map> _10497_m = _1e5e45a41_Map((*((*(_104432_d))))._field_Kind.ptr());;
	_1e5de2328_assignTypeChecker _10507_atc = _1e5de2328_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_10497_m))._field_Key, ._field_d=(*(_104447_index)), ._field_errorToken=(*((*(_104466_i))))._field_Token, ._field_refers=_1e5e0dec1_getOwnerRefers(_self_)};;
	_1e5de3329_check(&_10507_atc);
	(*((*(_104432_d))))._field_Kind=(*_10497_m.alloc)._field_Val;
}



inline void _1e5e162d6_indexingStr(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5e08c13_Data>* _106132_d, jule::Ptr<_1e5e08c13_Data>* _106147_index, jule::Ptr<_1e5cb137e_IndexingExpr>* _106166_i) {
	(*((*(_106132_d))))._field_Kind=_1e60283b5_primU8;
	(*((*(_106132_d))))._field_Mutable=false;
	(*((*(_106132_d))))._field_Lvalue=true;
	if (((*(_106147_index)) == nullptr)) {
		return;;
	};
	_1e5e14c41_checkIntegerIndexingByData(_self_, _106147_index, (*((*(_106166_i))))._field_Token);
	if ((!(_1e5e0964d_IsConst((*(_106147_index)).ptr())))) {
		(*((*(_106132_d))))._field_Constant=nullptr;
		(*((*(_106132_d))))._field_untyped=false;
		return;;
	};
	if (_1e5e0964d_IsConst((*(_106132_d)).ptr())) {
		jule::I64 _10794_j = _1e21a6b74_AsI64((*((*(_106147_index))))._field_Constant.ptr());;
		jule::Str _10804_s = _1e21a6657_ReadStr((*((*(_106132_d))))._field_Constant);;
		if ((static_cast<jule::I64>(_10794_j) >= _10804_s.len())) {
			_1e5e0aebd_pushErr(_self_, (*((*(_106166_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
		} else {
			_1e21a7702_SetU64((*((*(_106132_d))))._field_Constant, static_cast<jule::U64>(_10804_s[_10794_j]));
		};
	};
}



inline void _1e5e16704_comptimeRange(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5e08c13_Data>* _108934_d, jule::Ptr<_1e5e08c13_Data>* _108949_index, jule::Ptr<_1e5cb137e_IndexingExpr>* _108968_i) {
	if (((*(_108949_index)) == nullptr)) {
		(*(_108934_d))=nullptr;
		return;;
	};
	if ((!(_1e5e14c41_checkIntegerIndexingByData(_self_, _108949_index, (*((*((*(_108968_i))))._field_Index))._field_Token)))) {
		(*(_108934_d))=nullptr;
		return;;
	};
	if ((!(_1e5e0964d_IsConst((*(_108949_index)).ptr())))) {
		(*(_108934_d))=nullptr;
		_1e5e0aebd_pushErr(_self_, (*(*((*(_108968_i))))._field_Index.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		return;;
	};
	jule::I64 _11043_j = static_cast<jule::I64>(_1e21a6b74_AsI64((*((*(_108949_index))))._field_Constant.ptr()));;
	jule::Ptr<_1e5d0a708_comptimeRange> _11057_ci = _1e5e4734a_comptimeRange((*((*(_108934_d))))._field_Kind.ptr());;
	if ((_11043_j >= ((_1e5d0a4d8_comptimeRangeKindMptrData*)(*(_11057_ci))._field_kind.safe_type())->_1e5d0a384_len((*(_11057_ci))._field_kind.data))) {
		(*(_108934_d))=nullptr;
		_1e5e0aebd_pushErr(_self_, (*(*((*(_108968_i))))._field_Index.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
		return;;
	};
	((_1e5d0a4d8_comptimeRangeKindMptrData*)(*_11057_ci.alloc)._field_kind.safe_type())->_1e5d0986c_index((*_11057_ci.alloc)._field_kind.data, _108934_d, _11043_j);
}



inline void _1e5e16b22_toIndexing(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5e08c13_Data>* _111431_d, jule::Ptr<_1e5e08c13_Data>* _111446_index, jule::Ptr<_1e5cb137e_IndexingExpr>* _111465_i) {
	{
		
		if ((_1e5e444bd_Ptr((*((*(_111431_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cb312c3b:;
			{
				_1e5e1515e_indexingPtr(_self_, _111431_d, _111446_index, _111465_i);
				return;;
			}
		}
		else if ((_1e5e44c71_Arr((*((*(_111431_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cb312cd5:;
			{
				_1e5e1557c_indexingArr(_self_, _111431_d, _111446_index, _111465_i);
				return;;
			}
		}
		else if ((_1e5e45007_Slc((*((*(_111431_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cb312d4b:;
			{
				_1e5e1599a_indexingSlc(_self_, _111431_d, _111446_index, _111465_i);
				return;;
			}
		}
		else if ((_1e5e45a41_Map((*((*(_111431_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cb312db2:;
			{
				_1e5e15db8_indexingMap(_self_, _111431_d, _111446_index, _111465_i);
				return;;
			}
		}
		else if ((_1e5e43ea1_Prim((*((*(_111431_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cb312e28:;
			{
				jule::Ptr<_1e5e49913_Prim> _11294_prim = _1e5e43ea1_Prim((*((*(_111431_d))))._field_Kind);;
				{
					
					if (_1e5e4cdcd_IsStr(_11294_prim.ptr())) {
						_case_begin_1cb31723a:;
						{
							_1e5e162d6_indexingStr(_self_, _111431_d, _111446_index, _111465_i);
							return;;
						}
					}
					_match_end_1cb317180:;
				};
			}
		}
		else if ((_1e5e4734a_comptimeRange((*((*(_111431_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cb312ea0:;
			{
				_1e5e16704_comptimeRange(_self_, _111431_d, _111446_index, _111465_i);
				return;;
			}
		}
		_match_end_1cb312ac6:;
	};
	_1e5e0aebd_pushErr(_self_, (*((*(_111465_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not support indexing", 30)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*((*(_111431_d))))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
}



inline jule::Bool _1e5e170c8_pushGenericsFromExprSubIdent(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Ptr<_1e5cac4ce_SubIdentExpr>* _114250_sexpr, jule::Slice<jule::Ptr<_1e5ca5087_TypeDecl>>* _11438_generics, jule::Ptr<_1e5ca93bb_Expr>* _114336_expr) {
	jule::Ptr<_1e5ca595b_SubIdentTypeDecl> _11447_t = jule::new_ptr<_1e5ca595b_SubIdentTypeDecl>(_1e5ca595b_SubIdentTypeDecl{._field_Idents=jule::Slice<jule::Ptr<_1e5ca5692_IdentTypeDecl>>(nullptr)});;
	if ((!(_1e5e3c3c8_pushSubIdentFromExpr(jule::Any((*(_114250_sexpr)), &__jule_any_type88), &(_11447_t))))) {
		_1e5e0aebd_pushErr(_self_.ptr(), (*((*(_114336_expr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return false;;
	};
	{ jule::Slice<jule::Ptr<_1e5ca5087_TypeDecl>> &__jule_push_dest = (*(_11438_generics)); __jule_push_dest.push(jule::new_ptr<_1e5ca5087_TypeDecl>(_1e5ca5087_TypeDecl{._field_Token=jule::Ptr<_1e5c8eacc_Token>(nullptr), ._field_Kind=jule::Any(_11447_t, &__jule_any_type89)})); };
	return true;;
}



inline jule::Bool _1e5e174c4_pushGenericsFromData(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Slice<jule::Ptr<_1e5ca5087_TypeDecl>>* _115342_generics, jule::Ptr<_1e5ca93bb_Expr>* _115370_expr) {
	{
		auto &_match_expr{ (*((*(_115370_expr))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1cb31dce1:;
			{
				jule::Ptr<_1e5cab478_UnaryExpr> _11568_u = (*((*(_115370_expr))))._field_Kind.unsafe_cast_ptr<_1e5cab478_UnaryExpr>();;
				{
					auto &_match_expr{ (*((*(_11568_u))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(62LLU)) {
						_case_begin_1cb322e5a:;
						{
							jule::Ptr<_1e5ca6ab1_PtrTypeDecl> _11599_kind = jule::new_ptr<_1e5ca6ab1_PtrTypeDecl>(_1e5ca6ab1_PtrTypeDecl{._field_Elem=jule::Ptr<_1e5ca5087_TypeDecl>(nullptr)});;
							jule::Slice<jule::Ptr<_1e5ca5087_TypeDecl>> _11609__generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5ca5087_TypeDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1e5ca5087_TypeDecl>(nullptr); __jule_collection; });;
							_1e5e174c4_pushGenericsFromData(_self_, &(_11609__generics), &((*(_11568_u))._field_Expr));
							(*_11599_kind.alloc)._field_Elem=_11609__generics[0LL];
							{ jule::Slice<jule::Ptr<_1e5ca5087_TypeDecl>> &__jule_push_dest = (*(_115342_generics)); __jule_push_dest.push(jule::new_ptr<_1e5ca5087_TypeDecl>(_1e5ca5087_TypeDecl{._field_Token=(*((*(_115370_expr))))._field_Token, ._field_Kind=jule::Any(_11599_kind, &__jule_any_type73)})); };
						}
					}
					else if (_match_expr == static_cast<jule::U64>(65LLU)) {
						_case_begin_1cb324b3d:;
						{
							jule::Ptr<_1e5ca6132_SptrTypeDecl> _11689_kind = jule::new_ptr<_1e5ca6132_SptrTypeDecl>(_1e5ca6132_SptrTypeDecl{._field_Elem=jule::Ptr<_1e5ca5087_TypeDecl>(nullptr)});;
							jule::Slice<jule::Ptr<_1e5ca5087_TypeDecl>> _11699__generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5ca5087_TypeDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1e5ca5087_TypeDecl>(nullptr); __jule_collection; });;
							_1e5e174c4_pushGenericsFromData(_self_, &(_11699__generics), &((*(_11568_u))._field_Expr));
							(*_11689_kind.alloc)._field_Elem=_11699__generics[0LL];
							{ jule::Slice<jule::Ptr<_1e5ca5087_TypeDecl>> &__jule_push_dest = (*(_115342_generics)); __jule_push_dest.push(jule::new_ptr<_1e5ca5087_TypeDecl>(_1e5ca5087_TypeDecl{._field_Token=(*((*(_115370_expr))))._field_Token, ._field_Kind=jule::Any(_11689_kind, &__jule_any_type74)})); };
						}
					}
					else {
						_case_begin_1cb323796:;
						{
							_1e5e0aebd_pushErr(_self_.ptr(), (*(_11568_u))._field_Op, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
							return false;;
						}
					}
					_match_end_1cb322a81:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1cb320133:;
			{
				{ jule::Slice<jule::Ptr<_1e5ca5087_TypeDecl>> &__jule_push_dest = (*(_115342_generics)); __jule_push_dest.push((*((*(_115370_expr))))._field_Kind.cast_ptr<_1e5ca5087_TypeDecl>(&__jule_any_type91)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1cb320199:;
			{
				jule::Ptr<_1e5cac4ce_SubIdentExpr> _11838_sexpr = (*((*(_115370_expr))))._field_Kind.unsafe_cast_ptr<_1e5cac4ce_SubIdentExpr>();;
				return _1e5e170c8_pushGenericsFromExprSubIdent(_self_, &(_11838_sexpr), _115342_generics, _115370_expr);;
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1cb31d120:;
			{
				jule::Ptr<_1e5caabd6_IdentExpr> _11868_ident = (*((*(_115370_expr))))._field_Kind.unsafe_cast_ptr<_1e5caabd6_IdentExpr>();;
				{ jule::Slice<jule::Ptr<_1e5ca5087_TypeDecl>> &__jule_push_dest = (*(_115342_generics)); __jule_push_dest.push(jule::new_ptr<_1e5ca5087_TypeDecl>(_1e5ca5087_TypeDecl{._field_Token=jule::Ptr<_1e5c8eacc_Token>(nullptr), ._field_Kind=jule::Any(jule::new_ptr<_1e5ca5692_IdentTypeDecl>(_1e5ca5692_IdentTypeDecl{._field_Token=(*_11868_ident.alloc)._field_Token, ._field_Ident=(*_11868_ident.alloc)._field_Ident, ._field_Binded=(*(_11868_ident))._field_Binded, ._field_Generics=jule::Slice<jule::Ptr<_1e5ca5087_TypeDecl>>(nullptr)}), &__jule_any_type77)})); };
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1cb31d186:;
			{
				{
					auto expr = &((*((*((*(_115370_expr))))._field_Kind.unsafe_cast_ptr<_1e5ca9eb0_TupleExpr>()))._field_Expr);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cb32dce0:;
					if (it != expr_end) {
						jule::Ptr<_1e5ca93bb_Expr> _119516_texpr = *it;
						{
							if ((!(_1e5e174c4_pushGenericsFromData(_self_, _115342_generics, &(_119516_texpr))))) {
								return false;;
							};
						}
						_iter_next_1cb32dce0:;
						++it;
						goto _iter_begin_1cb32dce0;
					}
					_iter_end_1cb32dce0:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1cb31d1ec:;
			{
				jule::Ptr<_1e5cac105_NsSelectionExpr> _12018_ns = (*((*(_115370_expr))))._field_Kind.unsafe_cast_ptr<_1e5cac105_NsSelectionExpr>();;
				jule::Ptr<_1e5ca5692_IdentTypeDecl> _12028_decl = jule::new_ptr<_1e5ca5692_IdentTypeDecl>(_1e5ca5692_IdentTypeDecl{._field_Token=(*(_12018_ns))._field_Ident, ._field_Ident=(*((*_12018_ns.alloc)._field_Ident))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1e5ca5087_TypeDecl>>(nullptr)});;
				{ jule::Slice<jule::Ptr<_1e5ca5087_TypeDecl>> &__jule_push_dest = (*(_115342_generics)); __jule_push_dest.push(jule::new_ptr<_1e5ca5087_TypeDecl>(_1e5ca5087_TypeDecl{._field_Token=(*(_12028_decl))._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1e5ca5d35_NamespaceTypeDecl>(_1e5ca5d35_NamespaceTypeDecl{._field_Idents=(*_12018_ns.alloc)._field_Ns, ._field_Kind=jule::new_ptr<_1e5ca5087_TypeDecl>(_1e5ca5087_TypeDecl{._field_Token=(*_12028_decl.alloc)._field_Token, ._field_Kind=jule::Any(_12028_decl, &__jule_any_type77)})}), &__jule_any_type93)})); };
			}
		}
		else {
			_case_begin_1cb31b409:;
			{
				_1e5e0aebd_pushErr(_self_.ptr(), (*((*(_115370_expr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1cb31b393:;
	};
	return true;;
}



inline void _1e5e17837_evalIdentDeclFromIndexing(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Ptr<_1e5e08c13_Data>* _122347_d, jule::Ptr<_1e5cb137e_IndexingExpr>* _122362_i) {
	jule::Ptr<_1e5cc8c7b_StructIns> _12247_s = _1e5e45524_Struct((*((*(_122347_d))))._field_Kind.ptr());;
	if ((_12247_s == nullptr)) {
		_1e5e0aebd_pushErr(_self_.ptr(), (*((*((*(_122362_i))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*((*(_122347_d))))._field_Kind), &__jule_any_type4); __jule_collection; }));
		(*(_122347_d))=nullptr;
		return;;
	};
	jule::Ptr<_1e5ca5692_IdentTypeDecl> _123111_decl = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_122362_i))))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1c802b79e:;
			{
				jule::Ptr<_1e5caabd6_IdentExpr> _12348_expr = (*((*((*(_122362_i))))._field_Expr))._field_Kind.unsafe_cast_ptr<_1e5caabd6_IdentExpr>();;
				_123111_decl=jule::new_ptr<_1e5ca5692_IdentTypeDecl>(_1e5ca5692_IdentTypeDecl{._field_Token=(*_12348_expr.alloc)._field_Token, ._field_Ident=(*_12348_expr.alloc)._field_Ident, ._field_Binded=(*(_12348_expr))._field_Binded, ._field_Generics=jule::Slice<jule::Ptr<_1e5ca5087_TypeDecl>>(nullptr)});
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1c802cc78:;
			{
				jule::Ptr<_1e5cac105_NsSelectionExpr> _12418_expr = (*((*((*(_122362_i))))._field_Expr))._field_Kind.unsafe_cast_ptr<_1e5cac105_NsSelectionExpr>();;
				_123111_decl=jule::new_ptr<_1e5ca5692_IdentTypeDecl>(_1e5ca5692_IdentTypeDecl{._field_Token=(*(_12418_expr))._field_Ident, ._field_Ident=(*((*_12418_expr.alloc)._field_Ident))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1e5ca5087_TypeDecl>>(nullptr)});
			}
		}
		else {
			_case_begin_1c802bcbb:;
			{
				_1e5e0aebd_pushErr(_self_, (*((*(_122362_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				(*(_122347_d))=nullptr;
				return;;
			}
		}
		_match_end_1c802bc55:;
	};
	if ((!(_1e5e174c4_pushGenericsFromData(_self_, &((*(_123111_decl))._field_Generics), &((*((*(_122362_i))))._field_Index))))) {
		(*(_122347_d))=nullptr;
		return;;
	};
	_12247_s=({ auto _wrap_copy = _1e5e1e333_typeChecker(_self_); _1e5e58081_fromStruct(&_wrap_copy, &(_123111_decl), &((*(_12247_s))._field_Decl)); });
	if ((_12247_s == nullptr)) {
		(*(_122347_d))=nullptr;
		return;;
	};
	(*(*((*(_122347_d))))._field_Kind.alloc)._field_Kind=jule::Trait(_12247_s, (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data0);
}



inline __jule_tuple_bool__jule_tuple_bool _1e5e17cdd_checkGenericFn(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Ptr<_1e5ce3416_FnIns>* _126636_f, jule::Ptr<_1e5c8eacc_Token>* _126652_et, jule::Any* _126669_model) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1e5ce3416_FnIns> _12677_old = (*(_126636_f));;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1e5d97c4b_checkGenericFn((*(_self_))._field_s, _126636_f, _126652_et);
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if ((__jule_func_result.__jule_result_arg0 && __jule_func_result.__jule_result_arg1)) {
		_1e5e3c054_updateModelToGenericIns(_126669_model, _126636_f);
		_1c8034a71_updateRefer(_1e5e0dec1_getOwnerRefers(_self_), &(_12677_old), _126636_f);
	};
	return __jule_func_result;;
}



inline void _1e5e18151_evalFnGenericFromIndexing(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Ptr<_1e5e08c13_Data>* _128247_d, jule::Ptr<_1e5cb137e_IndexingExpr>* _128262_i) {
	jule::Slice<jule::Ptr<_1e5ca5087_TypeDecl>> _12837_generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5ca5087_TypeDecl>>::alloc(0LL, 8LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1e5ca5087_TypeDecl>(nullptr); __jule_collection; });;
	if ((!(_1e5e174c4_pushGenericsFromData(_self_, &(_12837_generics), &((*((*(_128262_i))))._field_Index))))) {
		(*(_128247_d))=nullptr;
		return;;
	};
	jule::Ptr<_1e5ce3416_FnIns> _12897_f = _1e5e4528d_Fn((*((*(_128247_d))))._field_Kind.ptr());;
	jule::I64 _12907_genericsLen = 0LL;;
	if (((*(_12897_f))._field_Decl != nullptr)) {
		_12907_genericsLen=(*(*(_12897_f))._field_Decl.alloc)._field_Generics.len();
	};
	if ((!(_1e5d80b9b_checkGenericQuantity((*_self_.alloc)._field_s.ptr(), _12907_genericsLen, _12837_generics.len(), (*((*((*(_128262_i))))._field_Expr))._field_Token)))) {
		(*(_128247_d))=nullptr;
		return;;
	};
	(*_12897_f.alloc)._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>::alloc(0LL, (*(*(_12897_f))._field_Decl.alloc)._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1e5e3ee14_InsGeneric>(nullptr); __jule_collection; });
	{
		auto expr = &(_12837_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c803a725:;
		if (it != expr_end) {
			jule::Ptr<_1e5ca5087_TypeDecl> _130115_g = *it;
			{
				jule::Ptr<_1e5e08c13_Data> _13028_k = _1e5e1e674_evalType(_self_, _130115_g);;
				if ((_13028_k == nullptr)) {
					(*(_128247_d))=nullptr;
					return;;
				};
				(*_12897_f.alloc)._field_Generics=jule::append((*_12897_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1e5e3ee14_InsGeneric>(_1e5e3ee14_InsGeneric{._field_Kind=(*(_13028_k))._field_Kind, ._field_Constraint=jule::Slice<jule::Ptr<_1e5e417ea_TypeKind>>(nullptr)}); __jule_collection; }));
			}
			_iter_next_1c803a725:;
			++it;
			goto _iter_begin_1c803a725;
		}
		_iter_end_1c803a725:;
	};
	if (_1e5ce48ce_IsBuiltin(_12897_f)) {
		return;;
	};
	jule::Bool _13143_ok;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1e5e17cdd_checkGenericFn(_self_, &(_12897_f), &((*(*((*(_128262_i))))._field_Expr.alloc)._field_Token), &((*((*(_128247_d))))._field_Model));
		_13143_ok = __jule_assign_result.__jule_result_arg0;
	});
	if (_13143_ok) {
		(*(*((*(_128247_d))))._field_Kind.alloc)._field_Kind=jule::Trait(_12897_f, (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data1);
	} else {
		(*(_128247_d))=nullptr;
	};
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e18492_evalIndexing(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Ptr<_1e5cb137e_IndexingExpr> _132233_i) {
	jule::Ptr<_1e5e417ea_TypeKind> _13237_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_13237_prefix;
	});;
	jule::Ptr<_1e5e08c13_Data> _13277_d = _1e5e2898b_evalExprKind(_self_, (*((*(_132233_i))._field_Expr))._field_Kind);;
	if ((_13277_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_13277_d))._field_Decl) {
		_1e5e17837_evalIdentDeclFromIndexing(_self_, &(_13277_d), &(_132233_i));
		return _13277_d;;
	};
	if ((_1e5e4528d_Fn((*(_13277_d))._field_Kind.ptr()) != nullptr)) {
		_1e5e18151_evalFnGenericFromIndexing(_self_, &(_13277_d), &(_132233_i));
		return _13277_d;;
	};
	_1e5e08c13_Data _13437_oldData = (*(_13277_d));;
	jule::Ptr<_1e5e08c13_Data> _13457_index = _1e5e297a0_evalExpr(_self_, (*_132233_i.alloc)._field_Index);;
	if ((_13457_index == nullptr)) {
		return nullptr;;
	};
	_1e5d53201_makeComptimeRange(&(_13277_d));
	(*(_13277_d))._field_Decl=false;
	_1e5e16b22_toIndexing(_self_, &(_13277_d), &(_13457_index), &(_132233_i));
	if ((_13277_d == nullptr)) {
		return nullptr;;
	};
	if (_1e5e0964d_IsConst(_13277_d.ptr())) {
		(*(_13277_d))._field_Decl=false;
		(*(_13277_d))._field_Model=jule::Any((*(_13277_d))._field_Constant, &__jule_any_type20);
	} else if ((*(_13277_d))._field_Decl) {
		(*(_13277_d))._field_Decl=false;
	} else {
		(*(_13277_d))._field_Model=jule::Any(jule::new_ptr<_1e5cd56b1_IndexingExprModel>(_1e5cd56b1_IndexingExprModel{._field_Token=(*_132233_i.alloc)._field_Token, ._field_Expr=jule::new_ptr<_1e5e08c13_Data>(_13437_oldData), ._field_Index=_13457_index}), &__jule_any_type52);
	};
	return _13277_d;;
}



inline __jule_tuple_x_1e5e08c13_Data__jule_tuple_x_1e5e08c13_Data _1e5e187d3_evalSlicingExprs(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Ptr<_1e5cb19de_SlicingExpr>* _138238_s) {
	__jule_tuple_x_1e5e08c13_Data__jule_tuple_x_1e5e08c13_Data __jule_func_result;
	jule::Ptr<_1e5e417ea_TypeKind> _13837_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_13837_prefix;
	});;
	jule::Ptr<_1e5e08c13_Data> _138711_l = nullptr;;
	jule::Ptr<_1e5e08c13_Data> _138811_r = nullptr;;
	if (((*((*(_138238_s))))._field_Start != nullptr)) {
		_138711_l=_1e5e297a0_evalExpr(_self_, (*((*(_138238_s))))._field_Start);
		if ((_138711_l != nullptr)) {
			_1e5e14c41_checkIntegerIndexingByData(_self_, &(_138711_l), (*((*(_138238_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	} else {
		_138711_l=jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=_1e60275b2_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1e21a491e_NewI64(0LL)});
		(*((*(_138711_l))._field_Constant))._field_Kind=static_cast<jule::Str>(jule::Str::lit("int", 3));
		(*_138711_l.alloc)._field_Model=jule::Any((*_138711_l.alloc)._field_Constant, &__jule_any_type20);
	};
	if (((*((*(_138238_s))))._field_To != nullptr)) {
		_138811_r=_1e5e297a0_evalExpr(_self_, (*((*(_138238_s))))._field_To);
		if ((_138811_r != nullptr)) {
			_1e5e14c41_checkIntegerIndexingByData(_self_, &(_138811_r), (*((*(_138238_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	};
	__jule_func_result.__jule_result_arg0 = _138711_l;
	__jule_func_result.__jule_result_arg1 = _138811_r;
	return __jule_func_result;;
}



inline void _1e5e18a8b_slicingArr(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5e08c13_Data>* _141827_d) {
	jule::Ptr<_1e5e417ea_TypeKind> _14197_elemType = (*(_1e5e44c71_Arr((*((*(_141827_d))))._field_Kind.ptr())))._field_Elem;;
	(*((*(_141827_d))))._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1e5e4de12_Slc>(_1e5e4de12_Slc{._field_Elem=_14197_elemType}), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data24)});
	(*((*(_141827_d))))._field_Lvalue=false;
	(*((*(_141827_d))))._field_Mutable=((*((*(_141827_d))))._field_Mutable || (!(_1e5e431d1_Mutable(_14197_elemType.ptr()))));
}



inline void _1e5e18ea9_slicingStr(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5e08c13_Data>* _143327_d, jule::Ptr<_1e5e08c13_Data>* _143338_l, jule::Ptr<_1e5e08c13_Data>* _143349_r) {
	(*((*(_143327_d))))._field_Lvalue=false;
	(*((*(_143327_d))))._field_Mutable=true;
	if ((!(_1e5e0964d_IsConst((*(_143327_d)).ptr())))) {
		return;;
	};
	if ((((*(_143338_l)) == nullptr) || ((*(_143349_r)) == nullptr))) {
		(*((*(_143327_d))))._field_Constant=nullptr;
		(*((*(_143327_d))))._field_untyped=false;
		return;;
	};
	if ((_1e5e0964d_IsConst((*(_143338_l)).ptr()) && _1e5e0964d_IsConst((*(_143349_r)).ptr()))) {
		jule::I64 _14474_left = _1e21a6b74_AsI64((*((*(_143338_l))))._field_Constant.ptr());;
		if ((_14474_left < 0LL)) {
			return;;
		};
		jule::Str _14524_s = _1e21a6657_ReadStr((*((*(_143327_d))))._field_Constant);;
		jule::I64 _14538_right = static_cast<jule::I64>(0LL);;
		if (((*(_143349_r)) == nullptr)) {
			_14538_right=static_cast<jule::I64>(_14524_s.len());
		} else {
			_14538_right=_1e21a6b74_AsI64((*((*(_143349_r))))._field_Constant);
		};
		if ((_14474_left > _14538_right)) {
			return;;
		};
		_1e21a7c63_SetStr((*((*(_143327_d))))._field_Constant, _14524_s.slice(_14474_left, _14538_right));
		(*((*(_143327_d))))._field_Decl=true;
	} else {
		(*((*(_143327_d))))._field_Constant=nullptr;
		(*((*(_143327_d))))._field_untyped=false;
	};
}



inline void _1e5e19482_checkSlicing(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5e08c13_Data>* _147133_d, jule::Ptr<_1e5e08c13_Data>* _147144_l, jule::Ptr<_1e5e08c13_Data>* _147155_r, jule::Ptr<_1e5cb19de_SlicingExpr>* _147166_s) {
	{
		
		if ((_1e5e44c71_Arr((*((*(_147133_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c80576ba:;
			{
				_1e5e18a8b_slicingArr(_self_, _147133_d);
				return;;
			}
		}
		else if ((_1e5e45007_Slc((*((*(_147133_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c8057764:;
			{
				return;;
			}
		}
		else if ((_1e5e43ea1_Prim((*((*(_147133_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c80577ca:;
			{
				jule::Ptr<_1e5e49913_Prim> _14794_prim = _1e5e43ea1_Prim((*((*(_147133_d))))._field_Kind);;
				{
					
					if (_1e5e4cdcd_IsStr(_14794_prim.ptr())) {
						_case_begin_1c805a0a2:;
						{
							_1e5e18ea9_slicingStr(_self_, _147133_d, _147144_l, _147155_r);
							return;;
						}
					}
					_match_end_1c8059ee7:;
				};
			}
		}
		_match_end_1c8057588:;
	};
	_1e5e0aebd_pushErr(_self_, (*((*(_147166_s))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not support slicing", 29)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*((*(_147133_d))))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e197c3_evalSlicing(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Ptr<_1e5cb19de_SlicingExpr> _149032_s) {
	jule::Ptr<_1e5e08c13_Data> _14917_d = _1e5e297a0_evalExpr(_self_, (*(_149032_s))._field_Expr);;
	if ((_14917_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1e5e08c13_Data> _14967_l;
	jule::Ptr<_1e5e08c13_Data> _149614_r;
	({
		__jule_tuple_x_1e5e08c13_Data__jule_tuple_x_1e5e08c13_Data __jule_assign_result = _1e5e187d3_evalSlicingExprs(_self_, &(_149032_s));
		_14967_l = __jule_assign_result.__jule_result_arg0;
		_149614_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_14967_l == nullptr)) {
		return _14917_d;;
	};
	(*(_14917_d))._field_Decl=false;
	_1e5e19482_checkSlicing(_self_, &(_14917_d), &(_14967_l), &(_149614_r), &(_149032_s));
	if (_1e5e0964d_IsConst(_14917_d.ptr())) {
		(*(_14917_d))._field_Decl=false;
		(*(_14917_d))._field_Model=jule::Any((*(_14917_d))._field_Constant, &__jule_any_type20);
	} else if ((*(_14917_d))._field_Decl) {
		(*(_14917_d))._field_Decl=false;
	} else {
		jule::Ptr<_1e5cd699d_SlicingExprModel> _15148_model = jule::new_ptr<_1e5cd699d_SlicingExprModel>(_1e5cd699d_SlicingExprModel{._field_Token=(*_149032_s.alloc)._field_Token, ._field_Expr=(*(_14917_d))._field_Model, ._field_Left=(*(_14967_l))._field_Model, ._field_Right=jule::Any(nullptr)});;
		if ((_149614_r != nullptr)) {
			(*(_15148_model))._field_Right=(*_149614_r.alloc)._field_Model;
		};
		(*(_14917_d))._field_Model=jule::Any(_15148_model, &__jule_any_type94);
	};
	return _14917_d;;
}



inline void _1e5e19be1_castPtr(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5e417ea_TypeKind> _152727_t, jule::Ptr<_1e5e08c13_Data> _152745_d, jule::Ptr<_1e5c8eacc_Token> _152755_errorToken) {
	(*(_152745_d))._field_Constant=nullptr;
	(*_152745_d.alloc)._field_untyped=false;
	jule::Ptr<_1e5e4d43e_Sptr> _15303_sptr = _1e5e44237_Sptr((*_152745_d.alloc)._field_Kind.ptr());;
	if ((_15303_sptr != nullptr)) {
		if ((!(_1e5e42037_Equal((*(_1e5e444bd_Ptr(_152727_t.ptr())))._field_Elem, (*_15303_sptr.alloc)._field_Elem)))) {
			_1e5e0aebd_pushErr(_self_, _152755_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*(_152745_d))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1e5e41be6_Str(_152727_t), &__jule_any_type4); __jule_collection; }));
		};
		return;;
	};
	if ((!(_1e5e0b9b3_isUnsafe(_self_)))) {
		_1e5e0aebd_pushErr(_self_, _152755_errorToken, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e5e49913_Prim> _15433_prim = _1e5e43ea1_Prim((*(_152745_d))._field_Kind);;
	if (((_1e5e444bd_Ptr((*(_152745_d))._field_Kind) == nullptr) && ((_15433_prim == nullptr) || (!(_1e21a3830_IsInt(_1e5e49c87_Str(_15433_prim.ptr()))))))) {
		_1e5e0aebd_pushErr(_self_, _152755_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*(_152745_d))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1e5e41be6_Str(_152727_t), &__jule_any_type4); __jule_collection; }));
	};
}



inline void _1e5e1a10e_castStruct(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5e417ea_TypeKind> _154930_t, jule::Ptr<_1e5e08c13_Data> _154948_d, jule::Ptr<_1e5c8eacc_Token> _154958_errorToken) {
	(*(_154948_d))._field_Constant=nullptr;
	(*_154948_d.alloc)._field_untyped=false;
	jule::Ptr<_1e5d03db6_Trait> _15527_tr = _1e5e457aa_Trait((*_154948_d.alloc)._field_Kind.ptr());;
	if ((_15527_tr == nullptr)) {
		_1e5e0aebd_pushErr(_self_, _154958_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*(_154948_d))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1e5e41be6_Str(_154930_t.ptr()), &__jule_any_type4); __jule_collection; }));
		return;;
	};
	jule::Ptr<_1e5cc8c7b_StructIns> _15587_s = _1e5e45524_Struct(_154930_t);;
	_1c806e3c4_pushReference(_self_, &(_15587_s));
	if ((!(_1e5cc7593_IsImplements((*(_15587_s))._field_Decl.ptr(), _15527_tr)))) {
		_1e5e0aebd_pushErr(_self_, _154958_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*(_154948_d))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1e5e41be6_Str(_154930_t), &__jule_any_type4); __jule_collection; }));
	};
}



inline void _1e5e1a52c_castRef(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5e417ea_TypeKind> _156627_t, jule::Ptr<_1e5e08c13_Data> _156645_d, jule::Ptr<_1e5c8eacc_Token> _156655_errorToken) {
	(*(_156645_d))._field_Constant=nullptr;
	(*_156645_d.alloc)._field_untyped=false;
	jule::Ptr<_1e5e4d43e_Sptr> _15697_sptr = _1e5e44237_Sptr(_156627_t.ptr());;
	jule::Ptr<_1e5e51c06_Ptr> _15717_ptr = _1e5e444bd_Ptr((*_156645_d.alloc)._field_Kind.ptr());;
	if (((_15717_ptr != nullptr) && _1e5e42037_Equal((*(_15697_sptr))._field_Elem, (*_15717_ptr.alloc)._field_Elem))) {
		if ((!(_1e5e0b9b3_isUnsafe(_self_)))) {
			_1e5e0aebd_pushErr(_self_, _156655_errorToken, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_1e5e45524_Struct((*(_15697_sptr))._field_Elem) != nullptr)) {
		_1e5e1a10e_castStruct(_self_, (*_15697_sptr.alloc)._field_Elem, _156645_d, _156655_errorToken);
		return;;
	};
	_1e5e0aebd_pushErr(_self_, _156655_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*(_156645_d))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1e5e41be6_Str(_156627_t), &__jule_any_type4); __jule_collection; }));
}



inline void _1e5e1a94a_castSlc(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5e417ea_TypeKind> _158927_t, jule::Ptr<_1e5e08c13_Data> _158945_d, jule::Ptr<_1e5c8eacc_Token> _158955_errorToken) {
	jule::Ptr<_1e21a449b_Const> _15903_c = (*(_158945_d))._field_Constant;;
	(*_158945_d.alloc)._field_Constant=nullptr;
	(*_158945_d.alloc)._field_untyped=false;
	if ((_1e5e44754_Enum((*_158945_d.alloc)._field_Kind.ptr()) != nullptr)) {
		if (((_1e5e43ea1_Prim((*((*(_1e5e44754_Enum((*(_158945_d))._field_Kind)))._field_Kind))._field_Kind.ptr()) == nullptr) || (!(_1e5e4cdcd_IsStr(_1e5e43ea1_Prim((*((*(_1e5e44754_Enum((*(_158945_d))._field_Kind.ptr())))._field_Kind))._field_Kind).ptr()))))) {
			_1e5e0aebd_pushErr(_self_, _158955_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*(_158945_d))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1e5e41be6_Str(_158927_t.ptr()), &__jule_any_type4); __jule_collection; }));
			return;;
		};
	} else if (((_1e5e43ea1_Prim((*_158945_d.alloc)._field_Kind.ptr()) == nullptr) || (!(_1e5e4cdcd_IsStr(_1e5e43ea1_Prim((*(_158945_d))._field_Kind).ptr()))))) {
		_1e5e0aebd_pushErr(_self_, _158955_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*(_158945_d))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1e5e41be6_Str(_158927_t.ptr()), &__jule_any_type4); __jule_collection; }));
		return;;
	};
	_158927_t=(*(_1e5e45007_Slc(_158927_t.ptr())))._field_Elem;
	jule::Ptr<_1e5e49913_Prim> _16053_prim = _1e5e43ea1_Prim(_158927_t);;
	if (((_16053_prim == nullptr) || ((!(_1e5e4b33d_IsU8(_16053_prim.ptr()))) && (!(_1e5e4ad21_IsI32(_16053_prim.ptr())))))) {
		_1e5e0aebd_pushErr(_self_, _158955_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*_158945_d.alloc)._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any(_1e5e41be6_Str(_158927_t), &__jule_any_type4); __jule_collection; }));
		return;;
	};
	if ((_15903_c != nullptr)) {
		{
			
			if (_1e5e4b33d_IsU8(_16053_prim.ptr())) {
				_case_begin_1c8083dcd:;
				{
					jule::Str _16155_s = _1e21a6657_ReadStr(_15903_c);;
					jule::Ptr<_1e5cd520a_SliceExprModel> _16169_model = jule::new_ptr<_1e5cd520a_SliceExprModel>(_1e5cd520a_SliceExprModel{._field_ElemKind=_158927_t, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, _16155_s.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
					{
						auto expr = &(_16155_s);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c8085792:;
						if (it != expr_end) {
							jule::U8 *_162012_b = it;
							{
								jule::Ptr<_1e21a449b_Const> _162110_bc = static__1e21a4bd8_NewU64(static_cast<jule::U64>((*(_162012_b))));;
								(*(_162110_bc))._field_Kind=(*(_16053_prim))._field_Kind;
								(*(_16169_model))._field_Elems=jule::append((*_16169_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_162110_bc, &__jule_any_type20); __jule_collection; }));
							}
							_iter_next_1c8085792:;
							++it;
							goto _iter_begin_1c8085792;
						}
						_iter_end_1c8085792:;
					};
					(*_158945_d.alloc)._field_Model=jule::Any(_16169_model, &__jule_any_type79);
					(*_158945_d.alloc)._field_Decl=true;
				}
			}
			else if (_1e5e4ad21_IsI32(_16053_prim.ptr())) {
				_case_begin_1c8083e77:;
				{
					jule::Slice<jule::I32> _16285_runes = __jule_strToRunes(_1e21a6657_ReadStr(_15903_c));;
					jule::Ptr<_1e5cd520a_SliceExprModel> _16299_model = jule::new_ptr<_1e5cd520a_SliceExprModel>(_1e5cd520a_SliceExprModel{._field_ElemKind=_158927_t, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, _16285_runes.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
					{
						auto expr = &(_16285_runes);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c8088bc4:;
						if (it != expr_end) {
							jule::I32 *_163312_r = it;
							{
								jule::Ptr<_1e21a449b_Const> _163410_rc = static__1e21a491e_NewI64(static_cast<jule::I64>((*(_163312_r))));;
								(*(_163410_rc))._field_Kind=(*(_16053_prim))._field_Kind;
								(*(_16299_model))._field_Elems=jule::append((*_16299_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_163410_rc, &__jule_any_type20); __jule_collection; }));
							}
							_iter_next_1c8088bc4:;
							++it;
							goto _iter_begin_1c8088bc4;
						}
						_iter_end_1c8088bc4:;
					};
					(*_158945_d.alloc)._field_Model=jule::Any(_16299_model, &__jule_any_type79);
					(*_158945_d.alloc)._field_Decl=true;
				}
			}
			_match_end_1c8083ce0:;
		};
	};
}



inline void _1e5e1acad_castStr(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5e08c13_Data> _164427_d, jule::Ptr<_1e5c8eacc_Token> _164437_errorToken) {
	if ((_1e5e44754_Enum((*(_164427_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1e5d065c2_Enum> _16468_e = _1e5e44754_Enum((*(_164427_d))._field_Kind);;
		if (((_1e5e43ea1_Prim((*((*(_16468_e))._field_Kind))._field_Kind.ptr()) != nullptr) && _1e5e4cdcd_IsStr(_1e5e43ea1_Prim((*((*(_16468_e))._field_Kind))._field_Kind).ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1e21a449b_Const> _16523_c = (*_164427_d.alloc)._field_Constant;;
	(*_164427_d.alloc)._field_Constant=nullptr;
	(*_164427_d.alloc)._field_untyped=false;
	if ((_1e5e43ea1_Prim((*(_164427_d))._field_Kind) != nullptr)) {
		jule::Ptr<_1e5e49913_Prim> _16564_prim = _1e5e43ea1_Prim((*(_164427_d))._field_Kind);;
		if (((!(_1e5e4b33d_IsU8(_16564_prim.ptr()))) && (!(_1e5e4ad21_IsI32(_16564_prim))))) {
			_1e5e0aebd_pushErr(_self_, _164437_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type4); (*it++) = jule::Any(_1e5e41be6_Str((*(_164427_d))._field_Kind), &__jule_any_type4); __jule_collection; }));
			return;;
		};
		if ((_16523_c != nullptr)) {
			{
				
				if (_1e5e4b33d_IsU8(_16564_prim)) {
					_case_begin_1c8091968:;
					{
						(*_164427_d.alloc)._field_Constant=static__1e21a526b_NewStr(__jule_strFromByte(static_cast<jule::U8>(_1e21a6e0a_AsU64(_16523_c))));
						(*_164427_d.alloc)._field_Model=jule::Any((*_164427_d.alloc)._field_Constant, &__jule_any_type20);
						(*_164427_d.alloc)._field_Decl=true;
					}
				}
				else if (_1e5e4ad21_IsI32(_16564_prim)) {
					_case_begin_1c8091a12:;
					{
						(*_164427_d.alloc)._field_Constant=static__1e21a526b_NewStr(__jule_strFromRune(static_cast<jule::I32>(_1e21a6b74_AsI64(_16523_c))));
						(*_164427_d.alloc)._field_Model=jule::Any((*_164427_d.alloc)._field_Constant, &__jule_any_type20);
						(*_164427_d.alloc)._field_Decl=true;
					}
				}
				_match_end_1c8091847:;
			};
		};
		return;;
	};
	jule::Ptr<_1e5e4de12_Slc> _16777_s = _1e5e45007_Slc((*(_164427_d))._field_Kind);;
	if ((_16777_s == nullptr)) {
		_1e5e0aebd_pushErr(_self_, _164437_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type4); (*it++) = jule::Any(_1e5e41be6_Str((*(_164427_d))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return;;
	};
	jule::Ptr<_1e5e417ea_TypeKind> _16837_t = (*(_16777_s))._field_Elem;;
	jule::Ptr<_1e5e49913_Prim> _16843_prim = _1e5e43ea1_Prim(_16837_t.ptr());;
	if (((_16843_prim == nullptr) || ((!(_1e5e4b33d_IsU8(_16843_prim.ptr()))) && (!(_1e5e4ad21_IsI32(_16843_prim.ptr())))))) {
		_1e5e0aebd_pushErr(_self_, _164437_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type4); (*it++) = jule::Any(_1e5e41be6_Str((*(_164427_d))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return;;
	};
}



inline void _1e5e1b1cb_castInt(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5e417ea_TypeKind> _169127_t, jule::Ptr<_1e5e08c13_Data> _169145_d, jule::Ptr<_1e5c8eacc_Token> _169155_errorToken) {
	if (_1e5e0964d_IsConst(_169145_d.ptr())) {
		jule::Ptr<_1e5e49913_Prim> _16934_prim = _1e5e43ea1_Prim(_169127_t.ptr());;
		{
			
			if (_1e21a3258_IsSigInt((*(_16934_prim))._field_Kind)) {
				_case_begin_1c809a19c:;
				{
					_1e21a7449_SetI64((*_169145_d.alloc)._field_Constant.ptr(), _1e21a6b74_AsI64((*(_169145_d))._field_Constant));
				}
			}
			else if (_1e21a3566_IsUnsigInt((*(_16934_prim))._field_Kind)) {
				_case_begin_1c809a246:;
				{
					_1e21a7702_SetU64((*_169145_d.alloc)._field_Constant.ptr(), _1e21a6e0a_AsU64((*(_169145_d))._field_Constant));
				}
			}
			_match_end_1c809a114:;
		};
	} else {
		(*(_169145_d))._field_Constant=nullptr;
		(*_169145_d.alloc)._field_untyped=false;
	};
	if ((_1e5e44754_Enum((*(_169145_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1e5d065c2_Enum> _17064_e = _1e5e44754_Enum((*(_169145_d))._field_Kind);;
		if (_1e21a3e07_IsNum(_1e5e41be6_Str((*((*(_17064_e))._field_Kind))._field_Kind.ptr()))) {
			return;;
		};
	};
	if ((_1e5e44237_Sptr((*(_169145_d))._field_Kind) != nullptr)) {
		jule::Ptr<_1e5e49913_Prim> _17134_prim = _1e5e43ea1_Prim(_169127_t.ptr());;
		if ((!(_1e5e4c8b1_IsUintptr(_17134_prim.ptr())))) {
			_1e5e0aebd_pushErr(_self_, _169155_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*(_169145_d))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1e5e41be6_Str(_169127_t), &__jule_any_type4); __jule_collection; }));
		};
		return;;
	};
	if ((_1e5e444bd_Ptr((*(_169145_d))._field_Kind) != nullptr)) {
		jule::Ptr<_1e5e49913_Prim> _17204_prim = _1e5e43ea1_Prim(_169127_t);;
		if (_1e5e4c8b1_IsUintptr(_17204_prim.ptr())) {
		} else if ((!(_1e5e0b9b3_isUnsafe(_self_)))) {
			_1e5e0aebd_pushErr(_self_, _169155_errorToken, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
		};
		return;;
	};
	jule::Ptr<_1e5e49913_Prim> _17293_prim = _1e5e43ea1_Prim((*(_169145_d))._field_Kind);;
	if (((_17293_prim != nullptr) && _1e21a3e07_IsNum(_1e5e49c87_Str(_17293_prim)))) {
		return;;
	};
	_1e5e0aebd_pushErr(_self_, _169155_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*(_169145_d))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1e5e41be6_Str(_169127_t), &__jule_any_type4); __jule_collection; }));
}



inline void _1e5e1b5e9_castNum(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5e417ea_TypeKind> _173727_t, jule::Ptr<_1e5e08c13_Data> _173745_d, jule::Ptr<_1e5c8eacc_Token> _173755_errorToken) {
	if (_1e5e0964d_IsConst(_173745_d.ptr())) {
		jule::Ptr<_1e5e49913_Prim> _17394_prim = _1e5e43ea1_Prim(_173727_t.ptr());;
		{
			
			if (_1e21a3b71_IsFloat((*(_17394_prim))._field_Kind)) {
				_case_begin_1c80a66d6:;
				{
					_1e21a801b_SetF64((*_173745_d.alloc)._field_Constant.ptr(), _1e21a7191_AsF64((*(_173745_d))._field_Constant));
				}
			}
			else if (_1e21a3258_IsSigInt((*(_17394_prim))._field_Kind)) {
				_case_begin_1c80a6780:;
				{
					_1e21a7449_SetI64((*_173745_d.alloc)._field_Constant.ptr(), _1e21a6b74_AsI64((*(_173745_d))._field_Constant));
				}
			}
			else if (_1e21a3566_IsUnsigInt((*(_17394_prim))._field_Kind)) {
				_case_begin_1c80a67e6:;
				{
					_1e21a7702_SetU64((*_173745_d.alloc)._field_Constant.ptr(), _1e21a6e0a_AsU64((*(_173745_d))._field_Constant));
				}
			}
			_match_end_1c80a6609:;
		};
	} else {
		(*(_173745_d))._field_Constant=nullptr;
		(*_173745_d.alloc)._field_untyped=false;
	};
	if ((_1e5e44754_Enum((*(_173745_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1e5d065c2_Enum> _17544_e = _1e5e44754_Enum((*(_173745_d))._field_Kind);;
		if (_1e21a3e07_IsNum(_1e5e41be6_Str((*((*(_17544_e))._field_Kind))._field_Kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1e5e49913_Prim> _17603_prim = _1e5e43ea1_Prim((*(_173745_d))._field_Kind);;
	if (((_17603_prim != nullptr) && _1e21a3e07_IsNum(_1e5e49c87_Str(_17603_prim)))) {
		return;;
	};
	_1e5e0aebd_pushErr(_self_, _173755_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*(_173745_d))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1e5e41be6_Str(_173727_t.ptr()), &__jule_any_type4); __jule_collection; }));
}



inline void _1e5e1ba17_castPrim(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5e417ea_TypeKind> _176828_t, jule::Ptr<_1e5e08c13_Data> _176846_d, jule::Ptr<_1e5c8eacc_Token> _176856_errorToken) {
	jule::Ptr<_1e5e49913_Prim> _17693_prim = _1e5e43ea1_Prim(_176828_t.ptr());;
	{
		
		if (_1e5e4d164_IsAny(_17693_prim.ptr())) {
			_case_begin_1c80aed3d:;
			{
				__jule_panic_s(jule::Str::lit("eval: castPrim: any case should be unreachable in this routine", 62) + jule::Str("\nlocation: std/jule/sema/eval.jule:1772:4"));;
			}
		}
		else if (_1e5e4cdcd_IsStr(_17693_prim.ptr())) {
			_case_begin_1c80ae9db:;
			{
				_1e5e1acad_castStr(_self_, _176846_d, _176856_errorToken);
			}
		}
		else if (_1e21a3830_IsInt(_1e5e49c87_Str(_17693_prim.ptr()))) {
			_case_begin_1c80aea52:;
			{
				_1e5e1b1cb_castInt(_self_, _176828_t, _176846_d, _176856_errorToken);
			}
		}
		else if (_1e21a3e07_IsNum(_1e5e49c87_Str(_17693_prim.ptr()))) {
			_case_begin_1c80aeab8:;
			{
				_1e5e1b5e9_castNum(_self_, _176828_t, _176846_d, _176856_errorToken);
			}
		}
		else {
			_case_begin_1c80ae975:;
			{
				_1e5e0aebd_pushErr(_self_, _176856_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting", 27)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str(_176828_t), &__jule_any_type4); __jule_collection; }));
			}
		}
		_match_end_1c80ae8ed:;
	};
}



inline void _1e5e1bd7a_castConstant(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5e417ea_TypeKind>* _178433_t, jule::Ptr<_1e5e08c13_Data>* _178452_d) {
	if ((((*(_178452_d)) == nullptr) || (!(_1e5e0964d_IsConst((*(_178452_d)).ptr()))))) {
		return;;
	};
	jule::Ptr<_1e5e49913_Prim> _17883_prim = _1e5e43ea1_Prim((*(_178433_t)).ptr());;
	_1e5e3bd78_castConstByType(&((*(_17883_prim))._field_Kind), _178452_d);
	(*((*(_178452_d))))._field_Model=jule::Any((*((*(_178452_d))))._field_Constant, &__jule_any_type20);
}



inline void _1e5e1c298_castTypeEnum(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5e417ea_TypeKind>* _179333_t, jule::Ptr<_1e5e08c13_Data>* _179352_d, jule::Ptr<_1e5c8eacc_Token>* _179367_errorToken) {
	jule::I64 _17943_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1e5d88148_checkTypeCompatibility((*(_self_))._field_s, &((*((*(_179352_d))))._field_Kind), _179333_t, _179367_errorToken)))) {
		((*((*(_self_))._field_s))._field_errors).mut_slice(0LL, _17943_n);;
		_1e5e0aebd_pushErr(_self_, (*(_179367_errorToken)), static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*((*(_179352_d))))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any(_1e5e41be6_Str((*(_179333_t)).ptr()), &__jule_any_type4); __jule_collection; }));
	};
	(*((*(_179352_d))))._field_Constant=nullptr;
	(*((*(_179352_d))))._field_untyped=false;
}



inline void _1e5e1c6b6_castTypeEnumT(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5e417ea_TypeKind>* _180334_t, jule::Ptr<_1e5e08c13_Data>* _180353_d, jule::Ptr<_1e5c8eacc_Token>* _180368_errorToken) {
	jule::I64 _18043_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1e5d88148_checkTypeCompatibility((*(_self_))._field_s, _180334_t, &((*((*(_180353_d))))._field_Kind), _180368_errorToken)))) {
		((*((*(_self_))._field_s))._field_errors).mut_slice(0LL, _18043_n);;
		_1e5e0aebd_pushErr(_self_, (*(_180368_errorToken)), static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*((*(_180353_d))))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any(_1e5e41be6_Str((*(_180334_t)).ptr()), &__jule_any_type4); __jule_collection; }));
	};
	(*((*(_180353_d))))._field_Constant=nullptr;
	(*((*(_180353_d))))._field_untyped=false;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e1cb6c_evalCastByTypeNData(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5e417ea_TypeKind> _181339_t, jule::Ptr<_1e5e08c13_Data> _181357_d, jule::Ptr<_1e5c8eacc_Token> _181371_errorToken) {
	if (((_181357_d != nullptr) && (*_181357_d.alloc)._field_Decl)) {
		_1e5e0aebd_pushErr(_self_, _181371_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		
		if (_1e5e09131_IsNil(_181357_d)) {
			_case_begin_1c80bc994:;
			{
				if ((!(_1e5e436ed_NilCompatible(_181339_t.ptr())))) {
					_1e5e0aebd_pushErr(_self_, _181371_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("<nil>", 5), &__jule_any_type4); (*it++) = jule::Any(_1e5e41be6_Str(_181339_t), &__jule_any_type4); __jule_collection; }));
				};
				(*_181357_d.alloc)._field_Constant=nullptr;
				(*_181357_d.alloc)._field_untyped=false;
			}
		}
		else if (((_1e5e43ea1_Prim((*_181357_d.alloc)._field_Kind.ptr()) != nullptr) && _1e5e4d164_IsAny(_1e5e43ea1_Prim((*(_181357_d))._field_Kind).ptr()))) {
			_case_begin_1c80bc730:;
			{
				if ((_1e5e44754_Enum(_181339_t.ptr()) != nullptr)) {
					_1e5e0aebd_pushErr(_self_, _181371_errorToken, static_cast<jule::Str>(jule::Str::lit("enum cannot casted from any type", 32)), jule::Slice<jule::Any>());
					_1e5e0b331_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("try cast to type of enum fields instead of enum", 47)), jule::Slice<jule::Any>());
				} else if ((_1e5e449da_TypeEnum(_181339_t.ptr()) != nullptr)) {
					_1e5e0aebd_pushErr(_self_, _181371_errorToken, static_cast<jule::Str>(jule::Str::lit("enum cannot casted from any type", 32)), jule::Slice<jule::Any>());
				};
				(*_181357_d.alloc)._field_Constant=nullptr;
				(*_181357_d.alloc)._field_untyped=false;
			}
		}
		else if (((_1e5e43ea1_Prim(_181339_t.ptr()) != nullptr) && _1e5e4d164_IsAny(_1e5e43ea1_Prim(_181339_t).ptr()))) {
			_case_begin_1c80bc796:;
			{
				(*_181357_d.alloc)._field_Constant=nullptr;
				(*_181357_d.alloc)._field_untyped=false;
			}
		}
		else if ((_1e5e449da_TypeEnum((*_181357_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c80bc80c:;
			{
				_1e5e1c298_castTypeEnum(_self_, &(_181339_t), &(_181357_d), &(_181371_errorToken));
			}
		}
		else if ((_1e5e449da_TypeEnum(_181339_t.ptr()) != nullptr)) {
			_case_begin_1c80bc873:;
			{
				_1e5e1c6b6_castTypeEnumT(_self_, &(_181339_t), &(_181357_d), &(_181371_errorToken));
			}
		}
		else if ((_1e5e444bd_Ptr(_181339_t.ptr()) != nullptr)) {
			_case_begin_1c80bd665:;
			{
				_1e5e19be1_castPtr(_self_, _181339_t, _181357_d, _181371_errorToken);
			}
		}
		else if ((_1e5e44237_Sptr(_181339_t.ptr()) != nullptr)) {
			_case_begin_1c80bd6cb:;
			{
				_1e5e1a52c_castRef(_self_, _181339_t, _181357_d, _181371_errorToken);
			}
		}
		else if ((_1e5e45007_Slc(_181339_t.ptr()) != nullptr)) {
			_case_begin_1c80bd742:;
			{
				_1e5e1a94a_castSlc(_self_, _181339_t, _181357_d, _181371_errorToken);
			}
		}
		else if ((_1e5e45524_Struct(_181339_t.ptr()) != nullptr)) {
			_case_begin_1c80bd7a8:;
			{
				_1e5e1a10e_castStruct(_self_, _181339_t, _181357_d, _181371_errorToken);
			}
		}
		else if ((_1e5e43ea1_Prim(_181339_t.ptr()) != nullptr)) {
			_case_begin_1c80bd81e:;
			{
				_1e5e1ba17_castPrim(_self_, _181339_t, _181357_d, _181371_errorToken);
				_1e5e1bd7a_castConstant(_self_, &(_181339_t), &(_181357_d));
			}
		}
		else {
			_case_begin_1c80bc5ed:;
			{
				_1e5e0aebd_pushErr(_self_, _181371_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting", 27)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str(_181339_t.ptr()), &__jule_any_type4); __jule_collection; }));
				_181357_d=nullptr;
			}
		}
		_match_end_1c80bc3de:;
	};
	if ((_181357_d == nullptr)) {
		return nullptr;;
	};
	(*_181357_d.alloc)._field_Mutable=((*_181357_d.alloc)._field_Mutable || (!(_1e5e431d1_Mutable((*_181357_d.alloc)._field_Kind.ptr()))));
	if (((!((*_181357_d.alloc)._field_Decl)) && ((_1e5e44754_Enum((*(_181357_d))._field_Kind) == nullptr) || (!(_1e5e42037_Equal((*((*(_1e5e44754_Enum((*(_181357_d))._field_Kind)))._field_Kind))._field_Kind, _181339_t)))))) {
		_1e5e35cea_applyCastKind(&((*(_self_))._field_s), &(_181357_d), &(_181339_t), &(_181371_errorToken), _1e5e0dec1_getOwnerRefers(_self_));
		(*((*_181357_d.alloc)._field_Model.cast_ptr<_1e5cd447e_CastingExprModel>(&__jule_any_type95)))._field_Token=_181371_errorToken;
	} else {
		(*_181357_d.alloc)._field_Kind=_181339_t;
	};
	(*_181357_d.alloc)._field_Decl=false;
	(*_181357_d.alloc)._field_Lvalue=false;
	(*_181357_d.alloc)._field_untyped=false;
	if (_1e5e0964d_IsConst(_181357_d)) {
		(*((*_181357_d.alloc)._field_Constant))._field_Kind=(*(_1e5e43ea1_Prim(_181339_t.ptr())))._field_Kind;
	};
	return _181357_d;;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e1d123_evalCastT(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Ptr<_1e5e417ea_TypeKind>* _189031_t, jule::Ptr<_1e5ca93bb_Expr>* _189050_e, jule::Ptr<_1e5c8eacc_Token>* _189065_et) {
	jule::Ptr<_1e5e417ea_TypeKind> _18917_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_18917_prefix;
	});;
	if ((_1e5e45007_Slc((*(_189031_t)).ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_189050_e))))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type96) {
				_case_begin_1cb434621:;
				{
					(*_self_.alloc)._field_prefix=(*(_189031_t));
				}
			}
			_match_end_1cb434599:;
		};
	};
	jule::Ptr<_1e5e08c13_Data> _19007_d = _1e5e297a0_evalExpr(_self_, (*(_189050_e)));;
	if (((_19007_d == nullptr) || ((*_self_.alloc)._field_prefix != nullptr))) {
		return _19007_d;;
	};
	return _1e5e1cb6c_evalCastByTypeNData(_self_, (*(_189031_t)), _19007_d, (*(_189065_et)));;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e1d464_evalCast(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Ptr<_1e5cabc2b_CastExpr> _190729_c) {
	jule::Ptr<_1e5e4900b_TypeSymbol> _19087_t = _1e5ce7e21_buildType((*(_190729_c))._field_Kind);;
	jule::Bool _19093_ok = _1e5d852dd_checkType((*(_self_))._field_s, &(_19087_t), (*_self_.alloc)._field_lookup);;
	if ((!(_19093_ok))) {
		return nullptr;;
	};
	return _1e5e1d123_evalCastT(_self_, &((*(_19087_t))._field_Kind), &((*_190729_c.alloc)._field_Expr), &((*((*_190729_c.alloc)._field_Kind))._field_Token));;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e1d7a5_evalNsSelection(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5cac105_NsSelectionExpr> _191635_s) {
	jule::Str _19173_path = _1e5e5dc8a_buildLinkPathByTokens(&((*(_191635_s))._field_Ns));;
	jule::Ptr<_1e5d5b2e7_ImportInfo> _19187_imp = ((_1e5e61e9c_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1e5e60286_SelectPackage((*(_self_))._field_lookup.data, jule::__new_closure<jule::Bool,jule::Ptr<_1e5d5b2e7_ImportInfo>>((void*)__jule_anon_1cb43c6b2, jule::Ptr<__jule_anon_1cb43c6b2_ctx>::make(__jule_anon_1cb43c6b2_ctx{._191635_s=_191635_s,._19173_path=_19173_path}).as<jule::Uintptr>(), __jule_anon_1cb43c6b2_ctx_handler));;
	if ((_19187_imp == nullptr)) {
		_1e5e0aebd_pushErr(_self_, (*(_191635_s))._field_Ns[0LL], static_cast<jule::Str>(jule::Str::lit("undefined namespace: @", 22)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_19173_path, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Trait _19307_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait(_19187_imp, (jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data1);
	;
	_1e5e0b72c_disallowBuiltin(_self_);
	jule::Any _19357_def = _1e5e0dc3a_getDef(_self_, &((*((*_191635_s.alloc)._field_Ident))._field_Kind), false);;
	_1e5e0b52e_allowBuiltin(_self_);
	(*(_self_))._field_lookup=_19307_lookup;
	jule::Ptr<_1e5e08c13_Data> _19387_d = _1e5e12de8_evalDef(_self_, &(_19357_def), (*_191635_s.alloc)._field_Ident);;
	return _19387_d;;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e1dc5b_evalStructLitExplicit(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Ptr<_1e5cc8c7b_StructIns> _194242_s, jule::Slice<jule::Ptr<_1e5ca93bb_Expr>> _19437_exprs, jule::Ptr<_1e5c8eacc_Token> _194327_errorToken) {
	jule::Bool _19443_ok = _1e5d80b9b_checkGenericQuantity((*(_self_))._field_s.ptr(), (*((*(_194242_s))._field_Decl))._field_Generics.len(), (*_194242_s.alloc)._field_Generics.len(), _194327_errorToken);;
	if ((!(_19443_ok))) {
		return nullptr;;
	};
	if ((((*_self_.alloc)._field_field != nullptr) && ((*((*(*(_self_))._field_field.alloc)._field_Decl))._field_Owner == (*_194242_s.alloc)._field_Decl))) {
		_1e5e0aebd_pushErr(_self_, _194327_errorToken, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_194242_s))._field_Decl.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
	};
	_1c806e3c4_pushReference(_self_, &(_194242_s));
	_1e5e110e4_checkDeprecated(_self_, &((*(*(_194242_s))._field_Decl.alloc)._field_Directives), _194327_errorToken);
	_1e5deb992_structLitChecker _19577_slc = _1e5deb992_structLitChecker{._field_e=_self_, ._field_errorToken=_194327_errorToken, ._field_s=_194242_s, ._field_args=jule::Slice<jule::Ptr<_1e5cd3758_StructArgExprModel>>(nullptr)};;
	_1e5ded213_check(&_19577_slc, &(_19437_exprs));
	jule::Ptr<_1e5e08c13_Data> _19647_d = jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_194242_s, (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data0)}), ._field_Mutable=(!((*_self_.alloc)._field_immutable)), ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(jule::new_ptr<_1e5cd3aee_StructLitExprModel>(_1e5cd3aee_StructLitExprModel{._field_Strct=_194242_s, ._field_Args=_19577_slc._field_args}), &__jule_any_type97), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)});;
	if ((*(*(_194242_s))._field_Decl.alloc)._field_Binded) {
		(*((*(_19647_d))._field_Kind))._field_BindIdent=(*(*(_194242_s))._field_Decl.alloc)._field_Ident;
	};
	return _19647_d;;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e1e09c_evalStructLit(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Ptr<_1e5cae415_StructLit> _198034_lit) {
	jule::Ptr<_1e5e4900b_TypeSymbol> _19817_t = _1e5ce7e21_buildType((*(_198034_lit))._field_Kind);;
	jule::Bool _19823_ok = _1e5d852dd_checkType((*(_self_))._field_s, &(_19817_t), (*_self_.alloc)._field_lookup);;
	if ((!(_19823_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1e5cc8c7b_StructIns> _19877_s = _1e5e45524_Struct((*(_19817_t))._field_Kind.ptr());;
	if ((_19877_s == nullptr)) {
		if ((_1e5e44237_Sptr((*(_19817_t))._field_Kind) != nullptr)) {
			_19877_s=_1e5e45524_Struct((*(_1e5e44237_Sptr((*(_19817_t))._field_Kind)))._field_Elem.ptr());
			if ((_19877_s != nullptr)) {
				goto _julec_label_1cb44e097;
			};
		};
		_1e5e0aebd_pushErr(_self_, (*((*_198034_lit.alloc)._field_Kind))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1cb44e097:;
	jule::Ptr<_1e5e08c13_Data> _20007_d = _1e5e1dc5b_evalStructLitExplicit(_self_, _19877_s, (*_198034_lit.alloc)._field_Exprs, (*(*(_198034_lit))._field_Kind.alloc)._field_Token);;
	if ((_1e5e44237_Sptr((*(_19817_t))._field_Kind) != nullptr)) {
		jule::Ptr<_1e5cd3aee_StructLitExprModel> _20028_model = (*(_20007_d))._field_Model.cast_ptr<_1e5cd3aee_StructLitExprModel>(&__jule_any_type97);;
		_1e5e33b3e_makeStructLitAlloc(&(_20007_d), &(_20028_model));
	};
	return _20007_d;;
}



inline _1e5e53be7_typeChecker _1e5e1e333_typeChecker(_1e5e0a93a_eval* _self_) {
	return _1e5d84089_typeChecker((*(_self_))._field_s, (*(_self_))._field_lookup, nullptr, nullptr);;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e1e674_evalType(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5ca5087_TypeDecl> _201228_t) {
	jule::Ptr<_1e5e4900b_TypeSymbol> _20137_tk = _1e5ce7e21_buildType(_201228_t);;
	jule::Bool _20143_ok = _1e5d852dd_checkType((*(_self_))._field_s, &(_20137_tk), (*(_self_))._field_lookup);;
	if ((!(_20143_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=(*(_20137_tk))._field_Kind, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any((*_20137_tk.alloc)._field_Kind, &__jule_any_type86), ._field_Decl=true, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)});;
}



inline void _1e5e1e9d7_callTypeFn(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Ptr<_1e5cad0e5_FnCallExpr>* _202532_fc, jule::Ptr<_1e5e08c13_Data>* _202554_d) {
	if (((*((*(_202532_fc))))._field_Args.len() < 1LL)) {
		_1e5e0aebd_pushErr(_self_.ptr(), (*((*(_202532_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("v", 1), &__jule_any_type4); __jule_collection; }));
	} else if (((*((*(_202532_fc))))._field_Args.len() > 1LL)) {
		_1e5e0aebd_pushErr(_self_.ptr(), (*((*((*(_202532_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*((*(_202554_d))))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
	} else if ((*((*(_202532_fc))))._field_IsCo) {
		_1e5e0aebd_pushErr(_self_.ptr(), (*((*(_202532_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("concurrent calls are not allowed for type-cast calls", 52)), jule::Slice<jule::Any>());
		(*(_202554_d))=nullptr;
		return;;
	} else if (((*((*(_202532_fc))))._field_Exception != nullptr)) {
		_1e5e0aebd_pushErr(_self_.ptr(), (*((*(_202532_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("exceptionals are not supported for type-cast call", 49)), jule::Slice<jule::Any>());
		(*(_202554_d))=nullptr;
		return;;
	};
	if (((*((*(_202532_fc))))._field_Args.len() > 0LL)) {
		jule::Ptr<_1e5ca93bb_Expr> _20418_arg = (*((*(_202532_fc))))._field_Args[0LL];;
		(*(_202554_d))=_1e5e1d123_evalCastT(_self_, &((*((*(_202554_d))))._field_Kind), &(_20418_arg), &((*(_20418_arg))._field_Token));
		return;;
	};
	if (((*(_202554_d)) != nullptr)) {
		(*((*(_202554_d))))._field_Decl=false;
	};
}



inline void _1e5e1ed4a_callBuiltinFn(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Ptr<_1e5cad0e5_FnCallExpr>* _205135_fc, jule::Ptr<_1e5e08c13_Data>* _205157_d) {
	if ((!(_1e5cad49c_Unhandled((*(_205135_fc)).ptr())))) {
		_1e5e0aebd_pushErr(_self_.ptr(), (*((*(_205135_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49)), jule::Slice<jule::Any>());
	};
	(*(_205157_d))=(*(_1e5e4528d_Fn((*((*(_205157_d))))._field_Kind.ptr())))._field_caller(&(_self_), _205135_fc, _205157_d);
	if (((*(_205157_d)) == nullptr)) {
		return;;
	};
	(*((*(_205157_d))))._field_Mutable=true;
}



inline void _1e5e201ad_checkFnOfConcurrentCall(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5ce3416_FnIns>* _206340_f, jule::Ptr<_1e5c8eacc_Token> _206351_errorToken) {
	if (_1e5e0b9b3_isUnsafe(_self_)) {
		return;;
	};
	{
		auto expr = &((*((*(_206340_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb45d0ea:;
		if (it != expr_end) {
			jule::Ptr<_1e5ce22b1_ParamIns> *_206710_p = it;
			{
				if (_1e5cdded3_IsSelf((*((*(_206710_p))))._field_Decl.ptr())) {
					if ((!(_1e5cde269_IsRef((*((*(_206710_p))))._field_Decl)))) {
						_1e5e0aebd_pushErr(_self_, _206351_errorToken, static_cast<jule::Str>(jule::Str::lit("Safe Jule not allows to make concurrent calls with methods which is has \"self\" receiver parameter", 97)), jule::Slice<jule::Any>());
						_1e5e0b331_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use \"&self\" receiver parameter instead, or Unsafe Jule with unsafe {} scope to make concurrent call", 99)), jule::Slice<jule::Any>());
					};
				};
				if ((*(*((*(_206710_p))))._field_Decl.alloc)._field_Reference) {
					_1e5e0aebd_pushErr(_self_, _206351_errorToken, static_cast<jule::Str>(jule::Str::lit("Safe Jule not allows to make concurrent calls with functions which is has reference parameter(s)", 96)), jule::Slice<jule::Any>());
					_1e5e0b331_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use Unsafe Jule with unsafe {} scope to make concurrent call", 60)), jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1cb45d0ea:;
			++it;
			goto _iter_begin_1cb45d0ea;
		}
		_iter_end_1cb45d0ea:;
	};
}



inline void _1e5e205cb_processExceptionalHandler(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5ce3416_FnIns>* _208246_f, jule::Ptr<_1e5cad0e5_FnCallExpr>* _208262_fc, jule::Ptr<_1e5e08c13_Data>* _208284_d) {
	jule::Bool _20833_resultNeeded = ((!(_1e5ce080e_IsVoid((*((*(_208246_f))))._field_Decl.ptr()))) && ((*(_self_))._field_arg || (!((*(_self_))._field_ignored))));;
	jule::Ptr<_1e5d40771_scopeChecker> _208411_csc = nullptr;;
	jule::Ptr<_1e5d384d3_Scope> _208511_ch = nullptr;;
	jule::Ptr<_1e5cd4d31_FnCallExprModel> _20877_model = (*((*(_208284_d))))._field_Model.cast_ptr<_1e5cd4d31_FnCallExprModel>(&__jule_any_type40);;
	jule::Ptr<_1e5d40771_scopeChecker> _20917_sc = (*(_self_))._field_lookup.cast_ptr<_1e5d40771_scopeChecker>((jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data0);;
	_208411_csc=_1e5d52b7e_newChildChecker(_20917_sc);
	if (_20833_resultNeeded) {
		(*(_208411_csc))._field_result=(*(_208246_f));
	};
	_208511_ch=_1e5d45e2a_getChild(_20917_sc);
	(*((*((*(_208262_fc))))._field_Exception))._field_Parent=(*_20917_sc.alloc)._field_tree;
	(*((*_208411_csc.alloc)._field_table))._field_Vars=jule::append((*(*(_208411_csc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5da0bcc_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1e5e33eb3_buildErrorVar(&(_208511_ch), _208262_fc); __jule_collection; }));
	_1e5d46348_checkChildSsc(_20917_sc, &((*((*(_208262_fc))))._field_Exception), &(_208511_ch), &(_208411_csc));
	(*(_20877_model))._field_Assigned=_20833_resultNeeded;
	(*_20877_model.alloc)._field_Except=_208511_ch;
	if ((_20833_resultNeeded && ((*_208411_csc.alloc)._field_result != nullptr))) {
		_1e5e0aebd_pushErr(_self_, (*((*(_208262_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("exceptional returns an expression, therefore else block should return expression", 80)), jule::Slice<jule::Any>());
	};
}



inline void _1e5e2093e_callFn(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Ptr<_1e5cad0e5_FnCallExpr>* _210928_fc, jule::Ptr<_1e5e08c13_Data>* _210950_d) {
	jule::Ptr<_1e5ce3416_FnIns> _21107_f = _1e5e4528d_Fn((*((*(_210950_d))))._field_Kind.ptr());;
	if (_1e5ce48ce_IsBuiltin(_21107_f.ptr())) {
		_1e5e1ed4a_callBuiltinFn(_self_, _210928_fc, _210950_d);
		return;;
	};
	if (((!(_1e5ce0a95_IsMethod((*_21107_f.alloc)._field_Decl.ptr()))) && _1e5e5cd66_hasDirective(&((*(*(_21107_f))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4))))) {
		_1e5e0aebd_pushErr(_self_, (*((*(_210928_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("you cannot call test functions", 30)), jule::Slice<jule::Any>());
		(*(_210950_d))=nullptr;
		return;;
	};
	if (((((!((*((*(_210950_d))))._field_Mutable)) && _1e5ce0a95_IsMethod((*(_21107_f))._field_Decl)) && (!((*(*(_21107_f))._field_Decl.alloc)._field_Statically))) && (*((*(*(_21107_f))._field_Decl.alloc)._field_Params[0LL]))._field_Mutable)) {
		if ((!((*_self_.alloc)._field_immutable))) {
			_1e5e0aebd_pushErr(_self_, (*((*(_210928_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
		} else {
			jule::Ptr<_1e5cd3aee_StructLitExprModel> _21305_lit = _1e5e3d000_isLitBased(&((*((*(_210950_d))))._field_Model));;
			if ((_21305_lit == nullptr)) {
				_1e5e0aebd_pushErr(_self_, (*((*(_210928_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
			} else {
				_1e5deb4a8_checkMutRiskOfStructLit(&((*_self_.alloc)._field_s), &(_21305_lit));
			};
		};
	} else if (((!(_1e5e0b9b3_isUnsafe(_self_))) && (*(*(_21107_f))._field_Decl.alloc)._field_Unsafety)) {
		_1e5e0aebd_pushErr(_self_, (*((*(_210928_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
	};
	jule::Bool _21427_dynamicAnnotation = ((((*(*(_21107_f))._field_Decl.alloc)._field_Generics.len() > 0LL) && ((*_21107_f.alloc)._field_Generics.len() == 0LL)) && ((*_21107_f.alloc)._field_Params.len() > 0LL));;
	if (_21427_dynamicAnnotation) {
		(*_21107_f.alloc)._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>::alloc((*(*(_21107_f))._field_Decl.alloc)._field_Generics.len(), (*(*(_21107_f))._field_Decl.alloc)._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1e5e3ee14_InsGeneric>(nullptr); __jule_collection; });
	} else if (((*_21107_f.alloc)._field_Generics.len() != (*(*(_21107_f))._field_Decl.alloc)._field_Generics.len())) {
		_1e5d80b9b_checkGenericQuantity((*_self_.alloc)._field_s.ptr(), (*(*(_21107_f))._field_Decl.alloc)._field_Generics.len(), (*_21107_f.alloc)._field_Generics.len(), (*((*(_210928_fc))))._field_Token);
		(*(_210950_d))=nullptr;
		return;;
	};
	jule::Ptr<_1e5d7b768_sema> _21517_old = (*_self_.alloc)._field_s;;
	if (((*(*(_21107_f))._field_Decl.alloc)._field_Owner != nullptr)) {
		(*_self_.alloc)._field_s=(*(*((*(_21107_f))._field_Decl))._field_Owner.alloc)._field_sema;
	};
	__JULE_DEFER({
		if ((_21517_old != (*_self_.alloc)._field_s)) {
			(*(_21517_old))._field_errors=jule::append((*_21517_old.alloc)._field_errors,(*((*_self_.alloc)._field_s))._field_errors);
			(*(*(_self_))._field_s.alloc)._field_errors=nullptr;
		};
		(*_self_.alloc)._field_s=_21517_old;
	});;
	_1e5de8a5a_fnCallArgChecker _21647_fcac = _1e5de8a5a_fnCallArgChecker{._field_e=_self_, ._field_args=(*((*(_210928_fc))))._field_Args, ._field_errorToken=(*((*(_210928_fc))))._field_Token, ._field_f=jule::Ptr<_1e5ce3416_FnIns>(nullptr), ._field_dynamicAnnotation=_21427_dynamicAnnotation, ._field_argModels=jule::Slice<jule::Any>(nullptr), ._field_ignored=jule::Slice<jule::Ptr<_1e5e417ea_TypeKind>>(nullptr)};;
	if ((!(_21427_dynamicAnnotation))) {
		if ((!((*_21107_f.alloc)._field_reloaded))) {
			jule::Bool _21735_ok = _1e5d8b05d_reloadFnInsTypes((*(_self_))._field_s, _21107_f);;
			(*_21107_f.alloc)._field_reloaded=true;
			if ((!(_21735_ok))) {
				(*(_210950_d))=nullptr;
				return;;
			};
		};
		jule::Ptr<_1e5ce3416_FnIns> _21808_existInstance = _1e5ce1e09_appendInstance((*(_21107_f))._field_Decl, &(_21107_f));;
		if ((_21808_existInstance != nullptr)) {
			_21107_f=_21808_existInstance;
		};
	} else if ((!(_1e5d893be_buildFnNonGenericTypeKinds((*(_self_))._field_s, _21107_f, &(_21647_fcac._field_ignored))))) {
		(*(_210950_d))=nullptr;
		return;;
	};
	_21647_fcac._field_f=_21107_f;
	jule::Bool _21917_ok = false;;
	if (((*(*(_21107_f))._field_Decl.alloc)._field_Owner != nullptr)) {
		std::swap(_21517_old, (*_self_.alloc)._field_s);
		_21917_ok=_1e5deb145_check(&_21647_fcac);
		std::swap(_21517_old, (*_self_.alloc)._field_s);
	} else {
		_21917_ok=_1e5deb145_check(&_21647_fcac);
	};
	if (_21427_dynamicAnnotation) {
		if ((!(_21917_ok))) {
			(*(_210950_d))=nullptr;
			return;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1e5e17cdd_checkGenericFn(_self_, &(_21107_f), &((*((*(_210928_fc))))._field_Token), &((*((*(_210950_d))))._field_Model));
			_21917_ok = __jule_assign_result.__jule_result_arg0;
		});
		if ((!(_21917_ok))) {
			(*(_210950_d))=nullptr;
			return;;
		};
	};
	jule::Any _22127_callModel = (*((*(_210950_d))))._field_Model;;
	if (_1e5ce080e_IsVoid((*(_21107_f))._field_Decl)) {
		(*(_210950_d))=_1e5e36009_buildVoidData();
	} else {
		(*((*(_210950_d))))._field_Kind=(*_21107_f.alloc)._field_Result;
		(*((*(_210950_d))))._field_Lvalue=false;
	};
	jule::Ptr<_1e5cd4d31_FnCallExprModel> _22217_model = jule::new_ptr<_1e5cd4d31_FnCallExprModel>(_1e5cd4d31_FnCallExprModel{._field_Token=(*((*(_210928_fc))))._field_Token, ._field_Func=_21107_f, ._field_IsCo=(*((*(_210928_fc))))._field_IsCo, ._field_Expr=_22127_callModel, ._field_Args=_21647_fcac._field_argModels, ._field_Except=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Assigned=false});;
	(*((*(_210950_d))))._field_Model=jule::Any(_22217_model, &__jule_any_type40);
	(*((*(_210950_d))))._field_Mutable=true;
	if ((*(*(_21107_f))._field_Decl.alloc)._field_Exceptional) {
		if ((*((*(_210928_fc))))._field_IsCo) {
			_1e5d7e66c_pushErr((*(_self_))._field_s, (*((*(_210928_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("concurrent calls not supports exceptionals", 42)), jule::Slice<jule::Any>());
			_1e5d7e9d0_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("handle exceptional in a separate function or anonymous function", 63)), jule::Slice<jule::Any>());
		};
		{
			
			if (_1e5cad49c_Unhandled((*(_210928_fc)).ptr())) {
				_case_begin_1cb483d68:;
				{
					_1e5e0aebd_pushErr(_self_, (*((*(_210928_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("exceptionals must be handled", 28)), jule::Slice<jule::Any>());
					_1e5e0b331_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use \"!\" operator after exceptional to handle it", 47)), jule::Slice<jule::Any>());
				}
			}
			else if (_1e5cad733_Ignored((*(_210928_fc)).ptr())) {
				_case_begin_1cb483a49:;
				{
					goto _match_end_1cb48241b;
				}
			}
			else {
				_case_begin_1cb482482:;
				{
					_1e5e205cb_processExceptionalHandler(_self_, &(_21107_f), _210928_fc, _210950_d);
				}
			}
			_match_end_1cb48241b:;
		};
	} else if ((!(_1e5cad49c_Unhandled((*(_210928_fc)).ptr())))) {
		_1e5e0aebd_pushErr(_self_, (*((*(_210928_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49)), jule::Slice<jule::Any>());
	};
	if ((*((*(_210928_fc))))._field_IsCo) {
		(*((*(_22217_model))._field_Func))._field_AsAnon=true;
		(*(*(_22217_model))._field_Func.alloc)._field_CalledCo=true;
		_1e5e201ad_checkFnOfConcurrentCall(_self_, &((*_22217_model.alloc)._field_Func), (*((*(_210928_fc))))._field_Token);
	};
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e20c80_evalFnCall(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Ptr<_1e5cad0e5_FnCallExpr> _225831_fc) {
	jule::Ptr<_1e5e417ea_TypeKind> _22597_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_22597_prefix;
	});;
	{
		auto &_match_expr{ (*((*(_225831_fc))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1cb4892e1:;
			{
				if (((*((*((*(_225831_fc))._field_Expr))._field_Token))._field_Kind == static_cast<jule::Str>(jule::Str::lit("error", 5)))) {
					return _1e602b044_builtinCallerError(&(_self_), &(_225831_fc));;
				};
			}
		}
		_match_end_1cb489269:;
	};
	jule::Ptr<_1e5e08c13_Data> _22727_d = _1e5e2898b_evalExprKind(_self_, (*(*(_225831_fc))._field_Expr.alloc)._field_Kind);;
	if ((_22727_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_22727_d))._field_Decl) {
		_1e5e1e9d7_callTypeFn(_self_, &(_225831_fc), &(_22727_d));
		return _22727_d;;
	};
	if ((_1e5e4528d_Fn((*(_22727_d))._field_Kind.ptr()) == nullptr)) {
		_1e5e0aebd_pushErr(_self_, (*_225831_fc.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("attempting to call a non-function", 33)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1e5e2093e_callFn(_self_, &(_225831_fc), &(_22727_d));
	return _22727_d;;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e2117b_evalEnumStatic(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5d065c2_Enum> _229134_enm, jule::Ptr<_1e5c8eacc_Token> _229150_ident) {
	jule::Ptr<_1e5d05a55_EnumItem> _22927_item = _1e5d071e9_FindItem(_229134_enm.ptr(), (*(_229150_ident))._field_Kind);;
	if ((_22927_item == nullptr)) {
		_1e5e0aebd_pushErr(_self_, _229150_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_229134_enm.alloc)._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*_229150_ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	return _1e5e3cc36_evalEnumStatic(&((*(_self_))._field_s), &(_229134_enm), &(_22927_item), &(_229150_ident), _1e5e0dec1_getOwnerRefers(_self_));;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e21577_evalTypeEnumStatic(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5d07ccc_TypeEnum> _229938_enm, jule::Ptr<_1e5c8eacc_Token> _229954_ident) {
	jule::Ptr<_1e5d07705_TypeEnumItem> _23007_item = _1e5d088c1_FindItem(_229938_enm.ptr(), (*(_229954_ident))._field_Kind);;
	if ((_23007_item == nullptr)) {
		_1e5e0aebd_pushErr(_self_, _229954_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_229938_enm.alloc)._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*_229954_ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	{
		
		if ((_1e5e44754_Enum((*((*(_23007_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cb4930ec:;
			{
				return _1e5e0e5ba__evalEnum(_self_, _1e5e44754_Enum((*((*(_23007_item))._field_Kind))._field_Kind));;
			}
		}
		else if ((_1e5e449da_TypeEnum((*((*(_23007_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cb491271:;
			{
				return _1e5e0ed07__evalTypeEnum(_self_, _1e5e449da_TypeEnum((*((*(_23007_item))._field_Kind))._field_Kind));;
			}
		}
		else if ((_1e5e45524_Struct((*((*(_23007_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cb4912d7:;
			{
				return _1e5e10544__evalStruct(_self_, _1e5e45524_Struct((*((*(_23007_item))._field_Kind))._field_Kind));;
			}
		}
		else {
			_case_begin_1cb49120a:;
			{
				jule::Ptr<_1e5e08c13_Data> _23138_d = jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=(*((*(_23007_item))._field_Kind))._field_Kind, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)});;
				(*(_23138_d))._field_Model=jule::Any((*_23138_d.alloc)._field_Kind, &__jule_any_type86);
				return _23138_d;;
			}
		}
		_match_end_1cb4913c5:;
	};
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e21973_evalStructStatic(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5cc8c7b_StructIns> _232236_s, jule::Ptr<_1e5c8eacc_Token> _232251_ident) {
	jule::Ptr<_1e5e08c13_Data> _23237_d = jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)});;
	;
	jule::Ptr<_1e5ce0358_Fn> _23277_method = _1e5cc9d26_FindMethod(_232236_s.ptr(), (*(_232251_ident))._field_Kind, true);;
	if ((_23277_method != nullptr)) {
		if ((!(_1e5d7edcb_isAccessibleDefine((*(_self_))._field_s.ptr(), (*_23277_method.alloc)._field_Public, (*_23277_method.alloc)._field_Token)))) {
			_1e5e0aebd_pushErr(_self_, _232251_ident, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_232251_ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
			_1e5e0b331_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1e5ce3416_FnIns> _23348_ins = _1e5ce1aeb_instance(_23277_method);;
		(*(_23348_ins))._field_Owner=_232236_s;
		_1caeb4712_pushReference(_self_, &(_23348_ins));
		(*_23237_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1e5cd7c68_StructStaticIdentExprModel>(_1e5cd7c68_StructStaticIdentExprModel{._field_Structure=_232236_s, ._field_Expr=(*_23237_d.alloc)._field_Model, ._field_Method=_23348_ins}), &__jule_any_type98);
		(*_23237_d.alloc)._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_23348_ins, (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data1)});
		return _23237_d;;
	};
	jule::Ptr<_1e5da0bcc_Var> _23487_sttc = _1e5cca4a8_FindStatic(_232236_s, (*_232251_ident.alloc)._field_Kind);;
	if ((_23487_sttc != nullptr)) {
		return _1e5e12601_evalVar(_self_, _23487_sttc, _232251_ident);;
	};
	_1e5e0aebd_pushErr(_self_, _232251_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_232236_s.alloc)._field_Decl))._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*_232251_ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e21e29_evalTraitSubIdent(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5e08c13_Data> _235737_d, jule::Ptr<_1e5d03db6_Trait> _235751_trt, jule::Ptr<_1e5c8eacc_Token> _235768_ident) {
	jule::Ptr<_1e5ce0358_Fn> _23587_f = _1e5d04a98_FindMethod(_235751_trt.ptr(), (*(_235768_ident))._field_Kind);;
	if ((_23587_f == nullptr)) {
		_1e5e0aebd_pushErr(_self_, _235768_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_235751_trt.alloc)._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*_235768_ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1e5ce1aeb_instance(_23587_f), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data1)}), ._field_Mutable=(*(_235737_d))._field_Mutable, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(jule::new_ptr<_1e5cd7031_TraitSubIdentExprModel>(_1e5cd7031_TraitSubIdentExprModel{._field_Token=_235768_ident, ._field_Expr=(*_235737_d.alloc)._field_Model, ._field_Method=_23587_f, ._field_Trt=_235751_trt}), &__jule_any_type99), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)});;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e2248a_evalStructSubIdentField(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5e08c13_Data>* _237944_d, jule::Ptr<_1e5cc8c7b_StructIns>* _237959_s, jule::Ptr<_1e5c8eacc_Token>* _237979_tok, jule::Ptr<_1e5cc81cb_FieldIns>* _237997_f) {
	jule::Ptr<_1e5cd78c2_StructSubIdentExprModel> _23807_model = jule::new_ptr<_1e5cd78c2_StructSubIdentExprModel>(_1e5cd78c2_StructSubIdentExprModel{._field_Token=(*(_237979_tok)), ._field_Expr=jule::new_ptr<_1e5e08c13_Data>((*((*(_237944_d))))), ._field_Method=jule::Ptr<_1e5ce3416_FnIns>(nullptr), ._field_Field=(*(_237997_f)), ._field_Owner=(*(_237959_s))});;
	(*((*(_237944_d))))._field_Model=jule::Any(_23807_model, &__jule_any_type100);
	(*((*(_237944_d))))._field_Kind=(*((*(_237997_f))))._field_Kind;
	(*((*(_237944_d))))._field_Lvalue=true;
	if (((*((*((*(_237997_f))))._field_Decl))._field_Mutable && (!((*((*(_237944_d))))._field_Mutable)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data0)) {
				_case_begin_1cb4a7d7b:;
				{
					jule::Ptr<_1e5d40771_scopeChecker> _23955_scope = _1e5d43dd4_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1e5d40771_scopeChecker>((jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data0));;
					(*((*(_237944_d))))._field_Mutable=(((*(_23955_scope))._field_owner != nullptr) && ((*(*(_23955_scope))._field_owner.alloc)._field_Owner == (*(_237959_s))));
				}
			}
			_match_end_1cb4a7d15:;
		};
	};
	return (*(_237944_d));;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e22aa6_evalStructSubIdentMethod(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5e08c13_Data>* _240445_d, jule::Ptr<_1e5cc8c7b_StructIns>* _240460_s, jule::Ptr<_1e5c8eacc_Token>* _240480_tok, jule::Ptr<_1e5ce0358_Fn>* _240498_m, jule::Bool _2404106_ref) {
	if ((_1e5cde269_IsRef((*((*(_240498_m))))._field_Params[0LL].ptr()) && (!(_2404106_ref)))) {
		_1e5e0aebd_pushErr(_self_, (*(_240480_tok)), static_cast<jule::Str>(jule::Str::lit("reference method cannot use with non-reference instance", 55)), jule::Slice<jule::Any>());
	};
	_1e5e110e4_checkDeprecated(_self_, &((*((*(_240498_m))))._field_Directives), (*(_240480_tok)));
	jule::Ptr<_1e5ce3416_FnIns> _24117_ins = _1e5ce1aeb_instance((*(_240498_m)));;
	(*(_24117_ins))._field_Owner=(*(_240460_s));
	_1caeb4712_pushReference(_self_, &(_24117_ins));
	jule::Ptr<_1e5e08c13_Data> _24147_model = jule::new_ptr<_1e5e08c13_Data>((*((*(_240445_d)))));;
	(*((*(_240445_d))))._field_Model=jule::Any(jule::new_ptr<_1e5cd78c2_StructSubIdentExprModel>(_1e5cd78c2_StructSubIdentExprModel{._field_Token=(*(_240480_tok)), ._field_Expr=_24147_model, ._field_Method=_24117_ins, ._field_Field=jule::Ptr<_1e5cc81cb_FieldIns>(nullptr), ._field_Owner=(*(_240460_s))}), &__jule_any_type100);
	(*((*(_240445_d))))._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_24117_ins, (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data1)});
	return (*(_240445_d));;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e23117_evalStructSubIdent(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5e08c13_Data> _242538_d, jule::Ptr<_1e5cc8c7b_StructIns> _242552_s, jule::Ptr<_1e5cac4ce_SubIdentExpr> _242571_si, jule::Bool _242590_ref) {
	jule::Ptr<_1e5cc81cb_FieldIns> _24267_f = _1e5cca167_FindField(_242552_s.ptr(), (*((*(_242571_si))._field_Ident))._field_Kind);;
	if ((_24267_f != nullptr)) {
		if ((!(_1e5d7edcb_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*_24267_f.alloc)._field_Decl))._field_Public, (*(*(_24267_f))._field_Decl.alloc)._field_Token)))) {
			_1e5e0aebd_pushErr(_self_, (*_242571_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_24267_f))._field_Decl.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
			_1e5e0b331_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		};
		return _1e5e2248a_evalStructSubIdentField(_self_, &(_242538_d), &(_242552_s), &((*_242571_si.alloc)._field_Ident), &(_24267_f));;
	};
	;
	jule::Ptr<_1e5ce0358_Fn> _24367_m = _1e5cc9d26_FindMethod(_242552_s, (*(*(_242571_si))._field_Ident.alloc)._field_Kind, false);;
	if ((_24367_m == nullptr)) {
		_1e5e0aebd_pushErr(_self_, (*_242571_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_242552_s.alloc)._field_Decl))._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*(*(_242571_si))._field_Ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if ((!(_1e5d7edcb_isAccessibleDefine((*(_self_))._field_s, (*(_24367_m))._field_Public, (*(_24367_m))._field_Token)))) {
		_1e5e0aebd_pushErr(_self_, (*_242571_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_24367_m))._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1e5e0b331_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
	};
	return _1e5e22aa6_evalStructSubIdentMethod(_self_, &(_242538_d), &(_242552_s), &((*_242571_si.alloc)._field_Ident), &(_24367_m), _242590_ref);;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e23458_evalIntTypeStatic(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5c8eacc_Token> _244933_ident) {
	;
	{
		auto &_match_expr{ (*(_244933_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1cb4b861c:;
			{
				jule::Ptr<_1e21a449b_Const> _24538_c = static__1e21a491e_NewI64(_1e219e892_MaxI(jule::Str::lit("int", 3)));;
				(*(_24538_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=true, ._field_Kind=_1e60275b2_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24538_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_24538_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1cb4b9233:;
			{
				jule::Ptr<_1e21a449b_Const> _24628_c = static__1e21a491e_NewI64(static_cast<jule::I64>(_1e219ee9c_Min(jule::Str::lit("int", 3))));;
				(*(_24628_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=true, ._field_Kind=_1e60275b2_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24628_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_24628_c});;
			}
		}
		else {
			_case_begin_1cb4b7ee0:;
			{
				_1e5e0aebd_pushErr(_self_, _244933_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("int", 3), &__jule_any_type4); (*it++) = jule::Any((*(_244933_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1cb4b8243:;
	};
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e23799_evalUintTypeStatic(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5c8eacc_Token> _247634_ident) {
	;
	{
		auto &_match_expr{ (*(_247634_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1cb4bc8b8:;
			{
				jule::Ptr<_1e21a449b_Const> _24808_c = static__1e21a4bd8_NewU64(_1e219eb5b_MaxU(jule::Str::lit("uint", 4)));;
				(*(_24808_c))._field_Kind=jule::Str::lit("uint", 4);
				return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=true, ._field_Kind=_1e60271e9_primUint, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24808_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_24808_c});;
			}
		}
		else {
			_case_begin_1cb4bc2be:;
			{
				_1e5e0aebd_pushErr(_self_, _247634_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("uint", 4), &__jule_any_type4); (*it++) = jule::Any((*(_247634_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1cb4bc4de:;
	};
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e23ada_evalI8TypeStatic(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5c8eacc_Token> _249432_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_249432_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1cb4c0d0b:;
			{
				jule::Ptr<_1e21a449b_Const> _25008_c = static__1e21a491e_NewI64(127LL);;
				(*(_25008_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=true, ._field_Kind=_1e6027804_primI8, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25008_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_25008_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1cb4c1922:;
			{
				jule::Ptr<_1e21a449b_Const> _25098_c = static__1e21a491e_NewI64(-128LL);;
				(*(_25098_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=true, ._field_Kind=_1e6027804_primI8, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25098_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_25098_c});;
			}
		}
		else {
			_case_begin_1cb4c0525:;
			{
				_1e5e0aebd_pushErr(_self_, _249432_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i8", 2), &__jule_any_type4); (*it++) = jule::Any((*(_249432_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1cb4c0943:;
	};
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e23e2b_evalI16TypeStatic(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5c8eacc_Token> _252333_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_252333_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1cb4c5591:;
			{
				jule::Ptr<_1e21a449b_Const> _25298_c = static__1e21a491e_NewI64(32767LL);;
				(*(_25298_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=true, ._field_Kind=_1e6027a9b_primI16, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25298_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_25298_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1cb4c61a7:;
			{
				jule::Ptr<_1e21a449b_Const> _25388_c = static__1e21a491e_NewI64(-32768LL);;
				(*(_25388_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=true, ._field_Kind=_1e6027a9b_primI16, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25388_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_25388_c});;
			}
		}
		else {
			_case_begin_1cb4c4c99:;
			{
				_1e5e0aebd_pushErr(_self_, _252333_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i16", 3), &__jule_any_type4); (*it++) = jule::Any((*(_252333_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1cb4c51c8:;
	};
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e2426c_evalI32TypeStatic(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5c8eacc_Token> _255233_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_255233_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1cb4c9d26:;
			{
				jule::Ptr<_1e21a449b_Const> _25588_c = static__1e21a491e_NewI64(2147483647LL);;
				(*(_25588_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=true, ._field_Kind=_1e6027d54_primI32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25588_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_25588_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1cb4ca93c:;
			{
				jule::Ptr<_1e21a449b_Const> _25678_c = static__1e21a491e_NewI64(-2147483648LL);;
				(*(_25678_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=true, ._field_Kind=_1e6027d54_primI32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25678_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_25678_c});;
			}
		}
		else {
			_case_begin_1cb4c952e:;
			{
				_1e5e0aebd_pushErr(_self_, _255233_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i32", 3), &__jule_any_type4); (*it++) = jule::Any((*(_255233_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1cb4c995d:;
	};
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e245ad_evalI64TypeStatic(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5c8eacc_Token> _258133_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_258133_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1cb4ce5ab:;
			{
				jule::Ptr<_1e21a449b_Const> _25878_c = static__1e21a491e_NewI64(jule::MAX_I64);;
				(*(_25878_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=true, ._field_Kind=_1e602810c_primI64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25878_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_25878_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1cb4d01c2:;
			{
				jule::Ptr<_1e21a449b_Const> _25968_c = static__1e21a491e_NewI64(jule::MIN_I64);;
				(*(_25968_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=true, ._field_Kind=_1e602810c_primI64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25968_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_25968_c});;
			}
		}
		else {
			_case_begin_1cb4cdcb4:;
			{
				_1e5e0aebd_pushErr(_self_, _258133_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i64", 3), &__jule_any_type4); (*it++) = jule::Any((*(_258133_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1cb4ce1e3:;
	};
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e248ee_evalU8TypeStatic(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5c8eacc_Token> _261032_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_261032_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1cb4d39ab:;
			{
				jule::Ptr<_1e21a449b_Const> _26158_c = static__1e21a4bd8_NewU64(255LLU);;
				(*(_26158_c))._field_Kind=jule::Str::lit("u8", 2);
				return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=true, ._field_Kind=_1e60283b5_primU8, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26158_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_26158_c});;
			}
		}
		else {
			_case_begin_1cb4d3181:;
			{
				_1e5e0aebd_pushErr(_self_, _261032_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u8", 2), &__jule_any_type4); (*it++) = jule::Any((*(_261032_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1cb4d3549:;
	};
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e24c40_evalU16TypeStatic(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5c8eacc_Token> _262933_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_262933_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1cb4d696a:;
			{
				jule::Ptr<_1e21a449b_Const> _26348_c = static__1e21a4bd8_NewU64(65535LLU);;
				(*(_26348_c))._field_Kind=jule::Str::lit("u16", 3);
				return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=true, ._field_Kind=_1e602866d_primU16, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26348_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_26348_c});;
			}
		}
		else {
			_case_begin_1cb4d5ded:;
			{
				_1e5e0aebd_pushErr(_self_, _262933_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u16", 3), &__jule_any_type4); (*it++) = jule::Any((*(_262933_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1cb4d6508:;
	};
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e25081_evalU32TypeStatic(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5c8eacc_Token> _264833_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_264833_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1cb4d9929:;
			{
				jule::Ptr<_1e21a449b_Const> _26538_c = static__1e21a4bd8_NewU64(4294967295LLU);;
				(*(_26538_c))._field_Kind=jule::Str::lit("u32", 3);
				return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=true, ._field_Kind=_1e6028926_primU32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26538_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_26538_c});;
			}
		}
		else {
			_case_begin_1cb4d8dac:;
			{
				_1e5e0aebd_pushErr(_self_, _264833_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u32", 3), &__jule_any_type4); (*it++) = jule::Any((*(_264833_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1cb4d94b7:;
	};
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e253c2_evalU64TypeStatic(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5c8eacc_Token> _266733_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_266733_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1cb4dc8d8:;
			{
				jule::Ptr<_1e21a449b_Const> _26728_c = static__1e21a4bd8_NewU64(jule::MAX_U64);;
				(*(_26728_c))._field_Kind=jule::Str::lit("u64", 3);
				return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=true, ._field_Kind=_1e6028e10_primU64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26728_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_26728_c});;
			}
		}
		else {
			_case_begin_1cb4dbd6b:;
			{
				_1e5e0aebd_pushErr(_self_, _266733_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u64", 3), &__jule_any_type4); (*it++) = jule::Any((*(_266733_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1cb4dc476:;
	};
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e25713_evalF32TypeStatic(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5c8eacc_Token> _268633_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_268633_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1cb4e106d:;
			{
				jule::Ptr<_1e21a449b_Const> _26938_c = static__1e21a5535_NewF64(340282346638528860000000000000000000000.0);;
				(*(_26938_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=true, ._field_Kind=_1e6029152_primF32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26938_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_26938_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1cb4e1b84:;
			{
				jule::Ptr<_1e21a449b_Const> _27028_c = static__1e21a5535_NewF64(-340282346638528860000000000000000000000.0);;
				(*(_27028_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=true, ._field_Kind=_1e6029152_primF32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_27028_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_27028_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_1cb4e1bea:;
			{
				jule::Ptr<_1e21a449b_Const> _27118_c = static__1e21a5535_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				(*(_27118_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=true, ._field_Kind=_1e6029152_primF32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_27118_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_27118_c});;
			}
		}
		else {
			_case_begin_1cb4e0842:;
			{
				_1e5e0aebd_pushErr(_self_, _268633_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("f32", 3), &__jule_any_type4); (*it++) = jule::Any((*(_268633_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1cb4e0b94:;
	};
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e25a54_evalF64TypeStatic(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5c8eacc_Token> _272533_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_272533_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1cb4e6cdd:;
			{
				jule::Ptr<_1e21a449b_Const> _27328_c = static__1e21a5535_NewF64(jule::MAX_F64);;
				(*(_27328_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=true, ._field_Kind=_1e6029361_primF64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_27328_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_27328_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1cb4e7904:;
			{
				jule::Ptr<_1e21a449b_Const> _27418_c = static__1e21a5535_NewF64(jule::MIN_F64);;
				(*(_27418_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=true, ._field_Kind=_1e6029361_primF64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_27418_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_27418_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_1cb4e796a:;
			{
				jule::Ptr<_1e21a449b_Const> _27508_c = static__1e21a5535_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				(*(_27508_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=true, ._field_Kind=_1e6029361_primF64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_27508_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_27508_c});;
			}
		}
		else {
			_case_begin_1cb4e65b2:;
			{
				_1e5e0aebd_pushErr(_self_, _272533_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("f64", 3), &__jule_any_type4); (*it++) = jule::Any((*(_272533_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1cb4e6914:;
	};
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e25e50_evalPrimStatic(_1e5e0a93a_eval* _self_, jule::Str _276430_kind, jule::Ptr<_1e5c8eacc_Token> _276441_ident) {
	{
		auto &_match_expr{ _276430_kind };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("int", 3))) {
			_case_begin_1cb4eb8d6:;
			{
				return _1e5e23458_evalIntTypeStatic(_self_, _276441_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("uint", 4))) {
			_case_begin_1cb4ec497:;
			{
				return _1e5e23799_evalUintTypeStatic(_self_, _276441_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i8", 2))) {
			_case_begin_1cb4ec50d:;
			{
				return _1e5e23ada_evalI8TypeStatic(_self_, _276441_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i16", 3))) {
			_case_begin_1cb4eb595:;
			{
				return _1e5e23e2b_evalI16TypeStatic(_self_, _276441_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i32", 3))) {
			_case_begin_1cb4eb60b:;
			{
				return _1e5e2426c_evalI32TypeStatic(_self_, _276441_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i64", 3))) {
			_case_begin_1cb4eb672:;
			{
				return _1e5e245ad_evalI64TypeStatic(_self_, _276441_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u8", 2))) {
			_case_begin_1cb4eb6d8:;
			{
				return _1e5e248ee_evalU8TypeStatic(_self_, _276441_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u16", 3))) {
			_case_begin_1cb4ec5eb:;
			{
				return _1e5e24c40_evalU16TypeStatic(_self_, _276441_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u32", 3))) {
			_case_begin_1cb4ec662:;
			{
				return _1e5e25081_evalU32TypeStatic(_self_, _276441_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u64", 3))) {
			_case_begin_1cb4ec6c8:;
			{
				return _1e5e253c2_evalU64TypeStatic(_self_, _276441_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f32", 3))) {
			_case_begin_1cb4ec73e:;
			{
				return _1e5e25713_evalF32TypeStatic(_self_, _276441_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f64", 3))) {
			_case_begin_1cb4ec7a5:;
			{
				return _1e5e25a54_evalF64TypeStatic(_self_, _276441_ident);;
			}
		}
		else {
			_case_begin_1cb4e7b46:;
			{
				_1e5e0aebd_pushErr(_self_, _276441_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_276430_kind, &__jule_any_type4); (*it++) = jule::Any((*(_276441_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1cb4e7bbd:;
	};
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e2634b_evalTypeStatic(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5e08c13_Data> _279634_d, jule::Ptr<_1e5cac4ce_SubIdentExpr> _279648_si) {
	{
		
		if ((_1e5e43ea1_Prim((*(_279634_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cb502854:;
			{
				return _1e5e25e50_evalPrimStatic(_self_, _1e5e49c87_Str(_1e5e43ea1_Prim((*(_279634_d))._field_Kind).ptr()), (*(_279648_si))._field_Ident);;
			}
		}
		else if ((_1e5e44754_Enum((*(_279634_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cb5037de:;
			{
				return _1e5e2117b_evalEnumStatic(_self_, _1e5e44754_Enum((*(_279634_d))._field_Kind), (*(_279648_si))._field_Ident);;
			}
		}
		else if ((_1e5e449da_TypeEnum((*(_279634_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cb503855:;
			{
				return _1e5e21577_evalTypeEnumStatic(_self_, _1e5e449da_TypeEnum((*(_279634_d))._field_Kind), (*(_279648_si))._field_Ident);;
			}
		}
		else if ((_1e5e45524_Struct((*(_279634_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cb5024e1:;
			{
				return _1e5e21973_evalStructStatic(_self_, _1e5e45524_Struct((*(_279634_d))._field_Kind), (*(_279648_si))._field_Ident);;
			}
		}
		else {
			_case_begin_1cb50247a:;
			{
				_1e5e0aebd_pushErr(_self_, (*(_279648_si))._field_Ident, static_cast<jule::Str>(jule::Str::lit("type @ is not supports sub-defines", 34)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*(_279634_d))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1cb5023c0:;
	};
}



inline jule::Ptr<_1e5e08c13_Data> _1cb50a807_comptimeObjSubIdent(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5d1a608_comptimeTypeInfo>* _281254_ct, jule::Ptr<_1e5e08c13_Data>* _281274_d, jule::Ptr<_1e5cac4ce_SubIdentExpr>* _281285_si) {
	jule::Ptr<_1e5e08c13_Data> _28137_cd = _1e5d21433_subIdent((*(_281254_ct)), &((*((*((*(_281285_si))))._field_Ident))._field_Kind));;
	if ((_28137_cd == nullptr)) {
		_1e5e0aebd_pushErr(_self_, (*((*(_281285_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*((*(_281274_d))))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any((*(*((*(_281285_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	return _28137_cd;;
}

inline jule::Ptr<_1e5e08c13_Data> _1cb5100e2_comptimeObjSubIdent(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5d0b264_comptimeStructField>* _281254_ct, jule::Ptr<_1e5e08c13_Data>* _281274_d, jule::Ptr<_1e5cac4ce_SubIdentExpr>* _281285_si) {
	jule::Ptr<_1e5e08c13_Data> _28137_cd = _1e5d0c6a5_subIdent((*(_281254_ct)), &((*((*((*(_281285_si))))._field_Ident))._field_Kind));;
	if ((_28137_cd == nullptr)) {
		_1e5e0aebd_pushErr(_self_, (*((*(_281285_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*((*(_281274_d))))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any((*(*((*(_281285_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	return _28137_cd;;
}

inline jule::Ptr<_1e5e08c13_Data> _1cb514866_comptimeObjSubIdent(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5d126aa_comptimeEnumField>* _281254_ct, jule::Ptr<_1e5e08c13_Data>* _281274_d, jule::Ptr<_1e5cac4ce_SubIdentExpr>* _281285_si) {
	jule::Ptr<_1e5e08c13_Data> _28137_cd = _1e5d136de_subIdent((*(_281254_ct)), &((*((*((*(_281285_si))))._field_Ident))._field_Kind));;
	if ((_28137_cd == nullptr)) {
		_1e5e0aebd_pushErr(_self_, (*((*(_281285_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*((*(_281274_d))))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any((*(*((*(_281285_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	return _28137_cd;;
}

inline jule::Ptr<_1e5e08c13_Data> _1cb51912e_comptimeObjSubIdent(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5d154c1_comptimeParam>* _281254_ct, jule::Ptr<_1e5e08c13_Data>* _281274_d, jule::Ptr<_1e5cac4ce_SubIdentExpr>* _281285_si) {
	jule::Ptr<_1e5e08c13_Data> _28137_cd = _1e5d16d1e_subIdent((*(_281254_ct)), &((*((*((*(_281285_si))))._field_Ident))._field_Kind));;
	if ((_28137_cd == nullptr)) {
		_1e5e0aebd_pushErr(_self_, (*((*(_281285_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*((*(_281274_d))))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any((*(*((*(_281285_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	return _28137_cd;;
}

inline jule::Ptr<_1e5e08c13_Data> _1cb51db28_comptimeObjSubIdent(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5d0e487_comptimeStatic>* _281254_ct, jule::Ptr<_1e5e08c13_Data>* _281274_d, jule::Ptr<_1e5cac4ce_SubIdentExpr>* _281285_si) {
	jule::Ptr<_1e5e08c13_Data> _28137_cd = _1e5d108c8_subIdent((*(_281254_ct)), &((*((*((*(_281285_si))))._field_Ident))._field_Kind));;
	if ((_28137_cd == nullptr)) {
		_1e5e0aebd_pushErr(_self_, (*((*(_281285_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*((*(_281274_d))))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any((*(*((*(_281285_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	return _28137_cd;;
}

inline jule::Ptr<_1e5e08c13_Data> _1cb52339c_comptimeObjSubIdent(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5d2170d_comptimeValue>* _281254_ct, jule::Ptr<_1e5e08c13_Data>* _281274_d, jule::Ptr<_1e5cac4ce_SubIdentExpr>* _281285_si) {
	jule::Ptr<_1e5e08c13_Data> _28137_cd = _1e5d2418e_subIdent((*(_281254_ct)), &((*((*((*(_281285_si))))._field_Ident))._field_Kind));;
	if ((_28137_cd == nullptr)) {
		_1e5e0aebd_pushErr(_self_, (*((*(_281285_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*((*(_281274_d))))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any((*(*((*(_281285_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	return _28137_cd;;
}

inline jule::Ptr<_1e5e08c13_Data> _1cb527b21_comptimeObjSubIdent(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5d25dd8_comptimeFile>* _281254_ct, jule::Ptr<_1e5e08c13_Data>* _281274_d, jule::Ptr<_1e5cac4ce_SubIdentExpr>* _281285_si) {
	jule::Ptr<_1e5e08c13_Data> _28137_cd = _1e5d27736_subIdent((*(_281254_ct)), &((*((*((*(_281285_si))))._field_Ident))._field_Kind));;
	if ((_28137_cd == nullptr)) {
		_1e5e0aebd_pushErr(_self_, (*((*(_281285_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*((*(_281274_d))))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any((*(*((*(_281285_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	return _28137_cd;;
}

inline jule::Ptr<_1e5e08c13_Data> _1cb52c42d_comptimeObjSubIdent(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5d29cee_comptimeDecl>* _281254_ct, jule::Ptr<_1e5e08c13_Data>* _281274_d, jule::Ptr<_1e5cac4ce_SubIdentExpr>* _281285_si) {
	jule::Ptr<_1e5e08c13_Data> _28137_cd = _1e5d2db5a_subIdent((*(_281254_ct)), &((*((*((*(_281285_si))))._field_Ident))._field_Kind));;
	if ((_28137_cd == nullptr)) {
		_1e5e0aebd_pushErr(_self_, (*((*(_281285_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*((*(_281274_d))))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any((*(*((*(_281285_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	return _28137_cd;;
}



inline __jule_tuple_x_1e5e08c13_Data__jule_tuple_bool _1e5e26bed_tryComptimeObjSubIdent(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5e08c13_Data>* _282043_d, jule::Ptr<_1e5cac4ce_SubIdentExpr> _282057_si) {
	__jule_tuple_x_1e5e08c13_Data__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((_1e5e47867_comptimeTypeInfo((*((*(_282043_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cb508c12:;
			{
				jule::Ptr<_1e5d1a608_comptimeTypeInfo> _28238_ct = _1e5e47867_comptimeTypeInfo((*((*(_282043_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1cb50a807_comptimeObjSubIdent(_self_, &(_28238_ct), _282043_d, &(_282057_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1e5e4657a_comptimeStructField((*((*(_282043_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cb50874a:;
			{
				jule::Ptr<_1e5d0b264_comptimeStructField> _28268_ct = _1e5e4657a_comptimeStructField((*((*(_282043_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1cb5100e2_comptimeObjSubIdent(_self_, &(_28268_ct), _282043_d, &(_282057_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1e5e46a97_comptimeEnumField((*((*(_282043_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cb5087c2:;
			{
				jule::Ptr<_1e5d126aa_comptimeEnumField> _28298_ct = _1e5e46a97_comptimeEnumField((*((*(_282043_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1cb514866_comptimeObjSubIdent(_self_, &(_28298_ct), _282043_d, &(_282057_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1e5e470b4_comptimeParam((*((*(_282043_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cb508849:;
			{
				jule::Ptr<_1e5d154c1_comptimeParam> _28328_ct = _1e5e470b4_comptimeParam((*((*(_282043_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1cb51912e_comptimeObjSubIdent(_self_, &(_28328_ct), _282043_d, &(_282057_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1e5e47d84_comptimeStatic((*((*(_282043_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cb5088c1:;
			{
				jule::Ptr<_1e5d0e487_comptimeStatic> _28358_ct = _1e5e47d84_comptimeStatic((*((*(_282043_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1cb51db28_comptimeObjSubIdent(_self_, &(_28358_ct), _282043_d, &(_282057_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1e5e4811a_comptimeValue((*((*(_282043_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cb508948:;
			{
				jule::Ptr<_1e5d2170d_comptimeValue> _28388_ct = _1e5e4811a_comptimeValue((*((*(_282043_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1cb52339c_comptimeObjSubIdent(_self_, &(_28388_ct), _282043_d, &(_282057_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1e5e488bd_comptimeFile((*((*(_282043_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cb508e76:;
			{
				jule::Ptr<_1e5d25dd8_comptimeFile> _28418_ct = _1e5e488bd_comptimeFile((*((*(_282043_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1cb527b21_comptimeObjSubIdent(_self_, &(_28418_ct), _282043_d, &(_282057_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1e5e483a1_comptimeDecl((*((*(_282043_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cb508edc:;
			{
				jule::Ptr<_1e5d29cee_comptimeDecl> _28448_ct = _1e5e483a1_comptimeDecl((*((*(_282043_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1cb52c42d_comptimeObjSubIdent(_self_, &(_28448_ct), _282043_d, &(_282057_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1cb5086d4:;
			{
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		_match_end_1cb508629:;
	};
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e270e9_evalObjSubIdent(_1e5e0a93a_eval* _self_, jule::Ptr<_1e5e08c13_Data> _285135_d, jule::Ptr<_1e5cac4ce_SubIdentExpr> _285149_si) {
	if (_1e5c924b4_IsIgnoreIdent((*((*(_285149_si))._field_Ident))._field_Kind)) {
		_1e5e0aebd_pushErr(_self_, (*_285149_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		jule::Ptr<_1e5e08c13_Data> _28588_compData;
		jule::Bool _285818_ok;
		({
			__jule_tuple_x_1e5e08c13_Data__jule_tuple_bool __jule_assign_result = _1e5e26bed_tryComptimeObjSubIdent(_self_, &(_285135_d), _285149_si);
			_28588_compData = __jule_assign_result.__jule_result_arg0;
			_285818_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_285818_ok) {
			return _28588_compData;;
		};
	};
	jule::Ptr<_1e5e417ea_TypeKind> _28647_kind = (*(_285135_d))._field_Kind;;
	{
		
		if ((_1e5e444bd_Ptr((*_285135_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cb532763:;
			{
				jule::Ptr<_1e5e51c06_Ptr> _28674_ptr = _1e5e444bd_Ptr((*(_285135_d))._field_Kind);;
				if (_1e5e52773_IsUnsafe(_28674_ptr.ptr())) {
					goto _match_end_1cb5326db;
				};
				if ((!(_1e5e0b9b3_isUnsafe(_self_)))) {
					_1e5e0aebd_pushErr(_self_, (*_285149_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
				};
				_28647_kind=(*(_1e5e444bd_Ptr((*(_285135_d))._field_Kind)))._field_Elem;
				_1e5e3d2db_makeImplicitDeref(&(_285135_d), (*_285149_si.alloc)._field_Ident);
			}
		}
		else if ((_1e5e44237_Sptr((*_285135_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cb53280c:;
			{
				_28647_kind=(*(_1e5e44237_Sptr((*(_285135_d))._field_Kind)))._field_Elem;
				_1e5e3d2db_makeImplicitDeref(&(_285135_d), (*_285149_si.alloc)._field_Ident);
			}
		}
		_match_end_1cb5326db:;
	};
	{
		
		if ((_1e5e457aa_Trait((*_285135_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cb532cc4:;
			{
				return _1e5e21e29_evalTraitSubIdent(_self_, _285135_d, _1e5e457aa_Trait((*(_285135_d))._field_Kind), (*_285149_si.alloc)._field_Ident);;
			}
		}
		else if ((_1e5e45524_Struct(_28647_kind.ptr()) != nullptr)) {
			_case_begin_1cb5360e6:;
			{
				jule::Ptr<_1e5cc8c7b_StructIns> _28854_s = _1e5e45524_Struct(_28647_kind);;
				if (_1e5e349ca_isInstancedStruct(_28854_s)) {
					jule::Bool _28879_usedReferenceElem = (_1e5e44237_Sptr((*_285135_d.alloc)._field_Kind.ptr()) != nullptr);;
					return _1e5e23117_evalStructSubIdent(_self_, _285135_d, _1e5e45524_Struct(_28647_kind), _285149_si, _28879_usedReferenceElem);;
				};
			}
		}
		_match_end_1cb536080:;
	};
	_1e5e0aebd_pushErr(_self_, (*_285149_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("object @ is not supports sub-defines", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*_285135_d.alloc)._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e2743a_evalSubIdent(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Ptr<_1e5cac4ce_SubIdentExpr> _289533_si) {
	jule::Ptr<_1e5e417ea_TypeKind> _28967_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_28967_prefix;
	});;
	jule::Ptr<_1e5e08c13_Data> _28997_d = _1e5e2898b_evalExprKind(_self_, (*((*(_289533_si))._field_Expr))._field_Kind);;
	if ((_28997_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_28997_d))._field_Decl) {
		return _1e5e2634b_evalTypeStatic(_self_, _28997_d, _289533_si);;
	};
	return _1e5e270e9_evalObjSubIdent(_self_, _28997_d, _289533_si);;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e2777b_evalTuple(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Ptr<_1e5ca9eb0_TupleExpr> _290930_tup) {
	jule::Ptr<_1e5e4ea06_Tuple> _29107_tupT = jule::new_ptr<_1e5e4ea06_Tuple>(_1e5e4ea06_Tuple{._field_Types=jule::Slice<jule::Ptr<_1e5e417ea_TypeKind>>(nullptr)});;
	(*_29107_tupT.alloc)._field_Types=({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5e417ea_TypeKind>>::alloc(0LL, (*(_290930_tup))._field_Expr.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1e5e417ea_TypeKind>(nullptr); __jule_collection; });
	jule::Ptr<_1e5cd843e_TupleExprModel> _29137_model = jule::new_ptr<_1e5cd843e_TupleExprModel>(_1e5cd843e_TupleExprModel{._field_Datas=({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5e08c13_Data>>::alloc(0LL, (*_290930_tup.alloc)._field_Expr.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1e5e08c13_Data>(nullptr); __jule_collection; })});;
	jule::Bool _29177_ok = true;;
	{
		auto expr = &((*_290930_tup.alloc)._field_Expr);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb541101:;
		if (it != expr_end) {
			jule::Ptr<_1e5ca93bb_Expr> _291815_expr = *it;
			{
				jule::Ptr<_1e5e08c13_Data> _29198_d = _1e5e297a0_evalExpr(_self_, _291815_expr);;
				if ((_29198_d == nullptr)) {
					_29177_ok=false;
					goto _iter_next_1cb541101;
				};
				(*_29107_tupT.alloc)._field_Types=jule::append((*_29107_tupT.alloc)._field_Types,({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5e417ea_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_29198_d))._field_Kind; __jule_collection; }));
				(*(_29137_model))._field_Datas=jule::append((*_29137_model.alloc)._field_Datas,({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5e08c13_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _29198_d; __jule_collection; }));
			}
			_iter_next_1cb541101:;
			++it;
			goto _iter_begin_1cb541101;
		}
		_iter_end_1cb541101:;
	};
	if ((!(_29177_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_29107_tupT, (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data25)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_29137_model, &__jule_any_type83), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)});;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e27b77_evalMap(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Ptr<_1e5e505a6_Map> _293828_m, jule::Ptr<_1e5cae8bb_BraceLit> _293841_lit) {
	jule::Ptr<_1e5cd641a_MapExprModel> _29397_model = jule::new_ptr<_1e5cd641a_MapExprModel>(_1e5cd641a_MapExprModel{._field_Kind=_293828_m, ._field_Entries=jule::Slice<jule::Ptr<_1e5cd6041_KeyValPairExprModel>>(nullptr)});;
	{
		auto expr = &((*(_293841_lit))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb544962:;
		if (it != expr_end) {
			jule::Ptr<_1e5ca93bb_Expr> _294315_expr = *it;
			{
				{
					auto &_match_expr{ (*(_294315_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type81) {
						_case_begin_1cb54507d:;
						{
							goto _match_end_1cb545369;
						}
					}
					else {
						_case_begin_1cb5453d0:;
						{
							_1e5e0aebd_pushErr(_self_.ptr(), (*(_293841_lit))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
							return nullptr;;
						}
					}
					_match_end_1cb545369:;
				};
				jule::Ptr<_1e5cb01e6_KeyValPair> _29538_pair = (*(_294315_expr))._field_Kind.cast_ptr<_1e5cb01e6_KeyValPair>(&__jule_any_type81);;
				jule::Ptr<_1e5e08c13_Data> _29558_key = _1e5e297a0_evalExpr(_self_, (*(_29538_pair))._field_Key);;
				if ((_29558_key == nullptr)) {
					return nullptr;;
				};
				jule::Ptr<_1e5e08c13_Data> _29608_val = _1e5e297a0_evalExpr(_self_, (*_29538_pair.alloc)._field_Val);;
				if ((_29608_val == nullptr)) {
					return nullptr;;
				};
				;
				if (_1e5d8be71_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*(_293828_m))._field_Key), &(_29558_key), &((*((*_29538_pair.alloc)._field_Key))._field_Token))) {
					_1e5d876db_checkAssignType((*(_self_))._field_s, false, &((*_293828_m.alloc)._field_Key), &(_29558_key), (*(*(_29538_pair))._field_Key.alloc)._field_Token, _1e5e0dec1_getOwnerRefers(_self_));
				};
				if (_1e5d8be71_checkValidityForInitExpr((*(_self_))._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_293828_m.alloc)._field_Val), &(_29608_val), &((*((*_29538_pair.alloc)._field_Val))._field_Token))) {
					_1e5d876db_checkAssignType((*(_self_))._field_s, false, &((*_293828_m.alloc)._field_Val), &(_29608_val), (*(*(_29538_pair))._field_Val.alloc)._field_Token, _1e5e0dec1_getOwnerRefers(_self_));
				};
				(*(_29397_model))._field_Entries=jule::append((*_29397_model.alloc)._field_Entries,({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5cd6041_KeyValPairExprModel>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1e5cd6041_KeyValPairExprModel>(_1e5cd6041_KeyValPairExprModel{._field_Key=(*(_29558_key))._field_Model, ._field_Val=(*(_29608_val))._field_Model}); __jule_collection; }));
			}
			_iter_next_1cb544962:;
			++it;
			goto _iter_begin_1cb544962;
		}
		_iter_end_1cb544962:;
	};
	return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_293828_m, (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data26)}), ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_29397_model, &__jule_any_type101), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)});;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e27eb8_evalBraceLit(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Ptr<_1e5cae8bb_BraceLit> _298633_lit) {
	{
		
		if (((*(_self_))._field_prefix == nullptr)) {
			_case_begin_1cb551de2:;
			{
				_1e5e0aebd_pushErr(_self_, (*(_298633_lit))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1e5e45a41_Map((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_1cb551e58:;
			{
				return _1e5e27b77_evalMap(_self_, _1e5e45a41_Map((*(_self_))._field_prefix), _298633_lit);;
			}
		}
		else if ((_1e5e45524_Struct((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_1cb54e818:;
			{
				return _1e5e1dc5b_evalStructLitExplicit(_self_, _1e5e45524_Struct((*(_self_))._field_prefix), (*(_298633_lit))._field_Exprs, (*_298633_lit.alloc)._field_Token);;
			}
		}
		else {
			_case_begin_1cb54e7a2:;
			{
				_1e5e0aebd_pushErr(_self_.ptr(), (*(_298633_lit))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1cb550a06:;
	};
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e28309_evalAnonFunc(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Ptr<_1e5cb6c47_FnDecl> _300133_decl) {
	_1e5e53be7_typeChecker _30027_tc = _1e5e53be7_typeChecker{._field_s=(*(_self_))._field_s, ._field_rootLookup=(*_self_.alloc)._field_lookup, ._field_lookup=(*_self_.alloc)._field_lookup, ._field_referencer=jule::Ptr<_1e5e52c07_referencer>(nullptr), ._field_refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1e5c8eacc_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1e5cb2292_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1e5e40a08_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1e5e40a08_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1e5e40a08_TypeAlias>>(nullptr), ._field_inscatch=false};;
	jule::Ptr<_1e5ce3416_FnIns> _30077_ins = _1e5e5ad0e_buildFunc(&_30027_tc, _300133_decl);;
	if ((_30077_ins == nullptr)) {
		return nullptr;;
	};
	(*(_30077_ins))._field_AsAnon=true;
	jule::Slice<jule::Ptr<_1e5da0bcc_Var>> _30127_captured = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5da0bcc_Var>>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1e5da0bcc_Var>(nullptr); __jule_collection; });;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data0)) {
			_case_begin_1cb557876:;
			{
				jule::Ptr<_1e5d40771_scopeChecker> _30158_sc = (*_self_.alloc)._field_lookup.cast_ptr<_1e5d40771_scopeChecker>((jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data0);;
				jule::Ptr<_1e5d40771_scopeChecker> _30168_scc = _1e5d52b7e_newChildChecker(_30158_sc);;
				(*(_30168_scc))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1e5d3e781_scopeLabel>>>(nullptr);
				(*_30168_scc.alloc)._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1e5d3b690_GotoSt>>>(nullptr);
				(*_30168_scc.alloc)._field_owner=_30077_ins;
				(*_30168_scc.alloc)._field_childIndex=0LL;
				(*_30168_scc.alloc)._field_it=0LLU;
				(*_30168_scc.alloc)._field_cse=0LLU;
				(*_30168_scc.alloc)._field_captured=((jule::Ptr<jule::Slice<jule::Ptr<_1e5da0bcc_Var>>>)((&(_30127_captured))));
				_1e5d9a446_checkFnInsSc((*_self_.alloc)._field_s.ptr(), &(_30077_ins), &(_30168_scc));
			}
		}
		else {
			_case_begin_1cb55847b:;
			{
				_1e5d9aa62_checkFnIns((*_self_.alloc)._field_s, &(_30077_ins));
			}
		}
		_match_end_1cb558415:;
	};
	return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_30077_ins, (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data1)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(jule::new_ptr<_1e5cd5b67_AnonFnExprModel>(_1e5cd5b67_AnonFnExprModel{._field_Captured=_30127_captured, ._field_Func=_30077_ins, ._field_Global=_1e5e0bc49_isGlobal(_self_)}), &__jule_any_type102), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)});;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e2864a_evalBinary(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Ptr<_1e5cac985_BinaryExpr> _303931_op) {
	_1e5e2bbc0_binaryEval _30407_bs = static__1e5e2c2a8_newPlain(_self_);;
	if (((*(_self_))._field_prefix != nullptr)) {
		jule::Ptr<_1e5e49913_Prim> _30434_prim = _1e5e43ea1_Prim((*(_self_))._field_prefix);;
		if (((_30434_prim == nullptr) || (!(_1e21a3e07_IsNum(_1e5e49c87_Str(_30434_prim.ptr())))))) {
			jule::Ptr<_1e5e417ea_TypeKind> _30459_prefix = (*_self_.alloc)._field_prefix;;
			(*_self_.alloc)._field_prefix=nullptr;
			__JULE_DEFER({
				(*_self_.alloc)._field_prefix=_30459_prefix;
			});;
			return _1e5e32d19_eval(&_30407_bs, &(_303931_op));;
		};
	};
	return _1e5e32d19_eval(&_30407_bs, &(_303931_op));;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e2898b_evalExprKind(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Any _305433_kind) {
	{
		auto &_match_expr{ _305433_kind };
		
		if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1cb564685:;
			{
				jule::Ptr<_1e5ca9685_RangeExpr> _30578_e = _305433_kind.unsafe_cast_ptr<_1e5ca9685_RangeExpr>();;
				return _1e5e2898b_evalExprKind(_self_, (*((*(_30578_e))._field_Expr))._field_Kind);;
			}
		}
		else if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1cb5649b5:;
			{
				return _1e5e0d4ed_evalLit(_self_.ptr(), _305433_kind.cast_ptr<_1e5caa356_LitExpr>(&__jule_any_type104));;
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1cb564a2b:;
			{
				return _1e5e13239_evalIdent(_self_.ptr(), _305433_kind.cast_ptr<_1e5caabd6_IdentExpr>(&__jule_any_type51));;
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1cb564a92:;
			{
				return _1e5e1357a_evalUnary(_self_, _305433_kind.cast_ptr<_1e5cab478_UnaryExpr>(&__jule_any_type90));;
			}
		}
		else if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1cb564b08:;
			{
				return _1e5e138bb_evalVariadic(_self_, _305433_kind.cast_ptr<_1e5cab852_VariadicExpr>(&__jule_any_type78));;
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_1cb564b6e:;
			{
				return _1e5e13c0c_evalUnsafe(_self_, _305433_kind.cast_ptr<_1e5caa730_UnsafeExpr>(&__jule_any_type105));;
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1cb564bd5:;
			{
				return _1e5e14845_evalSliceExpr(_self_, _305433_kind.cast_ptr<_1e5cb0922_SliceExpr>(&__jule_any_type96));;
			}
		}
		else if (_match_expr.type == &__jule_any_type106) {
			_case_begin_1cb5650d1:;
			{
				return _1e5e18492_evalIndexing(_self_, _305433_kind.cast_ptr<_1e5cb137e_IndexingExpr>(&__jule_any_type106));;
			}
		}
		else if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1cb565147:;
			{
				return _1e5e197c3_evalSlicing(_self_, _305433_kind.cast_ptr<_1e5cb19de_SlicingExpr>(&__jule_any_type107));;
			}
		}
		else if (_match_expr.type == &__jule_any_type108) {
			_case_begin_1cb5651ad:;
			{
				return _1e5e1d464_evalCast(_self_, _305433_kind.cast_ptr<_1e5cabc2b_CastExpr>(&__jule_any_type108));;
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1cb565224:;
			{
				return _1e5e1d7a5_evalNsSelection(_self_.ptr(), _305433_kind.cast_ptr<_1e5cac105_NsSelectionExpr>(&__jule_any_type92));;
			}
		}
		else if (_match_expr.type == &__jule_any_type109) {
			_case_begin_1cb56529b:;
			{
				return _1e5e1e09c_evalStructLit(_self_, _305433_kind.cast_ptr<_1e5cae415_StructLit>(&__jule_any_type109));;
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1cb565323:;
			{
				return _1e5e1e674_evalType(_self_.ptr(), _305433_kind.cast_ptr<_1e5ca5087_TypeDecl>(&__jule_any_type91));;
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1cb56539a:;
			{
				return _1e5e20c80_evalFnCall(_self_, _305433_kind.cast_ptr<_1e5cad0e5_FnCallExpr>(&__jule_any_type84));;
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1cb565422:;
			{
				return _1e5e2743a_evalSubIdent(_self_, _305433_kind.cast_ptr<_1e5cac4ce_SubIdentExpr>(&__jule_any_type88));;
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1cb565499:;
			{
				return _1e5e2777b_evalTuple(_self_, _305433_kind.cast_ptr<_1e5ca9eb0_TupleExpr>(&__jule_any_type82));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1cb565521:;
			{
				return _1e5e27eb8_evalBraceLit(_self_, _305433_kind.cast_ptr<_1e5cae8bb_BraceLit>(&__jule_any_type110));;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1cb565598:;
			{
				return _1e5e28309_evalAnonFunc(_self_, _305433_kind.cast_ptr<_1e5cb6c47_FnDecl>(&__jule_any_type14));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1cb565620:;
			{
				return _1e5e2864a_evalBinary(_self_, _305433_kind.cast_ptr<_1e5cac985_BinaryExpr>(&__jule_any_type111));;
			}
		}
		else {
			_case_begin_1cb56494e:;
			{
				return nullptr;;
			}
		}
		_match_end_1cb5648d8:;
	};
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e28ccc_eval1(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Ptr<_1e5ca93bb_Expr> _310226_expr) {
	jule::Ptr<_1e5e08c13_Data> _31037_d = _1e5e2898b_evalExprKind(_self_, (*(_310226_expr))._field_Kind);;
	if (((_31037_d == nullptr) || ((*(_31037_d))._field_Kind == nullptr))) {
		return nullptr;;
	};
	{
		
		if ((_1e5e4528d_Fn((*(_31037_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cb590705:;
			{
				jule::Ptr<_1e5ce3416_FnIns> _31118_f = _1e5e4528d_Fn((*(_31037_d))._field_Kind.ptr());;
				if (_1e5ce48ce_IsBuiltin(_31118_f.ptr())) {
					_1e5d7e66c_pushErr((*_self_.alloc)._field_s.ptr(), (*_310226_expr.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("built-in functions should be invoked", 36)), jule::Slice<jule::Any>());
					goto _match_end_1cb58de0c;
				};
				jule::I64 _31164_required = (*((*_31118_f.alloc)._field_Decl))._field_Generics.len();;
				jule::I64 _31174_given = (*_31118_f.alloc)._field_Generics.len();;
				if ((!(_1e5d80b9b_checkGenericQuantity((*(_self_))._field_s, _31164_required, _31174_given, (*_310226_expr.alloc)._field_Token)))) {
					return nullptr;;
				};
				if (((!((*(*(_31118_f))._field_Decl.alloc)._field_Statically)) && _1e5ce0a95_IsMethod((*(_31118_f))._field_Decl))) {
					_1e5d7e66c_pushErr((*(_self_))._field_s, (*_310226_expr.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("methods should be invoked", 25)), jule::Slice<jule::Any>());
				} else if ((_1e5e33215_findDirective(&((*(*(_31118_f))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6))) != nullptr)) {
					_1e5d7e66c_pushErr((*(_self_))._field_s, (*_310226_expr.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("define @ is exported for backend so you cannot use as anonymous function", 72)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_31118_f))._field_Decl.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
				} else {
					(*_31118_f.alloc)._field_AsAnon=true;
				};
			}
		}
		else if ((*(_31037_d))._field_Decl) {
			_case_begin_1cb59076b:;
			{
				jule::Ptr<_1e5cc8c7b_StructIns> _31308_s = _1e5e45524_Struct((*(_31037_d))._field_Kind.ptr());;
				if ((_31308_s == nullptr)) {
					goto _match_end_1cb58de0c;
				};
				jule::I64 _31344_required = (*((*(_31308_s))._field_Decl))._field_Generics.len();;
				jule::I64 _31354_given = (*(_31308_s))._field_Generics.len();;
				if ((!(_1e5d80b9b_checkGenericQuantity((*_self_.alloc)._field_s.ptr(), _31344_required, _31354_given, (*_310226_expr.alloc)._field_Token)))) {
					return nullptr;;
				};
			}
		}
		_match_end_1cb58de0c:;
	};
	return _31037_d;;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e2911d_eval(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Ptr<_1e5ca93bb_Expr> _314725_expr) {
	jule::Ptr<_1e5e08c13_Data> _31487_d = _1e5e28ccc_eval1(_self_, _314725_expr);;
	if ((_31487_d == nullptr)) {
		return nullptr;;
	};
	if (((((*_self_.alloc)._field_owner == nullptr) || (!((*((*_self_.alloc)._field_owner))._field_Constant))) && _1e5e4605d_comptime((*(_31487_d))._field_Kind.ptr()))) {
		_1e5d7e66c_pushErr((*_self_.alloc)._field_s.ptr(), (*(_314725_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("compile-time evaluations cannot used as expression", 50)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _31487_d;;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e2945e_evalExpr1(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Ptr<_1e5ca93bb_Expr> _316230_expr) {
	jule::Ptr<_1e5e08c13_Data> _31637_d = _1e5e28ccc_eval1(_self_, _316230_expr);;
	{
		
		if ((_31637_d == nullptr)) {
			_case_begin_1cb59d9aa:;
			{
				return nullptr;;
			}
		}
		else if ((*(_31637_d))._field_Decl) {
			_case_begin_1cb59da54:;
			{
				_1e5e0aebd_pushErr(_self_, (*(_316230_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1cb59d933:;
			{
				return _31637_d;;
			}
		}
		_match_end_1cb59d8ab:;
	};
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e297a0_evalExpr(jule::Ptr<_1e5e0a93a_eval> _self_, jule::Ptr<_1e5ca93bb_Expr> _317829_expr) {
	jule::Ptr<_1e5e08c13_Data> _31797_d = _1e5e2911d_eval(_self_, _317829_expr);;
	{
		
		if ((_31797_d == nullptr)) {
			_case_begin_1cb5a0a23:;
			{
				return nullptr;;
			}
		}
		else if ((*(_31797_d))._field_Decl) {
			_case_begin_1cb5a0abc:;
			{
				_1e5e0aebd_pushErr(_self_, (*(_317829_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1cb5a099b:;
			{
				return _31797_d;;
			}
		}
		_match_end_1cb5a0924:;
	};
}








inline jule::Bool _1e5e29c34_unaryEval_eq(_1e5e29c34_unaryEval *_self_, _1e5e29c34_unaryEval _other_) {
	return 
		(_self_->_field_e == _other_._field_e) &&
		(_self_->_field_d == _self_->_field_d) &&
		(_self_->_field_u == _self_->_field_u);
}

inline _1e5e29c34_unaryEval static__1e5e2a1a7_new(jule::Ptr<_1e5e0a93a_eval> _319920_e) {
	return _1e5e29c34_unaryEval{._field_e=_319920_e, ._field_d=jule::Ptr<_1e5e08c13_Data>(nullptr), ._field_u=jule::Ptr<_1e5cab478_UnaryExpr>(nullptr)};;
}



inline void _1e5e2a3a5_minus(_1e5e29c34_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1cb5a28d2:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1e5e43ea1_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cb5a2cbc:;
			{
				if ((!(_1e21a3e07_IsNum(_1e5e41be6_Str((*((*(_self_))._field_d))._field_Kind))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1e5e45524_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cb5a2580:;
			{
				if (((*(_1e5e45524_Struct((*((*(_self_))._field_d))._field_Kind)))._field_Operators._field_Neg == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1cb5a2519:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1cb5a244d:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1e5e0964d_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1e21a8ed9_IsF64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1cb5a719a:;
				{
					_1e21a801b_SetF64((*((*(_self_))._field_d))._field_Constant, (-(_1e21a68dd_ReadF64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1e21a84a0_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1cb5a7288:;
				{
					_1e21a7449_SetI64((*((*(_self_))._field_d))._field_Constant, (-(_1e21a5da4_ReadI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1e21a8736_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1cb5a6d48:;
				{
					_1e21a7449_SetI64((*((*(_self_))._field_d))._field_Constant, (-(_1e21a6b74_AsI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_1cb5a6cc1:;
				{
					__jule_panic_s(jule::Str::lit("unimplemented constant type for unary.minus, this panic call should be unreachable", 82) + jule::Str("\nlocation: std/jule/sema/eval.jule:3237:5"));;
				}
			}
			_match_end_1cb5a6be4:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1e5cd322a_UnaryExprModel>(_1e5cd322a_UnaryExprModel{._field_Expr=jule::new_ptr<_1e5e08c13_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type112);
}



inline void _1e5e2a5a3_plus(_1e5e29c34_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1cb5ac832:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1e5e43ea1_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cb5acc1c:;
			{
				if ((!(_1e21a3e07_IsNum(_1e5e41be6_Str((*((*(_self_))._field_d))._field_Kind))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1e5e45524_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cb5ac4d0:;
			{
				if (((*(_1e5e45524_Struct((*((*(_self_))._field_d))._field_Kind)))._field_Operators._field_Pos == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1cb5ac469:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1cb5ac359:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1e5e0964d_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1e21a8ed9_IsF64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1cb5b20ea:;
				{
					_1e21a801b_SetF64((*((*(_self_))._field_d))._field_Constant, (+(_1e21a68dd_ReadF64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1e21a84a0_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1cb5b21d8:;
				{
					_1e21a7449_SetI64((*((*(_self_))._field_d))._field_Constant, (+(_1e21a5da4_ReadI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1e21a8736_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1cb5b1c98:;
				{
					_1e21a7449_SetI64((*((*(_self_))._field_d))._field_Constant, (+(_1e21a6b74_AsI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_1cb5b1c21:;
				{
					__jule_panic_s(jule::Str::lit("unimplemented constant type for unary.plus, this panic call should be unreachable", 81) + jule::Str("\nlocation: std/jule/sema/eval.jule:3282:5"));;
				}
			}
			_match_end_1cb5b1b44:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1e5cd322a_UnaryExprModel>(_1e5cd322a_UnaryExprModel{._field_Expr=jule::new_ptr<_1e5e08c13_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type112);
}



inline void _1e5e2a7a1_caret(_1e5e29c34_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1cb5b7760:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1e5e43ea1_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cb5b7b4a:;
			{
				if ((!(_1e21a3830_IsInt(_1e5e41be6_Str((*((*(_self_))._field_d))._field_Kind))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1e5e45524_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cb5b740d:;
			{
				if (((*(_1e5e45524_Struct((*((*(_self_))._field_d))._field_Kind)))._field_Operators._field_BitNot == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1cb5b7397:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1cb5b7287:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1e5e0964d_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1e21a84a0_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1cb5bc017:;
				{
					_1e21a7449_SetI64((*((*(_self_))._field_d))._field_Constant, (~(_1e21a5da4_ReadI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1e21a8736_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1cb5bc105:;
				{
					_1e21a7702_SetU64((*((*(_self_))._field_d))._field_Constant, (~(_1e21a613a_ReadU64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_1cb5bbb4e:;
				{
					__jule_panic_s(jule::Str::lit("unimplemented constant type for unary.caret, this panic call should be unreachable", 82) + jule::Str("\nlocation: std/jule/sema/eval.jule:3325:5"));;
				}
			}
			_match_end_1cb5bba72:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1e5cd322a_UnaryExprModel>(_1e5cd322a_UnaryExprModel{._field_Expr=jule::new_ptr<_1e5e08c13_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type112);
}



inline void _1e5e2a99e_excl(_1e5e29c34_unaryEval* _self_) {
	jule::Ptr<_1e5e49913_Prim> _33393_t = _1e5e43ea1_Prim((*((*(_self_))._field_d))._field_Kind.ptr());;
	if (((_33393_t == nullptr) || (!(_1e5e4cb47_IsBool(_33393_t.ptr()))))) {
		(*(_self_))._field_d=nullptr;
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1e5e0964d_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1e21a89bc_IsBool((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1cb5c32e8:;
				{
					_1e21a79aa_SetBool((*((*(_self_))._field_d))._field_Constant, (!(_1e21a63c1_ReadBool((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_1cb5c2e30:;
				{
					__jule_panic_s(jule::Str::lit("unimplemented constant type for unary.excl, this panic call should be unreachable", 81) + jule::Str("\nlocation: std/jule/sema/eval.jule:3353:5"));;
				}
			}
			_match_end_1cb5c2d53:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1e5cd322a_UnaryExprModel>(_1e5cd322a_UnaryExprModel{._field_Expr=jule::new_ptr<_1e5e08c13_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type112);
}



inline void _1e5e2ab9c_star(_1e5e29c34_unaryEval* _self_) {
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1e5cd322a_UnaryExprModel>(_1e5cd322a_UnaryExprModel{._field_Expr=jule::new_ptr<_1e5e08c13_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type112);
	{
		
		if ((_1e5e444bd_Ptr((*(*(_self_))._field_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cb5c6b48:;
			{
				if ((!(_1e5e0b9b3_isUnsafe((*(_self_))._field_e.ptr())))) {
					_1e5e0aebd_pushErr((*(_self_))._field_e, (*(*(_self_))._field_u.alloc)._field_Op, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1e5e51c06_Ptr> _33788_t = _1e5e444bd_Ptr((*((*(_self_))._field_d))._field_Kind);;
				if (_1e5e52773_IsUnsafe(_33788_t.ptr())) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
				(*(*(_self_))._field_d.alloc)._field_Kind=(*_33788_t.alloc)._field_Elem;
				(*(*(_self_))._field_d.alloc)._field_Mutable=true;
			}
		}
		else if ((_1e5e44237_Sptr((*(*(_self_))._field_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cb5c6bc0:;
			{
				(*(*(_self_))._field_d.alloc)._field_Kind=(*(_1e5e44237_Sptr((*((*(_self_))._field_d))._field_Kind)))._field_Elem;
			}
		}
		else {
			_case_begin_1cb5c6791:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1cb5c577e:;
	};
	(*(*(_self_))._field_d.alloc)._field_Constant=nullptr;
	(*(*(_self_))._field_d.alloc)._field_untyped=false;
	(*(*(_self_))._field_d.alloc)._field_Lvalue=true;
}



inline void _1e5e2ad9a_amper(_1e5e29c34_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1cb5d03e3:;
			{
				jule::Ptr<_1e5cd3aee_StructLitExprModel> _34008_lit = (*((*(_self_))._field_d))._field_Model.unsafe_cast_ptr<_1e5cd3aee_StructLitExprModel>();;
				_1e5e33b3e_makeStructLitAlloc(&((*(_self_))._field_d), &(_34008_lit));
			}
		}
		else {
			_case_begin_1cb5cc830:;
			{
				{
					
					if (_1e5e5d130_canGetPtr(&((*(_self_))._field_d))) {
						_case_begin_1cb5cd226:;
						{
							(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1e5e51c06_Ptr>(_1e5e51c06_Ptr{._field_Elem=(*(*(_self_))._field_d.alloc)._field_Kind}), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data28)});
							(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1e5cd322a_UnaryExprModel>(_1e5cd322a_UnaryExprModel{._field_Expr=jule::new_ptr<_1e5e08c13_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type112);
						}
					}
					else {
						_case_begin_1cb5cc423:;
						{
							(*(_self_))._field_d=nullptr;
							return;;
						}
					}
					_match_end_1cb5cccc5:;
				};
			}
		}
		_match_end_1cb5cc7b9:;
	};
	(*((*(_self_))._field_d))._field_Constant=nullptr;
	(*(*(_self_))._field_d.alloc)._field_untyped=false;
	(*(*(_self_))._field_d.alloc)._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
}



inline void _1e5e2b098_typeDecl(_1e5e29c34_unaryEval* _self_) {
	_1e5e53be7_typeChecker _34257_tc = _1e5e53be7_typeChecker{._field_s=(*((*(_self_))._field_e))._field_s, ._field_rootLookup=(*(*(_self_))._field_e.alloc)._field_lookup, ._field_lookup=(*(*(_self_))._field_e.alloc)._field_lookup, ._field_referencer=jule::Ptr<_1e5e52c07_referencer>(nullptr), ._field_refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_errorToken=(*((*(_self_))._field_u))._field_Op, ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1e5cb2292_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1e5e40a08_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1e5e40a08_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1e5e40a08_TypeAlias>>(nullptr), ._field_inscatch=false};;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1cb5d3e30:;
			{
				(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1e5e59527_buildPtrFromType(&_34257_tc, &((*(*(_self_))._field_d.alloc)._field_Kind)), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data28)});
				(*(*(_self_))._field_d.alloc)._field_Model=jule::Any((*(*(_self_))._field_d.alloc)._field_Kind, &__jule_any_type86);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1cb5d3ade:;
			{
				(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1e5e58d95_buildSptrFromType(&_34257_tc, &((*(*(_self_))._field_d.alloc)._field_Kind)), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data23)});
				(*(*(_self_))._field_d.alloc)._field_Model=jule::Any((*(*(_self_))._field_d.alloc)._field_Kind, &__jule_any_type86);
			}
		}
		else {
			_case_begin_1cb5d3528:;
			{
				_1e5e0aebd_pushErr((*(_self_))._field_e, (*(*(_self_))._field_u.alloc)._field_Op, static_cast<jule::Str>(jule::Str::lit("unary operator @ is not defined for type @", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(*(_self_))._field_u.alloc)._field_Op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1e5e41be6_Str((*((*(_self_))._field_d))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1cb5d3a67:;
	};
	(*((*(_self_))._field_d))._field_Decl=true;
}



inline void _1e5e2b296_evalData(_1e5e29c34_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1cb5d973d:;
			{
				jule::Ptr<_1e5e417ea_TypeKind> _34508_prefix = (*((*(_self_))._field_e))._field_prefix;;
				(*(*(_self_))._field_e.alloc)._field_prefix=nullptr;
				(*(_self_))._field_d=_1e5e2911d_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
				(*(*(_self_))._field_e.alloc)._field_prefix=_34508_prefix;
			}
		}
		else {
			_case_begin_1cb5d3b55:;
			{
				(*(_self_))._field_d=_1e5e2911d_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
			}
		}
		_match_end_1cb5d9320:;
	};
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e2b5d7_eval(_1e5e29c34_unaryEval* _self_, jule::Ptr<_1e5cab478_UnaryExpr> _345924_u) {
	(*(_self_))._field_u=_345924_u;
	_1e5e2b296_evalData(_self_);
	if (((*(_self_))._field_d == nullptr)) {
		return nullptr;;
	};
	if ((*((*(_self_))._field_d))._field_Decl) {
		_1e5e2b098_typeDecl(_self_);
		return (*(_self_))._field_d;;
	};
	jule::Ptr<_1e5e417ea_TypeKind> _34703_kind = (*((*(_self_))._field_d))._field_Kind;;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1cb5dde07:;
			{
				_1e5e2a3a5_minus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1cb5dde6d:;
			{
				_1e5e2a5a3_plus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1cb5dded4:;
			{
				_1e5e2a7a1_caret(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(68LLU)) {
			_case_begin_1cb5de04a:;
			{
				_1e5e2a99e_excl(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1cb5de0b1:;
			{
				_1e5e2ab9c_star(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1cb5de127:;
			{
				_1e5e2ad9a_amper(_self_);
			}
		}
		else {
			_case_begin_1cb5dd8b8:;
			{
				(*(_self_))._field_d=nullptr;
			}
		}
		_match_end_1cb5ddd80:;
	};
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1cb5de633:;
			{
				_1e5e0aebd_pushErr((*(_self_))._field_e.ptr(), (*((*(_self_))._field_u))._field_Op, static_cast<jule::Str>(jule::Str::lit("unary operator @ is not defined for type @", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(*(_self_))._field_u.alloc)._field_Op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1e5e41be6_Str(_34703_kind.ptr()), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_1e5e0964d_IsConst((*(_self_))._field_d.ptr())) {
			_case_begin_1cb5dc587:;
			{
				(*((*(_self_))._field_d))._field_Model=jule::Any((*((*(_self_))._field_d))._field_Constant, &__jule_any_type20);
			}
		}
		_match_end_1cb5e1118:;
	};
	return (*(_self_))._field_d;;
}








inline jule::Bool _1e5e2bbc0_binaryEval_eq(_1e5e2bbc0_binaryEval *_self_, _1e5e2bbc0_binaryEval _other_) {
	return 
		(_self_->_field_e == _other_._field_e) &&
		(_self_->_field_l == _self_->_field_l) &&
		(_self_->_field_r == _self_->_field_r) &&
		(_self_->_field_op == _self_->_field_op);
}

inline _1e5e2bbc0_binaryEval static__1e5e2c2a8_newPlain(jule::Ptr<_1e5e0a93a_eval> _350725_e) {
	return _1e5e2bbc0_binaryEval{._field_e=_350725_e, ._field_l=jule::Ptr<_1e5e08c13_Data>(nullptr), ._field_r=jule::Ptr<_1e5e08c13_Data>(nullptr), ._field_op=jule::Ptr<_1e5c8eacc_Token>(nullptr)};;
}



inline _1e5e2bbc0_binaryEval static__1e5e2c62c_new(jule::Ptr<_1e5e0a93a_eval> _351320_e, jule::Ptr<_1e5c8eacc_Token> _351334_op) {
	return _1e5e2bbc0_binaryEval{._field_e=_351320_e, ._field_l=jule::Ptr<_1e5e08c13_Data>(nullptr), ._field_r=jule::Ptr<_1e5e08c13_Data>(nullptr), ._field_op=_351334_op};;
}



inline jule::Bool _1e5e2c8b3_checkTypeCompatibility(_1e5e2bbc0_binaryEval* _self_) {
	return _1e5d88a1c_checkTypeCompatibility1((*((*(_self_))._field_e))._field_s, &((*((*(_self_))._field_l))._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));;
}



inline jule::Bool _1e5e2cb49_checkStructCommonOperatorCompatibility(_1e5e2bbc0_binaryEval* _self_) {
	jule::Ptr<_1e5ce3416_FnIns> _352711_overload = nullptr;;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1cb5e6a8b:;
			{
				_352711_overload=(*(_1e5e45524_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Shl;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1cb5e6739:;
			{
				_352711_overload=(*(_1e5e45524_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Shr;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1cb5e67a0:;
			{
				_352711_overload=(*(_1e5e45524_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Add;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1cb5e6816:;
			{
				_352711_overload=(*(_1e5e45524_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Sub;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1cb5e687c:;
			{
				_352711_overload=(*(_1e5e45524_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Div;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1cb5e68e3:;
			{
				_352711_overload=(*(_1e5e45524_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Mul;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1cb5e6959:;
			{
				_352711_overload=(*(_1e5e45524_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Mod;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1cb5e8197:;
			{
				_352711_overload=(*(_1e5e45524_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitAnd;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_1cb5e820d:;
			{
				_352711_overload=(*(_1e5e45524_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitOr;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1cb5e8274:;
			{
				_352711_overload=(*(_1e5e45524_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitXor;
			}
		}
		else {
			_case_begin_1cb5e62c7:;
			{
				_1e5e0aebd_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1e5e41be6_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
				return false;;
			}
		}
		_match_end_1cb5e66b2:;
	};
	if ((_352711_overload == nullptr)) {
		_1e5e0aebd_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1e5e41be6_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
		return false;;
	};
	jule::Ptr<_1e5ce22b1_ParamIns> _35597_p = (*(_352711_overload))._field_Params[1LL];;
	return _1e5d876db_checkAssignType((*(*(_self_))._field_e.alloc)._field_s, (*((*(_35597_p))._field_Decl))._field_Reference, &((*_35597_p.alloc)._field_Kind), &((*(_self_))._field_r), (*(_self_))._field_op, _1e5e0dec1_getOwnerRefers((*(_self_))._field_e));;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e2cdd0_evalComptimeTypeInfo(_1e5e2bbc0_binaryEval* _self_) {
	jule::Ptr<_1e5d1a608_comptimeTypeInfo> _35647_r = _1e5e47867_comptimeTypeInfo((*((*(_self_))._field_r))._field_Kind.ptr());;
	if ((_35647_r == nullptr)) {
		_1e5e0aebd_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("comptimeTypeInfo", 16), &__jule_any_type4); (*it++) = jule::Any(_1e5e41be6_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1e5d1a608_comptimeTypeInfo> _35697_l = _1e5e47867_comptimeTypeInfo((*((*(_self_))._field_l))._field_Kind);;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1cb607519:;
			{
				jule::Ptr<_1e21a449b_Const> _35728_constant = static__1e21a4ea2_NewBool(_1e5e42037_Equal((*(_35697_l))._field_base, (*(_35647_r))._field_base));;
				return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=_1e6026b88_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_35728_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_35728_constant});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1cb6089b0:;
			{
				jule::Ptr<_1e21a449b_Const> _35798_constant = static__1e21a4ea2_NewBool((!(_1e5e42037_Equal((*(_35697_l))._field_base, (*(_35647_r))._field_base))));;
				return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=_1e6026b88_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_35798_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_35798_constant});;
			}
		}
		else {
			_case_begin_1cb60532a:;
			{
				_1e5e0aebd_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1e5e41be6_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1cb607140:;
	};
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e2d166_evalNil(_1e5e2bbc0_binaryEval* _self_) {
	if ((!(_1e5e436ed_NilCompatible((*((*(_self_))._field_r))._field_Kind.ptr())))) {
		_1e5e0aebd_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("nil", 3), &__jule_any_type4); (*it++) = jule::Any(_1e5e41be6_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1cb60d696:;
			{
				return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=_1e6026b88_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1cb60b980:;
			{
				_1e5e0aebd_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("nil", 3), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1cb60d2bc:;
	};
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e2d3ec_evalEnum(_1e5e2bbc0_binaryEval* _self_) {
	jule::Ptr<_1e5d065c2_Enum> _36107_enm = _1e5e44754_Enum((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1cb610ac7:;
			{
				jule::Ptr<_1e5e417ea_TypeKind> _36148_rkind = (*((*(_self_))._field_r))._field_Kind;;
				if ((_1e5e44754_Enum((*((*(_self_))._field_r))._field_Kind) != nullptr)) {
					_36148_rkind=(*((*(_1e5e44754_Enum((*((*(_self_))._field_r))._field_Kind)))._field_Kind))._field_Kind;
				};
				if ((!(_1e5d88148_checkTypeCompatibility((*((*(_self_))._field_e))._field_s, &((*(*(_36107_enm))._field_Kind.alloc)._field_Kind), &(_36148_rkind), &((*(_self_))._field_op))))) {
					return nullptr;;
				};
				return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=_1e6026b88_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)});;
			}
		}
		_match_end_1cb610a50:;
	};
	if (((_1e5e44754_Enum((*((*(_self_))._field_r))._field_Kind) == nullptr) || (_36107_enm != _1e5e44754_Enum((*((*(_self_))._field_r))._field_Kind)))) {
		_1e5e0aebd_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_36107_enm))._field_Ident, &__jule_any_type4); (*it++) = jule::Any(_1e5e41be6_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1cb616726:;
			{
				if ((!(_1e21a3e07_IsNum(_1e5e41be6_Str((*(*(_36107_enm))._field_Kind.alloc)._field_Kind.ptr()))))) {
					_1e5e0aebd_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any((*_36107_enm.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=_1e6026b88_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1cb61786a:;
			{
				jule::Ptr<_1e5d05a55_EnumItem> _36444_first = (*_36107_enm.alloc)._field_Items[0LL];;
				{
					
					if (_1e21a84a0_IsI64((*((*((*(_36444_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1cb61b385:;
						{
							if ((_1e21a5da4_ReadI64((*((*((*(_36444_first))._field_Value))._field_Data))._field_Constant) == 0LL)) {
								goto _julec_label_1cb620c6e;
							};
							goto _julec_label_1cb61e773;
						}
					}
					else if (_1e21a8736_IsU64((*((*((*(_36444_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1cb61b473:;
						{
							if ((_1e21a613a_ReadU64((*((*((*(_36444_first))._field_Value))._field_Data))._field_Constant) == 0LLU)) {
								goto _julec_label_1cb620c6e;
							};
							goto _julec_label_1cb61e773;
						}
					}
					else {
						_case_begin_1cb61aebc:;
						{
							__jule_panic_s(jule::Str::lit("unimplemented enum type, this panic call should be unreachable", 62) + jule::Str("\nlocation: std/jule/sema/eval.jule:3657:5"));;
						}
					}
					_match_end_1cb61ae45:;
				};
				_julec_label_1cb61e773:;
				_1e5e0aebd_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("the @ enum type is not supports @ operator", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_36107_enm.alloc)._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); __jule_collection; }));
				_1e5e0b331_pushSuggestion((*(_self_))._field_e, static_cast<jule::Str>(jule::Str::lit("define default enum field (the first one is default) with zero value to use & operator", 86)), jule::Slice<jule::Any>());
				_julec_label_1cb620c6e:;
				goto _case_begin_1cb6178d1;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1cb6178d1:;
			{
				if (((_1e5e43ea1_Prim((*(*(_36107_enm))._field_Kind.alloc)._field_Kind.ptr()) == nullptr) || (!(_1e21a3830_IsInt(_1e5e49c87_Str(_1e5e43ea1_Prim((*((*(_36107_enm))._field_Kind))._field_Kind).ptr())))))) {
					_1e5e0aebd_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any((*_36107_enm.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1cb610b3d:;
			{
				_1e5e0aebd_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any((*_36107_enm.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1cb61636e:;
	};
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e2d683_evalTypeEnum(_1e5e2bbc0_binaryEval* _self_) {
	jule::Ptr<_1e5d07ccc_TypeEnum> _36777_enm = _1e5e449da_TypeEnum((*((*(_self_))._field_l))._field_Kind.ptr());;
	if ((!(_1e5e2c8b3_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1cb624a31:;
			{
				return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=_1e6026b88_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1cb623d60:;
			{
				_1e5e0aebd_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1e5d08151_Str(_36777_enm.ptr()), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1cb6245be:;
	};
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e2d919_evalSptr(_1e5e2bbc0_binaryEval* _self_) {
	if ((!(_1e5e2c8b3_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1cb627050:;
			{
				return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=_1e6026b88_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1cb625e72:;
			{
				_1e5e0aebd_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1e5e41be6_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1cb626b76:;
	};
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e2dba0_evalPtr(_1e5e2bbc0_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1cb62942b:;
			{
				if ((!(_1e5e2c8b3_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=_1e6026b88_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1cb62a88e:;
			{
				if ((_1e5e444bd_Ptr((*((*(_self_))._field_l))._field_Kind.ptr()) == nullptr)) {
					std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				};
				if (_1e5e52773_IsUnsafe(_1e5e444bd_Ptr((*((*(_self_))._field_l))._field_Kind).ptr())) {
					_1e5e0aebd_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1e5e41be6_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4); __jule_collection; }));
				};
				if ((!(_1e5e34cc7_isPtrArithmeticCompatible(&((*(_self_))._field_l), &((*(_self_))._field_r))))) {
					_1e5e0aebd_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("type @ is incompatible to use for pointer arithmetic", 52)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type4); __jule_collection; }));
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1cb628a24:;
			{
				_1e5e0aebd_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1e5e41be6_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1cb628947:;
	};
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e2de36_evalArr(_1e5e2bbc0_binaryEval* _self_) {
	if ((!(_1e5e2c8b3_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1cb632654:;
			{
				if (((*((*((*((*(_self_))._field_e))._field_s))._field_meta))._field_runtime != nullptr)) {
					jule::Ptr<_1e5ce3416_FnIns> _37549_f = _1e5ce1865_instanceForce(_1e21ae8d5_runtimeFindFn(&((*(*((*((*(_self_))._field_e))._field_s))._field_meta.alloc)._field_runtime), static_cast<jule::Str>(jule::Str::lit("arrayCmp", 8))));;
					(*(_37549_f))._field_Generics=jule::append((*_37549_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1e5e3ee14_InsGeneric>(_1e5e3ee14_InsGeneric{._field_Kind=(*(_1e5e44c71_Arr((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Elem, ._field_Constraint=jule::Slice<jule::Ptr<_1e5e417ea_TypeKind>>(nullptr)}); __jule_collection; }));
					jule::Bool _37565_ok;
					({
						__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1e5d97c4b_checkGenericFn((*((*(_self_))._field_e))._field_s, &(_37549_f), &((*(_self_))._field_op));
						_37565_ok = __jule_assign_result.__jule_result_arg0;
					});
					if ((!(_37565_ok))) {
						__jule_panic_s(jule::Str::lit("arrayCmp evaluation failed, this is an implementation mistake", 61) + jule::Str("\nlocation: std/jule/sema/eval.jule:3758:6"));;
					};
					_1caeb4712_pushReference((*(_self_))._field_e, &(_37549_f));
				};
				return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=_1e6026b88_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1cb62c2db:;
			{
				_1e5e0aebd_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1e5e41be6_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1cb63227a:;
	};
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e2e1bc_evalStruct(_1e5e2bbc0_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1cb634029:;
			{
				if (((*(_1e5e45524_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Gt == nullptr)) {
					_1e5e0aebd_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1e5e41be6_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=_1e6026b88_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1cb6340b2:;
			{
				if (((*(_1e5e45524_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_GtEq == nullptr)) {
					_1e5e0aebd_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1e5e41be6_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=_1e6026b88_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_1cb638748:;
			{
				if (((*(_1e5e45524_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Lt == nullptr)) {
					_1e5e0aebd_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1e5e41be6_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=_1e6026b88_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1cb6387ae:;
			{
				if (((*(_1e5e45524_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_LtEq == nullptr)) {
					_1e5e0aebd_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1e5e41be6_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=_1e6026b88_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1cb638825:;
			{
				if ((!(_1e5e2c8b3_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=_1e6026b88_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)});;
			}
		}
		_match_end_1cb633e4c:;
	};
	if ((!(_1e5e2cb49_checkStructCommonOperatorCompatibility(_self_)))) {
		return nullptr;;
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e2e453_evalTrait(_1e5e2bbc0_binaryEval* _self_) {
	if ((!(_1e5e2c8b3_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1cb644eb3:;
			{
				return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=_1e6026b88_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1cb644369:;
			{
				_1e5e0aebd_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1e5e41be6_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1cb644ad9:;
	};
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e2e6d9_evalAny(_1e5e2bbc0_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1cb64738e:;
			{
				_1e5e5e8b2_applyImplicitCast(&((*((*(_self_))._field_e))._field_s), &((*((*(_self_))._field_l))._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op), _1e5e0dec1_getOwnerRefers((*(_self_))._field_e));
				return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=_1e6026b88_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1cb646987:;
			{
				_1e5e0aebd_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("any", 3)), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1cb6468aa:;
	};
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e2e970_evalBool(_1e5e2bbc0_binaryEval* _self_) {
	if ((!(_1e5e2c8b3_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(54LLU) || _match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1cb64a529:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1cb6486c0:;
			{
				_1e5e0aebd_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1e5e41be6_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1cb64a150:;
	};
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e2ec06_evalStr(_1e5e2bbc0_binaryEval* _self_) {
	jule::Str _38707_rk = _1e5e41be6_Str((*((*(_self_))._field_r))._field_Kind.ptr());;
	if ((_38707_rk != static_cast<jule::Str>(jule::Str::lit("str", 3)))) {
		_1e5e0aebd_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type4); (*it++) = jule::Any(_38707_rk, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1cb64e7b4:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1cb64e6c6:;
			{
				return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=_1e6026b88_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1cb64d285:;
			{
				_1e5e0aebd_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1cb64e31e:;
	};
}



inline void _1e5e2ee04_setTypeToGreater(_1e5e2bbc0_binaryEval* _self_) {
	jule::Ptr<_1e5e49913_Prim> _38953_lp = _1e5e43ea1_Prim((*((*(_self_))._field_l))._field_Kind.ptr());;
	jule::Ptr<_1e5e49913_Prim> _38963_rp = _1e5e43ea1_Prim((*((*(_self_))._field_r))._field_Kind);;
	if (((*(*(_self_))._field_l.alloc)._field_untyped && (!((*((*(_self_))._field_r))._field_untyped)))) {
		(*(*(_self_))._field_l.alloc)._field_Kind=(*(*(_self_))._field_r.alloc)._field_Kind;
		(*((*(*(_self_))._field_l.alloc)._field_Constant))._field_Kind=(*(_38963_rp))._field_Kind;
		(*(*(_self_))._field_l.alloc)._field_untyped=false;
	} else if (((!((*(*(_self_))._field_l.alloc)._field_untyped)) && (*((*(_self_))._field_r))._field_untyped)) {
		(*(*(_self_))._field_r.alloc)._field_Kind=(*(*(_self_))._field_l.alloc)._field_Kind;
		(*((*(*(_self_))._field_r.alloc)._field_Constant))._field_Kind=(*(_38953_lp))._field_Kind;
		(*(*(_self_))._field_r.alloc)._field_untyped=false;
	} else if (((*(*(_self_))._field_l.alloc)._field_untyped && (*((*(_self_))._field_r))._field_untyped)) {
		(*(*(_self_))._field_r.alloc)._field_Kind=(*(*(_self_))._field_l.alloc)._field_Kind;
		(*((*(*(_self_))._field_r.alloc)._field_Constant))._field_Kind=(*(_38953_lp))._field_Kind;
		(*(*(_self_))._field_r.alloc)._field_untyped=false;
	};
}



inline void _1e5e301ac_checkModData(_1e5e2bbc0_binaryEval* _self_, jule::Ptr<_1e5e08c13_Data>* _391233_d) {
	if ((!(_1e5e0964d_IsConst((*(_391233_d)).ptr())))) {
		if (((_1e5e43ea1_Prim((*((*(_391233_d))))._field_Kind.ptr()) == nullptr) || (!(_1e21a3830_IsInt((*(_1e5e43ea1_Prim((*((*(_391233_d))))._field_Kind)))._field_Kind))))) {
			_1e5e0aebd_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("module operator must be used with integer type", 46)), jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_1e5dde776_sigAssignable(static_cast<jule::Str>(jule::Str::lit("i64", 3)), _391233_d)) {
			_case_begin_1cb65ad0e:;
			{
				_1e21a7449_SetI64((*((*(_391233_d))))._field_Constant.ptr(), _1e21a6b74_AsI64((*((*(_391233_d))))._field_Constant));
			}
		}
		else if (_1e5ddeb3e_unsigAssignable(static_cast<jule::Str>(jule::Str::lit("u64", 3)), _391233_d)) {
			_case_begin_1cb65a9e0:;
			{
				_1e21a7702_SetU64((*((*(_391233_d))))._field_Constant.ptr(), _1e21a6e0a_AsU64((*((*(_391233_d))))._field_Constant));
			}
		}
		else {
			_case_begin_1cb65a979:;
			{
				_1e5e0aebd_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("module operator must be used with integer type", 46)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1cb65a913:;
	};
}



inline void _1e5e303aa_mod(_1e5e2bbc0_binaryEval* _self_) {
	_1e5e301ac_checkModData(_self_, &((*(_self_))._field_l));
	_1e5e301ac_checkModData(_self_, &((*(_self_))._field_r));
}



inline jule::Bool _1e5e307a6_numbersAreCompatibile(_1e5e2bbc0_binaryEval* _self_, jule::Str* _393434_lk, jule::Str* _393444_rk) {
	if ((!(_1e21a3e07_IsNum((*(_393444_rk)))))) {
		return false;;
	};
	if ((_1e5e0964d_IsConst((*(_self_))._field_l.ptr()) && (*(*(_self_))._field_l.alloc)._field_untyped)) {
		return true;;
	};
	if (((*(_393434_lk)) == static_cast<jule::Str>(jule::Str::lit("f32", 3)))) {
		if ((_1e5e0964d_IsConst((*(_self_))._field_r.ptr()) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
			return _1e5dde402_floatAssignable(_393434_lk, &((*(_self_))._field_r));;
		};
		return ((*(_393444_rk)) == static_cast<jule::Str>(jule::Str::lit("f32", 3)));;
	};
	if (((*(_393434_lk)) == static_cast<jule::Str>(jule::Str::lit("f64", 3)))) {
		if ((_1e5e0964d_IsConst((*(_self_))._field_r) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
			return _1e5dde402_floatAssignable(_393434_lk, &((*(_self_))._field_r));;
		};
		return ((*(_393444_rk)) == static_cast<jule::Str>(jule::Str::lit("f64", 3)));;
	};
	if ((_1e5e0964d_IsConst((*(_self_))._field_r) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
		return _1e5ddeeb3_intAssignable((*(_393434_lk)), &((*(_self_))._field_r));;
	};
	return ((*(_393434_lk)) == (*(_393444_rk)));;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e30a3c_shift(_1e5e2bbc0_binaryEval* _self_) {
	jule::Ptr<_1e5e49913_Prim> _39623_lk = _1e5e43ea1_Prim((*((*(_self_))._field_l))._field_Kind.ptr());;
	if ((_39623_lk == nullptr)) {
		_1e5e0aebd_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1e5e41be6_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1e5e49913_Prim> _39673_rk = _1e5e43ea1_Prim((*((*(_self_))._field_r))._field_Kind);;
	if ((_39673_rk == nullptr)) {
		_1e5e0aebd_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_self_))._field_op.alloc)._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1e5e41be6_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((!(_1e21a3e07_IsNum((*(_39623_lk))._field_Kind))) || (!(_1e21a3e07_IsNum((*(_39673_rk))._field_Kind))))) {
		_1e5d88566_pushCompatiblityError((*(*(_self_))._field_e.alloc)._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	if ((!(_1e21a3830_IsInt((*(_39623_lk))._field_Kind)))) {
		if (((!(_1e5e0964d_IsConst((*(_self_))._field_l))) || (!((*(*(_self_))._field_l.alloc)._field_untyped)))) {
			_1e5e0aebd_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_39623_lk))._field_Kind, &__jule_any_type4); (*it++) = jule::Any((*(_39673_rk))._field_Kind, &__jule_any_type4); __jule_collection; }));
			return nullptr;;
		} else if (_1e5ddeeb3_intAssignable(static_cast<jule::Str>(jule::Str::lit("i64", 3)), &((*(_self_))._field_l))) {
			_1e21a7449_SetI64((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), _1e21a6b74_AsI64((*((*(_self_))._field_l))._field_Constant));
			(*(*(_self_))._field_l.alloc)._field_Kind=_1e602810c_primI64;
		} else if (_1e5ddeeb3_intAssignable(static_cast<jule::Str>(jule::Str::lit("u64", 3)), &((*(_self_))._field_l))) {
			_1e21a7702_SetU64((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), _1e21a6e0a_AsU64((*((*(_self_))._field_l))._field_Constant));
			(*(*(_self_))._field_l.alloc)._field_Kind=_1e6028e10_primU64;
		};
	};
	if ((!(_1e21a3830_IsInt((*(_39673_rk))._field_Kind)))) {
		if (((!(_1e5e0964d_IsConst((*(_self_))._field_r.ptr()))) || (!((*(*(_self_))._field_l.alloc)._field_untyped)))) {
			_1e5e0aebd_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_39623_lk))._field_Kind, &__jule_any_type4); (*it++) = jule::Any((*(_39673_rk))._field_Kind, &__jule_any_type4); __jule_collection; }));
			return nullptr;;
		} else if (_1e5ddeeb3_intAssignable(static_cast<jule::Str>(jule::Str::lit("i64", 3)), &((*(_self_))._field_r))) {
			_1e21a7449_SetI64((*((*(_self_))._field_r))._field_Constant.ptr(), _1e21a6b74_AsI64((*((*(_self_))._field_r))._field_Constant));
			(*(*(_self_))._field_r.alloc)._field_Kind=_1e602810c_primI64;
		} else if (_1e5ddeeb3_intAssignable(static_cast<jule::Str>(jule::Str::lit("u64", 3)), &((*(_self_))._field_r))) {
			_1e21a7702_SetU64((*((*(_self_))._field_r))._field_Constant.ptr(), _1e21a6e0a_AsU64((*((*(_self_))._field_r))._field_Constant));
			(*(*(_self_))._field_r.alloc)._field_Kind=_1e6028e10_primU64;
		};
	};
	if ((!(_1e5e34601_isOkForShifting(&((*(_self_))._field_r))))) {
		_1e5e0aebd_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("bit shifting value is must be unsigned", 38)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e30cc3_evalFloat(_1e5e2bbc0_binaryEval* _self_) {
	jule::Str _40173_lk = (*(_1e5e43ea1_Prim((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Kind;;
	jule::Str _40183_rk = (*(_1e5e43ea1_Prim((*((*(_self_))._field_r))._field_Kind)))._field_Kind;;
	if ((!(_1e5e307a6_numbersAreCompatibile(_self_, &(_40173_lk), &(_40183_rk))))) {
		_1e5d88566_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1cb67706c:;
			{
				_1e5e2ee04_setTypeToGreater(_self_);
				return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=_1e6026b88_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)});;
			}
		}
		_match_end_1cb676ee5:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1cb678a41:;
			{
				__jule_panic_s(jule::Str::lit("sema: binary shifting operator handling failed", 46) + jule::Str("\nlocation: std/jule/sema/eval.jule:4042:4"));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1cb6798dd:;
			{
				_1e5e2ee04_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1cb679954:;
			{
				_1e5e2ee04_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1cb677ed5:;
			{
				if ((!(_1e21a3830_IsInt(_40183_rk)))) {
					_1e5e0aebd_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_40173_lk, &__jule_any_type4); (*it++) = jule::Any(_40183_rk, &__jule_any_type4); __jule_collection; }));
					return nullptr;;
				};
				_1e5e303aa_mod(_self_);
				_1e5e2ee04_setTypeToGreater(_self_);
				return (*(_self_))._field_r;;
			}
		}
		else {
			_case_begin_1cb67715a:;
			{
				_1e5e0aebd_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for floating-point type(s)", 52)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1cb677e6e:;
	};
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e31059_evalInt(_1e5e2bbc0_binaryEval* _self_) {
	jule::Str _40663_lk = (*(_1e5e43ea1_Prim((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Kind;;
	jule::Str _40673_rk = (*(_1e5e43ea1_Prim((*((*(_self_))._field_r))._field_Kind)))._field_Kind;;
	if ((!(_1e5e307a6_numbersAreCompatibile(_self_, &(_40663_lk), &(_40673_rk))))) {
		_1e5d88566_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1cb6808b1:;
			{
				return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=_1e6026b88_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)});;
			}
		}
		_match_end_1cb680839:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1cb682198:;
			{
				__jule_panic_s(jule::Str::lit("sema: binary shifting operator handling failed", 46) + jule::Str("\nlocation: std/jule/sema/eval.jule:4091:4"));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(65LLU) || _match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1cb683045:;
			{
				_1e5e2ee04_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1cb6830ab:;
			{
				_1e5e2ee04_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1cb6817b3:;
			{
				_1e5e303aa_mod(_self_);
				_1e5e2ee04_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1cb68099e:;
			{
				_1e5e0aebd_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for integer type(s)", 45)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1cb681c8b:;
	};
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e312e0_evalPrim(_1e5e2bbc0_binaryEval* _self_) {
	jule::Ptr<_1e5e49913_Prim> _41143_prim = _1e5e43ea1_Prim((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		
		if (_1e5e4cb47_IsBool(_41143_prim.ptr())) {
			_case_begin_1cb686367:;
			{
				return _1e5e2e970_evalBool(_self_);;
			}
		}
		else if (_1e5e4cdcd_IsStr(_41143_prim.ptr())) {
			_case_begin_1cb686411:;
			{
				return _1e5e2ec06_evalStr(_self_);;
			}
		}
		_match_end_1cb6862ce:;
	};
	if ((_1e5e43ea1_Prim((*((*(_self_))._field_r))._field_Kind) == nullptr)) {
		_1e5e0aebd_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e49c87_Str(_41143_prim.ptr()), &__jule_any_type4); (*it++) = jule::Any(_1e5e41be6_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	{
		
		if (_1e21a3b71_IsFloat((*_41143_prim.alloc)._field_Kind)) {
			_case_begin_1cb68929e:;
			{
				return _1e5e30cc3_evalFloat(_self_);;
			}
		}
		else if (_1e21a3830_IsInt((*_41143_prim.alloc)._field_Kind)) {
			_case_begin_1cb689337:;
			{
				return _1e5e31059_evalInt(_self_);;
			}
		}
		else {
			_case_begin_1cb689238:;
			{
				return nullptr;;
			}
		}
		_match_end_1cb687555:;
	};
}



inline jule::Bool _1e5e31576_checkSpecialCases(_1e5e2bbc0_binaryEval* _self_) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _41393_comparing = (((*((*(_self_))._field_op))._field_Id == static_cast<jule::U64>(50LLU)) || ((*(*(_self_))._field_op.alloc)._field_Id == static_cast<jule::U64>(51LLU)));;
	if ((!(_41393_comparing))) {
		return __jule_func_result;;
	};
	if (((!(_1e5e42e4a_Comparable((*((*(_self_))._field_l))._field_Kind.ptr()))) && (!(_1e5e4292d_IsNil((*((*(_self_))._field_r))._field_Kind))))) {
		_1e5e0aebd_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("type @ is not comparable", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4); __jule_collection; }));
		__jule_func_result=false;
	} else if (((!(_1e5e42e4a_Comparable((*((*(_self_))._field_r))._field_Kind.ptr()))) && (!(_1e5e4292d_IsNil((*((*(_self_))._field_l))._field_Kind))))) {
		_1e5e0aebd_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("type @ is not comparable", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type4); __jule_collection; }));
		__jule_func_result=false;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e3180c_evalOp(_1e5e2bbc0_binaryEval* _self_) {
	jule::Bool _41543_ok = _1e5e31576_checkSpecialCases(_self_);;
	if ((!(_41543_ok))) {
		return nullptr;;
	};
	if ((_1e5e45524_Struct((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
		return _1e5e2e1bc_evalStruct(_self_);;
	};
	if ((((*((*(_self_))._field_op))._field_Id == static_cast<jule::U64>(56LLU)) || ((*(*(_self_))._field_op.alloc)._field_Id == static_cast<jule::U64>(57LLU)))) {
		return _1e5e30a3c_shift(_self_);;
	};
	{
		
		if (_1e5e42bb4_Void((*((*(_self_))._field_l))._field_Kind)) {
			_case_begin_1cb693440:;
			{
				_1e5e0aebd_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_self_))._field_op.alloc)._field_Kind, &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("void", 4), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		else if ((_1e5e47867_comptimeTypeInfo((*((*(_self_))._field_r))._field_Kind) != nullptr)) {
			_case_begin_1cb6935e9:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1cb6934a6;
			}
		}
		else if ((_1e5e47867_comptimeTypeInfo((*((*(_self_))._field_l))._field_Kind) != nullptr)) {
			_case_begin_1cb6934a6:;
			{
				return _1e5e2cdd0_evalComptimeTypeInfo(_self_);;
			}
		}
		else if (((_1e5e43ea1_Prim((*((*(_self_))._field_r))._field_Kind) != nullptr) && _1e5e4d164_IsAny(_1e5e43ea1_Prim((*((*(_self_))._field_r))._field_Kind).ptr()))) {
			_case_begin_1cb69351c:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1cb694a90;
			}
		}
		else if (_1e5e4292d_IsNil((*((*(_self_))._field_r))._field_Kind)) {
			_case_begin_1cb694a90:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1cb694b06;
			}
		}
		else if (_1e5e4292d_IsNil((*((*(_self_))._field_l))._field_Kind)) {
			_case_begin_1cb694b06:;
			{
				return _1e5e2d166_evalNil(_self_);;
			}
		}
		else if (((_1e5e43ea1_Prim((*((*(_self_))._field_l))._field_Kind) != nullptr) && _1e5e4d164_IsAny(_1e5e43ea1_Prim((*((*(_self_))._field_l))._field_Kind).ptr()))) {
			_case_begin_1cb694c05:;
			{
				return _1e5e2e6d9_evalAny(_self_);;
			}
		}
		else if ((_1e5e449da_TypeEnum((*((*(_self_))._field_r))._field_Kind) != nullptr)) {
			_case_begin_1cb694c6b:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1cb694cd2;
			}
		}
		else if ((_1e5e449da_TypeEnum((*((*(_self_))._field_l))._field_Kind) != nullptr)) {
			_case_begin_1cb694cd2:;
			{
				return _1e5e2d683_evalTypeEnum(_self_);;
			}
		}
		else if ((_1e5e44754_Enum((*((*(_self_))._field_r))._field_Kind) != nullptr)) {
			_case_begin_1cb694d48:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1cb694dae;
			}
		}
		else if ((_1e5e44754_Enum((*((*(_self_))._field_l))._field_Kind) != nullptr)) {
			_case_begin_1cb694dae:;
			{
				return _1e5e2d3ec_evalEnum(_self_);;
			}
		}
		else if ((_1e5e44237_Sptr((*((*(_self_))._field_r))._field_Kind) != nullptr)) {
			_case_begin_1cb694e25:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1cb694e8b;
			}
		}
		else if ((_1e5e44237_Sptr((*((*(_self_))._field_l))._field_Kind) != nullptr)) {
			_case_begin_1cb694e8b:;
			{
				return _1e5e2d919_evalSptr(_self_);;
			}
		}
		else if ((_1e5e444bd_Ptr((*((*(_self_))._field_r))._field_Kind) != nullptr)) {
			_case_begin_1cb695002:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1cb695068;
			}
		}
		else if ((_1e5e444bd_Ptr((*((*(_self_))._field_l))._field_Kind) != nullptr)) {
			_case_begin_1cb695068:;
			{
				return _1e5e2dba0_evalPtr(_self_);;
			}
		}
		else if ((_1e5e44c71_Arr((*((*(_self_))._field_l))._field_Kind) != nullptr)) {
			_case_begin_1cb6950ce:;
			{
				return _1e5e2de36_evalArr(_self_);;
			}
		}
		else if ((_1e5e457aa_Trait((*((*(_self_))._field_r))._field_Kind) != nullptr)) {
			_case_begin_1cb69519a:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1cb695211;
			}
		}
		else if ((_1e5e457aa_Trait((*((*(_self_))._field_l))._field_Kind) != nullptr)) {
			_case_begin_1cb695211:;
			{
				return _1e5e2e453_evalTrait(_self_);;
			}
		}
		else if ((_1e5e43ea1_Prim((*((*(_self_))._field_l))._field_Kind) != nullptr)) {
			_case_begin_1cb695277:;
			{
				return _1e5e312e0_evalPrim(_self_);;
			}
		}
		else {
			_case_begin_1cb693264:;
			{
				_1e5e0aebd_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_self_))._field_op.alloc)._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1e5e41be6_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1cb692807:;
	};
}



inline void _1e5e31ab5_evalConst(_1e5e2bbc0_binaryEval* _self_, jule::Ptr<_1e5e08c13_Data>* _422430_d) {
	{
		
		if (((*(_422430_d)) == nullptr) || ((*((*(_self_))._field_l))._field_Model == nullptr) || ((*((*(_self_))._field_r))._field_Model == nullptr)) {
			_case_begin_1cb6a6e04:;
			{
				return;;
			}
		}
		else if ((!(_1e5e0964d_IsConst((*(_self_))._field_l.ptr()))) || (!(_1e5e0964d_IsConst((*(_self_))._field_r.ptr())))) {
			_case_begin_1cb6a74a9:;
			{
				(*((*(_422430_d))))._field_Constant=nullptr;
				(*((*(_422430_d))))._field_untyped=false;
				return;;
			}
		}
		_match_end_1cb6a6ce4:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1cb6a7586:;
			{
				(*((*(_422430_d))))._field_Constant=static__1e21a4ea2_NewBool(_1e21aa084_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1cb6a99d9:;
			{
				(*((*(_422430_d))))._field_Constant=static__1e21a4ea2_NewBool((!(_1e21aa084_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1cb6a9a50:;
			{
				(*((*(_422430_d))))._field_Constant=static__1e21a4ea2_NewBool(_1e21a9c43_Or((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1cb6a9ab6:;
			{
				(*((*(_422430_d))))._field_Constant=static__1e21a4ea2_NewBool(_1e21a9902_And((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1cb6a9b2c:;
			{
				(*((*(_422430_d))))._field_Constant=static__1e21a4ea2_NewBool(_1e21aaa57_Gt((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_1cb6a9ba4:;
			{
				(*((*(_422430_d))))._field_Constant=static__1e21a4ea2_NewBool(_1e21aa3c5_Lt((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1cb6a9c2b:;
			{
				(*((*(_422430_d))))._field_Constant=static__1e21a4ea2_NewBool(_1e21aad98_GtEq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1cb6a9ca3:;
			{
				(*((*(_422430_d))))._field_Constant=static__1e21a4ea2_NewBool(_1e21aa716_LtEq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1cb6a9d2a:;
			{
				_1e21ab1d9_Add((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_422430_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1cb6a9da2:;
			{
				_1e21ab52a_Sub((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_422430_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1cb6a9e29:;
			{
				_1e21ab86b_Mul((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_422430_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1cb6a9ea1:;
			{
				jule::Bool _42644_ok = _1e21abbac_Div((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));;
				if (((!(_42644_ok)) && (_1e21a7191_AsF64((*((*(_self_))._field_r))._field_Constant) == 0LL))) {
					_1e5e0aebd_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("divide by zero", 14)), jule::Slice<jule::Any>());
				};
				(*((*(_422430_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
				jule::Ptr<_1e5e49913_Prim> _42698_prim = _1e5e43ea1_Prim((*((*(_422430_d))))._field_Kind.ptr());;
				{
					
					if (_1e21a3258_IsSigInt((*(_42698_prim))._field_Kind)) {
						_case_begin_1cb6bb1e3:;
						{
							_1e21a7449_SetI64((*((*(_422430_d))))._field_Constant, _1e21a6b74_AsI64((*((*(_422430_d))))._field_Constant));
						}
					}
					else if (_1e21a3566_IsUnsigInt((*(_42698_prim))._field_Kind)) {
						_case_begin_1cb6bb28c:;
						{
							_1e21a7702_SetU64((*((*(_422430_d))))._field_Constant, _1e21a6e0a_AsU64((*((*(_422430_d))))._field_Constant));
						}
					}
					_match_end_1cb6bb16b:;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1cb6aa028:;
			{
				jule::Bool _42774_ok = _1e21abeed_Mod((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));;
				if (((!(_42774_ok)) && (_1e21a7191_AsF64((*((*(_self_))._field_r))._field_Constant) == 0LL))) {
					_1e5e0aebd_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("divide by zero", 14)), jule::Slice<jule::Any>());
				};
				(*((*(_422430_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_1cb6aa0a0:;
			{
				_1e21ac680_BitwiseOr((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_422430_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1cb6aa127:;
			{
				_1e21ac33e_BitwiseAnd((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_422430_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1cb6aa19e:;
			{
				_1e21ac9c1_Xor((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_422430_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1cb6aa226:;
			{
				_1e21acd12_Lshift((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_422430_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1cb6aa29d:;
			{
				_1e21ad153_Rshift((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_422430_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		_match_end_1cb6a8cc4:;
	};
	(*((*(_422430_d))))._field_Model=jule::Any((*((*(_422430_d))))._field_Constant, &__jule_any_type20);
	_1e5e3b85b_applyCastModelByEnum(&((*((*(_self_))._field_e))._field_s), _422430_d, _1e5e44754_Enum((*((*(_422430_d))))._field_Kind.ptr()), &((*(_self_))._field_op), _1e5e0dec1_getOwnerRefers((*(_self_))._field_e));
}



inline void _1e5e31d6d_checkData(_1e5e2bbc0_binaryEval* _self_, jule::Ptr<_1e5e08c13_Data>* _430230_d) {
	jule::Ptr<_1e5ce3416_FnIns> _43033_f = _1e5e4528d_Fn((*((*(_430230_d))))._field_Kind.ptr());;
	if ((((_43033_f != nullptr) && ((*_43033_f.alloc)._field_Decl != nullptr)) && _1e5ce0a95_IsMethod((*(_43033_f))._field_Decl))) {
		_1e5e0aebd_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("invalid expression used for binary operation", 44)), jule::Slice<jule::Any>());
	};
}



inline void _1e5e3206b_checkDatas(_1e5e2bbc0_binaryEval* _self_) {
	_1e5e31d6d_checkData(_self_, &((*(_self_))._field_l));
	_1e5e31d6d_checkData(_self_, &((*(_self_))._field_r));
}



inline void _1e5e32324_setModel(_1e5e2bbc0_binaryEval* _self_, jule::Ptr<_1e5e08c13_Data>* _431429_d) {
	if (_1e5e0964d_IsConst((*(_431429_d)).ptr())) {
		if (((_1e5e0964d_IsConst((*(_self_))._field_l.ptr()) && _1e5e0964d_IsConst((*(_self_))._field_r.ptr())) || (((*(*(_self_))._field_l.alloc)._field_Model == nullptr) && ((*(*(_self_))._field_r.alloc)._field_Model == nullptr)))) {
			return;;
		};
	};
	jule::Ptr<_1e5e08c13_Data> _43257_l;
	jule::Ptr<_1e5e08c13_Data> _432514_r;
	({
		jule::Ptr<_1e5e08c13_Data> ___jule_assign_arg = (*(_self_))._field_l;
		jule::Ptr<_1e5e08c13_Data> _1___jule_assign_arg = (*(_self_))._field_r;
		_43257_l = ___jule_assign_arg;
		_432514_r = _1___jule_assign_arg;
	});
	if ((!(_1e5e0998e_GoodOperand(_43257_l, &(_432514_r))))) {
		std::swap(_43257_l, _432514_r);
	};
	(*((*(_431429_d))))._field_Model=jule::Any(jule::new_ptr<_1e5cd2d51_BinaryExprModel>(_1e5cd2d51_BinaryExprModel{._field_Left=jule::new_ptr<_1e5cd2856_OperandExprModel>(_1e5cd2856_OperandExprModel{._field_Kind=(*_43257_l.alloc)._field_Kind, ._field_Model=(*_43257_l.alloc)._field_Model}), ._field_Right=jule::new_ptr<_1e5cd2856_OperandExprModel>(_1e5cd2856_OperandExprModel{._field_Kind=(*_432514_r.alloc)._field_Kind, ._field_Model=(*_432514_r.alloc)._field_Model}), ._field_Op=(*(_self_))._field_op}), &__jule_any_type113);
}



inline void _1e5e325cc_postEval(_1e5e2bbc0_binaryEval* _self_, jule::Ptr<_1e5e08c13_Data>* _434329_d) {
	(*((*(_434329_d))))._field_Lvalue=false;
	_1e5e32324_setModel(_self_, _434329_d);
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e329c8_solveExplicit(_1e5e2bbc0_binaryEval* _self_, jule::Ptr<_1e5e08c13_Data>* _434834_l, jule::Ptr<_1e5e08c13_Data>* _434849_r) {
	({
		jule::Ptr<_1e5e08c13_Data> ___jule_assign_arg = (*(_434834_l));
		jule::Ptr<_1e5e08c13_Data> _1___jule_assign_arg = (*(_434849_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1e5e3206b_checkDatas(_self_);
	jule::Ptr<_1e5e08c13_Data> _43537_d = _1e5e3180c_evalOp(_self_);;
	({
		jule::Ptr<_1e5e08c13_Data> ___jule_assign_arg = (*(_434834_l));
		jule::Ptr<_1e5e08c13_Data> _1___jule_assign_arg = (*(_434849_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1e5e31ab5_evalConst(_self_, &(_43537_d));
	if ((_43537_d != nullptr)) {
		(*_43537_d.alloc)._field_Mutable=true;
		_1e5e325cc_postEval(_self_, &(_43537_d));
	};
	return _43537_d;;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e32d19_eval(_1e5e2bbc0_binaryEval* _self_, jule::Ptr<_1e5cac985_BinaryExpr>* _436825_op) {
	if (((*((*((*(_436825_op))))._field_Op))._field_Id == static_cast<jule::U64>(71LLU))) {
		_1e5e0aebd_pushErr((*(_self_))._field_e.ptr(), (*((*(_436825_op))))._field_Op, static_cast<jule::Str>(jule::Str::lit("assignments not available for expressions", 41)), jule::Slice<jule::Any>());
		_1e5e0b331_pushSuggestion((*(_self_))._field_e, static_cast<jule::Str>(jule::Str::lit("use clear imperative approach, comes relevant assignment statement before the expression", 88)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1e5e08c13_Data> _43757_l = _1e5e2945e_evalExpr1((*(_self_))._field_e, (*((*(_436825_op))))._field_Left);;
	if (((_43757_l == nullptr) || ((*(_43757_l))._field_Kind == nullptr))) {
		return nullptr;;
	};
	jule::Ptr<_1e5e417ea_TypeKind> _43807_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
	(*(*(_self_))._field_e.alloc)._field_prefix=(*(_43757_l))._field_Kind;
	__JULE_DEFER({
		(*(*(_self_))._field_e.alloc)._field_prefix=_43807_prefix;
	});;
	jule::Ptr<_1e5e08c13_Data> _43837_r = _1e5e2945e_evalExpr1((*(_self_))._field_e, (*((*(_436825_op))))._field_Right);;
	if (((_43837_r == nullptr) || ((*(_43837_r))._field_Kind == nullptr))) {
		return nullptr;;
	};
	(*(_self_))._field_op=(*((*(_436825_op))))._field_Op;
	jule::Ptr<_1e5e08c13_Data> _43907_d = _1e5e329c8_solveExplicit(_self_, &(_43757_l), &(_43837_r));;
	if ((((_43907_d != nullptr) && (*(_43757_l))._field_IsRune) && (*(_43837_r))._field_IsRune)) {
		(*_43907_d.alloc)._field_IsRune=true;
	};
	return _43907_d;;
}
















inline jule::Bool _1e5e417ea_TypeKind_eq(_1e5e417ea_TypeKind *_self_, _1e5e417ea_TypeKind _other_) {
	return 
		(_self_->_field_BindIdent == _other_._field_BindIdent) &&
		(_self_->_field_Generic == _self_->_field_Generic) &&
		(_self_->_field_Variadic == _self_->_field_Variadic) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}

inline jule::Str _1e5e41be6_Str(_1e5e417ea_TypeKind* _self_) {
	if (_1e5e4292d_IsNil(_self_)) {
		return jule::Str::lit("nil", 3);;
	};
	_224497295_StrBuilder _747_kind = static__2244a0b83_New(16LL);;
	if ((*(_self_))._field_Variadic) {
		_2244a1090_WriteStr(&_747_kind, jule::Str::lit("...", 3));
	};
	if (_1e5e42697_Binded(_self_)) {
		_2244a1090_WriteStr(&_747_kind, jule::Str::lit("cpp.", 4));
		_2244a1090_WriteStr(&_747_kind, (*(_self_))._field_BindIdent);
	} else {
		_2244a1090_WriteStr(&_747_kind, ((_1e5e41344_KindMptrData*)(*(_self_))._field_Kind.safe_type())->_1e5e40d9e_Str((*(_self_))._field_Kind.data));
	};
	return _2244a1887_Str(&_747_kind);;
}



inline jule::Bool _1e5e42037_Equal(jule::Ptr<_1e5e417ea_TypeKind> _self_, jule::Ptr<_1e5e417ea_TypeKind> _9018_other) {
	if (_1e5e4292d_IsNil(_self_.ptr())) {
		return _1e5e4292d_IsNil(_9018_other.ptr());;
	};
	if (_1e5e42697_Binded(_self_)) {
		return (_1e5e42697_Binded(_9018_other) && ((*_self_.alloc)._field_BindIdent == (*_9018_other.alloc)._field_BindIdent));;
	};
	return ((_1e5e41344_KindMptrData*)(*_self_.alloc)._field_Kind.safe_type())->_1e5e411e0_Equal((*_self_.alloc)._field_Kind.data, _9018_other);;
}



inline jule::Bool _1e5e42697_Binded(_1e5e417ea_TypeKind* _self_) {
	return ((*(_self_))._field_BindIdent.len() != 0LL);;
}



inline jule::Bool _1e5e4292d_IsNil(_1e5e417ea_TypeKind* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}



inline jule::Bool _1e5e42bb4_Void(_1e5e417ea_TypeKind* _self_) {
	jule::Ptr<_1e5e49913_Prim> _1103_prim = _1e5e43ea1_Prim(_self_);;
	return ((_1103_prim != nullptr) && (*(_1103_prim))._field_Kind.equal("void", 4));;
}



inline jule::Bool _1e5e42e4a_Comparable(_1e5e417ea_TypeKind* _self_) {
	{
		_1e5e417ea_TypeKind* _1178__self = _self_;;
		if ((_1e5e45524_Struct(_1178__self) != nullptr)) {
			return (*(_1e5e45524_Struct(_1178__self)))._field_Comparable;;
		};
		if ((_1e5e44c71_Arr(_1178__self) != nullptr)) {
			return _1e5e42e4a_Comparable((*(_1e5e44c71_Arr(_1178__self)))._field_Elem.ptr());;
		};
		return (((_1e5e45a41_Map(_1178__self) == nullptr) && (_1e5e45007_Slc(_1178__self) == nullptr)) && (_1e5e4528d_Fn(_1178__self) == nullptr));;
	};
}



inline jule::Bool _1e5e431d1_Mutable(_1e5e417ea_TypeKind* _self_) {
	{
		_1e5e417ea_TypeKind* _1318__self = _self_;;
		if ((_1e5e45524_Struct(_1318__self) != nullptr)) {
			return (*(_1e5e45524_Struct(_1318__self)))._field_Mutable;;
		};
		if ((_1e5e457aa_Trait(_1318__self) != nullptr)) {
			return true;;
		};
		if ((_1e5e43ea1_Prim(_1318__self) != nullptr)) {
			jule::Ptr<_1e5e49913_Prim> _1395_p = _1e5e43ea1_Prim(_1318__self);;
			return _1e5e4d164_IsAny(_1395_p.ptr());;
		};
		if ((_1e5e44c71_Arr(_1318__self) != nullptr)) {
			return _1e5e431d1_Mutable((*(_1e5e44c71_Arr(_1318__self)))._field_Elem.ptr());;
		};
		return (((_1e5e45007_Slc(_1318__self) != nullptr) || (_1e5e444bd_Ptr(_1318__self) != nullptr)) || (_1e5e44237_Sptr(_1318__self) != nullptr));;
	};
}



inline jule::Bool _1e5e43467_Ordered(_1e5e417ea_TypeKind* _self_) {
	{
		_1e5e417ea_TypeKind* _1548__self = _self_;;
		jule::Ptr<_1e5e49913_Prim> _1554_prim = _1e5e43ea1_Prim(_1548__self);;
		if ((_1554_prim != nullptr)) {
			return (_1e21a3e07_IsNum((*_1554_prim.alloc)._field_Kind) || _1e5e4cdcd_IsStr(_1554_prim));;
		};
		if ((_1e5e444bd_Ptr(_1548__self) != nullptr)) {
			return true;;
		};
		jule::Ptr<_1e5cc8c7b_StructIns> _1624_s = _1e5e45524_Struct(_1548__self);;
		if ((_1624_s != nullptr)) {
			return (((((*_1624_s.alloc)._field_Operators._field_Gt != nullptr) && ((*_1624_s.alloc)._field_Operators._field_GtEq != nullptr)) && ((*_1624_s.alloc)._field_Operators._field_Lt != nullptr)) && ((*_1624_s.alloc)._field_Operators._field_LtEq != nullptr));;
		};
		jule::Ptr<_1e5d065c2_Enum> _1694_enm = _1e5e44754_Enum(_1548__self);;
		if ((_1694_enm != nullptr)) {
			return _1e21a3e07_IsNum(_1e5e41be6_Str((*((*_1694_enm.alloc)._field_Kind))._field_Kind.ptr()));;
		};
		return false;;
	};
}



inline jule::Bool _1e5e436ed_NilCompatible(_1e5e417ea_TypeKind* _self_) {
	{
		_1e5e417ea_TypeKind* _1808__self = _self_;;
		jule::Ptr<_1e5e49913_Prim> _1824_prim = _1e5e43ea1_Prim(_1808__self);;
		if (((_1824_prim != nullptr) && _1e5e4d164_IsAny(_1824_prim))) {
			return true;;
		};
		return (((((((_1e5e4292d_IsNil(_1808__self) || (_1e5e4528d_Fn(_1808__self) != nullptr)) || (_1e5e44237_Sptr(_1808__self) != nullptr)) || (_1e5e444bd_Ptr(_1808__self) != nullptr)) || (_1e5e457aa_Trait(_1808__self) != nullptr)) || (_1e5e45007_Slc(_1808__self) != nullptr)) || (_1e5e45a41_Map(_1808__self) != nullptr)) || (_1e5e449da_TypeEnum(_1808__self) != nullptr));;
	};
}



inline jule::Bool _1e5e43984_GC(_1e5e417ea_TypeKind* _self_) {
	{
		_1e5e417ea_TypeKind* _2018__self = _self_;;
		jule::Ptr<_1e5e49913_Prim> _2024_prim = _1e5e43ea1_Prim(_2018__self);;
		if ((_2024_prim != nullptr)) {
			return (_1e5e4d164_IsAny(_2024_prim) || _1e5e4cdcd_IsStr(_2024_prim));;
		};
		return ((((_1e5e44237_Sptr(_2018__self) != nullptr) || (_1e5e45007_Slc(_2018__self) != nullptr)) || (_1e5e457aa_Trait(_2018__self) != nullptr)) || (_1e5e449da_TypeEnum(_2018__self) != nullptr));;
	};
}



inline jule::Bool _1e5e43c1a_Variadicable(_1e5e417ea_TypeKind* _self_) {
	{
		_1e5e417ea_TypeKind* _2148__self = _self_;;
		return (_1e5e45007_Slc(_2148__self) != nullptr);;
	};
}



inline jule::Ptr<_1e5e49913_Prim> _1e5e43ea1_Prim(_1e5e417ea_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5e41344_Kind_mptr_data22)) {
			_case_begin_1cb70ca92:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e5e49913_Prim>((jule::Trait::Type*)&_1e5e41344_Kind_mptr_data22);;
			}
		}
		else {
			_case_begin_1cb72206d:;
			{
				return nullptr;;
			}
		}
		_match_end_1cb722007:;
	};
}



inline jule::Ptr<_1e5e4d43e_Sptr> _1e5e44237_Sptr(_1e5e417ea_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5e41344_Kind_mptr_data23)) {
			_case_begin_1cb722c0b:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e5e4d43e_Sptr>((jule::Trait::Type*)&_1e5e41344_Kind_mptr_data23);;
			}
		}
		else {
			_case_begin_1cb722e5e:;
			{
				return nullptr;;
			}
		}
		_match_end_1cb722de8:;
	};
}



inline jule::Ptr<_1e5e51c06_Ptr> _1e5e444bd_Ptr(_1e5e417ea_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5e41344_Kind_mptr_data28)) {
			_case_begin_1cb723b85:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e5e51c06_Ptr>((jule::Trait::Type*)&_1e5e41344_Kind_mptr_data28);;
			}
		}
		else {
			_case_begin_1cb7239cb:;
			{
				return nullptr;;
			}
		}
		_match_end_1cb723965:;
	};
}



inline jule::Ptr<_1e5d065c2_Enum> _1e5e44754_Enum(_1e5e417ea_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5e41344_Kind_mptr_data3)) {
			_case_begin_1cb7246e1:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e5d065c2_Enum>((jule::Trait::Type*)&_1e5e41344_Kind_mptr_data3);;
			}
		}
		else {
			_case_begin_1cb724944:;
			{
				return nullptr;;
			}
		}
		_match_end_1cb7248cd:;
	};
}



inline jule::Ptr<_1e5d07ccc_TypeEnum> _1e5e449da_TypeEnum(_1e5e417ea_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5e41344_Kind_mptr_data4)) {
			_case_begin_1cb72566a:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e5d07ccc_TypeEnum>((jule::Trait::Type*)&_1e5e41344_Kind_mptr_data4);;
			}
		}
		else {
			_case_begin_1cb7254b1:;
			{
				return nullptr;;
			}
		}
		_match_end_1cb72544a:;
	};
}



inline jule::Ptr<_1e5e51233_Arr> _1e5e44c71_Arr(_1e5e417ea_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5e41344_Kind_mptr_data27)) {
			_case_begin_1cb7263e6:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e5e51233_Arr>((jule::Trait::Type*)&_1e5e41344_Kind_mptr_data27);;
			}
		}
		else {
			_case_begin_1cb72623c:;
			{
				return nullptr;;
			}
		}
		_match_end_1cb7261c6:;
	};
}



inline jule::Ptr<_1e5e4de12_Slc> _1e5e45007_Slc(_1e5e417ea_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5e41344_Kind_mptr_data24)) {
			_case_begin_1cb727172:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e5e4de12_Slc>((jule::Trait::Type*)&_1e5e41344_Kind_mptr_data24);;
			}
		}
		else {
			_case_begin_1cb726eb8:;
			{
				return nullptr;;
			}
		}
		_match_end_1cb726e52:;
	};
}



inline jule::Ptr<_1e5ce3416_FnIns> _1e5e4528d_Fn(_1e5e417ea_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5e41344_Kind_mptr_data1)) {
			_case_begin_1cb727bcd:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e5ce3416_FnIns>((jule::Trait::Type*)&_1e5e41344_Kind_mptr_data1);;
			}
		}
		else {
			_case_begin_1cb727e31:;
			{
				return nullptr;;
			}
		}
		_match_end_1cb727dba:;
	};
}



inline jule::Ptr<_1e5cc8c7b_StructIns> _1e5e45524_Struct(_1e5e417ea_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5e41344_Kind_mptr_data0)) {
			_case_begin_1cb728937:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e5cc8c7b_StructIns>((jule::Trait::Type*)&_1e5e41344_Kind_mptr_data0);;
			}
		}
		else {
			_case_begin_1cb728b8a:;
			{
				return nullptr;;
			}
		}
		_match_end_1cb728b24:;
	};
}



inline jule::Ptr<_1e5d03db6_Trait> _1e5e457aa_Trait(_1e5e417ea_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5e41344_Kind_mptr_data2)) {
			_case_begin_1cb729691:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e5d03db6_Trait>((jule::Trait::Type*)&_1e5e41344_Kind_mptr_data2);;
			}
		}
		else {
			_case_begin_1cb7298e4:;
			{
				return nullptr;;
			}
		}
		_match_end_1cb72987d:;
	};
}



inline jule::Ptr<_1e5e505a6_Map> _1e5e45a41_Map(_1e5e417ea_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5e41344_Kind_mptr_data26)) {
			_case_begin_1cb72a61a:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e5e505a6_Map>((jule::Trait::Type*)&_1e5e41344_Kind_mptr_data26);;
			}
		}
		else {
			_case_begin_1cb72a461:;
			{
				return nullptr;;
			}
		}
		_match_end_1cb72a3ea:;
	};
}



inline jule::Ptr<_1e5e4ea06_Tuple> _1e5e45cc7_Tup(_1e5e417ea_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5e41344_Kind_mptr_data25)) {
			_case_begin_1cb72b396:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e5e4ea06_Tuple>((jule::Trait::Type*)&_1e5e41344_Kind_mptr_data25);;
			}
		}
		else {
			_case_begin_1cb72b1dc:;
			{
				return nullptr;;
			}
		}
		_match_end_1cb72b176:;
	};
}



inline jule::Bool _1e5e4605d_comptime(_1e5e417ea_TypeKind* _self_) {
	return (((((((((((((((_1e5e475d1_comptimeTypeInfos(_self_) != nullptr) || (_1e5e47867_comptimeTypeInfo(_self_) != nullptr)) || (_1e5e462e4_comptimeStructFields(_self_) != nullptr)) || (_1e5e4657a_comptimeStructField(_self_) != nullptr)) || (_1e5e46811_comptimeEnumFields(_self_) != nullptr)) || (_1e5e46a97_comptimeEnumField(_self_) != nullptr)) || (_1e5e47aed_comptimeStatics(_self_) != nullptr)) || (_1e5e47d84_comptimeStatic(_self_) != nullptr)) || (_1e5e46d2d_comptimeParams(_self_) != nullptr)) || (_1e5e470b4_comptimeParam(_self_) != nullptr)) || (_1e5e4811a_comptimeValue(_self_) != nullptr)) || (_1e5e48b54_comptimeFiles(_self_) != nullptr)) || (_1e5e488bd_comptimeFile(_self_) != nullptr)) || (_1e5e483a1_comptimeDecl(_self_) != nullptr)) || (_1e5e48637_comptimeDecls(_self_) != nullptr));;
}



inline jule::Ptr<_1e5d0ca07_comptimeStructFields> _1e5e462e4_comptimeStructFields(_1e5e417ea_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5e41344_Kind_mptr_data7)) {
			_case_begin_1cb72be02:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e5d0ca07_comptimeStructFields>((jule::Trait::Type*)&_1e5e41344_Kind_mptr_data7);;
			}
		}
		else {
			_case_begin_1cb731313:;
			{
				return nullptr;;
			}
		}
		_match_end_1cb73129c:;
	};
}



inline jule::Ptr<_1e5d0b264_comptimeStructField> _1e5e4657a_comptimeStructField(_1e5e417ea_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5e41344_Kind_mptr_data6)) {
			_case_begin_1cb731b82:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e5d0b264_comptimeStructField>((jule::Trait::Type*)&_1e5e41344_Kind_mptr_data6);;
			}
		}
		else {
			_case_begin_1cb7319c8:;
			{
				return nullptr;;
			}
		}
		_match_end_1cb731962:;
	};
}



inline jule::Ptr<_1e5d139b9_comptimeEnumFields> _1e5e46811_comptimeEnumFields(_1e5e417ea_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5e41344_Kind_mptr_data11)) {
			_case_begin_1cb73290d:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e5d139b9_comptimeEnumFields>((jule::Trait::Type*)&_1e5e41344_Kind_mptr_data11);;
			}
		}
		else {
			_case_begin_1cb732754:;
			{
				return nullptr;;
			}
		}
		_match_end_1cb7326dd:;
	};
}



inline jule::Ptr<_1e5d126aa_comptimeEnumField> _1e5e46a97_comptimeEnumField(_1e5e417ea_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5e41344_Kind_mptr_data10)) {
			_case_begin_1cb733689:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e5d126aa_comptimeEnumField>((jule::Trait::Type*)&_1e5e41344_Kind_mptr_data10);;
			}
		}
		else {
			_case_begin_1cb7334d0:;
			{
				return nullptr;;
			}
		}
		_match_end_1cb733469:;
	};
}



inline jule::Ptr<_1e5d1732a_comptimeParams> _1e5e46d2d_comptimeParams(_1e5e417ea_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5e41344_Kind_mptr_data13)) {
			_case_begin_1cb734415:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e5d1732a_comptimeParams>((jule::Trait::Type*)&_1e5e41344_Kind_mptr_data13);;
			}
		}
		else {
			_case_begin_1cb73425b:;
			{
				return nullptr;;
			}
		}
		_match_end_1cb7341e5:;
	};
}



inline jule::Ptr<_1e5d154c1_comptimeParam> _1e5e470b4_comptimeParam(_1e5e417ea_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5e41344_Kind_mptr_data12)) {
			_case_begin_1cb735191:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e5d154c1_comptimeParam>((jule::Trait::Type*)&_1e5e41344_Kind_mptr_data12);;
			}
		}
		else {
			_case_begin_1cb734ed7:;
			{
				return nullptr;;
			}
		}
		_match_end_1cb734e71:;
	};
}



inline jule::Ptr<_1e5d0a708_comptimeRange> _1e5e4734a_comptimeRange(_1e5e417ea_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5e41344_Kind_mptr_data5)) {
			_case_begin_1cb735e1c:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e5d0a708_comptimeRange>((jule::Trait::Type*)&_1e5e41344_Kind_mptr_data5);;
			}
		}
		else {
			_case_begin_1cb735c63:;
			{
				return nullptr;;
			}
		}
		_match_end_1cb735bec:;
	};
}



inline jule::Ptr<_1e5d18b89_comptimeTypeInfos> _1e5e475d1_comptimeTypeInfos(_1e5e417ea_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5e41344_Kind_mptr_data14)) {
			_case_begin_1cb736b98:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e5d18b89_comptimeTypeInfos>((jule::Trait::Type*)&_1e5e41344_Kind_mptr_data14);;
			}
		}
		else {
			_case_begin_1cb7369de:;
			{
				return nullptr;;
			}
		}
		_match_end_1cb736978:;
	};
}



inline jule::Ptr<_1e5d1a608_comptimeTypeInfo> _1e5e47867_comptimeTypeInfo(_1e5e417ea_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5e41344_Kind_mptr_data15)) {
			_case_begin_1cb737924:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e5d1a608_comptimeTypeInfo>((jule::Trait::Type*)&_1e5e41344_Kind_mptr_data15);;
			}
		}
		else {
			_case_begin_1cb73776a:;
			{
				return nullptr;;
			}
		}
		_match_end_1cb737704:;
	};
}



inline jule::Ptr<_1e5d10c3b_comptimeStatics> _1e5e47aed_comptimeStatics(_1e5e417ea_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5e41344_Kind_mptr_data9)) {
			_case_begin_1cb7386a0:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e5d10c3b_comptimeStatics>((jule::Trait::Type*)&_1e5e41344_Kind_mptr_data9);;
			}
		}
		else {
			_case_begin_1cb7384e6:;
			{
				return nullptr;;
			}
		}
		_match_end_1cb738480:;
	};
}



inline jule::Ptr<_1e5d0e487_comptimeStatic> _1e5e47d84_comptimeStatic(_1e5e417ea_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5e41344_Kind_mptr_data8)) {
			_case_begin_1cb73942b:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e5d0e487_comptimeStatic>((jule::Trait::Type*)&_1e5e41344_Kind_mptr_data8);;
			}
		}
		else {
			_case_begin_1cb739272:;
			{
				return nullptr;;
			}
		}
		_match_end_1cb73920b:;
	};
}



inline jule::Ptr<_1e5d2170d_comptimeValue> _1e5e4811a_comptimeValue(_1e5e417ea_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5e41344_Kind_mptr_data16)) {
			_case_begin_1cb73a1a7:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e5d2170d_comptimeValue>((jule::Trait::Type*)&_1e5e41344_Kind_mptr_data16);;
			}
		}
		else {
			_case_begin_1cb739eed:;
			{
				return nullptr;;
			}
		}
		_match_end_1cb739e87:;
	};
}



inline jule::Ptr<_1e5d29cee_comptimeDecl> _1e5e483a1_comptimeDecl(_1e5e417ea_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5e41344_Kind_mptr_data20)) {
			_case_begin_1cb73ae33:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e5d29cee_comptimeDecl>((jule::Trait::Type*)&_1e5e41344_Kind_mptr_data20);;
			}
		}
		else {
			_case_begin_1cb73ac79:;
			{
				return nullptr;;
			}
		}
		_match_end_1cb73ac13:;
	};
}



inline jule::Ptr<_1e5d27a11_comptimeDecls> _1e5e48637_comptimeDecls(_1e5e417ea_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5e41344_Kind_mptr_data19)) {
			_case_begin_1cb73bbae:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e5d27a11_comptimeDecls>((jule::Trait::Type*)&_1e5e41344_Kind_mptr_data19);;
			}
		}
		else {
			_case_begin_1cb73ba05:;
			{
				return nullptr;;
			}
		}
		_match_end_1cb73b98e:;
	};
}



inline jule::Ptr<_1e5d25dd8_comptimeFile> _1e5e488bd_comptimeFile(_1e5e417ea_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5e41344_Kind_mptr_data18)) {
			_case_begin_1cb73c93a:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e5d25dd8_comptimeFile>((jule::Trait::Type*)&_1e5e41344_Kind_mptr_data18);;
			}
		}
		else {
			_case_begin_1cb73c781:;
			{
				return nullptr;;
			}
		}
		_match_end_1cb73c71a:;
	};
}



inline jule::Ptr<_1e5d24469_comptimeFiles> _1e5e48b54_comptimeFiles(_1e5e417ea_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5e41344_Kind_mptr_data17)) {
			_case_begin_1cb73d6b6:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1e5d24469_comptimeFiles>((jule::Trait::Type*)&_1e5e41344_Kind_mptr_data17);;
			}
		}
		else {
			_case_begin_1cb73d50c:;
			{
				return nullptr;;
			}
		}
		_match_end_1cb73d496:;
	};
}








inline jule::Bool _1e5e4900b_TypeSymbol_eq(_1e5e4900b_TypeSymbol *_self_, _1e5e4900b_TypeSymbol _other_) {
	return 
		(_self_->_field_Decl == _other_._field_Decl) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}

inline jule::Bool _1e5e493b3_checked(_1e5e4900b_TypeSymbol* _self_) {
	return ((*(_self_))._field_Kind != nullptr);;
}








inline jule::Bool _1e5e49913_Prim_eq(_1e5e49913_Prim *_self_, _1e5e49913_Prim _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind);
}

inline jule::Str _1e5e49c87_Str(_1e5e49913_Prim* _self_) {
	return (*(_self_))._field_Kind;;
}



inline jule::Bool _1e5e4a0c8_Equal(jule::Ptr<_1e5e49913_Prim> _self_, jule::Ptr<_1e5e417ea_TypeKind> _53218_other) {
	jule::Ptr<_1e5e49913_Prim> _5333_prim = _1e5e43ea1_Prim(_53218_other.ptr());;
	if ((_5333_prim == nullptr)) {
		return false;;
	};
	return ((*(_self_))._field_Kind == (*(_5333_prim))._field_Kind);;
}



inline jule::Bool _1e5e4a56d_IsConstraint(_1e5e49913_Prim* _self_) {
	return ((((!(_1e5e4cdcd_IsStr(_self_))) && (!(_1e5e4d164_IsAny(_self_)))) && (!(_1e5e4cb47_IsBool(_self_)))) && (!(_1e21a3e07_IsNum((*(_self_))._field_Kind))));;
}



inline jule::Bool _1e5e4a804_IsI8(_1e5e49913_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("i8", 2)));;
}



inline jule::Bool _1e5e4aa8a_IsI16(_1e5e49913_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("i16", 3)));;
}



inline jule::Bool _1e5e4ad21_IsI32(_1e5e49913_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("i32", 3)));;
}



inline jule::Bool _1e5e4b0a7_IsI64(_1e5e49913_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("i64", 3)));;
}



inline jule::Bool _1e5e4b33d_IsU8(_1e5e49913_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("u8", 2)));;
}



inline jule::Bool _1e5e4b5c4_IsU16(_1e5e49913_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("u16", 3)));;
}



inline jule::Bool _1e5e4b85a_IsU32(_1e5e49913_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("u32", 3)));;
}



inline jule::Bool _1e5e4bae1_IsU64(_1e5e49913_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("u64", 3)));;
}



inline jule::Bool _1e5e4bd77_IsF32(_1e5e49913_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("f32", 3)));;
}



inline jule::Bool _1e5e4c10d_IsF64(_1e5e49913_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("f64", 3)));;
}



inline jule::Bool _1e5e4c394_IsInt(_1e5e49913_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("int", 3)));;
}



inline jule::Bool _1e5e4c62a_IsUint(_1e5e49913_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("uint", 4)));;
}



inline jule::Bool _1e5e4c8b1_IsUintptr(_1e5e49913_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("uintptr", 7)));;
}



inline jule::Bool _1e5e4cb47_IsBool(_1e5e49913_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("bool", 4)));;
}



inline jule::Bool _1e5e4cdcd_IsStr(_1e5e49913_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("str", 3)));;
}



inline jule::Bool _1e5e4d164_IsAny(_1e5e49913_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("any", 3)));;
}








inline jule::Bool _1e5e4d43e_Sptr_eq(_1e5e4d43e_Sptr *_self_, _1e5e4d43e_Sptr _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Str _1e5e4d7e6_Str(_1e5e4d43e_Sptr* _self_) {
	return (jule::Str::lit("&", 1) + _1e5e41be6_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1e5e4db37_Equal(jule::Ptr<_1e5e4d43e_Sptr> _self_, jule::Ptr<_1e5e417ea_TypeKind> _60918_other) {
	jule::Ptr<_1e5e4d43e_Sptr> _6103_sptr = _1e5e44237_Sptr(_60918_other.ptr());;
	if ((_6103_sptr == nullptr)) {
		return false;;
	};
	return _1e5e42037_Equal((*(_self_))._field_Elem, (*(_6103_sptr))._field_Elem);;
}








inline jule::Bool _1e5e4de12_Slc_eq(_1e5e4de12_Slc *_self_, _1e5e4de12_Slc _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Str _1e5e4e3c9_Str(_1e5e4de12_Slc* _self_) {
	return (jule::Str::lit("[]", 2) + _1e5e41be6_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1e5e4e71a_Equal(jule::Ptr<_1e5e4de12_Slc> _self_, jule::Ptr<_1e5e417ea_TypeKind> _62818_other) {
	jule::Ptr<_1e5e4de12_Slc> _6293_slc = _1e5e45007_Slc(_62818_other.ptr());;
	if ((_6293_slc == nullptr)) {
		return false;;
	};
	return _1e5e42037_Equal((*(_self_))._field_Elem, (*(_6293_slc))._field_Elem);;
}







inline jule::Str _1e5e4edad_Str(_1e5e4ea06_Tuple* _self_) {
	_224497295_StrBuilder _6457_s = static__2244a0b83_New(16LL);;
	_2244a1348_WriteByte(&_6457_s, '(');
	_2244a1090_WriteStr(&_6457_s, _1e5e41be6_Str((*(_self_))._field_Types[0LL].ptr()));
	{
		auto expr = (*(_self_))._field_Types.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1cb74ea18:;
		if (it != expr_end) {
			jule::Ptr<_1e5e417ea_TypeKind> *_64810_t = it;
			{
				_2244a1348_WriteByte(&_6457_s, ',');
				_2244a1090_WriteStr(&_6457_s, _1e5e41be6_Str((*(_64810_t)).ptr()));
			}
			_iter_next_1cb74ea18:;
			++it;
			goto _iter_begin_1cb74ea18;
		}
		_iter_end_1cb74ea18:;
	};
	_2244a1348_WriteByte(&_6457_s, ')');
	return _2244a1887_Str(&_6457_s);;
}



inline jule::Bool _1e5e501ee_Equal(jule::Ptr<_1e5e4ea06_Tuple> _self_, jule::Ptr<_1e5e417ea_TypeKind> _65718_other) {
	jule::Ptr<_1e5e4ea06_Tuple> _6583_tup = _1e5e45cc7_Tup(_65718_other.ptr());;
	if ((_6583_tup == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Types.len() != (*(_6583_tup))._field_Types.len())) {
		return false;;
	};
	jule::I64 _6657_i = 0LL;;
	for (; (_6657_i < (*_self_.alloc)._field_Types.len()); (_6657_i)++) {
		{
			if ((!(_1e5e42037_Equal((*(_self_))._field_Types[_6657_i], (*(_6583_tup))._field_Types[_6657_i])))) {
				return false;;
			};
		}
	_iter_next_1cb7529b6:;
	}
	_iter_end_1cb7529b6:;;
	return true;;
}








inline jule::Bool _1e5e505a6_Map_eq(_1e5e505a6_Map *_self_, _1e5e505a6_Map _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val);
}

inline jule::Str _1e5e5095d_Str(_1e5e505a6_Map* _self_) {
	_224497295_StrBuilder _6857_s = static__2244a0b83_New(16LL);;
	_2244a1090_WriteStr(&_6857_s, jule::Str::lit("map[", 4));
	_2244a1090_WriteStr(&_6857_s, _1e5e41be6_Str((*(_self_))._field_Key.ptr()));
	_2244a1348_WriteByte(&_6857_s, ']');
	_2244a1090_WriteStr(&_6857_s, _1e5e41be6_Str((*(_self_))._field_Val.ptr()));
	return _2244a1887_Str(&_6857_s);;
}



inline jule::Bool _1e5e50c9e_Equal(jule::Ptr<_1e5e505a6_Map> _self_, jule::Ptr<_1e5e417ea_TypeKind> _69418_other) {
	jule::Ptr<_1e5e505a6_Map> _6953_m = _1e5e45a41_Map(_69418_other.ptr());;
	if ((_6953_m == nullptr)) {
		return false;;
	};
	return (_1e5e42037_Equal((*(_self_))._field_Key, (*(_6953_m))._field_Key) && _1e5e42037_Equal((*_self_.alloc)._field_Val, (*(_6953_m))._field_Val));;
}








inline jule::Bool _1e5e51233_Arr_eq(_1e5e51233_Arr *_self_, _1e5e51233_Arr _other_) {
	return 
		(_self_->_field_Auto == _other_._field_Auto) &&
		(_self_->_field_N == _self_->_field_N) &&
		(_self_->_field_Elem == _self_->_field_Elem);
}

inline jule::Str _1e5e515da_Str(_1e5e51233_Arr* _self_) {
	_224497295_StrBuilder _7137_s = static__2244a0b83_New(16LL);;
	_2244a1348_WriteByte(&_7137_s, '[');
	_2244a1090_WriteStr(&_7137_s, _1e2195e4e_Itoa((*(_self_))._field_N));
	_2244a1348_WriteByte(&_7137_s, ']');
	_2244a1090_WriteStr(&_7137_s, _1e5e41be6_Str((*(_self_))._field_Elem.ptr()));
	return _2244a1887_Str(&_7137_s);;
}



inline jule::Bool _1e5e5192b_Equal(jule::Ptr<_1e5e51233_Arr> _self_, jule::Ptr<_1e5e417ea_TypeKind> _72218_other) {
	jule::Ptr<_1e5e51233_Arr> _7233_arr = _1e5e44c71_Arr(_72218_other.ptr());;
	if ((_7233_arr == nullptr)) {
		return false;;
	};
	return (((*(_self_))._field_N == (*(_7233_arr))._field_N) && _1e5e42037_Equal((*_self_.alloc)._field_Elem, (*(_7233_arr))._field_Elem));;
}








inline jule::Bool _1e5e51c06_Ptr_eq(_1e5e51c06_Ptr *_self_, _1e5e51c06_Ptr _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Str _1e5e520ad_Str(_1e5e51c06_Ptr* _self_) {
	if (_1e5e52773_IsUnsafe(_self_)) {
		return jule::Str::lit("*unsafe", 7);;
	};
	return (jule::Str::lit("*", 1) + _1e5e41be6_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1e5e523ee_Equal(jule::Ptr<_1e5e51c06_Ptr> _self_, jule::Ptr<_1e5e417ea_TypeKind> _74618_other) {
	jule::Ptr<_1e5e51c06_Ptr> _7473_ptr = _1e5e444bd_Ptr(_74618_other.ptr());;
	{
		
		if ((_7473_ptr == nullptr)) {
			_case_begin_1cb75dab0:;
			{
				return false;;
			}
		}
		else if (_1e5e52773_IsUnsafe(_self_.ptr())) {
			_case_begin_1cb75d461:;
			{
				return _1e5e52773_IsUnsafe(_7473_ptr.ptr());;
			}
		}
		else if (_1e5e52773_IsUnsafe(_7473_ptr.ptr())) {
			_case_begin_1cb75d4c7:;
			{
				return _1e5e52773_IsUnsafe(_self_.ptr());;
			}
		}
		else {
			_case_begin_1cb75cedd:;
			{
				return _1e5e42037_Equal((*(_self_))._field_Elem, (*(_7473_ptr))._field_Elem);;
			}
		}
		_match_end_1cb75ce66:;
	};
}



inline jule::Bool _1e5e52773_IsUnsafe(_1e5e51c06_Ptr* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}








inline jule::Bool _1e5e52c07_referencer_eq(_1e5e52c07_referencer *_self_, _1e5e52c07_referencer _other_) {
	return 
		(_self_->_field_ident == _other_._field_ident) &&
		(_self_->_field_owner == _self_->_field_owner) &&
		(_self_->_field_refs == _self_->_field_refs);
}





inline void _1e5e54478_pushErr(_1e5e53be7_typeChecker* _self_, jule::Ptr<_1e5c8eacc_Token> _83823_token, jule::Str _83838_fmt, jule::Slice<jule::Any> _83851_args) {
	_1e5d7e66c_pushErr((*(_self_))._field_s.ptr(), _83823_token, _83838_fmt, _83851_args);
}



inline void _1e5e54676_allowBuiltin(_1e5e53be7_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1e5e54874_disallowBuiltin(_1e5e53be7_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline void _1cb7634bb_pushReference(_1e5e53be7_typeChecker* _self_, jule::Ptr<_1e5cc8c7b_StructIns>* _85037_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1c8071a36_Exist((*(_self_))._field_refers.ptr(), (*(_85037_t)))) {
		return;;
	};
	_1e5ce73b5_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_85037_t)), &__jule_any_type9));
}

inline void _1cb765e91_pushReference(_1e5e53be7_typeChecker* _self_, jule::Ptr<_1e5d03db6_Trait>* _85037_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1cb767b96_Exist((*(_self_))._field_refers.ptr(), (*(_85037_t)))) {
		return;;
	};
	_1e5ce73b5_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_85037_t)), &__jule_any_type10));
}



inline void _1e5e54dd5_pushReferenceByKind(_1e5e53be7_typeChecker* _self_, jule::Ptr<_1e5e417ea_TypeKind>* _86040_k) {
	{
		
		if ((_1e5e45524_Struct((*(_86040_k)).ptr()) != nullptr)) {
			_case_begin_1cb7620d0:;
			{
				jule::Ptr<_1e5cc8c7b_StructIns> _8638_t = _1e5e45524_Struct((*(_86040_k)).ptr());;
				_1cb7634bb_pushReference(_self_, &(_8638_t));
			}
		}
		else if ((_1e5e457aa_Trait((*(_86040_k)).ptr()) != nullptr)) {
			_case_begin_1cb762179:;
			{
				jule::Ptr<_1e5d03db6_Trait> _8668_t = _1e5e457aa_Trait((*(_86040_k)).ptr());;
				_1cb765e91_pushReference(_self_, &(_8668_t));
			}
		}
		_match_end_1cb761eae:;
	};
}



inline void _1e5e55303_pushCycleError(_1e5e53be7_typeChecker* _self_, jule::Any _87126_def1, jule::Any _87137_def2, _224497295_StrBuilder* _87153_message) {
	;
	jule::Fn<jule::Str,jule::Any*> _8733_getIdent = jule::__new_closure<jule::Str,jule::Any*>((void*)__jule_anon1cb76a061, nullptr, nullptr);;
	jule::Str _8833_m = _2244a1887_Str(_87153_message);;
	jule::Str _8843_def1Ident = _8733_getIdent(&(_87126_def1));;
	jule::Str _8853_def2Ident = _8733_getIdent(&(_87137_def2));;
	jule::Str _8863_refersTo = _22578b7ec_Logf(static_cast<jule::Str>(jule::Str::lit("@ refers to @", 13)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_8843_def1Ident, &__jule_any_type4); (*it++) = jule::Any(_8853_def2Ident, &__jule_any_type4); __jule_collection; }));;
	_2244a1090_WriteStr(_87153_message, _2256d6eb7_Repeat(jule::Str::lit(" ", 1), 7LL));
	_2244a1090_WriteStr(_87153_message, _8863_refersTo);
	_2244a1348_WriteByte(_87153_message, '\n');
	_2244a1090_WriteStr(_87153_message, _8833_m);
}



inline jule::Bool _1e5e556ee_checkCrossCycle(_1e5e53be7_typeChecker* _self_, jule::Any _89327_decl, _224497295_StrBuilder* _89343_message) {
	{
		auto &_match_expr{ _89327_decl };
		
		if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1cb76e64d:;
			{
				jule::Ptr<_1e5e40a08_TypeAlias> _8964_ta = _89327_decl.unsafe_cast_ptr<_1e5e40a08_TypeAlias>();;
				{
					auto expr = &((*(_8964_ta))._field_Refers);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cb77061b:;
					if (it != expr_end) {
						jule::Any *_89711_d = it;
						{
							{
								
								if (((*(_89711_d)) == (*((*(_self_))._field_referencer))._field_owner)) {
									_case_begin_1cb770e24:;
									{
										_1e5e55303_pushCycleError(_self_, jule::Any(_8964_ta, &__jule_any_type27), (*(_89711_d)), _89343_message);
										return false;;
									}
								}
								else if ((!(_1e5e556ee_checkCrossCycle(_self_, (*(_89711_d)), _89343_message)))) {
									_case_begin_1cb770eac:;
									{
										_1e5e55303_pushCycleError(_self_, jule::Any(_8964_ta, &__jule_any_type27), (*(_89711_d)), _89343_message);
										return false;;
									}
								}
								_match_end_1cb770d14:;
							};
						}
						_iter_next_1cb77061b:;
						++it;
						goto _iter_begin_1cb77061b;
					}
					_iter_end_1cb77061b:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1cb76e4a5:;
			{
				jule::Ptr<_1e5cc5e21_Struct> _9084_s = _89327_decl.unsafe_cast_ptr<_1e5cc5e21_Struct>();;
				{
					auto expr = &((*(_9084_s))._field_Depends);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cb7729a3:;
					if (it != expr_end) {
						jule::Ptr<_1e5cc5e21_Struct> *_90911_d = it;
						{
							{
								
								if ((jule::Any((*(_90911_d)), &__jule_any_type23) == (*((*(_self_))._field_referencer))._field_owner)) {
									_case_begin_1cb7732bc:;
									{
										_1e5e55303_pushCycleError(_self_, jule::Any(_9084_s, &__jule_any_type23), jule::Any((*(_90911_d)), &__jule_any_type23), _89343_message);
										return false;;
									}
								}
								else if ((!(_1e5e556ee_checkCrossCycle(_self_, jule::Any((*(_90911_d)), &__jule_any_type23), _89343_message)))) {
									_case_begin_1cb773355:;
									{
										_1e5e55303_pushCycleError(_self_, jule::Any(_9084_s, &__jule_any_type23), jule::Any((*(_90911_d)), &__jule_any_type23), _89343_message);
										return false;;
									}
								}
								_match_end_1cb7731ac:;
							};
						}
						_iter_next_1cb7729a3:;
						++it;
						goto _iter_begin_1cb7729a3;
					}
					_iter_end_1cb7729a3:;
				};
			}
		}
		_match_end_1cb76e5d7:;
	};
	return true;;
}



inline jule::Bool _1e5e55aea_checkIllegalCycles(_1e5e53be7_typeChecker* _self_, jule::Ptr<_1e5ca5692_IdentTypeDecl>* _92735_ident, jule::Any _92762_decl) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_referencer == nullptr) || (!((*(_self_))._field_cycleRisk)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _92762_decl };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1cb775731:;
			{
				if ((*(_92762_decl.unsafe_cast_ptr<_1e5cc5e21_Struct>()))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1cb775643:;
			{
				if ((*(_92762_decl.unsafe_cast_ptr<_1e5e40a08_TypeAlias>()))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1cb775533:;
	};
	if ((_92762_decl == (*((*(_self_))._field_referencer))._field_owner)) {
		_1e5e54478_pushErr(_self_, (*((*(_92735_ident))))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_referencer))._field_ident, &__jule_any_type4); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_224497295_StrBuilder _9507_message = static__2244a0b83_New(32LL);;
	if ((!(_1e5e556ee_checkCrossCycle(_self_, _92762_decl, &(_9507_message))))) {
		jule::Str _9538_errMsg = _2244a1887_Str(&_9507_message);;
		_2244a1a85_Clear(&_9507_message);
		_1e5e55303_pushCycleError(_self_, (*((*(_self_))._field_referencer))._field_owner, _92762_decl, &(_9507_message));
		_9538_errMsg+=_2244a1887_Str(&_9507_message);
		_1e5e54478_pushErr(_self_, (*((*(_92735_ident))))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cross cycle in declarations;\n@", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_9538_errMsg, &__jule_any_type4); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1cb77a69d:;
			{
				{
					{ jule::Slice<jule::Any> *__jule_push_dest = (*((*(_self_))._field_referencer))._field_refs; __jule_push_dest->push(_92762_decl); };
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1cb778bda:;
			{
				{
					auto &_match_expr{ _92762_decl };
					
					if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1cb77ae62:;
						{
							jule::Ptr<_1e5cc5e21_Struct> _9699_s = (*((*(_self_))._field_referencer))._field_owner.unsafe_cast_ptr<_1e5cc5e21_Struct>();;
							(*(_9699_s))._field_Depends=jule::append((*_9699_s.alloc)._field_Depends,({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5cc5e21_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _92762_decl.cast_ptr<_1e5cc5e21_Struct>(&__jule_any_type23); __jule_collection; }));
						}
					}
					_match_end_1cb77acb9:;
				};
			}
		}
		_match_end_1cb77a615:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Trait _1e5e55ee6_fromTypeAlias(_1e5e53be7_typeChecker* _self_, jule::Ptr<_1e5ca5692_IdentTypeDecl>* _97730_decl, jule::Ptr<_1e5e40a08_TypeAlias>* _97757_ta) {
	if ((!(_1e5d7edcb_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_97757_ta))))._field_Public, (*((*(_97757_ta))))._field_Token)))) {
		_1e5e54478_pushErr(_self_, (*((*(_97730_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_97730_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	(*((*(_97757_ta))))._field_Used=true;
	if (((*((*(_97730_decl))))._field_Generics.len() > 0LL)) {
		_1e5e54478_pushErr(_self_, (*((*(_97730_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_97730_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((!((*(_self_))._field_inscatch)) && ((*(_self_))._field_bannedGenerics != nullptr))) {
		(*(_self_))._field_inscatch=true;
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1cb7815d8:;
			if (it != expr_end) {
				jule::Ptr<_1e5e40a08_TypeAlias> _99411_bg = *it;
				{
					if (((_99411_bg == (*(_97757_ta))) || (((*((*((*(_97757_ta))))._field_Kind))._field_Kind != nullptr) && _1e5e42037_Equal((*((*((*(_97757_ta))))._field_Kind))._field_Kind, (*(*(_99411_bg))._field_Kind.alloc)._field_Kind)))) {
						(*(_self_))._field_inscatch=false;
						goto _iter_end_1cb7815d8;
					};
				}
				_iter_next_1cb7815d8:;
				++it;
				goto _iter_begin_1cb7815d8;
			}
			_iter_end_1cb7815d8:;
		};
	};
	if ((*(_self_))._field_inscatch) {
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1cb7838e8:;
			if (it != expr_end) {
				jule::Ptr<_1e5e40a08_TypeAlias> _100511_bg = *it;
				{
					if ((_100511_bg == (*(_97757_ta)))) {
						_1e5e54478_pushErr(_self_, (*((*(_97730_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type declaration causes initiation cycle", 40)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_97730_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
						return nullptr;;
					};
					{
						auto expr = &((*((*(_97757_ta))))._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1cb784300:;
						if (it != expr_end) {
							jule::Ptr<_1e5e40a08_TypeAlias> _101012_dg = *it;
							{
								if ((_100511_bg == _101012_dg)) {
									_1e5e54478_pushErr(_self_, (*((*(_97730_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type declaration causes initiation cycle", 40)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_97730_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
									return nullptr;;
								};
							}
							_iter_next_1cb784300:;
							++it;
							goto _iter_begin_1cb784300;
						}
						_iter_end_1cb784300:;
					};
				}
				_iter_next_1cb7838e8:;
				++it;
				goto _iter_begin_1cb7838e8;
			}
			_iter_end_1cb7838e8:;
		};
	};
	if (((*(*((*(_97757_ta))))._field_Kind.alloc)._field_Kind == nullptr)) {
		jule::Bool _10214_ok = _1e5d8c36c_checkTypeAliasDeclKind((*(_self_))._field_s, _97757_ta, (*(_self_))._field_lookup);;
		if ((!(_10214_ok))) {
			return nullptr;;
		};
	};
	{
		auto &_match_expr{ (*((*((*((*(_97757_ta))))._field_Kind))._field_Kind))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5e41344_Kind_mptr_data0)) {
			_case_begin_1cb787a2e:;
			{
				jule::Bool _10294_ok = _1e5e55aea_checkIllegalCycles(_self_, _97730_decl, jule::Any((*((*(*((*((*(_97757_ta))))._field_Kind))._field_Kind.alloc)._field_Kind.cast_ptr<_1e5cc8c7b_StructIns>((jule::Trait::Type*)&_1e5e41344_Kind_mptr_data0)))._field_Decl, &__jule_any_type23));;
				if ((!(_10294_ok))) {
					return nullptr;;
				};
			}
		}
		_match_end_1cb7879a7:;
	};
	if (((*((*(_97757_ta))))._field_Generic && ((*(_self_))._field_ownerAlias != nullptr))) {
		(*(*(_self_))._field_ownerAlias.alloc)._field_Generics=jule::append((*(*(_self_))._field_ownerAlias.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5e40a08_TypeAlias>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_97757_ta)); __jule_collection; }));
	};
	jule::Ptr<_1e5e417ea_TypeKind> _10417_tk = jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=(*((*(_97757_ta))))._field_Generic, ._field_Variadic=false, ._field_Kind=(*(*((*((*(_97757_ta))))._field_Kind))._field_Kind.alloc)._field_Kind});;
	_1e5e54dd5_pushReferenceByKind(_self_, &(_10417_tk));
	if ((*((*(_97757_ta))))._field_Binded) {
		(*(_10417_tk))._field_BindIdent=(*((*(_97757_ta))))._field_Ident;
	} else {
		(*(_10417_tk))._field_BindIdent=(*(*((*((*(_97757_ta))))._field_Kind))._field_Kind.alloc)._field_BindIdent;
	};
	return jule::Trait(_10417_tk, (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data21);;
}



inline jule::Ptr<_1e5d065c2_Enum> _1e5e563e2_fromEnum(_1e5e53be7_typeChecker* _self_, jule::Ptr<_1e5ca5692_IdentTypeDecl>* _105425_decl, jule::Ptr<_1e5d065c2_Enum>* _105452_e) {
	if ((!(_1e5d7edcb_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_105452_e))))._field_Public, (*((*(_105452_e))))._field_Token)))) {
		_1e5e54478_pushErr(_self_, (*((*(_105425_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_105425_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_105425_decl))))._field_Generics.len() > 0LL)) {
		_1e5e54478_pushErr(_self_, (*((*(_105425_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_105425_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return (*(_105452_e));;
}



inline jule::Ptr<_1e5d07ccc_TypeEnum> _1e5e567dd_fromTypeEnum(_1e5e53be7_typeChecker* _self_, jule::Ptr<_1e5ca5692_IdentTypeDecl>* _106629_decl, jule::Ptr<_1e5d07ccc_TypeEnum>* _106656_e) {
	if ((!(_1e5d7edcb_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_106656_e))))._field_Public, (*((*(_106656_e))))._field_Token)))) {
		_1e5e54478_pushErr(_self_, (*((*(_106629_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_106629_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_106629_decl))))._field_Generics.len() > 0LL)) {
		_1e5e54478_pushErr(_self_, (*((*(_106629_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_106629_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return (*(_106656_e));;
}



inline jule::Ptr<_1e5d03db6_Trait> _1e5e56bd9_fromTrait(_1e5e53be7_typeChecker* _self_, jule::Ptr<_1e5ca5692_IdentTypeDecl>* _107826_decl, jule::Ptr<_1e5d03db6_Trait>* _107853_t) {
	if ((!(_1e5d7edcb_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_107853_t))))._field_Public, (*((*(_107853_t))))._field_Token)))) {
		_1e5e54478_pushErr(_self_, (*((*(_107826_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_107826_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_107826_decl))))._field_Generics.len() > 0LL)) {
		_1e5e54478_pushErr(_self_, (*((*(_107826_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_107826_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	_1cb765e91_pushReference(_self_, _107853_t);
	return (*(_107853_t));;
}



inline jule::Bool _1e5e570d5_checkStructIns(_1e5e53be7_typeChecker* _self_, jule::Ptr<_1e5cc8c7b_StructIns>* _109135_ins, jule::Ptr<_1e5c8eacc_Token>* _109157_errorToken) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_109135_ins))))._field_Checked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_109135_ins))))._field_Checked=true;
	if ((((*(_self_))._field_referencer != nullptr) && (jule::Any((*((*(_109135_ins))))._field_Decl, &__jule_any_type23) == (*(*(_self_))._field_referencer.alloc)._field_owner))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_1e5d98d5c_precheckStructIns((*(_self_))._field_s, _109135_ins, (*(_109157_errorToken)))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (((*((*(_109135_ins))))._field_Generics.len() > 0LL)) {
		_1e5d99874_checkStructInsOperators((*(_self_))._field_s, (*(_109135_ins)));
		_1e5d99115_checkStructIns((*(_self_))._field_s, _109135_ins);
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1e5e5738d_appendUsedStructReference(_1e5e53be7_typeChecker* _self_, jule::Ptr<_1e5cc5e21_Struct>* _111246_s) {
	if (((*(_self_))._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1cb79a58b:;
			{
				jule::Ptr<_1e5cc5e21_Struct> _11188_refS = (*((*(_self_))._field_referencer))._field_owner.unsafe_cast_ptr<_1e5cc5e21_Struct>();;
				if ((!(_1e5cc78d4_IsUses(_11188_refS.ptr(), (*(_111246_s)))))) {
					(*_11188_refS.alloc)._field_Uses=jule::append((*_11188_refS.alloc)._field_Uses,({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5cc5e21_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_111246_s)); __jule_collection; }));
				};
			}
		}
		_match_end_1cb79a525:;
	};
}



inline jule::Ptr<_1e5cc8c7b_StructIns> _1e5e57789_buildStructInstance(_1e5e53be7_typeChecker* _self_, jule::Ptr<_1e5ca5692_IdentTypeDecl>* _112540_decl, jule::Ptr<_1e5cc5e21_Struct>* _112567_s) {
	jule::Ptr<_1e5e52c07_referencer> _11277_referencer = (*(_self_))._field_referencer;;
	(*(_self_))._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1e5e40a08_TypeAlias>> _11297_bannedGenerics = (*(_self_))._field_bannedGenerics;;
	if (((*(_self_))._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data0)) {
				_case_begin_1cb79d5c2:;
				{
					jule::Ptr<_1e5d40771_scopeChecker> _11369_sc = (*(_self_))._field_lookup.cast_ptr<_1e5d40771_scopeChecker>((jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data0);;
					jule::Ptr<_1e5d40771_scopeChecker> _11379_hard = _1e5d43dd4_getHardRoot(_11369_sc);;
					if ((((*((*(_11379_hard))._field_owner))._field_Owner == nullptr) || ((*((*(*(_11379_hard))._field_owner.alloc)._field_Owner))._field_Decl != (*(_112567_s))))) {
						goto _match_end_1cb79d55b;
					};
					jule::I64 _11415_n = ((*(*(_11379_hard))._field_owner.alloc)._field_Generics.len() + (*((*(*(_11379_hard))._field_owner.alloc)._field_Owner))._field_Generics.len());;
					(*(_self_))._field_bannedGenerics=(*((*_11379_hard.alloc)._field_table))._field_TypeAliases.slice(0LL, _11415_n);
				}
			}
			_match_end_1cb79d55b:;
		};
	} else {
		(*(_self_))._field_inscatch=true;
	};
	jule::Trait _11517_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=(*(_self_))._field_rootLookup;
	jule::Ptr<_1e5cc8c7b_StructIns> _11557_ins = _1e5cc63b6_instance((*(_112567_s)));;
	(*(_11557_ins))._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>::alloc(0LL, (*((*(_112540_decl))))._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1e5e3ee14_InsGeneric>(nullptr); __jule_collection; });
	{
		auto expr = &((*((*(_112540_decl))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb7a38a2:;
		if (it != expr_end) {
			jule::Ptr<_1e5ca5087_TypeDecl> _115715_g = *it;
			{
				jule::Ptr<_1e5e417ea_TypeKind> _11588_kind = _1e5e5b491_build(_self_, &((*(_115715_g))._field_Kind));;
				if ((_11588_kind == nullptr)) {
					return nullptr;;
				};
				(*_11557_ins.alloc)._field_Generics=jule::append((*_11557_ins.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1e5e3ee14_InsGeneric>(_1e5e3ee14_InsGeneric{._field_Kind=_11588_kind, ._field_Constraint=jule::Slice<jule::Ptr<_1e5e417ea_TypeKind>>(nullptr)}); __jule_collection; }));
			}
			_iter_next_1cb7a38a2:;
			++it;
			goto _iter_begin_1cb7a38a2;
		}
		_iter_end_1cb7a38a2:;
	};
	(*(_self_))._field_lookup=_11517_lookup;
	(*(_self_))._field_bannedGenerics=_11297_bannedGenerics;
	(*(_self_))._field_referencer=_11277_referencer;
	return _11557_ins;;
}



inline jule::Ptr<_1e5cc8c7b_StructIns> _1e5e57b85_fromStructIns(_1e5e53be7_typeChecker* _self_, jule::Ptr<_1e5cc8c7b_StructIns>* _117334_ins, jule::Ptr<_1e5c8eacc_Token> _117355_token) {
	jule::Ptr<_1e5cc8c7b_StructIns> _11747_existInstance = _1e5cc66c4_appendInstance((*((*(_117334_ins))))._field_Decl.ptr(), _117334_ins);;
	if ((_11747_existInstance != nullptr)) {
		if ((!(_1e5d8a16c_checkConstraintsStruct((*(_self_))._field_s, _117334_ins, &(_117355_token), _11747_existInstance)))) {
			return nullptr;;
		};
		_1cb7634bb_pushReference(_self_, &(_11747_existInstance));
		return _11747_existInstance;;
	};
	if ((!(_1e5e570d5_checkStructIns(_self_, _117334_ins, &(_117355_token))))) {
		return nullptr;;
	};
	_1cb7634bb_pushReference(_self_, _117334_ins);
	return (*(_117334_ins));;
}



inline jule::Ptr<_1e5cc8c7b_StructIns> _1e5e58081_fromStruct(_1e5e53be7_typeChecker* _self_, jule::Ptr<_1e5ca5692_IdentTypeDecl>* _119131_decl, jule::Ptr<_1e5cc5e21_Struct>* _119158_s) {
	if ((!(_1e5d7edcb_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_119158_s))))._field_Public, (*((*(_119158_s))))._field_Token)))) {
		_1e5e54478_pushErr(_self_, (*((*(_119131_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_119131_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if ((*(_self_))._field_selection) {
		if (((*((*(_119131_decl))))._field_Generics.len() > 0LL)) {
			_1e5e54478_pushErr(_self_, (*((*(_119131_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("generics are not allowed in this scope", 38)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		return jule::new_ptr<_1e5cc8c7b_StructIns>(_1e5cc8c7b_StructIns{._field_Checked=false, ._field_Decl=(*(_119158_s)), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Fields=jule::Slice<jule::Ptr<_1e5cc81cb_FieldIns>>(nullptr), ._field_Statics=jule::Slice<jule::Ptr<_1e5da0bcc_Var>>(nullptr), ._field_Methods=jule::Slice<jule::Ptr<_1e5ce0358_Fn>>(nullptr), ._field_Mutable=false, ._field_Comparable=false, ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Operators=_1e5cc500d_Operators{._field_Eq=jule::Ptr<_1e5ce3416_FnIns>(nullptr), ._field_Gt=jule::Ptr<_1e5ce3416_FnIns>(nullptr), ._field_GtEq=jule::Ptr<_1e5ce3416_FnIns>(nullptr), ._field_Lt=jule::Ptr<_1e5ce3416_FnIns>(nullptr), ._field_LtEq=jule::Ptr<_1e5ce3416_FnIns>(nullptr), ._field_Shl=jule::Ptr<_1e5ce3416_FnIns>(nullptr), ._field_Shr=jule::Ptr<_1e5ce3416_FnIns>(nullptr), ._field_Add=jule::Ptr<_1e5ce3416_FnIns>(nullptr), ._field_Sub=jule::Ptr<_1e5ce3416_FnIns>(nullptr), ._field_Div=jule::Ptr<_1e5ce3416_FnIns>(nullptr), ._field_Mul=jule::Ptr<_1e5ce3416_FnIns>(nullptr), ._field_Mod=jule::Ptr<_1e5ce3416_FnIns>(nullptr), ._field_BitAnd=jule::Ptr<_1e5ce3416_FnIns>(nullptr), ._field_BitOr=jule::Ptr<_1e5ce3416_FnIns>(nullptr), ._field_BitXor=jule::Ptr<_1e5ce3416_FnIns>(nullptr), ._field_Neg=jule::Ptr<_1e5ce3416_FnIns>(nullptr), ._field_Pos=jule::Ptr<_1e5ce3416_FnIns>(nullptr), ._field_BitNot=jule::Ptr<_1e5ce3416_FnIns>(nullptr), ._field_AddAssign=jule::Ptr<_1e5ce3416_FnIns>(nullptr), ._field_SubAssign=jule::Ptr<_1e5ce3416_FnIns>(nullptr), ._field_DivAssign=jule::Ptr<_1e5ce3416_FnIns>(nullptr), ._field_MulAssign=jule::Ptr<_1e5ce3416_FnIns>(nullptr), ._field_ModAssign=jule::Ptr<_1e5ce3416_FnIns>(nullptr), ._field_ShlAssign=jule::Ptr<_1e5ce3416_FnIns>(nullptr), ._field_ShrAssign=jule::Ptr<_1e5ce3416_FnIns>(nullptr), ._field_BitOrAssign=jule::Ptr<_1e5ce3416_FnIns>(nullptr), ._field_BitAndAssign=jule::Ptr<_1e5ce3416_FnIns>(nullptr), ._field_BitXorAssign=jule::Ptr<_1e5ce3416_FnIns>(nullptr)}});;
	};
	jule::Bool _12097_ok = _1e5e55aea_checkIllegalCycles(_self_, _119131_decl, jule::Any((*(_119158_s)), &__jule_any_type23));;
	if ((!(_12097_ok))) {
		return nullptr;;
	};
	_1e5e5738d_appendUsedStructReference(_self_, _119158_s);
	jule::Ptr<_1e5cc8c7b_StructIns> _12157_ins = _1e5e57789_buildStructInstance(_self_, _119131_decl, _119158_s);;
	if ((_12157_ins == nullptr)) {
		return nullptr;;
	};
	_12097_ok=_1e5d80b9b_checkGenericQuantity((*(_self_))._field_s, (*((*(_12157_ins))._field_Decl))._field_Generics.len(), (*(_12157_ins))._field_Generics.len(), (*((*(_119131_decl))))._field_Token);
	if ((!(_12097_ok))) {
		return nullptr;;
	};
	return _1e5e57b85_fromStructIns(_self_, &(_12157_ins), (*((*(_119131_decl))))._field_Token);;
}



inline jule::Trait _1e5e583c2_getDef(_1e5e53be7_typeChecker* _self_, jule::Ptr<_1e5ca5692_IdentTypeDecl>* _123527_decl) {
	{
		auto expr = &((*(_self_))._field_ignoreGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb7ade84:;
		if (it != expr_end) {
			jule::Ptr<_1e5cb2292_GenericDecl> _123610_g = *it;
			{
				if (((*(_123610_g))._field_Ident == (*((*(_123527_decl))))._field_Ident)) {
					return jule::Trait(_1e5e5e164_buildPrimType((*_123610_g.alloc)._field_Ident), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data22);;
				};
			}
			_iter_next_1cb7ade84:;
			++it;
			goto _iter_begin_1cb7ade84;
		}
		_iter_end_1cb7ade84:;
	};
	{
		auto expr = &((*(_self_))._field_useGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb7ae2e7:;
		if (it != expr_end) {
			jule::Ptr<_1e5e40a08_TypeAlias> _124215_g = *it;
			{
				if (((*(_124215_g))._field_Ident == (*((*(_123527_decl))))._field_Ident)) {
					if (((*((*(_123527_decl))))._field_Generics.len() > 0LL)) {
						_1e5e54478_pushErr(_self_, (*((*(_123527_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_123527_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
						return nullptr;;
					};
					jule::Ptr<_1e5cc8c7b_StructIns> _12489_st = _1e5e45524_Struct((*((*_124215_g.alloc)._field_Kind))._field_Kind.ptr());;
					if ((_12489_st != nullptr)) {
						jule::Bool _12506_ok = _1e5e55aea_checkIllegalCycles(_self_, _123527_decl, jule::Any((*_12489_st.alloc)._field_Decl, &__jule_any_type23));;
						if ((!(_12506_ok))) {
							return nullptr;;
						};
					};
					return (*(*((*(_124215_g))._field_Kind))._field_Kind.alloc)._field_Kind;;
				};
			}
			_iter_next_1cb7ae2e7:;
			++it;
			goto _iter_begin_1cb7ae2e7;
		}
		_iter_end_1cb7ae2e7:;
	};
	if ((!((*((*(_123527_decl))))._field_Binded))) {
		jule::Ptr<_1e5d065c2_Enum> _12608_e = ((_1e5e61e9c_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1e5e61a07_FindEnum((*(_self_))._field_lookup.data, (*((*(_123527_decl))))._field_Ident);;
		if ((_12608_e != nullptr)) {
			return jule::Trait(_1e5e563e2_fromEnum(_self_, _123527_decl, &(_12608_e)), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data3);;
		};
		jule::Ptr<_1e5d07ccc_TypeEnum> _12658_te = ((_1e5e61e9c_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1e5e61d48_FindTypeEnum((*(_self_))._field_lookup.data, (*((*(_123527_decl))))._field_Ident);;
		if ((_12658_te != nullptr)) {
			return jule::Trait(_1e5e567dd_fromTypeEnum(_self_, _123527_decl, &(_12658_te)), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data4);;
		};
		jule::Ptr<_1e5d03db6_Trait> _12708_t = ((_1e5e61e9c_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1e5e616b6_FindTrait((*(_self_))._field_lookup.data, (*((*(_123527_decl))))._field_Ident);;
		if ((_12708_t != nullptr)) {
			return jule::Trait(_1e5e56bd9_fromTrait(_self_, _123527_decl, &(_12708_t)), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data2);;
		};
	} else if ((*(_self_))._field_selection) {
		_1e5e54478_pushErr(_self_, (*((*(_123527_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("binded definitions are not allowed in this scope", 48)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1e5cc5e21_Struct> _12797_s = ((_1e5e61e9c_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1e5e60e79_FindStruct((*(_self_))._field_lookup.data, (*((*(_123527_decl))))._field_Ident, (*((*(_123527_decl))))._field_Binded);;
	if ((_12797_s != nullptr)) {
		return jule::Trait(_1e5e58081_fromStruct(_self_, _123527_decl, &(_12797_s)), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data0);;
	};
	jule::Ptr<_1e5e40a08_TypeAlias> _12847_ta = ((_1e5e61e9c_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1e5e60a7d_FindTypeAlias((*(_self_))._field_lookup.data, (*((*(_123527_decl))))._field_Ident, (*((*(_123527_decl))))._field_Binded);;
	if (((_12847_ta == nullptr) && (!((*(_self_))._field_disBuiltin)))) {
		_12847_ta=_1e6029916_findBuiltinTypeAlias((*((*(_123527_decl))))._field_Ident);
	};
	if ((_12847_ta != nullptr)) {
		return _1e5e55ee6_fromTypeAlias(_self_, _123527_decl, &(_12847_ta));;
	};
	_1e5e54478_pushErr(_self_, (*((*(_123527_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_123527_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
	return nullptr;;
}



inline jule::Trait _1e5e58713_buildIdent(_1e5e53be7_typeChecker* _self_, jule::Ptr<_1e5ca5692_IdentTypeDecl> _129630_decl) {
	return _1e5e583c2_getDef(_self_, &(_129630_decl));;
}



inline jule::Trait _1e5e58a54_buildSubIdent(_1e5e53be7_typeChecker* _self_, jule::Ptr<_1e5ca595b_SubIdentTypeDecl> _130033_decl) {
	jule::Trait _13017_ident = _1e5e58713_buildIdent(_self_, (*(_130033_decl))._field_Idents[0LL]);;
	if ((_13017_ident == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _13017_ident };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5e41344_Kind_mptr_data4)) {
			_case_begin_1cb7bc39e:;
			{
				goto _match_end_1cb7bc910;
			}
		}
		else {
			_case_begin_1cb7bc47b:;
			{
				_1e5e54478_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1cb7bc910:;
	};
	jule::Ptr<_1e5d07ccc_TypeEnum> _13127_t = _13017_ident.cast_ptr<_1e5d07ccc_TypeEnum>((jule::Trait::Type*)&_1e5e41344_Kind_mptr_data4);;
	jule::Slice<jule::Ptr<_1e5ca5692_IdentTypeDecl>> _13137_idents = (*_130033_decl.alloc)._field_Idents.slice(1LL);;
	{
		auto expr = &(_13137_idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb7bc503:;
		if (it != expr_end) {
			jule::I64 _13147_i = it - expr->begin();
			jule::Ptr<_1e5ca5692_IdentTypeDecl> _131410_id = *it;
			{
				jule::Ptr<_1e5d07705_TypeEnumItem> _13158_item = _1e5d088c1_FindItem(_13127_t.ptr(), (*(_131410_id))._field_Ident);;
				if ((_13158_item == nullptr)) {
					_1e5e54478_pushErr(_self_, (*_131410_id.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_13127_t.alloc)._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*_131410_id.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
					return nullptr;;
				};
				if (((_13137_idents.len() - _13147_i) == 1LL)) {
					_1e5e54dd5_pushReferenceByKind(_self_, &((*((*(_13158_item))._field_Kind))._field_Kind));
					return jule::Trait((*(*(_13158_item))._field_Kind.alloc)._field_Kind, (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data21);;
				};
				_13127_t=_1e5e449da_TypeEnum((*(*(_13158_item))._field_Kind.alloc)._field_Kind.ptr());
				if ((_13127_t == nullptr)) {
					_1e5e54478_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
			_iter_next_1cb7bc503:;
			++it;
			_13147_i++;
			goto _iter_begin_1cb7bc503;
		}
		_iter_end_1cb7bc503:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e5e4d43e_Sptr> _1e5e58d95_buildSptrFromType(_1e5e53be7_typeChecker* _self_, jule::Ptr<_1e5e417ea_TypeKind>* _133438_elem) {
	{
		
		if (((*(_133438_elem)) == nullptr)) {
			_case_begin_1cb7c3b36:;
			{
				return nullptr;;
			}
		}
		else if ((_1e5e45524_Struct((*(_133438_elem)).ptr()) != nullptr)) {
			_case_begin_1cb7c3bad:;
			{
				jule::Ptr<_1e5cc8c7b_StructIns> _13404_s = _1e5e45524_Struct((*(_133438_elem)).ptr());;
				if ((((*(_13404_s))._field_Decl != nullptr) && (*(*(_13404_s))._field_Decl.alloc)._field_Binded)) {
					_1e5e54478_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("binded structures cannot supports reference counting", 52)), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
		}
		else if (((_1e5e44c71_Arr((*(_133438_elem)).ptr()) != nullptr) && (*(_1e5e44c71_Arr((*(_133438_elem)).ptr())))._field_Auto)) {
			_case_begin_1cb7c3c24:;
			{
				_1e5e54478_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1cb7c320c:;
	};
	return jule::new_ptr<_1e5e4d43e_Sptr>(_1e5e4d43e_Sptr{._field_Elem=(*(_133438_elem))});;
}



inline jule::Ptr<_1e5e4d43e_Sptr> _1e5e591d6_buildSptr(_1e5e53be7_typeChecker* _self_, jule::Ptr<_1e5ca6132_SptrTypeDecl> _135429_decl) {
	jule::Bool _13553_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13553_cycleRisk;
	});;
	jule::Ptr<_1e5e417ea_TypeKind> _13597_elem = _1e5e5b7d2_checkDecl(_self_, &((*(_135429_decl))._field_Elem));;
	return _1e5e58d95_buildSptrFromType(_self_, &(_13597_elem));;
}



inline jule::Ptr<_1e5e51c06_Ptr> _1e5e59527_buildPtrFromType(_1e5e53be7_typeChecker* _self_, jule::Ptr<_1e5e417ea_TypeKind>* _136337_elem) {
	{
		
		if (((*(_136337_elem)) == nullptr)) {
			_case_begin_1cb7c8ec1:;
			{
				return nullptr;;
			}
		}
		else if (((_1e5e44c71_Arr((*(_136337_elem)).ptr()) != nullptr) && (*(_1e5e44c71_Arr((*(_136337_elem)).ptr())))._field_Auto)) {
			_case_begin_1cb7c906a:;
			{
				_1e5e54478_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
				return jule::new_ptr<_1e5e51c06_Ptr>(_1e5e51c06_Ptr{._field_Elem=jule::Ptr<_1e5e417ea_TypeKind>(nullptr)});;
			}
		}
		_match_end_1cb7c8da0:;
	};
	return jule::new_ptr<_1e5e51c06_Ptr>(_1e5e51c06_Ptr{._field_Elem=(*(_136337_elem))});;
}



inline jule::Ptr<_1e5e51c06_Ptr> _1e5e59868_buildPtr(_1e5e53be7_typeChecker* _self_, jule::Ptr<_1e5ca6ab1_PtrTypeDecl> _137828_decl) {
	jule::Bool _13793_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13793_cycleRisk;
	});;
	jule::Ptr<_1e5e417ea_TypeKind> _138311_elem = nullptr;;
	if ((!(_1e5ca6e57_IsUnsafe(_137828_decl.ptr())))) {
		_138311_elem=_1e5e5b7d2_checkDecl(_self_, &((*_137828_decl.alloc)._field_Elem));
		return _1e5e59527_buildPtrFromType(_self_, &(_138311_elem));;
	};
	return jule::new_ptr<_1e5e51c06_Ptr>(_1e5e51c06_Ptr{._field_Elem=_138311_elem});;
}



inline jule::Ptr<_1e5e4de12_Slc> _1e5e59ba9_buildSlc(_1e5e53be7_typeChecker* _self_, jule::Ptr<_1e5ca64b7_SlcTypeDecl> _139528_decl) {
	jule::Bool _13963_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13963_cycleRisk;
	});;
	jule::Ptr<_1e5e417ea_TypeKind> _14007_elem = _1e5e5b7d2_checkDecl(_self_, &((*(_139528_decl))._field_Elem));;
	{
		
		if ((_14007_elem == nullptr)) {
			_case_begin_1cb7ce2a1:;
			{
				return nullptr;;
			}
		}
		else if (((_1e5e44c71_Arr(_14007_elem.ptr()) != nullptr) && (*(_1e5e44c71_Arr(_14007_elem)))._field_Auto)) {
			_case_begin_1cb7ce317:;
			{
				_1e5e54478_pushErr(_self_, (*((*_139528_decl.alloc)._field_Elem))._field_Token, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1cb7ce23a:;
	};
	return jule::new_ptr<_1e5e4de12_Slc>(_1e5e4de12_Slc{._field_Elem=_14007_elem});;
}



inline jule::Ptr<_1e5e51233_Arr> _1e5e59eea_buildArr(_1e5e53be7_typeChecker* _self_, jule::Ptr<_1e5ca7353_ArrTypeDecl> _141628_decl) {
	jule::I64 _14177_n = 0LL;;
	if ((!(_1e5ca76e9_AutoSized(_141628_decl.ptr())))) {
		jule::Ptr<_1e5e08c13_Data> _14208_size = _1e5e297a0_evalExpr(_1e5d870c0_eval((*(_self_))._field_s, (*(_self_))._field_lookup), (*_141628_decl.alloc)._field_Size);;
		if ((_14208_size == nullptr)) {
			return nullptr;;
		};
		if ((!(_1e5e0964d_IsConst(_14208_size.ptr())))) {
			_1e5e54478_pushErr(_self_, (*((*_141628_decl.alloc)._field_Size))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_1e5e43ea1_Prim((*(_14208_size))._field_Kind.ptr()) == nullptr) || (!(_1e21a3830_IsInt((*(_1e5e43ea1_Prim((*(_14208_size))._field_Kind)))._field_Kind))))) {
			_1e5e54478_pushErr(_self_, (*((*_141628_decl.alloc)._field_Size))._field_Token, static_cast<jule::Str>(jule::Str::lit("array size must be integer", 26)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_14177_n=static_cast<jule::I64>(_1e21a6b74_AsI64((*(_14208_size))._field_Constant.ptr()));
		if ((_14177_n < 0LL)) {
			_1e5e54478_pushErr(_self_, (*((*_141628_decl.alloc)._field_Elem))._field_Token, static_cast<jule::Str>(jule::Str::lit("array size must be positive integer", 35)), jule::Slice<jule::Any>());
			return nullptr;;
		} else {
			jule::I64 _14385_max = _1e219e892_MaxI(static_cast<jule::Str>(jule::Str::lit("int", 3)));;
			if (((_1e2197769_BitSize != 64LL) && (static_cast<jule::I64>(_14177_n) > _14385_max))) {
				_1e5e54478_pushErr(_self_, (*((*_141628_decl.alloc)._field_Size))._field_Token, static_cast<jule::Str>(jule::Str::lit("array with size @ overflows limit (@) of the system", 51)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e3c692_constoa(&((*(_14208_size))._field_Constant)), &__jule_any_type4); (*it++) = jule::Any(_1e2195b85_FmtInt(_14385_max, 10LL), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			};
		};
	};
	jule::Ptr<_1e5e417ea_TypeKind> _14477_elem = _1e5e5b7d2_checkDecl(_self_, &((*_141628_decl.alloc)._field_Elem));;
	{
		
		if ((_14477_elem == nullptr)) {
			_case_begin_1cb7d9663:;
			{
				return nullptr;;
			}
		}
		else if (((_1e5e44c71_Arr(_14477_elem.ptr()) != nullptr) && (*(_1e5e44c71_Arr(_14477_elem)))._field_Auto)) {
			_case_begin_1cb7d970c:;
			{
				_1e5e54478_pushErr(_self_, (*((*_141628_decl.alloc)._field_Elem))._field_Token, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1cb7d95db:;
	};
	return jule::new_ptr<_1e5e51233_Arr>(_1e5e51233_Arr{._field_Auto=_1e5ca76e9_AutoSized(_141628_decl), ._field_N=_14177_n, ._field_Elem=_14477_elem});;
}



inline jule::Ptr<_1e5e505a6_Map> _1e5e5a33b_buildMap(_1e5e53be7_typeChecker* _self_, jule::Ptr<_1e5ca7aa1_MapTypeDecl> _146528_decl) {
	jule::Bool _14663_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_14663_cycleRisk;
	});;
	jule::Ptr<_1e5e417ea_TypeKind> _14707_key = _1e5e5b7d2_checkDecl(_self_, &((*(_146528_decl))._field_Key));;
	if ((_14707_key == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1e5e417ea_TypeKind> _14757_val = _1e5e5b7d2_checkDecl(_self_, &((*_146528_decl.alloc)._field_Val));;
	if ((_14757_val == nullptr)) {
		return nullptr;;
	};
	if ((_1e5e44754_Enum(_14757_val.ptr()) != nullptr)) {
		_1e5e54478_pushErr(_self_, (*((*_146528_decl.alloc)._field_Val))._field_Token, static_cast<jule::Str>(jule::Str::lit("maps do not support enums as map key type", 41)), jule::Slice<jule::Any>());
	};
	if (((*((*((*(_self_))._field_s))._field_meta))._field_runtime != nullptr)) {
		jule::Ptr<_1e5cc5e21_Struct> _14848_s = _1e21ade45_runtimeFindStruct(&((*(*((*(_self_))._field_s))._field_meta.alloc)._field_runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
		_1e5e5738d_appendUsedStructReference(_self_, &(_14848_s));
		jule::Ptr<_1e5cc8c7b_StructIns> _14868_ins = _1e5cc63b6_instance(_14848_s);;
		(*(_14868_ins))._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1e5e3ee14_InsGeneric>(_1e5e3ee14_InsGeneric{._field_Kind=_14707_key, ._field_Constraint=jule::Slice<jule::Ptr<_1e5e417ea_TypeKind>>(nullptr)}); (*it++) = jule::new_ptr<_1e5e3ee14_InsGeneric>(_1e5e3ee14_InsGeneric{._field_Kind=_14757_val, ._field_Constraint=jule::Slice<jule::Ptr<_1e5e417ea_TypeKind>>(nullptr)}); __jule_collection; });
		_1e5e57b85_fromStructIns(_self_, &(_14868_ins), (*((*_146528_decl.alloc)._field_Key))._field_Token);
	};
	return jule::new_ptr<_1e5e505a6_Map>(_1e5e505a6_Map{._field_Key=_14707_key, ._field_Val=_14757_val});;
}



inline jule::Ptr<_1e5e4ea06_Tuple> _1e5e5a67c_buildTuple(_1e5e53be7_typeChecker* _self_, jule::Ptr<_1e5ca67b4_TupleTypeDecl> _149730_decl) {
	jule::Slice<jule::Ptr<_1e5e417ea_TypeKind>> _14987_types = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5e417ea_TypeKind>>::alloc(0LL, (*(_149730_decl))._field_Types.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1e5e417ea_TypeKind>(nullptr); __jule_collection; });;
	{
		auto expr = &((*_149730_decl.alloc)._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb7e3914:;
		if (it != expr_end) {
			jule::Ptr<_1e5ca5087_TypeDecl> _149915_t = *it;
			{
				jule::Ptr<_1e5e417ea_TypeKind> _15008_kind = _1e5e5b7d2_checkDecl(_self_, &(_149915_t));;
				if ((_15008_kind == nullptr)) {
					return nullptr;;
				};
				{ jule::Slice<jule::Ptr<_1e5e417ea_TypeKind>> &__jule_push_dest = _14987_types; __jule_push_dest.push(_15008_kind); };
			}
			_iter_next_1cb7e3914:;
			++it;
			goto _iter_begin_1cb7e3914;
		}
		_iter_end_1cb7e3914:;
	};
	return jule::new_ptr<_1e5e4ea06_Tuple>(_1e5e4ea06_Tuple{._field_Types=_14987_types});;
}



inline jule::Bool _1e5e5a9bd_checkFuncTypes(_1e5e53be7_typeChecker* _self_, jule::Ptr<_1e5ce3416_FnIns>* _151035_f) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_151035_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb7e544e:;
		if (it != expr_end) {
			jule::Ptr<_1e5ce22b1_ParamIns> _151115_p = *it;
			{
				(*(_151115_p))._field_Kind=_1e5e5b491_build(_self_, &((*((*((*((*_151115_p.alloc)._field_Decl))._field_Kind))._field_Decl))._field_Kind));
				__jule_func_result=((*_151115_p.alloc)._field_Kind != nullptr);
				if ((!(__jule_func_result))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				_1e5d8ac1c_checkFnParamKind((*(_self_))._field_s, &(_151115_p));
			}
			_iter_next_1cb7e544e:;
			++it;
			goto _iter_begin_1cb7e544e;
		}
		_iter_end_1cb7e544e:;
	};
	if ((!(_1e5ce080e_IsVoid((*((*(_151035_f))))._field_Decl.ptr())))) {
		(*((*(_151035_f))))._field_Result=_1e5e5b491_build(_self_, &((*(*((*((*((*((*(_151035_f))))._field_Decl))._field_Result))._field_Kind))._field_Decl.alloc)._field_Kind));
		__jule_func_result = ((*((*(_151035_f))))._field_Result != nullptr);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1e5ce3416_FnIns> _1e5e5ad0e_buildFunc(_1e5e53be7_typeChecker* _self_, jule::Ptr<_1e5cb6c47_FnDecl> _152829_decl) {
	jule::Bool _15293_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_15293_cycleRisk;
	});;
	if (((*(_152829_decl))._field_Generics.len() > 0LL)) {
		_1e5e54478_pushErr(_self_, (*_152829_decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("genericed functions cannot use as anonymous function", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1e5ce0358_Fn> _15387_f = _1e5ce9a38_buildFunc(_152829_decl);;
	jule::I64 _15403_n = (*((*(_self_))._field_s))._field_errors.len();;
	_1e5d95012_checkAnonFuncDecl((*(_self_))._field_s, &(_15387_f));
	if ((_15403_n != (*(*(_self_))._field_s.alloc)._field_errors.len())) {
		return nullptr;;
	};
	jule::Ptr<_1e5ce3416_FnIns> _15467_ins = _1e5ce1865_instanceForce(_15387_f);;
	(*(_15467_ins))._field_Anon=true;
	(*_15467_ins.alloc)._field_AsAnon=true;
	jule::Bool _15503_ok = _1e5e5a9bd_checkFuncTypes(_self_, &(_15467_ins));;
	if ((!(_15503_ok))) {
		return nullptr;;
	};
	return _15467_ins;;
}



inline jule::Trait _1e5e5b150_buildByNamespace(_1e5e53be7_typeChecker* _self_, jule::Ptr<_1e5ca5d35_NamespaceTypeDecl> _155836_decl) {
	jule::Str _15593_path = _1e5e5dc8a_buildLinkPathByTokens(&((*(_155836_decl))._field_Idents));;
	jule::Ptr<_1e5d5b2e7_ImportInfo> _15607_imp = ((_1e5e61e9c_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1e5e60286_SelectPackage((*(_self_))._field_lookup.data, jule::__new_closure<jule::Bool,jule::Ptr<_1e5d5b2e7_ImportInfo>>((void*)__jule_anon_1cb7eecb6, jule::Ptr<__jule_anon_1cb7eecb6_ctx>::make(__jule_anon_1cb7eecb6_ctx{._155836_decl=_155836_decl,._15593_path=_15593_path}).as<jule::Uintptr>(), __jule_anon_1cb7eecb6_ctx_handler));;
	jule::Str _15673_selfIdent = jule::Str::lit("self", 4);;
	if (((_15607_imp == nullptr) || (!(_1e5d5d86b_isLookupable(_15607_imp.ptr(), &(_15673_selfIdent)))))) {
		_1e5e54478_pushErr(_self_, (*(_155836_decl))._field_Idents[0LL], static_cast<jule::Str>(jule::Str::lit("undefined namespace: @", 22)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_15593_path, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	_1e5e54874_disallowBuiltin(_self_);
	jule::Trait _15747_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait(_15607_imp, (jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data1);
	jule::Ptr<_1e5e417ea_TypeKind> _15767_kind = _1e5e5b7d2_checkDecl(_self_, &((*_155836_decl.alloc)._field_Kind));;
	(*(_self_))._field_lookup=_15747_lookup;
	_1e5e54676_allowBuiltin(_self_);
	return jule::Trait(_15767_kind, (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data21);;
}



inline jule::Ptr<_1e5e417ea_TypeKind> _1e5e5b491_build(_1e5e53be7_typeChecker* _self_, jule::Any* _158226_declKind) {
	jule::Trait _158311_kind = nullptr;;
	{
		auto &_match_expr{ (*(_158226_declKind)) };
		
		if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1cb804d10:;
			{
				jule::Trait _15868_t = _1e5e58713_buildIdent(_self_, (*(_158226_declKind)).cast_ptr<_1e5ca5692_IdentTypeDecl>(&__jule_any_type77));;
				if ((_15868_t != nullptr)) {
					_158311_kind=_15868_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1cb804e64:;
			{
				jule::Trait _15918_t = _1e5e58a54_buildSubIdent(_self_, (*(_158226_declKind)).cast_ptr<_1e5ca595b_SubIdentTypeDecl>(&__jule_any_type89));;
				if ((_15918_t != nullptr)) {
					_158311_kind=_15918_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1cb804eca:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1e5e4d43e_Sptr> _15978_t = _1e5e591d6_buildSptr(_self_, (*(_158226_declKind)).cast_ptr<_1e5ca6132_SptrTypeDecl>(&__jule_any_type74));;
				if ((_15978_t != nullptr)) {
					_158311_kind=jule::Trait(_15978_t, (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data23);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1cb805041:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1e5e51c06_Ptr> _16038_t = _1e5e59868_buildPtr(_self_, (*(_158226_declKind)).cast_ptr<_1e5ca6ab1_PtrTypeDecl>(&__jule_any_type73));;
				if ((_16038_t != nullptr)) {
					_158311_kind=jule::Trait(_16038_t, (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data28);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1cb8050a7:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1e5e4de12_Slc> _16098_t = _1e5e59ba9_buildSlc(_self_, (*(_158226_declKind)).cast_ptr<_1e5ca64b7_SlcTypeDecl>(&__jule_any_type72));;
				if ((_16098_t != nullptr)) {
					_158311_kind=jule::Trait(_16098_t, (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data24);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1cb80511d:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1e5e51233_Arr> _16158_t = _1e5e59eea_buildArr(_self_, (*(_158226_declKind)).cast_ptr<_1e5ca7353_ArrTypeDecl>(&__jule_any_type71));;
				if ((_16158_t != nullptr)) {
					_158311_kind=jule::Trait(_16158_t, (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data27);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1cb805184:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1e5e505a6_Map> _16218_t = _1e5e5a33b_buildMap(_self_, (*(_158226_declKind)).cast_ptr<_1e5ca7aa1_MapTypeDecl>(&__jule_any_type75));;
				if ((_16218_t != nullptr)) {
					_158311_kind=jule::Trait(_16218_t, (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data26);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1cb805b02:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1e5e4ea06_Tuple> _16278_t = _1e5e5a67c_buildTuple(_self_, (*(_158226_declKind)).cast_ptr<_1e5ca67b4_TupleTypeDecl>(&__jule_any_type76));;
				if ((_16278_t != nullptr)) {
					_158311_kind=jule::Trait(_16278_t, (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data25);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1cb805b68:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1e5ce3416_FnIns> _16338_t = _1e5e5ad0e_buildFunc(_self_, (*(_158226_declKind)).cast_ptr<_1e5cb6c47_FnDecl>(&__jule_any_type14));;
				if ((_16338_t != nullptr)) {
					_158311_kind=jule::Trait(_16338_t, (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data1);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1cb805bce:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Trait _16398_t = _1e5e5b150_buildByNamespace(_self_, (*(_158226_declKind)).cast_ptr<_1e5ca5d35_NamespaceTypeDecl>(&__jule_any_type93));;
				if ((_16398_t != nullptr)) {
					_158311_kind=_16398_t;
				};
			}
		}
		else {
			_case_begin_1cb804ded:;
			{
				_1e5e54478_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1cb804d87:;
	};
	if ((_158311_kind == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _158311_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5e41344_Kind_mptr_data21)) {
			_case_begin_1cb81425e:;
			{
				return _158311_kind.cast_ptr<_1e5e417ea_TypeKind>((jule::Trait::Type*)&_1e5e41344_Kind_mptr_data21);;
			}
		}
		else {
			_case_begin_1cb810a30:;
			{
				jule::Ptr<_1e5e417ea_TypeKind> _16548_tk = jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=_158311_kind});;
				{
					auto &_match_expr{ _158311_kind };
					
					if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5e41344_Kind_mptr_data22)) {
						_case_begin_1cb812614:;
						{
							if (((*(_self_))._field_ignoredGenerics != nullptr)) {
								{
									{ jule::Slice<jule::Ptr<_1e5e417ea_TypeKind>> *__jule_push_dest = (*(_self_))._field_ignoredGenerics; __jule_push_dest->push(_16548_tk); };
								};
							};
						}
					}
					else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5e41344_Kind_mptr_data0)) {
						_case_begin_1cb81248d:;
						{
							jule::Ptr<_1e5cc8c7b_StructIns> _16615_s = _158311_kind.cast_ptr<_1e5cc8c7b_StructIns>((jule::Trait::Type*)&_1e5e41344_Kind_mptr_data0);;
							if ((((*(_16615_s))._field_Decl != nullptr) && (*(*(_16615_s))._field_Decl.alloc)._field_Binded)) {
								(*(_16548_tk))._field_BindIdent=(*(*(_16615_s))._field_Decl.alloc)._field_Ident;
							};
						}
					}
					_match_end_1cb81259d:;
				};
				return _16548_tk;;
			}
		}
		_match_end_1cb811855:;
	};
}



inline jule::Ptr<_1e5e417ea_TypeKind> _1e5e5b7d2_checkDecl(_1e5e53be7_typeChecker* _self_, jule::Ptr<_1e5ca5087_TypeDecl>* _167030_decl) {
	jule::Ptr<_1e5c8eacc_Token> _16727_errorToken = (*(_self_))._field_errorToken;;
	(*(_self_))._field_errorToken=(*((*(_167030_decl))))._field_Token;
	jule::Ptr<_1e5e417ea_TypeKind> _16757_kind = _1e5e5b491_build(_self_, &((*((*(_167030_decl))))._field_Kind));;
	(*(_self_))._field_errorToken=_16727_errorToken;
	return _16757_kind;;
}








inline jule::Bool _1e5e5bcaa_identTypeLookup_eq(_1e5e5bcaa_identTypeLookup *_self_, _1e5e5bcaa_identTypeLookup _other_) { return true; }

inline jule::Bool static__1e5e5c22d_prim(jule::Str* _169718_ident, jule::Ptr<_1e5e49913_Prim> _169730_t) {
	return ((*(_169730_t))._field_Kind == (*(_169718_ident)));;
}



inline jule::Bool static__1e5e5c5a2_exist(jule::Str* _170119_ident, jule::Ptr<_1e5e417ea_TypeKind>* _170136_k) {
	{
		
		if ((_1e5e43ea1_Prim((*(_170136_k)).ptr()) != nullptr)) {
			_case_begin_1cb8190aa:;
			{
				return static__1e5e5c22d_prim(_170119_ident, _1e5e43ea1_Prim((*(_170136_k)).ptr()));;
			}
		}
		else if ((_1e5e44237_Sptr((*(_170136_k)).ptr()) != nullptr)) {
			_case_begin_1cb819132:;
			{
				jule::Ptr<_1e5e4d43e_Sptr> _17068_sptr = _1e5e44237_Sptr((*(_170136_k)).ptr());;
				return static__1e5e5c5a2_exist(_170119_ident, &((*(_17068_sptr))._field_Elem));;
			}
		}
		else if ((_1e5e444bd_Ptr((*(_170136_k)).ptr()) != nullptr)) {
			_case_begin_1cb8191a9:;
			{
				jule::Ptr<_1e5e51c06_Ptr> _17098_ptr = _1e5e444bd_Ptr((*(_170136_k)).ptr());;
				return static__1e5e5c5a2_exist(_170119_ident, &((*(_17098_ptr))._field_Elem));;
			}
		}
		else if ((_1e5e45007_Slc((*(_170136_k)).ptr()) != nullptr)) {
			_case_begin_1cb819231:;
			{
				jule::Ptr<_1e5e4de12_Slc> _17128_slc = _1e5e45007_Slc((*(_170136_k)).ptr());;
				return static__1e5e5c5a2_exist(_170119_ident, &((*(_17128_slc))._field_Elem));;
			}
		}
		else if ((_1e5e44c71_Arr((*(_170136_k)).ptr()) != nullptr)) {
			_case_begin_1cb81940c:;
			{
				jule::Ptr<_1e5e51233_Arr> _17158_arr = _1e5e44c71_Arr((*(_170136_k)).ptr());;
				return static__1e5e5c5a2_exist(_170119_ident, &((*(_17158_arr))._field_Elem));;
			}
		}
		else if ((_1e5e45a41_Map((*(_170136_k)).ptr()) != nullptr)) {
			_case_begin_1cb819473:;
			{
				jule::Ptr<_1e5e505a6_Map> _17188_m = _1e5e45a41_Map((*(_170136_k)).ptr());;
				return (static__1e5e5c5a2_exist(_170119_ident, &((*(_17188_m))._field_Key)) || static__1e5e5c5a2_exist(_170119_ident, &((*_17188_m.alloc)._field_Val)));;
			}
		}
		else if ((_1e5e45524_Struct((*(_170136_k)).ptr()) != nullptr)) {
			_case_begin_1cb8194d9:;
			{
				jule::Ptr<_1e5cc8c7b_StructIns> _17228_s = _1e5e45524_Struct((*(_170136_k)).ptr());;
				{
					auto expr = &((*(_17228_s))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cb821634:;
					if (it != expr_end) {
						jule::Ptr<_1e5e3ee14_InsGeneric> _172316_g = *it;
						{
							if (static__1e5e5c5a2_exist(_170119_ident, &((*(_172316_g))._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1cb821634:;
						++it;
						goto _iter_begin_1cb821634;
					}
					_iter_end_1cb821634:;
				};
				return false;;
			}
		}
		else if ((_1e5e4528d_Fn((*(_170136_k)).ptr()) != nullptr)) {
			_case_begin_1cb819550:;
			{
				jule::Ptr<_1e5ce3416_FnIns> _17308_f = _1e5e4528d_Fn((*(_170136_k)).ptr());;
				{
					auto expr = &((*(_17308_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cb823290:;
					if (it != expr_end) {
						jule::Ptr<_1e5ce22b1_ParamIns> _173116_p = *it;
						{
							if (_1e5cdded3_IsSelf((*(_173116_p))._field_Decl.ptr())) {
								goto _iter_next_1cb823290;
							};
							if (static__1e5e5c5a2_exist(_170119_ident, &((*_173116_p.alloc)._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1cb823290:;
						++it;
						goto _iter_begin_1cb823290;
					}
					_iter_end_1cb823290:;
				};
				if (((*_17308_f.alloc)._field_Result != nullptr)) {
					return static__1e5e5c5a2_exist(_170119_ident, &((*_17308_f.alloc)._field_Result));;
				};
				return false;;
			}
		}
		else if ((_1e5e45cc7_Tup((*(_170136_k)).ptr()) != nullptr)) {
			_case_begin_1cb8195c7:;
			{
				jule::Ptr<_1e5e4ea06_Tuple> _17448_tup = _1e5e45cc7_Tup((*(_170136_k)).ptr());;
				{
					auto expr = &((*(_17448_tup))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cb825b11:;
					if (it != expr_end) {
						jule::Ptr<_1e5e417ea_TypeKind> _174516_t = *it;
						{
							if (static__1e5e5c5a2_exist(_170119_ident, &(_174516_t))) {
								return true;;
							};
						}
						_iter_next_1cb825b11:;
						++it;
						goto _iter_begin_1cb825b11;
					}
					_iter_end_1cb825b11:;
				};
				return false;;
			}
		}
		else {
			_case_begin_1cb818e89:;
			{
				return false;;
			}
		}
		_match_end_1cb818d79:;
	};
}















inline void _1e69bc232_stop(_1e69bba7d_scopeParser* _self_) {
	(*(_self_))._field_pos=-1LL;
}



inline jule::Bool _1e69bc4b8_stopped(_1e69bba7d_scopeParser* _self_) {
	return ((*(_self_))._field_pos == -1LL);;
}



inline jule::Bool _1e69bc74e_finished(_1e69bba7d_scopeParser* _self_) {
	return ((*(_self_))._field_pos >= (*(_self_))._field_stmts.len());;
}



inline jule::Bool _1e69bc9d5_isLastSt(_1e69bba7d_scopeParser* _self_) {
	return (((*(_self_))._field_pos + 1LL) >= (*(_self_))._field_stmts.len());;
}



inline void _1e69bcd48_pushErr(_1e69bba7d_scopeParser* _self_, jule::Ptr<_1e5c8eacc_Token> _18823_token, jule::Str _18838_fmt) {
	_1e69daae1_pushErr((*(_self_))._field_p.ptr(), _18823_token, _18838_fmt, jule::Slice<jule::Any>());
}



inline void _1e69bd1ab_pushSuggestion(_1e69bba7d_scopeParser* _self_, jule::Str _19330_fmt, jule::Slice<jule::Any> _19343_args) {
	_1e69dae54_pushSuggestion((*(_self_))._field_p.ptr(), _19330_fmt, _19343_args);
}



inline void _1e69bd464_insertAsNext(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _19733_tokens) {
	(*(_self_))._field_stmts=jule::append((*(_self_))._field_stmts.slice(0LL, ((*(_self_))._field_pos + 1LL)),(*(_self_))._field_stmts.slice((*(_self_))._field_pos));
	(*(_self_))._field_stmts[((*(_self_))._field_pos + 1LL)]=jule::new_ptr<_1e69bb1dc_stmt>(_1e69bb1dc_stmt{._field_tokens=(*(_19733_tokens)), ._field_terminated=false});
}



inline jule::Ptr<_1e69bb1dc_stmt> _1e69bd6ea_next(_1e69bba7d_scopeParser* _self_) {
	((*(_self_))._field_pos)++;
	return (*(_self_))._field_stmts[(*(_self_))._field_pos];;
}



inline jule::Ptr<_1e5cb50a8_ScopeTree> _1e69bdae6_buildScope(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _20731_tokens, jule::Ptr<_1e5c8eacc_Token> _20753_end) {
	jule::Ptr<_1e5cb50a8_ScopeTree> _2087_s = _1e69b9e99_newScope();;
	(*(_2087_s))._field_Parent=(*(_self_))._field_s;
	(*_2087_s.alloc)._field_End=_20753_end;
	_1e69bba7d_scopeParser _2117_ssp = _1e69bba7d_scopeParser{._field_p=(*(_self_))._field_p, ._field_s=jule::Ptr<_1e5cb50a8_ScopeTree>(nullptr), ._field_stmts=jule::Slice<jule::Ptr<_1e69bb1dc_stmt>>(nullptr), ._field_pos=0};;
	_1e69c8969_build(&_2117_ssp, _20731_tokens, &(_2087_s));
	return _2087_s;;
}



inline jule::Ptr<_1e5cb7e02_VarDecl> _1e69bde37_buildVarSt(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _21831_tokens) {
	jule::Ptr<_1e5cb7e02_VarDecl> _2197_v = _1e69dd8b3_buildVar((*(_self_))._field_p, (*(_21831_tokens)));;
	if ((_2197_v != nullptr)) {
		(*_2197_v.alloc)._field_Scope=(*(_self_))._field_s;
	};
	return _2197_v;;
}



inline jule::Ptr<_1e5cb82cb_RetSt> _1e69be278_buildRetSt(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _22630_tokens) {
	jule::Ptr<_1e5cb82cb_RetSt> _2277_st = jule::new_ptr<_1e5cb82cb_RetSt>(_1e5cb82cb_RetSt{._field_Token=_22630_tokens[0LL], ._field_Expr=jule::Ptr<_1e5ca93bb_Expr>(nullptr)});;
	if ((_22630_tokens.len() > 1LL)) {
		(_22630_tokens).mut_slice(1LL);;
		(*(_2277_st))._field_Expr=_1e69db295_buildExpr((*(_self_))._field_p, &(_22630_tokens));
	};
	return _2277_st;;
}



inline jule::Ptr<_1e5cb8a4b_Iter> _1e69be5b9_buildWhileNextIter(_1e69bba7d_scopeParser* _self_, jule::Ptr<_1e69bb1dc_stmt>* _23739_s) {
	jule::Ptr<_1e5cb8a4b_Iter> _2387_it = jule::new_ptr<_1e5cb8a4b_Iter>(_1e5cb8a4b_Iter{._field_Comptime=false, ._field_Token=(*((*(_23739_s))))._field_tokens[0LL], ._field_Kind=jule::Any(nullptr), ._field_Scope=jule::Ptr<_1e5cb50a8_ScopeTree>(nullptr)});;
	jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _2417_tokens = (*((*(_23739_s))))._field_tokens.slice(1LL);;
	jule::Ptr<_1e5cb9376_WhileKind> _2427_kind = jule::new_ptr<_1e5cb9376_WhileKind>(_1e5cb9376_WhileKind{._field_Expr=jule::Ptr<_1e5ca93bb_Expr>(nullptr), ._field_Next=jule::Any(nullptr), ._field_NextToken=jule::Ptr<_1e5c8eacc_Token>(nullptr)});;
	if ((_2417_tokens.len() > 0LL)) {
		(*_2427_kind.alloc)._field_Expr=_1e69db295_buildExpr((*(_self_))._field_p, &(_2417_tokens));
	};
	if (_1e69bc9d5_isLastSt(_self_)) {
		_1e69bcd48_pushErr(_self_, (*(_2387_it))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	_2417_tokens=(*(_1e69bd6ea_next(_self_)))._field_tokens;
	jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _2547_stTokens = _1e69d52c2_getBlockExpr(&(_2417_tokens));;
	if ((_2547_stTokens.len() > 0LL)) {
		jule::Ptr<_1e69bb1dc_stmt> _2568_stmt = jule::new_ptr<_1e69bb1dc_stmt>(_1e69bb1dc_stmt{._field_tokens=_2547_stTokens, ._field_terminated=(*((*(_23739_s))))._field_terminated});;
		(*_2427_kind.alloc)._field_NextToken=_2547_stTokens[0LL];
		(*_2427_kind.alloc)._field_Next=_1e69c8606_buildSt(_self_, &(_2568_stmt));
	};
	jule::I64 _2647_i = _2547_stTokens.len();;
	jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _2657_blockTokens = _1e69d87ae_range(&(_2647_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_2417_tokens));;
	if ((_2657_blockTokens == nullptr)) {
		_1e69bc232_stop(_self_);
		_1e69bcd48_pushErr(_self_, (*_2387_it.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1e69bd1ab_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_2647_i < _2417_tokens.len())) {
		_1e69bcd48_pushErr(_self_, _2417_tokens[_2647_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*_2387_it.alloc)._field_Scope=_1e69bdae6_buildScope(_self_, &(_2657_blockTokens), _2417_tokens[(_2647_i - 1LL)]);
	(*_2387_it.alloc)._field_Kind=jule::Any(_2427_kind, &__jule_any_type43);
	return _2387_it;;
}



inline jule::Ptr<_1e5cb9376_WhileKind> _1e69be90a_buildWhileIterKind(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _28239_tokens) {
	return jule::new_ptr<_1e5cb9376_WhileKind>(_1e5cb9376_WhileKind{._field_Expr=_1e69db295_buildExpr((*(_self_))._field_p, _28239_tokens), ._field_Next=jule::Any(nullptr), ._field_NextToken=jule::Ptr<_1e5c8eacc_Token>(nullptr)});;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1e5c8eacc_Token>>> _1e69bec4b_getRangeKindKeysTokens(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _28843_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_1e5c8eacc_Token>>> _2897_vars;
	jule::Slice<_22578b38a_Log> _28913_errs;
	({
		__jule_tuple_ssx_1e5c8eacc_Token__jule_tuple_s_22578b38a_Log __jule_assign_result = _1e69d902e_parts(_28843_toks, static_cast<jule::U64>(5LLU), true);
		_2897_vars = __jule_assign_result.__jule_result_arg0;
		_28913_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_28913_errs);
	return _2897_vars;;
}



inline jule::Ptr<_1e5cb7e02_VarDecl> _1e69c008c_buildRangeKindKey(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _29438_tokens) {
	if (((*(_29438_tokens)).len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1e5cb7e02_VarDecl> _2987_key = jule::new_ptr<_1e5cb7e02_VarDecl>(_1e5cb7e02_VarDecl{._field_Scope=jule::Ptr<_1e5cb50a8_ScopeTree>(nullptr), ._field_Token=(*(_29438_tokens))[0LL], ._field_Setter=(*(_29438_tokens))[0LL], ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Public=false, ._field_Mutable=false, ._field_Constant=false, ._field_Statically=false, ._field_Reference=false, ._field_Directives=jule::Slice<jule::Ptr<_1e5ca44a4_Directive>>(nullptr), ._field_Kind=jule::Ptr<_1e5ca5087_TypeDecl>(nullptr), ._field_Expr=jule::Ptr<_1e5ca93bb_Expr>(nullptr)});;
	if (((*((*(_2987_key))._field_Token))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*_2987_key.alloc)._field_Mutable=true;
		if (((*(_29438_tokens)).len() == 1LL)) {
			_1e69bcd48_pushErr(_self_, (*_2987_key.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		};
		(*_2987_key.alloc)._field_Token=(*(_29438_tokens))[1LL];
	} else if (((*(_29438_tokens)).len() > 1LL)) {
		_1e69bcd48_pushErr(_self_, (*(_29438_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	if (((*((*(_2987_key))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1e69bcd48_pushErr(_self_, (*_2987_key.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_1e69bd1ab_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_2987_key.alloc)._field_Ident=(*(*(_2987_key))._field_Token.alloc)._field_Kind;
	return _2987_key;;
}



inline jule::Slice<jule::Ptr<_1e5cb7e02_VarDecl>> _1e69c03cd_buildRangeKindKeys(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1e5c8eacc_Token>>>* _32039_parts) {
	jule::Slice<jule::Ptr<_1e5cb7e02_VarDecl>> _32111_keys = nullptr;;
	{
		auto expr = _32039_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cba10526:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _32215_tokens = *it;
			{
				{ jule::Slice<jule::Ptr<_1e5cb7e02_VarDecl>> &__jule_push_dest = _32111_keys; __jule_push_dest.push(_1e69c008c_buildRangeKindKey(_self_, &(_32215_tokens))); };
			}
			_iter_next_1cba10526:;
			++it;
			goto _iter_begin_1cba10526;
		}
		_iter_end_1cba10526:;
	};
	return _32111_keys;;
}



inline void _1e69c0741_setupRangeKindKeysPlain(_1e69bba7d_scopeParser* _self_, jule::Ptr<_1e5cb9c7d_RangeKind>* _32844_rng, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _32866_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1e5c8eacc_Token>>> _3297_keyTokens = _1e69bec4b_getRangeKindKeysTokens(_self_, _32866_tokens);;
	if ((_3297_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_3297_keyTokens.len() > 2LL)) {
		_1e69bcd48_pushErr(_self_, (*((*(_32844_rng))))._field_InToken, static_cast<jule::Str>(jule::Str::lit("range variables can be maximum two", 34)));
	};
	jule::Slice<jule::Ptr<_1e5cb7e02_VarDecl>> _3367_keys = _1e69c03cd_buildRangeKindKeys(_self_, &(_3297_keyTokens));;
	(*((*(_32844_rng))))._field_KeyA=_3367_keys[0LL];
	if ((_3367_keys.len() > 1LL)) {
		(*((*(_32844_rng))))._field_KeyB=_3367_keys[1LL];
	};
}



inline void _1e69c0aa4_setupRangeKindKeysExplicit(_1e69bba7d_scopeParser* _self_, jule::Ptr<_1e5cb9c7d_RangeKind>* _34347_rng, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _34369_tokens) {
	jule::I64 _3447_i = 0LL;;
	jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _3457_rang = _1e69d87ae_range(&(_3447_i), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _34369_tokens);;
	if ((_3447_i < (*(_34369_tokens)).len())) {
		_1e69bcd48_pushErr(_self_, (*((*(_34347_rng))))._field_InToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	_1e69c0741_setupRangeKindKeysPlain(_self_, _34347_rng, &(_3457_rang));
}



inline void _1e69c0e17_setupRangeKindKeys(_1e69bba7d_scopeParser* _self_, jule::Ptr<_1e5cb9c7d_RangeKind>* _35239_rng, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _35261_tokens) {
	if (((*((*(_35261_tokens))[0LL]))._field_Id == static_cast<jule::U64>(74LLU))) {
		_1e69c0aa4_setupRangeKindKeysExplicit(_self_, _35239_rng, _35261_tokens);
		return;;
	};
	_1e69c0741_setupRangeKindKeysPlain(_self_, _35239_rng, _35261_tokens);
}



inline jule::Ptr<_1e5cb9c7d_RangeKind> _1e69c13bd_buildRangeIterKind(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _36039_var_tokens, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _3618_exprTokens, jule::Ptr<_1e5c8eacc_Token>* _36135_inToken) {
	jule::Ptr<_1e5cb9c7d_RangeKind> _3627_rng = jule::new_ptr<_1e5cb9c7d_RangeKind>(_1e5cb9c7d_RangeKind{._field_InToken=(*(_36135_inToken)), ._field_Expr=jule::Ptr<_1e5ca93bb_Expr>(nullptr), ._field_KeyA=jule::Ptr<_1e5cb7e02_VarDecl>(nullptr), ._field_KeyB=jule::Ptr<_1e5cb7e02_VarDecl>(nullptr)});;
	if (((*(_3618_exprTokens)).len() == 0LL)) {
		_1e69bcd48_pushErr(_self_, (*(_3627_rng))._field_InToken, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
		return _3627_rng;;
	};
	(*_3627_rng.alloc)._field_Expr=_1e69db295_buildExpr((*(_self_))._field_p, _3618_exprTokens);
	if (((*(_36039_var_tokens)).len() > 0LL)) {
		_1e69c0e17_setupRangeKindKeys(_self_, &(_3627_rng), _36039_var_tokens);
	};
	return _3627_rng;;
}



inline jule::Any _1e69c17b9_buildCommonIterKind(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _37640_tokens, jule::Ptr<_1e5c8eacc_Token>* _37659_err_tok) {
	jule::I64 _3777_braceN = 0LL;;
	{
		auto expr = _37640_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cba1b323:;
		if (it != expr_end) {
			jule::I64 _3788_i = it - expr->begin();
			jule::Ptr<_1e5c8eacc_Token> _37815_tok = *it;
			{
				{
					auto &_match_expr{ (*(_37815_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1cba1bbe7:;
						{
							(_3777_braceN)++;
							goto _iter_next_1cba1b323;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1cba1c0d2:;
						{
							(_3777_braceN)--;
						}
					}
					_match_end_1cba1bed3:;
				};
				if ((_3777_braceN != 0LL)) {
					goto _iter_next_1cba1b323;
				};
				{
					auto &_match_expr{ (*(_37815_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(12LLU)) {
						_case_begin_1cba1d19e:;
						{
							jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _3959_declTokens = (*(_37640_tokens)).slice(0LL, _3788_i);;
							jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _3969_exprTokens = (*(_37640_tokens)).slice((_3788_i + 1LL));;
							return jule::Any(_1e69c13bd_buildRangeIterKind(_self_, &(_3959_declTokens), &(_3969_exprTokens), &(_37815_tok)), &__jule_any_type45);;
						}
					}
					_match_end_1cba1d80e:;
				};
			}
			_iter_next_1cba1b323:;
			++it;
			_3788_i++;
			goto _iter_begin_1cba1b323;
		}
		_iter_end_1cba1b323:;
	};
	return jule::Any(_1e69be90a_buildWhileIterKind(_self_, _37640_tokens), &__jule_any_type43);;
}



inline jule::Ptr<_1e5cb8a4b_Iter> _1e69c1b0a_buildCommonIter(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _40335_tokens) {
	jule::Ptr<_1e5cb8a4b_Iter> _4047_it = jule::new_ptr<_1e5cb8a4b_Iter>(_1e5cb8a4b_Iter{._field_Comptime=false, ._field_Token=_40335_tokens[0LL], ._field_Kind=jule::Any(nullptr), ._field_Scope=jule::Ptr<_1e5cb50a8_ScopeTree>(nullptr)});;
	(_40335_tokens).mut_slice(1LL);;
	if ((_40335_tokens.len() == 0LL)) {
		_1e69bc232_stop(_self_);
		_1e69bcd48_pushErr(_self_, (*(_4047_it))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1e69bd1ab_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _4147_exprTokens = _1e69d52c2_getBlockExpr(&(_40335_tokens));;
	if ((_4147_exprTokens.len() > 0LL)) {
		(*_4047_it.alloc)._field_Kind=_1e69c17b9_buildCommonIterKind(_self_, &(_4147_exprTokens), &((*_4047_it.alloc)._field_Token));
	};
	jule::I64 _4187_i = _4147_exprTokens.len();;
	jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _4197_scopeTokens = _1e69d87ae_range(&(_4187_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_40335_tokens));;
	if ((_4197_scopeTokens == nullptr)) {
		_1e69bc232_stop(_self_);
		_1e69bcd48_pushErr(_self_, (*_4047_it.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1e69bd1ab_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_4187_i < _40335_tokens.len())) {
		_1e69bcd48_pushErr(_self_, _40335_tokens[_4187_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*_4047_it.alloc)._field_Scope=_1e69bdae6_buildScope(_self_, &(_4197_scopeTokens), _40335_tokens[(_4187_i - 1LL)]);
	return _4047_it;;
}



inline jule::Ptr<_1e5cb8a4b_Iter> _1e69c1e4b_buildIterSt(_1e69bba7d_scopeParser* _self_, jule::Ptr<_1e69bb1dc_stmt>* _43332_st) {
	if ((*((*(_43332_st))))._field_terminated) {
		return _1e69be5b9_buildWhileNextIter(_self_, _43332_st);;
	};
	return _1e69c1b0a_buildCommonIter(_self_, (*((*(_43332_st))))._field_tokens);;
}



inline jule::Ptr<_1e5cba157_BreakSt> _1e69c228c_buildBreakSt(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _44033_tokens) {
	jule::Ptr<_1e5cba157_BreakSt> _4417_brk = jule::new_ptr<_1e5cba157_BreakSt>(_1e5cba157_BreakSt{._field_Token=(*(_44033_tokens))[0LL], ._field_Label=jule::Ptr<_1e5c8eacc_Token>(nullptr)});;
	if (((*(_44033_tokens)).len() > 1LL)) {
		if (((*((*(_44033_tokens))[1LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1e69bcd48_pushErr(_self_, (*(_44033_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			_1e69bd1ab_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write a label identifier because label expected", 47)), jule::Slice<jule::Any>());
		} else {
			(*(_4417_brk))._field_Label=(*(_44033_tokens))[1LL];
			if (((*(_44033_tokens)).len() > 2LL)) {
				_1e69bcd48_pushErr(_self_, (*(_44033_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			};
		};
	};
	return _4417_brk;;
}



inline jule::Ptr<_1e5cba531_ContSt> _1e69c25cd_buildContSt(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _45832_tokens) {
	jule::Ptr<_1e5cba531_ContSt> _4597_cont = jule::new_ptr<_1e5cba531_ContSt>(_1e5cba531_ContSt{._field_Token=(*(_45832_tokens))[0LL], ._field_Label=jule::Ptr<_1e5c8eacc_Token>(nullptr)});;
	if (((*(_45832_tokens)).len() > 1LL)) {
		if (((*((*(_45832_tokens))[1LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1e69bcd48_pushErr(_self_, (*(_45832_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			_1e69bd1ab_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write a label identifier because label expected", 47)), jule::Slice<jule::Any>());
		} else {
			(*(_4597_cont))._field_Label=(*(_45832_tokens))[1LL];
			if (((*(_45832_tokens)).len() > 2LL)) {
				_1e69bcd48_pushErr(_self_, (*(_45832_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			};
		};
	};
	return _4597_cont;;
}



inline jule::Ptr<_1e5cba9d7_If> _1e69c291e_buildIf(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _47628_tokens) {
	jule::Ptr<_1e5cba9d7_If> _4777_model = jule::new_ptr<_1e5cba9d7_If>(_1e5cba9d7_If{._field_Token=(*(_47628_tokens))[0LL], ._field_Expr=jule::Ptr<_1e5ca93bb_Expr>(nullptr), ._field_Scope=jule::Ptr<_1e5cb50a8_ScopeTree>(nullptr)});;
	((*(_47628_tokens))).mut_slice(1LL);;
	jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _4817_exprTokens = _1e69d52c2_getBlockExpr(_47628_tokens);;
	jule::I64 _4827_i = 0LL;;
	if ((_4817_exprTokens.len() == 0LL)) {
		_1e69bcd48_pushErr(_self_, (*(_4777_model))._field_Token, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
	} else {
		_4827_i=_4817_exprTokens.len();
	};
	jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _4887_scopeTokens = _1e69d87ae_range(&(_4827_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _47628_tokens);;
	if ((_4887_scopeTokens == nullptr)) {
		_1e69bc232_stop(_self_);
		_1e69bcd48_pushErr(_self_, (*(_4777_model))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1e69bd1ab_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1e5c8eacc_Token> _4957_end = (*(_47628_tokens))[(_4827_i - 1LL)];;
	if ((_4827_i < (*(_47628_tokens)).len())) {
		if (((*((*(_47628_tokens))[_4827_i]))._field_Id == static_cast<jule::U64>(14LLU))) {
			((*(_47628_tokens))).mut_slice(_4827_i);;
		} else {
			_1e69bcd48_pushErr(_self_, (*(_47628_tokens))[_4827_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			(*(_47628_tokens))=nullptr;
		};
	};
	(*_4777_model.alloc)._field_Expr=_1e69db295_buildExpr((*(_self_))._field_p, &(_4817_exprTokens));
	(*_4777_model.alloc)._field_Scope=_1e69bdae6_buildScope(_self_, &(_4887_scopeTokens), _4957_end);
	return _4777_model;;
}



inline jule::Ptr<_1e5cbadb1_Else> _1e69c2c60_buildElse(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _50930_tokens) {
	jule::Ptr<_1e5cbadb1_Else> _5107_els = jule::new_ptr<_1e5cbadb1_Else>(_1e5cbadb1_Else{._field_Token=(*(_50930_tokens))[0LL], ._field_Scope=jule::Ptr<_1e5cb50a8_ScopeTree>(nullptr)});;
	((*(_50930_tokens))).mut_slice(1LL);;
	jule::I64 _5147_i = 0LL;;
	jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _5157_scopeTokens = _1e69d87ae_range(&(_5147_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _50930_tokens);;
	if ((_5157_scopeTokens == nullptr)) {
		if ((_5147_i < (*(_50930_tokens)).len())) {
			_1e69bcd48_pushErr(_self_, (*(_5107_els))._field_Token, static_cast<jule::Str>(jule::Str::lit("else's cannot have any expression", 33)));
		} else {
			_1e69bc232_stop(_self_);
			_1e69bcd48_pushErr(_self_, (*(_5107_els))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
			_1e69bd1ab_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	if ((_5147_i < (*(_50930_tokens)).len())) {
		_1e69bcd48_pushErr(_self_, (*(_50930_tokens))[_5147_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*(_5107_els))._field_Scope=_1e69bdae6_buildScope(_self_, &(_5157_scopeTokens), (*(_50930_tokens))[(_5147_i - 1LL)]);
	return _5107_els;;
}



inline jule::Ptr<_1e5cbb367_Conditional> _1e69c30a1_buildIfElseChain(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _53336_tokens) {
	jule::Ptr<_1e5cbb367_Conditional> _5347_chain = jule::new_ptr<_1e5cbb367_Conditional>(_1e5cbb367_Conditional{._field_Head=_1e69c291e_buildIf(_self_, &(_53336_tokens)), ._field_Tail=jule::Slice<jule::Ptr<_1e5cba9d7_If>>(nullptr), ._field_Default=jule::Ptr<_1e5cbadb1_Else>(nullptr)});;
	if (((*(_5347_chain))._field_Head == nullptr)) {
		return nullptr;;
	};
	while ((_53336_tokens.len() != 0LL)) {
		{
			if (((*(_53336_tokens[0LL]))._field_Id != static_cast<jule::U64>(14LLU))) {
				goto _iter_end_1cba3a045;
			};
			if (((_53336_tokens.len() > 1LL) && ((*(_53336_tokens[1LL]))._field_Id == static_cast<jule::U64>(13LLU)))) {
				(_53336_tokens).mut_slice(1LL);;
				jule::Ptr<_1e5cba9d7_If> _5469_elif = _1e69c291e_buildIf(_self_, &(_53336_tokens));;
				(*_5347_chain.alloc)._field_Tail=jule::append((*_5347_chain.alloc)._field_Tail,({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5cba9d7_If>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _5469_elif; __jule_collection; }));
				goto _iter_next_1cba3a045;
			};
			(*_5347_chain.alloc)._field_Default=_1e69c2c60_buildElse(_self_, &(_53336_tokens));
			goto _iter_end_1cba3a045;
		}
	_iter_next_1cba3a045:;
	}
	_iter_end_1cba3a045:;;
	return _5347_chain;;
}



inline jule::Ptr<_1e5ca93bb_Expr> _1e69c33e2_buildCoCallSt(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _55633_tokens) {
	jule::Ptr<_1e5c8eacc_Token> _5573_token = _55633_tokens[0LL];;
	(_55633_tokens).mut_slice(1LL);;
	jule::Ptr<_1e5ca93bb_Expr> _5597_e = _1e69db295_buildExpr((*(_self_))._field_p, &(_55633_tokens));;
	if ((_5597_e == nullptr)) {
		return _5597_e;;
	};
	{
		auto &_match_expr{ (*(_5597_e))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1cba3e137:;
			{
				(*((*(_5597_e))._field_Kind.unsafe_cast_ptr<_1e5cad0e5_FnCallExpr>()))._field_IsCo=true;
			}
		}
		else {
			_case_begin_1cba3e70e:;
			{
				_1e69bcd48_pushErr(_self_, _5573_token, static_cast<jule::Str>(jule::Str::lit("statement must have function call expression", 44)));
			}
		}
		_match_end_1cba3e698:;
	};
	return _5597_e;;
}



inline jule::Ptr<_1e5cb2a45_GotoSt> _1e69c3733_buildGotoSt(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _57232_tokens) {
	jule::Ptr<_1e5cb2a45_GotoSt> _5737_gt = jule::new_ptr<_1e5cb2a45_GotoSt>(_1e5cb2a45_GotoSt{._field_Token=(*(_57232_tokens))[0LL], ._field_Label=jule::Ptr<_1e5c8eacc_Token>(nullptr)});;
	if (((*(_57232_tokens)).len() == 1LL)) {
		_1e69bcd48_pushErr(_self_, (*(_5737_gt))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing label identifier for goto statement", 43)));
		return nullptr;;
	} else if (((*(_57232_tokens)).len() > 2LL)) {
		_1e69bcd48_pushErr(_self_, (*(_57232_tokens))[2LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	jule::Ptr<_1e5c8eacc_Token> _5827_identToken = (*(_57232_tokens))[1LL];;
	if (((*(_5827_identToken))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1e69bcd48_pushErr(_self_, _5827_identToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_1e69bd1ab_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return _5737_gt;;
	};
	(*(_5737_gt))._field_Label=_5827_identToken;
	return _5737_gt;;
}



inline jule::Ptr<_1e5cb2d42_FallSt> _1e69c3a74_buildFallSt(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _59232_tokens) {
	jule::Ptr<_1e5cb2d42_FallSt> _5937_fll = jule::new_ptr<_1e5cb2d42_FallSt>(_1e5cb2d42_FallSt{._field_Token=(*(_59232_tokens))[0LL]});;
	if (((*(_59232_tokens)).len() > 1LL)) {
		_1e69bcd48_pushErr(_self_, (*(_59232_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	return _5937_fll;;
}



inline jule::Ptr<_1e5cbbaa4_TypeAliasDecl> _1e69c3db5_buildTypeAliasSt(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _60237_tokens) {
	jule::Ptr<_1e5cbbaa4_TypeAliasDecl> _6037_tad = _1e69dca38_buildTypeAliasDecl((*(_self_))._field_p, _60237_tokens);;
	(*(_6037_tad))._field_Scope=(*(_self_))._field_s;
	return _6037_tad;;
}



inline void _1e69c438d_pushCaseExpr(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _60832_tokens, jule::Ptr<_1e5c8eacc_Token> _60854_token, jule::Bool _6093_typeMatch, jule::Slice<jule::Ptr<_1e5ca93bb_Expr>>* _60925_exprs) {
	if ((_60832_tokens.len() == 0LL)) {
		return;;
	};
	if (_6093_typeMatch) {
		jule::I64 _6148_i = 0LL;;
		jule::Ptr<_1e5ca5087_TypeDecl> _6158_t;
		jule::Bool _61511_ok;
		({
			__jule_tuple_x_1e5ca5087_TypeDecl__jule_tuple_bool __jule_assign_result = _1e69dc6e7_buildType((*(_self_))._field_p, &(_60832_tokens), (&(_6148_i)), true);
			_6158_t = __jule_assign_result.__jule_result_arg0;
			_61511_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_61511_ok) {
			{ jule::Slice<jule::Ptr<_1e5ca93bb_Expr>> &__jule_push_dest = (*(_60925_exprs)); __jule_push_dest.push(jule::new_ptr<_1e5ca93bb_Expr>(_1e5ca93bb_Expr{._field_Token=_60832_tokens[0LL], ._field_End=_60832_tokens[(_60832_tokens.len() - 1LL)], ._field_Kind=jule::Any(_6158_t, &__jule_any_type91)})); };
			if ((_6148_i < _60832_tokens.len())) {
				_1e69bcd48_pushErr(_self_, _60832_tokens[_6148_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			};
		};
		return;;
	};
	{ jule::Slice<jule::Ptr<_1e5ca93bb_Expr>> &__jule_push_dest = (*(_60925_exprs)); __jule_push_dest.push(_1e69db295_buildExpr((*(_self_))._field_p, &(_60832_tokens))); };
}



inline __jule_tuple_sx_1e5ca93bb_Expr__jule_tuple_bool _1e69c4844_buildCaseExprs(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _63135_tokens, jule::Ptr<_1e5c8eacc_Token>* _63158_colon, jule::Bool _63173_typeMatch) {
	__jule_tuple_sx_1e5ca93bb_Expr__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Slice<jule::Ptr<_1e5ca93bb_Expr>> _6327_exprs = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5ca93bb_Expr>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1e5ca93bb_Expr>(nullptr); __jule_collection; });;
	jule::I64 _6337_braceN = 0LL;;
	jule::I64 _6347_j = 0LL;;
	{
		auto expr = _63135_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cba4b0bc:;
		if (it != expr_end) {
			jule::I64 _6358_i = it - expr->begin();
			jule::Ptr<_1e5c8eacc_Token> _63515_tok = *it;
			{
				{
					auto &_match_expr{ (*(_63515_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1cba4c82c:;
						{
							(_6337_braceN)++;
							goto _iter_next_1cba4b0bc;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(75LLU) || _match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1cba4cc17:;
						{
							(_6337_braceN)--;
							goto _iter_next_1cba4b0bc;
						}
					}
					_match_end_1cba4cb18:;
				};
				if ((_6337_braceN != 0LL)) {
					goto _iter_next_1cba4b0bc;
				};
				{
					
					if (((*(_63515_tok))._field_Id == static_cast<jule::U64>(66LLU))) {
						_case_begin_1cba4e3cd:;
						{
							jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _6545_exprTokens = (*(_63135_tokens)).slice(_6347_j, _6358_i);;
							if ((_6545_exprTokens.len() == 0LL)) {
								_1e69bcd48_pushErr(_self_, _63515_tok, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
							} else {
								_1e69c438d_pushCaseExpr(_self_, (*(_63135_tokens)).slice(_6347_j, _6358_i), _63515_tok, _63173_typeMatch, &(_6327_exprs));
							};
							_6347_j=(_6358_i + 1LL);
						}
					}
					else if (((*(_63515_tok))._field_Id == static_cast<jule::U64>(8LLU))) {
						_case_begin_1cba4e444:;
						{
							(*(_63158_colon))=_63515_tok;
							_1e69c438d_pushCaseExpr(_self_, (*(_63135_tokens)).slice(_6347_j, _6358_i), _63515_tok, _63173_typeMatch, &(_6327_exprs));
							((*(_63135_tokens))).mut_slice((_6358_i + 1LL));;
							__jule_func_result.__jule_result_arg0 = _6327_exprs;
							__jule_func_result.__jule_result_arg1 = (((_6358_i - _6347_j) == 0LL) || (_6327_exprs.len() != 0LL));
							return __jule_func_result;;
						}
					}
					_match_end_1cba4ddd3:;
				};
			}
			_iter_next_1cba4b0bc:;
			++it;
			_6358_i++;
			goto _iter_begin_1cba4b0bc;
		}
		_iter_end_1cba4b0bc:;
	};
	_1e69bcd48_pushErr(_self_, (*(_63135_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	(*(_63135_tokens))=nullptr;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline jule::Ptr<_1e5cb50a8_ScopeTree> _1e69c4b85_buildCaseScope(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _67335_tokens) {
	jule::I64 _6747_n = 0LL;;
	for (;;) {
		{
			jule::I64 _6768_i = 0LL;;
			jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _6778_next;
			({
				__jule_tuple_sx_1e5c8eacc_Token__jule_tuple_bool __jule_assign_result = _1e69badac_skipSt(&(_6768_i), (*(_67335_tokens)).slice(_6747_n));
				_6778_next = __jule_assign_result.__jule_result_arg0;
			});
			if ((_6778_next.len() == 0LL)) {
				goto _iter_end_1cba531c3;
			};
			jule::Ptr<_1e5c8eacc_Token> _6814_tok = _6778_next[0LL];;
			if (((*(_6814_tok))._field_Id != static_cast<jule::U64>(66LLU))) {
				_6747_n+=_6768_i;
				goto _iter_next_1cba531c3;
			};
			jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _6868_scopeTokens = (*(_67335_tokens)).slice(0LL, _6747_n);;
			jule::Ptr<_1e5cb50a8_ScopeTree> _6878_scope = _1e69bdae6_buildScope(_self_, &(_6868_scopeTokens), (*(_67335_tokens))[_6747_n]);;
			((*(_67335_tokens))).mut_slice(_6747_n);;
			return _6878_scope;;
		}
	_iter_next_1cba531c3:;
	}
	_iter_end_1cba531c3:;;
	jule::Ptr<_1e5c8eacc_Token> _69111_end;;
	if (((*(_67335_tokens)).len() > 0LL)) {
		_69111_end=(*(_67335_tokens))[((*(_67335_tokens)).len() - 1LL)];
	};
	jule::Ptr<_1e5cb50a8_ScopeTree> _6957_scope = _1e69bdae6_buildScope(_self_, _67335_tokens, _69111_end);;
	(*(_67335_tokens))=nullptr;
	return _6957_scope;;
}



inline __jule_tuple_x_1e5cbc05a_Case__jule_tuple_bool _1e69c5081_buildCase(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _70030_tokens, jule::Bool _70048_typeMatch) {
	__jule_tuple_x_1e5cbc05a_Case__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1e5cbc05a_Case> _7017_c = jule::new_ptr<_1e5cbc05a_Case>(_1e5cbc05a_Case{._field_Token=(*(_70030_tokens))[0LL], ._field_Scope=jule::Ptr<_1e5cb50a8_ScopeTree>(nullptr), ._field_Exprs=jule::Slice<jule::Ptr<_1e5ca93bb_Expr>>(nullptr)});;
	((*(_70030_tokens))).mut_slice(1LL);;
	jule::Ptr<_1e5c8eacc_Token> _70511_colon = nullptr;;
	if (((*(_70030_tokens)).len() == 0LL)) {
		_1e69bcd48_pushErr(_self_, (*(_7017_c))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Bool _71012_ok;
	({
		__jule_tuple_sx_1e5ca93bb_Expr__jule_tuple_bool __jule_assign_result = _1e69c4844_buildCaseExprs(_self_, _70030_tokens, &(_70511_colon), _70048_typeMatch);
		(*_7017_c.alloc)._field_Exprs = __jule_assign_result.__jule_result_arg0;
		_71012_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*_7017_c.alloc)._field_Scope=_1e69c4b85_buildCaseScope(_self_, _70030_tokens);
	if (((*((*_7017_c.alloc)._field_Scope))._field_End == nullptr)) {
		(*(*(_7017_c))._field_Scope.alloc)._field_End=_70511_colon;
	};
	jule::Bool _7153_isDefault = (_71012_ok && ((*_7017_c.alloc)._field_Exprs.len() == 0LL));;
	__jule_func_result.__jule_result_arg0 = _7017_c;
	__jule_func_result.__jule_result_arg1 = _7153_isDefault;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1e5cbc05a_Case__jule_tuple_x_1e5cbadb1_Else _1e69c547c_buildCases(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _71930_tokens, jule::Bool _71948_typeMatch) {
	__jule_tuple_sx_1e5cbc05a_Case__jule_tuple_x_1e5cbadb1_Else __jule_func_result;
	jule::Slice<jule::Ptr<_1e5cbc05a_Case>> _72011_cases = nullptr;;
	jule::Ptr<_1e5cbadb1_Else> _72111_def = nullptr;;
	jule::Bool _7227_defNotLast = false;;
	while ((_71930_tokens.len() > 0LL)) {
		{
			jule::Ptr<_1e5c8eacc_Token> _7248_tok = _71930_tokens[0LL];;
			if (((*(_7248_tok))._field_Id != static_cast<jule::U64>(66LLU))) {
				_1e69bcd48_pushErr(_self_, _7248_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
				goto _iter_end_1cba5c5d9;
			};
			jule::Ptr<_1e5cbc05a_Case> _7298_c;
			jule::Bool _72911_isDefault;
			({
				__jule_tuple_x_1e5cbc05a_Case__jule_tuple_bool __jule_assign_result = _1e69c5081_buildCase(_self_, &(_71930_tokens), _71948_typeMatch);
				_7298_c = __jule_assign_result.__jule_result_arg0;
				_72911_isDefault = __jule_assign_result.__jule_result_arg1;
			});
			if (_72911_isDefault) {
				(*(_7298_c))._field_Token=_7248_tok;
				if ((_72111_def == nullptr)) {
					_72111_def=jule::new_ptr<_1e5cbadb1_Else>(_1e5cbadb1_Else{._field_Token=(*_7298_c.alloc)._field_Token, ._field_Scope=(*_7298_c.alloc)._field_Scope});
				} else {
					_1e69bcd48_pushErr(_self_, _7248_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
				};
			} else {
				_7227_defNotLast=(_7227_defNotLast || (_72111_def != nullptr));
				{ jule::Slice<jule::Ptr<_1e5cbc05a_Case>> &__jule_push_dest = _72011_cases; __jule_push_dest.push(_7298_c); };
			};
		}
	_iter_next_1cba5c5d9:;
	}
	_iter_end_1cba5c5d9:;;
	if (_7227_defNotLast) {
		_1e69bcd48_pushErr(_self_, (*(_72111_def))._field_Token, static_cast<jule::Str>(jule::Str::lit("default case should be last case", 32)));
	};
	__jule_func_result.__jule_result_arg0 = _72011_cases;
	__jule_func_result.__jule_result_arg1 = _72111_def;
	return __jule_func_result;;
}



inline jule::Ptr<_1e5cbc874_MatchCase> _1e69c57bd_buildMatchCase(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _75334_tokens) {
	jule::Ptr<_1e5cbc874_MatchCase> _7547_m = jule::new_ptr<_1e5cbc874_MatchCase>(_1e5cbc874_MatchCase{._field_Comptime=false, ._field_Token=_75334_tokens[0LL], ._field_End=jule::Ptr<_1e5c8eacc_Token>(nullptr), ._field_TypeMatch=false, ._field_Expr=jule::Ptr<_1e5ca93bb_Expr>(nullptr), ._field_Cases=jule::Slice<jule::Ptr<_1e5cbc05a_Case>>(nullptr), ._field_Default=jule::Ptr<_1e5cbadb1_Else>(nullptr)});;
	(_75334_tokens).mut_slice(1LL);;
	if (((_75334_tokens.len() > 0LL) && ((*(_75334_tokens[0LL]))._field_Id == static_cast<jule::U64>(7LLU)))) {
		(*(_7547_m))._field_TypeMatch=true;
		(_75334_tokens).mut_slice(1LL);;
	};
	jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _7647_exprTokens = _1e69d52c2_getBlockExpr(&(_75334_tokens));;
	if ((_7647_exprTokens.len() > 0LL)) {
		(*_7547_m.alloc)._field_Expr=_1e69db295_buildExpr((*(_self_))._field_p, &(_7647_exprTokens));
	} else if ((*_7547_m.alloc)._field_TypeMatch) {
		_1e69bcd48_pushErr(_self_, (*_7547_m.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
	};
	jule::I64 _7717_i = _7647_exprTokens.len();;
	jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _7727_blockToks = _1e69d87ae_range(&(_7717_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_75334_tokens));;
	if ((_7727_blockToks == nullptr)) {
		_1e69bc232_stop(_self_);
		_1e69bcd48_pushErr(_self_, (*_7547_m.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1e69bd1ab_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_7717_i < _75334_tokens.len())) {
		_1e69bcd48_pushErr(_self_, _75334_tokens[_7717_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*_7547_m.alloc)._field_End=_75334_tokens[(_7717_i - 1LL)];
	({
		__jule_tuple_sx_1e5cbc05a_Case__jule_tuple_x_1e5cbadb1_Else __jule_assign_result = _1e69c547c_buildCases(_self_, _7727_blockToks, (*_7547_m.alloc)._field_TypeMatch);
		(*_7547_m.alloc)._field_Cases = __jule_assign_result.__jule_result_arg0;
		(*_7547_m.alloc)._field_Default = __jule_assign_result.__jule_result_arg1;
	});
	return _7547_m;;
}



inline jule::Ptr<_1e5cb50a8_ScopeTree> _1e69c5b0e_buildScopeSt(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _78632_tokens) {
	jule::Bool _7877_isUnsafe = false;;
	jule::Bool _7887_isDeferred = false;;
	jule::Ptr<_1e5c8eacc_Token> _7897_token = _78632_tokens[0LL];;
	if (((*(_7897_token))._field_Id == static_cast<jule::U64>(31LLU))) {
		_7877_isUnsafe=true;
		(_78632_tokens).mut_slice(1LL);;
		if ((_78632_tokens.len() == 0LL)) {
			_1e69bcd48_pushErr(_self_, _7897_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			return nullptr;;
		};
		_7897_token=_78632_tokens[0LL];
		if (((*_7897_token.alloc)._field_Id == static_cast<jule::U64>(33LLU))) {
			_7887_isDeferred=true;
			(_78632_tokens).mut_slice(1LL);;
			if ((_78632_tokens.len() == 0LL)) {
				_1e69bcd48_pushErr(_self_, _7897_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
				return nullptr;;
			};
		};
	} else if (((*(_7897_token))._field_Id == static_cast<jule::U64>(33LLU))) {
		_7887_isDeferred=true;
		(_78632_tokens).mut_slice(1LL);;
		if ((_78632_tokens.len() == 0LL)) {
			_1e69bcd48_pushErr(_self_, _7897_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			return nullptr;;
		};
	};
	jule::I64 _8157_i = 0LL;;
	jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _8167_scopeTokens = _1e69d87ae_range(&(_8157_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_78632_tokens));;
	if ((_8167_scopeTokens == nullptr)) {
		_1e69bcd48_pushErr(_self_, _7897_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	} else if ((_8157_i < _78632_tokens.len())) {
		_1e69bcd48_pushErr(_self_, _78632_tokens[_8157_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	jule::Ptr<_1e5cb50a8_ScopeTree> _8237_scope = _1e69bdae6_buildScope(_self_, &(_8167_scopeTokens), _78632_tokens[(_8157_i - 1LL)]);;
	(*(_8237_scope))._field_Unsafety=_7877_isUnsafe;
	(*_8237_scope.alloc)._field_Deferred=_7887_isDeferred;
	return _8237_scope;;
}



inline jule::Ptr<_1e5cb266b_LabelSt> _1e69c5e50_buildLabelSt(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _82933_tokens) {
	jule::Ptr<_1e5cb266b_LabelSt> _8307_lbl = jule::new_ptr<_1e5cb266b_LabelSt>(_1e5cb266b_LabelSt{._field_Token=(*(_82933_tokens))[0LL], ._field_Ident=(*((*(_82933_tokens))[0LL]))._field_Kind});;
	if (((*(_82933_tokens)).len() > 2LL)) {
		((*(_82933_tokens))).mut_slice(2LL);;
		_1e69bd464_insertAsNext(_self_, _82933_tokens);
	};
	return _8307_lbl;;
}



inline __jule_tuple__1e5cb46e5_StmtData__jule_tuple_bool _1e69c6291_buildIdSt(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _84430_tokens) {
	__jule_tuple__1e5cb46e5_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if (((*(_84430_tokens)).len() == 1LL)) {
		return __jule_func_result;;
	};
	jule::Ptr<_1e5c8eacc_Token> _8497_token = (*(_84430_tokens))[1LL];;
	{
		auto &_match_expr{ (*(_8497_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(8LLU)) {
			_case_begin_1cba741a0:;
			{
				__jule_func_result.__jule_result_arg0 = jule::Any(_1e69c5e50_buildLabelSt(_self_, _84430_tokens), &__jule_any_type63);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1cba7490e:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1e69d6c0d_assignInfo> _1e69c65d2_buildAssignInfo(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _85836_tokens) {
	jule::Ptr<_1e69d6c0d_assignInfo> _8597_info = jule::new_ptr<_1e69d6c0d_assignInfo>(_1e69d6c0d_assignInfo{._field_l=jule::Slice<jule::Ptr<_1e5c8eacc_Token>>(nullptr), ._field_r=jule::Slice<jule::Ptr<_1e5c8eacc_Token>>(nullptr), ._field_setter=jule::Ptr<_1e5c8eacc_Token>(nullptr), ._field_ok=true});;
	jule::I64 _8627_braceN = 0LL;;
	{
		auto expr = _85836_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cba761d5:;
		if (it != expr_end) {
			jule::I64 _8638_i = it - expr->begin();
			jule::Ptr<_1e5c8eacc_Token> _86315_token = *it;
			{
				{
					auto &_match_expr{ (*(_86315_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1cba76b20:;
						{
							(_8627_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1cba76ea5:;
						{
							(_8627_braceN)--;
						}
					}
					_match_end_1cba76da6:;
				};
				{
					
					if ((_8627_braceN > 0LL)) {
						_case_begin_1cba7810a:;
						{
							goto _iter_next_1cba761d5;
						}
					}
					else if (((!(_1e5c94928_IsAssignOp((*(_86315_token))._field_Id))) && ((*_86315_token.alloc)._field_Id != static_cast<jule::U64>(38LLU)))) {
						_case_begin_1cba78171:;
						{
							goto _iter_next_1cba761d5;
						}
					}
					_match_end_1cba78061:;
				};
				(*(_8597_info))._field_l=(*(_85836_tokens)).slice(0LL, _8638_i);
				if (((*_8597_info.alloc)._field_l.len() == 0LL)) {
					(*_8597_info.alloc)._field_ok=false;
				};
				(*_8597_info.alloc)._field_setter=_86315_token;
				if (((_8638_i + 1LL) >= (*(_85836_tokens)).len())) {
					(*_8597_info.alloc)._field_r=nullptr;
					(*_8597_info.alloc)._field_ok=_1e5c9465e_IsPostfixOp((*((*_8597_info.alloc)._field_setter))._field_Id);
					goto _iter_end_1cba761d5;
				};
				(*_8597_info.alloc)._field_r=(*(_85836_tokens)).slice((_8638_i + 1LL));
				if (_1e5c9465e_IsPostfixOp((*(*(_8597_info))._field_setter.alloc)._field_Id)) {
					if (((*_8597_info.alloc)._field_r.len() > 0LL)) {
						_1e69bcd48_pushErr(_self_, (*(_8597_info))._field_r[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
						(*_8597_info.alloc)._field_r=nullptr;
					};
				};
				goto _iter_end_1cba761d5;
			}
			_iter_next_1cba761d5:;
			++it;
			_8638_i++;
			goto _iter_begin_1cba761d5;
		}
		_iter_end_1cba761d5:;
	};
	return _8597_info;;
}



inline jule::Ptr<_1e5cb34a2_AssignLeft> _1e69c6923_buildAssignL(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _90333_tokens) {
	jule::Ptr<_1e5cb34a2_AssignLeft> _9047_l = jule::new_ptr<_1e5cb34a2_AssignLeft>(_1e5cb34a2_AssignLeft{._field_Token=(*(_90333_tokens))[0LL], ._field_Mutable=false, ._field_Reference=false, ._field_Ident=jule::Str(), ._field_Expr=jule::Ptr<_1e5ca93bb_Expr>(nullptr)});;
	if (((*((*(_90333_tokens))[0LL]))._field_Id == static_cast<jule::U64>(1LLU))) {
		(*(_9047_l))._field_Ident=(*((*_9047_l.alloc)._field_Token))._field_Kind;
	};
	(*_9047_l.alloc)._field_Expr=_1e69db295_buildExpr((*(_self_))._field_p, _90333_tokens);
	return _9047_l;;
}



inline jule::Slice<jule::Ptr<_1e5cb34a2_AssignLeft>> _1e69c6c64_buildAssignLs(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1e5c8eacc_Token>>>* _91434_parts) {
	jule::Slice<jule::Ptr<_1e5cb34a2_AssignLeft>> _91511_lefts = nullptr;;
	{
		auto expr = _91434_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cba8051e:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _91615_part = *it;
			{
				jule::Ptr<_1e5cb34a2_AssignLeft> _9178_l = _1e69c6923_buildAssignL(_self_, &(_91615_part));;
				{ jule::Slice<jule::Ptr<_1e5cb34a2_AssignLeft>> &__jule_push_dest = _91511_lefts; __jule_push_dest.push(_9178_l); };
			}
			_iter_next_1cba8051e:;
			++it;
			goto _iter_begin_1cba8051e;
		}
		_iter_end_1cba8051e:;
	};
	return _91511_lefts;;
}



inline __jule_tuple__1e5cb46e5_StmtData__jule_tuple_bool _1e69c70a5_buildPlainAssign(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _92337_tokens) {
	__jule_tuple__1e5cb46e5_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1e69d6c0d_assignInfo> _9247_info = _1e69c65d2_buildAssignInfo(_self_, _92337_tokens);;
	if ((!((*(_9247_info))._field_ok))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1e5cb3a35_AssignSt> _9297_assign = jule::new_ptr<_1e5cb3a35_AssignSt>(_1e5cb3a35_AssignSt{._field_Declarative=false, ._field_Setter=(*_9247_info.alloc)._field_setter, ._field_Left=jule::Slice<jule::Ptr<_1e5cb34a2_AssignLeft>>(nullptr), ._field_Right=jule::Ptr<_1e5ca93bb_Expr>(nullptr)});;
	if (((*((*_9247_info.alloc)._field_setter))._field_Id == static_cast<jule::U64>(38LLU))) {
		(*(_9297_assign))._field_Declarative=true;
		(*_9297_assign.alloc)._field_Right=_1e69db295_buildExpr((*(_self_))._field_p, &((*_9247_info.alloc)._field_r));
		jule::Bool _9374_ok = _1e69c74a1_buildDeclAssign1(_self_, &((*_9247_info.alloc)._field_l), &(_9297_assign));;
		if ((!(_9374_ok))) {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = true;
			return __jule_func_result;;
		};
		if (((*_9297_assign.alloc)._field_Left.len() > 1LL)) {
			__jule_func_result.__jule_result_arg0 = jule::Any(_9297_assign, &__jule_any_type65);
			__jule_func_result.__jule_result_arg1 = true;
			return __jule_func_result;;
		};
		jule::Ptr<_1e5cb34a2_AssignLeft> _9468_left = (*(_9297_assign))._field_Left[0LL];;
		{
			auto &_match_expr{ (*((*(_9468_left))._field_Expr))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type51) {
				_case_begin_1cba867de:;
				{
					jule::Ptr<_1e5cb7e02_VarDecl> _9499_decl = jule::new_ptr<_1e5cb7e02_VarDecl>(_1e5cb7e02_VarDecl{._field_Scope=(*(_self_))._field_s, ._field_Token=(*(_9468_left))._field_Token, ._field_Setter=(*_9297_assign.alloc)._field_Setter, ._field_Ident=(*_9468_left.alloc)._field_Ident, ._field_Binded=false, ._field_Public=false, ._field_Mutable=(*_9468_left.alloc)._field_Mutable, ._field_Constant=false, ._field_Statically=false, ._field_Reference=(*_9468_left.alloc)._field_Reference, ._field_Directives=jule::Slice<jule::Ptr<_1e5ca44a4_Directive>>(nullptr), ._field_Kind=jule::Ptr<_1e5ca5087_TypeDecl>(nullptr), ._field_Expr=(*_9297_assign.alloc)._field_Right});;
					__jule_func_result.__jule_result_arg0 = jule::Any(_9499_decl, &__jule_any_type16);
					__jule_func_result.__jule_result_arg1 = true;
					return __jule_func_result;;
				}
			}
			_match_end_1cba86778:;
		};
		__jule_func_result.__jule_result_arg0 = jule::Any(_9297_assign, &__jule_any_type65);
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1e5c8eacc_Token>>> _9637_parts;
	jule::Slice<_22578b38a_Log> _96314_errs;
	({
		__jule_tuple_ssx_1e5c8eacc_Token__jule_tuple_s_22578b38a_Log __jule_assign_result = _1e69d902e_parts(&((*_9247_info.alloc)._field_l), static_cast<jule::U64>(5LLU), true);
		_9637_parts = __jule_assign_result.__jule_result_arg0;
		_96314_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_96314_errs.len() > 0LL)) {
		(*(*(_self_))._field_p.alloc)._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_96314_errs);
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(*_9297_assign.alloc)._field_Left=_1e69c6c64_buildAssignLs(_self_, &(_9637_parts));
	if (((*_9247_info.alloc)._field_r != nullptr)) {
		(*_9297_assign.alloc)._field_Right=_1e69db295_buildExpr((*(_self_))._field_p, &((*_9247_info.alloc)._field_r));
	};
	__jule_func_result.__jule_result_arg0 = jule::Any(_9297_assign, &__jule_any_type65);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Bool _1e69c74a1_buildDeclAssign1(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _97737_lefts, jule::Ptr<_1e5cb3a35_AssignSt>* _97759_assign) {
	jule::Slice<jule::Slice<jule::Ptr<_1e5c8eacc_Token>>> _9797_parts;
	jule::Slice<_22578b38a_Log> _97914_errs;
	({
		__jule_tuple_ssx_1e5c8eacc_Token__jule_tuple_s_22578b38a_Log __jule_assign_result = _1e69d902e_parts(_97737_lefts, static_cast<jule::U64>(5LLU), true);
		_9797_parts = __jule_assign_result.__jule_result_arg0;
		_97914_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_97914_errs.len() > 0LL)) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_97914_errs);
		return false;;
	};
	{
		auto expr = &(_9797_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cba8c7b2:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _98515_part = *it;
			{
				jule::Bool _9868_isMut = false;;
				jule::Bool _9878_isRef = false;;
				jule::Ptr<_1e5c8eacc_Token> _9894_token = _98515_part[0LL];;
				if (((*(_9894_token))._field_Id == static_cast<jule::U64>(32LLU))) {
					_9868_isMut=true;
					(_98515_part).mut_slice(1LL);;
					if ((_98515_part.len() == 0LL)) {
						_1e69bcd48_pushErr(_self_, _9894_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
						return false;;
					};
				};
				if (((*(_98515_part[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
					_9878_isRef=true;
					(_98515_part).mut_slice(1LL);;
					if ((_98515_part.len() == 0LL)) {
						_1e69bcd48_pushErr(_self_, _9894_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
						return false;;
					};
				};
				if ((((*(_98515_part[0LL]))._field_Id != static_cast<jule::U64>(1LLU)) && ((*(_98515_part[0LL]))._field_Id != static_cast<jule::U64>(74LLU)))) {
					_1e69bcd48_pushErr(_self_, _9894_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
					return false;;
				};
				jule::Ptr<_1e5cb34a2_AssignLeft> _10138_l = _1e69c6923_buildAssignL(_self_, &(_98515_part));;
				if (((*(_10138_l))._field_Expr == nullptr)) {
					return false;;
				};
				(*_10138_l.alloc)._field_Mutable=_9868_isMut;
				(*_10138_l.alloc)._field_Reference=_9878_isRef;
				{ jule::Slice<jule::Ptr<_1e5cb34a2_AssignLeft>> &__jule_push_dest = (*((*(_97759_assign))))._field_Left; __jule_push_dest.push(_10138_l); };
			}
			_iter_next_1cba8c7b2:;
			++it;
			goto _iter_begin_1cba8c7b2;
		}
		_iter_end_1cba8c7b2:;
	};
	return true;;
}



inline __jule_tuple_x_1e5cb3a35_AssignSt__jule_tuple_bool _1e69c77e2_buildDeclAssign(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _102535_tokens) {
	__jule_tuple_x_1e5cb3a35_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_102535_tokens.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(_102535_tokens).mut_slice(1LL);;
	jule::Ptr<_1e5c8eacc_Token> _10317_token = _102535_tokens[0LL];;
	if (((*(_10317_token))._field_Id != static_cast<jule::U64>(74LLU))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1e5cb3a35_AssignSt> _10367_assign = jule::new_ptr<_1e5cb3a35_AssignSt>(_1e5cb3a35_AssignSt{._field_Declarative=true, ._field_Setter=jule::Ptr<_1e5c8eacc_Token>(nullptr), ._field_Left=jule::Slice<jule::Ptr<_1e5cb34a2_AssignLeft>>(nullptr), ._field_Right=jule::Ptr<_1e5ca93bb_Expr>(nullptr)});;
	jule::I64 _10407_i = 0LL;;
	jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _10417_rang = _1e69d87ae_range(&(_10407_i), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), &(_102535_tokens));;
	if ((_10417_rang == nullptr)) {
		_1e69bcd48_pushErr(_self_, _10317_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	} else if (((_10407_i + 1LL) < _102535_tokens.len())) {
		(*(_10367_assign))._field_Setter=_102535_tokens[_10407_i];
		if (((*((*_10367_assign.alloc)._field_Setter))._field_Id != static_cast<jule::U64>(71LLU))) {
			_1e69bcd48_pushErr(_self_, (*_10367_assign.alloc)._field_Setter, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		};
		(_10407_i)++;
		jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _10518_exprTokens = _102535_tokens.slice(_10407_i);;
		(*_10367_assign.alloc)._field_Right=_1e69db295_buildExpr((*(_self_))._field_p, &(_10518_exprTokens));
	};
	jule::Bool _10553_ok = _1e69c74a1_buildDeclAssign1(_self_, &(_10417_rang), &(_10367_assign));;
	__jule_func_result.__jule_result_arg0 = _10367_assign;
	__jule_func_result.__jule_result_arg1 = _10553_ok;
	return __jule_func_result;;
}



inline __jule_tuple__1e5cb46e5_StmtData__jule_tuple_bool _1e69c7b33_buildAssignSt(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _105934_tokens) {
	__jule_tuple__1e5cb46e5_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if ((!(_1e69d70b5_checkAssignTokens(_105934_tokens)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_105934_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1cba9d55e:;
			{
				({
					__jule_tuple_x_1e5cb3a35_AssignSt__jule_tuple_bool __jule_assign_result = _1e69c77e2_buildDeclAssign(_self_, (*(_105934_tokens)));
					__jule_func_result.__jule_result_arg0 = jule::Any(__jule_assign_result.__jule_result_arg0, &__jule_any_type65);
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1cba9c6d4:;
			{
				({
					__jule_tuple__1e5cb46e5_StmtData__jule_tuple_bool __jule_assign_result = _1e69c70a5_buildPlainAssign(_self_, _105934_tokens);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1cba9cb46:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1e5ca9c90_UseExpr> _1e69c7e74_buildUseExpr(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _107233_tokens) {
	if (((*(_107233_tokens)).len() == 1LL)) {
		_1e69bcd48_pushErr(_self_, (*(_107233_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
		return nullptr;;
	};
	jule::Ptr<_1e5ca9c90_UseExpr> _10777_ue = jule::new_ptr<_1e5ca9c90_UseExpr>(_1e5ca9c90_UseExpr{._field_Token=(*(_107233_tokens))[0LL], ._field_Expr=jule::Ptr<_1e5ca93bb_Expr>(nullptr)});;
	((*(_107233_tokens))).mut_slice(1LL);;
	(*(_10777_ue))._field_Expr=_1e69db295_buildExpr((*(_self_))._field_p, _107233_tokens);
	return _10777_ue;;
}



inline jule::Any _1e69c82b5_buildConstSt(_1e69bba7d_scopeParser* _self_, jule::Ptr<_1e69bb1dc_stmt>* _108533_st) {
	if (((*((*(_108533_st))))._field_tokens.len() == 1LL)) {
		_1e69bcd48_pushErr(_self_, (*((*(_108533_st))))._field_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_108533_st))))._field_tokens[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1cbaa2b7e:;
			{
				((*((*(_108533_st))))._field_tokens).mut_slice(1LL);;
				jule::Ptr<_1e5cb8a4b_Iter> _10938_iter = _1e69c1e4b_buildIterSt(_self_, _108533_st);;
				if ((_10938_iter != nullptr)) {
					(*_10938_iter.alloc)._field_Comptime=true;
				};
				return jule::Any(_10938_iter, &__jule_any_type61);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1cbaa2970:;
			{
				((*((*(_108533_st))))._field_tokens).mut_slice(1LL);;
				jule::Ptr<_1e5cbc874_MatchCase> _11008_mt = _1e69c57bd_buildMatchCase(_self_, (*((*(_108533_st))))._field_tokens);;
				if ((_11008_mt != nullptr)) {
					(*_11008_mt.alloc)._field_Comptime=true;
				};
				return jule::Any(_11008_mt, &__jule_any_type66);;
			}
		}
		else {
			_case_begin_1cbaa1c7c:;
			{
				return jule::Any(_1e69bde37_buildVarSt(_self_, &((*((*(_108533_st))))._field_tokens)), &__jule_any_type16);;
			}
		}
		_match_end_1cbaa24b9:;
	};
}



inline jule::Any _1e69c8606_buildSt(_1e69bba7d_scopeParser* _self_, jule::Ptr<_1e69bb1dc_stmt>* _111028_st) {
	jule::Ptr<_1e5c8eacc_Token> _11117_token = (*((*(_111028_st))))._field_tokens[0LL];;
	if (((*(_11117_token))._field_Id == static_cast<jule::U64>(1LLU))) {
		jule::Any _11138_s;
		jule::Bool _111311_ok;
		({
			__jule_tuple__1e5cb46e5_StmtData__jule_tuple_bool __jule_assign_result = _1e69c6291_buildIdSt(_self_, &((*((*(_111028_st))))._field_tokens));
			_11138_s = __jule_assign_result.__jule_result_arg0;
			_111311_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_111311_ok) {
			return _11138_s;;
		};
	};
	jule::Any _11197_s;
	jule::Bool _111910_ok;
	({
		__jule_tuple__1e5cb46e5_StmtData__jule_tuple_bool __jule_assign_result = _1e69c7b33_buildAssignSt(_self_, &((*((*(_111028_st))))._field_tokens));
		_11197_s = __jule_assign_result.__jule_result_arg0;
		_111910_ok = __jule_assign_result.__jule_result_arg1;
	});
	if (_111910_ok) {
		return _11197_s;;
	};
	{
		auto &_match_expr{ (*(_11117_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1cbaa8aa8:;
			{
				return jule::Any(_1e69c7e74_buildUseExpr(_self_, &((*((*(_111028_st))))._field_tokens)), &__jule_any_type70);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1cbaa8932:;
			{
				return _1e69c82b5_buildConstSt(_self_, _111028_st);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(30LLU) || _match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1cbaa8d1c:;
			{
				return jule::Any(_1e69bde37_buildVarSt(_self_, &((*((*(_111028_st))))._field_tokens)), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1cbaa8d83:;
			{
				return jule::Any(_1e69be278_buildRetSt(_self_, (*((*(_111028_st))))._field_tokens), &__jule_any_type69);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1cbaa8de9:;
			{
				return jule::Any(_1e69c1e4b_buildIterSt(_self_, _111028_st), &__jule_any_type61);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1cbaa8e60:;
			{
				return jule::Any(_1e69c228c_buildBreakSt(_self_, &((*((*(_111028_st))))._field_tokens)), &__jule_any_type68);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1cbaa8ec6:;
			{
				return jule::Any(_1e69c25cd_buildContSt(_self_, &((*((*(_111028_st))))._field_tokens)), &__jule_any_type62);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(13LLU)) {
			_case_begin_1cbaa904d:;
			{
				return jule::Any(_1e69c30a1_buildIfElseChain(_self_, (*((*(_111028_st))))._field_tokens), &__jule_any_type60);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1cbaa90c5:;
			{
				return jule::Any(_1e69c33e2_buildCoCallSt(_self_, (*((*(_111028_st))))._field_tokens), &__jule_any_type59);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(18LLU)) {
			_case_begin_1cbaa914c:;
			{
				return jule::Any(_1e69c3733_buildGotoSt(_self_, &((*((*(_111028_st))))._field_tokens)), &__jule_any_type64);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(28LLU)) {
			_case_begin_1cbaa91c4:;
			{
				return jule::Any(_1e69c3a74_buildFallSt(_self_, &((*((*(_111028_st))))._field_tokens)), &__jule_any_type67);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1cbaa924b:;
			{
				return jule::Any(_1e69c3db5_buildTypeAliasSt(_self_, &((*((*(_111028_st))))._field_tokens)), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1cbaa92c3:;
			{
				return jule::Any(_1e69c57bd_buildMatchCase(_self_, (*((*(_111028_st))))._field_tokens), &__jule_any_type66);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1cbaa934a:;
			{
				if (((*((*(_111028_st))))._field_tokens.len() < 1LL)) {
					goto _match_end_1cbaa8767;
				};
				if ((((*((*((*(_111028_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U64>(33LLU)) || ((*((*((*(_111028_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U64>(72LLU)))) {
					return jule::Any(_1e69c5b0e_buildScopeSt(_self_, (*((*(_111028_st))))._field_tokens), &__jule_any_type58);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1cbaa93c2:;
			{
				return jule::Any(_1e69c5b0e_buildScopeSt(_self_, (*((*(_111028_st))))._field_tokens), &__jule_any_type58);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1cbaa9449:;
			{
				return jule::Any(_1e69c5b0e_buildScopeSt(_self_, (*((*(_111028_st))))._field_tokens), &__jule_any_type58);;
			}
		}
		_match_end_1cbaa8767:;
	};
	jule::Ptr<_1e5ca93bb_Expr> _11667_expr = _1e69db295_buildExpr((*(_self_))._field_p, &((*((*(_111028_st))))._field_tokens));;
	if ((_11667_expr != nullptr)) {
		return jule::Any(_11667_expr, &__jule_any_type59);;
	};
	_1e69bcd48_pushErr(_self_, _11117_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	return nullptr;;
}



inline void _1e69c8969_build(_1e69bba7d_scopeParser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _117426_tokens, jule::Ptr<_1e5cb50a8_ScopeTree>* _117449_s) {
	if (((*(_117449_s)) == nullptr)) {
		return;;
	};
	(*(_self_))._field_stmts=_1e69bb594_splitStmts(_117426_tokens);
	(*(_self_))._field_pos=-1LL;
	(*(_self_))._field_s=(*(_117449_s));
	while (((!(_1e69bc9d5_isLastSt(_self_))) && (!(_1e69bc74e_finished(_self_))))) {
		{
			jule::Ptr<_1e69bb1dc_stmt> _11828_st = _1e69bd6ea_next(_self_);;
			jule::Any _11838_data = _1e69c8606_buildSt(_self_, &(_11828_st));;
			if ((_11838_data != nullptr)) {
				(*((*(_self_))._field_s))._field_Stmts=jule::append((*(*(_self_))._field_s.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<_1e5cb4948_Stmt>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1e5cb4948_Stmt{._field_Token=(*(_11828_st))._field_tokens[0LL], ._field_Data=_11838_data}; __jule_collection; }));
			};
			if (_1e69bc4b8_stopped(_self_)) {
				goto _iter_end_1cbab6698;
			};
		}
	_iter_next_1cbab6698:;
	}
	_iter_end_1cbab6698:;;
}








inline jule::Bool _1e69c94e7_exprBuilder_eq(_1e69c94e7_exprBuilder *_self_, _1e69c94e7_exprBuilder _other_) {
	return 
		(_self_->_field_p == _other_._field_p);
}

inline void _1e69c9cbc_pushErr(_1e69c94e7_exprBuilder* _self_, jule::Ptr<_1e5c8eacc_Token> _4523_token, jule::Str _4538_fmt, jule::Slice<jule::Any> _4551_args) {
	_1e69daae1_pushErr((*(_self_))._field_p.ptr(), _4523_token, _4538_fmt, _4551_args);
}



inline void _1e69ca130_pushSuggestion(_1e69c94e7_exprBuilder* _self_, jule::Str _5030_fmt, jule::Slice<jule::Any> _5043_args) {
	_1e69dae54_pushSuggestion((*(_self_))._field_p.ptr(), _5030_fmt, _5043_args);
}



inline jule::Ptr<_1e5ca9eb0_TupleExpr> _1e69ca471_buildTuple(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1e5c8eacc_Token>>>* _5431_parts) {
	jule::Ptr<_1e5ca9eb0_TupleExpr> _557_tuple = jule::new_ptr<_1e5ca9eb0_TupleExpr>(_1e5ca9eb0_TupleExpr{._field_Expr=({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5ca93bb_Expr>>::alloc(0LL, (*(_5431_parts)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1e5ca93bb_Expr>(nullptr); __jule_collection; })});;
	{
		auto expr = _5431_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbada7bb:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _5815_part = *it;
			{
				(*(_557_tuple))._field_Expr=jule::append((*_557_tuple.alloc)._field_Expr,({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5ca93bb_Expr>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1e69d4865_buildFromTokens(_self_, _5815_part); __jule_collection; }));
			}
			_iter_next_1cbada7bb:;
			++it;
			goto _iter_begin_1cbada7bb;
		}
		_iter_end_1cbada7bb:;
	};
	return _557_tuple;;
}



inline jule::Ptr<_1e5caa356_LitExpr> _1e69ca7b2_buildLit(_1e69c94e7_exprBuilder* _self_, jule::Ptr<_1e5c8eacc_Token> _6424_token) {
	return jule::new_ptr<_1e5caa356_LitExpr>(_1e5caa356_LitExpr{._field_Token=_6424_token, ._field_Value=(*(_6424_token))._field_Kind});;
}



inline jule::Any _1e69cae44_buildSingle(_1e69c94e7_exprBuilder* _self_, jule::Ptr<_1e5c8eacc_Token> _7531_token) {
	{
		auto &_match_expr{ (*(_7531_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(4LLU)) {
			_case_begin_1cbadd4b1:;
			{
				return jule::Any(_1e69ca7b2_buildLit(_self_, _7531_token), &__jule_any_type104);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(39LLU)) {
			_case_begin_1cbadd538:;
			{
				return jule::Any(jule::new_ptr<_1e5cab852_VariadicExpr>(_1e5cab852_VariadicExpr{._field_Token=_7531_token, ._field_Expr=jule::Ptr<_1e5ca93bb_Expr>(nullptr)}), &__jule_any_type78);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU) || _match_expr == static_cast<jule::U64>(24LLU) || _match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_1cbadd59e:;
			{
				return jule::Any(_1e69d5c1d_buildIdentExpr(&(_7531_token)), &__jule_any_type51);;
			}
		}
		_match_end_1cbadd3e5:;
	};
	_1e69c9cbc_pushErr(_self_, _7531_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1e5caabd6_IdentExpr> _1e69cb285_buildBindIdent(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _9235_tokens) {
	if (((*((*(_9235_tokens))[0LL]))._field_Id != static_cast<jule::U64>(27LLU))) {
		return nullptr;;
	} else if (((*((*(_9235_tokens))[1LL]))._field_Id != static_cast<jule::U64>(17LLU))) {
		_1e69c9cbc_pushErr(_self_, (*(_9235_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1e69ca130_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use dot (.) to access binded defines", 36)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1e5c8eacc_Token> _1007_token = (*(_9235_tokens))[2LL];;
	if (((*(_1007_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1e69c9cbc_pushErr(_self_, (*(_9235_tokens))[2LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1e69ca130_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1e5caabd6_IdentExpr> _1067_expr = _1e69d5c1d_buildIdentExpr(&(_1007_token));;
	(*(_1067_expr))._field_Binded=true;
	return _1067_expr;;
}



inline jule::Ptr<_1e5cab478_UnaryExpr> _1e69cb5c6_buildUnary(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _11130_tokens) {
	jule::Ptr<_1e5c8eacc_Token> _1127_op = _11130_tokens[0LL];;
	if ((_11130_tokens.len() == 1LL)) {
		_1e69c9cbc_pushErr(_self_, _1127_op, static_cast<jule::Str>(jule::Str::lit("missing expression for unary operator", 37)), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((!(_1e5c90319_IsUnaryOp((*(_1127_op))._field_Id)))) {
		_1e69c9cbc_pushErr(_self_, _1127_op, static_cast<jule::Str>(jule::Str::lit("invalid unary operator: @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_1127_op.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	(_11130_tokens).mut_slice(1LL);;
	return jule::new_ptr<_1e5cab478_UnaryExpr>(_1e5cab478_UnaryExpr{._field_Op=_1127_op, ._field_Expr=_1e69d4865_buildFromTokens(_self_, _11130_tokens)});;
}



inline jule::Ptr<_1e5cac4ce_SubIdentExpr> _1e69cb917_buildObjSubIdent(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _13236_tokens) {
	jule::I64 _1337_i = (_13236_tokens.len() - 1LL);;
	jule::Ptr<_1e5c8eacc_Token> _1347_identToken = _13236_tokens[_1337_i];;
	(_1337_i)--;
	(_13236_tokens).mut_slice(0LL, _1337_i);;
	if ((_13236_tokens.len() == 0LL)) {
		_1e69c9cbc_pushErr(_self_, _1347_identToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1e5cac4ce_SubIdentExpr>(_1e5cac4ce_SubIdentExpr{._field_Expr=_1e69d4865_buildFromTokens(_self_, _13236_tokens), ._field_Ident=_1347_identToken});;
}



inline jule::Ptr<_1e5cac105_NsSelectionExpr> _1e69cbc58_buildNsSubIdent(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _14736_tokens) {
	jule::Ptr<_1e5cac105_NsSelectionExpr> _1487_ns = jule::new_ptr<_1e5cac105_NsSelectionExpr>(_1e5cac105_NsSelectionExpr{._field_Ns=jule::Slice<jule::Ptr<_1e5c8eacc_Token>>(nullptr), ._field_Ident=jule::Ptr<_1e5c8eacc_Token>(nullptr)});;
	if ((((*(_14736_tokens)).len() == 3LL) && ((*((*(_14736_tokens))[0LL]))._field_Id == static_cast<jule::U64>(31LLU)))) {
		(*_1487_ns.alloc)._field_Ns=(*(_14736_tokens)).slice(0LL, 1LL);
		(*_1487_ns.alloc)._field_Ident=(*(_14736_tokens))[2LL];
	} else {
		{
			auto expr = _14736_tokens;
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1cbaea59a:;
			if (it != expr_end) {
				jule::I64 _1549_i = it - expr->begin();
				jule::Ptr<_1e5c8eacc_Token> _15416_token = *it;
				{
					if (((_1549_i & 1LL) == 0LL)) {
						if (((*(_15416_token))._field_Id != static_cast<jule::U64>(1LLU))) {
							_1e69c9cbc_pushErr(_self_, _15416_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
							_1e69ca130_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
						};
						(*_1487_ns.alloc)._field_Ns=jule::append((*_1487_ns.alloc)._field_Ns,({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5c8eacc_Token>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _15416_token; __jule_collection; }));
					} else if (((*(_15416_token))._field_Id != static_cast<jule::U64>(19LLU))) {
						_1e69c9cbc_pushErr(_self_, _15416_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
						_1e69ca130_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected double colon \"::\"", 26)), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1cbaea59a:;
				++it;
				_1549_i++;
				goto _iter_begin_1cbaea59a;
			}
			_iter_end_1cbaea59a:;
		};
		(*_1487_ns.alloc)._field_Ident=(*_1487_ns.alloc)._field_Ns[((*_1487_ns.alloc)._field_Ns.len() - 1LL)];
		((*(_1487_ns))._field_Ns).mut_slice(0LL, ((*(_1487_ns))._field_Ns.len() - 1LL));;
	};
	return _1487_ns;;
}



inline jule::Ptr<_1e5ca5087_TypeDecl> _1e69cc099_buildType(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _17230_tokens) {
	jule::I64 _1737_i = 0LL;;
	jule::Ptr<_1e5ca5087_TypeDecl> _1747_t;
	jule::Bool _17410_ok;
	({
		__jule_tuple_x_1e5ca5087_TypeDecl__jule_tuple_bool __jule_assign_result = _1e69dc6e7_buildType((*(_self_))._field_p, _17230_tokens, (&(_1737_i)), false);
		_1747_t = __jule_assign_result.__jule_result_arg0;
		_17410_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_17410_ok))) {
		_1e69c9cbc_pushErr(_self_, (*(_17230_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_1737_i < (*(_17230_tokens)).len())) {
		_1e69c9cbc_pushErr(_self_, (*(_17230_tokens))[_1737_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	return _1747_t;;
}



inline jule::Any _1e69cc3da_buildSubIdent(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _18634_tokens) {
	jule::I64 _1873_i = ((*(_18634_tokens)).len() - 2LL);;
	jule::Ptr<_1e5c8eacc_Token> _1883_token = (*(_18634_tokens))[_1873_i];;
	{
		auto &_match_expr{ (*(_1883_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(17LLU)) {
			_case_begin_1cbb03b9c:;
			{
				return jule::Any(_1e69cb917_buildObjSubIdent(_self_, (*(_18634_tokens))), &__jule_any_type88);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1cbb042c9:;
			{
				return jule::Any(_1e69cbc58_buildNsSubIdent(_self_, _18634_tokens), &__jule_any_type92);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1cbb04340:;
			{
				return jule::Any(_1e69cc099_buildType(_self_, _18634_tokens), &__jule_any_type91);;
			}
		}
		_match_end_1cbb041a8:;
	};
	if (_1e69d63b1_isAnonFnHead(_18634_tokens)) {
		return jule::Any(_1e69cc099_buildType(_self_, _18634_tokens), &__jule_any_type91);;
	};
	_1e69c9cbc_pushErr(_self_, _1883_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1e5cab852_VariadicExpr> _1e69cc72b_buildVariadic(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _20833_tokens) {
	jule::Ptr<_1e5c8eacc_Token> _2097_token = _20833_tokens[(_20833_tokens.len() - 1LL)];;
	(_20833_tokens).mut_slice(0LL, (_20833_tokens.len() - 1LL));;
	return jule::new_ptr<_1e5cab852_VariadicExpr>(_1e5cab852_VariadicExpr{._field_Token=_2097_token, ._field_Expr=_1e69d4865_buildFromTokens(_self_, _20833_tokens)});;
}



inline jule::Ptr<_1e5ca9685_RangeExpr> _1e69cca6c_buildBetweenParentheses(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _21743_tokens) {
	if ((_21743_tokens.len() == 2LL)) {
		_1e69c9cbc_pushErr(_self_, _21743_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		_1e69ca130_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("empty parentheses are not valid expression, must include an expression in range", 79)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_21743_tokens).mut_slice(1LL, (_21743_tokens.len() - 1LL));;
	return jule::new_ptr<_1e5ca9685_RangeExpr>(_1e5ca9685_RangeExpr{._field_Expr=_1e69d4865_buildFromTokens(_self_, _21743_tokens)});;
}



inline jule::Ptr<_1e5cabc2b_CastExpr> _1e69ccdad_tryBuildCast(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _22933_tokens) {
	jule::I64 _2307_rangeN = 0LL;;
	{
		auto expr = _22933_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbb09dc3:;
		if (it != expr_end) {
			jule::I64 _2317_i = it - expr->begin();
			jule::Ptr<_1e5c8eacc_Token> _23110_token = *it;
			{
				{
					auto &_match_expr{ (*(_23110_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1cbb0a764:;
						{
							(_2307_rangeN)++;
							goto _iter_next_1cbb09dc3;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1cbb0ab4e:;
						{
							(_2307_rangeN)--;
						}
					}
					_match_end_1cbb0aa50:;
				};
				if ((_2307_rangeN > 0LL)) {
					goto _iter_next_1cbb09dc3;
				} else if (((_2317_i + 1LL) == (*(_22933_tokens)).len())) {
					return nullptr;;
				};
				jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _2508_typeTokens = (*(_22933_tokens)).slice(0LL, (_2317_i + 1LL));;
				jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _2518_exprTokens = (*(_22933_tokens)).slice((_2317_i + 1LL));;
				if ((_2518_exprTokens.len() == 0LL)) {
					return nullptr;;
				};
				jule::Ptr<_1e5c8eacc_Token> _2584_tok = _2518_exprTokens[0LL];;
				if (((*(_2584_tok))._field_Id != static_cast<jule::U64>(74LLU))) {
					return nullptr;;
				};
				jule::Ptr<_1e5cabc2b_CastExpr> _2638_cast = jule::new_ptr<_1e5cabc2b_CastExpr>(_1e5cabc2b_CastExpr{._field_Kind=jule::Ptr<_1e5ca5087_TypeDecl>(nullptr), ._field_Expr=jule::Ptr<_1e5ca93bb_Expr>(nullptr)});;
				if ((_2518_exprTokens.len() == 2LL)) {
					_1e69c9cbc_pushErr(_self_, _2518_exprTokens[0LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
					_1e69ca130_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("give an expression for casting", 30)), jule::Slice<jule::Any>());
				};
				if ((_2508_typeTokens.len() == 2LL)) {
					_1e69c9cbc_pushErr(_self_, _2508_typeTokens[0LL], static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
					_1e69ca130_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("type declaration expected for casting", 37)), jule::Slice<jule::Any>());
				} else {
					(_2508_typeTokens).mut_slice(1LL, (_2508_typeTokens.len() - 1LL));;
					jule::I64 _2779_typeIndex = 0LL;;
					jule::Ptr<_1e5ca5087_TypeDecl> _2789_t;
					jule::Bool _27812_ok;
					({
						__jule_tuple_x_1e5ca5087_TypeDecl__jule_tuple_bool __jule_assign_result = _1e69dc6e7_buildType((*(_self_))._field_p, &(_2508_typeTokens), (&(_2779_typeIndex)), true);
						_2789_t = __jule_assign_result.__jule_result_arg0;
						_27812_ok = __jule_assign_result.__jule_result_arg1;
					});
					if ((_27812_ok && (_2779_typeIndex < _2508_typeTokens.len()))) {
						_1e69c9cbc_pushErr(_self_, _2508_typeTokens[_2779_typeIndex], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					} else if ((!(_27812_ok))) {
						return _2638_cast;;
					};
					(*(_2638_cast))._field_Kind=_2789_t;
					if ((_2518_exprTokens.len() > 2LL)) {
						jule::I64 _28810_j = 0LL;;
						_1e69d87ae_range(&(_28810_j), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), &(_2518_exprTokens));
						if ((_28810_j < _2518_exprTokens.len())) {
							return nullptr;;
						};
						(_2518_exprTokens).mut_slice(0LL, _28810_j);;
						(*_2638_cast.alloc)._field_Expr=_1e69d4865_buildFromTokens(_self_, _2518_exprTokens);
					};
				};
				return _2638_cast;;
			}
			_iter_next_1cbb09dc3:;
			++it;
			_2317_i++;
			goto _iter_begin_1cbb09dc3;
		}
		_iter_end_1cbb09dc3:;
	};
	return nullptr;;
}



inline void _1e69cd2cb_pushArg(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5ca93bb_Expr>>* _30328_args, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _30347_tokens, jule::Ptr<_1e5c8eacc_Token> _30365_err_token) {
	if ((_30347_tokens.len() == 0LL)) {
		_1e69c9cbc_pushErr(_self_, _30365_err_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1e69ca130_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("an expression expected", 22)), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Ptr<_1e5ca93bb_Expr>> &__jule_push_dest = (*(_30328_args)); __jule_push_dest.push(_1e69d4865_buildFromTokens(_self_, _30347_tokens)); };
}



inline jule::Slice<jule::Ptr<_1e5ca93bb_Expr>> _1e69cd61c_buildArgs(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _31229_tokens) {
	if ((_31229_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1e5ca93bb_Expr>> _31811_args = nullptr;;
	jule::I64 _3197_last = 0LL;;
	jule::I64 _3207_rangeN = 0LL;;
	(_31229_tokens).mut_slice(1LL, (_31229_tokens.len() - 1LL));;
	{
		auto expr = &(_31229_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbb1d645:;
		if (it != expr_end) {
			jule::I64 _3227_i = it - expr->begin();
			jule::Ptr<_1e5c8eacc_Token> _32210_token = *it;
			{
				{
					auto &_match_expr{ (*(_32210_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1cbb1e327:;
						{
							(_3207_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1cbb1e712:;
						{
							(_3207_rangeN)--;
						}
					}
					_match_end_1cbb1e613:;
				};
				if (((_3207_rangeN > 0LL) || ((*(_32210_token))._field_Id != static_cast<jule::U64>(5LLU)))) {
					goto _iter_next_1cbb1d645;
				};
				_1e69cd2cb_pushArg(_self_, &(_31811_args), _31229_tokens.slice(_3197_last, _3227_i), _32210_token);
				_3197_last=(_3227_i + 1LL);
			}
			_iter_next_1cbb1d645:;
			++it;
			_3227_i++;
			goto _iter_begin_1cbb1d645;
		}
		_iter_end_1cbb1d645:;
	};
	if ((_3197_last < _31229_tokens.len())) {
		if ((_3197_last == 0LL)) {
			if ((_31229_tokens.len() > 0LL)) {
				_1e69cd2cb_pushArg(_self_, &(_31811_args), _31229_tokens.slice(_3197_last), _31229_tokens[_3197_last]);
			};
		} else {
			_1e69cd2cb_pushArg(_self_, &(_31811_args), _31229_tokens.slice(_3197_last), _31229_tokens[(_3197_last - 1LL)]);
		};
	};
	return _31811_args;;
}



inline jule::Ptr<_1e5cad0e5_FnCallExpr> _1e69cde14_buildFnCall(_1e69c94e7_exprBuilder* _self_, jule::Ptr<_1e5c8eacc_Token>* _37832_token, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _37852_expr, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _37873_args) {
	return jule::new_ptr<_1e5cad0e5_FnCallExpr>(_1e5cad0e5_FnCallExpr{._field_Token=(*(_37832_token)), ._field_Expr=_1e69d4865_buildFromTokens(_self_, (*(_37852_expr))), ._field_Args=_1e69cd61c_buildArgs(_self_, (*(_37873_args))), ._field_Exception=jule::Ptr<_1e5cb50a8_ScopeTree>(nullptr), ._field_IsCo=false});;
}



inline jule::Any _1e69ce255_buildParenthesesRange(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _38642_tokens) {
	jule::Ptr<_1e5c8eacc_Token> _3877_token = (*(_38642_tokens))[0LL];;
	if (((*(_3877_token))._field_Id == static_cast<jule::U64>(74LLU))) {
		jule::Ptr<_1e5cabc2b_CastExpr> _3898_expr = _1e69ccdad_tryBuildCast(_self_, _38642_tokens);;
		if ((_3898_expr != nullptr)) {
			return jule::Any(_3898_expr, &__jule_any_type108);;
		};
	};
	jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _3947_exprTokens;
	jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _39423_argsTokens;
	({
		__jule_tuple_sx_1e5c8eacc_Token__jule_tuple_sx_1e5c8eacc_Token __jule_assign_result = _1e69d8a78_rangeLast(_38642_tokens);
		_3947_exprTokens = __jule_assign_result.__jule_result_arg0;
		_39423_argsTokens = __jule_assign_result.__jule_result_arg1;
	});
	if ((_3947_exprTokens.len() == 0LL)) {
		return jule::Any(_1e69cca6c_buildBetweenParentheses(_self_, _39423_argsTokens), &__jule_any_type103);;
	};
	if (_1e69d63b1_isAnonFnHead(&(_3947_exprTokens))) {
		return jule::Any(_1e69cc099_buildType(_self_, _38642_tokens), &__jule_any_type91);;
	};
	return jule::Any(_1e69cde14_buildFnCall(_self_, &(_3877_token), &(_3947_exprTokens), &(_39423_argsTokens)), &__jule_any_type84);;
}



inline jule::Ptr<_1e5caa730_UnsafeExpr> _1e69ce596_buildUnsafeExpr(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _40835_tokens) {
	jule::Ptr<_1e5c8eacc_Token> _4097_token = _40835_tokens[0LL];;
	(_40835_tokens).mut_slice(1LL);;
	jule::I64 _4117_i = 0LL;;
	jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _4127_rangeTokens = _1e69d87ae_range(&(_4117_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_40835_tokens));;
	if ((_4127_rangeTokens.len() == 0LL)) {
		_1e69c9cbc_pushErr(_self_, _40835_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1e5caa730_UnsafeExpr>(_1e5caa730_UnsafeExpr{._field_Token=_4097_token, ._field_Expr=_1e69d4865_buildFromTokens(_self_, _4127_rangeTokens)});;
}



inline jule::Ptr<_1e5cb6c47_FnDecl> _1e69ce8d7_buildAnonFn(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _42332_tokens) {
	jule::Ptr<_1e5cb6c47_FnDecl> _4247_f = _1e69e1c7e_buildFn((*(_self_))._field_p, _42332_tokens, false, false);;
	if ((!(_1e5cb70dd_IsAnon(_4247_f.ptr())))) {
		_1e69c9cbc_pushErr(_self_, (*_4247_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1e69ca130_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("anonymous function expected, remove identifier of function", 58)), jule::Slice<jule::Any>());
	};
	return _4247_f;;
}



inline jule::Any _1e69cec28_buildUnsafe(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _43232_tokens) {
	{
		auto &_match_expr{ (*((*(_43232_tokens))[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1cbb3225d:;
			{
				return jule::Any(_1e69ce8d7_buildAnonFn(_self_, _43232_tokens), &__jule_any_type14);;
			}
		}
		else {
			_case_begin_1cbb31603:;
			{
				return jule::Any(_1e69ce596_buildUnsafeExpr(_self_, (*(_43232_tokens))), &__jule_any_type105);;
			}
		}
		_match_end_1cbb31a43:;
	};
}



inline void _1e69d0146_pushRangeLitPart(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _44236_part, jule::Ptr<_1e5c8eacc_Token> _4433_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1e5c8eacc_Token>>>* _44328_parts) {
	if ((_44236_part.len() == 0LL)) {
		_1e69c9cbc_pushErr(_self_, _4433_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1e69ca130_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("an expression expected", 22)), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Slice<jule::Ptr<_1e5c8eacc_Token>>> &__jule_push_dest = (*(_44328_parts)); __jule_push_dest.push(_44236_part); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1e5c8eacc_Token>>> _1e69d0487_getBraceRangeLitExprParts(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _45345_tokens) {
	if ((_45345_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1e5c8eacc_Token>>> _45911_parts = nullptr;;
	jule::I64 _4617_last = 0LL;;
	jule::I64 _4627_rangeN = 0LL;;
	(_45345_tokens).mut_slice(1LL, (_45345_tokens.len() - 1LL));;
	{
		auto expr = &(_45345_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbb359e2:;
		if (it != expr_end) {
			jule::I64 _4647_i = it - expr->begin();
			jule::Ptr<_1e5c8eacc_Token> _46410_token = *it;
			{
				{
					auto &_match_expr{ (*(_46410_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1cbb366c4:;
						{
							(_4627_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1cbb36aae:;
						{
							(_4627_rangeN)--;
						}
					}
					_match_end_1cbb369b0:;
				};
				if (((_4627_rangeN > 0LL) || ((*(_46410_token))._field_Id != static_cast<jule::U64>(5LLU)))) {
					goto _iter_next_1cbb359e2;
				};
				_1e69d0146_pushRangeLitPart(_self_, _45345_tokens.slice(_4617_last, _4647_i), _46410_token, &(_45911_parts));
				_4617_last=(_4647_i + 1LL);
			}
			_iter_next_1cbb359e2:;
			++it;
			_4647_i++;
			goto _iter_begin_1cbb359e2;
		}
		_iter_end_1cbb359e2:;
	};
	if ((_4617_last < _45345_tokens.len())) {
		if ((_4617_last == 0LL)) {
			if ((_45345_tokens.len() > 0LL)) {
				_1e69d0146_pushRangeLitPart(_self_, _45345_tokens.slice(_4617_last), _45345_tokens[_4617_last], &(_45911_parts));
			};
		} else {
			_1e69d0146_pushRangeLitPart(_self_, _45345_tokens.slice(_4617_last), _45345_tokens[(_4617_last - 1LL)], &(_45911_parts));
		};
	};
	return _45911_parts;;
}



inline jule::Ptr<_1e5cadada_FieldExprPair> _1e69d07c8_buildFieldExprPair(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _49538_tokens) {
	if (((_49538_tokens.len() - 2LL) == 0LL)) {
		_1e69c9cbc_pushErr(_self_, _49538_tokens[1LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1e5cadada_FieldExprPair> _5007_pair = jule::new_ptr<_1e5cadada_FieldExprPair>(_1e5cadada_FieldExprPair{._field_Field=_49538_tokens[0LL], ._field_Expr=jule::Ptr<_1e5ca93bb_Expr>(nullptr)});;
	(_49538_tokens).mut_slice(2LL);;
	(*(_5007_pair))._field_Expr=_1e69d4865_buildFromTokens(_self_, _49538_tokens);
	return _5007_pair;;
}



inline jule::Ptr<_1e5ca93bb_Expr> _1e69d0b19_buildStructLitExpr(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _50839_tokens) {
	jule::Ptr<_1e5c8eacc_Token> _5097_token = (*(_50839_tokens))[0LL];;
	if ((((*(_5097_token))._field_Id == static_cast<jule::U64>(1LLU)) && ((*(_50839_tokens)).len() > 1LL))) {
		_5097_token=(*(_50839_tokens))[1LL];
		if (((*_5097_token.alloc)._field_Id == static_cast<jule::U64>(8LLU))) {
			return jule::new_ptr<_1e5ca93bb_Expr>(_1e5ca93bb_Expr{._field_Token=_5097_token, ._field_End=(*(_50839_tokens))[((*(_50839_tokens)).len() - 1LL)], ._field_Kind=jule::Any(_1e69d07c8_buildFieldExprPair(_self_, (*(_50839_tokens))), &__jule_any_type80)});;
		};
	};
	return _1e69d4865_buildFromTokens(_self_, (*(_50839_tokens)));;
}



inline jule::Slice<jule::Ptr<_1e5ca93bb_Expr>> _1e69d0e5a_buildStructLitExprs(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _52340_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1e5c8eacc_Token>>> _5247_parts = _1e69d0487_getBraceRangeLitExprParts(_self_, (*(_52340_tokens)));;
	if ((_5247_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1e5ca93bb_Expr>> _5297_pairs = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5ca93bb_Expr>>::alloc(0LL, _5247_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1e5ca93bb_Expr>(nullptr); __jule_collection; });;
	{
		auto expr = &(_5247_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbb403c0:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _53015_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1e5ca93bb_Expr>> &__jule_push_dest = _5297_pairs; __jule_push_dest.push(_1e69d0b19_buildStructLitExpr(_self_, &(_53015_part))); };
			}
			_iter_next_1cbb403c0:;
			++it;
			goto _iter_begin_1cbb403c0;
		}
		_iter_end_1cbb403c0:;
	};
	return _5297_pairs;;
}



inline jule::Ptr<_1e5cae415_StructLit> _1e69d129b_buildTypedStructLiteral(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _53643_tokens) {
	jule::I64 _5377_i = 0LL;;
	jule::Ptr<_1e5ca5087_TypeDecl> _5387_t;
	jule::Bool _53810_ok;
	({
		__jule_tuple_x_1e5ca5087_TypeDecl__jule_tuple_bool __jule_assign_result = _1e69dc6e7_buildType((*(_self_))._field_p, &(_53643_tokens), (&(_5377_i)), true);
		_5387_t = __jule_assign_result.__jule_result_arg0;
		_53810_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_53810_ok))) {
		return nullptr;;
	} else if ((_5377_i >= _53643_tokens.len())) {
		_1e69c9cbc_pushErr(_self_, _53643_tokens[_5377_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_53643_tokens).mut_slice(_5377_i);;
	jule::Ptr<_1e5c8eacc_Token> _5473_token = _53643_tokens[0LL];;
	if (((*(_5473_token))._field_Id != static_cast<jule::U64>(72LLU))) {
		_1e69c9cbc_pushErr(_self_, _5473_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1e5cae415_StructLit>(_1e5cae415_StructLit{._field_End=_53643_tokens[(_53643_tokens.len() - 1LL)], ._field_Kind=_5387_t, ._field_Exprs=_1e69d0e5a_buildStructLitExprs(_self_, &(_53643_tokens))});;
}



inline jule::Ptr<_1e5ca93bb_Expr> _1e69d15dc_buildBraceLitPart(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _56038_tokens) {
	jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _5617_l;
	jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _56114_r;
	({
		__jule_tuple_sx_1e5c8eacc_Token__jule_tuple_sx_1e5c8eacc_Token __jule_assign_result = _1e69d568a_splitDelim(_56038_tokens, static_cast<jule::U64>(8LLU));
		_5617_l = __jule_assign_result.__jule_result_arg0;
		_56114_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_5617_l != nullptr)) {
		return jule::new_ptr<_1e5ca93bb_Expr>(_1e5ca93bb_Expr{._field_Token=(*(_56038_tokens))[0LL], ._field_End=(*(_56038_tokens))[((*(_56038_tokens)).len() - 1LL)], ._field_Kind=jule::Any(jule::new_ptr<_1e5cb01e6_KeyValPair>(_1e5cb01e6_KeyValPair{._field_Key=_1e69d4865_buildFromTokens(_self_, _5617_l), ._field_Val=_1e69d4865_buildFromTokens(_self_, _56114_r), ._field_Colon=(*(_56038_tokens))[_5617_l.len()]}), &__jule_any_type81)});;
	};
	return _1e69d4865_buildFromTokens(_self_, (*(_56038_tokens)));;
}



inline jule::Ptr<_1e5cae8bb_BraceLit> _1e69d192d_buildBraceLit(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _57734_tokens) {
	jule::Ptr<_1e5cae8bb_BraceLit> _5787_lit = jule::new_ptr<_1e5cae8bb_BraceLit>(_1e5cae8bb_BraceLit{._field_Token=(*(_57734_tokens))[0LL], ._field_End=(*(_57734_tokens))[((*(_57734_tokens)).len() - 1LL)], ._field_Exprs=jule::Slice<jule::Ptr<_1e5ca93bb_Expr>>(nullptr)});;
	jule::Slice<jule::Slice<jule::Ptr<_1e5c8eacc_Token>>> _5837_parts = _1e69d0487_getBraceRangeLitExprParts(_self_, (*(_57734_tokens)));;
	if ((_5837_parts == nullptr)) {
		return _5787_lit;;
	};
	(*(_5787_lit))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5ca93bb_Expr>>::alloc(0LL, _5837_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1e5ca93bb_Expr>(nullptr); __jule_collection; });
	{
		auto expr = &(_5837_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbb4a0bc:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _58915_part = *it;
			{
				(*_5787_lit.alloc)._field_Exprs=jule::append((*_5787_lit.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5ca93bb_Expr>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1e69d15dc_buildBraceLitPart(_self_, &(_58915_part)); __jule_collection; }));
			}
			_iter_next_1cbb4a0bc:;
			++it;
			goto _iter_begin_1cbb4a0bc;
		}
		_iter_end_1cbb4a0bc:;
	};
	return _5787_lit;;
}



inline jule::Any _1e69d1c6e_buildBraceRange(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _59636_tokens) {
	jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _5977_exprTokens;
	jule::I64 _59719_rangeN;
	({
		__jule_tuple_sx_1e5c8eacc_Token__jule_tuple_int __jule_assign_result = _1e69d5ed7_getRangeExprTokens(_59636_tokens);
		_5977_exprTokens = __jule_assign_result.__jule_result_arg0;
		_59719_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	{
		
		if ((_5977_exprTokens.len() == 0LL)) {
			_case_begin_1cbb4ba19:;
			{
				return jule::Any(_1e69d192d_buildBraceLit(_self_, _59636_tokens), &__jule_any_type110);;
			}
		}
		else if ((_59719_rangeN > 0LL)) {
			_case_begin_1cbb4baa2:;
			{
				_1e69c9cbc_pushErr(_self_, (*(_59636_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1cbb4b9a3:;
	};
	jule::Ptr<_1e5c8eacc_Token> _6083_elseToken = _5977_exprTokens[(_5977_exprTokens.len() - 1LL)];;
	if (((*(_5977_exprTokens[(_5977_exprTokens.len() - 1LL)]))._field_Id == static_cast<jule::U64>(14LLU))) {
		(_5977_exprTokens).mut_slice(0LL, (_5977_exprTokens.len() - 1LL));;
		jule::Any _6118_d = _1e69d41d3_build(_self_, &(_5977_exprTokens));;
		if ((_6118_d == nullptr)) {
			return nullptr;;
		};
		{
			auto &_match_expr{ _6118_d };
			
			if (_match_expr.type == &__jule_any_type84) {
				_case_begin_1cbb4e8eb:;
				{
					((*(_59636_tokens))).mut_slice((_5977_exprTokens.len() + 1LL));;
					jule::I64 _6189_i = 0LL;;
					jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _6199_rangeTokens = _1e69d87ae_range(&(_6189_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _59636_tokens);;
					jule::Ptr<_1e5cad0e5_FnCallExpr> _6209_model = _6118_d.unsafe_cast_ptr<_1e5cad0e5_FnCallExpr>();;
					if (_1e5cad733_Ignored(_6209_model.ptr())) {
						_1e69c9cbc_pushErr(_self_, _6083_elseToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
						_1e69ca130_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("just ignore exceptional or handle it but you cannot do both at same time", 72)), jule::Slice<jule::Any>());
					};
					(*_6209_model.alloc)._field_Exception=_1e69dbc8a_buildScope((*(_self_))._field_p, &(_6199_rangeTokens), (*(_59636_tokens))[(_6189_i - 1LL)]);
					return _6118_d;;
				}
			}
			else {
				_case_begin_1cbb4e555:;
				{
					_1e69c9cbc_pushErr(_self_, _5977_exprTokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			_match_end_1cbb4e995:;
		};
	};
	{
		auto &_match_expr{ (*(_5977_exprTokens[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1cbb5424c:;
			{
				return _1e69cec28_buildUnsafe(_self_, _59636_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1cbb54a00:;
			{
				return jule::Any(_1e69ce8d7_buildAnonFn(_self_, _59636_tokens), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU) || _match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1cbb54a66:;
			{
				return jule::Any(_1e69d129b_buildTypedStructLiteral(_self_, (*(_59636_tokens))), &__jule_any_type109);;
			}
		}
		else {
			_case_begin_1cbb5235a:;
			{
				_1e69c9cbc_pushErr(_self_, _5977_exprTokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1cbb53d40:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_1e5c8eacc_Token>>> _1e69d20b0_getEnumerableParts(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _64838_tokens) {
	(_64838_tokens).mut_slice(1LL, (_64838_tokens.len() - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1e5c8eacc_Token>>> _6507_parts;
	jule::Slice<_22578b38a_Log> _65014_errors;
	({
		__jule_tuple_ssx_1e5c8eacc_Token__jule_tuple_s_22578b38a_Log __jule_assign_result = _1e69d902e_parts(&(_64838_tokens), static_cast<jule::U64>(5LLU), true);
		_6507_parts = __jule_assign_result.__jule_result_arg0;
		_65014_errors = __jule_assign_result.__jule_result_arg1;
	});
	(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_65014_errors);
	return _6507_parts;;
}



inline jule::Ptr<_1e5cb0922_SliceExpr> _1e69d2401_buildSlice(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _65530_tokens) {
	jule::Ptr<_1e5cb0922_SliceExpr> _6567_slc = jule::new_ptr<_1e5cb0922_SliceExpr>(_1e5cb0922_SliceExpr{._field_Token=_65530_tokens[0LL], ._field_End=_65530_tokens[(_65530_tokens.len() - 1LL)], ._field_Exprs=jule::Slice<jule::Ptr<_1e5ca93bb_Expr>>(nullptr)});;
	jule::Slice<jule::Slice<jule::Ptr<_1e5c8eacc_Token>>> _6617_parts = _1e69d20b0_getEnumerableParts(_self_, _65530_tokens);;
	if ((_6617_parts.len() == 0LL)) {
		return _6567_slc;;
	};
	(*(_6567_slc))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5ca93bb_Expr>>::alloc(0LL, _6617_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1e5ca93bb_Expr>(nullptr); __jule_collection; });
	{
		auto expr = &(_6617_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbb598e5:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _66715_p = *it;
			{
				if ((_66715_p.len() == 0LL)) {
					goto _iter_next_1cbb598e5;
				};
				(*_6567_slc.alloc)._field_Exprs=jule::append((*_6567_slc.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5ca93bb_Expr>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1e69d4865_buildFromTokens(_self_, _66715_p); __jule_collection; }));
			}
			_iter_next_1cbb598e5:;
			++it;
			goto _iter_begin_1cbb598e5;
		}
		_iter_end_1cbb598e5:;
	};
	return _6567_slc;;
}



inline jule::Ptr<_1e5cb137e_IndexingExpr> _1e69d28a7_buildIndexing(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _67733_exprTokens, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _6787_tokens, jule::Ptr<_1e5c8eacc_Token> _67829_errorToken) {
	jule::Ptr<_1e5c8eacc_Token> _6797_end = _6787_tokens[(_6787_tokens.len() - 1LL)];;
	(_6787_tokens).mut_slice(1LL, (_6787_tokens.len() - 1LL));;
	if ((_6787_tokens.len() == 0LL)) {
		_1e69c9cbc_pushErr(_self_, _67829_errorToken, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1e5ca93bb_Expr> _6857_expr = _1e69d4865_buildFromTokens(_self_, _67733_exprTokens);;
	if ((_6857_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1e5ca93bb_Expr> _6897_index = _1e69d4865_buildFromTokens(_self_, _6787_tokens);;
	if ((_6897_index == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1e5cb137e_IndexingExpr>(_1e5cb137e_IndexingExpr{._field_Token=_67829_errorToken, ._field_End=_6797_end, ._field_Expr=_6857_expr, ._field_Index=_6897_index});;
}



inline jule::Ptr<_1e5cb19de_SlicingExpr> _1e69d2ec3_buildSlicing(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _70133_exprTokens, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _70160_start, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _7028_to, jule::Ptr<_1e5c8eacc_Token>* _70227_errorToken, jule::Ptr<_1e5c8eacc_Token> _70251_end) {
	jule::Ptr<_1e5cb19de_SlicingExpr> _7037_slc = jule::new_ptr<_1e5cb19de_SlicingExpr>(_1e5cb19de_SlicingExpr{._field_Token=(*(_70227_errorToken)), ._field_End=_70251_end, ._field_Expr=_1e69d4865_buildFromTokens(_self_, (*(_70133_exprTokens))), ._field_Start=jule::Ptr<_1e5ca93bb_Expr>(nullptr), ._field_To=jule::Ptr<_1e5ca93bb_Expr>(nullptr)});;
	if (((*(_70160_start)).len() > 0LL)) {
		(*(_7037_slc))._field_Start=_1e69d4865_buildFromTokens(_self_, (*(_70160_start)));
	};
	if (((*(_7028_to)).len() > 0LL)) {
		(*_7037_slc.alloc)._field_To=_1e69d4865_buildFromTokens(_self_, (*(_7028_to)));
	};
	return _7037_slc;;
}



inline jule::Any _1e69d3314_buildBracketRange(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _71737_tokens) {
	jule::Ptr<_1e5c8eacc_Token> _7187_errorToken = _71737_tokens[0LL];;
	jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _7197_exprTokens;
	jule::I64 _71919_rangeN;
	({
		__jule_tuple_sx_1e5c8eacc_Token__jule_tuple_int __jule_assign_result = _1e69d5ed7_getRangeExprTokens(&(_71737_tokens));
		_7197_exprTokens = __jule_assign_result.__jule_result_arg0;
		_71919_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	if ((_7197_exprTokens.len() == 0LL)) {
		return jule::Any(_1e69d2401_buildSlice(_self_, _71737_tokens), &__jule_any_type96);;
	} else if ((_71919_rangeN > 0LL)) {
		_1e69c9cbc_pushErr(_self_, _7187_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_71737_tokens).mut_slice(_7197_exprTokens.len());;
	jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _7347_splitTokens = _71737_tokens.slice(1LL, (_71737_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _7357_start;
	jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _73518_to;
	({
		__jule_tuple_sx_1e5c8eacc_Token__jule_tuple_sx_1e5c8eacc_Token __jule_assign_result = _1e69d568a_splitDelim(&(_7347_splitTokens), static_cast<jule::U64>(8LLU));
		_7357_start = __jule_assign_result.__jule_result_arg0;
		_73518_to = __jule_assign_result.__jule_result_arg1;
	});
	if (((_7357_start != nullptr) || (_73518_to != nullptr))) {
		return jule::Any(_1e69d2ec3_buildSlicing(_self_, &(_7197_exprTokens), &(_7357_start), &(_73518_to), &(_7187_errorToken), _71737_tokens[(_71737_tokens.len() - 1LL)]), &__jule_any_type107);;
	};
	return jule::Any(_1e69d28a7_buildIndexing(_self_, _7197_exprTokens, _71737_tokens, _7187_errorToken), &__jule_any_type106);;
}



inline jule::Any _1e69d3655_buildExclRight(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _74235_tokens) {
	jule::Ptr<_1e5c8eacc_Token> _7433_token = (*(_74235_tokens))[((*(_74235_tokens)).len() - 1LL)];;
	((*(_74235_tokens))).mut_slice(0LL, ((*(_74235_tokens)).len() - 1LL));;
	jule::Any _7457_d = _1e69d41d3_build(_self_, _74235_tokens);;
	if ((_7457_d == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _7457_d };
		
		if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1cbb674c4:;
			{
				(*(_7457_d.unsafe_cast_ptr<_1e5cad0e5_FnCallExpr>()))._field_Exception=jule::new_ptr<_1e5cb50a8_ScopeTree>(_1e5cb50a8_ScopeTree{._field_Parent=jule::Ptr<_1e5cb50a8_ScopeTree>(nullptr), ._field_Unsafety=false, ._field_Deferred=true, ._field_Stmts=jule::Slice<_1e5cb4948_Stmt>(nullptr), ._field_End=jule::Ptr<_1e5c8eacc_Token>(nullptr)});
				return _7457_d;;
			}
		}
		_match_end_1cbb678ae:;
	};
	_1e69c9cbc_pushErr(_self_, _7433_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1e69d3996_buildData(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _76030_tokens) {
	{
		auto _match_expr{ (*(_76030_tokens)).len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1cbb690ca:;
			{
				return nullptr;;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1cbb69141:;
			{
				return _1e69cae44_buildSingle(_self_, (*(_76030_tokens))[0LL]);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1cbb691a7:;
			{
				if (((*((*(_76030_tokens))[0LL]))._field_Id == static_cast<jule::U64>(27LLU))) {
					return jule::Any(_1e69cb285_buildBindIdent(_self_, _76030_tokens), &__jule_any_type51);;
				};
			}
		}
		_match_end_1cbb68e98:;
	};
	jule::Ptr<_1e5c8eacc_Token> _7727_token = (*(_76030_tokens))[((*(_76030_tokens)).len() - 1LL)];;
	if (((*(_7727_token))._field_Id == static_cast<jule::U64>(39LLU))) {
		return jule::Any(_1e69cc72b_buildVariadic(_self_, (*(_76030_tokens))), &__jule_any_type78);;
	};
	_7727_token=(*(_76030_tokens))[0LL];
	if (_1e5c90319_IsUnaryOp((*_7727_token.alloc)._field_Id)) {
		if (((*(_76030_tokens)).len() > 1LL)) {
			_7727_token=(*(_76030_tokens))[1LL];
			if (((*_7727_token.alloc)._field_Id == static_cast<jule::U64>(31LLU))) {
				return jule::Any(_1e69cc099_buildType(_self_, _76030_tokens), &__jule_any_type91);;
			};
		};
		return jule::Any(_1e69cb5c6_buildUnary(_self_, (*(_76030_tokens))), &__jule_any_type90);;
	};
	if (((*(_76030_tokens)).len() >= 3LL)) {
		{
			auto &_match_expr{ (*(_7727_token))._field_Id };
			
			if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
				_case_begin_1cbb6d970:;
				{
					if (((*(_76030_tokens)).len() > 3LL)) {
						jule::Ptr<_1e5c8eacc_Token> _7986_t = (*(_76030_tokens))[((*(_76030_tokens)).len() - 1LL)];;
						if (((*(_7986_t))._field_Id == static_cast<jule::U64>(75LLU))) {
							goto _match_end_1cbb6dc4a;
						};
					};
					jule::Ptr<_1e5c8eacc_Token> _8045_next = (*(_76030_tokens))[1LL];;
					if (((*(_8045_next))._field_Id != static_cast<jule::U64>(77LLU))) {
						goto _match_end_1cbb6dc4a;
					};
					return jule::Any(_1e69cc099_buildType(_self_, _76030_tokens), &__jule_any_type91);;
				}
			}
			_match_end_1cbb6dc4a:;
		};
	};
	_7727_token=(*(_76030_tokens))[((*(_76030_tokens)).len() - 1LL)];
	{
		auto &_match_expr{ (*(_7727_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1cbb71e4b:;
			{
				return _1e69cc3da_buildSubIdent(_self_, _76030_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(68LLU)) {
			_case_begin_1cbb71eb2:;
			{
				return _1e69d3655_buildExclRight(_self_, _76030_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(75LLU)) {
			_case_begin_1cbb72028:;
			{
				return _1e69ce255_buildParenthesesRange(_self_, _76030_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1cbb7208e:;
			{
				return _1e69d1c6e_buildBraceRange(_self_, _76030_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1cbb72105:;
			{
				return _1e69d3314_buildBracketRange(_self_, (*(_76030_tokens)));;
			}
		}
		_match_end_1cbb71dd5:;
	};
	_1e69c9cbc_pushErr(_self_, _7727_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1e69d3d92_buildBinary(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _82932_tokens, jule::I64 _82950_i) {
	jule::Ptr<_1e5c8eacc_Token> _8307_op = (*(_82932_tokens))[_82950_i];;
	jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _8317_leftTokens = (*(_82932_tokens)).slice(0LL, _82950_i);;
	if ((_1e69d4bea_isTypeOp(&((*(_8307_op))._field_Id)) && _1e69d5008_isTypeRange(&(_8317_leftTokens)))) {
		return jule::Any(_1e69cc099_buildType(_self_, _82932_tokens), &__jule_any_type91);;
	};
	jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _8367_rightTokens = (*(_82932_tokens)).slice((_82950_i + 1LL));;
	if ((_8317_leftTokens.len() == 0LL)) {
		_1e69c9cbc_pushErr(_self_, (*(_82932_tokens))[_82950_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1e69ca130_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("left operand expected for binary operator", 41)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_8367_rightTokens.len() == 0LL)) {
		_1e69c9cbc_pushErr(_self_, (*(_82932_tokens))[_82950_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1e69ca130_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("right operand expected for binary operator", 42)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::Any(jule::new_ptr<_1e5cac985_BinaryExpr>(_1e5cac985_BinaryExpr{._field_Left=_1e69d4865_buildFromTokens(_self_, _8317_leftTokens), ._field_Right=_1e69d4865_buildFromTokens(_self_, _8367_rightTokens), ._field_Op=_8307_op}), &__jule_any_type111);;
}



inline jule::Any _1e69d41d3_build(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _85426_tokens) {
	if (((*((*(_85426_tokens))[0LL]))._field_Id == static_cast<jule::U64>(37LLU))) {
		return jule::Any(_1e69cc099_buildType(_self_, _85426_tokens), &__jule_any_type91);;
	};
	jule::I64 _8583_i = _1e69d5954_findLowestPrecOp(_85426_tokens);;
	if ((_8583_i == -1LL)) {
		return _1e69d3996_buildData(_self_, _85426_tokens);;
	};
	return _1e69d3d92_buildBinary(_self_, _85426_tokens, _8583_i);;
}



inline jule::Any _1e69d4524_buildKind(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _86530_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1e5c8eacc_Token>>> _8667_parts;
	jule::Slice<_22578b38a_Log> _86614_errors;
	({
		__jule_tuple_ssx_1e5c8eacc_Token__jule_tuple_s_22578b38a_Log __jule_assign_result = _1e69d902e_parts(_86530_tokens, static_cast<jule::U64>(5LLU), true);
		_8667_parts = __jule_assign_result.__jule_result_arg0;
		_86614_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_86614_errors != nullptr)) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_86614_errors);
		return nullptr;;
	} else if ((_8667_parts.len() > 1LL)) {
		return jule::Any(_1e69ca471_buildTuple(_self_, &(_8667_parts)), &__jule_any_type82);;
	};
	return _1e69d41d3_build(_self_, _86530_tokens);;
}



inline jule::Ptr<_1e5ca93bb_Expr> _1e69d4865_buildFromTokens(_1e69c94e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _87635_tokens) {
	if ((_87635_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Any _8807_kind = _1e69d4524_buildKind(_self_, &(_87635_tokens));;
	if ((_8807_kind == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1e5ca93bb_Expr>(_1e5ca93bb_Expr{._field_Token=_87635_tokens[0LL], ._field_End=_87635_tokens[(_87635_tokens.len() - 1LL)], ._field_Kind=_8807_kind});;
}











inline void _1e69da43c_stop(_1e69da10c_parser* _self_) {
	(*(_self_))._field_ast=nullptr;
}



inline jule::Bool _1e69da6c3_stopped(_1e69da10c_parser* _self_) {
	return ((*(_self_))._field_ast == nullptr);;
}



inline void _1e69daae1_pushErr(_1e69da10c_parser* _self_, jule::Ptr<_1e5c8eacc_Token> _20823_token, jule::Str _20838_fmt, jule::Slice<jule::Any> _20851_args) {
	{ jule::Slice<_22578b38a_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1e69d96e4_compilerErr(&(_20823_token), &(_20838_fmt), _20851_args)); };
}



inline void _1e69dae54_pushSuggestion(_1e69da10c_parser* _self_, jule::Str _21330_fmt, jule::Slice<jule::Any> _21343_args) {
	{
		_1e69d9a8a_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _21330_fmt, _21343_args);
	};
}



inline jule::Ptr<_1e5ca93bb_Expr> _1e69db295_buildExpr(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _21731_tokens) {
	return _1e69d4865_buildFromTokens((*(_self_))._field_ep.ptr(), (*(_21731_tokens)));;
}



inline jule::Ptr<_1e5ca44a4_Directive> _1e69db5d6_buildDirective(_1e69da10c_parser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _22134_tokens) {
	if ((_22134_tokens.len() == 1LL)) {
		_1e69daae1_pushErr(_self_, _22134_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_22134_tokens[1LL]))._field_Column != ((*(_22134_tokens[0LL]))._field_Column + 1LL))) {
		_1e69daae1_pushErr(_self_, _22134_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1e5ca44a4_Directive>(_1e5ca44a4_Directive{._field_Tag=_22134_tokens[1LL], ._field_Args=_22134_tokens.slice(2LL)});;
}



inline void _1e69db88e_pushDirective(_1e69da10c_parser* _self_, jule::Ptr<_1e5ca44a4_Directive> _23633_d) {
	if ((_23633_d == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbb9e594:;
		if (it != expr_end) {
			jule::Ptr<_1e5ca44a4_Directive> _24110_pd = *it;
			{
				if (((*((*(_23633_d))._field_Tag))._field_Kind == (*(*(_24110_pd))._field_Tag.alloc)._field_Kind)) {
					return;;
				};
			}
			_iter_next_1cbb9e594:;
			++it;
			goto _iter_begin_1cbb9e594;
		}
		_iter_end_1cbb9e594:;
	};
	{ jule::Slice<jule::Ptr<_1e5ca44a4_Directive>> &__jule_push_dest = (*(_self_))._field_directives; __jule_push_dest.push(_23633_d); };
}



inline jule::Ptr<_1e5cb50a8_ScopeTree> _1e69dbc8a_buildScope(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _24932_tokens, jule::Ptr<_1e5c8eacc_Token> _24954_end) {
	jule::Ptr<_1e5cb50a8_ScopeTree> _2507_s = _1e69b9e99_newScope();;
	(*(_2507_s))._field_End=_24954_end;
	_1e69bba7d_scopeParser _2527_sp = _1e69bba7d_scopeParser{._field_p=_self_, ._field_s=jule::Ptr<_1e5cb50a8_ScopeTree>(nullptr), ._field_stmts=jule::Slice<jule::Ptr<_1e69bb1dc_stmt>>(nullptr), ._field_pos=0};;
	_1e69c8969_build(&_2527_sp, _24932_tokens, &(_2507_s));
	return _2507_s;;
}



inline __jule_tuple_x_1e5ca5087_TypeDecl__jule_tuple_bool _1e69dc241__buildType(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _25939_tokens, jule::I64* _2607_i, jule::Bool _26016_err) {
	__jule_tuple_x_1e5ca5087_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	_1e69ec22e_typeBuilder _2617_tb = _1e69ec22e_typeBuilder{._field_p=_self_, ._field_tokens=(*(_25939_tokens)), ._field_i=_2607_i, ._field_err=_26016_err};;
	__jule_func_result = std::move(_1e6a00243_build(&_2617_tb));
return __jule_func_result;;
}



inline __jule_tuple_x_1e5ca5087_TypeDecl__jule_tuple_bool _1e69dc6e7_buildType(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _27138_tokens, jule::I64* _2727_i, jule::Bool _27216_err) {
	__jule_tuple_x_1e5ca5087_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1e5c8eacc_Token> _2733_token = (*(_27138_tokens))[(*(_2727_i))];;
	jule::Ptr<_1e5ca5087_TypeDecl> _2747_t;
	jule::Bool _27410_ok;
	({
		__jule_tuple_x_1e5ca5087_TypeDecl__jule_tuple_bool __jule_assign_result = _1e69dc241__buildType(_self_, _27138_tokens, _2727_i, _27216_err);
		_2747_t = __jule_assign_result.__jule_result_arg0;
		_27410_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((_27216_err && (!(_27410_ok)))) {
		_1e69daae1_pushErr(_self_, _2733_token, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
	};
	__jule_func_result.__jule_result_arg0 = _2747_t;
	__jule_func_result.__jule_result_arg1 = _27410_ok;
	return __jule_func_result;;
}



inline jule::Ptr<_1e5cbbaa4_TypeAliasDecl> _1e69dca38_buildTypeAliasDecl(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _28140_tokens) {
	jule::I64 _2827_i = 1LL;;
	if ((_2827_i >= (*(_28140_tokens)).len())) {
		_1e69daae1_pushErr(_self_.ptr(), (*(_28140_tokens))[(_2827_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1e5cbbaa4_TypeAliasDecl> _2877_tad = jule::new_ptr<_1e5cbbaa4_TypeAliasDecl>(_1e5cbbaa4_TypeAliasDecl{._field_Scope=jule::Ptr<_1e5cb50a8_ScopeTree>(nullptr), ._field_Public=false, ._field_Binded=false, ._field_Token=(*(_28140_tokens))[1LL], ._field_Ident=(*((*(_28140_tokens))[1LL]))._field_Kind, ._field_Kind=jule::Ptr<_1e5ca5087_TypeDecl>(nullptr)});;
	jule::Ptr<_1e5c8eacc_Token> _2917_token = (*(_28140_tokens))[_2827_i];;
	if (((*(_2917_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1e69daae1_pushErr(_self_, _2917_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1e69dae54_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(_2827_i)++;
	if ((_2827_i >= (*(_28140_tokens)).len())) {
		_1e69daae1_pushErr(_self_, (*(_28140_tokens))[(_2827_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return _2877_tad;;
	};
	_2917_token=(*(_28140_tokens))[_2827_i];
	if (((*_2917_token.alloc)._field_Id != static_cast<jule::U64>(8LLU))) {
		_1e69daae1_pushErr(_self_, (*(_28140_tokens))[(_2827_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1e69dae54_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected colon \":\"", 18)), jule::Slice<jule::Any>());
		return _2877_tad;;
	};
	(_2827_i)++;
	if ((_2827_i >= (*(_28140_tokens)).len())) {
		_1e69daae1_pushErr(_self_, (*(_28140_tokens))[(_2827_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
		return _2877_tad;;
	};
	jule::Ptr<_1e5ca5087_TypeDecl> _3127_t;
	jule::Bool _31210_ok;
	({
		__jule_tuple_x_1e5ca5087_TypeDecl__jule_tuple_bool __jule_assign_result = _1e69dc6e7_buildType(_self_, _28140_tokens, (&(_2827_i)), true);
		_3127_t = __jule_assign_result.__jule_result_arg0;
		_31210_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*(_2877_tad))._field_Kind=_3127_t;
	if ((_31210_ok && (_2827_i < (*(_28140_tokens)).len()))) {
		_1e69daae1_pushErr(_self_, (*(_28140_tokens))[_2827_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_2877_tad.alloc)._field_Public=_1e5d78754_IsPub((*_2877_tad.alloc)._field_Ident);
	return _2877_tad;;
}



inline void _1e69dcd9b_buildVarTypeAndExpr(jule::Ptr<_1e69da10c_parser> _self_, jule::Ptr<_1e5cb7e02_VarDecl>* _32141_v, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _32159_tokens) {
	jule::I64 _3227_i = 0LL;;
	jule::Ptr<_1e5c8eacc_Token> _3237_tok = (*(_32159_tokens))[_3227_i];;
	if (((*(_3237_tok))._field_Id == static_cast<jule::U64>(8LLU))) {
		(_3227_i)++;
		if (((_3227_i >= (*(_32159_tokens)).len()) || ((*((*(_32159_tokens))[_3227_i]))._field_Id == static_cast<jule::U64>(71LLU)))) {
			_1e69daae1_pushErr(_self_.ptr(), _3237_tok, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_1e5ca5087_TypeDecl> _3308_t;
		jule::Bool _33011_ok;
		({
			__jule_tuple_x_1e5ca5087_TypeDecl__jule_tuple_bool __jule_assign_result = _1e69dc6e7_buildType(_self_, _32159_tokens, (&(_3227_i)), true);
			_3308_t = __jule_assign_result.__jule_result_arg0;
			_33011_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_33011_ok) {
			(*((*(_32141_v))))._field_Kind=_3308_t;
			if ((_3227_i >= (*(_32159_tokens)).len())) {
				return;;
			};
			_3237_tok=(*(_32159_tokens))[_3227_i];
		};
	};
	if (((*_3237_tok.alloc)._field_Id != static_cast<jule::U64>(71LLU))) {
		_1e69daae1_pushErr(_self_, _3237_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_32141_v))))._field_Setter=_3237_tok;
	jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _3467_exprTokens = (*(_32159_tokens)).slice((_3227_i + 1LL));;
	if ((_3467_exprTokens.len() == 0LL)) {
		_1e69daae1_pushErr(_self_, _3237_tok, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_32141_v))))._field_Expr=_1e69db295_buildExpr(_self_, &(_3467_exprTokens));
}



inline void _1e69dd20e_buildVarCommon(jule::Ptr<_1e69da10c_parser> _self_, jule::Ptr<_1e5cb7e02_VarDecl>* _35436_v, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _35453_tokens) {
	(*((*(_35436_v))))._field_Token=_35453_tokens[0LL];
	if (((*((*((*(_35436_v))))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1e69daae1_pushErr(_self_.ptr(), (*((*(_35436_v))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1e69dae54_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_35436_v))))._field_Ident=(*(*((*(_35436_v))))._field_Token.alloc)._field_Kind;
	(*((*(_35436_v))))._field_Public=_1e5d78754_IsPub((*((*(_35436_v))))._field_Ident);
	(*((*(_35436_v))))._field_Kind=nullptr;
	if ((_35453_tokens.len() > 1LL)) {
		(_35453_tokens).mut_slice(1LL);;
		_1e69dcd9b_buildVarTypeAndExpr(_self_, _35436_v, &(_35453_tokens));
	};
}



inline void _1e69dd572_buildVarBegin(_1e69da10c_parser* _self_, jule::Ptr<_1e5cb7e02_VarDecl>* _37034_v, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _37052_tokens) {
	jule::Ptr<_1e5c8eacc_Token> _3713_tok = (*(_37052_tokens))[0LL];;
	{
		auto &_match_expr{ (*(_3713_tok))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1cbbbae95:;
			{
				(*((*(_37034_v))))._field_Statically=true;
				goto _case_begin_1cbbbab54;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1cbbbab54:;
			{
				if (((*(_37052_tokens)).len() == 1LL)) {
					(*(_37052_tokens))=nullptr;
					_1e69daae1_pushErr(_self_, _3713_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return;;
				};
				((*(_37052_tokens))).mut_slice(1LL);;
				if (((*((*(_37052_tokens))[0LL]))._field_Id == static_cast<jule::U64>(32LLU))) {
					(*((*(_37034_v))))._field_Mutable=true;
					((*(_37052_tokens))).mut_slice(1LL);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1cbbbabba:;
			{
				(*((*(_37034_v))))._field_Constant=true;
				((*(_37052_tokens))).mut_slice(1LL);;
			}
		}
		else {
			_case_begin_1cbbba846:;
			{
				(*(_37052_tokens))=nullptr;
				_1e69daae1_pushErr(_self_, _3713_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1cbbbaadd:;
	};
}



inline jule::Ptr<_1e5cb7e02_VarDecl> _1e69dd8b3_buildVar(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _39829_tokens) {
	jule::Ptr<_1e5cb7e02_VarDecl> _3997_v = jule::new_ptr<_1e5cb7e02_VarDecl>(_1e5cb7e02_VarDecl{._field_Scope=jule::Ptr<_1e5cb50a8_ScopeTree>(nullptr), ._field_Token=_39829_tokens[0LL], ._field_Setter=jule::Ptr<_1e5c8eacc_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Public=false, ._field_Mutable=false, ._field_Constant=false, ._field_Statically=false, ._field_Reference=false, ._field_Directives=jule::Slice<jule::Ptr<_1e5ca44a4_Directive>>(nullptr), ._field_Kind=jule::Ptr<_1e5ca5087_TypeDecl>(nullptr), ._field_Expr=jule::Ptr<_1e5ca93bb_Expr>(nullptr)});;
	_1e69dd572_buildVarBegin(_self_.ptr(), &(_3997_v), &(_39829_tokens));
	if ((_39829_tokens.len() == 0LL)) {
		return nullptr;;
	};
	if (((*(_39829_tokens[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
		(*(_3997_v))._field_Reference=true;
		if ((_39829_tokens.len() == 1LL)) {
			return nullptr;;
		};
		(_39829_tokens).mut_slice(1LL);;
	};
	_1e69dd20e_buildVarCommon(_self_, &(_3997_v), _39829_tokens);
	return _3997_v;;
}



inline jule::Ptr<_1e5cb2292_GenericDecl> _1e69ddc04_buildGeneric(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _41734_tokens) {
	jule::Ptr<_1e5cb2292_GenericDecl> _4187_g = jule::new_ptr<_1e5cb2292_GenericDecl>(_1e5cb2292_GenericDecl{._field_Token=(*(_41734_tokens))[0LL], ._field_Ident=jule::Str(), ._field_Constraint=jule::Ptr<_1e5cb1cdb_Constraint>(nullptr)});;
	if (((*((*(_4187_g))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1e69daae1_pushErr(_self_.ptr(), (*_4187_g.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1e69dae54_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(*_4187_g.alloc)._field_Ident=(*(*(_4187_g))._field_Token.alloc)._field_Kind;
	if (((*(_41734_tokens)).len() > 1LL)) {
		if (((*((*(_41734_tokens))[1LL]))._field_Id != static_cast<jule::U64>(8LLU))) {
			_1e69daae1_pushErr(_self_, (*(_41734_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		if (((*(_41734_tokens)).len() == 2LL)) {
			_1e69daae1_pushErr(_self_, (*(_41734_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _4358_constraintTokens = (*(_41734_tokens)).slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_1e5c8eacc_Token>>> _4368_parts;
		jule::Slice<_22578b38a_Log> _43615_errors;
		({
			__jule_tuple_ssx_1e5c8eacc_Token__jule_tuple_s_22578b38a_Log __jule_assign_result = _1e69d902e_parts(&(_4358_constraintTokens), static_cast<jule::U64>(66LLU), true);
			_4368_parts = __jule_assign_result.__jule_result_arg0;
			_43615_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_43615_errors.len() > 0LL)) {
			(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_43615_errors);
			return nullptr;;
		};
		(*_4187_g.alloc)._field_Constraint=jule::new_ptr<_1e5cb1cdb_Constraint>(_1e5cb1cdb_Constraint{._field_Mask=({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5ca5087_TypeDecl>>::alloc(0LL, _4368_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1e5ca5087_TypeDecl>(nullptr); __jule_collection; })});
		{
			auto expr = &(_4368_parts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1cbbc8d93:;
			if (it != expr_end) {
				jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _44216_part = *it;
				{
					jule::I64 _4439_i = 0LL;;
					jule::Ptr<_1e5ca5087_TypeDecl> _4449_kind;
					({
						__jule_tuple_x_1e5ca5087_TypeDecl__jule_tuple_bool __jule_assign_result = _1e69dc6e7_buildType(_self_, &(_44216_part), (&(_4439_i)), true);
						_4449_kind = __jule_assign_result.__jule_result_arg0;
					});
					(*((*_4187_g.alloc)._field_Constraint))._field_Mask=jule::append((*(*(_4187_g))._field_Constraint.alloc)._field_Mask,({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5ca5087_TypeDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _4449_kind; __jule_collection; }));
					if ((_4439_i < _44216_part.len())) {
						_1e69daae1_pushErr(_self_, _44216_part[_4439_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1cbbc8d93:;
				++it;
				goto _iter_begin_1cbbc8d93;
			}
			_iter_end_1cbbc8d93:;
		};
	};
	return _4187_g;;
}



inline jule::Slice<jule::Ptr<_1e5cb2292_GenericDecl>> _1e69de100_buildGenerics(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _45435_tokens, jule::Ptr<_1e5c8eacc_Token>* _45454_errorToken) {
	if (((*(_45435_tokens)).len() == 0LL)) {
		_1e69daae1_pushErr(_self_.ptr(), (*(_45454_errorToken)), static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1e5c8eacc_Token>>> _4607_parts;
	jule::Slice<_22578b38a_Log> _46014_errors;
	({
		__jule_tuple_ssx_1e5c8eacc_Token__jule_tuple_s_22578b38a_Log __jule_assign_result = _1e69d902e_parts(_45435_tokens, static_cast<jule::U64>(5LLU), true);
		_4607_parts = __jule_assign_result.__jule_result_arg0;
		_46014_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_46014_errors.len() > 0LL)) {
		(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_46014_errors);
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1e5cb2292_GenericDecl>> _4667_generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5cb2292_GenericDecl>>::alloc(0LL, _4607_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1e5cb2292_GenericDecl>(nullptr); __jule_collection; });;
	{
		auto expr = &(_4607_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbbce41a:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _46715_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1e5cb2292_GenericDecl>> &__jule_push_dest = _4667_generics; __jule_push_dest.push(_1e69ddc04_buildGeneric(_self_, &(_46715_part))); };
			}
			_iter_next_1cbbce41a:;
			++it;
			goto _iter_begin_1cbbce41a;
		}
		_iter_end_1cbbce41a:;
	};
	return _4667_generics;;
}



inline jule::Ptr<_1e5cb57e5_ParamDecl> _1e69de441_buildSelfParam(_1e69da10c_parser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _47434_tokens) {
	if ((_47434_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1e5cb57e5_ParamDecl> _4797_param = jule::new_ptr<_1e5cb57e5_ParamDecl>(_1e5cb57e5_ParamDecl{._field_Token=jule::Ptr<_1e5c8eacc_Token>(nullptr), ._field_Mutable=false, ._field_Variadic=false, ._field_Reference=false, ._field_Kind=jule::Ptr<_1e5ca5087_TypeDecl>(nullptr), ._field_Ident=jule::Str()});;
	if (((*(_47434_tokens[0LL]))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*_4797_param.alloc)._field_Mutable=true;
		if ((_47434_tokens.len() == 1LL)) {
			_1e69daae1_pushErr(_self_, _47434_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_47434_tokens).mut_slice(1LL);;
	};
	_224497295_StrBuilder _4917_ident = static__2244a0b83_New(5LL);;
	if (((*(_47434_tokens[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
		_2244a1090_WriteStr(&_4917_ident, static_cast<jule::Str>(jule::Str::lit("&", 1)));
		if ((_47434_tokens.len() == 1LL)) {
			_1e69daae1_pushErr(_self_, _47434_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_47434_tokens).mut_slice(1LL);;
	};
	if (((*(_47434_tokens[0LL]))._field_Id == static_cast<jule::U64>(24LLU))) {
		_2244a1090_WriteStr(&_4917_ident, jule::Str::lit("self", 4));
		(*_4797_param.alloc)._field_Token=_47434_tokens[0LL];
		if ((_47434_tokens.len() != 1LL)) {
			_1e69daae1_pushErr(_self_, _47434_tokens[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		};
	};
	(*_4797_param.alloc)._field_Ident=_2244a1887_Str(&_4917_ident);
	return _4797_param;;
}



inline void _1e69de85e_paramTypeBegin(_1e69da10c_parser* _self_, jule::Ptr<_1e5cb57e5_ParamDecl>* _51435_param, jule::I64* _51459_i, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _51468_tokens) {
	for (; ((*(_51459_i)) < (*(_51468_tokens)).len()); ((*(_51459_i)))++) {
		{
			jule::Ptr<_1e5c8eacc_Token> _5164_token = (*(_51468_tokens))[(*(_51459_i))];;
			if (((*(_5164_token))._field_Id != static_cast<jule::U64>(39LLU))) {
				return;;
			};
			if ((*((*(_51435_param))))._field_Variadic) {
				_1e69daae1_pushErr(_self_, _5164_token, static_cast<jule::Str>(jule::Str::lit("define is already variadic", 26)), jule::Slice<jule::Any>());
				goto _iter_next_1cbbd6db2;
			};
			(*((*(_51435_param))))._field_Variadic=true;
		}
	_iter_next_1cbbd6db2:;
	}
	_iter_end_1cbbd6db2:;;
}



inline void _1e69debc2_buildParamType(jule::Ptr<_1e69da10c_parser> _self_, jule::Ptr<_1e5cb57e5_ParamDecl>* _52936_param, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _52960_tokens) {
	jule::I64 _5307_i = 0LL;;
	_1e69de85e_paramTypeBegin(_self_.ptr(), _52936_param, &(_5307_i), _52960_tokens);
	if ((_5307_i >= (*(_52960_tokens)).len())) {
		return;;
	};
	({
		__jule_tuple_x_1e5ca5087_TypeDecl__jule_tuple_bool __jule_assign_result = _1e69dc6e7_buildType(_self_, _52960_tokens, (&(_5307_i)), true);
		(*((*(_52936_param))))._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_5307_i < (*(_52960_tokens)).len())) {
		_1e69daae1_pushErr(_self_, (*(_52960_tokens))[_5307_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
}



inline void _1e69e0035_buildParamBody(jule::Ptr<_1e69da10c_parser> _self_, jule::Ptr<_1e5cb57e5_ParamDecl>* _54236_param, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _54259_tokens) {
	jule::Ptr<_1e5c8eacc_Token> _5437_tok = _54259_tokens[0LL];;
	if ((_54259_tokens.len() == 1LL)) {
		(*((*(_54236_param))))._field_Ident=(*(_5437_tok))._field_Kind;
		return;;
	} else if ((_54259_tokens.len() < 3LL)) {
		_1e69daae1_pushErr(_self_.ptr(), _5437_tok, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_54259_tokens[1LL]))._field_Id != static_cast<jule::U64>(8LLU))) {
		(*((*(_54236_param))))._field_Ident=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
		_1e69debc2_buildParamType(_self_, _54236_param, &(_54259_tokens));
		return;;
	};
	(*((*(_54236_param))))._field_Ident=(*(_5437_tok))._field_Kind;
	(_54259_tokens).mut_slice(2LL);;
	_1e69debc2_buildParamType(_self_, _54236_param, &(_54259_tokens));
}



inline jule::Ptr<_1e5cb57e5_ParamDecl> _1e69e0376_buildParam(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _56231_tokens) {
	jule::Ptr<_1e5cb57e5_ParamDecl> _5637_param = jule::new_ptr<_1e5cb57e5_ParamDecl>(_1e5cb57e5_ParamDecl{._field_Token=_56231_tokens[0LL], ._field_Mutable=false, ._field_Variadic=false, ._field_Reference=false, ._field_Kind=jule::Ptr<_1e5ca5087_TypeDecl>(nullptr), ._field_Ident=jule::Str()});;
	if (((*((*(_5637_param))._field_Token))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*_5637_param.alloc)._field_Mutable=true;
		if ((_56231_tokens.len() == 1LL)) {
			_1e69daae1_pushErr(_self_.ptr(), _56231_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_56231_tokens).mut_slice(1LL);;
		(*_5637_param.alloc)._field_Token=_56231_tokens[0LL];
	};
	if ((_56231_tokens.len() >= 3LL)) {
		if (((*(*(_5637_param))._field_Token.alloc)._field_Id == static_cast<jule::U64>(65LLU))) {
			if ((_56231_tokens.len() == 1LL)) {
				_1e69daae1_pushErr(_self_, _56231_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			};
			if ((((*(_56231_tokens[1LL]))._field_Id == static_cast<jule::U64>(1LLU)) && ((*(_56231_tokens[2LL]))._field_Id == static_cast<jule::U64>(8LLU)))) {
				(*_5637_param.alloc)._field_Reference=true;
				(_56231_tokens).mut_slice(1LL);;
				(*_5637_param.alloc)._field_Token=_56231_tokens[0LL];
			};
		};
	};
	if (((*(*(_5637_param))._field_Token.alloc)._field_Id != static_cast<jule::U64>(1LLU))) {
		(*_5637_param.alloc)._field_Ident=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
		_1e69debc2_buildParamType(_self_, &(_5637_param), &(_56231_tokens));
	} else {
		_1e69e0035_buildParamBody(_self_, &(_5637_param), _56231_tokens);
	};
	return _5637_param;;
}



inline void _1e69e062e_checkParams(_1e69da10c_parser* _self_, jule::Slice<jule::Ptr<_1e5cb57e5_ParamDecl>>* _60532_params) {
	{
		auto expr = _60532_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbbe7774:;
		if (it != expr_end) {
			jule::Ptr<_1e5cb57e5_ParamDecl> _60615_param = *it;
			{
				if ((_1e5cb5b9c_IsSelf(_60615_param.ptr()) || ((*_60615_param.alloc)._field_Kind != nullptr))) {
					goto _iter_next_1cbbe7774;
				};
				if (((*_60615_param.alloc)._field_Token == nullptr)) {
					_1e69daae1_pushErr(_self_, (*_60615_param.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
				} else {
					(*_60615_param.alloc)._field_Kind=jule::new_ptr<_1e5ca5087_TypeDecl>(_1e5ca5087_TypeDecl{._field_Token=(*_60615_param.alloc)._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1e5ca5692_IdentTypeDecl>(_1e5ca5692_IdentTypeDecl{._field_Token=(*_60615_param.alloc)._field_Token, ._field_Ident=(*((*_60615_param.alloc)._field_Token))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1e5ca5087_TypeDecl>>(nullptr)}), &__jule_any_type77)});
					(*_60615_param.alloc)._field_Ident=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
				};
			}
			_iter_next_1cbbe7774:;
			++it;
			goto _iter_begin_1cbbe7774;
		}
		_iter_end_1cbbe7774:;
	};
}



inline jule::Slice<jule::Ptr<_1e5cb57e5_ParamDecl>> _1e69e0a2a_buildParams(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _62533_tokens, jule::Bool _62551_method) {
	jule::Slice<jule::Slice<jule::Ptr<_1e5c8eacc_Token>>> _6267_parts;
	jule::Slice<_22578b38a_Log> _62614_errs;
	({
		__jule_tuple_ssx_1e5c8eacc_Token__jule_tuple_s_22578b38a_Log __jule_assign_result = _1e69d902e_parts(_62533_tokens, static_cast<jule::U64>(5LLU), true);
		_6267_parts = __jule_assign_result.__jule_result_arg0;
		_62614_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,_62614_errs);
	if ((_6267_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1e5cb57e5_ParamDecl>> _63211_params = nullptr;;
	if ((_62551_method && (_6267_parts.len() > 0LL))) {
		jule::Ptr<_1e5cb57e5_ParamDecl> _6348_param = _1e69de441_buildSelfParam(_self_, _6267_parts[0LL]);;
		if (((_6348_param != nullptr) && _1e5cb5b9c_IsSelf(_6348_param))) {
			{ jule::Slice<jule::Ptr<_1e5cb57e5_ParamDecl>> &__jule_push_dest = _63211_params; __jule_push_dest.push(_6348_param); };
			(_6267_parts).mut_slice(1LL);;
		};
	};
	{
		auto expr = &(_6267_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbbee34c:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _64115_part = *it;
			{
				if ((_64115_part.len() == 0LL)) {
					goto _iter_next_1cbbee34c;
				};
				jule::Ptr<_1e5cb57e5_ParamDecl> _6458_param = _1e69e0376_buildParam(_self_, _64115_part);;
				if ((_6458_param != nullptr)) {
					{ jule::Slice<jule::Ptr<_1e5cb57e5_ParamDecl>> &__jule_push_dest = _63211_params; __jule_push_dest.push(_6458_param); };
				};
			}
			_iter_next_1cbbee34c:;
			++it;
			goto _iter_begin_1cbbee34c;
		}
		_iter_end_1cbbee34c:;
	};
	_1e69e062e_checkParams(_self_, &(_63211_params));
	return _63211_params;;
}



inline __jule_tuple_x_1e5ca7e7a_RetTypeDecl__jule_tuple_bool _1e69e0e26_buildMultiRetType(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _65539_tokens, jule::I64* _65562_i) {
	__jule_tuple_x_1e5ca7e7a_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1e5ca7e7a_RetTypeDecl>(_1e5ca7e7a_RetTypeDecl{._field_Kind=jule::Ptr<_1e5ca5087_TypeDecl>(nullptr), ._field_Idents=jule::Slice<jule::Ptr<_1e5c8eacc_Token>>(nullptr)});
	((*(_65562_i)))++;
	if (((*(_65562_i)) >= (*(_65539_tokens)).len())) {
		((*(_65562_i)))--;
		({
			__jule_tuple_x_1e5ca5087_TypeDecl__jule_tuple_bool __jule_assign_result = _1e69dc6e7_buildType(_self_, _65539_tokens, (&((*(_65562_i)))), false);
			(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
		});
		return __jule_func_result;;
	};
	((*(_65562_i)))--;
	jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _6657_rangeTokens = _1e69d87ae_range(_65562_i, static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _65539_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_1e5c8eacc_Token>>> _6677_parts;
	jule::Slice<_22578b38a_Log> _66714_errs;
	({
		__jule_tuple_ssx_1e5c8eacc_Token__jule_tuple_s_22578b38a_Log __jule_assign_result = _1e69d902e_parts(&(_6657_rangeTokens), static_cast<jule::U64>(5LLU), true);
		_6677_parts = __jule_assign_result.__jule_result_arg0;
		_66714_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_66714_errs);
	if ((_6677_parts.len() == 0LL)) {
		return __jule_func_result;;
	};
	jule::Slice<jule::Ptr<_1e5ca5087_TypeDecl>> _6737_types = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5ca5087_TypeDecl>>::alloc(0LL, _6677_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1e5ca5087_TypeDecl>(nullptr); __jule_collection; });;
	(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5c8eacc_Token>>::alloc(0LL, _6677_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1e5c8eacc_Token>(nullptr); __jule_collection; });
	{
		auto expr = &(_6677_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbc05430:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _67515_part = *it;
			{
				if ((_67515_part.len() == 0LL)) {
					goto _iter_next_1cbc05430;
				};
				jule::Ptr<_1e5c8eacc_Token> _6798_token = _67515_part[0LL];;
				jule::I64 _6808_offset = 0LL;;
				if ((_67515_part.len() > 1LL)) {
					_6798_token=_67515_part[1LL];
					if (((*(_6798_token))._field_Id == static_cast<jule::U64>(8LLU))) {
						_6808_offset=2LL;
						if ((_67515_part.len() < 3LL)) {
							_1e69daae1_pushErr(_self_, _6798_token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
							goto _iter_next_1cbc05430;
						};
					};
				};
				_6798_token=_67515_part[0LL];
				if ((_6808_offset != 2LL)) {
					jule::Ptr<_1e5c8eacc_Token> _6969_newToken = jule::new_ptr<_1e5c8eacc_Token>((*_6798_token.alloc));;
					(*_6969_newToken.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=jule::append((*__jule_func_result.__jule_result_arg0.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5c8eacc_Token>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6969_newToken; __jule_collection; }));
				} else {
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=jule::append((*__jule_func_result.__jule_result_arg0.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5c8eacc_Token>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6798_token; __jule_collection; }));
				};
				jule::Ptr<_1e5ca5087_TypeDecl> _7038_tk;
				({
					__jule_tuple_x_1e5ca5087_TypeDecl__jule_tuple_bool __jule_assign_result = _1e69dc6e7_buildType(_self_, &(_67515_part), (&(_6808_offset)), true);
					_7038_tk = __jule_assign_result.__jule_result_arg0;
				});
				if ((_6808_offset < _67515_part.len())) {
					_1e69daae1_pushErr(_self_, _67515_part[_6808_offset], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				};
				{ jule::Slice<jule::Ptr<_1e5ca5087_TypeDecl>> &__jule_push_dest = _6737_types; __jule_push_dest.push(_7038_tk); };
			}
			_iter_next_1cbc05430:;
			++it;
			goto _iter_begin_1cbc05430;
		}
		_iter_end_1cbc05430:;
	};
	if ((_6737_types.len() > 1LL)) {
		(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind=jule::new_ptr<_1e5ca5087_TypeDecl>(_1e5ca5087_TypeDecl{._field_Token=(*(_65539_tokens))[0LL], ._field_Kind=jule::Any(jule::new_ptr<_1e5ca67b4_TupleTypeDecl>(_1e5ca67b4_TupleTypeDecl{._field_Types=_6737_types}), &__jule_any_type76)});
	} else {
		(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind=_6737_types[0LL];
	};
	__jule_func_result.__jule_result_arg1=true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1e5ca7e7a_RetTypeDecl__jule_tuple_bool _1e69e1322_buildRetType(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _72634_tokens, jule::I64* _72657_i) {
	__jule_tuple_x_1e5ca7e7a_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1e5ca7e7a_RetTypeDecl>(_1e5ca7e7a_RetTypeDecl{._field_Kind=jule::Ptr<_1e5ca5087_TypeDecl>(nullptr), ._field_Idents=jule::Slice<jule::Ptr<_1e5c8eacc_Token>>(nullptr)});
	if (((*(_72657_i)) >= (*(_72634_tokens)).len())) {
		return __jule_func_result;;
	};
	jule::Ptr<_1e5c8eacc_Token> _7327_token = (*(_72634_tokens))[(*(_72657_i))];;
	{
		auto &_match_expr{ (*(_7327_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1cbc0e4c2:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(71LLU)) {
			_case_begin_1cbc0e549:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(8LLU)) {
			_case_begin_1cbc0e5b0:;
			{
				if ((((*(_72657_i)) + 1LL) >= (*(_72634_tokens)).len())) {
					_1e69daae1_pushErr(_self_.ptr(), _7327_token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
					return __jule_func_result;;
				};
				((*(_72657_i)))++;
				_7327_token=(*(_72634_tokens))[(*(_72657_i))];
				{
					auto &_match_expr{ (*(_7327_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1cbc1046d:;
						{
							({
								__jule_tuple_x_1e5ca7e7a_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1e69e0e26_buildMultiRetType(_self_, _72634_tokens, _72657_i);
								__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
								__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
							});
							return __jule_func_result;;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1cbc115d4:;
						{
							_1e69daae1_pushErr(_self_, _7327_token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
							return __jule_func_result;;
						}
					}
					_match_end_1cbc1153a:;
				};
				({
					__jule_tuple_x_1e5ca5087_TypeDecl__jule_tuple_bool __jule_assign_result = _1e69dc6e7_buildType(_self_, _72634_tokens, (&((*(_72657_i)))), true);
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
				return __jule_func_result;;
			}
		}
		_match_end_1cbc0e45b:;
	};
	((*(_72657_i)))++;
	_1e69daae1_pushErr(_self_.ptr(), _7327_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return __jule_func_result;;
}



inline jule::Ptr<_1e5cb6c47_FnDecl> _1e69e17c8_buildFnPrototype(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _76538_tokens, jule::I64* _76561_i, jule::Bool _76569_method) {
	jule::Ptr<_1e5cb6c47_FnDecl> _7667_f = jule::new_ptr<_1e5cb6c47_FnDecl>(_1e5cb6c47_FnDecl{._field_Token=(*(_76538_tokens))[(*(_76561_i))], ._field_Global=false, ._field_Unsafety=false, ._field_Public=false, ._field_Binded=false, ._field_Statically=false, ._field_Exceptional=false, ._field_Ident=jule::Str(), ._field_Directives=jule::Slice<jule::Ptr<_1e5ca44a4_Directive>>(nullptr), ._field_Scope=jule::Ptr<_1e5cb50a8_ScopeTree>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5cb2292_GenericDecl>>(nullptr), ._field_Result=jule::Ptr<_1e5ca7e7a_RetTypeDecl>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5cb57e5_ParamDecl>>(nullptr)});;
	if (((*((*(_7667_f))._field_Token))._field_Id == static_cast<jule::U64>(34LLU))) {
		(*_7667_f.alloc)._field_Statically=true;
		((*(_76561_i)))++;
		if (((*(_76561_i)) >= (*(_76538_tokens)).len())) {
			_1e69daae1_pushErr(_self_.ptr(), (*_7667_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_7667_f.alloc)._field_Token=(*(_76538_tokens))[(*(_76561_i))];
	};
	if (((*(*(_7667_f))._field_Token.alloc)._field_Id == static_cast<jule::U64>(31LLU))) {
		(*_7667_f.alloc)._field_Unsafety=true;
		((*(_76561_i)))++;
		if (((*(_76561_i)) >= (*(_76538_tokens)).len())) {
			_1e69daae1_pushErr(_self_, (*_7667_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_7667_f.alloc)._field_Token=(*(_76538_tokens))[(*(_76561_i))];
	};
	((*(_76561_i)))++;
	if (((*(_76561_i)) >= (*(_76538_tokens)).len())) {
		_1e69daae1_pushErr(_self_, (*_7667_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1e5c8eacc_Token> _7993_tok = (*(_76538_tokens))[(*(_76561_i))];;
	if (((*(_7993_tok))._field_Id == static_cast<jule::U64>(1LLU))) {
		((*(_76561_i)))++;
		if (((*(_76561_i)) >= (*(_76538_tokens)).len())) {
			_1e69daae1_pushErr(_self_, (*_7667_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_7667_f.alloc)._field_Ident=(*_7993_tok.alloc)._field_Kind;
	} else {
		(*_7667_f.alloc)._field_Ident=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
	};
	jule::Ptr<_1e5c8eacc_Token> _8113_errorToken = (*(_76538_tokens))[(*(_76561_i))];;
	jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _8127_genericsTokens = _1e69d87ae_range(_76561_i, static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), _76538_tokens);;
	if ((_8127_genericsTokens != nullptr)) {
		(*_7667_f.alloc)._field_Generics=_1e69de100_buildGenerics(_self_, &(_8127_genericsTokens), &(_8113_errorToken));
	};
	if (((*((*(_76538_tokens))[(*(_76561_i))]))._field_Id != static_cast<jule::U64>(74LLU))) {
		_1e69daae1_pushErr(_self_, (*(_76538_tokens))[(*(_76561_i))], static_cast<jule::Str>(jule::Str::lit("missing function parentheses", 28)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _8227_paramsToks = _1e69d87ae_range(_76561_i, static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _76538_tokens);;
	if ((_8227_paramsToks.len() > 0LL)) {
		(*_7667_f.alloc)._field_Params=_1e69e0a2a_buildParams(_self_, &(_8227_paramsToks), _76569_method);
	};
	if (((*(_76561_i)) < (*(_76538_tokens)).len())) {
		jule::Ptr<_1e5c8eacc_Token> _8284_token = (*(_76538_tokens))[(*(_76561_i))];;
		if (((*(_8284_token))._field_Id == static_cast<jule::U64>(68LLU))) {
			(*_7667_f.alloc)._field_Exceptional=true;
			((*(_76561_i)))++;
		};
	};
	(*_7667_f.alloc)._field_Public=_1e5d78754_IsPub((*_7667_f.alloc)._field_Ident);
	({
		__jule_tuple_x_1e5ca7e7a_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1e69e1322_buildRetType(_self_, _76538_tokens, _76561_i);
		(*_7667_f.alloc)._field_Result = __jule_assign_result.__jule_result_arg0;
	});
	return _7667_f;;
}



inline jule::Ptr<_1e5cb6c47_FnDecl> _1e69e1c7e_buildFn(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _84229_tokens, jule::Bool _84247_method, jule::Bool _84261_prototype) {
	jule::I64 _8437_i = 0LL;;
	jule::Ptr<_1e5cb6c47_FnDecl> _8447_f = _1e69e17c8_buildFnPrototype(_self_, _84229_tokens, &(_8437_i), _84247_method);;
	if (_84261_prototype) {
		if ((_8437_i < (*(_84229_tokens)).len())) {
			_1e69daae1_pushErr(_self_, (*(_84229_tokens))[(_8437_i + 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		};
		return _8447_f;;
	} else if ((_8447_f == nullptr)) {
		return _8447_f;;
	};
	if ((_8437_i >= (*(_84229_tokens)).len())) {
		_1e69da43c_stop(_self_);
		_1e69daae1_pushErr(_self_, (*(_8447_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1e69dae54_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _8607_blockTokens = _1e69d87ae_range(&(_8437_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _84229_tokens);;
	if ((_8607_blockTokens != nullptr)) {
		(*_8447_f.alloc)._field_Scope=_1e69dbc8a_buildScope(_self_, &(_8607_blockTokens), (*(_84229_tokens))[(_8437_i - 1LL)]);
		(*((*_8447_f.alloc)._field_Scope))._field_Unsafety=(*_8447_f.alloc)._field_Unsafety;
		if ((_8437_i < (*(_84229_tokens)).len())) {
			_1e69daae1_pushErr(_self_, (*(_84229_tokens))[_8437_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		};
	} else {
		_1e69da43c_stop(_self_);
		_1e69daae1_pushErr(_self_, (*_8447_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1e69dae54_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _8447_f;;
}



inline jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _1e69e20c0_getUseDeclSelectors(_1e69da10c_parser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _87639_tokens) {
	jule::I64 _8777_i = 0LL;;
	_87639_tokens=_1e69d87ae_range(&(_8777_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_87639_tokens));
	jule::Slice<jule::Slice<jule::Ptr<_1e5c8eacc_Token>>> _8797_parts;
	jule::Slice<_22578b38a_Log> _87914_errs;
	({
		__jule_tuple_ssx_1e5c8eacc_Token__jule_tuple_s_22578b38a_Log __jule_assign_result = _1e69d902e_parts(&(_87639_tokens), static_cast<jule::U64>(5LLU), true);
		_8797_parts = __jule_assign_result.__jule_result_arg0;
		_87914_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_87914_errs.len() > 0LL)) {
		((*(_self_))._field_errors).append(_87914_errs);;
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _8857_selectors = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5c8eacc_Token>>::alloc(0LL, _8797_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1e5c8eacc_Token>(nullptr); __jule_collection; });;
	{
		auto expr = &(_8797_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbc2b1c0:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _88615_part = *it;
			{
				if ((_88615_part.len() > 1LL)) {
					_1e69daae1_pushErr(_self_, _88615_part[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1e5c8eacc_Token> _8908_tok = _88615_part[0LL];;
				if ((((*(_8908_tok))._field_Id != static_cast<jule::U64>(1LLU)) && ((*_8908_tok.alloc)._field_Id != static_cast<jule::U64>(24LLU)))) {
					_1e69daae1_pushErr(_self_, _8908_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					_1e69dae54_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
					goto _iter_next_1cbc2b1c0;
				};
				{ jule::Slice<jule::Ptr<_1e5c8eacc_Token>> &__jule_push_dest = _8857_selectors; __jule_push_dest.push(_8908_tok); };
			}
			_iter_next_1cbc2b1c0:;
			++it;
			goto _iter_begin_1cbc2b1c0;
		}
		_iter_end_1cbc2b1c0:;
	};
	return _8857_selectors;;
}



inline void _1e69e2433_buildBindUseDecl(_1e69da10c_parser* _self_, jule::Ptr<_1e5cbd18d_UseDecl>* _90137_decl, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _90154_tokens) {
	if (((*(_90154_tokens)).len() > 1LL)) {
		_1e69daae1_pushErr(_self_, (*(_90154_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e5c8eacc_Token> _9053_token = (*(_90154_tokens))[0LL];;
	if ((((*(_9053_token))._field_Id != static_cast<jule::U64>(4LLU)) || (((*_9053_token.alloc)._field_Kind[0LL] != '`') && ((*_9053_token.alloc)._field_Kind[0LL] != '\"')))) {
		_1e69daae1_pushErr(_self_, _9053_token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_90137_decl))))._field_Binded=true;
	(*((*(_90137_decl))))._field_LinkPath=(*_9053_token.alloc)._field_Kind.slice(1LL, ((*_9053_token.alloc)._field_Kind.len() - 1LL));
}



inline jule::Str _1e69e2774_useDeclTokstoa(_1e69da10c_parser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _91431_tokens) {
	jule::I64 _9157_n = 0LL;;
	{
		auto expr = _91431_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbc33b23:;
		if (it != expr_end) {
			jule::Ptr<_1e5c8eacc_Token> *_91610_token = it;
			{
				if ((((*((*(_91610_token))))._field_Id != static_cast<jule::U64>(1LLU)) && ((*(*(_91610_token)).alloc)._field_Id != static_cast<jule::U64>(19LLU)))) {
					_1e69daae1_pushErr(_self_, (*(_91610_token)), static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				};
				_9157_n+=(*(*(_91610_token)).alloc)._field_Kind.len();
			}
			_iter_next_1cbc33b23:;
			++it;
			goto _iter_begin_1cbc33b23;
		}
		_iter_end_1cbc33b23:;
	};
	_224497295_StrBuilder _9227_s = static__2244a0b83_New(_9157_n);;
	{
		auto expr = _91431_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbc33859:;
		if (it != expr_end) {
			jule::Ptr<_1e5c8eacc_Token> *_92310_token = it;
			{
				_2244a1090_WriteStr(&_9227_s, (*((*(_92310_token))))._field_Kind);
			}
			_iter_next_1cbc33859:;
			++it;
			goto _iter_begin_1cbc33859;
		}
		_iter_end_1cbc33859:;
	};
	return _2244a1887_Str(&_9227_s);;
}



inline void _1e69e2ad7_buildStdUseDecl(_1e69da10c_parser* _self_, jule::Ptr<_1e5cbd18d_UseDecl>* _92936_decl, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _92956_tokens) {
	(*((*(_92936_decl))))._field_Std=true;
	jule::Ptr<_1e5c8eacc_Token> _9327_token = _92956_tokens[0LL];;
	if ((_92956_tokens.len() < 3LL)) {
		_1e69daae1_pushErr(_self_, _9327_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(_92956_tokens).mut_slice(2LL);;
	_9327_token=_92956_tokens[(_92956_tokens.len() - 1LL)];
	{
		auto &_match_expr{ (*(_9327_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1cbc386b6:;
			{
				_1e69daae1_pushErr(_self_, _9327_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1cbc3873d:;
			{
				jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _94512_selectors = nullptr;;
				({
					__jule_tuple_sx_1e5c8eacc_Token__jule_tuple_sx_1e5c8eacc_Token __jule_assign_result = _1e69d8a78_rangeLast(&(_92956_tokens));
					_92956_tokens = __jule_assign_result.__jule_result_arg0;
					_94512_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*((*(_92936_decl))))._field_Selected=_1e69e20c0_getUseDeclSelectors(_self_, _94512_selectors);
				if ((_92956_tokens.len() == 0LL)) {
					_1e69daae1_pushErr(_self_, _9327_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return;;
				};
				_9327_token=_92956_tokens[(_92956_tokens.len() - 1LL)];
				if (((*(_9327_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1e69daae1_pushErr(_self_, _9327_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return;;
				};
				(_92956_tokens).mut_slice(0LL, (_92956_tokens.len() - 1LL));;
				if ((_92956_tokens.len() == 0LL)) {
					_1e69daae1_pushErr(_self_, _9327_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1cbc387a4:;
			{
				(_92956_tokens).mut_slice(0LL, (_92956_tokens.len() - 1LL));;
				if ((_92956_tokens.len() == 0LL)) {
					_1e69daae1_pushErr(_self_, _9327_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return;;
				};
				_9327_token=_92956_tokens[(_92956_tokens.len() - 1LL)];
				if (((*(_9327_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1e69daae1_pushErr(_self_, _9327_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return;;
				};
				(_92956_tokens).mut_slice(0LL, (_92956_tokens.len() - 1LL));;
				if ((_92956_tokens.len() == 0LL)) {
					_1e69daae1_pushErr(_self_, _9327_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return;;
				};
				(*((*(_92936_decl))))._field_Full=true;
			}
		}
		_match_end_1cbc38650:;
	};
	if (((_92956_tokens.len() == 1LL) && ((*(_92956_tokens[0LL]))._field_Id == static_cast<jule::U64>(31LLU)))) {
		(*((*(_92936_decl))))._field_LinkPath=jule::Str::lit("std::unsafe", 11);
	} else {
		(*((*(_92936_decl))))._field_LinkPath=(jule::Str::lit("std::", 5) + _1e69e2774_useDeclTokstoa(_self_, &(_92956_tokens)));
	};
}



inline void _1e69e2e4a_buildIdentUseDecl(_1e69da10c_parser* _self_, jule::Ptr<_1e5cbd18d_UseDecl>* _98738_decl, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _98758_tokens) {
	(*((*(_98738_decl))))._field_Std=false;
	jule::Ptr<_1e5c8eacc_Token> _9907_token = _98758_tokens[(_98758_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ (*(_9907_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1cbc4299a:;
			{
				_1e69daae1_pushErr(_self_, _9907_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1cbc4389c:;
			{
				jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _99612_selectors = nullptr;;
				({
					__jule_tuple_sx_1e5c8eacc_Token__jule_tuple_sx_1e5c8eacc_Token __jule_assign_result = _1e69d8a78_rangeLast(&(_98758_tokens));
					_98758_tokens = __jule_assign_result.__jule_result_arg0;
					_99612_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*((*(_98738_decl))))._field_Selected=_1e69e20c0_getUseDeclSelectors(_self_, _99612_selectors);
				if ((_98758_tokens.len() == 0LL)) {
					_1e69daae1_pushErr(_self_, _9907_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return;;
				};
				_9907_token=_98758_tokens[(_98758_tokens.len() - 1LL)];
				if (((*(_9907_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1e69daae1_pushErr(_self_, _9907_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return;;
				};
				(_98758_tokens).mut_slice(0LL, (_98758_tokens.len() - 1LL));;
				if ((_98758_tokens.len() == 0LL)) {
					_1e69daae1_pushErr(_self_, _9907_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1cbc43913:;
			{
				(_98758_tokens).mut_slice(0LL, (_98758_tokens.len() - 1LL));;
				if ((_98758_tokens.len() == 0LL)) {
					_1e69daae1_pushErr(_self_, _9907_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return;;
				};
				_9907_token=_98758_tokens[(_98758_tokens.len() - 1LL)];
				if (((*(_9907_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1e69daae1_pushErr(_self_, _9907_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return;;
				};
				(_98758_tokens).mut_slice(0LL, (_98758_tokens.len() - 1LL));;
				if ((_98758_tokens.len() == 0LL)) {
					_1e69daae1_pushErr(_self_, _9907_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return;;
				};
				(*((*(_98738_decl))))._field_Full=true;
			}
		}
		_match_end_1cbc4376a:;
	};
	(*((*(_98738_decl))))._field_LinkPath=_1e69e2774_useDeclTokstoa(_self_, &(_98758_tokens));
}



inline void _1e69e32ad_parseUseDecl(_1e69da10c_parser* _self_, jule::Ptr<_1e5cbd18d_UseDecl>* _103533_decl, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _103553_tokens) {
	if ((*((*(_103533_decl))))._field_Binded) {
		_1e69e2433_buildBindUseDecl(_self_, _103533_decl, &(_103553_tokens));
		return;;
	};
	jule::Ptr<_1e5c8eacc_Token> _10417_token = _103553_tokens[0LL];;
	if (((*(_10417_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1e69daae1_pushErr(_self_, _10417_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1e69dae54_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return;;
	};
	if (((_103553_tokens.len() > 2LL) && ((*(_103553_tokens[1LL]))._field_Id == static_cast<jule::U64>(9LLU)))) {
		(*((*(_103533_decl))))._field_Alias=(*_10417_token.alloc)._field_Kind;
		if (((*(_103553_tokens[2LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1e69daae1_pushErr(_self_, _10417_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			_1e69dae54_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
			return;;
		};
		(_103553_tokens).mut_slice(2LL);;
		_10417_token=_103553_tokens[0LL];
	};
	;
	{
		
		if ((*(_10417_token))._field_Kind.equal("std", 3)) {
			_case_begin_1cbc51b1e:;
			{
				_1e69e2ad7_buildStdUseDecl(_self_, _103533_decl, _103553_tokens);
			}
		}
		else {
			_case_begin_1cbc513e3:;
			{
				_1e69e2e4a_buildIdentUseDecl(_self_, _103533_decl, _103553_tokens);
			}
		}
		_match_end_1cbc5137c:;
	};
}



inline jule::Ptr<_1e5cbd18d_UseDecl> _1e69e36a9_buildUseDecl(_1e69da10c_parser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _106932_tokens, jule::Bool _106950_binded) {
	jule::Ptr<_1e5cbd18d_UseDecl> _10707_decl = jule::new_ptr<_1e5cbd18d_UseDecl>(_1e5cbd18d_UseDecl{._field_Token=_106932_tokens[0LL], ._field_LinkPath=jule::Str(), ._field_Alias=jule::Str(), ._field_Full=false, ._field_Selected=jule::Slice<jule::Ptr<_1e5c8eacc_Token>>(nullptr), ._field_Binded=_106950_binded, ._field_Std=false});;
	if ((_106932_tokens.len() < 2LL)) {
		_1e69daae1_pushErr(_self_, (*(_10707_decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing path of use statement", 29)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_106932_tokens).mut_slice(1LL);;
	_1e69e32ad_parseUseDecl(_self_, &(_10707_decl), _106932_tokens);
	return _10707_decl;;
}



inline jule::Ptr<_1e5ca5087_TypeDecl> _1e69e3aa5_buildTypeEnumItemKind(jule::Ptr<_1e69da10c_parser> _self_, jule::I64* _108343_i, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _108356_tokens) {
	jule::I64 _10847_braceN = 0LL;;
	jule::I64 _10853_exprStart = (*(_108343_i));;
	for (; ((*(_108343_i)) < (*(_108356_tokens)).len()); ((*(_108343_i)))++) {
		{
			jule::Ptr<_1e5c8eacc_Token> _10874_t = (*(_108356_tokens))[(*(_108343_i))];;
			{
				auto &_match_expr{ (*(_10874_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1cbc55936:;
					{
						(_10847_braceN)++;
						goto _iter_next_1cbc54db9;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1cbc55c66:;
					{
						(_10847_braceN)--;
					}
				}
				_match_end_1cbc559ad:;
			};
			if ((_10847_braceN > 0LL)) {
				goto _iter_next_1cbc54db9;
			};
			if ((((*(_10874_t))._field_Id == static_cast<jule::U64>(5LLU)) || (((*(_108343_i)) + 1LL) >= (*(_108356_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _110313_kindTokens = nullptr;;
				if (((*_10874_t.alloc)._field_Id == static_cast<jule::U64>(5LLU))) {
					_110313_kindTokens=(*(_108356_tokens)).slice(_10853_exprStart, (*(_108343_i)));
				} else {
					_110313_kindTokens=(*(_108356_tokens)).slice(_10853_exprStart);
				};
				jule::I64 _11099_j = 0LL;;
				jule::Ptr<_1e5ca5087_TypeDecl> _11109_kind;
				({
					__jule_tuple_x_1e5ca5087_TypeDecl__jule_tuple_bool __jule_assign_result = _1e69dc6e7_buildType(_self_, &(_110313_kindTokens), (&(_11099_j)), true);
					_11109_kind = __jule_assign_result.__jule_result_arg0;
				});
				if ((_11099_j < _110313_kindTokens.len())) {
					_1e69daae1_pushErr(_self_, _110313_kindTokens[_11099_j], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				};
				return _11109_kind;;
			};
		}
	_iter_next_1cbc54db9:;
	}
	_iter_end_1cbc54db9:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1e5cbea30_TypeEnumItemDecl>> _1e69e3de6_buildTypeEnumItems(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _112040_tokens) {
	jule::Slice<jule::Ptr<_1e5cbea30_TypeEnumItemDecl>> _11217_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5cbea30_TypeEnumItemDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1e5cbea30_TypeEnumItemDecl>(nullptr); __jule_collection; });;
	jule::I64 _11227_i = 0LL;;
	for (; (_11227_i < (*(_112040_tokens)).len()); (_11227_i)++) {
		{
			jule::Ptr<_1e5c8eacc_Token> _11248_t = (*(_112040_tokens))[_11227_i];;
			jule::Ptr<_1e5cbea30_TypeEnumItemDecl> _11258_item = jule::new_ptr<_1e5cbea30_TypeEnumItemDecl>(_1e5cbea30_TypeEnumItemDecl{._field_Token=jule::Ptr<_1e5c8eacc_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Kind=jule::Ptr<_1e5ca5087_TypeDecl>(nullptr)});;
			(*_11258_item.alloc)._field_Token=_11248_t;
			if ((((*((*_11258_item.alloc)._field_Token))._field_Id == static_cast<jule::U64>(1LLU)) && (((*(_112040_tokens)).len() - _11227_i) > 2LL))) {
				_11248_t=(*(_112040_tokens))[(_11227_i + 1LL)];
				if (((*(_11248_t))._field_Id == static_cast<jule::U64>(8LLU))) {
					(*_11258_item.alloc)._field_Ident=(*(*(_11258_item))._field_Token.alloc)._field_Kind;
					_11227_i+=2LL;
					if (((_11227_i >= (*(_112040_tokens)).len()) || ((*((*(_112040_tokens))[_11227_i]))._field_Id == static_cast<jule::U64>(5LLU)))) {
						_1e69daae1_pushErr(_self_.ptr(), _11248_t, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
						goto _iter_next_1cbc5ac16;
					};
				};
			};
			(*_11258_item.alloc)._field_Kind=_1e69e3aa5_buildTypeEnumItemKind(_self_, &(_11227_i), _112040_tokens);
			{ jule::Slice<jule::Ptr<_1e5cbea30_TypeEnumItemDecl>> &__jule_push_dest = _11217_items; __jule_push_dest.push(_11258_item); };
		}
	_iter_next_1cbc5ac16:;
	}
	_iter_end_1cbc5ac16:;;
	return _11217_items;;
}



inline jule::Ptr<_1e5cc0190_TypeEnumDecl> _1e69e4237_buildTypeEnumDecl(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _114439_tokens) {
	jule::I64 _11457_i = 1LL;;
	jule::Ptr<_1e5cc0190_TypeEnumDecl> _11467_e = jule::new_ptr<_1e5cc0190_TypeEnumDecl>(_1e5cc0190_TypeEnumDecl{._field_Token=(*(_114439_tokens))[_11457_i], ._field_Public=false, ._field_Ident=jule::Str(), ._field_Items=jule::Slice<jule::Ptr<_1e5cbea30_TypeEnumItemDecl>>(nullptr), ._field_End=jule::Ptr<_1e5c8eacc_Token>(nullptr)});;
	if (((*((*(_11467_e))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1e69daae1_pushErr(_self_.ptr(), (*_11467_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1e69dae54_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(*_11467_e.alloc)._field_Ident=(*(*(_11467_e))._field_Token.alloc)._field_Kind;
	_11457_i+=3LL;
	jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _11567_itemTokens = _1e69d87ae_range(&(_11457_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _114439_tokens);;
	if ((_11567_itemTokens == nullptr)) {
		_1e69da43c_stop(_self_);
		_1e69daae1_pushErr(_self_, (*_11467_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1e69dae54_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return _11467_e;;
	} else if ((_11457_i < (*(_114439_tokens)).len())) {
		_1e69daae1_pushErr(_self_, (*(_114439_tokens))[_11457_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_11467_e.alloc)._field_Public=_1e5d78754_IsPub((*_11467_e.alloc)._field_Ident);
	(*_11467_e.alloc)._field_End=(*(_114439_tokens))[(_11457_i - 1LL)];
	(*_11467_e.alloc)._field_Items=_1e69e3de6_buildTypeEnumItems(_self_, &(_11567_itemTokens));
	return _11467_e;;
}



inline jule::Ptr<_1e5ca93bb_Expr> _1e69e4633_buildEnumItemExpr(jule::Ptr<_1e69da10c_parser> _self_, jule::I64* _117139_i, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _117152_tokens) {
	jule::I64 _11727_braceN = 0LL;;
	jule::I64 _11733_exprStart = (*(_117139_i));;
	for (; ((*(_117139_i)) < (*(_117152_tokens)).len()); ((*(_117139_i)))++) {
		{
			jule::Ptr<_1e5c8eacc_Token> _11754_t = (*(_117152_tokens))[(*(_117139_i))];;
			{
				auto &_match_expr{ (*(_11754_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1cbc690dc:;
					{
						(_11727_braceN)++;
						goto _iter_next_1cbc68570;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1cbc6941c:;
					{
						(_11727_braceN)--;
					}
				}
				_match_end_1cbc69164:;
			};
			if ((_11727_braceN > 0LL)) {
				goto _iter_next_1cbc68570;
			};
			if ((((*(_11754_t))._field_Id == static_cast<jule::U64>(5LLU)) || (((*(_117139_i)) + 1LL) >= (*(_117152_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _119113_exprTokens = nullptr;;
				if (((*_11754_t.alloc)._field_Id == static_cast<jule::U64>(5LLU))) {
					_119113_exprTokens=(*(_117152_tokens)).slice(_11733_exprStart, (*(_117139_i)));
				} else {
					_119113_exprTokens=(*(_117152_tokens)).slice(_11733_exprStart);
				};
				return _1e69db295_buildExpr(_self_, &(_119113_exprTokens));;
			};
		}
	_iter_next_1cbc68570:;
	}
	_iter_end_1cbc68570:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1e5cbd644_EnumItemDecl>> _1e69e4974_buildEnumItems(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _120336_tokens) {
	jule::Slice<jule::Ptr<_1e5cbd644_EnumItemDecl>> _12047_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5cbd644_EnumItemDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1e5cbd644_EnumItemDecl>(nullptr); __jule_collection; });;
	jule::I64 _12057_i = 0LL;;
	for (; (_12057_i < (*(_120336_tokens)).len()); (_12057_i)++) {
		{
			jule::Ptr<_1e5c8eacc_Token> _12078_t = (*(_120336_tokens))[_12057_i];;
			jule::Ptr<_1e5cbd644_EnumItemDecl> _12088_item = jule::new_ptr<_1e5cbd644_EnumItemDecl>(_1e5cbd644_EnumItemDecl{._field_Token=jule::Ptr<_1e5c8eacc_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Expr=jule::Ptr<_1e5ca93bb_Expr>(nullptr)});;
			(*_12088_item.alloc)._field_Token=_12078_t;
			if (((*((*_12088_item.alloc)._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
				_1e69daae1_pushErr(_self_.ptr(), (*_12088_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				_1e69dae54_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
			};
			(*_12088_item.alloc)._field_Ident=(*(*(_12088_item))._field_Token.alloc)._field_Kind;
			if ((((_12057_i + 1LL) >= (*(_120336_tokens)).len()) || ((*((*(_120336_tokens))[(_12057_i + 1LL)]))._field_Id == static_cast<jule::U64>(5LLU)))) {
				if (((_12057_i + 1LL) < (*(_120336_tokens)).len())) {
					(_12057_i)++;
				};
				{ jule::Slice<jule::Ptr<_1e5cbd644_EnumItemDecl>> &__jule_push_dest = _12047_items; __jule_push_dest.push(_12088_item); };
				goto _iter_next_1cbc72d0a;
			};
			(_12057_i)++;
			_12078_t=(*(_120336_tokens))[_12057_i];
			(_12057_i)++;
			if (((*(_12078_t))._field_Id != static_cast<jule::U64>(8LLU))) {
				_1e69daae1_pushErr(_self_, _12078_t, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				_1e69dae54_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected colon \":\" for assignment", 33)), jule::Slice<jule::Any>());
				goto _iter_next_1cbc72d0a;
			};
			if (((_12057_i >= (*(_120336_tokens)).len()) || ((*((*(_120336_tokens))[_12057_i]))._field_Id == static_cast<jule::U64>(5LLU)))) {
				_1e69daae1_pushErr(_self_, _12078_t, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
				goto _iter_next_1cbc72d0a;
			};
			(*_12088_item.alloc)._field_Expr=_1e69e4633_buildEnumItemExpr(_self_, &(_12057_i), _120336_tokens);
			{ jule::Slice<jule::Ptr<_1e5cbd644_EnumItemDecl>> &__jule_push_dest = _12047_items; __jule_push_dest.push(_12088_item); };
		}
	_iter_next_1cbc72d0a:;
	}
	_iter_end_1cbc72d0a:;;
	return _12047_items;;
}



inline jule::Ptr<_1e5cbe205_EnumDecl> _1e69e4cb5_buildEnumDecl(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _124035_tokens) {
	if (((*(_124035_tokens)).len() < 3LL)) {
		_1e69daae1_pushErr(_self_.ptr(), (*(_124035_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1e5cbe205_EnumDecl> _12457_e = jule::new_ptr<_1e5cbe205_EnumDecl>(_1e5cbe205_EnumDecl{._field_Token=(*(_124035_tokens))[1LL], ._field_Public=false, ._field_Ident=jule::Str(), ._field_Kind=jule::Ptr<_1e5ca5087_TypeDecl>(nullptr), ._field_Items=jule::Slice<jule::Ptr<_1e5cbd644_EnumItemDecl>>(nullptr), ._field_End=jule::Ptr<_1e5c8eacc_Token>(nullptr)});;
	if (((*((*(_12457_e))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1e69daae1_pushErr(_self_, (*_12457_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1e69dae54_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(*_12457_e.alloc)._field_Ident=(*(*(_12457_e))._field_Token.alloc)._field_Kind;
	jule::I64 _12537_i = 2LL;;
	if (((*((*(_124035_tokens))[_12537_i]))._field_Id == static_cast<jule::U64>(8LLU))) {
		(_12537_i)++;
		if ((_12537_i >= (*(_124035_tokens)).len())) {
			_1e69daae1_pushErr(_self_, (*(_124035_tokens))[(_12537_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return _12457_e;;
		};
		({
			__jule_tuple_x_1e5ca5087_TypeDecl__jule_tuple_bool __jule_assign_result = _1e69dc6e7_buildType(_self_, _124035_tokens, (&(_12537_i)), true);
			(*_12457_e.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
		});
		if ((_12537_i >= (*(_124035_tokens)).len())) {
			_1e69da43c_stop(_self_);
			_1e69daae1_pushErr(_self_, (*_12457_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
			_1e69dae54_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
			return _12457_e;;
		};
	} else {
		(*_12457_e.alloc)._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _12707_itemTokens = _1e69d87ae_range(&(_12537_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _124035_tokens);;
	if ((_12707_itemTokens == nullptr)) {
		_1e69da43c_stop(_self_);
		_1e69daae1_pushErr(_self_, (*_12457_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1e69dae54_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return _12457_e;;
	} else if ((_12537_i < (*(_124035_tokens)).len())) {
		_1e69daae1_pushErr(_self_, (*(_124035_tokens))[_12537_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_12457_e.alloc)._field_Public=_1e5d78754_IsPub((*_12457_e.alloc)._field_Ident);
	(*_12457_e.alloc)._field_End=(*(_124035_tokens))[(_12537_i - 1LL)];
	(*_12457_e.alloc)._field_Items=_1e69e4974_buildEnumItems(_self_, &(_12707_itemTokens));
	return _12457_e;;
}



inline jule::Any _1e69e5106_buildNodeEnumDecl(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _128539_tokens) {
	if ((((*(_128539_tokens)).len() > 3LL) && ((*((*(_128539_tokens))[2LL]))._field_Id == static_cast<jule::U64>(8LLU)))) {
		if (((*((*(_128539_tokens))[3LL]))._field_Id == static_cast<jule::U64>(7LLU))) {
			return jule::Any(_1e69e4237_buildTypeEnumDecl(_self_, _128539_tokens), &__jule_any_type18);;
		};
	};
	return jule::Any(_1e69e4cb5_buildEnumDecl(_self_, _128539_tokens), &__jule_any_type17);;
}



inline jule::Ptr<_1e5cc0459_FieldDecl> _1e69e5447_buildField(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _129431_tokens) {
	jule::Ptr<_1e5cc0459_FieldDecl> _12957_f = jule::new_ptr<_1e5cc0459_FieldDecl>(_1e5cc0459_FieldDecl{._field_Token=jule::Ptr<_1e5c8eacc_Token>(nullptr), ._field_Public=false, ._field_Mutable=false, ._field_Ident=jule::Str(), ._field_Kind=jule::Ptr<_1e5ca5087_TypeDecl>(nullptr), ._field_Default=jule::Ptr<_1e5ca93bb_Expr>(nullptr)});;
	(*_12957_f.alloc)._field_Mutable=((*(_129431_tokens[0LL]))._field_Id == static_cast<jule::U64>(32LLU));
	if ((*_12957_f.alloc)._field_Mutable) {
		if ((_129431_tokens.len() == 1LL)) {
			_1e69daae1_pushErr(_self_.ptr(), _129431_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_129431_tokens).mut_slice(1LL);;
	};
	(*_12957_f.alloc)._field_Token=_129431_tokens[0LL];
	if (((*((*_12957_f.alloc)._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1e69daae1_pushErr(_self_, (*_12957_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1e69dae54_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_12957_f.alloc)._field_Ident=(*(*(_12957_f))._field_Token.alloc)._field_Kind;
	if ((_129431_tokens.len() == 1LL)) {
		_1e69daae1_pushErr(_self_, _129431_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
		return nullptr;;
	} else if (((_129431_tokens.len() < 3LL) || ((*(_129431_tokens[1LL]))._field_Id != static_cast<jule::U64>(8LLU)))) {
		_1e69daae1_pushErr(_self_, _129431_tokens[1LL], static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_129431_tokens).mut_slice(2LL);;
	jule::I64 _13237_i = 0LL;;
	({
		__jule_tuple_x_1e5ca5087_TypeDecl__jule_tuple_bool __jule_assign_result = _1e69dc6e7_buildType(_self_, &(_129431_tokens), (&(_13237_i)), true);
		(*_12957_f.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_13237_i < _129431_tokens.len())) {
		jule::Ptr<_1e5c8eacc_Token> _13264_token = _129431_tokens[_13237_i];;
		if (((*(_13264_token))._field_Id != static_cast<jule::U64>(71LLU))) {
			_1e69daae1_pushErr(_self_, _129431_tokens[_13237_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_13237_i)++;
		if ((_13237_i >= _129431_tokens.len())) {
			_1e69daae1_pushErr(_self_, _13264_token, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_129431_tokens).mut_slice(_13237_i);;
		(*_12957_f.alloc)._field_Default=_1e69db295_buildExpr(_self_, &(_129431_tokens));
	};
	(*_12957_f.alloc)._field_Public=_1e5d78754_IsPub((*_12957_f.alloc)._field_Ident);
	return _12957_f;;
}



inline jule::Slice<jule::Ptr<_1e5cc0459_FieldDecl>> _1e69e5788_buildStructDeclFields(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _134342_tokens) {
	jule::Slice<jule::Ptr<_1e5cc0459_FieldDecl>> _134411_fields = nullptr;;
	jule::Slice<jule::Ptr<_1e69bb1dc_stmt>> _13457_stmts = _1e69bb594_splitStmts(&(_134342_tokens));;
	{
		auto expr = &(_13457_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbc94c0b:;
		if (it != expr_end) {
			jule::Ptr<_1e69bb1dc_stmt> _134615_stmt = *it;
			{
				_134342_tokens=(*(_134615_stmt))._field_tokens;
				jule::Ptr<_1e5cc0459_FieldDecl> _13488_f = _1e69e5447_buildField(_self_, _134342_tokens);;
				{ jule::Slice<jule::Ptr<_1e5cc0459_FieldDecl>> &__jule_push_dest = _134411_fields; __jule_push_dest.push(_13488_f); };
			}
			_iter_next_1cbc94c0b:;
			++it;
			goto _iter_begin_1cbc94c0b;
		}
		_iter_end_1cbc94c0b:;
	};
	return _134411_fields;;
}



inline jule::Ptr<_1e5cc0d50_StructDecl> _1e69e5ac9_buildStructDecl(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _135437_tokens) {
	if (((*(_135437_tokens)).len() < 3LL)) {
		_1e69daae1_pushErr(_self_.ptr(), (*(_135437_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _13607_i = 1LL;;
	jule::Ptr<_1e5cc0d50_StructDecl> _13617_s = jule::new_ptr<_1e5cc0d50_StructDecl>(_1e5cc0d50_StructDecl{._field_Token=(*(_135437_tokens))[_13607_i], ._field_End=jule::Ptr<_1e5c8eacc_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Fields=jule::Slice<jule::Ptr<_1e5cc0459_FieldDecl>>(nullptr), ._field_Public=false, ._field_Binded=false, ._field_Directives=jule::Slice<jule::Ptr<_1e5ca44a4_Directive>>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5cb2292_GenericDecl>>(nullptr)});;
	if (((*((*(_13617_s))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1e69daae1_pushErr(_self_, (*_13617_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1e69dae54_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(_13607_i)++;
	if ((_13607_i >= (*(_135437_tokens)).len())) {
		_1e69daae1_pushErr(_self_, (*(_135437_tokens))[_13607_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return _13617_s;;
	};
	(*_13617_s.alloc)._field_Ident=(*(*(_13617_s))._field_Token.alloc)._field_Kind;
	jule::Ptr<_1e5c8eacc_Token> _13753_errorToken = (*(_135437_tokens))[_13607_i];;
	jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _13767_genericsTokens = _1e69d87ae_range(&(_13607_i), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), _135437_tokens);;
	if ((_13767_genericsTokens != nullptr)) {
		(*_13617_s.alloc)._field_Generics=_1e69de100_buildGenerics(_self_, &(_13767_genericsTokens), &(_13753_errorToken));
	};
	if ((_13607_i >= (*(_135437_tokens)).len())) {
		_1e69daae1_pushErr(_self_, (*(_135437_tokens))[(_13607_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1e69dae54_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return _13617_s;;
	};
	jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _13867_bodyTokens = _1e69d87ae_range(&(_13607_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _135437_tokens);;
	if ((_13867_bodyTokens == nullptr)) {
		_1e69da43c_stop(_self_);
		_1e69daae1_pushErr(_self_, (*_13617_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1e69dae54_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return _13617_s;;
	};
	if ((_13607_i < (*(_135437_tokens)).len())) {
		_1e69daae1_pushErr(_self_, (*(_135437_tokens))[_13607_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_13617_s.alloc)._field_Public=_1e5d78754_IsPub((*_13617_s.alloc)._field_Ident);
	(*_13617_s.alloc)._field_Fields=_1e69e5788_buildStructDeclFields(_self_, _13867_bodyTokens);
	(*_13617_s.alloc)._field_End=(*(_135437_tokens))[(_13607_i - 1LL)];
	return _13617_s;;
}



inline void _1e69e5d82_checkMethodReceiver(_1e69da10c_parser* _self_, jule::Ptr<_1e5cb6c47_FnDecl>* _140236_f) {
	if ((*((*(_140236_f))))._field_Statically) {
		if ((((*((*(_140236_f))))._field_Params.len() > 0LL) && _1e5cb5b9c_IsSelf((*((*(_140236_f))))._field_Params[0LL].ptr()))) {
			_1e69daae1_pushErr(_self_, (*((*(_140236_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("static functions cannot have receiver parameter", 47)), jule::Slice<jule::Any>());
		};
		return;;
	};
	if (((*((*(_140236_f))))._field_Params.len() == 0LL)) {
		_1e69daae1_pushErr(_self_, (*((*(_140236_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing receiver parameter", 26)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e5cb57e5_ParamDecl> _14143_param = (*((*(_140236_f))))._field_Params[0LL];;
	if ((!(_1e5cb5b9c_IsSelf(_14143_param.ptr())))) {
		_1e69daae1_pushErr(_self_, (*((*(_140236_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing receiver parameter", 26)), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1e69e61e5_buildTraitBody(jule::Ptr<_1e69da10c_parser> _self_, jule::Ptr<_1e5cc158c_TraitDecl>* _142136_t, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _142155_tokens) {
	jule::Slice<jule::Ptr<_1e69bb1dc_stmt>> _14227_stmts = _1e69bb594_splitStmts(&(_142155_tokens));;
	{
		auto expr = &(_14227_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbca6569:;
		if (it != expr_end) {
			jule::Ptr<_1e69bb1dc_stmt> _142315_stmt = *it;
			{
				_142155_tokens=(*(_142315_stmt))._field_tokens;
				if ((_142155_tokens.len() == 0LL)) {
					goto _iter_next_1cbca6569;
				};
				{
					auto &_match_expr{ (*(_142155_tokens[0LL]))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(29LLU)) {
						_case_begin_1cbcaa1d8:;
						{
							jule::Ptr<_1e5cb6c47_FnDecl> _14309_f = _1e69e1c7e_buildFn(_self_, &(_142155_tokens), true, true);;
							if ((_14309_f == nullptr)) {
								goto _match_end_1cbca7834;
							};
							_1e69e5d82_checkMethodReceiver(_self_, &(_14309_f));
							if (((*(_14309_f))._field_Generics.len() > 0LL)) {
								_1e69daae1_pushErr(_self_, (*(_14309_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait methods cannot have generics", 34)), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1e5cb6c47_FnDecl>> &__jule_push_dest = (*((*(_142136_t))))._field_Methods; __jule_push_dest.push(_14309_f); };
						}
					}
					else {
						_case_begin_1cbca712a:;
						{
							jule::I64 _14409_i = 0LL;;
							jule::Ptr<_1e5ca5087_TypeDecl> _14419_ti;
							jule::Bool _144113_ok;
							({
								__jule_tuple_x_1e5ca5087_TypeDecl__jule_tuple_bool __jule_assign_result = _1e69dc6e7_buildType(_self_, &(_142155_tokens), (&(_14409_i)), true);
								_14419_ti = __jule_assign_result.__jule_result_arg0;
								_144113_ok = __jule_assign_result.__jule_result_arg1;
							});
							if ((!(_144113_ok))) {
								goto _match_end_1cbca7834;
							};
							if ((_14409_i < _142155_tokens.len())) {
								_1e69daae1_pushErr(_self_, _142155_tokens[_14409_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1e5ca5087_TypeDecl>> &__jule_push_dest = (*((*(_142136_t))))._field_Inherits; __jule_push_dest.push(_14419_ti); };
						}
					}
					_match_end_1cbca7834:;
				};
			}
			_iter_next_1cbca6569:;
			++it;
			goto _iter_begin_1cbca6569;
		}
		_iter_end_1cbca6569:;
	};
}



inline jule::Ptr<_1e5cc158c_TraitDecl> _1e69e6536_buildTraitDecl(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _145336_tokens) {
	if (((*(_145336_tokens)).len() < 3LL)) {
		_1e69daae1_pushErr(_self_.ptr(), (*(_145336_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1e5cc158c_TraitDecl> _14587_t = jule::new_ptr<_1e5cc158c_TraitDecl>(_1e5cc158c_TraitDecl{._field_Token=(*(_145336_tokens))[1LL], ._field_End=jule::Ptr<_1e5c8eacc_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Public=false, ._field_Inherits=jule::Slice<jule::Ptr<_1e5ca5087_TypeDecl>>(nullptr), ._field_Methods=jule::Slice<jule::Ptr<_1e5cb6c47_FnDecl>>(nullptr)});;
	if (((*((*(_14587_t))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1e69daae1_pushErr(_self_, (*_14587_t.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1e69dae54_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(*_14587_t.alloc)._field_Ident=(*(*(_14587_t))._field_Token.alloc)._field_Kind;
	jule::I64 _14667_i = 2LL;;
	jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _14677_bodyTokens = _1e69d87ae_range(&(_14667_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _145336_tokens);;
	if ((_14677_bodyTokens == nullptr)) {
		_1e69da43c_stop(_self_);
		_1e69daae1_pushErr(_self_, (*_14587_t.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1e69dae54_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_14667_i < (*(_145336_tokens)).len())) {
		_1e69daae1_pushErr(_self_, (*(_145336_tokens))[_14667_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_14587_t.alloc)._field_Public=_1e5d78754_IsPub((*_14587_t.alloc)._field_Ident);
	_1e69e61e5_buildTraitBody(_self_, &(_14587_t), _14677_bodyTokens);
	(*_14587_t.alloc)._field_End=(*(_145336_tokens))[(_14667_i - 1LL)];
	return _14587_t;;
}



inline jule::Ptr<_1e5cb6c47_FnDecl> _1e69e6877_buildBindFn(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _148332_tokens) {
	(_148332_tokens).mut_slice(1LL);;
	jule::Ptr<_1e5cb6c47_FnDecl> _14857_f = _1e69e1c7e_buildFn(_self_, &(_148332_tokens), false, true);;
	if ((_14857_f != nullptr)) {
		(*_14857_f.alloc)._field_Public=false;
		(*_14857_f.alloc)._field_Binded=true;
	};
	return _14857_f;;
}



inline jule::Ptr<_1e5cb7e02_VarDecl> _1e69e6bb8_buildBindVar(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _149333_tokens) {
	(_149333_tokens).mut_slice(1LL);;
	jule::Ptr<_1e5cb7e02_VarDecl> _14957_v = _1e69dd8b3_buildVar(_self_, _149333_tokens);;
	if ((_14957_v != nullptr)) {
		(*_14957_v.alloc)._field_Public=false;
		(*_14957_v.alloc)._field_Binded=true;
		if (((*_14957_v.alloc)._field_Expr != nullptr)) {
			_1e69daae1_pushErr(_self_, (*_14957_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("binded variables cannot have expression", 39)), jule::Slice<jule::Any>());
		};
	};
	return _14957_v;;
}



inline jule::Ptr<_1e5cc0d50_StructDecl> _1e69e7009_buildBindStruct(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _150636_tokens) {
	(_150636_tokens).mut_slice(1LL);;
	jule::Ptr<_1e5cc0d50_StructDecl> _15087_s = _1e69e5ac9_buildStructDecl(_self_, &(_150636_tokens));;
	if ((_15087_s != nullptr)) {
		(*_15087_s.alloc)._field_Public=false;
		{
			auto expr = &((*_15087_s.alloc)._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1cbcb9c53:;
			if (it != expr_end) {
				jule::Ptr<_1e5cc0459_FieldDecl> _151116_f = *it;
				{
					(*(_151116_f))._field_Public=true;
				}
				_iter_next_1cbcb9c53:;
				++it;
				goto _iter_begin_1cbcb9c53;
			}
			_iter_end_1cbcb9c53:;
		};
		(*_15087_s.alloc)._field_Binded=true;
	};
	return _15087_s;;
}



inline jule::Ptr<_1e5cbbaa4_TypeAliasDecl> _1e69e734a_buildBindTypeAlias(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _152039_tokens) {
	(_152039_tokens).mut_slice(1LL);;
	jule::Ptr<_1e5cbbaa4_TypeAliasDecl> _15227_t = _1e69dca38_buildTypeAliasDecl(_self_, &(_152039_tokens));;
	if ((_15227_t != nullptr)) {
		(*_15227_t.alloc)._field_Public=false;
		(*_15227_t.alloc)._field_Binded=true;
	};
	return _15227_t;;
}



inline jule::Ptr<_1e5cbd18d_UseDecl> _1e69e768b_buildBindUse(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _153033_tokens) {
	if ((_153033_tokens.len() == 1LL)) {
		_1e69daae1_pushErr(_self_.ptr(), _153033_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_153033_tokens).mut_slice(1LL);;
	;
	return _1e69e36a9_buildUseDecl(_self_, _153033_tokens, true);;
}



inline jule::Any _1e69e79cc_buildBind(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _154131_tokens) {
	jule::Ptr<_1e5c8eacc_Token> _15427_token = (*(_154131_tokens))[0LL];;
	if (((*(_154131_tokens)).len() == 1LL)) {
		_1e69daae1_pushErr(_self_.ptr(), _15427_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_15427_token=(*(_154131_tokens))[1LL];
	{
		auto &_match_expr{ (*(_15427_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1cbcc0d25:;
			{
				return jule::Any(_1e69e6877_buildBindFn(_self_, (*(_154131_tokens))), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU) || _match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1cbcc096d:;
			{
				return jule::Any(_1e69e6bb8_buildBindVar(_self_, (*(_154131_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1cbcc09d4:;
			{
				return jule::Any(_1e69e7009_buildBindStruct(_self_, (*(_154131_tokens))), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1cbcc0a4a:;
			{
				return jule::Any(_1e69e734a_buildBindTypeAlias(_self_, (*(_154131_tokens))), &__jule_any_type12);;
			}
		}
		else {
			_case_begin_1cbcbec03:;
			{
				_1e69daae1_pushErr(_self_, _15427_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1cbcc0907:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e5cb6c47_FnDecl> _1e69e7d1d_getMethod(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _156531_tokens) {
	jule::I64 _15667_i = 0LL;;
	jule::Ptr<_1e5c8eacc_Token> _15677_token = (*(_156531_tokens))[_15667_i];;
	if (((*(_15677_token))._field_Id == static_cast<jule::U64>(34LLU))) {
		if (((_15667_i + 1LL) >= (*(_156531_tokens)).len())) {
			_1e69daae1_pushErr(_self_.ptr(), _15677_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_15667_i)++;
		_15677_token=(*(_156531_tokens))[_15667_i];
	};
	if (((*_15677_token.alloc)._field_Id == static_cast<jule::U64>(31LLU))) {
		if (((_15667_i + 1LL) >= (*(_156531_tokens)).len())) {
			_1e69daae1_pushErr(_self_, _15677_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_15667_i)++;
		_15677_token=(*(_156531_tokens))[_15667_i];
	};
	if (((*_15677_token.alloc)._field_Id != static_cast<jule::U64>(29LLU))) {
		_1e69daae1_pushErr(_self_, _15677_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1e69e1c7e_buildFn(_self_, _156531_tokens, true, false);;
}



inline void _1e69e8181_parseImplBody(jule::Ptr<_1e69da10c_parser> _self_, jule::Ptr<_1e5cc1bec_Impl>* _159435_ipl, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _159452_tokens) {
	jule::Slice<jule::Ptr<_1e69bb1dc_stmt>> _15957_stmts = _1e69bb594_splitStmts(_159452_tokens);;
	{
		auto expr = &(_15957_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbcc8c73:;
		if (it != expr_end) {
			jule::Ptr<_1e69bb1dc_stmt> _159615_stmt = *it;
			{
				(*(_159452_tokens))=(*(_159615_stmt))._field_tokens;
				jule::Ptr<_1e5c8eacc_Token> _15988_token = (*(_159452_tokens))[0LL];;
				{
					auto &_match_expr{ (*(_15988_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(35LLU)) {
						_case_begin_1cbcc9c74:;
						{
							_1e69db88e_pushDirective(_self_.ptr(), _1e69db5d6_buildDirective(_self_, (*(_159452_tokens))));
							goto _iter_next_1cbcc8c73;
						}
					}
					_match_end_1cbcc9eb6:;
				};
				{
					auto &_match_expr{ (*(_15988_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(6LLU)) {
						_case_begin_1cbccb23c:;
						{
							jule::Ptr<_1e5cb7e02_VarDecl> _16079_v = _1e69dd8b3_buildVar(_self_, (*(_159452_tokens)));;
							if ((_16079_v != nullptr)) {
								{ jule::Slice<jule::Ptr<_1e5cb7e02_VarDecl>> &__jule_push_dest = (*((*(_159435_ipl))))._field_Statics; __jule_push_dest.push(_16079_v); };
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
						_case_begin_1cbccae73:;
						{
							jule::Ptr<_1e5cb6c47_FnDecl> _16149_f = _1e69e7d1d_getMethod(_self_, _159452_tokens);;
							if ((_16149_f != nullptr)) {
								_1e69e5d82_checkMethodReceiver(_self_, &(_16149_f));
								_1e69e8abb_applyFnMeta(_self_, &(_16149_f));
								{ jule::Slice<jule::Ptr<_1e5cb6c47_FnDecl>> &__jule_push_dest = (*((*(_159435_ipl))))._field_Methods; __jule_push_dest.push(_16149_f); };
							};
						}
					}
					else {
						_case_begin_1cbcca11a:;
						{
							_1e69daae1_pushErr(_self_, _15988_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
							goto _iter_next_1cbcc8c73;
						}
					}
					_match_end_1cbcca615:;
				};
			}
			_iter_next_1cbcc8c73:;
			++it;
			goto _iter_begin_1cbcc8c73;
		}
		_iter_end_1cbcc8c73:;
	};
}



inline jule::Ptr<_1e5cc1bec_Impl> _1e69e84c2_buildImpl(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _162730_tokens) {
	jule::Ptr<_1e5c8eacc_Token> _16287_token = _162730_tokens[0LL];;
	if ((_162730_tokens.len() < 2LL)) {
		_1e69daae1_pushErr(_self_.ptr(), _16287_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _16347_i = 1LL;;
	jule::Ptr<_1e5ca5087_TypeDecl> _16367_base;
	jule::Bool _163617_ok;
	({
		__jule_tuple_x_1e5ca5087_TypeDecl__jule_tuple_bool __jule_assign_result = _1e69dc6e7_buildType(_self_, &(_162730_tokens), (&(_16347_i)), true);
		_16367_base = __jule_assign_result.__jule_result_arg0;
		_163617_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_163617_ok))) {
		return nullptr;;
	};
	if ((_16347_i >= _162730_tokens.len())) {
		_1e69daae1_pushErr(_self_, _16287_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1e5cc1bec_Impl> _16457_ipl = jule::new_ptr<_1e5cc1bec_Impl>(_1e5cc1bec_Impl{._field_End=jule::Ptr<_1e5c8eacc_Token>(nullptr), ._field_Base=_16367_base, ._field_Dest=jule::Ptr<_1e5ca5087_TypeDecl>(nullptr), ._field_Methods=jule::Slice<jule::Ptr<_1e5cb6c47_FnDecl>>(nullptr), ._field_Statics=jule::Slice<jule::Ptr<_1e5cb7e02_VarDecl>>(nullptr)});;
	_16287_token=_162730_tokens[_16347_i];
	if (((*(_16287_token))._field_Id != static_cast<jule::U64>(9LLU))) {
		if (((*_16287_token.alloc)._field_Id == static_cast<jule::U64>(72LLU))) {
			std::swap((*(_16457_ipl))._field_Base, (*_16457_ipl.alloc)._field_Dest);
			goto _julec_label_1cbcd7e6e;
		};
		_1e69da43c_stop(_self_);
		_1e69daae1_pushErr(_self_, _16287_token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1e69dae54_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_16347_i)++;
	if ((_16347_i >= _162730_tokens.len())) {
		_1e69da43c_stop(_self_);
		_1e69daae1_pushErr(_self_, _16287_token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1e69dae54_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	({
		__jule_tuple_x_1e5ca5087_TypeDecl__jule_tuple_bool __jule_assign_result = _1e69dc6e7_buildType(_self_, &(_162730_tokens), (&(_16347_i)), true);
		(*_16457_ipl.alloc)._field_Dest = __jule_assign_result.__jule_result_arg0;
		_163617_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_163617_ok))) {
		return nullptr;;
	};
	if ((_16347_i >= _162730_tokens.len())) {
		_1e69da43c_stop(_self_);
		_1e69daae1_pushErr(_self_, _16287_token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1e69dae54_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1cbcd7e6e:;
	jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _16837_bodyTokens = _1e69d87ae_range(&(_16347_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_162730_tokens));;
	if ((_16837_bodyTokens == nullptr)) {
		_1e69da43c_stop(_self_);
		_1e69daae1_pushErr(_self_, _16287_token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1e69dae54_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_16347_i < _162730_tokens.len())) {
		_1e69daae1_pushErr(_self_, _162730_tokens[_16347_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_16457_ipl.alloc)._field_End=_162730_tokens[(_16347_i - 1LL)];
	_1e69e8181_parseImplBody(_self_, &(_16457_ipl), &(_16837_bodyTokens));
	return _16457_ipl;;
}



inline jule::Any _1e69e8813_buildNodeData(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _169835_tokens) {
	jule::Ptr<_1e5c8eacc_Token> _16997_token = (*(_169835_tokens))[0LL];;
	{
		auto &_match_expr{ (*(_16997_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1cbcdd13e:;
			{
				jule::Ptr<_1e5cb6c47_FnDecl> _17038_f = _1e69e1c7e_buildFn(_self_, _169835_tokens, false, false);;
				if ((_17038_f != nullptr)) {
					(*_17038_f.alloc)._field_Global=true;
				};
				return jule::Any(_17038_f, &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU) || _match_expr == static_cast<jule::U64>(6LLU) || _match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1cbcdd826:;
			{
				return jule::Any(_1e69dd8b3_buildVar(_self_, (*(_169835_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1cbcdd88c:;
			{
				return jule::Any(_1e69dca38_buildTypeAliasDecl(_self_, _169835_tokens), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(20LLU)) {
			_case_begin_1cbcdcc54:;
			{
				return _1e69e5106_buildNodeEnumDecl(_self_, _169835_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1cbcdccba:;
			{
				return jule::Any(_1e69e5ac9_buildStructDecl(_self_, _169835_tokens), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1cbcdcd31:;
			{
				return jule::Any(_1e69e6536_buildTraitDecl(_self_, _169835_tokens), &__jule_any_type15);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(26LLU)) {
			_case_begin_1cbcdcd97:;
			{
				return jule::Any(_1e69e84c2_buildImpl(_self_, (*(_169835_tokens))), &__jule_any_type11);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1cbcdce1e:;
			{
				return _1e69e79cc_buildBind(_self_, _169835_tokens);;
			}
		}
		else {
			_case_begin_1cbcdc957:;
			{
				_1e69daae1_pushErr(_self_.ptr(), _16997_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1cbcdcbdd:;
	};
}



inline void _1e69e8abb_applyFnMeta(_1e69da10c_parser* _self_, jule::Ptr<_1e5cb6c47_FnDecl>* _173132_f) {
	(*((*(_173132_f))))._field_Directives=(*(_self_))._field_directives;
	(*(_self_))._field_directives=nullptr;
}



inline void _1e69e8d74_applyMeta(_1e69da10c_parser* _self_, _1e5ca4086_Node* _173630_node) {
	{
		auto &_match_expr{ (*(_173630_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1cbce4a08:;
			{
				jule::Ptr<_1e5cb7e02_VarDecl> _17398_v = (*(_173630_node))._field_Data.unsafe_cast_ptr<_1e5cb7e02_VarDecl>();;
				if ((_17398_v == nullptr)) {
					return;;
				};
				(*(_17398_v))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1cbce4761:;
			{
				jule::Ptr<_1e5cb6c47_FnDecl> _17468_f = (*(_173630_node))._field_Data.unsafe_cast_ptr<_1e5cb6c47_FnDecl>();;
				if ((_17468_f == nullptr)) {
					return;;
				};
				_1e69e8abb_applyFnMeta(_self_, &(_17468_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1cbce4aa2:;
			{
				jule::Ptr<_1e5cc0d50_StructDecl> _17528_sd = (*(_173630_node))._field_Data.unsafe_cast_ptr<_1e5cc0d50_StructDecl>();;
				if ((_17528_sd == nullptr)) {
					return;;
				};
				(*(_17528_sd))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		_match_end_1cbce4970:;
	};
}



inline void _1e69e912c_pushUseDecl(jule::Ptr<_1e69da10c_parser> _self_, jule::Ptr<_1e5cbd18d_UseDecl>* _176133_decl) {
	(*((*(_self_))._field_ast))._field_UseDecls=jule::append((*(*(_self_))._field_ast.alloc)._field_UseDecls,({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5cbd18d_UseDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_176133_decl)); __jule_collection; }));
	if (((*(*(_self_))._field_ast.alloc)._field_Nodes.len() > 0LL)) {
		_1e69daae1_pushErr(_self_, (*((*(_176133_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("use declarations must declared top of source code", 49)), jule::Slice<jule::Any>());
		_1e69dae54_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("move this use declaration to top of source file", 47)), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1e69e946d_pushMetaNodes(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _176935_tokens) {
	{
		auto &_match_expr{ (*((*(_176935_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1cbceb14c:;
			{
				;
				jule::Ptr<_1e5cbd18d_UseDecl> _17738_decl = _1e69e36a9_buildUseDecl(_self_.ptr(), (*(_176935_tokens)), false);;
				_1e69e912c_pushUseDecl(_self_, &(_17738_decl));
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1cbceb1c4:;
			{
				if ((((*(_176935_tokens)).len() > 1LL) && ((*((*(_176935_tokens))[1LL]))._field_Id == static_cast<jule::U64>(16LLU)))) {
					jule::Ptr<_1e5cbd18d_UseDecl> _17789_decl = _1e69e768b_buildBindUse(_self_, (*(_176935_tokens)));;
					_1e69e912c_pushUseDecl(_self_, &(_17789_decl));
					return true;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1cbceb23a:;
			{
				_1e69db88e_pushDirective(_self_.ptr(), _1e69db5d6_buildDirective(_self_, (*(_176935_tokens))));
				return true;;
			}
		}
		_match_end_1cbceb03c:;
	};
	return false;;
}



inline _1e5ca4086_Node _1e69e97ae_parseNode(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _178931_st) {
	_1e5ca4086_Node _17907_node = _1e5ca4086_Node{._field_Token=(*(_178931_st))[0LL], ._field_Data=jule::Any(nullptr)};;
	if (_1e69e946d_pushMetaNodes(_self_, _178931_st)) {
		return _17907_node;;
	};
	jule::Any _17987_data = _1e69e8813_buildNodeData(_self_, _178931_st);;
	if ((_17987_data == nullptr)) {
		return _17907_node;;
	};
	_17907_node._field_Data=_17987_data;
	_1e69e8d74_applyMeta(_self_, &(_17907_node));
	if (((*_self_.alloc)._field_directives.len() != 0LL)) {
		_1e69daae1_pushErr(_self_, (*((*_self_.alloc)._field_directives[0LL]))._field_Tag, static_cast<jule::Str>(jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75)), jule::Slice<jule::Any>());
	};
	(*_self_.alloc)._field_directives=nullptr;
	return _17907_node;;
}



inline void _1e69e9a67_appendNode(jule::Ptr<_1e69da10c_parser> _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _181332_st) {
	if (((*(_181332_st)).len() == 0LL)) {
		return;;
	};
	_1e5ca4086_Node _18177_node = _1e69e97ae_parseNode(_self_, _181332_st);;
	if (((_18177_node._field_Data != nullptr) && (!(_1e69da6c3_stopped(_self_))))) {
		(*((*_self_.alloc)._field_ast))._field_Nodes=jule::append((*(*(_self_))._field_ast.alloc)._field_Nodes,({ auto __jule_collection = jule::Slice<_1e5ca4086_Node>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _18177_node; __jule_collection; }));
	};
}



inline void _1e69ea040_removeRange(_1e69da10c_parser* _self_, jule::I64 _182327_i, jule::U64 _182335_id, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _182349_tokens, jule::Slice<jule::I64>* _182372_ranges) {
	jule::U64 _18243_close = _1e69d92b5_getCloseOfBrace(_182335_id);;
	for (; (_182327_i >= 0LL); (_182327_i)--) {
		{
			jule::Ptr<_1e5c8eacc_Token> _18264_tok = (*(_182349_tokens))[(*(_182372_ranges))[_182327_i]];;
			if (((*(_18264_tok))._field_Id != _18243_close)) {
				goto _iter_next_1cbd063cc;
			};
			(*(_182372_ranges))=jule::append((*(_182372_ranges)).slice(0LL, _182327_i),(*(_182372_ranges)).slice((_182327_i + 1LL)));
			goto _iter_end_1cbd063cc;
		}
	_iter_next_1cbd063cc:;
	}
	_iter_end_1cbd063cc:;;
}



inline void _1e69ea45d_pushWrongOrderCloseErr(_1e69da10c_parser* _self_, jule::Ptr<_1e5c8eacc_Token>* _183539_t, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _183551_tokens, jule::Slice<jule::I64>* _183570_ranges) {
	{
		auto &_match_expr{ (*((*(_183551_tokens))[(*(_183570_ranges))[((*(_183570_ranges)).len() - 1LL)]]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(74LLU)) {
			_case_begin_1cbd087db:;
			{
				_1e69daae1_pushErr(_self_, (*(_183539_t)), static_cast<jule::Str>(jule::Str::lit("was expected parentheses close", 30)), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1cbd08863:;
			{
				_1e69daae1_pushErr(_self_, (*(_183539_t)), static_cast<jule::Str>(jule::Str::lit("was expected brace close", 24)), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U64>(76LLU)) {
			_case_begin_1cbd088c9:;
			{
				_1e69daae1_pushErr(_self_, (*(_183539_t)), static_cast<jule::Str>(jule::Str::lit("was expected bracket close", 26)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1cbd086cb:;
	};
}



inline void _1e69ea936_pushRangeClose(_1e69da10c_parser* _self_, jule::Ptr<_1e5c8eacc_Token> _184630_t, jule::U64 _184641_left, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _184657_tokens, jule::Slice<jule::I64>* _184680_ranges) {
	jule::I64 _18473_n = (*(_184680_ranges)).len();;
	if ((_18473_n == 0LL)) {
		{
			auto &_match_expr{ (*(_184630_t))._field_Id };
			
			if (_match_expr == static_cast<jule::U64>(77LLU)) {
				_case_begin_1cbd0b8dd:;
				{
					_1e69daae1_pushErr(_self_, _184630_t, static_cast<jule::Str>(jule::Str::lit("extra closed brackets", 21)), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U64>(73LLU)) {
				_case_begin_1cbd0b965:;
				{
					_1e69daae1_pushErr(_self_, _184630_t, static_cast<jule::Str>(jule::Str::lit("extra closed braces", 19)), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U64>(75LLU)) {
				_case_begin_1cbd0b9cb:;
				{
					_1e69daae1_pushErr(_self_, _184630_t, static_cast<jule::Str>(jule::Str::lit("extra closed parentheses", 24)), jule::Slice<jule::Any>());
				}
			}
			_match_end_1cbd0b822:;
		};
		return;;
	} else if (((*((*(_184657_tokens))[(*(_184680_ranges))[(_18473_n - 1LL)]]))._field_Id != _184641_left)) {
		_1e69ea45d_pushWrongOrderCloseErr(_self_, &(_184630_t), _184657_tokens, _184680_ranges);
	};
	_1e69ea040_removeRange(_self_, (_18473_n - 1LL), (*(_184630_t))._field_Id, _184657_tokens, _184680_ranges);
}



inline void _1e69eabde_checkRanges(_1e69da10c_parser* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _186428_tokens) {
	jule::Slice<jule::I64> _186511_ranges = nullptr;;
	{
		auto expr = _186428_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbd0eca9:;
		if (it != expr_end) {
			jule::I64 _18677_i = it - expr->begin();
			jule::Ptr<_1e5c8eacc_Token> *_186710_token = it;
			{
				{
					auto &_match_expr{ (*((*(_186710_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1cbd10b56:;
						{
							{ jule::Slice<jule::I64> &__jule_push_dest = _186511_ranges; __jule_push_dest.push(_18677_i); };
						}
					}
					else if (_match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1cbd10bde:;
						{
							_1e69ea936_pushRangeClose(_self_, (*(_186710_token)), static_cast<jule::U64>(74LLU), _186428_tokens, &(_186511_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU)) {
						_case_begin_1cbd10c55:;
						{
							_1e69ea936_pushRangeClose(_self_, (*(_186710_token)), static_cast<jule::U64>(72LLU), _186428_tokens, &(_186511_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1cbd10cbb:;
						{
							_1e69ea936_pushRangeClose(_self_, (*(_186710_token)), static_cast<jule::U64>(76LLU), _186428_tokens, &(_186511_ranges));
						}
					}
					_match_end_1cbd10a8a:;
				};
			}
			_iter_next_1cbd0eca9:;
			++it;
			_18677_i++;
			goto _iter_begin_1cbd0eca9;
		}
		_iter_end_1cbd0eca9:;
	};
	{
		auto expr = &(_186511_ranges);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbd0ed86:;
		if (it != expr_end) {
			jule::I64 _188210_i = *it;
			{
				jule::Ptr<_1e5c8eacc_Token> _18834_token = (*(_186428_tokens))[_188210_i];;
				{
					auto &_match_expr{ (*(_18834_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1cbd13b7b:;
						{
							_1e69daae1_pushErr(_self_, _18834_token, static_cast<jule::Str>(jule::Str::lit("parentheses waiting to close", 28)), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1cbd13be2:;
						{
							_1e69daae1_pushErr(_self_, _18834_token, static_cast<jule::Str>(jule::Str::lit("brace waiting to close", 22)), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1cbd13c58:;
						{
							_1e69daae1_pushErr(_self_, _18834_token, static_cast<jule::Str>(jule::Str::lit("bracket are waiting to close", 28)), jule::Slice<jule::Any>());
						}
					}
					_match_end_1cbd138e5:;
				};
			}
			_iter_next_1cbd0ed86:;
			++it;
			goto _iter_begin_1cbd0ed86;
		}
		_iter_end_1cbd0ed86:;
	};
}



inline void _1e69eae97_parse(jule::Ptr<_1e69da10c_parser> _self_, jule::Ptr<_1e5c95363_File>* _189527_f) {
	(*(_self_))._field_ast=jule::new_ptr<_1e5ca3173_AST>(_1e5ca3173_AST{._field_File=(*(_189527_f)), ._field_TopDirectives=jule::Slice<jule::Ptr<_1e5ca44a4_Directive>>(nullptr), ._field_UseDecls=jule::Slice<jule::Ptr<_1e5cbd18d_UseDecl>>(nullptr), ._field_Nodes=jule::Slice<_1e5ca4086_Node>(nullptr)});
	(*_self_.alloc)._field_ep=jule::new_ptr<_1e69c94e7_exprBuilder>(_1e69c94e7_exprBuilder{._field_p=_self_});
	_1e69eabde_checkRanges(_self_, &((*((*(_189527_f))))._field_Tokens));
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1e69bb1dc_stmt>> _19087_stmts = _1e69bb594_splitStmts(&((*((*(_189527_f))))._field_Tokens));;
	jule::I64 _19117_i = 0LL;;
	for (; (_19117_i < _19087_stmts.len()); (_19117_i)++) {
		{
			jule::Ptr<_1e69bb1dc_stmt> _19138_stmt = _19087_stmts[_19117_i];;
			if (((*(_19138_stmt))._field_tokens.len() < 2LL)) {
				return;;
			};
			if (((*((*_19138_stmt.alloc)._field_tokens[0LL]))._field_Id != static_cast<jule::U64>(35LLU))) {
				goto _iter_end_1cbd17a2b;
			};
			if ((!(_22578d18e_IsTopDirective((*((*_19138_stmt.alloc)._field_tokens[1LL]))._field_Kind)))) {
				goto _iter_end_1cbd17a2b;
			};
			(*((*_self_.alloc)._field_ast))._field_TopDirectives=jule::append((*(*(_self_))._field_ast.alloc)._field_TopDirectives,({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5ca44a4_Directive>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1e69db5d6_buildDirective(_self_, (*_19138_stmt.alloc)._field_tokens); __jule_collection; }));
		}
	_iter_next_1cbd17a2b:;
	}
	_iter_end_1cbd17a2b:;;
	(*_self_.alloc)._field_errors=nullptr;
	for (; ((_19117_i < _19087_stmts.len()) && (!(_1e69da6c3_stopped(_self_)))); (_19117_i)++) {
		{
			jule::Ptr<_1e69bb1dc_stmt> _19308_stmt = _19087_stmts[_19117_i];;
			_1e69e9a67_appendNode(_self_, &((*(_19308_stmt))._field_tokens));
		}
	_iter_next_1cbd1aa2e:;
	}
	_iter_end_1cbd1aa2e:;;
	if (((*_self_.alloc)._field_directives.len() != 0LL)) {
		_1e69daae1_pushErr(_self_, (*((*_self_.alloc)._field_directives[0LL]))._field_Tag, static_cast<jule::Str>(jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75)), jule::Slice<jule::Any>());
	};
}







inline void _1e69ec806_pushErr(_1e69ec22e_typeBuilder* _self_, jule::Ptr<_1e5c8eacc_Token> _4123_token, jule::Str _4138_fmt) {
	if ((*(_self_))._field_err) {
		_1e69daae1_pushErr((*(_self_))._field_p.ptr(), _4123_token, _4138_fmt, jule::Slice<jule::Any>());
	};
}



inline void _1e69ecb69_pushSuggestion(_1e69ec22e_typeBuilder* _self_, jule::Str _4830_fmt, jule::Slice<jule::Any> _4843_args) {
	if ((*(_self_))._field_err) {
		_1e69dae54_pushSuggestion((*(_self_))._field_p.ptr(), _4830_fmt, _4843_args);
	};
}



inline jule::Ptr<_1e5ca5087_TypeDecl> _1e69ece00_buildNamespace(_1e69ec22e_typeBuilder* _self_) {
	jule::Ptr<_1e5ca5087_TypeDecl> _557_t = jule::new_ptr<_1e5ca5087_TypeDecl>(_1e5ca5087_TypeDecl{._field_Token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))], ._field_Kind=jule::Any(nullptr)});;
	jule::Ptr<_1e5ca5d35_NamespaceTypeDecl> _597_nst = jule::new_ptr<_1e5ca5d35_NamespaceTypeDecl>(_1e5ca5d35_NamespaceTypeDecl{._field_Idents=jule::Slice<jule::Ptr<_1e5c8eacc_Token>>(nullptr), ._field_Kind=jule::Ptr<_1e5ca5087_TypeDecl>(nullptr)});;
	jule::I64 _607_n = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1e5c8eacc_Token> _628_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			if (((_607_n & 1LL) == 0LL)) {
				if (((*(_628_token))._field_Id != static_cast<jule::U64>(1LLU))) {
					_1e69ec806_pushErr(_self_, _628_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
					_1e69ecb69_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
				};
				(*_597_nst.alloc)._field_Idents=jule::append((*_597_nst.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5c8eacc_Token>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _628_token; __jule_collection; }));
			} else if (((*(_628_token))._field_Id != static_cast<jule::U64>(19LLU))) {
				goto _iter_end_1cbd21419;
			};
			(_607_n)++;
		}
	_iter_next_1cbd21419:;
	}
	_iter_end_1cbd21419:;;
	((*(_597_nst))._field_Idents).mut_slice(0LL, ((*(_597_nst))._field_Idents.len() - 1LL));;
	((*((*(_self_))._field_i)))--;
	(*_597_nst.alloc)._field_Kind=_1e69ed6a3_buildIdent(_self_);
	(*(_557_t))._field_Kind=jule::Any(_597_nst, &__jule_any_type93);
	return _557_t;;
}



inline jule::Slice<jule::Ptr<_1e5ca5087_TypeDecl>> _1e69ed186_buildGenerics(_1e69ec22e_typeBuilder* _self_) {
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		return nullptr;;
	};
	jule::Ptr<_1e5c8eacc_Token> _883_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if (((*(_883_token))._field_Id != static_cast<jule::U64>(76LLU))) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1e5c8eacc_Token>>> _937_parts = _1e69ed41c_identGenerics(_self_);;
	if ((_937_parts.len() == 0LL)) {
		_1e69ec806_pushErr(_self_, _883_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1e5ca5087_TypeDecl>> _997_types = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5ca5087_TypeDecl>>::alloc(0LL, _937_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1e5ca5087_TypeDecl>(nullptr); __jule_collection; });;
	{
		auto expr = &(_937_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbd28b5d:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _10015_part = *it;
			{
				jule::I64 _1018_j = 0LL;;
				jule::Ptr<_1e5ca5087_TypeDecl> _1028_t;
				({
					__jule_tuple_x_1e5ca5087_TypeDecl__jule_tuple_bool __jule_assign_result = _1e69dc6e7_buildType((*(_self_))._field_p, &(_10015_part), (&(_1018_j)), true);
					_1028_t = __jule_assign_result.__jule_result_arg0;
				});
				if ((_1018_j < _10015_part.len())) {
					_1e69ec806_pushErr(_self_, _10015_part[_1018_j], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
				};
				{ jule::Slice<jule::Ptr<_1e5ca5087_TypeDecl>> &__jule_push_dest = _997_types; __jule_push_dest.push(_1028_t); };
			}
			_iter_next_1cbd28b5d:;
			++it;
			goto _iter_begin_1cbd28b5d;
		}
		_iter_end_1cbd28b5d:;
	};
	return _997_types;;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1e5c8eacc_Token>>> _1e69ed41c_identGenerics(_1e69ec22e_typeBuilder* _self_) {
	jule::I64 _1123_first = (*((*(_self_))._field_i));;
	jule::I64 _1137_rangeN = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1e5c8eacc_Token> _1154_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			{
				auto &_match_expr{ (*(_1154_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(76LLU)) {
					_case_begin_1cbd2cde8:;
					{
						(_1137_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(77LLU)) {
					_case_begin_1cbd2d228:;
					{
						(_1137_rangeN)--;
					}
				}
				_match_end_1cbd2ce70:;
			};
			if ((_1137_rangeN == 0LL)) {
				((*((*(_self_))._field_i)))++;
				goto _iter_end_1cbd2c0c3;
			};
		}
	_iter_next_1cbd2c0c3:;
	}
	_iter_end_1cbd2c0c3:;;
	jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _1277_tokens = (*(_self_))._field_tokens.slice((_1123_first + 1LL), ((*((*(_self_))._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1e5c8eacc_Token>>> _1287_parts;
	jule::Slice<_22578b38a_Log> _12814_errors;
	({
		__jule_tuple_ssx_1e5c8eacc_Token__jule_tuple_s_22578b38a_Log __jule_assign_result = _1e69d902e_parts(&(_1277_tokens), static_cast<jule::U64>(5LLU), true);
		_1287_parts = __jule_assign_result.__jule_result_arg0;
		_12814_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((*(_self_))._field_err) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_12814_errors);
	};
	return _1287_parts;;
}



inline jule::Ptr<_1e5ca5087_TypeDecl> _1e69ed6a3_buildIdent(_1e69ec22e_typeBuilder* _self_) {
	jule::Bool _1367_next = (((*((*(_self_))._field_i)) + 1LL) < (*(_self_))._field_tokens.len());;
	if ((_1367_next && ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id == static_cast<jule::U64>(19LLU)))) {
		return _1e69ece00_buildNamespace(_self_);;
	};
	jule::Ptr<_1e5c8eacc_Token> _1407_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1e5ca5692_IdentTypeDecl> _1417_it = jule::new_ptr<_1e5ca5692_IdentTypeDecl>(_1e5ca5692_IdentTypeDecl{._field_Token=_1407_token, ._field_Ident=(*(_1407_token))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1e5ca5087_TypeDecl>>(nullptr)});;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1e5ca5087_TypeDecl> _1477_itd = jule::new_ptr<_1e5ca5087_TypeDecl>(_1e5ca5087_TypeDecl{._field_Token=_1407_token, ._field_Kind=jule::Any(_1417_it, &__jule_any_type77)});;
	if (((!(_1367_next)) || ((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U64>(17LLU)))) {
		(*(_1417_it))._field_Generics=_1e69ed186_buildGenerics(_self_);
		return _1477_itd;;
	};
	if ((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) == 1LL)) {
		_1e69ec806_pushErr(_self_, _1407_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return _1477_itd;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1e69ec806_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return _1477_itd;;
	};
	jule::Ptr<_1e5ca595b_SubIdentTypeDecl> _1647_sit = jule::new_ptr<_1e5ca595b_SubIdentTypeDecl>(_1e5ca595b_SubIdentTypeDecl{._field_Idents=jule::Slice<jule::Ptr<_1e5ca5692_IdentTypeDecl>>(nullptr)});;
	(*_1647_sit.alloc)._field_Idents=jule::append((*_1647_sit.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5ca5692_IdentTypeDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1417_it; __jule_collection; }));
	jule::Ptr<_1e5ca5087_TypeDecl> _1667_ident = _1e69ed6a3_buildIdent(_self_);;
	{
		auto &_match_expr{ (*(_1667_ident))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1cbd38d9e:;
			{
				(*_1647_sit.alloc)._field_Idents=jule::append((*_1647_sit.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5ca5692_IdentTypeDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_1667_ident))._field_Kind.cast_ptr<_1e5ca5692_IdentTypeDecl>(&__jule_any_type77); __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1cbd332a5:;
			{
				(*_1647_sit.alloc)._field_Idents=jule::append((*_1647_sit.alloc)._field_Idents,(*((*(_1667_ident))._field_Kind.unsafe_cast_ptr<_1e5ca595b_SubIdentTypeDecl>()))._field_Idents);
			}
		}
		_match_end_1cbd38d27:;
	};
	return jule::new_ptr<_1e5ca5087_TypeDecl>(_1e5ca5087_TypeDecl{._field_Token=_1407_token, ._field_Kind=jule::Any(_1647_sit, &__jule_any_type89)});;
}



inline jule::Ptr<_1e5ca5087_TypeDecl> _1e69ed939_buildCppLink(_1e69ec22e_typeBuilder* _self_) {
	if (((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len()) || ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id != static_cast<jule::U64>(17LLU)))) {
		_1e69ec806_pushErr(_self_, (*(_self_))._field_tokens[(*((*(_self_))._field_i))], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	(*((*(_self_))._field_i))+=2LL;
	jule::Ptr<_1e5ca5087_TypeDecl> _1857_t = _1e69ed6a3_buildIdent(_self_);;
	(*((*(_1857_t))._field_Kind.cast_ptr<_1e5ca5692_IdentTypeDecl>(&__jule_any_type77)))._field_Binded=true;
	return _1857_t;;
}



inline jule::Ptr<_1e5ca5087_TypeDecl> _1e69edbc0_buildFn(_1e69ec22e_typeBuilder* _self_) {
	jule::Ptr<_1e5c8eacc_Token> _1917_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1e5cb6c47_FnDecl> _1927_f = _1e69e17c8_buildFnPrototype((*(_self_))._field_p, &((*(_self_))._field_tokens), &((*((*(_self_))._field_i))), false);;
	if ((_1927_f == nullptr)) {
		return nullptr;;
	};
	if ((!(_1e5cb70dd_IsAnon(_1927_f.ptr())))) {
		_1e69ec806_pushErr(_self_, (*(_1927_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	return jule::new_ptr<_1e5ca5087_TypeDecl>(_1e5ca5087_TypeDecl{._field_Token=_1917_token, ._field_Kind=jule::Any(_1927_f, &__jule_any_type14)});;
}



inline jule::Ptr<_1e5ca5087_TypeDecl> _1e69ede56_buildPtr(_1e69ec22e_typeBuilder* _self_) {
	jule::Ptr<_1e5c8eacc_Token> _2067_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1e69ec806_pushErr(_self_, _2067_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id == static_cast<jule::U64>(31LLU))) {
		((*((*(_self_))._field_i)))++;
		return jule::new_ptr<_1e5ca5087_TypeDecl>(_1e5ca5087_TypeDecl{._field_Token=_2067_token, ._field_Kind=jule::Any(jule::new_ptr<_1e5ca6ab1_PtrTypeDecl>(_1e5ca6ab1_PtrTypeDecl{._field_Elem=nullptr}), &__jule_any_type73)});;
	};
	jule::Ptr<_1e5ca5087_TypeDecl> _2237_elem = _1e69eeeac_step(_self_);;
	if ((_2237_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1e5ca5087_TypeDecl>(_1e5ca5087_TypeDecl{._field_Token=_2067_token, ._field_Kind=jule::Any(jule::new_ptr<_1e5ca6ab1_PtrTypeDecl>(_1e5ca6ab1_PtrTypeDecl{._field_Elem=_2237_elem}), &__jule_any_type73)});;
}



inline jule::Ptr<_1e5ca5087_TypeDecl> _1e69ee1dc_buildSptr(_1e69ec22e_typeBuilder* _self_) {
	jule::Ptr<_1e5c8eacc_Token> _2377_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1e69ec806_pushErr(_self_, _2377_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1e5ca5087_TypeDecl> _2447_elem = _1e69eeeac_step(_self_);;
	if ((_2447_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1e5ca5087_TypeDecl>(_1e5ca5087_TypeDecl{._field_Token=_2377_token, ._field_Kind=jule::Any(jule::new_ptr<_1e5ca6132_SptrTypeDecl>(_1e5ca6132_SptrTypeDecl{._field_Elem=_2447_elem}), &__jule_any_type74)});;
}



inline jule::Ptr<_1e5ca5087_TypeDecl> _1e69ee473_buildSlc(_1e69ec22e_typeBuilder* _self_) {
	jule::Ptr<_1e5c8eacc_Token> _2587_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1e5ca5087_TypeDecl> _2607_elem = _1e69eeeac_step(_self_);;
	if ((_2607_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1e5ca5087_TypeDecl>(_1e5ca5087_TypeDecl{._field_Token=_2587_token, ._field_Kind=jule::Any(jule::new_ptr<_1e5ca64b7_SlcTypeDecl>(_1e5ca64b7_SlcTypeDecl{._field_Elem=_2607_elem}), &__jule_any_type72)});;
}



inline jule::Ptr<_1e5ca5087_TypeDecl> _1e69ee709_buildArr(_1e69ec22e_typeBuilder* _self_) {
	jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _2737_exprTokens = _1e69d87ae_range(&((*((*(_self_))._field_i))), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1e69ec806_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], static_cast<jule::Str>(jule::Str::lit("type missing", 12)));
		return nullptr;;
	};
	jule::Ptr<_1e5ca5087_TypeDecl> _2797_elem = _1e69eeeac_step(_self_);;
	if ((_2797_elem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1e5ca7353_ArrTypeDecl> _2847_arrt = jule::new_ptr<_1e5ca7353_ArrTypeDecl>(_1e5ca7353_ArrTypeDecl{._field_Elem=_2797_elem, ._field_Size=jule::Ptr<_1e5ca93bb_Expr>(nullptr)});;
	jule::Ptr<_1e5c8eacc_Token> _2887_token = _2737_exprTokens[0LL];;
	if (((_2737_exprTokens.len() == 1LL) && ((*(_2887_token))._field_Id == static_cast<jule::U64>(39LLU)))) {
	} else {
		(*(_2847_arrt))._field_Size=_1e69db295_buildExpr((*(_self_))._field_p, &(_2737_exprTokens));
	};
	return jule::new_ptr<_1e5ca5087_TypeDecl>(_1e5ca5087_TypeDecl{._field_Token=_2887_token, ._field_Kind=jule::Any(_2847_arrt, &__jule_any_type71)});;
}



inline jule::Ptr<_1e5ca5087_TypeDecl> _1e69ee990_buildMap(_1e69ec22e_typeBuilder* _self_) {
	jule::Ptr<_1e5c8eacc_Token> _3027_mapToken = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1e69ec806_pushErr(_self_, _3027_mapToken, static_cast<jule::Str>(jule::Str::lit("type missing", 12)));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _3107_keyTokens = _1e69d87ae_range(&((*((*(_self_))._field_i))), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1e69ec806_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], static_cast<jule::Str>(jule::Str::lit("type missing", 12)));
		return nullptr;;
	} else if ((_3107_keyTokens.len() == 0LL)) {
		_1e69ec806_pushErr(_self_, _3027_mapToken, static_cast<jule::Str>(jule::Str::lit("type missing", 12)));
		return nullptr;;
	};
	jule::Ptr<_1e5ca7aa1_MapTypeDecl> _3197_mapt = jule::new_ptr<_1e5ca7aa1_MapTypeDecl>(_1e5ca7aa1_MapTypeDecl{._field_Key=jule::Ptr<_1e5ca5087_TypeDecl>(nullptr), ._field_Val=jule::Ptr<_1e5ca5087_TypeDecl>(nullptr)});;
	jule::I64 _3207_j = 0LL;;
	jule::Ptr<_1e5ca5087_TypeDecl> _3217_keyt;
	jule::Bool _32117_ok;
	({
		__jule_tuple_x_1e5ca5087_TypeDecl__jule_tuple_bool __jule_assign_result = _1e69dc6e7_buildType((*(_self_))._field_p, &(_3107_keyTokens), (&(_3207_j)), (*(_self_))._field_err);
		_3217_keyt = __jule_assign_result.__jule_result_arg0;
		_32117_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_32117_ok))) {
		return nullptr;;
	} else if ((_3207_j < _3107_keyTokens.len())) {
		_1e69ec806_pushErr(_self_, _3107_keyTokens[_3207_j], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*_3197_mapt.alloc)._field_Key=_3217_keyt;
	jule::Ptr<_1e5ca5087_TypeDecl> _3297_valt;
	({
		__jule_tuple_x_1e5ca5087_TypeDecl__jule_tuple_bool __jule_assign_result = _1e69dc6e7_buildType((*(_self_))._field_p, &((*(_self_))._field_tokens), (*(_self_))._field_i, (*(_self_))._field_err);
		_3297_valt = __jule_assign_result.__jule_result_arg0;
		_32117_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_32117_ok))) {
		return nullptr;;
	};
	(*_3197_mapt.alloc)._field_Val=_3297_valt;
	return jule::new_ptr<_1e5ca5087_TypeDecl>(_1e5ca5087_TypeDecl{._field_Token=_3027_mapToken, ._field_Kind=jule::Any(_3197_mapt, &__jule_any_type75)});;
}



inline jule::Ptr<_1e5ca5087_TypeDecl> _1e69eec26_buildEnumerable(_1e69ec22e_typeBuilder* _self_) {
	jule::Ptr<_1e5c8eacc_Token> _3417_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 2LL) >= (*(_self_))._field_tokens.len())) {
		_1e69ec806_pushErr(_self_, _3417_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	_3417_token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))];
	if (((*(_3417_token))._field_Id == static_cast<jule::U64>(77LLU))) {
		return _1e69ee473_buildSlc(_self_);;
	};
	((*((*(_self_))._field_i)))--;
	return _1e69ee709_buildArr(_self_);;
}



inline jule::Ptr<_1e5ca5087_TypeDecl> _1e69eeeac_step(_1e69ec22e_typeBuilder* _self_) {
	jule::Ptr<_1e5c8eacc_Token> _3563_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	{
		auto &_match_expr{ (*(_3563_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1cbd593a8:;
			{
				return _1e69ed6a3_buildIdent(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1cbd59793:;
			{
				return _1e69ed939_buildCppLink(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1cbd59809:;
			{
				if (((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) > 1LL) && ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id == static_cast<jule::U64>(29LLU)))) {
					((*((*(_self_))._field_i)))++;
					jule::Ptr<_1e5ca5087_TypeDecl> _3669_f = _1e69edbc0_buildFn(_self_);;
					if ((_3669_f != nullptr)) {
						(*((*_3669_f.alloc)._field_Kind.cast_ptr<_1e5cb6c47_FnDecl>(&__jule_any_type14)))._field_Unsafety=true;
					};
					return _3669_f;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1cbd59870:;
			{
				return _1e69edbc0_buildFn(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1cbd598d6:;
			{
				return _1e69ede56_buildPtr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1cbd5995d:;
			{
				return _1e69ee1dc_buildSptr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1cbd599d5:;
			{
				return jule::new_ptr<_1e5ca5087_TypeDecl>(_1e5ca5087_TypeDecl{._field_Token=jule::Ptr<_1e5c8eacc_Token>(nullptr), ._field_Kind=jule::Any(jule::new_ptr<_1e5ca6132_SptrTypeDecl>(_1e5ca6132_SptrTypeDecl{._field_Elem=_1e69ee1dc_buildSptr(_self_)}), &__jule_any_type74)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(76LLU)) {
			_case_begin_1cbd59a5c:;
			{
				return _1e69eec26_buildEnumerable(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1cbd59ad4:;
			{
				return _1e69ee990_buildMap(_self_);;
			}
		}
		_match_end_1cbd59430:;
	};
	((*((*(_self_))._field_i)))++;
	_1e69ec806_pushErr(_self_, _3563_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	return nullptr;;
}



inline __jule_tuple_x_1e5ca5087_TypeDecl__jule_tuple_bool _1e6a00243_build(_1e69ec22e_typeBuilder* _self_) {
	__jule_tuple_x_1e5ca5087_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1e5ca5087_TypeDecl> _3977_root = _1e69eeeac_step(_self_);;
	if ((_3977_root == nullptr)) {
		__jule_func_result.__jule_result_arg0 = _1e69eb99d_buildVoidType();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _3977_root;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}








inline jule::Bool _1e62091bc_CompileInfo_eq(_1e62091bc_CompileInfo *_self_, _1e62091bc_CompileInfo _other_) {
	return 
		(_self_->_field_Prod == _other_._field_Prod) &&
		(_self_->_field_Test == _self_->_field_Test) &&
		(_self_->_field_Compiler == _self_->_field_Compiler) &&
		(_self_->_field_CppStd == _self_->_field_CppStd);
}





inline void _1e620ac29_pushErr(_1e620a696_directiveEval* _self_, jule::Ptr<_1e5c8eacc_Token> _2123_t, jule::Str _2134_fmt, jule::Slice<jule::Any> _2147_args) {
	{ jule::Slice<_22578b38a_Log> &__jule_push_dest = (*(_self_))._field_logs; __jule_push_dest.push(_22578b38a_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*(_2123_t))._field_Row, ._field_Column=(*_2123_t.alloc)._field_Column, ._field_Path=(*((*_2123_t.alloc)._field_File))._field_Path, ._field_Text=_22578b7ec_Logf(_2134_fmt, _2147_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()}); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1e5c8eacc_Token>>> _1e620b125_splitOperans(_1e620a696_directiveEval* _self_, jule::U64 _3328_op, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _3346_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1e5c8eacc_Token>>> _347_parts = ({ auto __jule_collection = jule::Slice<jule::Slice<jule::Ptr<_1e5c8eacc_Token>>>::alloc(0LL, 10LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Slice<jule::Ptr<_1e5c8eacc_Token>>(nullptr); __jule_collection; });;
	jule::I64 _357_i = 0LL;;
	jule::I64 _367_rangeN = 0LL;;
	jule::I64 _377_last = 0LL;;
	for (; (_357_i < ((*(_3346_tokens)).len() - 1LL)); (_357_i)++) {
		{
			jule::Ptr<_1e5c8eacc_Token> _394_b = (*(_3346_tokens))[_357_i];;
			{
				auto &_match_expr{ (*(_394_b))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1cbd8339e:;
					{
						(_367_rangeN)++;
						goto _iter_next_1cbd82920;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1cbd836ce:;
					{
						(_367_rangeN)--;
					}
				}
				_match_end_1cbd83426:;
			};
			if (((_367_rangeN > 0LL) || ((*(_394_b))._field_Id != _3328_op))) {
				goto _iter_next_1cbd82920;
			};
			{ jule::Slice<jule::Slice<jule::Ptr<_1e5c8eacc_Token>>> &__jule_push_dest = _347_parts; __jule_push_dest.push((*(_3346_tokens)).slice(_377_last, _357_i)); };
			_377_last=(_357_i + 1LL);
		}
	_iter_next_1cbd82920:;
	}
	_iter_end_1cbd82920:;;
	if ((_377_last < (*(_3346_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1e5c8eacc_Token>>> &__jule_push_dest = _347_parts; __jule_push_dest.push((*(_3346_tokens)).slice(_377_last)); };
	} else {
		_1e620ac29_pushErr(_self_, (*(_3346_tokens))[(_377_last - 1LL)], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _347_parts;;
}



inline jule::Bool _1e620b466_evalDirectiveIdent(_1e620a696_directiveEval* _self_, jule::Str _6430_ident) {
	if ((_6430_ident).empty()) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbd86292:;
		if (it != expr_end) {
			jule::Str *_6810_var = it;
			{
				if (((*(_6810_var)) == _6430_ident)) {
					return true;;
				};
			}
			_iter_next_1cbd86292:;
			++it;
			goto _iter_begin_1cbd86292;
		}
		_iter_end_1cbd86292:;
	};
	return false;;
}



inline jule::Bool _1e620b7a7_evalDirectivePart(_1e620a696_directiveEval* _self_, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _7837_part) {
	jule::Bool _793_logicalNot = ((*(_7837_part[0LL]))._field_Id == static_cast<jule::U64>(68LLU));;
	if (_793_logicalNot) {
		(_7837_part).mut_slice(1LL);;
	};
	if ((_7837_part.len() > 1LL)) {
		_1e620ac29_pushErr(_self_, _7837_part[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _897_result = _1e620b466_evalDirectiveIdent(_self_, (*(_7837_part[0LL]))._field_Kind);;
	if (_793_logicalNot) {
		_897_result=(!(_897_result));
	};
	return _897_result;;
}



inline jule::Bool _1e620ba3d_eval(_1e620a696_directiveEval* _self_) {
	if (((*((*(_self_))._field_d))._field_Args.len() == 0LL)) {
		_1e620ac29_pushErr(_self_, (*(*(_self_))._field_d.alloc)._field_Tag, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _1027_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_1e5c8eacc_Token>>> _1047_logicalOrParts = _1e620b125_splitOperans(_self_, static_cast<jule::U64>(55LLU), &((*(*(_self_))._field_d.alloc)._field_Args));;
	if ((_1047_logicalOrParts == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_1047_logicalOrParts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbd8bcae:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _10915_part = *it;
			{
				jule::Bool _1108_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_1e5c8eacc_Token>>> _1118_logicalAndParts = _1e620b125_splitOperans(_self_, static_cast<jule::U64>(54LLU), &(_10915_part));;
				if ((_1118_logicalAndParts == nullptr)) {
					return false;;
				};
				{
					auto expr = &(_1118_logicalAndParts);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cbd8d7d8:;
					if (it != expr_end) {
						jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _11616_andPart = *it;
						{
							jule::Ptr<_1e5c8eacc_Token> _1175_first = _11616_andPart[0LL];;
							if (((*(_1175_first))._field_Id == static_cast<jule::U64>(74LLU))) {
								jule::Ptr<_1e5c8eacc_Token> _1196_end = _11616_andPart[(_11616_andPart.len() - 1LL)];;
								if (((*(_1196_end))._field_Id != static_cast<jule::U64>(75LLU))) {
									_1e620ac29_pushErr(_self_, _1175_first, static_cast<jule::Str>(jule::Str::lit("parentheses waiting to close", 28)), jule::Slice<jule::Any>());
									return false;;
								};
								(_11616_andPart).mut_slice(1LL, (_11616_andPart.len() - 1LL));;
							};
							_1108_and=(_1108_and && _1e620b7a7_evalDirectivePart(_self_, _11616_andPart));
						}
						_iter_next_1cbd8d7d8:;
						++it;
						goto _iter_begin_1cbd8d7d8;
					}
					_iter_end_1cbd8d7d8:;
				};
				_1027_result=(_1027_result || _1108_and);
			}
			_iter_next_1cbd8bcae:;
			++it;
			goto _iter_begin_1cbd8bcae;
		}
		_iter_end_1cbd8bcae:;
	};
	return _1027_result;;
}







inline jule::Ptr<_1e6a01222_JuleImporter> static__1e6a01651_New(_1e62091bc_CompileInfo _5816_info) {
	jule::Ptr<_1e6a01222_JuleImporter> _597_imp = jule::new_ptr<_1e6a01222_JuleImporter>(_1e6a01222_JuleImporter{._field_mods=({ auto __jule_collection = jule::Slice<jule::Str>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _2258644eb_PathStdlib; __jule_collection; }), ._field_mod=jule::Str(), ._field_pkgs=jule::Slice<jule::Ptr<_1e5d5b2e7_ImportInfo>>(nullptr), ._field_vars=jule::Slice<jule::Str>(nullptr)});;
	_1e6209a4c_initVars(&((*(_597_imp))._field_vars), &(_5816_info));
	return _597_imp;;
}



inline jule::Slice<jule::Ptr<_1e5d5b2e7_ImportInfo>> _1e6a018d7_AllPackages(_1e6a01222_JuleImporter* _self_) {
	return (*(_self_))._field_pkgs;;
}



inline void _1e6a01d27_SetModPath(_1e6a01222_JuleImporter* _self_, jule::Str _7526_path) {
	(*(_self_))._field_mod=_7526_path;
}



inline jule::Str _1e6a020ad_GetModPath(_1e6a01222_JuleImporter* _self_) {
	return (*(_self_))._field_mod;;
}



inline jule::Str _1e6a023ee_ModById(_1e6a01222_JuleImporter* _self_, jule::I64 _8319_id) {
	return (*(_self_))._field_mods[_8319_id];;
}



inline jule::Ptr<_1e5d5b2e7_ImportInfo> _1e6a02740_GetImport(_1e6a01222_JuleImporter* _self_, jule::Str _8725_path) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbd94c62:;
		if (it != expr_end) {
			jule::Ptr<_1e5d5b2e7_ImportInfo> _8815_p = *it;
			{
				if (_2256e1004_EqualFold((*(_8815_p))._field_Path, _8725_path)) {
					return _8815_p;;
				};
			}
			_iter_next_1cbd94c62:;
			++it;
			goto _iter_begin_1cbd94c62;
		}
		_iter_end_1cbd94c62:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1e5ca3173_AST__jule_tuple_s_22578b38a_Log _1e6a02b3b_ImportPackage(_1e6a01222_JuleImporter* _self_, jule::Str _9729_path, jule::Bool _9740_updateMod) {
	__jule_tuple_sx_1e5ca3173_AST__jule_tuple_s_22578b38a_Log __jule_func_result;
	jule::Slice<jule::Ptr<_2243de341_DirEntry>> _987_dirents = ({
		auto except = static__2256e42d2_Read(_9729_path);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = ({ auto __jule_collection = jule::Slice<_22578b38a_Log>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1e6a00c38_flatCompilerErr((jule::Str::lit("cannot read package directory: ", 31) + _9729_path)); __jule_collection; });
			return __jule_func_result;;
		} jule::Slice<jule::Ptr<_2243de341_DirEntry>>(nullptr);});
	});;
	if (_9740_updateMod) {
		jule::Str _1034_newMod = _1e5d77b3d_FindModuleFileDeep(_9729_path);;
		if ((_1034_newMod != (*(_self_))._field_mod)) {
			(*(_self_))._field_mod=_1034_newMod;
			jule::Slice<_22578b38a_Log> _1069_errs = _1e5d77e07_CheckModuleFile(&((*(_self_))._field_mod));;
			if ((_1069_errs.len() != 0LL)) {
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = _1069_errs;
				return __jule_func_result;;
			};
		};
	};
	jule::Slice<jule::Ptr<_1e5ca3173_AST>> _1137_asts = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5ca3173_AST>>::alloc(0LL, _987_dirents.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1e5ca3173_AST>(nullptr); __jule_collection; });;
	{
		auto expr = &(_987_dirents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbd96e95:;
		if (it != expr_end) {
			jule::Ptr<_2243de341_DirEntry> _11410_dirent = *it;
			{
				if ((_2243e2d17_IsDir((*(_11410_dirent))._field_Stat.ptr()) || (!(_2256d7704_HasSuffix((*_11410_dirent.alloc)._field_Name, jule::Str::lit(".jule", 5)))))) {
					goto _iter_next_1cbd96e95;
				};
				jule::Str _1204__path = _2256e2cd6_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _9729_path; (*it++) = (*_11410_dirent.alloc)._field_Name; __jule_collection; }));;
				jule::Ptr<_1e5c95363_File> _1218_file = _1e5c9673d_NewFileSet(_1204__path);;
				_1e5c957b4_Fill(_1218_file.ptr(), _1e6a0092a_readBuff((*_1218_file.alloc)._field_Path));
				jule::Slice<_22578b38a_Log> _1238_errors = _1e5ca2c22_Lex(_1218_file, static_cast<jule::I64>(0LL));;
				if ((_1238_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _1238_errors;
					return __jule_func_result;;
				};
				jule::Ptr<_1e6970636_FileInfo> _1288_finfo = _1e6973408_ParseFile(_1218_file);;
				if (((*(_1288_finfo))._field_Errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = (*_1288_finfo.alloc)._field_Errors;
					return __jule_func_result;;
				};
				if ((!(_1e61d89e8_isPassFileAnnotation((*_11410_dirent.alloc)._field_Name)))) {
					goto _iter_next_1cbd96e95;
				};
				jule::Bool _1384_r;
				jule::Slice<_22578b38a_Log> _13811_logs;
				({
					__jule_tuple_bool__jule_tuple_s_22578b38a_Log __jule_assign_result = _1e6a03323_isPassBuildDirectives(_self_, &((*_1288_finfo.alloc)._field_Ast));
					_1384_r = __jule_assign_result.__jule_result_arg0;
					_13811_logs = __jule_assign_result.__jule_result_arg1;
				});
				if ((_13811_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _13811_logs;
					return __jule_func_result;;
				};
				if ((!(_1384_r))) {
					goto _iter_next_1cbd96e95;
				};
				{ jule::Slice<jule::Ptr<_1e5ca3173_AST>> &__jule_push_dest = _1137_asts; __jule_push_dest.push((*_1288_finfo.alloc)._field_Ast); };
			}
			_iter_next_1cbd96e95:;
			++it;
			goto _iter_begin_1cbd96e95;
		}
		_iter_end_1cbd96e95:;
	};
	__jule_func_result.__jule_result_arg0 = _1137_asts;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1e6a02de4_Imported(_1e6a01222_JuleImporter* _self_, jule::Ptr<_1e5d5b2e7_ImportInfo> _15428_imp) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbd990c9:;
		if (it != expr_end) {
			jule::Ptr<_1e5d5b2e7_ImportInfo> _15610_p = *it;
			{
				if ((((*(_15610_p))._field_Binded == (*(_15428_imp))._field_Binded) && _2256e1004_EqualFold((*_15610_p.alloc)._field_Path, (*_15428_imp.alloc)._field_Path))) {
					return;;
				};
			}
			_iter_next_1cbd990c9:;
			++it;
			goto _iter_begin_1cbd990c9;
		}
		_iter_end_1cbd990c9:;
	};
	if (((*(_self_))._field_mod.len() != 0LL)) {
		{
			auto expr = &((*(_self_))._field_mods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1cbda171e:;
			if (it != expr_end) {
				jule::I64 _1648_i = it - expr->begin();
				jule::Str _16411_mod = *it;
				{
					if (((*(_self_))._field_mod == _16411_mod)) {
						(*_15428_imp.alloc)._field_ModId=_1648_i;
						goto _julec_label_1cbda0d6c;
					};
				}
				_iter_next_1cbda171e:;
				++it;
				_1648_i++;
				goto _iter_begin_1cbda171e;
			}
			_iter_end_1cbda171e:;
		};
		(*_15428_imp.alloc)._field_ModId=(*(_self_))._field_mods.len();
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_mods; __jule_push_dest.push((*(_self_))._field_mod); };
		_julec_label_1cbda0d6c:;
	};
	{ jule::Slice<jule::Ptr<_1e5d5b2e7_ImportInfo>> &__jule_push_dest = (*(_self_))._field_pkgs; __jule_push_dest.push(_15428_imp); };
}



inline __jule_tuple_bool__jule_tuple_s_22578b38a_Log _1e6a03323_isPassBuildDirectives(_1e6a01222_JuleImporter* _self_, jule::Ptr<_1e5ca3173_AST>* _18142_file) {
	__jule_tuple_bool__jule_tuple_s_22578b38a_Log __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	{
		auto expr = &((*((*(_18142_file))))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbd99085:;
		if (it != expr_end) {
			jule::Ptr<_1e5ca44a4_Directive> _18215_td = *it;
			{
				if (((*((*(_18215_td))._field_Tag))._field_Kind != static_cast<jule::Str>(jule::Str::lit("build", 5)))) {
					goto _iter_next_1cbd99085;
				};
				_1e620a696_directiveEval _1868_de = _1e620a696_directiveEval{._field_logs=jule::Slice<_22578b38a_Log>(nullptr), ._field_d=_18215_td, ._field_vars=(*(_self_))._field_vars};;
				jule::Bool _1904_result = _1e620ba3d_eval(&_1868_de);;
				if ((_1868_de._field_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = _1868_de._field_logs;
					return __jule_func_result;;
				};
				if ((!(_1904_result))) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = nullptr;
					return __jule_func_result;;
				};
			}
			_iter_next_1cbd99085:;
			++it;
			goto _iter_begin_1cbd99085;
		}
		_iter_end_1cbd99085:;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}







inline jule::Ptr<_1e6a07a0e_ExprInspector> static__1e6a07da5_New(void) {
	return jule::new_ptr<_1e6a07a0e_ExprInspector>(_1e6a07a0e_ExprInspector{._field_SkipChild=false, ._field_handler=jule::Fn<void,jule::Any*>(nullptr)});;
}



inline void _1e6a0815d_args(_1e6a07a0e_ExprInspector* _self_, jule::Slice<jule::Any> _5524_args) {
	{
		auto expr = &(_5524_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbe010dc:;
		if (it != expr_end) {
			jule::Any _5615_arg = *it;
			{
				_1e6a08416_inspect(_self_, &(_5615_arg));
			}
			_iter_next_1cbe010dc:;
			++it;
			goto _iter_begin_1cbe010dc;
		}
		_iter_end_1cbe010dc:;
	};
}



inline void _1e6a08416_inspect(_1e6a07a0e_ExprInspector* _self_, jule::Any* _6128_m) {
	(*(_self_))._field_SkipChild=false;
	(*(_self_))._field_handler(_6128_m);
	if ((*(_self_))._field_SkipChild) {
		return;;
	};
	{
		auto &_match_expr{ (*(_6128_m)) };
		
		if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1cbe0250b:;
			{
				jule::Ptr<_1e5cd2d51_BinaryExprModel> _698_b = (*(_6128_m)).cast_ptr<_1e5cd2d51_BinaryExprModel>(&__jule_any_type113);;
				_1e6a08416_inspect(_self_, &((*((*(_698_b))._field_Left))._field_Model));
				_1e6a08416_inspect(_self_, &((*((*_698_b.alloc)._field_Right))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1cbe02682:;
			{
				jule::Ptr<_1e5cd322a_UnaryExprModel> _738_u = (*(_6128_m)).cast_ptr<_1e5cd322a_UnaryExprModel>(&__jule_any_type112);;
				_1e6a08416_inspect(_self_, &((*((*(_738_u))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1cbe02572:;
			{
				jule::Ptr<_1e5cd3aee_StructLitExprModel> _768_lit = (*(_6128_m)).cast_ptr<_1e5cd3aee_StructLitExprModel>(&__jule_any_type97);;
				{
					auto expr = &((*(_768_lit))._field_Args);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cbe06983:;
					if (it != expr_end) {
						jule::Ptr<_1e5cd3758_StructArgExprModel> _7716_arg = *it;
						{
							_1e6a08416_inspect(_self_, &((*((*(_7716_arg))._field_Expr))._field_Model));
						}
						_iter_next_1cbe06983:;
						++it;
						goto _iter_begin_1cbe06983;
					}
					_iter_end_1cbe06983:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1cbe0294b:;
			{
				jule::Ptr<_1e5cd3aee_StructLitExprModel> _818_lit = (*((*(_6128_m)).cast_ptr<_1e5cd3deb_AllocStructLitExprModel>(&__jule_any_type114)))._field_Lit;;
				{
					auto expr = &((*(_818_lit))._field_Args);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cbe0816b:;
					if (it != expr_end) {
						jule::Ptr<_1e5cd3758_StructArgExprModel> _8216_arg = *it;
						{
							_1e6a08416_inspect(_self_, &((*((*(_8216_arg))._field_Expr))._field_Model));
						}
						_iter_next_1cbe0816b:;
						++it;
						goto _iter_begin_1cbe0816b;
					}
					_iter_end_1cbe0816b:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1cbe029b2:;
			{
				jule::Ptr<_1e5cd447e_CastingExprModel> _868_c = (*(_6128_m)).cast_ptr<_1e5cd447e_CastingExprModel>(&__jule_any_type95);;
				_1e6a08416_inspect(_self_, &((*((*(_868_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1cbe02a28:;
			{
				jule::Ptr<_1e5cd4d31_FnCallExprModel> _898_fc = (*(_6128_m)).cast_ptr<_1e5cd4d31_FnCallExprModel>(&__jule_any_type40);;
				_1e6a08416_inspect(_self_, &((*(_898_fc))._field_Expr));
				_1e6a0815d_args(_self_, (*_898_fc.alloc)._field_Args);
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1cbe02a8e:;
			{
				jule::Ptr<_1e5cd520a_SliceExprModel> _938_s = (*(_6128_m)).cast_ptr<_1e5cd520a_SliceExprModel>(&__jule_any_type79);;
				_1e6a0815d_args(_self_, (*(_938_s))._field_Elems);
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1cbe02b05:;
			{
				jule::Ptr<_1e5cd8142_ArrayExprModel> _968_a = (*(_6128_m)).cast_ptr<_1e5cd8142_ArrayExprModel>(&__jule_any_type87);;
				_1e6a0815d_args(_self_, (*(_968_a))._field_Elems);
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1cbe02b7c:;
			{
				jule::Ptr<_1e5cd56b1_IndexingExprModel> _998_i = (*(_6128_m)).cast_ptr<_1e5cd56b1_IndexingExprModel>(&__jule_any_type52);;
				_1e6a08416_inspect(_self_, &((*((*(_998_i))._field_Expr))._field_Model));
				_1e6a08416_inspect(_self_, &((*((*_998_i.alloc)._field_Index))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1cbe02c04:;
			{
				jule::Ptr<_1e5cd641a_MapExprModel> _1038_mp = (*(_6128_m)).cast_ptr<_1e5cd641a_MapExprModel>(&__jule_any_type101);;
				{
					auto expr = &((*(_1038_mp))._field_Entries);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cbe0e65b:;
					if (it != expr_end) {
						jule::Ptr<_1e5cd6041_KeyValPairExprModel> _10416_entry = *it;
						{
							_1e6a08416_inspect(_self_, &((*(_10416_entry))._field_Key));
							_1e6a08416_inspect(_self_, &((*_10416_entry.alloc)._field_Val));
						}
						_iter_next_1cbe0e65b:;
						++it;
						goto _iter_begin_1cbe0e65b;
					}
					_iter_end_1cbe0e65b:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1cbe02c7b:;
			{
				jule::Ptr<_1e5cd699d_SlicingExprModel> _1098_s = (*(_6128_m)).cast_ptr<_1e5cd699d_SlicingExprModel>(&__jule_any_type94);;
				_1e6a08416_inspect(_self_, &((*(_1098_s))._field_Expr));
				_1e6a08416_inspect(_self_, &((*_1098_s.alloc)._field_Left));
				if (((*_1098_s.alloc)._field_Right != nullptr)) {
					_1e6a08416_inspect(_self_, &((*_1098_s.alloc)._field_Right));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1cbe02d03:;
			{
				jule::Ptr<_1e5cd7031_TraitSubIdentExprModel> _1168_t = (*(_6128_m)).cast_ptr<_1e5cd7031_TraitSubIdentExprModel>(&__jule_any_type99);;
				_1e6a08416_inspect(_self_, &((*(_1168_t))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1cbe02d7a:;
			{
				jule::Ptr<_1e5cd78c2_StructSubIdentExprModel> _1198_s = (*(_6128_m)).cast_ptr<_1e5cd78c2_StructSubIdentExprModel>(&__jule_any_type100);;
				_1e6a08416_inspect(_self_, &((*((*(_1198_s))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1cbe02e02:;
			{
				jule::Ptr<_1e5cd843e_TupleExprModel> _1228_t = (*(_6128_m)).cast_ptr<_1e5cd843e_TupleExprModel>(&__jule_any_type83);;
				{
					auto expr = &((*(_1228_t))._field_Datas);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cbe141bb:;
					if (it != expr_end) {
						jule::Ptr<_1e5e08c13_Data> _12316_d = *it;
						{
							_1e6a08416_inspect(_self_, &((*(_12316_d))._field_Model));
						}
						_iter_next_1cbe141bb:;
						++it;
						goto _iter_begin_1cbe141bb;
					}
					_iter_end_1cbe141bb:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1cbe02e79:;
			{
				jule::Ptr<_1e5cd90bb_BuiltinNewCallExprModel> _1278_b = (*(_6128_m)).cast_ptr<_1e5cd90bb_BuiltinNewCallExprModel>(&__jule_any_type115);;
				if (((*(_1278_b))._field_Init != nullptr)) {
					_1e6a08416_inspect(_self_, &((*_1278_b.alloc)._field_Init));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1cbe03001:;
			{
				jule::Ptr<_1e5cd8818_BuiltinOutCallExprModel> _1328_c = (*(_6128_m)).cast_ptr<_1e5cd8818_BuiltinOutCallExprModel>(&__jule_any_type34);;
				_1e6a08416_inspect(_self_, &((*((*(_1328_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1cbe03078:;
			{
				jule::Ptr<_1e5cd8be2_BuiltinOutlnCallExprModel> _1358_c = (*(_6128_m)).cast_ptr<_1e5cd8be2_BuiltinOutlnCallExprModel>(&__jule_any_type35);;
				_1e6a08416_inspect(_self_, &((*((*(_1358_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1cbe03100:;
			{
				jule::Ptr<_1e5cd9495_BuiltinPanicCallExprModel> _1388_c = (*(_6128_m)).cast_ptr<_1e5cd9495_BuiltinPanicCallExprModel>(&__jule_any_type36);;
				_1e6a08416_inspect(_self_, &((*(_1388_c))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1cbe03177:;
			{
				jule::Ptr<_1e5cdb09b_BuiltinErrorCallExprModel> _1418_c = (*(_6128_m)).cast_ptr<_1e5cdb09b_BuiltinErrorCallExprModel>(&__jule_any_type30);;
				_1e6a08416_inspect(_self_, &((*((*(_1418_c))._field_Err))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1cbe031ee:;
			{
				jule::Ptr<_1e5cd994b_BuiltinMakeCallExprModel> _1448_b = (*(_6128_m)).cast_ptr<_1e5cd994b_BuiltinMakeCallExprModel>(&__jule_any_type116);;
				if (((*(_1448_b))._field_Len != nullptr)) {
					_1e6a08416_inspect(_self_, &((*_1448_b.alloc)._field_Len));
				};
				if (((*_1448_b.alloc)._field_Cap != nullptr)) {
					_1e6a08416_inspect(_self_, &((*_1448_b.alloc)._field_Cap));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1cbe03276:;
			{
				jule::Ptr<_1e5cd9d25_BuiltinAppendCallExprModel> _1528_b = (*(_6128_m)).cast_ptr<_1e5cd9d25_BuiltinAppendCallExprModel>(&__jule_any_type33);;
				_1e6a08416_inspect(_self_, &((*(_1528_b))._field_Dest));
				_1e6a08416_inspect(_self_, &((*_1528_b.alloc)._field_Elements));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1cbe032ed:;
			{
				jule::Ptr<_1e5cda122_BuiltinLenCallExprModel> _1568_l = (*(_6128_m)).cast_ptr<_1e5cda122_BuiltinLenCallExprModel>(&__jule_any_type117);;
				_1e6a08416_inspect(_self_, &((*((*(_1568_l))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1cbe03375:;
			{
				jule::Ptr<_1e5cda41e_BuiltinCapCallExprModel> _1598_c = (*(_6128_m)).cast_ptr<_1e5cda41e_BuiltinCapCallExprModel>(&__jule_any_type118);;
				_1e6a08416_inspect(_self_, &((*((*(_1598_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1cbe033ec:;
			{
				jule::Ptr<_1e5cda7e8_BuiltinDeleteCallExprModel> _1628_b = (*(_6128_m)).cast_ptr<_1e5cda7e8_BuiltinDeleteCallExprModel>(&__jule_any_type38);;
				_1e6a08416_inspect(_self_, &((*((*(_1628_b))._field_Dest))._field_Model));
				if (((*_1628_b.alloc)._field_Key != nullptr)) {
					_1e6a08416_inspect(_self_, &((*(*(_1628_b))._field_Key.alloc)._field_Model));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1cbe03474:;
			{
				jule::Ptr<_1e5cdb398_SizeofExprModel> _1688_s = (*(_6128_m)).cast_ptr<_1e5cdb398_SizeofExprModel>(&__jule_any_type119);;
				_1e6a08416_inspect(_self_, &((*(_1688_s))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1cbe034eb:;
			{
				jule::Ptr<_1e5cdba4c_AlignofExprModel> _1718_a = (*(_6128_m)).cast_ptr<_1e5cdba4c_AlignofExprModel>(&__jule_any_type120);;
				_1e6a08416_inspect(_self_, &((*(_1718_a))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1cbe03573:;
			{
				jule::Ptr<_1e5cdc3aa_FreeExprModel> _1748_f = (*(_6128_m)).cast_ptr<_1e5cdc3aa_FreeExprModel>(&__jule_any_type39);;
				_1e6a08416_inspect(_self_, &((*(_1748_f))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1cbe035ea:;
			{
				jule::Ptr<_1e5cdc0ad_BackendEmitExprModel> _1778_e = (*(_6128_m)).cast_ptr<_1e5cdc0ad_BackendEmitExprModel>(&__jule_any_type32);;
				_1e6a0815d_args(_self_, (*(_1778_e))._field_Exprs);
			}
		}
		_match_end_1cbe02495:;
	};
}



inline void _1e6a08779_Inspect(_1e6a07a0e_ExprInspector* _self_, jule::Any* _18528_m, jule::Fn<void,jule::Any*> _18542_f) {
	(*(_self_))._field_handler=_18542_f;
	_1e6a08416_inspect(_self_, _18528_m);
}












inline jule::Bool _1c7edb1ed_specialCaseDefines_eq(_1c7edb1ed_specialCaseDefines *_self_, _1c7edb1ed_specialCaseDefines _other_) {
	return 
		(_self_->_field_runtime_Map == _other_._field_runtime_Map) &&
		(_self_->_field_runtime_mapIterator == _self_->_field_runtime_mapIterator);
}

inline jule::Bool _1c7edb63d_isAllMethodsLive(_1c7edb1ed_specialCaseDefines* _self_, jule::Ptr<_1e5cc5e21_Struct> _3028_s) {
	return ((_3028_s == (*(_self_))._field_runtime_Map) || (_3028_s == (*(_self_))._field_runtime_mapIterator));;
}











inline jule::Ptr<_1c7edc199_ObjectDeadCode> static__1c7edc71b_new(jule::Ptr<_1e6a03ab5_IR>* _5021_ir) {
	return jule::new_ptr<_1c7edc199_ObjectDeadCode>(_1c7edc199_ObjectDeadCode{._field_live=_1c7edbbe3_liveTable{._field_vars=jule::Slice<jule::Ptr<_1e5da0bcc_Var>>(nullptr), ._field_fns=jule::Slice<jule::Ptr<_1e5ce3416_FnIns>>(nullptr), ._field_structs=jule::Slice<jule::Ptr<_1e5cc8c7b_StructIns>>(nullptr), ._field_traits=jule::Slice<jule::Ptr<_1e5d03db6_Trait>>(nullptr)}, ._field_ir=(*(_5021_ir)), ._field_scd=_1c7edb1ed_specialCaseDefines{._field_runtime_Map=jule::Ptr<_1e5cc5e21_Struct>(nullptr), ._field_runtime_mapIterator=jule::Ptr<_1e5cc5e21_Struct>(nullptr)}});;
}



inline jule::Bool _1cbe68cd1_isLive(jule::Ptr<_1c7edc199_ObjectDeadCode> _self_, jule::Ptr<_1e5cc8c7b_StructIns>* _5627_t) {
	jule::Slice<jule::Ptr<_1e5cc8c7b_StructIns>> _5711_live = nullptr;;
	{
		
{
			_case_begin_1cbe6a94d:;
			{
				_5711_live=(*(_self_))._field_live._field_structs;
			}
		}
		_match_end_1cbe6a81b:;
	};
	{
		auto expr = &(_5711_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbe6a882:;
		if (it != expr_end) {
			jule::I64 _687_i = it - expr->begin();
			{
				if ((_5711_live[_687_i] == (*(_5627_t)))) {
					return true;;
				};
			}
			_iter_next_1cbe6a882:;
			++it;
			_687_i++;
			goto _iter_begin_1cbe6a882;
		}
		_iter_end_1cbe6a882:;
	};
	return false;;
}

inline jule::Bool _1cbe70bc8_isLive(jule::Ptr<_1c7edc199_ObjectDeadCode> _self_, jule::Ptr<_1e5ce3416_FnIns>* _5627_t) {
	jule::Slice<jule::Ptr<_1e5ce3416_FnIns>> _5711_live = nullptr;;
	{
		
{
			_case_begin_1cbe7278a:;
			{
				_5711_live=(*(_self_))._field_live._field_fns;
			}
		}
		_match_end_1cbe726be:;
	};
	{
		auto expr = &(_5711_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbe72735:;
		if (it != expr_end) {
			jule::I64 _687_i = it - expr->begin();
			{
				if ((_5711_live[_687_i] == (*(_5627_t)))) {
					return true;;
				};
			}
			_iter_next_1cbe72735:;
			++it;
			_687_i++;
			goto _iter_begin_1cbe72735;
		}
		_iter_end_1cbe72735:;
	};
	return false;;
}

inline jule::Bool _1cbe97804_isLive(jule::Ptr<_1c7edc199_ObjectDeadCode> _self_, jule::Ptr<_1e5d03db6_Trait>* _5627_t) {
	jule::Slice<jule::Ptr<_1e5d03db6_Trait>> _5711_live = nullptr;;
	{
		
{
			_case_begin_1cbe994d7:;
			{
				_5711_live=(*(_self_))._field_live._field_traits;
			}
		}
		_match_end_1cbe9933e:;
	};
	{
		auto expr = &(_5711_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbe9a5a4:;
		if (it != expr_end) {
			jule::I64 _687_i = it - expr->begin();
			{
				if ((_5711_live[_687_i] == (*(_5627_t)))) {
					return true;;
				};
			}
			_iter_next_1cbe9a5a4:;
			++it;
			_687_i++;
			goto _iter_begin_1cbe9a5a4;
		}
		_iter_end_1cbe9a5a4:;
	};
	return false;;
}

inline jule::Bool _1cbea2a2e_isLive(jule::Ptr<_1c7edc199_ObjectDeadCode> _self_, jule::Ptr<_1e5da0bcc_Var>* _5627_t) {
	jule::Slice<jule::Ptr<_1e5da0bcc_Var>> _5711_live = nullptr;;
	{
		
{
			_case_begin_1cbea43c1:;
			{
				_5711_live=(*(_self_))._field_live._field_vars;
			}
		}
		_match_end_1cbea4525:;
	};
	{
		auto expr = &(_5711_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbea505e:;
		if (it != expr_end) {
			jule::I64 _687_i = it - expr->begin();
			{
				if ((_5711_live[_687_i] == (*(_5627_t)))) {
					return true;;
				};
			}
			_iter_next_1cbea505e:;
			++it;
			_687_i++;
			goto _iter_begin_1cbea505e;
		}
		_iter_end_1cbea505e:;
	};
	return false;;
}



inline void _1cbe696d8_pushLive(jule::Ptr<_1c7edc199_ObjectDeadCode> _self_, jule::Ptr<_1e5cc8c7b_StructIns> _7632_t) {
	{
		
{
			_case_begin_1cbe6cce6:;
			{
				(*(_self_))._field_live._field_structs=jule::append((*_self_.alloc)._field_live._field_structs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5cc8c7b_StructIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7632_t; __jule_collection; }));
			}
		}
		_match_end_1cbe6ba4d:;
	};
}

inline void _1cbe710d5_pushLive(jule::Ptr<_1c7edc199_ObjectDeadCode> _self_, jule::Ptr<_1e5ce3416_FnIns> _7632_t) {
	{
		
{
			_case_begin_1cbe752a4:;
			{
				(*(_self_))._field_live._field_fns=jule::append((*_self_.alloc)._field_live._field_fns,({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5ce3416_FnIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7632_t; __jule_collection; }));
			}
		}
		_match_end_1cbe7469e:;
	};
}

inline void _1cbe9820b_pushLive(jule::Ptr<_1c7edc199_ObjectDeadCode> _self_, jule::Ptr<_1e5d03db6_Trait> _7632_t) {
	{
		
{
			_case_begin_1cbe9b671:;
			{
				(*(_self_))._field_live._field_traits=jule::append((*_self_.alloc)._field_live._field_traits,({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5d03db6_Trait>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7632_t; __jule_collection; }));
			}
		}
		_match_end_1cbe99e22:;
	};
}

inline void _1cbea2dd6_pushLive(jule::Ptr<_1c7edc199_ObjectDeadCode> _self_, jule::Ptr<_1e5da0bcc_Var> _7632_t) {
	{
		
{
			_case_begin_1cbea6b54:;
			{
				(*(_self_))._field_live._field_vars=jule::append((*_self_.alloc)._field_live._field_vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5da0bcc_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7632_t; __jule_collection; }));
			}
		}
		_match_end_1cbea569c:;
	};
}



inline void _1c7edd08a_pushStructAsLive(jule::Ptr<_1c7edc199_ObjectDeadCode> _self_, jule::Ptr<_1e5cc8c7b_StructIns>* _8938_s) {
	if (_1cbe68cd1_isLive(_self_, _8938_s)) {
		return;;
	};
	_1cbe696d8_pushLive(_self_, (*(_8938_s)));
	_1c7edd343_setReferencesAsLive(_self_, &((*((*(_8938_s))))._field_Refers));
	jule::Bool _953_allLive = _1c7edb63d_isAllMethodsLive(&(*_self_.alloc)._field_scd, (*((*(_8938_s))))._field_Decl);;
	{
		auto expr = &((*((*(_8938_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbe6e26a:;
		if (it != expr_end) {
			jule::Ptr<_1e5ce0358_Fn> _9615_m = *it;
			{
				{
					auto expr = &((*(_9615_m))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cbe6ebb6:;
					if (it != expr_end) {
						jule::Ptr<_1e5ce3416_FnIns> _9716_ins = *it;
						{
							if (_1cbe70bc8_isLive(_self_, &(_9716_ins))) {
								goto _iter_next_1cbe6ebb6;
							};
							if (_953_allLive) {
								_1cbe710d5_pushLive(_self_, _9716_ins);
								_1c7edd343_setReferencesAsLive(_self_, &((*(_9716_ins))._field_Refers));
								goto _iter_next_1cbe6ebb6;
							};
							if (_1e6a0a5a0_IsTraitMethod(_8938_s, &(_9716_ins))) {
								_1cbe710d5_pushLive(_self_, _9716_ins);
								_1c7edd343_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
							};
							;
							;
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_Eq)) {
									_1cbe710d5_pushLive(_self_, _9716_ins);
									_1c7edd343_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_Gt)) {
									_1cbe710d5_pushLive(_self_, _9716_ins);
									_1c7edd343_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_GtEq)) {
									_1cbe710d5_pushLive(_self_, _9716_ins);
									_1c7edd343_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_Lt)) {
									_1cbe710d5_pushLive(_self_, _9716_ins);
									_1c7edd343_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_LtEq)) {
									_1cbe710d5_pushLive(_self_, _9716_ins);
									_1c7edd343_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_Shl)) {
									_1cbe710d5_pushLive(_self_, _9716_ins);
									_1c7edd343_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_Shr)) {
									_1cbe710d5_pushLive(_self_, _9716_ins);
									_1c7edd343_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_Add)) {
									_1cbe710d5_pushLive(_self_, _9716_ins);
									_1c7edd343_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_Sub)) {
									_1cbe710d5_pushLive(_self_, _9716_ins);
									_1c7edd343_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_Div)) {
									_1cbe710d5_pushLive(_self_, _9716_ins);
									_1c7edd343_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_Mul)) {
									_1cbe710d5_pushLive(_self_, _9716_ins);
									_1c7edd343_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_Mod)) {
									_1cbe710d5_pushLive(_self_, _9716_ins);
									_1c7edd343_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_BitAnd)) {
									_1cbe710d5_pushLive(_self_, _9716_ins);
									_1c7edd343_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_BitOr)) {
									_1cbe710d5_pushLive(_self_, _9716_ins);
									_1c7edd343_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_BitXor)) {
									_1cbe710d5_pushLive(_self_, _9716_ins);
									_1c7edd343_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_Neg)) {
									_1cbe710d5_pushLive(_self_, _9716_ins);
									_1c7edd343_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_Pos)) {
									_1cbe710d5_pushLive(_self_, _9716_ins);
									_1c7edd343_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_BitNot)) {
									_1cbe710d5_pushLive(_self_, _9716_ins);
									_1c7edd343_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_AddAssign)) {
									_1cbe710d5_pushLive(_self_, _9716_ins);
									_1c7edd343_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_SubAssign)) {
									_1cbe710d5_pushLive(_self_, _9716_ins);
									_1c7edd343_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_DivAssign)) {
									_1cbe710d5_pushLive(_self_, _9716_ins);
									_1c7edd343_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_MulAssign)) {
									_1cbe710d5_pushLive(_self_, _9716_ins);
									_1c7edd343_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_ModAssign)) {
									_1cbe710d5_pushLive(_self_, _9716_ins);
									_1c7edd343_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_ShlAssign)) {
									_1cbe710d5_pushLive(_self_, _9716_ins);
									_1c7edd343_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_ShrAssign)) {
									_1cbe710d5_pushLive(_self_, _9716_ins);
									_1c7edd343_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_BitOrAssign)) {
									_1cbe710d5_pushLive(_self_, _9716_ins);
									_1c7edd343_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_BitAndAssign)) {
									_1cbe710d5_pushLive(_self_, _9716_ins);
									_1c7edd343_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_BitXorAssign)) {
									_1cbe710d5_pushLive(_self_, _9716_ins);
									_1c7edd343_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							;
							jule::Ptr<_1e5ce0358_Fn> _1359_dispose = _1e5cc9d26_FindMethod((*(_8938_s)).ptr(), jule::Str::lit("Dispose", 7), false);;
							if (((_1359_dispose != nullptr) && static__1e5da22c7_Dispose(_1359_dispose))) {
								jule::Ptr<_1e5ce3416_FnIns> _13710_fins = (*_1359_dispose.alloc)._field_Instances[0LL];;
								_1cbe710d5_pushLive(_self_, _13710_fins);
								_1c7edd343_setReferencesAsLive(_self_, &((*(_13710_fins))._field_Refers));
							};
							jule::Ptr<_1e5ce0358_Fn> _1429__str = _1e5cc9d26_FindMethod((*(_8938_s)).ptr(), jule::Str::lit("Str", 3), false);;
							if (((_1429__str != nullptr) && static__1e5da2591_Str(_1429__str))) {
								jule::Ptr<_1e5ce3416_FnIns> _14410_fins = (*(_1429__str))._field_Instances[0LL];;
								_1cbe710d5_pushLive(_self_, _14410_fins);
								_1c7edd343_setReferencesAsLive(_self_, &((*(_14410_fins))._field_Refers));
							};
						}
						_iter_next_1cbe6ebb6:;
						++it;
						goto _iter_begin_1cbe6ebb6;
					}
					_iter_end_1cbe6ebb6:;
				};
			}
			_iter_next_1cbe6e26a:;
			++it;
			goto _iter_begin_1cbe6e26a;
		}
		_iter_end_1cbe6e26a:;
	};
}



inline void _1c7edd343_setReferencesAsLive(jule::Ptr<_1c7edc199_ObjectDeadCode> _self_, jule::Ptr<_1e5ce65a1_ReferenceStack>* _15241_rs) {
	if (((*(_15241_rs)) == nullptr)) {
		return;;
	};
	jule::I64 _1567_i = 0LL;;
	for (; (_1567_i < _1e5ce6cbb_Len((*(_15241_rs)).ptr())); (_1567_i)++) {
		{
			jule::Any _1588_ref = _1e5ce710c_At((*(_15241_rs)).ptr(), _1567_i);;
			{
				auto &_match_expr{ _1588_ref };
				
				if (_match_expr.type == &__jule_any_type10) {
					_case_begin_1cbe964e5:;
					{
						jule::Ptr<_1e5d03db6_Trait> _1619_t = _1588_ref.unsafe_cast_ptr<_1e5d03db6_Trait>();;
						if (_1cbe97804_isLive(_self_, &(_1619_t))) {
							goto _iter_next_1cbe956c0;
						};
						_1cbe9820b_pushLive(_self_, _1619_t);
						{
							auto expr = &((*(_1619_t))._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1cbe9721b:;
							if (it != expr_end) {
								jule::Ptr<_1e5ce0358_Fn> _16617_ins = *it;
								{
									{
										auto expr = &((*(_16617_ins))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1cbe9b275:;
										if (it != expr_end) {
											jule::Ptr<_1e5ce3416_FnIns> _16718_mins = *it;
											{
												if (_1cbe70bc8_isLive(_self_, &(_16718_mins))) {
													goto _iter_next_1cbe9b275;
												};
												_1cbe710d5_pushLive(_self_, _16718_mins);
												_1c7edd343_setReferencesAsLive(_self_, &((*(_16718_mins))._field_Refers));
											}
											_iter_next_1cbe9b275:;
											++it;
											goto _iter_begin_1cbe9b275;
										}
										_iter_end_1cbe9b275:;
									};
								}
								_iter_next_1cbe9721b:;
								++it;
								goto _iter_begin_1cbe9721b;
							}
							_iter_end_1cbe9721b:;
						};
					}
				}
				else if (_match_expr.type == &__jule_any_type7) {
					_case_begin_1cbe9632a:;
					{
						jule::Ptr<_1e5ce3416_FnIns> _1769_f = _1588_ref.unsafe_cast_ptr<_1e5ce3416_FnIns>();;
						if (_1cbe70bc8_isLive(_self_, &(_1769_f))) {
							goto _match_end_1cbe963a2;
						};
						if ((((*(_1769_f))._field_Owner != nullptr) && (!((*((*_1769_f.alloc)._field_Decl))._field_Statically)))) {
							if ((!(_1cbe68cd1_isLive(_self_, &((*_1769_f.alloc)._field_Owner))))) {
								_1cbe696d8_pushLive(_self_, (*_1769_f.alloc)._field_Owner);
								_1c7edd343_setReferencesAsLive(_self_, &((*(*(_1769_f))._field_Owner.alloc)._field_Refers));
							};
						};
						_1cbe710d5_pushLive(_self_, _1769_f);
						_1c7edd343_setReferencesAsLive(_self_, &((*_1769_f.alloc)._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type8) {
					_case_begin_1cbe9655b:;
					{
						jule::Ptr<_1e5da0bcc_Var> _1899_v = _1588_ref.unsafe_cast_ptr<_1e5da0bcc_Var>();;
						if (_1cbea2a2e_isLive(_self_, &(_1899_v))) {
							goto _match_end_1cbe963a2;
						};
						_1cbea2dd6_pushLive(_self_, _1899_v);
						_1c7edd343_setReferencesAsLive(_self_, &((*(_1899_v))._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type9) {
					_case_begin_1cbe965c2:;
					{
						jule::Ptr<_1e5cc8c7b_StructIns> _1969_s = _1588_ref.unsafe_cast_ptr<_1e5cc8c7b_StructIns>();;
						_1c7edd08a_pushStructAsLive(_self_, &(_1969_s));
					}
				}
				_match_end_1cbe963a2:;
			};
		}
	_iter_next_1cbe956c0:;
	}
	_iter_end_1cbe956c0:;;
}



inline void _1c7edd5eb_inits(jule::Ptr<_1c7edc199_ObjectDeadCode> _self_, jule::Ptr<_1e5d5e21d_Package>* _20227_pkg) {
	{
		auto expr = &((*((*(_20227_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbe95857:;
		if (it != expr_end) {
			jule::Ptr<_1e5e03548_SymbolTable> _20315_file = *it;
			{
				{
					auto expr = &((*(_20315_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cbea9096:;
					if (it != expr_end) {
						jule::Ptr<_1e5ce0358_Fn> _20416_f = *it;
						{
							if ((*(_20416_f))._field_Ident.equal("init", 4)) {
								jule::Ptr<_1e5ce3416_FnIns> _20610_ins = (*(_20416_f))._field_Instances[0LL];;
								if ((!(_1cbe70bc8_isLive(_self_, &(_20610_ins))))) {
									_1cbe710d5_pushLive(_self_, _20610_ins);
								};
								_1c7edd343_setReferencesAsLive(_self_, &((*(_20610_ins))._field_Refers));
							};
						}
						_iter_next_1cbea9096:;
						++it;
						goto _iter_begin_1cbea9096;
					}
					_iter_end_1cbea9096:;
				};
			}
			_iter_next_1cbe95857:;
			++it;
			goto _iter_begin_1cbe95857;
		}
		_iter_end_1cbe95857:;
	};
}



inline void _1c7edd8a4_collectLivePackage(jule::Ptr<_1c7edc199_ObjectDeadCode> _self_, jule::Ptr<_1e5d5e21d_Package>* _21640_pkg) {
	_1c7edd5eb_inits(_self_, _21640_pkg);
	_1e6a06777_IterFiles(_21640_pkg, jule::__new_closure<void,jule::Ptr<_1e5e03548_SymbolTable>*>((void*)__jule_anon_1cbeabd8a, jule::Ptr<__jule_anon_1cbeabd8a_ctx>::make(__jule_anon_1cbeabd8a_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1cbeabd8a_ctx_handler));
	if (_22586bb30_Test) {
		if ((((*((*(_21640_pkg))))._field_Files.len() > 0LL) && _1e6a0a924_IsStdPackage((*((*((*((*(_21640_pkg))))._field_Files[0LL]))._field_File))._field_Path, jule::Str::lit("testing", 7)))) {
			;
			jule::Ptr<_1e5cc5e21_Struct> _2469_s = _1e5d603d9_FindStruct((*(_21640_pkg)).ptr(), jule::Str::lit("T", 1), false);;
			jule::Ptr<_1e5cc8c7b_StructIns> _2479_ins = (*(_2469_s))._field_Instances[0LL];;
			_1c7edd08a_pushStructAsLive(_self_, &(_2479_ins));
			{
				auto expr = &((*(_2479_ins))._field_Methods);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1cbeb33be:;
				if (it != expr_end) {
					jule::Ptr<_1e5ce0358_Fn> _24917_m = *it;
					{
						{
							auto expr = &((*(_24917_m))._field_Instances);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1cbeb3e3b:;
							if (it != expr_end) {
								jule::Ptr<_1e5ce3416_FnIns> _25018_mins = *it;
								{
									if (_1cbe70bc8_isLive(_self_, &(_25018_mins))) {
										goto _iter_next_1cbeb3e3b;
									};
									_1cbe710d5_pushLive(_self_, _25018_mins);
									_1c7edd343_setReferencesAsLive(_self_, &((*(_25018_mins))._field_Refers));
								}
								_iter_next_1cbeb3e3b:;
								++it;
								goto _iter_begin_1cbeb3e3b;
							}
							_iter_end_1cbeb3e3b:;
						};
					}
					_iter_next_1cbeb33be:;
					++it;
					goto _iter_begin_1cbeb33be;
				}
				_iter_end_1cbeb33be:;
			};
		};
		{
			auto expr = &((*((*(_21640_pkg))))._field_Files);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1cbeaee26:;
			if (it != expr_end) {
				jule::Ptr<_1e5e03548_SymbolTable> _25916_file = *it;
				{
					{
						auto expr = &((*(_25916_file))._field_Funcs);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1cbeb6603:;
						if (it != expr_end) {
							jule::Ptr<_1e5ce0358_Fn> _26017_f = *it;
							{
								if (_1e6a0bcdd_HasDirective(&((*(_26017_f))._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4)))) {
									jule::Ptr<_1e5ce3416_FnIns> _26211_ins = (*_26017_f.alloc)._field_Instances[0LL];;
									if ((!(_1cbe70bc8_isLive(_self_, &(_26211_ins))))) {
										_1cbe710d5_pushLive(_self_, _26211_ins);
									};
									_1c7edd343_setReferencesAsLive(_self_, &((*(_26211_ins))._field_Refers));
								};
							}
							_iter_next_1cbeb6603:;
							++it;
							goto _iter_begin_1cbeb6603;
						}
						_iter_end_1cbeb6603:;
					};
				}
				_iter_next_1cbeaee26:;
				++it;
				goto _iter_begin_1cbeaee26;
			}
			_iter_end_1cbeaee26:;
		};
	};
}



inline void _1c7eddaa2_collectLive(jule::Ptr<_1c7edc199_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbeb7318:;
		if (it != expr_end) {
			jule::Ptr<_1e5d5b2e7_ImportInfo> _27415_used = *it;
			{
				if ((!((*(_27415_used))._field_Binded))) {
					_1c7edd8a4_collectLivePackage(_self_, &((*_27415_used.alloc)._field_Package));
				};
			}
			_iter_next_1cbeb7318:;
			++it;
			goto _iter_begin_1cbeb7318;
		}
		_iter_end_1cbeb7318:;
	};
	_1c7edd8a4_collectLivePackage(_self_, &((*(*(_self_))._field_ir.alloc)._field_Main));
	jule::Ptr<_1e5ce0358_Fn> _2827_main = _1e5d607d5_FindFn((*(*(_self_))._field_ir.alloc)._field_Main.ptr(), jule::Str::lit("main", 4), false);;
	if ((_2827_main != nullptr)) {
		jule::Ptr<_1e5ce3416_FnIns> _2848_ins = (*_2827_main.alloc)._field_Instances[0LL];;
		if ((!(_1cbe70bc8_isLive(_self_, &(_2848_ins))))) {
			_1cbe710d5_pushLive(_self_, _2848_ins);
		};
		_1c7edd343_setReferencesAsLive(_self_, &((*(_2848_ins))._field_Refers));
	};
}



inline void _1c7eddd5a_removeDeadGlobals(jule::Ptr<_1c7edc199_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1e5da0bcc_Var>>* _29239_vars) {
	jule::I64 _2937_i = 0LL;;
	while ((_2937_i < (*(_29239_vars)).len())) {
		{
			jule::Ptr<_1e5da0bcc_Var> _2954_v = (*(_29239_vars))[_2937_i];;
			if (_1cbea2a2e_isLive(_self_, &(_2954_v))) {
				(_2937_i)++;
				goto _iter_next_1cbebd033;
			};
			(*(_29239_vars))=jule::append((*(_29239_vars)).slice(0LL, _2937_i),(*(_29239_vars)).slice((_2937_i + 1LL)));
		}
	_iter_next_1cbebd033:;
	}
	_iter_end_1cbebd033:;;
}



inline void _1c7ede113_removeDeadFns(jule::Ptr<_1c7edc199_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1e5ce0358_Fn>>* _30435_funcs) {
	jule::I64 _3057_i = 0LL;;
	while ((_3057_i < (*(_30435_funcs)).len())) {
		{
			jule::Ptr<_1e5ce0358_Fn> _3078_f = (*(_30435_funcs))[_3057_i];;
			jule::I64 _3088_j = 0LL;;
			while ((_3088_j < (*(_3078_f))._field_Instances.len())) {
				{
					jule::Ptr<_1e5ce3416_FnIns> _3105_ins = (*(_3078_f))._field_Instances[_3088_j];;
					if (_1cbe70bc8_isLive(_self_, &(_3105_ins))) {
						(_3088_j)++;
						goto _iter_next_1cbec08d7;
					};
					(*_3078_f.alloc)._field_Instances=jule::append((*_3078_f.alloc)._field_Instances.slice(0LL, _3088_j),(*_3078_f.alloc)._field_Instances.slice((_3088_j + 1LL)));
				}
			_iter_next_1cbec08d7:;
			}
			_iter_end_1cbec08d7:;;
			if (((*_3078_f.alloc)._field_Instances.len() == 0LL)) {
				(*(_30435_funcs))=jule::append((*(_30435_funcs)).slice(0LL, _3057_i),(*(_30435_funcs)).slice((_3057_i + 1LL)));
				goto _iter_next_1cbebe908;
			};
			(_3057_i)++;
		}
	_iter_next_1cbebe908:;
	}
	_iter_end_1cbebe908:;;
}



inline void _1c7ede3bb_removeDeadStructs(jule::Ptr<_1c7edc199_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1e5cc5e21_Struct>>* _32539_structs) {
	jule::I64 _3267_i = 0LL;;
	while ((_3267_i < (*(_32539_structs)).len())) {
		{
			jule::Ptr<_1e5cc5e21_Struct> _3288_s = (*(_32539_structs))[_3267_i];;
			jule::I64 _3298_j = 0LL;;
			while ((_3298_j < (*(_3288_s))._field_Instances.len())) {
				{
					jule::Ptr<_1e5cc8c7b_StructIns> _3319_ins = (*(_3288_s))._field_Instances[_3298_j];;
					_1c7ede113_removeDeadFns(_self_, &((*(_3319_ins))._field_Methods));
					if ((((*_3319_ins.alloc)._field_Methods.len() != 0LL) || _1cbe68cd1_isLive(_self_, &(_3319_ins)))) {
						(_3298_j)++;
						goto _iter_next_1cbec4589;
					};
					(*_3288_s.alloc)._field_Instances=jule::append((*_3288_s.alloc)._field_Instances.slice(0LL, _3298_j),(*_3288_s.alloc)._field_Instances.slice((_3298_j + 1LL)));
				}
			_iter_next_1cbec4589:;
			}
			_iter_end_1cbec4589:;;
			if (((*_3288_s.alloc)._field_Instances.len() == 0LL)) {
				(*(_32539_structs))=jule::append((*(_32539_structs)).slice(0LL, _3267_i),(*(_32539_structs)).slice((_3267_i + 1LL)));
				goto _iter_next_1cbec3742;
			};
			(_3267_i)++;
		}
	_iter_next_1cbec3742:;
	}
	_iter_end_1cbec3742:;;
}



inline void _1c7ede674_removeDeadTraits(jule::Ptr<_1c7edc199_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1e5d03db6_Trait>>* _34738_traits) {
	jule::I64 _3487_i = 0LL;;
	while ((_3487_i < (*(_34738_traits)).len())) {
		{
			jule::Ptr<_1e5d03db6_Trait> _3508_t = (*(_34738_traits))[_3487_i];;
			if ((!(_1cbe97804_isLive(_self_, &(_3508_t))))) {
				(*(_34738_traits))=jule::append((*(_34738_traits)).slice(0LL, _3487_i),(*(_34738_traits)).slice((_3487_i + 1LL)));
				goto _iter_next_1cbec7e50;
			};
			jule::I64 _3558_j = 0LL;;
			while ((_3558_j < (*(_3508_t))._field_Implemented.len())) {
				{
					jule::Ptr<_1e5cc5e21_Struct> _3575_s = (*(_3508_t))._field_Implemented[_3558_j];;
					if (((*(_3575_s))._field_Instances.len() > 0LL)) {
						(_3558_j)++;
						goto _iter_next_1cbec889b;
					};
					(*_3508_t.alloc)._field_Implemented=jule::append((*_3508_t.alloc)._field_Implemented.slice(0LL, _3558_j),(*_3508_t.alloc)._field_Implemented.slice((_3558_j + 1LL)));
				}
			_iter_next_1cbec889b:;
			}
			_iter_end_1cbec889b:;;
			(_3487_i)++;
		}
	_iter_next_1cbec7e50:;
	}
	_iter_end_1cbec7e50:;;
}



inline void _1c7ede92c_removeDeadsFile(jule::Ptr<_1c7edc199_ObjectDeadCode> _self_, jule::Ptr<_1e5e03548_SymbolTable>* _36837_file) {
	_1c7ede113_removeDeadFns(_self_, &((*((*(_36837_file))))._field_Funcs));
	_1c7ede3bb_removeDeadStructs(_self_, &((*((*(_36837_file))))._field_Structs));
	_1c7ede674_removeDeadTraits(_self_, &((*((*(_36837_file))))._field_Traits));
	_1c7eddd5a_removeDeadGlobals(_self_, &((*((*(_36837_file))))._field_Vars));
}



inline void _1c7edebd5_removeDeadsPackage(jule::Ptr<_1c7edc199_ObjectDeadCode> _self_, jule::Ptr<_1e5d5e21d_Package>* _37540_pkg) {
	{
		auto expr = &((*((*(_37540_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbecd461:;
		if (it != expr_end) {
			jule::Ptr<_1e5e03548_SymbolTable> _37615_file = *it;
			{
				_1c7ede92c_removeDeadsFile(_self_, &(_37615_file));
			}
			_iter_next_1cbecd461:;
			++it;
			goto _iter_begin_1cbecd461;
		}
		_iter_end_1cbecd461:;
	};
}



inline void _1c7ededd3_removeDeads(jule::Ptr<_1c7edc199_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbecdc03:;
		if (it != expr_end) {
			jule::Ptr<_1e5d5b2e7_ImportInfo> _38215_used = *it;
			{
				if ((!((*(_38215_used))._field_Binded))) {
					_1c7edebd5_removeDeadsPackage(_self_, &((*_38215_used.alloc)._field_Package));
				};
			}
			_iter_next_1cbecdc03:;
			++it;
			goto _iter_begin_1cbecdc03;
		}
		_iter_end_1cbecdc03:;
	};
	_1c7edebd5_removeDeadsPackage(_self_, &((*(*(_self_))._field_ir.alloc)._field_Main));
}



inline void _1c7ee00d1_collectSpecialCaseDefines(jule::Ptr<_1c7edc199_ObjectDeadCode> _self_) {
	(*(_self_))._field_scd._field_runtime_Map=_1e61560a3_RuntimeFindStruct(&((*((*_self_.alloc)._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));
	(*_self_.alloc)._field_scd._field_runtime_mapIterator=_1e61560a3_RuntimeFindStruct(&((*(*(_self_))._field_ir.alloc)._field_Runtime), static_cast<jule::Str>(jule::Str::lit("mapIterator", 11)));
}



inline void _1c7ee02ce_elimanate(jule::Ptr<_1c7edc199_ObjectDeadCode> _self_) {
	_1c7ee00d1_collectSpecialCaseDefines(_self_);
	_1c7eddaa2_collectLive(_self_);
	_1c7ededd3_removeDeads(_self_);
}








inline jule::Bool _1c7ee12be_scopeDeadCode_eq(_1c7ee12be_scopeDeadCode *_self_, _1c7ee12be_scopeDeadCode _other_) {
	return 
		(_self_->_field_parent == _other_._field_parent) &&
		(_self_->_field_s == _self_->_field_s) &&
		(_self_->_field_i == _self_->_field_i) &&
		(_self_->_field_labels == _self_->_field_labels) &&
		(_self_->_field_gotos == _self_->_field_gotos) &&
		(_self_->_field_except == _self_->_field_except);
}

inline void _1c7ee17db_optimizeChild(jule::Ptr<_1c7ee12be_scopeDeadCode> _self_, jule::Ptr<_1e5d384d3_Scope>* _3935_s) {
	jule::Ptr<_1c7ee12be_scopeDeadCode> _407_sdc = jule::new_ptr<_1c7ee12be_scopeDeadCode>(_1c7ee12be_scopeDeadCode{._field_parent=_self_, ._field_s=(*(_3935_s)), ._field_i=0, ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, ._field_except=false});;
	{
		_1c7ee4206_optimizeStmts(_407_sdc);
	};
}



inline void _1c7ee1a94_optimizeBodyChildExceptional(jule::Ptr<_1c7ee12be_scopeDeadCode> _self_, jule::Ptr<_1e5d384d3_Scope>* _4950_s) {
	jule::Ptr<_1c7ee12be_scopeDeadCode> _507_sdc = jule::new_ptr<_1c7ee12be_scopeDeadCode>(_1c7ee12be_scopeDeadCode{._field_parent=jule::Ptr<_1c7ee12be_scopeDeadCode>(nullptr), ._field_s=(*(_4950_s)), ._field_i=0, ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, ._field_except=true});;
	{
		_1c7ee4206_optimizeStmts(_507_sdc);
	};
}



inline void _1c7ee1d4c_optimizeBodyChild(jule::Ptr<_1c7ee12be_scopeDeadCode> _self_, jule::Ptr<_1e5d384d3_Scope>* _5939_s) {
	jule::Ptr<_1c7ee12be_scopeDeadCode> _607_sdc = jule::new_ptr<_1c7ee12be_scopeDeadCode>(_1c7ee12be_scopeDeadCode{._field_parent=jule::Ptr<_1c7ee12be_scopeDeadCode>(nullptr), ._field_s=(*(_5939_s)), ._field_i=0, ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, ._field_except=false});;
	{
		_1c7ee4206_optimizeStmts(_607_sdc);
	};
}



inline void _1c7ee2105_optimizeExprModel(jule::Ptr<_1c7ee12be_scopeDeadCode> _self_, jule::Any* _6839_model) {
	_1c7ee5966_exprDeadCode _693_edc = static__1c7ee5d2e_new(&(_self_));;
	_1c7ee60d7_optimize(&_693_edc, _6839_model);
}



inline void _1c7ee2303_eliminateFollowed(_1c7ee12be_scopeDeadCode* _self_) {
	if (((*((*(_self_))._field_gotos)).len() != 0LL)) {
		return;;
	};
	{
		((*((*(_self_))._field_s))._field_Stmts).mut_slice(0LL, ((*(_self_))._field_i + 1LL));;
	};
	jule::Ptr<_1c7ee12be_scopeDeadCode> _807_parent = (*(_self_))._field_parent;;
	while ((_807_parent != nullptr)) {
		{
			{
				((*((*(_807_parent))._field_s))._field_Stmts).mut_slice(0LL, ((*(_807_parent))._field_i + 1LL));;
			};
			_807_parent=(*_807_parent.alloc)._field_parent;
		}
	_iter_next_1cbee1089:;
	}
	_iter_end_1cbee1089:;;
}



inline void _1c7ee25ab_pushGoto(jule::Ptr<_1c7ee12be_scopeDeadCode> _self_, jule::Ptr<_1e5d3b690_GotoSt> _8929_gt) {
	jule::I64 _907_i = 0LL;;
	for (; (_907_i < (*((*(_self_))._field_labels)).len()); (_907_i)++) {
		{
			if (((*(_8929_gt))._field_Ident == (*((*((*(_self_))._field_labels))[_907_i]))._field_Ident)) {
				return;;
			};
		}
	_iter_next_1cbee43bc:;
	}
	_iter_end_1cbee43bc:;;
	(*((*_self_.alloc)._field_gotos))=jule::append((*(*(_self_))._field_gotos.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5d3b690_GotoSt>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _8929_gt; __jule_collection; }));
}



inline void _1c7ee2864_pushLabel(jule::Ptr<_1c7ee12be_scopeDeadCode> _self_, jule::Ptr<_1e5d3b030_Label> _9930_l) {
	jule::I64 _1007_i = 0LL;;
	while ((_1007_i < (*((*(_self_))._field_gotos)).len())) {
		{
			if (((*(_9930_l))._field_Ident == (*((*((*(_self_))._field_gotos))[_1007_i]))._field_Ident)) {
				jule::copy((*((*(_self_))._field_gotos)).slice(_1007_i), (*((*(_self_))._field_gotos)).slice((_1007_i + 1LL)));
				((*((*(_self_))._field_gotos))).mut_slice(0LL, ((*((*(_self_))._field_gotos)).len() - 1LL));;
				goto _iter_next_1cbee65bc;
			};
			(_1007_i)++;
		}
	_iter_next_1cbee65bc:;
	}
	_iter_end_1cbee65bc:;;
	(*((*_self_.alloc)._field_labels))=jule::append((*(*(_self_))._field_labels.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5d3b030_Label>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _9930_l; __jule_collection; }));
}



inline void _1c7ee2b1c_optimizeRangeIter(jule::Ptr<_1c7ee12be_scopeDeadCode> _self_, jule::Ptr<_1e5d3a31a_RangeIter> _11238_it) {
	_1c7ee2105_optimizeExprModel(_self_, &((*((*(_11238_it))._field_Expr))._field_Model));
	_1c7ee1d4c_optimizeBodyChild(_self_, &((*_11238_it.alloc)._field_Scope));
}



inline void _1c7ee2dc5_optimizeWhileIter(jule::Ptr<_1c7ee12be_scopeDeadCode> _self_, jule::Ptr<_1e5d398be_WhileIter> _11738_it) {
	_1c7ee2105_optimizeExprModel(_self_, &((*(_11738_it))._field_Expr));
	if (((*_11738_it.alloc)._field_Next != nullptr)) {
		_1c7ee4008_optimizeStmt(_self_, (*_11738_it.alloc)._field_Next);
	};
	_1c7ee1d4c_optimizeBodyChild(_self_, &((*_11738_it.alloc)._field_Scope));
}



inline void _1c7ee317d_optimizeInfIter(jule::Ptr<_1c7ee12be_scopeDeadCode> _self_, jule::Ptr<_1e5d39418_InfIter> _12536_it) {
	_1c7ee1d4c_optimizeBodyChild(_self_, &((*(_12536_it))._field_Scope));
}



inline void _1c7ee3436_optimizeConditional(jule::Ptr<_1c7ee12be_scopeDeadCode> _self_, jule::Ptr<_1e5d3911b_Conditional> _12940_c) {
	{
		auto expr = &((*(_12940_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbeed382:;
		if (it != expr_end) {
			jule::Ptr<_1e5d38901_If> _13015_case = *it;
			{
				if ((_13015_case != nullptr)) {
					_1c7ee2105_optimizeExprModel(_self_, &((*_13015_case.alloc)._field_Expr));
					_1c7ee1d4c_optimizeBodyChild(_self_, &((*_13015_case.alloc)._field_Scope));
				};
			}
			_iter_next_1cbeed382:;
			++it;
			goto _iter_begin_1cbeed382;
		}
		_iter_end_1cbeed382:;
	};
	if (((*_12940_c.alloc)._field_Default != nullptr)) {
		if (((*_12940_c.alloc)._field_Elifs.len() == 0LL)) {
			_1c7ee17db_optimizeChild(_self_, &((*(*(_12940_c))._field_Default.alloc)._field_Scope));
		} else {
			_1c7ee1d4c_optimizeBodyChild(_self_, &((*(*(_12940_c))._field_Default.alloc)._field_Scope));
		};
	};
}



inline void _1c7ee36de_optimizeMatch(jule::Ptr<_1c7ee12be_scopeDeadCode> _self_, jule::Ptr<_1e5d3cc13_Match> _14734_m) {
	{
		auto expr = &((*(_14734_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc001918:;
		if (it != expr_end) {
			jule::Ptr<_1e5d3d73b_Case> _14815_case = *it;
			{
				{
					auto expr = &((*(_14815_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cc002397:;
					if (it != expr_end) {
						jule::Ptr<_1e5e08c13_Data> _14916_expr = *it;
						{
							_1c7ee2105_optimizeExprModel(_self_, &((*(_14916_expr))._field_Model));
						}
						_iter_next_1cc002397:;
						++it;
						goto _iter_begin_1cc002397;
					}
					_iter_end_1cc002397:;
				};
				_1c7ee1d4c_optimizeBodyChild(_self_, &((*_14815_case.alloc)._field_Scope));
			}
			_iter_next_1cc001918:;
			++it;
			goto _iter_begin_1cc001918;
		}
		_iter_end_1cc001918:;
	};
	if (((*_14734_m.alloc)._field_Default != nullptr)) {
		if (((*_14734_m.alloc)._field_Cases.len() == 0LL)) {
			_1c7ee17db_optimizeChild(_self_, &((*(*(_14734_m))._field_Default.alloc)._field_Scope));
		} else {
			_1c7ee1d4c_optimizeBodyChild(_self_, &((*(*(_14734_m))._field_Default.alloc)._field_Scope));
		};
	};
}



inline void _1c7ee3997_optimizeAssign(jule::Ptr<_1c7ee12be_scopeDeadCode> _self_, jule::Ptr<_1e5d3c020_Assign> _16535_assign) {
	_1c7ee2105_optimizeExprModel(_self_, &((*((*(_16535_assign))._field_Left))._field_Model));
	_1c7ee2105_optimizeExprModel(_self_, &((*((*_16535_assign.alloc)._field_Right))._field_Model));
}



inline void _1c7ee3c50_optimizeMultiAssign(jule::Ptr<_1c7ee12be_scopeDeadCode> _self_, jule::Ptr<_1e5d3c4c6_MultiAssign> _17040_assign) {
	{
		auto expr = &((*(_17040_assign))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc006764:;
		if (it != expr_end) {
			jule::Ptr<_1e5e08c13_Data> _17115_l = *it;
			{
				if ((_17115_l != nullptr)) {
					_1c7ee2105_optimizeExprModel(_self_, &((*_17115_l.alloc)._field_Model));
				};
			}
			_iter_next_1cc006764:;
			++it;
			goto _iter_begin_1cc006764;
		}
		_iter_end_1cc006764:;
	};
	_1c7ee2105_optimizeExprModel(_self_, &((*_17040_assign.alloc)._field_Right));
}



inline void _1c7ee4008_optimizeStmt(jule::Ptr<_1c7ee12be_scopeDeadCode> _self_, jule::Any _17933_st) {
	{
		auto &_match_expr{ _17933_st };
		
		if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1cc008414:;
			{
				jule::Ptr<_1e5d384d3_Scope> _1828_scope = _17933_st.unsafe_cast_ptr<_1e5d384d3_Scope>();;
				if ((*(_1828_scope))._field_Deferred) {
					_1c7ee4503_eliminateDeadCodeOfScope(_1828_scope);
				} else {
					_1c7ee17db_optimizeChild(_self_, &(_1828_scope));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1cc00817d:;
			{
				_1c7ee2b1c_optimizeRangeIter(_self_, _17933_st.cast_ptr<_1e5d3a31a_RangeIter>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1cc00848b:;
			{
				_1c7ee2dc5_optimizeWhileIter(_self_, _17933_st.cast_ptr<_1e5d398be_WhileIter>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1cc008513:;
			{
				_1c7ee317d_optimizeInfIter(_self_, _17933_st.cast_ptr<_1e5d39418_InfIter>(&__jule_any_type42));
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1cc00858a:;
			{
				_1c7ee3436_optimizeConditional(_self_, _17933_st.cast_ptr<_1e5d3911b_Conditional>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_1cc008612:;
			{
				_1c7ee36de_optimizeMatch(_self_, _17933_st.cast_ptr<_1e5d3cc13_Match>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1cc008689:;
			{
				_1c7ee3997_optimizeAssign(_self_, _17933_st.cast_ptr<_1e5d3c020_Assign>(&__jule_any_type50));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1cc008711:;
			{
				_1c7ee3c50_optimizeMultiAssign(_self_, _17933_st.cast_ptr<_1e5d3c4c6_MultiAssign>(&__jule_any_type53));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1cc008788:;
			{
				jule::Ptr<_1e5e08c13_Data> _2038_d = _17933_st.unsafe_cast_ptr<_1e5e08c13_Data>();;
				if ((*(_self_))._field_except) {
					goto _match_end_1cc0082b0;
				};
				{
					auto &_match_expr{ (*(_2038_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type30 || _match_expr.type == &__jule_any_type36) {
						_case_begin_1cc00deec:;
						{
							_1c7ee2303_eliminateFollowed(_self_);
						}
					}
					else {
						_case_begin_1cc00e66d:;
						{
							_1c7ee2105_optimizeExprModel(_self_, &((*(_2038_d))._field_Model));
						}
					}
					_match_end_1cc00e607:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type57) {
			_case_begin_1cc008810:;
			{
				_1c7ee2303_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1cc008887:;
			{
				_1c7ee25ab_pushGoto(_self_, _17933_st.cast_ptr<_1e5d3b690_GotoSt>(&__jule_any_type48));
				_1c7ee2303_eliminateFollowed(_self_);
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1cc00890e:;
			{
				_1c7ee2864_pushLabel(_self_, _17933_st.cast_ptr<_1e5d3b030_Label>(&__jule_any_type28));
			}
		}
		_match_end_1cc0082b0:;
	};
}



inline void _1c7ee4206_optimizeStmts(jule::Ptr<_1c7ee12be_scopeDeadCode> _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*_self_.alloc)._field_i < (*((*_self_.alloc)._field_s))._field_Stmts.len()); ((*_self_.alloc)._field_i)++) {
		{
			_1c7ee4008_optimizeStmt(_self_, (*(*(_self_))._field_s.alloc)._field_Stmts[(*_self_.alloc)._field_i]);
		}
	_iter_next_1cc01230d:;
	}
	_iter_end_1cc01230d:;;
}








inline jule::Bool _1c7ee5966_exprDeadCode_eq(_1c7ee5966_exprDeadCode *_self_, _1c7ee5966_exprDeadCode _other_) {
	return 
		(_self_->_field_s == _other_._field_s);
}

inline _1c7ee5966_exprDeadCode static__1c7ee5d2e_new(jule::Ptr<_1c7ee12be_scopeDeadCode>* _1821_s) {
	return _1c7ee5966_exprDeadCode{._field_s=(*(_1821_s))};;
}



inline void _1c7ee60d7_optimize(_1c7ee5966_exprDeadCode* _self_, jule::Any* _2425_model) {
	jule::Ptr<_1e6a07a0e_ExprInspector> _257_inspector = static__1e6a07da5_New();;
	_1e6a08779_Inspect(_257_inspector.ptr(), _2425_model, jule::__new_closure<void,jule::Any*>((void*)__jule_anon_1cc014e59, jule::Ptr<__jule_anon_1cc014e59_ctx>::make(__jule_anon_1cc014e59_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1cc014e59_ctx_handler));
}








inline jule::Bool _1e6036a22_ExceptionalForwardingExprModel_eq(_1e6036a22_ExceptionalForwardingExprModel *_self_, _1e6036a22_ExceptionalForwardingExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1e6036da7_SwapExprModel_eq(_1e6036da7_SwapExprModel *_self_, _1e6036da7_SwapExprModel _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right);
}






inline jule::Bool _1e6037281_EmptyCompareExprModel_eq(_1e6037281_EmptyCompareExprModel *_self_, _1e6037281_EmptyCompareExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Neg == _self_->_field_Neg);
}






inline jule::Bool _1e6037605_RefExprModel_eq(_1e6037605_RefExprModel *_self_, _1e6037605_RefExprModel _other_) {
	return 
		(_self_->_field_Var == _other_._field_Var);
}






inline jule::Bool _1e6037a78_StrCompExprModel_eq(_1e6037a78_StrCompExprModel *_self_, _1e6037a78_StrCompExprModel _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_NotEq == _self_->_field_NotEq);
}






inline jule::Bool _1e603810b_MutSlicingExprModel_eq(_1e603810b_MutSlicingExprModel *_self_, _1e603810b_MutSlicingExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Left == _self_->_field_Left) &&
		(_self_->_field_Right == _self_->_field_Right);
}






inline jule::Bool _1e6038408_UnsafeBinaryExprModel_eq(_1e6038408_UnsafeBinaryExprModel *_self_, _1e6038408_UnsafeBinaryExprModel _other_) {
	return 
		(_self_->_field_Node == _other_._field_Node);
}






inline jule::Bool _1e603878d_UnsafeIndexingExprModel_eq(_1e603878d_UnsafeIndexingExprModel *_self_, _1e603878d_UnsafeIndexingExprModel _other_) {
	return 
		(_self_->_field_Node == _other_._field_Node);
}






inline jule::Bool _1e6038b67_PushToSliceExprModel_eq(_1e6038b67_PushToSliceExprModel *_self_, _1e6038b67_PushToSliceExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Elems == _self_->_field_Elems);
}






inline jule::Bool _1e6039041_AppendToSliceExprModel_eq(_1e6039041_AppendToSliceExprModel *_self_, _1e6039041_AppendToSliceExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Slice == _self_->_field_Slice);
}






inline jule::Bool _1e603941a_StrRuneIter_eq(_1e603941a_StrRuneIter *_self_, _1e603941a_StrRuneIter _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Base == _self_->_field_Base);
}






inline jule::Bool _1e6039717_UnsafeDerefExprModel_eq(_1e6039717_UnsafeDerefExprModel *_self_, _1e6039717_UnsafeDerefExprModel _other_) {
	return 
		(_self_->_field_Base == _other_._field_Base);
}






inline jule::Bool _1e6039a14_UnsafeCastingExprModel_eq(_1e6039a14_UnsafeCastingExprModel *_self_, _1e6039a14_UnsafeCastingExprModel _other_) {
	return 
		(_self_->_field_Base == _other_._field_Base);
}






inline jule::Bool _1e603a6e6_nilVar_eq(_1e603a6e6_nilVar *_self_, _1e603a6e6_nilVar _other_) {
	return 
		(_self_->_field_var == _other_._field_var) &&
		(_self_->_field_safe == _self_->_field_safe);
}





inline void _1e603aecc_pushVar(_1e603aa37_nils* _self_, jule::Uintptr _2923_var, jule::Bool _2937_safe) {
	if (((!(_1e6a2570d_Access)) || (_2923_var == 0LLU))) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc06b7eb:;
		if (it != expr_end) {
			_1e603a6e6_nilVar _3415_v = *it;
			{
				if ((_3415_v._field_var == _2923_var)) {
					_3415_v._field_safe=_2937_safe;
					return;;
				};
			}
			_iter_next_1cc06b7eb:;
			++it;
			goto _iter_begin_1cc06b7eb;
		}
		_iter_end_1cc06b7eb:;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc06c698:;
		if (it != expr_end) {
			_1e603a6e6_nilVar _4115_v = *it;
			{
				if ((_4115_v._field_var == 0LLU)) {
					_4115_v._field_var=_2923_var;
					_4115_v._field_safe=_2937_safe;
					return;;
				};
			}
			_iter_next_1cc06c698:;
			++it;
			goto _iter_begin_1cc06c698;
		}
		_iter_end_1cc06c698:;
	};
	{ jule::Slice<_1e603a6e6_nilVar> &__jule_push_dest = (*(_self_))._field_vars; __jule_push_dest.push(_1e603a6e6_nilVar{._field_var=_2923_var, ._field_safe=_2937_safe}); };
}



inline jule::Bool _1e603b31d_removeVar(_1e603aa37_nils* _self_, jule::Uintptr _5225_var) {
	if ((_5225_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1cc06e6bc:;
			if (it != expr_end) {
				_1e603a6e6_nilVar _5416_v = *it;
				{
					if ((_5416_v._field_var == _5225_var)) {
						_5416_v._field_var=0LLU;
						_5416_v._field_safe=false;
						return true;;
					};
				}
				_iter_next_1cc06e6bc:;
				++it;
				goto _iter_begin_1cc06e6bc;
			}
			_iter_end_1cc06e6bc:;
		};
	};
	return false;;
}



inline jule::Bool _1e603b65e_isSafe(_1e603aa37_nils* _self_, jule::Uintptr _6622_var) {
	if ((_6622_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1cc070d61:;
			if (it != expr_end) {
				_1e603a6e6_nilVar _6811_v = *it;
				{
					if ((_6811_v._field_var == _6622_var)) {
						return _6811_v._field_safe;;
					};
				}
				_iter_next_1cc070d61:;
				++it;
				goto _iter_begin_1cc070d61;
			}
			_iter_end_1cc070d61:;
		};
	};
	return false;;
}








inline jule::Bool _1e6a10709_scopeOptimizer_eq(_1e6a10709_scopeOptimizer *_self_, _1e6a10709_scopeOptimizer _other_) {
	return 
		(_self_->_field_parent == _other_._field_parent) &&
		(_self_->_field_i == _self_->_field_i) &&
		(_self_->_field_scope == _self_->_field_scope) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Ptr<_1e6a10709_scopeOptimizer> static__1e6a10cae_new(jule::Ptr<_1e5d384d3_Scope> _5120_scope) {
	jule::Ptr<_1e6a10709_scopeOptimizer> _527_sc = jule::new_ptr<_1e6a10709_scopeOptimizer>(_1e6a10709_scopeOptimizer{._field_parent=jule::Ptr<_1e6a10709_scopeOptimizer>(nullptr), ._field_i=0, ._field_scope=_5120_scope, ._field_data=jule::new_ptr<_1e6a2051b_data>(_1e6a2051b_data{._field_boundary=jule::new_ptr<_1e6a21e13_boundary>(_1e6a21e13_boundary{._field_vars=jule::Slice<_1e6a21ac2_boundaryVar>(nullptr)}), ._field_nils=jule::new_ptr<_1e603aa37_nils>(_1e603aa37_nils{._field_vars=jule::Slice<_1e603a6e6_nilVar>(nullptr)}), ._field_dynamic=jule::new_ptr<_1e6a1c88c_dynamic>(_1e6a1c88c_dynamic{._field_vars=jule::Slice<_1e6a1c54b_dynamicVar>(nullptr)})})});;
	return _527_sc;;
}



inline void _1e6a11067_setCurrentStmt(jule::Ptr<_1e6a10709_scopeOptimizer> _self_, jule::Any _6335_stmt) {
	(*((*(_self_))._field_scope))._field_Stmts[(*_self_.alloc)._field_i]=(*(((jule::Any*)((&(_6335_stmt))))));
}



inline void _1e6a11265_removeCurrent(jule::Ptr<_1e6a10709_scopeOptimizer> _self_) {
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts.slice(0LL, (*_self_.alloc)._field_i),(*(*(_self_))._field_scope.alloc)._field_Stmts.slice(((*_self_.alloc)._field_i + 1LL)));
}



inline jule::Bool _1e6a114eb_isLastStmt(jule::Ptr<_1e6a10709_scopeOptimizer> _self_) {
	jule::Ptr<_1e6a10709_scopeOptimizer> _737_r = _self_;;
	for (; (_737_r != nullptr); _737_r=(*_737_r.alloc)._field_parent) {
		{
			if ((((*((*_737_r.alloc)._field_scope))._field_Stmts.len() - (*_737_r.alloc)._field_i) != 1LL)) {
				return false;;
			};
		}
	_iter_next_1cc07d027:;
	}
	_iter_end_1cc07d027:;;
	return true;;
}



inline jule::Bool _1e6a11782_isIter(jule::Ptr<_1e6a10709_scopeOptimizer> _self_) {
	jule::Ptr<_1e6a10709_scopeOptimizer> _837_r = (*(_self_))._field_parent;;
	for (; (_837_r != nullptr); _837_r=(*_837_r.alloc)._field_parent) {
		{
			{
				auto &_match_expr{ (*((*(_837_r))._field_scope))._field_Stmts[(*(_837_r))._field_i] };
				
				if (_match_expr.type == &__jule_any_type46 || _match_expr.type == &__jule_any_type44 || _match_expr.type == &__jule_any_type42) {
					_case_begin_1cc080876:;
					{
						return true;;
					}
				}
				_match_end_1cc0807cc:;
			};
		}
	_iter_next_1cc07e457:;
	}
	_iter_end_1cc07e457:;;
	return false;;
}



inline void _1e6a11a3a_optimizeData(jule::Ptr<_1e6a10709_scopeOptimizer> _self_, jule::Ptr<_1e5e08c13_Data> _9533_d) {
	{
		auto &_match_expr{ (*(_9533_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1cc081a42:;
			{
				jule::Ptr<_1e5cd4d31_FnCallExprModel> _988_m = (*(_9533_d))._field_Model.unsafe_cast_ptr<_1e5cd4d31_FnCallExprModel>();;
				if (_22586c4e3_Production) {
					if (((!(_1e5ce48ce_IsBuiltin((*(_988_m))._field_Func.ptr()))) && _1e6a0a924_IsStdPackage((*((*((*((*(*(_988_m))._field_Func.alloc)._field_Decl))._field_Token))._field_File))._field_Path, jule::Str::lit("debug", 5)))) {
						_1e6a11067_setCurrentStmt(_self_, nullptr);
						return;;
					};
				};
				static__1e6a17920_optimizeData(&((*(_9533_d))._field_Model), &((*_self_.alloc)._field_data));
				if (((((((_1e6a26b82_Exceptional && (*(*((*(_988_m))._field_Func))._field_Decl.alloc)._field_Exceptional) && ((*_988_m.alloc)._field_Except != nullptr)) && ((*(*(_988_m))._field_Except.alloc)._field_Stmts.len() == 1LL)) && _1e6a0957c_IsForwarded(&((*_988_m.alloc)._field_Except))) && _1e6a114eb_isLastStmt(_self_)) && (!(_1e6a11782_isIter(_self_))))) {
					_1e6a11067_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1e6036a22_ExceptionalForwardingExprModel>(_1e6036a22_ExceptionalForwardingExprModel{._field_Expr=_988_m}), &__jule_any_type121));
				};
				return;;
			}
		}
		_match_end_1cc0819ba:;
	};
	static__1e6a17920_optimizeData(&((*_9533_d.alloc)._field_Model), &((*_self_.alloc)._field_data));
}



inline void _1e6a11ce3_optimizeVar(jule::Ptr<_1e6a10709_scopeOptimizer> _self_, jule::Ptr<_1e5da0bcc_Var> _12132_v) {
	if (((*(_12132_v))._field_Value != nullptr)) {
		if (((((*((*(_self_))._field_data))._field_nils != nullptr) && _1e603c198_isNilValidType((*((*_12132_v.alloc)._field_Kind))._field_Kind)) && _1e603bdce_isGuaranteedNonNilExpr(&((*(*(_self_))._field_data.alloc)._field_nils), (*((*(*(_12132_v))._field_Value.alloc)._field_Data))._field_Model))) {
			;
			_1e603aecc_pushVar((*((*(_self_))._field_data))._field_nils, _1e603c4d9_getNilVar(jule::Any(_12132_v, &__jule_any_type8)), true);
		};
		if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
			jule::Ptr<_1e5e417ea_TypeKind> _1309_kind = _1e6a1e163_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*(*(_12132_v))._field_Kind.alloc)._field_Kind, (*(*((*(_12132_v))._field_Value))._field_Data.alloc)._field_Model);;
			if ((_1309_kind != nullptr)) {
				if (_1e6a1dc34_isDynamicValidType((*(*(_12132_v))._field_Kind.alloc)._field_Kind)) {
					_1e6a1cd32_pushVar((*((*(_self_))._field_data))._field_dynamic, _1e6a1e4a4_getDynamicVar(jule::Any(_12132_v, &__jule_any_type8)), _1309_kind);
				};
			};
		};
		static__1e6a17920_optimizeData(&((*(*((*(_12132_v))._field_Value))._field_Data.alloc)._field_Model), &((*_self_.alloc)._field_data));
	};
}



inline void _1e6a1209b_optimizeConditional(jule::Ptr<_1e6a10709_scopeOptimizer> _self_, jule::Ptr<_1e5d3911b_Conditional> _14240_c) {
	_1e6a20021_dataCheckpoint _1437_checkpoint = _1e6a208c3_getCheckpoint((*(_self_))._field_data.ptr());;
	{
		auto expr = &((*_14240_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc092b63:;
		if (it != expr_end) {
			jule::Ptr<_1e5d38901_If> _14415_elif = *it;
			{
				static__1e6a17920_optimizeData(&((*(_14415_elif))._field_Expr), &((*_self_.alloc)._field_data));
				_1e6a14c2a_optimizeChild(_self_, (*_14415_elif.alloc)._field_Scope);
				if ((((*(_14240_c))._field_Elifs.len() > 1LL) || ((*_14240_c.alloc)._field_Default != nullptr))) {
					_1e6a20b7b_loadCheckpoint((*(_self_))._field_data, &(_1437_checkpoint));
				};
			}
			_iter_next_1cc092b63:;
			++it;
			goto _iter_begin_1cc092b63;
		}
		_iter_end_1cc092b63:;
	};
	if (((*_14240_c.alloc)._field_Default != nullptr)) {
		_1e6a14c2a_optimizeChild(_self_, (*(*(_14240_c))._field_Default.alloc)._field_Scope);
		_1e6a20b7b_loadCheckpoint((*(_self_))._field_data, &(_1437_checkpoint));
	};
	if ((!(_1e6a26137_Cond))) {
		return;;
	};
	jule::Bool _1607_constCase = false;;
	{
		auto expr = &((*_14240_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc0967e3:;
		if (it != expr_end) {
			jule::I64 _1638_i = it - expr->begin();
			jule::Ptr<_1e5d38901_If> _16315_elif = *it;
			{
				if ((!(_1e6a152ad_isConstantValidConditionalCase(&(_16315_elif))))) {
					goto _iter_next_1cc0967e3;
				};
				_1607_constCase=true;
				((*(_14240_c))._field_Elifs).mut_slice(0LL, _1638_i);;
				(*_14240_c.alloc)._field_Default=jule::new_ptr<_1e5d38bed_Else>(_1e5d38bed_Else{._field_Scope=(*(_16315_elif))._field_Scope});
				goto _iter_end_1cc0967e3;
			}
			_iter_next_1cc0967e3:;
			++it;
			_1638_i++;
			goto _iter_begin_1cc0967e3;
		}
		_iter_end_1cc0967e3:;
	};
	if (((*_14240_c.alloc)._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1e5d38901_If>* _1807_i = (&((*(_14240_c))._field_Elifs[0LL]));;
	jule::Ptr<_1e5d38901_If>* _1813_end = (&((*_14240_c.alloc)._field_Elifs[((*_14240_c.alloc)._field_Elifs.len() - 1LL)]));;
	for (; (_1807_i <= _1813_end); (_1807_i)++) {
		{
			{
				if (_1e6a15bc6_isUnreachableConditionalCase(&((*(_1807_i))))) {
					(*(_1807_i))=nullptr;
				};
			};
		}
	_iter_next_1cc099dbd:;
	}
	_iter_end_1cc099dbd:;;
	if (((*_14240_c.alloc)._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_1607_constCase))) {
		return;;
	};
	jule::I64 _1997_only = -1LL;;
	{
		auto expr = &((*_14240_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc09b7c6:;
		if (it != expr_end) {
			jule::I64 _2007_j = it - expr->begin();
			jule::Ptr<_1e5d38901_If> _20010_elif = *it;
			{
				if ((_20010_elif != nullptr)) {
					if ((_1997_only != -1LL)) {
						return;;
					};
					_1997_only=_2007_j;
				};
			}
			_iter_next_1cc09b7c6:;
			++it;
			_2007_j++;
			goto _iter_begin_1cc09b7c6;
		}
		_iter_end_1cc09b7c6:;
	};
	if ((_1997_only != -1LL)) {
		_1e6a11067_setCurrentStmt(_self_, jule::Any((*((*_14240_c.alloc)._field_Elifs[_1997_only]))._field_Scope, &__jule_any_type29));
	};
}



inline void _1e6a124b9_buildDefaultConstantTrueCase(jule::Ptr<_1e6a10709_scopeOptimizer> _self_, jule::Ptr<_1e5d3d73b_Case> _21649_case, jule::I64* _21667_i, jule::Ptr<_1e5d3cc13_Match>* _21680_m) {
	(*(_21649_case))._field_Exprs=nullptr;
	jule::I64 _2183_start = (*(_21667_i));;
	_julec_label_1cc09e6ca:;
	for (;;) {
		{
			if (((*((*_21649_case.alloc)._field_Scope))._field_Stmts.len() == 0LL)) {
				goto _iter_end_1cc09e675;
			};
			jule::Any *_2249_stmt = &((*(*(_21649_case))._field_Scope.alloc)._field_Stmts[((*(*(_21649_case))._field_Scope.alloc)._field_Stmts.len() - 1LL)]);;
			{
				auto &_match_expr{ (*(_2249_stmt)) };
				
				if (_match_expr.type == &__jule_any_type55) {
					_case_begin_1cc0a15de:;
					{
						((*(_21667_i)))++;
						if (((*(_21667_i)) >= (*((*(_21680_m))))._field_Cases.len())) {
							(*(_2249_stmt))=jule::Any((*((*((*(_21680_m))))._field_Default))._field_Scope, &__jule_any_type29);
							goto _iter_end_1cc09e675;
						};
						_21649_case=(*((*(_21680_m))))._field_Cases[(*(_21667_i))];
						(*(_2249_stmt))=jule::Any((*_21649_case.alloc)._field_Scope, &__jule_any_type29);
					}
				}
				else {
					_case_begin_1cc0a16bb:;
					{
						goto _iter_end_1cc09e675;
					}
				}
				_match_end_1cc0a1578:;
			};
		}
	_iter_next_1cc09e675:;
	}
	_iter_end_1cc09e675:;;
	(*((*(_21680_m))))._field_Default=(*((*(_21680_m))))._field_Cases[_2183_start];
	((*((*(_21680_m))))._field_Cases).mut_slice(0LL, _2183_start);;
}



inline void _1e6a12772_optimizeMatch(jule::Ptr<_1e6a10709_scopeOptimizer> _self_, jule::Ptr<_1e5d3cc13_Match> _24234_m) {
	jule::Uintptr _2437_var = 0LLU;;
	if ((_1e6a271e3_Dynamic && (*(_24234_m))._field_TypeMatch)) {
		_2437_var=_1e6a1e4a4_getDynamicVar((*((*_24234_m.alloc)._field_Expr))._field_Model);
	};
	_1e6a20021_dataCheckpoint _2477_checkpoint = _1e6a208c3_getCheckpoint((*(_self_))._field_data.ptr());;
	{
		auto expr = &((*_24234_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc0a555a:;
		if (it != expr_end) {
			jule::Ptr<_1e5d3d73b_Case> _24815_case = *it;
			{
				{
					auto expr = &((*(_24815_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cc0a5e51:;
					if (it != expr_end) {
						jule::Ptr<_1e5e08c13_Data> _24916_expr = *it;
						{
							static__1e6a17920_optimizeData(&((*(_24916_expr))._field_Model), &((*_self_.alloc)._field_data));
						}
						_iter_next_1cc0a5e51:;
						++it;
						goto _iter_begin_1cc0a5e51;
					}
					_iter_end_1cc0a5e51:;
				};
				if ((((*_24815_case.alloc)._field_Exprs.len() == 1LL) && ((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr))) {
					jule::Ptr<_1e5e417ea_TypeKind> _2549_kind = _1e6a1e163_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*((*(_24815_case))._field_Exprs[0LL]))._field_Kind, nullptr);;
					if ((_2549_kind != nullptr)) {
						_1e6a1cd32_pushVar((*((*(_self_))._field_data))._field_dynamic, _2437_var, _2549_kind);
					} else {
						_1e6a1d173_removeVar((*((*(_self_))._field_data))._field_dynamic, _2437_var);
					};
				};
				_1e6a14c2a_optimizeChild(_self_, (*_24815_case.alloc)._field_Scope);
				if ((((*_24234_m.alloc)._field_Cases.len() > 1LL) || ((*_24234_m.alloc)._field_Default != nullptr))) {
					_1e6a20b7b_loadCheckpoint((*(_self_))._field_data, &(_2477_checkpoint));
				};
			}
			_iter_next_1cc0a555a:;
			++it;
			goto _iter_begin_1cc0a555a;
		}
		_iter_end_1cc0a555a:;
	};
	if (((*_24234_m.alloc)._field_Default != nullptr)) {
		_1e6a14c2a_optimizeChild(_self_, (*(*(_24234_m))._field_Default.alloc)._field_Scope);
		_1e6a20b7b_loadCheckpoint((*(_self_))._field_data, &(_2477_checkpoint));
	};
	if ((!(_1e6a26137_Cond))) {
		return;;
	};
	jule::Bool _2757_constCase = false;;
	{
		auto expr = &((*_24234_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc0ac919:;
		if (it != expr_end) {
			jule::I64 _27812_i = it - expr->begin();
			jule::Ptr<_1e5d3d73b_Case> _27819_case = *it;
			{
				if ((!(_1e6a15885_isConstantValidMatchCase(&(_27819_case))))) {
					goto _iter_next_1cc0ac919;
				};
				_2757_constCase=true;
				_1e6a124b9_buildDefaultConstantTrueCase(_self_, _27819_case, &(_27812_i), &(_24234_m));
				goto _iter_end_1cc0ac919;
			}
			_iter_next_1cc0ac919:;
			++it;
			_27812_i++;
			goto _iter_begin_1cc0ac919;
		}
		_iter_end_1cc0ac919:;
	};
	if (((*_24234_m.alloc)._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1e5d3d73b_Case>* _2927_i = (&((*(_24234_m))._field_Cases[0LL]));;
	jule::Ptr<_1e5d3d73b_Case>* _2933_end = (&((*_24234_m.alloc)._field_Cases[((*_24234_m.alloc)._field_Cases.len() - 1LL)]));;
	for (; (_2927_i <= _2933_end); (_2927_i)++) {
		{
			{
				if (_1e6a15e5c_isUnreachableMatchCase(&((*(_2927_i))))) {
					(*(_2927_i))=nullptr;
				};
			};
		}
	_iter_next_1cc0b04cc:;
	}
	_iter_end_1cc0b04cc:;;
	if ((!(_2757_constCase))) {
		return;;
	};
	jule::I64 _3077_only = -1LL;;
	{
		auto expr = &((*_24234_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc0b17a8:;
		if (it != expr_end) {
			jule::I64 _3087_j = it - expr->begin();
			jule::Ptr<_1e5d3d73b_Case> _30810_case = *it;
			{
				if ((_30810_case != nullptr)) {
					if ((_3077_only != -1LL)) {
						return;;
					};
					_3077_only=_3087_j;
				};
			}
			_iter_next_1cc0b17a8:;
			++it;
			_3087_j++;
			goto _iter_begin_1cc0b17a8;
		}
		_iter_end_1cc0b17a8:;
	};
	if ((_3077_only != -1LL)) {
		_1e6a11067_setCurrentStmt(_self_, jule::Any((*((*_24234_m.alloc)._field_Cases[_3077_only]))._field_Scope, &__jule_any_type29));
	};
}



inline void _1e6a12a2a_optimizeRangeIter(jule::Ptr<_1e6a10709_scopeOptimizer> _self_, jule::Ptr<_1e5d3a31a_RangeIter> _32438_it) {
	if ((((*((*(_self_))._field_data))._field_boundary != nullptr) && ((*(_32438_it))._field_KeyA != nullptr))) {
		_1e6a223a8_pushVar((*((*(_self_))._field_data))._field_boundary, _1e6a24344_getBoundaryVar((*((*_32438_it.alloc)._field_Expr))._field_Model), jule::Any((*_32438_it.alloc)._field_KeyA, &__jule_any_type8));
	};
	_1e6a14c2a_optimizeChild(_self_, (*_32438_it.alloc)._field_Scope);
	if (_1e6a26e3a_Iter) {
		{
			auto &_match_expr{ (*((*(_32438_it))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type95) {
				_case_begin_1cc0b64c2:;
				{
					jule::Ptr<_1e5cd447e_CastingExprModel> _3369_cem = (*((*(_32438_it))._field_Expr))._field_Model.unsafe_cast_ptr<_1e5cd447e_CastingExprModel>();;
					jule::Ptr<_1e5e49913_Prim> _3375_eprim = _1e5e43ea1_Prim((*(_3369_cem))._field_ExprKind.ptr());;
					if (((_3375_eprim == nullptr) || (!(_1e5e4cdcd_IsStr(_3375_eprim.ptr()))))) {
						goto _match_end_1cc0b644a;
					};
					jule::Ptr<_1e5e4de12_Slc> _3419_s = _1e5e45007_Slc((*_3369_cem.alloc)._field_Kind.ptr());;
					if ((_3419_s == nullptr)) {
						goto _match_end_1cc0b644a;
					};
					jule::Ptr<_1e5e49913_Prim> _3455_prim = _1e5e43ea1_Prim((*(_3419_s))._field_Elem.ptr());;
					if ((_3455_prim == nullptr)) {
						goto _match_end_1cc0b644a;
					};
					{
						
						if (_1e5e4b33d_IsU8(_3455_prim.ptr())) {
							_case_begin_1cc0b9daa:;
							{
								(*_32438_it.alloc)._field_Expr=(*_3369_cem.alloc)._field_Expr;
							}
						}
						else if (_1e5e4ad21_IsI32(_3455_prim.ptr())) {
							_case_begin_1cc0ba086:;
							{
								static__1e6a17920_optimizeData(&((*((*_3369_cem.alloc)._field_Expr))._field_Model), &((*_self_.alloc)._field_data));
								_1e6a11067_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1e603941a_StrRuneIter>(_1e603941a_StrRuneIter{._field_Expr=(*_3369_cem.alloc)._field_Expr, ._field_Base=_32438_it}), &__jule_any_type122));
								return;;
							}
						}
						_match_end_1cc0b9bbd:;
					};
				}
			}
			_match_end_1cc0b644a:;
		};
	};
	static__1e6a17920_optimizeData(&((*(*(_32438_it))._field_Expr.alloc)._field_Model), &((*_self_.alloc)._field_data));
}



inline void _1e6a12cd3_optimizeWhileIter(jule::Ptr<_1e6a10709_scopeOptimizer> _self_, jule::Ptr<_1e5d398be_WhileIter> _36938_it) {
	static__1e6a17920_optimizeData(&((*(_36938_it))._field_Expr), &((*(_self_))._field_data));
	_1e6a14972_optimizeStmt(_self_, (*_36938_it.alloc)._field_Next);
	_1e6a14c2a_optimizeChild(_self_, (*_36938_it.alloc)._field_Scope);
}



inline jule::Bool _1e6a13124_substr(jule::Ptr<_1e6a10709_scopeOptimizer> _self_, jule::Ptr<_1e5d3c020_Assign> _37527_a) {
	if (((*((*(_37527_a))._field_Op))._field_Id != static_cast<jule::U64>(71LLU))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_37527_a))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1cc0c2830:;
			{
				jule::Ptr<_1e5cd699d_SlicingExprModel> _3818_sem = (*((*(_37527_a))._field_Right))._field_Model.unsafe_cast_ptr<_1e5cd699d_SlicingExprModel>();;
				if (_1e6035dea_equalModels((*((*_37527_a.alloc)._field_Left))._field_Model, (*(_3818_sem))._field_Expr)) {
					_1e6a11067_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1e603810b_MutSlicingExprModel>(_1e603810b_MutSlicingExprModel{._field_Token=(*_3818_sem.alloc)._field_Token, ._field_Expr=(*_3818_sem.alloc)._field_Expr, ._field_Left=(*_3818_sem.alloc)._field_Left, ._field_Right=(*_3818_sem.alloc)._field_Right}), &__jule_any_type123));
					return true;;
				};
			}
		}
		_match_end_1cc0c27a8:;
	};
	return false;;
}



inline jule::Bool _1e6a13465_strAssign(jule::Ptr<_1e6a10709_scopeOptimizer> _self_, jule::Ptr<_1e5d3c020_Assign> _39530_a) {
	if ((!(_1e6a26379_Str))) {
		return false;;
	};
	jule::Ptr<_1e5e49913_Prim> _3993_lp = _1e5e43ea1_Prim((*((*(_39530_a))._field_Left))._field_Kind.ptr());;
	if (((_3993_lp == nullptr) || (!(_1e5e4cdcd_IsStr(_3993_lp.ptr()))))) {
		return false;;
	};
	return _1e6a13124_substr(_self_, _39530_a);;
}



inline jule::Bool _1e6a137a6_sliceAssign(jule::Ptr<_1e6a10709_scopeOptimizer> _self_, jule::Ptr<_1e5d3c020_Assign> _40632_a) {
	if (((!(_1e6a26621_Slice)) || (_1e5e45007_Slc((*((*(_40632_a))._field_Left))._field_Kind.ptr()) == nullptr))) {
		return false;;
	};
	return _1e6a13124_substr(_self_, _40632_a);;
}



inline void _1e6a13a5e_optimizePostfix(jule::Ptr<_1e6a10709_scopeOptimizer> _self_, jule::Ptr<_1e5d3ba69_Postfix> _41436_postfix) {
	if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
		_1e6a239e7_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), (*(_41436_postfix))._field_Expr);
	};
	static__1e6a17920_optimizeData(&((*_41436_postfix.alloc)._field_Expr), &((*_self_.alloc)._field_data));
}



inline void _1e6a13d17_optimizeAssign(jule::Ptr<_1e6a10709_scopeOptimizer> _self_, jule::Ptr<_1e5d3c020_Assign> _42135_assign) {
	if ((((*((*(_42135_assign))._field_Op))._field_Id == static_cast<jule::U64>(71LLU)) && _1e6035dea_equalModels((*((*_42135_assign.alloc)._field_Left))._field_Model, (*((*_42135_assign.alloc)._field_Right))._field_Model))) {
		_1e6a11265_removeCurrent(_self_);
		((*_self_.alloc)._field_i)--;
		return;;
	};
	if (((*((*_self_.alloc)._field_data))._field_boundary != nullptr)) {
		if (_1e6a23cb1_isBoundaryRiskyType((*(*(_42135_assign))._field_Left.alloc)._field_Kind)) {
			_1e6a239e7_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), (*(*(_42135_assign))._field_Left.alloc)._field_Model);
		};
	};
	if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
		if (_1e603bdce_isGuaranteedNonNilExpr(&((*(*(_self_))._field_data.alloc)._field_nils), (*(*(_42135_assign))._field_Right.alloc)._field_Model)) {
			if (_1e603c198_isNilValidType((*(*(_42135_assign))._field_Left.alloc)._field_Kind)) {
				;
				_1e603aecc_pushVar((*((*(_self_))._field_data))._field_nils, _1e603c4d9_getNilVar((*(*(_42135_assign))._field_Left.alloc)._field_Model), true);
			};
		} else {
			_1e603ba16_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), (*(*(_42135_assign))._field_Left.alloc)._field_Model);
		};
	};
	if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
		jule::Ptr<_1e5e417ea_TypeKind> _4458_kind = _1e6a1e163_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*(*(_42135_assign))._field_Right.alloc)._field_Kind, (*(*(_42135_assign))._field_Right.alloc)._field_Model);;
		if ((_4458_kind != nullptr)) {
			if (_1e6a1dc34_isDynamicValidType((*(*(_42135_assign))._field_Left.alloc)._field_Kind)) {
				_1e6a1cd32_pushVar((*((*(_self_))._field_data))._field_dynamic, _1e6a1e4a4_getDynamicVar((*(*(_42135_assign))._field_Left.alloc)._field_Model), _4458_kind);
			};
		} else {
			_1e6a1d926_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*(*(_42135_assign))._field_Left.alloc)._field_Model);
		};
	};
	{
		
		if (_1e6a13465_strAssign(_self_, _42135_assign) || _1e6a137a6_sliceAssign(_self_, _42135_assign)) {
			_case_begin_1cc0d48db:;
			{
				return;;
			}
		}
		_match_end_1cc0d658b:;
	};
	static__1e6a17920_optimizeData(&((*(*(_42135_assign))._field_Left.alloc)._field_Model), &((*_self_.alloc)._field_data));
	static__1e6a17920_optimizeData(&((*(*(_42135_assign))._field_Right.alloc)._field_Model), &((*_self_.alloc)._field_data));
	{
		auto &_match_expr{ (*((*(_42135_assign))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(43LLU) || _match_expr == static_cast<jule::U64>(44LLU) || _match_expr == static_cast<jule::U64>(45LLU) || _match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1cc0da1a5:;
			{
				if (((!(_1e6a25455_Math)) || (_1e5e45524_Struct((*(*(_42135_assign))._field_Left.alloc)._field_Kind.ptr()) != nullptr))) {
					goto _match_end_1cc0da12d;
				};
				jule::U64 _4714_oldId;
				jule::Str _47111_oldKind;
				({
					jule::U64 ___jule_assign_arg = (*(*(_42135_assign))._field_Op.alloc)._field_Id;
					jule::Str _1___jule_assign_arg = (*(*(_42135_assign))._field_Op.alloc)._field_Kind;
					_4714_oldId = ___jule_assign_arg;
					_47111_oldKind = _1___jule_assign_arg;
				});
				{
					auto &_match_expr{ (*((*(_42135_assign))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(43LLU)) {
						_case_begin_1cc0dd42d:;
						{
							(*(*(_42135_assign))._field_Op.alloc)._field_Id=static_cast<jule::U64>(63LLU);
							(*(*(_42135_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("/", 1));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(44LLU)) {
						_case_begin_1cc0dd494:;
						{
							(*(*(_42135_assign))._field_Op.alloc)._field_Id=static_cast<jule::U64>(64LLU);
							(*(*(_42135_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("%", 1));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(45LLU)) {
						_case_begin_1cc0dd0a9:;
						{
							(*(*(_42135_assign))._field_Op.alloc)._field_Id=static_cast<jule::U64>(56LLU);
							(*(*(_42135_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("<<", 2));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(46LLU)) {
						_case_begin_1cc0dd131:;
						{
							(*(*(_42135_assign))._field_Op.alloc)._field_Id=static_cast<jule::U64>(57LLU);
							(*(*(_42135_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit(">>", 2));
						}
					}
					else {
						_case_begin_1cc0dcb36:;
						{
							__jule_panic_s(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/opt/scope.jule:486:5"));;
						}
					}
					_match_end_1cc0dce66:;
				};
				jule::Ptr<_1e5cd2d51_BinaryExprModel> _4888_b = jule::new_ptr<_1e5cd2d51_BinaryExprModel>(_1e5cd2d51_BinaryExprModel{._field_Left=(*_42135_assign.alloc)._field_Left, ._field_Right=(*_42135_assign.alloc)._field_Right, ._field_Op=(*_42135_assign.alloc)._field_Op});;
				jule::Any _4938_model = jule::Any(_4888_b, &__jule_any_type113);;
				static__1e6a17920_optimizeData(&(_4938_model), &((*_self_.alloc)._field_data));
				if ((!__jule_any_type113_compare(_4938_model, _4888_b))) {
					(*_42135_assign.alloc)._field_Right=jule::new_ptr<_1e5cd2856_OperandExprModel>((*(*(_42135_assign))._field_Right.alloc));
					(*(_4888_b))._field_Op=jule::new_ptr<_1e5c8eacc_Token>((*(*(_4888_b))._field_Op.alloc));
					(*(*(_42135_assign))._field_Op.alloc)._field_Id=static_cast<jule::U64>(71LLU);
					(*(*(_42135_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("=", 1));
					(*(*(_42135_assign))._field_Right.alloc)._field_Model=_4938_model;
					return;;
				};
				(*(*(_42135_assign))._field_Op.alloc)._field_Id=_4714_oldId;
				(*(*(_42135_assign))._field_Op.alloc)._field_Kind=_47111_oldKind;
				return;;
			}
		}
		_match_end_1cc0da12d:;
	};
	if (_1e6a25158_Append) {
		{
			auto &_match_expr{ (*((*(_42135_assign))._field_Right))._field_Model };
			
			if (_match_expr.type == &__jule_any_type33) {
				_case_begin_1cc0e7327:;
				{
					jule::Ptr<_1e5cd9d25_BuiltinAppendCallExprModel> _5139_m = (*(*(_42135_assign))._field_Right.alloc)._field_Model.cast_ptr<_1e5cd9d25_BuiltinAppendCallExprModel>(&__jule_any_type33);;
					if ((!(_1e6a1b759_areSameLvalueExprModel(&((*(*(_42135_assign))._field_Left.alloc)._field_Model), &((*(_5139_m))._field_Dest))))) {
						return;;
					};
					{
						auto &_match_expr{ (*(_5139_m))._field_Elements };
						
						if (_match_expr.type == &__jule_any_type79) {
							_case_begin_1cc0e9d63:;
							{
								_1e6a11067_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1e6038b67_PushToSliceExprModel>(_1e6038b67_PushToSliceExprModel{._field_Dest=(*_5139_m.alloc)._field_Dest, ._field_Elems=(*(_5139_m))._field_Elements.unsafe_cast_ptr<_1e5cd520a_SliceExprModel>()}), &__jule_any_type124));
							}
						}
						else {
							_case_begin_1cc0e8da6:;
							{
								_1e6a11067_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1e6039041_AppendToSliceExprModel>(_1e6039041_AppendToSliceExprModel{._field_Dest=(*(*(_42135_assign))._field_Left.alloc)._field_Model, ._field_Slice=(*_5139_m.alloc)._field_Elements}), &__jule_any_type125));
							}
						}
						_match_end_1cc0e8d40:;
					};
				}
			}
			_match_end_1cc0e72a0:;
		};
	};
}



inline jule::Bool _1e6a14158_tryOptimizeSwap(jule::Ptr<_1e6a10709_scopeOptimizer> _self_, jule::Ptr<_1e5d3c4c6_MultiAssign>* _53537_assign) {
	if (((((!(_1e6a268c9_Assign)) || ((*((*(_53537_assign))))._field_Left.len() != 2LL)) || ((*((*(_53537_assign))))._field_Left[0LL] == nullptr)) || ((*((*(_53537_assign))))._field_Left[1LL] == nullptr))) {
		return false;;
	};
	jule::Ptr<_1e5cd843e_TupleExprModel> _54011_tup;;
	{
		auto &_match_expr{ (*((*(_53537_assign))))._field_Right };
		
		if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1cc101a6d:;
			{
				_54011_tup=(*((*(_53537_assign))))._field_Right.unsafe_cast_ptr<_1e5cd843e_TupleExprModel>();
			}
		}
		_match_end_1cc1019e6:;
	};
	if (((_54011_tup == nullptr) || ((*(_54011_tup))._field_Datas.len() != 2LL))) {
		return false;;
	};
	if ((_1e6035dea_equalModels((*((*((*(_53537_assign))))._field_Left[0LL]))._field_Model, (*((*(_54011_tup))._field_Datas[0LL]))._field_Model) && _1e6035dea_equalModels((*((*((*(_53537_assign))))._field_Left[1LL]))._field_Model, (*((*(_54011_tup))._field_Datas[1LL]))._field_Model))) {
		_1e6a11265_removeCurrent(_self_);
		((*_self_.alloc)._field_i)--;
		return true;;
	};
	if (((!(_1e6035dea_equalModels((*((*((*(_53537_assign))))._field_Left[0LL]))._field_Model, (*((*(_54011_tup))._field_Datas[1LL]))._field_Model))) || (!(_1e6035dea_equalModels((*((*((*(_53537_assign))))._field_Left[1LL]))._field_Model, (*((*(_54011_tup))._field_Datas[0LL]))._field_Model))))) {
		return false;;
	};
	jule::Ptr<_1e6036da7_SwapExprModel> _5627_model = jule::new_ptr<_1e6036da7_SwapExprModel>(_1e6036da7_SwapExprModel{._field_Left=(*((*(_53537_assign))))._field_Left[0LL], ._field_Right=(*((*(_53537_assign))))._field_Left[1LL]});;
	static__1e6a17920_optimizeData(&((*((*(_5627_model))._field_Left))._field_Model), &((*_self_.alloc)._field_data));
	static__1e6a17920_optimizeData(&((*((*_5627_model.alloc)._field_Right))._field_Model), &((*_self_.alloc)._field_data));
	_1e6a11067_setCurrentStmt(_self_, jule::Any(_5627_model, &__jule_any_type126));
	return true;;
}



inline void _1e6a14411_optimizeMultiAssign(jule::Ptr<_1e6a10709_scopeOptimizer> _self_, jule::Ptr<_1e5d3c4c6_MultiAssign> _57240_assign) {
	if (_1e6a14158_tryOptimizeSwap(_self_, &(_57240_assign))) {
		return;;
	};
	jule::Ptr<_1e5cd843e_TupleExprModel> _5797_tup = static_cast<jule::Ptr<_1e5cd843e_TupleExprModel>>(nullptr);;
	{
		auto &_match_expr{ (*(_57240_assign))._field_Right };
		
		if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1cc10d01e:;
			{
				_5797_tup=(*(_57240_assign))._field_Right.unsafe_cast_ptr<_1e5cd843e_TupleExprModel>();
			}
		}
		_match_end_1cc10ce97:;
	};
	{
		auto expr = &((*(_57240_assign))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc10aea6:;
		if (it != expr_end) {
			jule::I64 _5848_i = it - expr->begin();
			jule::Ptr<_1e5e08c13_Data> _58415_l = *it;
			{
				if ((_58415_l != nullptr)) {
					if (((*((*_self_.alloc)._field_data))._field_boundary != nullptr)) {
						if (_1e6a23cb1_isBoundaryRiskyType((*_58415_l.alloc)._field_Kind)) {
							_1e6a239e7_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), (*_58415_l.alloc)._field_Model);
						};
					};
					if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
						if (((_5797_tup != nullptr) && _1e603bdce_isGuaranteedNonNilExpr(&((*(*(_self_))._field_data.alloc)._field_nils), (*((*_5797_tup.alloc)._field_Datas[_5848_i]))._field_Model))) {
							if (_1e603c198_isNilValidType((*_58415_l.alloc)._field_Kind)) {
								;
								_1e603aecc_pushVar((*((*(_self_))._field_data))._field_nils, _1e603c4d9_getNilVar((*_58415_l.alloc)._field_Model), true);
							};
						} else {
							_1e603ba16_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), (*_58415_l.alloc)._field_Model);
						};
					};
					if ((((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr) && (_5797_tup != nullptr))) {
						jule::Ptr<_1e5e417ea_TypeKind> _60210_kind = _1e6a1e163_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*((*_5797_tup.alloc)._field_Datas[_5848_i]))._field_Kind, (*((*(_5797_tup))._field_Datas[_5848_i]))._field_Model);;
						if ((_60210_kind != nullptr)) {
							if (_1e6a1dc34_isDynamicValidType((*_58415_l.alloc)._field_Kind)) {
								_1e6a1cd32_pushVar((*((*(_self_))._field_data))._field_dynamic, _1e6a1e4a4_getDynamicVar((*_58415_l.alloc)._field_Model), _60210_kind);
							};
						} else {
							_1e6a1d926_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*_58415_l.alloc)._field_Model);
						};
					};
					static__1e6a17920_optimizeData(&((*_58415_l.alloc)._field_Model), &((*_self_.alloc)._field_data));
				};
			}
			_iter_next_1cc10aea6:;
			++it;
			_5848_i++;
			goto _iter_begin_1cc10aea6;
		}
		_iter_end_1cc10aea6:;
	};
	static__1e6a17920_optimizeData(&((*_57240_assign.alloc)._field_Right), &((*_self_.alloc)._field_data));
}



inline void _1e6a146b9_optimizeRet(jule::Ptr<_1e6a10709_scopeOptimizer> _self_, jule::Ptr<_1e5d3e2ca_RetSt> _61832_r) {
	static__1e6a17920_optimizeData(&((*(_61832_r))._field_Expr), &((*(_self_))._field_data));
	if ((!(_1e6a26b82_Exceptional))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_61832_r))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1cc11a37d:;
			{
				goto _match_end_1cc11a438;
			}
		}
		else {
			_case_begin_1cc11a49e:;
			{
				return;;
			}
		}
		_match_end_1cc11a438:;
	};
	jule::Ptr<_1e5cd4d31_FnCallExprModel> _6327_fc = (*_61832_r.alloc)._field_Expr.cast_ptr<_1e5cd4d31_FnCallExprModel>(&__jule_any_type40);;
	if (((((!((*((*((*(_6327_fc))._field_Func))._field_Decl))._field_Exceptional)) || ((*_6327_fc.alloc)._field_Except == nullptr)) || ((*((*_6327_fc.alloc)._field_Except))._field_Stmts.len() != 1LL)) || (!(_1e6a0957c_IsForwarded(&((*_6327_fc.alloc)._field_Except)))))) {
		return;;
	};
	_1e6a11067_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1e6036a22_ExceptionalForwardingExprModel>(_1e6036a22_ExceptionalForwardingExprModel{._field_Expr=_6327_fc}), &__jule_any_type121));
}



inline void _1e6a14972_optimizeStmt(jule::Ptr<_1e6a10709_scopeOptimizer> _self_, jule::Any _64233_stmt) {
	{
		auto &_match_expr{ _64233_stmt };
		
		if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1cc11d8c0:;
			{
				_1e6a14c2a_optimizeChild(_self_, _64233_stmt.cast_ptr<_1e5d384d3_Scope>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1cc11d64a:;
			{
				_1e6a11a3a_optimizeData(_self_, _64233_stmt.cast_ptr<_1e5e08c13_Data>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1cc11d958:;
			{
				_1e6a11ce3_optimizeVar(_self_, _64233_stmt.cast_ptr<_1e5da0bcc_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1cc11da02:;
			{
				_1e6a1209b_optimizeConditional(_self_, _64233_stmt.cast_ptr<_1e5d3911b_Conditional>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1cc11da68:;
			{
				_1e6a12a2a_optimizeRangeIter(_self_, _64233_stmt.cast_ptr<_1e5d3a31a_RangeIter>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1cc11dace:;
			{
				_1e6a12cd3_optimizeWhileIter(_self_, _64233_stmt.cast_ptr<_1e5d398be_WhileIter>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1cc11db56:;
			{
				_1e6a14c2a_optimizeChild(_self_, (*(_64233_stmt.unsafe_cast_ptr<_1e5d39418_InfIter>()))._field_Scope);
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1cc11dbcd:;
			{
				_1e6a13d17_optimizeAssign(_self_, _64233_stmt.cast_ptr<_1e5d3c020_Assign>(&__jule_any_type50));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1cc11dc55:;
			{
				_1e6a14411_optimizeMultiAssign(_self_, _64233_stmt.cast_ptr<_1e5d3c4c6_MultiAssign>(&__jule_any_type53));
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_1cc11dccc:;
			{
				_1e6a12772_optimizeMatch(_self_, _64233_stmt.cast_ptr<_1e5d3cc13_Match>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type57) {
			_case_begin_1cc11dd54:;
			{
				_1e6a146b9_optimizeRet(_self_, _64233_stmt.cast_ptr<_1e5d3e2ca_RetSt>(&__jule_any_type57));
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1cc11ddcb:;
			{
				_1e6a13a5e_optimizePostfix(_self_, _64233_stmt.cast_ptr<_1e5d3ba69_Postfix>(&__jule_any_type49));
			}
		}
		_match_end_1cc11d76b:;
	};
}



inline void _1e6a14c2a_optimizeChild(jule::Ptr<_1e6a10709_scopeOptimizer> _self_, jule::Ptr<_1e5d384d3_Scope> _67134_child) {
	jule::Ptr<_1e6a10709_scopeOptimizer> _6727_so = static__1e6a10cae_new(_67134_child);;
	(*(_6727_so))._field_parent=_self_;
	(*_6727_so.alloc)._field_data=(*(_self_))._field_data;
	_1e6a14e28_optimize(_6727_so);
}



inline void _1e6a14e28_optimize(jule::Ptr<_1e6a10709_scopeOptimizer> _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*_self_.alloc)._field_i < (*((*_self_.alloc)._field_scope))._field_Stmts.len()); ((*_self_.alloc)._field_i)++) {
		{
			_1e6a14972_optimizeStmt(_self_, (*(*(_self_))._field_scope.alloc)._field_Stmts[(*_self_.alloc)._field_i]);
		}
	_iter_next_1cc126e06:;
	}
	_iter_end_1cc126e06:;;
}








inline jule::Bool _1e6a1715b_exprOptimizer_eq(_1e6a1715b_exprOptimizer *_self_, _1e6a1715b_exprOptimizer _other_) {
	return 
		(_self_->_field_model == _other_._field_model) &&
		(_self_->_field_data == _self_->_field_data) &&
		(_self_->_field_inspector == _self_->_field_inspector);
}

inline void static__1e6a17634_optimize(jule::Any* _3626_model) {
	static__1e6a17920_optimizeData(_3626_model, &(_1e6a1eb25_emptyData));
}



inline void static__1e6a17920_optimizeData(jule::Any* _4030_model, jule::Ptr<_1e6a2051b_data>* _4053_d) {
	if (_1c7ee66ae_exprEnabled) {
		jule::Ptr<_1e6a1715b_exprOptimizer> _438_exop = jule::new_ptr<_1e6a1715b_exprOptimizer>(_1e6a1715b_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)(_4030_model)), ._field_data=(*(_4053_d)), ._field_inspector=static__1e6a07da5_New()});;
		_1e6a1ae51_do(_438_exop.ptr());
	};
}



inline jule::Bool _1e6a17c61_selfCmpCond(_1e6a1715b_exprOptimizer* _self_, jule::Ptr<_1e5cd2d51_BinaryExprModel>* _5228_m) {
	if ((!(_1e6035dea_equalModels((*((*((*(_5228_m))))._field_Left))._field_Model, (*((*((*(_5228_m))))._field_Right))._field_Model)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_5228_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1cc13691b:;
			{
				(*((*(_self_))._field_model))=jule::Any(static__1e21a4ea2_NewBool(true), &__jule_any_type20);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1cc136d28:;
			{
				(*((*(_self_))._field_model))=jule::Any(static__1e21a4ea2_NewBool(false), &__jule_any_type20);
				return true;;
			}
		}
		else {
			_case_begin_1cc1357d8:;
			{
				return false;;
			}
		}
		_match_end_1cc136894:;
	};
}



inline jule::Bool _1e6a180a2_boolCond(_1e6a1715b_exprOptimizer* _self_, jule::Ptr<_1e5cd2d51_BinaryExprModel>* _7625_m) {
	jule::Ptr<_1e5e49913_Prim> _773_lp = _1e5e43ea1_Prim((*((*((*(_7625_m))))._field_Left))._field_Kind.ptr());;
	if (((_773_lp == nullptr) || (!(_1e5e4cb47_IsBool(_773_lp.ptr()))))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_7625_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1cc13b25b:;
			{
				std::swap((*((*(_7625_m))))._field_Left, (*((*(_7625_m))))._field_Right);
			}
		}
		else {
			_case_begin_1cc13a436:;
			{
				{
					auto &_match_expr{ (*((*((*(_7625_m))))._field_Right))._field_Model };
					
					if (_match_expr.type == &__jule_any_type20) {
						_case_begin_1cc139721:;
						{
							goto _match_end_1cc13ac61;
						}
					}
					else {
						_case_begin_1cc13acc7:;
						{
							return false;;
						}
					}
					_match_end_1cc13ac61:;
				};
			}
		}
		_match_end_1cc13a3c0:;
	};
	jule::Ptr<_1e21a449b_Const> _947_c = (*((*((*(_7625_m))))._field_Right))._field_Model.cast_ptr<_1e21a449b_Const>(&__jule_any_type20);;
	{
		auto &_match_expr{ (*((*((*(_7625_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1cc13cda6:;
			{
				if (_1e21a63c1_ReadBool(_947_c.ptr())) {
					(*((*(_self_))._field_model))=(*(*((*(_7625_m))))._field_Left.alloc)._field_Model;
				} else {
					_1e21a79aa_SetBool(_947_c.ptr(), false);
					(*((*(_self_))._field_model))=jule::Any(_947_c, &__jule_any_type20);
				};
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1cc13ce50:;
			{
				if (_1e21a63c1_ReadBool(_947_c.ptr())) {
					_1e21a79aa_SetBool(_947_c, true);
					(*((*(_self_))._field_model))=jule::Any(_947_c, &__jule_any_type20);
				} else {
					(*((*(_self_))._field_model))=(*(*((*(_7625_m))))._field_Left.alloc)._field_Model;
				};
				return true;;
			}
		}
		else {
			_case_begin_1cc13b02a:;
		}
		_match_end_1cc13cd1d:;
	};
	return false;;
}



inline jule::Bool _1e6a183e3_strCond(_1e6a1715b_exprOptimizer* _self_, jule::Ptr<_1e5cd2d51_BinaryExprModel> _12923_m) {
	jule::Ptr<_1e5e49913_Prim> _1303_lp = _1e5e43ea1_Prim((*((*(_12923_m))._field_Left))._field_Kind.ptr());;
	if (((_1303_lp == nullptr) || (!(_1e5e4cdcd_IsStr(_1303_lp.ptr()))))) {
		return false;;
	};
	if ((((*((*_12923_m.alloc)._field_Op))._field_Id != static_cast<jule::U64>(50LLU)) && ((*(*(_12923_m))._field_Op.alloc)._field_Id != static_cast<jule::U64>(51LLU)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_12923_m))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1cc144aa0:;
			{
				std::swap((*_12923_m.alloc)._field_Left, (*_12923_m.alloc)._field_Right);
			}
		}
		else {
			_case_begin_1cc143c7a:;
			{
				{
					auto &_match_expr{ (*((*(_12923_m))._field_Right))._field_Model };
					
					if (_match_expr.type == &__jule_any_type20) {
						_case_begin_1cc142806:;
						{
							goto _match_end_1cc1445a5;
						}
					}
					else {
						_case_begin_1cc14461b:;
						{
							return false;;
						}
					}
					_match_end_1cc1445a5:;
				};
			}
		}
		_match_end_1cc143c14:;
	};
	jule::Ptr<_1e21a449b_Const> _1507_c = (*((*_12923_m.alloc)._field_Right))._field_Model.cast_ptr<_1e21a449b_Const>(&__jule_any_type20);;
	{
		auto &_match_expr{ (*((*(_12923_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1cc144880:;
			{
				if ((_1e21a6657_ReadStr(_1507_c.ptr())).empty()) {
					jule::Any _1549_model = jule::Any(jule::new_ptr<_1e6037281_EmptyCompareExprModel>(_1e6037281_EmptyCompareExprModel{._field_Expr=(*(*(_12923_m))._field_Left.alloc)._field_Model, ._field_Neg=false}), &__jule_any_type127);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_1549_model))))));
					goto _match_end_1cc1465eb;
				};
				jule::Any _1618_model = jule::Any(jule::new_ptr<_1e6037a78_StrCompExprModel>(_1e6037a78_StrCompExprModel{._field_Left=(*(*(_12923_m))._field_Left.alloc)._field_Model, ._field_Right=_1507_c, ._field_NotEq=false}), &__jule_any_type128);;
				(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_1618_model))))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1cc1466a6:;
			{
				if ((_1e21a6657_ReadStr(_1507_c.ptr())).empty()) {
					jule::Any _1699_model = jule::Any(jule::new_ptr<_1e6037281_EmptyCompareExprModel>(_1e6037281_EmptyCompareExprModel{._field_Expr=(*(*(_12923_m))._field_Left.alloc)._field_Model, ._field_Neg=true}), &__jule_any_type127);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_1699_model))))));
					goto _match_end_1cc1465eb;
				};
				jule::Any _1768_model = jule::Any(jule::new_ptr<_1e6037a78_StrCompExprModel>(_1e6037a78_StrCompExprModel{._field_Left=(*(*(_12923_m))._field_Left.alloc)._field_Model, ._field_Right=_1507_c, ._field_NotEq=true}), &__jule_any_type128);;
				(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_1768_model))))));
			}
		}
		_match_end_1cc1465eb:;
	};
	return true;;
}



inline jule::Bool _1e6a18899_tryNeutralElement1(_1e6a1715b_exprOptimizer* _self_, jule::Ptr<_1e5cd2d51_BinaryExprModel>* _18635_m, jule::Ptr<_1e21a449b_Const> _18660_c, jule::Ptr<_1e5cd2856_OperandExprModel>* _18672_nc) {
	if (_1e21a8c53_IsStr(_18660_c.ptr())) {
		if ((!(_1e6a26379_Str))) {
			return false;;
		};
		if (((_1e21a6657_ReadStr(_18660_c.ptr())).empty() && ((*((*((*(_18635_m))))._field_Op))._field_Id == static_cast<jule::U64>(60LLU)))) {
			(*((*(_self_))._field_model))=(*((*(_18672_nc))))._field_Model;
			return true;;
		};
		return false;;
	};
	if (((!(_1e6a25455_Math)) || (_1e21a7191_AsF64(_18660_c) != 0LL))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_18635_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1cc15582a:;
			{
				if (((*(_18672_nc)) == (*((*(_18635_m))))._field_Left)) {
					(*(*(_self_))._field_model.alloc)=(*((*(_18672_nc))))._field_Model;
					return true;;
				};
				(*(*(_self_))._field_model.alloc)=jule::Any(_18660_c, &__jule_any_type20);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1cc156463:;
			{
				_1e21a7449_SetI64(_18660_c, 0LL);
				(*(*(_self_))._field_model.alloc)=jule::Any(_18660_c, &__jule_any_type20);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1cc1564c9:;
			{
				(*(*(_self_))._field_model.alloc)=(*((*(_18672_nc))))._field_Model;
				return true;;
			}
		}
		_match_end_1cc156320:;
	};
	return false;;
}



inline jule::Bool _1e6a18bda_tryNeutralElement(_1e6a1715b_exprOptimizer* _self_, jule::Ptr<_1e5cd2d51_BinaryExprModel>* _23034_m) {
	{
		auto &_match_expr{ (*((*((*(_23034_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1cc159ae8:;
			{
				jule::Ptr<_1e21a449b_Const> _2348_c = (*((*((*(_23034_m))))._field_Left))._field_Model.unsafe_cast_ptr<_1e21a449b_Const>();;
				return _1e6a18899_tryNeutralElement1(_self_, _23034_m, _2348_c, &((*((*(_23034_m))))._field_Right));;
			}
		}
		_match_end_1cc159a71:;
	};
	{
		auto &_match_expr{ (*((*((*(_23034_m))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1cc15a115:;
			{
				jule::Ptr<_1e21a449b_Const> _2398_c = (*((*((*(_23034_m))))._field_Right))._field_Model.unsafe_cast_ptr<_1e21a449b_Const>();;
				return _1e6a18899_tryNeutralElement1(_self_, _23034_m, _2398_c, &((*((*(_23034_m))))._field_Left));;
			}
		}
		_match_end_1cc15a09e:;
	};
	return false;;
}



inline void _1e6a18e93_checkBinaryForBoundary(_1e6a1715b_exprOptimizer* _self_, jule::Ptr<_1e5cd2d51_BinaryExprModel>* _24539_m) {
	if (((*((*(_self_))._field_data))._field_boundary == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*((*(_24539_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1cc15d569:;
			{
				jule::Ptr<_1e5cda122_BuiltinLenCallExprModel> _2518_blc = (*((*((*(_24539_m))))._field_Left))._field_Model.unsafe_cast_ptr<_1e5cda122_BuiltinLenCallExprModel>();;
				if ((!(_1e6a2407a_isBoundaryValidType((*((*(_2518_blc))._field_Expr))._field_Kind)))) {
					return;;
				};
				if ((((*((*((*(_24539_m))))._field_Op))._field_Id != static_cast<jule::U64>(70LLU)) && ((*(*((*(_24539_m))))._field_Op.alloc)._field_Id != static_cast<jule::U64>(50LLU)))) {
					return;;
				};
				if (((*(*((*(_24539_m))))._field_Op.alloc)._field_Id == static_cast<jule::U64>(50LLU))) {
					{
						auto &_match_expr{ (*((*((*(_24539_m))))._field_Right))._field_Model };
						
						if (_match_expr.type == &__jule_any_type20) {
							_case_begin_1cc161847:;
							{
								jule::Ptr<_1e21a449b_Const> _26310_c = jule::new_ptr<_1e21a449b_Const>((*((*((*((*(_24539_m))))._field_Right))._field_Model.cast_ptr<_1e21a449b_Const>(&__jule_any_type20))));;
								_1e21ab52a_Sub(_26310_c, (*(static__1e21a491e_NewI64(1LL))));
								_1e6a223a8_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1e6a24344_getBoundaryVar((*(*(_2518_blc))._field_Expr.alloc)._field_Model), jule::Any(_26310_c, &__jule_any_type20));
							}
						}
						_match_end_1cc1617c0:;
					};
					return;;
				};
				_1e6a223a8_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1e6a24344_getBoundaryVar((*(*(_2518_blc))._field_Expr.alloc)._field_Model), (*(*((*(_24539_m))))._field_Right.alloc)._field_Model);
				return;;
			}
		}
		_match_end_1cc15d4e2:;
	};
	{
		auto &_match_expr{ (*((*((*(_24539_m))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1cc15dbda:;
			{
				jule::Ptr<_1e5cda122_BuiltinLenCallExprModel> _2748_blc = (*((*((*(_24539_m))))._field_Right))._field_Model.unsafe_cast_ptr<_1e5cda122_BuiltinLenCallExprModel>();;
				if ((!(_1e6a2407a_isBoundaryValidType((*(*(_2748_blc))._field_Expr.alloc)._field_Kind)))) {
					return;;
				};
				if ((((*(*((*(_24539_m))))._field_Op.alloc)._field_Id != static_cast<jule::U64>(69LLU)) && ((*(*((*(_24539_m))))._field_Op.alloc)._field_Id != static_cast<jule::U64>(50LLU)))) {
					return;;
				};
				if (((*(*((*(_24539_m))))._field_Op.alloc)._field_Id == static_cast<jule::U64>(50LLU))) {
					{
						auto &_match_expr{ (*((*((*(_24539_m))))._field_Left))._field_Model };
						
						if (_match_expr.type == &__jule_any_type20) {
							_case_begin_1cc168486:;
							{
								jule::Ptr<_1e21a449b_Const> _28610_c = jule::new_ptr<_1e21a449b_Const>((*((*((*((*(_24539_m))))._field_Left))._field_Model.cast_ptr<_1e21a449b_Const>(&__jule_any_type20))));;
								_1e21ab52a_Sub(_28610_c, (*(static__1e21a491e_NewI64(1LL))));
								_1e6a223a8_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1e6a24344_getBoundaryVar((*(*(_2748_blc))._field_Expr.alloc)._field_Model), jule::Any(_28610_c, &__jule_any_type20));
							}
						}
						_match_end_1cc16840e:;
					};
					return;;
				};
				_1e6a223a8_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1e6a24344_getBoundaryVar((*(*(_2748_blc))._field_Expr.alloc)._field_Model), (*(*((*(_24539_m))))._field_Left.alloc)._field_Model);
				return;;
			}
		}
		_match_end_1cc15db63:;
	};
}



inline void _1e6a1924b_checkBinaryForNil(_1e6a1715b_exprOptimizer* _self_, jule::Ptr<_1e5cd2d51_BinaryExprModel>* _29734_m) {
	if (((*((*(_self_))._field_data))._field_nils == nullptr)) {
		return;;
	};
	jule::Uintptr _3017_var = _1e603c4d9_getNilVar((*((*((*(_29734_m))))._field_Left))._field_Model);;
	if ((_3017_var != 0LLU)) {
		if ((!(_1e603c198_isNilValidType((*(*((*(_29734_m))))._field_Left.alloc)._field_Kind)))) {
			return;;
		};
		{
			auto &_match_expr{ (*((*((*(_29734_m))))._field_Right))._field_Model };
			
			if (_match_expr.type == &__jule_any_type20) {
				_case_begin_1cc16dd3d:;
				{
					_1e603aecc_pushVar((*(*(_self_))._field_data.alloc)._field_nils.ptr(), _3017_var, ((*((*((*(_29734_m))))._field_Op))._field_Id == static_cast<jule::U64>(51LLU)));
				}
			}
			_match_end_1cc16dcb6:;
		};
		return;;
	};
	_3017_var=_1e603c4d9_getNilVar((*((*((*(_29734_m))))._field_Right))._field_Model);
	if ((_3017_var != 0LLU)) {
		if ((!(_1e603c198_isNilValidType((*(*((*(_29734_m))))._field_Right.alloc)._field_Kind)))) {
			return;;
		};
		{
			auto &_match_expr{ (*((*((*(_29734_m))))._field_Left))._field_Model };
			
			if (_match_expr.type == &__jule_any_type20) {
				_case_begin_1cc171527:;
				{
					_1e603aecc_pushVar((*(*(_self_))._field_data.alloc)._field_nils.ptr(), _3017_var, ((*(*((*(_29734_m))))._field_Op.alloc)._field_Id == static_cast<jule::U64>(51LLU)));
				}
			}
			_match_end_1cc1714a0:;
		};
		return;;
	};
}



inline void _1e6a19504_binary(_1e6a1715b_exprOptimizer* _self_, jule::Ptr<_1e5cd2d51_BinaryExprModel> _32922_m) {
	_1e6a18e93_checkBinaryForBoundary(_self_, &(_32922_m));
	_1e6a1924b_checkBinaryForNil(_self_, &(_32922_m));
	if (_1e6a26137_Cond) {
		{
			
			if (_1e6a183e3_strCond(_self_, _32922_m) || _1e6a180a2_boolCond(_self_, &(_32922_m)) || _1e6a17c61_selfCmpCond(_self_, &(_32922_m))) {
				_case_begin_1cc173480:;
				{
					return;;
				}
			}
			_match_end_1cc17334d:;
		};
	};
	if (_1e6a18bda_tryNeutralElement(_self_, &(_32922_m))) {
		return;;
	};
	if ((!(_1e6a25455_Math))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_32922_m))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1cc1743e8:;
			{
				goto _match_end_1cc17467e;
			}
		}
		else {
			_case_begin_1cc1746e5:;
			{
				return;;
			}
		}
		_match_end_1cc17467e:;
	};
	jule::Ptr<_1e5e49913_Prim> _3623_lp = _1e5e43ea1_Prim((*((*(_32922_m))._field_Left))._field_Kind.ptr());;
	if ((_3623_lp == nullptr)) {
		return;;
	};
	jule::Ptr<_1e5e49913_Prim> _3663_rp = _1e5e43ea1_Prim((*((*(_32922_m))._field_Right))._field_Kind);;
	if ((_3663_rp == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_32922_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1cc176ebc:;
			{
				jule::Bool _3734_ok;
				jule::U64 _3738_x;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1e6a1b391_checkForBitShiftOpt(&((*_32922_m.alloc)._field_Left), &((*_32922_m.alloc)._field_Right));
					_3734_ok = __jule_assign_result.__jule_result_arg0;
					_3738_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_3734_ok) {
					(*_32922_m.alloc)._field_Op=jule::new_ptr<_1e5c8eacc_Token>((*(*(_32922_m))._field_Op.alloc));
					(*(*(_32922_m))._field_Op.alloc)._field_Id=static_cast<jule::U64>(56LLU);
					(*(*(_32922_m))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("<<", 2));
					jule::Ptr<_1e21a449b_Const> _3789_c = (*((*_32922_m.alloc)._field_Right))._field_Model.cast_ptr<_1e21a449b_Const>(&__jule_any_type20);;
					_1e21a7702_SetU64(_3789_c.ptr(), _3738_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1cc177033:;
			{
				jule::Bool _3854_ok;
				jule::U64 _3858_x;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1e6a1b391_checkForBitShiftOpt(&((*_32922_m.alloc)._field_Left), &((*_32922_m.alloc)._field_Right));
					_3854_ok = __jule_assign_result.__jule_result_arg0;
					_3858_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_3854_ok) {
					(*_32922_m.alloc)._field_Op=jule::new_ptr<_1e5c8eacc_Token>((*(*(_32922_m))._field_Op.alloc));
					(*(*(_32922_m))._field_Op.alloc)._field_Id=static_cast<jule::U64>(57LLU);
					(*(*(_32922_m))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit(">>", 2));
					jule::Ptr<_1e21a449b_Const> _3909_c = (*((*_32922_m.alloc)._field_Right))._field_Model.cast_ptr<_1e21a449b_Const>(&__jule_any_type20);;
					_1e21a7702_SetU64(_3909_c.ptr(), _3858_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1cc177099:;
			{
				jule::Ptr<_1e21a449b_Const> _3978_c = (*((*_32922_m.alloc)._field_Right))._field_Model.cast_ptr<_1e21a449b_Const>(&__jule_any_type20);;
				if ((_1e21a7191_AsF64(_3978_c.ptr()) == 2LL)) {
					(*_32922_m.alloc)._field_Op=jule::new_ptr<_1e5c8eacc_Token>((*(*(_32922_m))._field_Op.alloc));
					(*(*(_32922_m))._field_Op.alloc)._field_Id=static_cast<jule::U64>(65LLU);
					(*(*(_32922_m))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("&", 1));
					_1e21a7449_SetI64(_3978_c, 1LL);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1cc177110:;
			{
				jule::I64 _4094_z = _1e2198814_BitsizeOf((*(_3623_lp))._field_Kind);;
				jule::U64 _4104_s = _1e21a6e0a_AsU64((*((*_32922_m.alloc)._field_Right))._field_Model.cast_ptr<_1e21a449b_Const>(&__jule_any_type20).ptr());;
				if ((_4104_s >= static_cast<jule::U64>(_4094_z))) {
					(*((*(_self_))._field_model))=jule::Any(static__1e21a4bd8_NewU64(0LLU), &__jule_any_type20);
					return;;
				};
			}
		}
		else {
			_case_begin_1cc176b26:;
			{
				return;;
			}
		}
		_match_end_1cc176e45:;
	};
	jule::Any _4237_model = jule::Any(jule::new_ptr<_1e6038408_UnsafeBinaryExprModel>(_1e6038408_UnsafeBinaryExprModel{._field_Node=_32922_m}), &__jule_any_type129);;
	(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_4237_model))))));
}



inline void _1e6a197ac_unary(_1e6a1715b_exprOptimizer* _self_, jule::Ptr<_1e5cd322a_UnaryExprModel> _42721_m) {
	if ((!(_1e6a25c6e_Ptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_42721_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1cc1867b2:;
			{
				{
					auto &_match_expr{ (*((*(_42721_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type112) {
						_case_begin_1cc1887c5:;
						{
							jule::Ptr<_1e5cd322a_UnaryExprModel> _4359_um = (*((*(_42721_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1e5cd322a_UnaryExprModel>();;
							if (((*((*(_4359_um))._field_Op))._field_Id == static_cast<jule::U64>(65LLU))) {
								(*((*(_self_))._field_model))=(*((*_4359_um.alloc)._field_Expr))._field_Model;
								return;;
							};
							return;;
						}
					}
					_match_end_1cc18874d:;
				};
				if ((!(_1e6a2570d_Access))) {
					return;;
				};
				if ((((*((*(_self_))._field_data))._field_nils != nullptr) && _1e603c198_isNilValidType((*(*(_42721_m))._field_Expr.alloc)._field_Kind))) {
					jule::Uintptr _4495_var = _1e603c4d9_getNilVar((*(*(_42721_m))._field_Expr.alloc)._field_Model);;
					if (_1e603b65e_isSafe((*((*(_self_))._field_data))._field_nils, _4495_var)) {
						jule::Any _45110_model = jule::Any(jule::new_ptr<_1e6039717_UnsafeDerefExprModel>(_1e6039717_UnsafeDerefExprModel{._field_Base=_42721_m}), &__jule_any_type130);;
						(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_45110_model))))));
						return;;
					};
					_1e603aecc_pushVar((*((*(_self_))._field_data))._field_nils, _4495_var, true);
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1cc186828:;
			{
				{
					auto &_match_expr{ (*((*(_42721_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1cc196ae1:;
						{
							jule::Ptr<_1e5da0bcc_Var> _4619_v = (*((*(_42721_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1e5da0bcc_Var>();;
							if ((*(_4619_v))._field_Reference) {
								jule::Any _46310_model = jule::Any(jule::new_ptr<_1e6037605_RefExprModel>(_1e6037605_RefExprModel{._field_Var=_4619_v}), &__jule_any_type131);;
								(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_46310_model))))));
							};
						}
					}
					_match_end_1cc196a69:;
				};
			}
		}
		_match_end_1cc18674b:;
	};
}



inline void _1e6a19a65_structureLit(_1e6a1715b_exprOptimizer* _self_, jule::Ptr<_1e5cd3aee_StructLitExprModel> _47028_m) {
	{
		auto expr = &((*(_47028_m))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc199011:;
		if (it != expr_end) {
			jule::Ptr<_1e5cd3758_StructArgExprModel> _47115_arg = *it;
			{
				if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
					if (_1e6a23cb1_isBoundaryRiskyType((*((*(_47115_arg))._field_Expr))._field_Kind)) {
						_1e6a239e7_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), jule::Any(_47115_arg, &__jule_any_type132));
					};
				};
				if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
					_1e603ba16_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), (*(*(_47115_arg))._field_Expr.alloc)._field_Model);
				};
				if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
					_1e6a1d926_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*(*(_47115_arg))._field_Expr.alloc)._field_Model);
				};
			}
			_iter_next_1cc199011:;
			++it;
			goto _iter_begin_1cc199011;
		}
		_iter_end_1cc199011:;
	};
}



inline void _1e6a19d1d_casting(_1e6a1715b_exprOptimizer* _self_, jule::Ptr<_1e5cd447e_CastingExprModel> _48623_m) {
	jule::Bool _4873_valid = _1e6a1dc34_isDynamicValidType((*(_48623_m))._field_ExprKind);;
	jule::Uintptr _4883_var = _1e6a1e4a4_getDynamicVar((*((*_48623_m.alloc)._field_Expr))._field_Model);;
	if (((_4873_valid && ((*((*(_self_))._field_data))._field_dynamic != nullptr)) && _1e6a1d56e_isFits((*((*(_self_))._field_data))._field_dynamic, _4883_var, (*_48623_m.alloc)._field_Kind))) {
		jule::Any _4908_model = jule::Any(jule::new_ptr<_1e6039a14_UnsafeCastingExprModel>(_1e6039a14_UnsafeCastingExprModel{._field_Base=_48623_m}), &__jule_any_type133);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_4908_model))))));
		(*((*(_self_))._field_inspector))._field_SkipChild=true;
		return;;
	};
	if ((((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr) && _4873_valid)) {
		_1e6a1cd32_pushVar((*((*(_self_))._field_data))._field_dynamic, _4883_var, (*_48623_m.alloc)._field_Kind);
	};
}



inline void _1e6a1a181_args(_1e6a1715b_exprOptimizer* _self_, jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>> _50020_params, jule::Slice<jule::Any>* _50046_args) {
	{
		auto expr = _50046_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc1a9e12:;
		if (it != expr_end) {
			jule::I64 _5018_i = it - expr->begin();
			jule::Any _50115_arg = *it;
			{
				if ((_5018_i >= _50020_params.len())) {
					goto _iter_next_1cc1a9e12;
				};
				jule::Ptr<_1e5ce22b1_ParamIns> _5058_p = _50020_params[_5018_i];;
				if (((*((*(_5058_p))._field_Decl))._field_Mutable && (*(*(_5058_p))._field_Decl.alloc)._field_Reference)) {
					if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
						if (_1e6a23cb1_isBoundaryRiskyType((*_5058_p.alloc)._field_Kind)) {
							_1e6a239e7_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), _50115_arg);
						};
					};
					if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
						_1e603ba16_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), _50115_arg);
					};
					if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
						_1e6a1d926_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), _50115_arg);
					};
				};
			}
			_iter_next_1cc1a9e12:;
			++it;
			_5018_i++;
			goto _iter_begin_1cc1a9e12;
		}
		_iter_end_1cc1a9e12:;
	};
}



inline void _1e6a1a439_scope(_1e6a1715b_exprOptimizer* _self_, jule::Ptr<_1e5d384d3_Scope>* _52222_s) {
	jule::Ptr<_1e6a10709_scopeOptimizer> _5237_scopt = static__1e6a10cae_new((*(_52222_s)));;
	(*(_5237_scopt))._field_data=(*(_self_))._field_data;
	_1e6a14e28_optimize(_5237_scopt);
}



inline void _1e6a1a6e2_funcCall(_1e6a1715b_exprOptimizer* _self_, jule::Ptr<_1e5cd4d31_FnCallExprModel> _52824_m) {
	_1e6a1a181_args(_self_, (*((*(_52824_m))._field_Func))._field_Params, &((*_52824_m.alloc)._field_Args));
	if (((*_52824_m.alloc)._field_Except != nullptr)) {
		_1e6a1a439_scope(_self_, &((*_52824_m.alloc)._field_Except));
	};
}



inline void _1e6a1a99a_indexing(_1e6a1715b_exprOptimizer* _self_, jule::Ptr<_1e5cd56b1_IndexingExprModel> _53524_m) {
	if ((!(_1e6a2570d_Access))) {
		return;;
	};
	jule::Bool _5403_array = (_1e5e44c71_Arr((*((*(_53524_m))._field_Expr))._field_Kind.ptr()) != nullptr);;
	if ((_5403_array && _1e5e0964d_IsConst((*_53524_m.alloc)._field_Index.ptr()))) {
		jule::Any _5438_model = jule::Any(jule::new_ptr<_1e603878d_UnsafeIndexingExprModel>(_1e603878d_UnsafeIndexingExprModel{._field_Node=_53524_m}), &__jule_any_type134);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_5438_model))))));
		return;;
	};
	if ((((*((*(_self_))._field_data))._field_boundary != nullptr) && _1e6a2407a_isBoundaryValidType((*(*(_53524_m))._field_Expr.alloc)._field_Kind))) {
		jule::Uintptr _5494_var = _1e6a24344_getBoundaryVar((*(*(_53524_m))._field_Expr.alloc)._field_Model);;
		if (_1e6a22ae5_fitsMaxSize((*((*(_self_))._field_data))._field_boundary, _5494_var, (*(*(_53524_m))._field_Index.alloc)._field_Model)) {
			jule::Any _5519_model = jule::Any(jule::new_ptr<_1e603878d_UnsafeIndexingExprModel>(_1e603878d_UnsafeIndexingExprModel{._field_Node=_53524_m}), &__jule_any_type134);;
			(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_5519_model))))));
			return;;
		};
		_1e6a223a8_pushVar((*((*(_self_))._field_data))._field_boundary, _5494_var, (*(*(_53524_m))._field_Index.alloc)._field_Model);
	};
}



inline void _1e6a1ac53_anonFunc(_1e6a1715b_exprOptimizer* _self_, jule::Ptr<_1e5cd5b67_AnonFnExprModel> _55924_m) {
	_1e6a1a439_scope(_self_, &((*((*(_55924_m))._field_Func))._field_Scope));
}



inline void _1e6a1ae51_do(_1e6a1715b_exprOptimizer* _self_) {
	_1e6a08779_Inspect((*(_self_))._field_inspector.ptr(), &((*((*(_self_))._field_model))), jule::__new_closure<void,jule::Any*>((void*)__jule_anon_1cc1bbd14, jule::Ptr<__jule_anon_1cc1bbd14_ctx>::make(__jule_anon_1cc1bbd14_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1cc1bbd14_ctx_handler));
}








inline jule::Bool _1e6a1c54b_dynamicVar_eq(_1e6a1c54b_dynamicVar *_self_, _1e6a1c54b_dynamicVar _other_) {
	return 
		(_self_->_field_var == _other_._field_var) &&
		(_self_->_field_kind == _self_->_field_kind);
}





inline void _1e6a1cd32_pushVar(jule::Ptr<_1e6a1c88c_dynamic> _self_, jule::Uintptr _3224_var, jule::Ptr<_1e5e417ea_TypeKind> _3242_kind) {
	if (((!(_1e6a271e3_Dynamic)) || (_3224_var == 0LLU))) {
		return;;
	};
	_3242_kind=_1e6a1e163_isTypeGuaranteedDynamicData(&(_self_), _3242_kind, nullptr);
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc1cb4b6:;
		if (it != expr_end) {
			_1e6a1c54b_dynamicVar _3815_v = *it;
			{
				if ((_3815_v._field_var == _3224_var)) {
					_3815_v._field_kind=_3242_kind;
					return;;
				};
			}
			_iter_next_1cc1cb4b6:;
			++it;
			goto _iter_begin_1cc1cb4b6;
		}
		_iter_end_1cc1cb4b6:;
	};
	{
		auto expr = &((*_self_.alloc)._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc1cbeab:;
		if (it != expr_end) {
			_1e6a1c54b_dynamicVar _4515_v = *it;
			{
				if ((_4515_v._field_var == 0LLU)) {
					({
						jule::Uintptr ___jule_assign_arg = _3224_var;
						jule::Ptr<_1e5e417ea_TypeKind> _1___jule_assign_arg = _3242_kind;
						_4515_v._field_var = ___jule_assign_arg;
						_4515_v._field_kind = _1___jule_assign_arg;
					});
					return;;
				};
			}
			_iter_next_1cc1cbeab:;
			++it;
			goto _iter_begin_1cc1cbeab;
		}
		_iter_end_1cc1cbeab:;
	};
	(*_self_.alloc)._field_vars=jule::append((*_self_.alloc)._field_vars,({ auto __jule_collection = jule::Slice<_1e6a1c54b_dynamicVar>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1e6a1c54b_dynamicVar{._field_var=_3224_var, ._field_kind=_3242_kind}; __jule_collection; }));
}



inline jule::Bool _1e6a1d173_removeVar(_1e6a1c88c_dynamic* _self_, jule::Uintptr _5525_var) {
	if ((_5525_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1cc1ce19a:;
			if (it != expr_end) {
				_1e6a1c54b_dynamicVar _5716_v = *it;
				{
					if ((_5716_v._field_var == _5525_var)) {
						_5716_v._field_var=0LLU;
						_5716_v._field_kind=nullptr;
						return true;;
					};
				}
				_iter_next_1cc1ce19a:;
				++it;
				goto _iter_begin_1cc1ce19a;
			}
			_iter_end_1cc1ce19a:;
		};
	};
	return false;;
}



inline jule::Bool _1e6a1d56e_isFits(_1e6a1c88c_dynamic* _self_, jule::Uintptr _6922_var, jule::Ptr<_1e5e417ea_TypeKind> _6936_kind) {
	if ((_6922_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1cc1d0a5e:;
			if (it != expr_end) {
				_1e6a1c54b_dynamicVar _7111_v = *it;
				{
					if ((_7111_v._field_var == _6922_var)) {
						return ((_7111_v._field_kind != nullptr) && _1e5e42037_Equal(_7111_v._field_kind, _6936_kind));;
					};
				}
				_iter_next_1cc1d0a5e:;
				++it;
				goto _iter_begin_1cc1d0a5e;
			}
			_iter_end_1cc1d0a5e:;
		};
	};
	return false;;
}








inline jule::Bool _1e6a2051b_data_eq(_1e6a2051b_data *_self_, _1e6a2051b_data _other_) {
	return 
		(_self_->_field_boundary == _other_._field_boundary) &&
		(_self_->_field_nils == _self_->_field_nils) &&
		(_self_->_field_dynamic == _self_->_field_dynamic);
}

inline _1e6a20021_dataCheckpoint _1e6a208c3_getCheckpoint(_1e6a2051b_data* _self_) {
	_1e6a20021_dataCheckpoint _257_c = _1e6a20021_dataCheckpoint{._field_boundary=_1e6a21e13_boundary{._field_vars=jule::Slice<_1e6a21ac2_boundaryVar>(nullptr)}, ._field_nils=_1e603aa37_nils{._field_vars=jule::Slice<_1e603a6e6_nilVar>(nullptr)}, ._field_dynamic=_1e6a1c88c_dynamic{._field_vars=jule::Slice<_1e6a1c54b_dynamicVar>(nullptr)}};;
	_257_c._field_boundary._field_vars=jule::append(({ auto __jule_collection = jule::Slice<_1e6a21ac2_boundaryVar>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1e6a21ac2_boundaryVar{._field_var=0, ._field_maxSize=jule::Slice<jule::Any>(nullptr)}; __jule_collection; }),(*((*(_self_))._field_boundary))._field_vars);
	{
		auto expr = &(_257_c._field_boundary._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc1d290c:;
		if (it != expr_end) {
			jule::I64 _277_i = it - expr->begin();
			{
				_257_c._field_boundary._field_vars[_277_i]._field_maxSize=jule::append(({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; }),_257_c._field_boundary._field_vars[_277_i]._field_maxSize);
			}
			_iter_next_1cc1d290c:;
			++it;
			_277_i++;
			goto _iter_begin_1cc1d290c;
		}
		_iter_end_1cc1d290c:;
	};
	_257_c._field_nils._field_vars=jule::append(({ auto __jule_collection = jule::Slice<_1e603a6e6_nilVar>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1e603a6e6_nilVar{._field_var=0, ._field_safe=false}; __jule_collection; }),(*((*(_self_))._field_nils))._field_vars);
	_257_c._field_dynamic._field_vars=jule::append(({ auto __jule_collection = jule::Slice<_1e6a1c54b_dynamicVar>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1e6a1c54b_dynamicVar{._field_var=0, ._field_kind=jule::Ptr<_1e5e417ea_TypeKind>(nullptr)}; __jule_collection; }),(*((*(_self_))._field_dynamic))._field_vars);
	return _257_c;;
}



inline void _1e6a20b7b_loadCheckpoint(_1e6a2051b_data* _self_, _1e6a20021_dataCheckpoint* _3535_c) {
	(*((*(_self_))._field_boundary))=(*(_3535_c))._field_boundary;
	(*((*(_self_))._field_nils))=(*(_3535_c))._field_nils;
	(*((*(_self_))._field_dynamic))=(*(_3535_c))._field_dynamic;
}











inline void _1e6a223a8_pushVar(_1e6a21e13_boundary* _self_, jule::Uintptr _2423_var, jule::Any _2441_maxSize) {
	if (((!(_1e6a2570d_Access)) || (_2423_var == 0LLU))) {
		return;;
	};
	if ((!(_1e6a22e7a_isValidBoundaryInfo(_2441_maxSize)))) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc1e6bb8:;
		if (it != expr_end) {
			_1e6a21ac2_boundaryVar _3215_v = *it;
			{
				if ((_3215_v._field_var == _2423_var)) {
					{
						auto expr = &(_3215_v._field_maxSize);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1cc1e79aa:;
						if (it != expr_end) {
							jule::I64 _349_i = it - expr->begin();
							jule::Any _3412_max = *it;
							{
								if (_1e6a236b7_fitsSize(_2441_maxSize, _3412_max)) {
									_3215_v._field_maxSize[_349_i]=_2441_maxSize;
									return;;
								};
							}
							_iter_next_1cc1e79aa:;
							++it;
							_349_i++;
							goto _iter_begin_1cc1e79aa;
						}
						_iter_end_1cc1e79aa:;
					};
					{ jule::Slice<jule::Any> &__jule_push_dest = _3215_v._field_maxSize; __jule_push_dest.push(_2441_maxSize); };
					return;;
				};
			}
			_iter_next_1cc1e6bb8:;
			++it;
			goto _iter_begin_1cc1e6bb8;
		}
		_iter_end_1cc1e6bb8:;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc1e7537:;
		if (it != expr_end) {
			_1e6a21ac2_boundaryVar _4615_v = *it;
			{
				if ((_4615_v._field_var == 0LLU)) {
					_4615_v._field_var=_2423_var;
					{ jule::Slice<jule::Any> &__jule_push_dest = _4615_v._field_maxSize; __jule_push_dest.push(_2441_maxSize); };
					return;;
				};
			}
			_iter_next_1cc1e7537:;
			++it;
			goto _iter_begin_1cc1e7537;
		}
		_iter_end_1cc1e7537:;
	};
	{ jule::Slice<_1e6a21ac2_boundaryVar> &__jule_push_dest = (*(_self_))._field_vars; __jule_push_dest.push(_1e6a21ac2_boundaryVar{._field_var=_2423_var, ._field_maxSize=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _2441_maxSize; __jule_collection; })}); };
}



inline jule::Bool _1e6a22ae5_fitsMaxSize(_1e6a21e13_boundary* _self_, jule::Uintptr _7127_var, jule::Any _7141_expr) {
	if ((_7127_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1cc1ec3c7:;
			if (it != expr_end) {
				_1e6a21ac2_boundaryVar _7311_v = *it;
				{
					if ((_7311_v._field_var == _7127_var)) {
						return (_1e6a23343_fitsMaxSize(_7311_v._field_maxSize, _7141_expr) != -1LL);;
					};
				}
				_iter_next_1cc1ec3c7:;
				++it;
				goto _iter_begin_1cc1ec3c7;
			}
			_iter_end_1cc1ec3c7:;
		};
	};
	return false;;
}








inline jule::Bool _1c7ee6b54_Optimizer_eq(_1c7ee6b54_Optimizer *_self_, _1c7ee6b54_Optimizer _other_) {
	return 
		(_self_->_field_ir == _other_._field_ir);
}

inline jule::Ptr<_1c7ee6b54_Optimizer> static__1c7ee710a_New(jule::Ptr<_1e6a03ab5_IR>* _2621_ir) {
	return jule::new_ptr<_1c7ee6b54_Optimizer>(_1c7ee6b54_Optimizer{._field_ir=(*(_2621_ir))});;
}



inline void _1c7ee73b3_optimizeGlobal(_1c7ee6b54_Optimizer* _self_, jule::Ptr<_1e5da0bcc_Var>* _3235_v) {
	if ((!((*((*(_3235_v))))._field_Binded))) {
		static__1e6a17634_optimize(&((*((*((*((*(_3235_v))))._field_Value))._field_Data))._field_Model));
	};
}



inline void _1c7ee766b_optimizeFunction(_1c7ee6b54_Optimizer* _self_, jule::Ptr<_1e5ce0358_Fn>* _3837_func) {
	if ((*((*(_3837_func))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_3837_func))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc202443:;
		if (it != expr_end) {
			jule::Ptr<_1e5ce3416_FnIns> _4215_ins = *it;
			{
				jule::Ptr<_1e6a10709_scopeOptimizer> _438_so = static__1e6a10cae_new((*(_4215_ins))._field_Scope);;
				_1e6a14e28_optimize(_438_so);
			}
			_iter_next_1cc202443:;
			++it;
			goto _iter_begin_1cc202443;
		}
		_iter_end_1cc202443:;
	};
}



inline void _1c7ee7924_optimizeStruct(_1c7ee6b54_Optimizer* _self_, jule::Ptr<_1e5cc5e21_Struct>* _4835_s) {
	if ((*((*(_4835_s))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_4835_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc203b1a:;
		if (it != expr_end) {
			jule::Ptr<_1e5cc8c7b_StructIns> _5215_ins = *it;
			{
				{
					auto expr = &((*(_5215_ins))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cc204522:;
					if (it != expr_end) {
						jule::Ptr<_1e5cc81cb_FieldIns> _5316_f = *it;
						{
							if (((*(_5316_f))._field_Default != nullptr)) {
								static__1e6a17634_optimize(&((*(*(_5316_f))._field_Default.alloc)._field_Model));
							};
						}
						_iter_next_1cc204522:;
						++it;
						goto _iter_begin_1cc204522;
					}
					_iter_end_1cc204522:;
				};
				{
					auto expr = &((*_5215_ins.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cc204973:;
					if (it != expr_end) {
						jule::Ptr<_1e5ce0358_Fn> _5816_m = *it;
						{
							_1c7ee766b_optimizeFunction(_self_, &(_5816_m));
						}
						_iter_next_1cc204973:;
						++it;
						goto _iter_begin_1cc204973;
					}
					_iter_end_1cc204973:;
				};
			}
			_iter_next_1cc203b1a:;
			++it;
			goto _iter_begin_1cc203b1a;
		}
		_iter_end_1cc203b1a:;
	};
}



inline void _1c7ee7bcc_optimizeGlobals(_1c7ee6b54_Optimizer* _self_, jule::Ptr<_1e5d5e21d_Package>* _6436_p) {
	{
		auto expr = &((*((*(_6436_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc205cb5:;
		if (it != expr_end) {
			jule::Ptr<_1e5e03548_SymbolTable> _6515_f = *it;
			{
				{
					auto expr = &((*(_6515_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cc206ac9:;
					if (it != expr_end) {
						jule::Ptr<_1e5da0bcc_Var> _6616_v = *it;
						{
							_1c7ee73b3_optimizeGlobal(_self_, &(_6616_v));
						}
						_iter_next_1cc206ac9:;
						++it;
						goto _iter_begin_1cc206ac9;
					}
					_iter_end_1cc206ac9:;
				};
			}
			_iter_next_1cc205cb5:;
			++it;
			goto _iter_begin_1cc205cb5;
		}
		_iter_end_1cc205cb5:;
	};
}



inline void _1c7ee7e85_optimizeFunctions(_1c7ee6b54_Optimizer* _self_, jule::Ptr<_1e5d5e21d_Package>* _7238_p) {
	{
		auto expr = &((*((*(_7238_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc20717e:;
		if (it != expr_end) {
			jule::Ptr<_1e5e03548_SymbolTable> _7315_f = *it;
			{
				{
					auto expr = &((*(_7315_f))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cc207ee8:;
					if (it != expr_end) {
						jule::Ptr<_1e5ce0358_Fn> _7416_func = *it;
						{
							_1c7ee766b_optimizeFunction(_self_, &(_7416_func));
						}
						_iter_next_1cc207ee8:;
						++it;
						goto _iter_begin_1cc207ee8;
					}
					_iter_end_1cc207ee8:;
				};
			}
			_iter_next_1cc20717e:;
			++it;
			goto _iter_begin_1cc20717e;
		}
		_iter_end_1cc20717e:;
	};
}



inline void _1c7ee823d_optimizeStructs(_1c7ee6b54_Optimizer* _self_, jule::Ptr<_1e5d5e21d_Package>* _8036_p) {
	{
		auto expr = &((*((*(_8036_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc20859d:;
		if (it != expr_end) {
			jule::Ptr<_1e5e03548_SymbolTable> _8115_f = *it;
			{
				{
					auto expr = &((*(_8115_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cc209417:;
					if (it != expr_end) {
						jule::Ptr<_1e5cc5e21_Struct> _8216_s = *it;
						{
							_1c7ee7924_optimizeStruct(_self_, &(_8216_s));
						}
						_iter_next_1cc209417:;
						++it;
						goto _iter_begin_1cc209417;
					}
					_iter_end_1cc209417:;
				};
			}
			_iter_next_1cc20859d:;
			++it;
			goto _iter_begin_1cc20859d;
		}
		_iter_end_1cc20859d:;
	};
}



inline void _1c7ee84e6_optimizePackage(_1c7ee6b54_Optimizer* _self_, jule::Ptr<_1e5d5e21d_Package>* _8836_p) {
	_1c7ee7bcc_optimizeGlobals(_self_, _8836_p);
	_1c7ee7e85_optimizeFunctions(_self_, _8836_p);
	_1c7ee823d_optimizeStructs(_self_, _8836_p);
}



inline void _1c7ee86e4_Optimize(_1c7ee6b54_Optimizer* _self_) {
	_1c7ee8958_detectEnabled();
	if (_1e6a24da0_Deadcode) {
		_1c7ee0587_EliminateDefines(&((*(_self_))._field_ir));
	};
	if ((_1c7ee6956_scopeEnabled || _1c7ee66ae_exprEnabled)) {
		{
			auto expr = &((*((*(_self_))._field_ir))._field_Used);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1cc20b46e:;
			if (it != expr_end) {
				jule::Ptr<_1e5d5b2e7_ImportInfo> _10416_u = *it;
				{
					if ((!((*(_10416_u))._field_Binded))) {
						_1c7ee84e6_optimizePackage(_self_, &((*_10416_u.alloc)._field_Package));
					};
				}
				_iter_next_1cc20b46e:;
				++it;
				goto _iter_begin_1cc20b46e;
			}
			_iter_end_1cc20b46e:;
		};
		_1c7ee84e6_optimizePackage(_self_, &((*(*(_self_))._field_ir.alloc)._field_Main));
	};
	if (_1e6a24da0_Deadcode) {
		_1c7ee5191_EliminateScopes(&((*(_self_))._field_ir));
	};
}








inline jule::Bool _1c801d1a8_AnsiEscape_eq(_1c801d1a8_AnsiEscape *_self_, _1c801d1a8_AnsiEscape _other_) { return true; }

inline void static__1c7ee8ea8_Reset(void) {
	jule::out(_1c8d69498_toStr(jule::Str::lit("\033[0m", 4)));
}



inline void static__1c801c031_Print(jule::Str _1918_escape, jule::Str _1931_text) {
	jule::out(_1c8d69498_toStr(_1918_escape));
	jule::out(_1c8d69498_toStr(_1931_text));
	static__1c7ee8ea8_Reset();
}








inline jule::Bool _1c801e75e_Logger_eq(_1c801e75e_Logger *_self_, _1c801e75e_Logger _other_) { return true; }

inline void static__1c801ea39_LogFlat(_22578b38a_Log* _1421_l) {
	jule::outln(_1c8d69498_toStr((*(_1421_l))._field_Text));
}



inline void static__1c801ec6a_LogError(_22578b38a_Log* _1922_l) {
	jule::out(_1c8d69498_toStr(jule::Str::lit("\033[31m", 5)));
	jule::out(_1c8d69498_toStr(jule::Str::lit("error: ", 7)));
	jule::out(_1c8d69498_toStr((*(_1922_l))._field_Text));
	static__1c7ee8ea8_Reset();
	if (((*(_1922_l))._field_Path.len() != 0LL)) {
		jule::out(_1c8d69498_toStr(jule::Str::lit("\n  --> ", 7)));
		jule::out(_1c8d69498_toStr((*(_1922_l))._field_Path));
	};
	if ((((*(_1922_l))._field_Row != 0LL) && ((*(_1922_l))._field_Column != 0LL))) {
		jule::out(_1c8d69498_toStr(jule::Str::lit(":", 1)));
		jule::out(_1c8d69498_toStr(_1e2195e4e_Itoa((*(_1922_l))._field_Row)));
		jule::out(_1c8d69498_toStr(jule::Str::lit(":", 1)));
		jule::out(_1c8d69498_toStr(_1e2195e4e_Itoa((*(_1922_l))._field_Column)));
	};
	if (((*(_1922_l))._field_Line.len() != 0LL)) {
		jule::Str _388_line = _2256de19a_Trim((*(_1922_l))._field_Line, jule::Str::lit("\r\n\v\b\t ", 6));;
		_388_line=_2256dcc26_Replace(_388_line, jule::Str::lit("\t", 1), jule::Str::lit(" ", 1), -1LL);
		jule::I64 _418_offset = (((*(_1922_l))._field_Line.len() - _388_line.len()) + 1LL);;
		jule::out(_1c8d69498_toStr(jule::Str::lit("\n  ", 3)));
		jule::Str _434_row = _1e2195e4e_Itoa((*(_1922_l))._field_Row);;
		jule::out(_1c8d69498_toStr(_434_row));
		jule::out(_1c8d69498_toStr(jule::Str::lit(" | ", 3)));
		jule::out(_1c8d69498_toStr(_388_line));
		jule::out(_1c8d69498_toStr(jule::Str::lit("\n  ", 3)));
		jule::out(_1c8d69498_toStr(_2256d6eb7_Repeat(jule::Str::lit(" ", 1), _434_row.len())));
		jule::out(_1c8d69498_toStr(jule::Str::lit(" | ", 3)));
		jule::out(_1c8d69498_toStr(_2256d6eb7_Repeat(jule::Str::lit(" ", 1), ((*(_1922_l))._field_Column - _418_offset))));
		jule::out(_1c8d69498_toStr(jule::Str::lit("^", 1)));
		if (((*(_1922_l))._field_Suggestion.len() != 0LL)) {
			jule::out(_1c8d69498_toStr(jule::Str::lit("\n  ", 3)));
			jule::out(_1c8d69498_toStr(_2256d6eb7_Repeat(jule::Str::lit(" ", 1), _434_row.len())));
			jule::out(_1c8d69498_toStr(jule::Str::lit(" | ", 3)));
			static__1c801c031_Print(jule::Str::lit("\033[95m", 5), jule::Str::lit("suggestion: ", 12));
			jule::out(_1c8d69498_toStr((*(_1922_l))._field_Suggestion));
		};
	};
	jule::outln(_1c8d69498_toStr(jule::Str::lit("\n", 1)));
}



inline void static__1c801ee9b_Log(_22578b38a_Log* _6417_l) {
	{
		auto &_match_expr{ (*(_6417_l))._field_Kind };
		
		if (_match_expr == static_cast<jule::I64>(0LL)) {
			_case_begin_1cc218c0c:;
			{
				static__1c801ea39_LogFlat(_6417_l);
			}
		}
		else if (_match_expr == static_cast<jule::I64>(1LL)) {
			_case_begin_1cc218ec6:;
			{
				static__1c801ec6a_LogError(_6417_l);
			}
		}
		_match_end_1cc218dc7:;
	};
}



inline void static__1c80201cc_PrintLogs(jule::Slice<_22578b38a_Log>* _7423_logs) {
	{
		auto expr = _7423_logs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc219092:;
		if (it != expr_end) {
			_22578b38a_Log *_7510_l = it;
			{
				static__1c801ee9b_Log(_7510_l);
			}
			_iter_next_1cc219092:;
			++it;
			goto _iter_begin_1cc219092;
		}
		_iter_end_1cc219092:;
	};
	jule::out(_1c8d69498_toStr(jule::Str::lit("=== ", 4)));
	jule::out(_1c8d69498_toStr(_1e2195e4e_Itoa((*(_7423_logs)).len())));
	jule::outln(_1c8d69498_toStr(jule::Str::lit(" error generated ===", 20)));
}








inline jule::Bool _1c8a6b6d9_AbsTime_eq(_1c8a6b6d9_AbsTime *_self_, _1c8a6b6d9_AbsTime _other_) {
	return 
		(_self_->_field_Day == _other_._field_Day) &&
		(_self_->_field_WeekDay == _self_->_field_WeekDay) &&
		(_self_->_field_YearDay == _self_->_field_YearDay) &&
		(_self_->_field_Month == _self_->_field_Month) &&
		(_self_->_field_Year == _self_->_field_Year) &&
		(_self_->_field_Second == _self_->_field_Second) &&
		(_self_->_field_Minute == _self_->_field_Minute) &&
		(_self_->_field_Hour == _self_->_field_Hour);
}






inline jule::Bool _1c8a6bdb0_Time_eq(_1c8a6bdb0_Time *_self_, _1c8a6bdb0_Time _other_) {
	return 
		(_self_->_field_sec == _other_._field_sec);
}

inline _1c8a6bdb0_Time static__1c8a6c29a_Unix(jule::U64 _9117_sec) {
	return _1c8a6bdb0_Time{._field_sec=_9117_sec};;
}



inline _1c8a6bdb0_Time static__1c8a6c4a9_Now(void) {
	return static__1c8a6c29a_Unix(_1c8a6dea0_unix());;
}



inline _1c8a6b6d9_AbsTime _1c8a6db92_Abs(_1c8a6bdb0_Time* _self_) {
	jule::U64 _1273_secs = (jule::U64)((*(_self_))._field_sec - 951868800LLU);;
	jule::U64 _1287_days = (_1273_secs / 86400LLU);;
	jule::U64 _1297_remSecs = (_1273_secs % 86400LL);;
	if ((_1297_remSecs < 0LLU)) {
		_1297_remSecs+=86400LLU;
		(_1287_days)--;
	};
	jule::U64 _1357_qcCycles = (_1287_days / 146097LLU);;
	jule::U64 _1367_remDays = (_1287_days % 146097LL);;
	if ((_1367_remDays < 0LLU)) {
		_1367_remDays+=146097LLU;
		(_1357_qcCycles)--;
	};
	jule::U64 _1427_cCycles = (_1367_remDays / 36524LLU);;
	if ((_1427_cCycles == 4LLU)) {
		(_1427_cCycles)--;
	};
	_1367_remDays-=(jule::U64)(_1427_cCycles * 36524LLU);
	jule::U64 _1487_qCycles = (_1367_remDays / 1461LLU);;
	if ((_1487_qCycles == 25LLU)) {
		(_1487_qCycles)--;
	};
	_1367_remDays-=(jule::U64)(_1487_qCycles * 1461LLU);
	jule::U64 _1547_remYears = (_1367_remDays / 365LLU);;
	if ((_1547_remYears == 4LLU)) {
		(_1547_remYears)--;
	};
	_1367_remDays-=(jule::U64)(_1547_remYears * 365LLU);
	jule::U64 _1607_leap = static_cast<jule::U64>(0LLU);;
	if (((_1547_remYears == 0LLU) && ((_1487_qCycles > 0LLU) || (_1427_cCycles == 0LLU)))) {
		_1607_leap=1LLU;
	};
	jule::U64 _1647_yDay = (jule::U64)((jule::U64)((jule::U64)(_1367_remDays + 31LLU) + 28LLU) + _1607_leap);;
	if ((_1647_yDay >= (jule::U64)(365LLU + _1607_leap))) {
		_1647_yDay-=(jule::U64)(365LLU + _1607_leap);
	};
	jule::U64 _1697_months = static_cast<jule::U64>(0LLU);;
	for (; (_1c8a6ab4a_mdays[static_cast<jule::I64>(_1697_months)] <= _1367_remDays); (_1697_months)++) {
		{
			_1367_remDays-=_1c8a6ab4a_mdays[static_cast<jule::I64>(_1697_months)];
		}
	_iter_next_1cc246ce5:;
	}
	_iter_end_1cc246ce5:;;
	_1c8a6b6d9_AbsTime _1747_t = _1c8a6b6d9_AbsTime{._field_Day=0, ._field_WeekDay=0, ._field_YearDay=0, ._field_Month=0, ._field_Year=0, ._field_Second=0, ._field_Minute=0, ._field_Hour=0};;
	_1747_t._field_Year=(jule::U64)((jule::U64)((jule::U64)((jule::U64)(_1547_remYears + (jule::U64)(4LLU * _1487_qCycles)) + (jule::U64)(100LLU * _1427_cCycles)) + (jule::U64)(400LLU * _1357_qcCycles)) + 100LLU);
	_1747_t._field_Month=(jule::U64)(_1697_months + 2LLU);
	if ((_1747_t._field_Month >= 12LLU)) {
		_1747_t._field_Month-=12LLU;
		(_1747_t._field_Year)++;
	};
	_1747_t._field_Month+=1LLU;
	_1747_t._field_Year+=1900LLU;
	_1747_t._field_Day=(jule::U64)(_1367_remDays + 1LLU);
	_1747_t._field_WeekDay=((jule::U64)(3LLU + _1287_days) % 7LL);
	if ((_1747_t._field_WeekDay < 0LLU)) {
		_1747_t._field_WeekDay+=7LLU;
	};
	_1747_t._field_YearDay=_1647_yDay;
	_1747_t._field_Hour=(_1297_remSecs / 3600LLU);
	_1747_t._field_Minute=(({ jule::U64 __jule_x = _1297_remSecs; jule::U64 __jule_y = 60LLU; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U64)(__jule_x / __jule_y)); }) % 60LL);
	_1747_t._field_Second=(_1297_remSecs % 60LL);
	return _1747_t;;
}








inline jule::Bool _1c899847e_scopeCoder_eq(_1c899847e_scopeCoder *_self_, _1c899847e_scopeCoder _other_) {
	return 
		(_self_->_field_oc == _other_._field_oc);
}

inline jule::Ptr<_1c899847e_scopeCoder> static__1c8998b77_new(jule::Ptr<_1c8a7d92c_ObjectCoder>* _7321_oc) {
	return jule::new_ptr<_1c899847e_scopeCoder>(_1c899847e_scopeCoder{._field_oc=(*(_7321_oc))});;
}



inline void _1cc38c39c_iterHead(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5d3a31a_RangeIter>* _8029_it, jule::Bool* _8041_ref, jule::Str _8052_begin) {
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1c8a7e5ed_addIndent((*(_self_))._field_oc);
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("auto expr = ", 12));
	if ((_1e6a24aa3_Copy && _1c89a18a5_isCopyOptimizable(&((*((*(_8029_it))))._field_Expr)))) {
		(*(_8041_ref))=true;
		{
			auto &_match_expr{ (*((*((*(_8029_it))))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1cc392946:;
				{
					jule::Ptr<_1e5da0bcc_Var> _895_v = (*((*((*(_8029_it))))._field_Expr))._field_Model.unsafe_cast_ptr<_1e5da0bcc_Var>();;
					if ((*(_895_v))._field_Reference) {
						_1c89b3477_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*((*(_8029_it))))._field_Expr))._field_Model);
						goto _match_end_1cc390d73;
					};
					goto _case_begin_1cc390dd9;
				}
			}
			else {
				_case_begin_1cc390dd9:;
				{
					_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
					_1c89b3477_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*((*(_8029_it))))._field_Expr))._field_Model);
					_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				}
			}
			_match_end_1cc390d73:;
		};
	} else {
		_1c89a93c4_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*((*(_8029_it))))._field_Expr))._field_Model);
	};
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("auto it = expr", 14));
	if ((*(_8041_ref))) {
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("begin();\n", 9));
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("auto expr_end = expr", 20));
	if ((*(_8041_ref))) {
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("end();\n", 7));
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	_1c8a7e147_write((*(_self_))._field_oc, _8052_begin);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("if (it != expr_end) {\n", 22));
	_1c8a7e5ed_addIndent((*(_self_))._field_oc);
	_1c8a7e9e9_indent((*(_self_))._field_oc);
}



inline void _1c899934d_rangeIndexIter(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5d3a31a_RangeIter>* _12936_it) {
	_224497295_StrBuilder _1307_sb = static__2244a0b83_New(64LL);;
	static__1c89bce10_iterBegin(&(_1307_sb), static_cast<jule::Uintptr>((*(_12936_it))));
	jule::Str _1323_begin = _2244a1887_Str(&_1307_sb);;
	_2244a1a85_Clear(&_1307_sb);
	static__1c89bd4d7_iterNext(&(_1307_sb), static_cast<jule::Uintptr>((*(_12936_it))));
	jule::Str _1353_next = _2244a1887_Str(&_1307_sb);;
	jule::Bool _1377_ref = false;;
	_1cc38c39c_iterHead(_self_, _12936_it, &(_1377_ref), _1323_begin);
	if (((*((*(_12936_it))))._field_KeyA != nullptr)) {
		_1c8a86083_varInitExpr((*_self_.alloc)._field_oc, &((*((*(_12936_it))))._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1cc39cdb3, jule::Ptr<__jule_anon_1cc39cdb3_ctx>::make(__jule_anon_1cc39cdb3_ctx{._self_=_self_,._1377_ref=_1377_ref}).as<jule::Uintptr>(), __jule_anon_1cc39cdb3_ctx_handler));
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1c8a7e9e9_indent((*(_self_))._field_oc);
	};
	if (((*((*(_12936_it))))._field_KeyB != nullptr)) {
		(*(*((*(_12936_it))))._field_KeyB.alloc)._field_Reference=(_1e6a24aa3_Copy && _1c89a1c6d_isIterCopyOptimizable(&((*((*(_12936_it))))._field_Expr), &((*((*(_12936_it))))._field_KeyB)));
		_1c8a86083_varInitExpr((*(_self_))._field_oc, &((*((*(_12936_it))))._field_KeyB), jule::__new_closure<void>((void*)__jule_anon_1cc3a18bc, jule::Ptr<__jule_anon_1cc3a18bc_ctx>::make(__jule_anon_1cc3a18bc_ctx{._self_=_self_,._12936_it=_12936_it}).as<jule::Uintptr>(), __jule_anon_1cc3a18bc_ctx_handler));
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1c8a7e9e9_indent((*(_self_))._field_oc);
	};
	_1c89a0b4b_scope(_self_, (*((*(_12936_it))))._field_Scope);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	_1c8a7e147_write((*(_self_))._field_oc, _1353_next);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("++it;\n", 6));
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	if (((*((*(_12936_it))))._field_KeyA != nullptr)) {
		static__1c89bcb24_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_12936_it))))._field_KeyA);
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("++;\n", 4));
		_1c8a7e9e9_indent((*(_self_))._field_oc);
	};
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1c8a7e147_write((*(_self_))._field_oc, _1323_begin);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1c8a7e7eb_doneIndent((*(_self_))._field_oc);
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	static__1c89bd1eb_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_12936_it))));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1c8a7e7eb_doneIndent((*(_self_))._field_oc);
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1c8999606_rangeHashmapIter(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5d3a31a_RangeIter>* _19638_it) {
	_224497295_StrBuilder _1977_sb = static__2244a0b83_New(64LL);;
	static__1c89bce10_iterBegin(&(_1977_sb), static_cast<jule::Uintptr>((*(_19638_it))));
	jule::Str _1993_begin = _2244a1887_Str(&_1977_sb);;
	_2244a1a85_Clear(&_1977_sb);
	static__1c89bd4d7_iterNext(&(_1977_sb), static_cast<jule::Uintptr>((*(_19638_it))));
	jule::Str _2023_next = _2244a1887_Str(&_1977_sb);;
	jule::Ptr<_1e5e505a6_Map> _2047__map = _1e5e45a41_Map((*((*((*(_19638_it))))._field_Expr))._field_Kind.ptr());;
	jule::Ptr<_1e5cc5e21_Struct> _2057_s = _1e61560a3_RuntimeFindStruct(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
	jule::Ptr<_1e5cc8c7b_StructIns> _2067_ins = _1e6a0d8d3_FindStructGenericInstance(&(_2057_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5e417ea_TypeKind>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_2047__map))._field_Key; (*it++) = (*_2047__map.alloc)._field_Val; __jule_collection; }));;
	;
	jule::Ptr<_1e5ce3416_FnIns> _2087_f = (*(_1e5cc9d26_FindMethod(_2067_ins.ptr(), jule::Str::lit("iterator", 8), false)))._field_Instances[0LL];;
	jule::Ptr<_1e5cc5e21_Struct> _2107_itDecl = _1e61560a3_RuntimeFindStruct(&((*(*((*(_self_))._field_oc))._field_ir.alloc)._field_Runtime), static_cast<jule::Str>(jule::Str::lit("mapIterator", 11)));;
	jule::Ptr<_1e5cc8c7b_StructIns> _2117_iterator = _1e6a0d8d3_FindStructGenericInstance(&(_2107_itDecl), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5e417ea_TypeKind>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*_2047__map.alloc)._field_Key; (*it++) = (*_2047__map.alloc)._field_Val; __jule_collection; }));;
	jule::Ptr<_1e5ce3416_FnIns> _2127_nextCall = (*(_1e5cc9d26_FindMethod(_2117_iterator.ptr(), jule::Str::lit("next", 4), false)))._field_Instances[0LL];;
	;
	;
	;
	;
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1c8a7e5ed_addIndent((*(_self_))._field_oc);
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	_1c8a91e18_structureIns((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _2117_iterator);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" it = ", 6));
	static__1c89bb89d_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_2087_f));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1c89a93c4_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(*((*(_19638_it))))._field_Expr.alloc)._field_Model);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	_1c8a7e147_write((*(_self_))._field_oc, _1993_begin);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	_1c8a93128_funcInsResult((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), &(_2127_nextCall));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__iterator_result", 17));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	static__1c89bb89d_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_2127_nextCall));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("(&it);\n", 7));
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__iterator_result.__jule_result_arg0", 36));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" != nullptr) {\n", 15));
	_1c8a7e5ed_addIndent((*(_self_))._field_oc);
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	if (((*((*(_19638_it))))._field_KeyA != nullptr)) {
		_1c8a86083_varInitExpr((*(_self_))._field_oc, &((*((*(_19638_it))))._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1cc3c1ea3, jule::Ptr<__jule_anon_1cc3c1ea3_ctx>::make(__jule_anon_1cc3c1ea3_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1cc3c1ea3_ctx_handler));
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1c8a7e9e9_indent((*(_self_))._field_oc);
	};
	if (((*((*(_19638_it))))._field_KeyB != nullptr)) {
		_1c8a86083_varInitExpr((*(_self_))._field_oc, &((*((*(_19638_it))))._field_KeyB), jule::__new_closure<void>((void*)__jule_anon_1cc3c448e, jule::Ptr<__jule_anon_1cc3c448e_ctx>::make(__jule_anon_1cc3c448e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1cc3c448e_ctx_handler));
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1c8a7e9e9_indent((*(_self_))._field_oc);
	};
	_1c89a0b4b_scope(_self_, (*((*(_19638_it))))._field_Scope);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	_1c8a7e147_write((*(_self_))._field_oc, _2023_next);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1c8a7e147_write((*(_self_))._field_oc, _1993_begin);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1c8a7e7eb_doneIndent((*(_self_))._field_oc);
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	static__1c89bd1eb_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_19638_it))));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1c8a7e7eb_doneIndent((*(_self_))._field_oc);
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1c89998ae_strRuneIter(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e603941a_StrRuneIter> _27932_it) {
	_224497295_StrBuilder _2807_sb = static__2244a0b83_New(64LL);;
	static__1c89bce10_iterBegin(&(_2807_sb), static_cast<jule::Uintptr>((*(_27932_it))._field_Base));
	jule::Str _2823_begin = _2244a1887_Str(&_2807_sb);;
	_2244a1a85_Clear(&_2807_sb);
	static__1c89bd4d7_iterNext(&(_2807_sb), static_cast<jule::Uintptr>((*_27932_it.alloc)._field_Base));
	jule::Str _2853_next = _2244a1887_Str(&_2807_sb);;
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1c8a7e5ed_addIndent((*(_self_))._field_oc);
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	jule::Bool _2917_ref = false;;
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("auto expr = ", 12));
	if ((_1e6a24aa3_Copy && _1c89a18a5_isCopyOptimizable(&((*_27932_it.alloc)._field_Expr)))) {
		_2917_ref=true;
		{
			auto &_match_expr{ (*((*(_27932_it))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1cc3d3602:;
				{
					jule::Ptr<_1e5da0bcc_Var> _2975_v = (*((*(_27932_it))._field_Expr))._field_Model.unsafe_cast_ptr<_1e5da0bcc_Var>();;
					if ((*(_2975_v))._field_Reference) {
						_1c89b3477_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_27932_it.alloc)._field_Expr))._field_Model);
						goto _match_end_1cc3d1a2e;
					};
					goto _case_begin_1cc3d1a95;
				}
			}
			else {
				_case_begin_1cc3d1a95:;
				{
					_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
					_1c89b3477_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_27932_it.alloc)._field_Expr))._field_Model);
					_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				}
			}
			_match_end_1cc3d1a2e:;
		};
	} else {
		_1c89a93c4_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_27932_it.alloc)._field_Expr))._field_Model);
	};
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("jule::U8", 8));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" *it = expr", 11));
	if (_2917_ref) {
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("begin();\n", 9));
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("const ", 6));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("jule::U8", 8));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" *end = it + expr", 17));
	if (_2917_ref) {
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("len();\n", 7));
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	if (((*((*_27932_it.alloc)._field_Base))._field_KeyA != nullptr)) {
		_1c8a86083_varInitExpr((*(_self_))._field_oc, &((*(*(_27932_it))._field_Base.alloc)._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1cc3dd453, jule::Ptr<__jule_anon_1cc3dd453_ctx>::make(__jule_anon_1cc3dd453_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1cc3dd453_ctx_handler));
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1c8a7e9e9_indent((*(_self_))._field_oc);
	};
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("jule::Int", 9));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" len;\n", 6));
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	if (((*(*(_27932_it))._field_Base.alloc)._field_KeyB != nullptr)) {
		_1c8a86083_varInitExpr((*(_self_))._field_oc, &((*(*(_27932_it))._field_Base.alloc)._field_KeyB), nullptr);
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1c8a7e9e9_indent((*(_self_))._field_oc);
	};
	_1c8a7e147_write((*(_self_))._field_oc, _2823_begin);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__jule_runeStep(it, end - it, ", 30));
	if (((*(*(_27932_it))._field_Base.alloc)._field_KeyB != nullptr)) {
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("&", 1));
		static__1c89bcb24_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_27932_it))._field_Base.alloc)._field_KeyB);
	} else {
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
	};
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(", &len);\n", 9));
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("if (it < end) {\n", 16));
	_1c8a7e5ed_addIndent((*(_self_))._field_oc);
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	_1c89a0b4b_scope(_self_, (*(*(_27932_it))._field_Base.alloc)._field_Scope);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	_1c8a7e147_write((*(_self_))._field_oc, _2853_next);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("it += len;\n", 11));
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	if (((*(*(_27932_it))._field_Base.alloc)._field_KeyA != nullptr)) {
		static__1c89bcb24_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_27932_it))._field_Base.alloc)._field_KeyA);
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("++;\n", 4));
		_1c8a7e9e9_indent((*(_self_))._field_oc);
	};
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1c8a7e147_write((*(_self_))._field_oc, _2823_begin);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1c8a7e7eb_doneIndent((*(_self_))._field_oc);
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1c8a7e7eb_doneIndent((*(_self_))._field_oc);
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1c8999b67_ifCase(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5d38901_If> _39127_i) {
	if (((*(_39127_i))._field_Expr != nullptr)) {
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		_1c89a93c4_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_39127_i.alloc)._field_Expr);
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(") ", 2));
	};
	_1c89a0b4b_scope(_self_, (*_39127_i.alloc)._field_Scope);
}



inline void _1c8999e20_conditional(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5d3911b_Conditional> _40032_c) {
	jule::Bool _4017_writed = false;;
	{
		auto expr = &((*(_40032_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc4039b8:;
		if (it != expr_end) {
			jule::Ptr<_1e5d38901_If> _40215_elif = *it;
			{
				if ((_40215_elif == nullptr)) {
					goto _iter_next_1cc4039b8;
				};
				if (_4017_writed) {
					_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" else ", 6));
				};
				_4017_writed=true;
				_1c8999b67_ifCase(_self_, _40215_elif);
			}
			_iter_next_1cc4039b8:;
			++it;
			goto _iter_begin_1cc4039b8;
		}
		_iter_end_1cc4039b8:;
	};
	if (((*_40032_c.alloc)._field_Default != nullptr)) {
		if (_4017_writed) {
			_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" else ", 6));
		};
		_1c89a0b4b_scope(_self_, (*(*(_40032_c))._field_Default.alloc)._field_Scope);
	};
}



inline void _1c899a1c8_infIter(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5d39418_InfIter> _42028_it) {
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("for (;;) {\n", 11));
	_1c8a7e5ed_addIndent((*(_self_))._field_oc);
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	_1c89a0b4b_scope(_self_, (*(_42028_it))._field_Scope);
	_1c8a7e7eb_doneIndent((*(_self_))._field_oc);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	static__1c89bd4d7_iterNext(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_42028_it));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	static__1c89bd1eb_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_42028_it));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
}



inline void _1c899a481_whileIter(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5d398be_WhileIter> _43730_it) {
	if ((((*(_43730_it))._field_Expr != nullptr) && ((*_43730_it.alloc)._field_Next == nullptr))) {
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("while (", 7));
		_1c89a93c4_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_43730_it.alloc)._field_Expr);
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(") {", 3));
	} else {
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("for (; ", 7));
		if (((*(_43730_it))._field_Expr != nullptr)) {
			_1c89a93c4_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_43730_it.alloc)._field_Expr);
		};
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
		if (((*_43730_it.alloc)._field_Next != nullptr)) {
			_1c89a05da_st(_self_, (*_43730_it.alloc)._field_Next);
		};
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(") {", 3));
	};
	if (((*((*(_43730_it))._field_Scope))._field_Stmts.len() == 0LL)) {
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		return;;
	};
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1c8a7e5ed_addIndent((*(_self_))._field_oc);
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	_1c89a0b4b_scope(_self_, (*_43730_it.alloc)._field_Scope);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1c8a7e7eb_doneIndent((*(_self_))._field_oc);
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	static__1c89bd4d7_iterNext(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_43730_it));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	static__1c89bd1eb_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_43730_it));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
}



inline void _1c899a739_rangeIter(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5d3a31a_RangeIter> _47630_it) {
	{
		
		if ((_1e5e45007_Slc((*((*(_47630_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cc4193b3:;
			{
				_1c899934d_rangeIndexIter(_self_, &(_47630_it));
			}
		}
		else if ((_1e5e44c71_Arr((*((*(_47630_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cc419061:;
			{
				_1c899934d_rangeIndexIter(_self_, &(_47630_it));
			}
		}
		else if ((_1e5e45a41_Map((*((*(_47630_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cc4190c7:;
			{
				_1c8999606_rangeHashmapIter(_self_, &(_47630_it));
			}
		}
		else {
			_case_begin_1cc418eea:;
			{
				_1c899934d_rangeIndexIter(_self_, &(_47630_it));
			}
		}
		_match_end_1cc418dda:;
	};
}



inline void _1c899a9e2_cont(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5d3a6a0_ContSt> _48921_c) {
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1c89bd4d7_iterNext(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_48921_c))._field_It);
}



inline void _1c899ac9a_label(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5d3b030_Label> _49422_l) {
	static__1c89bd7c3_label(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(_49422_l));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(":", 1));
}



inline void _1c899b053_gotoSt(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5d3b690_GotoSt> _49923_gt) {
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1c89bd7c3_label(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_49923_gt))._field_Label));
}



inline void _1c899b30b_postfix(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5d3ba69_Postfix> _50428_p) {
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1c89a93c4_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_50428_p))._field_Expr);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	_1c8a7e147_write((*(_self_))._field_oc, (*_50428_p.alloc)._field_Op);
}



inline void _1c899b5b4_assignLeft(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Any* _51132_model) {
	{
		auto &_match_expr{ (*(_51132_model)) };
		
		if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1cc4233cd:;
			{
				jule::Ptr<_1e5cd56b1_IndexingExprModel> _5148_iem = (*(_51132_model)).cast_ptr<_1e5cd56b1_IndexingExprModel>(&__jule_any_type52);;
				jule::Ptr<_1e5e505a6_Map> _5154__map = _1e5e45a41_Map((*((*(_5148_iem))._field_Expr))._field_Kind.ptr());;
				if ((_5154__map == nullptr)) {
					goto _match_end_1cc423367;
				};
				jule::Ptr<_1e5cc5e21_Struct> _5218_s = _1e61560a3_RuntimeFindStruct(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
				jule::Ptr<_1e5cc8c7b_StructIns> _5228_ins = _1e6a0d8d3_FindStructGenericInstance(&(_5218_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5e417ea_TypeKind>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_5154__map))._field_Key; (*it++) = (*(_5154__map))._field_Val; __jule_collection; }));;
				;
				jule::Ptr<_1e5ce3416_FnIns> _5248_f = (*(_1e5cc9d26_FindMethod(_5228_ins.ptr(), jule::Str::lit("set", 3), false)))._field_Instances[0LL];;
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				static__1c89bb89d_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_5248_f));
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
				_1c89a93c4_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(*(_5148_iem))._field_Expr.alloc)._field_Model);
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(").ptr(", 6));
				if ((!(_22586c4e3_Production))) {
					_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1c8a817cb_locInfo((*(_self_))._field_oc, &((*_5148_iem.alloc)._field_Token));
					_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
				};
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
				_1c89a93c4_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*_5148_iem.alloc)._field_Index))._field_Model);
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		_match_end_1cc423367:;
	};
	_1c89a93c4_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_51132_model)));
}



inline void _1c899b86c_shl(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5d3c020_Assign> _54324_a) {
	_1c899b5b4_assignLeft(_self_, &((*((*(_54324_a))._field_Left))._field_Model));
	_1c8a7e147_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
	_1c89a7b75_shl((*(*(_self_))._field_oc.alloc)._field_ec, &((*_54324_a.alloc)._field_Left), &((*_54324_a.alloc)._field_Right));
}



inline void _1c899bb25_shr(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5d3c020_Assign> _54924_a) {
	_1c899b5b4_assignLeft(_self_, &((*((*(_54924_a))._field_Left))._field_Model));
	_1c8a7e147_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
	_1c89a7ed8_shr((*(*(_self_))._field_oc.alloc)._field_ec, &((*_54924_a.alloc)._field_Left), &((*_54924_a.alloc)._field_Right));
}



inline void _1c899bdcd_divByZeroAssign(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5d3c020_Assign> _55536_a) {
	_1c899b5b4_assignLeft(_self_, &((*((*(_55536_a))._field_Left))._field_Model));
	_1c8a7e147_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
	_1c89a6d61_divByZeroBinary((*(*(_self_))._field_oc.alloc)._field_ec, &((*_55536_a.alloc)._field_Op), &((*_55536_a.alloc)._field_Left), &((*_55536_a.alloc)._field_Right));
}



inline void _1c899c3a6_operatorOverloadingAssign(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5cc8c7b_StructIns>* _56147_s, jule::Ptr<_1e5cd2856_OperandExprModel>* _56173_l, jule::Ptr<_1e5cd2856_OperandExprModel>* _5628_r, jule::U64 _56236_op) {
	;
	jule::Ptr<_1e5ce3416_FnIns> _5647_f = _1e6a0d0ca_FindOperator(_56147_s, _56236_op, false);;
	if ((_5647_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("binary operator overloading is not exist, this is an implementation mistake", 75) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:566:4"));;
	};
	static__1c89bb89d_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_5647_f));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("(&", 2));
	_1c899b5b4_assignLeft(_self_, &((*((*(_56173_l))))._field_Model));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1c89a93c4_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_5628_r))))._field_Model);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1c899c65e_assign(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5d3c020_Assign> _57627_a) {
	{
		auto &_match_expr{ (*((*(_57627_a))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(43LLU) || _match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1cc438d83:;
			{
				if ((_22586c2a1_Safety && (_1e5e45524_Struct((*((*(_57627_a))._field_Left))._field_Kind.ptr()) == nullptr))) {
					_1c899bdcd_divByZeroAssign(_self_, _57627_a);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1cc438e0a:;
			{
				if ((_1e5e45524_Struct((*((*(_57627_a))._field_Left))._field_Kind.ptr()) == nullptr)) {
					_1c899b86c_shl(_self_, _57627_a);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1cc438e71:;
			{
				if ((_1e5e45524_Struct((*((*(_57627_a))._field_Left))._field_Kind.ptr()) == nullptr)) {
					_1c899bb25_shr(_self_, _57627_a);
					return;;
				};
			}
		}
		_match_end_1cc438cb7:;
	};
	if ((((*((*(_57627_a))._field_Op))._field_Id != static_cast<jule::U64>(71LLU)) && (_1e5e45524_Struct((*((*_57627_a.alloc)._field_Left))._field_Kind.ptr()) != nullptr))) {
		jule::Ptr<_1e5cc8c7b_StructIns> _5998_s = _1e5e45524_Struct((*((*(_57627_a))._field_Left))._field_Kind);;
		_1c899c3a6_operatorOverloadingAssign(_self_, &(_5998_s), &((*_57627_a.alloc)._field_Left), &((*_57627_a.alloc)._field_Right), (*(*(_57627_a))._field_Op.alloc)._field_Id);
		return;;
	};
	_1c899b5b4_assignLeft(_self_, &((*(*(_57627_a))._field_Left.alloc)._field_Model));
	_1c8a7e147_write((*_self_.alloc)._field_oc, (*(*(_57627_a))._field_Op.alloc)._field_Kind);
	_1c89a93c4_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_57627_a.alloc)._field_Right))._field_Model);
}



inline void _1c899c917_mapLookupAssign(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5d3c4c6_MultiAssign>* _60937_a) {
	jule::Ptr<_1e5cd56b1_IndexingExprModel> _6117_iem = (*((*(_60937_a))))._field_Right.cast_ptr<_1e5cd56b1_IndexingExprModel>(&__jule_any_type52);;
	jule::Ptr<_1e5e505a6_Map> _6127__map = _1e5e45a41_Map((*((*(_6117_iem))._field_Expr))._field_Kind.ptr());;
	jule::Ptr<_1e5cc5e21_Struct> _6147_s = _1e61560a3_RuntimeFindStruct(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
	jule::Ptr<_1e5cc8c7b_StructIns> _6157_ins = _1e6a0d8d3_FindStructGenericInstance(&(_6147_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5e417ea_TypeKind>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_6127__map))._field_Key; (*it++) = (*_6127__map.alloc)._field_Val; __jule_collection; }));;
	;
	jule::Ptr<_1e5ce3416_FnIns> _6177_f = (*(_1e5cc9d26_FindMethod(_6157_ins.ptr(), jule::Str::lit("lookup", 6), false)))._field_Instances[0LL];;
	static__1c89bb89d_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_6177_f));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1c899b5b4_assignLeft(_self_, &((*(*(_6117_iem))._field_Expr.alloc)._field_Model));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1c89a93c4_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_6117_iem.alloc)._field_Index))._field_Model);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_60937_a))))._field_Left[0LL] != nullptr)) {
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
		_1c89a93c4_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_60937_a))))._field_Left[0LL]))._field_Model);
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
	} else {
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("nullptr, ", 9));
	};
	if (((*((*(_60937_a))))._field_Left[1LL] != nullptr)) {
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
		_1c89a93c4_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_60937_a))))._field_Left[1LL]))._field_Model);
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	} else {
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
	};
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1c899cbc0_multiAssignTup(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5d3c4c6_MultiAssign>* _64236_a) {
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1c8a7e5ed_addIndent((*(_self_))._field_oc);
	jule::Ptr<_1e5cd843e_TupleExprModel> _6467_tup = (*((*(_64236_a))))._field_Right.cast_ptr<_1e5cd843e_TupleExprModel>(&__jule_any_type83);;
	{
		auto expr = &((*(_6467_tup))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc44e89e:;
		if (it != expr_end) {
			jule::I64 _6488_i = it - expr->begin();
			jule::Ptr<_1e5e08c13_Data> _64815_r = *it;
			{
				_1c8a7e9e9_indent((*(_self_))._field_oc);
				jule::Ptr<_1e5e08c13_Data> _6508_l = (*((*(_64236_a))))._field_Left[_6488_i];;
				if ((_6508_l != nullptr)) {
					{
						auto &_match_expr{ (*(_6508_l))._field_Model };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1cc452929:;
							{
								jule::Ptr<_1e5da0bcc_Var> _65410_v = (*(_6508_l))._field_Model.unsafe_cast_ptr<_1e5da0bcc_Var>();;
								if (((*(_65410_v))._field_Reference && (!(_1e5da10d9_IsInitialized(_65410_v))))) {
									static__1c89bcb24_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), _65410_v);
									_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" = &(", 5));
									_1c89a93c4_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_64815_r))._field_Model);
									_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
									(*((*(_64236_a))))._field_Left[_6488_i]=nullptr;
									goto _iter_next_1cc44e89e;
								};
							}
						}
						_match_end_1cc4528b3:;
					};
					_1c8a93b62_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_6508_l.alloc)._field_Kind);
					_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
					static__1c89bad75_toOut(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1c8997c20_assignArgName, static_cast<jule::Uintptr>(_6488_i));
					_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				};
				_1c89a93c4_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*_64815_r.alloc)._field_Model);
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1cc44e89e:;
			++it;
			_6488_i++;
			goto _iter_begin_1cc44e89e;
		}
		_iter_end_1cc44e89e:;
	};
	{
		auto expr = &((*((*(_64236_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc45ddb9:;
		if (it != expr_end) {
			jule::I64 _6758_i = it - expr->begin();
			jule::Ptr<_1e5e08c13_Data> _67515_l = *it;
			{
				if ((_67515_l == nullptr)) {
					goto _iter_next_1cc45ddb9;
				};
				_1c8a7e9e9_indent((*(_self_))._field_oc);
				_1c899b5b4_assignLeft(_self_, &((*(_67515_l))._field_Model));
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				static__1c89bad75_toOut(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1c8997c20_assignArgName, static_cast<jule::Uintptr>(_6758_i));
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1cc45ddb9:;
			++it;
			_6758_i++;
			goto _iter_begin_1cc45ddb9;
		}
		_iter_end_1cc45ddb9:;
	};
	_1c8a7e7eb_doneIndent((*(_self_))._field_oc);
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1c899ce78_multiAssignFn(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5d3c4c6_MultiAssign>* _69135_a) {
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1c8a7e5ed_addIndent((*(_self_))._field_oc);
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	jule::Ptr<_1e5cd4d31_FnCallExprModel> _6967_f = (*((*(_69135_a))))._field_Right.cast_ptr<_1e5cd4d31_FnCallExprModel>(&__jule_any_type40);;
	_1c8a98b12_codeMut1((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_6967_f))._field_Func))._field_Result));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" __jule_assign_result = ", 24));
	_1c89a93c4_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_69135_a))))._field_Right);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	jule::Ptr<_1e5e4ea06_Tuple> _7027_tup = _1e5e45cc7_Tup((*(*(_6967_f))._field_Func.alloc)._field_Result.ptr());;
	{
		auto expr = &((*((*(_69135_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc467a60:;
		if (it != expr_end) {
			jule::I64 _7038_i = it - expr->begin();
			jule::Ptr<_1e5e08c13_Data> _70315_l = *it;
			{
				if ((_70315_l == nullptr)) {
					goto _iter_next_1cc467a60;
				};
				;
				_1c8a7e9e9_indent((*(_self_))._field_oc);
				_1c899b5b4_assignLeft(_self_, &((*(_70315_l))._field_Model));
				{
					
					if (_1e5e42037_Equal((*(_7027_tup))._field_Types[_7038_i], (*(_70315_l))._field_Kind)) {
						_case_begin_1cc472c46:;
						{
							_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" = __jule_assign_result.__jule_result_arg", 41));
							_1c8a7e147_write((*(_self_))._field_oc, _1e2195e4e_Itoa(_7038_i));
						}
					}
					else if (_1e6a09b54_IsAny(&((*(_70315_l))._field_Kind))) {
						_case_begin_1cc46eb55:;
						{
							_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" = jule::Any(__jule_assign_result.__jule_result_arg", 51));
							_1c8a7e147_write((*(_self_))._field_oc, _1e2195e4e_Itoa(_7038_i));
							_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
							_1c8a7e147_write((*(_self_))._field_oc, _1e2195e4e_Itoa(_1c8a80b4e_pushAnyType((*(_self_))._field_oc, (*(_7027_tup))._field_Types[_7038_i])));
							_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
						}
					}
					else {
						_case_begin_1cc468d4c:;
						{
							if ((_1e5e457aa_Trait((*(_7027_tup))._field_Types[_7038_i].ptr()) != nullptr)) {
								_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
								jule::Ptr<_1e5d03db6_Trait> _72410_t1 = _1e5e457aa_Trait((*(_70315_l))._field_Kind.ptr());;
								jule::Ptr<_1e5d03db6_Trait> _72510_t2 = _1e5e457aa_Trait((*(_7027_tup))._field_Types[_7038_i].ptr());;
								_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__jule_assign_result.__jule_result_arg", 38));
								_1c8a7e147_write((*(_self_))._field_oc, _1e2195e4e_Itoa(_7038_i));
								_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(".map(", 5));
								_1c8a81523_pushAndWriteMaskMapper((*(_self_))._field_oc, _72410_t1, _72510_t2);
								_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								goto _match_end_1cc469c4e;
							};
							jule::Ptr<_1e5d03db6_Trait> _7335_t = _1e5e457aa_Trait((*(_70315_l))._field_Kind);;
							_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" = jule::Trait(__jule_assign_result.__jule_result_arg", 53));
							_1c8a7e147_write((*(_self_))._field_oc, _1e2195e4e_Itoa(_7038_i));
							_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(", (jule::Trait::Type*)&", 23));
							static__1c89bbb89_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _7335_t);
							_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
							_1c8a7e147_write((*(_self_))._field_oc, _1e2195e4e_Itoa(_1e6a0cb9b_FindTraitTypeOffset(_7335_t, (*(_7027_tup))._field_Types[_7038_i])));
							_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
						}
					}
					_match_end_1cc469c4e:;
				};
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1cc467a60:;
			++it;
			_7038_i++;
			goto _iter_begin_1cc467a60;
		}
		_iter_end_1cc467a60:;
	};
	_1c8a7e7eb_doneIndent((*(_self_))._field_oc);
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1c899d231_multiAssign(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5d3c4c6_MultiAssign> _75032_a) {
	{
		auto expr = &((*(_75032_a))._field_Decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc4786a8:;
		if (it != expr_end) {
			jule::Ptr<_1e5da0bcc_Var> _75315_d = *it;
			{
				_1c8a86083_varInitExpr((*(_self_))._field_oc, &(_75315_d), nullptr);
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
				_1c8a7e9e9_indent((*(_self_))._field_oc);
			}
			_iter_next_1cc4786a8:;
			++it;
			goto _iter_begin_1cc4786a8;
		}
		_iter_end_1cc4786a8:;
	};
	{
		auto &_match_expr{ (*(_75032_a))._field_Right };
		
		if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1cc478dc3:;
			{
				_1c899c917_mapLookupAssign(_self_, &(_75032_a));
				return;;
			}
		}
		_match_end_1cc478d5c:;
	};
	{
		auto &_match_expr{ (*(_75032_a))._field_Right };
		
		if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1cc478e5b:;
			{
				_1c899cbc0_multiAssignTup(_self_, &(_75032_a));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1cc47a91e:;
			{
				_1c899ce78_multiAssignFn(_self_, &(_75032_a));
			}
		}
		else {
			_case_begin_1cc47a8a8:;
			{
				__jule_panic_s(jule::Str::lit("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:772:4"));;
			}
		}
		_match_end_1cc47a842:;
	};
}



inline jule::Fn<void> _1c899d572_matchExpr(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5d3cc13_Match> _77630_m) {
	if ((!(_1e5e0964d_IsConst((*(_77630_m))._field_Expr.ptr())))) {
		return jule::__new_closure<void>((void*)__jule_anon_1cc47ce71, jule::Ptr<__jule_anon_1cc47ce71_ctx>::make(__jule_anon_1cc47ce71_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1cc47ce71_ctx_handler);;
	};
	if (((!(_1e21a89bc_IsBool((*(*(_77630_m))._field_Expr.alloc)._field_Constant.ptr()))) || (!(_1e21a63c1_ReadBool((*((*(_77630_m))._field_Expr))._field_Constant))))) {
		return jule::__new_closure<void>((void*)__jule_anon_1cc47e2a2, jule::Ptr<__jule_anon_1cc47e2a2_ctx>::make(__jule_anon_1cc47e2a2_ctx{._self_=_self_,._77630_m=_77630_m}).as<jule::Uintptr>(), __jule_anon_1cc47e2a2_ctx_handler);;
	};
	return nullptr;;
}



inline void _1c899d8d5_case(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5d3cc13_Match> _78625_m, jule::Ptr<_1e5d3d73b_Case> _78640_c) {
	if ((((*(_78640_c))._field_Exprs.len() != 0LL) && (!((*(_78625_m))._field_Comptime)))) {
		if ((((*_78625_m.alloc)._field_Cases.len() > 0LL) && ((*(_78625_m))._field_Cases[0LL] == _78640_c))) {
			_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		} else {
			_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("else if (", 9));
		};
		{
			auto expr = &((*_78640_c.alloc)._field_Exprs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1cc48353c:;
			if (it != expr_end) {
				jule::I64 _7939_i = it - expr->begin();
				jule::Ptr<_1e5e08c13_Data> _79316_expr = *it;
				{
					{
						
						if ((!((*_78625_m.alloc)._field_TypeMatch))) {
							_case_begin_1cc48b06c:;
							{
								jule::Fn<void> _7966_caseExpr = _1c899d572_matchExpr(_self_, _78625_m);;
								if (_1e5e0998e_GoodOperand((*_78625_m.alloc)._field_Expr.ptr(), &(_79316_expr))) {
									if ((_7966_caseExpr != nullptr)) {
										_7966_caseExpr();
										_1c8a7e147_write((*_self_.alloc)._field_oc, jule::Str::lit(" == ", 4));
									};
									_1c89a93c4_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_79316_expr))._field_Model);
								} else {
									_1c89a93c4_possibleRefExpr((*((*_self_.alloc)._field_oc))._field_ec, (*(_79316_expr))._field_Model);
									if ((_7966_caseExpr != nullptr)) {
										_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" == ", 4));
										_7966_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_1cc48410e:;
							{
								_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("_match_expr", 11));
								jule::Ptr<_1e5e417ea_TypeKind> _81210_tk = (*(_79316_expr))._field_Model.cast_ptr<_1e5e417ea_TypeKind>(&__jule_any_type86);;
								if ((_1e5e457aa_Trait((*((*_78625_m.alloc)._field_Expr))._field_Kind.ptr()) != nullptr)) {
									_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(".type_is(", 9));
									_1c89a56bc_boolean((*(*(_self_))._field_oc.alloc)._field_ec, (_1e5e44237_Sptr((*(_79316_expr))._field_Kind) != nullptr));
									_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(", (const jule::Trait::Type*)&", 29));
									static__1c89bbb89_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1e5e457aa_Trait((*((*(_78625_m))._field_Expr))._field_Kind));
									_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
									_1c8a7e147_write((*(_self_))._field_oc, _1e2195e4e_Itoa(_1e6a0cb9b_FindTraitTypeOffset(_1e5e457aa_Trait((*((*(_78625_m))._field_Expr))._field_Kind), (*_79316_expr.alloc)._field_Kind)));
									_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								} else {
									jule::I64 _8227_j = _1c8a80b4e_pushAnyType((*(_self_))._field_oc, _81210_tk);;
									_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(".type == &__jule_any_type", 25));
									_1c8a7e147_write((*(_self_))._field_oc, _1e2195e4e_Itoa(_8227_j));
								};
							}
						}
						_match_end_1cc483eee:;
					};
					if ((((*_78640_c.alloc)._field_Exprs.len() - _7939_i) > 1LL)) {
						_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" || ", 4));
					};
				}
				_iter_next_1cc48353c:;
				++it;
				_7939_i++;
				goto _iter_begin_1cc48353c;
			}
			_iter_end_1cc48353c:;
		};
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(") ", 2));
	} else if ((((*(_78625_m))._field_Default == _78640_c) && ((*_78625_m.alloc)._field_Cases.len() != 0LL))) {
		_1c8a7e9e9_indent((*(_self_))._field_oc);
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("else ", 5));
	};
	_1c8a7e5ed_addIndent((*(_self_))._field_oc);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	static__1c89bdd9a_caseBegin(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_78640_c));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	if (((*((*(_78640_c))._field_Scope))._field_Stmts.len() > 0LL)) {
		_1c8a7e9e9_indent((*(_self_))._field_oc);
		_1c89a0b4b_scope(_self_, (*_78640_c.alloc)._field_Scope);
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	};
	_1c8a7e7eb_doneIndent((*(_self_))._field_oc);
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1c899db8d_matchSt(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5d3cc13_Match> _85628_m) {
	if ((((*(_85628_m))._field_Cases.len() == 0LL) && ((*_85628_m.alloc)._field_Default == nullptr))) {
		return;;
	};
	if (((*_85628_m.alloc)._field_Comptime && (((*_85628_m.alloc)._field_Default == nullptr) || ((*((*((*_85628_m.alloc)._field_Default))._field_Scope))._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1c8a7e5ed_addIndent((*(_self_))._field_oc);
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	if (((!((*_85628_m.alloc)._field_Comptime)) && (!(_1e5e0964d_IsConst((*_85628_m.alloc)._field_Expr.ptr()))))) {
		if ((_1e6a24aa3_Copy && _1c89a18a5_isCopyOptimizable(&((*_85628_m.alloc)._field_Expr)))) {
			_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("auto &_match_expr{ ", 19));
		} else {
			_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("auto _match_expr{ ", 18));
		};
		_1c89a93c4_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(*(_85628_m))._field_Expr.alloc)._field_Model);
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" };\n", 4));
		_1c8a7e9e9_indent((*(_self_))._field_oc);
	};
	if (((*_85628_m.alloc)._field_Cases.len() > 0LL)) {
		{
			auto expr = &((*_85628_m.alloc)._field_Cases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1cc49e8aa:;
			if (it != expr_end) {
				jule::Ptr<_1e5d3d73b_Case> _88416_c = *it;
				{
					if ((_88416_c == nullptr)) {
						goto _iter_next_1cc49e8aa;
					};
					_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
					_1c8a7e9e9_indent((*(_self_))._field_oc);
					_1c899d8d5_case(_self_, _85628_m, _88416_c);
				}
				_iter_next_1cc49e8aa:;
				++it;
				goto _iter_begin_1cc49e8aa;
			}
			_iter_end_1cc49e8aa:;
		};
	};
	if (((*_85628_m.alloc)._field_Default != nullptr)) {
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1c899d8d5_case(_self_, _85628_m, (*_85628_m.alloc)._field_Default);
	};
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	static__1c89bdaae_matchEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_85628_m));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1c8a7e7eb_doneIndent((*(_self_))._field_oc);
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1c899de46_fallSt(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5d3de34_FallSt> _91123_f) {
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1c89bdd9a_caseBegin(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_91123_f))._field_DestCase);
}



inline void _1c899e1ee_breakSt(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5d3aa79_BreakSt> _91624_b) {
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	if (((*(_91624_b))._field_It != 0LLU)) {
		static__1c89bd1eb_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*_91624_b.alloc)._field_It);
	} else {
		static__1c89bdaae_matchEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_91624_b))._field_Mtch);
	};
}



inline void _1c899e4a7_setResult(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5d3e2ca_RetSt> _92530_r) {
	if (((*((*((*((*(_92530_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 1LL)) {
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result = ", 21));
		_1c89a93c4_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_92530_r.alloc)._field_Expr);
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		_1c8a7e9e9_indent((*(_self_))._field_oc);
		return;;
	};
	{
		auto &_match_expr{ (*(_92530_r))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1cc4a973e:;
			{
				jule::Slice<jule::Ptr<_1e5e08c13_Data>> _9358_datas = (*((*(_92530_r))._field_Expr.unsafe_cast_ptr<_1e5cd843e_TupleExprModel>()))._field_Datas;;
				{
					auto expr = &(_9358_datas);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cc4ad424:;
					if (it != expr_end) {
						jule::I64 _9368_i = it - expr->begin();
						jule::Ptr<_1e5e08c13_Data> _93611_data = *it;
						{
							_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
							_1c8a7e147_write((*(_self_))._field_oc, _1e2195e4e_Itoa(_9368_i));
							_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
							_1c89a93c4_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_93611_data))._field_Model);
							_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
							_1c8a7e9e9_indent((*(_self_))._field_oc);
						}
						_iter_next_1cc4ad424:;
						++it;
						_9368_i++;
						goto _iter_begin_1cc4ad424;
					}
					_iter_end_1cc4ad424:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1cc4ac3bd:;
			{
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result = std::move(", 31));
				_1c89b3477_model((*((*(_self_))._field_oc))._field_ec, (*_92530_r.alloc)._field_Expr);
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
			}
		}
		else {
			_case_begin_1cc4abed3:;
			{
				__jule_panic_s(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:949:4"));;
			}
		}
		_match_end_1cc4abe6c:;
	};
}



inline void _1c899e760_retSt(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5d3e2ca_RetSt> _95326_r) {
	if (_1e5ce080e_IsVoid((*((*(_95326_r))._field_Func))._field_Decl.ptr())) {
		if ((*(*((*(_95326_r))._field_Func))._field_Decl.alloc)._field_Exceptional) {
			_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("return jule::VoidExceptional{};", 31));
			return;;
		};
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("return;", 7));
		return;;
	} else if (((*((*((*((*(_95326_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 0LL)) {
		if ((*(*((*(_95326_r))._field_Func))._field_Decl.alloc)._field_Exceptional) {
			_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
			_1c8a93b62_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_95326_r))._field_Func.alloc)._field_Result);
			_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(">{.result=", 10));
			_1c89a93c4_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_95326_r.alloc)._field_Expr);
			_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("};", 2));
		} else {
			_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
			_1c89a93c4_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_95326_r.alloc)._field_Expr);
			_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
		};
		return;;
	};
	if (((*(_95326_r))._field_Expr != nullptr)) {
		_1c899e4a7_setResult(_self_, _95326_r);
	};
	if ((*((*((*_95326_r.alloc)._field_Func))._field_Decl))._field_Exceptional) {
		_1c8a7e147_write((*_self_.alloc)._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
		_1c8a98b12_codeMut1((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), &((*(*(_95326_r))._field_Func.alloc)._field_Result));
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(">{.result=__jule_func_result};", 30));
	} else {
		_1c8a7e147_write((*_self_.alloc)._field_oc, jule::Str::lit("return __jule_func_result;", 26));
	};
}



inline void _1c899ea18_var(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5da0bcc_Var> _98924_v) {
	if ((!((*(_98924_v))._field_Constant))) {
		_1c8a8633b_var((*(_self_))._field_oc, _98924_v);
	};
}



inline void _1c899ecc1_mutSlicing(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e603810b_MutSlicingExprModel> _99531_m) {
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1c89a93c4_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_99531_m))._field_Expr);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(").mut_slice(", 12));
	if ((!(_22586c4e3_Production))) {
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1c8a817cb_locInfo((*(_self_))._field_oc, &((*_99531_m.alloc)._field_Token));
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
	};
	_1c89a93c4_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*_99531_m.alloc)._field_Left);
	if (((*_99531_m.alloc)._field_Right != nullptr)) {
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1c89a93c4_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*_99531_m.alloc)._field_Right);
	};
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
}



inline void _1c89a0079_swap(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e6036da7_SwapExprModel> _101225_m) {
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("std::swap(", 10));
	_1c89a93c4_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_101225_m))._field_Left))._field_Model);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1c89a93c4_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*_101225_m.alloc)._field_Right))._field_Model);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1c89a0332_exceptionalForwarding(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e6036a22_ExceptionalForwardingExprModel> _102042_m) {
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
	_1c89aacee_pureFuncCall((*(*(_self_))._field_oc.alloc)._field_ec, &((*(_102042_m))._field_Expr));
}



inline void _1c89a05da_st(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Any _102623_st) {
	if ((_102623_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _102623_st };
		
		if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1cc4ca60b:;
			{
				_1c89a0b4b_scope(_self_, _102623_st.cast_ptr<_1e5d384d3_Scope>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1cc4ca881:;
			{
				_1c899ea18_var(_self_, _102623_st.cast_ptr<_1e5da0bcc_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1cc4ca8e7:;
			{
				_1c89b3477_model((*((*(_self_))._field_oc))._field_ec, (*(_102623_st.unsafe_cast_ptr<_1e5e08c13_Data>()))._field_Model);
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1cc4cb167:;
			{
				_1c8999e20_conditional(_self_, _102623_st.cast_ptr<_1e5d3911b_Conditional>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1cc4cb1cd:;
			{
				_1c899a1c8_infIter(_self_, _102623_st.cast_ptr<_1e5d39418_InfIter>(&__jule_any_type42));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1cc4cb244:;
			{
				_1c899a481_whileIter(_self_, _102623_st.cast_ptr<_1e5d398be_WhileIter>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1cc4cb2aa:;
			{
				_1c899a739_rangeIter(_self_, _102623_st.cast_ptr<_1e5d3a31a_RangeIter>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1cc4cb321:;
			{
				_1c899a9e2_cont(_self_, _102623_st.cast_ptr<_1e5d3a6a0_ContSt>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1cc4cb387:;
			{
				_1c899ac9a_label(_self_, _102623_st.cast_ptr<_1e5d3b030_Label>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1cc4cb3ed:;
			{
				_1c899b053_gotoSt(_self_, _102623_st.cast_ptr<_1e5d3b690_GotoSt>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1cc4cb464:;
			{
				_1c899b30b_postfix(_self_, _102623_st.cast_ptr<_1e5d3ba69_Postfix>(&__jule_any_type49));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1cc4cb4ca:;
			{
				_1c899c65e_assign(_self_, _102623_st.cast_ptr<_1e5d3c020_Assign>(&__jule_any_type50));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1cc4cb541:;
			{
				_1c899d231_multiAssign(_self_, _102623_st.cast_ptr<_1e5d3c4c6_MultiAssign>(&__jule_any_type53));
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_1cc4cb5a7:;
			{
				_1c899db8d_matchSt(_self_, _102623_st.cast_ptr<_1e5d3cc13_Match>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_1cc4cb61d:;
			{
				_1c899de46_fallSt(_self_, _102623_st.cast_ptr<_1e5d3de34_FallSt>(&__jule_any_type55));
			}
		}
		else if (_match_expr.type == &__jule_any_type56) {
			_case_begin_1cc4cb695:;
			{
				_1c899e1ee_breakSt(_self_, _102623_st.cast_ptr<_1e5d3aa79_BreakSt>(&__jule_any_type56));
			}
		}
		else if (_match_expr.type == &__jule_any_type57) {
			_case_begin_1cc4cb71c:;
			{
				_1c899e760_retSt(_self_, _102623_st.cast_ptr<_1e5d3e2ca_RetSt>(&__jule_any_type57));
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1cc4cb794:;
			{
				_1c89b0e58_pushToSlice((*((*(_self_))._field_oc))._field_ec, _102623_st.cast_ptr<_1e6038b67_PushToSliceExprModel>(&__jule_any_type124));
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_1cc4cb81b:;
			{
				_1c89b1211_appendToSlice((*((*(_self_))._field_oc))._field_ec, _102623_st.cast_ptr<_1e6039041_AppendToSliceExprModel>(&__jule_any_type125));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1cc4cb893:;
			{
				_1c899ecc1_mutSlicing(_self_, _102623_st.cast_ptr<_1e603810b_MutSlicingExprModel>(&__jule_any_type123));
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_1cc4cb91a:;
			{
				_1c89a0079_swap(_self_, _102623_st.cast_ptr<_1e6036da7_SwapExprModel>(&__jule_any_type126));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1cc4cb992:;
			{
				_1c89a0332_exceptionalForwarding(_self_, _102623_st.cast_ptr<_1e6036a22_ExceptionalForwardingExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1cc4cba19:;
			{
				_1c89998ae_strRuneIter(_self_, _102623_st.cast_ptr<_1e603941a_StrRuneIter>(&__jule_any_type122));
			}
		}
		else {
			_case_begin_1cc4ca474:;
			{
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1cc4ca40d:;
	};
}



inline void _1c89a0893_scopeStmts(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5d384d3_Scope>* _108232_s) {
	{
		auto expr = &((*((*(_108232_s))))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc4d965e:;
		if (it != expr_end) {
			jule::Any _108315_st = *it;
			{
				_1c8a7e9e9_indent((*(_self_))._field_oc);
				_1c89a05da_st(_self_, _108315_st);
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1cc4d965e:;
			++it;
			goto _iter_begin_1cc4d965e;
		}
		_iter_end_1cc4d965e:;
	};
}



inline void _1c89a0b4b_scope(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5d384d3_Scope> _109126_s) {
	_1c8a7e5ed_addIndent((*(_self_))._field_oc);
	if ((*(_109126_s))._field_Deferred) {
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__JULE_DEFER(", 13));
	};
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1c89a0893_scopeStmts(_self_, &(_109126_s));
	_1c8a7e7eb_doneIndent((*(_self_))._field_oc);
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
	if ((*_109126_s.alloc)._field_Deferred) {
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
	};
}



inline void _1c89a0e04_commonFuncScope(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5ce3416_FnIns>* _110637_f) {
	if ((!(_1e5ce080e_IsVoid((*((*(_110637_f))))._field_Decl.ptr())))) {
		jule::Ptr<_1e5e4ea06_Tuple> _11088_tup = _1e5e45cc7_Tup((*((*(_110637_f))))._field_Result.ptr());;
		if ((_11088_tup != nullptr)) {
			_1c8a7e9e9_indent((*(_self_))._field_oc);
			_1c8a9843b_tup((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _11088_tup);
			_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" __jule_func_result;\n", 21));
			{
				auto expr = &((*_11088_tup.alloc)._field_Types);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1cc4e13d0:;
				if (it != expr_end) {
					jule::I64 _111310_i = it - expr->begin();
					jule::Ptr<_1e5e417ea_TypeKind> _111317_t = *it;
					{
						if (_1c8a9ace0_shouldInitialized(&(_111317_t))) {
							_1c8a7e9e9_indent((*(_self_))._field_oc);
							_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
							_1c8a7e147_write((*(_self_))._field_oc, _1e2195e4e_Itoa(_111310_i));
							_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
							_1c89b4643_initExpr((*(*(_self_))._field_oc.alloc)._field_ec, _111317_t);
							_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
						};
					}
					_iter_next_1cc4e13d0:;
					++it;
					_111310_i++;
					goto _iter_begin_1cc4e13d0;
				}
				_iter_end_1cc4e13d0:;
			};
		} else if (((*((*(*((*(_110637_f))))._field_Decl.alloc)._field_Result))._field_Idents.len() == 1LL)) {
			_1c8a7e9e9_indent((*(_self_))._field_oc);
			_1c8a93b62_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_110637_f))))._field_Result);
			_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" __jule_func_result", 19));
			if (_1c8a9ace0_shouldInitialized(&((*((*(_110637_f))))._field_Result))) {
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				_1c89b4643_initExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_110637_f))))._field_Result);
			};
			_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		};
	};
	_1c89a0893_scopeStmts(_self_, &((*((*(_110637_f))))._field_Scope));
	if (((*(*((*(_110637_f))))._field_Decl.alloc)._field_Exceptional && _1e5ce080e_IsVoid((*((*(_110637_f))))._field_Decl))) {
		_1c8a7e9e9_indent((*_self_.alloc)._field_oc);
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("return jule::VoidExceptional{};\n", 32));
	};
}



inline void _1c89a1267_anonFuncScope(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5cd5b67_AnonFnExprModel> _114634_m, jule::Str _114655_ident) {
	if (((*((*(_114634_m))._field_Func))._field_Scope == nullptr)) {
		return;;
	};
	jule::Bool _11503_closure = _1e6a09e95_IsClosure(&(_114634_m));;
	if (_11503_closure) {
		(*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes=jule::append((*(*((*(_self_))._field_oc))._field_ec.alloc)._field_varPrefixes,({ auto __jule_collection = jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_1e5da0bcc_Var>>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::__new_closure<jule::Bool,jule::Ptr<_1e5da0bcc_Var>>((void*)__jule_anon_1cc4eeb6e, jule::Ptr<__jule_anon_1cc4eeb6e_ctx>::make(__jule_anon_1cc4eeb6e_ctx{._self_=_self_,._114634_m=_114634_m}).as<jule::Uintptr>(), __jule_anon_1cc4eeb6e_ctx_handler); __jule_collection; }));
	};
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1c8a7e5ed_addIndent((*(_self_))._field_oc);
	if (_11503_closure) {
		_1c8a7e9e9_indent((*(_self_))._field_oc);
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("jule::Ptr<", 10));
		_1c8a7e147_write((*(_self_))._field_oc, _114655_ident);
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("_ctx> __jule_closure_ctx = __f_ctx.as<", 38));
		_1c8a7e147_write((*(_self_))._field_oc, _114655_ident);
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("_ctx>();\n", 9));
	};
	_1c89a0e04_commonFuncScope(_self_, &((*_114634_m.alloc)._field_Func));
	_1c8a7e7eb_doneIndent((*(_self_))._field_oc);
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
	if (_11503_closure) {
		((*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes).mut_slice(0LL, ((*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes.len() - 1LL));;
	};
}



inline void _1c89a1520_funcScope(jule::Ptr<_1c899847e_scopeCoder> _self_, jule::Ptr<_1e5ce3416_FnIns> _117830_f) {
	if (((*(_117830_f))._field_Scope == nullptr)) {
		return;;
	};
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1c8a7e5ed_addIndent((*(_self_))._field_oc);
	_1c89a0e04_commonFuncScope(_self_, &(_117830_f));
	_1c8a7e7eb_doneIndent((*(_self_))._field_oc);
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}







inline jule::Ptr<_1c89a4c60_exprCoder> static__1c89a515b_new(jule::Ptr<_1c8a7d92c_ObjectCoder>* _11221_oc) {
	return jule::new_ptr<_1c89a4c60_exprCoder>(_1c89a4c60_exprCoder{._field_oc=(*(_11221_oc)), ._field_varPrefixes=jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_1e5da0bcc_Var>>>(nullptr)});;
}



inline void _1c89a5414_string(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e21a449b_Const>* _11824_c) {
	jule::Str _1193_content = _1e21a6657_ReadStr((*(_11824_c)).ptr());;
	if ((_1193_content.len() == 0LL)) {
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("jule::Str()", 11));
		return;;
	};
	jule::Str _1243_len = _1e2195b85_FmtInt(static_cast<jule::I64>(_1193_content.len()), 10LL);;
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("jule::Str", 9));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("::lit(", 6));
	_1c89b5402_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1193_content);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1c8a7e147_write((*(_self_))._field_oc, _1243_len);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1c89a56bc_boolean(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Bool _13324_b) {
	if (_13324_b) {
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("true", 4));
	} else {
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("false", 5));
	};
}



inline void _1c89a58ba_nilLit(jule::Ptr<_1c89a4c60_exprCoder> _self_) {
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
}



inline jule::Bool _1c89a5c0b_ftoaSpecialCases(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::F64* _14534_x) {
	{
		
		if (_1e214a4b9_IsNaN((*(_14534_x)))) {
			_case_begin_1cc524017:;
			{
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("NAN", 3));
			}
		}
		else if (_1e214ab4b_IsInf((*(_14534_x)), 1LL)) {
			_case_begin_1cc5240b1:;
			{
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("INFINITY", 8));
			}
		}
		else if (_1e214ab4b_IsInf((*(_14534_x)), -1LL)) {
			_case_begin_1cc524138:;
			{
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1cc523e7e:;
			{
				return false;;
			}
		}
		_match_end_1cc523d6e:;
	};
	return true;;
}



inline void _1c89a5eb4_float32(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e21a449b_Const>* _15925_c) {
	jule::F64 _1603_x = _1e21a7191_AsF64((*(_15925_c)).ptr());;
	if (_1c89a5c0b_ftoaSpecialCases(_self_, &(_1603_x))) {
		return;;
	};
	{
		
		if ((_1603_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1cc5282c4:;
			{
				_1c8a7e147_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MAX_F32", 13));
			}
		}
		else if ((_1603_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1cc52769c:;
			{
				_1c8a7e147_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1cc527317:;
			{
				_1c89b5798_ftoa(&((*((*_self_.alloc)._field_oc))._field_Buf), _1603_x, 32LL);
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("f", 1));
			}
		}
		_match_end_1cc5270a3:;
	};
}



inline void _1c89a626c_float64(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e21a449b_Const>* _17825_c) {
	jule::F64 _1793_x = _1e21a7191_AsF64((*(_17825_c)).ptr());;
	if (_1c89a5c0b_ftoaSpecialCases(_self_, &(_1793_x))) {
		return;;
	};
	{
		
		if ((_1793_x == jule::MAX_F64)) {
			_case_begin_1cc52ab12:;
			{
				_1c8a7e147_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MAX_F64", 13));
			}
		}
		else if ((_1793_x == jule::MIN_F64)) {
			_case_begin_1cc52a7e3:;
			{
				_1c8a7e147_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1cc52a77c:;
			{
				_1c89b5798_ftoa(&((*((*_self_.alloc)._field_oc))._field_Buf), _1793_x, 64LL);
			}
		}
		_match_end_1cc52a518:;
	};
}



inline void _1c89a6525_constant(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e21a449b_Const> _19629_c) {
	{
		
		if (_1e21a8c53_IsStr(_19629_c.ptr())) {
			_case_begin_1cc52c98d:;
			{
				_1c89a5414_string(_self_, &(_19629_c));
			}
		}
		else if (_1e21a89bc_IsBool(_19629_c.ptr())) {
			_case_begin_1cc52ca04:;
			{
				_1c89a56bc_boolean(_self_, _1e21a63c1_ReadBool(_19629_c));
			}
		}
		else if (_1e21a8ed9_IsF64(_19629_c.ptr())) {
			_case_begin_1cc52ca6a:;
			{
				{
					
					if (((*_19629_c.alloc)._field_Kind == static_cast<jule::Str>(jule::Str::lit("f32", 3)))) {
						_case_begin_1cc5304a7:;
						{
							_1c89a5eb4_float32(_self_, &(_19629_c));
						}
					}
					else {
						_case_begin_1cc530111:;
						{
							_1c89a626c_float64(_self_, &(_19629_c));
						}
					}
					_match_end_1cc530001:;
				};
			}
		}
		else if (_1e21a84a0_IsI64(_19629_c.ptr())) {
			_case_begin_1cc52cad1:;
			{
				_1c89b5a84_itoa(&((*((*(_self_))._field_oc))._field_Buf), _1e21a5da4_ReadI64(_19629_c));
			}
		}
		else if (_1e21a8736_IsU64(_19629_c.ptr())) {
			_case_begin_1cc52cb47:;
			{
				_1c89b5d70_utoa(&((*((*(_self_))._field_oc))._field_Buf), _1e21a613a_ReadU64(_19629_c));
			}
		}
		else if (_1e21a9270_IsNil(_19629_c.ptr())) {
			_case_begin_1cc52cbad:;
			{
				_1c89a58ba_nilLit(_self_);
			}
		}
		else {
			_case_begin_1cc52c927:;
			{
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1cc52c828:;
	};
}



inline void _1c89a6943_operatorOverloadingUnary(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cc8c7b_StructIns>* _22046_s, jule::U64 _22061_op, jule::Any _22078_e) {
	;
	jule::Ptr<_1e5ce3416_FnIns> _2227_f = _1e6a0d0ca_FindOperator(_22046_s, _22061_op, true);;
	if ((_2227_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("unary operator overloading is not exist, this is an implementation mistake", 74) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:224:4"));;
	};
	static__1c89bb89d_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_2227_f));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("(&", 2));
	_1c89a93c4_possibleRefExpr(_self_, _22078_e);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1c89a6d61_divByZeroBinary(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5c8eacc_Token>* _23233_op, jule::Ptr<_1e5cd2856_OperandExprModel>* _23250_l, jule::Ptr<_1e5cd2856_OperandExprModel>* _23277_r) {
	;
	;
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("({ ", 3));
	_1c8a93b62_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_23250_l))))._field_Kind);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1c89a93c4_possibleRefExpr(_self_, (*((*(_23250_l))))._field_Model);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
	_1c8a93b62_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_23277_r))))._field_Kind);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1c89a93c4_possibleRefExpr(_self_, (*((*(_23277_r))))._field_Model);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("; if (", 6));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" == 0) __jule_panic_s(\"runtime: divide by zero\"", 47));
	if ((!(_22586c4e3_Production))) {
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" \"\\nlocation: ", 14));
		_1c8a817cb_locInfo((*(_self_))._field_oc, _23233_op);
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	};
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("); ((", 5));
	_1c8a93b62_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_23250_l))))._field_Kind);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	{
		auto &_match_expr{ (*((*(_23233_op))))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1cc53dd89:;
			{
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" / ", 3));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU) || _match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1cc5425b8:;
			{
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" % ", 3));
			}
		}
		_match_end_1cc54251e:;
	};
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(")); })", 6));
}



inline void _1c89a7559__unsafeBinary(jule::Ptr<_1c89a4c60_exprCoder> _self_, _224497295_StrBuilder* _27135_buf, jule::Str* _27153_l, jule::Str* _27162_r, jule::Ptr<_1e5e417ea_TypeKind>* _2728_lk, jule::Ptr<_1e5e417ea_TypeKind>* _27228_rk, jule::U64 _27243_op, jule::Str _27256_kind) {
	if ((_1e5e45524_Struct((*(_2728_lk)).ptr()) != nullptr)) {
		jule::Ptr<_1e5cc8c7b_StructIns> _2758_s = _1e5e45524_Struct((*(_2728_lk)).ptr());;
		_1c89b64be_operatorOverloadingBinary(_27135_buf, &(_2758_s), _27153_l, _27162_r, _27243_op, _27256_kind);
		return;;
	};
	if (((_27243_op == static_cast<jule::U64>(50LLU)) || (_27243_op == static_cast<jule::U64>(51LLU)))) {
		{
			
			if (_1e6a09b54_IsAny(_2728_lk)) {
				_case_begin_1cc547117:;
				{
					if (((!(_1e5e4292d_IsNil((*(_27228_rk)).ptr()))) && (!(_1e6a09b54_IsAny(_27228_rk))))) {
						_2244a1348_WriteByte(_27135_buf, '(');
						if ((_27243_op == static_cast<jule::U64>(51LLU))) {
							_2244a1348_WriteByte(_27135_buf, '!');
						};
						jule::I64 _2916_i = _1c8a80b4e_pushAnyType((*(_self_))._field_oc, (*(_27228_rk)));;
						_2244a1090_WriteStr(_27135_buf, jule::Str::lit("__jule_any_type", 15));
						_2244a1090_WriteStr(_27135_buf, _1e2195e4e_Itoa(_2916_i));
						_2244a1090_WriteStr(_27135_buf, jule::Str::lit("_compare(", 9));
						_2244a1090_WriteStr(_27135_buf, (*(_27153_l)));
						_2244a1090_WriteStr(_27135_buf, jule::Str::lit(", ", 2));
						_2244a1090_WriteStr(_27135_buf, (*(_27162_r)));
						_2244a1090_WriteStr(_27135_buf, jule::Str::lit("))", 2));
						return;;
					};
				}
			}
			else if ((_1e5e44c71_Arr((*(_2728_lk)).ptr()) != nullptr)) {
				_case_begin_1cc5471b1:;
				{
					jule::Ptr<_1e5e51233_Arr> _3045_arr = _1e5e44c71_Arr((*(_2728_lk)).ptr());;
					jule::Ptr<_1e5ce0358_Fn> _3059_f = _1e614dc8d_RuntimeFindFn(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("arrayCmp", 8)));;
					jule::Ptr<_1e5ce3416_FnIns> _3069_ins = _1e6a0d44e_FindFnGenericInstance(&(_3059_f), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5e417ea_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_3045_arr))._field_Elem; __jule_collection; }));;
					if ((_27243_op == static_cast<jule::U64>(51LLU))) {
						_2244a1348_WriteByte(_27135_buf, '!');
					};
					static__1c89bb89d_funcIns(_27135_buf, &(_3069_ins));
					_2244a1348_WriteByte(_27135_buf, '(');
					_2244a1090_WriteStr(_27135_buf, (*(_27153_l)));
					_2244a1090_WriteStr(_27135_buf, jule::Str::lit(".begin(), ", 10));
					_2244a1090_WriteStr(_27135_buf, (*(_27162_r)));
					_2244a1090_WriteStr(_27135_buf, jule::Str::lit(".begin(), ", 10));
					_2244a1090_WriteStr(_27135_buf, _1e2195e4e_Itoa((*_3045_arr.alloc)._field_N));
					_2244a1348_WriteByte(_27135_buf, ')');
					return;;
				}
			}
			_match_end_1cc547029:;
		};
	};
	{
		auto &_match_expr{ _27243_op };
		
		if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1cc547249:;
			{
				jule::Ptr<_1e5e49913_Prim> _3254_lp = _1e5e43ea1_Prim((*(_2728_lk)).ptr());;
				if (((_3254_lp != nullptr) && _1e21a3566_IsUnsigInt((*_3254_lp.alloc)._field_Kind))) {
					_2244a1348_WriteByte(_27135_buf, '(');
					_1c8a8e685_prim((*((*(_self_))._field_oc))._field_tc.ptr(), _27135_buf, _3254_lp);
					_2244a1348_WriteByte(_27135_buf, ')');
				};
			}
		}
		_match_end_1cc54ac64:;
	};
	_2244a1348_WriteByte(_27135_buf, '(');
	_2244a1090_WriteStr(_27135_buf, (*(_27153_l)));
	_2244a1348_WriteByte(_27135_buf, ' ');
	_2244a1090_WriteStr(_27135_buf, _27256_kind);
	_2244a1348_WriteByte(_27135_buf, ' ');
	_2244a1090_WriteStr(_27135_buf, (*(_27162_r)));
	_2244a1348_WriteByte(_27135_buf, ')');
}



inline void _1c89a7812_unsafeBinary(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd2d51_BinaryExprModel> _34233_m) {
	jule::I64 _3433_i = _2244a1d1b_Len(&(*((*(_self_))._field_oc))._field_Buf);;
	jule::Slice<jule::U8> _3447_oldbuf = _2244a2338_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf);;
	_1c89a93c4_possibleRefExpr(_self_, (*((*(_34233_m))._field_Left))._field_Model);
	jule::Str _3463_l = __jule_bytesToStr(_2244a2338_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf).slice(_3433_i));;
	{
		_2244a25e1_SetBuf(&(*(*(_self_))._field_oc.alloc)._field_Buf, _3447_oldbuf);
	};
	_1c89a93c4_possibleRefExpr(_self_, (*((*_34233_m.alloc)._field_Right))._field_Model);
	jule::Str _3493_r = __jule_bytesToStr(_2244a2338_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf).slice(_3433_i));;
	{
		_2244a25e1_SetBuf(&(*(*(_self_))._field_oc.alloc)._field_Buf, _3447_oldbuf);
	};
	_1c89a7559__unsafeBinary(_self_, &((*(*(_self_))._field_oc.alloc)._field_Buf), &(_3463_l), &(_3493_r), &((*(*(_34233_m))._field_Left.alloc)._field_Kind), &((*(*(_34233_m))._field_Right.alloc)._field_Kind), (*((*_34233_m.alloc)._field_Op))._field_Id, (*(*(_34233_m))._field_Op.alloc)._field_Kind);
}



inline void _1c89a7b75_shl(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd2856_OperandExprModel>* _35425_l, jule::Ptr<_1e5cd2856_OperandExprModel>* _35452_r) {
	;
	;
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("({ ", 3));
	_1c8a93b62_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_35425_l))))._field_Kind);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1c89a93c4_possibleRefExpr(_self_, (*((*(_35425_l))))._field_Model);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
	_1c8a93b62_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_35452_r))))._field_Kind);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1c89a93c4_possibleRefExpr(_self_, (*((*(_35452_r))))._field_Model);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("; ((", 4));
	_1c8a93b62_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_35425_l))))._field_Kind);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" >= ", 4));
	_1c8a7e147_write((*(_self_))._field_oc, _1e2195e4e_Itoa(_1e2198814_BitsizeOf((*(_1e5e43ea1_Prim((*((*(_35425_l))))._field_Kind.ptr())))._field_Kind)));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" ? 0 : ", 7));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" << ", 4));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(")); })", 6));
}



inline void _1c89a7ed8_shr(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd2856_OperandExprModel>* _38225_l, jule::Ptr<_1e5cd2856_OperandExprModel>* _38252_r) {
	;
	;
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("({ ", 3));
	_1c8a93b62_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_38225_l))))._field_Kind);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1c89a93c4_possibleRefExpr(_self_, (*((*(_38225_l))))._field_Model);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
	_1c8a93b62_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_38252_r))))._field_Kind);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1c89a93c4_possibleRefExpr(_self_, (*((*(_38252_r))))._field_Model);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("; ((", 4));
	_1c8a93b62_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_38225_l))))._field_Kind);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" >= ", 4));
	_1c8a7e147_write((*(_self_))._field_oc, _1e2195e4e_Itoa(_1e2198814_BitsizeOf((*(_1e5e43ea1_Prim((*((*(_38225_l))))._field_Kind.ptr())))._field_Kind)));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" ? 0 : ", 7));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" >> ", 4));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(")); })", 6));
}



inline void _1c89a8291_binary(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd2d51_BinaryExprModel> _41027_m) {
	{
		auto &_match_expr{ (*((*(_41027_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1cc574089:;
			{
				if ((_22586c2a1_Safety && (_1e5e45524_Struct((*((*(_41027_m))._field_Left))._field_Kind.ptr()) == nullptr))) {
					_1c89a6d61_divByZeroBinary(_self_, &((*_41027_m.alloc)._field_Op), &((*_41027_m.alloc)._field_Left), &((*_41027_m.alloc)._field_Right));
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1cc574111:;
			{
				if ((_1e5e45524_Struct((*((*(_41027_m))._field_Left))._field_Kind.ptr()) == nullptr)) {
					_1c89a7b75_shl(_self_, &((*_41027_m.alloc)._field_Left), &((*_41027_m.alloc)._field_Right));
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1cc574177:;
			{
				if ((_1e5e45524_Struct((*((*(_41027_m))._field_Left))._field_Kind.ptr()) == nullptr)) {
					_1c89a7ed8_shr(_self_, &((*_41027_m.alloc)._field_Left), &((*_41027_m.alloc)._field_Right));
					return;;
				};
			}
		}
		_match_end_1cc573ebd:;
	};
	_1c89a7812_unsafeBinary(_self_, _41027_m);
}



inline void _1c89a8549_var(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5da0bcc_Var> _43424_m) {
	{
		auto expr = &((*(_self_))._field_varPrefixes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc578e90:;
		if (it != expr_end) {
			jule::Fn<jule::Bool,jule::Ptr<_1e5da0bcc_Var>> _43510_prefix = *it;
			{
				if (_43510_prefix(_43424_m)) {
					return;;
				};
			}
			_iter_next_1cc578e90:;
			++it;
			goto _iter_begin_1cc578e90;
		}
		_iter_end_1cc578e90:;
	};
	if ((*(_43424_m))._field_Binded) {
		jule::Ptr<_1e5ca44a4_Directive> _4414_d = _1e6a0b925_FindDirective(&((*_43424_m.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("namespace", 9)));;
		if ((_4414_d != nullptr)) {
			_1c8a7e400_writeBytes((*_self_.alloc)._field_oc, _1c8a8b275_concatAllParts((*_4414_d.alloc)._field_Args));
			_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("::", 2));
		};
	};
	static__1c89bcb24_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), _43424_m);
}



inline void _1c89a8802_structureIns(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cc8c7b_StructIns> _45033_m) {
	_1c8a91e18_structureIns((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _45033_m);
}



inline void _1c89a8aaa_unary(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd322a_UnaryExprModel> _45426_m) {
	if ((_1e5e45524_Struct((*((*(_45426_m))._field_Expr))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1e5cc8c7b_StructIns> _4578_s = _1e5e45524_Struct((*((*(_45426_m))._field_Expr))._field_Kind);;
		_1c89a6943_operatorOverloadingUnary(_self_, &(_4578_s), (*((*_45426_m.alloc)._field_Op))._field_Id, (*(*(_45426_m))._field_Expr.alloc)._field_Model);
		return;;
	};
	{
		auto &_match_expr{ (*((*(_45426_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1cc5802a4:;
			{
				_1c8a7e147_write((*_self_.alloc)._field_oc, jule::Str::lit("(~(", 3));
				_1c89a93c4_possibleRefExpr(_self_, (*(*(_45426_m))._field_Expr.alloc)._field_Model);
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1cc580b12:;
			{
				if ((_22586c4e3_Production || (_1e5e44237_Sptr((*((*(_45426_m))._field_Expr))._field_Kind) == nullptr))) {
					goto _match_end_1cc580a68;
				};
				_1c89a93c4_possibleRefExpr(_self_, (*(*(_45426_m))._field_Expr.alloc)._field_Model);
				_1c8a7e147_write((*_self_.alloc)._field_oc, jule::Str::lit(".get(\"", 6));
				_1c8a817cb_locInfo((*(_self_))._field_oc, &((*_45426_m.alloc)._field_Op));
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("\")", 2));
				return;;
			}
		}
		_match_end_1cc580a68:;
	};
	_1c8a7e147_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
	_1c8a7e147_write((*(_self_))._field_oc, (*(*(_45426_m))._field_Op.alloc)._field_Kind);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1c89a93c4_possibleRefExpr(_self_, (*(*(_45426_m))._field_Expr.alloc)._field_Model);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _1c89a8d63_structureLit(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd3aee_StructLitExprModel> _48533_m) {
	if ((*((*((*(_48533_m))._field_Strct))._field_Decl))._field_Binded) {
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	};
	_1c8a91e18_structureIns((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_48533_m.alloc)._field_Strct);
	if ((*(*((*(_48533_m))._field_Strct))._field_Decl.alloc)._field_Binded) {
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
	jule::Bool _4967_inited = false;;
	_julec_label_1cc587dc2:;
	{
		auto expr = &((*(*(_48533_m))._field_Strct.alloc)._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc58b07e:;
		if (it != expr_end) {
			jule::Ptr<_1e5cc81cb_FieldIns> _49815_f = *it;
			{
				{
					auto expr = &((*_48533_m.alloc)._field_Args);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cc58bc94:;
					if (it != expr_end) {
						jule::Ptr<_1e5cd3758_StructArgExprModel> _49916_arg = *it;
						{
							if (((*(_49916_arg))._field_Field == _49815_f)) {
								if (_4967_inited) {
									_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
								};
								_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
								static__1c89bc838_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*(_49815_f))._field_Decl));
								_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
								_1c89a93c4_possibleRefExpr(_self_, (*((*_49916_arg.alloc)._field_Expr))._field_Model);
								_4967_inited=true;
								goto _iter_next_1cc58b07e;
							};
						}
						_iter_next_1cc58bc94:;
						++it;
						goto _iter_begin_1cc58bc94;
					}
					_iter_end_1cc58bc94:;
				};
				if ((*(*((*(_48533_m))._field_Strct))._field_Decl.alloc)._field_Binded) {
					_4967_inited=false;
					goto _iter_next_1cc58b07e;
				};
				if (_4967_inited) {
					_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
				_4967_inited=_1c89b37b8_handleFieldByDefault(_self_, &(_49815_f));
			}
			_iter_next_1cc58b07e:;
			++it;
			goto _iter_begin_1cc58b07e;
		}
		_iter_end_1cc58b07e:;
	};
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1c89a911b_allocStructure(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd3deb_AllocStructLitExprModel> _52835_m) {
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	static__1c89bc54c_structureIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_52835_m))._field_Lit))._field_Strct));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_1c89a8d63_structureLit(_self_, (*_52835_m.alloc)._field_Lit);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1c89a93c4_possibleRefExpr(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Any _53632_expr) {
	{
		auto &_match_expr{ _53632_expr };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1cc59454e:;
			{
				jule::Ptr<_1e5da0bcc_Var> _5394_v = _53632_expr.unsafe_cast_ptr<_1e5da0bcc_Var>();;
				if ((*(_5394_v))._field_Reference) {
					_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("(*(", 3));
					_1c89b3477_model(_self_, _53632_expr);
					_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
					return;;
				};
			}
		}
		_match_end_1cc5944d8:;
	};
	_1c89b3477_model(_self_, _53632_expr);
}



inline void _1c89a97e2_castTraitFromTrait(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd447e_CastingExprModel>* _55040_m, jule::Ptr<_1e5d03db6_Trait> _55066_t1, jule::Ptr<_1e5d03db6_Trait> _55082_t2) {
	_1c89a93c4_possibleRefExpr(_self_, (*((*((*(_55040_m))))._field_Expr))._field_Model);
	_1c8a7e147_write((*_self_.alloc)._field_oc, jule::Str::lit(".map(", 5));
	_1c8a81523_pushAndWriteMaskMapper((*(_self_))._field_oc, _55066_t1, _55082_t2);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1c89a9a9a_casting(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd447e_CastingExprModel> _56328_m) {
	{
		
		if (_1e6a09b54_IsAny(&((*(_56328_m))._field_Kind))) {
			_case_begin_1cc599147:;
			{
				if (_1e5e4292d_IsNil((*_56328_m.alloc)._field_ExprKind.ptr())) {
					_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("jule::Any()", 11));
					return;;
				};
				if ((_1e5e449da_TypeEnum((*(_56328_m))._field_ExprKind) != nullptr)) {
					_1c89a93c4_possibleRefExpr(_self_, (*((*_56328_m.alloc)._field_Expr))._field_Model);
					return;;
				};
				jule::I64 _5744_i = _1c8a80b4e_pushAnyType((*(_self_))._field_oc, (*_56328_m.alloc)._field_ExprKind);;
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("jule::Any(", 10));
				{
					auto &_match_expr{ (*((*(_56328_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type20) {
						_case_begin_1cc59ad2a:;
						{
							jule::Ptr<_1e5e49913_Prim> _5785_prim = _1e5e43ea1_Prim((*(_56328_m))._field_ExprKind);;
							if (((_5785_prim != nullptr) && _1e21a3830_IsInt((*_5785_prim.alloc)._field_Kind))) {
								_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("static_cast<", 12));
								_1c8a8e685_prim((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _5785_prim);
								_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
								_1c89a93c4_possibleRefExpr(_self_, (*(*(_56328_m))._field_Expr.alloc)._field_Model);
								_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								goto _match_end_1cc59d05d;
							};
							goto _case_begin_1cc59d0c4;
						}
					}
					else {
						_case_begin_1cc59d0c4:;
						{
							_1c89a93c4_possibleRefExpr(_self_, (*(*(_56328_m))._field_Expr.alloc)._field_Model);
						}
					}
					_match_end_1cc59d05d:;
				};
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
				_1c8a7e147_write((*(_self_))._field_oc, _1e2195e4e_Itoa(_5744_i));
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if (_1e6a09b54_IsAny(&((*(_56328_m))._field_ExprKind))) {
			_case_begin_1cc5991e1:;
			{
				_1c89a93c4_possibleRefExpr(_self_, (*((*_56328_m.alloc)._field_Expr))._field_Model);
				_1c8a7e147_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
				if ((_1e5e44237_Sptr((*_56328_m.alloc)._field_Kind.ptr()) != nullptr)) {
					_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("cast_ptr<", 9));
					_1c8a93b62_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_1e5e44237_Sptr((*(_56328_m))._field_Kind)))._field_Elem);
				} else {
					_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("cast<", 5));
					_1c8a93b62_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_56328_m.alloc)._field_Kind);
				};
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
				if ((!(_22586c4e3_Production))) {
					_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1c8a817cb_locInfo((*(_self_))._field_oc, &((*_56328_m.alloc)._field_Token));
					_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("&__jule_any_type", 16));
				_1c8a7e147_write((*(_self_))._field_oc, _1e2195e4e_Itoa(_1c8a80b4e_pushAnyType((*(_self_))._field_oc, (*_56328_m.alloc)._field_Kind)));
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1e5e444bd_Ptr((*(_56328_m))._field_ExprKind.ptr()) != nullptr) || (_1e5e444bd_Ptr((*_56328_m.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cc599257:;
			{
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
				_1c8a93b62_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_56328_m.alloc)._field_Kind);
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
				_1c89a93c4_possibleRefExpr(_self_, (*((*_56328_m.alloc)._field_Expr))._field_Model);
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if ((_1e5e457aa_Trait((*(_56328_m))._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1cc5992bd:;
			{
				if ((_1e5e457aa_Trait((*_56328_m.alloc)._field_Kind.ptr()) != nullptr)) {
					_1c89a97e2_castTraitFromTrait(_self_, &(_56328_m), _1e5e457aa_Trait((*(_56328_m))._field_Kind), _1e5e457aa_Trait((*(_56328_m))._field_ExprKind));
					return;;
				};
				_1c89a93c4_possibleRefExpr(_self_, (*((*_56328_m.alloc)._field_Expr))._field_Model);
				_1c8a7e147_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
				if ((_1e5e44237_Sptr((*(_56328_m))._field_Kind) != nullptr)) {
					_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("cast_ptr<", 9));
					_1c8a93b62_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_1e5e44237_Sptr((*(_56328_m))._field_Kind)))._field_Elem);
				} else {
					_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("cast<", 5));
					_1c8a93b62_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_56328_m.alloc)._field_Kind);
				};
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
				if ((!(_22586c4e3_Production))) {
					_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1c8a817cb_locInfo((*(_self_))._field_oc, &((*_56328_m.alloc)._field_Token));
					_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("(jule::Trait::Type*)&", 21));
				static__1c89bbb89_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1e5e457aa_Trait((*(_56328_m))._field_ExprKind));
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
				_1c8a7e147_write((*(_self_))._field_oc, _1e2195e4e_Itoa(_1e6a0cb9b_FindTraitTypeOffset(_1e5e457aa_Trait((*(_56328_m))._field_ExprKind), (*_56328_m.alloc)._field_Kind)));
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1e5e457aa_Trait((*(_56328_m))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cc599334:;
			{
				_1c8a93b62_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_56328_m.alloc)._field_Kind);
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				_1c89a93c4_possibleRefExpr(_self_, (*((*_56328_m.alloc)._field_Expr))._field_Model);
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(", (jule::Trait::Type*)&", 23));
				static__1c89bbb89_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1e5e457aa_Trait((*(_56328_m))._field_Kind));
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
				_1c8a7e147_write((*(_self_))._field_oc, _1e2195e4e_Itoa(_1e6a0cb9b_FindTraitTypeOffset(_1e5e457aa_Trait((*(_56328_m))._field_Kind), (*_56328_m.alloc)._field_ExprKind)));
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		_match_end_1cc598eb0:;
	};
	jule::Ptr<_1e5e49913_Prim> _6607_prim = _1e5e43ea1_Prim((*(_56328_m))._field_Kind.ptr());;
	if (((_6607_prim != nullptr) && _1e5e4cdcd_IsStr(_6607_prim))) {
		jule::Ptr<_1e5e49913_Prim> _6628_eprim = _1e5e43ea1_Prim((*_56328_m.alloc)._field_ExprKind.ptr());;
		if (((_6628_eprim != nullptr) && (_6607_prim != nullptr))) {
			if (_1e5e4b33d_IsU8(_6628_eprim)) {
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__jule_strFromByte(", 19));
			} else {
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__jule_strFromRune(", 19));
			};
			_1c89a93c4_possibleRefExpr(_self_, (*((*_56328_m.alloc)._field_Expr))._field_Model);
			_1c8a7e147_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
			return;;
		};
		jule::Ptr<_1e5e4de12_Slc> _6738_slc = _1e5e45007_Slc((*(_56328_m))._field_ExprKind);;
		if ((_6738_slc != nullptr)) {
			_6628_eprim=_1e5e43ea1_Prim((*_6738_slc.alloc)._field_Elem.ptr());
			if (_1e5e4ad21_IsI32(_6628_eprim)) {
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__jule_runesToStr(", 18));
			} else {
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__jule_bytesToStr(", 18));
			};
			_1c89a93c4_possibleRefExpr(_self_, (*(*(_56328_m))._field_Expr.alloc)._field_Model);
			_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			return;;
		};
	};
	_6607_prim=_1e5e43ea1_Prim((*(_56328_m))._field_ExprKind);
	if (((_6607_prim != nullptr) && _1e5e4cdcd_IsStr(_6607_prim))) {
		jule::Ptr<_1e5e4de12_Slc> _6898_slc = _1e5e45007_Slc((*(_56328_m))._field_Kind);;
		if ((_6898_slc != nullptr)) {
			_6607_prim=_1e5e43ea1_Prim((*(_6898_slc))._field_Elem);
			if (_1e5e4ad21_IsI32(_6607_prim)) {
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__jule_strToRunes(", 18));
			} else {
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__jule_strToBytes(", 18));
			};
			_1c89a93c4_possibleRefExpr(_self_, (*(*(_56328_m))._field_Expr.alloc)._field_Model);
			_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			return;;
		};
	};
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("static_cast<", 12));
	_1c8a93b62_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_56328_m.alloc)._field_Kind);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_1c89a93c4_possibleRefExpr(_self_, (*(*(_56328_m))._field_Expr.alloc)._field_Model);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1c89a9d53_args(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd4d31_FnCallExprModel>* _71026_m) {
	jule::I64 _7117_j = 0LL;;
	if (((((*((*((*(_71026_m))))._field_Func))._field_Owner != nullptr) && (!((*((*(*((*(_71026_m))))._field_Func.alloc)._field_Decl))._field_Statically))) || (((*(*((*(_71026_m))))._field_Func.alloc)._field_Params.len() > 0LL) && _1e5cdded3_IsSelf((*((*((*((*(_71026_m))))._field_Func))._field_Params[0LL]))._field_Decl.ptr())))) {
		(_7117_j)++;
	};
	{
		auto expr = &((*((*(_71026_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc5d57c1:;
		if (it != expr_end) {
			jule::I64 _7167_i = it - expr->begin();
			jule::Any _71610_arg = *it;
			{
				jule::Ptr<_1e5ce22b1_ParamIns> _7174_p = (*(*((*(_71026_m))))._field_Func.alloc)._field_Params[_7117_j];;
				if ((((*(_7174_p))._field_Decl != nullptr) && (*(*(_7174_p))._field_Decl.alloc)._field_Reference)) {
					{
						auto &_match_expr{ _71610_arg };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1cc5d85e8:;
							{
								jule::Ptr<_1e5da0bcc_Var> _7216_v = _71610_arg.unsafe_cast_ptr<_1e5da0bcc_Var>();;
								if ((*(_7216_v))._field_Reference) {
									_1c89b3477_model(_self_, _71610_arg);
									goto _julec_label_1cc5db145;
								};
							}
						}
						_match_end_1cc5d8582:;
					};
					_1c8a7e147_write((*_self_.alloc)._field_oc, jule::Str::lit("&(", 2));
					_1c89b3477_model(_self_, _71610_arg);
					_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
					goto _julec_label_1cc5db145;
				};
				_1c89a93c4_possibleRefExpr(_self_, _71610_arg);
				_julec_label_1cc5db145:;
				if ((((*((*(_71026_m))))._field_Args.len() - _7167_i) > 1LL)) {
					_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
				(_7117_j)++;
			}
			_iter_next_1cc5d57c1:;
			++it;
			_7167_i++;
			goto _iter_begin_1cc5d57c1;
		}
		_iter_end_1cc5d57c1:;
	};
}



inline void _1c89aa10b_modelForCall(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Any _74133_expr) {
	{
		auto &_match_expr{ _74133_expr };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1cc5dc19b:;
			{
				_1c89ad681_funcIns(_self_, _74133_expr.cast_ptr<_1e5ce3416_FnIns>(&__jule_any_type7));
				return;;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1cc5d755e:;
			{
				jule::Ptr<_1e5cd78c2_StructSubIdentExprModel> _7478_ssie = _74133_expr.unsafe_cast_ptr<_1e5cd78c2_StructSubIdentExprModel>();;
				if (((*(_7478_ssie))._field_Method != nullptr)) {
					_1c89ad681_funcIns(_self_, (*_7478_ssie.alloc)._field_Method);
					return;;
				};
			}
		}
		_match_end_1cc5dc135:;
	};
	_1c89a93c4_possibleRefExpr(_self_, _74133_expr);
}



inline void _1c89aa3b4_pushCallInf(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd4d31_FnCallExprModel>* _75629_m) {
	if ((_22586c4e3_Production || (!((*((*((*(_75629_m))))._field_Func))._field_Anon)))) {
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		return;;
	};
	if ((*(*((*(_75629_m))))._field_Func.alloc)._field_Anon) {
		{
			auto &_match_expr{ (*((*(_75629_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type100) {
				_case_begin_1cc5e0c4e:;
				{
					if ((*((*((*((*((*((*(_75629_m))))._field_Expr.unsafe_cast_ptr<_1e5cd78c2_StructSubIdentExprModel>()))._field_Field))._field_Decl))._field_Owner))._field_Binded) {
						_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
						return;;
					};
				}
			}
			_match_end_1cc5e0bd8:;
		};
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(".call", 5));
	};
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("(\"", 2));
	_1c8a817cb_locInfo((*(_self_))._field_oc, &((*((*(_75629_m))))._field_Token));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	if (((*((*(_75629_m))))._field_Args.len() != 0LL)) {
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	};
}



inline jule::Bool _1c89aa705_isWrapped(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd4d31_FnCallExprModel>* _77931_m) {
	if ((((!(_1e5ce48ce_IsBuiltin((*((*(_77931_m))))._field_Func.ptr()))) && ((*((*(*((*(_77931_m))))._field_Func.alloc)._field_Decl))._field_Params.len() > 0LL)) && _1e5cdded3_IsSelf((*((*((*((*(_77931_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_77931_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type100) {
				_case_begin_1cc5e5a12:;
				{
					jule::Ptr<_1e5cd78c2_StructSubIdentExprModel> _7839_ssie = (*((*(_77931_m))))._field_Expr.unsafe_cast_ptr<_1e5cd78c2_StructSubIdentExprModel>();;
					{
						
						if (_1e5cde269_IsRef((*((*((*((*(_77931_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()) || (_1e5e44237_Sptr((*((*(_7839_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
							_case_begin_1cc5e77b1:;
							{
								goto _match_end_1cc5e6969;
							}
						}
						else {
							_case_begin_1cc5e69e1:;
							{
								if ((_1e5e45524_Struct((*((*(_7839_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									if ((!((*(*(_7839_ssie))._field_Expr.alloc)._field_Lvalue))) {
										_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("({ auto _wrap_copy = ", 21));
										_1c89b3477_model(_self_, (*(*(_7839_ssie))._field_Expr.alloc)._field_Model);
										_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
										return true;;
									};
								};
							}
						}
						_match_end_1cc5e6969:;
					};
				}
			}
			_match_end_1cc5e599b:;
		};
	};
	return false;;
}



inline jule::Bool _1c89aaa46_writeReceiver(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Any _80334_m) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ _80334_m };
		
		if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1cc5ec2dd:;
			{
				_1c89a93c4_possibleRefExpr(_self_, (*((*(_80334_m.unsafe_cast_ptr<_1e5cd322a_UnaryExprModel>()))._field_Expr))._field_Model);
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (_match_expr.type == &__jule_any_type130) {
			_case_begin_1cc5ec4ec:;
			{
				_1c89a93c4_possibleRefExpr(_self_, (*((*((*(_80334_m.unsafe_cast_ptr<_1e6039717_UnsafeDerefExprModel>()))._field_Base))._field_Expr))._field_Model);
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1cc5ec486:;
			{
				__jule_panic_s(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:812:4"));;
			}
		}
		_match_end_1cc5ec420:;
	};
}



inline void _1c89aacee_pureFuncCall(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd4d31_FnCallExprModel>* _81634_m) {
	jule::Bool _8173_wrapped = _1c89aa705_isWrapped(_self_, _81634_m);;
	_1c89aa10b_modelForCall(_self_, (*((*(_81634_m))))._field_Expr);
	if ((!(_1e5ce48ce_IsBuiltin((*((*(_81634_m))))._field_Func.ptr())))) {
		if (((*((*(*((*(_81634_m))))._field_Func.alloc)._field_Decl))._field_Binded && ((*(*((*(_81634_m))))._field_Func.alloc)._field_Generics.len() > 0LL))) {
			if ((!(_1e6a0bcdd_HasDirective(&((*(*((*((*(_81634_m))))._field_Func))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("cdef", 4)))))) {
				_1c8a7e147_write((*_self_.alloc)._field_oc, jule::Str::lit("<", 1));
				{
					auto expr = &((*(*((*(_81634_m))))._field_Func.alloc)._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cc601842:;
					if (it != expr_end) {
						jule::I64 _82311_i = it - expr->begin();
						jule::Ptr<_1e5e3ee14_InsGeneric> _82318_g = *it;
						{
							_1c8a93b62_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_82318_g))._field_Kind);
							if ((((*(*((*(_81634_m))))._field_Func.alloc)._field_Generics.len() - _82311_i) > 1LL)) {
								_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
							};
						}
						_iter_next_1cc601842:;
						++it;
						_82311_i++;
						goto _iter_begin_1cc601842;
					}
					_iter_end_1cc601842:;
				};
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(">", 1));
			};
		};
	};
	_1c89aa3b4_pushCallInf(_self_, _81634_m);
	if (((*(*((*(_81634_m))))._field_Func.alloc)._field_AsAnon && (!((*(*((*(_81634_m))))._field_Func.alloc)._field_Anon)))) {
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
		if (((*((*(_81634_m))))._field_Args.len() > 0LL)) {
			_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		};
	};
	if ((((!(_1e5ce48ce_IsBuiltin((*((*(_81634_m))))._field_Func))) && ((*(*((*((*(_81634_m))))._field_Func))._field_Decl.alloc)._field_Params.len() > 0LL)) && _1e5cdded3_IsSelf((*((*((*((*(_81634_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_81634_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type100) {
				_case_begin_1cc60854c:;
				{
					jule::Ptr<_1e5cd78c2_StructSubIdentExprModel> _8479_ssie = (*((*(_81634_m))))._field_Expr.unsafe_cast_ptr<_1e5cd78c2_StructSubIdentExprModel>();;
					{
						
						if (_1e5cde269_IsRef((*((*((*((*(_81634_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr())) {
							_case_begin_1cc60c7d7:;
							{
								_1c89aaa46_writeReceiver(_self_, (*((*(_8479_ssie))._field_Expr))._field_Model);
							}
						}
						else if ((_1e5e44237_Sptr((*((*(_8479_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
							_case_begin_1cc60dd7c:;
							{
								jule::Bool _8546_safe = _1c89aaa46_writeReceiver(_self_, (*(*(_8479_ssie))._field_Expr.alloc)._field_Model);;
								if (_8546_safe) {
									_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(".ptr(", 5));
									if ((!(_22586c4e3_Production))) {
										_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
										_1c8a817cb_locInfo((*(_self_))._field_oc, &((*((*(_81634_m))))._field_Token));
										_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
									};
									_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								};
							}
						}
						else {
							_case_begin_1cc6095a3:;
							{
								if ((_1e5e45524_Struct((*((*(_8479_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									{
										auto &_match_expr{ (*((*(_8479_ssie))._field_Expr))._field_Model };
										
										if (_match_expr.type == &__jule_any_type8) {
											_case_begin_1cc609e00:;
											{
												jule::Ptr<_1e5da0bcc_Var> _8688_v = (*((*(_8479_ssie))._field_Expr))._field_Model.unsafe_cast_ptr<_1e5da0bcc_Var>();;
												if ((*(_8688_v))._field_Reference) {
													goto _match_end_1cc60a3c8;
												};
												goto _case_begin_1cc60a43e;
											}
										}
										else {
											_case_begin_1cc60a43e:;
											{
												_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("&", 1));
											}
										}
										_match_end_1cc60a3c8:;
									};
								};
								if (_8173_wrapped) {
									_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("_wrap_copy", 10));
								} else if ((_1e5e444bd_Ptr((*((*(_8479_ssie))._field_Expr))._field_Kind) == nullptr)) {
									_1c89b3477_model(_self_, (*(*(_8479_ssie))._field_Expr.alloc)._field_Model);
								} else {
									_1c89a93c4_possibleRefExpr(_self_, (*((*((*(*(_8479_ssie))._field_Expr.alloc)._field_Model.cast_ptr<_1e5cd322a_UnaryExprModel>(&__jule_any_type112)))._field_Expr))._field_Model);
								};
							}
						}
						_match_end_1cc60952b:;
					};
					if (((*((*(_81634_m))))._field_Args.len() > 0LL)) {
						_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			else if (_match_expr.type == &__jule_any_type99) {
				_case_begin_1cc6081d9:;
				{
					_1c89a93c4_possibleRefExpr(_self_, (*((*((*(_81634_m))))._field_Expr.unsafe_cast_ptr<_1e5cd7031_TraitSubIdentExprModel>()))._field_Expr);
					_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(".data", 5));
					if (((*((*(_81634_m))))._field_Args.len() > 0LL)) {
						_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			_match_end_1cc6084c5:;
		};
	};
	_1c89a9d53_args(_self_, _81634_m);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if (_8173_wrapped) {
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
	};
}



inline void _1c89ab0a7_coFuncCall(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd4d31_FnCallExprModel>* _90632_m) {
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1c8a7e5ed_addIndent((*(_self_))._field_oc);
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	;
	;
	jule::Str _9137_i = jule::Str();;
	if ((((*((*((*(_90632_m))))._field_Func))._field_Params.len() > 0LL) || (*(*((*(_90632_m))))._field_Func.alloc)._field_AsAnon)) {
		_9137_i=_1e2195e4e_Itoa(_1c8a8017b_pushCoSpawn((*(_self_))._field_oc, (*((*(_90632_m))))._field_Func));
		jule::Str _9164_t = (jule::Str::lit("__jule_cospawn_argdata", 22) + _9137_i);;
		_1c8a7e147_write((*(_self_))._field_oc, _9164_t);
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" *", 2));
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" = new (std::nothrow) ", 22));
		_1c8a7e147_write((*(_self_))._field_oc, _9164_t);
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("; if (!", 7));
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(") __jule_panic((", 16));
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("jule::U8", 8));
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("*)\"memory allocation failed for concurrent call\", 44);\n", 55));
		_1c8a7e9e9_indent((*(_self_))._field_oc);
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__juleCoFunc", 12));
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
		_1c89aa10b_modelForCall(_self_, (*((*(_90632_m))))._field_Expr);
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		{
			auto expr = &((*(*((*(_90632_m))))._field_Func.alloc)._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1cc6249ec:;
			if (it != expr_end) {
				jule::I64 _9388_j = it - expr->begin();
				{
					_1c8a7e9e9_indent((*(_self_))._field_oc);
					_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
					_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
					_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__juleCoParam", 13));
					_1c8a7e147_write((*(_self_))._field_oc, _1e2195e4e_Itoa(_9388_j));
					_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
					_1c89a93c4_possibleRefExpr(_self_, (*((*(_90632_m))))._field_Args[_9388_j]);
					_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
				}
				_iter_next_1cc6249ec:;
				++it;
				_9388_j++;
				goto _iter_begin_1cc6249ec;
			}
			_iter_end_1cc6249ec:;
		};
		_1c8a7e9e9_indent((*(_self_))._field_oc);
	};
	if (!(_9137_i).empty()) {
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("if (!", 5));
	};
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__jule_coSpawn((void*)", 22));
	if ((_9137_i).empty()) {
		static__1c89bb89d_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_90632_m))))._field_Func));
	} else {
		_1c8a7e147_write((*(_self_))._field_oc, (jule::Str::lit("__jule_cospawn_method", 21) + _9137_i));
	};
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if ((_9137_i).empty()) {
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("NULL", 4));
	} else {
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("(void*)", 7));
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
	};
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((_9137_i).empty()) {
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
	} else {
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(") { delete ", 11));
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("; __jule_panic((", 16));
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("jule::U8", 8));
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("*)\"thread creation failed for concurrent call\", 42); }", 54));
	};
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1c8a7e7eb_doneIndent((*(_self_))._field_oc);
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1c89ab41a_writeUseExpr(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5ce3416_FnIns>* _98434_f, jule::Ptr<_1e5e08c13_Data> _98449_d) {
	if ((_1e5e45cc7_Tup((*(_98449_d))._field_Kind.ptr()) == nullptr)) {
		_1c89a93c4_possibleRefExpr(_self_, (*_98449_d.alloc)._field_Model);
		_1c8a7e147_write((*_self_.alloc)._field_oc, jule::Str::lit(";", 1));
		return;;
	};
	jule::Ptr<_1e5cd843e_TupleExprModel> _9907_tup = (*_98449_d.alloc)._field_Model.cast_ptr<_1e5cd843e_TupleExprModel>(&__jule_any_type83);;
	_1c8a9843b_tup((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _1e5e45cc7_Tup((*((*(_98434_f))))._field_Result.ptr()));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
	{
		auto expr = &((*_9907_tup.alloc)._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc636778:;
		if (it != expr_end) {
			jule::I64 _9937_i = it - expr->begin();
			jule::Ptr<_1e5e08c13_Data> _99310_data = *it;
			{
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(".__jule_result_arg", 18));
				_1c8a7e147_write((*(_self_))._field_oc, _1e2195e4e_Itoa(_9937_i));
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
				_1c89a93c4_possibleRefExpr(_self_, (*(_99310_data))._field_Model);
				if ((((*(_9907_tup))._field_Datas.len() - _9937_i) > 1LL)) {
					_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1cc636778:;
			++it;
			_9937_i++;
			goto _iter_begin_1cc636778;
		}
		_iter_end_1cc636778:;
	};
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("};", 2));
}



inline void _1c89ab6c3_funcCall(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd4d31_FnCallExprModel> _100529_m) {
	if ((*(_100529_m))._field_IsCo) {
		_1c89ab0a7_coFuncCall(_self_, &(_100529_m));
		return;;
	};
	if (((_1e5ce48ce_IsBuiltin((*_100529_m.alloc)._field_Func.ptr()) || (!((*((*(*(_100529_m))._field_Func.alloc)._field_Decl))._field_Exceptional))) || (((*_100529_m.alloc)._field_Except != nullptr) && ((*(*(_100529_m))._field_Except.alloc)._field_Stmts.len() == 0LL)))) {
		_1c89aacee_pureFuncCall(_self_, &(_100529_m));
		return;;
	};
	_1c8a7e147_write((*_self_.alloc)._field_oc, jule::Str::lit("({\n", 3));
	_1c8a7e5ed_addIndent((*(_self_))._field_oc);
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("auto except = ", 14));
	_1c89aacee_pureFuncCall(_self_, &(_100529_m));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	if (((*_100529_m.alloc)._field_Except != nullptr)) {
		if ((((*(*(_100529_m))._field_Func.alloc)._field_Result == nullptr) || (!((*_100529_m.alloc)._field_Assigned)))) {
			_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("if (!except.ok()) ", 18));
			_1c89a0b4b_scope((*(*(_self_))._field_oc.alloc)._field_sc, (*_100529_m.alloc)._field_Except);
			_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		} else {
			jule::Bool _10335_forwarded = _1e6a0957c_IsForwarded(&((*_100529_m.alloc)._field_Except));;
			_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("(except.ok()) ? (except.result) : (", 35));
			if (_10335_forwarded) {
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
			};
			jule::Any _10389_stmt = (*(*(_100529_m))._field_Except.alloc)._field_Stmts[((*(*(_100529_m))._field_Except.alloc)._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _10389_stmt };
				
				if (_match_expr.type == &__jule_any_type31) {
					_case_begin_1cc643b70:;
					{
						((*((*(_100529_m))._field_Except))._field_Stmts).mut_slice(0LL, ((*((*(_100529_m))._field_Except))._field_Stmts.len() - 1LL));;
						_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
						_1c8a7e5ed_addIndent((*(_self_))._field_oc);
						_1c89a0893_scopeStmts((*(*(_self_))._field_oc.alloc)._field_sc, &((*_100529_m.alloc)._field_Except));
						_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
						_1c8a7e9e9_indent((*(_self_))._field_oc);
						_1c89ab41a_writeUseExpr(_self_, &((*_100529_m.alloc)._field_Func), _10389_stmt.cast_ptr<_1e5e08c13_Data>(&__jule_any_type31));
						_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
						_1c8a7e7eb_doneIndent((*(_self_))._field_oc);
						_1c8a7e9e9_indent((*(_self_))._field_oc);
						_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
					}
				}
				else {
					_case_begin_1cc6450d3:;
					{
						_1c89a0b4b_scope((*(*(_self_))._field_oc.alloc)._field_sc, (*_100529_m.alloc)._field_Except);
					}
				}
				_match_end_1cc64506c:;
			};
			if (_10335_forwarded) {
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
				_1c89b4643_initExpr(_self_, (*(*(_100529_m))._field_Func.alloc)._field_Result);
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(";}", 2));
			};
			_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
		};
		_1c8a7e7eb_doneIndent((*(_self_))._field_oc);
	} else {
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("if (!except.ok()) __jule_panic_s(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 142));
		_1c8a817cb_locInfo((*(_self_))._field_oc, &((*_100529_m.alloc)._field_Token));
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("\"));\n", 5));
		if ((!(_1e5ce080e_IsVoid((*((*(_100529_m))._field_Func))._field_Decl)))) {
			_1c8a7e9e9_indent((*(_self_))._field_oc);
			_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("(except.result);\n", 17));
		};
		_1c8a7e7eb_doneIndent((*(_self_))._field_oc);
	};
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1c89ab97b_slice(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd520a_SliceExprModel> _107826_m) {
	if (((*(_107826_m))._field_Elems.len() == 0LL)) {
		_1c8a9106b_asSlice((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_107826_m.alloc)._field_ElemKind);
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	_1c8a9106b_asSlice((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_107826_m.alloc)._field_ElemKind);
	jule::Str _10863_size = _1e2195e4e_Itoa((*_107826_m.alloc)._field_Elems.len());;
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1c8a7e147_write((*(_self_))._field_oc, _10863_size);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1c8a7e147_write((*(_self_))._field_oc, _10863_size);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("); auto ", 8));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(".begin(); ", 10));
	{
		auto expr = &((*_107826_m.alloc)._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc659070:;
		if (it != expr_end) {
			jule::I64 _10967_i = it - expr->begin();
			{
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("++) = ", 6));
				_1c89a93c4_possibleRefExpr(_self_, (*(_107826_m))._field_Elems[_10967_i]);
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
			_iter_next_1cc659070:;
			++it;
			_10967_i++;
			goto _iter_begin_1cc659070;
		}
		_iter_end_1cc659070:;
	};
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
}



inline void _1c89abc34_indexing(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd56b1_IndexingExprModel> _110729_m) {
	{
		auto &_match_expr{ (*((*(_110729_m))._field_Expr))._field_Model };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1cc65cded:;
			{
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::at(", 14));
				if ((!(_22586c4e3_Production))) {
					_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1c8a817cb_locInfo((*(_self_))._field_oc, &((*(_110729_m))._field_Token));
					_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("reinterpret_cast<const jule::U8*>(", 34));
				jule::Str _11184_s = _1e21a6657_ReadStr((*((*(_110729_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1e21a449b_Const>().ptr());;
				_1c89b5402_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), _11184_s);
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
				_1c8a7e147_write((*(_self_))._field_oc, _1e2195e4e_Itoa(_11184_s.len()));
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1c89a93c4_possibleRefExpr(_self_, (*((*_110729_m.alloc)._field_Index))._field_Model);
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		_match_end_1cc65cd87:;
	};
	{
		
		if ((_1e5e45a41_Map((*((*_110729_m.alloc)._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cc666b60:;
			{
				jule::Ptr<_1e5e505a6_Map> _11318__map = _1e5e45a41_Map((*((*(_110729_m))._field_Expr))._field_Kind);;
				jule::Ptr<_1e5cc5e21_Struct> _11328_s = _1e61560a3_RuntimeFindStruct(&((*((*(*(_self_))._field_oc.alloc)._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
				jule::Ptr<_1e5cc8c7b_StructIns> _11338_ins = _1e6a0d8d3_FindStructGenericInstance(&(_11328_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5e417ea_TypeKind>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_11318__map))._field_Key; (*it++) = (*_11318__map.alloc)._field_Val; __jule_collection; }));;
				;
				jule::Ptr<_1e5ce3416_FnIns> _11358_f = (*(_1e5cc9d26_FindMethod(_11338_ins.ptr(), jule::Str::lit("get", 3), false)))._field_Instances[0LL];;
				static__1c89bb89d_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_11358_f));
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				_1c89a93c4_possibleRefExpr(_self_, (*(*(_110729_m))._field_Expr.alloc)._field_Model);
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1c89a93c4_possibleRefExpr(_self_, (*(*(_110729_m))._field_Index.alloc)._field_Model);
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		else if (_22586c4e3_Production || (_1e5e444bd_Ptr((*((*_110729_m.alloc)._field_Expr))._field_Kind.ptr()) != nullptr) || _1e6a0988a_IsExprComesFromBind(&((*_110729_m.alloc)._field_Expr))) {
			_case_begin_1cc66429a:;
			{
				_1c89a93c4_possibleRefExpr(_self_, (*(*(_110729_m))._field_Expr.alloc)._field_Model);
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("[", 1));
				_1c89a93c4_possibleRefExpr(_self_, (*(*(_110729_m))._field_Index.alloc)._field_Model);
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1cc66418a:;
			{
				_1c89a93c4_possibleRefExpr(_self_, (*((*_110729_m.alloc)._field_Expr))._field_Model);
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(".at(\"", 5));
				_1c8a817cb_locInfo((*(_self_))._field_oc, &((*_110729_m.alloc)._field_Token));
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				_1c89a93c4_possibleRefExpr(_self_, (*(*(_110729_m))._field_Index.alloc)._field_Model);
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1cc6616b5:;
	};
}



inline void _1c89abedc_unsafeIndexing(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e603878d_UnsafeIndexingExprModel> _115935_m) {
	_1c89a93c4_possibleRefExpr(_self_, (*((*((*(_115935_m))._field_Node))._field_Expr))._field_Model);
	{
		
		if (_22586c4e3_Production || (_1e5e444bd_Ptr((*(*((*(_115935_m))._field_Node))._field_Expr.alloc)._field_Kind.ptr()) != nullptr) || (_1e5e45a41_Map((*((*((*(_115935_m))._field_Node))._field_Expr))._field_Kind) != nullptr)) {
			_case_begin_1cc673232:;
			{
				_1c8a7e147_write((*_self_.alloc)._field_oc, jule::Str::lit("[", 1));
				_1c89a93c4_possibleRefExpr(_self_, (*((*(*(_115935_m))._field_Node.alloc)._field_Index))._field_Model);
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1cc670c8a:;
			{
				_1c8a7e147_write((*_self_.alloc)._field_oc, jule::Str::lit(".__at(", 6));
				_1c89a93c4_possibleRefExpr(_self_, (*((*(*(_115935_m))._field_Node.alloc)._field_Index))._field_Model);
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1cc67183a:;
	};
}



inline void _1c89ac295_anonFunc(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd5b67_AnonFnExprModel> _117629_m) {
	jule::Bool _11773_closure = _1e6a09e95_IsClosure(&(_117629_m));;
	jule::Str _11783_ident = _1c8a8080d_pushAnonFn((*(_self_))._field_oc, &(_117629_m));;
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("jule::__new_closure<", 20));
	_1c8a9348b_anonFunc((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_117629_m))._field_Func);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(">((void*)", 9));
	_1c8a7e147_write((*(_self_))._field_oc, _11783_ident);
	if (_11773_closure) {
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(", jule::Ptr<", 12));
		_1c8a7e147_write((*(_self_))._field_oc, _11783_ident);
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("_ctx", 4));
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(">::make(", 8));
		_1c8a7e147_write((*(_self_))._field_oc, _11783_ident);
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("_ctx{", 5));
		{
			auto expr = &((*_117629_m.alloc)._field_Captured);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1cc67792e:;
			if (it != expr_end) {
				jule::I64 _11909_i = it - expr->begin();
				jule::Ptr<_1e5da0bcc_Var> _119016_v = *it;
				{
					_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
					static__1c89bcb24_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), _119016_v);
					_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
					_1c89a8549_var(_self_, _119016_v);
					if ((((*_117629_m.alloc)._field_Captured.len() - _11909_i) > 1LL)) {
						_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
					};
				}
				_iter_next_1cc67792e:;
				++it;
				_11909_i++;
				goto _iter_begin_1cc67792e;
			}
			_iter_end_1cc67792e:;
		};
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("}).as<jule::Uintptr>(), ", 24));
		_1c8a7e147_write((*(_self_))._field_oc, _11783_ident);
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("_ctx_handler)", 13));
	} else {
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(", nullptr, nullptr)", 19));
	};
}



inline void _1c89ac54d_mapExpr(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd641a_MapExprModel> _120728_m) {
	jule::Ptr<_1e5cc5e21_Struct> _12087_s = _1e61560a3_RuntimeFindStruct(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
	jule::Ptr<_1e5cc8c7b_StructIns> _12097_ins = _1e6a0d8d3_FindStructGenericInstance(&(_12087_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5e417ea_TypeKind>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*((*(_120728_m))._field_Kind))._field_Key; (*it++) = (*(*(_120728_m))._field_Kind.alloc)._field_Val; __jule_collection; }));;
	;
	jule::Ptr<_1e5ce3416_FnIns> _12117_maker = (*(_1e5cc9d26_FindMethod(_12097_ins.ptr(), jule::Str::lit("make", 4), true)))._field_Instances[0LL];;
	if (((*_120728_m.alloc)._field_Entries.len() == 0LL)) {
		static__1c89bb89d_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_12117_maker));
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	jule::Ptr<_1e5ce3416_FnIns> _12187_f = (*(_1e5cc9d26_FindMethod(_12097_ins.ptr(), jule::Str::lit("set", 3), false)))._field_Instances[0LL];;
	;
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("({ ", 3));
	_1c8a91742_mapType((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_120728_m.alloc)._field_Kind);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__jule_map", 10));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	static__1c89bb89d_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_12117_maker));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("(); ", 4));
	{
		auto expr = &((*_120728_m.alloc)._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc689765:;
		if (it != expr_end) {
			jule::Ptr<_1e5cd6041_KeyValPairExprModel> _122815_pair = *it;
			{
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				static__1c89bb89d_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_12187_f));
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__jule_map", 10));
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1c89a93c4_possibleRefExpr(_self_, (*(_122815_pair))._field_Key);
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(")) = ", 5));
				_1c89a93c4_possibleRefExpr(_self_, (*_122815_pair.alloc)._field_Val);
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
			_iter_next_1cc689765:;
			++it;
			goto _iter_begin_1cc689765;
		}
		_iter_end_1cc689765:;
	};
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__jule_map", 10));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
}



inline void _1c89ac806_slicing(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd699d_SlicingExprModel> _124328_m) {
	_1c89a93c4_possibleRefExpr(_self_, (*(_124328_m))._field_Expr);
	_1c8a7e147_write((*_self_.alloc)._field_oc, jule::Str::lit(".slice(", 7));
	if ((!(_22586c4e3_Production))) {
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1c8a817cb_locInfo((*(_self_))._field_oc, &((*_124328_m.alloc)._field_Token));
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
	};
	_1c89a93c4_possibleRefExpr(_self_, (*_124328_m.alloc)._field_Left);
	if (((*_124328_m.alloc)._field_Right != nullptr)) {
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1c89a93c4_possibleRefExpr(_self_, (*_124328_m.alloc)._field_Right);
	};
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1c89acaae_traitSub(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd7031_TraitSubIdentExprModel> _125929_m) {
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
	static__1c89bbb89_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_125929_m))._field_Trt);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("MptrData", 8));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("*)", 2));
	_1c89a93c4_possibleRefExpr(_self_, (*_125929_m.alloc)._field_Expr);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(".safe_type(", 11));
	if ((!(_22586c4e3_Production))) {
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1c8a817cb_locInfo((*(_self_))._field_oc, &((*_125929_m.alloc)._field_Token));
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	};
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("))->", 4));
	static__1c89bb5b2_func(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*_125929_m.alloc)._field_Method));
}



inline void _1c89acd67_structureSub(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd78c2_StructSubIdentExprModel> _127533_m) {
	_1c89a93c4_possibleRefExpr(_self_, (*((*(_127533_m))._field_Expr))._field_Model);
	if (((*_127533_m.alloc)._field_Field == nullptr)) {
		return;;
	};
	_1c8a7e147_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
	static__1c89bc838_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*_127533_m.alloc)._field_Field))._field_Decl));
}



inline void _1c89ad120_array(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd8142_ArrayExprModel> _128426_m) {
	if ((((*((*(_128426_m))._field_Kind))._field_N == 0LL) || (((*_128426_m.alloc)._field_Elems.len() == 0LL) && (!(_1c8a9aa15_ableToInit(&((*(*(_128426_m))._field_Kind.alloc)._field_Elem))))))) {
		_1c8a9227b_array((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_128426_m.alloc)._field_Kind);
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	if ((((*_128426_m.alloc)._field_Elems.len() == 2LL) && ((*(_128426_m))._field_Elems[1LL] == nullptr))) {
		_1c8a9227b_array((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_128426_m.alloc)._field_Kind);
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1c89a93c4_possibleRefExpr(_self_, (*(_128426_m))._field_Elems[0LL]);
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	_1c8a9227b_array((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_128426_m.alloc)._field_Kind);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("(); auto ", 9));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(".begin(); ", 10));
	if (((*_128426_m.alloc)._field_Elems.len() != (*(*(_128426_m))._field_Kind.alloc)._field_N)) {
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("const auto ", 11));
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("_end = ", 7));
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(".end(); ", 8));
	};
	{
		auto expr = &((*_128426_m.alloc)._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc6a54c8:;
		if (it != expr_end) {
			jule::I64 _13177_i = it - expr->begin();
			{
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("++) = ", 6));
				_1c89a93c4_possibleRefExpr(_self_, (*_128426_m.alloc)._field_Elems[_13177_i]);
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
			_iter_next_1cc6a54c8:;
			++it;
			_13177_i++;
			goto _iter_begin_1cc6a54c8;
		}
		_iter_end_1cc6a54c8:;
	};
	if ((((*_128426_m.alloc)._field_Elems.len() != (*(*(_128426_m))._field_Kind.alloc)._field_N) && _1c8a9aa15_ableToInit(&((*(*(_128426_m))._field_Kind.alloc)._field_Elem)))) {
		_1c89b3d29_fillCollectionByDefault(_self_, &((*(*(_128426_m))._field_Kind.alloc)._field_Elem));
	};
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
	return;;
}



inline void _1c89ad3c8_funcInsCommon(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5ce3416_FnIns> _133434_m) {
	_1c8a937ee_func((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _133434_m);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1c89ad681_funcIns(_self_, _133434_m);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1c89ad681_funcIns(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5ce3416_FnIns> _134128_m) {
	if ((((*(_134128_m))._field_Decl != nullptr) && (*(*(_134128_m))._field_Decl.alloc)._field_Binded)) {
		jule::Ptr<_1e5ca44a4_Directive> _13434_d = _1e6a0b925_FindDirective(&((*(*(_134128_m))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("namespace", 9)));;
		if ((_13434_d != nullptr)) {
			_1c8a7e400_writeBytes((*(_self_))._field_oc, _1c8a8b275_concatAllParts((*_13434_d.alloc)._field_Args));
			_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("::", 2));
		};
	};
	static__1c89bb89d_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_134128_m));
}



inline void _1c89ad939_tuple(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd843e_TupleExprModel> _135226_m) {
	{
		auto expr = &((*_135226_m.alloc)._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc6b2c11:;
		if (it != expr_end) {
			jule::I64 _13538_i = it - expr->begin();
			jule::Ptr<_1e5e08c13_Data> _135315_d = *it;
			{
				_1c89a93c4_possibleRefExpr(_self_, (*(_135315_d))._field_Model);
				_1c8a7e147_write((*_self_.alloc)._field_oc, jule::Str::lit(";", 1));
				if ((((*(_135226_m))._field_Datas.len() - _13538_i) > 1LL)) {
					_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
					_1c8a7e9e9_indent((*(_self_))._field_oc);
				};
			}
			_iter_next_1cc6b2c11:;
			++it;
			_13538_i++;
			goto _iter_begin_1cc6b2c11;
		}
		_iter_end_1cc6b2c11:;
	};
}



inline void _1c89adbe2_newCall(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd90bb_BuiltinNewCallExprModel> _136328_m) {
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	_1c8a93b62_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_136328_m))._field_Kind);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	if (((*_136328_m.alloc)._field_Init != nullptr)) {
		_1c89a93c4_possibleRefExpr(_self_, (*_136328_m.alloc)._field_Init);
	} else if (_1c8a9aa15_ableToInit(&((*_136328_m.alloc)._field_Kind))) {
		_1c89b4643_initExpr(_self_, (*_136328_m.alloc)._field_Kind);
	};
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1c89ade9a_outCall(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd8818_BuiltinOutCallExprModel> _137528_m) {
	if (((*(_137528_m))._field_Debug && _22586c4e3_Production)) {
		return;;
	};
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("jule::out(", 10));
	jule::Ptr<_1e5ce0358_Fn> _13807_decl = _1e614dc8d_RuntimeFindFn(&((*((*(*(_self_))._field_oc.alloc)._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("toStr", 5)));;
	jule::Ptr<_1e5ce3416_FnIns> _13817_f = _1e6a0d44e_FindFnGenericInstance(&(_13807_decl), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5e417ea_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*((*_137528_m.alloc)._field_Expr))._field_Kind; __jule_collection; }));;
	static__1c89bb89d_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_13817_f));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1c89a93c4_possibleRefExpr(_self_, (*(*(_137528_m))._field_Expr.alloc)._field_Model);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _1c89ae253_outlnCall(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd8be2_BuiltinOutlnCallExprModel> _138830_m) {
	if (((*(_138830_m))._field_Debug && _22586c4e3_Production)) {
		return;;
	};
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("jule::outln(", 12));
	jule::Ptr<_1e5ce0358_Fn> _13937_decl = _1e614dc8d_RuntimeFindFn(&((*((*(*(_self_))._field_oc.alloc)._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("toStr", 5)));;
	jule::Ptr<_1e5ce3416_FnIns> _13947_f = _1e6a0d44e_FindFnGenericInstance(&(_13937_decl), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5e417ea_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*((*_138830_m.alloc)._field_Expr))._field_Kind; __jule_collection; }));;
	static__1c89bb89d_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_13947_f));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1c89a93c4_possibleRefExpr(_self_, (*(*(_138830_m))._field_Expr.alloc)._field_Model);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _1c89ae50b_panicCall(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd9495_BuiltinPanicCallExprModel> _140130_m) {
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__jule_panic_s(", 15));
	_1c89a93c4_possibleRefExpr(_self_, (*(_140130_m))._field_Expr);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" + jule::Str(\"\\nlocation: ", 26));
	_1c8a817cb_locInfo((*(_self_))._field_oc, &((*_140130_m.alloc)._field_Token));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("\"));", 4));
}



inline void _1c89ae7b4_errorCall(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cdb09b_BuiltinErrorCallExprModel> _140930_m) {
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
	if (_1e5ce080e_IsVoid((*((*(_140930_m))._field_Func))._field_Decl.ptr())) {
		{
			auto &_match_expr{ (*((*(_140930_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1cc6c5ebb:;
				{
					jule::Ptr<_1e5da0bcc_Var> _14145_v = (*((*(_140930_m))._field_Err))._field_Model.unsafe_cast_ptr<_1e5da0bcc_Var>();;
					if (((*(_14145_v))._field_Ident == static_cast<jule::Str>(jule::Str::lit("error", 5)))) {
						_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("jule::VoidExceptional{.error=std::move(except.error)}", 53));
						return;;
					};
				}
			}
			_match_end_1cc6c5e55:;
		};
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("jule::VoidExceptional{.error=jule::Any(", 39));
	} else {
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("jule::Exceptional<", 18));
		_1c8a98b12_codeMut1((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_140930_m))._field_Func))._field_Result));
		{
			auto &_match_expr{ (*((*(_140930_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1cc6ca50e:;
				{
					jule::Ptr<_1e5da0bcc_Var> _14265_v = (*((*(_140930_m))._field_Err))._field_Model.unsafe_cast_ptr<_1e5da0bcc_Var>();;
					if (((*(_14265_v))._field_Ident == static_cast<jule::Str>(jule::Str::lit("error", 5)))) {
						_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(">{.error=except.error}", 22));
						return;;
					};
				}
			}
			_match_end_1cc6ca498:;
		};
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(">{.error=jule::Any(", 19));
	};
	_1c89a93c4_possibleRefExpr(_self_, (*((*(_140930_m))._field_Err))._field_Model);
	jule::I64 _14353_i = _1c8a80b4e_pushAnyType((*(_self_))._field_oc, (*(*(_140930_m))._field_Err.alloc)._field_Kind);;
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
	_1c8a7e147_write((*(_self_))._field_oc, _1e2195e4e_Itoa(_14353_i));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(")}", 2));
}



inline void _1c89aea6c_copyCall(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cdabc2_BuiltinCopyCallExprModel> _144129_m) {
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("jule::copy(", 11));
	_1c89a93c4_possibleRefExpr(_self_, (*((*(_144129_m))._field_Dest))._field_Model);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1c89a93c4_possibleRefExpr(_self_, (*((*_144129_m.alloc)._field_Src))._field_Model);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1c89aed25_lenCall(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cda122_BuiltinLenCallExprModel> _144928_m) {
	jule::Ptr<_1e5e505a6_Map> _14507__map = _1e5e45a41_Map((*((*(_144928_m))._field_Expr))._field_Kind.ptr());;
	if ((_14507__map != nullptr)) {
		jule::Ptr<_1e5cc5e21_Struct> _14528_s = _1e61560a3_RuntimeFindStruct(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
		jule::Ptr<_1e5cc8c7b_StructIns> _14538_ins = _1e6a0d8d3_FindStructGenericInstance(&(_14528_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5e417ea_TypeKind>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*_14507__map.alloc)._field_Key; (*it++) = (*_14507__map.alloc)._field_Val; __jule_collection; }));;
		;
		jule::Ptr<_1e5ce3416_FnIns> _14558_f = (*(_1e5cc9d26_FindMethod(_14538_ins.ptr(), jule::Str::lit("len", 3), false)))._field_Instances[0LL];;
		static__1c89bb89d_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_14558_f));
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1c89a93c4_possibleRefExpr(_self_, (*(*(_144928_m))._field_Expr.alloc)._field_Model);
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_1c89a93c4_possibleRefExpr(_self_, (*(*(_144928_m))._field_Expr.alloc)._field_Model);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(".len()", 6));
}



inline void _1c89b00cd_capCall(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cda41e_BuiltinCapCallExprModel> _146628_m) {
	_1c89a93c4_possibleRefExpr(_self_, (*((*(_146628_m))._field_Expr))._field_Model);
	_1c8a7e147_write((*_self_.alloc)._field_oc, jule::Str::lit(".cap()", 6));
}



inline void _1c89b0386_deleteCall(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cda7e8_BuiltinDeleteCallExprModel> _147131_m) {
	jule::Ptr<_1e5e505a6_Map> _14727__map = _1e5e45a41_Map((*((*(_147131_m))._field_Dest))._field_Kind.ptr());;
	if ((_14727__map == nullptr)) {
		__jule_panic_s(jule::Str::lit("cxx: deleteCall: destination is not map", 39) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1474:4"));;
	};
	jule::Ptr<_1e5cc5e21_Struct> _14767_s = _1e61560a3_RuntimeFindStruct(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
	jule::Ptr<_1e5cc8c7b_StructIns> _14777_ins = _1e6a0d8d3_FindStructGenericInstance(&(_14767_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5e417ea_TypeKind>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_14727__map))._field_Key; (*it++) = (*(_14727__map))._field_Val; __jule_collection; }));;
	;
	if (((*_147131_m.alloc)._field_Key != nullptr)) {
		jule::Ptr<_1e5ce3416_FnIns> _14808_f = (*(_1e5cc9d26_FindMethod(_14777_ins.ptr(), jule::Str::lit("del", 3), false)))._field_Instances[0LL];;
		static__1c89bb89d_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_14808_f));
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1c89a93c4_possibleRefExpr(_self_, (*(*(_147131_m))._field_Dest.alloc)._field_Model);
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1c89a93c4_possibleRefExpr(_self_, (*(*(_147131_m))._field_Key.alloc)._field_Model);
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	} else {
		jule::Ptr<_1e5ce3416_FnIns> _14888_f = (*(_1e5cc9d26_FindMethod(_14777_ins.ptr(), jule::Str::lit("clear", 5), false)))._field_Instances[0LL];;
		static__1c89bb89d_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_14888_f));
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1c89a93c4_possibleRefExpr(_self_, (*(*(_147131_m))._field_Dest.alloc)._field_Model);
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
}



inline void _1c89b063e_makeCallSlice(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd994b_BuiltinMakeCallExprModel>* _149635_m) {
	jule::Ptr<_1e5e4de12_Slc> _14977_slice = _1e5e45007_Slc((*((*(_149635_m))))._field_Kind.ptr());;
	jule::Bool _14983_init = _1c8a9aa15_ableToInit(&((*(_14977_slice))._field_Elem));;
	if (_14983_init) {
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	};
	_1c8a93b62_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_149635_m))))._field_Kind);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1c89a93c4_possibleRefExpr(_self_, (*((*(_149635_m))))._field_Len);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_149635_m))))._field_Cap != nullptr)) {
		_1c89a93c4_possibleRefExpr(_self_, (*((*(_149635_m))))._field_Cap);
	} else {
		_1c89a93c4_possibleRefExpr(_self_, (*((*(_149635_m))))._field_Len);
	};
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((!(_14983_init))) {
		return;;
	};
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
	_1c89b40d2_initCollection(_self_, &((*_14977_slice.alloc)._field_Elem));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" __jule_collection; })", 22));
}



inline void _1c89b08e7_makeCallStr(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd994b_BuiltinMakeCallExprModel>* _152033_m) {
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("jule::Str", 9));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1c89a93c4_possibleRefExpr(_self_, (*((*(_152033_m))))._field_Len);
	if (((*((*(_152033_m))))._field_Cap != nullptr)) {
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1c89a93c4_possibleRefExpr(_self_, (*((*(_152033_m))))._field_Cap);
	};
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1c89b0ba0_makeCall(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd994b_BuiltinMakeCallExprModel> _153129_m) {
	if ((_1e5e45007_Slc((*(_153129_m))._field_Kind.ptr()) != nullptr)) {
		_1c89b063e_makeCallSlice(_self_, &(_153129_m));
		return;;
	};
	_1c89b08e7_makeCallStr(_self_, &(_153129_m));
}



inline void _1c89b0e58_pushToSlice(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e6038b67_PushToSliceExprModel> _153932_m) {
	;
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("{ ", 2));
	_1c8a9106b_asSlice((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_153932_m))._field_Elems))._field_ElemKind);
	jule::Bool _15477_ptr = false;;
	{
		auto &_match_expr{ (*(_153932_m))._field_Dest };
		
		if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1cc70345a:;
			{
				jule::Ptr<_1e5cd322a_UnaryExprModel> _15518_u = (*(_153932_m))._field_Dest.unsafe_cast_ptr<_1e5cd322a_UnaryExprModel>();;
				if ((_1e5e444bd_Ptr((*((*(_15518_u))._field_Expr))._field_Kind.ptr()) != nullptr)) {
					_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" *__jule_push_dest = ", 21));
					_1c89a93c4_possibleRefExpr(_self_, (*(*(_15518_u))._field_Expr.alloc)._field_Model);
					_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
					_15477_ptr=true;
					goto _match_end_1cc701e4d;
				};
				goto _case_begin_1cc701eb4;
			}
		}
		else {
			_case_begin_1cc701eb4:;
			{
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" &__jule_push_dest = ", 21));
				_1c89a93c4_possibleRefExpr(_self_, (*_153932_m.alloc)._field_Dest);
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
		}
		_match_end_1cc701e4d:;
	};
	if (((*(*(_153932_m))._field_Elems.alloc)._field_Elems.len() == 1LL)) {
		if (_15477_ptr) {
			_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest->push(", 23));
		} else {
			_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest.push(", 22));
		};
		_1c89a93c4_possibleRefExpr(_self_, (*((*(_153932_m))._field_Elems))._field_Elems[0LL]);
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("); }", 4));
		return;;
	};
	if (_15477_ptr) {
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest->alloc_for_append(", 35));
	} else {
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest.alloc_for_append(", 34));
	};
	_1c8a7e147_write((*(_self_))._field_oc, _1e2195e4e_Itoa((*(*(_153932_m))._field_Elems.alloc)._field_Elems.len()));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("); ", 3));
	{
		auto expr = &((*(*(_153932_m))._field_Elems.alloc)._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc70a8d5:;
		if (it != expr_end) {
			jule::Any _158515_e = *it;
			{
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest", 16));
				if (_15477_ptr) {
					_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("->__push(", 9));
				} else {
					_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(".__push(", 8));
				};
				_1c89a93c4_possibleRefExpr(_self_, _158515_e);
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("); ", 3));
			}
			_iter_next_1cc70a8d5:;
			++it;
			goto _iter_begin_1cc70a8d5;
		}
		_iter_end_1cc70a8d5:;
	};
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1c89b1211_appendToSlice(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e6039041_AppendToSliceExprModel> _159934_m) {
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1c89a93c4_possibleRefExpr(_self_, (*(_159934_m))._field_Dest);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(").append(", 9));
	_1c89a93c4_possibleRefExpr(_self_, (*_159934_m.alloc)._field_Slice);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
}



inline void _1c89b14b9_appendCall(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd9d25_BuiltinAppendCallExprModel> _160731_m) {
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("jule::append(", 13));
	_1c89a93c4_possibleRefExpr(_self_, (*(_160731_m))._field_Dest);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
	_1c89a93c4_possibleRefExpr(_self_, (*_160731_m.alloc)._field_Elements);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1c89b1772_sizeof(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cdb398_SizeofExprModel> _161527_m) {
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("sizeof(", 7));
	_1c89a93c4_possibleRefExpr(_self_, (*(_161527_m))._field_Expr);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1c89b1a2a_alignof(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cdba4c_AlignofExprModel> _162128_m) {
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("alignof(", 8));
	_1c89a93c4_possibleRefExpr(_self_, (*(_162128_m))._field_Expr);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1c89b1cd3_runeLit(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cdbc39_RuneExprModel> _162724_m) {
	if (((*(_162724_m))._field_Code <= 127LL)) {
		_2244a1348_WriteByte(&(*((*(_self_))._field_oc))._field_Buf, '\'');
		jule::Str _16308_b = _1c89b4cd6_sbtoa(static_cast<jule::U8>((*_162724_m.alloc)._field_Code));;
		if (_16308_b.equal("'", 1)) {
			_2244a1348_WriteByte(&(*(*(_self_))._field_oc.alloc)._field_Buf, '\\');
		};
		_2244a1090_WriteStr(&(*(*(_self_))._field_oc.alloc)._field_Buf, _16308_b);
		_2244a1348_WriteByte(&(*(*(_self_))._field_oc.alloc)._field_Buf, '\'');
		return;;
	};
	_1c89b5a84_itoa(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::I64>((*_162724_m.alloc)._field_Code));
}



inline void _1c89b208b_structureStatic(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cd7c68_StructStaticIdentExprModel> _164136_m) {
	static__1c89bb89d_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &((*(_164136_m))._field_Method));
}



inline void _1c89b2344_backendEmit(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cdc0ad_BackendEmitExprModel> _164532_m) {
	if (((*(_164532_m))._field_Exprs.len() == 0LL)) {
		_1c8a7e147_write((*(_self_))._field_oc, (*_164532_m.alloc)._field_Code);
		return;;
	};
	jule::I64 _16503_n = _2244a1d1b_Len(&(*(*(_self_))._field_oc.alloc)._field_Buf);;
	jule::Slice<jule::Any> _16517_args = ({ auto __jule_collection = jule::Slice<jule::Any>::alloc((*_164532_m.alloc)._field_Exprs.len(), (*_164532_m.alloc)._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });;
	{
		auto expr = &((*_164532_m.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc720983:;
		if (it != expr_end) {
			jule::I64 _16528_i = it - expr->begin();
			jule::Any _165215_expr = *it;
			{
				_1c89a93c4_possibleRefExpr(_self_, _165215_expr);
				jule::Slice<jule::U8> _16548_buf = _2244a2338_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf);;
				_16517_args[_16528_i]=jule::Any(__jule_bytesToStr(_16548_buf.slice(_16503_n)), &__jule_any_type4);
				{
					_2244a25e1_SetBuf(&(*(*(_self_))._field_oc.alloc)._field_Buf, _16548_buf.slice(0LL, _16503_n));
				};
			}
			_iter_next_1cc720983:;
			++it;
			_16528_i++;
			goto _iter_begin_1cc720983;
		}
		_iter_end_1cc720983:;
	};
	_1c8a7e147_write((*(_self_))._field_oc, _1e6024e72_Format((*_164532_m.alloc)._field_Code, _16517_args));
}



inline void _1c89b25ec_free(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cdc3aa_FreeExprModel> _166125_m) {
	_1c89a93c4_possibleRefExpr(_self_, (*(_166125_m))._field_Expr);
	if (_22586bdd8_RC) {
		_1c8a7e147_write((*_self_.alloc)._field_oc, jule::Str::lit(".dealloc()", 10));
		return;;
	};
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(".__free()", 9));
}



inline void _1c89b28a5_strComp(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e6037a78_StrCompExprModel> _167028_m) {
	if ((*(_167028_m))._field_NotEq) {
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("(!", 2));
	};
	jule::Str _16743_s = _1e21a6657_ReadStr((*_167028_m.alloc)._field_Right.ptr());;
	_1c89a93c4_possibleRefExpr(_self_, (*_167028_m.alloc)._field_Left);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(".equal(", 7));
	_1c89b5402_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), _16743_s);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1c8a7e147_write((*(_self_))._field_oc, _1e2195e4e_Itoa(_16743_s.len()));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((*_167028_m.alloc)._field_NotEq) {
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
}



inline void _1c89b2b5d_emptyCompare(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e6037281_EmptyCompareExprModel> _168633_m) {
	if ((*(_168633_m))._field_Neg) {
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("!", 1));
	};
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1c89a93c4_possibleRefExpr(_self_, (*_168633_m.alloc)._field_Expr);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(").empty()", 9));
}



inline void _1c89b2e16_unsafeDeref(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e6039717_UnsafeDerefExprModel> _169532_m) {
	{
		
		if ((_1e5e44237_Sptr((*((*((*(_169532_m))._field_Base))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cc72e4db:;
			{
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				_1c89a93c4_possibleRefExpr(_self_, (*(*((*(_169532_m))._field_Base))._field_Expr.alloc)._field_Model);
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(".alloc)", 7));
			}
		}
		else {
			_case_begin_1cc72e123:;
			{
				__jule_panic_s(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1702:4"));;
			}
		}
		_match_end_1cc72e013:;
	};
}



inline void _1c89b31be_unsafeCasting(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e6039a14_UnsafeCastingExprModel> _170634_m) {
	{
		
		if (_1e6a09b54_IsAny(&((*((*(_170634_m))._field_Base))._field_ExprKind))) {
			_case_begin_1cc7321c0:;
			{
				_1c89a93c4_possibleRefExpr(_self_, (*((*(*(_170634_m))._field_Base.alloc)._field_Expr))._field_Model);
				if ((_1e5e44237_Sptr((*(*(_170634_m))._field_Base.alloc)._field_Kind.ptr()) != nullptr)) {
					_1c8a7e147_write((*_self_.alloc)._field_oc, jule::Str::lit(".unsafe_cast_ptr<", 17));
					_1c8a93b62_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_1e5e44237_Sptr((*((*(_170634_m))._field_Base))._field_Kind)))._field_Elem);
				} else {
					_1c8a7e147_write((*_self_.alloc)._field_oc, jule::Str::lit(".unsafe_cast<", 13));
					_1c8a93b62_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_170634_m))._field_Base.alloc)._field_Kind);
				};
				_1c8a7e147_write((*_self_.alloc)._field_oc, jule::Str::lit(">()", 3));
			}
		}
		else {
			_case_begin_1cc731d07:;
			{
				__jule_panic_s(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1719:4"));;
			}
		}
		_match_end_1cc731c19:;
	};
}



inline void _1c89b3477_model(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Any _172326_m) {
	{
		auto &_match_expr{ _172326_m };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1cc732a3e:;
			{
				_1c8a7e147_write((*(_self_))._field_oc, _172326_m.cast<jule::Str>(&__jule_any_type4));
			}
		}
		else if (_match_expr.type == &__jule_any_type135) {
			_case_begin_1cc737a77:;
			{
				_1c8a7e147_write((*(_self_))._field_oc, (*(_172326_m.unsafe_cast_ptr<jule::Str>())));
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1cc737add:;
			{
				_1c8a93b62_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _172326_m.cast_ptr<_1e5e417ea_TypeKind>(&__jule_any_type86));
			}
		}
		else if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1cc737b54:;
			{
				_1c89a6525_constant(_self_, _172326_m.cast_ptr<_1e21a449b_Const>(&__jule_any_type20));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1cc737bba:;
			{
				_1c89a8549_var(_self_, _172326_m.cast_ptr<_1e5da0bcc_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1cc737c31:;
			{
				_1c89a8802_structureIns(_self_, _172326_m.cast_ptr<_1e5cc8c7b_StructIns>(&__jule_any_type9));
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1cc737c97:;
			{
				_1c89ad3c8_funcInsCommon(_self_, _172326_m.cast_ptr<_1e5ce3416_FnIns>(&__jule_any_type7));
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1cc738902:;
			{
				_1c89a7812_unsafeBinary(_self_, (*(_172326_m.unsafe_cast_ptr<_1e6038408_UnsafeBinaryExprModel>()))._field_Node);
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1cc738968:;
			{
				_1c89a8291_binary(_self_, _172326_m.cast_ptr<_1e5cd2d51_BinaryExprModel>(&__jule_any_type113));
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1cc7389ce:;
			{
				_1c89a8aaa_unary(_self_, _172326_m.cast_ptr<_1e5cd322a_UnaryExprModel>(&__jule_any_type112));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1cc738a45:;
			{
				_1c89a8d63_structureLit(_self_, _172326_m.cast_ptr<_1e5cd3aee_StructLitExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1cc738aab:;
			{
				_1c89a911b_allocStructure(_self_, _172326_m.cast_ptr<_1e5cd3deb_AllocStructLitExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1cc738b22:;
			{
				_1c89a9a9a_casting(_self_, _172326_m.cast_ptr<_1e5cd447e_CastingExprModel>(&__jule_any_type95));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1cc738b88:;
			{
				_1c89ab6c3_funcCall(_self_, _172326_m.cast_ptr<_1e5cd4d31_FnCallExprModel>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1cc738bee:;
			{
				_1c89ab97b_slice(_self_, _172326_m.cast_ptr<_1e5cd520a_SliceExprModel>(&__jule_any_type79));
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1cc738c76:;
			{
				_1c89ad120_array(_self_, _172326_m.cast_ptr<_1e5cd8142_ArrayExprModel>(&__jule_any_type87));
			}
		}
		else if (_match_expr.type == &__jule_any_type134) {
			_case_begin_1cc738ced:;
			{
				_1c89abedc_unsafeIndexing(_self_, _172326_m.cast_ptr<_1e603878d_UnsafeIndexingExprModel>(&__jule_any_type134));
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1cc738d75:;
			{
				_1c89abc34_indexing(_self_, _172326_m.cast_ptr<_1e5cd56b1_IndexingExprModel>(&__jule_any_type52));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1cc738dec:;
			{
				_1c89ac295_anonFunc(_self_, _172326_m.cast_ptr<_1e5cd5b67_AnonFnExprModel>(&__jule_any_type102));
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1cc738e74:;
			{
				_1c89ac54d_mapExpr(_self_, _172326_m.cast_ptr<_1e5cd641a_MapExprModel>(&__jule_any_type101));
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1cc738eeb:;
			{
				_1c89ac806_slicing(_self_, _172326_m.cast_ptr<_1e5cd699d_SlicingExprModel>(&__jule_any_type94));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1cc739073:;
			{
				_1c89acaae_traitSub(_self_, _172326_m.cast_ptr<_1e5cd7031_TraitSubIdentExprModel>(&__jule_any_type99));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1cc7390ea:;
			{
				_1c89acd67_structureSub(_self_, _172326_m.cast_ptr<_1e5cd78c2_StructSubIdentExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1cc739172:;
			{
				_1c89ad939_tuple(_self_, _172326_m.cast_ptr<_1e5cd843e_TupleExprModel>(&__jule_any_type83));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1cc7391e9:;
			{
				_1c89ade9a_outCall(_self_, _172326_m.cast_ptr<_1e5cd8818_BuiltinOutCallExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1cc739271:;
			{
				_1c89ae253_outlnCall(_self_, _172326_m.cast_ptr<_1e5cd8be2_BuiltinOutlnCallExprModel>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1cc7392e8:;
			{
				_1c89adbe2_newCall(_self_, _172326_m.cast_ptr<_1e5cd90bb_BuiltinNewCallExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1cc739370:;
			{
				_1c89ae50b_panicCall(_self_, _172326_m.cast_ptr<_1e5cd9495_BuiltinPanicCallExprModel>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1cc7393e7:;
			{
				_1c89ae7b4_errorCall(_self_, _172326_m.cast_ptr<_1e5cdb09b_BuiltinErrorCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1cc73946e:;
			{
				_1c89b0ba0_makeCall(_self_, _172326_m.cast_ptr<_1e5cd994b_BuiltinMakeCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1cc7394e6:;
			{
				_1c89b14b9_appendCall(_self_, _172326_m.cast_ptr<_1e5cd9d25_BuiltinAppendCallExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1cc73956d:;
			{
				_1c89aea6c_copyCall(_self_, _172326_m.cast_ptr<_1e5cdabc2_BuiltinCopyCallExprModel>(&__jule_any_type37));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1cc7395e5:;
			{
				_1c89aed25_lenCall(_self_, _172326_m.cast_ptr<_1e5cda122_BuiltinLenCallExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1cc73966c:;
			{
				_1c89b00cd_capCall(_self_, _172326_m.cast_ptr<_1e5cda41e_BuiltinCapCallExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1cc7396e4:;
			{
				_1c89b0386_deleteCall(_self_, _172326_m.cast_ptr<_1e5cda7e8_BuiltinDeleteCallExprModel>(&__jule_any_type38));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1cc73976b:;
			{
				_1c89b1772_sizeof(_self_, _172326_m.cast_ptr<_1e5cdb398_SizeofExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1cc7397e3:;
			{
				_1c89b1a2a_alignof(_self_, _172326_m.cast_ptr<_1e5cdba4c_AlignofExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1cc73986a:;
			{
				_1c89b1cd3_runeLit(_self_, _172326_m.cast_ptr<_1e5cdbc39_RuneExprModel>(&__jule_any_type85));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1cc7398e2:;
			{
				_1c89b208b_structureStatic(_self_, _172326_m.cast_ptr<_1e5cd7c68_StructStaticIdentExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1cc739969:;
			{
				_1c89b2344_backendEmit(_self_, _172326_m.cast_ptr<_1e5cdc0ad_BackendEmitExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1cc7399e1:;
			{
				_1c89b25ec_free(_self_, _172326_m.cast_ptr<_1e5cdc3aa_FreeExprModel>(&__jule_any_type39));
			}
		}
		else if (_match_expr.type == &__jule_any_type128) {
			_case_begin_1cc739a68:;
			{
				_1c89b28a5_strComp(_self_, _172326_m.cast_ptr<_1e6037a78_StrCompExprModel>(&__jule_any_type128));
			}
		}
		else if (_match_expr.type == &__jule_any_type131) {
			_case_begin_1cc739ae0:;
			{
				_1c89a8549_var(_self_, (*(_172326_m.unsafe_cast_ptr<_1e6037605_RefExprModel>()))._field_Var);
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_1cc739b67:;
			{
				_1c89b2b5d_emptyCompare(_self_, _172326_m.cast_ptr<_1e6037281_EmptyCompareExprModel>(&__jule_any_type127));
			}
		}
		else if (_match_expr.type == &__jule_any_type130) {
			_case_begin_1cc739bde:;
			{
				_1c89b2e16_unsafeDeref(_self_, _172326_m.cast_ptr<_1e6039717_UnsafeDerefExprModel>(&__jule_any_type130));
			}
		}
		else if (_match_expr.type == &__jule_any_type133) {
			_case_begin_1cc739c66:;
			{
				_1c89b31be_unsafeCasting(_self_, _172326_m.cast_ptr<_1e6039a14_UnsafeCastingExprModel>(&__jule_any_type133));
			}
		}
		else {
			_case_begin_1cc737a11:;
			{
				_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1cc737923:;
	};
}



inline jule::Bool _1c89b37b8_handleFieldByDefault(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cc81cb_FieldIns>* _182342_f) {
	jule::Bool __jule_func_result = false;
	if (((*((*(_182342_f))))._field_Default != nullptr)) {
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
		static__1c89bc838_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_182342_f))))._field_Decl));
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
		_1c89a93c4_possibleRefExpr(_self_, (*(*((*(_182342_f))))._field_Default.alloc)._field_Model);
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_1c8a9aa15_ableToInit(&((*((*(_182342_f))))._field_Kind))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	static__1c89bc838_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_182342_f))))._field_Decl));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
	_1c89b4643_initExpr(_self_, (*((*(_182342_f))))._field_Kind);
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1c89b3a71_initStructLit(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5cc8c7b_StructIns>* _184435_s) {
	if ((*((*((*(_184435_s))))._field_Decl))._field_Binded) {
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1c8a91e18_structureIns((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_184435_s)));
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("){}", 3));
		return;;
	};
	_1c8a91e18_structureIns((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_184435_s)));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
	jule::Bool _18537_inited = false;;
	{
		auto expr = &((*((*(_184435_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc75bbde:;
		if (it != expr_end) {
			jule::Ptr<_1e5cc81cb_FieldIns> _185415_f = *it;
			{
				if (_18537_inited) {
					_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
				_18537_inited=_1c89b37b8_handleFieldByDefault(_self_, &(_185415_f));
			}
			_iter_next_1cc75bbde:;
			++it;
			goto _iter_begin_1cc75bbde;
		}
		_iter_end_1cc75bbde:;
	};
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1c89b3d29_fillCollectionByDefault(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5e417ea_TypeKind>* _186645_elem) {
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("for (; ", 7));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" < ", 3));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("_end; ++", 8));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(") *", 3));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1c89b4643_initExpr(_self_, (*(_186645_elem)));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
}



inline void _1c89b40d2_initCollection(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5e417ea_TypeKind>* _188136_elem) {
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("auto ", 5));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(".begin(); const auto ", 21));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("_end = ", 7));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(".end(); ", 8));
	_1c89b3d29_fillCollectionByDefault(_self_, _188136_elem);
}



inline void _1c89b438a_initArray(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5e51233_Arr>* _189531_arr) {
	if (((*((*(_189531_arr))))._field_N == 0LL)) {
		_1c8a9227b_array((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_189531_arr)));
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	_1c8a9227b_array((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_189531_arr)));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("(); ", 4));
	_1c89b40d2_initCollection(_self_, &((*((*(_189531_arr))))._field_Elem));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" __jule_collection; })", 22));
}



inline void _1c89b4643_initExpr(jule::Ptr<_1c89a4c60_exprCoder> _self_, jule::Ptr<_1e5e417ea_TypeKind> _190929_t) {
	if (_1e5e436ed_NilCompatible(_190929_t.ptr())) {
		if ((_1e5e45a41_Map(_190929_t) != nullptr)) {
			_1c8a93b62_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _190929_t);
			_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("{}", 2));
			return;;
		};
		if ((_1e5e444bd_Ptr(_190929_t) != nullptr)) {
			_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
		} else {
			_1c8a93b62_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), _190929_t);
			_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("(nullptr)", 9));
		};
		return;;
	};
	jule::Ptr<_1e5e4ea06_Tuple> _19247_tup = _1e5e45cc7_Tup(_190929_t);;
	if ((_19247_tup != nullptr)) {
		_1c8a9843b_tup((*(*((*(_self_))._field_oc))._field_tc.alloc)._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _19247_tup);
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
		{
			auto expr = &((*_19247_tup.alloc)._field_Types);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1cc7753ab:;
			if (it != expr_end) {
				jule::I64 _19289_i = it - expr->begin();
				jule::Ptr<_1e5e417ea_TypeKind> _192816_tt = *it;
				{
					if ((!(_1c8a9ace0_shouldInitialized(&(_192816_tt))))) {
						goto _iter_next_1cc7753ab;
					};
					_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(".__jule_result_arg", 18));
					_1c8a7e147_write((*(_self_))._field_oc, _1e2195e4e_Itoa(_19289_i));
					_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
					_1c89b4643_initExpr(_self_, _192816_tt);
					if ((((*_19247_tup.alloc)._field_Types.len() - _19289_i) > 1LL)) {
						_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
				_iter_next_1cc7753ab:;
				++it;
				_19289_i++;
				goto _iter_begin_1cc7753ab;
			}
			_iter_end_1cc7753ab:;
		};
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		return;;
	};
	jule::Ptr<_1e5d065c2_Enum> _19437_enm = _1e5e44754_Enum(_190929_t);;
	if ((_19437_enm != nullptr)) {
		_1c89b3477_model(_self_, (*((*((*((*_19437_enm.alloc)._field_Items[0LL]))._field_Value))._field_Data))._field_Model);
		return;;
	};
	jule::Ptr<_1e5e49913_Prim> _19483_prim = _1e5e43ea1_Prim(_190929_t);;
	if ((_19483_prim != nullptr)) {
		if (_1e21a3e07_IsNum((*_19483_prim.alloc)._field_Kind)) {
			_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("0", 1));
		} else if (_1e5e4cb47_IsBool(_19483_prim)) {
			_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("false", 5));
		} else if (_1e5e4cdcd_IsStr(_19483_prim)) {
			_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("jule::Str()", 11));
		};
		return;;
	};
	if ((_1e5e44c71_Arr(_190929_t) != nullptr)) {
		jule::Ptr<_1e5e51233_Arr> _19608_arr = _1e5e44c71_Arr(_190929_t);;
		_1c89b438a_initArray(_self_, &(_19608_arr));
		return;;
	};
	jule::Ptr<_1e5cc8c7b_StructIns> _19647_s = _1e5e45524_Struct(_190929_t);;
	if ((_19647_s != nullptr)) {
		_1c89b3a71_initStructLit(_self_, &(_19647_s));
		return;;
	};
	_1c8a93b62_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), _190929_t);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
}








inline jule::Bool _1c89b7514_TestCoder_eq(_1c89b7514_TestCoder *_self_, _1c89b7514_TestCoder _other_) {
	return 
		(_self_->_field_t == _other_._field_t) &&
		(_self_->_field_tmReset == _self_->_field_tmReset) &&
		(_self_->_field_tmFailed == _self_->_field_tmFailed) &&
		(_self_->_field_tmSkipped == _self_->_field_tmSkipped) &&
		(_self_->_field_oc == _self_->_field_oc);
}

inline jule::Ptr<_1c89b7514_TestCoder> static__1c89b79ba_New(jule::Ptr<_1c8a7d92c_ObjectCoder>* _2921_oc) {
	return jule::new_ptr<_1c89b7514_TestCoder>(_1c89b7514_TestCoder{._field_t=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_tmReset=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_tmFailed=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_tmSkipped=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_oc=(*(_2921_oc))});;
}



inline jule::Ptr<_1e5d5b2e7_ImportInfo> _1c89b7c51_findTestingPackage(jule::Ptr<_1c89b7514_TestCoder> _self_) {
	{
		auto expr = &((*((*((*(_self_))._field_oc))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc780d56:;
		if (it != expr_end) {
			jule::Ptr<_1e5d5b2e7_ImportInfo> _3615_imp = *it;
			{
				if ((*(_3615_imp))._field_LinkPath.equal("std::testing", 12)) {
					return _3615_imp;;
				};
			}
			_iter_next_1cc780d56:;
			++it;
			goto _iter_begin_1cc780d56;
		}
		_iter_end_1cc780d56:;
	};
	return nullptr;;
}



inline void _1c89b8009_appendTest(jule::Ptr<_1c89b7514_TestCoder> _self_, jule::Ptr<_1e5ce3416_FnIns> _4431_f) {
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	_1c89b8746_callTmReset(_self_);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str(\">>> TEST RUNNING: \" ", 50));
	_1c89b5402_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_4431_f))._field_Decl))._field_Ident);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" \"\\n\").fake_slice());\n", 22));
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	static__1c89bb89d_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_4431_f));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("(_t);\n", 6));
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("post_test();\n", 13));
}



inline void _1c89b82b2_appendPackageTests(jule::Ptr<_1c89b7514_TestCoder> _self_, jule::Ptr<_1e5d5e21d_Package>* _5940_p) {
	{
		auto expr = &((*((*(_5940_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc787632:;
		if (it != expr_end) {
			jule::Ptr<_1e5e03548_SymbolTable> _6015_file = *it;
			{
				{
					auto expr = &((*(_6015_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cc7880b1:;
					if (it != expr_end) {
						jule::Ptr<_1e5ce0358_Fn> _6116_f = *it;
						{
							if (_1e6a0bcdd_HasDirective(&((*(_6116_f))._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4)))) {
								_1c89b8009_appendTest(_self_, (*_6116_f.alloc)._field_Instances[0LL]);
							};
						}
						_iter_next_1cc7880b1:;
						++it;
						goto _iter_begin_1cc7880b1;
					}
					_iter_end_1cc7880b1:;
				};
			}
			_iter_next_1cc787632:;
			++it;
			goto _iter_begin_1cc787632;
		}
		_iter_end_1cc787632:;
	};
}



inline jule::Bool _1c89b8548_readyTestingPackage(jule::Ptr<_1c89b7514_TestCoder> _self_) {
	jule::Ptr<_1e5d5b2e7_ImportInfo> _707_p = _1c89b7c51_findTestingPackage(_self_);;
	if ((_707_p == nullptr)) {
		return false;;
	};
	;
	(*_self_.alloc)._field_t=(*(_1e5d5c507_FindStruct(_707_p.ptr(), jule::Str::lit("T", 1), false)))._field_Instances[0LL];
	;
	(*_self_.alloc)._field_tmReset=_1e5cc9d26_FindMethod((*_self_.alloc)._field_t.ptr(), jule::Str::lit("reset", 5), false);
	(*_self_.alloc)._field_tmFailed=_1e5cc9d26_FindMethod((*(_self_))._field_t, jule::Str::lit("Failed", 6), false);
	(*_self_.alloc)._field_tmSkipped=_1e5cc9d26_FindMethod((*(_self_))._field_t, jule::Str::lit("Skipped", 7), false);
	return true;;
}



inline void _1c89b8746_callTmReset(jule::Ptr<_1c89b7514_TestCoder> _self_) {
	static__1c89bb5b2_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmReset));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1c89b8944_callTmFailed(jule::Ptr<_1c89b7514_TestCoder> _self_) {
	static__1c89bb5b2_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmFailed));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1c89b8b42_callTmSkipped(jule::Ptr<_1c89b7514_TestCoder> _self_) {
	static__1c89bb5b2_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmSkipped));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1c89b8d40_Serialize(jule::Ptr<_1c89b7514_TestCoder> _self_) {
	_1c8a8abe2_serializeHead((*(_self_))._field_oc);
	__JULE_DEFER({
		_1c8a8a483_end((*(_self_))._field_oc);
	});;
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("\nvoid test_point(void) {\n", 25));
	_1c8a7e5ed_addIndent((*(_self_))._field_oc);
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	if ((!(_1c89b8548_readyTestingPackage(_self_)))) {
		_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		_1c8a7e7eb_doneIndent((*(_self_))._field_oc);
		return;;
	};
	_224497295_StrBuilder _1207_tb = static__2244a0b83_New(40LL);;
	_1c8a91e18_structureIns((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &(_1207_tb), (*_self_.alloc)._field_t);
	_1c8a8ed5b_asSptr((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), _2244a2338_Buf(&_1207_tb));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(" _t = jule::new_ptr<", 20));
	_1c8a7e400_writeBytes((*(_self_))._field_oc, _2244a2338_Buf(&_1207_tb));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(">(); _t.ref = nullptr;\n", 23));
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("jule::U64 total = 0, failed = 0, skipped = 0;\n", 46));
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("auto post_test = [&](void) {\n", 29));
	_1c8a7e5ed_addIndent((*(_self_))._field_oc);
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("++total;\n", 9));
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
	_1c89b8944_callTmFailed(_self_);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(") { ++failed; __jule_writeStdout(jule::Str::lit(\"    [*] FAILED\\n\", 16).fake_slice()); }\n", 89));
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("else if (", 9));
	_1c89b8b42_callTmSkipped(_self_);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit(") { ++skipped; __jule_writeStdout(jule::Str::lit(\"    [*] SKIPPED\\n\", 17).fake_slice()); }\n", 91));
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("else { __jule_writeStdout(jule::Str::lit(\"    [*] PASSED\\n\", 16).fake_slice()); }\n", 82));
	_1c8a7e7eb_doneIndent((*(_self_))._field_oc);
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("};\n", 3));
	_1c89b82b2_appendPackageTests(_self_, &((*((*(*(_self_))._field_oc.alloc)._field_ir))._field_Main));
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("\n\n", 2));
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\"\\ntotal tests: \", 14).fake_slice());\n", 72));
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(__jule_u64ToStr(total).fake_slice());\n", 57));
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\" skipped: \", 10).fake_slice());\n", 67));
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(__jule_u64ToStr(skipped).fake_slice());\n", 59));
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\" failed: \", 9).fake_slice());\n", 65));
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(__jule_u64ToStr(failed).fake_slice());\n", 58));
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\" pass: \", 7).fake_slice());\n", 63));
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(__jule_u64ToStr(total-failed-skipped).fake_slice());\n", 72));
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\"\\n\", 1).fake_slice());\n", 58));
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("if (failed != 0) std::exit(1);\n", 31));
	_1c8a7e7eb_doneIndent((*(_self_))._field_oc);
	_1c8a7e9e9_indent((*(_self_))._field_oc);
	_1c8a7e147_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
}








inline jule::Bool _1c89ba490_identCoder_eq(_1c89ba490_identCoder *_self_, _1c89ba490_identCoder _other_) { return true; }

inline void static__1c89ba9ce_writeIdentTo(_224497295_StrBuilder* _3530_buf, jule::Str* _3548_ident) {
	{
		auto expr = _3548_ident;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc7a9247:;
		if (it != expr_end) {
			jule::U8 *_3610_b = it;
			{
				if (((*(_3610_b)) >= 128LLU)) {
					goto _julec_label_1cc7a95bb;
				};
			}
			_iter_next_1cc7a9247:;
			++it;
			goto _iter_begin_1cc7a9247;
		}
		_iter_end_1cc7a9247:;
	};
	_2244a1090_WriteStr(_3530_buf, (*(_3548_ident)));
	return;;
	_julec_label_1cc7a95bb:;
	{
		auto expr = _3548_ident;
		jule::U8 *it = expr->begin();
		const jule::U8 *end = it + expr->len();
		jule::Int len;
		jule::I32 _4610_r;
		_iter_begin_1cc7aa105:;
		__jule_runeStep(it, end - it, &_4610_r, &len);
		if (it < end) {
			{
				if ((_4610_r < 128LL)) {
					_2244a1348_WriteByte(_3530_buf, static_cast<jule::U8>(_4610_r));
					goto _iter_next_1cc7aa105;
				};
				_2244a1090_WriteStr(_3530_buf, _1e2195b85_FmtInt(static_cast<jule::I64>(_4610_r), 15LL));
			}
			_iter_next_1cc7aa105:;
			it += len;
			goto _iter_begin_1cc7aa105;
		}
	};
}



inline void static__1c89bad75_toOut(_224497295_StrBuilder* _6323_buf, jule::Str _6340_ident, jule::Uintptr _6352_addr) {
	_2244a1348_WriteByte(_6323_buf, '_');
	if ((_6352_addr != 0LLU)) {
		_2244a1090_WriteStr(_6323_buf, _1e21957bc_FmtUint(static_cast<jule::U64>(_6352_addr), 15LL));
		_2244a1348_WriteByte(_6323_buf, '_');
	};
	static__1c89ba9ce_writeIdentTo(_6323_buf, &(_6340_ident));
}



inline void static__1c89bb2c6_toLocal(_224497295_StrBuilder* _7825_buf, jule::I64 _7842_row, jule::I64 _7852_col, jule::Str* _7863_ident) {
	_2244a1348_WriteByte(_7825_buf, '_');
	_2244a1090_WriteStr(_7825_buf, _1e2195e4e_Itoa(_7842_row));
	_2244a1090_WriteStr(_7825_buf, _1e2195e4e_Itoa(_7852_col));
	_2244a1348_WriteByte(_7825_buf, '_');
	static__1c89ba9ce_writeIdentTo(_7825_buf, _7863_ident);
}



inline void static__1c89bb5b2_func(_224497295_StrBuilder* _8622_buf, jule::Ptr<_1e5ce0358_Fn>* _8644_f) {
	{
		
		if ((*((*(_8644_f))))._field_Binded) {
			_case_begin_1cc7ae538:;
			{
				_2244a1090_WriteStr(_8622_buf, (*((*(_8644_f))))._field_Ident);
				return;;
			}
		}
		else if ((*((*(_8644_f))))._field_Ident.equal("main", 4)) {
			_case_begin_1cc7ae5d2:;
			{
				_2244a1090_WriteStr(_8622_buf, jule::Str::lit("entry_point", 11));
				return;;
			}
		}
		else if (_1e5ce0a95_IsMethod((*(_8644_f)).ptr())) {
			_case_begin_1cc7ae648:;
			{
				if ((*((*(_8644_f))))._field_Statically) {
					_2244a1090_WriteStr(_8622_buf, jule::Str::lit("static_", 7));
				};
			}
		}
		_match_end_1cc7ae3c3:;
	};
	jule::Ptr<_1e5ca44a4_Directive> _993_export = _1e6a0b925_FindDirective(&((*((*(_8644_f))))._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6)));;
	if ((_993_export != nullptr)) {
		_2244a1090_WriteStr(_8622_buf, (*((*_993_export.alloc)._field_Args[0LL]))._field_Kind);
		return;;
	};
	static__1c89bad75_toOut(_8622_buf, (*((*(_8644_f))))._field_Ident, static_cast<jule::Uintptr>((*(_8644_f))));
}



inline void static__1c89bb89d_funcIns(_224497295_StrBuilder* _10725_buf, jule::Ptr<_1e5ce3416_FnIns>* _10747_f) {
	if (_1e5ce48ce_IsBuiltin((*(_10747_f)).ptr())) {
		_2244a1090_WriteStr(_10725_buf, jule::Str::lit("jule::", 6));
		_2244a1090_WriteStr(_10725_buf, (*((*((*(_10747_f))))._field_Decl))._field_Ident);
		return;;
	};
	if (((*(*((*(_10747_f))))._field_Decl.alloc)._field_Binded || ((*((*(_10747_f))))._field_Generics.len() == 0LL))) {
		static__1c89bb5b2_func(_10725_buf, &((*((*(_10747_f))))._field_Decl));
		return;;
	};
	static__1c89bad75_toOut(_10725_buf, (*(*((*(_10747_f))))._field_Decl.alloc)._field_Ident, static_cast<jule::Uintptr>((*(_10747_f))));
}



inline void static__1c89bbb89_traitDecl(_224497295_StrBuilder* _12227_buf, jule::Ptr<_1e5d03db6_Trait> _12244_t) {
	static__1c89bad75_toOut(_12227_buf, (*(_12244_t))._field_Ident, static_cast<jule::Uintptr>(_12244_t));
}



inline void static__1c89bbe75_param(_224497295_StrBuilder* _12623_buf, jule::Ptr<_1e5cdd884_Param>* _12641_p) {
	if ((_1e5c9277d_IsAnonIdent((*((*(_12641_p))))._field_Ident) || _1e5c924b4_IsIgnoreIdent((*((*(_12641_p))))._field_Ident))) {
		return;;
	};
	if (_1e5cdded3_IsSelf((*(_12641_p)).ptr())) {
		_2244a1090_WriteStr(_12623_buf, jule::Str::lit("_self_", 6));
		return;;
	};
	if (((*((*(_12641_p))))._field_Token == nullptr)) {
		static__1c89bb2c6_toLocal(_12623_buf, 0LL, 0LL, &((*((*(_12641_p))))._field_Ident));
		return;;
	};
	static__1c89bb2c6_toLocal(_12623_buf, (*((*((*(_12641_p))))._field_Token))._field_Row, (*((*((*(_12641_p))))._field_Token))._field_Column, &((*((*(_12641_p))))._field_Ident));
}



inline void static__1c89bc261_structure(_224497295_StrBuilder* _14127_buf, jule::Ptr<_1e5cc5e21_Struct>* _14145_s) {
	if ((*((*(_14145_s))))._field_Binded) {
		if ((!(_1e6a0bcdd_HasDirective(&((*((*(_14145_s))))._field_Directives), static_cast<jule::Str>(jule::Str::lit("typedef", 7)))))) {
			_2244a1090_WriteStr(_14127_buf, jule::Str::lit("struct ", 7));
		};
		_2244a1090_WriteStr(_14127_buf, (*((*(_14145_s))))._field_Ident);
		return;;
	};
	static__1c89bad75_toOut(_14127_buf, (*((*(_14145_s))))._field_Ident, static_cast<jule::Uintptr>((*(_14145_s))));
}



inline void static__1c89bc54c_structureIns(_224497295_StrBuilder* _15230_buf, jule::Ptr<_1e5cc8c7b_StructIns>* _15248_s) {
	if (((*((*((*(_15248_s))))._field_Decl))._field_Binded || ((*((*(_15248_s))))._field_Generics.len() == 0LL))) {
		static__1c89bc261_structure(_15230_buf, &((*((*(_15248_s))))._field_Decl));
		return;;
	};
	static__1c89bad75_toOut(_15230_buf, (*(*((*(_15248_s))))._field_Decl.alloc)._field_Ident, static_cast<jule::Uintptr>((*(_15248_s))));
}



inline void static__1c89bc838_field(_224497295_StrBuilder* _16023_buf, jule::Ptr<_1e5cc2eea_Field>* _16041_f) {
	if ((*((*((*(_16041_f))))._field_Owner))._field_Binded) {
		_2244a1090_WriteStr(_16023_buf, (*((*(_16041_f))))._field_Ident);
		return;;
	};
	_2244a1090_WriteStr(_16023_buf, jule::Str::lit("_field_", 7));
	static__1c89ba9ce_writeIdentTo(_16023_buf, &((*((*(_16041_f))))._field_Ident));
}



inline void static__1c89bcb24_var(_224497295_StrBuilder* _17021_buf, jule::Ptr<_1e5da0bcc_Var> _17042_v) {
	{
		
		if ((*(_17042_v))._field_Binded) {
			_case_begin_1cc7c114e:;
			{
				_2244a1090_WriteStr(_17021_buf, (*_17042_v.alloc)._field_Ident);
			}
		}
		else if (((*(_17042_v))._field_Ident == static_cast<jule::Str>(jule::Str::lit("error", 5)))) {
			_case_begin_1cc7c036d:;
			{
				_2244a1090_WriteStr(_17021_buf, jule::Str::lit("except.error", 12));
			}
		}
		else if (((*(_17042_v))._field_Ident == static_cast<jule::Str>(jule::Str::lit("self", 4)))) {
			_case_begin_1cc7be405:;
			{
				_2244a1090_WriteStr(_17021_buf, jule::Str::lit("_self_", 6));
			}
		}
		else if (((*(_17042_v))._field_RetOrder == -1LL)) {
			_case_begin_1cc7be46b:;
			{
				_2244a1090_WriteStr(_17021_buf, jule::Str::lit("__jule_func_result", 18));
			}
		}
		else if (((*(_17042_v))._field_RetOrder >= 0LL)) {
			_case_begin_1cc7be4d2:;
			{
				_2244a1090_WriteStr(_17021_buf, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
				_2244a1090_WriteStr(_17021_buf, _1e2195e4e_Itoa((*_17042_v.alloc)._field_RetOrder));
			}
		}
		else if (((*(_17042_v))._field_Scope != nullptr)) {
			_case_begin_1cc7be548:;
			{
				static__1c89bb2c6_toLocal(_17021_buf, (*((*_17042_v.alloc)._field_Token))._field_Row, (*(*(_17042_v))._field_Token.alloc)._field_Column, &((*_17042_v.alloc)._field_Ident));
			}
		}
		else {
			_case_begin_1cc7be38e:;
			{
				jule::Ptr<_1e5ca44a4_Directive> _1884_export = _1e6a0b925_FindDirective(&((*(_17042_v))._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6)));;
				if ((_1884_export != nullptr)) {
					_2244a1090_WriteStr(_17021_buf, (*((*_1884_export.alloc)._field_Args[0LL]))._field_Kind);
					return;;
				};
				static__1c89bad75_toOut(_17021_buf, (*_17042_v.alloc)._field_Ident, static_cast<jule::Uintptr>(_17042_v));
			}
		}
		_match_end_1cc7be27e:;
	};
}



inline void static__1c89bce10_iterBegin(_224497295_StrBuilder* _19727_buf, jule::Uintptr _19744_it) {
	_2244a1090_WriteStr(_19727_buf, jule::Str::lit("_iter_begin_", 12));
	_2244a1090_WriteStr(_19727_buf, _1e21957bc_FmtUint(static_cast<jule::U64>(_19744_it), 15LL));
}



inline void static__1c89bd1eb_iterEnd(_224497295_StrBuilder* _20225_buf, jule::Uintptr _20242_it) {
	_2244a1090_WriteStr(_20225_buf, jule::Str::lit("_iter_end_", 10));
	_2244a1090_WriteStr(_20225_buf, _1e21957bc_FmtUint(static_cast<jule::U64>(_20242_it), 15LL));
}



inline void static__1c89bd4d7_iterNext(_224497295_StrBuilder* _20726_buf, jule::Uintptr _20743_it) {
	_2244a1090_WriteStr(_20726_buf, jule::Str::lit("_iter_next_", 11));
	_2244a1090_WriteStr(_20726_buf, _1e21957bc_FmtUint(static_cast<jule::U64>(_20743_it), 15LL));
}



inline void static__1c89bd7c3_label(_224497295_StrBuilder* _21223_buf, jule::Uintptr _21240_u) {
	_2244a1090_WriteStr(_21223_buf, jule::Str::lit("_julec_label_", 13));
	_2244a1090_WriteStr(_21223_buf, _1e21957bc_FmtUint(static_cast<jule::U64>(_21240_u), 15LL));
}



inline void static__1c89bdaae_matchEnd(_224497295_StrBuilder* _21726_buf, jule::Uintptr _21743_m) {
	_2244a1090_WriteStr(_21726_buf, jule::Str::lit("_match_end_", 11));
	_2244a1090_WriteStr(_21726_buf, _1e21957bc_FmtUint(static_cast<jule::U64>(_21743_m), 15LL));
}



inline void static__1c89bdd9a_caseBegin(_224497295_StrBuilder* _22227_buf, jule::Uintptr _22244_c) {
	_2244a1090_WriteStr(_22227_buf, jule::Str::lit("_case_begin_", 12));
	_2244a1090_WriteStr(_22227_buf, _1e21957bc_FmtUint(static_cast<jule::U64>(_22244_c), 15LL));
}








inline jule::Bool _1c8a767c1_SerializationInfo_eq(_1c8a767c1_SerializationInfo *_self_, _1c8a767c1_SerializationInfo _other_) {
	return 
		(_self_->_field_Compiler == _other_._field_Compiler) &&
		(_self_->_field_CompilerCommand == _self_->_field_CompilerCommand);
}






inline jule::Bool _1c8a76bde_traitCast_eq(_1c8a76bde_traitCast *_self_, _1c8a76bde_traitCast _other_) {
	return 
		(_self_->_field_t1 == _other_._field_t1) &&
		(_self_->_field_t2 == _self_->_field_t2);
}






inline jule::Bool _1c8a770b8_anonHash_eq(_1c8a770b8_anonHash *_self_, _1c8a770b8_anonHash _other_) {
	return 
		(_self_->_field_expr == _other_._field_expr) &&
		(_self_->_field_ident == _self_->_field_ident);
}






inline jule::Bool _1c8a7c299_metadata_eq(_1c8a7c299_metadata *_self_, _1c8a7c299_metadata _other_) {
	return 
		(_self_->_field_concurrent == _other_._field_concurrent);
}





inline jule::Ptr<_1c8a7d92c_ObjectCoder> static__1c8a7dd8e_New(jule::Ptr<_1e6a03ab5_IR>* _14021_ir, _1c8a767c1_SerializationInfo _14030_info) {
	jule::Ptr<_1c8a7d92c_ObjectCoder> _1417_oc = jule::new_ptr<_1c8a7d92c_ObjectCoder>(_1c8a7d92c_ObjectCoder{._field_Buf=_224497295_StrBuilder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_resultDecls=_224497295_StrBuilder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_anyObj=_224497295_StrBuilder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_anonObj=_224497295_StrBuilder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_deallocObj=_224497295_StrBuilder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_coSpawnObj=_224497295_StrBuilder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_ir=(*(_14021_ir)), ._field_info=_14030_info, ._field_anons=jule::Slice<jule::Ptr<_1c8a770b8_anonHash>>(nullptr), ._field_deallocated=jule::Slice<jule::Ptr<_1e5e417ea_TypeKind>>(nullptr), ._field_indentBuffer=jule::Slice<jule::U8>(nullptr), ._field_resultMap=static__1cc26673d_make(), ._field_anyTypeMap=jule::Slice<jule::Ptr<_1e5e417ea_TypeKind>>(nullptr), ._field_traitCastMap=jule::Slice<_1c8a76bde_traitCast>(nullptr), ._field_coSpawnMap=jule::Slice<jule::Ptr<_1e5ce3416_FnIns>>(nullptr), ._field_traitMetMap=static__1cc2b21a1_make(), ._field_ec=jule::Ptr<_1c89a4c60_exprCoder>(nullptr), ._field_sc=jule::Ptr<_1c899847e_scopeCoder>(nullptr), ._field_tc=jule::Ptr<_1c8a8d95e_typeCoder>(nullptr), ._field_headPos=0, ._field_declPos=0, ._field_wrapPos=0, ._field_meta=_1c8a7c299_metadata{._field_concurrent=false}});;
	(*(_1417_oc))._field_ec=static__1c89a515b_new(&(_1417_oc));
	(*_1417_oc.alloc)._field_sc=static__1c8998b77_new(&(_1417_oc));
	(*_1417_oc.alloc)._field_tc=static__1c8a8deae_new(&(_1417_oc));
	return _1417_oc;;
}



inline void _1c8a7e147_write(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Str _15322_s) {
	_2244a1090_WriteStr(&(*(_self_))._field_Buf, _15322_s);
}



inline void _1c8a7e400_writeBytes(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Slice<jule::U8> _15727_b) {
	_2244a0cd7_Write(&(*(_self_))._field_Buf, _15727_b);
}



inline void _1c8a7e5ed_addIndent(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_) {
	(*(_self_))._field_indentBuffer=jule::append((*_self_.alloc)._field_indentBuffer,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = 9LLU; __jule_collection; }));
}



inline void _1c8a7e7eb_doneIndent(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_) {
	((*(_self_))._field_indentBuffer).mut_slice(0LL, ((*(_self_))._field_indentBuffer.len() - 1LL));;
}



inline void _1c8a7e9e9_indent(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_) {
	_2244a0cd7_Write(&(*(_self_))._field_Buf, (*_self_.alloc)._field_indentBuffer);
}



inline jule::I64 _1c8a7ed3a_findAnyType(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5e417ea_TypeKind>* _17633_t) {
	{
		auto expr = &((*(_self_))._field_anyTypeMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc7d5bd0:;
		if (it != expr_end) {
			jule::I64 _1778_i = it - expr->begin();
			jule::Ptr<_1e5e417ea_TypeKind> _17715_at = *it;
			{
				if (_1e5e42037_Equal(_17715_at, (*(_17633_t)))) {
					return _1778_i;;
				};
			}
			_iter_next_1cc7d5bd0:;
			++it;
			_1778_i++;
			goto _iter_begin_1cc7d5bd0;
		}
		_iter_end_1cc7d5bd0:;
	};
	return -1LL;;
}



inline jule::I64 _1c8a8017b_pushCoSpawn(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5ce3416_FnIns> _18532_f) {
	{
		auto expr = &((*(_self_))._field_coSpawnMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc7d6791:;
		if (it != expr_end) {
			jule::I64 _1867_i = it - expr->begin();
			jule::Ptr<_1e5ce3416_FnIns> _18610_sf = *it;
			{
				if (((*(_18610_sf))._field_Params.len() == (*(_18532_f))._field_Params.len())) {
					{
						auto expr = &((*_18610_sf.alloc)._field_Params);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1cc7d82ba:;
						if (it != expr_end) {
							jule::I64 _1889_j = it - expr->begin();
							jule::Ptr<_1e5ce22b1_ParamIns> *_18812_sp = it;
							{
								if ((!(_1e5e42037_Equal((*((*(_18812_sp))))._field_Kind, (*((*(_18610_sf))._field_Params[_1889_j]))._field_Kind)))) {
									goto _iter_end_1cc7d82ba;
								};
							}
							_iter_next_1cc7d82ba:;
							++it;
							_1889_j++;
							goto _iter_begin_1cc7d82ba;
						}
						_iter_end_1cc7d82ba:;
					};
					return _1867_i;;
				};
			}
			_iter_next_1cc7d6791:;
			++it;
			_1867_i++;
			goto _iter_begin_1cc7d6791;
		}
		_iter_end_1cc7d6791:;
	};
	jule::I64 _1963_i = (*_self_.alloc)._field_coSpawnMap.len();;
	jule::Str _1973_is = _1e2195e4e_Itoa(_1963_i);;
	(*_self_.alloc)._field_coSpawnMap=jule::append((*_self_.alloc)._field_coSpawnMap,({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5ce3416_FnIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _18532_f; __jule_collection; }));
	_2244a1090_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("struct ", 7));
	_2244a1090_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_cospawn_argdata", 22));
	_2244a1090_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1973_is);
	_2244a1090_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("{\n", 2));
	_2244a1348_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
	_1c8a937ee_func((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_coSpawnObj), _18532_f);
	_2244a1348_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ' ');
	_2244a1090_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__juleCoFunc", 12));
	_2244a1348_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ';');
	_2244a1348_WriteByte(&(*_self_.alloc)._field_coSpawnObj, '\n');
	{
		auto expr = &((*_18532_f.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc7dd5bc:;
		if (it != expr_end) {
			jule::I64 _2138_j = it - expr->begin();
			jule::Ptr<_1e5ce22b1_ParamIns> _21315_p = *it;
			{
				_2244a1348_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
				_1c8a93b62_kind((*(_self_))._field_tc, &((*_self_.alloc)._field_coSpawnObj), (*(_21315_p))._field_Kind);
				_2244a1348_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ' ');
				_2244a1090_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__juleCoParam", 13));
				_2244a1090_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1e2195e4e_Itoa(_2138_j));
				_2244a1348_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ';');
				_2244a1348_WriteByte(&(*_self_.alloc)._field_coSpawnObj, '\n');
			}
			_iter_next_1cc7dd5bc:;
			++it;
			_2138_j++;
			goto _iter_begin_1cc7dd5bc;
		}
		_iter_end_1cc7dd5bc:;
	};
	_2244a1348_WriteByte(&(*_self_.alloc)._field_coSpawnObj, '}');
	_2244a1348_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ';');
	_2244a1348_WriteByte(&(*_self_.alloc)._field_coSpawnObj, '\n');
	{
		
		if ((_22586509b_Os == static_cast<jule::Str>(jule::Str::lit("windows", 7)))) {
			_case_begin_1cc7e36e3:;
			{
				_2244a1090_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("unsigned long ", 14));
			}
		}
		else if (_2257907e0_IsUnix(_22586509b_Os)) {
			_case_begin_1cc7e37c0:;
			{
				_2244a1090_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("void *", 6));
			}
		}
		else {
			_case_begin_1cc7e13e4:;
			{
				__jule_panic_s(jule::Str::lit("cxx: pushCoSpawn: unimeplemented operating system for return type", 65) + jule::Str("\nlocation: julec/obj/cxx/object.jule:232:4"));;
			}
		}
		_match_end_1cc7e312c:;
	};
	_2244a1090_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_cospawn_method", 21));
	_2244a1090_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1973_is);
	;
	_2244a1090_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("(void *", 7));
	_2244a1090_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
	_2244a1090_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("_param) {\n", 10));
	_2244a1348_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
	_2244a1090_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_cospawn_argdata", 22));
	_2244a1090_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1973_is);
	_2244a1090_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(" *", 2));
	_2244a1090_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
	_2244a1090_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(" = (", 4));
	_2244a1090_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_cospawn_argdata", 22));
	_2244a1090_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1973_is);
	_2244a1090_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("*)", 2));
	_2244a1090_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
	_2244a1090_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("_param;\n", 8));
	_2244a1348_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
	_2244a1090_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
	_2244a1090_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("->", 2));
	_2244a1090_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__juleCoFunc", 12));
	_2244a1090_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("(", 1));
	{
		auto expr = &((*_18532_f.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc7eb1ac:;
		if (it != expr_end) {
			jule::I64 _2587_j = it - expr->begin();
			{
				_2244a1090_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
				_2244a1090_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("->", 2));
				_2244a1090_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__juleCoParam", 13));
				_2244a1090_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1e2195e4e_Itoa(_2587_j));
				if ((((*_18532_f.alloc)._field_Params.len() - _2587_j) > 1LL)) {
					_2244a1090_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1cc7eb1ac:;
			++it;
			_2587_j++;
			goto _iter_begin_1cc7eb1ac;
		}
		_iter_end_1cc7eb1ac:;
	};
	_2244a1090_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(");\n", 3));
	_2244a1348_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
	_2244a1090_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("delete ", 7));
	_2244a1090_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
	_2244a1090_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(";\n", 2));
	{
		
		if ((_22586509b_Os == static_cast<jule::Str>(jule::Str::lit("windows", 7)))) {
			_case_begin_1cc800777:;
			{
				_2244a1348_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
				_2244a1090_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("return 0;\n", 10));
			}
		}
		else if (_2257907e0_IsUnix(_22586509b_Os)) {
			_case_begin_1cc800854:;
			{
				_2244a1348_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
				_2244a1090_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("return NULL;\n", 13));
			}
		}
		else {
			_case_begin_1cc7eba2b:;
			{
				__jule_panic_s(jule::Str::lit("cxx: pushCoSpawn: unimeplemented operating system for return type", 65) + jule::Str("\nlocation: julec/obj/cxx/object.jule:281:4"));;
			}
		}
		_match_end_1cc8003ae:;
	};
	_2244a1090_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("}\n", 2));
	return _1963_i;;
}



inline jule::I64 _1c8a804bc_pushDealloc(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5e417ea_TypeKind> _28832_t) {
	{
		auto expr = &((*(_self_))._field_deallocated);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc802cda:;
		if (it != expr_end) {
			jule::I64 _2897_i = it - expr->begin();
			jule::Ptr<_1e5e417ea_TypeKind> _28910_dt = *it;
			{
				if (_1e5e42037_Equal(_28910_dt, _28832_t)) {
					return _2897_i;;
				};
			}
			_iter_next_1cc802cda:;
			++it;
			_2897_i++;
			goto _iter_begin_1cc802cda;
		}
		_iter_end_1cc802cda:;
	};
	jule::I64 _2943_i = (*_self_.alloc)._field_deallocated.len();;
	(*_self_.alloc)._field_deallocated=jule::append((*_self_.alloc)._field_deallocated,({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5e417ea_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _28832_t; __jule_collection; }));
	_2244a1090_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit("void __jule_type_deallocator", 28));
	_2244a1090_WriteStr(&(*_self_.alloc)._field_deallocObj, _1e2195e4e_Itoa(_2943_i));
	_2244a1090_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit("(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 56));
	_1c8a93b62_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_deallocObj), _28832_t);
	_2244a1090_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit(">().dealloc(); }\n", 17));
	return _2943_i;;
}



inline jule::Str _1c8a8080d_pushAnonFn(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5cd5b67_AnonFnExprModel>* _30432_m) {
	jule::Str __jule_func_result;
	(*(_self_))._field_meta._field_concurrent=((*_self_.alloc)._field_meta._field_concurrent || (*((*((*(_30432_m))))._field_Func))._field_CalledCo);
	jule::Bool _3073_closure = _1e6a09e95_IsClosure(_30432_m);;
	if (_3073_closure) {
		_2244a1090_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("struct ", 7));
		jule::I64 _3114_l = _2244a1d1b_Len(&(*_self_.alloc)._field_anonObj);;
		_2244a1090_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("__jule_anon_", 12));
		_2244a1090_WriteStr(&(*_self_.alloc)._field_anonObj, _1e21957bc_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*((*(_30432_m))))._field_Func)), 15LL));
		__jule_func_result=__jule_bytesToStr(_2244a2338_Buf(&(*_self_.alloc)._field_anonObj).slice(_3114_l));
		_2244a1090_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx{\n", 6));
		{
			auto expr = &((*((*(_30432_m))))._field_Captured);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1cc80a397:;
			if (it != expr_end) {
				jule::Ptr<_1e5da0bcc_Var> _31616_v = *it;
				{
					_2244a1348_WriteByte(&(*_self_.alloc)._field_anonObj, 9LLU);
					_1c8a93b62_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_anonObj), (*((*(_31616_v))._field_Kind))._field_Kind);
					_2244a1348_WriteByte(&(*_self_.alloc)._field_anonObj, ' ');
					if ((*_31616_v.alloc)._field_Reference) {
						_2244a1348_WriteByte(&(*_self_.alloc)._field_anonObj, '*');
					};
					static__1c89bcb24_var(&((*_self_.alloc)._field_anonObj), _31616_v);
					_2244a1090_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit(";\n", 2));
				}
				_iter_next_1cc80a397:;
				++it;
				goto _iter_begin_1cc80a397;
			}
			_iter_end_1cc80a397:;
		};
		_2244a1090_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("};\n", 3));
		_2244a1090_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("static void ", 12));
		_2244a1090_WriteStr(&(*_self_.alloc)._field_anonObj, __jule_func_result);
		_2244a1090_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<", 55));
		_2244a1090_WriteStr(&(*_self_.alloc)._field_anonObj, __jule_func_result);
		_2244a1090_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx>().dealloc(); }\n", 21));
	} else {
		__jule_func_result=jule::Str::lit("__jule_anon", 11);
		__jule_func_result+=_1e21957bc_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*((*(_30432_m))))._field_Func)), 15LL);
	};
	(*_self_.alloc)._field_anons=jule::append((*_self_.alloc)._field_anons,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c8a770b8_anonHash>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1c8a770b8_anonHash>(_1c8a770b8_anonHash{._field_expr=(*(_30432_m)), ._field_ident=__jule_func_result}); __jule_collection; }));
	_1c8a8669e_anonFuncInsDecl(_self_, _30432_m, __jule_func_result);
	_2244a1348_WriteByte(&(*_self_.alloc)._field_anonObj, '\n');
	return __jule_func_result;;
}



inline jule::I64 _1c8a80b4e_pushAnyType(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5e417ea_TypeKind> _34632_t) {
	jule::Ptr<_1e5e417ea_TypeKind> _3477_orig = _34632_t;;
	if ((_1e5e44754_Enum(_34632_t.ptr()) != nullptr)) {
		_34632_t=(*((*(_1e5e44754_Enum(_34632_t)))._field_Kind))._field_Kind;
	};
	jule::I64 _3517_i = _1c8a7ed3a_findAnyType(_self_, &(_34632_t));;
	if ((_3517_i != -1LL)) {
		return _3517_i;;
	};
	_3517_i=(*_self_.alloc)._field_anyTypeMap.len();
	(*_self_.alloc)._field_anyTypeMap=jule::append((*_self_.alloc)._field_anyTypeMap,({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5e417ea_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _34632_t; __jule_collection; }));
	jule::Str _3573_si = _1e2195e4e_Itoa(_3517_i);;
	if ((_1e5e44237_Sptr(_34632_t) != nullptr)) {
		_224497295_StrBuilder _3598_elemKind = static__2244a0b83_New(40LL);;
		_1c8a93b62_kind((*_self_.alloc)._field_tc.ptr(), &(_3598_elemKind), (*(_1e5e44237_Sptr(_34632_t)))._field_Elem);
		jule::I64 _3634_di = _1c8a804bc_pushDealloc(_self_, (*(_1e5e44237_Sptr(_34632_t)))._field_Elem);;
		_2244a1090_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
		_2244a1090_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("__jule_any_type", 15));
		_2244a1090_WriteStr(&(*_self_.alloc)._field_anyObj, _3573_si);
		_2244a1090_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("{.dealloc=__jule_type_deallocator", 33));
		_2244a1090_WriteStr(&(*_self_.alloc)._field_anyObj, _1e2195e4e_Itoa(_3634_di));
		_2244a1090_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(", .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};\n", 49));
		_2244a1090_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
		_2244a1090_WriteStr(&(*_self_.alloc)._field_anyObj, _3573_si);
		_2244a1090_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_compare(const jule::Any &any, const ", 37));
		_1c8a8ed5b_asSptr((*(_self_))._field_tc, &((*_self_.alloc)._field_anyObj), _2244a2338_Buf(&_3598_elemKind));
		_2244a1090_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" &other) { return any.type == &__jule_any_type", 46));
		_2244a1090_WriteStr(&(*_self_.alloc)._field_anyObj, _3573_si);
		_2244a1090_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" && __jule_ptrEqual(any.data.alloc, other.alloc); }\n", 52));
	} else {
		jule::Bool _3824_comparable = _1e5e42e4a_Comparable(_34632_t);;
		_224497295_StrBuilder _3838_kindB = static__2244a0b83_New(40LL);;
		_1c8a93b62_kind((*_self_.alloc)._field_tc.ptr(), &(_3838_kindB), _34632_t);
		jule::Str _3854_kind = _2244a1887_Str(&_3838_kindB);;
		jule::I64 _3884_di = _1c8a804bc_pushDealloc(_self_, _34632_t);;
		if (_3824_comparable) {
			jule::Str _3949_lmodel = jule::Str::lit("*reinterpret_cast<", 18);;
			_3949_lmodel+=_3854_kind;
			_3949_lmodel+=jule::Str::lit("*>(", 3);
			jule::Str _3979_rmodel = _3949_lmodel;;
			_3979_rmodel+=jule::Str::lit("other)", 6);
			_3949_lmodel+=jule::Str::lit("alloc)", 6);
			_2244a1090_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			_2244a1090_WriteStr(&(*_self_.alloc)._field_anyObj, _3573_si);
			_2244a1090_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq(void *alloc, void *other) noexcept { return ", 48));
			_1c89a7559__unsafeBinary((*_self_.alloc)._field_ec, &((*_self_.alloc)._field_anyObj), &(_3949_lmodel), &(_3979_rmodel), &(_34632_t), &(_34632_t), static_cast<jule::U64>(50LLU), static_cast<jule::Str>(jule::Str::lit("==", 2)));
			_2244a1090_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("; }\n", 4));
		};
		_2244a1090_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Str __jule_any_type", 25));
		_2244a1090_WriteStr(&(*_self_.alloc)._field_anyObj, _3573_si);
		_2244a1090_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_to_str(void *alloc) noexcept { return ", 39));
		jule::Ptr<_1e5ce0358_Fn> _4128_decl = _1e614dc8d_RuntimeFindFn(&((*((*_self_.alloc)._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("toStr", 5)));;
		jule::Ptr<_1e5ce3416_FnIns> _4138_f = _1e6a0d44e_FindFnGenericInstance(&(_4128_decl), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5e417ea_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _3477_orig; __jule_collection; }));;
		static__1c89bb89d_funcIns(&((*_self_.alloc)._field_anyObj), &(_4138_f));
		_2244a1090_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("(*reinterpret_cast<", 19));
		if ((_1e5e444bd_Ptr(_34632_t) == nullptr)) {
			_2244a1090_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("const ", 6));
			_2244a1090_WriteStr(&(*_self_.alloc)._field_anyObj, _3854_kind);
		} else {
			_2244a1090_WriteStr(&(*_self_.alloc)._field_anyObj, _3854_kind);
			_2244a1090_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("* const", 7));
		};
		_2244a1090_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("*>(alloc)); }\n", 14));
		_2244a1090_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
		_2244a1090_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("__jule_any_type", 15));
		_2244a1090_WriteStr(&(*_self_.alloc)._field_anyObj, _3573_si);
		_2244a1090_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("{.dealloc=__jule_type_deallocator", 33));
		_2244a1090_WriteStr(&(*_self_.alloc)._field_anyObj, _1e2195e4e_Itoa(_3884_di));
		_2244a1090_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(", ", 2));
		if (_3824_comparable) {
			_2244a1090_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(".eq=__jule_any_type", 19));
			_2244a1090_WriteStr(&(*_self_.alloc)._field_anyObj, _3573_si);
			_2244a1090_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq, ", 5));
		};
		_2244a1090_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(".to_str=__jule_any_type", 23));
		_2244a1090_WriteStr(&(*_self_.alloc)._field_anyObj, _3573_si);
		_2244a1090_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_to_str};\n", 10));
		if (_3824_comparable) {
			_2244a1090_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			_2244a1090_WriteStr(&(*_self_.alloc)._field_anyObj, _3573_si);
			_2244a1090_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_compare(const jule::Any &any, const ", 37));
			_2244a1090_WriteStr(&(*_self_.alloc)._field_anyObj, _3854_kind);
			_2244a1090_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" &other) { return any.type == &__jule_any_type", 46));
			_2244a1090_WriteStr(&(*_self_.alloc)._field_anyObj, _3573_si);
			_2244a1090_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" && __jule_any_type", 19));
			_2244a1090_WriteStr(&(*_self_.alloc)._field_anyObj, _3573_si);
			_2244a1090_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq(any.data.alloc, (void*)&other); }\n", 38));
		};
	};
	return _3517_i;;
}



inline void _1c8a80e07_pushResultIns(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5ce3416_FnIns>* _45735_f) {
	jule::Str _4583_s = __jule_bytesToStr(_1c8a98e20_code((*((*(_self_))._field_tc))._field_rc.ptr(), &((*((*(_45735_f))))._field_Result)));;
	jule::Bool _4596_ok;
	_1cc266e03_lookup((*_self_.alloc)._field_resultMap, _4583_s, nullptr, &(_4596_ok));
	if (_4596_ok) {
		return;;
	};
	(*_1cc2671ab_set(((*_self_.alloc)._field_resultMap).ptr(), _4583_s))=false;
	_2244a1090_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("struct ", 7));
	_2244a1090_WriteStr(&(*_self_.alloc)._field_resultDecls, _4583_s);
	_2244a1090_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit(" {\n", 3));
	{
		auto expr = &((*(_1e5e45cc7_Tup((*((*(_45735_f))))._field_Result.ptr())))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc831d5d:;
		if (it != expr_end) {
			jule::I64 _4678_i = it - expr->begin();
			jule::Ptr<_1e5e417ea_TypeKind> _46715_t = *it;
			{
				_2244a1348_WriteByte(&(*_self_.alloc)._field_resultDecls, 9LLU);
				_1c8a93b62_kind((*(_self_))._field_tc, &((*_self_.alloc)._field_resultDecls), _46715_t);
				_2244a1348_WriteByte(&(*_self_.alloc)._field_resultDecls, ' ');
				_2244a1090_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("__jule_result_arg", 17));
				_2244a1090_WriteStr(&(*_self_.alloc)._field_resultDecls, _1e2195e4e_Itoa(_4678_i));
				_2244a1090_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit(";\n", 2));
			}
			_iter_next_1cc831d5d:;
			++it;
			_4678_i++;
			goto _iter_begin_1cc831d5d;
		}
		_iter_end_1cc831d5d:;
	};
	_2244a1090_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("};\n", 3));
}



inline void _1c8a811b0_pushResult(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5ce0358_Fn>* _47832_f) {
	if ((_1e5ce080e_IsVoid((*(_47832_f)).ptr()) || ((*((*((*(_47832_f))))._field_Result))._field_Idents.len() <= 1LL))) {
		return;;
	};
	jule::I64 _4827_n = (*((*(_47832_f))))._field_Instances.len();;
	if (((*((*(_47832_f))))._field_Generics.len() == 0LL)) {
		_4827_n=1LL;
	};
	{
		auto expr = (*((*(_47832_f))))._field_Instances.slice(0LL, _4827_n);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1cc836e40:;
		if (it != expr_end) {
			jule::Ptr<_1e5ce3416_FnIns> _48615_ins = *it;
			{
				_1c8a80e07_pushResultIns(_self_, &(_48615_ins));
			}
			_iter_next_1cc836e40:;
			++it;
			goto _iter_begin_1cc836e40;
		}
		_iter_end_1cc836e40:;
	};
}



inline void _1c8a81523_pushAndWriteMaskMapper(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5d03db6_Trait> _49143_t1, jule::Ptr<_1e5d03db6_Trait> _49159_t2) {
	_224497295_StrBuilder _4927_ident = static__2244a0b83_New(32LL);;
	_2244a1090_WriteStr(&_4927_ident, jule::Str::lit("__jule_trait_offset_mapper_", 27));
	_2244a1090_WriteStr(&_4927_ident, _1e21957bc_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_49159_t2)), 15LL));
	_2244a1090_WriteStr(&_4927_ident, jule::Str::lit("_to_", 4));
	_2244a1090_WriteStr(&_4927_ident, _1e21957bc_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_49143_t1)), 15LL));
	_2244a0cd7_Write(&(*(_self_))._field_Buf, _2244a2338_Buf(&_4927_ident));
	{
		auto expr = &((*_self_.alloc)._field_traitCastMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc839cbc:;
		if (it != expr_end) {
			_1c8a76bde_traitCast _50010_m = *it;
			{
				if (((_50010_m._field_t1 == _49143_t1) && (_50010_m._field_t2 == _49159_t2))) {
					return;;
				};
			}
			_iter_next_1cc839cbc:;
			++it;
			goto _iter_begin_1cc839cbc;
		}
		_iter_end_1cc839cbc:;
	};
	(*_self_.alloc)._field_traitCastMap=jule::append((*_self_.alloc)._field_traitCastMap,({ auto __jule_collection = jule::Slice<_1c8a76bde_traitCast>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1c8a76bde_traitCast{._field_t1=_49143_t1, ._field_t2=_49159_t2}; __jule_collection; }));
	;
	_2244a1090_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("void *", 6));
	_2244a0cd7_Write(&(*_self_.alloc)._field_anyObj, _2244a2338_Buf(&_4927_ident));
	_2244a1090_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("(const void *data) noexcept { ", 30));
	_224497295_StrBuilder _5147_t1Ident = static__2244a0b83_New(16LL);;
	_224497295_StrBuilder _5157_t2Ident = static__2244a0b83_New(16LL);;
	static__1c89bbb89_traitDecl(&(_5147_t1Ident), _49143_t1);
	static__1c89bbb89_traitDecl(&(_5157_t2Ident), _49159_t2);
	{
		auto expr = &((*(_49143_t1))._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc83a3e9:;
		if (it != expr_end) {
			jule::Ptr<_1e5cc5e21_Struct> _51915_s1 = *it;
			{
				{
					auto expr = &((*(_49159_t2))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cc83e3cb:;
					if (it != expr_end) {
						jule::Ptr<_1e5cc5e21_Struct> _52011_s2 = *it;
						{
							if ((_51915_s1 == _52011_s2)) {
								{
									auto expr = &((*(_51915_s1))._field_Instances);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1cc8402bc:;
									if (it != expr_end) {
										jule::Ptr<_1e5cc8c7b_StructIns> _52218_s1i = *it;
										{
											jule::I64 _5237_i1 = _1e6a0c827_FindTraitTypeOffsetS(_49143_t1, _52218_s1i);;
											jule::I64 _5247_i2 = _1e6a0c827_FindTraitTypeOffsetS(_49159_t2, _52218_s1i);;
											_2244a1090_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("if (data == &", 13));
											_2244a0cd7_Write(&(*_self_.alloc)._field_anyObj, _2244a2338_Buf(&_5157_t2Ident));
											_2244a1090_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_mptr_data", 10));
											_2244a1090_WriteStr(&(*_self_.alloc)._field_anyObj, _1e2195e4e_Itoa(_5247_i2));
											_2244a1090_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(") return &", 10));
											_2244a0cd7_Write(&(*_self_.alloc)._field_anyObj, _2244a2338_Buf(&_5147_t1Ident));
											_2244a1090_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_mptr_data", 10));
											_2244a1090_WriteStr(&(*_self_.alloc)._field_anyObj, _1e2195e4e_Itoa(_5237_i1));
											_2244a1090_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("; ", 2));
										}
										_iter_next_1cc8402bc:;
										++it;
										goto _iter_begin_1cc8402bc;
									}
									_iter_end_1cc8402bc:;
								};
							};
						}
						_iter_next_1cc83e3cb:;
						++it;
						goto _iter_begin_1cc83e3cb;
					}
					_iter_end_1cc83e3cb:;
				};
			}
			_iter_next_1cc83a3e9:;
			++it;
			goto _iter_begin_1cc83a3e9;
		}
		_iter_end_1cc83a3e9:;
	};
	_2244a1090_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" __jule_panic_s(\"trait casting failed because of an implementation mistake, this is a JuleC bug\"); return nullptr; }\n", 117));
}



inline void _1c8a817cb_locInfo(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5c8eacc_Token>* _54225_t) {
	jule::Str *_5434_loc = &((*((*((*(_54225_t))))._field_File))._field_Path);;
	if (_22586c4e3_Production) {
		{
			
			if (_2256d7380_HasPrefix((*(_5434_loc)), _2258644eb_PathStdlib)) {
				_case_begin_1cc8457ab:;
				{
					_1c89b50c2_cstrBytes(&((*(_self_))._field_Buf), (*(_5434_loc)).slice((_2256e39c9_Dir(_2258644eb_PathStdlib).len() + 1LL)));
				}
			}
			else if (_2256d7380_HasPrefix((*(_5434_loc)), (*((*(_self_))._field_ir))._field_Root)) {
				_case_begin_1cc845888:;
				{
					_1c89b50c2_cstrBytes(&((*_self_.alloc)._field_Buf), (*(_5434_loc)).slice((_2256e39c9_Dir((*(*(_self_))._field_ir.alloc)._field_Root).len() + 1LL)));
				}
			}
			else {
				_case_begin_1cc8453e3:;
				{
					_1c89b50c2_cstrBytes(&((*(_self_))._field_Buf), (*(_5434_loc)));
				}
			}
			_match_end_1cc845316:;
		};
	} else {
		_1c89b50c2_cstrBytes(&((*(_self_))._field_Buf), (*(_5434_loc)));
	};
	_1c8a7e147_write(_self_, jule::Str::lit(":", 1));
	_1c8a7e147_write(_self_, _1e2195e4e_Itoa((*((*(_54225_t))))._field_Row));
	_1c8a7e147_write(_self_, jule::Str::lit(":", 1));
	_1c8a7e147_write(_self_, _1e2195e4e_Itoa((*((*(_54225_t))))._field_Column));
}



inline void _1c8a819c9_head(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_) {
	_1c8a6bdb0_Time _5693_time = static__1c8a6c4a9_Now();;
	_1c8a6b6d9_AbsTime _5703_abs = _1c8a6db92_Abs(&_5693_time);;
	_1c8a7e147_write(_self_, jule::Str::lit("// Auto generated by JuleC.\n", 28));
	_1c8a7e147_write(_self_, jule::Str::lit("// JuleC version: ", 18));
	_1c8a7e147_write(_self_, jule::Str::lit("jule0.1.0", 9));
	_1c8a7e147_write(_self_, jule::Str::lit("\n", 1));
	_1c8a7e147_write(_self_, jule::Str::lit("// Date: ", 9));
	_1c8a7e147_write(_self_, _1e21957bc_FmtUint(_5703_abs._field_Day, 10LL));
	_1c8a7e147_write(_self_, jule::Str::lit("/", 1));
	_1c8a7e147_write(_self_, _1e21957bc_FmtUint(_5703_abs._field_Month, 10LL));
	_1c8a7e147_write(_self_, jule::Str::lit("/", 1));
	_1c8a7e147_write(_self_, _1e21957bc_FmtUint(_5703_abs._field_Year, 10LL));
	_1c8a7e147_write(_self_, jule::Str::lit(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1c8a7e147_write(_self_, (*_self_.alloc)._field_info._field_Compiler);
	_1c8a7e147_write(_self_, jule::Str::lit(" ", 1));
	_1c8a7e147_write(_self_, (*_self_.alloc)._field_info._field_CompilerCommand);
	_1c8a7e147_write(_self_, jule::Str::lit("\n\n", 2));
	if (_22586c4e3_Production) {
		_1c8a7e147_write(_self_, jule::Str::lit("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_22586bdd8_RC))) {
		_1c8a7e147_write(_self_, jule::Str::lit("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_22586c2a1_Safety))) {
		_1c8a7e147_write(_self_, jule::Str::lit("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1c8a81c82_links(_self_, true);
	_1c8a7e147_write(_self_, jule::Str::lit("\n\n#include \"", 12));
	_1c8a7e147_write(_self_, _225864ce3_PathApi);
	_1c8a7e147_write(_self_, jule::Str::lit("\"\n\n", 3));
	_1c8a81c82_links(_self_, false);
}



inline void _1c8a81c82_links(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Bool _60922_std) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc8524aa:;
		if (it != expr_end) {
			jule::Ptr<_1e5d5b2e7_ImportInfo> _61010_used = *it;
			{
				{
					
					if ((!((*(_61010_used))._field_Binded))) {
						_case_begin_1cc8532e1:;
						{
							goto _iter_next_1cc8524aa;
						}
					}
					else if (_225778e9e_IsStdHeaderPath((*(_61010_used))._field_Path)) {
						_case_begin_1cc853379:;
						{
							if ((!(_60922_std))) {
								goto _iter_next_1cc8524aa;
							};
							_1c8a7e147_write(_self_, jule::Str::lit("#include ", 9));
							_1c8a7e147_write(_self_, (*_61010_used.alloc)._field_Path);
							_1c8a7e147_write(_self_, jule::Str::lit("\n", 1));
						}
					}
					else if (_225779279_IsValidHeaderExt(_2256e306c_Ext((*(_61010_used))._field_Path))) {
						_case_begin_1cc8533e0:;
						{
							if (_60922_std) {
								goto _iter_next_1cc8524aa;
							};
							_1c8a7e147_write(_self_, jule::Str::lit("#include \"", 10));
							_1c8a7e147_write(_self_, (*_61010_used.alloc)._field_Path);
							_1c8a7e147_write(_self_, jule::Str::lit("\"\n", 2));
						}
					}
					_match_end_1cc85318c:;
				};
			}
			_iter_next_1cc8524aa:;
			++it;
			goto _iter_begin_1cc8524aa;
		}
		_iter_end_1cc8524aa:;
	};
}



inline void _1c8a8203a_prepareStructure(_1c8a7d92c_ObjectCoder* _self_, jule::Ptr<_1e5cc5e21_Struct>* _63237_s) {
	{
		auto expr = &((*((*(_63237_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc852e4a:;
		if (it != expr_end) {
			jule::Ptr<_1e5cc8c7b_StructIns> _63315_ins = *it;
			{
				{
					auto expr = &((*(_63315_ins))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cc857081:;
					if (it != expr_end) {
						jule::Ptr<_1e5ce0358_Fn> _63416_m = *it;
						{
							if ((*(_63416_m))._field_Statically) {
								goto _iter_next_1cc857081;
							};
							{
								auto expr = &((*_63416_m.alloc)._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1cc857b42:;
								if (it != expr_end) {
									jule::Ptr<_1e5ce3416_FnIns> _63817_mins = *it;
									{
										jule::Ptr<_1e5ce22b1_ParamIns> _63910_p = (*(_63817_mins))._field_Params[0LL];;
										_224497295_StrBuilder _64010_kind = static__2244a0b83_New(40LL);;
										_1c8a93b62_kind((*(_self_))._field_tc.ptr(), &(_64010_kind), (*(_63910_p))._field_Kind);
										if ((!(_1e5cde269_IsRef((*_63910_p.alloc)._field_Decl.ptr())))) {
											_2244a1090_WriteStr(&_64010_kind, jule::Str::lit("*", 1));
										};
										(*_63910_p.alloc)._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c8a8cd26_customType>(_1c8a8cd26_customType{._field_kind=_2244a1887_Str(&_64010_kind)}), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data29)});
									}
									_iter_next_1cc857b42:;
									++it;
									goto _iter_begin_1cc857b42;
								}
								_iter_end_1cc857b42:;
							};
						}
						_iter_next_1cc857081:;
						++it;
						goto _iter_begin_1cc857081;
					}
					_iter_end_1cc857081:;
				};
			}
			_iter_next_1cc852e4a:;
			++it;
			goto _iter_begin_1cc852e4a;
		}
		_iter_end_1cc852e4a:;
	};
}



inline void _1c8a82238_prepareStructures(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc851e5a:;
		if (it != expr_end) {
			jule::Ptr<_1e5cc5e21_Struct> _65615_s = *it;
			{
				if (((*(_65615_s))._field_Token != nullptr)) {
					_1c8a8203a_prepareStructure(_self_.ptr(), &(_65615_s));
				};
			}
			_iter_next_1cc851e5a:;
			++it;
			goto _iter_begin_1cc851e5a;
		}
		_iter_end_1cc851e5a:;
	};
}



inline void _1c8a824e1_structurePlainDecl(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5cc5e21_Struct>* _66340_s) {
	{
		auto expr = &((*((*(_66340_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc85c22e:;
		if (it != expr_end) {
			jule::Ptr<_1e5cc8c7b_StructIns> _66415_ins = *it;
			{
				_1c8a7e147_write(_self_, jule::Str::lit("struct ", 7));
				static__1c89bc54c_structureIns(&((*_self_.alloc)._field_Buf), &(_66415_ins));
				_1c8a7e147_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1cc85c22e:;
			++it;
			goto _iter_begin_1cc85c22e;
		}
		_iter_end_1cc85c22e:;
	};
}



inline void _1c8a826de_structurePlainDecls(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc85d84b:;
		if (it != expr_end) {
			jule::Ptr<_1e5cc5e21_Struct> _67215_s = *it;
			{
				if (((*(_67215_s))._field_Token != nullptr)) {
					_1c8a824e1_structurePlainDecl(_self_, &(_67215_s));
				};
			}
			_iter_next_1cc85d84b:;
			++it;
			goto _iter_begin_1cc85d84b;
		}
		_iter_end_1cc85d84b:;
	};
}



inline void _1c8a82997_fieldDecl(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5cc81cb_FieldIns>* _67931_f) {
	_1c8a93b62_kind((*(_self_))._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*(_67931_f))))._field_Kind);
	_1c8a7e147_write(_self_, jule::Str::lit(" ", 1));
	static__1c89bc838_field(&((*_self_.alloc)._field_Buf), &((*((*(_67931_f))))._field_Decl));
	_1c8a7e147_write(_self_, jule::Str::lit(";", 1));
}



inline void _1c8a82c50_structureDestructor(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5cc8c7b_StructIns>* _68641_s) {
	;
	jule::Ptr<_1e5ce0358_Fn> _6897_disposeMethod = _1e5cc9d26_FindMethod((*(_68641_s)).ptr(), jule::Str::lit("Dispose", 7), false);;
	jule::Bool _6907_disposed = static__1e5da22c7_Dispose(_6897_disposeMethod);;
	if ((!(_6907_disposed))) {
		return;;
	};
	_1c8a7e147_write(_self_, jule::Str::lit("~", 1));
	static__1c89bc54c_structureIns(&((*_self_.alloc)._field_Buf), _68641_s);
	_1c8a7e147_write(_self_, jule::Str::lit("(void) { ", 9));
	static__1c89bb5b2_func(&((*_self_.alloc)._field_Buf), &(_6897_disposeMethod));
	_1c8a7e147_write(_self_, jule::Str::lit("(this); }", 9));
}



inline void _1c8a8316d_structureOperatorEq(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Str _70236_ident, jule::Ptr<_1e5cc8c7b_StructIns>* _70253_s, jule::Bool _70268_decl) {
	if ((!(_1c8a8b84c_defaultEq(_70253_s)))) {
		return;;
	};
	_1c8a7e147_write(_self_, jule::Str::lit("\n", 1));
	if (_1e6a259b6_Inline) {
		_1c8a7e147_write(_self_, jule::Str::lit("inline ", 7));
	};
	_1c8a7e147_write(_self_, jule::Str::lit("jule::Bool ", 11));
	_1c8a7e147_write(_self_, _70236_ident);
	_1c8a7e147_write(_self_, jule::Str::lit("_eq", 3));
	_1c8a7e147_write(_self_, jule::Str::lit("(", 1));
	_1c8a7e147_write(_self_, _70236_ident);
	_1c8a7e147_write(_self_, jule::Str::lit(" *_self_, ", 10));
	_1c8a7e147_write(_self_, _70236_ident);
	_1c8a7e147_write(_self_, jule::Str::lit(" _other_)", 9));
	if (_70268_decl) {
		_1c8a7e147_write(_self_, jule::Str::lit(";\n\n", 3));
		return;;
	};
	_1c8a7e147_write(_self_, jule::Str::lit(" {", 2));
	if (((*((*(_70253_s))))._field_Fields.len() == 0LL)) {
		_1c8a7e147_write(_self_, jule::Str::lit(" return true; }\n\n", 17));
		return;;
	};
	_1c8a7e5ed_addIndent(_self_);
	_1c8a7e147_write(_self_, jule::Str::lit("\n", 1));
	_1c8a7e9e9_indent(_self_);
	_1c8a7e147_write(_self_, jule::Str::lit("return ", 7));
	_1c8a7e5ed_addIndent(_self_);
	jule::Bool _7337_writed = false;;
	jule::Str _7367_lmodel = jule::Str::lit("_self_->", 8);;
	jule::Str _7377_rmodel = jule::Str::lit("_other_.", 8);;
	{
		auto expr = &((*((*(_70253_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc86b5b2:;
		if (it != expr_end) {
			jule::Ptr<_1e5cc81cb_FieldIns> _73915_f = *it;
			{
				jule::Ptr<_1e5cc8c7b_StructIns> _7414_strct = _1e5e45524_Struct((*(_73915_f))._field_Kind.ptr());;
				if ((((_7414_strct != nullptr) && ((*_7414_strct.alloc)._field_Decl != nullptr)) && (*(*(_7414_strct))._field_Decl.alloc)._field_Binded)) {
					goto _iter_next_1cc86b5b2;
				};
				if (_7337_writed) {
					_1c8a7e147_write(_self_, jule::Str::lit(" &&", 3));
				};
				_7337_writed=true;
				_1c8a7e147_write(_self_, jule::Str::lit("\n", 1));
				_1c8a7e9e9_indent(_self_);
				_224497295_StrBuilder _7528_fIdent = static__2244a0b83_New((*((*_73915_f.alloc)._field_Decl))._field_Ident.len());;
				static__1c89bc838_field(&(_7528_fIdent), &((*_73915_f.alloc)._field_Decl));
				_7367_lmodel+=_223c7a54b_BytesStr(_2244a2338_Buf(&_7528_fIdent));
				_7377_rmodel+=_223c7a54b_BytesStr(_2244a2338_Buf(&_7528_fIdent));
				_1c89a7559__unsafeBinary((*_self_.alloc)._field_ec, &((*_self_.alloc)._field_Buf), &(_7367_lmodel), &(_7377_rmodel), &((*_73915_f.alloc)._field_Kind), &((*_73915_f.alloc)._field_Kind), static_cast<jule::U64>(50LLU), static_cast<jule::Str>(jule::Str::lit("==", 2)));
				(_7367_lmodel).mut_slice(0LL, (_7367_lmodel.len() - _2244a1d1b_Len(&_7528_fIdent)));;
				_7377_rmodel=_7367_lmodel.slice(0LL, (_7377_rmodel.len() - _2244a1d1b_Len(&_7528_fIdent)));
			}
			_iter_next_1cc86b5b2:;
			++it;
			goto _iter_begin_1cc86b5b2;
		}
		_iter_end_1cc86b5b2:;
	};
	_1c8a7e7eb_doneIndent(_self_);
	if ((!(_7337_writed))) {
		_1c8a7e147_write(_self_, jule::Str::lit("true", 4));
	};
	_1c8a7e147_write(_self_, jule::Str::lit(";\n", 2));
	_1c8a7e7eb_doneIndent(_self_);
	_1c8a7e9e9_indent(_self_);
	_1c8a7e147_write(_self_, jule::Str::lit("}\n\n", 3));
}



inline void _1c8a834d1_structureOperators(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5cc8c7b_StructIns>* _77040_s, jule::Bool _77055_decl) {
	_224497295_StrBuilder _7717_sb = static__2244a0b83_New(40LL);;
	static__1c89bc54c_structureIns(&(_7717_sb), _77040_s);
	jule::Str _7733_ident = _2244a1887_Str(&_7717_sb);;
	_1c8a8316d_structureOperatorEq(_self_, _7733_ident, _77040_s, _77055_decl);
}



inline void _1c8a83789_structureInsDecl(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5cc8c7b_StructIns>* _77938_s) {
	{
		auto expr = &((*((*(_77938_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc8757ca:;
		if (it != expr_end) {
			jule::Ptr<_1e5ce0358_Fn> _78015_m = *it;
			{
				if (_1c8a8b583_isHeadDecl(&(_78015_m))) {
					_1c8a84adc_funcDecl(_self_, &(_78015_m), false);
				};
			}
			_iter_next_1cc8757ca:;
			++it;
			goto _iter_begin_1cc8757ca;
		}
		_iter_end_1cc8757ca:;
	};
	_1c8a7e147_write(_self_, jule::Str::lit("struct ", 7));
	static__1c89bc54c_structureIns(&((*_self_.alloc)._field_Buf), _77938_s);
	_1c8a7e147_write(_self_, jule::Str::lit(" {\n", 3));
	_1c8a7e5ed_addIndent(_self_);
	{
		auto expr = &((*((*(_77938_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc87c040:;
		if (it != expr_end) {
			jule::Ptr<_1e5cc81cb_FieldIns> _79115_f = *it;
			{
				_1c8a7e9e9_indent(_self_);
				_1c8a82997_fieldDecl(_self_, &(_79115_f));
				_1c8a7e147_write(_self_, jule::Str::lit("\n", 1));
			}
			_iter_next_1cc87c040:;
			++it;
			goto _iter_begin_1cc87c040;
		}
		_iter_end_1cc87c040:;
	};
	_1c8a7e9e9_indent(_self_);
	_1c8a82c50_structureDestructor(_self_, _77938_s);
	_1c8a7e147_write(_self_, jule::Str::lit("\n\n", 2));
	_1c8a7e7eb_doneIndent(_self_);
	_1c8a7e9e9_indent(_self_);
	_1c8a7e147_write(_self_, jule::Str::lit("};", 2));
	;
	_1c8a834d1_structureOperators(_self_, _77938_s, true);
}



inline void _1c8a83a42_structureDecl(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5cc5e21_Struct>* _80935_s) {
	{
		auto expr = &((*((*(_80935_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc880a9e:;
		if (it != expr_end) {
			jule::Ptr<_1e5cc8c7b_StructIns> _81015_ins = *it;
			{
				_1c8a83789_structureInsDecl(_self_, &(_81015_ins));
			}
			_iter_next_1cc880a9e:;
			++it;
			goto _iter_begin_1cc880a9e;
		}
		_iter_end_1cc880a9e:;
	};
}



inline void _1c8a83c40_structureDecls(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc881341:;
		if (it != expr_end) {
			jule::Ptr<_1e5cc5e21_Struct> _81615_s = *it;
			{
				if (((*(_81615_s))._field_Token != nullptr)) {
					_1c8a83a42_structureDecl(_self_, &(_81615_s));
					_1c8a7e147_write(_self_, jule::Str::lit("\n", 1));
				};
			}
			_iter_next_1cc881341:;
			++it;
			goto _iter_begin_1cc881341;
		}
		_iter_end_1cc881341:;
	};
}



inline void _1c8a83e3d_structureMethodDecls(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc882364:;
		if (it != expr_end) {
			jule::Ptr<_1e5cc5e21_Struct> _82515_s = *it;
			{
				if (((*(_82515_s))._field_Token != nullptr)) {
					{
						auto expr = &((*_82515_s.alloc)._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1cc884487:;
						if (it != expr_end) {
							jule::Ptr<_1e5cc8c7b_StructIns> _82717_ins = *it;
							{
								{
									auto expr = &((*(_82717_ins))._field_Methods);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1cc884dd3:;
									if (it != expr_end) {
										jule::Ptr<_1e5ce0358_Fn> _82818_m = *it;
										{
											if ((!(_1c8a8b583_isHeadDecl(&(_82818_m))))) {
												_1c8a811b0_pushResult(_self_, &(_82818_m));
												_1c8a84adc_funcDecl(_self_, &(_82818_m), false);
											};
										}
										_iter_next_1cc884dd3:;
										++it;
										goto _iter_begin_1cc884dd3;
									}
									_iter_end_1cc884dd3:;
								};
							}
							_iter_next_1cc884487:;
							++it;
							goto _iter_begin_1cc884487;
						}
						_iter_end_1cc884487:;
					};
				};
			}
			_iter_next_1cc882364:;
			++it;
			goto _iter_begin_1cc882364;
		}
		_iter_end_1cc882364:;
	};
}



inline void _1c8a84416_funcHead(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, _224497295_StrBuilder* _84330_buf, jule::Ptr<_1e5ce3416_FnIns>* _84352_f, jule::Bool _84363_ptr, jule::Str _84374_ident) {
	if ((((!(_84363_ptr)) && _1e6a259b6_Inline) && (!(_1e5ce0d2b_IsEntryPoint((*((*(_84352_f))))._field_Decl.ptr()))))) {
		_2244a1090_WriteStr(_84330_buf, jule::Str::lit("inline ", 7));
	};
	_1c8a93128_funcInsResult((*(_self_))._field_tc.ptr(), _84330_buf, _84352_f);
	if (_84363_ptr) {
		_2244a1090_WriteStr(_84330_buf, jule::Str::lit("(*", 2));
		static__1c89bb89d_funcIns(_84330_buf, _84352_f);
		_2244a1348_WriteByte(_84330_buf, ')');
	} else {
		_2244a1348_WriteByte(_84330_buf, ' ');
		if ((_84374_ident).empty()) {
			static__1c89bb89d_funcIns(_84330_buf, _84352_f);
		} else {
			_2244a1090_WriteStr(_84330_buf, _84374_ident);
		};
	};
}



inline void _1c8a84779_funcDeclIns(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5ce3416_FnIns>* _86233_f, jule::Bool _86244_ptr) {
	(*(_self_))._field_meta._field_concurrent=((*_self_.alloc)._field_meta._field_concurrent || (*((*(_86233_f))))._field_CalledCo);
	_1c8a7e9e9_indent(_self_);
	_1c8a84416_funcHead(_self_, &((*_self_.alloc)._field_Buf), _86233_f, _86244_ptr, jule::Str());
	_1c8a85c20_paramsIns(_self_, &((*_self_.alloc)._field_Buf), _86233_f);
	_1c8a7e147_write(_self_, jule::Str::lit(";\n", 2));
}



inline void _1c8a84adc_funcDecl(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5ce0358_Fn>* _87030_f, jule::Bool _87038_ptr) {
	{
		auto expr = &((*((*(_87030_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc88ba44:;
		if (it != expr_end) {
			jule::Ptr<_1e5ce3416_FnIns> _87115_c = *it;
			{
				_1c8a84779_funcDeclIns(_self_, &(_87115_c), _87038_ptr);
			}
			_iter_next_1cc88ba44:;
			++it;
			goto _iter_begin_1cc88ba44;
		}
		_iter_end_1cc88ba44:;
	};
}



inline void _1c8a84d95_funcDeclTrait(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5ce0358_Fn>* _87635_f) {
	{
		auto expr = &((*((*(_87635_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc88c979:;
		if (it != expr_end) {
			jule::Ptr<_1e5ce3416_FnIns> _87715_c = *it;
			{
				jule::Ptr<_1e5e417ea_TypeKind> _8788_k = (*((*(_87715_c))._field_Params[0LL]))._field_Kind;;
				(*((*(_87715_c))._field_Params[0LL]))._field_Kind=_1c8a764e6_generalGCPtr;
				_1c8a84779_funcDeclIns(_self_, &(_87715_c), true);
				(*((*(_87715_c))._field_Params[0LL]))._field_Kind=_8788_k;
			}
			_iter_next_1cc88c979:;
			++it;
			goto _iter_begin_1cc88c979;
		}
		_iter_end_1cc88c979:;
	};
}



inline void _1c8a85093_funcDecls(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_) {
	_1e6a06447_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1e5d5e21d_Package>*>((void*)__jule_anon_1cc8906a2, jule::Ptr<__jule_anon_1cc8906a2_ctx>::make(__jule_anon_1cc8906a2_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1cc8906a2_ctx_handler));
}



inline void _1c8a8534b_traitDataTypeMethods(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5d03db6_Trait>* _89842_t) {
	_1e6a072e4_IterTraitMethods(_89842_t, jule::__new_closure<void,jule::Ptr<_1e5ce0358_Fn>*>((void*)__jule_anon_1cc891b7b, jule::Ptr<__jule_anon_1cc891b7b_ctx>::make(__jule_anon_1cc891b7b_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1cc891b7b_ctx_handler));
}



inline void _1c8a85549_traitDataTypes(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_) {
	_1e6a06447_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1e5d5e21d_Package>*>((void*)__jule_anon_1cc8972e1, jule::Ptr<__jule_anon_1cc8972e1_ctx>::make(__jule_anon_1cc8972e1_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1cc8972e1_ctx_handler));
}



inline void _1c8a858ac_paramIns(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, _224497295_StrBuilder* _93430_buf, jule::Ptr<_1e5ce22b1_ParamIns>* _93452_p) {
	_1c8a92952_paramIns((*(_self_))._field_tc.ptr(), _93430_buf, _93452_p);
	_2244a1348_WriteByte(_93430_buf, ' ');
	static__1c89bbe75_param(_93430_buf, &((*((*(_93452_p))))._field_Decl));
}



inline void _1c8a85c20_paramsIns(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, _224497295_StrBuilder* _94031_buf, jule::Ptr<_1e5ce3416_FnIns>* _94053_f) {
	if (((!((*((*(_94053_f))))._field_AsAnon)) && ((*((*(_94053_f))))._field_Params.len() == 0LL))) {
		_2244a1090_WriteStr(_94031_buf, jule::Str::lit("(void)", 6));
		return;;
	};
	_2244a1348_WriteByte(_94031_buf, '(');
	if ((*((*(_94053_f))))._field_AsAnon) {
		_2244a1090_WriteStr(_94031_buf, jule::Str::lit("jule::Ptr<jule::Uintptr> __f_ctx", 32));
		if (((*((*(_94053_f))))._field_Params.len() > 0LL)) {
			_2244a1090_WriteStr(_94031_buf, jule::Str::lit(", ", 2));
		};
	};
	{
		auto expr = &((*((*(_94053_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc8a05d5:;
		if (it != expr_end) {
			jule::I64 _9528_i = it - expr->begin();
			jule::Ptr<_1e5ce22b1_ParamIns> _95215_p = *it;
			{
				_1c8a858ac_paramIns(_self_, _94031_buf, &(_95215_p));
				if ((((*((*(_94053_f))))._field_Params.len() - _9528_i) > 1LL)) {
					_2244a1090_WriteStr(_94031_buf, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1cc8a05d5:;
			++it;
			_9528_i++;
			goto _iter_begin_1cc8a05d5;
		}
		_iter_end_1cc8a05d5:;
	};
	_2244a1348_WriteByte(_94031_buf, ')');
}



inline void _1c8a86083_varInitExpr(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5da0bcc_Var>* _96133_v, jule::Fn<void> _96142_init) {
	if ((*((*(_96133_v))))._field_Statically) {
		_1c8a7e147_write(_self_, jule::Str::lit("static ", 7));
	};
	_1c8a93b62_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*((*(_96133_v))))._field_Kind))._field_Kind);
	_1c8a7e147_write(_self_, jule::Str::lit(" ", 1));
	if ((*((*(_96133_v))))._field_Reference) {
		_1c8a7e147_write(_self_, jule::Str::lit("*", 1));
	};
	static__1c89bcb24_var(&((*_self_.alloc)._field_Buf), (*(_96133_v)));
	if ((_96142_init != nullptr)) {
		_1c8a7e147_write(_self_, jule::Str::lit(" = ", 3));
		_96142_init();
	};
	_1c8a7e147_write(_self_, jule::Str::lit(";", 1));
}



inline void _1c8a8633b_var(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5da0bcc_Var> _97924_v) {
	if (_1e5c924b4_IsIgnoreIdent((*(_97924_v))._field_Ident)) {
		return;;
	};
	if ((((*_97924_v.alloc)._field_Value != nullptr) && ((*(*(_97924_v))._field_Value.alloc)._field_Expr != nullptr))) {
		if (((*((*(*(_97924_v))._field_Value.alloc)._field_Data))._field_Model != nullptr)) {
			if ((*_97924_v.alloc)._field_Reference) {
				_1c8a86083_varInitExpr(_self_, &(_97924_v), jule::__new_closure<void>((void*)__jule_anon_1cc8a7994, jule::Ptr<__jule_anon_1cc8a7994_ctx>::make(__jule_anon_1cc8a7994_ctx{._self_=_self_,._97924_v=_97924_v}).as<jule::Uintptr>(), __jule_anon_1cc8a7994_ctx_handler));
			} else {
				_1c8a86083_varInitExpr(_self_, &(_97924_v), jule::__new_closure<void>((void*)__jule_anon_1cc8a9a84, jule::Ptr<__jule_anon_1cc8a9a84_ctx>::make(__jule_anon_1cc8a9a84_ctx{._self_=_self_,._97924_v=_97924_v}).as<jule::Uintptr>(), __jule_anon_1cc8a9a84_ctx_handler));
			};
			return;;
		};
		_1c8a86083_varInitExpr(_self_, &(_97924_v), nullptr);
		return;;
	};
	if ((*_97924_v.alloc)._field_Reference) {
		_1c8a86083_varInitExpr(_self_, &(_97924_v), jule::__new_closure<void>((void*)__jule_anon_1cc8ac290, jule::Ptr<__jule_anon_1cc8ac290_ctx>::make(__jule_anon_1cc8ac290_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1cc8ac290_ctx_handler));
		return;;
	};
	if (_1c8a9ace0_shouldInitialized(&((*((*_97924_v.alloc)._field_Kind))._field_Kind))) {
		_1c8a86083_varInitExpr(_self_, &(_97924_v), jule::__new_closure<void>((void*)__jule_anon_1cc8ad439, jule::Ptr<__jule_anon_1cc8ad439_ctx>::make(__jule_anon_1cc8ad439_ctx{._self_=_self_,._97924_v=_97924_v}).as<jule::Uintptr>(), __jule_anon_1cc8ad439_ctx_handler));
		return;;
	};
	_1c8a86083_varInitExpr(_self_, &(_97924_v), nullptr);
}



inline void _1c8a8669e_anonFuncInsDecl(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5cd5b67_AnonFnExprModel>* _101037_m, jule::Str _101058_ident) {
	_1c8a84416_funcHead(_self_, &((*_self_.alloc)._field_anonObj), &((*((*(_101037_m))))._field_Func), false, _101058_ident);
	_1c8a85c20_paramsIns(_self_, &((*_self_.alloc)._field_anonObj), &((*((*(_101037_m))))._field_Func));
	_2244a1348_WriteByte(&(*_self_.alloc)._field_anonObj, ';');
}



inline void _1c8a86a12_anonFuncIns(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5cd5b67_AnonFnExprModel>* _101633_m, jule::Str _101654_ident) {
	_1c8a84416_funcHead(_self_, &((*_self_.alloc)._field_Buf), &((*((*(_101633_m))))._field_Func), false, _101654_ident);
	_1c8a85c20_paramsIns(_self_, &((*_self_.alloc)._field_Buf), &((*((*(_101633_m))))._field_Func));
	_1c8a7e147_write(_self_, jule::Str::lit(" ", 1));
	_1c89a1267_anonFuncScope((*_self_.alloc)._field_sc, (*(_101633_m)), _101654_ident);
	if (((*((*((*(_101633_m))))._field_Func))._field_Scope != nullptr)) {
		_1c8a7e147_write(_self_, jule::Str::lit("\n\n", 2));
	};
}



inline void _1c8a86d75_funcIns(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5ce3416_FnIns> _102628_f, jule::Str _102639_ident) {
	_1c8a84416_funcHead(_self_, &((*_self_.alloc)._field_Buf), &(_102628_f), false, _102639_ident);
	_1c8a85c20_paramsIns(_self_, &((*_self_.alloc)._field_Buf), &(_102628_f));
	_1c8a7e147_write(_self_, jule::Str::lit(" ", 1));
	_1c89a1520_funcScope((*_self_.alloc)._field_sc, _102628_f);
	if (((*(_102628_f))._field_Scope != nullptr)) {
		_1c8a7e147_write(_self_, jule::Str::lit("\n\n", 2));
	};
}



inline void _1c8a8712d_func(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5ce0358_Fn>* _103626_f) {
	{
		auto expr = &((*((*(_103626_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc8b6c6c:;
		if (it != expr_end) {
			jule::Ptr<_1e5ce3416_FnIns> _103715_ins = *it;
			{
				_1c8a86d75_funcIns(_self_, _103715_ins, jule::Str());
			}
			_iter_next_1cc8b6c6c:;
			++it;
			goto _iter_begin_1cc8b6c6c;
		}
		_iter_end_1cc8b6c6c:;
	};
}



inline void _1c8a87491_funcTrait(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5cc8c7b_StructIns>* _104227_s, jule::Ptr<_1e5ce3416_FnIns>* _104247_f) {
	(*((*(_104247_f))))._field_Scope=nullptr;
	_224497295_StrBuilder _10457_nident = static__2244a0b83_New(30LL);;
	_2244a1090_WriteStr(&_10457_nident, jule::Str::lit("__jule_trait_method_", 20));
	_2244a1090_WriteStr(&_10457_nident, _1e21957bc_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*(_104247_f)))), 15LL));
	_2244a1090_WriteStr(&_10457_nident, jule::Str::lit("_", 1));
	_2244a1090_WriteStr(&_10457_nident, _1e21957bc_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*(_104227_s)))), 15LL));
	jule::Ptr<_1e5e417ea_TypeKind> _10517_k = (*((*((*(_104247_f))))._field_Params[0LL]))._field_Kind;;
	(*((*((*(_104247_f))))._field_Params[0LL]))._field_Kind=_1c8a764e6_generalGCPtr;
	_1c8a86d75_funcIns(_self_, (*(_104247_f)), _2244a1887_Str(&_10457_nident));
	(*((*((*(_104247_f))))._field_Params[0LL]))._field_Kind=_10517_k;
}



inline __jule_tuple_x_1e5ce3416_FnIns__jule_tuple_bool _1c8a877d2_findTraitMetMap(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5ce0358_Fn>* _105737_m) {
	__jule_tuple_x_1e5ce3416_FnIns__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1e5ce3416_FnIns> _10587_mins = (*((*(_105737_m))))._field_Instances[0LL];;
	{
		_1cc2bb265_mapIterator it = _1cc2b32d4_iterator((*(_self_))._field_traitMetMap);
		_iter_begin_1cc8bc547:;
		__jule_tuple_px_1e5ce3416_FnIns__jule_tuple_psuintptr __iterator_result = _1cc2bb94c_next(&it);
		if (__iterator_result.__jule_result_arg0 != nullptr) {
			jule::Ptr<_1e5ce3416_FnIns> _105912_f = *__iterator_result.__jule_result_arg0;
			{
				if (((((*((*(_105912_f))._field_Decl))._field_Public == (*((*(_105737_m))))._field_Public) && ((*(*(_105912_f))._field_Decl.alloc)._field_Ident == (*((*(_105737_m))))._field_Ident)) && _1e5ce4071_EqualFn(_105912_f, &(_10587_mins)))) {
					__jule_func_result.__jule_result_arg0 = _105912_f;
					__jule_func_result.__jule_result_arg1 = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1cc8bc547:;
			goto _iter_begin_1cc8bc547;
		}
		_iter_end_1cc8bc547:;
	};
	__jule_func_result.__jule_result_arg0 = _10587_mins;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline void _1c8a87b45_traitWrapper(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5d03db6_Trait>* _106934_t, jule::Ptr<_1e5ce0358_Fn>* _106950_m) {
	_julec_label_1cc8bec75:;
	{
		auto expr = &((*((*(_106934_t))))._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc8bee2e:;
		if (it != expr_end) {
			jule::Ptr<_1e5cc5e21_Struct> _107115_imp = *it;
			{
				jule::Ptr<_1e5ce3416_FnIns> _10728_mepf;
				jule::Bool _107214_exist;
				({
					__jule_tuple_x_1e5ce3416_FnIns__jule_tuple_bool __jule_assign_result = _1c8a877d2_findTraitMetMap(_self_, _106950_m);
					_10728_mepf = __jule_assign_result.__jule_result_arg0;
					_107214_exist = __jule_assign_result.__jule_result_arg1;
				});
				if (_107214_exist) {
					jule::Slice<jule::Uintptr> _10759_vals = _1cc2b29ba_get((*_self_.alloc)._field_traitMetMap, _10728_mepf);;
					{
						auto expr = &(_10759_vals);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1cc8c1e0e:;
						if (it != expr_end) {
							jule::Uintptr _107612_val = *it;
							{
								if ((_107612_val == static_cast<jule::Uintptr>(_107115_imp))) {
									goto _iter_next_1cc8bee2e;
								};
							}
							_iter_next_1cc8c1e0e:;
							++it;
							goto _iter_begin_1cc8c1e0e;
						}
						_iter_end_1cc8c1e0e:;
					};
					(*_1cc2b2b1e_set(((*_self_.alloc)._field_traitMetMap).ptr(), _10728_mepf))=jule::append(_10759_vals,({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::Uintptr>(_107115_imp); __jule_collection; }));
				} else {
					(*_1cc2b2b1e_set(((*_self_.alloc)._field_traitMetMap).ptr(), _10728_mepf))=jule::append(({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }),({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::Uintptr>(_107115_imp); __jule_collection; }));
				};
				{
					auto expr = &((*(_107115_imp))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cc8c2b46:;
					if (it != expr_end) {
						jule::Ptr<_1e5cc8c7b_StructIns> _108616_ins = *it;
						{
							_1c8a87491_funcTrait(_self_, &(_108616_ins), &(_10728_mepf));
							;
							jule::Ptr<_1e5ce0358_Fn> _10909_sm = _1e5cc9d26_FindMethod(_108616_ins.ptr(), (*((*(_106950_m))))._field_Ident, false);;
							if (((_10909_sm == nullptr) || ((*(_10909_sm))._field_Instances.len() == 0LL))) {
								return;;
							};
							_1c8a7e5ed_addIndent(_self_);
							_1c8a7e147_write(_self_, jule::Str::lit("{\n", 2));
							_1c8a7e9e9_indent(_self_);
							if (((*((*(_106950_m))))._field_Exceptional || (!(_1e5ce080e_IsVoid((*(_106950_m)).ptr()))))) {
								_1c8a7e147_write(_self_, jule::Str::lit("return ", 7));
							};
							static__1c89bb5b2_func(&((*_self_.alloc)._field_Buf), &(_10909_sm));
							_1c8a7e147_write(_self_, jule::Str::lit("(", 1));
							_1c8a7e147_write(_self_, jule::Str::lit("_self_.as<", 10));
							_1c8a91e18_structureIns((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_Buf), _108616_ins);
							_1c8a7e147_write(_self_, jule::Str::lit(">()", 3));
							jule::Bool _11075_ptr = (!(_1e5cde269_IsRef((*((*(_106950_m))))._field_Params[0LL].ptr())));;
							if (_11075_ptr) {
								_1c8a7e147_write(_self_, jule::Str::lit(".alloc", 6));
							};
							{
								auto expr = (*((*(_106950_m))))._field_Params.slice(1LL);
								auto it = expr.begin();
								auto expr_end = expr.end();
								_iter_begin_1cc8c9a2c:;
								if (it != expr_end) {
									jule::Ptr<_1e5cdd884_Param> _111112_mp = *it;
									{
										_1c8a7e147_write(_self_, jule::Str::lit(", ", 2));
										static__1c89bbe75_param(&((*_self_.alloc)._field_Buf), &(_111112_mp));
									}
									_iter_next_1cc8c9a2c:;
									++it;
									goto _iter_begin_1cc8c9a2c;
								}
								_iter_end_1cc8c9a2c:;
							};
							_1c8a7e147_write(_self_, jule::Str::lit(");\n}\n", 5));
							_1c8a7e7eb_doneIndent(_self_);
						}
						_iter_next_1cc8c2b46:;
						++it;
						goto _iter_begin_1cc8c2b46;
					}
					_iter_end_1cc8c2b46:;
				};
			}
			_iter_next_1cc8bee2e:;
			++it;
			goto _iter_begin_1cc8bee2e;
		}
		_iter_end_1cc8bee2e:;
	};
}



inline void _1c8a87d43_traitWrappers(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_) {
	_1e6a06447_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1e5d5e21d_Package>*>((void*)__jule_anon_1cc8cb600, jule::Ptr<__jule_anon_1cc8cb600_ctx>::make(__jule_anon_1cc8cb600_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1cc8cb600_ctx_handler));
}



inline void _1c8a881a6_traitDataMethods(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5d03db6_Trait>* _113638_t, jule::Ptr<_1e5cc8c7b_StructIns> _113649_s) {
	_1e6a072e4_IterTraitMethods(_113638_t, jule::__new_closure<void,jule::Ptr<_1e5ce0358_Fn>*>((void*)__jule_anon_1cc8cc975, jule::Ptr<__jule_anon_1cc8cc975_ctx>::make(__jule_anon_1cc8cc975_ctx{._self_=_self_,._113649_s=_113649_s}).as<jule::Uintptr>(), __jule_anon_1cc8cc975_ctx_handler));
}



inline void _1c8a885c4_traitData(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5d03db6_Trait>* _115331_t, jule::I64 _115342_i, jule::Ptr<_1e5cc8c7b_StructIns>* _115355_s) {
	_224497295_StrBuilder _11547_ident = static__2244a0b83_New((*((*(_115331_t))))._field_Ident.len());;
	static__1c89bbb89_traitDecl(&(_11547_ident), (*(_115331_t)));
	_1c8a7e147_write(_self_, jule::Str::lit("static ", 7));
	_1c8a7e400_writeBytes(_self_, _2244a2338_Buf(&_11547_ident));
	_1c8a7e147_write(_self_, jule::Str::lit("MptrData ", 9));
	_1c8a7e400_writeBytes(_self_, _2244a2338_Buf(&_11547_ident));
	_1c8a7e147_write(_self_, jule::Str::lit("_mptr_data", 10));
	_1c8a7e147_write(_self_, _1e2195e4e_Itoa(_115342_i));
	_1c8a7e147_write(_self_, jule::Str::lit(" {\n", 3));
	_1c8a7e5ed_addIndent(_self_);
	_1c8a7e9e9_indent(_self_);
	_1c8a7e147_write(_self_, jule::Str::lit(".dealloc=__jule_type_deallocator", 32));
	_1c8a7e147_write(_self_, _1e2195e4e_Itoa(_1c8a804bc_pushDealloc(_self_, jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_115355_s)), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data0)}))));
	_1c8a7e147_write(_self_, jule::Str::lit(",\n", 2));
	_1c8a881a6_traitDataMethods(_self_, _115331_t, (*(_115355_s)));
	_1c8a7e7eb_doneIndent(_self_);
	_1c8a7e147_write(_self_, jule::Str::lit("};\n", 3));
}



inline void _1c8a887c2_traitDatas(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_) {
	_1e6a06447_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1e5d5e21d_Package>*>((void*)__jule_anon_1cc8da301, jule::Ptr<__jule_anon_1cc8da301_ctx>::make(__jule_anon_1cc8da301_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1cc8da301_ctx_handler));
}



inline void _1c8a889c0_globalDecls(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc8d9b91:;
		if (it != expr_end) {
			jule::Ptr<_1e5da0bcc_Var> _119015_v = *it;
			{
				_1c8a93b62_kind((*(_self_))._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*(_119015_v))._field_Kind))._field_Kind);
				_1c8a7e147_write(_self_, jule::Str::lit(" ", 1));
				static__1c89bcb24_var(&((*_self_.alloc)._field_Buf), _119015_v);
				_1c8a7e147_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1cc8d9b91:;
			++it;
			goto _iter_begin_1cc8d9b91;
		}
		_iter_end_1cc8d9b91:;
	};
}



inline void _1c8a88bbd_decls(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_) {
	_1c8a826de_structurePlainDecls(_self_);
	_1c8a83c40_structureDecls(_self_);
	(*_self_.alloc)._field_headPos=_2244a1d1b_Len(&(*_self_.alloc)._field_Buf);
	_1c8a83e3d_structureMethodDecls(_self_);
	_1c8a85093_funcDecls(_self_);
	_1c8a7e147_write(_self_, jule::Str::lit("\n\n", 2));
	_1c8a85549_traitDataTypes(_self_);
	_1c8a7e147_write(_self_, jule::Str::lit("\n\n", 2));
	(*_self_.alloc)._field_wrapPos=_2244a1d1b_Len(&(*_self_.alloc)._field_Buf);
	_1c8a87d43_traitWrappers(_self_);
	_1c8a7e147_write(_self_, jule::Str::lit("\n\n", 2));
	_1c8a887c2_traitDatas(_self_);
	_1c8a7e147_write(_self_, jule::Str::lit("\n\n", 2));
	(*_self_.alloc)._field_declPos=_2244a1d1b_Len(&(*_self_.alloc)._field_Buf);
	_1c8a889c0_globalDecls(_self_);
}



inline void _1c8a88e76_structureMethods(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5cc8c7b_StructIns>* _121638_s) {
	{
		auto expr = &((*((*(_121638_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc8e50db:;
		if (it != expr_end) {
			jule::Ptr<_1e5ce0358_Fn> _121715_f = *it;
			{
				_1c8a8712d_func(_self_, &(_121715_f));
				_1c8a7e147_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1cc8e50db:;
			++it;
			goto _iter_begin_1cc8e50db;
		}
		_iter_end_1cc8e50db:;
	};
}



inline void _1c8a8922e_structureIns(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5cc8c7b_StructIns>* _122334_s) {
	;
	_1c8a834d1_structureOperators(_self_, _122334_s, false);
	_1c8a88e76_structureMethods(_self_, _122334_s);
}



inline void _1c8a894d7_structure(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5cc5e21_Struct>* _122931_s) {
	{
		auto expr = &((*((*(_122931_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc8e75b6:;
		if (it != expr_end) {
			jule::Ptr<_1e5cc8c7b_StructIns> _123015_ins = *it;
			{
				_1c8a8922e_structureIns(_self_, &(_123015_ins));
				_1c8a7e147_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1cc8e75b6:;
			++it;
			goto _iter_begin_1cc8e75b6;
		}
		_iter_end_1cc8e75b6:;
	};
}



inline void _1c8a896d5_structures(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc8e7d03:;
		if (it != expr_end) {
			jule::Ptr<_1e5cc5e21_Struct> _123715_s = *it;
			{
				if (((*(_123715_s))._field_Token != nullptr)) {
					_1c8a894d7_structure(_self_, &(_123715_s));
					_1c8a7e147_write(_self_, jule::Str::lit("\n\n", 2));
				};
			}
			_iter_next_1cc8e7d03:;
			++it;
			goto _iter_begin_1cc8e7d03;
		}
		_iter_end_1cc8e7d03:;
	};
}



inline void _1c8a898d3_funcs(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_) {
	_1e6a06447_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1e5d5e21d_Package>*>((void*)__jule_anon_1cc8ea92c, jule::Ptr<__jule_anon_1cc8ea92c_ctx>::make(__jule_anon_1cc8ea92c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1cc8ea92c_ctx_handler));
}



inline void _1c8a89b8b_pushInit(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, jule::Ptr<_1e5d5e21d_Package>* _126830_pkg) {
	_1e6a06777_IterFiles(_126830_pkg, jule::__new_closure<void,jule::Ptr<_1e5e03548_SymbolTable>*>((void*)__jule_anon_1cc8ebe06, jule::Ptr<__jule_anon_1cc8ebe06_ctx>::make(__jule_anon_1cc8ebe06_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1cc8ebe06_ctx_handler));
}



inline void _1c8a89d89_anonHashes(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_) {
	_julec_label_1cc901746:;
	jule::Slice<jule::Ptr<_1c8a770b8_anonHash>> _12857_anons = (*(_self_))._field_anons;;
	(*_self_.alloc)._field_anons=nullptr;
	{
		auto expr = &(_12857_anons);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc9032c5:;
		if (it != expr_end) {
			jule::Ptr<_1c8a770b8_anonHash> _128715_h = *it;
			{
				_1c8a86a12_anonFuncIns(_self_, &((*(_128715_h))._field_expr), (*_128715_h.alloc)._field_ident);
			}
			_iter_next_1cc9032c5:;
			++it;
			goto _iter_begin_1cc9032c5;
		}
		_iter_end_1cc9032c5:;
	};
	if (((*_self_.alloc)._field_anons.len() > 0LL)) {
		goto _julec_label_1cc901746;
	};
}



inline void _1c8a8a087_initGlobals(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc9047e3:;
		if (it != expr_end) {
			jule::Ptr<_1e5da0bcc_Var> _129615_v = *it;
			{
				_2244a1348_WriteByte(&(*(_self_))._field_Buf, 9LLU);
				static__1c89bcb24_var(&((*_self_.alloc)._field_Buf), _129615_v);
				_1c8a7e147_write(_self_, jule::Str::lit(" = ", 3));
				_1c89b3477_model((*_self_.alloc)._field_ec, (*((*((*(_129615_v))._field_Value))._field_Data))._field_Model);
				_1c8a7e147_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1cc9047e3:;
			++it;
			goto _iter_begin_1cc9047e3;
		}
		_iter_end_1cc9047e3:;
	};
}



inline void _1c8a8a285_initCaller(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_) {
	_1c8a7e147_write(_self_, jule::Str::lit("void __jule_call_initializers(void) {\n", 38));
	_1c8a7e5ed_addIndent(_self_);
	_1e6a06447_IterPackages(&((*_self_.alloc)._field_ir), jule::__new_closure<void,jule::Ptr<_1e5d5e21d_Package>*>((void*)__jule_anon_1cc908297, jule::Ptr<__jule_anon_1cc908297_ctx>::make(__jule_anon_1cc908297_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1cc908297_ctx_handler));
	_1c8a7e7eb_doneIndent(_self_);
	_1c8a7e147_write(_self_, jule::Str::lit("\n}", 2));
}



inline void _1c8a8a483_end(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_) {
	_1c8a7e147_write(_self_, jule::Str::lit("int main(int argc, char *argv[], char *envp[]) {", 48));
	_1c8a7e147_write(_self_, jule::Str::lit("\n\n", 2));
	_1c8a8a087_initGlobals(_self_);
	_1c8a7e147_write(_self_, jule::Str::lit("\n\t__jule_argc = static_cast<jule::Int>(argc);\n\t__jule_argv = reinterpret_cast<jule::U8**>(argv);\n\t__jule_envp = reinterpret_cast<jule::U8**>(envp);\n\n\t__jule_call_initializers();\n\t", 179));
	if (_22586bb30_Test) {
		_1c8a7e147_write(_self_, jule::Str::lit("test_point();", 13));
	} else {
		_1c8a7e147_write(_self_, jule::Str::lit("entry_point();", 14));
	};
	_1c8a7e147_write(_self_, jule::Str::lit("\n\n\treturn EXIT_SUCCESS;\n}", 25));
}



inline void _1c8a8a7e6_insertBuf(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_, _224497295_StrBuilder* _133931_buf, jule::I64 _133948_pos) {
	if ((_2244a1d1b_Len(_133931_buf) > 0LL)) {
		jule::Slice<jule::U8> _13418_head = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, (_2244a1d1b_Len(&(*(_self_))._field_Buf) + _2244a1d1b_Len(_133931_buf))); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
		(_13418_head).append(_2244a2338_Buf(&(*_self_.alloc)._field_Buf).slice(0LL, _133948_pos));;
		(_13418_head).append(_2244a2338_Buf(_133931_buf));;
		(_13418_head).append(_2244a2338_Buf(&(*_self_.alloc)._field_Buf).slice(_133948_pos));;
		{
			_2244a25e1_SetBuf(&(*_self_.alloc)._field_Buf, _13418_head);
		};
	};
}



inline void _1c8a8a9e4_implementRC(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_) {
	if ((*(_self_))._field_meta._field_concurrent) {
		_1c8a86d75_funcIns(_self_, (*(_1e614dc8d_RuntimeFindFn(&((*((*_self_.alloc)._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_RCAddAtomic", 12)))))._field_Instances[0LL], jule::Str::lit("__jule_RCAdd", 12));
		_1c8a86d75_funcIns(_self_, (*(_1e614dc8d_RuntimeFindFn(&((*((*(_self_))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_RCLoadAtomic", 13)))))._field_Instances[0LL], jule::Str::lit("__jule_RCLoad", 13));
		_1c8a86d75_funcIns(_self_, (*(_1e614dc8d_RuntimeFindFn(&((*((*(_self_))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_RCDropAtomic", 13)))))._field_Instances[0LL], jule::Str::lit("__jule_RCDrop", 13));
	} else {
		_1c8a86d75_funcIns(_self_, (*(_1e614dc8d_RuntimeFindFn(&((*((*_self_.alloc)._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_RCAdd", 6)))))._field_Instances[0LL], jule::Str());
		_1c8a86d75_funcIns(_self_, (*(_1e614dc8d_RuntimeFindFn(&((*((*(_self_))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_RCLoad", 7)))))._field_Instances[0LL], jule::Str());
		_1c8a86d75_funcIns(_self_, (*(_1e614dc8d_RuntimeFindFn(&((*((*(_self_))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_RCDrop", 7)))))._field_Instances[0LL], jule::Str());
	};
}



inline void _1c8a8abe2_serializeHead(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_) {
	_1c8a82238_prepareStructures(_self_);
	_1c8a819c9_head(_self_);
	_1c8a7e147_write(_self_, jule::Str::lit("\n", 1));
	_1c8a88bbd_decls(_self_);
	_1c8a8a7e6_insertBuf(_self_, &((*_self_.alloc)._field_resultDecls), (*_self_.alloc)._field_headPos);
	(*_self_.alloc)._field_wrapPos+=_2244a1d1b_Len(&(*_self_.alloc)._field_resultDecls);
	(*_self_.alloc)._field_declPos+=_2244a1d1b_Len(&(*_self_.alloc)._field_resultDecls);
	_1c8a7e147_write(_self_, jule::Str::lit("\n", 1));
	_1c8a896d5_structures(_self_);
	_1c8a898d3_funcs(_self_);
	_1c8a8a285_initCaller(_self_);
	_1c8a7e147_write(_self_, jule::Str::lit("\n\n", 2));
	_1c8a89d89_anonHashes(_self_);
	_1c8a8a9e4_implementRC(_self_);
	_1c8a8a7e6_insertBuf(_self_, &((*_self_.alloc)._field_deallocObj), (*_self_.alloc)._field_wrapPos);
	(*_self_.alloc)._field_wrapPos+=_2244a1d1b_Len(&(*_self_.alloc)._field_deallocObj);
	(*_self_.alloc)._field_declPos+=_2244a1d1b_Len(&(*_self_.alloc)._field_deallocObj);
	_1c8a8a7e6_insertBuf(_self_, &((*_self_.alloc)._field_anyObj), (*_self_.alloc)._field_declPos);
	(*_self_.alloc)._field_declPos+=_2244a1d1b_Len(&(*_self_.alloc)._field_anyObj);
	_1c8a8a7e6_insertBuf(_self_, &((*_self_.alloc)._field_anonObj), (*_self_.alloc)._field_declPos);
	(*_self_.alloc)._field_declPos+=_2244a1d1b_Len(&(*_self_.alloc)._field_anonObj);
	_1c8a8a7e6_insertBuf(_self_, &((*_self_.alloc)._field_coSpawnObj), (*_self_.alloc)._field_declPos);
	(*_self_.alloc)._field_declPos+=_2244a1d1b_Len(&(*_self_.alloc)._field_coSpawnObj);
}



inline void _1c8a8ade0_Serialize(jule::Ptr<_1c8a7d92c_ObjectCoder> _self_) {
	_1c8a8abe2_serializeHead(_self_);
	_1c8a8a483_end(_self_);
}








inline jule::Bool _1c8a8cd26_customType_eq(_1c8a8cd26_customType *_self_, _1c8a8cd26_customType _other_) {
	return 
		(_self_->_field_kind == _other_._field_kind);
}

inline jule::Str _1c8a8d222_Str(_1c8a8cd26_customType* _self_) {
	return (*(_self_))._field_kind;;
}



inline jule::Bool _1c8a8d563_Equal(jule::Ptr<_1c8a8cd26_customType> _self_, jule::Ptr<_1e5e417ea_TypeKind> _4418_k) {
	return false;;
}








inline jule::Bool _1c8a8d95e_typeCoder_eq(_1c8a8d95e_typeCoder *_self_, _1c8a8d95e_typeCoder _other_) {
	return 
		(_self_->_field_oc == _other_._field_oc) &&
		(_self_->_field_rc == _self_->_field_rc);
}

inline jule::Ptr<_1c8a8d95e_typeCoder> static__1c8a8deae_new(jule::Ptr<_1c8a7d92c_ObjectCoder>* _6921_oc) {
	jule::Ptr<_1c8a8d95e_typeCoder> _707_tc = jule::new_ptr<_1c8a8d95e_typeCoder>(_1c8a8d95e_typeCoder{._field_oc=(*(_6921_oc)), ._field_rc=jule::Ptr<_1c8a96549_resultCoder>(nullptr)});;
	(*(_707_tc))._field_rc=static__1c8a96a55_new(&(_707_tc));
	return _707_tc;;
}



inline void _1c8a8e322_toType(_1c8a8d95e_typeCoder* _self_, _224497295_StrBuilder* _7627_buf, jule::Str _7648_id) {
	if ((_7648_id != static_cast<jule::Str>(jule::Str::lit("uintptr", 7)))) {
		_7648_id=_1e219854a_RealKindOf(_7648_id);
	};
	_2244a1090_WriteStr(_7627_buf, jule::Str::lit("jule::", 6));
	if (((97LL <= _7648_id[0LL]) && (_7648_id[0LL] <= 122LLU))) {
		_2244a1348_WriteByte(_7627_buf, (jule::U8)(_7648_id[0LL] - 32LLU));
	} else {
		_2244a1348_WriteByte(_7627_buf, _7648_id[0LL]);
	};
	_2244a1090_WriteStr(_7627_buf, _7648_id.slice(1LL));
}



inline void _1c8a8e685_prim(_1c8a8d95e_typeCoder* _self_, _224497295_StrBuilder* _9025_buf, jule::Ptr<_1e5e49913_Prim> _9042_p) {
	_1c8a8e322_toType(_self_, _9025_buf, (*(_9042_p))._field_Kind);
}



inline void _1c8a8e9e8_tuple(_1c8a8d95e_typeCoder* _self_, _224497295_StrBuilder* _9526_buf, jule::Ptr<_1e5e4ea06_Tuple> _9547_t) {
	_2244a1090_WriteStr(_9526_buf, jule::Str::lit("std::tuple<", 11));
	{
		auto expr = &((*_9547_t.alloc)._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc929a8d:;
		if (it != expr_end) {
			jule::I64 _978_i = it - expr->begin();
			jule::Ptr<_1e5e417ea_TypeKind> _9715_tk = *it;
			{
				_1c8a93b62_kind(_self_, _9526_buf, _9715_tk);
				if ((((*(_9547_t))._field_Types.len() - _978_i) > 1LL)) {
					_2244a1348_WriteByte(_9526_buf, ',');
				};
			}
			_iter_next_1cc929a8d:;
			++it;
			_978_i++;
			goto _iter_begin_1cc929a8d;
		}
		_iter_end_1cc929a8d:;
	};
	_2244a1348_WriteByte(_9526_buf, '>');
}



inline void _1c8a8ed5b_asSptr(_1c8a8d95e_typeCoder* _self_, _224497295_StrBuilder* _10727_buf, jule::Slice<jule::U8> _10744_elem) {
	_2244a1090_WriteStr(_10727_buf, jule::Str::lit("jule::Ptr<", 10));
	_2244a0cd7_Write(_10727_buf, _10744_elem);
	_2244a1348_WriteByte(_10727_buf, '>');
}



inline void _1c8a901be_sptr(_1c8a8d95e_typeCoder* _self_, _224497295_StrBuilder* _11425_buf, jule::Ptr<_1e5e4d43e_Sptr> _11446_sptr) {
	_2244a1090_WriteStr(_11425_buf, jule::Str::lit("jule::Ptr<", 10));
	_1c8a93b62_kind(_self_, _11425_buf, (*(_11446_sptr))._field_Elem);
	_2244a1348_WriteByte(_11425_buf, '>');
}



inline void _1c8a90532_ptr(_1c8a8d95e_typeCoder* _self_, _224497295_StrBuilder* _12124_buf, jule::Ptr<_1e5e51c06_Ptr> _12145_p) {
	;
	if (_1e5e52773_IsUnsafe(_12145_p.ptr())) {
		_2244a1090_WriteStr(_12124_buf, jule::Str::lit("void*", 5));
	} else {
		_1c8a93b62_kind(_self_, _12124_buf, (*(_12145_p))._field_Elem);
		_2244a1090_WriteStr(_12124_buf, jule::Str::lit("*", 1));
	};
}



inline void _1c8a90895_enumDecl(_1c8a8d95e_typeCoder* _self_, _224497295_StrBuilder* _13229_buf, jule::Ptr<_1e5d065c2_Enum> _13250_e) {
	_1c8a93b62_kind(_self_, _13229_buf, (*((*(_13250_e))._field_Kind))._field_Kind);
}



inline void _1c8a90c08_typeEnumDecl(_1c8a8d95e_typeCoder* _self_, _224497295_StrBuilder* _13733_buf, jule::Ptr<_1e5d07ccc_TypeEnum> _13754_e) {
	_2244a1090_WriteStr(_13733_buf, jule::Str::lit("jule::Any", 9));
}



inline void _1c8a9106b_asSlice(_1c8a8d95e_typeCoder* _self_, _224497295_StrBuilder* _14128_buf, jule::Ptr<_1e5e417ea_TypeKind> _14149_elem) {
	_2244a1090_WriteStr(_14128_buf, jule::Str::lit("jule::Slice<", 12));
	_1c8a93b62_kind(_self_, _14128_buf, _14149_elem);
	_2244a1348_WriteByte(_14128_buf, '>');
}



inline void _1c8a913ce_slice(_1c8a8d95e_typeCoder* _self_, _224497295_StrBuilder* _14826_buf, jule::Ptr<_1e5e4de12_Slc> _14847_s) {
	_1c8a9106b_asSlice(_self_, _14826_buf, (*(_14847_s))._field_Elem);
}



inline void _1c8a91742_mapType(_1c8a8d95e_typeCoder* _self_, _224497295_StrBuilder* _15328_buf, jule::Ptr<_1e5e505a6_Map> _15349_m) {
	jule::Ptr<_1e5cc5e21_Struct> _1547_s = _1e61560a3_RuntimeFindStruct(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
	jule::Ptr<_1e5cc8c7b_StructIns> _1557_ins = _1e6a0d8d3_FindStructGenericInstance(&(_1547_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5e417ea_TypeKind>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_15349_m))._field_Key; (*it++) = (*_15349_m.alloc)._field_Val; __jule_collection; }));;
	_2244a1090_WriteStr(_15328_buf, jule::Str::lit("jule::Ptr<", 10));
	static__1c89bc54c_structureIns(_15328_buf, &(_1557_ins));
	_2244a1090_WriteStr(_15328_buf, jule::Str::lit(">", 1));
}



inline void _1c8a91e18_structureIns(_1c8a8d95e_typeCoder* _self_, _224497295_StrBuilder* _16733_buf, jule::Ptr<_1e5cc8c7b_StructIns> _16754_s) {
	if ((!((*((*(_16754_s))._field_Decl))._field_Binded))) {
		static__1c89bc54c_structureIns(_16733_buf, &(_16754_s));
		return;;
	};
	jule::Ptr<_1e5ca44a4_Directive> _1723_d = _1e6a0b925_FindDirective(&((*(*(_16754_s))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("namespace", 9)));;
	if ((_1723_d != nullptr)) {
		_2244a0cd7_Write(_16733_buf, _1c8a8b275_concatAllParts((*_1723_d.alloc)._field_Args));
		_2244a1090_WriteStr(_16733_buf, jule::Str::lit("::", 2));
	};
	static__1c89bc54c_structureIns(_16733_buf, &(_16754_s));
	if (((*_16754_s.alloc)._field_Generics.len() > 0LL)) {
		_2244a1348_WriteByte(_16733_buf, '<');
		{
			auto expr = &((*_16754_s.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1cc93842b:;
			if (it != expr_end) {
				jule::I64 _1809_i = it - expr->begin();
				jule::Ptr<_1e5e3ee14_InsGeneric> _18016_g = *it;
				{
					_1c8a93b62_kind(_self_, _16733_buf, (*(_18016_g))._field_Kind);
					if ((((*_16754_s.alloc)._field_Generics.len() - _1809_i) > 1LL)) {
						_2244a1348_WriteByte(_16733_buf, ',');
					};
				}
				_iter_next_1cc93842b:;
				++it;
				_1809_i++;
				goto _iter_begin_1cc93842b;
			}
			_iter_end_1cc93842b:;
		};
		_2244a1348_WriteByte(_16733_buf, '>');
	};
}



inline void _1c8a9227b_array(_1c8a8d95e_typeCoder* _self_, _224497295_StrBuilder* _19126_buf, jule::Ptr<_1e5e51233_Arr> _19147_a) {
	_2244a1090_WriteStr(_19126_buf, jule::Str::lit("jule::Array<", 12));
	_1c8a93b62_kind(_self_, _19126_buf, (*(_19147_a))._field_Elem);
	_2244a1348_WriteByte(_19126_buf, ',');
	_2244a1090_WriteStr(_19126_buf, _1e2195e4e_Itoa((*_19147_a.alloc)._field_N));
	_2244a1348_WriteByte(_19126_buf, '>');
}



inline void _1c8a92952_paramIns(_1c8a8d95e_typeCoder* _self_, _224497295_StrBuilder* _21429_buf, jule::Ptr<_1e5ce22b1_ParamIns>* _21451_p) {
	if ((*((*((*(_21451_p))))._field_Decl))._field_Variadic) {
		_2244a1090_WriteStr(_21429_buf, jule::Str::lit("jule::Slice<", 12));
		_1c8a93b62_kind(_self_, _21429_buf, (*((*(_21451_p))))._field_Kind);
		_2244a1348_WriteByte(_21429_buf, '>');
	} else {
		_1c8a93b62_kind(_self_, _21429_buf, (*((*(_21451_p))))._field_Kind);
	};
	if ((*((*((*(_21451_p))))._field_Decl))._field_Reference) {
		_2244a1348_WriteByte(_21429_buf, '*');
	};
}



inline void _1c8a93128_funcInsResult(_1c8a8d95e_typeCoder* _self_, _224497295_StrBuilder* _24634_s, jule::Ptr<_1e5ce3416_FnIns>* _24654_f) {
	if (_1e5ce080e_IsVoid((*((*(_24654_f))))._field_Decl.ptr())) {
		if ((*(*((*(_24654_f))))._field_Decl.alloc)._field_Exceptional) {
			_2244a1090_WriteStr(_24634_s, jule::Str::lit("jule::VoidExceptional", 21));
		} else {
			_2244a1090_WriteStr(_24634_s, jule::Str::lit("void", 4));
		};
		return;;
	};
	if ((*(*((*(_24654_f))))._field_Decl.alloc)._field_Exceptional) {
		_2244a1090_WriteStr(_24634_s, jule::Str::lit("jule::Exceptional<", 18));
		_1c8a98b12_codeMut1((*(_self_))._field_rc.ptr(), _24634_s, &((*((*(_24654_f))))._field_Result));
		_2244a1348_WriteByte(_24634_s, '>');
		return;;
	};
	_1c8a98b12_codeMut1((*(_self_))._field_rc, _24634_s, &((*((*(_24654_f))))._field_Result));
}



inline void _1c8a9348b_anonFunc(_1c8a8d95e_typeCoder* _self_, _224497295_StrBuilder* _26429_buf, jule::Ptr<_1e5ce3416_FnIns> _26450_f) {
	if ((((*(_26450_f))._field_Result != nullptr) && (_1e5e45cc7_Tup((*(_26450_f))._field_Result) != nullptr))) {
		_1c8a80e07_pushResultIns((*(_self_))._field_oc, &(_26450_f));
	};
	_1c8a93128_funcInsResult(_self_, _26429_buf, &(_26450_f));
	if (((*_26450_f.alloc)._field_Params.len() == 0LL)) {
		return;;
	};
	_2244a1348_WriteByte(_26429_buf, ',');
	{
		auto expr = &((*_26450_f.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc949c67:;
		if (it != expr_end) {
			jule::I64 _2738_i = it - expr->begin();
			jule::Ptr<_1e5ce22b1_ParamIns> _27315_param = *it;
			{
				if (_1e5cdded3_IsSelf((*(_27315_param))._field_Decl.ptr())) {
					goto _iter_next_1cc949c67;
				};
				_1c8a92952_paramIns(_self_, _26429_buf, &(_27315_param));
				if ((((*_26450_f.alloc)._field_Params.len() - _2738_i) > 1LL)) {
					_2244a1348_WriteByte(_26429_buf, ',');
				};
			}
			_iter_next_1cc949c67:;
			++it;
			_2738_i++;
			goto _iter_begin_1cc949c67;
		}
		_iter_end_1cc949c67:;
	};
}



inline void _1c8a937ee_func(_1c8a8d95e_typeCoder* _self_, _224497295_StrBuilder* _28525_buf, jule::Ptr<_1e5ce3416_FnIns> _28546_f) {
	_2244a1090_WriteStr(_28525_buf, jule::Str::lit("jule::Fn<", 9));
	_1c8a9348b_anonFunc(_self_, _28525_buf, _28546_f);
	_2244a1348_WriteByte(_28525_buf, '>');
}



inline void _1c8a93b62_kind(_1c8a8d95e_typeCoder* _self_, _224497295_StrBuilder* _29225_buf, jule::Ptr<_1e5e417ea_TypeKind> _29246_k) {
	{
		
		if ((_1e5e45524_Struct(_29246_k.ptr()) != nullptr)) {
			_case_begin_1cc94d2a9:;
			{
				_1c8a91e18_structureIns(_self_, _29225_buf, _1e5e45524_Struct(_29246_k));
				return;;
			}
		}
		else if (_1e5e42697_Binded(_29246_k.ptr())) {
			_case_begin_1cc94d353:;
			{
				_2244a1090_WriteStr(_29225_buf, (*_29246_k.alloc)._field_BindIdent);
				return;;
			}
		}
		else if ((_1e5e43ea1_Prim(_29246_k.ptr()) != nullptr)) {
			_case_begin_1cc94d3b9:;
			{
				_1c8a8e685_prim(_self_, _29225_buf, _1e5e43ea1_Prim(_29246_k));
				return;;
			}
		}
		else if ((_1e5e45cc7_Tup(_29246_k.ptr()) != nullptr)) {
			_case_begin_1cc94d430:;
			{
				_1c8a8e9e8_tuple(_self_, _29225_buf, _1e5e45cc7_Tup(_29246_k));
				return;;
			}
		}
		else if ((_1e5e44237_Sptr(_29246_k.ptr()) != nullptr)) {
			_case_begin_1cc94d496:;
			{
				_1c8a901be_sptr(_self_, _29225_buf, _1e5e44237_Sptr(_29246_k));
				return;;
			}
		}
		else if ((_1e5e444bd_Ptr(_29246_k.ptr()) != nullptr)) {
			_case_begin_1cc94d51d:;
			{
				_1c8a90532_ptr(_self_, _29225_buf, _1e5e444bd_Ptr(_29246_k));
				return;;
			}
		}
		else if ((_1e5e44754_Enum(_29246_k.ptr()) != nullptr)) {
			_case_begin_1cc94d595:;
			{
				_1c8a90895_enumDecl(_self_, _29225_buf, _1e5e44754_Enum(_29246_k));
				return;;
			}
		}
		else if ((_1e5e449da_TypeEnum(_29246_k.ptr()) != nullptr)) {
			_case_begin_1cc94d61c:;
			{
				_1c8a90c08_typeEnumDecl(_self_, _29225_buf, _1e5e449da_TypeEnum(_29246_k));
				return;;
			}
		}
		else if ((_1e5e45007_Slc(_29246_k.ptr()) != nullptr)) {
			_case_begin_1cc94d694:;
			{
				_1c8a913ce_slice(_self_, _29225_buf, _1e5e45007_Slc(_29246_k));
				return;;
			}
		}
		else if ((_1e5e45a41_Map(_29246_k.ptr()) != nullptr)) {
			_case_begin_1cc94d71b:;
			{
				_1c8a91742_mapType(_self_, _29225_buf, _1e5e45a41_Map(_29246_k));
				return;;
			}
		}
		else if ((_1e5e457aa_Trait(_29246_k.ptr()) != nullptr)) {
			_case_begin_1cc94d793:;
			{
				_2244a1090_WriteStr(_29225_buf, jule::Str::lit("jule::Trait", 11));
				return;;
			}
		}
		else if ((_1e5e44c71_Arr(_29246_k.ptr()) != nullptr)) {
			_case_begin_1cc94d81a:;
			{
				_1c8a9227b_array(_self_, _29225_buf, _1e5e44c71_Arr(_29246_k));
				return;;
			}
		}
		else if ((_1e5e4528d_Fn(_29246_k.ptr()) != nullptr)) {
			_case_begin_1cc94d892:;
			{
				_1c8a937ee_func(_self_, _29225_buf, _1e5e4528d_Fn(_29246_k));
				return;;
			}
		}
		_match_end_1cc94d0bc:;
	};
	{
		auto &_match_expr{ (*(_29246_k))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5e41344_Kind_mptr_data29)) {
			_case_begin_1cc94d92a:;
			{
				_2244a1090_WriteStr(_29225_buf, (*((*(_29246_k))._field_Kind.cast_ptr<_1c8a8cd26_customType>((jule::Trait::Type*)&_1e5e41344_Kind_mptr_data29)))._field_kind);
			}
		}
		else {
			_case_begin_1cc956ed8:;
			{
				_2244a1090_WriteStr(_29225_buf, jule::Str::lit("[<unimplemented_type_kind>]", 27));
			}
		}
		_match_end_1cc956e72:;
	};
}








inline jule::Bool _1c8a96549_resultCoder_eq(_1c8a96549_resultCoder *_self_, _1c8a96549_resultCoder _other_) {
	return 
		(_self_->_field_tc == _other_._field_tc);
}

inline jule::Ptr<_1c8a96549_resultCoder> static__1c8a96a55_new(jule::Ptr<_1c8a8d95e_typeCoder>* _36021_tc) {
	return jule::new_ptr<_1c8a96549_resultCoder>(_1c8a96549_resultCoder{._field_tc=(*(_36021_tc))});;
}



inline void _1c8a96db8_ptr(_1c8a96549_resultCoder* _self_, _224497295_StrBuilder* _36424_s, jule::Ptr<_1e5e51c06_Ptr> _36443_p) {
	_2244a1090_WriteStr(_36424_s, jule::Str::lit("p", 1));
	_1c8a9879e_codeMut(_self_, _36424_s, &((*(_36443_p))._field_Elem));
}



inline void _1c8a9722b_sptr(_1c8a96549_resultCoder* _self_, _224497295_StrBuilder* _36925_s, jule::Ptr<_1e5e4d43e_Sptr> _36944_p) {
	_2244a1090_WriteStr(_36925_s, jule::Str::lit("x", 1));
	_1c8a9879e_codeMut(_self_, _36925_s, &((*(_36944_p))._field_Elem));
}



inline void _1c8a9758e_mapType(_1c8a96549_resultCoder* _self_, _224497295_StrBuilder* _37428_s, jule::Ptr<_1e5e505a6_Map> _37447_p) {
	_2244a1090_WriteStr(_37428_s, jule::Str::lit("m", 1));
	_1c8a9879e_codeMut(_self_, _37428_s, &((*(_37447_p))._field_Key));
	_1c8a9879e_codeMut(_self_, _37428_s, &((*_37447_p.alloc)._field_Val));
}



inline void _1c8a97902_slice(_1c8a96549_resultCoder* _self_, _224497295_StrBuilder* _38026_s, jule::Ptr<_1e5e4de12_Slc> _38045_slc) {
	_2244a1090_WriteStr(_38026_s, jule::Str::lit("s", 1));
	_1c8a9879e_codeMut(_self_, _38026_s, &((*(_38045_slc))._field_Elem));
}



inline void _1c8a97c65_arr(_1c8a96549_resultCoder* _self_, _224497295_StrBuilder* _38524_s, jule::Ptr<_1e5e51233_Arr> _38543_arr) {
	_2244a1090_WriteStr(_38524_s, jule::Str::lit("a", 1));
	_2244a1090_WriteStr(_38524_s, _1e2195b85_FmtInt(static_cast<jule::I64>((*(_38543_arr))._field_N), 16LL));
	_1c8a9879e_codeMut(_self_, _38524_s, &((*_38543_arr.alloc)._field_Elem));
}



inline void _1c8a980c8_func(_1c8a96549_resultCoder* _self_, _224497295_StrBuilder* _39125_s, jule::Ptr<_1e5ce3416_FnIns> _39144_f) {
	_2244a1090_WriteStr(_39125_s, jule::Str::lit("f", 1));
	{
		auto expr = &((*(_39144_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc95e474:;
		if (it != expr_end) {
			jule::Ptr<_1e5ce22b1_ParamIns> _39315_p = *it;
			{
				if ((*((*(_39315_p))._field_Decl))._field_Reference) {
					_2244a1090_WriteStr(_39125_s, jule::Str::lit("r", 1));
				};
				_1c8a9879e_codeMut(_self_, _39125_s, &((*_39315_p.alloc)._field_Kind));
			}
			_iter_next_1cc95e474:;
			++it;
			goto _iter_begin_1cc95e474;
		}
		_iter_end_1cc95e474:;
	};
	if (((*_39144_f.alloc)._field_Result != nullptr)) {
		_1c8a9879e_codeMut(_self_, _39125_s, &((*_39144_f.alloc)._field_Result));
	};
}



inline void _1c8a9843b_tup(_1c8a96549_resultCoder* _self_, _224497295_StrBuilder* _40424_s, jule::Ptr<_1e5e4ea06_Tuple> _40443_tup) {
	{
		auto expr = &((*(_40443_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc961b08:;
		if (it != expr_end) {
			jule::Ptr<_1e5e417ea_TypeKind> _40515_t = *it;
			{
				_2244a1090_WriteStr(_40424_s, jule::Str::lit("__jule_tuple_", 13));
				_1c8a9879e_codeMut(_self_, _40424_s, &(_40515_t));
			}
			_iter_next_1cc961b08:;
			++it;
			goto _iter_begin_1cc961b08;
		}
		_iter_end_1cc961b08:;
	};
}



inline void _1c8a9879e_codeMut(_1c8a96549_resultCoder* _self_, _224497295_StrBuilder* _41128_s, jule::Ptr<_1e5e417ea_TypeKind>* _41148_t) {
	if (_1e5e42697_Binded((*(_41148_t)).ptr())) {
		_2244a1090_WriteStr(_41128_s, jule::Str::lit("b", 1));
		_2244a1090_WriteStr(_41128_s, (*((*(_41148_t))))._field_BindIdent);
		return;;
	};
	{
		auto &_match_expr{ (*((*(_41148_t))))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5e41344_Kind_mptr_data28)) {
			_case_begin_1cc96329c:;
			{
				_1c8a96db8_ptr(_self_, _41128_s, (*((*(_41148_t))))._field_Kind.cast_ptr<_1e5e51c06_Ptr>((jule::Trait::Type*)&_1e5e41344_Kind_mptr_data28));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5e41344_Kind_mptr_data23)) {
			_case_begin_1cc963e3a:;
			{
				_1c8a9722b_sptr(_self_, _41128_s, (*((*(_41148_t))))._field_Kind.cast_ptr<_1e5e4d43e_Sptr>((jule::Trait::Type*)&_1e5e41344_Kind_mptr_data23));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5e41344_Kind_mptr_data26)) {
			_case_begin_1cc963ea1:;
			{
				_1c8a9758e_mapType(_self_, _41128_s, (*((*(_41148_t))))._field_Kind.cast_ptr<_1e5e505a6_Map>((jule::Trait::Type*)&_1e5e41344_Kind_mptr_data26));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5e41344_Kind_mptr_data24)) {
			_case_begin_1cc964017:;
			{
				_1c8a97902_slice(_self_, _41128_s, (*((*(_41148_t))))._field_Kind.cast_ptr<_1e5e4de12_Slc>((jule::Trait::Type*)&_1e5e41344_Kind_mptr_data24));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5e41344_Kind_mptr_data27)) {
			_case_begin_1cc96407d:;
			{
				_1c8a97c65_arr(_self_, _41128_s, (*((*(_41148_t))))._field_Kind.cast_ptr<_1e5e51233_Arr>((jule::Trait::Type*)&_1e5e41344_Kind_mptr_data27));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5e41344_Kind_mptr_data1)) {
			_case_begin_1cc9644bd:;
			{
				_1c8a980c8_func(_self_, _41128_s, (*((*(_41148_t))))._field_Kind.cast_ptr<_1e5ce3416_FnIns>((jule::Trait::Type*)&_1e5e41344_Kind_mptr_data1));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5e41344_Kind_mptr_data3)) {
			_case_begin_1cc964534:;
			{
				jule::Ptr<_1e5d065c2_Enum> _4314_te = (*((*(_41148_t))))._field_Kind.cast_ptr<_1e5d065c2_Enum>((jule::Trait::Type*)&_1e5e41344_Kind_mptr_data3);;
				static__1c89bad75_toOut(_41128_s, (*(_4314_te))._field_Ident, static_cast<jule::Uintptr>(_4314_te));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5e41344_Kind_mptr_data4)) {
			_case_begin_1cc96459a:;
			{
				jule::Ptr<_1e5d07ccc_TypeEnum> _4344_te = (*((*(_41148_t))))._field_Kind.cast_ptr<_1e5d07ccc_TypeEnum>((jule::Trait::Type*)&_1e5e41344_Kind_mptr_data4);;
				static__1c89bad75_toOut(_41128_s, (*(_4344_te))._field_Ident, static_cast<jule::Uintptr>(_4344_te));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5e41344_Kind_mptr_data0)) {
			_case_begin_1cc964611:;
			{
				jule::Ptr<_1e5cc8c7b_StructIns> _4378_si = (*((*(_41148_t))))._field_Kind.cast_ptr<_1e5cc8c7b_StructIns>((jule::Trait::Type*)&_1e5e41344_Kind_mptr_data0);;
				static__1c89bc54c_structureIns(_41128_s, &(_4378_si));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5e41344_Kind_mptr_data2)) {
			_case_begin_1cc964677:;
			{
				jule::Ptr<_1e5d03db6_Trait> _4408_trt = (*((*(_41148_t))))._field_Kind.cast_ptr<_1e5d03db6_Trait>((jule::Trait::Type*)&_1e5e41344_Kind_mptr_data2);;
				static__1c89bbb89_traitDecl(_41128_s, _4408_trt);
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5e41344_Kind_mptr_data22)) {
			_case_begin_1cc9646dd:;
			{
				_2244a1090_WriteStr(_41128_s, (*((*((*(_41148_t))))._field_Kind.cast_ptr<_1e5e49913_Prim>((jule::Trait::Type*)&_1e5e41344_Kind_mptr_data22)))._field_Kind);
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5e41344_Kind_mptr_data25)) {
			_case_begin_1cc964754:;
			{
				_1c8a9843b_tup(_self_, _41128_s, (*((*(_41148_t))))._field_Kind.cast_ptr<_1e5e4ea06_Tuple>((jule::Trait::Type*)&_1e5e41344_Kind_mptr_data25));
			}
		}
		else {
			_case_begin_1cc963dc4:;
			{
				__jule_panic_s(jule::Str::lit("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/type.jule:447:4"));;
			}
		}
		_match_end_1cc963d5d:;
	};
}



inline void _1c8a98b12_codeMut1(_1c8a96549_resultCoder* _self_, _224497295_StrBuilder* _45129_s, jule::Ptr<_1e5e417ea_TypeKind>* _45149_t) {
	jule::Ptr<_1e5e4ea06_Tuple> _4527_tup = _1e5e45cc7_Tup((*(_45149_t)).ptr());;
	if ((_4527_tup != nullptr)) {
		_1c8a9843b_tup(_self_, _45129_s, _4527_tup);
	} else {
		_1c8a93b62_kind((*(_self_))._field_tc.ptr(), _45129_s, (*(_45149_t)));
	};
}



inline jule::Slice<jule::U8> _1c8a98e20_code(_1c8a96549_resultCoder* _self_, jule::Ptr<_1e5e417ea_TypeKind>* _46025_t) {
	_224497295_StrBuilder _4617_s = static__2244a0b83_New(20LL);;
	_1c8a9879e_codeMut(_self_, &(_4617_s), _46025_t);
	return _2244a2338_Buf(&_4617_s);;
}








inline jule::Bool _1cc970584_Flag_eq(_1cc970584_Flag *_self_, _1cc970584_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1cc9703db_Name(_1cc970584_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1cc970870_What(_1cc970584_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1cc9709b3_Reset(_1cc970584_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1cc970b06_Short(_1cc970584_Flag* _self_) {
	return (*(_self_))._field_short;;
}






inline jule::Bool _1cc973da1_Flag_eq(_1cc973da1_Flag *_self_, _1cc973da1_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1cc973a2c_Name(_1cc973da1_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1cc97418c_What(_1cc973da1_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1cc9742d0_Reset(_1cc973da1_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1cc974423_Short(_1cc973da1_Flag* _self_) {
	return (*(_self_))._field_short;;
}






inline jule::Bool _1cc9775ad_Flag_eq(_1cc9775ad_Flag *_self_, _1cc9775ad_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1cc977239_Name(_1cc9775ad_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1cc977899_What(_1cc9775ad_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1cc9779dc_Reset(_1cc9775ad_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1cc977b30_Short(_1cc9775ad_Flag* _self_) {
	return (*(_self_))._field_short;;
}






inline jule::Bool _1cc97ad0e_Flag_eq(_1cc97ad0e_Flag *_self_, _1cc97ad0e_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1cc97a98a_Name(_1cc97ad0e_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1cc97b0ea_What(_1cc97ad0e_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1cc97b23d_Reset(_1cc97ad0e_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1cc97b381_Short(_1cc97ad0e_Flag* _self_) {
	return (*(_self_))._field_short;;
}






inline jule::Bool _1cc97e51b_Flag_eq(_1cc97e51b_Flag *_self_, _1cc97e51b_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1cc97e197_Name(_1cc97e51b_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1cc97e807_What(_1cc97e51b_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1cc97e94a_Reset(_1cc97e51b_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1cc97ea8d_Short(_1cc97e51b_Flag* _self_) {
	return (*(_self_))._field_short;;
}







inline jule::Ptr<_1c8b12692_FlagSet> static__1c8b129b1_New(void) {
	return jule::new_ptr<_1c8b12692_FlagSet>(_1c8b12692_FlagSet{._field_flags=({ auto __jule_collection = jule::Slice<jule::Trait>::alloc(0LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Trait(nullptr); __jule_collection; })});;
}



inline jule::Trait _1c8b12e67_FindFlag(_1c8b12692_FlagSet* _self_, jule::Str _7124_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc98938e:;
		if (it != expr_end) {
			jule::Trait _7215_flag = *it;
			{
				if ((((_1c8b10abe_CommonFlagMptrData*)_7215_flag.safe_type())->_1c8ace97d_Name(_7215_flag.data) == _7124_name)) {
					return _7215_flag;;
				};
			}
			_iter_next_1cc98938e:;
			++it;
			goto _iter_begin_1cc98938e;
		}
		_iter_end_1cc98938e:;
	};
	return nullptr;;
}



inline jule::Trait _1c8b132a8_FindFlagShort(_1c8b12692_FlagSet* _self_, jule::I32 _8129_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc989aa9:;
		if (it != expr_end) {
			jule::Trait _8215_flag = *it;
			{
				if ((((_1c8b10abe_CommonFlagMptrData*)_8215_flag.safe_type())->_1c8aceac1_Short(_8215_flag.data) == _8129_name)) {
					return _8215_flag;;
				};
			}
			_iter_next_1cc989aa9:;
			++it;
			goto _iter_begin_1cc989aa9;
		}
		_iter_end_1cc989aa9:;
	};
	return nullptr;;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1c8b13880_Parse(_1c8b12692_FlagSet* _self_, jule::Slice<jule::Str> _11521_args) {
	_1c8b15156_argParser _1167_ap = _1c8b15156_argParser{._field_set=(*(_self_)), ._field_args=_11521_args, ._field_content=jule::Slice<jule::Str>(nullptr), ._field_i=0};;
	({
		auto except = _1c8b16685_parse(&_1167_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>{.error=except.error};
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>{.result=_1167_ap._field_content};;
}



inline jule::Ptr<_1cc97e51b_Flag> _1cca1303e_addFlagCommon(_1c8b12692_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what) {
	if ((_1c8b12e67_FindFlag(_self_, _13132_name) != nullptr)) {
		__jule_panic_s((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13132_name) + jule::Str("\nlocation: std/flag/flag.jule:133:4"));;
	};
	if (((_13143_short != 0LL) && (_1c8b132a8_FindFlagShort(_self_, _13143_short) != nullptr))) {
		__jule_panic_s((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + __jule_strFromRune(_13143_short)) + jule::Str("\nlocation: std/flag/flag.jule:137:4"));;
	};
	jule::Ptr<_1cc97e51b_Flag> _1407_flag = jule::new_ptr<_1cc97e51b_Flag>(_1cc97e51b_Flag{._field_name=_13132_name, ._field_short=_13143_short, ._field_default=jule::Str(), ._field_what=_13156_what, ._field_data=jule::Ptr<jule::Str>(nullptr)});;
	{ jule::Slice<jule::Trait> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait(_1407_flag, (jule::Trait::Type*)&_1c8b10abe_CommonFlag_mptr_data4)); };
	return _1407_flag;;
}

inline jule::Ptr<_1cc97ad0e_Flag> _1cca1c114_addFlagCommon(_1c8b12692_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what) {
	if ((_1c8b12e67_FindFlag(_self_, _13132_name) != nullptr)) {
		__jule_panic_s((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13132_name) + jule::Str("\nlocation: std/flag/flag.jule:133:4"));;
	};
	if (((_13143_short != 0LL) && (_1c8b132a8_FindFlagShort(_self_, _13143_short) != nullptr))) {
		__jule_panic_s((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + __jule_strFromRune(_13143_short)) + jule::Str("\nlocation: std/flag/flag.jule:137:4"));;
	};
	jule::Ptr<_1cc97ad0e_Flag> _1407_flag = jule::new_ptr<_1cc97ad0e_Flag>(_1cc97ad0e_Flag{._field_name=_13132_name, ._field_short=_13143_short, ._field_default=false, ._field_what=_13156_what, ._field_data=jule::Ptr<jule::Bool>(nullptr)});;
	{ jule::Slice<jule::Trait> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait(_1407_flag, (jule::Trait::Type*)&_1c8b10abe_CommonFlag_mptr_data3)); };
	return _1407_flag;;
}



inline void _1cca10811_AddVar(_1c8b12692_FlagSet* _self_, jule::Ptr<jule::Str> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what) {
	if ((_16759_var == nullptr)) {
		__jule_panic_s(jule::Str::lit("std::flag: FlatSet.AddVar[T]: variable is nil", 45) + jule::Str("\nlocation: std/flag/flag.jule:169:4"));;
	};
	jule::Ptr<_1cc97e51b_Flag> _1717_flag = _1cca1303e_addFlagCommon(_self_, _16768_name, _16779_short, _16792_what);;
	(*(_1717_flag))._field_default=(*(_16759_var));
	(*_1717_flag.alloc)._field_data=_16759_var;
}

inline void _1cca1992a_AddVar(_1c8b12692_FlagSet* _self_, jule::Ptr<jule::Bool> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what) {
	if ((_16759_var == nullptr)) {
		__jule_panic_s(jule::Str::lit("std::flag: FlatSet.AddVar[T]: variable is nil", 45) + jule::Str("\nlocation: std/flag/flag.jule:169:4"));;
	};
	jule::Ptr<_1cc97ad0e_Flag> _1717_flag = _1cca1c114_addFlagCommon(_self_, _16768_name, _16779_short, _16792_what);;
	(*(_1717_flag))._field_default=(*(_16759_var));
	(*_1717_flag.alloc)._field_data=_16759_var;
}







inline __jule_tuple_i64__jule_tuple_bool _1cc9922dc_parseInteger(_1c8b15156_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I64> _18536_parser) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_18528_s))).empty()) {
			_case_begin_1cc995345:;
			{
				__jule_func_result.__jule_result_arg0 = 0LL;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_2256d7380_HasPrefix((*(_18528_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1cc99508c:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_2256d7380_HasPrefix((*(_18528_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1cc99494e:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_2256d7380_HasPrefix((*(_18528_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1cc9949b5:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_18528_s))[0LL] == '0')) {
			_case_begin_1cc994a2b:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1cc9948d8:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1cc9947c8:;
	};
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool _1cc999db6_parseInteger(_1c8b15156_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I64> _18536_parser) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_18528_s))).empty()) {
			_case_begin_1cc99cea7:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_2256d7380_HasPrefix((*(_18528_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1cc99cbee:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_2256d7380_HasPrefix((*(_18528_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1cc99c5b1:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_2256d7380_HasPrefix((*(_18528_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1cc99c627:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_18528_s))[0LL] == '0')) {
			_case_begin_1cc99c68d:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1cc99c54a:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1cc99c43a:;
	};
	return __jule_func_result;;
}



inline jule::Str _1c8b159a3_getData(_1c8b15156_argParser* _self_) {
	if ((((*(_self_))._field_i + 1LL) >= (*(_self_))._field_args.len())) {
		return jule::Str();;
	};
	((*(_self_))._field_i)++;
	return (*(_self_))._field_args[(*(_self_))._field_i];;
}



inline jule::VoidExceptional _1c8b15c28_processFlag(_1c8b15156_argParser* _self_, jule::Trait* _21232_flag) {
	{
		auto &_match_expr{ (*(_21232_flag)) };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c8b10abe_CommonFlag_mptr_data3)) {
			_case_begin_1cc98e493:;
			{
				jule::Ptr<_1cc97ad0e_Flag> _2158_bf = (*(_21232_flag)).cast_ptr<_1cc97ad0e_Flag>((jule::Trait::Type*)&_1c8b10abe_CommonFlag_mptr_data3);;
				(*((*(_2158_bf))._field_data))=(!((*_2158_bf.alloc)._field_default));
				return jule::VoidExceptional{};;
			}
		}
		_match_end_1cc98e42c:;
	};
	jule::Str _2203_data = _1c8b159a3_getData(_self_);;
	if ((_2203_data).empty()) {
		return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1c8b10abe_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1c8ace97d_Name((*(_21232_flag)).data)) + jule::Str::lit(": expression missing", 20)), &__jule_any_type4)};
	};
	{
		auto &_match_expr{ (*(_21232_flag)) };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c8b10abe_CommonFlag_mptr_data0)) {
			_case_begin_1cc991396:;
			{
				jule::Ptr<_1cc970584_Flag> _2278_intf = (*(_21232_flag)).cast_ptr<_1cc970584_Flag>((jule::Trait::Type*)&_1c8b10abe_CommonFlag_mptr_data0);;
				jule::Bool _22818_ok;
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _1cc9922dc_parseInteger(_self_, &(_2203_data), jule::__new_closure<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I64>((void*)__jule_anon1cc995ce6, nullptr, nullptr));
					(*((*(_2278_intf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_22818_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_22818_ok))) {
					return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1c8b10abe_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1c8ace97d_Name((*(_21232_flag)).data)) + jule::Str::lit(": expression must be valid signed integer", 41)), &__jule_any_type4)};
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c8b10abe_CommonFlag_mptr_data1)) {
			_case_begin_1cc990d02:;
			{
				jule::Ptr<_1cc973da1_Flag> _2358_uintf = (*(_21232_flag)).cast_ptr<_1cc973da1_Flag>((jule::Trait::Type*)&_1c8b10abe_CommonFlag_mptr_data1);;
				jule::Bool _23619_ok;
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1cc999db6_parseInteger(_self_, &(_2203_data), jule::__new_closure<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I64>((void*)__jule_anon1cc99d958, nullptr, nullptr));
					(*((*(_2358_uintf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_23619_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_23619_ok))) {
					return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1c8b10abe_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1c8ace97d_Name((*(_21232_flag)).data)) + jule::Str::lit(": expression must be valid unsigned integer", 43)), &__jule_any_type4)};
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c8b10abe_CommonFlag_mptr_data2)) {
			_case_begin_1cc99140c:;
			{
				jule::Ptr<_1cc9775ad_Flag> _2438_ff = (*(_21232_flag)).cast_ptr<_1cc9775ad_Flag>((jule::Trait::Type*)&_1c8b10abe_CommonFlag_mptr_data2);;
				(*((*(_2438_ff))._field_data))=({
					auto except = _1e218ae00_ParseFloat(_2203_data, 64LL);
					(except.ok()) ? (except.result) : ({{

						return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1c8b10abe_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1c8ace97d_Name((*(_21232_flag)).data)) + jule::Str::lit(": expression must be valid floating-point", 41)), &__jule_any_type4)};
					} 0;});
				});
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c8b10abe_CommonFlag_mptr_data4)) {
			_case_begin_1cc991473:;
			{
				(*((*((*(_21232_flag)).cast_ptr<_1cc97e51b_Flag>((jule::Trait::Type*)&_1c8b10abe_CommonFlag_mptr_data4)))._field_data))=_2203_data;
			}
		}
		_match_end_1cc990b37:;
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1c8b15ed1_singleDash(_1c8b15156_argParser* _self_, jule::Str* _25227_arg) {
	if (((*(_25227_arg)).len() == 1LL)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_25227_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type4)};
	};
	{
		auto expr = (*(_25227_arg)).slice(1LL);
		jule::U8 *it = expr.begin();
		const jule::U8 *end = it + expr.len();
		jule::Int len;
		jule::I32 _25710_r;
		_iter_begin_1cc9a42cc:;
		__jule_runeStep(it, end - it, &_25710_r, &len);
		if (it < end) {
			{
				jule::Trait _2588_flag = _1c8b132a8_FindFlagShort(&(*(_self_))._field_set, _25710_r);;
				if ((_2588_flag == nullptr)) {
					return jule::VoidExceptional{.error=jule::Any((((*(_25227_arg)) + jule::Str::lit(": flag is not exist: ", 21)) + __jule_strFromRune(_25710_r)), &__jule_any_type4)};
				};
				({
					auto except = _1c8b15c28_processFlag(_self_, &(_2588_flag));
					if (!except.ok()) {
						return jule::VoidExceptional{.error=std::move(except.error)};
					}
				});
			}
			_iter_next_1cc9a42cc:;
			it += len;
			goto _iter_begin_1cc9a42cc;
		}
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1c8b16289_doubleDash(_1c8b15156_argParser* _self_, jule::Str* _26627_arg) {
	if (((*(_26627_arg)).len() == 2LL)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_26627_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type4)};
	};
	jule::Trait _2707_flag = _1c8b12e67_FindFlag(&(*(_self_))._field_set, (*(_26627_arg)).slice(2LL));;
	if ((_2707_flag == nullptr)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_26627_arg)) + jule::Str::lit(": flag is not exist", 19)), &__jule_any_type4)};
	};
	return _1c8b15c28_processFlag(_self_, &(_2707_flag));
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1c8b16487_tryArg(_1c8b15156_argParser* _self_) {
	jule::Str _2783_arg = (*(_self_))._field_args[(*(_self_))._field_i];;
	if (((*(_self_))._field_args.len() == 0LL)) {
		return jule::VoidExceptional{};;
	};
	if ((_2783_arg[0LL] == '-')) {
		if (((_2783_arg.len() > 1LL) && (_2783_arg[1LL] == '-'))) {
			({
				auto except = _1c8b16289_doubleDash(_self_, &(_2783_arg));
				if (!except.ok()) {
					return jule::VoidExceptional{.error=std::move(except.error)};
				}
			});
			return jule::VoidExceptional{};;
		};
		({
			auto except = _1c8b15ed1_singleDash(_self_, &(_2783_arg));
			if (!except.ok()) {
				return jule::VoidExceptional{.error=std::move(except.error)};
			}
		});
		return jule::VoidExceptional{};;
	};
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_content; __jule_push_dest.push(_2783_arg); };
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1c8b16685_parse(_1c8b15156_argParser* _self_) {
	for (; ((*(_self_))._field_i < (*(_self_))._field_args.len()); ((*(_self_))._field_i)++) {
		{
			({
				auto except = _1c8b16487_tryArg(_self_);
				if (!except.ok()) {
					return jule::VoidExceptional{.error=std::move(except.error)};
				}
			});
		}
	_iter_next_1cc9a903a:;
	}
	_iter_end_1cc9a903a:;;
	return jule::VoidExceptional{};
}











inline jule::Ptr<_22584814a_Cmd> static__22584858a_New(jule::Str _2616_path) {
	return jule::new_ptr<_22584814a_Cmd>(_22584814a_Cmd{._field_attrs=_225861262_cmdAttrs{}, ._field_path=_2616_path, ._field_Args=jule::Slice<jule::Str>(nullptr), ._field_Env=jule::Slice<jule::Str>(nullptr)});;
}



inline jule::VoidExceptional _225848788_Spawn(_22584814a_Cmd* _self_) {
	return _225861619_spawn(_self_);
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I64> _225848c1c_Wait(_22584814a_Cmd* _self_) {
	return _225861a9d_wait(_self_);
}



inline jule::VoidExceptional _225861619_spawn(_22584814a_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_hProcess != nullptr)) {
		__jule_panic_s(jule::Str::lit("command is already spawned", 26) + jule::Str("\nlocation: std/process/cmd_windows.jule:43:4"));;
	};
	STARTUPINFOW _457_startupInfo = (STARTUPINFOW){};;
	PROCESS_INFORMATION _467_processInfo = (PROCESS_INFORMATION){};;
	{
		ZeroMemory((&(_457_startupInfo)), sizeof(_457_startupInfo));
		ZeroMemory((&(_467_processInfo)), sizeof(_467_processInfo));
	};
	_457_startupInfo.cb=sizeof(_457_startupInfo);
	jule::Slice<jule::Str> _527_args = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(1LL, (1LL + (*(_self_))._field_Args.len())); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; });;
	_527_args[0LL]=(*(_self_))._field_path;
	(_527_args).append((*(_self_))._field_Args);;
	jule::Slice<jule::U16> _553_argv = _223c78318_UTF16FromStr(_2258621db_makeCmdLine(_527_args));;
	jule::Slice<jule::U16> _563_env = ({
		auto except = _2258625b5_createEnvBlock((*(_self_))._field_Env);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional{.error=std::move(except.error)};
		} jule::Slice<jule::U16>(nullptr);});
	});;
	jule::U16* _577_envp = (&(_563_env[0LL]));;
	if (((*(_self_))._field_Env.len() == 0LL)) {
		_577_envp=nullptr;
	};
	;
	{
		if ((CreateProcessW(nullptr, ((wchar_t*)((&(_553_argv[0LL])))), nullptr, nullptr, 0LL, 1024LLU, _577_envp, nullptr, (&(_457_startupInfo)), (&(_467_processInfo))) == 0LL)) {
			return jule::VoidExceptional{.error=jule::Any(_2258637d6_getLastProcessError(), &__jule_any_type0)};
		};
	};
	(*(_self_))._field_attrs._field_hProcess=_467_processInfo.hProcess;
	(*(_self_))._field_attrs._field_hThread=_467_processInfo.hThread;
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I64> _225861a9d_wait(_22584814a_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_hProcess == nullptr)) {
		__jule_panic_s(jule::Str::lit("command is not spawned", 22) + jule::Str("\nlocation: std/process/cmd_windows.jule:86:4"));;
	};
	{
		WaitForSingleObject((*(_self_))._field_attrs._field_hProcess, INFINITE);
	};
	__jule_unsigned_long _897_exitCode = static_cast<__jule_unsigned_long>(4294967295LLU);;
	{
		GetExitCodeProcess((*(_self_))._field_attrs._field_hProcess, (&(_897_exitCode)));
		_224088e75_CloseHandle(((jule::Uintptr)((*(_self_))._field_attrs._field_hProcess)));
		_224088e75_CloseHandle(((jule::Uintptr)((*(_self_))._field_attrs._field_hThread)));
	};
	(*(_self_))._field_attrs._field_hProcess=nullptr;
	(*(_self_))._field_attrs._field_hThread=nullptr;
	return jule::Exceptional<jule::I64>{.result=static_cast<jule::I64>(_897_exitCode)};;
}







inline __jule_tuple_x_1e6a03ab5_IR__jule_tuple_s_22578b38a_Log static__1e6a0408d_Build(jule::Str _2918_path, jule::I64 _2929_flags) {
	__jule_tuple_x_1e6a03ab5_IR__jule_tuple_s_22578b38a_Log __jule_func_result;
	jule::Ptr<_1e6a01222_JuleImporter> _307_importer = static__1e6a01651_New(_1e6a05a40_buildCompileInfo());;
	;
	jule::Slice<jule::Ptr<_1e5ca3173_AST>> _327_files;
	jule::Slice<_22578b38a_Log> _3218_logs;
	({
		__jule_tuple_sx_1e5ca3173_AST__jule_tuple_s_22578b38a_Log __jule_assign_result = _1e6a02b3b_ImportPackage(_307_importer.ptr(), _2918_path, true);
		_327_files = __jule_assign_result.__jule_result_arg0;
		_3218_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_3218_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _3218_logs;
		return __jule_func_result;;
	};
	jule::Str _363_root = _2918_path;;
	if ((_327_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1e5ca3173_AST> _447_firstFile = _327_files[0LL];;
	_1e6a05ce8_pushRuntimeToAST(&(_447_firstFile));
	jule::Ptr<_1e5d5e21d_Package> _477_pkg;
	({
		__jule_tuple_x_1e5d5e21d_Package__jule_tuple_s_22578b38a_Log __jule_assign_result = _1e5e639a4_AnalyzePackage(_327_files, jule::Trait(_307_importer, (jule::Trait::Type*)&_1e5d5805d_Importer_mptr_data0), _2929_flags);
		_477_pkg = __jule_assign_result.__jule_result_arg0;
		_3218_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_3218_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _3218_logs;
		return __jule_func_result;;
	};
	jule::Ptr<_1e6a03ab5_IR> _527_ir = jule::new_ptr<_1e6a03ab5_IR>(_1e6a03ab5_IR{._field_Root=_363_root, ._field_Passes=jule::Slice<jule::Str>(nullptr), ._field_Main=_477_pkg, ._field_Runtime=jule::Ptr<_1e5d5b2e7_ImportInfo>(nullptr), ._field_Used=_1e6a018d7_AllPackages(_307_importer), ._field_Ordered=_1e6a0e032_OrderedDefines{._field_Structs=jule::Slice<jule::Ptr<_1e5cc5e21_Struct>>(nullptr), ._field_Globals=jule::Slice<jule::Ptr<_1e5da0bcc_Var>>(nullptr)}});;
	(*(_527_ir))._field_Passes=_1e6a05831_getAllUniquePasses(&((*_527_ir.alloc)._field_Main), (*_527_ir.alloc)._field_Used);
	(*_527_ir.alloc)._field_Runtime=(*((*(_477_pkg))._field_Files[0LL]))._field_Imports[0LL];
	__jule_func_result.__jule_result_arg0 = _527_ir;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1e6a04577_appendStructs(_1e6a03ab5_IR* _self_, jule::Ptr<_1e5d5e21d_Package>* _6730_p, jule::Slice<jule::Ptr<_1e5cc5e21_Struct>>* _6754_buffer) {
	{
		auto expr = &((*((*(_6730_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbdd6754:;
		if (it != expr_end) {
			jule::Ptr<_1e5e03548_SymbolTable> _6815_f = *it;
			{
				{
					auto expr = &((*(_6815_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cbdd71b1:;
					if (it != expr_end) {
						jule::Ptr<_1e5cc5e21_Struct> _6916_s = *it;
						{
							if ((!((*(_6916_s))._field_Binded))) {
								{ jule::Slice<jule::Ptr<_1e5cc5e21_Struct>> &__jule_push_dest = (*(_6754_buffer)); __jule_push_dest.push(_6916_s); };
							};
						}
						_iter_next_1cbdd71b1:;
						++it;
						goto _iter_begin_1cbdd71b1;
					}
					_iter_end_1cbdd71b1:;
				};
			}
			_iter_next_1cbdd6754:;
			++it;
			goto _iter_begin_1cbdd6754;
		}
		_iter_end_1cbdd6754:;
	};
}



inline jule::Slice<jule::Ptr<_1e5cc5e21_Struct>> _1e6a0480d_GetAllStructures(_1e6a03ab5_IR* _self_) {
	jule::Slice<jule::Ptr<_1e5cc5e21_Struct>> _8011_buffer = nullptr;;
	_1e6a04577_appendStructs(_self_, &((*(_self_))._field_Main), &(_8011_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbdd836b:;
		if (it != expr_end) {
			jule::Ptr<_1e5d5b2e7_ImportInfo> _8215_u = *it;
			{
				if ((!((*(_8215_u))._field_Binded))) {
					_1e6a04577_appendStructs(_self_, &((*_8215_u.alloc)._field_Package), &(_8011_buffer));
				};
			}
			_iter_next_1cbdd836b:;
			++it;
			goto _iter_begin_1cbdd836b;
		}
		_iter_end_1cbdd836b:;
	};
	return _8011_buffer;;
}



inline void _1e6a04b71_appendGlobals(_1e6a03ab5_IR* _self_, jule::Ptr<_1e5d5e21d_Package>* _9030_p, jule::Slice<jule::Ptr<_1e5da0bcc_Var>>* _9054_buffer) {
	{
		auto expr = &((*((*(_9030_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbdd99ee:;
		if (it != expr_end) {
			jule::Ptr<_1e5e03548_SymbolTable> _9115_f = *it;
			{
				{
					auto expr = &((*(_9115_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cbdda45b:;
					if (it != expr_end) {
						jule::Ptr<_1e5da0bcc_Var> _9216_v = *it;
						{
							if (((((*(_9216_v))._field_Token != nullptr) && (!((*_9216_v.alloc)._field_Binded))) && (!((*_9216_v.alloc)._field_Constant)))) {
								{ jule::Slice<jule::Ptr<_1e5da0bcc_Var>> &__jule_push_dest = (*(_9054_buffer)); __jule_push_dest.push(_9216_v); };
							};
						}
						_iter_next_1cbdda45b:;
						++it;
						goto _iter_begin_1cbdda45b;
					}
					_iter_end_1cbdda45b:;
				};
			}
			_iter_next_1cbdd99ee:;
			++it;
			goto _iter_begin_1cbdd99ee;
		}
		_iter_end_1cbdd99ee:;
	};
}



inline jule::Slice<jule::Ptr<_1e5da0bcc_Var>> _1e6a04e07_GetAllGlobals(_1e6a03ab5_IR* _self_) {
	jule::Slice<jule::Ptr<_1e5da0bcc_Var>> _10311_buffer = nullptr;;
	_1e6a04b71_appendGlobals(_self_, &((*(_self_))._field_Main), &(_10311_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbddbd86:;
		if (it != expr_end) {
			jule::Ptr<_1e5d5b2e7_ImportInfo> _10515_u = *it;
			{
				if ((!((*(_10515_u))._field_Binded))) {
					_1e6a04b71_appendGlobals(_self_, &((*_10515_u.alloc)._field_Package), &(_10311_buffer));
				};
			}
			_iter_next_1cbddbd86:;
			++it;
			goto _iter_begin_1cbddbd86;
		}
		_iter_end_1cbddbd86:;
	};
	return _10311_buffer;;
}



inline void _1e6a05105_Order(_1e6a03ab5_IR* _self_) {
	(*(_self_))._field_Ordered._field_Globals=_1e6a04e07_GetAllGlobals(_self_);
	(*(_self_))._field_Ordered._field_Structs=_1e6a0480d_GetAllStructures(_self_);
	_1cbddd98c_order((*(_self_))._field_Ordered._field_Globals);
	_1cbdde570_order((*(_self_))._field_Ordered._field_Structs);
}







inline jule::I32 _223c7736c_DecodeRune(jule::I32 _6815_r1, jule::I32 _6825_r2) {
	if (((((55296LL <= _6815_r1) && (_6815_r1 < 56320LL)) && (56320LL <= _6825_r2)) && (_6825_r2 < 57344LL))) {
		return ((((_6815_r1 - 55296LL) << 10LL) | (_6825_r2 - 56320LL)) + 65536LL);;
	};
	return 65533LL;;
}



inline __jule_tuple_i32__jule_tuple_i32 _223c77636_EncodeRune(jule::I32 _7819_r) {
	__jule_tuple_i32__jule_tuple_i32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((_7819_r < 65536LL) || (_7819_r > 1114111LL))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 65533LL;
		return __jule_func_result;;
	};
	_7819_r-=65536LL;
	__jule_func_result.__jule_result_arg0 = (55296LL + ((_7819_r >> 10LL) & 1023LL));
	__jule_func_result.__jule_result_arg1 = (56320LL + (_7819_r & 1023LL));
	return __jule_func_result;;
}



inline jule::Slice<jule::U16> _223c77977_Encode(jule::Slice<jule::I32> _8711_s) {
	jule::I64 _886_n = _8711_s.len();;
	{
		auto expr = &(_8711_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c8b22a37:;
		if (it != expr_end) {
			jule::I32 *_899_v = it;
			{
				if (((*(_899_v)) >= 65536LL)) {
					(_886_n)++;
				};
			}
			_iter_next_1c8b22a37:;
			++it;
			goto _iter_begin_1c8b22a37;
		}
		_iter_end_1c8b22a37:;
	};
	jule::Slice<jule::U16> _956_a = ({ auto __jule_collection = jule::Slice<jule::U16>::alloc(_886_n, _886_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	_886_n=0LL;
	{
		auto expr = &(_8711_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c8b24792:;
		if (it != expr_end) {
			jule::I32 *_979_v = it;
			{
				{
					
					if (((0LL <= (*(_979_v))) && ((*(_979_v)) < 55296LL)) || ((57344LL <= (*(_979_v))) && ((*(_979_v)) < 65536LL))) {
						_case_begin_1c8b25463:;
						{
							_956_a[_886_n]=static_cast<jule::U16>((*(_979_v)));
							(_886_n)++;
						}
					}
					else if (((65536LL <= (*(_979_v))) && ((*(_979_v)) <= 1114111LL))) {
						_case_begin_1c8b25133:;
						{
							jule::I32 _1054_r1;
							jule::I32 _1058_r2;
							({
								__jule_tuple_i32__jule_tuple_i32 __jule_assign_result = _223c77636_EncodeRune((*(_979_v)));
								_1054_r1 = __jule_assign_result.__jule_result_arg0;
								_1058_r2 = __jule_assign_result.__jule_result_arg1;
							});
							_956_a[_886_n]=static_cast<jule::U16>(_1054_r1);
							_956_a[(_886_n + 1LL)]=static_cast<jule::U16>(_1058_r2);
							_886_n+=2LL;
						}
					}
					else {
						_case_begin_1c8b250bc:;
						{
							_956_a[_886_n]=static_cast<jule::U16>(65533LLU);
							(_886_n)++;
						}
					}
					_match_end_1c8b24eac:;
				};
			}
			_iter_next_1c8b24792:;
			++it;
			goto _iter_begin_1c8b24792;
		}
		_iter_end_1c8b24792:;
	};
	return _956_a.slice(0LL, _886_n);;
}



inline jule::Slice<jule::I32> _223c77c0d_Decode(jule::Slice<jule::U16> _11911_s) {
	jule::Slice<jule::I32> _1206_a = ({ auto __jule_collection = jule::Slice<jule::I32>::alloc(_11911_s.len(), _11911_s.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _1216_n = 0LL;;
	jule::I64 _1226_i = 0LL;;
	for (; (_1226_i < _11911_s.len()); (_1226_i)++) {
		{
			jule::U16 _1243_r = _11911_s[_1226_i];;
			{
				
				if ((_1243_r < 55296LLU) || (57344LL <= _1243_r)) {
					_case_begin_1c8b29c4d:;
					{
						_1206_a[_1216_n]=static_cast<jule::I32>(_1243_r);
					}
				}
				else if (((((_1243_r < 56320LLU) && ((_1226_i + 1LL) < _11911_s.len())) && (56320LL <= _11911_s[(_1226_i + 1LL)])) && (_11911_s[(_1226_i + 1LL)] < 57344LLU))) {
					_case_begin_1c8b29a1c:;
					{
						_1206_a[_1216_n]=_223c7736c_DecodeRune(static_cast<jule::I32>(_1243_r), static_cast<jule::I32>(_11911_s[(_1226_i + 1LL)]));
						(_1226_i)++;
					}
				}
				else {
					_case_begin_1c8b29654:;
					{
						_1206_a[_1216_n]=65533LL;
					}
				}
				_match_end_1c8b295dd:;
			};
			(_1216_n)++;
		}
	_iter_next_1c8b276eb:;
	}
	_iter_end_1c8b276eb:;;
	return _1206_a.slice(0LL, _1216_n);;
}



inline jule::Slice<jule::U16> _223c78082_AppendRune(jule::Slice<jule::U16> _14919_a, jule::I32 _14929_r) {
	{
		
		if (((0LL <= _14929_r) && (_14929_r < 55296LL)) || ((57344LL <= _14929_r) && (_14929_r < 65536LL))) {
			_case_begin_1c8b2c58b:;
			{
				return jule::append(_14919_a,({ auto __jule_collection = jule::Slice<jule::U16>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U16>(_14929_r); __jule_collection; }));;
			}
		}
		else if (((65536LL <= _14929_r) && (_14929_r <= 1114111LL))) {
			_case_begin_1c8b2c635:;
			{
				jule::I32 _1563_r1;
				jule::I32 _1567_r2;
				({
					__jule_tuple_i32__jule_tuple_i32 __jule_assign_result = _223c77636_EncodeRune(_14929_r);
					_1563_r1 = __jule_assign_result.__jule_result_arg0;
					_1567_r2 = __jule_assign_result.__jule_result_arg1;
				});
				return jule::append(_14919_a,({ auto __jule_collection = jule::Slice<jule::U16>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U16>(_1563_r1); (*it++) = static_cast<jule::U16>(_1567_r2); __jule_collection; }));;
			}
		}
		_match_end_1c8b2c48c:;
	};
	return jule::append(_14919_a,({ auto __jule_collection = jule::Slice<jule::U16>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = 65533LLU; __jule_collection; }));;
}



inline jule::Slice<jule::U16> _223c78318_UTF16FromStr(jule::Str _1017_s) {
	;
	jule::Slice<jule::I32> _162_runes = __jule_strToRunes(_1017_s);;
	jule::Slice<jule::U16> _176_buff = ({ auto __jule_collection = jule::Slice<jule::U16>::alloc(0LL, _162_runes.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	{
		auto expr = &(_162_runes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c8b3762e:;
		if (it != expr_end) {
			jule::I32 *_189_r = it;
			{
				if (((*(_189_r)) == 0LL)) {
					goto _iter_end_1c8b3762e;
				};
				_176_buff=_223c78082_AppendRune(_176_buff, (*(_189_r)));
			}
			_iter_next_1c8b3762e:;
			++it;
			goto _iter_begin_1c8b3762e;
		}
		_iter_end_1c8b3762e:;
	};
	return _223c78082_AppendRune(_176_buff, 0LL);;
}



inline jule::Str _223c78626_UTF16ToStr(jule::Slice<jule::U16> _3015_s) {
	if ((_3015_s == nullptr)) {
		return jule::Str();;
	};
	jule::Slice<jule::U16> _346_codePage = _3015_s;;
	{
		auto expr = &(_3015_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c8b39cb3:;
		if (it != expr_end) {
			jule::I64 _356_i = it - expr->begin();
			jule::U16 *_359_v = it;
			{
				if (((*(_359_v)) == 0LLU)) {
					(_346_codePage).mut_slice(0LL, _356_i);;
					goto _iter_end_1c8b39cb3;
				};
			}
			_iter_next_1c8b39cb3:;
			++it;
			_356_i++;
			goto _iter_begin_1c8b39cb3;
		}
		_iter_end_1c8b39cb3:;
	};
	return __jule_runesToStr(_223c77c0d_Decode(_346_codePage));;
}



inline jule::Str _223c788e0_U16PtrToStr(jule::U16* _4623_s) {
	if ((_4623_s == nullptr)) {
		return jule::Str();;
	};
	jule::Slice<jule::U16> _5110_codePage;;
	jule::I64 _526_i = 0LL;;
	for (; ; (_526_i)++) {
		{
			jule::U16 _543_r = _4623_s[_526_i];;
			if ((_543_r == 0LLU)) {
				return __jule_runesToStr(_223c77c0d_Decode(_5110_codePage));;
			};
			{ jule::Slice<jule::U16> &__jule_push_dest = _5110_codePage; __jule_push_dest.push(_543_r); };
		}
	_iter_next_1c8b3a654:;
	}
	_iter_end_1c8b3a654:;;
	return jule::Str();;
}



inline jule::Str _223c7967c_Str(jule::U8* _108_b, jule::I64 _1018_n) {
	jule::Str _116_s = jule::Str();;
	{
		_116_s.buffer = jule::Ptr<jule::U8>::make(_108_b, nullptr);
		_116_s._len = _1018_n;
		_116_s._slice = _108_b;
	};
	return _116_s;;
}



inline jule::Slice<jule::U8> _1c8b46385_Slice(jule::U8* _2216_e, jule::I64 _2226_len, jule::I64 _2236_cap) {
	jule::Slice<jule::U8> _236_buf = static_cast<jule::Slice<jule::U8>>(nullptr);;
	{
		_236_buf.data = jule::Ptr<jule::U8>::make(_2216_e, nullptr);
		_236_buf._len = _2226_len;
		_236_buf._cap = _2236_cap;
		_236_buf._slice = _2216_e;
	};
	return _236_buf;;
}



inline jule::Slice<jule::U8> _223c7a2b5_StrBytes(jule::Str _4013_s) {
	if ((_4013_s.len() == 0LL)) {
		return nullptr;;
	};
	return _1c8b46385_Slice((&(_4013_s[0LL])), _4013_s.len(), _4013_s.len());;
}



inline jule::Str _223c7a54b_BytesStr(jule::Slice<jule::U8> _4913_b) {
	if ((_4913_b.len() == 0LL)) {
		return jule::Str();;
	};
	return _223c7967c_Str((&(_4913_b[0LL])), _4913_b.len());;
}



inline jule::Str _223c7a815_StrFromBytes(jule::Slice<jule::U8> _5717_b) {
	return (*(((jule::Str*)((&(_5717_b))))));;
}



inline jule::I64 _223c7be65_GetLastErrno(void) {
	return errno;;
}



inline jule::Uintptr _224088bab_GetStdHandle(jule::Uintptr _6417_stdh) {
	return ((jule::Uintptr)(GetStdHandle(_6417_stdh)));;
}



inline jule::Bool _224088e75_CloseHandle(jule::Uintptr _6523_stdh) {
	return CloseHandle(((void*)(_6523_stdh)));;
}



inline jule::I64 _2240892e9_Wstat(jule::U16* _6817_path, struct _stat* _6833_stat) {
	return _wstat(((wchar_t*)(_6817_path)), _6833_stat);;
}



inline jule::I64 _224089728_Wopen(jule::U16* _7317_path, jule::I64 _7329_flag, jule::I64 _7340_mode) {
	return _wopen(((wchar_t*)((&(_7317_path[0LL])))), _7329_flag, _7340_mode);;
}



inline jule::U32 _224089937_GetLastError(void) {
	return GetLastError();;
}



inline jule::U32 _224089cab_GetCurrentDirectory(jule::U32 _8231_bufflen, jule::U16* _8249_buff) {
	return GetCurrentDirectoryW(_8231_bufflen, ((wchar_t*)(_8249_buff)));;
}



inline jule::Bool _22408a33e_DeleteFile(jule::U16* _9322_path) {
	return DeleteFileW(((wchar_t*)(_9322_path)));;
}



inline jule::Bool _22408a608_CreateDirectory(jule::U16* _9827_path) {
	return CreateDirectoryW(((wchar_t*)(_9827_path)), nullptr);;
}



inline jule::Bool _22408a8c2_RemoveDirectory(jule::U16* _10327_path) {
	return RemoveDirectoryW(((wchar_t*)(_10327_path)));;
}



inline jule::U32 _22408adab_GetFullPathName(jule::U16* _10827_path, jule::U32 _10839_bufflen, jule::U16* _1092_buff, jule::U16** _10914_fname) {
	return GetFullPathNameW(((wchar_t*)(_10827_path)), _10839_bufflen, ((wchar_t*)(_1092_buff)), ((wchar_t**)(_10914_fname)));;
}



inline jule::Bool _22408b230_GetConsoleMode(jule::Uintptr _11419_handle, jule::I64* _11440_mode) {
	return GetConsoleMode(((HANDLE)(_11419_handle)), ((DWORD*)(_11440_mode)));;
}



inline jule::Bool _22408b83a_SetConsoleMode(jule::Uintptr _11919_handle, jule::I64 _11935_mode) {
	return SetConsoleMode(((HANDLE)(_11919_handle)), static_cast<DWORD>(_11935_mode));;
}



inline jule::Bool _22408bd8a_WriteConsole(jule::Uintptr _12424_handle, jule::U16* _12440_buffer, jule::U32 _12454_toWrite, jule::U32* _1257_written, void* _12521_reserved) {
	return WriteConsoleW(((HANDLE)(_12424_handle)), ((void*)(_12440_buffer)), static_cast<DWORD>(_12454_toWrite), ((DWORD*)((*(_1257_written)))), _12521_reserved);;
}



inline jule::Bool _22408c374_ReadConsole(jule::Uintptr _13223_handle, jule::U16* _13243_buffer, jule::U32 _13257_toRead, jule::U32* _1337_readed) {
	return ReadConsoleW(((HANDLE)(_13223_handle)), ((void*)(_13243_buffer)), static_cast<DWORD>(_13257_toRead), ((DWORD*)(_1337_readed)), nullptr);;
}



inline jule::Uintptr _22408c907_FindFirstFile(jule::U16* _14425_path, WIN32_FIND_DATAW* _14441_data) {
	return ((jule::Uintptr)(FindFirstFileW(((wchar_t*)(_14425_path)), _14441_data)));;
}



inline jule::I64 _22408cc7b_FindNextFile(jule::Uintptr _14924_h, WIN32_FIND_DATAW* _14939_data) {
	return FindNextFileW(((HANDLE)(_14924_h)), _14939_data);;
}



inline jule::I64 _22408d045_FindClose(jule::Uintptr _15414_h) {
	return FindClose(((HANDLE)(_15414_h)));;
}



inline jule::I64 _224090124_Read(jule::I64 _2016_handle, void* _2033_buff, jule::U64 _2048_n) {
	return read(_2016_handle, _2033_buff, _2048_n);;
}



inline jule::I64 _2240904ed_Close(jule::I64 _2510_handle) {
	return close(_2510_handle);;
}



inline jule::I64 _2240908a5_Write(jule::I64 _2817_handle, void* _2830_buff, jule::U64 _2845_n) {
	return write(_2817_handle, _2830_buff, _2845_n);;
}



inline void _224090ad6_Exit(jule::I64 _339_code) {
	exit(_339_code);
}



inline __jule_tuple_i32__jule_tuple_int _2241a26a9_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_18215_p.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _1862_p0 = _18215_p[0LL];;
	jule::U8 _1872_x = _2241a1422_first[static_cast<jule::I64>(_1862_p0)];;
	if ((_1872_x >= 240LLU)) {
		jule::I32 _1923_mask = (({ jule::I32 __jule_x = static_cast<jule::I32>(_1872_x); jule::I32 __jule_y = 31LL; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) >> 31LL);;
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>(_18215_p[0LL]) & (~(_1923_mask))) | (65533LL & _1923_mask));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _1952_sz = static_cast<jule::I64>((_1872_x & 7LLU));;
	_2241a19c7_acceptRange _1962_accept = _2241a1d6d_acceptRanges[static_cast<jule::I64>((_1872_x >> 4LLU))];;
	if ((_18215_p.len() < _1952_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2002_b1 = _18215_p[1LL];;
	if (((_2002_b1 < _1962_accept._field_lo) || (_1962_accept._field_hi < _2002_b1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1952_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>((_1862_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2002_b1 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2072_b2 = _18215_p[2LL];;
	if (((_2072_b2 < 128LLU) || (191LL < _2072_b2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1952_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = (((static_cast<jule::I32>((_1862_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2002_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2072_b2 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2142_b3 = _18215_p[3LL];;
	if (((_2142_b3 < 128LLU) || (191LL < _2142_b3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = ((((static_cast<jule::I32>((_1862_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2002_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2072_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2142_b3 & 63LLU)));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _2241a29ea_DecodeRuneStr(jule::Str _22918_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_22918_s.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _2332_s0 = _22918_s[0LL];;
	jule::U8 _2342_x = _2241a1422_first[static_cast<jule::I64>(_2332_s0)];;
	if ((_2342_x >= 240LLU)) {
		jule::I32 _2393_mask = (({ jule::I32 __jule_x = static_cast<jule::I32>(_2342_x); jule::I32 __jule_y = 31LL; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) >> 31LL);;
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>(_22918_s[0LL]) & (~(_2393_mask))) | (65533LL & _2393_mask));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _2422_sz = static_cast<jule::I64>((_2342_x & 7LLU));;
	_2241a19c7_acceptRange _2432_accept = _2241a1d6d_acceptRanges[static_cast<jule::I64>((_2342_x >> 4LLU))];;
	if ((_22918_s.len() < _2422_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2472_s1 = _22918_s[1LL];;
	if (((_2472_s1 < _2432_accept._field_lo) || (_2432_accept._field_hi < _2472_s1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2422_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>((_2332_s0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2472_s1 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2542_s2 = _22918_s[2LL];;
	if (((_2542_s2 < 128LLU) || (191LL < _2542_s2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2422_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = (((static_cast<jule::I32>((_2332_s0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2472_s1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2542_s2 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2612_s3 = _22918_s[3LL];;
	if (((_2612_s3 < 128LLU) || (191LL < _2612_s3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = ((((static_cast<jule::I32>((_2332_s0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2472_s1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2542_s2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2612_s3 & 63LLU)));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _2241a304a_DecodeLastRuneStr(jule::Str _31722_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_31722_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::I64 _3212_end = _31722_s.len();;
	jule::I64 _3226_start = (_3212_end - 1LL);;
	__jule_func_result.__jule_result_arg0=static_cast<jule::I32>(_31722_s[_3226_start]);
	if ((__jule_func_result.__jule_result_arg0 < 128LL)) {
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _3306_lim = (_3212_end - 4LL);;
	if ((_3306_lim < 0LL)) {
		_3306_lim=0LL;
	};
	(_3226_start)--;
	for (; (_3226_start >= _3306_lim); (_3226_start)--) {
		{
			if (_2241a4766_RuneStart(_31722_s[_3226_start])) {
				goto _iter_end_1c8be4c2a;
			};
		}
	_iter_next_1c8be4c2a:;
	}
	_iter_end_1c8be4c2a:;;
	if ((_3226_start < 0LL)) {
		_3226_start=0LL;
	};
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2241a29ea_DecodeRuneStr(_31722_s.slice(_3226_start, _3212_end));
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if (((_3226_start + __jule_func_result.__jule_result_arg1) != _3212_end)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline jule::I64 _2241a3314_RuneLen(jule::I32 _35212_r) {
	{
		
		if ((_35212_r < 0LL)) {
			_case_begin_1c8be6a1d:;
			{
				return -1LL;;
			}
		}
		else if ((_35212_r <= 127LL)) {
			_case_begin_1c8be6e19:;
			{
				return 1LL;;
			}
		}
		else if ((_35212_r <= 2047LL)) {
			_case_begin_1c8be6e80:;
			{
				return 2LL;;
			}
		}
		else if (((55296LL <= _35212_r) && (_35212_r <= 57343LL))) {
			_case_begin_1c8be7007:;
			{
				return -1LL;;
			}
		}
		else if ((_35212_r <= 65535LL)) {
			_case_begin_1c8be707e:;
			{
				return 3LL;;
			}
		}
		else if ((_35212_r <= 1114111LL)) {
			_case_begin_1c8be6a84:;
			{
				return 4LL;;
			}
		}
		else {
			_case_begin_1c8be69a7:;
			{
				return -1LL;;
			}
		}
		_match_end_1c8be68b9:;
	};
}



inline jule::I64 _2241a3798_EncodeRune(jule::Slice<jule::U8> _37419_p, jule::I32 _37434_r) {
	jule::U32 _3762_i = static_cast<jule::U32>(_37434_r);;
	{
		
		if ((_3762_i <= 127LLU)) {
			_case_begin_1c8beb6e3:;
			{
				_37419_p[0LL]=static_cast<jule::U8>(_37434_r);
				return 1LL;;
			}
		}
		else if ((_3762_i <= 2047LLU)) {
			_case_begin_1c8bebda8:;
			{
				_37419_p[0LL]=(192LLU | static_cast<jule::U8>((_37434_r >> 6LL)));
				_37419_p[1LL]=(128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU));
				return 2LL;;
			}
		}
		else if ((_3762_i > 1114111LLU) || ((55296LL <= _3762_i) && (_3762_i <= 57343LLU))) {
			_case_begin_1c8be9a43:;
			{
				_37434_r=65533LL;
				goto _case_begin_1c8bebc76;
			}
		}
		else if ((_3762_i <= 65535LLU)) {
			_case_begin_1c8bebc76:;
			{
				_37419_p[0LL]=(224LLU | static_cast<jule::U8>((_37434_r >> 12LL)));
				_37419_p[1LL]=(128LLU | (static_cast<jule::U8>((_37434_r >> 6LL)) & 63LLU));
				_37419_p[2LL]=(128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU));
				return 3LL;;
			}
		}
		else {
			_case_begin_1c8be967a:;
			{
				_37419_p[0LL]=(240LLU | static_cast<jule::U8>((_37434_r >> 18LL)));
				_37419_p[1LL]=(128LLU | (static_cast<jule::U8>((_37434_r >> 12LL)) & 63LLU));
				_37419_p[2LL]=(128LLU | (static_cast<jule::U8>((_37434_r >> 6LL)) & 63LLU));
				_37419_p[3LL]=(128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU));
				return 4LL;;
			}
		}
		_match_end_1c8be9603:;
	};
}



inline jule::Slice<jule::U8> _2241a3a95_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U8>(_40530_r); __jule_collection; }));;
	};
	return _2241a3e19_appendRuneNonASCII(_40519_p, _40530_r);;
}



inline jule::Slice<jule::U8> _2241a3e19_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4142_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4142_i <= 2047LLU)) {
			_case_begin_1c8c03eae:;
			{
				return jule::append(_41227_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (192LL | static_cast<jule::U8>((_41242_r >> 6LL))); (*it++) = (128LL | (static_cast<jule::U8>(_41242_r) & 63LLU)); __jule_collection; }));;
			}
		}
		else if ((_4142_i > 1114111LLU) || ((55296LL <= _4142_i) && (_4142_i <= 57343LLU))) {
			_case_begin_1c8c02b6c:;
			{
				_41242_r=128LL;
				goto _case_begin_1c8c02bd3;
			}
		}
		else if ((_4142_i <= 65535LLU)) {
			_case_begin_1c8c02bd3:;
			{
				return jule::append(_41227_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(3, 3); auto it = __jule_collection.begin(); (*it++) = (224LL | static_cast<jule::U8>((_41242_r >> 12LL))); (*it++) = (128LL | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU)); (*it++) = (128LL | (static_cast<jule::U8>(_41242_r) & 63LLU)); __jule_collection; }));;
			}
		}
		else {
			_case_begin_1c8c0240d:;
			{
				return jule::append(_41227_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(4, 4); auto it = __jule_collection.begin(); (*it++) = (240LL | static_cast<jule::U8>((_41242_r >> 18LL))); (*it++) = (128LL | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU)); (*it++) = (128LL | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU)); (*it++) = (128LL | (static_cast<jule::U8>(_41242_r) & 63LLU)); __jule_collection; }));;
			}
		}
		_match_end_1c8c02386:;
	};
}



inline jule::I64 _2241a449c_RuneCountStr(jule::Str _47317_s) {
	jule::I64 __jule_func_result = 0;
	jule::I64 _4746_i = 0LL;;
	for (; (_4746_i < _47317_s.len()); (__jule_func_result)++) {
		{
			jule::U8 _4767_c = _47317_s[_4746_i];;
			if ((_4767_c < 128LLU)) {
				(_4746_i)++;
				goto _iter_next_1c8c0c2c5;
			};
			jule::U8 _4823_x = _2241a1422_first[static_cast<jule::I64>(_4767_c)];;
			if ((_4823_x == 241LLU)) {
				(_4746_i)++;
				goto _iter_next_1c8c0c2c5;
			};
			jule::I64 _4877_size = static_cast<jule::I64>((_4823_x & 7LLU));;
			if (((_4746_i + _4877_size) > _47317_s.len())) {
				(_4746_i)++;
				goto _iter_next_1c8c0c2c5;
			};
			_2241a19c7_acceptRange _4923_accept = _2241a1d6d_acceptRanges[static_cast<jule::I64>((_4823_x >> 4LLU))];;
			_4767_c=_47317_s[(_4746_i + 1LL)];
			if (((_4767_c < _4923_accept._field_lo) || (_4923_accept._field_hi < _4767_c))) {
				_4877_size=1LL;
			} else if ((_4877_size == 2LL)) {
			} else {
				_4767_c=_47317_s[(_4746_i + 2LL)];
				if (((_4767_c < 128LLU) || (191LL < _4767_c))) {
					_4877_size=1LL;
				} else if ((_4877_size == 3LL)) {
				} else {
					_4767_c=_47317_s[(_4746_i + 3LL)];
					if (((_4767_c < 128LLU) || (191LL < _4767_c))) {
						_4877_size=1LL;
					};
				};
			};
			_4746_i+=_4877_size;
		}
	_iter_next_1c8c0c2c5:;
	}
	_iter_end_1c8c0c2c5:;;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _2241a4766_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);;
}



inline jule::I64 _224315795_LeadingZeros64(jule::U64 _6119_x) {
	return (64LL - _22431d12c_Len64(_6119_x));;
}



inline jule::I64 _2243166db_TrailingZeros(jule::U64 _8318_x) {
	;
	return _22431738a_TrailingZeros64(static_cast<jule::U64>(_8318_x));;
}



inline jule::I64 _2243170c1_TrailingZeros32(jule::U32 _10520_x) {
	if ((_10520_x == 0LLU)) {
		return 32LL;;
	};
	return static_cast<jule::I64>(_224315dd3__DE_BRUIJN32_TAB[static_cast<jule::I64>(((jule::U32)((_10520_x & (-(_10520_x))) * 125613361LLU) >> 27LLU))]);;
}



inline jule::I64 _22431738a_TrailingZeros64(jule::U64 _11420_x) {
	if ((_11420_x == 0LLU)) {
		return 64LL;;
	};
	return static_cast<jule::I64>(_224316477__DE_BRUIJN64_TAB[static_cast<jule::I64>(((jule::U64)((_11420_x & (-(_11420_x))) * 285870213051353865LLU) >> 58LLU))]);;
}



inline jule::I64 _22431cd63_Len32(jule::U32 _35214_x) {
	jule::I64 __jule_func_result = 0;
	if ((_35214_x >= 65536LLU)) {
		_35214_x=(_35214_x >> 16LLU);
		__jule_func_result=16LL;
	};
	if ((_35214_x >= 256LLU)) {
		_35214_x=(_35214_x >> 8LLU);
		__jule_func_result+=8LL;
	};
	__jule_func_result = (__jule_func_result + static_cast<jule::I64>(jule::Str::at(reinterpret_cast<const jule::U8*>("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"), 256, static_cast<jule::I64>(_35214_x))));
	return __jule_func_result;;
}



inline jule::I64 _22431d12c_Len64(jule::U64 _36614_x) {
	jule::I64 __jule_func_result = 0;
	if ((_36614_x >= 4294967296LLU)) {
		_36614_x=(_36614_x >> 32LLU);
		__jule_func_result=32LL;
	};
	if ((_36614_x >= 65536LLU)) {
		_36614_x=(_36614_x >> 16LLU);
		__jule_func_result+=16LL;
	};
	if ((_36614_x >= 256LLU)) {
		_36614_x=(_36614_x >> 8LLU);
		__jule_func_result+=8LL;
	};
	__jule_func_result = (__jule_func_result + static_cast<jule::I64>(jule::Str::at(reinterpret_cast<const jule::U8*>("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"), 256, static_cast<jule::I64>(_36614_x))));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _22431ddb9_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0=(jule::U64)((jule::U64)(_41510_x + _41518_y) + _41526_carry);
	__jule_func_result.__jule_result_arg1=(((_41510_x & _41518_y) | ((_41510_x | _41518_y) & (~(__jule_func_result.__jule_result_arg0)))) >> 63LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _2243206c3_Mul64(jule::U64 _49910_x, jule::U64 _49918_y) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::U64 _5012_x0 = (_49910_x & 4294967295LLU);;
	jule::U64 _5022_x1 = (_49910_x >> 32LLU);;
	jule::U64 _5032_y0 = (_49918_y & 4294967295LLU);;
	jule::U64 _5042_y1 = (_49918_y >> 32LLU);;
	jule::U64 _5052_w0 = (jule::U64)(_5012_x0 * _5032_y0);;
	jule::U64 _5062_t = (jule::U64)((jule::U64)(_5022_x1 * _5032_y0) + (_5052_w0 >> 32LLU));;
	jule::U64 _5076_w1 = (_5062_t & 4294967295LLU);;
	jule::U64 _5082_w2 = (_5062_t >> 32LLU);;
	_5076_w1+=(jule::U64)(_5012_x0 * _5042_y1);
	__jule_func_result.__jule_result_arg0=(jule::U64)((jule::U64)((jule::U64)(_5022_x1 * _5042_y1) + _5082_w2) + (_5076_w1 >> 32LLU));
	__jule_func_result.__jule_result_arg1=(jule::U64)(_49910_x * _49918_y);
	return __jule_func_result;;
}



inline jule::Bool __jule_coSpawn(void* _1319_func, void* _1334_args) {
	return _2241bbddd__coSpawn(_1319_func, _1334_args);;
}



inline jule::I64 _23c3719a3_randInt(jule::U64 _716_seed, jule::I64 _727_max) {
	;
	;
	;
	_716_seed=(_716_seed & 9223372036854775807LLU);
	_716_seed+=(jule::U64)(_716_seed * (_716_seed >> 8LLU));
	_716_seed=(jule::U64)((jule::U64)(_716_seed * 1103515245LLU) + 12345LLU);
	_716_seed=(_716_seed & 9223372036854775807LLU);
	_716_seed+=(jule::U64)(_716_seed * (_716_seed >> 8LLU));
	jule::I64 _162_p1 = static_cast<jule::I64>((_716_seed & 9223372036854775807LLU));;
	jule::U64 _172_p2 = static_cast<jule::U64>(_162_p1);;
	return ({ jule::I64 __jule_x = static_cast<jule::I64>((({ jule::U64 __jule_x = _172_p2; jule::U64 __jule_y = 1LLU; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) >> 1LLU)); jule::I64 __jule_y = _727_max; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x % __jule_y)); });;
}



inline jule::Bool _1c8d98395_arrayCmp(jule::Str* _1020_a1, jule::Str* _1032_a2, jule::I64 _1040_n) {
	if ((_1040_n == 0LL)) {
		return true;;
	};
	jule::Str* _142_end = (_1020_a1 + _1040_n);;
	while ((_1020_a1 < _142_end)) {
		{
			if (((*(_1020_a1)) != (*(_1032_a2)))) {
				return false;;
			};
			(_1020_a1)++;
			(_1032_a2)++;
		}
	_iter_next_1c8d9a144:;
	}
	_iter_end_1c8d9a144:;;
	return true;;
}

inline jule::Bool _1c8de6954_arrayCmp(jule::I32* _1020_a1, jule::I32* _1032_a2, jule::I64 _1040_n) {
	if ((_1040_n == 0LL)) {
		return true;;
	};
	jule::I32* _142_end = (_1020_a1 + _1040_n);;
	while ((_1020_a1 < _142_end)) {
		{
			if (((*(_1020_a1)) != (*(_1032_a2)))) {
				return false;;
			};
			(_1020_a1)++;
			(_1032_a2)++;
		}
	_iter_next_1c8de814d:;
	}
	_iter_end_1c8de814d:;;
	return true;;
}

inline jule::Bool _1c9e4bb51_arrayCmp(jule::U8* _1020_a1, jule::U8* _1032_a2, jule::I64 _1040_n) {
	if ((_1040_n == 0LL)) {
		return true;;
	};
	jule::U8* _142_end = (_1020_a1 + _1040_n);;
	while ((_1020_a1 < _142_end)) {
		{
			if (((*(_1020_a1)) != (*(_1032_a2)))) {
				return false;;
			};
			(_1020_a1)++;
			(_1032_a2)++;
		}
	_iter_next_1c9e4d306:;
	}
	_iter_end_1c9e4d306:;;
	return true;;
}

inline jule::Bool _1cc268c07_arrayCmp(jule::Bool* _1020_a1, jule::Bool* _1032_a2, jule::I64 _1040_n) {
	if ((_1040_n == 0LL)) {
		return true;;
	};
	jule::Bool* _142_end = (_1020_a1 + _1040_n);;
	while ((_1020_a1 < _142_end)) {
		{
			if (((*(_1020_a1)) != (*(_1032_a2)))) {
				return false;;
			};
			(_1020_a1)++;
			(_1032_a2)++;
		}
	_iter_next_1cc26a962:;
	}
	_iter_end_1cc26a962:;;
	return true;;
}



inline jule::Bool __jule_ptrEqual(void* _1313_a, void* _1325_b) {
	return (_1313_a == _1325_b);;
}



inline void __jule_panic(jule::U8* _1318_m, jule::I64 _1328_n) {
	__jule_writeStderr(_223c7a2b5_StrBytes(jule::Str::lit("panic: ", 7)));
	__jule_writeStderr(_1c8b46385_Slice(_1318_m, _1328_n, _1328_n));
	__jule_writeStderr(_223c7a2b5_StrBytes(jule::Str::lit("\n", 1)));
	_224090ad6_Exit(2LL);
}



inline void _2241a5569__handleRW(jule::Slice<jule::U8>* _1115_b) {
}



inline jule::I64 _2241a5877_writeConsole(jule::Uintptr _1524_handle, jule::Slice<jule::U8> _1545_buf) {
	jule::I64 __jule_func_result = 0;
	if ((_1545_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return __jule_func_result;;
	};
	jule::Slice<jule::U16> _192_utf16Buf = _223c78318_UTF16FromStr(_223c7a54b_BytesStr(_1545_buf));;
	jule::U32 _206_written = static_cast<jule::U32>(0LLU);;
	jule::Bool _212_ok = _22408bd8a_WriteConsole(_1524_handle, (&(_192_utf16Buf[0LL])), static_cast<jule::U32>(_192_utf16Buf.len()), &(_206_written), nullptr);;
	if ((!(_212_ok))) {
		__jule_func_result = -1LL;
		return __jule_func_result;;
	};
	__jule_func_result = _1545_buf.len();
	return __jule_func_result;;
}



inline jule::I64 _2241a5beb_readConsole(jule::Uintptr _3023_handle, jule::Slice<jule::U8> _3048_buf) {
	jule::I64 __jule_func_result = 0;
	if ((_3048_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return __jule_func_result;;
	};
	jule::Slice<jule::U16> _346_codepage = ({ auto __jule_collection = jule::Slice<jule::U16>::alloc(_3048_buf.len(), _3048_buf.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::U32 _356_readed = static_cast<jule::U32>(0LLU);;
	jule::Bool _362_ok = _22408c374_ReadConsole(_3023_handle, (&(_346_codepage[0LL])), static_cast<jule::U32>(_346_codepage.len()), &(_356_readed));;
	if ((!(_362_ok))) {
		__jule_func_result = -1LL;
		return __jule_func_result;;
	};
	jule::Slice<jule::I32> _412_runes = _223c77c0d_Decode(_346_codepage.slice(0LL, static_cast<jule::I64>(_356_readed)));;
	__jule_func_result=0LL;
	{
		auto expr = &(_412_runes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c8cd8329:;
		if (it != expr_end) {
			jule::I32 *_439_r = it;
			{
				jule::I64 _443_size = _2241a3314_RuneLen((*(_439_r)));;
				if (((__jule_func_result + _443_size) > _3048_buf.len())) {
					goto _iter_end_1c8cd8329;
				};
				_2241a3798_EncodeRune(_3048_buf.slice(__jule_func_result), (*(_439_r)));
				__jule_func_result+=_443_size;
			}
			_iter_next_1c8cd8329:;
			++it;
			goto _iter_begin_1c8cd8329;
		}
		_iter_end_1c8cd8329:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::I64 __jule_writeStdout(jule::Slice<jule::U8> _5820_buf) {
	_2241bad98_handleRW(&(_5820_buf));
	return _2241a5877_writeConsole(_22408864a_STDOUT, _5820_buf);;
}



inline jule::I64 __jule_writeStderr(jule::Slice<jule::U8> _6620_buf) {
	_2241bad98_handleRW(&(_6620_buf));
	return _2241a5877_writeConsole(_224088947_STDERR, _6620_buf);;
}



inline jule::I64 __jule_readStdin(jule::Slice<jule::U8> _7418_buf) {
	_2241bad98_handleRW(&(_7418_buf));
	return _2241a5beb_readConsole(_2240883a3_STDIN, _7418_buf);;
}



inline jule::U64 _1c8ce70a2_atomicLoad(jule::U64* _3525_p, jule::I64 _3532_mo) {
	jule::U64 _3610_tmp = 0;;
	__atomic_load(_3525_p, (&(_3610_tmp)), _3532_mo);
	return _3610_tmp;;
}



inline jule::U64 _1c8ce726c_atomicAdd(jule::U64* _4628_p, jule::U64 _4635_delta, jule::I64 _4645_mo) {
	jule::U64 __jule_func_result = 0;
	__jule_func_result = __atomic_fetch_add(_4628_p, _4635_delta, _4645_mo);
	return __jule_func_result;;
}



inline jule::Slice<jule::Str> _2241ac4e9_args(void) {
	wchar_t* _166_cmdl = GetCommandLineW();;
	wchar_t** _176_argvw = CommandLineToArgvW(_166_cmdl, ((signed*)((&(__jule_argc)))));;
	jule::Slice<jule::Str> _186_args = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(__jule_argc, __jule_argc); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; });;
	{
		auto expr = &(_186_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c8cdb470:;
		if (it != expr_end) {
			jule::I64 _196_i = it - expr->begin();
			{
				_186_args[_196_i]=_223c788e0_U16PtrToStr(((jule::U16*)(_176_argvw[_196_i])));
			}
			_iter_next_1c8cdb470:;
			++it;
			_196_i++;
			goto _iter_begin_1c8cdb470;
		}
		_iter_end_1c8cdb470:;
	};
	{
		LocalFree(_176_argvw);
	};
	return _186_args;;
}



inline jule::Str _2241ac9a0_executable(void) {
	;
	jule::Slice<jule::U16> _476_buf = ({ auto __jule_collection = jule::Slice<jule::U16>::alloc(260LL, 260LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _482_n = GetModuleFileNameW(nullptr, ((wchar_t*)((&(_476_buf[0LL])))), 260LL);;
	if ((_482_n > 0LL)) {
		_476_buf[_482_n]=0LLU;
		return _223c788e0_U16PtrToStr((&(_476_buf[0LL])));;
	};
	__jule_panic_s(jule::Str::lit("runtime: executable path read error", 35) + jule::Str("\nlocation: std/runtime/env_windows.jule:53:2"));;
}



inline jule::U64* __jule_RCNew(void) {
	;
	;
	jule::U64* _256_p = ((jule::U64*)(malloc(8LLU)));;
	if ((_256_p == nullptr)) {
		__jule_panic_s(jule::Str::lit("runtime: memory allocation failed for reference counting data", 61) + jule::Str("\nlocation: std/runtime/rc.jule:27:3"));;
	};
	{
		(*(_256_p))=1LLU;
	};
	return _256_p;;
}



inline jule::U64 __jule_RCLoadAtomic(jule::U64* _4625_p) {
	return _1c8ce70a2_atomicLoad(_4625_p, 5LL);;
}



inline void __jule_RCAddAtomic(jule::U64* _6328_p) {
	_1c8ce726c_atomicAdd(_6328_p, 1LLU, 5LL);
}



inline jule::Bool __jule_RCDropAtomic(jule::U64* _8429_p) {
	return (_1c8ce726c_atomicAdd(_8429_p, jule::MAX_U64, 5LL) > 1LLU);;
}



inline void __jule_RCFree(jule::U64* _9219_p) {
	free(_9219_p);
}



inline jule::Str __jule_ptrToStr(void* _1113_p) {
	if ((_1113_p == nullptr)) {
		return jule::Str::lit("<nil>", 5);;
	};
	;
	jule::Slice<jule::U8> _166_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, 12LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	(_166_buf).append(jule::Str::lit("0x", 2));;
	jule::Uintptr _186_z = ((jule::Uintptr)(_1113_p));;
	while ((_186_z > 0LLU)) {
		{
			{ jule::Slice<jule::U8> &__jule_push_dest = _166_buf; __jule_push_dest.push(jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdef"), 16, static_cast<jule::I64>((_186_z % 16LL)))); };
			_186_z=(_186_z >> 4LLU);
		}
	_iter_next_1c8ced7b2:;
	}
	_iter_end_1c8ced7b2:;;
	jule::I64 _236_i = 0LL;;
	for (; (_236_i < (_166_buf.len() >> 1LL)); (_236_i)++) {
		{
			({
				jule::U8 ___jule_assign_arg = _166_buf[((_166_buf.len() - _236_i) - 1LL)];
				jule::U8 _1___jule_assign_arg = _166_buf[(_236_i + 2LL)];
				_166_buf[(_236_i + 2LL)] = ___jule_assign_arg;
				_166_buf[((_166_buf.len() - _236_i) - 1LL)] = _1___jule_assign_arg;
			});
		}
	_iter_next_1c8cedeee:;
	}
	_iter_end_1c8cedeee:;;
	return _223c7a815_StrFromBytes(_166_buf);;
}



inline jule::Str __jule_boolToStr(jule::Bool _3214_b) {
	if (_3214_b) {
		return jule::Str::lit("true", 4);;
	};
	return jule::Str::lit("false", 5);;
}



inline jule::Str __jule_i64ToStr(jule::I64 _4113_x) {
	if ((_4113_x < 0LL)) {
		return (jule::Str::lit("-", 1) + __jule_u64ToStr(static_cast<jule::U64>((-(_4113_x)))));;
	};
	return __jule_u64ToStr(static_cast<jule::U64>(_4113_x));;
}



inline jule::Str __jule_u64ToStr(jule::U64 _5017_x) {
	jule::Slice<jule::U8> _516_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(20LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _522_n = _2241b7735_u64ToBuf(_516_buf, _5017_x);;
	(_516_buf).mut_slice(0LL, _522_n);;
	return _223c7a815_StrFromBytes(_516_buf);;
}



inline jule::I64 _2241b7735_u64ToBuf(jule::Slice<jule::U8> _5917_buf, jule::U64 _5934_x) {
	if ((_5934_x == 0LLU)) {
		_5917_buf[0LL]='0';
		return 1LL;;
	};
	jule::I64 _646_i = 0LL;;
	while ((_5934_x >= 10LLU)) {
		{
			jule::U64 _663_q = (_5934_x / 10LLU);;
			_5917_buf[_646_i]=static_cast<jule::U8>((jule::U64)((jule::U64)('0' + _5934_x) - (jule::U64)(_663_q * 10LLU)));
			(_646_i)++;
			_5934_x=_663_q;
		}
	_iter_next_1c8d03ed2:;
	}
	_iter_end_1c8d03ed2:;;
	jule::I64 _722_n = (_646_i + 1LL);;
	_5917_buf[_646_i]=static_cast<jule::U8>((jule::U64)('0' + _5934_x));
	_2241b88ce_rev(_5917_buf.slice(0LL, _722_n));
	return _722_n;;
}



inline jule::Str __jule_f64ToStr(jule::F64 _8017_f) {
	;
	jule::I64 _842_n = 26LL;;
	jule::Slice<jule::U8> _856_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_842_n, _842_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _866_j = 0LL;;
	if ((_8017_f < 0LL)) {
		_856_buf[0LL]='-';
		(_866_j)++;
		_8017_f=(-(_8017_f));
	};
	jule::U64 _932_intPart = static_cast<jule::U64>(_8017_f);;
	_866_j+=_2241b7735_u64ToBuf(_856_buf.slice(_866_j), _932_intPart);
	_856_buf[_866_j]='.';
	jule::F64 _976_fracPart = (_8017_f - static_cast<jule::F64>(_932_intPart));;
	jule::I64 _986_i = 0LL;;
	for (; (_986_i < 4LL); (_986_i)++) {
		{
			_976_fracPart*=10LL;
			jule::I64 _1013_digit = static_cast<jule::I64>(_976_fracPart);;
			(_866_j)++;
			_856_buf[_866_j]=static_cast<jule::U8>(('0' + _1013_digit));
			_976_fracPart-=static_cast<jule::F64>(_1013_digit);
		}
	_iter_next_1c8d096ad:;
	}
	_iter_end_1c8d096ad:;;
	for (; (_866_j >= 0LL); (_866_j)--) {
		{
			if ((_856_buf[_866_j] != '0')) {
				goto _iter_end_1c8d0a549;
			};
		}
	_iter_next_1c8d0a549:;
	}
	_iter_end_1c8d0a549:;;
	if ((_856_buf[_866_j] != '.')) {
		(_866_j)++;
	};
	(_856_buf).mut_slice(0LL, _866_j);;
	return _223c7a815_StrFromBytes(_856_buf);;
}



inline jule::Str _1cc9cb0c3_arrToStr(jule::Slice<jule::U8> _12316_x) {
	jule::Slice<jule::U8> _1246_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	{ jule::Slice<jule::U8> &__jule_push_dest = _1246_buf; __jule_push_dest.push('['); };
	{
		auto expr = &(_12316_x);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc9cc38d:;
		if (it != expr_end) {
			jule::I64 _1266_i = it - expr->begin();
			jule::U8 *_1269_z = it;
			{
				if ((_1266_i > 0LL)) {
					(_1246_buf).append(jule::Str::lit(", ", 2));;
				};
				(_1246_buf).append(_1c8d7d07d_toStr((*(_1269_z))));;
			}
			_iter_next_1cc9cc38d:;
			++it;
			_1266_i++;
			goto _iter_begin_1cc9cc38d;
		}
		_iter_end_1cc9cc38d:;
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _1246_buf; __jule_push_dest.push(']'); };
	return _223c7a815_StrFromBytes(_1246_buf);;
}



inline jule::Str _1cc9c0e64_structToStr(_224497295_StrBuilder _15619_x) {
	;
	;
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		{
			
{
				_case_begin_1cc9c3e9a:;
				{
					;
					{
						
{
							_case_begin_1cc9c5133:;
							{
								;
								;
							}
						}
						_match_end_1cc9c4d14:;
					};
				}
			}
			_match_end_1cc9c353d:;
		};
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	jule::Slice<jule::U8> _1776_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	{ jule::Slice<jule::U8> &__jule_push_dest = _1776_buf; __jule_push_dest.push('{'); };
	{
		;
		{
			
{
				_case_begin_1cc9c7014:;
				{
					(_1776_buf).append(_1cc9c77ea_toStr(_15619_x._field_buf));;
				}
			}
			_match_end_1cc9c6e6a:;
		};
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _1776_buf; __jule_push_dest.push('}'); };
	return _223c7a815_StrFromBytes(_1776_buf);;
}



inline jule::Str _1c8d672ba_toStr(jule::Any _19713_x) {
	;
	{
		
{
			_case_begin_1c8d684ec:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c8d6840e:;
	};
	{
		
{
			_case_begin_1c8d68a19:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
				return _19713_x.type->to_str(_19713_x.data.alloc);;
			}
		}
		_match_end_1c8d688a4:;
	};
}

inline jule::Str _1c8d69498_toStr(jule::Str _19713_x) {
	;
	;
	{
		
{
			_case_begin_1c8d6a71e:;
			{
				return _19713_x;;
			}
		}
		_match_end_1c8d6a6a8:;
	};
}

inline jule::Str _1c8d69be6_toStr(jule::I64 _19713_x) {
	;
	;
	{
		
{
			_case_begin_1c8d6d227:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_19713_x));;
			}
		}
		_match_end_1c8d6d139:;
	};
}

inline jule::Str _1c8d6e954_toStr(jule::I8 _19713_x) {
	;
	;
	{
		
{
			_case_begin_1c8d70ba8:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_19713_x));;
			}
		}
		_match_end_1c8d70aba:;
	};
}

inline jule::Str _1c8d6c688_toStr(jule::I16 _19713_x) {
	;
	;
	{
		
{
			_case_begin_1c8d73639:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_19713_x));;
			}
		}
		_match_end_1c8d7354b:;
	};
}

inline jule::Str _1c8d74d66_toStr(jule::I32 _19713_x) {
	;
	;
	{
		
{
			_case_begin_1c8d76153:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_19713_x));;
			}
		}
		_match_end_1c8d76065:;
	};
}

inline jule::Str _1c8d7784c_toStr(jule::I64 _19713_x) {
	;
	;
	{
		
{
			_case_begin_1c8d78b6c:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_19713_x));;
			}
		}
		_match_end_1c8d78a7e:;
	};
}

inline jule::Str _1c8d7a399_toStr(jule::U64 _19713_x) {
	;
	;
	{
		
{
			_case_begin_1c8d7b675:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_19713_x));;
			}
		}
		_match_end_1c8d7b510:;
	};
}

inline jule::Str _1c8d77dad_toStr(jule::Uintptr _19713_x) {
	;
	;
	{
		
{
			_case_begin_1c8d7dab7:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_19713_x));;
			}
		}
		_match_end_1c8d7d952:;
	};
}

inline jule::Str _1c8d7d07d_toStr(jule::U8 _19713_x) {
	;
	;
	{
		
{
			_case_begin_1c8d81009:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_19713_x));;
			}
		}
		_match_end_1c8d80d94:;
	};
}

inline jule::Str _1c8d804c0_toStr(jule::U16 _19713_x) {
	;
	;
	{
		
{
			_case_begin_1c8d8344b:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_19713_x));;
			}
		}
		_match_end_1c8d832d6:;
	};
}

inline jule::Str _1c8d82912_toStr(jule::U32 _19713_x) {
	;
	;
	{
		
{
			_case_begin_1c8d8588d:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_19713_x));;
			}
		}
		_match_end_1c8d85728:;
	};
}

inline jule::Str _1c8d84d54_toStr(jule::U64 _19713_x) {
	;
	;
	{
		
{
			_case_begin_1c8d87e23:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_19713_x));;
			}
		}
		_match_end_1c8d87cad:;
	};
}

inline jule::Str _1c8d88231_toStr(jule::F32 _19713_x) {
	;
	;
	{
		
{
			_case_begin_1c8d8a431:;
			{
				return __jule_f64ToStr(static_cast<jule::F64>(_19713_x));;
			}
		}
		_match_end_1c8d8a244:;
	};
}

inline jule::Str _1c8d872da_toStr(jule::F64 _19713_x) {
	;
	;
	{
		
{
			_case_begin_1c8d8c488:;
			{
				return __jule_f64ToStr(static_cast<jule::F64>(_19713_x));;
			}
		}
		_match_end_1c8d8c29b:;
	};
}

inline jule::Str _1c8d75240_toStr(jule::Bool _19713_x) {
	;
	;
	{
		
{
			_case_begin_1c8d8e358:;
			{
				return __jule_boolToStr(_19713_x);;
			}
		}
		_match_end_1c8d8e0d3:;
	};
}

inline jule::Str _1c8d8e4bd_toStr(jule::I64 _19713_x) {
	;
	;
	;
	{
		
{
			_case_begin_1c8d90ea3:;
			{
				return _1c8d69be6_toStr(_19713_x);;
			}
		}
		_match_end_1c8d90090:;
	};
}

inline jule::Str _1c9b5a486_toStr(jule::I64 _19713_x) {
	;
	;
	;
	{
		
{
			_case_begin_1c9b5beb0:;
			{
				return _1c8d69be6_toStr(_19713_x);;
			}
		}
		_match_end_1c9b5b8b6:;
	};
}

inline jule::Str _1c9b8779e_toStr(jule::I64 _19713_x) {
	;
	;
	;
	{
		
{
			_case_begin_1c9b892c8:;
			{
				return _1c8d69be6_toStr(_19713_x);;
			}
		}
		_match_end_1c9b88bce:;
	};
}

inline jule::Str _1c9ee0e26_toStr(jule::I64 _19713_x) {
	;
	;
	;
	{
		
{
			_case_begin_1c9ee291c:;
			{
				return _1c8d69be6_toStr(_19713_x);;
			}
		}
		_match_end_1c9ee2323:;
	};
}

inline jule::Str _1ca6dbba4_toStr(jule::Ptr<_1e5cc1bec_Impl> _19713_x) {
	;
	{
		
{
			_case_begin_1ca6dcd5e:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ca6dcc71:;
	};
	;
	{
		
{
			_case_begin_1ca6dd810:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ca6dd4d0:;
	};
}

inline jule::Str _1ca6dbe5c_toStr(jule::Ptr<_1e5cbbaa4_TypeAliasDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1ca6e1604:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ca6e1516:;
	};
	;
	{
		
{
			_case_begin_1ca6e20a5:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ca6e1c75:;
	};
}

inline jule::Str _1ca6de789_toStr(jule::Ptr<_1e5cc0d50_StructDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1ca6e51eb:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ca6e510d:;
	};
	;
	{
		
{
			_case_begin_1ca6e5b9c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ca6e586c:;
	};
}

inline jule::Str _1ca6e6b15_toStr(jule::Ptr<_1e5cb6c47_FnDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1ca6e8e36:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ca6e8d48:;
	};
	;
	{
		
{
			_case_begin_1ca6e98d7:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ca6e95a7:;
	};
}

inline jule::Str _1ca6ea70c_toStr(jule::Ptr<_1e5cc158c_TraitDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1ca6eca2d:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ca6ec940:;
	};
	;
	{
		
{
			_case_begin_1ca6ed4ce:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ca6ed19e:;
	};
}

inline jule::Str _1ca6ee304_toStr(jule::Ptr<_1e5cb7e02_VarDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1ca701625:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ca701537:;
	};
	;
	{
		
{
			_case_begin_1ca7020c6:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ca701c96:;
	};
}

inline jule::Str _1ca702deb_toStr(jule::Ptr<_1e5cbe205_EnumDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1ca70521c:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ca70512e:;
	};
	;
	{
		
{
			_case_begin_1ca705bbd:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ca70588d:;
	};
}

inline jule::Str _1ca70677e_toStr(jule::Ptr<_1e5cc0190_TypeEnumDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1ca708aa0:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ca7089b2:;
	};
	;
	{
		
{
			_case_begin_1ca709551:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ca709221:;
	};
}

inline jule::Str _1ca7286d5_toStr(jule::Ptr<_1e5cc2eea_Field> _19713_x) {
	;
	{
		
{
			_case_begin_1ca7298c3:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ca7297d5:;
	};
	;
	{
		
{
			_case_begin_1ca72a374:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ca72a044:;
	};
}

inline jule::Str _1ca73a7c4_toStr(jule::Ptr<_1e21a449b_Const> _19713_x) {
	;
	{
		
{
			_case_begin_1ca73b9b2:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ca73b8c4:;
	};
	;
	{
		
{
			_case_begin_1ca73c463:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ca73c133:;
	};
}

inline jule::Str _1ca74192e_toStr(jule::Ptr<_1e5da0bcc_Var> _19713_x) {
	;
	{
		
{
			_case_begin_1c8d8c169:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c8d8c06a:;
	};
	;
	{
		
{
			_case_begin_1ca744008:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ca743711:;
	};
}

inline jule::Str _1ca75789b_toStr(jule::Ptr<_1e5d05a55_EnumItem> _19713_x) {
	;
	{
		
{
			_case_begin_1ca758a78:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ca75898a:;
	};
	;
	{
		
{
			_case_begin_1ca759529:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ca7591e9:;
	};
}

inline jule::Str _1ca768e95_toStr(jule::Ptr<_1e5cdd884_Param> _19713_x) {
	;
	{
		
{
			_case_begin_1ca76a183:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ca76a095:;
	};
	;
	{
		
{
			_case_begin_1ca76ab34:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ca76a804:;
	};
}

inline jule::Str _1ca790a5a_toStr(jule::Ptr<_1e5cc5e21_Struct> _19713_x) {
	;
	{
		
{
			_case_begin_1ca791c48:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ca791b5a:;
	};
	;
	{
		
{
			_case_begin_1ca7926e9:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ca7923b9:;
	};
}

inline jule::Str _1ca793145_toStr(jule::Ptr<_1e5d03db6_Trait> _19713_x) {
	;
	{
		
{
			_case_begin_1ca79560e:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ca795521:;
	};
	;
	{
		
{
			_case_begin_1ca7960b0:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ca795c80:;
	};
}

inline jule::Str _1ca7968b8_toStr(jule::Ptr<_1e5d065c2_Enum> _19713_x) {
	;
	{
		
{
			_case_begin_1ca798d82:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ca798c94:;
	};
	;
	{
		
{
			_case_begin_1ca799833:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ca799503:;
	};
}

inline jule::Str _1ca79a13b_toStr(jule::Ptr<_1e5d07ccc_TypeEnum> _19713_x) {
	;
	{
		
{
			_case_begin_1ca79c605:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ca79c517:;
	};
	;
	{
		
{
			_case_begin_1ca79d0a6:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ca79cc76:;
	};
}

inline jule::Str _1ca7a2c8c_toStr(jule::Ptr<_1e5ce0358_Fn> _19713_x) {
	;
	{
		
{
			_case_begin_1ca7a3e03:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ca7a3d15:;
	};
	;
	{
		
{
			_case_begin_1ca7a48a4:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ca7a4574:;
	};
}

inline jule::Str _1ca86160e_toStr(jule::Str _19713_x) {
	;
	;
	;
	{
		
{
			_case_begin_1ca863138:;
			{
				return _1c8d69498_toStr(_19713_x);;
			}
		}
		_match_end_1ca862a3e:;
	};
}

inline jule::Str _1ca8a936b_toStr(jule::Ptr<_1e5e40a08_TypeAlias> _19713_x) {
	;
	{
		
{
			_case_begin_1ca8aa724:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ca8aa636:;
	};
	;
	{
		
{
			_case_begin_1ca8ab1c5:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ca8aad95:;
	};
}

inline jule::Str _1ca93ab6c_toStr(jule::Ptr<_1e5ca5692_IdentTypeDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1ca93bd27:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ca93bc39:;
	};
	;
	{
		
{
			_case_begin_1ca93c7c8:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ca93c498:;
	};
}

inline jule::Str _1ca952d3d_toStr(jule::Ptr<_1e5cd843e_TupleExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1ca953d2d:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ca953c40:;
	};
	;
	{
		
{
			_case_begin_1ca9547ce:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ca95449e:;
	};
}

inline jule::Str _1ca9556e2_toStr(jule::Ptr<_1e5ca9eb0_TupleExpr> _19713_x) {
	;
	{
		
{
			_case_begin_1ca957b78:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ca957a8a:;
	};
	;
	{
		
{
			_case_begin_1ca958629:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ca9582e9:;
	};
}

inline jule::Str _1e19ec575_toStr(jule::Ptr<_1e5cb3a35_AssignSt> _19713_x) {
	;
	{
		
{
			_case_begin_1e19ed675:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1e19ed587:;
	};
	;
	{
		
{
			_case_begin_1e19ee126:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1e19edce6:;
	};
}

inline jule::Str _1e1a006bb_toStr(jule::Ptr<_1e5ca93bb_Expr> _19713_x) {
	;
	{
		
{
			_case_begin_1e1a017dd:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1e1a00204:;
	};
	;
	{
		
{
			_case_begin_1e1a02756:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1e1a01e5e:;
	};
}

inline jule::Str _1e1a02899_toStr(jule::Ptr<_1e5d3ba69_Postfix> _19713_x) {
	;
	{
		
{
			_case_begin_1e1a04bcb:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1e1a04add:;
	};
	;
	{
		
{
			_case_begin_1e1a0567c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1e1a0535d:;
	};
}

inline jule::Str _1e1a05539_toStr(jule::Ptr<_1e5d3c020_Assign> _19713_x) {
	;
	{
		
{
			_case_begin_1e1a064c4:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1e1a063d6:;
	};
	;
	{
		
{
			_case_begin_1e1a08251:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1e1a07e10:;
	};
}

inline jule::Str _1e1a03070_toStr(jule::Ptr<_1e5d3c4c6_MultiAssign> _19713_x) {
	;
	{
		
{
			_case_begin_1e1a09098:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1e1a08eaa:;
	};
	;
	{
		
{
			_case_begin_1e1a0ad25:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1e1a0a9d4:;
	};
}

inline jule::Str _1e1a09780_toStr(jule::Ptr<_1e5e08c13_Data> _19713_x) {
	;
	{
		
{
			_case_begin_1e1a0bd15:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1e1a0bc27:;
	};
	;
	{
		
{
			_case_begin_1e1a0da92:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1e1a0d762:;
	};
}

inline jule::Str _1e1a0e3bc_toStr(jule::Ptr<_1e5cd4d31_FnCallExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1e1a11820:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1e1a11732:;
	};
	;
	{
		
{
			_case_begin_1e1a122c1:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1e1a11e91:;
	};
}

inline jule::Str _1e1a40e7b_toStr(jule::Ptr<_1e5d3b030_Label> _19713_x) {
	;
	{
		
{
			_case_begin_1e1a42136:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1e1a42048:;
	};
	;
	{
		
{
			_case_begin_1e1a42ad7:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1e1a427a7:;
	};
}

inline jule::Str _1e1a5e8a1_toStr(jule::Ptr<_1e5d384d3_Scope> _19713_x) {
	;
	{
		
{
			_case_begin_1e1a60a8e:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1e1a609a1:;
	};
	;
	{
		
{
			_case_begin_1e1a61540:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1e1a61210:;
	};
}

inline jule::Str _1e1a68d1c_toStr(jule::Ptr<_1e5cdb09b_BuiltinErrorCallExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1e1a69ec7:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1e1a69dd9:;
	};
	;
	{
		
{
			_case_begin_1e1a6a978:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1e1a6a648:;
	};
}

inline jule::Str _1e1a6d4a3_toStr(jule::Ptr<_1e5cdc0ad_BackendEmitExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1e1a6e52b:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1e1a6e43d:;
	};
	;
	{
		
{
			_case_begin_1e1a6eecc:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1e1a6eb9c:;
	};
}

inline jule::Str _1e1a6db8a_toStr(jule::Ptr<_1e5cd9d25_BuiltinAppendCallExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1e1a71099:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1e1a70eab:;
	};
	;
	{
		
{
			_case_begin_1e1a72d26:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1e1a729e6:;
	};
}

inline jule::Str _1e1a74124_toStr(jule::Ptr<_1e5cd8818_BuiltinOutCallExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1e1a73b6d:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1e1a73a80:;
	};
	;
	{
		
{
			_case_begin_1e1a758ea:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1e1a755a9:;
	};
}

inline jule::Str _1e1a757a7_toStr(jule::Ptr<_1e5cd8be2_BuiltinOutlnCallExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1e1a76742:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1e1a76654:;
	};
	;
	{
		
{
			_case_begin_1e1a784be:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1e1a7817d:;
	};
}

inline jule::Str _1e1a7837b_toStr(jule::Ptr<_1e5cd9495_BuiltinPanicCallExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1e1a79316:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1e1a79228:;
	};
	;
	{
		
{
			_case_begin_1e1a7b093:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1e1a7ac52:;
	};
}

inline jule::Str _1e1a7ae50_toStr(jule::Ptr<_1e5cdabc2_BuiltinCopyCallExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1e1a7bdda:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1e1a7bcec:;
	};
	;
	{
		
{
			_case_begin_1e1a7db67:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1e1a7d826:;
	};
}

inline jule::Str _1e1a7da24_toStr(jule::Ptr<_1e5cda7e8_BuiltinDeleteCallExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1e1a7e9ae:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1e1a7e8c1:;
	};
	;
	{
		
{
			_case_begin_1e1a8173b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1e1a813ea:;
	};
}

inline jule::Str _1e1a815e8_toStr(jule::Ptr<_1e5cdc3aa_FreeExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1e1a8231e:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1e1a82231:;
	};
	;
	{
		
{
			_case_begin_1e1a84530:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1e1a83c7c:;
	};
}

inline jule::Str _1e1a8bee9_toStr(jule::Ptr<_1e5d3911b_Conditional> _19713_x) {
	;
	{
		
{
			_case_begin_1e1a8d1d7:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1e1a8d0e9:;
	};
	;
	{
		
{
			_case_begin_1e1a8db88:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1e1a8d858:;
	};
}

inline jule::Str _1e1a978c8_toStr(jule::Ptr<_1e5d39418_InfIter> _19713_x) {
	;
	{
		
{
			_case_begin_1e1a98ad8:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1e1a989ea:;
	};
	;
	{
		
{
			_case_begin_1e1a99589:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1e1a99259:;
	};
}

inline jule::Str _1e1a9d758_toStr(jule::Ptr<_1e5d398be_WhileIter> _19713_x) {
	;
	{
		
{
			_case_begin_1e1a9e946:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1e1a9e858:;
	};
	;
	{
		
{
			_case_begin_1e1aa03e7:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1e1aa00b7:;
	};
}

inline jule::Str _1ca99747b_toStr(jule::Ptr<_1e5d3a31a_RangeIter> _19713_x) {
	;
	{
		
{
			_case_begin_1ca998669:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ca99857b:;
	};
	;
	{
		
{
			_case_begin_1ca99911a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ca998cda:;
	};
}

inline jule::Str _1ca9a718e_toStr(jule::Ptr<_1e5cb9376_WhileKind> _19713_x) {
	;
	{
		
{
			_case_begin_1ca9a8349:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ca9a825b:;
	};
	;
	{
		
{
			_case_begin_1ca9a8cea:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ca9a89ba:;
	};
}

inline jule::Str _1ca9a9d1d_toStr(jule::Ptr<_1e5cb9c7d_RangeKind> _19713_x) {
	;
	{
		
{
			_case_begin_1ca9ac1a5:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ca9ac0b7:;
	};
	;
	{
		
{
			_case_begin_1ca9acb56:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ca9ac826:;
	};
}

inline jule::Str _1ca9c6686_toStr(jule::Ptr<_1e5d3a6a0_ContSt> _19713_x) {
	;
	{
		
{
			_case_begin_1ca9c7874:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ca9c7786:;
	};
	;
	{
		
{
			_case_begin_1ca9c8325:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ca9c7ee5:;
	};
}

inline jule::Str _1ca9d053b_toStr(jule::Ptr<_1e5d3b690_GotoSt> _19713_x) {
	;
	{
		
{
			_case_begin_1ca9d1729:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ca9d163b:;
	};
	;
	{
		
{
			_case_begin_1ca9d21ca:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1ca9d1d9a:;
	};
}

inline jule::Str _1caa165d8_toStr(jule::Ptr<_1e5caabd6_IdentExpr> _19713_x) {
	;
	{
		
{
			_case_begin_1caa177a4:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1caa176b6:;
	};
	;
	{
		
{
			_case_begin_1caa18255:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1caa17e25:;
	};
}

inline jule::Str _1caa2b224_toStr(jule::Ptr<_1e5cd56b1_IndexingExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1caa2c3ce:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1caa2c2e1:;
	};
	;
	{
		
{
			_case_begin_1caa2cd80:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1caa2ca50:;
	};
}

inline jule::Str _1caa748dd_toStr(jule::Ptr<_1e5d3cc13_Match> _19713_x) {
	;
	{
		
{
			_case_begin_1caa75acb:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1caa759dd:;
	};
	;
	{
		
{
			_case_begin_1caa7657c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1caa7624c:;
	};
}

inline jule::Str _1caa88c21_toStr(jule::Ptr<_1e5d3de34_FallSt> _19713_x) {
	;
	{
		
{
			_case_begin_1caa8a5a2:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1caa8a4b4:;
	};
	;
	{
		
{
			_case_begin_1caa8b053:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1caa8ac23:;
	};
}

inline jule::Str _1caaa4c81_toStr(jule::Ptr<_1e5d3aa79_BreakSt> _19713_x) {
	;
	{
		
{
			_case_begin_1caaa5e6e:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1caaa5d81:;
	};
	;
	{
		
{
			_case_begin_1caaa6920:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1caaa65e0:;
	};
}

inline jule::Str _1caaab42a_toStr(jule::Ptr<_1e5d3e2ca_RetSt> _19713_x) {
	;
	{
		
{
			_case_begin_1caaac618:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1caaac52a:;
	};
	;
	{
		
{
			_case_begin_1caaad0b9:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1caaacc89:;
	};
}

inline jule::Str _1caab5da2_toStr(jule::Ptr<_1e5cb50a8_ScopeTree> _19713_x) {
	;
	{
		
{
			_case_begin_1caab704b:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1caab6e5d:;
	};
	;
	{
		
{
			_case_begin_1caab79ec:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1caab76bc:;
	};
}

inline jule::Str _1caabab43_toStr(jule::Ptr<_1e5cbb367_Conditional> _19713_x) {
	;
	{
		
{
			_case_begin_1caabbc98:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1caabbbaa:;
	};
	;
	{
		
{
			_case_begin_1caabc749:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1caabc419:;
	};
}

inline jule::Str _1caabad96_toStr(jule::Ptr<_1e5cb8a4b_Iter> _19713_x) {
	;
	{
		
{
			_case_begin_1caabee88:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1caabed9a:;
	};
	;
	{
		
{
			_case_begin_1caac0939:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1caac0609:;
	};
}

inline jule::Str _1caabd0da_toStr(jule::Ptr<_1e5cba531_ContSt> _19713_x) {
	;
	{
		
{
			_case_begin_1caac3178:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1caac308a:;
	};
	;
	{
		
{
			_case_begin_1caac3b29:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1caac37e9:;
	};
}

inline jule::Str _1caac12ca_toStr(jule::Ptr<_1e5cb266b_LabelSt> _19713_x) {
	;
	{
		
{
			_case_begin_1caac4d28:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1caac4c3a:;
	};
	;
	{
		
{
			_case_begin_1caac6aa5:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1caac6775:;
	};
}

inline jule::Str _1caac818e_toStr(jule::Ptr<_1e5cb2a45_GotoSt> _19713_x) {
	;
	{
		
{
			_case_begin_1caac92e4:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1caac9206:;
	};
	;
	{
		
{
			_case_begin_1caac9c95:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1caac9965:;
	};
}

inline jule::Str _1caaca878_toStr(jule::Ptr<_1e5cbc874_MatchCase> _19713_x) {
	;
	{
		
{
			_case_begin_1caaccc65:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1caaccb77:;
	};
	;
	{
		
{
			_case_begin_1caacd716:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1caacd3d6:;
	};
}

inline jule::Str _1caacab0e_toStr(jule::Ptr<_1e5cb2d42_FallSt> _19713_x) {
	;
	{
		
{
			_case_begin_1caad0e55:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1caad0d67:;
	};
	;
	{
		
{
			_case_begin_1caad1906:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1caad15c6:;
	};
}

inline jule::Str _1caace0a7_toStr(jule::Ptr<_1e5cba157_BreakSt> _19713_x) {
	;
	{
		
{
			_case_begin_1caad8ea2:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1caad8db4:;
	};
	;
	{
		
{
			_case_begin_1caad9953:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1caad9623:;
	};
}

inline jule::Str _1caadb03c_toStr(jule::Ptr<_1e5cb82cb_RetSt> _19713_x) {
	;
	{
		
{
			_case_begin_1caadc192:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1caadc0a4:;
	};
	;
	{
		
{
			_case_begin_1caadcb43:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1caadc813:;
	};
}

inline jule::Str _1caada2e4_toStr(jule::Ptr<_1e5ca9c90_UseExpr> _19713_x) {
	;
	{
		
{
			_case_begin_1caae0382:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1caae0294:;
	};
	;
	{
		
{
			_case_begin_1caae0d33:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1caae0a03:;
	};
}

inline jule::Str _1cab71ba5_toStr(jule::Ptr<_1e5cd78c2_StructSubIdentExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1cab73008:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1cab72e1a:;
	};
	;
	{
		
{
			_case_begin_1cab739a9:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1cab73679:;
	};
}

inline jule::Str _1cab72436_toStr(jule::Ptr<_1e5cd322a_UnaryExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1cab76b11:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1cab76a23:;
	};
	;
	{
		
{
			_case_begin_1cab775b2:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1cab77282:;
	};
}

inline jule::Str _1caba6d1c_toStr(jule::Ptr<_1e5ce3416_FnIns> _19713_x) {
	;
	{
		
{
			_case_begin_1caba800a:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1caba7e1c:;
	};
	;
	{
		
{
			_case_begin_1caba89ab:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1caba867b:;
	};
}

inline jule::Str _1cb0db394_toStr(jule::Ptr<_1e5ca7aa1_MapTypeDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1cb0dc560:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1cb0dc472:;
	};
	;
	{
		
{
			_case_begin_1cb0dd011:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1cb0dcbd1:;
	};
}

inline jule::Str _1cb0e1c29_toStr(jule::Ptr<_1e5ca67b4_TupleTypeDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1cb0e2de5:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1cb0e2d07:;
	};
	;
	{
		
{
			_case_begin_1cb0e3896:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1cb0e3566:;
	};
}

inline jule::Str _1cb10516b_toStr(jule::Ptr<_1e5ca7353_ArrTypeDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1cb106337:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1cb106249:;
	};
	;
	{
		
{
			_case_begin_1cb106cd8:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1cb1069a8:;
	};
}

inline jule::Str _1cb10b606_toStr(jule::Ptr<_1e5ca64b7_SlcTypeDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1cb10c7c2:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1cb10c6d4:;
	};
	;
	{
		
{
			_case_begin_1cb10d273:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1cb10ce43:;
	};
}

inline jule::Str _1cb112b5c_toStr(jule::Ptr<_1e5ca6ab1_PtrTypeDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1cb113d28:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1cb113c3a:;
	};
	;
	{
		
{
			_case_begin_1cb1147c9:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1cb114499:;
	};
}

inline jule::Str _1cb118c62_toStr(jule::Ptr<_1e5ca6132_SptrTypeDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1cb119e2d:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1cb119d40:;
	};
	;
	{
		
{
			_case_begin_1cb11a8ce:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1cb11a59e:;
	};
}

inline jule::Str _1cb169202_toStr(jule::Ptr<_1e5cab852_VariadicExpr> _19713_x) {
	;
	{
		
{
			_case_begin_1cb16a335:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1cb16a247:;
	};
	;
	{
		
{
			_case_begin_1cb16acd6:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1cb16a9a6:;
	};
}

inline jule::Str _1cb16ee83_toStr(jule::Ptr<_1e5cd520a_SliceExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1cb171b99:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1cb171aab:;
	};
	;
	{
		
{
			_case_begin_1cb17264a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1cb17231a:;
	};
}

inline jule::Str _1cb189d05_toStr(jule::Ptr<_1e5cadada_FieldExprPair> _19713_x) {
	;
	{
		
{
			_case_begin_1cb18aeb0:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1cb18adc2:;
	};
	;
	{
		
{
			_case_begin_1cb18b961:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1cb18b631:;
	};
}

inline jule::Str _1cb193825_toStr(jule::Ptr<_1e5cb01e6_KeyValPair> _19713_x) {
	;
	{
		
{
			_case_begin_1cb1949d0:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1cb1948e2:;
	};
	;
	{
		
{
			_case_begin_1cb195481:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1cb195151:;
	};
}

inline jule::Str _1cb1ea030_toStr(jule::Ptr<_1e5cad0e5_FnCallExpr> _19713_x) {
	;
	{
		
{
			_case_begin_1cb1eb1da:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1cb1eb0ec:;
	};
	;
	{
		
{
			_case_begin_1cb1ebb8b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1cb1eb85b:;
	};
}

inline jule::Str _1cae24056_toStr(jule::Ptr<_1e5cd3deb_AllocStructLitExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1cae25244:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1cae25156:;
	};
	;
	{
		
{
			_case_begin_1cae25be5:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1cae258b5:;
	};
}

inline jule::Str _1cae38950_toStr(jule::Ptr<_1e5cd447e_CastingExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1cae39b3d:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1cae39a50:;
	};
	;
	{
		
{
			_case_begin_1cae3a5de:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1cae3a2ae:;
	};
}

inline jule::Str _1cae510c7_toStr(jule::Ptr<_1e5cd7c68_StructStaticIdentExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1cae521b6:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1cae520c8:;
	};
	;
	{
		
{
			_case_begin_1cae52b67:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1cae52837:;
	};
}

inline jule::Str _1cae5376c_toStr(jule::Ptr<_1e5cac4ce_SubIdentExpr> _19713_x) {
	;
	{
		
{
			_case_begin_1cae5709a:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1cae56eac:;
	};
	;
	{
		
{
			_case_begin_1cae57a4b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1cae5771b:;
	};
}

inline jule::Str _1cae604c1_toStr(jule::Ptr<_1e5cd3aee_StructLitExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1cae6166a:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1cae6157c:;
	};
	;
	{
		
{
			_case_begin_1cae6211b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1cae61cdb:;
	};
}

inline jule::Str _1cae809db_toStr(jule::Ptr<_1e5cdbc39_RuneExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1cae81bc9:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1cae81adb:;
	};
	;
	{
		
{
			_case_begin_1cae8267a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1cae8234a:;
	};
}

inline jule::Str _1caea3778_toStr(jule::Ptr<_1e5cc8c7b_StructIns> _19713_x) {
	;
	{
		
{
			_case_begin_1caea4966:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1caea4878:;
	};
	;
	{
		
{
			_case_begin_1caea5417:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1caea50d7:;
	};
}

inline jule::Str _1caee393e_toStr(jule::Ptr<_1e5e417ea_TypeKind> _19713_x) {
	;
	{
		
{
			_case_begin_1caee4ac7:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1caee49d9:;
	};
	;
	{
		
{
			_case_begin_1caee5578:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1caee5248:;
	};
}

inline jule::Str _1cb2d1e6e_toStr(jule::Ptr<_1e5cd8142_ArrayExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1cb2d315c:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1cb2d306e:;
	};
	;
	{
		
{
			_case_begin_1cb2d3b0d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1cb2d37cd:;
	};
}

inline jule::Str _1cb31ae53_toStr(jule::Ptr<_1e5ca595b_SubIdentTypeDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1cb31c141:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1cb31c053:;
	};
	;
	{
		
{
			_case_begin_1cb31cae2:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1cb31c7b2:;
	};
}

inline jule::Str _1cb320562_toStr(jule::Ptr<_1e5cab478_UnaryExpr> _19713_x) {
	;
	{
		
{
			_case_begin_1cb3216ea:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1cb32160c:;
	};
	;
	{
		
{
			_case_begin_1cb32219b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1cb321d6b:;
	};
}

inline jule::Str _1cb3296e2_toStr(jule::Ptr<_1e5ca5087_TypeDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1cb329c86:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1cb329b98:;
	};
	;
	{
		
{
			_case_begin_1cb32a737:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1cb32a418:;
	};
}

inline jule::Str _1cb32e164_toStr(jule::Ptr<_1e5cac105_NsSelectionExpr> _19713_x) {
	;
	{
		
{
			_case_begin_1cb331ac3:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1cb3319d5:;
	};
	;
	{
		
{
			_case_begin_1cb332574:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1cb332244:;
	};
}

inline jule::Str _1cb335b4e_toStr(jule::Ptr<_1e5ca5d35_NamespaceTypeDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1cb336d3c:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1cb336c4e:;
	};
	;
	{
		
{
			_case_begin_1cb3377dd:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1cb3374ad:;
	};
}

inline jule::Str _1c80621a8_toStr(jule::Ptr<_1e5cd699d_SlicingExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1c8063341:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c8063253:;
	};
	;
	{
		
{
			_case_begin_1c8063ce2:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1c80639b2:;
	};
}

inline jule::Str _1cb434a94_toStr(jule::Ptr<_1e5cb0922_SliceExpr> _19713_x) {
	;
	{
		
{
			_case_begin_1cb435c4e:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1cb435b61:;
	};
	;
	{
		
{
			_case_begin_1cb436700:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1cb4363c0:;
	};
}

inline jule::Str _1cb4a2b12_toStr(jule::Ptr<_1e5cd7031_TraitSubIdentExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1cb4a3d00:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1cb4a3c12:;
	};
	;
	{
		
{
			_case_begin_1cb4a47a1:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1cb4a4471:;
	};
}

inline jule::Str _1cb54d4b5_toStr(jule::Ptr<_1e5cd641a_MapExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1cb550143:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1cb550055:;
	};
	;
	{
		
{
			_case_begin_1cb550ae4:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1cb5507b4:;
	};
}

inline jule::Str _1cb55da36_toStr(jule::Ptr<_1e5cd5b67_AnonFnExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1cb55ec24:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1cb55eb36:;
	};
	;
	{
		
{
			_case_begin_1cb5606c5:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1cb560395:;
	};
}

inline jule::Str _1cb565ae8_toStr(jule::Ptr<_1e5ca9685_RangeExpr> _19713_x) {
	;
	{
		
{
			_case_begin_1cb566ca3:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1cb566bb5:;
	};
	;
	{
		
{
			_case_begin_1cb567754:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1cb567424:;
	};
}

inline jule::Str _1cb565da1_toStr(jule::Ptr<_1e5caa356_LitExpr> _19713_x) {
	;
	{
		
{
			_case_begin_1cb56a69c:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1cb56a5ae:;
	};
	;
	{
		
{
			_case_begin_1cb56b14d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1cb56ad1d:;
	};
}

inline jule::Str _1cb56dc55_toStr(jule::Ptr<_1e5caa730_UnsafeExpr> _19713_x) {
	;
	{
		
{
			_case_begin_1cb570361:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1cb570273:;
	};
	;
	{
		
{
			_case_begin_1cb570d12:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1cb5709d2:;
	};
}

inline jule::Str _1cb5713c8_toStr(jule::Ptr<_1e5cb137e_IndexingExpr> _19713_x) {
	;
	{
		
{
			_case_begin_1cb573a29:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1cb57393b:;
	};
	;
	{
		
{
			_case_begin_1cb5744ca:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1cb57419a:;
	};
}

inline jule::Str _1cb56c050_toStr(jule::Ptr<_1e5cb19de_SlicingExpr> _19713_x) {
	;
	{
		
{
			_case_begin_1cb576be7:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1cb576b09:;
	};
	;
	{
		
{
			_case_begin_1cb577698:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1cb577368:;
	};
}

inline jule::Str _1cb577c5e_toStr(jule::Ptr<_1e5cabc2b_CastExpr> _19713_x) {
	;
	{
		
{
			_case_begin_1cb579db5:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1cb579cc7:;
	};
	;
	{
		
{
			_case_begin_1cb57a866:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1cb57a536:;
	};
}

inline jule::Str _1cb57ae2c_toStr(jule::Ptr<_1e5cae415_StructLit> _19713_x) {
	;
	{
		
{
			_case_begin_1cb57d7e2:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1cb57d704:;
	};
	;
	{
		
{
			_case_begin_1cb57e293:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1cb57de63:;
	};
}

inline jule::Str _1cb580074_toStr(jule::Ptr<_1e5cae8bb_BraceLit> _19713_x) {
	;
	{
		
{
			_case_begin_1cb58881e:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1cb588731:;
	};
	;
	{
		
{
			_case_begin_1cb5892c0:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1cb588e90:;
	};
}

inline jule::Str _1cb587c3b_toStr(jule::Ptr<_1e5cac985_BinaryExpr> _19713_x) {
	;
	{
		
{
			_case_begin_1cb58c26d:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1cb58c180:;
	};
	;
	{
		
{
			_case_begin_1cb58cc1e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1cb58c8de:;
	};
}

inline jule::Str _1cb6cee4e_toStr(jule::Ptr<_1e5cd2d51_BinaryExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1cb6d113c:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1cb6d104e:;
	};
	;
	{
		
{
			_case_begin_1cb6d1add:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1cb6d17ad:;
	};
}

inline jule::Str _1cb87c492_toStr(jule::Ptr<_1e5cd90bb_BuiltinNewCallExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1cb87d680:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1cb87d592:;
	};
	;
	{
		
{
			_case_begin_1cb87e131:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1cb87dd01:;
	};
}

inline jule::Str _1cb893123_toStr(jule::Ptr<_1e5cd994b_BuiltinMakeCallExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1cb894311:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1cb894223:;
	};
	;
	{
		
{
			_case_begin_1cb894cb2:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1cb894982:;
	};
}

inline jule::Str _1cb8c7e16_toStr(jule::Ptr<_1e5cda122_BuiltinLenCallExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1cb8c9104:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1cb8c9016:;
	};
	;
	{
		
{
			_case_begin_1cb8c9aa5:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1cb8c9775:;
	};
}

inline jule::Str _1cb8e2bde_toStr(jule::Ptr<_1e5cda41e_BuiltinCapCallExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1cb8e3dcc:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1cb8e3cde:;
	};
	;
	{
		
{
			_case_begin_1cb8e487d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1cb8e454d:;
	};
}

inline jule::Str _1cb93984b_toStr(jule::Ptr<_1e5cdb398_SizeofExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1cb93a96d:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1cb93a880:;
	};
	;
	{
		
{
			_case_begin_1cb93b41e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1cb93b0de:;
	};
}

inline jule::Str _1cb943855_toStr(jule::Ptr<_1e5cdba4c_AlignofExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1cb944977:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1cb944889:;
	};
	;
	{
		
{
			_case_begin_1cb945428:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1cb9450e8:;
	};
}

inline jule::Str _1cbdbd1ca_toStr(jule::Str _19713_x) {
	;
	;
	;
	{
		
{
			_case_begin_1cbdbebb0:;
			{
				return _1c8d69498_toStr(_19713_x);;
			}
		}
		_match_end_1cbdbe5b6:;
	};
}

inline jule::Str _1cc0856c2_toStr(jule::Ptr<_1e6036a22_ExceptionalForwardingExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1cc0868b0:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1cc0867c2:;
	};
	;
	{
		
{
			_case_begin_1cc087361:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1cc087031:;
	};
}

inline jule::Str _1cc0bc709_toStr(jule::Ptr<_1e603941a_StrRuneIter> _19713_x) {
	;
	{
		
{
			_case_begin_1cc0bd8e7:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1cc0bd809:;
	};
	;
	{
		
{
			_case_begin_1cc0be398:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1cc0be068:;
	};
}

inline jule::Str _1cc0c514b_toStr(jule::Ptr<_1e603810b_MutSlicingExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1cc0c6339:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1cc0c624b:;
	};
	;
	{
		
{
			_case_begin_1cc0c6cda:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1cc0c69aa:;
	};
}

inline jule::Str _1cc0ea21a_toStr(jule::Ptr<_1e6039041_AppendToSliceExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1cc0eb408:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1cc0eb31a:;
	};
	;
	{
		
{
			_case_begin_1cc0ebda9:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1cc0eba79:;
	};
}

inline jule::Str _1cc0eca47_toStr(jule::Ptr<_1e6038b67_PushToSliceExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1cc100011:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1cc0eee23:;
	};
	;
	{
		
{
			_case_begin_1cc1009b2:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1cc100682:;
	};
}

inline jule::Str _1cc10a626_toStr(jule::Ptr<_1e6036da7_SwapExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1cc10b814:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1cc10b726:;
	};
	;
	{
		
{
			_case_begin_1cc10c2b5:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1cc10be85:;
	};
}

inline jule::Str _1cc14819c_toStr(jule::Ptr<_1e6037281_EmptyCompareExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1cc14938a:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1cc14929c:;
	};
	;
	{
		
{
			_case_begin_1cc149d3b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1cc149a0b:;
	};
}

inline jule::Str _1cc14ae2a_toStr(jule::Ptr<_1e6037a78_StrCompExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1cc14d3e4:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1cc14d306:;
	};
	;
	{
		
{
			_case_begin_1cc14dd95:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1cc14da65:;
	};
}

inline jule::Str _1cc18401d_toStr(jule::Ptr<_1e6038408_UnsafeBinaryExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1cc18520b:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1cc18511d:;
	};
	;
	{
		
{
			_case_begin_1cc185bac:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1cc18587c:;
	};
}

inline jule::Str _1cc18c3bc_toStr(jule::Ptr<_1e6039717_UnsafeDerefExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1cc193417:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1cc193329:;
	};
	;
	{
		
{
			_case_begin_1cc193db8:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1cc193a88:;
	};
}

inline jule::Str _1cc198a8d_toStr(jule::Ptr<_1e6037605_RefExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1cc199c7b:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1cc199b8d:;
	};
	;
	{
		
{
			_case_begin_1cc19a72c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1cc19a3ec:;
	};
}

inline jule::Str _1cc19d136_toStr(jule::Ptr<_1e5cd3758_StructArgExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1cc19e324:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1cc19e236:;
	};
	;
	{
		
{
			_case_begin_1cc19ecc5:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1cc19e995:;
	};
}

inline jule::Str _1cc1a4901_toStr(jule::Ptr<_1e6039a14_UnsafeCastingExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1cc1a5ade:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1cc1a5a01:;
	};
	;
	{
		
{
			_case_begin_1cc1a6590:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1cc1a6260:;
	};
}

inline jule::Str _1cc1b3767_toStr(jule::Ptr<_1e603878d_UnsafeIndexingExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1cc1b4955:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1cc1b4867:;
	};
	;
	{
		
{
			_case_begin_1cc1b5406:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1cc1b50c6:;
	};
}

inline jule::Str _1cc73aad0_toStr(jule::Ptr<jule::Str> _19713_x) {
	;
	{
		
{
			_case_begin_1cc73bc24:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1cc73bb36:;
	};
	;
	{
		
{
			_case_begin_1cc73c6c5:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1cc73c395:;
	};
}

inline jule::Str _1cc9baea3_toStr(_224497295_StrBuilder _19713_x) {
	;
	;
	;
	{
		
{
			_case_begin_1cc9be3a2:;
			{
				return _1cc9c0e64_structToStr(_19713_x);;
			}
		}
		_match_end_1cc9bde2e:;
	};
}

inline jule::Str _1cc9c77ea_toStr(jule::Slice<jule::U8> _19713_x) {
	;
	{
		
{
			_case_begin_1cc9c8b92:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1cc9c88b7:;
	};
	;
	{
		
{
			_case_begin_1cc9c9500:;
			{
				return _1cc9cb0c3_arrToStr(_19713_x);;
			}
		}
		_match_end_1cc9c9324:;
	};
}

inline jule::Str _1cc9c2b25_toStr(jule::Str _19713_x) {
	;
	;
	;
	{
		
{
			_case_begin_1cc9be605:;
			{
				return _1c8d69498_toStr(_19713_x);;
			}
		}
		_match_end_1cc9c8378:;
	};
}

inline jule::Str _1cc9c9c3c_toStr(jule::Str _19713_x) {
	;
	;
	;
	{
		
{
			_case_begin_1cc9d0e41:;
			{
				return _1c8d69498_toStr(_19713_x);;
			}
		}
		_match_end_1cc9c69c5:;
	};
}



inline void _2241b88ce_rev(jule::Slice<jule::U8> _25012_b) {
	jule::I64 _2516_i = 0LL;;
	for (; (_2516_i < (_25012_b.len() >> 1LL)); (_2516_i)++) {
		{
			({
				jule::U8 ___jule_assign_arg = _25012_b[((_25012_b.len() - 1LL) - _2516_i)];
				jule::U8 _1___jule_assign_arg = _25012_b[_2516_i];
				_25012_b[_2516_i] = ___jule_assign_arg;
				_25012_b[((_25012_b.len() - 1LL) - _2516_i)] = _1___jule_assign_arg;
			});
		}
	_iter_next_1c8d0beb8:;
	}
	_iter_end_1c8d0beb8:;;
}



inline jule::I64 __jule_compareStr(jule::Str* _1016_a, jule::Str* _1025_b) {
	jule::I64 _116_l = (*(_1016_a)).len();;
	if (((*(_1025_b)).len() < _116_l)) {
		_116_l=(*(_1025_b)).len();
	};
	jule::I64 _156_i = 0LL;;
	for (; (_156_i < _116_l); (_156_i)++) {
		{
			jule::U8 _173_c1;
			jule::U8 _177_c2;
			({
				jule::U8 ___jule_assign_arg = (*(_1016_a))[_156_i];
				jule::U8 _1___jule_assign_arg = (*(_1025_b))[_156_i];
				_173_c1 = ___jule_assign_arg;
				_177_c2 = _1___jule_assign_arg;
			});
			if ((_173_c1 < _177_c2)) {
				return -1LL;;
			};
			if ((_173_c1 > _177_c2)) {
				return 1LL;;
			};
		}
	_iter_next_1c8d0d98c:;
	}
	_iter_end_1c8d0d98c:;;
	if (((*(_1016_a)).len() < (*(_1025_b)).len())) {
		return -1LL;;
	};
	if (((*(_1016_a)).len() > (*(_1025_b)).len())) {
		return 1LL;;
	};
	return 0LL;;
}



inline jule::Str __jule_bytesToStr(jule::Slice<jule::U8> _3615_bytes) {
	jule::Slice<jule::U8> _376_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_3615_bytes.len(), _3615_bytes.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::copy(_376_buf, _3615_bytes);
	return _223c7a815_StrFromBytes(_376_buf);;
}



inline jule::Str __jule_runesToStr(jule::Slice<jule::I32> _4415_runes) {
	jule::Slice<jule::U8> _456_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, ({ jule::I64 __jule_x = _4415_runes.len(); jule::I64 __jule_y = 2LLU; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	{
		auto expr = &(_4415_runes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c8d12793:;
		if (it != expr_end) {
			jule::I32 *_469_r = it;
			{
				_456_buf=_2241a3a95_AppendRune(_456_buf, (*(_469_r)));
			}
			_iter_next_1c8d12793:;
			++it;
			goto _iter_begin_1c8d12793;
		}
		_iter_end_1c8d12793:;
	};
	return _223c7a815_StrFromBytes(_456_buf);;
}



inline jule::Slice<jule::I32> __jule_strToRunes(jule::Str _5415_s) {
	jule::Slice<jule::I32> _556_buf = ({ auto __jule_collection = jule::Slice<jule::I32>::alloc(0LL, _2241a449c_RuneCountStr(_5415_s)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _566_n = 0LL;;
	while ((_566_n < _5415_s.len())) {
		{
			jule::I32 _583_r;
			jule::I64 _586_len;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2241a29ea_DecodeRuneStr(_5415_s.slice(_566_n));
				_583_r = __jule_assign_result.__jule_result_arg0;
				_586_len = __jule_assign_result.__jule_result_arg1;
			});
			_566_n+=_586_len;
			{ jule::Slice<jule::I32> &__jule_push_dest = _556_buf; __jule_push_dest.push(_583_r); };
		}
	_iter_next_1c8d13981:;
	}
	_iter_end_1c8d13981:;;
	return _556_buf;;
}



inline jule::Slice<jule::U8> __jule_strToBytes(jule::Str _6715_s) {
	jule::Slice<jule::U8> _686_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_6715_s.len(), _6715_s.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::copy(_686_buf, _6715_s);
	return _686_buf;;
}



inline jule::Str __jule_strFromByte(jule::U8 _7516_b) {
	jule::Slice<jule::U8> _766_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(1LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	_766_buf[0LL]=_7516_b;
	return _223c7a815_StrFromBytes(_766_buf);;
}



inline jule::Str __jule_strFromRune(jule::I32 _8316_r) {
	jule::Slice<jule::U8> _846_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, 4LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	_846_buf=_2241a3a95_AppendRune(_846_buf, _8316_r);
	return _223c7a815_StrFromBytes(_846_buf);;
}



inline void __jule_runeStep(jule::U8* _9420_s, jule::I64 _9430_n, jule::I32* _9442_r, jule::I64* _9456_outLen) {
	jule::Slice<jule::U8> _952_buf = _1c8b46385_Slice(_9420_s, _9430_n, _9430_n);;
	if ((_9442_r != nullptr)) {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2241a26a9_DecodeRune(_952_buf);
			(*(_9442_r)) = __jule_assign_result.__jule_result_arg0;
			(*(_9456_outLen)) = __jule_assign_result.__jule_result_arg1;
		});
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2241a26a9_DecodeRune(_952_buf);
			(*(_9456_outLen)) = __jule_assign_result.__jule_result_arg1;
		});
	};
}



inline void _2241bad98_handleRW(jule::Slice<jule::U8>* _814_b) {
	_2241a5569__handleRW(_814_b);
}



inline jule::Bool _2241bbddd__coSpawn(void* _1020_func, void* _1035_args) {
	void* _112_handle = CreateThread(nullptr, 0LL, (unsigned long(*)(void*))(_1020_func), _1035_args, 0LL, nullptr);;
	if ((_112_handle == nullptr)) {
		return false;;
	};
	_224088e75_CloseHandle(((jule::Uintptr)(_112_handle)));
	return true;;
}



inline jule::U64 _224227eb0_hash128to64(_224227b08_u128 _4316_sum) {
	;
	jule::U64 _456_a = (jule::U64)((_4316_sum._field_lo ^ _4316_sum._field_hi) * 11376068507788127593LLU);;
	_456_a^=(_456_a >> 47LLU);
	jule::U64 _476_b = (jule::U64)((_4316_sum._field_hi ^ _456_a) * 11376068507788127593LLU);;
	_476_b^=(_476_b >> 47LLU);
	_476_b*=11376068507788127593LLU;
	return _476_b;;
}



inline jule::U64 _2242282bd_fetch64(jule::Slice<jule::U8> _5312_bytes) {
	return static__2242243a7_DecodeU64(_5312_bytes);;
}



inline jule::U32 _224228587_fetch32(jule::Slice<jule::U8> _5412_bytes) {
	return static__22422397d_DecodeU32(_5412_bytes);;
}



inline jule::U64 _2242288c8_shiftMix(jule::U64 _5513_z) {
	return (_5513_z ^ (_5513_z >> 47LLU));;
}



inline jule::U64 _224228c19_hashLen16(jule::U64 _5614_u, jule::U64 _5622_v) {
	return _224227eb0_hash128to64(_224227b08_u128{._field_hi=_5614_u, ._field_lo=_5622_v});;
}



inline jule::U64 _22422908d_rotate64(jule::U64 _5813_val, jule::U32 _5823_shift) {
	if ((_5823_shift != 0LLU)) {
		return (({ jule::U64 __jule_x = _5813_val; jule::U32 __jule_y = _5823_shift; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) | ({ jule::U64 __jule_x = _5813_val; jule::U32 __jule_y = (jule::U32)(64LLU - _5823_shift); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));;
	};
	return _5813_val;;
}



inline jule::U64 _2242294bc_hashLen16_3(jule::U64 _6616_u, jule::U64 _6624_v, jule::U64 _6632_mul) {
	jule::U64 _676_a = (jule::U64)((_6616_u ^ _6624_v) * _6632_mul);;
	_676_a^=(_676_a >> 47LLU);
	jule::U64 _696_b = (jule::U64)((_6624_v ^ _676_a) * _6632_mul);;
	_696_b^=(_696_b >> 47LLU);
	_696_b*=_6632_mul;
	return _696_b;;
}



inline jule::U64 _224229951_hashLen0to16(jule::Slice<jule::U8> _7517_bytes, jule::I64 _7532_n) {
	if ((_7532_n >= 8LL)) {
		jule::U64 _773_mul = (jule::U64)(11160318154034397263LLU + (jule::U64)(static_cast<jule::U64>(_7532_n) << 1LLU));;
		jule::U64 _783_a = (jule::U64)(_2242282bd_fetch64(_7517_bytes) + 11160318154034397263LLU);;
		jule::U64 _793_b = _2242282bd_fetch64(_7517_bytes.slice((_7532_n - 8LL)));;
		jule::U64 _803_c = (jule::U64)((jule::U64)(_22422908d_rotate64(_793_b, 37LLU) * _773_mul) + _783_a);;
		jule::U64 _813_d = (jule::U64)((jule::U64)(_22422908d_rotate64(_783_a, 25LLU) + _793_b) * _773_mul);;
		return _2242294bc_hashLen16_3(_803_c, _813_d, _773_mul);;
	};
	if ((_7532_n >= 4LL)) {
		jule::U64 _863_mul = (jule::U64)(11160318154034397263LLU + (jule::U64)(static_cast<jule::U64>(_7532_n) << 1LLU));;
		jule::U64 _873_a = static_cast<jule::U64>(_224228587_fetch32(_7517_bytes));;
		return _2242294bc_hashLen16_3((jule::U64)(static_cast<jule::U64>(_7532_n) + (jule::U64)(_873_a << 3LLU)), static_cast<jule::U64>(_224228587_fetch32(_7517_bytes.slice((_7532_n - 4LL)))), _863_mul);;
	};
	if ((_7532_n > 0LL)) {
		jule::U8 _923_a = static_cast<jule::U8>(_7517_bytes[0LL]);;
		jule::U8 _933_b = static_cast<jule::U8>(_7517_bytes[(_7532_n >> 1LL)]);;
		jule::U8 _943_c = static_cast<jule::U8>(_7517_bytes[(_7532_n - 1LL)]);;
		jule::U32 _953_y = (jule::U32)(static_cast<jule::U32>(_923_a) + (jule::U32)(static_cast<jule::U32>(_933_b) << 8LLU));;
		jule::I64 _963_z = (_7532_n + (static_cast<jule::I64>(_943_c) << 2LL));;
		return (jule::U64)(_2242288c8_shiftMix(((jule::U64)(static_cast<jule::U64>(_953_y) * 11160318154034397263LLU) ^ (jule::U64)(static_cast<jule::U64>(_963_z) * 14097894508562428199LLU))) * 11160318154034397263LLU);;
	};
	return 11160318154034397263LLU;;
}



inline _224227b08_u128 _224229d08_hashMurmur(jule::Slice<jule::U8> _10319_bytes, jule::I64 _10334_n, _224227b08_u128 _10342_seed) {
	jule::U64 _1046_a = _10342_seed._field_lo;;
	jule::U64 _1056_b = _10342_seed._field_hi;;
	jule::U64 _1066_c = static_cast<jule::U64>(0LLU);;
	jule::U64 _1076_d = static_cast<jule::U64>(0LLU);;
	jule::I64 _1086_l = (_10334_n - 16LL);;
	if ((_1086_l <= 0LL)) {
		_1046_a=(jule::U64)(_2242288c8_shiftMix((jule::U64)(_1046_a * 13011662864482103923LLU)) * 13011662864482103923LLU);
		_1066_c=(jule::U64)((jule::U64)(_1056_b * 13011662864482103923LLU) + _224229951_hashLen0to16(_10319_bytes, _10334_n));
		if ((_10334_n >= 8LL)) {
			_1076_d=_2242288c8_shiftMix((jule::U64)(_1046_a + _2242282bd_fetch64(_10319_bytes)));
		} else {
			_1076_d=_2242288c8_shiftMix((jule::U64)(_1046_a + _1066_c));
		};
	} else {
		_1066_c=_224228c19_hashLen16((jule::U64)(_2242282bd_fetch64(_10319_bytes.slice((_10334_n - 8LL))) + 13011662864482103923LLU), _1046_a);
		_1076_d=_224228c19_hashLen16((jule::U64)(_1056_b + static_cast<jule::U64>(_10334_n)), (jule::U64)(_1066_c + _2242282bd_fetch64(_10319_bytes.slice((_10334_n - 16LL)))));
		_1046_a+=_1076_d;
		for (;;) {
			{
				_1046_a^=(jule::U64)(_2242288c8_shiftMix((jule::U64)(_2242282bd_fetch64(_10319_bytes) * 13011662864482103923LLU)) * 13011662864482103923LLU);
				_1046_a*=13011662864482103923LLU;
				_1056_b^=_1046_a;
				_1066_c^=(jule::U64)(_2242288c8_shiftMix((jule::U64)(_2242282bd_fetch64(_10319_bytes.slice(8LL)) * 13011662864482103923LLU)) * 13011662864482103923LLU);
				_1066_c*=13011662864482103923LLU;
				_1076_d^=_1066_c;
				(_10319_bytes).mut_slice(16LL);;
				_1086_l-=16LL;
				if ((_1086_l <= 0LL)) {
					goto _iter_end_1c8d2d171;
				};
			}
		_iter_next_1c8d2d171:;
		}
		_iter_end_1c8d2d171:;;
	};
	_1046_a=_224228c19_hashLen16(_1046_a, _1066_c);
	_1056_b=_224228c19_hashLen16(_1076_d, _1056_b);
	return _224227b08_u128{._field_hi=(_1046_a ^ _1056_b), ._field_lo=_224228c19_hashLen16(_1056_b, _1046_a)};;
}



inline _224227b08_u128 _22422a457_weakHashLen32WithSeeds(jule::U64 _14527_w, jule::U64 _14535_x, jule::U64 _14543_y, jule::U64 _14551_z, jule::U64 _14563_a, jule::U64 _14575_b) {
	_14563_a+=_14527_w;
	_14575_b=_22422908d_rotate64((jule::U64)((jule::U64)(_14575_b + _14563_a) + _14551_z), 21LLU);
	jule::U64 _1482_c = _14563_a;;
	_14563_a+=_14535_x;
	_14563_a+=_14543_y;
	_14575_b+=_22422908d_rotate64(_14563_a, 44LLU);
	return _224227b08_u128{._field_hi=(jule::U64)(_14563_a + _14551_z), ._field_lo=(jule::U64)(_14575_b + _1482_c)};;
}



inline _224227b08_u128 _22422a886_weakHashLen32WithSeeds_3(jule::Slice<jule::U8> _15529_bytes, jule::U64 _15544_a, jule::U64 _15552_b) {
	return _22422a457_weakHashLen32WithSeeds(_2242282bd_fetch64(_15529_bytes), _2242282bd_fetch64(_15529_bytes.slice(8LL)), _2242282bd_fetch64(_15529_bytes.slice(16LL)), _2242282bd_fetch64(_15529_bytes.slice(24LL)), _15544_a, _15552_b);;
}



inline _224227b08_u128 _22422acb5_hashWithSeed(jule::Slice<jule::U8> _16021_bytes, jule::I64 _16040_n, _224227b08_u128 _16048_seed) {
	if ((_16040_n < 128LL)) {
		return _224229d08_hashMurmur(_16021_bytes, _16040_n, _16048_seed);;
	};
	jule::I64 _1642_rn = _16040_n;;
	jule::Slice<jule::U8> _1652_t = _16021_bytes;;
	_224227b08_u128 _16910_v = _224227b08_u128{._field_hi=0, ._field_lo=0};;
	_224227b08_u128 _17010_w = _224227b08_u128{._field_hi=0, ._field_lo=0};;
	jule::U64 _1716_x = _16048_seed._field_lo;;
	jule::U64 _1726_y = _16048_seed._field_hi;;
	jule::U64 _1736_z = (jule::U64)(static_cast<jule::U64>(_16040_n) * 13011662864482103923LLU);;
	_16910_v._field_lo=(jule::U64)((jule::U64)(_22422908d_rotate64((_1726_y ^ 13011662864482103923LLU), 49LLU) * 13011662864482103923LLU) + _2242282bd_fetch64(_16021_bytes));
	_16910_v._field_hi=(jule::U64)((jule::U64)(_22422908d_rotate64(_16910_v._field_lo, 42LLU) * 13011662864482103923LLU) + _2242282bd_fetch64(_16021_bytes.slice(8LL)));
	_17010_w._field_lo=(jule::U64)((jule::U64)(_22422908d_rotate64((jule::U64)(_1726_y + _1736_z), 35LLU) * 13011662864482103923LLU) + _1716_x);
	_17010_w._field_hi=(jule::U64)(_22422908d_rotate64((jule::U64)(_1716_x + _2242282bd_fetch64(_16021_bytes.slice(88LL))), 53LLU) * 13011662864482103923LLU);
	for (;;) {
		{
			_1716_x=(jule::U64)(_22422908d_rotate64((jule::U64)((jule::U64)((jule::U64)(_1716_x + _1726_y) + _16910_v._field_lo) + _2242282bd_fetch64(_16021_bytes.slice(8LL))), 37LLU) * 13011662864482103923LLU);
			_1726_y=(jule::U64)(_22422908d_rotate64((jule::U64)((jule::U64)(_1726_y + _16910_v._field_hi) + _2242282bd_fetch64(_16021_bytes.slice(48LL))), 42LLU) * 13011662864482103923LLU);
			_1716_x^=_17010_w._field_hi;
			_1726_y+=(jule::U64)(_16910_v._field_lo + _2242282bd_fetch64(_16021_bytes.slice(40LL)));
			_1736_z=(jule::U64)(_22422908d_rotate64((jule::U64)(_1736_z + _17010_w._field_lo), 33LLU) * 13011662864482103923LLU);
			_16910_v=_22422a886_weakHashLen32WithSeeds_3(_16021_bytes, (jule::U64)(_16910_v._field_hi * 13011662864482103923LLU), (jule::U64)(_1716_x + _17010_w._field_lo));
			_17010_w=_22422a886_weakHashLen32WithSeeds_3(_16021_bytes.slice(32LL), (jule::U64)(_1736_z + _17010_w._field_hi), (jule::U64)(_1726_y + _2242282bd_fetch64(_16021_bytes.slice(16LL))));
			std::swap(_1736_z, _1716_x);
			(_16021_bytes).mut_slice(64LL);;
			_1716_x=(jule::U64)(_22422908d_rotate64((jule::U64)((jule::U64)((jule::U64)(_1716_x + _1726_y) + _16910_v._field_lo) + _2242282bd_fetch64(_16021_bytes.slice(8LL))), 37LLU) * 13011662864482103923LLU);
			_1726_y=(jule::U64)(_22422908d_rotate64((jule::U64)((jule::U64)(_1726_y + _16910_v._field_hi) + _2242282bd_fetch64(_16021_bytes.slice(48LL))), 42LLU) * 13011662864482103923LLU);
			_1716_x^=_17010_w._field_hi;
			_1726_y+=(jule::U64)(_16910_v._field_lo + _2242282bd_fetch64(_16021_bytes.slice(40LL)));
			_1736_z=(jule::U64)(_22422908d_rotate64((jule::U64)(_1736_z + _17010_w._field_lo), 33LLU) * 13011662864482103923LLU);
			_16910_v=_22422a886_weakHashLen32WithSeeds_3(_16021_bytes, (jule::U64)(_16910_v._field_hi * 13011662864482103923LLU), (jule::U64)(_1716_x + _17010_w._field_lo));
			_17010_w=_22422a886_weakHashLen32WithSeeds_3(_16021_bytes.slice(32LL), (jule::U64)(_1736_z + _17010_w._field_hi), (jule::U64)(_1726_y + _2242282bd_fetch64(_16021_bytes.slice(16LL))));
			std::swap(_1736_z, _1716_x);
			(_16021_bytes).mut_slice(64LL);;
			_16040_n-=128LL;
			if ((_16040_n < 128LL)) {
				goto _iter_end_1c8d3682d;
			};
		}
	_iter_next_1c8d3682d:;
	}
	_iter_end_1c8d3682d:;;
	_1716_x+=(jule::U64)(_22422908d_rotate64((jule::U64)(_16910_v._field_lo + _1736_z), 49LLU) * 14097894508562428199LLU);
	_1726_y=(jule::U64)((jule::U64)(_1726_y * 14097894508562428199LLU) + _22422908d_rotate64(_17010_w._field_hi, 37LLU));
	_1736_z=(jule::U64)((jule::U64)(_1736_z * 14097894508562428199LLU) + _22422908d_rotate64(_17010_w._field_lo, 27LLU));
	_17010_w._field_lo*=9LLU;
	_16910_v._field_lo*=14097894508562428199LLU;
	jule::I64 _21310_tailDone = 0LL;;
	while ((_21310_tailDone < _16040_n)) {
		{
			_21310_tailDone+=32LL;
			_1726_y=(jule::U64)((jule::U64)(_22422908d_rotate64((jule::U64)(_1716_x + _1726_y), 42LLU) * 14097894508562428199LLU) + _16910_v._field_hi);
			_17010_w._field_lo+=_2242282bd_fetch64(_1652_t.slice(((_1642_rn - _21310_tailDone) + 16LL)));
			_1716_x=(jule::U64)((jule::U64)(_1716_x * 14097894508562428199LLU) + _17010_w._field_lo);
			_1736_z+=(jule::U64)(_17010_w._field_hi + _2242282bd_fetch64(_1652_t.slice((_1642_rn - _21310_tailDone))));
			_17010_w._field_hi+=_16910_v._field_lo;
			_16910_v=_22422a886_weakHashLen32WithSeeds_3(_1652_t.slice((_1642_rn - _21310_tailDone)), (jule::U64)(_16910_v._field_lo + _1736_z), _16910_v._field_hi);
			_16910_v._field_lo*=14097894508562428199LLU;
		}
	_iter_next_1c8d47377:;
	}
	_iter_end_1c8d47377:;;
	_1716_x=_224228c19_hashLen16(_1716_x, _16910_v._field_lo);
	_1726_y=_224228c19_hashLen16((jule::U64)(_1726_y + _1736_z), _17010_w._field_lo);
	return _224227b08_u128{._field_hi=(jule::U64)(_224228c19_hashLen16((jule::U64)(_1716_x + _16910_v._field_hi), _17010_w._field_hi) + _1726_y), ._field_lo=_224228c19_hashLen16((jule::U64)(_1716_x + _17010_w._field_hi), (jule::U64)(_1726_y + _16910_v._field_hi))};;
}



inline jule::U64 _22422b07e_hash(jule::Slice<jule::U8> _23413_bytes) {
	_224227b08_u128 _2356_sum = _224227b08_u128{._field_hi=0, ._field_lo=0};;
	if ((_23413_bytes.len() > 16LL)) {
		_2356_sum=_22422acb5_hashWithSeed(_23413_bytes.slice(16LL), (_23413_bytes.len() - 16LL), _224227b08_u128{._field_hi=_2242282bd_fetch64(_23413_bytes), ._field_lo=(jule::U64)(_2242282bd_fetch64(_23413_bytes.slice(8LL)) + 14097894508562428199LLU)});
	} else {
		_2356_sum=_22422acb5_hashWithSeed(_23413_bytes, _23413_bytes.len(), _224227b08_u128{._field_hi=14097894508562428199LLU, ._field_lo=13011662864482103923LLU});
	};
	return _224227eb0_hash128to64(_2356_sum);;
}



inline jule::U64 _224324c05_metaMatchH2(jule::Array<jule::I8,8>* _5523_m, jule::I8 _5537_h) {
	return _22432561d_hasZeroByte((_2243258a4_castU64(_5523_m) ^ (jule::U64)(72340172838076673LLU * static_cast<jule::U64>(_5537_h))));;
}



inline jule::U64 _224325013_metaMatchEmpty(jule::Array<jule::I8,8>* _6026_m) {
	return _22432561d_hasZeroByte((_2243258a4_castU64(_6026_m) ^ 9259542123273814144LLU));;
}



inline jule::U32 _2243252cc_nextMatch(jule::U64* _6419_b) {
	jule::U32 _652_s = static_cast<jule::U32>(_22431738a_TrailingZeros64(static_cast<jule::U64>((*(_6419_b)))));;
	(*(_6419_b))&=(~(({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = _652_s; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })));
	return (_652_s >> 3LLU);;
}



inline jule::U64 _22432561d_hasZeroByte(jule::U64 _7016_x) {
	return static_cast<jule::U64>((((jule::U64)(_7016_x - 72340172838076673LLU) & (~(_7016_x))) & 9259542123273814144LLU));;
}



inline jule::U64 _2243258a4_castU64(jule::Array<jule::I8,8>* _7419_m) {
	return (*(((jule::U64*)(_7419_m))));;
}



inline jule::I64 _224325b6d_numGroups(jule::I64 _7914_n) {
	jule::I64 __jule_func_result = 0;
	__jule_func_result=({ jule::I64 __jule_x = ((_7914_n + 4LL) - 1LL); jule::I64 __jule_y = 2LLU; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
	if ((__jule_func_result == 0LL)) {
		__jule_func_result=1LL;
	};
	return __jule_func_result;;
}



inline jule::Array<jule::I8,8> _224325d7c_newEmptyMetadata(void) {
	jule::Array<jule::I8,8> __jule_func_result = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
	{
		auto expr = &(__jule_func_result);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c8d51e0e:;
		if (it != expr_end) {
			jule::I64 _886_i = it - expr->begin();
			{
				__jule_func_result[_886_i]=-128LL;
			}
			_iter_next_1c8d51e0e:;
			++it;
			_886_i++;
			goto _iter_begin_1c8d51e0e;
		}
		_iter_end_1c8d51e0e:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_i8 _224326256_splitHash(jule::U64 _9414_h) {
	__jule_tuple_u64__jule_tuple_i8 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(((_9414_h & 18446744073709551488LLU) >> 7LLU));
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I8>((_9414_h & 127LLU));
	return __jule_func_result;;
}



inline jule::U32 _224326553_probeStart(jule::U64 _9815_hi, jule::I64 _9823_groups) {
	return _2243268c7_fastModN(static_cast<jule::U32>(_9815_hi), static_cast<jule::U32>(_9823_groups));;
}



inline jule::U32 _2243268c7_fastModN(jule::U32 _10313_x, jule::U32 _10321_n) {
	return static_cast<jule::U32>(((jule::U64)(static_cast<jule::U64>(_10313_x) * static_cast<jule::U64>(_10321_n)) >> 32LLU));;
}



inline jule::I64 _2244cc85d_getLastOsErrorWindows(void) {
	jule::U32 _162_err = _224089937_GetLastError();;
	{
		auto &_match_expr{ _162_err };
		
		if (_match_expr == 5LL) {
			_case_begin_1c8d64dde:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1c8d64e55:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1c8d64ebb:;
			{
				return static_cast<jule::I64>(7LL);;
			}
		}
		else if (_match_expr == 123LL) {
			_case_begin_1c8d65043:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else {
			_case_begin_1c8d61a23:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		_match_end_1c8d61b00:;
	};
}



inline jule::Slice<jule::Str> _2244cd474_Args(void) {
	return _2241ac4e9_args();;
}



inline jule::Exceptional<jule::Str> _2244cd8d6_WorkingDir(void) {
	return _2244ce860_getwd();
}



inline jule::Exceptional<jule::Str> _2244ce860_getwd(void) {
	jule::Array<jule::U16,261> _1510_buf = ({ auto __jule_collection = jule::Array<jule::U16,261>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::U32 _162_n = _224089cab_GetCurrentDirectory(static_cast<jule::U32>(261LLU), (&(_1510_buf[0LL])));;
	if ((_162_n == 0LLU)) {
		return jule::Exceptional<jule::Str>{.error=jule::Any(_2244cc85d_getLastOsErrorWindows(), &__jule_any_type0)};
	};
	return jule::Exceptional<jule::Str>{.result=_223c788e0_U16PtrToStr((&(_1510_buf[0LL])))};;
}



inline jule::Bool _2256285ce_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_22568b1ad__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);;
	};
	return _225694bcd_isExcludingLatin(_225637412_Letter, _7613_r);;
}



inline jule::Bool _225694051_is16(jule::Slice<_2256922b3_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto expr = &(_1919_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c9a7d882:;
			if (it != expr_end) {
				jule::I64 _1937_i = it - expr->begin();
				{
					_2256922b3_Range16* _1944_range = (&(_1919_ranges[_1937_i]));;
					{
						if ((_19128_r < (*(_1944_range))._field_Lo)) {
							return false;;
						};
						if ((_19128_r <= (*(_1944_range))._field_Hi)) {
							return (((*(_1944_range))._field_Stride == 1LLU) || (({ jule::U16 __jule_x = (jule::U16)(_19128_r - (*(_1944_range))._field_Lo); jule::U16 __jule_y = (*(_1944_range))._field_Stride; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U16)(__jule_x % __jule_y)); }) == 0LLU));;
						};
					};
				}
				_iter_next_1c9a7d882:;
				++it;
				_1937_i++;
				goto _iter_begin_1c9a7d882;
			}
			_iter_end_1c9a7d882:;
		};
		return false;;
	};
	jule::I64 _2086_lo = 0LL;;
	jule::I64 _2096_hi = _1919_ranges.len();;
	while ((_2086_lo < _2096_hi)) {
		{
			jule::I64 _2113_m = (_2086_lo + ({ jule::I64 __jule_x = (_2096_hi - _2086_lo); jule::I64 __jule_y = 1LLU; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }));;
			_2256922b3_Range16* _2123_range = (&(_1919_ranges[_2113_m]));;
			{
				if ((((*(_2123_range))._field_Lo <= _19128_r) && (_19128_r <= (*(_2123_range))._field_Hi))) {
					return (((*(_2123_range))._field_Stride == 1LLU) || (({ jule::U16 __jule_x = (jule::U16)(_19128_r - (*(_2123_range))._field_Lo); jule::U16 __jule_y = (*(_2123_range))._field_Stride; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U16)(__jule_x % __jule_y)); }) == 0LLU));;
				};
				if ((_19128_r < (*(_2123_range))._field_Lo)) {
					_2096_hi=_2113_m;
				} else {
					_2086_lo=(_2113_m + 1LL);
				};
			};
		}
	_iter_next_1c9a7c6b6:;
	}
	_iter_end_1c9a7c6b6:;;
	return false;;
}



inline jule::Bool _2256943c5_is32(jule::Slice<_2256927e1_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto expr = &(_2289_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c9a84c62:;
			if (it != expr_end) {
				jule::I64 _2307_i = it - expr->begin();
				{
					_2256927e1_Range32* _2314_range = (&(_2289_ranges[_2307_i]));;
					{
						if ((_22828_r < (*(_2314_range))._field_Lo)) {
							return false;;
						};
						if ((_22828_r <= (*(_2314_range))._field_Hi)) {
							return (((*(_2314_range))._field_Stride == 1LLU) || (({ jule::U32 __jule_x = (jule::U32)(_22828_r - (*(_2314_range))._field_Lo); jule::U32 __jule_y = (*(_2314_range))._field_Stride; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U32)(__jule_x % __jule_y)); }) == 0LLU));;
						};
					};
				}
				_iter_next_1c9a84c62:;
				++it;
				_2307_i++;
				goto _iter_begin_1c9a84c62;
			}
			_iter_end_1c9a84c62:;
		};
		return false;;
	};
	jule::I64 _2456_lo = 0LL;;
	jule::I64 _2466_hi = _2289_ranges.len();;
	while ((_2456_lo < _2466_hi)) {
		{
			jule::I64 _2483_m = (_2456_lo + ({ jule::I64 __jule_x = (_2466_hi - _2456_lo); jule::I64 __jule_y = 1LLU; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }));;
			_2256927e1_Range32* _2493_range = (&(_2289_ranges[_2483_m]));;
			{
				if ((((*(_2493_range))._field_Lo <= _22828_r) && (_22828_r <= (*(_2493_range))._field_Hi))) {
					return (((*(_2493_range))._field_Stride == 1LLU) || (({ jule::U32 __jule_x = (jule::U32)(_22828_r - (*(_2493_range))._field_Lo); jule::U32 __jule_y = (*(_2493_range))._field_Stride; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U32)(__jule_x % __jule_y)); }) == 0LLU));;
				};
				if ((_22828_r < (*(_2493_range))._field_Lo)) {
					_2466_hi=_2483_m;
				} else {
					_2456_lo=(_2483_m + 1LL);
				};
			};
		}
	_iter_next_1c9a81984:;
	}
	_iter_end_1c9a81984:;;
	return false;;
}



inline jule::Bool _225694bcd_isExcludingLatin(jule::Ptr<_225692c64_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_2256922b3_Range16> *_2804_R16 = &((*(_27821_rangeTab))._field_R16);;
		jule::I64 _2823_off = (*_27821_rangeTab.alloc)._field_LatinOffset;;
		if ((((*(_2804_R16)).len() > _2823_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>((*(_2804_R16))[((*(_2804_R16)).len() - 1LL)]._field_Hi)))) {
			return _225694051_is16((*(_2804_R16)).slice(_2823_off), static_cast<jule::U16>(_27844_r));;
		};
	};
	jule::Slice<_2256927e1_Range32> *_2873_R32 = &((*_27821_rangeTab.alloc)._field_R32);;
	if ((((*(_2873_R32)).len() > 0LL) && (_27844_r >= static_cast<jule::I32>((*(_2873_R32))[0LL]._field_Lo)))) {
		return _2256943c5_is32((*(_2873_R32)), static_cast<jule::U32>(_27844_r));;
	};
	return false;;
}



inline jule::Bool _225694e20_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_22568b1ad__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);;
	};
	return _225694bcd_isExcludingLatin(_22563d6d2_Upper, _29512_r);;
}



inline jule::I32 _225695618_convertCase(jule::I64 _31316_case, jule::I32 _31327_r, jule::Ptr<_225691d0c_CaseRange> _31336_cr) {
	jule::I32 _3142_delta = (*(_31336_cr))._field_Delta[_31316_case];;
	if ((_3142_delta > 1114111LL)) {
		return (static_cast<jule::I32>((*_31336_cr.alloc)._field_Lo) + (((_31327_r - static_cast<jule::I32>((*_31336_cr.alloc)._field_Lo)) & -2LL) | static_cast<jule::I32>((_31316_case & 1LL))));;
	};
	return (_31327_r + _3142_delta);;
}



inline jule::Ptr<_225691d0c_CaseRange> _22569598c_lookupCaseRange(jule::I32 _33320_r, jule::Slice<_225691d0c_CaseRange> _33329_caseRange) {
	jule::I64 _3356_lo = 0LL;;
	jule::I64 _3366_hi = _33329_caseRange.len();;
	while ((_3356_lo < _3366_hi)) {
		{
			jule::I64 _3383_m = static_cast<jule::I64>((static_cast<jule::U64>((_3356_lo + _3366_hi)) >> 1LLU));;
			jule::Ptr<_225691d0c_CaseRange> _3397_cr = ((jule::Ptr<_225691d0c_CaseRange>)((&(_33329_caseRange[_3383_m]))));;
			if (((static_cast<jule::I32>((*(_3397_cr))._field_Lo) <= _33320_r) && (_33320_r <= static_cast<jule::I32>((*_3397_cr.alloc)._field_Hi)))) {
				return _3397_cr;;
			};
			if ((_33320_r < static_cast<jule::I32>((*_3397_cr.alloc)._field_Lo))) {
				_3366_hi=_3383_m;
			} else {
				_3356_lo=(_3383_m + 1LL);
			};
		}
	_iter_next_1c9a96515:;
	}
	_iter_end_1c9a96515:;;
	return nullptr;;
}



inline jule::I32 _225695c56_SimpleFold(jule::I32 _37015_r) {
	if (((_37015_r < 0LL) || (_37015_r > 1114111LL))) {
		return _37015_r;;
	};
	if ((static_cast<jule::I64>(_37015_r) < 128LL)) {
		return static_cast<jule::I32>(_22568ce90_asciiFold[static_cast<jule::I64>(_37015_r)]);;
	};
	jule::I64 _3806_lo = 0LL;;
	jule::I64 _3816_hi = _22568d27b_caseOrbit.len();;
	while ((_3806_lo < _3816_hi)) {
		{
			jule::I64 _3833_m = static_cast<jule::I64>((static_cast<jule::U64>((_3806_lo + _3816_hi)) >> 1LLU));;
			if ((static_cast<jule::I32>(_22568d27b_caseOrbit[_3833_m]._field_from) < _37015_r)) {
				_3806_lo=(_3833_m + 1LL);
			} else {
				_3816_hi=_3833_m;
			};
		}
	_iter_next_1c9a9a937:;
	}
	_iter_end_1c9a9a937:;;
	if (((_3806_lo < _22568d27b_caseOrbit.len()) && (static_cast<jule::I32>(_22568d27b_caseOrbit[_3806_lo]._field_from) == _37015_r))) {
		return static_cast<jule::I32>(_22568d27b_caseOrbit[_3806_lo]._field_to);;
	};
	jule::Ptr<_225691d0c_CaseRange> _3972_cr = _22569598c_lookupCaseRange(_37015_r, _22568aad6_CaseRanges);;
	if ((_3972_cr != nullptr)) {
		jule::I32 _3993_l = _225695618_convertCase(1LL, _37015_r, _3972_cr);;
		if ((_3993_l != _37015_r)) {
			return _3993_l;;
		};
		return _225695618_convertCase(0LL, _37015_r, _3972_cr);;
	};
	return _37015_r;;
}



inline jule::I64 _2256d6219_findLastByte(jule::U8* _4517_begin, jule::U8* _4535_end, jule::U8 _4547_b) {
	jule::U8* _466_it = _4535_end;;
	for (; (_466_it >= _4517_begin); (_466_it)--) {
		{
			{
				if (((*(_466_it)) == _4547_b)) {
					return ((jule::I64)((_466_it - _4517_begin)));;
				};
			};
		}
	_iter_next_1c9aaad87:;
	}
	_iter_end_1c9aaad87:;;
	return -1LL;;
}



inline jule::I64 _2256d6846_FindByteStr(jule::Str _6816_s, jule::U8 _6824_b) {
	{
		auto expr = &(_6816_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9aab23e:;
		if (it != expr_end) {
			jule::I64 _706_i = it - expr->begin();
			jule::U8 *_709_se = it;
			{
				if (((*(_709_se)) == _6824_b)) {
					return _706_i;;
				};
			}
			_iter_next_1c9aab23e:;
			++it;
			_706_i++;
			goto _iter_begin_1c9aab23e;
		}
		_iter_end_1c9aab23e:;
	};
	return -1LL;;
}



inline jule::I64 _2256d6bba_FindLastByteStr(jule::Str _7920_s, jule::U8 _7928_b) {
	if ((_7920_s.len() == 0LL)) {
		return -1LL;;
	};
	return _2256d6219_findLastByte((&(_7920_s[0LL])), (&(_7920_s[(_7920_s.len() - 1LL)])), _7928_b);;
}



inline jule::Str _2256d6eb7_Repeat(jule::Str _1111_s, jule::I64 _1123_n) {
	if ((_1123_n <= 0LL)) {
		return jule::Str();;
	};
	if ((_1111_s.len() > ({ jule::I64 __jule_x = jule::MAX_I64; jule::I64 __jule_y = _1123_n; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x / __jule_y)); }))) {
		__jule_panic_s(jule::Str::lit("std::strings: repeat: integer buffer size overflow", 50) + jule::Str("\nlocation: std/strings/strings.jule:16:3"));;
	};
	_224497295_StrBuilder _186_ss = static__2244a0b83_New((_1111_s.len() * _1123_n));;
	for (; (_1123_n > 0LL); (_1123_n)--) {
		{
			_2244a1090_WriteStr(&_186_ss, _1111_s);
		}
	_iter_next_1c9abe9e4:;
	}
	_iter_end_1c9abe9e4:;;
	return _2244a1887_Str(&_186_ss);;
}



inline jule::Bool _2256d7380_HasPrefix(jule::Str _2614_s, jule::Str _2622_sub) {
	return ((_2614_s.len() >= _2622_sub.len()) && (_2614_s.slice(0LL, _2622_sub.len()) == _2622_sub));;
}



inline jule::Bool _2256d7704_HasSuffix(jule::Str _3114_s, jule::Str _3122_sub) {
	return ((_3114_s.len() >= _3122_sub.len()) && (_3114_s.slice((_3114_s.len() - _3122_sub.len())) == _3122_sub));;
}



inline jule::I64 _2256d7baa_FindAt(jule::Str _3911_s, jule::Str _3919_sub, jule::I64 _3933_i) {
	if ((((_3933_i < 0LL) || (_3911_s.len() < _3919_sub.len())) || (_3919_sub.len() == 0LL))) {
		return -1LL;;
	};
	for (; (_3933_i < _3911_s.len()); (_3933_i)++) {
		{
			if (_2256d7380_HasPrefix(_3911_s.slice(_3933_i), _3919_sub)) {
				return _3933_i;;
			};
		}
	_iter_next_1c9ac36a7:;
	}
	_iter_end_1c9ac36a7:;;
	return -1LL;;
}



inline jule::I64 _2256d7eeb_Find(jule::Str _549_s, jule::Str _5417_sub) {
	return _2256d7baa_FindAt(_549_s, _5417_sub, 0LL);;
}



inline jule::I64 _2256d842a_FindLastAt(jule::Str _6215_s, jule::Str _6223_sub, jule::I64 _6233_i) {
	jule::I64 _636_j = ((_6233_i - _6223_sub.len()) + 1LL);;
	if (((((_6223_sub.len() == 0LL) || (_6233_i < 0LL)) || (_6233_i >= _6215_s.len())) || (_636_j < 0LL))) {
		return -1LL;;
	};
	_julec_label_1c9ac590c:;
	for (; (_636_j >= 0LL); (_636_j)--) {
		{
			jule::I64 _697_k = _636_j;;
			jule::I64 _707_z = 0LL;;
			for (; (_707_z < _6223_sub.len()); ({
				jule::I64 ___jule_assign_arg = (_697_k + 1LL);
				jule::I64 _1___jule_assign_arg = (_707_z + 1LL);
				_697_k = ___jule_assign_arg;
				_707_z = _1___jule_assign_arg;
			})) {
				{
					if ((_6215_s[_697_k] != _6223_sub[_707_z])) {
						goto _iter_next_1c9ac5225;
					};
				}
			_iter_next_1c9ac717d:;
			}
			_iter_end_1c9ac717d:;;
			return _636_j;;
		}
	_iter_next_1c9ac5225:;
	}
	_iter_end_1c9ac5225:;;
	return -1LL;;
}



inline jule::I64 _2256d879e_FindLast(jule::Str _8413_s, jule::Str _8421_sub) {
	return _2256d842a_FindLastAt(_8413_s, _8421_sub, (_8413_s.len() - 1LL));;
}



inline jule::I64 _2256da086_FindLastByte(jule::Str _14817_s, jule::U8 _14825_b) {
	return _2256d6bba_FindLastByteStr(_14817_s, _14825_b);;
}



inline jule::I64 _2256da40a_FindRune(jule::Str _15513_s, jule::I32 _15521_r) {
	jule::I64 _1566_i = 0LL;;
	while ((_1566_i < _15513_s.len())) {
		{
			jule::I32 _1583_br;
			jule::I64 _1587_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2241a29ea_DecodeRuneStr(_15513_s.slice(_1566_i));
				_1583_br = __jule_assign_result.__jule_result_arg0;
				_1587_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_15521_r == _1583_br)) {
				return _1566_i;;
			};
			_1566_i+=_1587_n;
		}
	_iter_next_1c9ace2d9:;
	}
	_iter_end_1c9ace2d9:;;
	return -1LL;;
}



inline jule::I64 _2256dad34_FindAny(jule::Str _18512_s, jule::Str _18520_runes) {
	jule::I64 _1866_i = 0LL;;
	while ((_1866_i < _18512_s.len())) {
		{
			jule::I32 _1883_r;
			jule::I64 _1886_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2241a29ea_DecodeRuneStr(_18512_s.slice(_1866_i));
				_1883_r = __jule_assign_result.__jule_result_arg0;
				_1886_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_2256da40a_FindRune(_18520_runes, _1883_r) != -1LL)) {
				return _1866_i;;
			};
			_1866_i+=_1886_n;
		}
	_iter_next_1c9ad25ea:;
	}
	_iter_end_1c9ad25ea:;;
	return -1LL;;
}



inline jule::Slice<jule::Str> _2256db4c7_Split(jule::Str _21510_s, jule::Str _21518_sub, jule::I64 _21532_n) {
	jule::I64 _2166_cap = _21532_n;;
	if ((_21532_n < 0LL)) {
		_2166_cap=16LLU;
	};
	jule::Slice<jule::Str> _2206_parts = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(0LL, _2166_cap); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; });;
	if ((_21532_n == 0LL)) {
		return _2206_parts;;
	};
	if ((_21532_n < 0LL)) {
		_21532_n=_21510_s.len();
	};
	jule::I64 _2276_i = 0LL;;
	for (; (_21532_n > 0LL); (_21532_n)--) {
		{
			jule::I64 _2293_j = _2256d7baa_FindAt(_21510_s, _21518_sub, _2276_i);;
			if ((_2293_j == -1LL)) {
				goto _iter_end_1c9ad780e;
			};
			{ jule::Slice<jule::Str> &__jule_push_dest = _2206_parts; __jule_push_dest.push(_21510_s.slice(_2276_i, _2293_j)); };
			_2276_i=(_2293_j + _21518_sub.len());
		}
	_iter_next_1c9ad780e:;
	}
	_iter_end_1c9ad780e:;;
	if (((_21532_n > 0LL) && (_2276_i < _21510_s.len()))) {
		{ jule::Slice<jule::Str> &__jule_push_dest = _2206_parts; __jule_push_dest.push(_21510_s.slice(_2276_i)); };
	};
	return _2206_parts;;
}



inline jule::Bool _2256db84b_Contains(jule::Str _24313_s, jule::Str _24321_sub) {
	return (_2256d7baa_FindAt(_24313_s, _24321_sub, 0LL) != -1LL);;
}



inline jule::Bool _2256dc3b8_ContainsAny(jule::Str _25816_s, jule::Str _25824_runes) {
	return (_2256dad34_FindAny(_25816_s, _25824_runes) != -1LL);;
}



inline jule::I64 _2256dc73c_Count(jule::Str _26410_s, jule::Str _26418_sub) {
	if ((_26418_sub.len() == 0LL)) {
		return 0LL;;
	};
	jule::I64 _2686_n = 0LL;;
	jule::I64 _2696_i = 0LL;;
	for (;;) {
		{
			jule::I64 _2713_j = _2256d7baa_FindAt(_26410_s, _26418_sub, _2696_i);;
			if ((_2713_j == -1LL)) {
				goto _iter_end_1c9adc380;
			};
			(_2686_n)++;
			_2696_i=(_2713_j + _26418_sub.len());
		}
	_iter_next_1c9adc380:;
	}
	_iter_end_1c9adc380:;;
	return _2686_n;;
}



inline jule::Str _2256dcc26_Replace(jule::Str _28412_s, jule::Str _28420_sub, jule::Str _28430_new, jule::I64 _28444_n) {
	if (((_28444_n == 0LL) || (_28420_sub == _28430_new))) {
		return _28412_s;;
	};
	jule::I64 _2892_m = _2256dc73c_Count(_28412_s, _28420_sub);;
	if ((_2892_m == 0LL)) {
		return _28412_s;;
	};
	if (((_28444_n < 0LL) || (_2892_m < _28444_n))) {
		_28444_n=_2892_m;
	};
	_224497295_StrBuilder _2976_ss = static__2244a0b83_New(((_28412_s.len() + (_28444_n * (_28430_new.len() - _28420_sub.len()))) + 1LL));;
	jule::I64 _2986_i = 0LL;;
	for (; (_28444_n > 0LL); (_28444_n)--) {
		{
			jule::I64 _3003_j = _2256d7baa_FindAt(_28412_s, _28420_sub, _2986_i);;
			if ((_3003_j == -1LL)) {
				goto _iter_end_1c9ae0e66;
			};
			_2244a1090_WriteStr(&_2976_ss, _28412_s.slice(_2986_i, _3003_j));
			_2244a1090_WriteStr(&_2976_ss, _28430_new);
			_2986_i=(_3003_j + _28420_sub.len());
		}
	_iter_next_1c9ae0e66:;
	}
	_iter_end_1c9ae0e66:;;
	_2244a1090_WriteStr(&_2976_ss, _28412_s.slice(_2986_i));
	return _2244a1887_Str(&_2976_ss);;
}



inline jule::Str _2256dd9a2_TrimLeft(jule::Str _34117_s, jule::Str _34125_cutset) {
	jule::I64 _3426_i = 0LL;;
	while ((_3426_i < _34117_s.len())) {
		{
			jule::I32 _3443_r;
			jule::I64 _3446_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2241a29ea_DecodeRuneStr(_34117_s.slice(_3426_i));
				_3443_r = __jule_assign_result.__jule_result_arg0;
				_3446_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_2256da40a_FindRune(_34125_cutset, _3443_r) == -1LL)) {
				return _34117_s.slice(_3426_i);;
			};
			_3426_i+=_3446_n;
		}
	_iter_next_1c9ae5dd3:;
	}
	_iter_end_1c9ae5dd3:;;
	return jule::Str();;
}



inline jule::Str _2256ddd26_TrimRight(jule::Str _35514_s, jule::Str _35522_cutset) {
	jule::I64 _3566_i = _35514_s.len();;
	while ((_3566_i > 0LL)) {
		{
			jule::I32 _3583_r;
			jule::I64 _3586_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2241a304a_DecodeLastRuneStr(_35514_s.slice(0LL, _3566_i));
				_3583_r = __jule_assign_result.__jule_result_arg0;
				_3586_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_2256da40a_FindRune(_35522_cutset, _3583_r) == -1LL)) {
				return _35514_s.slice(0LL, _3566_i);;
			};
			_3566_i-=_3586_n;
		}
	_iter_next_1c9ae79ea:;
	}
	_iter_end_1c9ae79ea:;;
	return jule::Str();;
}



inline jule::Str _2256de19a_Trim(jule::Str _3699_s, jule::Str _36917_cutset) {
	return _2256dd9a2_TrimLeft(_2256ddd26_TrimRight(_3699_s, _36917_cutset), _36917_cutset);;
}



inline jule::Bool _2256e1004_EqualFold(jule::Str _5518_s, jule::Str _5530_t) {
	jule::I64 _576_i = 0LL;;
	for (; ((_576_i < _5518_s.len()) && (_576_i < _5530_t.len())); (_576_i)++) {
		{
			jule::U8 _597_sr = _5518_s[_576_i];;
			jule::U8 _607_tr = _5530_t[_576_i];;
			if (((_597_sr | _607_tr) >= 128LLU)) {
				goto _julec_label_1c9aee859;
			};
			if ((_607_tr == _597_sr)) {
				goto _iter_next_1c9aee9ad;
			};
			if ((_607_tr < _597_sr)) {
				std::swap(_607_tr, _597_sr);
			};
			if (((('A' <= _597_sr) && (_597_sr <= 'Z')) && (_607_tr == (jule::U8)((jule::U8)(_597_sr + 'a') - 'A')))) {
				goto _iter_next_1c9aee9ad;
			};
			return false;;
		}
	_iter_next_1c9aee9ad:;
	}
	_iter_end_1c9aee9ad:;;
	return (_5518_s.len() == _5530_t.len());;
	_julec_label_1c9aee859:;
	(_5518_s).mut_slice(_576_i);;
	(_5530_t).mut_slice(_576_i);;
	{
		auto expr = &(_5518_s);
		jule::U8 *it = expr->begin();
		const jule::U8 *end = it + expr->len();
		jule::Int len;
		jule::I32 _8614_sr;
		_iter_begin_1c9b025e8:;
		__jule_runeStep(it, end - it, &_8614_sr, &len);
		if (it < end) {
			{
				if ((_5530_t.len() == 0LL)) {
					return false;;
				};
				jule::I32 _9311_tr = 0;;
				if ((_5530_t[0LL] < 128LLU)) {
					({
						jule::I32 ___jule_assign_arg = static_cast<jule::I32>(_5530_t[0LL]);
						jule::Str _1___jule_assign_arg = _5530_t.slice(1LL);
						_9311_tr = ___jule_assign_arg;
						_5530_t = _1___jule_assign_arg;
					});
				} else {
					jule::I32 _974_r;
					jule::I64 _977_size;
					({
						__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2241a29ea_DecodeRuneStr(_5530_t);
						_974_r = __jule_assign_result.__jule_result_arg0;
						_977_size = __jule_assign_result.__jule_result_arg1;
					});
					({
						jule::I32 ___jule_assign_arg = _974_r;
						jule::Str _1___jule_assign_arg = _5530_t.slice(_977_size);
						_9311_tr = ___jule_assign_arg;
						_5530_t = _1___jule_assign_arg;
					});
				};
				if ((_9311_tr == _8614_sr)) {
					goto _iter_next_1c9b025e8;
				};
				if ((_9311_tr < _8614_sr)) {
					std::swap(_9311_tr, _8614_sr);
				};
				if ((_9311_tr < 128LL)) {
					if (((('A' <= _8614_sr) && (_8614_sr <= 'Z')) && (_9311_tr == ((_8614_sr + 'a') - 'A')))) {
						goto _iter_next_1c9b025e8;
					};
					return false;;
				};
				jule::I32 _1237_r = _225695c56_SimpleFold(_8614_sr);;
				while (((_1237_r != _8614_sr) && (_1237_r < _9311_tr))) {
					{
						_1237_r=_225695c56_SimpleFold(_1237_r);
					}
				_iter_next_1c9b07136:;
				}
				_iter_end_1c9b07136:;;
				if ((_1237_r == _9311_tr)) {
					goto _iter_next_1c9b025e8;
				};
				return false;;
			}
			_iter_next_1c9b025e8:;
			it += len;
			goto _iter_begin_1c9b025e8;
		}
	};
	return (_5530_t.len() == 0LL);;
}



inline jule::Bool _2244a3119_IsPathSep(jule::U8 _4914_c) {
	return ((_4914_c == 92LLU) || (_4914_c == '/'));;
}



inline jule::Bool _2244a3427_isSlash(jule::U8 _5312_c) {
	return ((_5312_c == '\\') || (_5312_c == '/'));;
}



inline jule::U8 _2244a36e1_toUpper(jule::U8 _5512_c) {
	if ((('a' <= _5512_c) && (_5512_c <= 'z'))) {
		return (jule::U8)(_5512_c - 32LL);;
	};
	return _5512_c;;
}



inline jule::I64 _2244a3cb8_volumeNameLen(jule::Str _8318_path) {
	if ((_8318_path.len() < 2LL)) {
		return 0LL;;
	};
	jule::U8 _882_c = _8318_path[0LL];;
	if (((_8318_path[1LL] == ':') && ((('a' <= _882_c) && (_882_c <= 'z')) || (('A' <= _882_c) && (_882_c <= 'Z'))))) {
		return 2LL;;
	};
	if (((!(_2244a3427_isSlash(_8318_path[0LL]))) || (!(_2244a3427_isSlash(_8318_path[1LL]))))) {
		return 0LL;;
	};
	jule::Str _962_p1;
	jule::Str _9610_rest;
	({
		__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2244a4082_cutPath(_8318_path.slice(2LL));
		_962_p1 = __jule_assign_result.__jule_result_arg0;
		_9610_rest = __jule_assign_result.__jule_result_arg1;
	});
	jule::Str _976_p2 = jule::Str();;
	jule::Bool _986_ok = false;;
	({
		__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2244a4082_cutPath(_9610_rest);
		_976_p2 = __jule_assign_result.__jule_result_arg0;
		_9610_rest = __jule_assign_result.__jule_result_arg1;
		_986_ok = __jule_assign_result.__jule_result_arg2;
	});
	if ((!(_986_ok))) {
		return _8318_path.len();;
	};
	if (((!_962_p1.equal(".", 1)) && (!_962_p1.equal("?", 1)))) {
		return ((_8318_path.len() - _9610_rest.len()) - 1LL);;
	};
	if (((((_976_p2.len() == 3LL) && (_2244a36e1_toUpper(_976_p2[0LL]) == 'U')) && (_2244a36e1_toUpper(_976_p2[1LL]) == 'N')) && (_2244a36e1_toUpper(_976_p2[2LL]) == 'C'))) {
		({
			__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2244a4082_cutPath(_9610_rest);
			_9610_rest = __jule_assign_result.__jule_result_arg1;
		});
		({
			__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2244a4082_cutPath(_9610_rest);
			_9610_rest = __jule_assign_result.__jule_result_arg1;
			_986_ok = __jule_assign_result.__jule_result_arg2;
		});
		if ((!(_986_ok))) {
			return _8318_path.len();;
		};
	};
	return ((_8318_path.len() - _9610_rest.len()) - 1LL);;
}



inline __jule_tuple_str__jule_tuple_str__jule_tuple_bool _2244a4082_cutPath(jule::Str _12012_path) {
	__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg2 = false;
	{
		auto expr = &(_12012_path);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9b1a545:;
		if (it != expr_end) {
			jule::I64 _1216_i = it - expr->begin();
			{
				if (_2244a3427_isSlash(_12012_path[_1216_i])) {
					__jule_func_result.__jule_result_arg0 = _12012_path.slice(0LL, _1216_i);
					__jule_func_result.__jule_result_arg1 = _12012_path.slice((_1216_i + 1LL));
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1c9b1a545:;
			++it;
			_1216_i++;
			goto _iter_begin_1c9b1a545;
		}
		_iter_end_1c9b1a545:;
	};
	__jule_func_result.__jule_result_arg0 = _12012_path;
	__jule_func_result.__jule_result_arg1 = jule::Str();
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_str__jule_tuple_bool _2244a434b_fullPath(jule::Str _12913_name) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Slice<jule::U16> _1302_utf16Name = _223c78318_UTF16FromStr(_12913_name);;
	jule::U16* _1312_p = (&(_1302_utf16Name[0LL]));;
	jule::U32 _1326_n = static_cast<jule::U32>(100LLU);;
	for (;;) {
		{
			jule::Slice<jule::U16> _1347_buf = ({ auto __jule_collection = jule::Slice<jule::U16>::alloc(static_cast<jule::I64>(_1326_n), static_cast<jule::I64>(_1326_n)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
			_1326_n=_22408adab_GetFullPathName(_1312_p, static_cast<jule::U32>(_1347_buf.len()), (&(_1347_buf[0LL])), nullptr);
			if ((_1326_n == 0LLU)) {
				__jule_func_result.__jule_result_arg0 = jule::Str();
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			};
			if ((_1326_n <= static_cast<jule::U32>(_1347_buf.len()))) {
				__jule_func_result.__jule_result_arg0 = _223c78626_UTF16ToStr(_1347_buf.slice(0LL, static_cast<jule::I64>(_1326_n)));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			};
		}
	_iter_next_1c9b1c602:;
	}
	_iter_end_1c9b1c602:;;
	__jule_func_result.__jule_result_arg0 = jule::Str();
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_str__jule_tuple_bool _2244a4725_abs(jule::Str _14612_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_14612_path).empty()) {
		_14612_path=jule::Str::lit(".", 1);
	};
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2244a434b_fullPath(_14612_path);
		_14612_path = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(__jule_func_result.__jule_result_arg1))) {
		__jule_func_result.__jule_result_arg0 = jule::Str();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _2256e23bd_Clean(_14612_path);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Str _2244a4967_join(jule::Slice<jule::Str> _1609_elem) {
	_224497295_StrBuilder _1616_s = static__2244a0b83_New(16LL);;
	jule::U8 _1626_lastChar = static_cast<jule::U8>(0LLU);;
	{
		auto expr = &(_1609_elem);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9b21a13:;
		if (it != expr_end) {
			jule::Str _16314_e = *it;
			{
				{
					
					if ((_2244a1d1b_Len(&_1616_s) == 0LL)) {
						_case_begin_1c9b22717:;
					}
					else if (_2244a3427_isSlash(_1626_lastChar)) {
						_case_begin_1c9b22ad0:;
						{
							while (((_16314_e.len() > 0LL) && _2244a3427_isSlash(_16314_e[0LL]))) {
								{
									(_16314_e).mut_slice(1LL);;
								}
							_iter_next_1c9b22edc:;
							}
							_iter_end_1c9b22edc:;;
						}
					}
					else if ((_1626_lastChar == ':')) {
						_case_begin_1c9b223d7:;
					}
					else {
						_case_begin_1c9b22371:;
						{
							_2244a1348_WriteByte(&_1616_s, '\\');
							_1626_lastChar='\\';
						}
					}
					_match_end_1c9b22272:;
				};
				if ((_16314_e.len() > 0LL)) {
					_2244a1090_WriteStr(&_1616_s, _16314_e);
					_1626_lastChar=_16314_e[(_16314_e.len() - 1LL)];
				};
			}
			_iter_next_1c9b21a13:;
			++it;
			goto _iter_begin_1c9b21a13;
		}
		_iter_end_1c9b21a13:;
	};
	if ((_2244a1d1b_Len(&_1616_s) == 0LL)) {
		return jule::Str();;
	};
	return _2256e23bd_Clean(_2244a1887_Str(&_1616_s));;
}



inline jule::Str _2256e23bd_Clean(jule::Str _10914_path) {
	jule::Str _1102_originalPath = _10914_path;;
	jule::I64 _1112_volLen = _2244a3cb8_volumeNameLen(_10914_path);;
	(_10914_path).mut_slice(_1112_volLen);;
	if ((_10914_path).empty()) {
		if ((((_1112_volLen > 1LL) && _2244a3119_IsPathSep(_1102_originalPath[0LL])) && _2244a3119_IsPathSep(_1102_originalPath[1LL]))) {
			return _2256e2995_FromSlash(_1102_originalPath);;
		};
		return (_1102_originalPath + jule::Str::lit(".", 1));;
	};
	jule::Bool _1202_rooted = _2244a3119_IsPathSep(_10914_path[0LL]);;
	jule::I64 _1272_n = _10914_path.len();;
	_2256e1565_lazyBuff _1286_out = _2256e1565_lazyBuff{._field_path=_10914_path, ._field_buff=jule::Slice<jule::U8>(nullptr), ._field_w=0, ._field_volAndPath=_1102_originalPath, ._field_volLen=_1112_volLen};;
	jule::I64 _1336_r;
	jule::I64 _13313_dotdot;
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		_1336_r = ___jule_assign_arg;
		_13313_dotdot = _1___jule_assign_arg;
	});
	if (_1202_rooted) {
		_2256e1ca2_append(&_1286_out, 92LLU);
		({
			jule::I64 ___jule_assign_arg = 1LL;
			jule::I64 _1___jule_assign_arg = 1LL;
			_1336_r = ___jule_assign_arg;
			_13313_dotdot = _1___jule_assign_arg;
		});
	};
	while ((_1336_r < _1272_n)) {
		{
			{
				
				if (_2244a3119_IsPathSep(_10914_path[_1336_r])) {
					_case_begin_1c9b2b8ec:;
					{
						(_1336_r)++;
					}
				}
				else if (((_10914_path[_1336_r] == '.') && (((_1336_r + 1LL) == _1272_n) || _2244a3119_IsPathSep(_10914_path[(_1336_r + 1LL)])))) {
					_case_begin_1c9b2960e:;
					{
						(_1336_r)++;
					}
				}
				else if ((((_10914_path[_1336_r] == '.') && (_10914_path[(_1336_r + 1LL)] == '.')) && (((_1336_r + 2LL) == _1272_n) || _2244a3119_IsPathSep(_10914_path[(_1336_r + 2LL)])))) {
					_case_begin_1c9b29675:;
					{
						_1336_r+=2LL;
						{
							
							if ((_1286_out._field_w > _13313_dotdot)) {
								_case_begin_1c9b309ab:;
								{
									(_1286_out._field_w)--;
									while (((_1286_out._field_w > _13313_dotdot) && (!(_2244a3119_IsPathSep(_2256e19e9_index(&_1286_out, _1286_out._field_w)))))) {
										{
											(_1286_out._field_w)--;
										}
									_iter_next_1c9b3123c:;
									}
									_iter_end_1c9b3123c:;;
								}
							}
							else if ((!(_1202_rooted))) {
								_case_begin_1c9b30a55:;
								{
									if ((_1286_out._field_w > 0LL)) {
										_2256e1ca2_append(&_1286_out, 92LLU);
									};
									_2256e1ca2_append(&_1286_out, '.');
									_2256e1ca2_append(&_1286_out, '.');
									_13313_dotdot=_1286_out._field_w;
								}
							}
							_match_end_1c9b30604:;
						};
					}
				}
				else {
					_case_begin_1c9b29598:;
					{
						if (((_1202_rooted && (_1286_out._field_w != 1LL)) || ((!(_1202_rooted)) && (_1286_out._field_w != 0LL)))) {
							_2256e1ca2_append(&_1286_out, 92LLU);
						};
						if ((((_1286_out._field_w == 0LL) && (_1286_out._field_volLen == 0LL)) && (_1336_r != 0LL))) {
							jule::I64 _1769_i = _1336_r;;
							for (; ((_1769_i < _1272_n) && (!(_2244a3119_IsPathSep(_10914_path[_1769_i])))); (_1769_i)++) {
								{
									if ((_10914_path[_1769_i] == ':')) {
										_2256e1ca2_append(&_1286_out, '.');
										_2256e1ca2_append(&_1286_out, 92LLU);
										goto _iter_end_1c9b2b116;
									};
								}
							_iter_next_1c9b2b116:;
							}
							_iter_end_1c9b2b116:;;
						};
						for (; ((_1336_r < _1272_n) && (!(_2244a3119_IsPathSep(_10914_path[_1336_r])))); (_1336_r)++) {
							{
								_2256e1ca2_append(&_1286_out, _10914_path[_1336_r]);
							}
						_iter_next_1c9b2a984:;
						}
						_iter_end_1c9b2a984:;;
					}
				}
				_match_end_1c9b2929b:;
			};
		}
	_iter_next_1c9b28cb2:;
	}
	_iter_end_1c9b28cb2:;;
	if ((_1286_out._field_w == 0LL)) {
		_2256e1ca2_append(&_1286_out, '.');
	};
	return _2256e2995_FromSlash(_2256e2038_string(&_1286_out));;
}



inline jule::Str _2256e2995_FromSlash(jule::Str _21214_path) {
	;
	return _2256dcc26_Replace(_21214_path, jule::Str::lit("/", 1), jule::Str::lit("\\", 1), -1LL);;
}



inline jule::Str _2256e2cd6_Join(jule::Slice<jule::Str> _2269_elem) {
	return _2244a4967_join(_2269_elem);;
}



inline jule::Str _2256e306c_Ext(jule::Str _2318_path) {
	jule::I64 _2326_i = (_2318_path.len() - 1LL);;
	for (; ((_2326_i >= 0LL) && (!(_2244a3119_IsPathSep(_2318_path[_2326_i])))); (_2326_i)--) {
		{
			if ((_2318_path[_2326_i] == '.')) {
				return _2318_path.slice(_2326_i);;
			};
		}
	_iter_next_1c9b34c46:;
	}
	_iter_end_1c9b34c46:;;
	return jule::Str();;
}



inline __jule_tuple_str__jule_tuple_bool _2256e3336_Abs(jule::Str _2468_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result = std::move(_2244a4725_abs(_2468_path));
return __jule_func_result;;
}



inline jule::Str _2256e3600_Base(jule::Str _25213_path) {
	if ((_25213_path).empty()) {
		return jule::Str::lit(".", 1);;
	};
	while (((_25213_path.len() > 0LL) && _2244a3119_IsPathSep(_25213_path[(_25213_path.len() - 1LL)]))) {
		{
			(_25213_path).mut_slice(0LL, (_25213_path.len() - 1LL));;
		}
	_iter_next_1c9b360cc:;
	}
	_iter_end_1c9b360cc:;;
	(_25213_path).mut_slice(_2256e3c1b_VolumeName(_25213_path).len());;
	jule::I64 _2636_i = (_25213_path.len() - 1LL);;
	while (((_2636_i >= 0LL) && (!(_2244a3119_IsPathSep(_25213_path[_2636_i]))))) {
		{
			(_2636_i)--;
		}
	_iter_next_1c9b364ea:;
	}
	_iter_end_1c9b364ea:;;
	if ((_2636_i >= 0LL)) {
		(_25213_path).mut_slice((_2636_i + 1LL));;
	};
	if ((_25213_path).empty()) {
		return jule::Str::lit("\\", 1);;
	};
	return _25213_path;;
}



inline jule::Str _2256e39c9_Dir(jule::Str _2838_path) {
	jule::Str _2842_vol = _2256e3c1b_VolumeName(_2838_path);;
	jule::I64 _2856_i = (_2838_path.len() - 1LL);;
	while (((_2856_i >= _2842_vol.len()) && (!(_2244a3119_IsPathSep(_2838_path[_2856_i]))))) {
		{
			(_2856_i)--;
		}
	_iter_next_1c9b399a4:;
	}
	_iter_end_1c9b399a4:;;
	jule::Str _2892_dir = _2256e23bd_Clean(_2838_path.slice(_2842_vol.len(), (_2856_i + 1LL)));;
	if ((_2892_dir.equal(".", 1) && (_2842_vol.len() > 2LL))) {
		return _2842_vol;;
	};
	return (_2842_vol + _2892_dir);;
}



inline jule::Str _2256e3c1b_VolumeName(jule::Str _30115_path) {
	return _2256e2995_FromSlash(_30115_path.slice(0LL, _2244a3cb8_volumeNameLen(_30115_path)));;
}



inline jule::I64 _2243ddc8b_getLastFsError(void) {
	jule::I64 _722_err = _223c7be65_GetLastErrno();;
	{
		auto &_match_expr{ _722_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1c9b4cc70:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1c9b4cb71:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 114LL) {
			_case_begin_1c9b4c599:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 38LL) {
			_case_begin_1c9b4c610:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1c9b4c676:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1c9b4c6ed:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 132LL) {
			_case_begin_1c9b4c775:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1c9b4c7ec:;
			{
				return static_cast<jule::I64>(7LL);;
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1c9b4ce18:;
			{
				return static_cast<jule::I64>(8LL);;
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1c9b4ce90:;
			{
				return static_cast<jule::I64>(9LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1c9b4d017:;
			{
				return static_cast<jule::I64>(10LL);;
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1c9b4d08e:;
			{
				return static_cast<jule::I64>(11LL);;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1c9b4d116:;
			{
				return static_cast<jule::I64>(12LL);;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1c9b4d18d:;
			{
				return static_cast<jule::I64>(13LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1c9b4d215:;
			{
				return static_cast<jule::I64>(14LL);;
			}
		}
		else if (_match_expr == 124LL) {
			_case_begin_1c9b4d28c:;
			{
				return static_cast<jule::I64>(15LL);;
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1c9b4d314:;
			{
				return static_cast<jule::I64>(16LL);;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1c9b4d38b:;
			{
				return static_cast<jule::I64>(17LL);;
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1c9b4d413:;
			{
				return static_cast<jule::I64>(18LL);;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1c9b4d48a:;
			{
				return static_cast<jule::I64>(19LL);;
			}
		}
		else if (_match_expr == 139LL || _match_expr == 16LL) {
			_case_begin_1c9b4d512:;
			{
				return static_cast<jule::I64>(20LL);;
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1c9b4d589:;
			{
				return static_cast<jule::I64>(21LL);;
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1c9b4d611:;
			{
				return static_cast<jule::I64>(22LL);;
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1c9b4d688:;
			{
				return static_cast<jule::I64>(23LL);;
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1c9b4d710:;
			{
				return static_cast<jule::I64>(24LL);;
			}
		}
		else if (_match_expr == 119LL) {
			_case_begin_1c9b4d787:;
			{
				return static_cast<jule::I64>(25LL);;
			}
		}
		else if (_match_expr == 104LL) {
			_case_begin_1c9b4d80e:;
			{
				return static_cast<jule::I64>(26LL);;
			}
		}
		else if (_match_expr == 41LL) {
			_case_begin_1c9b4d886:;
			{
				return static_cast<jule::I64>(27LL);;
			}
		}
		else {
			_case_begin_1c9b4c423:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_1c9b4c533:;
	};
}



inline jule::Bool _2243e516b_isConsoleHandle(jule::Uintptr _10220_handle) {
	return (((_10220_handle == _2240883a3_STDIN) || (_10220_handle == _22408864a_STDOUT)) || (_10220_handle == _224088947_STDERR));;
}



inline void _225861e22_appendEscapeArg(_224497295_StrBuilder* _10225_s, jule::Str _10240_arg) {
	if ((_10240_arg.len() == 0LL)) {
		_2244a1090_WriteStr(_10225_s, jule::Str::lit("\"\"", 2));
		return;;
	};
	jule::Bool _1086_needsBackslash = false;;
	jule::Bool _1096_hasSpace = false;;
	jule::I64 _1106_i = 0LL;;
	for (; (_1106_i < _10240_arg.len()); (_1106_i)++) {
		{
			{
				auto &_match_expr{ _10240_arg[_1106_i] };
				
				if (_match_expr == '\"' || _match_expr == '\\') {
					_case_begin_1c9b93018:;
					{
						_1086_needsBackslash=true;
					}
				}
				else if (_match_expr == ' ' || _match_expr == '\t') {
					_case_begin_1c9b93315:;
					{
						_1096_hasSpace=true;
					}
				}
				_match_end_1c9b931e4:;
			};
		}
	_iter_next_1c9b92b72:;
	}
	_iter_end_1c9b92b72:;;
	if (((!(_1086_needsBackslash)) && (!(_1096_hasSpace)))) {
		_2244a1090_WriteStr(_10225_s, _10240_arg);
		return;;
	};
	if ((!(_1086_needsBackslash))) {
		_2244a1348_WriteByte(_10225_s, '\"');
		_2244a1090_WriteStr(_10225_s, _10240_arg);
		_2244a1348_WriteByte(_10225_s, '\"');
		return;;
	};
	if (_1096_hasSpace) {
		_2244a1348_WriteByte(_10225_s, '\"');
	};
	jule::I64 _1366_slashes = 0LL;;
	_1106_i=0LL;
	for (; (_1106_i < _10240_arg.len()); (_1106_i)++) {
		{
			jule::U8 _1393_c = _10240_arg[_1106_i];;
			{
				auto &_match_expr{ _1393_c };
				
				if (_match_expr == '\\') {
					_case_begin_1c9b96703:;
					{
						(_1366_slashes)++;
					}
				}
				else if (_match_expr == '\"') {
					_case_begin_1c9b967ad:;
					{
						for (; (_1366_slashes > 0LL); (_1366_slashes)--) {
							{
								_2244a1348_WriteByte(_10225_s, '\\');
							}
						_iter_next_1c9b96ed9:;
						}
						_iter_end_1c9b96ed9:;;
						_2244a1348_WriteByte(_10225_s, '\\');
					}
				}
				else {
					_case_begin_1c9b9625d:;
					{
						_1366_slashes=0LL;
					}
				}
				_match_end_1c9b9636d:;
			};
			_2244a1348_WriteByte(_10225_s, _1393_c);
		}
	_iter_next_1c9b95922:;
	}
	_iter_end_1c9b95922:;;
	if (_1096_hasSpace) {
		for (; (_1366_slashes > 0LL); (_1366_slashes)--) {
			{
				_2244a1348_WriteByte(_10225_s, '\\');
			}
		_iter_next_1c9b97a67:;
		}
		_iter_end_1c9b97a67:;;
		_2244a1348_WriteByte(_10225_s, '\"');
	};
}



inline jule::Str _2258621db_makeCmdLine(jule::Slice<jule::Str> _16316_args) {
	_224497295_StrBuilder _1646_s = static__2244a0b83_New(16LL);;
	{
		auto expr = &(_16316_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9b9866c:;
		if (it != expr_end) {
			jule::Str *_1659_arg = it;
			{
				if ((_2244a1d1b_Len(&_1646_s) > 0LL)) {
					_2244a1348_WriteByte(&_1646_s, ' ');
				};
				_225861e22_appendEscapeArg(&(_1646_s), (*(_1659_arg)));
			}
			_iter_next_1c9b9866c:;
			++it;
			goto _iter_begin_1c9b9866c;
		}
		_iter_end_1c9b9866c:;
	};
	return _2244a1887_Str(&_1646_s);;
}



inline jule::Exceptional<jule::Slice<jule::U16>> _2258625b5_createEnvBlock(jule::Slice<jule::Str> _17919_env) {
	if ((_17919_env.len() == 0LL)) {
		return jule::Exceptional<jule::Slice<jule::U16>>{.result=_223c77977_Encode(({ auto __jule_collection = jule::Slice<jule::I32>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 0LL; __jule_collection; }))};;
	};
	jule::I64 _1836_n = 0LL;;
	{
		auto expr = &(_17919_env);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9b99e98:;
		if (it != expr_end) {
			jule::Str *_1849_s = it;
			{
				if ((_2256d6846_FindByteStr((*(_1849_s)), 0LLU) != -1LL)) {
					return jule::Exceptional<jule::Slice<jule::U16>>{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0)};
				};
				_1836_n+=((*(_1849_s)).len() + 1LL);
			}
			_iter_next_1c9b99e98:;
			++it;
			goto _iter_begin_1c9b99e98;
		}
		_iter_end_1c9b99e98:;
	};
	(_1836_n)++;
	jule::Slice<jule::U16> _1916_b = ({ auto __jule_collection = jule::Slice<jule::U16>::alloc(0LL, _1836_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	{
		auto expr = &(_17919_env);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9b9985a:;
		if (it != expr_end) {
			jule::Str *_1929_s = it;
			{
				{
					auto expr = _1929_s;
					jule::U8 *it = expr->begin();
					const jule::U8 *end = it + expr->len();
					jule::Int len;
					jule::I32 _19310_c;
					_iter_begin_1c9b9c62c:;
					__jule_runeStep(it, end - it, &_19310_c, &len);
					if (it < end) {
						{
							_1916_b=_223c78082_AppendRune(_1916_b, _19310_c);
						}
						_iter_next_1c9b9c62c:;
						it += len;
						goto _iter_begin_1c9b9c62c;
					}
				};
				_1916_b=_223c78082_AppendRune(_1916_b, 0LL);
			}
			_iter_next_1c9b9985a:;
			++it;
			goto _iter_begin_1c9b9985a;
		}
		_iter_end_1c9b9985a:;
	};
	_1916_b=_223c78082_AppendRune(_1916_b, 0LL);
	return jule::Exceptional<jule::Slice<jule::U16>>{.result=_1916_b};;
}



inline jule::I64 _2258635b6_processErrorFromCode(jule::I64 _1125_code) {
	{
		auto &_match_expr{ _1125_code };
		
		if (_match_expr == 5LL) {
			_case_begin_1c9b9dae5:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 2LL || _match_expr == 3LL) {
			_case_begin_1c9b9d452:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else {
			_case_begin_1c9b9b3a6:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		_match_end_1c9b9d023:;
	};
}



inline jule::I64 _2258637d6_getLastProcessError(void) {
	return _2258635b6_processErrorFromCode(static_cast<jule::I64>(_224089937_GetLastError()));;
}



inline void _225864023_Exit(jule::I64 _109_code) {
	_224090ad6_Exit(_109_code);
}



inline jule::Str _225864254_Executable(void) {
	return _2241ac9a0_executable();;
}



inline jule::Bool _225778e9e_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));;
}



inline jule::Bool _225779279_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto expr = &(_2257784a9_CppHeaderExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9bbe808:;
		if (it != expr_end) {
			jule::Str *_329_validExt = it;
			{
				if ((_3121_ext == (*(_329_validExt)))) {
					return true;;
				};
			}
			_iter_next_1c9bbe808:;
			++it;
			goto _iter_begin_1c9bbe808;
		}
		_iter_end_1c9bbe808:;
	};
	return false;;
}



inline jule::Bool _225779543_IsValidCppExt(jule::Str _4118_ext) {
	if (_4118_ext.equal(".c", 2)) {
		return true;;
	};
	{
		auto expr = &(_2256e6b86_CppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9bc0650:;
		if (it != expr_end) {
			jule::Str *_459_e = it;
			{
				if ((_4118_ext == (*(_459_e)))) {
					return true;;
				};
			}
			_iter_next_1c9bc0650:;
			++it;
			goto _iter_begin_1c9bc0650;
		}
		_iter_end_1c9bc0650:;
	};
	{
		auto expr = &(_225777321_ObjectiveCppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9bc0551:;
		if (it != expr_end) {
			jule::Str *_509_e = it;
			{
				if ((_4118_ext == (*(_509_e)))) {
					return true;;
				};
			}
			_iter_next_1c9bc0551:;
			++it;
			goto _iter_begin_1c9bc0551;
		}
		_iter_end_1c9bc0551:;
	};
	return false;;
}



inline jule::Str _22578b7ec_Logf(jule::Str _3229_fmt, jule::Slice<jule::Any> _32222_args) {
	return _22578c28c_applyFmt(_3229_fmt, _32222_args);;
}



inline jule::Str _22578bb0a_argToStr(jule::Any _32613_arg) {
	{
		auto &_match_expr{ _32613_arg };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1c9bc28e9:;
			{
				return _32613_arg.unsafe_cast<jule::Str>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type136) {
			_case_begin_1c9bc2b91:;
			{
				return __jule_strFromByte(_32613_arg.unsafe_cast<jule::U8>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1c9bc2c07:;
			{
				return __jule_strFromRune(_32613_arg.unsafe_cast<jule::I32>());;
			}
		}
		else {
			_case_begin_1c9bc2b2a:;
			{
				return jule::Str::lit("<fmt?>", 6);;
			}
		}
		_match_end_1c9bc2ab4:;
	};
}



inline jule::I64 _22578bdc4_findNextFmt(jule::Str _33916_fmt) {
	{
		auto expr = &(_33916_fmt);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9bc20d0:;
		if (it != expr_end) {
			jule::I64 _3406_i = it - expr->begin();
			jule::U8 *_3409_b = it;
			{
				if (((*(_3409_b)) == '@')) {
					return _3406_i;;
				};
			}
			_iter_next_1c9bc20d0:;
			++it;
			_3406_i++;
			goto _iter_begin_1c9bc20d0;
		}
		_iter_end_1c9bc20d0:;
	};
	return -1LL;;
}



inline jule::Str _22578c28c_applyFmt(jule::Str _34817_fmt, jule::Slice<jule::Any> _34827_args) {
	_224497295_StrBuilder _3496_s = static__2244a0b83_New(32LL);;
	{
		auto expr = &(_34827_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9bc5655:;
		if (it != expr_end) {
			jule::Any *_3509_arg = it;
			{
				jule::I64 _3513_i = _22578bdc4_findNextFmt(_34817_fmt);;
				if ((_3513_i == -1LL)) {
					goto _iter_end_1c9bc5655;
				};
				_2244a1090_WriteStr(&_3496_s, _34817_fmt.slice(0LL, _3513_i));
				_2244a1090_WriteStr(&_3496_s, _22578bb0a_argToStr((*(_3509_arg))));
				(_34817_fmt).mut_slice((_3513_i + 1LL));;
			}
			_iter_next_1c9bc5655:;
			++it;
			goto _iter_begin_1c9bc5655;
		}
		_iter_end_1c9bc5655:;
	};
	_2244a1090_WriteStr(&_3496_s, _34817_fmt);
	return _2244a1887_Str(&_3496_s);;
}



inline jule::Bool _22578d18e_IsTopDirective(jule::Str _2319_directive) {
	return ((_2319_directive == static_cast<jule::Str>(jule::Str::lit("pass", 4))) || (_2319_directive == static_cast<jule::Str>(jule::Str::lit("build", 5))));;
}



inline jule::Bool _22578e5ad_IsWindows(jule::Str _3714_os) {
	return (_3714_os == static_cast<jule::Str>(jule::Str::lit("windows", 7)));;
}



inline jule::Bool _22578e8bb_IsDarwin(jule::Str _4013_os) {
	return (_4013_os == static_cast<jule::Str>(jule::Str::lit("darwin", 6)));;
}



inline jule::Bool _22578eb85_IsLinux(jule::Str _4312_os) {
	return (_4312_os == static_cast<jule::Str>(jule::Str::lit("linux", 5)));;
}



inline jule::Bool _22578eec6_IsI386(jule::Str _4611_arch) {
	return (_4611_arch == static_cast<jule::Str>(jule::Str::lit("i386", 4)));;
}



inline jule::Bool _22579025c_IsAmd64(jule::Str _4912_arch) {
	return (_4912_arch == static_cast<jule::Str>(jule::Str::lit("amd64", 5)));;
}



inline jule::Bool _225790526_IsArm64(jule::Str _5212_arch) {
	return (_5212_arch == static_cast<jule::Str>(jule::Str::lit("arm64", 5)));;
}



inline jule::Bool _2257907e0_IsUnix(jule::Str _5511_os) {
	return (_22578e8bb_IsDarwin(_5511_os) || _22578eb85_IsLinux(_5511_os));;
}



inline jule::Bool _225790bb9_Is32Bit(jule::Str _5812_arch) {
	return _22578eec6_IsI386(_5812_arch);;
}



inline jule::Bool _225790e0b_Is64Bit(jule::Str _6112_arch) {
	return (_22579025c_IsAmd64(_6112_arch) || _225790526_IsArm64(_6112_arch));;
}



inline void _225865497_init(void) {
	jule::Str _256_path = _225864254_Executable();;
	if ((_256_path).empty()) {
		__jule_panic_s(jule::Str::lit("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:3"));;
	};
	{
		_2258649e6_PathWd=({
			auto except = _2244cd8d6_WorkingDir();
			(except.ok()) ? (except.result) : ({{
				__jule_panic_s(jule::Str::lit("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:33:4"));;
				return;;
			} jule::Str();});
		});
		_22586473d_PathExec=_2256e39c9_Dir(_256_path);
		_2258644eb_PathStdlib=_2256e2cd6_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(3, 3); auto it = __jule_collection.begin(); (*it++) = _22586473d_PathExec; (*it++) = jule::Str::lit("..", 2); (*it++) = jule::Str::lit("std", 3); __jule_collection; }));
		_225864ce3_PathApi=_2256e2cd6_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(4, 4); auto it = __jule_collection.begin(); (*it++) = _22586473d_PathExec; (*it++) = jule::Str::lit("..", 2); (*it++) = jule::Str::lit("api", 3); (*it++) = jule::Str::lit("jule.hpp", 8); __jule_collection; }));
	};
}



inline jule::U32 _1e2141c63_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));;
}



inline jule::F32 _1e2142071_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));;
}



inline jule::U64 _1e214233a_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));;
}



inline jule::F64 _1e214267b_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));;
}



inline __jule_tuple_f64__jule_tuple_int _1e2144bde_Frexp(jule::F64 _4714_f) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_1c9c4cda3:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		else if (_1e214ab4b_IsInf(_4714_f, 0LL) || _1e214a4b9_IsNaN(_4714_f)) {
			_case_begin_1c9c4ce4c:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		_match_end_1c9c4ccb5:;
	};
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1e214ae15_normalize(_4714_f);
		_4714_f = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _566_x = _1e214233a_F64Bits(_4714_f);;
	__jule_func_result.__jule_result_arg1+=((static_cast<jule::I64>(((_566_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_566_x=(_566_x & 9227875636482146303LLU);
	_566_x|=4602678819172646912LLU;
	__jule_func_result.__jule_result_arg0=_1e214267b_F64FromBits(_566_x);
	return __jule_func_result;;
}



inline jule::F64 _1e214a1ab_NaN(void) {
	return _1e214267b_F64FromBits(9221120237041090561LLU);;
}



inline jule::Bool _1e214a4b9_IsNaN(jule::F64 _5210_f) {
	return false;;
}



inline jule::F64 _1e214a783_Inf(jule::I64 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return _1e214267b_F64FromBits(9218868437227405312LLU);;
	};
	return _1e214267b_F64FromBits(18442240474082181120LLU);;
}



inline jule::Bool _1e214ab4b_IsInf(jule::F64 _7210_f, jule::I64 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));;
}



inline __jule_tuple_f64__jule_tuple_int _1e214ae15_normalize(jule::F64 _8214_x) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	if ((_1e214d2be_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		__jule_func_result.__jule_result_arg0 = (_8214_x * 4503599627370496LLU);
		__jule_func_result.__jule_result_arg1 = -52LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _8214_x;
	__jule_func_result.__jule_result_arg1 = 0LL;
	return __jule_func_result;;
}



inline jule::F64 _1e214c8d9_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_1e214a4b9_IsNaN(_1118_x) || _1e214ab4b_IsInf(_1118_x, 1LL)) {
			_case_begin_1c9c89175:;
			{
				return _1118_x;;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_1c9c8921e:;
			{
				return _1e214a1ab_NaN();;
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_1c9c89285:;
			{
				return _1e214a783_Inf(-1LL);;
			}
		}
		_match_end_1c9c890a9:;
	};
	jule::F64 _1336_f1;
	jule::I64 _13314_ki;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1e2144bde_Frexp(_1118_x);
		_1336_f1 = __jule_assign_result.__jule_result_arg0;
		_13314_ki = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1336_f1 < 0.7071067811865476)) {
		_1336_f1*=2LL;
		(_13314_ki)--;
	};
	jule::F64 _1382_f = (_1336_f1 - 1LL);;
	jule::F64 _1392_k = static_cast<jule::F64>(_13314_ki);;
	jule::F64 _1422_s = ({ jule::F64 __jule_x = _1382_f; jule::F64 __jule_y = (2LL + _1382_f); if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); });;
	jule::F64 _1432_s2 = (_1422_s * _1422_s);;
	jule::F64 _1442_s4 = (_1432_s2 * _1432_s2);;
	jule::F64 _1452_t1 = (_1432_s2 * (0.6666666666666735 + (_1442_s4 * (0.2857142874366239 + (_1442_s4 * (0.1818357216161805 + (_1442_s4 * 0.14798198605116586)))))));;
	jule::F64 _1462_t2 = (_1442_s4 * (0.3999999999940942 + (_1442_s4 * (0.22222198432149784 + (_1442_s4 * 0.15313837699209373)))));;
	jule::F64 _1472_R = (_1452_t1 + _1462_t2);;
	jule::F64 _1482_hfsq = ((0.5 * _1382_f) * _1382_f);;
	return ((_1392_k * 0.6931471803691238) - ((_1482_hfsq - ((_1422_s * (_1482_hfsq + _1472_R)) + (_1392_k * 0.00000000019082149292705877))) - _1382_f));;
}



inline jule::F64 _1e214d2be_Abs(jule::F64 _438_x) {
	return _1e214267b_F64FromBits((_1e214233a_F64Bits(_438_x) & 9223372036854775807LLU));;
}



inline __jule_tuple_f64__jule_tuple_f64 _1e2154d97_Modf(jule::F64 _449_f) {
	__jule_tuple_f64__jule_tuple_f64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::F64 _462_absF = _1e214d2be_Abs(_449_f);;
	jule::F64 _476_i = 0LL;;
	if ((_462_absF > 4503599627370496LL)) {
		_476_i=_449_f;
	} else {
		_476_i=(_462_absF + 4503599627370496LL);
		_476_i-=4503599627370496LL;
		while ((_476_i > _462_absF)) {
			{
				(_476_i)--;
			}
		_iter_next_1c9cebd0e:;
		}
		_iter_end_1c9cebd0e:;;
		if ((_449_f < 0LL)) {
			_476_i=(-(_476_i));
		};
	};
	__jule_func_result.__jule_result_arg0 = _476_i;
	__jule_func_result.__jule_result_arg1 = (_449_f - _476_i);
	return __jule_func_result;;
}



inline jule::F64 _1e21556a0_Log2(jule::F64 _449_x) {
	jule::F64 _452_frac;
	jule::I64 _458_exp;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1e2144bde_Frexp(_449_x);
		_452_frac = __jule_assign_result.__jule_result_arg0;
		_458_exp = __jule_assign_result.__jule_result_arg1;
	});
	if ((_452_frac == 0.5)) {
		return static_cast<jule::F64>((_458_exp - 1LL));;
	};
	return ((_1e214c8d9_Log(_452_frac) * 1.4426950408889634) + static_cast<jule::F64>(_458_exp));;
}



inline jule::Str _1e217e146_FmtFloat(jule::F64 _7913_f, jule::U8 _7921_fmt, jule::I64 _7932_prec, jule::I64 _7943_bitSize) {
	return _223c7a815_StrFromBytes(_1e217e72e_genericFtoa(({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, _1e2182ad9_max(((_7932_prec + 4LL) + 1LL), 25LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), _7913_f, _7921_fmt, _7932_prec, _7943_bitSize));;
}



inline jule::Slice<jule::U8> _1e217e72e_genericFtoa(jule::Slice<jule::U8> _8720_dst, jule::F64 _8733_val, jule::U8 _8743_fmt, jule::I64 _8758_prec, jule::I64 _8769_bitSize) {
	jule::U64 _886_bits = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1e217ce36_floatInfo> _8910_flt = nullptr;;
	{
		auto &_match_expr{ _8769_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1c9ee67ab:;
			{
				_886_bits=static_cast<jule::U64>(_1e2141c63_F32Bits(static_cast<jule::F32>(_8733_val)));
				_8910_flt=((jule::Ptr<_1e217ce36_floatInfo>)((&(_1e217d332_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1c9ee64e2:;
			{
				_886_bits=_1e214233a_F64Bits(_8733_val);
				_8910_flt=((jule::Ptr<_1e217ce36_floatInfo>)((&(_1e217d62e_f64info))));
			}
		}
		else {
			_case_begin_1c9ee529e:;
			{
				__jule_panic_s(jule::Str::lit("std::conv: illegal bitSize", 26) + jule::Str("\nlocation: std/conv/ftoa.jule:98:3"));;
			}
		}
		_match_end_1c9ee616d:;
	};
	jule::Bool _1012_neg = (({ jule::U64 __jule_x = _886_bits; jule::U64 __jule_y = (jule::U64)((*(_8910_flt))._field_expbits + (*_8910_flt.alloc)._field_mantbits); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) != 0LLU);;
	jule::I64 _1026_exp = (static_cast<jule::I64>(({ jule::U64 __jule_x = _886_bits; jule::U64 __jule_y = (*_8910_flt.alloc)._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); })) & static_cast<jule::I64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*_8910_flt.alloc)._field_expbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL)));;
	jule::U64 _1036_mant = (_886_bits & (jule::U64)(({ jule::U64 __jule_x = static_cast<jule::U64>(1LLU); jule::U64 __jule_y = (*_8910_flt.alloc)._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LLU));;
	{
		auto &_match_expr{ _1026_exp };
		
		if (_match_expr == static_cast<jule::I64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*_8910_flt.alloc)._field_expbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL))) {
			_case_begin_1c9eea606:;
			{
				{
					
					if ((_1036_mant != 0LLU)) {
						_case_begin_1c9eebd44:;
						{
							return jule::append(_8720_dst,jule::Str::lit("nan", 3));;
						}
					}
					else if (_1012_neg) {
						_case_begin_1c9eebe32:;
						{
							return jule::append(_8720_dst,jule::Str::lit("-inf", 4));;
						}
					}
					else {
						_case_begin_1c9eeb6c3:;
						{
							return jule::append(_8720_dst,jule::Str::lit("+inf", 4));;
						}
					}
					_match_end_1c9eeb5b3:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1c9eea6e4:;
			{
				(_1026_exp)++;
			}
		}
		else {
			_case_begin_1c9ee97ae:;
			{
				_1036_mant|=({ jule::U64 __jule_x = static_cast<jule::U64>(1LLU); jule::U64 __jule_y = (*_8910_flt.alloc)._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
			}
		}
		_match_end_1c9ee9957:;
	};
	_1026_exp+=(*_8910_flt.alloc)._field_bias;
	if ((_8743_fmt == 'b')) {
		return _1e2181c5e_fmtB(_8720_dst, _1012_neg, _1036_mant, _1026_exp, &((*(_8910_flt))));;
	};
	if (((_8743_fmt == 'x') || (_8743_fmt == 'X'))) {
		return _1e21823e1_fmtX(_8720_dst, _8758_prec, _8743_fmt, _1012_neg, _1036_mant, _1026_exp, &((*(_8910_flt))));;
	};
	;
	_1e217dab3_decimalSlice _1376_digs = _1e217dab3_decimalSlice{._field_d=jule::Slice<jule::U8>(nullptr), ._field_nd=0, ._field_dp=0, ._field_neg=false};;
	jule::Bool _1386_ok = false;;
	jule::Bool _1402_shortest = (_8758_prec < 0LL);;
	if (_1402_shortest) {
		_1376_digs._field_d=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(32LL, 32LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
		_1e218ca39_ryuFtoaShortest(&(_1376_digs), _1036_mant, (_1026_exp - static_cast<jule::I64>((*_8910_flt.alloc)._field_mantbits)), &((*(_8910_flt))));
		_1386_ok=true;
		{
			auto &_match_expr{ _8743_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1c9eeeac2:;
				{
					_8758_prec=_1e2182ad9_max((_1376_digs._field_nd - 1LL), 0LL);
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1ca000ad4:;
				{
					_8758_prec=_1e2182ad9_max((_1376_digs._field_nd - _1376_digs._field_dp), 0LL);
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1ca000b4a:;
				{
					_8758_prec=_1376_digs._field_nd;
				}
			}
			_match_end_1c9eeece2:;
		};
	} else if ((_8743_fmt != 'f')) {
		jule::I64 _1577_digits = _8758_prec;;
		{
			auto &_match_expr{ _8743_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1ca002ad6:;
				{
					(_1577_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1ca002ba2:;
				{
					if ((_8758_prec == 0LL)) {
						_8758_prec=1LL;
					};
					_1577_digits=_8758_prec;
				}
			}
			else {
				_case_begin_1ca002641:;
				{
					_1577_digits=1LL;
				}
			}
			_match_end_1ca002751:;
		};
		if (((_8769_bitSize == 32LL) && (_1577_digits <= 9LL))) {
			_1376_digs._field_d=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(24LL, 24LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
			_1e218b780_ryuFtoaFixed32(&(_1376_digs), static_cast<jule::U32>(_1036_mant), (_1026_exp - static_cast<jule::I64>((*_8910_flt.alloc)._field_mantbits)), _1577_digits);
			_1386_ok=true;
		} else if ((_1577_digits <= 18LL)) {
			_1376_digs._field_d=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(24LL, 24LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
			_1e218bc25_ryuFtoaFixed64(&(_1376_digs), _1036_mant, (_1026_exp - static_cast<jule::I64>((*_8910_flt.alloc)._field_mantbits)), _1577_digits);
			_1386_ok=true;
		};
	};
	if ((!(_1386_ok))) {
		return _1e217ee38_bigFtoa(_8720_dst, _8758_prec, _8743_fmt, _1012_neg, _1036_mant, _1026_exp, &((*(_8910_flt))));;
	};
	return _1e218060e_fmtDigits(_8720_dst, _1402_shortest, _1012_neg, _1376_digs, _8758_prec, _8743_fmt);;
}



inline jule::Slice<jule::U8> _1e217ee38_bigFtoa(jule::Slice<jule::U8> _18716_dst, jule::I64 _18733_prec, jule::U8 _18744_fmt, jule::Bool _18755_neg, jule::U64 _1882_mant, jule::I64 _18813_exp, _1e217ce36_floatInfo* _18824_flt) {
	_1e219181d_decimal _1896_d = _1e219181d_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	_1e2191c08_assign(&_1896_d, _1882_mant);
	_1e2191eb1_shift(&_1896_d, (_18813_exp - static_cast<jule::I64>((*(_18824_flt))._field_mantbits)));
	_1e217dab3_decimalSlice _1926_digs = _1e217dab3_decimalSlice{._field_d=jule::Slice<jule::U8>(nullptr), ._field_nd=0, ._field_dp=0, ._field_neg=false};;
	jule::Bool _1932_shortest = (_18733_prec < 0LL);;
	if (_1932_shortest) {
		_1e2180a2c_roundShortest(&(_1896_d), _1882_mant, _18813_exp, _18824_flt);
		_1926_digs=_1e217dab3_decimalSlice{._field_d=_1896_d._field_d.slice(0LL), ._field_nd=_1896_d._field_nd, ._field_dp=_1896_d._field_dp, ._field_neg=false};
		{
			auto &_match_expr{ _18744_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1ca008a65:;
				{
					_18733_prec=(_1926_digs._field_nd - 1LL);
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1ca009868:;
				{
					_18733_prec=_1e2182ad9_max((_1926_digs._field_nd - _1926_digs._field_dp), 0LL);
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1ca0098ce:;
				{
					_18733_prec=_1926_digs._field_nd;
				}
			}
			_match_end_1ca0096d1:;
		};
	} else {
		{
			auto &_match_expr{ _18744_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1ca00878a:;
				{
					_1e21927ca_round(&_1896_d, (_18733_prec + 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1ca008801:;
				{
					_1e21927ca_round(&_1896_d, (_1896_d._field_dp + _18733_prec));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1ca008867:;
				{
					if ((_18733_prec == 0LL)) {
						_18733_prec=1LL;
					};
					_1e21927ca_round(&_1896_d, _18733_prec);
				}
			}
			_match_end_1ca00adb9:;
		};
		_1926_digs=_1e217dab3_decimalSlice{._field_d=_1896_d._field_d.slice(0LL), ._field_nd=_1896_d._field_nd, ._field_dp=_1896_d._field_dp, ._field_neg=false};
	};
	return _1e218060e_fmtDigits(_18716_dst, _1932_shortest, _18755_neg, _1926_digs, _18733_prec, _18744_fmt);;
}



inline jule::Slice<jule::U8> _1e218060e_fmtDigits(jule::Slice<jule::U8> _22418_dst, jule::Bool _22431_shortest, jule::Bool _22447_neg, _1e217dab3_decimalSlice _2252_digs, jule::I64 _22526_prec, jule::U8 _22537_fmt) {
	{
		auto &_match_expr{ _22537_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1ca00e054:;
			{
				return _1e21810c1_fmtE(_22418_dst, _22447_neg, _2252_digs, _22526_prec, _22537_fmt);;
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1ca00e0ba:;
			{
				return _1e21815aa_fmtF(_22418_dst, _22447_neg, _2252_digs, _22526_prec);;
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1ca00e131:;
			{
				jule::I64 _2337_eprec = _22526_prec;;
				if (((_2337_eprec > _2252_digs._field_nd) && (_2252_digs._field_nd >= _2252_digs._field_dp))) {
					_2337_eprec=_2252_digs._field_nd;
				};
				if (_22431_shortest) {
					_2337_eprec=6LL;
				};
				jule::I64 _2433_exp = (_2252_digs._field_dp - 1LL);;
				if (((_2433_exp < -4LL) || (_2433_exp >= _2337_eprec))) {
					if ((_22526_prec > _2252_digs._field_nd)) {
						_22526_prec=_2252_digs._field_nd;
					};
					return _1e21810c1_fmtE(_22418_dst, _22447_neg, _2252_digs, (_22526_prec - 1LL), (jule::U8)((jule::U8)(_22537_fmt + 'e') - 'g'));;
				};
				if ((_22526_prec > _2252_digs._field_dp)) {
					_22526_prec=_2252_digs._field_nd;
				};
				return _1e21815aa_fmtF(_22418_dst, _22447_neg, _2252_digs, _1e2182ad9_max((_22526_prec - _2252_digs._field_dp), 0LL));;
			}
		}
		_match_end_1ca00de99:;
	};
	return jule::append(_22418_dst,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = '%'; (*it++) = _22537_fmt; __jule_collection; }));;
}



inline void _1e2180a2c_roundShortest(_1e219181d_decimal* _26223_d, jule::U64 _26235_mant, jule::I64 _26246_exp, _1e217ce36_floatInfo* _26257_flt) {
	if ((_26235_mant == 0LLU)) {
		(*(_26223_d))._field_nd=0LL;
		return;;
	};
	jule::I64 _2832_minexp = ((*(_26257_flt))._field_bias + 1LL);;
	if (((_26246_exp > _2832_minexp) && ((332LL * ((*(_26223_d))._field_dp - (*(_26223_d))._field_nd)) >= (100LL * (_26246_exp - static_cast<jule::I64>((*(_26257_flt))._field_mantbits)))))) {
		return;;
	};
	_1e219181d_decimal _2926_upper = _1e219181d_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	_1e2191c08_assign(&_2926_upper, (jule::U64)(({ jule::U64 __jule_x = _26235_mant; jule::U64 __jule_y = 1LLU; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) + 1LLU));
	_1e2191eb1_shift(&_2926_upper, ((_26246_exp - static_cast<jule::I64>((*(_26257_flt))._field_mantbits)) - 1LL));
	jule::U64 _3026_mantlo = static_cast<jule::U64>(0LLU);;
	jule::I64 _3036_explo = 0LL;;
	if (((_26235_mant > ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (*(_26257_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) || (_26246_exp == _2832_minexp))) {
		_3026_mantlo=(jule::U64)(_26235_mant - 1LLU);
		_3036_explo=_26246_exp;
	} else {
		_3026_mantlo=(jule::U64)(({ jule::U64 __jule_x = _26235_mant; jule::U64 __jule_y = 1LLU; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LLU);
		_3036_explo=(_26246_exp - 1LL);
	};
	_1e219181d_decimal _3116_lower = _1e219181d_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	_1e2191c08_assign(&_3116_lower, (jule::U64)(({ jule::U64 __jule_x = _3026_mantlo; jule::U64 __jule_y = 1LLU; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) + 1LLU));
	_1e2191eb1_shift(&_3116_lower, ((_3036_explo - static_cast<jule::I64>((*(_26257_flt))._field_mantbits)) - 1LL));
	jule::Bool _3182_inclusive = ((_26235_mant & 1LL) == 0LLU);;
	jule::U8 _3316_upperdelta = static_cast<jule::U8>(0LLU);;
	jule::I64 _3356_ui = 0LL;;
	for (; ; (_3356_ui)++) {
		{
			jule::I64 _3403_mi = ((_3356_ui - _2926_upper._field_dp) + (*(_26223_d))._field_dp);;
			if ((_3403_mi >= (*(_26223_d))._field_nd)) {
				goto _iter_end_1ca01a25d;
			};
			jule::I64 _3443_li = ((_3356_ui - _2926_upper._field_dp) + _3116_lower._field_dp);;
			jule::U8 _3457_l = static_cast<jule::U8>(48LLU);;
			if (((_3443_li >= 0LL) && (_3443_li < _3116_lower._field_nd))) {
				_3457_l=_3116_lower._field_d[_3443_li];
			};
			jule::U8 _3497_m = static_cast<jule::U8>(48LLU);;
			if ((_3403_mi >= 0LL)) {
				_3497_m=(*(_26223_d))._field_d[_3403_mi];
			};
			jule::U8 _3537_u = static_cast<jule::U8>(48LLU);;
			if ((_3356_ui < _2926_upper._field_nd)) {
				_3537_u=_2926_upper._field_d[_3356_ui];
			};
			jule::Bool _3613_okdown = ((_3457_l != _3497_m) || (_3182_inclusive && ((_3443_li + 1LL) == _3116_lower._field_nd)));;
			{
				
				if (((_3316_upperdelta == 0LLU) && ((jule::U8)(_3497_m + 1LLU) < _3537_u))) {
					_case_begin_1ca020010:;
					{
						_3316_upperdelta=2LLU;
					}
				}
				else if (((_3316_upperdelta == 0LLU) && (_3497_m != _3537_u))) {
					_case_begin_1ca0200a9:;
					{
						_3316_upperdelta=1LLU;
					}
				}
				else if (((_3316_upperdelta == 1LLU) && ((_3497_m != '9') || (_3537_u != '0')))) {
					_case_begin_1ca020120:;
					{
						_3316_upperdelta=2LLU;
					}
				}
				_match_end_1ca01ee33:;
			};
			jule::Bool _3823_okup = ((_3316_upperdelta > 0LLU) && ((_3182_inclusive || (_3316_upperdelta > 1LLU)) || ((_3356_ui + 1LL) < _2926_upper._field_nd)));;
			{
				
				if ((_3613_okdown && _3823_okup)) {
					_case_begin_1ca0229c4:;
					{
						_1e21927ca_round(_26223_d, (_3403_mi + 1LL));
						return;;
					}
				}
				else if (_3613_okdown) {
					_case_begin_1ca022a6d:;
					{
						_1e2192269_roundDown(_26223_d, (_3403_mi + 1LL));
						return;;
					}
				}
				else if (_3823_okup) {
					_case_begin_1ca022ad4:;
					{
						_1e2192522_roundUp(_26223_d, (_3403_mi + 1LL));
						return;;
					}
				}
				_match_end_1ca020186:;
			};
		}
	_iter_next_1ca01a25d:;
	}
	_iter_end_1ca01a25d:;;
}



inline jule::Slice<jule::U8> _1e21810c1_fmtE(jule::Slice<jule::U8> _40113_dst, jule::Bool _40126_neg, _1e217dab3_decimalSlice _40137_d, jule::I64 _40154_prec, jule::U8 _40165_fmt) {
	if (_40126_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('-'); };
	};
	jule::U8 _4086_ch = '0';;
	if ((_40137_d._field_nd != 0LL)) {
		_4086_ch=_40137_d._field_d[0LL];
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_4086_ch); };
	if ((_40154_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('.'); };
		jule::I64 _4177_i = 1LL;;
		jule::I64 _4183_m = _1e2182765_min(_40137_d._field_nd, (_40154_prec + 1LL));;
		if ((_4177_i < _4183_m)) {
			(_40113_dst).append(_40137_d._field_d.slice(_4177_i, _4183_m));;
			_4177_i=_4183_m;
		};
		for (; (_4177_i <= _40154_prec); (_4177_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1ca0269b7:;
		}
		_iter_end_1ca0269b7:;;
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_40165_fmt); };
	jule::I64 _4306_exp = (_40137_d._field_dp - 1LL);;
	if ((_40137_d._field_nd == 0LL)) {
		_4306_exp=0LL;
	};
	if ((_4306_exp < 0LL)) {
		_4086_ch='-';
		_4306_exp=(-(_4306_exp));
	} else {
		_4086_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_4086_ch); };
	{
		
		if ((_4306_exp < 10LL)) {
			_case_begin_1ca0291a1:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push('0'); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>(_4306_exp) + '0')); };
			}
		}
		else if ((_4306_exp < 100LL)) {
			_case_begin_1ca02935a:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_4306_exp / 10LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_4306_exp % 10LL)) + '0')); };
			}
		}
		else {
			_case_begin_1ca028b1d:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_4306_exp / 100LL)) + '0')); __jule_push_dest.__push((jule::U8)((static_cast<jule::U8>(({ jule::I64 __jule_x = _4306_exp; jule::I64 __jule_y = 10LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x / __jule_y)); })) % 10LL) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_4306_exp % 10LL)) + '0')); };
			}
		}
		_match_end_1ca0289b9:;
	};
	return _40113_dst;;
}



inline jule::Slice<jule::U8> _1e21815aa_fmtF(jule::Slice<jule::U8> _45613_dst, jule::Bool _45626_neg, _1e217dab3_decimalSlice _45637_d, jule::I64 _45654_prec) {
	if (_45626_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('-'); };
	};
	if ((_45637_d._field_dp > 0LL)) {
		jule::I64 _4647_m = _1e2182765_min(_45637_d._field_nd, _45637_d._field_dp);;
		(_45613_dst).append(_45637_d._field_d.slice(0LL, _4647_m));;
		for (; (_4647_m < _45637_d._field_dp); (_4647_m)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1ca02ce74:;
		}
		_iter_end_1ca02ce74:;;
	} else {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('0'); };
	};
	if ((_45654_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('.'); };
		jule::I64 _4757_i = 0LL;;
		for (; (_4757_i < _45654_prec); (_4757_i)++) {
			{
				jule::U8 _4778_ch = static_cast<jule::U8>(48LLU);;
				jule::I64 _4784_j = (_45637_d._field_dp + _4757_i);;
				if (((0LL <= _4784_j) && (_4784_j < _45637_d._field_nd))) {
					_4778_ch=_45637_d._field_d[_4784_j];
				};
				{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push(_4778_ch); };
			}
		_iter_next_1ca02e283:;
		}
		_iter_end_1ca02e283:;;
	};
	return _45613_dst;;
}



inline jule::Slice<jule::U8> _1e2181c5e_fmtB(jule::Slice<jule::U8> _48913_dst, jule::Bool _48926_neg, jule::U64 _48937_mant, jule::I64 _48952_exp, _1e217ce36_floatInfo* _48963_flt) {
	if (_48926_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('-'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1e2196aba_fmtBits(_48913_dst, _48937_mant, 10LL, false, true);
		_48913_dst = __jule_assign_result.__jule_result_arg0;
	});
	{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('p'); };
	_48952_exp-=static_cast<jule::I64>((*(_48963_flt))._field_mantbits);
	if ((_48952_exp >= 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('+'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1e2196aba_fmtBits(_48913_dst, static_cast<jule::U64>(_48952_exp), 10LL, (_48952_exp < 0LL), true);
		_48913_dst = __jule_assign_result.__jule_result_arg0;
	});
	return _48913_dst;;
}



inline jule::Slice<jule::U8> _1e21823e1_fmtX(jule::Slice<jule::U8> _51113_dst, jule::I64 _51126_prec, jule::U8 _51137_fmt, jule::Bool _51148_neg, jule::U64 _5126_mant, jule::I64 _51221_exp, _1e217ce36_floatInfo* _51232_flt) {
	if ((_5126_mant == 0LLU)) {
		_51221_exp=0LL;
	};
	_5126_mant = ({ jule::U64 __jule_x = _5126_mant; jule::U64 __jule_y = (jule::U64)(60LLU - (*(_51232_flt))._field_mantbits); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	while (((_5126_mant != 0LLU) && ((_5126_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5126_mant=(jule::U64)(_5126_mant << 1LLU);
			(_51221_exp)--;
		}
	_iter_next_1ca034079:;
	}
	_iter_end_1ca034079:;;
	if (((_51126_prec >= 0LL) && (_51126_prec < 15LL))) {
		jule::U64 _5263_shift = static_cast<jule::U64>(({ jule::I64 __jule_x = _51126_prec; jule::I64 __jule_y = 2LLU; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));;
		jule::U64 _5273_extra = (({ jule::U64 __jule_x = _5126_mant; jule::U64 __jule_y = _5263_shift; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) & 1152921504606846975LLU);;
		_5126_mant = ({ jule::U64 __jule_x = _5126_mant; jule::U64 __jule_y = (jule::U64)(60LLU - _5263_shift); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		if (((_5273_extra | (_5126_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5126_mant)++;
		};
		_5126_mant = ({ jule::U64 __jule_x = _5126_mant; jule::U64 __jule_y = (jule::U64)(60LLU - _5263_shift); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
		if (((_5126_mant & 2305843009213693952LLU) != 0LLU)) {
			_5126_mant=(_5126_mant >> 1LLU);
			(_51221_exp)++;
		};
	};
	jule::Str _5406_hex = jule::Str();;
	if ((_51137_fmt == 'X')) {
		_5406_hex=jule::Str::lit("0123456789ABCDEF", 16);
	} else {
		_5406_hex=jule::Str::lit("0123456789abcdef", 16);
	};
	if (_51148_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('-'); };
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push('0'); __jule_push_dest.__push(_51137_fmt); __jule_push_dest.__push((jule::U8)('0' + static_cast<jule::U8>(((_5126_mant >> 60LLU) & 1LLU)))); };
	_5126_mant=(jule::U64)(_5126_mant << 4LLU);
	if (((_51126_prec < 0LL) && (_5126_mant != 0LLU))) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('.'); };
		while ((_5126_mant != 0LLU)) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5406_hex[static_cast<jule::I64>(((_5126_mant >> 60LLU) & 15LLU))]); };
				_5126_mant=(jule::U64)(_5126_mant << 4LLU);
			}
		_iter_next_1ca03949c:;
		}
		_iter_end_1ca03949c:;;
	} else if ((_51126_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('.'); };
		jule::I64 _5637_i = 0LL;;
		for (; (_5637_i < _51126_prec); (_5637_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5406_hex[static_cast<jule::I64>(((_5126_mant >> 60LLU) & 15LLU))]); };
				_5126_mant=(jule::U64)(_5126_mant << 4LLU);
			}
		_iter_next_1ca03b01a:;
		}
		_iter_end_1ca03b01a:;;
	};
	jule::U8 _5716_ch = static_cast<jule::U8>(80LLU);;
	if ((_51137_fmt == _1e2183777_lower(_51137_fmt))) {
		_5716_ch='p';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5716_ch); };
	if ((_51221_exp < 0LL)) {
		_5716_ch='-';
		_51221_exp=(-(_51221_exp));
	} else {
		_5716_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5716_ch); };
	{
		
		if ((_51221_exp < 100LL)) {
			_case_begin_1ca03839c:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp / 10LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp % 10LL)) + '0')); };
			}
		}
		else if ((_51221_exp < 1000LL)) {
			_case_begin_1ca03d9bd:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp / 100LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((({ jule::I64 __jule_x = _51221_exp; jule::I64 __jule_y = 10LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x / __jule_y)); }) % 10LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp % 10LL)) + '0')); };
			}
		}
		else {
			_case_begin_1ca03d10a:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(4); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp / 1000LL)) + '0')); __jule_push_dest.__push((jule::U8)((static_cast<jule::U8>(({ jule::I64 __jule_x = _51221_exp; jule::I64 __jule_y = 100LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x / __jule_y)); })) % 10LL) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((({ jule::I64 __jule_x = _51221_exp; jule::I64 __jule_y = 10LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x / __jule_y)); }) % 10LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp % 10LL)) + '0')); };
			}
		}
		_match_end_1ca03ce73:;
	};
	return _51113_dst;;
}



inline jule::I64 _1e2182765_min(jule::I64 _5968_a, jule::I64 _59616_b) {
	if ((_5968_a < _59616_b)) {
		return _5968_a;;
	};
	return _59616_b;;
}



inline jule::I64 _1e2182ad9_max(jule::I64 _6038_a, jule::I64 _60316_b) {
	if ((_6038_a > _60316_b)) {
		return _6038_a;;
	};
	return _60316_b;;
}



inline jule::U8 _1e2183777_lower(jule::U8 _4710_c) {
	return (_4710_c | 32LL);;
}



inline __jule_tuple_u64__jule_tuple__1e1c55888_ConvError _1e2183bea_parseUint(jule::Str* _5119_s, jule::I64 _5131_base, jule::I64 _5146_bitSize) {
	__jule_tuple_u64__jule_tuple__1e1c55888_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	if (((*(_5119_s))).empty()) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	{
		
		if (((2LL <= _5131_base) && (_5131_base <= 36LL))) {
			_case_begin_1ca044254:;
		}
		else if ((_5131_base == 0LL)) {
			_case_begin_1ca044188:;
			{
				_5131_base=10LL;
				if (((*(_5119_s))[0LL] == '0')) {
					{
						
						if ((((*(_5119_s)).len() >= 3LL) && (_1e2183777_lower((*(_5119_s))[1LL]) == 'b'))) {
							_case_begin_1ca045c06:;
							{
								_5131_base=2LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_1e2183777_lower((*(_5119_s))[1LL]) == 'o'))) {
							_case_begin_1ca045ce4:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_1e2183777_lower((*(_5119_s))[1LL]) == 'x'))) {
							_case_begin_1ca0458a4:;
							{
								_5131_base=16LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1ca04583d:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(1LL);;
							}
						}
						_match_end_1ca045761:;
					};
				};
			}
		}
		else {
			_case_begin_1ca0435a5:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(3LL);
				return __jule_func_result;;
			}
		}
		_match_end_1ca043b38:;
	};
	if ((_5146_bitSize == 0LL)) {
		_5146_bitSize=64LL;
	} else if (((_5146_bitSize < 0LL) || (_5146_bitSize > 64LL))) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(4LL);
		return __jule_func_result;;
	};
	jule::U64 _906_cutoff = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5131_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1ca049c1b:;
			{
				_906_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1ca0498ec:;
			{
				_906_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1ca044e58:;
			{
				_906_cutoff=(jule::U64)(({ jule::U64 __jule_x = jule::MAX_U64; jule::U64 __jule_y = static_cast<jule::U64>(_5131_base); if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U64)(__jule_x / __jule_y)); }) + 1LLU);
			}
		}
		_match_end_1ca049886:;
	};
	jule::U64 _1006_maxVal = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5146_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1ca049963:;
			{
				_1006_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1ca045420:;
			{
				_1006_maxVal=jule::MAX_U64;
			}
		}
		_match_end_1ca04ad60:;
	};
	jule::U64 _1086_n = static_cast<jule::U64>(0LLU);;
	{
		auto expr = _5119_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca04bd0b:;
		if (it != expr_end) {
			jule::U8 _1099_c = *it;
			{
				jule::U8 _1107_d = static_cast<jule::U8>(0LLU);;
				{
					
					if ((('0' <= _1099_c) && (_1099_c <= '9'))) {
						_case_begin_1ca04d0c6:;
						{
							_1107_d=(jule::U8)(_1099_c - '0');
						}
					}
					else if ((('a' <= _1e2183777_lower(_1099_c)) && (_1e2183777_lower(_1099_c) <= 'z'))) {
						_case_begin_1ca04d00a:;
						{
							_1107_d=(jule::U8)((jule::U8)(_1e2183777_lower(_1099_c) - 'a') + 10LLU);
						}
					}
					else if ((_1099_c == '_')) {
						_case_begin_1ca04caed:;
						{
							goto _iter_next_1ca04bd0b;
						}
					}
					else {
						_case_begin_1ca04ca87:;
						{
							__jule_func_result.__jule_result_arg0 = 0LLU;
							__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
							return __jule_func_result;;
						}
					}
					_match_end_1ca04ca10:;
				};
				if ((_1107_d >= static_cast<jule::U8>(_5131_base))) {
					__jule_func_result.__jule_result_arg0 = 0LLU;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
					return __jule_func_result;;
				};
				if ((_1086_n >= _906_cutoff)) {
					__jule_func_result.__jule_result_arg0 = _1006_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_1086_n*=static_cast<jule::U64>(_5131_base);
				jule::U64 _1323_n1 = (jule::U64)(_1086_n + static_cast<jule::U64>(_1107_d));;
				if (((_1323_n1 < _1086_n) || (_1323_n1 > _1006_maxVal))) {
					__jule_func_result.__jule_result_arg0 = _1006_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_1086_n=_1323_n1;
			}
			_iter_next_1ca04bd0b:;
			++it;
			goto _iter_begin_1ca04bd0b;
		}
		_iter_end_1ca04bd0b:;
	};
	__jule_func_result.__jule_result_arg0 = _1086_n;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(0LL);
	return __jule_func_result;;
}



inline jule::Exceptional<jule::U64> _1e2184129_ParseUint(jule::Str _14618_s, jule::I64 _14630_base, jule::I64 _14645_bitSize) {
	jule::U64 _1472_un;
	jule::I64 _1476_err;
	({
		__jule_tuple_u64__jule_tuple__1e1c55888_ConvError __jule_assign_result = _1e2183bea_parseUint(&(_14618_s), _14630_base, _14645_bitSize);
		_1472_un = __jule_assign_result.__jule_result_arg0;
		_1476_err = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1476_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::U64>{.error=jule::Any(_1476_err, &__jule_any_type0)};
	};
	return jule::Exceptional<jule::U64>{.result=_1472_un};;
}



inline jule::Exceptional<jule::I64> _1e21845d0_ParseInt(jule::Str _17217_s, jule::I64 _17225_base, jule::I64 _17240_bitSize) {
	if ((_17217_s).empty()) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0)};
	};
	jule::Bool _1786_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_1786_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _1876_un;
	jule::I64 _18710_err;
	({
		__jule_tuple_u64__jule_tuple__1e1c55888_ConvError __jule_assign_result = _1e2183bea_parseUint(&(_17217_s), _17225_base, _17240_bitSize);
		_1876_un = __jule_assign_result.__jule_result_arg0;
		_18710_err = __jule_assign_result.__jule_result_arg1;
	});
	if (((_18710_err != static_cast<jule::I64>(0LL)) && (_18710_err != static_cast<jule::I64>(1LL)))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(_18710_err, &__jule_any_type0)};
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=64LL;
	};
	jule::U64 _1962_cutoff = static_cast<jule::U64>(({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = static_cast<jule::U64>((_17240_bitSize - 1LL)); ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));;
	if (((!(_1786_neg)) && (_1876_un >= _1962_cutoff))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0)};
	};
	if ((_1786_neg && (_1876_un > _1962_cutoff))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0)};
	};
	jule::I64 _2036_n = static_cast<jule::I64>(_1876_un);;
	if (_1786_neg) {
		_2036_n=(-(_2036_n));
	};
	return jule::Exceptional<jule::I64>{.result=_2036_n};;
}



inline __jule_tuple_f64__jule_tuple_bool _1e2185290_eiselLemire64(jule::U64 _4122_man, jule::I64 _4132_exp10, jule::Bool _4144_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			__jule_func_result.__jule_result_arg0=_1e214267b_F64FromBits(9223372036854775808LLU);
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _572_clz = _224315795_LeadingZeros64(_4122_man);;
	_4122_man = ({ jule::U64 __jule_x = _4122_man; jule::U64 __jule_y = static_cast<jule::U64>(_572_clz); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	;
	jule::U64 _606_retExp2 = (jule::U64)(static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_572_clz));;
	jule::U64 _636_xHi;
	jule::U64 _6315_xLo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _2243206c3_Mul64(_4122_man, _1e2186109_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
		_636_xHi = __jule_assign_result.__jule_result_arg0;
		_6315_xLo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_636_xHi & 511LLU) == 511LLU) && ((jule::U64)(_6315_xLo + _4122_man) < _4122_man))) {
		jule::U64 _673_yHi;
		jule::U64 _678_yLo;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _2243206c3_Mul64(_4122_man, _1e2186109_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
			_673_yHi = __jule_assign_result.__jule_result_arg0;
			_678_yLo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _687_mergedHi;
		jule::U64 _6817_mergedLo;
		({
			jule::U64 ___jule_assign_arg = _636_xHi;
			jule::U64 _1___jule_assign_arg = (jule::U64)(_6315_xLo + _673_yHi);
			_687_mergedHi = ___jule_assign_arg;
			_6817_mergedLo = _1___jule_assign_arg;
		});
		if ((_6817_mergedLo < _6315_xLo)) {
			(_687_mergedHi)++;
		};
		if (((((_687_mergedHi & 511LLU) == 511LLU) && ((jule::U64)(_6817_mergedLo + 1LLU) == 0LLU)) && ((jule::U64)(_678_yLo + _4122_man) < _4122_man))) {
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _687_mergedHi;
			jule::U64 _1___jule_assign_arg = _6817_mergedLo;
			_636_xHi = ___jule_assign_arg;
			_6315_xLo = _1___jule_assign_arg;
		});
	};
	jule::U64 _792_msb = (_636_xHi >> 63LLU);;
	jule::U64 _806_retMantissa = ({ jule::U64 __jule_x = _636_xHi; jule::U64 __jule_y = (jule::U64)(_792_msb + 9LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });;
	_606_retExp2-=(1LLU ^ _792_msb);
	if ((((_6315_xLo == 0LLU) && ((_636_xHi & 511LLU) == 0LLU)) && ((_806_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_806_retMantissa+=(_806_retMantissa & 1LLU);
	_806_retMantissa=(_806_retMantissa >> 1LLU);
	if (((_806_retMantissa >> 53LLU) > 0LLU)) {
		_806_retMantissa=(_806_retMantissa >> 1LLU);
		_606_retExp2+=1LLU;
	};
	if (((jule::U64)(_606_retExp2 - 1LLU) >= 2046LLU)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1036_retBits = ((jule::U64)(_606_retExp2 << 52LLU) | (_806_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_1036_retBits|=9223372036854775808LLU;
	};
	__jule_func_result.__jule_result_arg0 = _1e214267b_F64FromBits(_1036_retBits);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1e2185713_eiselLemire32(jule::U64 _11022_man, jule::I64 _11032_exp10, jule::Bool _11044_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			__jule_func_result.__jule_result_arg0=_1e2142071_F32FromBits(2147483648LLU);
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _1322_clz = _224315795_LeadingZeros64(_11022_man);;
	_11022_man = ({ jule::U64 __jule_x = _11022_man; jule::U64 __jule_y = static_cast<jule::U64>(_1322_clz); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	;
	jule::U64 _1356_retExp2 = (jule::U64)(static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1322_clz));;
	jule::U64 _1386_x_hi;
	jule::U64 _13816_x_lo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _2243206c3_Mul64(_11022_man, _1e2186109_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
		_1386_x_hi = __jule_assign_result.__jule_result_arg0;
		_13816_x_lo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_1386_x_hi & 274877906943LLU) == 274877906943LLU) && ((jule::U64)(_13816_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _1423_y_hi;
		jule::U64 _1429_y_lo;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _2243206c3_Mul64(_11022_man, _1e2186109_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
			_1423_y_hi = __jule_assign_result.__jule_result_arg0;
			_1429_y_lo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _1437_merged_hi;
		jule::U64 _14318_merged_lo;
		({
			jule::U64 ___jule_assign_arg = _1386_x_hi;
			jule::U64 _1___jule_assign_arg = (jule::U64)(_13816_x_lo + _1423_y_hi);
			_1437_merged_hi = ___jule_assign_arg;
			_14318_merged_lo = _1___jule_assign_arg;
		});
		if ((_14318_merged_lo < _13816_x_lo)) {
			(_1437_merged_hi)++;
		};
		if (((((_1437_merged_hi & 274877906943LLU) == 274877906943LLU) && ((jule::U64)(_14318_merged_lo + 1LLU) == 0LLU)) && ((jule::U64)(_1429_y_lo + _11022_man) < _11022_man))) {
			__jule_func_result.__jule_result_arg0 = 0.0f;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _1437_merged_hi;
			jule::U64 _1___jule_assign_arg = _14318_merged_lo;
			_1386_x_hi = ___jule_assign_arg;
			_13816_x_lo = _1___jule_assign_arg;
		});
	};
	jule::U64 _1542_msb = (_1386_x_hi >> 63LLU);;
	jule::U64 _1556_retMantissa = ({ jule::U64 __jule_x = _1386_x_hi; jule::U64 __jule_y = (jule::U64)(_1542_msb + 38LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });;
	_1356_retExp2-=(1LLU ^ _1542_msb);
	if ((((_13816_x_lo == 0LLU) && ((_1386_x_hi & 274877906943LLU) == 0LLU)) && ((_1556_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_1556_retMantissa+=(_1556_retMantissa & 1LLU);
	_1556_retMantissa=(_1556_retMantissa >> 1LLU);
	if (((_1556_retMantissa >> 24LLU) > 0LLU)) {
		_1556_retMantissa=(_1556_retMantissa >> 1LLU);
		_1356_retExp2+=1LLU;
	};
	if (((jule::U64)(_1356_retExp2 - 1LLU) >= 254LLU)) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1786_retBits = ((jule::U64)(_1356_retExp2 << 23LLU) | (_1556_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_1786_retBits|=2147483648LLU;
	};
	__jule_func_result.__jule_result_arg0 = _1e2142071_F32FromBits(static_cast<jule::U32>(_1786_retBits));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::I64 _1e21874e5_commonPrefixLenIgnoreCase(jule::Str _4630_s, jule::Str _4638_prefix) {
	jule::I64 _476_n = _4638_prefix.len();;
	if ((_476_n > _4630_s.len())) {
		_476_n=_4630_s.len();
	};
	jule::I64 _516_i = 0LL;;
	for (; (_516_i < _476_n); (_516_i)++) {
		{
			jule::U8 _537_c = _4630_s[_516_i];;
			if ((('A' <= _537_c) && (_537_c <= 'Z'))) {
				_537_c+=32LL;
			};
			if ((_537_c != _4638_prefix[_516_i])) {
				return _516_i;;
			};
		}
	_iter_next_1ca071c98:;
	}
	_iter_end_1ca071c98:;;
	return _476_n;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1e2187803_special(jule::Str _6912_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_6912_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		__jule_func_result.__jule_result_arg2 = false;
		return __jule_func_result;;
	};
	jule::I64 _736_sign = 1LL;;
	jule::I64 _746_nsign = 0LL;;
	{
		auto &_match_expr{ _6912_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1ca07572a:;
			{
				if ((_6912_s[0LL] == '-')) {
					_736_sign=-1LL;
				};
				_746_nsign=1LL;
				{
					jule::Str* _838_sp = (&(_6912_s));;
					((*(_838_sp))).mut_slice(1LL);;
				};
				goto _case_begin_1ca0757a2;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1ca0757a2:;
			{
				jule::I64 _887_caseN = _1e21874e5_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("infinity", 8));;
				if (((3LL < _887_caseN) && (_887_caseN < 8LL))) {
					_887_caseN=3LL;
				};
				if (((_887_caseN == 3LL) || (_887_caseN == 8LL))) {
					__jule_func_result.__jule_result_arg0 = _1e214a783_Inf(_736_sign);
					__jule_func_result.__jule_result_arg1 = (_746_nsign + __jule_func_result.__jule_result_arg1);
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1ca075818:;
			{
				if ((_1e21874e5_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("NaN", 3)) == 3LL)) {
					__jule_func_result.__jule_result_arg0 = _1e214a1ab_NaN();
					__jule_func_result.__jule_result_arg1 = 3LL;
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1ca075681:;
	};
	__jule_func_result.__jule_result_arg0 = 0LL;
	__jule_func_result.__jule_result_arg1 = 0LL;
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1e2187abc_readFloat(jule::Str* _10815_s) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	__jule_func_result.__jule_result_arg3 = false;
	__jule_func_result.__jule_result_arg4 = false;
	__jule_func_result.__jule_result_arg5 = 0;
	__jule_func_result.__jule_result_arg6 = false;
	if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
		return __jule_func_result;;
	};
	{
		
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			_case_begin_1ca07aa2c:;
			{
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			_case_begin_1ca07ae28:;
			{
				__jule_func_result.__jule_result_arg2=true;
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		_match_end_1ca07a9b6:;
	};
	jule::U64 _1226_base = static_cast<jule::U64>(10LLU);;
	jule::I64 _1236_maxMantDigits = 19LL;;
	jule::U8 _1246_expChar = 'e';;
	if (((((__jule_func_result.__jule_result_arg5 + 2LL) < (*(_10815_s)).len()) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '0')) && (_1e2183777_lower((*(_10815_s))[(__jule_func_result.__jule_result_arg5 + 1LL)]) == 'x'))) {
		_1226_base=16LLU;
		_1236_maxMantDigits=16LL;
		__jule_func_result.__jule_result_arg5+=2LL;
		_1246_expChar='p';
		__jule_func_result.__jule_result_arg4=true;
	};
	jule::Bool _1326_sawdot = false;;
	jule::Bool _1336_sawdigits = false;;
	jule::I64 _1346_nd = 0LL;;
	jule::I64 _1356_ndMant = 0LL;;
	jule::I64 _1366_dp = 0LL;;
	for (; (__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()); (__jule_func_result.__jule_result_arg5)++) {
		{
			jule::U8 _1383_c = (*(_10815_s))[__jule_func_result.__jule_result_arg5];;
			{
				
				if ((_1383_c == '_')) {
					_case_begin_1ca080dc8:;
					{
						goto _iter_next_1ca08035b;
					}
				}
				else if ((_1383_c == '.')) {
					_case_begin_1ca080e72:;
					{
						if (_1326_sawdot) {
							goto _julec_label_1ca084a8b;
						};
						_1326_sawdot=true;
						_1366_dp=_1346_nd;
						goto _iter_next_1ca08035b;
					}
				}
				else if ((('0' <= _1383_c) && (_1383_c <= '9'))) {
					_case_begin_1ca080ed8:;
					{
						_1336_sawdigits=true;
						if (((_1383_c == '0') && (_1346_nd == 0LL))) {
							(_1366_dp)--;
							goto _iter_next_1ca08035b;
						};
						(_1346_nd)++;
						if ((_1356_ndMant < _1236_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=_1226_base;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((jule::U8)(_1383_c - '0'));
							(_1356_ndMant)++;
						} else if ((_1383_c != '0')) {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1ca08035b;
					}
				}
				else if ((((_1226_base == 16LLU) && ('a' <= _1e2183777_lower(_1383_c))) && (_1e2183777_lower(_1383_c) <= 'f'))) {
					_case_begin_1ca08104e:;
					{
						_1336_sawdigits=true;
						(_1346_nd)++;
						if ((_1356_ndMant < _1236_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=16LLU;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((jule::U8)((jule::U8)(_1e2183777_lower(_1383_c) - 'a') + 10LLU));
							(_1356_ndMant)++;
						} else {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1ca08035b;
					}
				}
				_match_end_1ca080cda:;
			};
			goto _iter_end_1ca08035b;
		}
	_iter_next_1ca08035b:;
	}
	_iter_end_1ca08035b:;;
	_julec_label_1ca084a8b:;
	if ((!(_1336_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_1326_sawdot))) {
		_1366_dp=_1346_nd;
	};
	if ((_1226_base == 16LLU)) {
		_1366_dp*=4LL;
		_1356_ndMant*=4LL;
	};
	if (((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && (_1e2183777_lower((*(_10815_s))[__jule_func_result.__jule_result_arg5]) == _1246_expChar))) {
		(__jule_func_result.__jule_result_arg5)++;
		if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
			return __jule_func_result;;
		};
		jule::I64 _2017_esign = 1LL;;
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			(__jule_func_result.__jule_result_arg5)++;
		} else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			(__jule_func_result.__jule_result_arg5)++;
			_2017_esign=-1LL;
		};
		if ((((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len()) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] < '0')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _2117_e = 0LL;;
		for (; ((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && ((('0' <= (*(_10815_s))[__jule_func_result.__jule_result_arg5]) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] <= '9')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_'))); (__jule_func_result.__jule_result_arg5)++) {
			{
				if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_')) {
					goto _iter_next_1ca088243;
				};
				if ((_2117_e < 10000LL)) {
					_2117_e=(((_2117_e * 10LL) + static_cast<jule::I64>((*(_10815_s))[__jule_func_result.__jule_result_arg5])) - '0');
				};
			}
		_iter_next_1ca088243:;
		}
		_iter_end_1ca088243:;;
		_1366_dp+=(_2117_e * _2017_esign);
	} else if ((_1226_base == 16LLU)) {
		return __jule_func_result;;
	};
	if ((__jule_func_result.__jule_result_arg0 != 0LLU)) {
		__jule_func_result.__jule_result_arg1=(_1366_dp - _1356_ndMant);
	};
	__jule_func_result.__jule_result_arg6=true;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_bool _1e2189618_atof64exact(jule::U64 _48616_mantissa, jule::I64 _48635_exp, jule::Bool _48645_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((({ jule::U64 __jule_x = _48616_mantissa; jule::U64 __jule_y = _1e217d62e_f64info._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_48616_mantissa);
	if (_48645_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	{
		
		if ((_48635_exp == 0LL)) {
			_case_begin_1ca09126d:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp > 0LL) && (_48635_exp <= 37LL))) {
			_case_begin_1ca0912d4:;
			{
				if ((_48635_exp > 22LL)) {
					__jule_func_result.__jule_result_arg0*=_1e21889d0_f64pow10[(_48635_exp - 22LL)];
					_48635_exp=22LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 1000000000000000LL) || (__jule_func_result.__jule_result_arg0 < -1000000000000000LL))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = (__jule_func_result.__jule_result_arg0 * _1e21889d0_f64pow10[_48635_exp]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp < 0LL) && (_48635_exp >= -22LL))) {
			_case_begin_1ca09134a:;
			{
				__jule_func_result.__jule_result_arg0 = ({ jule::F64 __jule_x = __jule_func_result.__jule_result_arg0; jule::F64 __jule_y = _1e21889d0_f64pow10[(-(_48635_exp))]; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); });
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1ca091180:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1e2189a47_atof32exact(jule::U64 _52016_mantissa, jule::I64 _52035_exp, jule::Bool _52049_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((({ jule::U64 __jule_x = _52016_mantissa; jule::U64 __jule_y = _1e217d332_f32info._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_52016_mantissa);
	if (_52049_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	{
		
		if ((_52035_exp == 0LL)) {
			_case_begin_1ca0954d6:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp > 0LL) && (_52035_exp <= 17LL))) {
			_case_begin_1ca09554c:;
			{
				if ((_52035_exp > 10LL)) {
					__jule_func_result.__jule_result_arg0*=_1e2188d10_f32pow10[(_52035_exp - 10LL)];
					_52035_exp=10LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 10000000.0f) || (__jule_func_result.__jule_result_arg0 < -10000000.0f))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = (__jule_func_result.__jule_result_arg0 * _1e2188d10_f32pow10[_52035_exp]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp < 0LL) && (_52035_exp >= -10LL))) {
			_case_begin_1ca0955b3:;
			{
				__jule_func_result.__jule_result_arg0 = ({ jule::F32 __jule_x = __jule_func_result.__jule_result_arg0; jule::F32 __jule_y = _1e2188d10_f32pow10[(-(_52035_exp))]; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F32)(__jule_x / __jule_y)); });
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1ca0953e8:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple__1e1c55888_ConvError _1e218a0db_atofHex(_1e217ce36_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I64 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc) {
	__jule_tuple_f64__jule_tuple__1e1c55888_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	jule::I64 _5572_maxExp = ((static_cast<jule::I64>(({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*(_55613_flt))._field_expbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) + (*(_55613_flt))._field_bias) - 2LL);;
	jule::I64 _5582_minExp = ((*(_55613_flt))._field_bias + 1LL);;
	_55652_exp+=static_cast<jule::I64>((*(_55613_flt))._field_mantbits);
	while (((_55633_mantissa != 0LLU) && (({ jule::U64 __jule_x = _55633_mantissa; jule::U64 __jule_y = (jule::U64)((*(_55613_flt))._field_mantbits + 2LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 0LLU))) {
		{
			_55633_mantissa=(jule::U64)(_55633_mantissa << 1LLU);
			(_55652_exp)--;
		}
	_iter_next_1ca098d8b:;
	}
	_iter_end_1ca098d8b:;;
	if (_55673_trunc) {
		_55633_mantissa|=1LLU;
	};
	while ((({ jule::U64 __jule_x = _55633_mantissa; jule::U64 __jule_y = (jule::U64)((jule::U64)(1LLU + (*(_55613_flt))._field_mantbits) + 2LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) != 0LLU)) {
		{
			_55633_mantissa=((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU));
			(_55652_exp)++;
		}
	_iter_next_1ca09b168:;
	}
	_iter_end_1ca09b168:;;
	while (((_55633_mantissa > 1LLU) && (_55652_exp < (_5582_minExp - 2LL)))) {
		{
			_55633_mantissa=((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU));
			(_55652_exp)++;
		}
	_iter_next_1ca09b542:;
	}
	_iter_end_1ca09b542:;;
	jule::U64 _5886_round = (_55633_mantissa & 3LLU);;
	_55633_mantissa=(_55633_mantissa >> 2LLU);
	_5886_round|=(_55633_mantissa & 1LLU);
	_55652_exp+=2LL;
	if ((_5886_round == 3LLU)) {
		(_55633_mantissa)++;
		if ((_55633_mantissa == ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(1LLU + (*(_55613_flt))._field_mantbits); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }))) {
			_55633_mantissa=(_55633_mantissa >> 1LLU);
			(_55652_exp)++;
		};
	};
	if ((({ jule::U64 __jule_x = _55633_mantissa; jule::U64 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 0LLU)) {
		_55652_exp=(*(_55613_flt))._field_bias;
	};
	jule::I64 _6036_err = static_cast<jule::I64>(0LL);;
	if ((_55652_exp > _5572_maxExp)) {
		_55633_mantissa=static_cast<jule::U64>(({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));
		_55652_exp=(_5572_maxExp + 1LL);
		_6036_err=static_cast<jule::I64>(1LL);
	};
	jule::U64 _6106_bits = (_55633_mantissa & (jule::U64)(({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LLU));;
	_6106_bits|=({ jule::U64 __jule_x = static_cast<jule::U64>(((_55652_exp - (*(_55613_flt))._field_bias) & static_cast<jule::I64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*(_55613_flt))._field_expbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL)))); jule::U64 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	if (_55662_neg) {
		_6106_bits|=({ jule::U64 __jule_x = ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }); jule::U64 __jule_y = (*(_55613_flt))._field_expbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	};
	if (_1e217ce36_floatInfo_eq(&(*(_55613_flt)), _1e217d332_f32info)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1e2142071_F32FromBits(static_cast<jule::U32>(_6106_bits)));
		__jule_func_result.__jule_result_arg1 = _6036_err;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _1e214267b_F64FromBits(_6106_bits);
	__jule_func_result.__jule_result_arg1 = _6036_err;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1e1c55888_ConvError _1e218a4b5_atof32(jule::Str _62111_s) {
	__jule_tuple_f32__jule_tuple_int__jule_tuple__1e1c55888_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6233_val;
		jule::I64 _6238__n;
		jule::Bool _62312_ok;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1e2187803_special(_62111_s);
			_6233_val = __jule_assign_result.__jule_result_arg0;
			_6238__n = __jule_assign_result.__jule_result_arg1;
			_62312_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_62312_ok) {
			__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_6233_val);
			__jule_func_result.__jule_result_arg1 = _6238__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6292_mantissa;
	jule::I64 _62912_exp;
	jule::Bool _62917_neg;
	jule::Bool _62922_trunc;
	jule::Bool _62929_hex;
	jule::I64 _62934__n;
	jule::Bool _62942_ok;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1e2187abc_readFloat(&(_62111_s));
		_6292_mantissa = __jule_assign_result.__jule_result_arg0;
		_62912_exp = __jule_assign_result.__jule_result_arg1;
		_62917_neg = __jule_assign_result.__jule_result_arg2;
		_62922_trunc = __jule_assign_result.__jule_result_arg3;
		_62929_hex = __jule_assign_result.__jule_result_arg4;
		_62934__n = __jule_assign_result.__jule_result_arg5;
		_62942_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_62934__n;
	if ((!(_62942_ok))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_62929_hex) {
		jule::F64 _6367_ff = 0LL;;
		({
			__jule_tuple_f64__jule_tuple__1e1c55888_ConvError __jule_assign_result = _1e218a0db_atofHex(&(_1e217d332_f32info), _6292_mantissa, _62912_exp, _62917_neg, _62922_trunc);
			_6367_ff = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_6367_ff);
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_62922_trunc))) {
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1e2189a47_atof32exact(_6292_mantissa, _62912_exp, _62917_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_62942_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_62942_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1e2185713_eiselLemire32(_6292_mantissa, _62912_exp, _62917_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_62942_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62942_ok) {
			if ((!(_62922_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F32 _6588_fUp = static_cast<jule::F32>(0.0f);;
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1e2185713_eiselLemire32((jule::U64)(_6292_mantissa + 1LLU), _62912_exp, _62917_neg);
				_6588_fUp = __jule_assign_result.__jule_result_arg0;
				_62942_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_62942_ok && (__jule_func_result.__jule_result_arg0 == _6588_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1e219181d_decimal _6676_d = _1e219181d_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	if ((!(_1e2188282_set(&_6676_d, _223c7a2b5_StrBytes(_62111_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _6712_b;
	jule::Bool _6715_ovf;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1e21885c3_floatBits(&_6676_d, &(_1e217d332_f32info));
		_6712_b = __jule_assign_result.__jule_result_arg0;
		_6715_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=_1e2142071_F32FromBits(static_cast<jule::U32>(_6712_b));
	if (_6715_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1e1c55888_ConvError _1e218a707_atof64(jule::Str _67911_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1e1c55888_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6813_val;
		jule::I64 _6818__n;
		jule::Bool _68112_ok;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1e2187803_special(_67911_s);
			_6813_val = __jule_assign_result.__jule_result_arg0;
			_6818__n = __jule_assign_result.__jule_result_arg1;
			_68112_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_68112_ok) {
			__jule_func_result.__jule_result_arg0 = _6813_val;
			__jule_func_result.__jule_result_arg1 = _6818__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6872_mantissa;
	jule::I64 _68712_exp;
	jule::Bool _68717_neg;
	jule::Bool _68722_trunc;
	jule::Bool _68729_hex;
	jule::I64 _68734__n;
	jule::Bool _68742_ok;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1e2187abc_readFloat(&(_67911_s));
		_6872_mantissa = __jule_assign_result.__jule_result_arg0;
		_68712_exp = __jule_assign_result.__jule_result_arg1;
		_68717_neg = __jule_assign_result.__jule_result_arg2;
		_68722_trunc = __jule_assign_result.__jule_result_arg3;
		_68729_hex = __jule_assign_result.__jule_result_arg4;
		_68734__n = __jule_assign_result.__jule_result_arg5;
		_68742_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_68734__n;
	if ((!(_68742_ok))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_68729_hex) {
		({
			__jule_tuple_f64__jule_tuple__1e1c55888_ConvError __jule_assign_result = _1e218a0db_atofHex(&(_1e217d62e_f64info), _6872_mantissa, _68712_exp, _68717_neg, _68722_trunc);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_68722_trunc))) {
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1e2189618_atof64exact(_6872_mantissa, _68712_exp, _68717_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_68742_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_68742_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1e2185290_eiselLemire64(_6872_mantissa, _68712_exp, _68717_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_68742_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_68742_ok) {
			if ((!(_68722_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F64 _7158_fUp = 0LL;;
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1e2185290_eiselLemire64((jule::U64)(_6872_mantissa + 1LLU), _68712_exp, _68717_neg);
				_7158_fUp = __jule_assign_result.__jule_result_arg0;
				_68742_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_68742_ok && (__jule_func_result.__jule_result_arg0 == _7158_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1e219181d_decimal _7246_d = _1e219181d_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	if ((!(_1e2188282_set(&_7246_d, _223c7a2b5_StrBytes(_67911_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _7282_b;
	jule::Bool _7285_ovf;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1e21885c3_floatBits(&_7246_d, &(_1e217d62e_f64info));
		_7282_b = __jule_assign_result.__jule_result_arg0;
		_7285_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=_1e214267b_F64FromBits(_7282_b);
	if (_7285_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1e1c55888_ConvError _1e218aa7b_parseFloatPrefix(jule::Str* _73622_s, jule::I64 _73630_bitSize) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1e1c55888_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	if ((_73630_bitSize == 32LL)) {
		jule::F32 _7383_f;
		jule::I64 _7386_n;
		jule::I64 _7389_err;
		({
			__jule_tuple_f32__jule_tuple_int__jule_tuple__1e1c55888_ConvError __jule_assign_result = _1e218a4b5_atof32((*(_73622_s)));
			_7383_f = __jule_assign_result.__jule_result_arg0;
			_7386_n = __jule_assign_result.__jule_result_arg1;
			_7389_err = __jule_assign_result.__jule_result_arg2;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_7383_f);
		__jule_func_result.__jule_result_arg1 = _7386_n;
		__jule_func_result.__jule_result_arg2 = _7389_err;
		return __jule_func_result;;
	};
	__jule_func_result = std::move(_1e218a707_atof64((*(_73622_s))));
return __jule_func_result;;
}



inline jule::Exceptional<jule::F64> _1e218ae00_ParseFloat(jule::Str _76815_s, jule::I64 _76823_bitSize) {
	jule::F64 _7692_f;
	jule::I64 _7695_n;
	jule::I64 _7698_err;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__1e1c55888_ConvError __jule_assign_result = _1e218aa7b_parseFloatPrefix(&(_76815_s), _76823_bitSize);
		_7692_f = __jule_assign_result.__jule_result_arg0;
		_7695_n = __jule_assign_result.__jule_result_arg1;
		_7698_err = __jule_assign_result.__jule_result_arg2;
	});
	if (((_7695_n != _76815_s.len()) && ((_7698_err == static_cast<jule::I64>(0LL)) || (_7698_err != static_cast<jule::I64>(2LL))))) {
		return jule::Exceptional<jule::F64>{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0)};
	};
	if ((_7698_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::F64>{.error=jule::Any(_7698_err, &__jule_any_type0)};
	};
	return jule::Exceptional<jule::F64>{.result=_7692_f};;
}



inline void _1e218b780_ryuFtoaFixed32(_1e217dab3_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I64 _4956_exp, jule::I64 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		__jule_panic_s(jule::Str::lit("ryuFtoaFixed32 called with negative prec", 40) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:3"));;
	};
	if ((_4966_prec > 9LL)) {
		__jule_panic_s(jule::Str::lit("ryuFtoaFixed32 called with prec > 9", 35) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:3"));;
	};
	if ((_4945_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_4924_d))._field_nd = ___jule_assign_arg;
			(*(_4924_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _626_e2 = _4956_exp;;
	jule::I64 _632_b = _22431cd63_Len32(_4945_mant);;
	if ((_632_b < 25LL)) {
		_4945_mant = ({ jule::U32 __jule_x = _4945_mant; jule::U64 __jule_y = static_cast<jule::U64>((25LL - _632_b)); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); });
		_626_e2+=(static_cast<jule::I64>(_632_b) - 25LL);
	};
	jule::I64 _742_q = (((-(_1e218ccc0_mulByLog2Log10((_626_e2 + 24LL)))) + _4966_prec) - 1LL);;
	jule::Bool _796_exact = ((_742_q <= 27LL) && (_742_q >= 0LL));;
	jule::U32 _816_di;
	jule::I64 _8110_dexp2;
	jule::Bool _8121_d0;
	({
		__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1e218e6b7_mult64bitPow10(_4945_mant, _626_e2, _742_q);
		_816_di = __jule_assign_result.__jule_result_arg0;
		_8110_dexp2 = __jule_assign_result.__jule_result_arg1;
		_8121_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_8110_dexp2 >= 0LL)) {
		__jule_panic_s(jule::Str::lit("not enough significant bits after mult64bitPow10", 48) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:3"));;
	};
	if ((((_742_q < 0LL) && (_742_q >= -10LL)) && _1e218ee6a_divisibleByPow5(static_cast<jule::U64>(_4945_mant), (-(_742_q))))) {
		_796_exact=true;
		_8121_d0=true;
	};
	jule::U64 _942_extra = static_cast<jule::U64>((-(_8110_dexp2)));;
	jule::U32 _952_extraMask = static_cast<jule::U32>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = _942_extra; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL));;
	jule::U32 _976_dfrac = static_cast<jule::U32>(0LLU);;
	({
		jule::U32 ___jule_assign_arg = ({ jule::U32 __jule_x = _816_di; jule::U64 __jule_y = _942_extra; ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x >> __jule_y)); });
		jule::U32 _1___jule_assign_arg = (_816_di & _952_extraMask);
		_816_di = ___jule_assign_arg;
		_976_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _996_roundUp = false;;
	if (_796_exact) {
		_996_roundUp=(((_976_dfrac > ({ jule::U32 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_942_extra - 1LLU); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); })) || ((_976_dfrac == ({ jule::U32 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_942_extra - 1LLU); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); })) && (!(_8121_d0)))) || (((_976_dfrac == ({ jule::U32 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_942_extra - 1LLU); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); })) && _8121_d0) && ((_816_di & 1LLU) == 1LLU)));
	} else {
		_996_roundUp=(({ jule::U32 __jule_x = _976_dfrac; jule::U64 __jule_y = (jule::U64)(_942_extra - 1LLU); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x >> __jule_y)); }) == 1LLU);
	};
	if ((_976_dfrac != 0LLU)) {
		_8121_d0=false;
	};
	_1e218c561_formatDecimal(_4924_d, static_cast<jule::U64>(_816_di), (!(_8121_d0)), _996_roundUp, _4966_prec);
	(*(_4924_d))._field_dp-=_742_q;
}



inline void _1e218bc25_ryuFtoaFixed64(_1e217dab3_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I64 _12156_exp, jule::I64 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		__jule_panic_s(jule::Str::lit("ryuFtoaFixed64 called with prec > 18", 36) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:3"));;
	};
	if ((_12145_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_12124_d))._field_nd = ___jule_assign_arg;
			(*(_12124_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _1316_e2 = _12156_exp;;
	jule::I64 _1322_b = _22431d12c_Len64(_12145_mant);;
	if ((_1322_b < 55LL)) {
		_12145_mant=({ jule::U64 __jule_x = _12145_mant; jule::U64 __jule_y = static_cast<jule::U64>((55LL - _1322_b)); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
		_1316_e2+=(static_cast<jule::I64>(_1322_b) - 55LL);
	};
	jule::I64 _1462_q = (((-(_1e218ccc0_mulByLog2Log10((_1316_e2 + 54LL)))) + _12166_prec) - 1LL);;
	jule::Bool _1516_exact = ((_1462_q <= 55LL) && (_1462_q >= 0LL));;
	jule::U64 _1536_di;
	jule::I64 _15310_dexp2;
	jule::Bool _15321_d0;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1e218eae6_mult128bitPow10(_12145_mant, _1316_e2, _1462_q);
		_1536_di = __jule_assign_result.__jule_result_arg0;
		_15310_dexp2 = __jule_assign_result.__jule_result_arg1;
		_15321_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_15310_dexp2 >= 0LL)) {
		__jule_panic_s(jule::Str::lit("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:3"));;
	};
	if ((((_1462_q < 0LL) && (_1462_q >= -22LL)) && _1e218ee6a_divisibleByPow5(_12145_mant, (-(_1462_q))))) {
		_1516_exact=true;
		_15321_d0=true;
	};
	jule::U64 _1662_extra = static_cast<jule::U64>((-(_15310_dexp2)));;
	jule::U64 _1672_extraMask = static_cast<jule::U64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = _1662_extra; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL));;
	jule::U64 _1696_dfrac = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = ({ jule::U64 __jule_x = _1536_di; jule::U64 __jule_y = _1662_extra; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		jule::U64 _1___jule_assign_arg = (_1536_di & _1672_extraMask);
		_1536_di = ___jule_assign_arg;
		_1696_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _1716_roundUp = false;;
	if (_1516_exact) {
		_1716_roundUp=(((_1696_dfrac > ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_1662_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) || ((_1696_dfrac == ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_1662_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) && (!(_15321_d0)))) || (((_1696_dfrac == ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_1662_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) && _15321_d0) && ((_1536_di & 1LLU) == 1LLU)));
	} else {
		_1716_roundUp=(({ jule::U64 __jule_x = _1696_dfrac; jule::U64 __jule_y = (jule::U64)(_1662_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 1LLU);
	};
	if ((_1696_dfrac != 0LLU)) {
		_15321_d0=false;
	};
	_1e218c561_formatDecimal(_12124_d, _1536_di, (!(_15321_d0)), _1716_roundUp, _12166_prec);
	(*(_12124_d))._field_dp-=_1462_q;
}



inline void _1e218c561_formatDecimal(_1e217dab3_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I64 _20088_prec) {
	jule::U64 _2012_max = _1e218c066_u64pow10[_20088_prec];;
	jule::I64 _2026_trimmed = 0LL;;
	while ((_20044_m >= _2012_max)) {
		{
			jule::U64 _2043_a;
			jule::U64 _2046_b;
			({
				jule::U64 ___jule_assign_arg = (_20044_m / 10LLU);
				jule::U64 _1___jule_assign_arg = (_20044_m % 10LL);
				_2043_a = ___jule_assign_arg;
				_2046_b = _1___jule_assign_arg;
			});
			_20044_m=_2043_a;
			(_2026_trimmed)++;
			if ((_2046_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_2046_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_2046_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_1ca0d149a:;
	}
	_iter_end_1ca0d149a:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2012_max)) {
		_20044_m=(_20044_m / 10LLU);
		(_2026_trimmed)++;
	};
	jule::U64 _2296_n = static_cast<jule::U64>(_20088_prec);;
	(*(_20023_d))._field_nd=static_cast<jule::I64>(_20088_prec);
	jule::U64 _2316_v = _20044_m;;
	while ((_2316_v >= 100LLU)) {
		{
			jule::U64 _2337_v1 = static_cast<jule::U64>(0LLU);;
			jule::U64 _2347_v2 = static_cast<jule::U64>(0LLU);;
			if (((_2316_v >> 32LLU) == 0LLU)) {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>((static_cast<jule::U32>(_2316_v) / 100LLU));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((static_cast<jule::U32>(_2316_v) % 100LL));
					_2337_v1 = ___jule_assign_arg;
					_2347_v2 = _1___jule_assign_arg;
				});
			} else {
				({
					jule::U64 ___jule_assign_arg = (_2316_v / 100LLU);
					jule::U64 _1___jule_assign_arg = (_2316_v % 100LL);
					_2337_v1 = ___jule_assign_arg;
					_2347_v2 = _1___jule_assign_arg;
				});
			};
			_2296_n-=2LLU;
			(*(_20023_d))._field_d[static_cast<jule::I64>((jule::U64)(_2296_n + 1LLU))]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U64)((jule::U64)(2LL * _2347_v2) + 1LLU)));
			(*(_20023_d))._field_d[static_cast<jule::I64>(_2296_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U64)(2LL * _2347_v2)));
			_2316_v=_2337_v1;
		}
	_iter_next_1ca0d4657:;
	}
	_iter_end_1ca0d4657:;;
	if ((_2316_v > 0LLU)) {
		(_2296_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_2296_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U64)((jule::U64)(2LL * _2316_v) + 1LLU)));
	};
	if ((_2316_v >= 10LLU)) {
		(_2296_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_2296_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U64)(2LL * _2316_v)));
	};
	while (((*(_20023_d))._field_d[((*(_20023_d))._field_nd - 1LL)] == '0')) {
		{
			((*(_20023_d))._field_nd)--;
			(_2026_trimmed)++;
		}
	_iter_next_1ca0da11e:;
	}
	_iter_end_1ca0da11e:;;
	(*(_20023_d))._field_dp=((*(_20023_d))._field_nd + _2026_trimmed);
}



inline void _1e218ca39_ryuFtoaShortest(_1e217dab3_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I64 _26157_exp, _1e217ce36_floatInfo* _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_26125_d))._field_nd = ___jule_assign_arg;
			(*(_26125_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	if (((_26157_exp <= 0LL) && (_22431738a_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant = ({ jule::U64 __jule_x = _26146_mant; jule::U64 __jule_y = static_cast<jule::U64>((-(_26157_exp))); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		_1e218db17_ryuDigits(_26125_d, _26146_mant, _26146_mant, _26146_mant, true, false);
		return;;
	};
	jule::U64 _2732_ml;
	jule::U64 _2736_mc;
	jule::U64 _27310_mu;
	jule::I64 _27318_e2;
	({
		__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_assign_result = _1e218d4b8_computeBounds(_26146_mant, _26157_exp, _26168_flt);
		_2732_ml = __jule_assign_result.__jule_result_arg0;
		_2736_mc = __jule_assign_result.__jule_result_arg1;
		_27310_mu = __jule_assign_result.__jule_result_arg2;
		_27318_e2 = __jule_assign_result.__jule_result_arg3;
	});
	if ((_27318_e2 == 0LL)) {
		_1e218db17_ryuDigits(_26125_d, _2732_ml, _2736_mc, _27310_mu, true, false);
		return;;
	};
	jule::I64 _2792_q = (_1e218ccc0_mulByLog2Log10((-(_27318_e2))) + 1LL);;
	jule::U64 _2836_dl = static_cast<jule::U64>(0LLU);;
	jule::U64 _2846_dc = static_cast<jule::U64>(0LLU);;
	jule::U64 _2856_du = static_cast<jule::U64>(0LLU);;
	jule::Bool _2866_dl0 = false;;
	jule::Bool _2876_dc0 = false;;
	jule::Bool _2886_du0 = false;;
	if (_1e217ce36_floatInfo_eq(&(*(_26168_flt)), _1e217d332_f32info)) {
		jule::U32 _2907_dl32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _2917_dc32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _2927_du32 = static_cast<jule::U32>(0LLU);;
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1e218e6b7_mult64bitPow10(static_cast<jule::U32>(_2732_ml), _27318_e2, _2792_q);
			_2907_dl32 = __jule_assign_result.__jule_result_arg0;
			_2866_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1e218e6b7_mult64bitPow10(static_cast<jule::U32>(_2736_mc), _27318_e2, _2792_q);
			_2917_dc32 = __jule_assign_result.__jule_result_arg0;
			_2876_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1e218e6b7_mult64bitPow10(static_cast<jule::U32>(_27310_mu), _27318_e2, _2792_q);
			_2927_du32 = __jule_assign_result.__jule_result_arg0;
			_27318_e2 = __jule_assign_result.__jule_result_arg1;
			_2886_du0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(_2907_dl32);
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(_2917_dc32);
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(_2927_du32);
			_2836_dl = ___jule_assign_arg;
			_2846_dc = _1___jule_assign_arg;
			_2856_du = _2___jule_assign_arg;
		});
	} else {
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1e218eae6_mult128bitPow10(_2732_ml, _27318_e2, _2792_q);
			_2836_dl = __jule_assign_result.__jule_result_arg0;
			_2866_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1e218eae6_mult128bitPow10(_2736_mc, _27318_e2, _2792_q);
			_2846_dc = __jule_assign_result.__jule_result_arg0;
			_2876_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1e218eae6_mult128bitPow10(_27310_mu, _27318_e2, _2792_q);
			_2856_du = __jule_assign_result.__jule_result_arg0;
			_27318_e2 = __jule_assign_result.__jule_result_arg1;
			_2886_du0 = __jule_assign_result.__jule_result_arg2;
		});
	};
	if ((_27318_e2 >= 0LL)) {
		__jule_panic_s(jule::Str::lit("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:3"));;
	};
	if ((_2792_q > 55LL)) {
		({
			jule::Bool ___jule_assign_arg = false;
			jule::Bool _1___jule_assign_arg = false;
			jule::Bool _2___jule_assign_arg = false;
			_2866_dl0 = ___jule_assign_arg;
			_2876_dc0 = _1___jule_assign_arg;
			_2886_du0 = _2___jule_assign_arg;
		});
	};
	if (((_2792_q < 0LL) && (_2792_q >= -24LL))) {
		if (_1e218ee6a_divisibleByPow5(_2732_ml, (-(_2792_q)))) {
			_2866_dl0=true;
		};
		if (_1e218ee6a_divisibleByPow5(_2736_mc, (-(_2792_q)))) {
			_2876_dc0=true;
		};
		if (_1e218ee6a_divisibleByPow5(_27310_mu, (-(_2792_q)))) {
			_2886_du0=true;
		};
	};
	jule::U64 _3252_extra = static_cast<jule::U64>((-(_27318_e2)));;
	jule::U64 _3262_extraMask = static_cast<jule::U64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = _3252_extra; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL));;
	jule::U64 _3286_fracl = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = ({ jule::U64 __jule_x = _2836_dl; jule::U64 __jule_y = _3252_extra; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		jule::U64 _1___jule_assign_arg = (_2836_dl & _3262_extraMask);
		_2836_dl = ___jule_assign_arg;
		_3286_fracl = _1___jule_assign_arg;
	});
	jule::U64 _3306_fracc = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = ({ jule::U64 __jule_x = _2846_dc; jule::U64 __jule_y = _3252_extra; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		jule::U64 _1___jule_assign_arg = (_2846_dc & _3262_extraMask);
		_2846_dc = ___jule_assign_arg;
		_3306_fracc = _1___jule_assign_arg;
	});
	jule::U64 _3326_fracu = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = ({ jule::U64 __jule_x = _2856_du; jule::U64 __jule_y = _3252_extra; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		jule::U64 _1___jule_assign_arg = (_2856_du & _3262_extraMask);
		_2856_du = ___jule_assign_arg;
		_3326_fracu = _1___jule_assign_arg;
	});
	jule::Bool _3386_uok = ((!(_2886_du0)) || (_3326_fracu > 0LLU));;
	if ((_2886_du0 && (_3326_fracu == 0LLU))) {
		_3386_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_3386_uok))) {
		(_2856_du)--;
	};
	jule::Bool _3476_cup = false;;
	if (_2876_dc0) {
		_3476_cup=((_3306_fracc > ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_3252_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) || ((_3306_fracc == ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_3252_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) && ((_2846_dc & 1LLU) == 1LLU)));
	} else {
		_3476_cup=(({ jule::U64 __jule_x = _3306_fracc; jule::U64 __jule_y = (jule::U64)(_3252_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 1LLU);
	};
	jule::Bool _3612_lok = ((_2866_dl0 && (_3286_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3612_lok))) {
		(_2836_dl)++;
	};
	jule::Bool _3662_c0 = (_2876_dc0 && (_3306_fracc == 0LLU));;
	_1e218db17_ryuDigits(_26125_d, _2836_dl, _2846_dc, _2856_du, _3662_c0, _3476_cup);
	(*(_26125_d))._field_dp-=_2792_q;
}



inline jule::I64 _1e218ccc0_mulByLog2Log10(jule::I64 _37719_x) {
	return ((_37719_x * 78913LL) >> 18LL);;
}



inline jule::I64 _1e218d089_mulByLog10Log2(jule::I64 _38719_x) {
	return ((_38719_x * 108853LL) >> 15LL);;
}



inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1e218d4b8_computeBounds(jule::U64 _39518_mant, jule::I64 _39529_exp, _1e217ce36_floatInfo* _3963_flt) {
	__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0;
	__jule_func_result.__jule_result_arg3 = 0;
	if (((_39518_mant != ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (*(_3963_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) || (_39529_exp == (((*(_3963_flt))._field_bias + 1LL) - static_cast<jule::I64>((*(_3963_flt))._field_mantbits))))) {
		({
			jule::U64 ___jule_assign_arg = (jule::U64)((jule::U64)(2LL * _39518_mant) - 1LLU);
			jule::U64 _1___jule_assign_arg = (jule::U64)(2LL * _39518_mant);
			jule::U64 _2___jule_assign_arg = (jule::U64)((jule::U64)(2LL * _39518_mant) + 1LLU);
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=(_39529_exp - 1LL);
	} else {
		({
			jule::U64 ___jule_assign_arg = (jule::U64)((jule::U64)(4LL * _39518_mant) - 1LLU);
			jule::U64 _1___jule_assign_arg = (jule::U64)(4LL * _39518_mant);
			jule::U64 _2___jule_assign_arg = (jule::U64)((jule::U64)(4LL * _39518_mant) + 2LLU);
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=(_39529_exp - 2LL);
	};
	return __jule_func_result;;
}



inline void _1e218db17_ryuDigits(_1e217dab3_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _4106_lhi;
	jule::U32 _41011_llo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1e2190234_divmod1e9(_40936_lower);
		_4106_lhi = __jule_assign_result.__jule_result_arg0;
		_41011_llo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4112_chi;
	jule::U32 _4117_clo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1e2190234_divmod1e9(_40948_central);
		_4112_chi = __jule_assign_result.__jule_result_arg0;
		_4117_clo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4122_uhi;
	jule::U32 _4127_ulo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1e2190234_divmod1e9(_40962_upper);
		_4122_uhi = __jule_assign_result.__jule_result_arg0;
		_4127_ulo = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4122_uhi == 0LLU)) {
		_1e218e288_ryuDigits32(_40919_d, _41011_llo, _4117_clo, _4127_ulo, _40978_c0, _40992_cup, 8LL);
	} else if ((_4106_lhi < _4122_uhi)) {
		if ((_41011_llo != 0LLU)) {
			(_4106_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_4117_clo == 0LLU));
		_40992_cup=((_4117_clo > 500000000LL) || ((_4117_clo == 500000000LL) && _40992_cup));
		_1e218e288_ryuDigits32(_40919_d, _4106_lhi, _4112_chi, _4122_uhi, _40978_c0, _40992_cup, 8LL);
		(*(_40919_d))._field_dp+=9LL;
	} else {
		(*(_40919_d))._field_nd=0LL;
		jule::U64 _4287_n = static_cast<jule::U64>(9LLU);;
		jule::U32 _4297_v = _4112_chi;;
		while ((_4297_v > 0LLU)) {
			{
				jule::U32 _4314_v1;
				jule::U32 _4318_v2;
				({
					jule::U32 ___jule_assign_arg = (_4297_v / 10LLU);
					jule::U32 _1___jule_assign_arg = (_4297_v % 10LL);
					_4314_v1 = ___jule_assign_arg;
					_4318_v2 = _1___jule_assign_arg;
				});
				_4297_v=_4314_v1;
				(_4287_n)--;
				(*(_40919_d))._field_d[static_cast<jule::I64>(_4287_n)]=static_cast<jule::U8>((jule::U32)(_4318_v2 + '0'));
			}
		_iter_next_1ca107e61:;
		}
		_iter_end_1ca107e61:;;
		((*(_40919_d))._field_d).mut_slice(static_cast<jule::I64>(_4287_n));;
		(*(_40919_d))._field_nd=static_cast<jule::I64>((jule::U64)(9LL - _4287_n));
		_1e218e288_ryuDigits32(_40919_d, _41011_llo, _4117_clo, _4127_ulo, _40978_c0, _40992_cup, ((*(_40919_d))._field_nd + 8LL));
	};
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[((*(_40919_d))._field_nd - 1LL)] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
		}
	_iter_next_1ca108a22:;
	}
	_iter_end_1ca108a22:;;
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[0LL] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
			((*(_40919_d))._field_dp)--;
			((*(_40919_d))._field_d).mut_slice(1LL);;
		}
	_iter_next_1ca10a848:;
	}
	_iter_end_1ca10a848:;;
}



inline void _1e218e288_ryuDigits32(_1e217dab3_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4556_upper, jule::Bool _45522_c0, jule::Bool _45536_cup, jule::I64 _45551_endindex) {
	if ((_4556_upper == 0LLU)) {
		(*(_45421_d))._field_dp=(_45551_endindex + 1LL);
		return;;
	};
	jule::I64 _4606_trimmed = 0LL;;
	jule::I64 _4636_cNextDigit = 0LL;;
	while ((_4556_upper > 0LLU)) {
		{
			jule::U32 _4703_l = ((jule::U32)(_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _4717_c;
			jule::U32 _47114_cdigit;
			({
				jule::U32 ___jule_assign_arg = (_45458_central / 10LLU);
				jule::U32 _1___jule_assign_arg = (_45458_central % 10LL);
				_4717_c = ___jule_assign_arg;
				_47114_cdigit = _1___jule_assign_arg;
			});
			jule::U32 _4723_u = (_4556_upper / 10LLU);;
			if ((_4703_l > _4723_u)) {
				goto _iter_end_1ca10d1db;
			};
			if (((_4703_l == (jule::U32)(_4717_c + 1LLU)) && (_4717_c < _4723_u))) {
				(_4717_c)++;
				_47114_cdigit=0LLU;
				_45536_cup=false;
			};
			(_4606_trimmed)++;
			_45522_c0=(_45522_c0 && (_4636_cNextDigit == 0LL));
			_4636_cNextDigit=static_cast<jule::I64>(_47114_cdigit);
			({
				jule::U32 ___jule_assign_arg = _4703_l;
				jule::U32 _1___jule_assign_arg = _4717_c;
				jule::U32 _2___jule_assign_arg = _4723_u;
				_45442_lower = ___jule_assign_arg;
				_45458_central = _1___jule_assign_arg;
				_4556_upper = _2___jule_assign_arg;
			});
		}
	_iter_next_1ca10d1db:;
	}
	_iter_end_1ca10d1db:;;
	if ((_4606_trimmed > 0LL)) {
		_45536_cup=(((_4636_cNextDigit > 5LL) || ((_4636_cNextDigit == 5LL) && (!(_45522_c0)))) || (((_4636_cNextDigit == 5LL) && _45522_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4556_upper) && _45536_cup)) {
		(_45458_central)++;
	};
	_45551_endindex-=_4606_trimmed;
	jule::U32 _5096_v = _45458_central;;
	jule::I64 _5106_n = _45551_endindex;;
	while ((_5106_n > (*(_45421_d))._field_nd)) {
		{
			jule::U32 _5123_v1;
			jule::U32 _5127_v2;
			({
				jule::U32 ___jule_assign_arg = (_5096_v / 100LLU);
				jule::U32 _1___jule_assign_arg = (_5096_v % 100LL);
				_5123_v1 = ___jule_assign_arg;
				_5127_v2 = _1___jule_assign_arg;
			});
			(*(_45421_d))._field_d[_5106_n]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U32)((jule::U32)(2LL * _5127_v2) + 1LLU)));
			(*(_45421_d))._field_d[(_5106_n - 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U32)(2LL * _5127_v2)));
			_5106_n-=2LL;
			_5096_v=_5123_v1;
		}
	_iter_next_1ca11429c:;
	}
	_iter_end_1ca11429c:;;
	if ((_5106_n == (*(_45421_d))._field_nd)) {
		(*(_45421_d))._field_d[_5106_n]=static_cast<jule::U8>((jule::U32)(_5096_v + '0'));
	};
	(*(_45421_d))._field_nd=(_45551_endindex + 1LL);
	(*(_45421_d))._field_dp=((*(_45421_d))._field_nd + _4606_trimmed);
}



inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1e218e6b7_mult64bitPow10(jule::U32 _53419_m, jule::I64 _53431_e2, jule::I64 _53440_q) {
	__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_53440_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (jule::U32)(_53419_m << 6LLU);
		__jule_func_result.__jule_result_arg1 = (_53431_e2 - 6LL);
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		__jule_panic_s(jule::Str::lit("mult64bitPow10: power of 10 is out of range", 43) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:3"));;
	};
	jule::U64 _5436_pow = _1e2186109_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_5436_pow+=1LLU;
	};
	jule::U64 _5482_hi;
	jule::U64 _5486_lo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _2243206c3_Mul64(static_cast<jule::U64>(_53419_m), _5436_pow);
		_5482_hi = __jule_assign_result.__jule_result_arg0;
		_5486_lo = __jule_assign_result.__jule_result_arg1;
	});
	_53431_e2+=((_1e218d089_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(((jule::U64)(_5482_hi << 7LLU) | (_5486_lo >> 57LLU)));
	__jule_func_result.__jule_result_arg1 = _53431_e2;
	__jule_func_result.__jule_result_arg2 = ((jule::U64)(_5486_lo << 7LLU) == 0LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1e218eae6_mult128bitPow10(jule::U64 _56220_m, jule::I64 _56232_e2, jule::I64 _56241_q) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_56241_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (jule::U64)(_56220_m << 8LLU);
		__jule_func_result.__jule_result_arg1 = (_56232_e2 - 8LL);
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		__jule_panic_s(jule::Str::lit("mult128bitPow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:3"));;
	};
	jule::Array<jule::U64,2> _5716_pow = _1e2186109_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_5716_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_1e218d089_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _5792_l1;
	jule::U64 _5796_l0;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _2243206c3_Mul64(_56220_m, _5716_pow[0LL]);
		_5792_l1 = __jule_assign_result.__jule_result_arg0;
		_5796_l0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5806_h1;
	jule::U64 _58010_h0;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _2243206c3_Mul64(_56220_m, _5716_pow[1LL]);
		_5806_h1 = __jule_assign_result.__jule_result_arg0;
		_58010_h0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5812_mid;
	jule::U64 _5817_carry;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _22431ddb9_Add64(_5792_l1, _58010_h0, 0LLU);
		_5812_mid = __jule_assign_result.__jule_result_arg0;
		_5817_carry = __jule_assign_result.__jule_result_arg1;
	});
	_5806_h1+=_5817_carry;
	__jule_func_result.__jule_result_arg0 = ((jule::U64)(_5806_h1 << 9LLU) | (_5812_mid >> 55LLU));
	__jule_func_result.__jule_result_arg1 = _56232_e2;
	__jule_func_result.__jule_result_arg2 = (((jule::U64)(_5812_mid << 9LLU) == 0LLU) && (_5796_l0 == 0LLU));
	return __jule_func_result;;
}



inline jule::Bool _1e218ee6a_divisibleByPow5(jule::U64 _58624_m, jule::I64 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;;
	};
	jule::I64 _5906_i = 0LL;;
	for (; (_5906_i < _58632_k); (_5906_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;;
			};
			_58624_m=(_58624_m / 5LLU);
		}
	_iter_next_1ca122321:;
	}
	_iter_end_1ca122321:;;
	return true;;
}



inline __jule_tuple_u32__jule_tuple_u32 _1e2190234_divmod1e9(jule::U64 _60214_x) {
	__jule_tuple_u32__jule_tuple_u32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>((_60214_x / 1000000000LL));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::U32>((_60214_x % 1000000000LL));
		return __jule_func_result;;
	};
}



inline void _1e219316b_trim(_1e219181d_decimal* _27414_a) {
	while ((((*(_27414_a))._field_nd > 0LL) && ((*(_27414_a))._field_d[((*(_27414_a))._field_nd - 1LL)] == '0'))) {
		{
			((*(_27414_a))._field_nd)--;
		}
	_iter_next_1ca125797:;
	}
	_iter_end_1ca125797:;;
	if (((*(_27414_a))._field_nd == 0LL)) {
		(*(_27414_a))._field_dp=0LL;
	};
}



inline void _1e2193457_rightShift(_1e219181d_decimal* _28420_a, jule::U64 _28432_k) {
	jule::I64 _2856_r = 0LL;;
	jule::I64 _2866_w = 0LL;;
	jule::U64 _2896_n = static_cast<jule::U64>(0LLU);;
	for (; (({ jule::U64 __jule_x = _2896_n; jule::U64 __jule_y = _28432_k; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 0LLU); (_2856_r)++) {
		{
			if ((_2856_r >= (*(_28420_a))._field_nd)) {
				if ((_2896_n == 0LLU)) {
					(*(_28420_a))._field_nd=0LL;
					return;;
				};
				while ((({ jule::U64 __jule_x = _2896_n; jule::U64 __jule_y = _28432_k; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 0LLU)) {
					{
						_2896_n=(jule::U64)(_2896_n * 10LLU);
						(_2856_r)++;
					}
				_iter_next_1ca128987:;
				}
				_iter_end_1ca128987:;;
				goto _iter_end_1ca12739d;
			};
			jule::U64 _3033_c = static_cast<jule::U64>((*(_28420_a))._field_d[_2856_r]);;
			_2896_n=(jule::U64)((jule::U64)((jule::U64)(_2896_n * 10LLU) + _3033_c) - '0');
		}
	_iter_next_1ca12739d:;
	}
	_iter_end_1ca12739d:;;
	(*(_28420_a))._field_dp-=(_2856_r - 1LL);
	jule::U64 _3082_mask = (jule::U64)(static_cast<jule::U64>(({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = _28432_k; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) - 1LLU);;
	for (; (_2856_r < (*(_28420_a))._field_nd); (_2856_r)++) {
		{
			jule::U64 _3123_c = static_cast<jule::U64>((*(_28420_a))._field_d[_2856_r]);;
			jule::U64 _3133_dig = ({ jule::U64 __jule_x = _2896_n; jule::U64 __jule_y = _28432_k; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });;
			_2896_n&=_3082_mask;
			(*(_28420_a))._field_d[_2866_w]=static_cast<jule::U8>((jule::U64)(_3133_dig + '0'));
			(_2866_w)++;
			_2896_n=(jule::U64)((jule::U64)((jule::U64)(_2896_n * 10LLU) + _3123_c) - '0');
		}
	_iter_next_1ca129d84:;
	}
	_iter_end_1ca129d84:;;
	while ((_2896_n > 0LLU)) {
		{
			jule::U64 _3223_dig = ({ jule::U64 __jule_x = _2896_n; jule::U64 __jule_y = _28432_k; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });;
			_2896_n&=_3082_mask;
			if ((_2866_w < 800LL)) {
				(*(_28420_a))._field_d[_2866_w]=static_cast<jule::U8>((jule::U64)(_3223_dig + '0'));
				(_2866_w)++;
			} else if ((_3223_dig > 0LLU)) {
				(*(_28420_a))._field_trunc=true;
			};
			_2896_n=(jule::U64)(_2896_n * 10LLU);
		}
	_iter_next_1ca12c22c:;
	}
	_iter_end_1ca12c22c:;;
	(*(_28420_a))._field_nd=_2866_w;
	_1e219316b_trim(_28420_a);
}



inline jule::Bool _1e219390d_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I64 _33835_end, jule::Str* _33846_s) {
	jule::I64 _3396_i = 0LL;;
	for (; (_3396_i < (*(_33846_s)).len()); (_3396_i)++) {
		{
			if ((_3396_i >= _33835_end)) {
				return true;;
			};
			if ((_33821_b[_3396_i] != (*(_33846_s))[_3396_i])) {
				return (_33821_b[_3396_i] < (*(_33846_s))[_3396_i]);;
			};
		}
	_iter_next_1ca12ee66:;
	}
	_iter_end_1ca12ee66:;;
	return false;;
}



inline void _1e2193bb6_leftShift(_1e219181d_decimal* _35219_a, jule::U64 _35231_k) {
	jule::I64 _3536_delta = _1e2191235_leftCheats[static_cast<jule::I64>(_35231_k)]._field_delta;;
	if (_1e219390d_prefixIsLessThan((*(_35219_a))._field_d, (*(_35219_a))._field_nd, &((*((&(_1e2191235_leftCheats[static_cast<jule::I64>(_35231_k)]._field_cutoff))))))) {
		(_3536_delta)--;
	};
	jule::I64 _3586_r = (*(_35219_a))._field_nd;;
	jule::I64 _3596_w = ((*(_35219_a))._field_nd + _3536_delta);;
	jule::U64 _3626_n = static_cast<jule::U64>(0LLU);;
	(_3586_r)--;
	for (; (_3586_r >= 0LL); (_3586_r)--) {
		{
			_3626_n+=({ jule::U64 __jule_x = (jule::U64)(static_cast<jule::U64>((*(_35219_a))._field_d[_3586_r]) - '0'); jule::U64 __jule_y = _35231_k; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
			jule::U64 _3663_quo = (_3626_n / 10LLU);;
			jule::U64 _3673_rem = (jule::U64)(_3626_n - (jule::U64)(10LLU * _3663_quo));;
			(_3596_w)--;
			if ((_3596_w < 800LL)) {
				(*(_35219_a))._field_d[_3596_w]=static_cast<jule::U8>((jule::U64)(_3673_rem + '0'));
			} else if ((_3673_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3626_n=_3663_quo;
		}
	_iter_next_1ca1382e3:;
	}
	_iter_end_1ca1382e3:;;
	while ((_3626_n > 0LLU)) {
		{
			jule::U64 _3793_quo = (_3626_n / 10LLU);;
			jule::U64 _3803_rem = (jule::U64)(_3626_n - (jule::U64)(10LLU * _3793_quo));;
			(_3596_w)--;
			if ((_3596_w < 800LL)) {
				(*(_35219_a))._field_d[_3596_w]=static_cast<jule::U8>((jule::U64)(_3803_rem + '0'));
			} else if ((_3803_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3626_n=_3793_quo;
		}
	_iter_next_1ca13a878:;
	}
	_iter_end_1ca13a878:;;
	(*(_35219_a))._field_nd+=_3536_delta;
	if (((*(_35219_a))._field_nd >= 800LL)) {
		(*(_35219_a))._field_nd=800LL;
	};
	(*(_35219_a))._field_dp+=_3536_delta;
	_1e219316b_trim(_35219_a);
}



inline jule::Bool _1e219403a_shouldRoundUp(_1e219181d_decimal* _39919_a, jule::I64 _39931_nd) {
	if (((_39931_nd < 0LL) || (_39931_nd >= (*(_39919_a))._field_nd))) {
		return false;;
	};
	if ((((*(_39919_a))._field_d[_39931_nd] == '5') && ((_39931_nd + 1LL) == (*(_39919_a))._field_nd))) {
		if ((*(_39919_a))._field_trunc) {
			return true;;
		};
		return ((_39931_nd > 0LL) && (((jule::U8)((*(_39919_a))._field_d[(_39931_nd - 1LL)] - '0') & 1LL) != 0LLU));;
	};
	return ((*(_39919_a))._field_d[_39931_nd] >= '5');;
}



inline jule::Str _1e21957bc_FmtUint(jule::U64 _6112_i, jule::I64 _6120_base) {
	if (((_6112_i < 100LLU) && (_6120_base == 10LL))) {
		return _1e2196290_small(static_cast<jule::I64>(_6112_i));;
	};
	jule::Str _655_s;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1e2196aba_fmtBits(nullptr, _6112_i, _6120_base, false, false);
		_655_s = __jule_assign_result.__jule_result_arg1;
	});
	return _655_s;;
}



inline jule::Str _1e2195b85_FmtInt(jule::I64 _7211_i, jule::I64 _7219_base) {
	if ((((0LL <= _7211_i) && (_7211_i < 100LL)) && (_7219_base == 10LL))) {
		return _1e2196290_small(static_cast<jule::I64>(_7211_i));;
	};
	jule::Str _765_s;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1e2196aba_fmtBits(nullptr, static_cast<jule::U64>(_7211_i), _7219_base, (_7211_i < 0LL), false);
		_765_s = __jule_assign_result.__jule_result_arg1;
	});
	return _765_s;;
}



inline jule::Str _1e2195e4e_Itoa(jule::I64 _819_i) {
	return _1e2195b85_FmtInt(static_cast<jule::I64>(_819_i), 10LL);;
}



inline jule::Str _1e2196290_small(jule::I64 _8610_i) {
	if ((_8610_i < 10LL)) {
		return __jule_strFromByte(static_cast<jule::U8>(('0' + _8610_i)));;
	};
	jule::Slice<jule::U8> _906_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(3LL, 3LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	_906_buf[0LL]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, (_8610_i << 1LL));
	_906_buf[1LL]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, ((_8610_i << 1LL) + 1LL));
	return _223c7a815_StrFromBytes(_906_buf.slice(0LL, 2LL));;
}



inline jule::Bool _1e2196526_isPowerOfTwo(jule::I64 _9617_x) {
	return ((_9617_x & (_9617_x - 1LL)) == 0LL);;
}



inline __jule_tuple_su8__jule_tuple_str _1e2196aba_fmtBits(jule::Slice<jule::U8> _10516_dst, jule::U64 _10533_u, jule::I64 _10541_base, jule::Bool _10552_neg, jule::Bool _10563_append_) {
	__jule_tuple_su8__jule_tuple_str __jule_func_result;
	if (((_10541_base < 2LL) || (_10541_base > 36LL))) {
		__jule_panic_s(jule::Str::lit("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:107:3"));;
	};
	jule::Slice<jule::U8> _1116_a = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(65LL, 65LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _1126_i = _1116_a.len();;
	if (_10552_neg) {
		_10533_u=(-(_10533_u));
	};
	{
		
		if ((_10541_base == 10LL)) {
			_case_begin_1ca171c33:;
			{
				;
				jule::U64 _1547_us = static_cast<jule::U64>(_10533_u);;
				while ((_1547_us >= 100LLU)) {
					{
						jule::U64 _1564_is = ({ jule::U64 __jule_x = (_1547_us % 100LL); jule::U64 __jule_y = 1LLU; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });;
						_1547_us=(_1547_us / 100LLU);
						_1126_i-=2LL;
						_1116_a[(_1126_i + 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U64)(_1564_is + 1LLU)));
						_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(_1564_is));
					}
				_iter_next_1ca1737e5:;
				}
				_iter_end_1ca1737e5:;;
				jule::U64 _1643_is = ({ jule::U64 __jule_x = _1547_us; jule::U64 __jule_y = 1LLU; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });;
				(_1126_i)--;
				_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U64)(_1643_is + 1LLU)));
				if ((_1547_us >= 10LLU)) {
					(_1126_i)--;
					_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(_1643_is));
				};
			}
		}
		else if (_1e2196526_isPowerOfTwo(_10541_base)) {
			_case_begin_1ca17243c:;
			{
				jule::U64 _1793_shift = (static_cast<jule::U64>(_2243166db_TrailingZeros(static_cast<jule::U64>(_10541_base))) & 7LLU);;
				jule::U64 _1803_b = static_cast<jule::U64>(_10541_base);;
				jule::U64 _1813_m = (jule::U64)(static_cast<jule::U64>(_10541_base) - 1LLU);;
				while ((_10533_u >= _1803_b)) {
					{
						(_1126_i)--;
						_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>((static_cast<jule::U64>(_10533_u) & _1813_m)));
						_10533_u = ({ jule::U64 __jule_x = _10533_u; jule::U64 __jule_y = _1793_shift; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
					}
				_iter_next_1ca17b3be:;
				}
				_iter_end_1ca17b3be:;;
				(_1126_i)--;
				_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>(static_cast<jule::U64>(_10533_u)));
			}
		}
		else {
			_case_begin_1ca170c98:;
			{
				jule::U64 _1923_b = static_cast<jule::U64>(_10541_base);;
				while ((_10533_u >= _1923_b)) {
					{
						(_1126_i)--;
						jule::U64 _1984_q = ({ jule::U64 __jule_x = _10533_u; jule::U64 __jule_y = _1923_b; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U64)(__jule_x / __jule_y)); });;
						_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>(static_cast<jule::U64>((jule::U64)(_10533_u - (jule::U64)(_1984_q * _1923_b)))));
						_10533_u=_1984_q;
					}
				_iter_next_1ca171a13:;
				}
				_iter_end_1ca171a13:;;
				(_1126_i)--;
				_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>(static_cast<jule::U64>(_10533_u)));
			}
		}
		_match_end_1ca171084:;
	};
	if (_10552_neg) {
		(_1126_i)--;
		_1116_a[_1126_i]='-';
	};
	if (_10563_append_) {
		__jule_func_result.__jule_result_arg0=jule::append(_10516_dst,_1116_a.slice(_1126_i));
		return __jule_func_result;;
	};
	jule::I64 _2172_n = jule::copy(_1116_a, _1116_a.slice(_1126_i));;
	__jule_func_result.__jule_result_arg1=_223c7a815_StrFromBytes(_1116_a.slice(0LL, _2172_n));
	return __jule_func_result;;
}



inline jule::Str _1e219854a_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("int", 3))) {
			_case_begin_1ca18c358:;
			{
				return _1e2197a66_SysInt;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("uint", 4)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("uintptr", 7))) {
			_case_begin_1ca190c85:;
			{
				return _1e2197d1e_SysUint;;
			}
		}
		else {
			_case_begin_1ca18cd5e:;
			{
				return _4515_kind;;
			}
		}
		_match_end_1ca190eb6:;
	};
}



inline jule::I64 _1e2198814_BitsizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i8", 2)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("u8", 2))) {
			_case_begin_1ca191c53:;
			{
				return 8LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i16", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("u16", 3))) {
			_case_begin_1ca1921b5:;
			{
				return 16LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i32", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("u32", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("f32", 3))) {
			_case_begin_1ca19222b:;
			{
				return 32LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i64", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("u64", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("f64", 3))) {
			_case_begin_1ca191cb9:;
			{
				return 64LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("uint", 4)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("int", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("uintptr", 7))) {
			_case_begin_1ca191d30:;
			{
				return _1e2197769_BitSize;;
			}
		}
		else {
			_case_begin_1ca1920c7:;
			{
				return -1LL;;
			}
		}
		_match_end_1ca191b98:;
	};
}



inline jule::Str _1e2198b55_IntFromBits(jule::I64 _8716_bits) {
	{
		auto &_match_expr{ _8716_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1ca1951a7:;
			{
				return static_cast<jule::Str>(jule::Str::lit("i8", 2));;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1ca194ea9:;
			{
				return static_cast<jule::Str>(jule::Str::lit("i16", 3));;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1ca195020:;
			{
				return static_cast<jule::Str>(jule::Str::lit("i32", 3));;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1ca19521d:;
			{
				return static_cast<jule::Str>(jule::Str::lit("i64", 3));;
			}
		}
		else {
			_case_begin_1ca194dbb:;
			{
				return jule::Str();;
			}
		}
		_match_end_1ca19499d:;
	};
}



inline jule::Str _1e2198ddb_UintFromBits(jule::I64 _10517_bits) {
	{
		auto &_match_expr{ _10517_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1ca19696c:;
			{
				return static_cast<jule::Str>(jule::Str::lit("u8", 2));;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1ca1969d3:;
			{
				return static_cast<jule::Str>(jule::Str::lit("u16", 3));;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1ca196a49:;
			{
				return static_cast<jule::Str>(jule::Str::lit("u32", 3));;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1ca196ab0:;
			{
				return static_cast<jule::Str>(jule::Str::lit("u64", 3));;
			}
		}
		else {
			_case_begin_1ca195295:;
			{
				return jule::Str();;
			}
		}
		_match_end_1ca196582:;
	};
}



inline jule::Str _1e21991a5_FloatFromBits(jule::I64 _12318_bits) {
	{
		auto &_match_expr{ _12318_bits };
		
		if (_match_expr == 32LLU) {
			_case_begin_1ca198485:;
			{
				return static_cast<jule::Str>(jule::Str::lit("f32", 3));;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1ca198254:;
			{
				return static_cast<jule::Str>(jule::Str::lit("f64", 3));;
			}
		}
		else {
			_case_begin_1ca195592:;
			{
				return jule::Str();;
			}
		}
		_match_end_1ca197d47:;
	};
}



inline jule::Bool _1e2199caa_CheckBitFloat(jule::Str _15118_val, jule::I64 _15128_bit) {
	({
		auto except = _1e218ae00_ParseFloat(_15118_val, _15128_bit);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} 0;});
	});
	return true;;
}



inline jule::I64 _1e219a074_BitsizeOfFloat(jule::F64 _16119_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16119_x) && (_16119_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1ca19d3be:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1ca19c533:;
			{
				return 64LLU;;
			}
		}
		_match_end_1ca19cd08:;
	};
}



inline jule::I64 _1e219a33d_BitsizeOfInt(jule::I64 _17717_x) {
	{
		
		if (((-128LL <= _17717_x) && (_17717_x <= 127LL))) {
			_case_begin_1ca19e0d4:;
			{
				return 8LLU;;
			}
		}
		else if (((-32768LL <= _17717_x) && (_17717_x <= 32767LL))) {
			_case_begin_1ca19d666:;
			{
				return 16LLU;;
			}
		}
		else if (((-2147483648LL <= _17717_x) && (_17717_x <= 2147483647LL))) {
			_case_begin_1ca19d6cc:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1ca19d600:;
			{
				return 64LLU;;
			}
		}
		_match_end_1ca19dbb6:;
	};
}



inline jule::I64 _1e219a607_BitsizeOfUint(jule::U64 _19718_x) {
	{
		
		if ((_19718_x <= 255LLU)) {
			_case_begin_1ca1a0bb8:;
			{
				return 8LLU;;
			}
		}
		else if ((_19718_x <= 65535LLU)) {
			_case_begin_1ca19eda4:;
			{
				return 16LLU;;
			}
		}
		else if ((_19718_x <= 4294967295LLU)) {
			_case_begin_1ca19ee1a:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1ca19ed3d:;
			{
				return 64LLU;;
			}
		}
		_match_end_1ca1a028e:;
	};
}



inline void _1e219a7a0_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _225865354_Arch };
			
			if (_match_expr == jule::Str::lit("arm64", 5) || _match_expr == jule::Str::lit("amd64", 5)) {
				_case_begin_1ca1a15e2:;
				{
					_1e2197769_BitSize=64LLU;
					_1e2197a66_SysInt=static_cast<jule::Str>(jule::Str::lit("i64", 3));
					_1e2197d1e_SysUint=static_cast<jule::Str>(jule::Str::lit("u64", 3));
				}
			}
			else if (_match_expr == jule::Str::lit("i386", 4)) {
				_case_begin_1ca1a1c1e:;
				{
					_1e2197769_BitSize=32LLU;
					_1e2197a66_SysInt=static_cast<jule::Str>(jule::Str::lit("i32", 3));
					_1e2197d1e_SysUint=static_cast<jule::Str>(jule::Str::lit("u32", 3));
				}
			}
			_match_end_1ca1a1b31:;
		};
	};
}



inline void _1e219a926_init(void) {
	_1e219a7a0_UpdateTarget();
}



inline jule::I64 _1e219e584_MinI(jule::Str _6113_k) {
	_6113_k=_1e219854a_RealKindOf(_6113_k);
	{
		auto &_match_expr{ _6113_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i8", 2))) {
			_case_begin_1ca1a4194:;
			{
				return -128LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i16", 3))) {
			_case_begin_1ca1a44a2:;
			{
				return -32768LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i32", 3))) {
			_case_begin_1ca1a4518:;
			{
				return -2147483648LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i64", 3))) {
			_case_begin_1ca1a457e:;
			{
				return jule::MIN_I64;;
			}
		}
		else {
			_case_begin_1ca1a104d:;
			{
				return 0LL;;
			}
		}
		_match_end_1ca1a1119:;
	};
}



inline jule::I64 _1e219e892_MaxI(jule::Str _7913_k) {
	_7913_k=_1e219854a_RealKindOf(_7913_k);
	{
		auto &_match_expr{ _7913_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i8", 2))) {
			_case_begin_1ca1a5abe:;
			{
				return 127LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i16", 3))) {
			_case_begin_1ca1a5e32:;
			{
				return 32767LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i32", 3))) {
			_case_begin_1ca1a5ea9:;
			{
				return 2147483647LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i64", 3))) {
			_case_begin_1ca1a6031:;
			{
				return jule::MAX_I64;;
			}
		}
		else {
			_case_begin_1ca1a552a:;
			{
				return 0LL;;
			}
		}
		_match_end_1ca1a54b4:;
	};
}



inline jule::U64 _1e219eb5b_MaxU(jule::Str _9713_k) {
	_9713_k=_1e219854a_RealKindOf(_9713_k);
	{
		auto &_match_expr{ _9713_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u8", 2))) {
			_case_begin_1ca1a754e:;
			{
				return 255LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u16", 3))) {
			_case_begin_1ca1a78b2:;
			{
				return 65535LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u32", 3))) {
			_case_begin_1ca1a7939:;
			{
				return 4294967295LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u64", 3))) {
			_case_begin_1ca1a79b1:;
			{
				return jule::MAX_U64;;
			}
		}
		else {
			_case_begin_1ca1a6eaa:;
			{
				return 0LLU;;
			}
		}
		_match_end_1ca1a6e44:;
	};
}



inline jule::F64 _1e219ee9c_Min(jule::Str _11512_k) {
	_11512_k=_1e219854a_RealKindOf(_11512_k);
	jule::I64 _1172_i = _1e219e584_MinI(_11512_k);;
	if ((_1172_i != 0LL)) {
		return static_cast<jule::F64>(_1172_i);;
	};
	{
		auto &_match_expr{ _11512_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f32", 3))) {
			_case_begin_1ca1aa08a:;
			{
				return -340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f64", 3))) {
			_case_begin_1ca1a94da:;
			{
				return jule::MIN_F64;;
			}
		}
		else {
			_case_begin_1ca1a974e:;
			{
				return 0LL;;
			}
		}
		_match_end_1ca1a9474:;
	};
}



inline jule::F64 _1e21a0233_Max(jule::Str _13312_k) {
	_13312_k=_1e219854a_RealKindOf(_13312_k);
	jule::I64 _1352_i = _1e219e892_MaxI(_13312_k);;
	if ((_1352_i != 0LL)) {
		return static_cast<jule::F64>(_1352_i);;
	};
	jule::U64 _1392_u = _1e219eb5b_MaxU(_13312_k);;
	if ((_1392_u != 0LLU)) {
		return static_cast<jule::F64>(_1392_u);;
	};
	{
		auto &_match_expr{ _13312_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f32", 3))) {
			_case_begin_1ca1ac598:;
			{
				return 340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f64", 3))) {
			_case_begin_1ca1ab971:;
			{
				return jule::MAX_F64;;
			}
		}
		else {
			_case_begin_1ca1abc5c:;
			{
				return 0LL;;
			}
		}
		_match_end_1ca1ab90a:;
	};
}



inline jule::Bool _1e21a3258_IsSigInt(jule::Str _2717_k) {
	return (((((_2717_k == static_cast<jule::Str>(jule::Str::lit("i8", 2))) || (_2717_k == static_cast<jule::Str>(jule::Str::lit("i16", 3)))) || (_2717_k == static_cast<jule::Str>(jule::Str::lit("i32", 3)))) || (_2717_k == static_cast<jule::Str>(jule::Str::lit("i64", 3)))) || (_2717_k == static_cast<jule::Str>(jule::Str::lit("int", 3))));;
}



inline jule::Bool _1e21a3566_IsUnsigInt(jule::Str _3619_k) {
	return ((((((_3619_k == static_cast<jule::Str>(jule::Str::lit("u8", 2))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("u16", 3)))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("u32", 3)))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("u64", 3)))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("uint", 4)))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("uintptr", 7))));;
}



inline jule::Bool _1e21a3830_IsInt(jule::Str _4610_k) {
	return (_1e21a3258_IsSigInt(_4610_k) || _1e21a3566_IsUnsigInt(_4610_k));;
}



inline jule::Bool _1e21a3b71_IsFloat(jule::Str _5112_k) {
	return ((_5112_k == static_cast<jule::Str>(jule::Str::lit("f32", 3))) || (_5112_k == static_cast<jule::Str>(jule::Str::lit("f64", 3))));;
}



inline jule::Bool _1e21a3e07_IsNum(jule::Str _5610_k) {
	return (_1e21a3830_IsInt(_5610_k) || _1e21a3b71_IsFloat(_5610_k));;
}



inline jule::Bool _1e21a41c1_IsSigNum(jule::Str _6113_k) {
	return (_1e21a3258_IsSigInt(_6113_k) || _1e21a3b71_IsFloat(_6113_k));;
}



inline void _1e21ad4b6_lshiftUnsig(_1e21a449b_Const* _59021_c, _1e21a449b_Const* _59032_x) {
	jule::U64 _5912_l = _1e21a6e0a_AsU64(_59021_c);;
	jule::U64 _5922_r = _1e21a6e0a_AsU64(_59032_x);;
	_1e21a7702_SetU64(_59021_c, ({ jule::U64 __jule_x = _5912_l; jule::U64 __jule_y = _5922_r; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));
}



inline void _1e21ad7e6_rshiftUnsig(_1e21a449b_Const* _59621_c, _1e21a449b_Const* _59632_x) {
	jule::U64 _5972_l = _1e21a6e0a_AsU64(_59621_c);;
	jule::U64 _5982_r = _1e21a6e0a_AsU64(_59632_x);;
	_1e21a7702_SetU64(_59621_c, ({ jule::U64 __jule_x = _5972_l; jule::U64 __jule_y = _5982_r; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }));
}



inline jule::Bool _1e5c90319_IsUnaryOp(jule::U64 _33414_id) {
	{
		auto expr = &(_1e5be5dda_UnaryOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca27110c:;
		if (it != expr_end) {
			jule::U64 *_3359_op = it;
			{
				if ((_33414_id == (*(_3359_op)))) {
					return true;;
				};
			}
			_iter_next_1ca27110c:;
			++it;
			goto _iter_begin_1ca27110c;
		}
		_iter_end_1ca27110c:;
	};
	return false;;
}



inline jule::Bool _1e5c90627_IsBinOp(jule::U64 _34412_id) {
	{
		auto expr = &(_1e5be612c_BinOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca27163a:;
		if (it != expr_end) {
			jule::U64 *_3459_op = it;
			{
				if ((_34412_id == (*(_3459_op)))) {
					return true;;
				};
			}
			_iter_next_1ca27163a:;
			++it;
			goto _iter_begin_1ca27163a;
		}
		_iter_end_1ca27163a:;
	};
	return false;;
}



inline jule::Bool _1e5c90c32_IsStr(jule::Str _36410_k) {
	return (!(_36410_k).empty() && ((_36410_k[0LL] == '\"') || _1e5c90eb8_IsRawStr(_36410_k)));;
}



inline jule::Bool _1e5c90eb8_IsRawStr(jule::Str _36713_k) {
	return (!(_36713_k).empty() && (_36713_k[0LL] == '`'));;
}



inline jule::Bool _1e5c91282_IsRune(jule::Str _37111_k) {
	return (!(_37111_k).empty() && (_37111_k[0LL] == '\''));;
}



inline jule::Bool _1e5c91b67_IsFloat(jule::Str _38012_k) {
	if (_2256d7380_HasPrefix(_38012_k, jule::Str::lit("0x", 2))) {
		return _2256dc3b8_ContainsAny(_38012_k, jule::Str::lit(".pP", 3));;
	};
	return _2256dc3b8_ContainsAny(_38012_k, jule::Str::lit(".eE", 3));;
}



inline jule::Bool _1e5c91e31_IsNum(jule::Str _38810_k) {
	if ((_38810_k).empty()) {
		return false;;
	};
	jule::U8 _3932_b = _38810_k[0LL];;
	return ((_3932_b == '.') || (('0' <= _3932_b) && (_3932_b <= '9')));;
}



inline jule::Bool _1e5c924b4_IsIgnoreIdent(jule::Str _40318_ident) {
	return (_40318_ident == static_cast<jule::Str>(jule::Str::lit("_", 1)));;
}



inline jule::Bool _1e5c9277d_IsAnonIdent(jule::Str _40616_ident) {
	return (_40616_ident == static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11)));;
}



inline jule::Bool _1e5c92d11_IsSpace(jule::I32 _41912_r) {
	{
		auto expr = &(_1e5be5bcb_Spaces);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca278c2a:;
		if (it != expr_end) {
			jule::I32 *_4209_cr = it;
			{
				if ((_41912_r == (*(_4209_cr)))) {
					return true;;
				};
			}
			_iter_next_1ca278c2a:;
			++it;
			goto _iter_begin_1ca278c2a;
		}
		_iter_end_1ca278c2a:;
	};
	return false;;
}



inline jule::Bool _1e5c9330b_IsLetter(jule::I32 _42913_r) {
	return _2256285ce_IsLetter(_42913_r);;
}



inline jule::Bool _1e5c9377e_IsDecimal(jule::U8 _44914_b) {
	return (('0' <= _44914_b) && (_44914_b <= '9'));;
}



inline jule::Bool _1e5c93a48_IsBinary(jule::U8 _45213_b) {
	return ((_45213_b == '0') || (_45213_b == '1'));;
}



inline jule::Bool _1e5c93d12_IsOctal(jule::U8 _45512_b) {
	return (('0' <= _45512_b) && (_45512_b <= '7'));;
}



inline jule::Bool _1e5c940cb_IsHex(jule::U8 _45810_b) {
	{
		
		if ((('0' <= _45810_b) && (_45810_b <= '9'))) {
			_case_begin_1ca27c833:;
			{
				return true;;
			}
		}
		else if ((('a' <= _45810_b) && (_45810_b <= 'f'))) {
			_case_begin_1ca27c8cc:;
			{
				return true;;
			}
		}
		else if ((('A' <= _45810_b) && (_45810_b <= 'F'))) {
			_case_begin_1ca27c954:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ca27c7bc:;
			{
				return false;;
			}
		}
		_match_end_1ca27c5d0:;
	};
}



inline jule::Bool _1e5c94395_IsAssign(jule::U64 _47313_id) {
	return ((((((((_47313_id == static_cast<jule::U64>(1LLU)) || (_47313_id == static_cast<jule::U64>(27LLU))) || (_47313_id == static_cast<jule::U64>(30LLU))) || (_47313_id == static_cast<jule::U64>(32LLU))) || (_47313_id == static_cast<jule::U64>(24LLU))) || (_47313_id == static_cast<jule::U64>(74LLU))) || (_47313_id == static_cast<jule::U64>(62LLU))) || (_47313_id == static_cast<jule::U64>(65LLU)));;
}



inline jule::Bool _1e5c9465e_IsPostfixOp(jule::U64 _48516_id) {
	{
		auto expr = &(_1e5c890b0_PostfixOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca2805e4:;
		if (it != expr_end) {
			jule::U64 *_4869_op = it;
			{
				if ((_48516_id == (*(_4869_op)))) {
					return true;;
				};
			}
			_iter_next_1ca2805e4:;
			++it;
			goto _iter_begin_1ca2805e4;
		}
		_iter_end_1ca2805e4:;
	};
	return false;;
}



inline jule::Bool _1e5c94928_IsAssignOp(jule::U64 _49515_id) {
	if (_1e5c9465e_IsPostfixOp(_49515_id)) {
		return true;;
	};
	{
		auto expr = &(_1e5c8939b_AssignOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca281408:;
		if (it != expr_end) {
			jule::U64 *_4999_op = it;
			{
				if ((_49515_id == (*(_4999_op)))) {
					return true;;
				};
			}
			_iter_next_1ca281408:;
			++it;
			goto _iter_begin_1ca281408;
		}
		_iter_end_1ca281408:;
	};
	return false;;
}



inline jule::Ptr<_1e5c95363_File> _1e5c9673d_NewFileSet(jule::Str _5715_path) {
	return jule::new_ptr<_1e5c95363_File>(_1e5c95363_File{._field_Path=_5715_path, ._field_Data=jule::Slice<jule::U8>(nullptr), ._field_Tokens=jule::Slice<jule::Ptr<_1e5c8eacc_Token>>(nullptr)});;
}



inline _22578b38a_Log _1e5c98267_makeErr(jule::I64 _10012_row, jule::I64 _10022_col, jule::Ptr<_1e5c95363_File>* _10033_f, jule::Str _10043_fmt, jule::Slice<jule::Any> _10056_args) {
	return _22578b38a_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_10012_row, ._field_Column=_10022_col, ._field_Path=(*((*(_10033_f))))._field_Path, ._field_Text=_22578b7ec_Logf(_10043_fmt, _10056_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
}



inline jule::Bool _1e5c98630_bytesHasPrefix(jule::Slice<jule::U8>* _11020_bytes, jule::Str _11035_prefix) {
	if (((*(_11020_bytes)).len() < _11035_prefix.len())) {
		return false;;
	};
	{
		auto expr = &(_11035_prefix);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca28b985:;
		if (it != expr_end) {
			jule::I64 _1146_i = it - expr->begin();
			{
				if (((*(_11020_bytes))[_1146_i] != _11035_prefix[_1146_i])) {
					return false;;
				};
			}
			_iter_next_1ca28b985:;
			++it;
			_1146_i++;
			goto _iter_begin_1ca28b985;
		}
		_iter_end_1ca28b985:;
	};
	return true;;
}



inline jule::Str _1e5c989a4_floatFmtE(jule::Slice<jule::U8>* _12215_txt, jule::I64 _12232_i) {
	jule::Str __jule_func_result;
	(_12232_i)++;
	if ((_12232_i >= (*(_12215_txt)).len())) {
		return __jule_func_result;;
	};
	jule::U8 _1286_b = (*(_12215_txt))[_12232_i];;
	if ((_1286_b == '_')) {
		return __jule_func_result;;
	};
	if (((_1286_b == '+') || (_1286_b == '-'))) {
		(_12232_i)++;
		if ((_12232_i >= (*(_12215_txt)).len())) {
			return __jule_func_result;;
		};
		if (((*(_12215_txt))[_12232_i] == '_')) {
			return __jule_func_result;;
		};
	};
	jule::I64 _1422_first = _12232_i;;
	for (; (_12232_i < (*(_12215_txt)).len()); (_12232_i)++) {
		{
			_1286_b=(*(_12215_txt))[_12232_i];
			if (((_1286_b != '_') && (!(_1e5c9377e_IsDecimal(_1286_b))))) {
				goto _iter_end_1ca29477e;
			};
		}
	_iter_next_1ca29477e:;
	}
	_iter_end_1ca29477e:;;
	if ((_12232_i == _1422_first)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result = __jule_bytesToStr((*(_12215_txt)).slice(0LL, _12232_i));
	return __jule_func_result;;
}



inline jule::Str _1e5c98d6c_floatFmtP(jule::Slice<jule::U8>* _15615_txt, jule::I64 _15628_i) {
	return _1e5c989a4_floatFmtE(_15615_txt, _15628_i);;
}



inline jule::Str _1e5c991e1_floatFmtDotnp(jule::Slice<jule::U8>* _16019_txt, jule::I64 _16036_i) {
	if (((*(_16019_txt))[_16036_i] != '.')) {
		return jule::Str();;
	};
	(_16036_i)++;
	_julec_label_1ca2965a5:;
	for (; (_16036_i < (*(_16019_txt)).len()); (_16036_i)++) {
		{
			jule::U8 _1683_b = (*(_16019_txt))[_16036_i];;
			{
				
				if ((_1683_b == '_') || _1e5c9377e_IsDecimal(_1683_b)) {
					_case_begin_1ca297650:;
					{
						goto _iter_next_1ca296462;
					}
				}
				else if (_1e5c9aa72_isFloatFmtP(_1683_b, _16036_i)) {
					_case_begin_1ca2976e9:;
					{
						return _1e5c98d6c_floatFmtP(_16019_txt, _16036_i);;
					}
				}
				else {
					_case_begin_1ca2975c8:;
					{
						goto _iter_end_1ca296462;
					}
				}
				_match_end_1ca297551:;
			};
		}
	_iter_next_1ca296462:;
	}
	_iter_end_1ca296462:;;
	return jule::Str();;
}



inline jule::Str _1e5c99565_floatFmtDotfp(jule::Slice<jule::U8>* _18119_txt, jule::I64 _18136_i) {
	_18136_i+=2LL;
	return _1e5c989a4_floatFmtE(_18119_txt, _18136_i);;
}



inline jule::Str _1e5c998d9_floatFmtDotp(jule::Slice<jule::U8>* _18618_txt, jule::I64 _18635_i) {
	(_18635_i)++;
	return _1e5c989a4_floatFmtE(_18618_txt, _18635_i);;
}



inline jule::Str _1e5c99d6d_floatNum(jule::Slice<jule::U8>* _19114_txt, jule::I64 _19131_i) {
	jule::Str __jule_func_result;
	(_19131_i)++;
	if ((_19131_i >= (*(_19114_txt)).len())) {
		__jule_func_result = __jule_bytesToStr((*(_19114_txt)));
		return __jule_func_result;;
	};
	if (((*(_19114_txt))[_19131_i] == '_')) {
		(_19131_i)--;
		__jule_func_result = __jule_bytesToStr((*(_19114_txt)).slice(0LL, _19131_i));
		return __jule_func_result;;
	};
	for (; (_19131_i < (*(_19114_txt)).len()); (_19131_i)++) {
		{
			jule::U8 _2013_b = (*(_19114_txt))[_19131_i];;
			if (((_19131_i > 1LL) && ((_2013_b == 'e') || (_2013_b == 'E')))) {
				__jule_func_result = _1e5c989a4_floatFmtE(_19114_txt, _19131_i);
				return __jule_func_result;;
			};
			if (((_2013_b != '_') && (!(_1e5c9377e_IsDecimal(_2013_b))))) {
				goto _iter_end_1ca29a2bd;
			};
		}
	_iter_next_1ca29a2bd:;
	}
	_iter_end_1ca29a2bd:;;
	if ((_19131_i == 1LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = __jule_bytesToStr((*(_19114_txt)).slice(0LL, _19131_i));
	return __jule_func_result;;
}



inline jule::Str _1e5c9a0b0_commonNum(jule::Slice<jule::U8>* _21615_txt) {
	jule::Str __jule_func_result;
	jule::I64 _2176_i = 0LL;;
	_julec_label_1ca29c457:;
	for (; (_2176_i < (*(_21615_txt)).len()); (_2176_i)++) {
		{
			jule::U8 _2203_b = (*(_21615_txt))[_2176_i];;
			{
				
				if ((_2203_b == '.')) {
					_case_begin_1ca29d1c2:;
					{
						__jule_func_result = _1e5c99d6d_floatNum(_21615_txt, _2176_i);
						return __jule_func_result;;
					}
				}
				else if ((_2203_b == '_')) {
					_case_begin_1ca29d26b:;
					{
						goto _iter_next_1ca29c59a;
					}
				}
				else if (_1e5c9a6ed_isFloatFmtE(_2203_b, _2176_i)) {
					_case_begin_1ca29d2d2:;
					{
						__jule_func_result = _1e5c989a4_floatFmtE(_21615_txt, _2176_i);
						return __jule_func_result;;
					}
				}
				else if ((!(_1e5c9377e_IsDecimal(_2203_b)))) {
					_case_begin_1ca29d348:;
					{
						goto _iter_end_1ca29c59a;
					}
				}
				_match_end_1ca29d0d4:;
			};
		}
	_iter_next_1ca29c59a:;
	}
	_iter_end_1ca29c59a:;;
	if ((_2176_i == 0LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = __jule_bytesToStr((*(_21615_txt)).slice(0LL, _2176_i));
	return __jule_func_result;;
}



inline jule::Str _1e5c9a379_binaryNum(jule::Slice<jule::U8>* _23915_txt) {
	jule::Str __jule_func_result;
	if ((!(_1e5c98630_bytesHasPrefix(_23915_txt, jule::Str::lit("0b", 2))))) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_23915_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _2486_i = 2LL;;
	for (; (_2486_i < (*(_23915_txt)).len()); (_2486_i)++) {
		{
			if ((((*(_23915_txt))[_2486_i] != '_') && (!(_1e5c93a48_IsBinary((*(_23915_txt))[_2486_i]))))) {
				goto _iter_end_1ca2a0a76;
			};
		}
	_iter_next_1ca2a0a76:;
	}
	_iter_end_1ca2a0a76:;;
	if ((_2486_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = __jule_bytesToStr((*(_23915_txt)).slice(0LL, _2486_i));
	return __jule_func_result;;
}



inline jule::Bool _1e5c9a6ed_isFloatFmtE(jule::U8 _26116_b, jule::I64 _26125_i) {
	return ((_26125_i > 0LL) && ((_26116_b == 'e') || (_26116_b == 'E')));;
}



inline jule::Bool _1e5c9aa72_isFloatFmtP(jule::U8 _26516_b, jule::I64 _26525_i) {
	return ((_26525_i > 0LL) && ((_26516_b == 'p') || (_26516_b == 'P')));;
}



inline jule::Bool _1e5c9ade6_isFloatFmtDotnp(jule::Slice<jule::U8>* _26921_txt, jule::I64 _26938_i) {
	if (((*(_26921_txt))[_26938_i] != '.')) {
		return false;;
	};
	(_26938_i)++;
	_julec_label_1ca2a3914:;
	for (; (_26938_i < (*(_26921_txt)).len()); (_26938_i)++) {
		{
			jule::U8 _2763_b = (*(_26921_txt))[_26938_i];;
			{
				
				if ((_2763_b == '_') || _1e5c9377e_IsDecimal(_2763_b)) {
					_case_begin_1ca2a4629:;
					{
						goto _iter_next_1ca2a3480;
					}
				}
				else if (_1e5c9aa72_isFloatFmtP(_2763_b, _26938_i)) {
					_case_begin_1ca2a46c3:;
					{
						return true;;
					}
				}
				else {
					_case_begin_1ca2a45a2:;
					{
						goto _iter_end_1ca2a3480;
					}
				}
				_match_end_1ca2a452a:;
			};
		}
	_iter_next_1ca2a3480:;
	}
	_iter_end_1ca2a3480:;;
	return false;;
}



inline jule::Bool _1e5c9b26a_isFloatFmtDotp(jule::Slice<jule::U8>* _29020_txt, jule::I64 _29033_i) {
	{
		
		if (((*(_29020_txt)).len() < 3LL)) {
			_case_begin_1ca2a562a:;
			{
				goto _case_begin_1ca2a52d9;
			}
		}
		else if (((*(_29020_txt))[_29033_i] != '.')) {
			_case_begin_1ca2a52d9:;
			{
				goto _case_begin_1ca2a56b3;
			}
		}
		else if ((((*(_29020_txt))[(_29033_i + 1LL)] != 'p') && ((*(_29020_txt))[(_29033_i + 1LL)] != 'P'))) {
			_case_begin_1ca2a56b3:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1ca2a5240:;
			{
				return true;;
			}
		}
		_match_end_1ca2a5163:;
	};
}



inline jule::Bool _1e5c9b5de_isFloatFmtDotfp(jule::Slice<jule::U8>* _30321_txt, jule::I64 _30334_i) {
	{
		
		if (((*(_30321_txt)).len() < 4LL)) {
			_case_begin_1ca2a7253:;
			{
				goto _case_begin_1ca2a72b9;
			}
		}
		else if (((*(_30321_txt))[_30334_i] != '.')) {
			_case_begin_1ca2a72b9:;
			{
				goto _case_begin_1ca2a7330;
			}
		}
		else if ((((*(_30321_txt))[(_30334_i + 1LL)] != 'f') && ((*(_30321_txt))[(_30334_i + 1LL)] != 'F'))) {
			_case_begin_1ca2a7330:;
			{
				goto _case_begin_1ca2a73a7;
			}
		}
		else if ((((*(_30321_txt))[(_30334_i + 2LL)] != 'p') && ((*(_30321_txt))[(_30334_i + 1LL)] != 'P'))) {
			_case_begin_1ca2a73a7:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1ca2a7187:;
			{
				return true;;
			}
		}
		_match_end_1ca2a6c36:;
	};
}



inline jule::Str _1e5c9bad9_octalNum(jule::Slice<jule::U8>* _31814_txt) {
	jule::Str __jule_func_result;
	if (((*(_31814_txt))[0LL] != '0')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_31814_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	jule::I64 _3266_octalStart = 1LL;;
	jule::Bool _3286_o = false;;
	if (((*(_31814_txt))[1LL] == 'o')) {
		if (((*(_31814_txt)).len() < 3LL)) {
			return __jule_func_result;;
		};
		(_3266_octalStart)++;
		_3286_o=true;
	};
	jule::I64 _3376_i = _3266_octalStart;;
	for (; (_3376_i < (*(_31814_txt)).len()); (_3376_i)++) {
		{
			jule::U8 _3393_b = (*(_31814_txt))[_3376_i];;
			if ((_3393_b == '.')) {
				if (_3286_o) {
					__jule_func_result = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result = _1e5c99d6d_floatNum(_31814_txt, _3376_i);
				return __jule_func_result;;
			};
			if (_1e5c9a6ed_isFloatFmtE(_3393_b, _3376_i)) {
				__jule_func_result = _1e5c989a4_floatFmtE(_31814_txt, _3376_i);
				return __jule_func_result;;
			};
			if (((_3393_b != '_') && (!(_1e5c93d12_IsOctal(_3393_b))))) {
				goto _iter_end_1ca2aab08;
			};
		}
	_iter_next_1ca2aab08:;
	}
	_iter_end_1ca2aab08:;;
	if ((_3376_i == _3266_octalStart)) {
		return __jule_func_result;;
	};
	__jule_func_result = __jule_bytesToStr((*(_31814_txt)).slice(0LL, _3376_i));
	return __jule_func_result;;
}



inline jule::Str _1e5c9bcb5_hexNum(jule::Slice<jule::U8>* _36012_txt) {
	jule::Str __jule_func_result;
	if (((*(_36012_txt)).len() < 3LL)) {
		return __jule_func_result;;
	};
	if ((((*(_36012_txt))[0LL] != '0') || (((*(_36012_txt))[1LL] != 'x') && ((*(_36012_txt))[1LL] != 'X')))) {
		return __jule_func_result;;
	};
	;
	jule::I64 _3696_i = 2LL;;
	_julec_label_1ca2b03c1:;
	for (; (_3696_i < (*(_36012_txt)).len()); (_3696_i)++) {
		{
			jule::U8 _3723_b = (*(_36012_txt))[_3696_i];;
			{
				
				if (_1e5c9b26a_isFloatFmtDotp(_36012_txt, _3696_i)) {
					_case_begin_1ca2b103c:;
					{
						__jule_func_result = _1e5c998d9_floatFmtDotp(_36012_txt, _3696_i);
						return __jule_func_result;;
					}
				}
				else if (_1e5c9b5de_isFloatFmtDotfp(_36012_txt, _3696_i)) {
					_case_begin_1ca2b10d6:;
					{
						__jule_func_result = _1e5c99565_floatFmtDotfp(_36012_txt, _3696_i);
						return __jule_func_result;;
					}
				}
				else if (_1e5c9aa72_isFloatFmtP(_3723_b, _3696_i)) {
					_case_begin_1ca2b114c:;
					{
						__jule_func_result = _1e5c98d6c_floatFmtP(_36012_txt, _3696_i);
						return __jule_func_result;;
					}
				}
				else if (_1e5c9ade6_isFloatFmtDotnp(_36012_txt, _3696_i)) {
					_case_begin_1ca2b11b3:;
					{
						__jule_func_result = _1e5c991e1_floatFmtDotnp(_36012_txt, _3696_i);
						return __jule_func_result;;
					}
				}
				else if (((_3723_b != '_') && (!(_1e5c940cb_IsHex(_3723_b))))) {
					_case_begin_1ca2b1229:;
					{
						goto _iter_end_1ca2b046a;
					}
				}
				_match_end_1ca2b0e3d:;
			};
		}
	_iter_next_1ca2b046a:;
	}
	_iter_end_1ca2b046a:;;
	if ((_3696_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = __jule_bytesToStr((*(_36012_txt)).slice(0LL, _3696_i));
	return __jule_func_result;;
}



inline jule::Str _1e5c9c117_hexEscape(jule::Slice<jule::U8>* _39315_txt, jule::I64 _39328_n) {
	jule::Str __jule_func_result;
	if (((*(_39315_txt)).len() < _39328_n)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _3996_i = 2LL;;
	for (; (_3996_i < _39328_n); (_3996_i)++) {
		{
			if ((!(_1e5c940cb_IsHex((*(_39315_txt))[_3996_i])))) {
				return __jule_func_result;;
			};
		}
	_iter_next_1ca2b2d41:;
	}
	_iter_end_1ca2b2d41:;;
	__jule_func_result=__jule_bytesToStr((*(_39315_txt)).slice(0LL, _39328_n));
	return __jule_func_result;;
}



inline jule::Str _1e5c9c3d1_bigUnicodePointEscape(jule::Slice<jule::U8>* _41127_txt) {
	return _1e5c9c117_hexEscape(_41127_txt, 10LL);;
}



inline jule::Str _1e5c9c69a_littleUnicodePointEscape(jule::Slice<jule::U8>* _41630_txt) {
	return _1e5c9c117_hexEscape(_41630_txt, 6LL);;
}



inline jule::Str _1e5c9c964_hexByteEscape(jule::Slice<jule::U8>* _42119_txt) {
	return _1e5c9c117_hexEscape(_42119_txt, 4LL);;
}



inline jule::Str _1e5c9cc2d_byteEscape(jule::Slice<jule::U8>* _42616_txt) {
	jule::Str __jule_func_result;
	if (((*(_42616_txt)).len() < 4LL)) {
		return __jule_func_result;;
	};
	if ((((!(_1e5c93d12_IsOctal((*(_42616_txt))[1LL]))) || (!(_1e5c93d12_IsOctal((*(_42616_txt))[2LL])))) || (!(_1e5c93d12_IsOctal((*(_42616_txt))[3LL]))))) {
		return __jule_func_result;;
	};
	__jule_func_result = __jule_bytesToStr((*(_42616_txt)).slice(0LL, 4LL));
	return __jule_func_result;;
}



inline jule::Slice<_22578b38a_Log> _1e5ca2c22_Lex(jule::Ptr<_1e5c95363_File> _80612_f, jule::I64 _80622_mode) {
	if ((_80612_f == nullptr)) {
		return nullptr;;
	};
	_1e5c9d49d_lex _8116_lex = _1e5c9d49d_lex{._field_mode=_80622_mode, ._field_tokens=jule::Slice<jule::Ptr<_1e5c8eacc_Token>>(nullptr), ._field_file=_80612_f, ._field_pos=0LL, ._field_column=0, ._field_row=-1LL, ._field_errors=jule::Slice<_22578b38a_Log>(nullptr)};;
	_1e5ca12e7_newLine(&_8116_lex);
	_1e5c9e0c5_lex(&_8116_lex);
	if ((_8116_lex._field_errors.len() > 0LL)) {
		return _8116_lex._field_errors;;
	};
	(*(_80612_f))._field_Tokens=_8116_lex._field_tokens;
	return nullptr;;
}



inline jule::Bool _1e5d77885_FindModuleFile(jule::Slice<jule::Ptr<_2243de341_DirEntry>>* _1320_dirents) {
	{
		auto expr = _1320_dirents;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca346237:;
		if (it != expr_end) {
			jule::Ptr<_2243de341_DirEntry> *_149_d = it;
			{
				if (((!(_2243e2d17_IsDir((*((*(_149_d))))._field_Stat.ptr()))) && (*((*(_149_d))))._field_Name.equal("jule.mod", 8))) {
					return true;;
				};
			}
			_iter_next_1ca346237:;
			++it;
			goto _iter_begin_1ca346237;
		}
		_iter_end_1ca346237:;
	};
	return false;;
}



inline jule::Str _1e5d77b3d_FindModuleFileDeep(jule::Str _2527_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_2243de341_DirEntry>> _277_dirents = ({
				auto except = static__2256e42d2_Read(_2527_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1ca3473d1;
				} jule::Slice<jule::Ptr<_2243de341_DirEntry>>(nullptr);});
			});;
			jule::Bool _313_exist = _1e5d77885_FindModuleFile(&(_277_dirents));;
			if (_313_exist) {
				return _2527_path;;
			};
			jule::I64 _363_n = _2527_path.len();;
			_2527_path=_2256e39c9_Dir(_2527_path);
			if ((_2527_path.len() == _363_n)) {
				goto _iter_end_1ca3473d1;
			};
		}
	_iter_next_1ca3473d1:;
	}
	_iter_end_1ca3473d1:;;
	return jule::Str();;
}



inline jule::Slice<_22578b38a_Log> _1e5d77e07_CheckModuleFile(jule::Str* _4721_path) {
	jule::Slice<jule::U8> _482_bytes = ({
		auto except = static__2243e12aa_Read(_2256e2cd6_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_4721_path)); (*it++) = jule::Str::lit("jule.mod", 8); __jule_collection; })));
		(except.ok()) ? (except.result) : ({{
			return ({ auto __jule_collection = jule::Slice<_22578b38a_Log>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _22578b38a_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Row=0, ._field_Column=0, ._field_Path=jule::Str(), ._field_Text=jule::Str::lit("module file could not checked because of a problem", 50), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()}; __jule_collection; });;
		} jule::Slice<jule::U8>(nullptr);});
	});;
	jule::Str _542_s = _2256de19a_Trim(_223c7a54b_BytesStr(_482_bytes), jule::Str::lit(" \n\r\t\v", 5));;
	if ((_542_s.len() != 0LL)) {
		return ({ auto __jule_collection = jule::Slice<_22578b38a_Log>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _22578b38a_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Row=0, ._field_Column=0, ._field_Path=jule::Str(), ._field_Text=jule::Str::lit("module file has syntax error(s)", 31), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()}; __jule_collection; });;
	};
	return nullptr;;
}



inline jule::Bool _1e5d78754_IsPub(jule::Str _910_ident) {
	if ((_910_ident[0LL] < 128LLU)) {
		jule::U8 _113_b = _910_ident[0LL];;
		return (('A' <= _113_b) && (_113_b <= 'Z'));;
	};
	jule::I32 _142_r;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2241a29ea_DecodeRuneStr(_910_ident);
		_142_r = __jule_assign_result.__jule_result_arg0;
	});
	return _225694e20_IsUpper(_142_r);;
}



inline jule::Bool _1e5dc268d_IsAscii(jule::I32 _1112_r) {
	;
	return (_1112_r <= 127LL);;
}



inline jule::I32 _1e5ddc7b8_ToRune(jule::Str _2015_lit) {
	jule::I32 _216_r = static_cast<jule::I32>(0LL);;
	(_2015_lit).mut_slice(1LL, (_2015_lit.len() - 1LL));;
	if (((_2015_lit[0LL] == '\\') && (_2015_lit.len() > 1LL))) {
		jule::I64 _247_i = 0LL;;
		_216_r=_1e5ddd423_runeFromEsqSeq(_2015_lit, &(_247_i));
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2241a29ea_DecodeRuneStr(_2015_lit);
			_216_r = __jule_assign_result.__jule_result_arg0;
		});
	};
	return _216_r;;
}



inline jule::Str _1e5ddc9c7_ToRawStr(jule::Str _3613_lit) {
	if ((_3613_lit.len() == 2LL)) {
		return jule::Str();;
	};
	return _3613_lit.slice(1LL, (_3613_lit.len() - 1LL));;
}



inline jule::Str _1e5ddcd18_ToStr(jule::Str _4714_lit) {
	if ((_4714_lit.len() == 2LL)) {
		return jule::Str();;
	};
	jule::Bool _536_isPure = true;;
	{
		auto expr = &(_4714_lit);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca35373e:;
		if (it != expr_end) {
			jule::U8 _549_b = *it;
			{
				if (((_549_b >= 128LLU) || (_549_b == '\\'))) {
					_536_isPure=false;
					goto _iter_end_1ca35373e;
				};
			}
			_iter_next_1ca35373e:;
			++it;
			goto _iter_begin_1ca35373e;
		}
		_iter_end_1ca35373e:;
	};
	if (_536_isPure) {
		return _4714_lit.slice(1LL, (_4714_lit.len() - 1LL));;
	};
	(_4714_lit).mut_slice(1LL, (_4714_lit.len() - 1LL));;
	jule::Slice<jule::U8> _686_s = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, _4714_lit.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _696_i = 0LL;;
	while ((_696_i < _4714_lit.len())) {
		{
			jule::U8 _713_b = _4714_lit[_696_i];;
			if ((_713_b == '\\')) {
				_1e5ddd7b9_strEsqSeq(&(_686_s), _4714_lit, &(_696_i));
			} else {
				jule::I32 _754_r;
				jule::I64 _757_size;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2241a29ea_DecodeRuneStr(_4714_lit.slice(_696_i));
					_754_r = __jule_assign_result.__jule_result_arg0;
					_757_size = __jule_assign_result.__jule_result_arg1;
				});
				_696_i+=_757_size;
				_686_s=_2241a3a95_AppendRune(_686_s, _754_r);
			};
		}
	_iter_next_1ca35490a:;
	}
	_iter_end_1ca35490a:;;
	return _223c7a815_StrFromBytes(_686_s);;
}



inline __jule_tuple_u8__jule_tuple_bool _1e5ddd09e_tryBtoaCommonEsq(jule::Str _8321_s) {
	__jule_tuple_u8__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_8321_s.len() < 2LL) || (_8321_s[0LL] != '\\'))) {
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _8321_s[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1ca357b3e:;
			{
				__jule_func_result.__jule_result_arg0='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1ca358348:;
			{
				__jule_func_result.__jule_result_arg0='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1ca3583ae:;
			{
				__jule_func_result.__jule_result_arg0='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1ca358425:;
			{
				__jule_func_result.__jule_result_arg0='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1ca35848b:;
			{
				__jule_func_result.__jule_result_arg0='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1ca358513:;
			{
				__jule_func_result.__jule_result_arg0='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1ca35858a:;
			{
				__jule_func_result.__jule_result_arg0='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1ca358612:;
			{
				__jule_func_result.__jule_result_arg0='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1ca358689:;
			{
				__jule_func_result.__jule_result_arg0='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1ca358711:;
			{
				__jule_func_result.__jule_result_arg0='\v';
			}
		}
		_match_end_1ca3581b1:;
	};
	__jule_func_result.__jule_result_arg1=(__jule_func_result.__jule_result_arg0 != 0LLU);
	return __jule_func_result;;
}



inline jule::I32 _1e5ddd423_runeFromEsqSeq(jule::Str _11319_s, jule::I64* _11332_i) {
	jule::U8 _1142_b;
	jule::Bool _1145_ok;
	({
		__jule_tuple_u8__jule_tuple_bool __jule_assign_result = _1e5ddd09e_tryBtoaCommonEsq(_11319_s.slice((*(_11332_i))));
		_1142_b = __jule_assign_result.__jule_result_arg0;
		_1145_ok = __jule_assign_result.__jule_result_arg1;
	});
	((*(_11332_i)))++;
	if (_1145_ok) {
		((*(_11332_i)))++;
		return static_cast<jule::I32>(_1142_b);;
	};
	{
		auto &_match_expr{ _11319_s[(*(_11332_i))] };
		
		if (_match_expr == 'u') {
			_case_begin_1ca35d381:;
			{
				;
				jule::I32 _1243_r = static_cast<jule::I32>(({
					auto except = _1e2184129_ParseUint(_11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 5LL)), 16LL, 64LL);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:124:13"));
					(except.result);
				}));;
				(*(_11332_i))+=5LL;
				return _1243_r;;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1ca35d65b:;
			{
				;
				jule::I32 _1293_r = static_cast<jule::I32>(({
					auto except = _1e2184129_ParseUint(_11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 9LL)), 16LL, 64LL);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:129:13"));
					(except.result);
				}));;
				(*(_11332_i))+=9LL;
				return _1293_r;;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1ca35d6d3:;
			{
				;
				jule::Str _1343_seq = _11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 3LL));;
				(*(_11332_i))+=3LL;
				return static_cast<jule::I32>(({
					auto except = _1e2184129_ParseUint(_1343_seq, 16LL, 64LL);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:136:12"));
					(except.result);
				}));;
			}
		}
		else {
			_case_begin_1ca35be51:;
			{
				;
				jule::Str _1393_seq = _11319_s.slice((*(_11332_i)), ((*(_11332_i)) + 3LL));;
				(*(_11332_i))+=3LL;
				return static_cast<jule::I32>(({
					auto except = _1e2184129_ParseUint(_1393_seq.slice(1LL), 8LL, 64LL);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:141:12"));
					(except.result);
				}));;
			}
		}
		_match_end_1ca35c193:;
	};
}



inline void _1e5ddd7b9_strEsqSeq(jule::Slice<jule::U8>* _14519_buf, jule::Str _14532_s, jule::I64* _14545_i) {
	jule::I32 _1462_r = _1e5ddd423_runeFromEsqSeq(_14532_s, _14545_i);;
	if ((_1462_r <= 255LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = (*(_14519_buf)); __jule_push_dest.push(static_cast<jule::U8>(_1462_r)); };
		return;;
	};
	(*(_14519_buf))=_2241a3a95_AppendRune((*(_14519_buf)), _1462_r);
}



inline jule::I64 _1e6021ad9_findFormatPrefix(jule::Slice<jule::U8>* _1222_bytes, jule::I64 _1241_i) {
	while ((_1241_i < (*(_1222_bytes)).len())) {
		{
			jule::I32 _143_r;
			jule::I64 _146_size;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2241a26a9_DecodeRune((*(_1222_bytes)).slice(_1241_i));
				_143_r = __jule_assign_result.__jule_result_arg0;
				_146_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((_143_r == '{')) {
				return _1241_i;;
			};
			_1241_i+=_146_size;
		}
	_iter_next_1ca388ea0:;
	}
	_iter_end_1ca388ea0:;;
	return -1LL;;
}



inline jule::Slice<jule::U8> _1e6021ea2_getFormatRange(jule::I64* _2824_i, jule::Slice<jule::U8>* _2837_bytes) {
	jule::I64 _292_start = (*(_2824_i));;
	jule::I64 _306_braces = 0LL;;
	while (((*(_2824_i)) < (*(_2837_bytes)).len())) {
		{
			jule::I32 _323_r;
			jule::I64 _326_size;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2241a26a9_DecodeRune((*(_2837_bytes)).slice((*(_2824_i))));
				_323_r = __jule_assign_result.__jule_result_arg0;
				_326_size = __jule_assign_result.__jule_result_arg1;
			});
			(*(_2824_i))+=_326_size;
			{
				auto &_match_expr{ _323_r };
				
				if (_match_expr == '{') {
					_case_begin_1ca38b931:;
					{
						(_306_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1ca38bba6:;
					{
						(_306_braces)--;
						if ((_306_braces == 0LL)) {
							return (*(_2837_bytes)).slice(_292_start, (*(_2824_i)));;
						};
					}
				}
				_match_end_1ca38b876:;
			};
		}
	_iter_next_1ca38aba5:;
	}
	_iter_end_1ca38aba5:;;
	return nullptr;;
}



inline void _1e602228d_FmtByDefault(_224497295_StrBuilder* _4822_buf, jule::Any* _4840_arg) {
	if (((*(_4840_arg)) == nullptr)) {
		_2244a1090_WriteStr(_4822_buf, jule::Str::lit("<nil>", 5));
		return;;
	};
	{
		auto &_match_expr{ (*(_4840_arg)) };
		
		if (_match_expr.type == &__jule_any_type137) {
			_case_begin_1ca38ae6e:;
			{
				_2244a1090_WriteStr(_4822_buf, _1e217e146_FmtFloat(static_cast<jule::F64>((*(_4840_arg)).cast<jule::F32>(&__jule_any_type137)), 'g', -1LL, 32LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1ca38dc63:;
			{
				_2244a1090_WriteStr(_4822_buf, _1e217e146_FmtFloat((*(_4840_arg)).cast<jule::F64>(&__jule_any_type5), 'g', -1LL, 64LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type138) {
			_case_begin_1ca38dcc9:;
			{
				_2244a1090_WriteStr(_4822_buf, _1e2195b85_FmtInt(static_cast<jule::I64>((*(_4840_arg)).cast<jule::I8>(&__jule_any_type138)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type139) {
			_case_begin_1ca38d2a1:;
			{
				_2244a1090_WriteStr(_4822_buf, _1e2195b85_FmtInt(static_cast<jule::I64>((*(_4840_arg)).cast<jule::I16>(&__jule_any_type139)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1ca38d317:;
			{
				_2244a1090_WriteStr(_4822_buf, _1e2195b85_FmtInt(static_cast<jule::I64>((*(_4840_arg)).cast<jule::I32>(&__jule_any_type6)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1ca38d37d:;
			{
				_2244a1090_WriteStr(_4822_buf, _1e2195b85_FmtInt((*(_4840_arg)).cast<jule::I64>(&__jule_any_type1), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type136) {
			_case_begin_1ca38d3e4:;
			{
				_2244a1090_WriteStr(_4822_buf, _1e21957bc_FmtUint(static_cast<jule::U64>((*(_4840_arg)).cast<jule::U8>(&__jule_any_type136)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type140) {
			_case_begin_1ca38ddd9:;
			{
				_2244a1090_WriteStr(_4822_buf, _1e21957bc_FmtUint(static_cast<jule::U64>((*(_4840_arg)).cast<jule::U16>(&__jule_any_type140)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type141) {
			_case_begin_1ca38de50:;
			{
				_2244a1090_WriteStr(_4822_buf, _1e21957bc_FmtUint(static_cast<jule::U64>((*(_4840_arg)).cast<jule::U32>(&__jule_any_type141)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1ca38deb6:;
			{
				_2244a1090_WriteStr(_4822_buf, _1e21957bc_FmtUint((*(_4840_arg)).cast<jule::U64>(&__jule_any_type2), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1ca38e02c:;
			{
				_2244a1090_WriteStr(_4822_buf, (*(_4840_arg)).cast<jule::Str>(&__jule_any_type4));
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1ca38e093:;
			{
				if ((*(_4840_arg)).cast<jule::Bool>(&__jule_any_type3)) {
					_2244a1090_WriteStr(_4822_buf, jule::Str::lit("true", 4));
				} else {
					_2244a1090_WriteStr(_4822_buf, jule::Str::lit("false", 5));
				};
			}
		}
		else {
			_case_begin_1ca38cc0c:;
			{
				_2244a1090_WriteStr(_4822_buf, _1c8d672ba_toStr((*(_4840_arg))));
			}
		}
		_match_end_1ca38cb96:;
	};
}



inline void _1e60226ab_applyFmtByDefault(_224497295_StrBuilder* _8727_buf, jule::I64* _8749_j, jule::Slice<jule::Any> _8757_args) {
	jule::Any _882_arg = _8757_args[(*(_8749_j))];;
	((*(_8749_j)))++;
	_1e602228d_FmtByDefault(_8727_buf, &(_882_arg));
}



inline void _1e6022ac9_applyFmt(jule::Slice<jule::U8>* _9518_fmt, _224497295_StrBuilder* _9536_buf, jule::I64* _9558_j, jule::Slice<jule::Any> _9566_args) {
	if (((*(_9518_fmt)).len() == 2LL)) {
		_1e60226ab_applyFmtByDefault(_9536_buf, _9558_j, _9566_args);
		return;;
	};
	if (((((((*(_9518_fmt)).len() == 4LL) && ((*(_9518_fmt))[0LL] == '{')) && ((*(_9518_fmt))[1LL] == '{')) && ((*(_9518_fmt))[2LL] == '}')) && ((*(_9518_fmt))[3LL] == '}'))) {
		_2244a1090_WriteStr(_9536_buf, jule::Str::lit("{}", 2));
		return;;
	};
	_2244a0cd7_Write(_9536_buf, (*(_9518_fmt)));
}



inline jule::Slice<jule::U8> _1e6022e4d_Format(jule::Str _11611_fmt, jule::Slice<jule::Any> _11621_args) {
	jule::Slice<jule::U8> _1176_fmtBytes = _223c7a2b5_StrBytes(_11611_fmt);;
	if ((_11621_args.len() == 0LL)) {
		return _1176_fmtBytes;;
	};
	jule::I64 _1216_i = _1e6021ad9_findFormatPrefix(&(_1176_fmtBytes), 0LL);;
	if ((_1216_i == -1LL)) {
		return _1176_fmtBytes;;
	};
	jule::I64 _1256_j = 0LL;;
	jule::I64 _1266_last = 0LL;;
	_224497295_StrBuilder _1276_buf = static__2244a0b83_New(_11611_fmt.len());;
	for (; (_1216_i != -1LL); _1216_i=_1e6021ad9_findFormatPrefix(&(_1176_fmtBytes), _1216_i)) {
		{
			_2244a0cd7_Write(&_1276_buf, _1176_fmtBytes.slice(_1266_last, _1216_i));
			jule::Slice<jule::U8> _1307_format = _1e6021ea2_getFormatRange(&(_1216_i), &(_1176_fmtBytes));;
			if ((_1307_format == nullptr)) {
				goto _iter_next_1ca39b138;
			};
			_1e6022ac9_applyFmt(&(_1307_format), &(_1276_buf), &(_1256_j), _11621_args);
			if ((_1256_j >= _11621_args.len())) {
				_2244a0cd7_Write(&_1276_buf, _1176_fmtBytes.slice(_1216_i));
				_1266_last=_1176_fmtBytes.len();
				goto _iter_end_1ca39b138;
			};
			_1266_last=_1216_i;
		}
	_iter_next_1ca39b138:;
	}
	_iter_end_1ca39b138:;;
	if ((_1266_last < _1176_fmtBytes.len())) {
		_2244a0cd7_Write(&_1276_buf, _1176_fmtBytes.slice(_1266_last));
	};
	return _2244a2338_Buf(&_1276_buf);;
}



inline jule::Str _1e6024e72_Format(jule::Str _3111_fmt, jule::Slice<jule::Any> _3121_args) {
	return _223c7a815_StrFromBytes(_1e6022e4d_Format(_3111_fmt, _3121_args));;
}



inline jule::Ptr<_1e5ce0358_Fn> _1e21ae8d5_runtimeFindFn(jule::Ptr<_1e5d5b2e7_ImportInfo>* _1023_runtime, jule::Str _1045_ident) {
	;
	jule::Ptr<_1e5ce0358_Fn> _126_f = _1e5d5c903_FindFn((*(_1023_runtime)).ptr(), _1045_ident, false);;
	if ((_126_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("runtime function is not exist, this is an implementation mistake, this panic call should be unreachable", 103) + jule::Str("\nlocation: std/jule/sema/runtime.jule:14:3"));;
	};
	return _126_f;;
}



inline jule::Ptr<_1e5cc5e21_Struct> _1e21ade45_runtimeFindStruct(jule::Ptr<_1e5d5b2e7_ImportInfo>* _2327_runtime, jule::Str _2349_ident) {
	;
	jule::Ptr<_1e5cc5e21_Struct> _256_f = _1e5d5c507_FindStruct((*(_2327_runtime)).ptr(), _2349_ident, false);;
	if ((_256_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("runtime struct is not exist, this is an implementation mistake, this panic call should be unreachable", 101) + jule::Str("\nlocation: std/jule/sema/runtime.jule:27:3"));;
	};
	return _256_f;;
}



inline jule::Bool _1e5ce56e3_parameterUsesGenerics(jule::Ptr<_1e5ce22b1_ParamIns>* _39531_p, jule::Slice<jule::Ptr<_1e5cb2292_GenericDecl>>* _39546_generics) {
	if (_1e5cdded3_IsSelf((*((*(_39531_p))))._field_Decl.ptr())) {
		return false;;
	};
	return _1e5e5c99d_kindUsesGenerics(&((*((*(_39531_p))))._field_Kind), _39546_generics);;
}



inline jule::Ptr<_1e5e4900b_TypeSymbol> _1e5ce7e21_buildType(jule::Ptr<_1e5ca5087_TypeDecl> _9418_t) {
	if ((_9418_t == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1e5e4900b_TypeSymbol>(_1e5e4900b_TypeSymbol{._field_Decl=_9418_t, ._field_Kind=jule::Ptr<_1e5e417ea_TypeKind>(nullptr)});;
}



inline jule::Ptr<_1e5e09d8a_Value> _1e5ce822e_buildExpr(jule::Ptr<_1e5ca93bb_Expr> _10318_expr) {
	if ((_10318_expr == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1e5e09d8a_Value>(_1e5e09d8a_Value{._field_Expr=_10318_expr, ._field_Data=jule::Ptr<_1e5e08c13_Data>(nullptr)});;
}



inline jule::Ptr<_1e5e40a08_TypeAlias> _1e5ce84e8_buildTypeAlias(jule::Ptr<_1e5cbbaa4_TypeAliasDecl> _11223_decl) {
	return jule::new_ptr<_1e5e40a08_TypeAlias>(_1e5e40a08_TypeAlias{._field_Scope=(*(_11223_decl))._field_Scope, ._field_Public=(*_11223_decl.alloc)._field_Public, ._field_Binded=(*_11223_decl.alloc)._field_Binded, ._field_Used=false, ._field_Generic=false, ._field_Token=(*_11223_decl.alloc)._field_Token, ._field_Ident=(*_11223_decl.alloc)._field_Ident, ._field_Kind=_1e5ce7e21_buildType((*_11223_decl.alloc)._field_Kind), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e40a08_TypeAlias>>(nullptr)});;
}



inline jule::Ptr<_1e5cc2eea_Field> _1e5ce8839_buildField(jule::Ptr<_1e5cc0459_FieldDecl> _12319_decl) {
	return jule::new_ptr<_1e5cc2eea_Field>(_1e5cc2eea_Field{._field_Owner=jule::Ptr<_1e5cc5e21_Struct>(nullptr), ._field_Token=(*(_12319_decl))._field_Token, ._field_Public=(*_12319_decl.alloc)._field_Public, ._field_Mutable=(*_12319_decl.alloc)._field_Mutable, ._field_Ident=(*_12319_decl.alloc)._field_Ident, ._field_Kind=_1e5ce7e21_buildType((*_12319_decl.alloc)._field_Kind), ._field_Default=(*_12319_decl.alloc)._field_Default});;
}



inline jule::Slice<jule::Ptr<_1e5cc2eea_Field>> _1e5ce8ac0_buildFields(jule::Slice<jule::Ptr<_1e5cc0459_FieldDecl>>* _13421_decls) {
	jule::Slice<jule::Ptr<_1e5cc2eea_Field>> _1356_fields = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5cc2eea_Field>>::alloc(0LL, (*(_13421_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1e5cc2eea_Field>(nullptr); __jule_collection; });;
	{
		auto expr = _13421_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca672486:;
		if (it != expr_end) {
			jule::Ptr<_1e5cc0459_FieldDecl> _13614_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1e5cc2eea_Field>> &__jule_push_dest = _1356_fields; __jule_push_dest.push(_1e5ce8839_buildField(_13614_decl)); };
			}
			_iter_next_1ca672486:;
			++it;
			goto _iter_begin_1ca672486;
		}
		_iter_end_1ca672486:;
	};
	return _1356_fields;;
}



inline jule::Ptr<_1e5cc5e21_Struct> _1e5ce8d89_buildStruct(jule::Ptr<_1e5cc0d50_StructDecl> _14220_decl) {
	return jule::new_ptr<_1e5cc5e21_Struct>(_1e5cc5e21_Struct{._field_sema=jule::Ptr<_1e5d7b768_sema>(nullptr), ._field_Depends=jule::Slice<jule::Ptr<_1e5cc5e21_Struct>>(nullptr), ._field_Uses=jule::Slice<jule::Ptr<_1e5cc5e21_Struct>>(nullptr), ._field_Token=(*(_14220_decl))._field_Token, ._field_Ident=(*_14220_decl.alloc)._field_Ident, ._field_Fields=_1e5ce8ac0_buildFields(&((*_14220_decl.alloc)._field_Fields)), ._field_Methods=jule::Slice<jule::Ptr<_1e5ce0358_Fn>>(nullptr), ._field_Statics=jule::Slice<jule::Ptr<_1e5da0bcc_Var>>(nullptr), ._field_Public=(*_14220_decl.alloc)._field_Public, ._field_Binded=(*_14220_decl.alloc)._field_Binded, ._field_Directives=(*_14220_decl.alloc)._field_Directives, ._field_Generics=(*_14220_decl.alloc)._field_Generics, ._field_Implements=jule::Slice<jule::Ptr<_1e5d03db6_Trait>>(nullptr), ._field_Instances=jule::Slice<jule::Ptr<_1e5cc8c7b_StructIns>>(nullptr)});;
}



inline jule::Ptr<_1e5cdd884_Param> _1e5ce9153_buildParam(jule::Ptr<_1e5cb57e5_ParamDecl> _15419_decl) {
	return jule::new_ptr<_1e5cdd884_Param>(_1e5cdd884_Param{._field_Token=(*(_15419_decl))._field_Token, ._field_Mutable=(*_15419_decl.alloc)._field_Mutable, ._field_Variadic=(*_15419_decl.alloc)._field_Variadic, ._field_Reference=(*_15419_decl.alloc)._field_Reference, ._field_Kind=_1e5ce7e21_buildType((*_15419_decl.alloc)._field_Kind), ._field_Ident=(*_15419_decl.alloc)._field_Ident});;
}



inline jule::Slice<jule::Ptr<_1e5cdd884_Param>> _1e5ce952c_buildParams(jule::Slice<jule::Ptr<_1e5cb57e5_ParamDecl>>* _16521_decls) {
	jule::Slice<jule::Ptr<_1e5cdd884_Param>> _1666_params = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5cdd884_Param>>::alloc(0LL, (*(_16521_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1e5cdd884_Param>(nullptr); __jule_collection; });;
	{
		auto expr = _16521_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca6764ac:;
		if (it != expr_end) {
			jule::Ptr<_1e5cb57e5_ParamDecl> _16714_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1e5cdd884_Param>> &__jule_push_dest = _1666_params; __jule_push_dest.push(_1e5ce9153_buildParam(_16714_decl)); };
			}
			_iter_next_1ca6764ac:;
			++it;
			goto _iter_begin_1ca6764ac;
		}
		_iter_end_1ca6764ac:;
	};
	return _1666_params;;
}



inline jule::Ptr<_1e5cdd147_RetType> _1e5ce976e_buildRetType(jule::Ptr<_1e5ca7e7a_RetTypeDecl> _17321_decl) {
	if ((((*(_17321_decl))._field_Idents == nullptr) && ((*_17321_decl.alloc)._field_Kind == nullptr))) {
		return nullptr;;
	};
	return jule::new_ptr<_1e5cdd147_RetType>(_1e5cdd147_RetType{._field_Kind=_1e5ce7e21_buildType((*_17321_decl.alloc)._field_Kind), ._field_Idents=(*_17321_decl.alloc)._field_Idents});;
}



inline jule::Ptr<_1e5ce0358_Fn> _1e5ce9a38_buildFunc(jule::Ptr<_1e5cb6c47_FnDecl> _18318_decl) {
	return jule::new_ptr<_1e5ce0358_Fn>(_1e5ce0358_Fn{._field_sema=jule::Ptr<_1e5d7b768_sema>(nullptr), ._field_Token=(*(_18318_decl))._field_Token, ._field_Global=(*_18318_decl.alloc)._field_Global, ._field_Unsafety=(*_18318_decl.alloc)._field_Unsafety, ._field_Public=(*_18318_decl.alloc)._field_Public, ._field_Binded=(*_18318_decl.alloc)._field_Binded, ._field_Statically=(*_18318_decl.alloc)._field_Statically, ._field_Exceptional=(*_18318_decl.alloc)._field_Exceptional, ._field_Ident=(*_18318_decl.alloc)._field_Ident, ._field_Directives=(*_18318_decl.alloc)._field_Directives, ._field_Scope=(*_18318_decl.alloc)._field_Scope, ._field_Generics=(*_18318_decl.alloc)._field_Generics, ._field_Result=_1e5ce976e_buildRetType((*_18318_decl.alloc)._field_Result), ._field_Params=_1e5ce952c_buildParams(&((*_18318_decl.alloc)._field_Params)), ._field_Owner=jule::Ptr<_1e5cc5e21_Struct>(nullptr), ._field_Instances=jule::Slice<jule::Ptr<_1e5ce3416_FnIns>>(nullptr)});;
}



inline jule::Slice<jule::Ptr<_1e5ce0358_Fn>> _1e5ce9d02_buildMethods(jule::Slice<jule::Ptr<_1e5cb6c47_FnDecl>>* _20122_decls) {
	jule::Slice<jule::Ptr<_1e5ce0358_Fn>> _2026_methods = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5ce0358_Fn>>::alloc(0LL, (*(_20122_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1e5ce0358_Fn>(nullptr); __jule_collection; });;
	{
		auto expr = _20122_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca67b539:;
		if (it != expr_end) {
			jule::Ptr<_1e5cb6c47_FnDecl> _20314_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1e5ce0358_Fn>> &__jule_push_dest = _2026_methods; __jule_push_dest.push(_1e5ce9a38_buildFunc(_20314_decl)); };
			}
			_iter_next_1ca67b539:;
			++it;
			goto _iter_begin_1ca67b539;
		}
		_iter_end_1ca67b539:;
	};
	return _2026_methods;;
}



inline jule::Slice<jule::Ptr<_1e5e4900b_TypeSymbol>> _1e5cea0bb_buildTraitInherits(jule::Slice<jule::Ptr<_1e5ca5087_TypeDecl>>* _20928_inherits) {
	jule::Slice<jule::Ptr<_1e5e4900b_TypeSymbol>> _2106_symbols = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5e4900b_TypeSymbol>>::alloc(0LL, (*(_20928_inherits)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1e5e4900b_TypeSymbol>(nullptr); __jule_collection; });;
	{
		auto expr = _20928_inherits;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca67c67d:;
		if (it != expr_end) {
			jule::Ptr<_1e5ca5087_TypeDecl> _21114_it = *it;
			{
				{ jule::Slice<jule::Ptr<_1e5e4900b_TypeSymbol>> &__jule_push_dest = _2106_symbols; __jule_push_dest.push(_1e5ce7e21_buildType(_21114_it)); };
			}
			_iter_next_1ca67c67d:;
			++it;
			goto _iter_begin_1ca67c67d;
		}
		_iter_end_1ca67c67d:;
	};
	return _2106_symbols;;
}



inline jule::Ptr<_1e5d03db6_Trait> _1e5cea385_buildTrait(jule::Ptr<_1e5cc158c_TraitDecl> _21719_decl) {
	return jule::new_ptr<_1e5d03db6_Trait>(_1e5d03db6_Trait{._field_Token=(*(_21719_decl))._field_Token, ._field_Ident=(*_21719_decl.alloc)._field_Ident, ._field_Public=(*_21719_decl.alloc)._field_Public, ._field_Inherits=_1e5cea0bb_buildTraitInherits(&((*_21719_decl.alloc)._field_Inherits)), ._field_Methods=_1e5ce9d02_buildMethods(&((*_21719_decl.alloc)._field_Methods)), ._field_Implemented=jule::Slice<jule::Ptr<_1e5cc5e21_Struct>>(nullptr)});;
}



inline jule::Ptr<_1e5d05a55_EnumItem> _1e5cea64e_buildEnumItem(jule::Ptr<_1e5cbd644_EnumItemDecl> _22722_decl) {
	return jule::new_ptr<_1e5d05a55_EnumItem>(_1e5d05a55_EnumItem{._field_Token=(*(_22722_decl))._field_Token, ._field_Ident=(*_22722_decl.alloc)._field_Ident, ._field_Value=_1e5ce822e_buildExpr((*_22722_decl.alloc)._field_Expr)});;
}



inline jule::Slice<jule::Ptr<_1e5d05a55_EnumItem>> _1e5cea918_buildEnumItems(jule::Slice<jule::Ptr<_1e5cbd644_EnumItemDecl>>* _23524_decls) {
	jule::Slice<jule::Ptr<_1e5d05a55_EnumItem>> _2366_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5d05a55_EnumItem>>::alloc(0LL, (*(_23524_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1e5d05a55_EnumItem>(nullptr); __jule_collection; });;
	{
		auto expr = _23524_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca6808e5:;
		if (it != expr_end) {
			jule::Ptr<_1e5cbd644_EnumItemDecl> _23714_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1e5d05a55_EnumItem>> &__jule_push_dest = _2366_items; __jule_push_dest.push(_1e5cea64e_buildEnumItem(_23714_decl)); };
			}
			_iter_next_1ca6808e5:;
			++it;
			goto _iter_begin_1ca6808e5;
		}
		_iter_end_1ca6808e5:;
	};
	return _2366_items;;
}



inline jule::Ptr<_1e5d065c2_Enum> _1e5ceae13_buildEnum(jule::Ptr<_1e5cbe205_EnumDecl> _24318_decl) {
	return jule::new_ptr<_1e5d065c2_Enum>(_1e5d065c2_Enum{._field_Token=(*(_24318_decl))._field_Token, ._field_Public=(*_24318_decl.alloc)._field_Public, ._field_Ident=(*_24318_decl.alloc)._field_Ident, ._field_Kind=_1e5ce7e21_buildType((*_24318_decl.alloc)._field_Kind), ._field_Items=_1e5cea918_buildEnumItems(&((*_24318_decl.alloc)._field_Items))});;
}



inline jule::Ptr<_1e5d07705_TypeEnumItem> _1e5ceb0de_buildTypeEnumItem(jule::Ptr<_1e5cbea30_TypeEnumItemDecl> _25326_decl) {
	return jule::new_ptr<_1e5d07705_TypeEnumItem>(_1e5d07705_TypeEnumItem{._field_Token=(*(_25326_decl))._field_Token, ._field_Ident=(*_25326_decl.alloc)._field_Ident, ._field_Kind=_1e5ce7e21_buildType((*_25326_decl.alloc)._field_Kind)});;
}



inline jule::Slice<jule::Ptr<_1e5d07705_TypeEnumItem>> _1e5ceb386_buildTypeEnumItems(jule::Slice<jule::Ptr<_1e5cbea30_TypeEnumItemDecl>>* _26128_decls) {
	jule::Slice<jule::Ptr<_1e5d07705_TypeEnumItem>> _2626_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5d07705_TypeEnumItem>>::alloc(0LL, (*(_26128_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1e5d07705_TypeEnumItem>(nullptr); __jule_collection; });;
	{
		auto expr = _26128_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca683b5c:;
		if (it != expr_end) {
			jule::Ptr<_1e5cbea30_TypeEnumItemDecl> _26314_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1e5d07705_TypeEnumItem>> &__jule_push_dest = _2626_items; __jule_push_dest.push(_1e5ceb0de_buildTypeEnumItem(_26314_decl)); };
			}
			_iter_next_1ca683b5c:;
			++it;
			goto _iter_begin_1ca683b5c;
		}
		_iter_end_1ca683b5c:;
	};
	return _2626_items;;
}



inline jule::Ptr<_1e5d07ccc_TypeEnum> _1e5ceb650_buildTypeEnum(jule::Ptr<_1e5cc0190_TypeEnumDecl> _26922_decl) {
	return jule::new_ptr<_1e5d07ccc_TypeEnum>(_1e5d07ccc_TypeEnum{._field_Token=(*(_26922_decl))._field_Token, ._field_Public=(*_26922_decl.alloc)._field_Public, ._field_Ident=(*_26922_decl.alloc)._field_Ident, ._field_Items=_1e5ceb386_buildTypeEnumItems(&((*_26922_decl.alloc)._field_Items))});;
}



inline jule::Ptr<_1e5da0bcc_Var> _1e5ceb919_buildVar(jule::Ptr<_1e5cb7e02_VarDecl> _27817_decl) {
	return jule::new_ptr<_1e5da0bcc_Var>(_1e5da0bcc_Var{._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Token=(*(_27817_decl))._field_Token, ._field_Ident=(*_27817_decl.alloc)._field_Ident, ._field_Binded=(*_27817_decl.alloc)._field_Binded, ._field_Constant=(*_27817_decl.alloc)._field_Constant, ._field_Mutable=(*_27817_decl.alloc)._field_Mutable, ._field_Public=(*_27817_decl.alloc)._field_Public, ._field_Used=false, ._field_Statically=(*_27817_decl.alloc)._field_Statically, ._field_Reference=(*_27817_decl.alloc)._field_Reference, ._field_Kind=_1e5ce7e21_buildType((*_27817_decl.alloc)._field_Kind), ._field_Value=_1e5ce822e_buildExpr((*_27817_decl.alloc)._field_Expr), ._field_Refers=static__1e5ce68c0_new(), ._field_Directives=(*_27817_decl.alloc)._field_Directives, ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1e5da0bcc_Var>>(nullptr)});;
}



inline jule::Slice<jule::Ptr<_1e5da0bcc_Var>> _1e5cebbd3_buildVars(jule::Slice<jule::Ptr<_1e5cb7e02_VarDecl>> _29518_decls) {
	jule::Slice<jule::Ptr<_1e5da0bcc_Var>> _2966_vars = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5da0bcc_Var>>::alloc(0LL, _29518_decls.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1e5da0bcc_Var>(nullptr); __jule_collection; });;
	{
		auto expr = &(_29518_decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca68847a:;
		if (it != expr_end) {
			jule::Ptr<_1e5cb7e02_VarDecl> _29714_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1e5da0bcc_Var>> &__jule_push_dest = _2966_vars; __jule_push_dest.push(_1e5ceb919_buildVar(_29714_decl)); };
			}
			_iter_next_1ca68847a:;
			++it;
			goto _iter_begin_1ca68847a;
		}
		_iter_end_1ca68847a:;
	};
	return _2966_vars;;
}



inline jule::Ptr<_1e5d33c09_Impl> _1e5cebe9c_buildImpl(jule::Ptr<_1e5cc1bec_Impl> _30318_decl) {
	return jule::new_ptr<_1e5d33c09_Impl>(_1e5d33c09_Impl{._field_Base=(*(_30318_decl))._field_Base, ._field_Dest=(*_30318_decl.alloc)._field_Dest, ._field_Methods=_1e5ce9d02_buildMethods(&((*_30318_decl.alloc)._field_Methods)), ._field_Statics=_1e5cebbd3_buildVars((*_30318_decl.alloc)._field_Statics)});;
}



inline jule::Bool _1e5d033b0_isImplicitImport(jule::Ptr<_1e5d5b2e7_ImportInfo> _78821_imp) {
	return ((*(_78821_imp))._field_Token == nullptr);;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5d2e2dc_buildAsComptimeMethodData(jule::Ptr<_1e5ce3416_FnIns>* _203035_f) {
	return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_203035_f)), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data1)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)});;
}



inline jule::Ptr<_1e5d5b2e7_ImportInfo> _1e5d2e4eb_findComptimePackage(jule::Ptr<_1e5d7b768_sema>* _203829_s) {
	return _1e5d7bc41_SelectPackage((*(_203829_s)).ptr(), jule::__new_closure<jule::Bool,jule::Ptr<_1e5d5b2e7_ImportInfo>>((void*)__jule_anon1ca72389a, nullptr, nullptr));;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5d2e870_buildComptimeTypeInfoData(jule::Ptr<_1e5d7b768_sema>* _204435_s, jule::Ptr<_1e5e417ea_TypeKind>* _204450_t) {
	return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1e5d7b0d6_pushComptimeTypeInfo((*((*(_204435_s))))._field_meta.ptr(), _204450_t), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data15)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)});;
}



inline jule::Ptr<_1e5e08c13_Data> _1e5d2ebb1_buildComptimeValue(jule::Ptr<_1e5e08c13_Data>* _205228_d) {
	return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1e5d2170d_comptimeValue>(_1e5d2170d_comptimeValue{._field_data=(*(_205228_d))}), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data16)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)});;
}



inline jule::Str _1e5d32ba3_toStrConstraints(jule::Ptr<_1e5e3ee14_InsGeneric> _14321_g) {
	_224497295_StrBuilder _1446_sb = static__2244a0b83_New(128LL);;
	{
		auto expr = &((*_14321_g.alloc)._field_Constraint);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca92a266:;
		if (it != expr_end) {
			jule::I64 _1456_i = it - expr->begin();
			jule::Ptr<_1e5e417ea_TypeKind> *_1459_c = it;
			{
				_2244a1090_WriteStr(&_1446_sb, _1e5e41be6_Str((*(_1459_c)).ptr()));
				if ((((*(_14321_g))._field_Constraint.len() - _1456_i) > 1LL)) {
					_2244a1090_WriteStr(&_1446_sb, jule::Str::lit(" | ", 3));
				};
			}
			_iter_next_1ca92a266:;
			++it;
			_1456_i++;
			goto _iter_begin_1ca92a266;
		}
		_iter_end_1ca92a266:;
	};
	return _2244a1887_Str(&_1446_sb);;
}



inline jule::Bool _1e5d3306b_matchConstraint(jule::Str* _15421_c, jule::Ptr<_1e5e417ea_TypeKind>* _15434_g) {
	{
		auto &_match_expr{ (*(_15421_c)) };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("signed", 6))) {
			_case_begin_1ca92c125:;
			{
				jule::Ptr<_1e5e49913_Prim> _1573_prim = _1e5e43ea1_Prim((*(_15434_g)).ptr());;
				if ((_1573_prim == nullptr)) {
					return false;;
				};
				return _1e21a41c1_IsSigNum((*(_1573_prim))._field_Kind);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("unsigned", 8))) {
			_case_begin_1ca92c18b:;
			{
				jule::Ptr<_1e5e49913_Prim> _1633_prim = _1e5e43ea1_Prim((*(_15434_g)).ptr());;
				if ((_1633_prim == nullptr)) {
					return false;;
				};
				return _1e21a3566_IsUnsigInt((*(_1633_prim))._field_Kind);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("float", 5))) {
			_case_begin_1ca92c202:;
			{
				jule::Ptr<_1e5e49913_Prim> _1693_prim = _1e5e43ea1_Prim((*(_15434_g)).ptr());;
				if ((_1693_prim == nullptr)) {
					return false;;
				};
				return _1e21a3b71_IsFloat((*(_1693_prim))._field_Kind);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("numeric", 7))) {
			_case_begin_1ca92c279:;
			{
				jule::Ptr<_1e5e49913_Prim> _1753_prim = _1e5e43ea1_Prim((*(_15434_g)).ptr());;
				if ((_1753_prim == nullptr)) {
					return false;;
				};
				return _1e21a3e07_IsNum((*(_1753_prim))._field_Kind);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("mutable", 7))) {
			_case_begin_1ca92c455:;
			{
				return _1e5e431d1_Mutable((*(_15434_g)).ptr());;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("immutable", 9))) {
			_case_begin_1ca92c4bb:;
			{
				return (!(_1e5e431d1_Mutable((*(_15434_g)).ptr())));;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("comparable", 10))) {
			_case_begin_1ca92c532:;
			{
				return _1e5e42e4a_Comparable((*(_15434_g)).ptr());;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("ordered", 7))) {
			_case_begin_1ca92c598:;
			{
				return _1e5e43467_Ordered((*(_15434_g)).ptr());;
			}
		}
		else {
			_case_begin_1ca92aa3b:;
			{
				return false;;
			}
		}
		_match_end_1ca92bec1:;
	};
}



inline jule::Bool _1e5d33335_isBuiltinConstraint(jule::Str* _19325_ident) {
	{
		auto expr = &(_1e5d31069_builtinConstraints);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca9330a4:;
		if (it != expr_end) {
			jule::Str *_1949_bc = it;
			{
				if (((*(_19325_ident)) == (*(_1949_bc)))) {
					return true;;
				};
			}
			_iter_next_1ca9330a4:;
			++it;
			goto _iter_begin_1ca9330a4;
		}
		_iter_end_1ca9330a4:;
	};
	return false;;
}



inline jule::Ptr<_1e5d40771_scopeChecker> _1e5d35e3c_newScopeCheckerBase(jule::Ptr<_1e5d7b768_sema>* _5829_s, jule::Ptr<_1e5ce3416_FnIns> _5843_owner) {
	return jule::new_ptr<_1e5d40771_scopeChecker>(_1e5d40771_scopeChecker{._field_calledFrom=jule::Ptr<_1e5c8eacc_Token>(nullptr), ._field_s=(*(_5829_s)), ._field_owner=_5843_owner, ._field_parent=jule::Ptr<_1e5d40771_scopeChecker>(nullptr), ._field_childIndex=0, ._field_table=jule::new_ptr<_1e5e03548_SymbolTable>(_1e5e03548_SymbolTable{._field_File=jule::Ptr<_1e5c95363_File>(nullptr), ._field_Passes=jule::Slice<_1e5ce7aad_Pass>(nullptr), ._field_Imports=jule::Slice<jule::Ptr<_1e5d5b2e7_ImportInfo>>(nullptr), ._field_Vars=jule::Slice<jule::Ptr<_1e5da0bcc_Var>>(nullptr), ._field_TypeAliases=jule::Slice<jule::Ptr<_1e5e40a08_TypeAlias>>(nullptr), ._field_Structs=jule::Slice<jule::Ptr<_1e5cc5e21_Struct>>(nullptr), ._field_Funcs=jule::Slice<jule::Ptr<_1e5ce0358_Fn>>(nullptr), ._field_Traits=jule::Slice<jule::Ptr<_1e5d03db6_Trait>>(nullptr), ._field_Enums=jule::Slice<jule::Ptr<_1e5d065c2_Enum>>(nullptr), ._field_TypeEnums=jule::Slice<jule::Ptr<_1e5d07ccc_TypeEnum>>(nullptr), ._field_Impls=jule::Slice<jule::Ptr<_1e5d33c09_Impl>>(nullptr)}), ._field_scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_tree=jule::Ptr<_1e5cb50a8_ScopeTree>(nullptr), ._field_result=jule::Ptr<_1e5ce3416_FnIns>(nullptr), ._field_it=0, ._field_cse=0, ._field_captured=jule::Ptr<jule::Slice<jule::Ptr<_1e5da0bcc_Var>>>(nullptr), ._field_labels=jule::Ptr<jule::Slice<jule::Ptr<_1e5d3e781_scopeLabel>>>(nullptr), ._field_gotos=jule::Ptr<jule::Slice<jule::Ptr<_1e5d3b690_GotoSt>>>(nullptr), ._field_i=0});;
}



inline jule::Ptr<_1e5d40771_scopeChecker> _1e5d36305_newScopeChecker(jule::Ptr<_1e5d7b768_sema>* _6625_s, jule::Ptr<_1e5ce3416_FnIns> _6639_owner) {
	jule::Ptr<_1e5d40771_scopeChecker> _676_base = _1e5d35e3c_newScopeCheckerBase(_6625_s, _6639_owner);;
	(*(_676_base))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1e5d3e781_scopeLabel>>>(nullptr);
	(*_676_base.alloc)._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1e5d3b690_GotoSt>>>(nullptr);
	return _676_base;;
}



inline jule::Ptr<_1e5d3e781_scopeLabel> _1e5d36679_findLabelParent(jule::Str* _7621_ident, jule::Ptr<_1e5d40771_scopeChecker> _7637_scope) {
	jule::Ptr<_1e5d3e781_scopeLabel> _776_label = _1e5d44b3d_findLabelScope(_7637_scope, _7621_ident);;
	while ((_776_label == nullptr)) {
		{
			if ((((*_7637_scope.alloc)._field_parent == nullptr) || ((*_7637_scope.alloc)._field_owner != nullptr))) {
				return nullptr;;
			};
			_7637_scope=(*_7637_scope.alloc)._field_parent;
			_776_label=_1e5d44b3d_findLabelScope(_7637_scope, _7621_ident);
		}
	_iter_next_1ca94da2b:;
	}
	_iter_end_1ca94da2b:;;
	return _776_label;;
}



inline jule::Slice<jule::Ptr<_1e5e08c13_Data>> _1e5d369ba_getDatasFromTupleData(jule::Ptr<_1e5e08c13_Data>* _8831_d) {
	if ((_1e5e45cc7_Tup((*((*(_8831_d))))._field_Kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_8831_d))))._field_Model };
			
			if (_match_expr.type == &__jule_any_type83) {
				_case_begin_1ca9532c2:;
				{
					return (*((*((*(_8831_d))))._field_Model.unsafe_cast_ptr<_1e5cd843e_TupleExprModel>()))._field_Datas;;
				}
			}
			else {
				_case_begin_1ca950874:;
				{
					jule::Ptr<_1e5e4ea06_Tuple> _948_t = _1e5e45cc7_Tup((*((*(_8831_d))))._field_Kind);;
					jule::Slice<jule::Ptr<_1e5e08c13_Data>> _958_r = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5e08c13_Data>>::alloc(0LL, (*(_948_t))._field_Types.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1e5e08c13_Data>(nullptr); __jule_collection; });;
					{
						auto expr = &((*_948_t.alloc)._field_Types);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ca95216c:;
						if (it != expr_end) {
							jule::Ptr<_1e5e417ea_TypeKind> _9616_kind = *it;
							{
								{ jule::Slice<jule::Ptr<_1e5e08c13_Data>> &__jule_push_dest = _958_r; __jule_push_dest.push(jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=_9616_kind, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)})); };
							}
							_iter_next_1ca95216c:;
							++it;
							goto _iter_begin_1ca95216c;
						}
						_iter_end_1ca95216c:;
					};
					return _958_r;;
				}
			}
			_match_end_1ca95080d:;
		};
	} else {
		return ({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5e08c13_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_8831_d)); __jule_collection; });;
	};
}



inline jule::Bool _1e5d3723a_checkMut(jule::Ptr<_1e5d7b768_sema>* _12318_s, jule::Ptr<_1e5e08c13_Data>* _12329_left, jule::Ptr<_1e5e08c13_Data> _12346_right, jule::Ptr<_1e5c8eacc_Token> _12360_op) {
	jule::Bool __jule_func_result = false;
	{
		
		if ((!((*((*(_12329_left))))._field_Mutable))) {
			_case_begin_1ca95b7d6:;
			{
				_1e5d7e66c_pushErr((*(_12318_s)).ptr(), _12360_op, static_cast<jule::Str>(jule::Str::lit("cannot assign to immutable storage", 34)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((((_12346_right != nullptr) && (!((*_12346_right.alloc)._field_Mutable))) && _1e5e431d1_Mutable((*_12346_right.alloc)._field_Kind.ptr()))) {
			_case_begin_1ca95bbe3:;
			{
				if ((((*(_12360_op))._field_Id != static_cast<jule::U64>(71LLU)) && (_1e5e45524_Struct((*(_12346_right))._field_Kind) != nullptr))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_1e5d7e66c_pushErr((*(_12318_s)).ptr(), _12360_op, static_cast<jule::Str>(jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*(_12346_right))._field_Kind), &__jule_any_type4); __jule_collection; }));
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1ca95b770:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1ca95b6b5:;
	};
}



inline jule::Bool _1e5d37724_checkAssign(jule::Ptr<_1e5d7b768_sema>* _14221_s, jule::Ptr<_1e5e08c13_Data>* _14236_left, jule::Ptr<_1e5e08c13_Data> _14253_right, jule::Ptr<_1e5c8eacc_Token> _14267_op) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1e5ce3416_FnIns> _1432_f = _1e5e4528d_Fn((*((*(_14236_left))))._field_Kind.ptr());;
	if ((((_1432_f != nullptr) && ((*_1432_f.alloc)._field_Decl != nullptr)) && (*(*(_1432_f))._field_Decl.alloc)._field_Global)) {
		_1e5d7e66c_pushErr((*(_14221_s)).ptr(), _14267_op, static_cast<jule::Str>(jule::Str::lit("type is not support assignment", 30)), jule::Slice<jule::Any>());
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		
		if (_1e5e0964d_IsConst((*(_14236_left)).ptr())) {
			_case_begin_1e19e986e:;
			{
				_1e5d7e66c_pushErr((*(_14221_s)).ptr(), _14267_op, static_cast<jule::Str>(jule::Str::lit("constants is can't assign", 25)), jule::Slice<jule::Any>());
				_1e5d7e9d0_pushSuggestion((*(_14221_s)).ptr(), static_cast<jule::Str>(jule::Str::lit("remove constant qualifer if you need to assign", 46)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!((*((*(_14236_left))))._field_Lvalue))) {
			_case_begin_1e19e9918:;
			{
				_1e5d7e66c_pushErr((*(_14221_s)).ptr(), _14267_op, static_cast<jule::Str>(jule::Str::lit("invalid expression: expected lvalue for assignment", 50)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!(_1e5d3723a_checkMut(_14221_s, _14236_left, _14253_right, _14267_op)))) {
			_case_begin_1e19e9990:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1e19e9808:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1e19e96a4:;
	};
}



inline jule::Bool _1e5d37aed_isValidAstStForNextSt(jule::Any* _16431_n) {
	{
		auto &_match_expr{ (*(_16431_n)) };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1e19e754d:;
			{
				return (!((*((*(_16431_n)).cast_ptr<_1e5cb3a35_AssignSt>(&__jule_any_type65)))._field_Declarative));;
			}
		}
		else if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1e19ebee2:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1e19e72a6:;
			{
				return false;;
			}
		}
		_match_end_1e19e7240:;
	};
}



inline jule::Bool _1e5d37d40_isValidStForNextSt(jule::Any* _17524_st) {
	{
		auto &_match_expr{ (*(_17524_st)) };
		
		if (_match_expr.type == &__jule_any_type49 || _match_expr.type == &__jule_any_type50 || _match_expr.type == &__jule_any_type53) {
			_case_begin_1e19ec256:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1e1a0358c:;
			{
				{
					auto &_match_expr{ (*((*(_17524_st)).cast_ptr<_1e5e08c13_Data>(&__jule_any_type31)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type40) {
						_case_begin_1e1a1016a:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1e1a0da1a:;
						{
							return false;;
						}
					}
					_match_end_1e1a0d9a4:;
				};
			}
		}
		else {
			_case_begin_1e19eebc6:;
			{
				return false;;
			}
		}
		_match_end_1e1a01722:;
	};
}



inline jule::U64 _1e5d52ec0_removeEqFromOp(jule::U64 _216619_op) {
	{
		auto &_match_expr{ _216619_op };
		
		if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1e1a135be:;
			{
				return static_cast<jule::U64>(60LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_1e1a0e972:;
			{
				return static_cast<jule::U64>(61LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_1e1a0e9d8:;
			{
				return static_cast<jule::U64>(62LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1e1a13635:;
			{
				return static_cast<jule::U64>(63LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1e1a1369b:;
			{
				return static_cast<jule::U64>(64LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1e1a13800:;
			{
				return static_cast<jule::U64>(56LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1e1a13866:;
			{
				return static_cast<jule::U64>(57LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_1e1a138cc:;
			{
				return static_cast<jule::U64>(67LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_1e1a0b353:;
			{
				return static_cast<jule::U64>(65LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_1e1a0b3b9:;
			{
				return static_cast<jule::U64>(66LLU);;
			}
		}
		else {
			_case_begin_1e1a118a8:;
			{
				return _216619_op;;
			}
		}
		_match_end_1e1a0ebe7:;
	};
}



inline void _1e5d53201_makeComptimeRange(jule::Ptr<_1e5e08c13_Data>* _219527_d) {
	{
		
		if ((_1e5e462e4_comptimeStructFields((*((*(_219527_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e1a12865:;
			{
				(*((*(_219527_d))))._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1e5d0a708_comptimeRange>(_1e5d0a708_comptimeRange{._field_kind=jule::Trait(_1e5e462e4_comptimeStructFields((*((*(_219527_d))))._field_Kind), (jule::Trait::Type*)&_1e5d0a4d8_comptimeRangeKind_mptr_data0)}), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data5)});
			}
		}
		else if ((_1e5e46811_comptimeEnumFields((*((*(_219527_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e1a1723d:;
			{
				(*((*(_219527_d))))._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1e5d0a708_comptimeRange>(_1e5d0a708_comptimeRange{._field_kind=jule::Trait(_1e5e46811_comptimeEnumFields((*((*(_219527_d))))._field_Kind), (jule::Trait::Type*)&_1e5d0a4d8_comptimeRangeKind_mptr_data2)}), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data5)});
			}
		}
		else if ((_1e5e475d1_comptimeTypeInfos((*((*(_219527_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e1a172a4:;
			{
				(*((*(_219527_d))))._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1e5d0a708_comptimeRange>(_1e5d0a708_comptimeRange{._field_kind=jule::Trait(_1e5e475d1_comptimeTypeInfos((*((*(_219527_d))))._field_Kind), (jule::Trait::Type*)&_1e5d0a4d8_comptimeRangeKind_mptr_data4)}), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data5)});
			}
		}
		else if ((_1e5e46d2d_comptimeParams((*((*(_219527_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e1a128cb:;
			{
				(*((*(_219527_d))))._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1e5d0a708_comptimeRange>(_1e5d0a708_comptimeRange{._field_kind=jule::Trait(_1e5e46d2d_comptimeParams((*((*(_219527_d))))._field_Kind), (jule::Trait::Type*)&_1e5d0a4d8_comptimeRangeKind_mptr_data3)}), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data5)});
			}
		}
		else if ((_1e5e47aed_comptimeStatics((*((*(_219527_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e1a12942:;
			{
				(*((*(_219527_d))))._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1e5d0a708_comptimeRange>(_1e5d0a708_comptimeRange{._field_kind=jule::Trait(_1e5e47aed_comptimeStatics((*((*(_219527_d))))._field_Kind), (jule::Trait::Type*)&_1e5d0a4d8_comptimeRangeKind_mptr_data1)}), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data5)});
			}
		}
		else if ((_1e5e48b54_comptimeFiles((*((*(_219527_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e1a129a8:;
			{
				(*((*(_219527_d))))._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1e5d0a708_comptimeRange>(_1e5d0a708_comptimeRange{._field_kind=jule::Trait(_1e5e48b54_comptimeFiles((*((*(_219527_d))))._field_Kind), (jule::Trait::Type*)&_1e5d0a4d8_comptimeRangeKind_mptr_data5)}), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data5)});
			}
		}
		else if ((_1e5e48637_comptimeDecls((*((*(_219527_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e1a17815:;
			{
				(*((*(_219527_d))))._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1e5d0a708_comptimeRange>(_1e5d0a708_comptimeRange{._field_kind=jule::Trait(_1e5e48637_comptimeDecls((*((*(_219527_d))))._field_Kind), (jule::Trait::Type*)&_1e5d0a4d8_comptimeRangeKind_mptr_data6)}), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data5)});
			}
		}
		else {
			_case_begin_1e1a127ee:;
			{
				(*((*(_219527_d))))._field_Decl=true;
			}
		}
		_match_end_1e1a16e0d:;
	};
}



inline jule::Bool _1e5d534ba_canComptimeMatch(jule::Ptr<_1e5e08c13_Data>* _221826_d) {
	if ((!(_1e5e02646_isGoodValueToInfer(_221826_d)))) {
		return false;;
	};
	return (_1e5e0964d_IsConst((*(_221826_d)).ptr()) || (_1e5e47867_comptimeTypeInfo((*((*(_221826_d))))._field_Kind.ptr()) != nullptr));;
}



inline jule::Bool _1e5d53784_stmtIsDef(jule::Any* _222615_stmt) {
	{
		auto &_match_expr{ (*(_222615_stmt)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1e1a216ed:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1e1a23cd8:;
			{
				jule::Ptr<_1e5d3c4c6_MultiAssign> _22313_ma = (*(_222615_stmt)).cast_ptr<_1e5d3c4c6_MultiAssign>(&__jule_any_type53);;
				return ((*(_22313_ma))._field_Decls.len() > 0LL);;
			}
		}
		else {
			_case_begin_1e1a23898:;
			{
				return false;;
			}
		}
		_match_end_1e1a23810:;
	};
}



inline jule::I64 _1e5d53b08_countMatchType(jule::Ptr<_1e5d3cc13_Match>* _223820_m, jule::Ptr<_1e5e417ea_TypeKind>* _223832_t) {
	jule::I64 _22396_n = 0LL;;
	_julec_label_1e1a2546b:;
	{
		auto expr = &((*((*(_223820_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e1a25889:;
		if (it != expr_end) {
			jule::Ptr<_1e5d3d73b_Case> *_22419_c = it;
			{
				if (((*(_22419_c)) == nullptr)) {
					goto _iter_next_1e1a25889;
				};
				{
					auto expr = &((*((*(_22419_c))))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1e1a2668c:;
					if (it != expr_end) {
						jule::Ptr<_1e5e08c13_Data> *_224510_expr = it;
						{
							if (((*(_224510_expr)) == nullptr)) {
								goto _iter_end_1e1a25889;
							};
							if (_1e5e42037_Equal((*(_223832_t)), (*((*(_224510_expr))))._field_Model.cast_ptr<_1e5e417ea_TypeKind>(&__jule_any_type86))) {
								(_22396_n)++;
							};
						}
						_iter_next_1e1a2668c:;
						++it;
						goto _iter_begin_1e1a2668c;
					}
					_iter_end_1e1a2668c:;
				};
			}
			_iter_next_1e1a25889:;
			++it;
			goto _iter_begin_1e1a25889;
		}
		_iter_end_1e1a25889:;
	};
	return _22396_n;;
}



inline jule::Ptr<_1e5e03548_SymbolTable> _1e5d5839e_findVarFileInPackage(jule::Slice<jule::Ptr<_1e5e03548_SymbolTable>>* _4430_files, jule::Ptr<_1e5da0bcc_Var>* _4454_v) {
	{
		auto expr = _4430_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cab55260:;
		if (it != expr_end) {
			jule::Ptr<_1e5e03548_SymbolTable> _4514_f = *it;
			{
				if ((_1e5e05ade_findVar1(_4514_f.ptr(), _4454_v) != -1LL)) {
					return _4514_f;;
				};
			}
			_iter_next_1cab55260:;
			++it;
			goto _iter_begin_1cab55260;
		}
		_iter_end_1cab55260:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e5da0bcc_Var> _1e5d58822_findVarInPackage(jule::Slice<jule::Ptr<_1e5e03548_SymbolTable>>* _5526_files, jule::Str* _5550_ident, jule::Bool _5562_binded) {
	{
		auto expr = _5526_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cab56519:;
		if (it != expr_end) {
			jule::Ptr<_1e5e03548_SymbolTable> _5614_f = *it;
			{
				jule::Ptr<_1e5da0bcc_Var> _577_v = _1e5e03e61_FindVar(_5614_f.ptr(), (*(_5550_ident)), _5562_binded);;
				if ((_577_v != nullptr)) {
					return _577_v;;
				};
			}
			_iter_next_1cab56519:;
			++it;
			goto _iter_begin_1cab56519;
		}
		_iter_end_1cab56519:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e5e40a08_TypeAlias> _1e5d58c51_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1e5e03548_SymbolTable>>* _6732_files, jule::Str* _6756_ident, jule::Bool _6768_binded) {
	{
		auto expr = _6732_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cab57ac0:;
		if (it != expr_end) {
			jule::Ptr<_1e5e03548_SymbolTable> _6814_f = *it;
			{
				jule::Ptr<_1e5e40a08_TypeAlias> _697_ta = _1e5e0435c_FindTypeAlias(_6814_f.ptr(), (*(_6756_ident)), _6768_binded);;
				if ((_697_ta != nullptr)) {
					return _697_ta;;
				};
			}
			_iter_next_1cab57ac0:;
			++it;
			goto _iter_begin_1cab57ac0;
		}
		_iter_end_1cab57ac0:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e5cc5e21_Struct> _1e5d59207_findStructInPackage(jule::Slice<jule::Ptr<_1e5e03548_SymbolTable>>* _7929_files, jule::Str* _7953_ident, jule::Bool _7965_binded) {
	{
		auto expr = _7929_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cab590ee:;
		if (it != expr_end) {
			jule::Ptr<_1e5e03548_SymbolTable> _8014_f = *it;
			{
				jule::Ptr<_1e5cc5e21_Struct> _817_s = _1e5e04758_FindStruct(_8014_f.ptr(), (*(_7953_ident)), _7965_binded);;
				if ((_817_s != nullptr)) {
					return _817_s;;
				};
			}
			_iter_next_1cab590ee:;
			++it;
			goto _iter_begin_1cab590ee;
		}
		_iter_end_1cab590ee:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e5ce0358_Fn> _1e5d59603_findFnInPackage(jule::Slice<jule::Ptr<_1e5e03548_SymbolTable>>* _9125_files, jule::Str* _9149_ident, jule::Bool _9161_binded) {
	{
		auto expr = _9125_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cab5a62d:;
		if (it != expr_end) {
			jule::Ptr<_1e5e03548_SymbolTable> _9214_file = *it;
			{
				jule::Ptr<_1e5ce0358_Fn> _937_f = _1e5e04b54_FindFn(_9214_file.ptr(), (*(_9149_ident)), _9161_binded);;
				if ((_937_f != nullptr)) {
					return _937_f;;
				};
			}
			_iter_next_1cab5a62d:;
			++it;
			goto _iter_begin_1cab5a62d;
		}
		_iter_end_1cab5a62d:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e5d03db6_Trait> _1e5d59977_findTraitInPackage(jule::Slice<jule::Ptr<_1e5e03548_SymbolTable>>* _10328_files, jule::Str* _10352_ident) {
	{
		auto expr = _10328_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cab5b51e:;
		if (it != expr_end) {
			jule::Ptr<_1e5e03548_SymbolTable> _10414_f = *it;
			{
				jule::Ptr<_1e5d03db6_Trait> _1057_t = _1e5e04e95_FindTrait(_10414_f.ptr(), (*(_10352_ident)));;
				if ((_1057_t != nullptr)) {
					return _1057_t;;
				};
			}
			_iter_next_1cab5b51e:;
			++it;
			goto _iter_begin_1cab5b51e;
		}
		_iter_end_1cab5b51e:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e5d065c2_Enum> _1e5d59ceb_findEnumInPackage(jule::Slice<jule::Ptr<_1e5e03548_SymbolTable>>* _11527_files, jule::Str* _11551_ident) {
	{
		auto expr = _11527_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cab5ce49:;
		if (it != expr_end) {
			jule::Ptr<_1e5e03548_SymbolTable> _11614_f = *it;
			{
				jule::Ptr<_1e5d065c2_Enum> _1177_e = _1e5e052d6_FindEnum(_11614_f.ptr(), (*(_11551_ident)));;
				if ((_1177_e != nullptr)) {
					return _1177_e;;
				};
			}
			_iter_next_1cab5ce49:;
			++it;
			goto _iter_begin_1cab5ce49;
		}
		_iter_end_1cab5ce49:;
	};
	return nullptr;;
}



inline jule::Ptr<_1e5d07ccc_TypeEnum> _1e5d5a280_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1e5e03548_SymbolTable>>* _12731_files, jule::Str* _12755_ident) {
	{
		auto expr = _12731_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cab5e29c:;
		if (it != expr_end) {
			jule::Ptr<_1e5e03548_SymbolTable> _12814_f = *it;
			{
				jule::Ptr<_1e5d07ccc_TypeEnum> _1297_e = _1e5e05627_FindTypeEnum(_12814_f.ptr(), (*(_12755_ident)));;
				if ((_1297_e != nullptr)) {
					return _1297_e;;
				};
			}
			_iter_next_1cab5e29c:;
			++it;
			goto _iter_begin_1cab5e29c;
		}
		_iter_end_1cab5e29c:;
	};
	return nullptr;;
}



inline jule::Any _1e5d5a637_defByIdentPackage(jule::Slice<jule::Ptr<_1e5e03548_SymbolTable>>* _13827_files, jule::Str* _13851_ident, jule::Bool _13863_binded) {
	{
		auto expr = _13827_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cab5abc2:;
		if (it != expr_end) {
			jule::Ptr<_1e5e03548_SymbolTable> _13914_file = *it;
			{
				jule::Any _1407_def = _1e5e06947_defByIdent(_13914_file.ptr(), _13851_ident, _13863_binded);;
				if ((_1407_def != nullptr)) {
					return _1407_def;;
				};
			}
			_iter_next_1cab5abc2:;
			++it;
			goto _iter_begin_1cab5abc2;
		}
		_iter_end_1cab5abc2:;
	};
	return nullptr;;
}



inline jule::Bool _1e5d616e8_isStdPackage(jule::Str* _36918_f, jule::Str _36926_p) {
	return _2256d7380_HasPrefix((*(_36918_f)), _2256e2cd6_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _2258644eb_PathStdlib; (*it++) = _36926_p; __jule_collection; })));;
}



inline jule::Bool _1e5d78d2b_isValidModelForRef(jule::Any* _1328_m) {
	{
		auto &_match_expr{ (*(_1328_m)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1cab71699:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1cab71710:;
			{
				jule::Ptr<_1e5cd78c2_StructSubIdentExprModel> _187_model = (*(_1328_m)).cast_ptr<_1e5cd78c2_StructSubIdentExprModel>(&__jule_any_type100);;
				return (((*(_187_model))._field_Field != nullptr) && _1e5d78d2b_isValidModelForRef(&((*((*_187_model.alloc)._field_Expr))._field_Model)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1cab71776:;
			{
				jule::Ptr<_1e5cd322a_UnaryExprModel> _217_unary = (*(_1328_m)).cast_ptr<_1e5cd322a_UnaryExprModel>(&__jule_any_type112);;
				if (((*((*(_217_unary))._field_Op))._field_Id != static_cast<jule::U64>(62LLU))) {
					return false;;
				};
				if ((_1e5e444bd_Ptr((*((*_217_unary.alloc)._field_Expr))._field_Kind.ptr()) != nullptr)) {
					return true;;
				};
				if ((_1e5e44237_Sptr((*((*(_217_unary))._field_Expr))._field_Kind) == nullptr)) {
					return false;;
				};
				return _1e5d78d2b_isValidModelForRef(&((*(*(_217_unary))._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1cab717dc:;
			{
				jule::Ptr<_1e5cd56b1_IndexingExprModel> _357_indexing = (*(_1328_m)).cast_ptr<_1e5cd56b1_IndexingExprModel>(&__jule_any_type52);;
				if ((_1e5e44c71_Arr((*((*(_357_indexing))._field_Expr))._field_Kind.ptr()) == nullptr)) {
					return false;;
				};
				return _1e5d78d2b_isValidModelForRef(&((*(*(_357_indexing))._field_Expr.alloc)._field_Model));;
			}
		}
		else {
			_case_begin_1cab7128c:;
			{
				return false;;
			}
		}
		_match_end_1cab70d6e:;
	};
}



inline _22578b38a_Log _1e5d792d2_compilerErr(jule::Ptr<_1e5c8eacc_Token>* _4717_token, jule::Bool _4732_line, jule::Str _4744_fmt, jule::Slice<jule::Any> _4757_args) {
	_22578b38a_Log _486_log = _22578b38a_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*((*(_4717_token))))._field_Row, ._field_Column=(*((*(_4717_token))))._field_Column, ._field_Path=(*((*((*(_4717_token))))._field_File))._field_Path, ._field_Text=_22578b7ec_Logf(_4744_fmt, _4757_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
	if (_4732_line) {
		_486_log._field_Line=_1e5c963a8_GetRow((*((*(_4717_token))))._field_File, (*((*(_4717_token))))._field_Row);
	};
	return _486_log;;
}



inline jule::Bool _1e5d79656_impIsLookupable(jule::Ptr<_1e5d5b2e7_ImportInfo>* _6121_i, jule::Str* _6138_ident) {
	if ((*((*(_6121_i))))._field_Binded) {
		return false;;
	};
	if ((!((*((*(_6121_i))))._field_ImportAll))) {
		if (((*((*(_6121_i))))._field_Selected.len() > 0LL)) {
			return _1e5d5dbac_existIdent((*(_6121_i)).ptr(), (*(_6138_ident)));;
		};
	};
	return (*((*(_6121_i))))._field_ImportAll;;
}



inline void _1e5d79986_appendRetVars(jule::Slice<jule::Ptr<_1e5da0bcc_Var>>* _7323_dest, jule::Ptr<_1e5ce3416_FnIns>* _7342_f) {
	if ((_1e5ce080e_IsVoid((*((*(_7342_f))))._field_Decl.ptr()) || ((*((*(_7342_f))))._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_1e5e417ea_TypeKind>> _786_types = _1e5ce4648_Types((*(_7342_f)).ptr());;
	{
		auto expr = &((*((*(*((*(_7342_f))))._field_Decl.alloc)._field_Result))._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cab83656:;
		if (it != expr_end) {
			jule::I64 _797_i = it - expr->begin();
			jule::Ptr<_1e5c8eacc_Token> _7914_ident = *it;
			{
				if ((_1e5c924b4_IsIgnoreIdent((*(_7914_ident))._field_Kind) || _1e5c9277d_IsAnonIdent((*_7914_ident.alloc)._field_Kind))) {
					goto _iter_next_1cab83656;
				};
				{ jule::Slice<jule::Ptr<_1e5da0bcc_Var>> &__jule_push_dest = (*(_7323_dest)); __jule_push_dest.push(jule::new_ptr<_1e5da0bcc_Var>(_1e5da0bcc_Var{._field_Scope=(*((*(_7342_f))))._field_Scope, ._field_Token=_7914_ident, ._field_Ident=(*_7914_ident.alloc)._field_Kind, ._field_Binded=false, ._field_Constant=false, ._field_Mutable=true, ._field_Public=false, ._field_Used=true, ._field_Statically=false, ._field_Reference=false, ._field_Kind=jule::new_ptr<_1e5e4900b_TypeSymbol>(_1e5e4900b_TypeSymbol{._field_Decl=jule::Ptr<_1e5ca5087_TypeDecl>(nullptr), ._field_Kind=_786_types[_797_i]}), ._field_Value=jule::new_ptr<_1e5e09d8a_Value>(_1e5e09d8a_Value{._field_Expr=jule::Ptr<_1e5ca93bb_Expr>(nullptr), ._field_Data=jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)})}), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1e5ca44a4_Directive>>(nullptr), ._field_RetOrder=_797_i, ._field_Depends=jule::Slice<jule::Ptr<_1e5da0bcc_Var>>(nullptr)})); };
			}
			_iter_next_1cab83656:;
			++it;
			_797_i++;
			goto _iter_begin_1cab83656;
		}
		_iter_end_1cab83656:;
	};
	if ((((*(*((*((*(_7342_f))))._field_Decl))._field_Result.alloc)._field_Idents.len() == 1LL) && ((*(_7323_dest)).len() == 1LL))) {
		(*((*(_7323_dest))[((*(_7323_dest)).len() - 1LL)]))._field_RetOrder=-1LL;
	};
}



inline void _1e5d79c72_appendParamVars(jule::Slice<jule::Ptr<_1e5da0bcc_Var>>* _10325_dest, jule::Ptr<_1e5ce3416_FnIns>* _10344_f) {
	if (((*((*(_10344_f))))._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_10344_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cab87ec9:;
		if (it != expr_end) {
			jule::Ptr<_1e5ce22b1_ParamIns> _10814_p = *it;
			{
				if ((_1e5c924b4_IsIgnoreIdent((*((*(_10814_p))._field_Decl))._field_Ident) || _1e5c9277d_IsAnonIdent((*(*(_10814_p))._field_Decl.alloc)._field_Ident))) {
					goto _iter_next_1cab87ec9;
				};
				jule::Ptr<_1e5da0bcc_Var> _1137_v = jule::new_ptr<_1e5da0bcc_Var>(_1e5da0bcc_Var{._field_Scope=(*((*(_10344_f))))._field_Scope, ._field_Token=(*(*(_10814_p))._field_Decl.alloc)._field_Token, ._field_Ident=(*(*(_10814_p))._field_Decl.alloc)._field_Ident, ._field_Binded=false, ._field_Constant=false, ._field_Mutable=(*(*(_10814_p))._field_Decl.alloc)._field_Mutable, ._field_Public=false, ._field_Used=true, ._field_Statically=false, ._field_Reference=(*(*(_10814_p))._field_Decl.alloc)._field_Reference, ._field_Kind=jule::new_ptr<_1e5e4900b_TypeSymbol>(_1e5e4900b_TypeSymbol{._field_Decl=jule::Ptr<_1e5ca5087_TypeDecl>(nullptr), ._field_Kind=jule::Ptr<_1e5e417ea_TypeKind>(nullptr)}), ._field_Value=jule::new_ptr<_1e5e09d8a_Value>(_1e5e09d8a_Value{._field_Expr=jule::Ptr<_1e5ca93bb_Expr>(nullptr), ._field_Data=jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)})}), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1e5ca44a4_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1e5da0bcc_Var>>(nullptr)});;
				{
					
					if (_1e5cdded3_IsSelf((*(_10814_p))._field_Decl)) {
						_case_begin_1cab8bdac:;
						{
							(*((*(_1137_v))._field_Kind))._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*((*(_10344_f))))._field_Owner, (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data0)});
							(*_1137_v.alloc)._field_Reference=(!(_1e5cde269_IsRef((*(_10814_p))._field_Decl)));
							if (_1e5cde269_IsRef((*(_10814_p))._field_Decl)) {
								((*(_1137_v))._field_Ident).mut_slice(1LL);;
								(*((*(*(_1137_v))._field_Kind.alloc)._field_Kind))._field_Kind=jule::Trait(jule::new_ptr<_1e5e4d43e_Sptr>(_1e5e4d43e_Sptr{._field_Elem=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=(*(*((*(_1137_v))._field_Kind))._field_Kind.alloc)._field_BindIdent, ._field_Generic=false, ._field_Variadic=false, ._field_Kind=(*(*((*(_1137_v))._field_Kind))._field_Kind.alloc)._field_Kind})}), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data23);
							};
						}
					}
					else if ((*(*(_10814_p))._field_Decl.alloc)._field_Variadic) {
						_case_begin_1cab8ba8d:;
						{
							(*((*(_1137_v))._field_Kind))._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1e5e4de12_Slc>(_1e5e4de12_Slc{._field_Elem=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=(*((*_10814_p.alloc)._field_Kind))._field_BindIdent, ._field_Generic=false, ._field_Variadic=false, ._field_Kind=(*(*(_10814_p))._field_Kind.alloc)._field_Kind})}), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data24)});
						}
					}
					else {
						_case_begin_1cab8ba27:;
						{
							(*((*(_1137_v))._field_Kind))._field_Kind=(*_10814_p.alloc)._field_Kind;
						}
					}
					_match_end_1cab8b8e5:;
				};
				{ jule::Slice<jule::Ptr<_1e5da0bcc_Var>> &__jule_push_dest = (*(_10325_dest)); __jule_push_dest.push(_1137_v); };
			}
			_iter_next_1cab87ec9:;
			++it;
			goto _iter_begin_1cab87ec9;
		}
		_iter_end_1cab87ec9:;
	};
}



inline void _1e5d7a05d_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1e5e40a08_TypeAlias>>* _16334_dest, jule::Ptr<_1e5ce3416_FnIns>* _16359_f) {
	jule::I64 _1646_size = (*((*(_16359_f))))._field_Generics.len();;
	if (((*((*((*(_16359_f))))._field_Decl))._field_Owner != nullptr)) {
		_1646_size+=(*(*((*((*(_16359_f))))._field_Decl))._field_Owner.alloc)._field_Generics.len();
	};
	if ((_1646_size == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_16359_f))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cab95316:;
		if (it != expr_end) {
			jule::I64 _1737_i = it - expr->begin();
			jule::Ptr<_1e5e3ee14_InsGeneric> _17314_g = *it;
			{
				if ((_17314_g == nullptr)) {
					goto _iter_next_1cab95316;
				};
				jule::Ptr<_1e5cb2292_GenericDecl> _1777_decl = (*(*((*(_16359_f))))._field_Decl.alloc)._field_Generics[_1737_i];;
				{ jule::Slice<jule::Ptr<_1e5e40a08_TypeAlias>> &__jule_push_dest = (*(_16334_dest)); __jule_push_dest.push(jule::new_ptr<_1e5e40a08_TypeAlias>(_1e5e40a08_TypeAlias{._field_Scope=(*(*((*(_16359_f))))._field_Decl.alloc)._field_Scope, ._field_Public=false, ._field_Binded=false, ._field_Used=true, ._field_Generic=true, ._field_Token=(*_1777_decl.alloc)._field_Token, ._field_Ident=(*(_1777_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1e5e4900b_TypeSymbol>(_1e5e4900b_TypeSymbol{._field_Decl=jule::Ptr<_1e5ca5087_TypeDecl>(nullptr), ._field_Kind=(*(_17314_g))._field_Kind}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e40a08_TypeAlias>>(nullptr)})); };
			}
			_iter_next_1cab95316:;
			++it;
			_1737_i++;
			goto _iter_begin_1cab95316;
		}
		_iter_end_1cab95316:;
	};
	if (((*(*((*(_16359_f))))._field_Decl.alloc)._field_Owner != nullptr)) {
		jule::Ptr<_1e5cc8c7b_StructIns> _1897_owner = (*((*(_16359_f))))._field_Owner;;
		{
			auto expr = &((*_1897_owner.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1cab96bca:;
			if (it != expr_end) {
				jule::I64 _1908_i = it - expr->begin();
				jule::Ptr<_1e5e3ee14_InsGeneric> _19015_g = *it;
				{
					jule::Ptr<_1e5cb2292_GenericDecl> _1918_decl = (*((*(_1897_owner))._field_Decl))._field_Generics[_1908_i];;
					{ jule::Slice<jule::Ptr<_1e5e40a08_TypeAlias>> &__jule_push_dest = (*(_16334_dest)); __jule_push_dest.push(jule::new_ptr<_1e5e40a08_TypeAlias>(_1e5e40a08_TypeAlias{._field_Scope=(*(*((*(_16359_f))))._field_Decl.alloc)._field_Scope, ._field_Public=false, ._field_Binded=false, ._field_Used=true, ._field_Generic=true, ._field_Token=(*_1918_decl.alloc)._field_Token, ._field_Ident=(*(_1918_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1e5e4900b_TypeSymbol>(_1e5e4900b_TypeSymbol{._field_Decl=jule::Ptr<_1e5ca5087_TypeDecl>(nullptr), ._field_Kind=(*(_19015_g))._field_Kind}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e40a08_TypeAlias>>(nullptr)})); };
				}
				_iter_next_1cab96bca:;
				++it;
				_1908_i++;
				goto _iter_begin_1cab96bca;
			}
			_iter_end_1cab96bca:;
		};
	};
}



inline jule::Ptr<_1e5e03548_SymbolTable> _1e5d7a3d2_findFile(jule::Slice<jule::Ptr<_1e5e03548_SymbolTable>>* _20418_files, jule::Ptr<_1e5c95363_File>* _20442_handler) {
	{
		auto expr = _20418_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cab9acab:;
		if (it != expr_end) {
			jule::Ptr<_1e5e03548_SymbolTable> _20514_fl = *it;
			{
				if (((*(_20514_fl))._field_File == (*(_20442_handler)))) {
					return _20514_fl;;
				};
			}
			_iter_next_1cab9acab:;
			++it;
			goto _iter_begin_1cab9acab;
		}
		_iter_end_1cab9acab:;
	};
	return nullptr;;
}



inline void _1e5d7a888_pushSuggestion(_22578b38a_Log* _21330_log, jule::Str _21341_fmt, jule::Slice<jule::Any> _21354_args) {
	(*(_21330_log))._field_Suggestion=_22578b7ec_Logf(_21341_fmt, _21354_args);
}



inline void _1e5d9de61_pushImplemented(jule::Ptr<_1e5d03db6_Trait> _300524_t, jule::Ptr<_1e5cc5e21_Struct>* _300540_d) {
	_julec_label_1cab9a87c:;
	{
		
		if (((*(_300524_t))._field_Implemented.len() > 0LL)) {
			_case_begin_1cab9d9d4:;
			{
				{
					auto expr = &((*_300524_t.alloc)._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cab9e441:;
					if (it != expr_end) {
						jule::Ptr<_1e5cc5e21_Struct> _300910_s = *it;
						{
							if ((_300910_s == (*(_300540_d)))) {
								goto _match_end_1cab9ce67;
							};
						}
						_iter_next_1cab9e441:;
						++it;
						goto _iter_begin_1cab9e441;
					}
					_iter_end_1cab9e441:;
				};
				goto _case_begin_1cab9d022;
			}
		}
		else {
			_case_begin_1cab9d022:;
			{
				(*(_300524_t))._field_Implemented=jule::append((*_300524_t.alloc)._field_Implemented,({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5cc5e21_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_300540_d)); __jule_collection; }));
			}
		}
		_match_end_1cab9ce67:;
	};
	{
		auto expr = &((*(_300524_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cab9ed59:;
		if (it != expr_end) {
			jule::Ptr<_1e5e4900b_TypeSymbol> _301814_i = *it;
			{
				_1e5d9de61_pushImplemented(_1e5e457aa_Trait((*(_301814_i))._field_Kind.ptr()), _300540_d);
			}
			_iter_next_1cab9ed59:;
			++it;
			goto _iter_begin_1cab9ed59;
		}
		_iter_end_1cab9ed59:;
	};
}



inline void _1e5d9e24c_pushImplements(jule::Ptr<_1e5cc5e21_Struct>* _302324_s, jule::Ptr<_1e5d03db6_Trait> _302340_t) {
	_julec_label_1cab9e0de:;
	{
		
		if (((*((*(_302324_s))))._field_Implements.len() > 0LL)) {
			_case_begin_1caba1575:;
			{
				{
					auto expr = &((*((*(_302324_s))))._field_Implements);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1caba1ed2:;
					if (it != expr_end) {
						jule::Ptr<_1e5d03db6_Trait> _302710_b = *it;
						{
							if ((_302710_b == _302340_t)) {
								goto _match_end_1caba0a08;
							};
						}
						_iter_next_1caba1ed2:;
						++it;
						goto _iter_begin_1caba1ed2;
					}
					_iter_end_1caba1ed2:;
				};
				goto _case_begin_1caba0ab3;
			}
		}
		else {
			_case_begin_1caba0ab3:;
			{
				{ jule::Slice<jule::Ptr<_1e5d03db6_Trait>> &__jule_push_dest = (*((*(_302324_s))))._field_Implements; __jule_push_dest.push(_302340_t); };
			}
		}
		_match_end_1caba0a08:;
	};
	{
		auto expr = &((*(_302340_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1caba28ea:;
		if (it != expr_end) {
			jule::Ptr<_1e5e4900b_TypeSymbol> _303614_i = *it;
			{
				_1e5d9e24c_pushImplements(_302324_s, _1e5e457aa_Trait((*(_303614_i))._field_Kind.ptr()));
			}
			_iter_next_1caba28ea:;
			++it;
			goto _iter_begin_1caba28ea;
		}
		_iter_end_1caba28ea:;
	};
}



inline void _1e5d9e69d_pushRuntimeToStr(jule::Ptr<_1e5d7b768_sema>* _304126_s, jule::Ptr<_1e5e417ea_TypeKind>* _304141_t, jule::Ptr<_1e5c8eacc_Token>* _304160_token, jule::Ptr<_1e5ce65a1_ReferenceStack> _30426_refers) {
	if ((((*((*((*(_304126_s))))._field_meta))._field_runtime == nullptr) || _1e5e4292d_IsNil((*(_304141_t)).ptr()))) {
		return;;
	};
	jule::Ptr<_1e5ce3416_FnIns> _30466_f = _1e5ce1865_instanceForce(_1e21ae8d5_runtimeFindFn(&((*(*((*(_304126_s))))._field_meta.alloc)._field_runtime), static_cast<jule::Str>(jule::Str::lit("toStr", 5))));;
	(*(_30466_f))._field_Generics=jule::append((*_30466_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1e5e3ee14_InsGeneric>(_1e5e3ee14_InsGeneric{._field_Kind=(*(_304141_t)), ._field_Constraint=jule::Slice<jule::Ptr<_1e5e417ea_TypeKind>>(nullptr)}); __jule_collection; }));
	jule::Bool _30482_ok;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1e5d97c4b_checkGenericFn((*(_304126_s)), &(_30466_f), _304160_token);
		_30482_ok = __jule_assign_result.__jule_result_arg0;
	});
	if ((!(_30482_ok))) {
		__jule_panic_s(jule::Str::lit("sema: toStr evaluation failed, this is an implementation mistake", 64) + jule::Str("\nlocation: std/jule/sema/sema.jule:3050:3"));;
	};
	if ((_30426_refers != nullptr)) {
		_1e5ce73b5_Push(_30426_refers, jule::Any(_30466_f, &__jule_any_type7));
	};
}



inline jule::Bool _1e5dde06c_traitHasReferenceReceiver(jule::Ptr<_1e5d03db6_Trait>* _2831_t) {
	{
		auto expr = &((*((*(_2831_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb09b640:;
		if (it != expr_end) {
			jule::Ptr<_1e5ce0358_Fn> *_299_f = it;
			{
				if ((*((*(_299_f))))._field_Statically) {
					goto _iter_next_1cb09b640;
				};
				jule::Ptr<_1e5cdd884_Param> _353_p = (*(*(_299_f)).alloc)._field_Params[0LL];;
				if ((_1e5cde269_IsRef(_353_p.ptr()) && _1e5cdded3_IsSelf(_353_p))) {
					return true;;
				};
			}
			_iter_next_1cb09b640:;
			++it;
			goto _iter_begin_1cb09b640;
		}
		_iter_end_1cb09b640:;
	};
	return false;;
}



inline jule::Bool _1e5dde402_floatAssignable(jule::Str* _4321_kind, jule::Ptr<_1e5e08c13_Data>* _4333_d) {
	jule::Str _442_value = _1e217e146_FmtFloat(_1e21a7191_AsF64((*((*(_4333_d))))._field_Constant.ptr()), 'g', -1LL, 64LL);;
	return _1e2199caa_CheckBitFloat(_442_value, _1e2198814_BitsizeOf((*(_4321_kind))));;
}



inline jule::Bool _1e5dde776_sigAssignable(jule::Str _4818_kind, jule::Ptr<_1e5e08c13_Data>* _4830_d) {
	jule::F64 _492_min = _1e219ee9c_Min(_4818_kind);;
	jule::F64 _502_max = _1e21a0233_Max(_4818_kind);;
	{
		
		if (_1e21a8ed9_IsF64((*((*(_4830_d))))._field_Constant.ptr())) {
			_case_begin_1cb0a01c1:;
			{
				jule::F64 _533_x = _1e21a68dd_ReadF64((*((*(_4830_d))))._field_Constant);;
				jule::F64 _543_i;
				jule::F64 _546_frac;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1e2154d97_Modf(_533_x);
					_543_i = __jule_assign_result.__jule_result_arg0;
					_546_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_546_frac != 0LL)) {
					return false;;
				};
				return ((_543_i >= _492_min) && (_543_i <= _502_max));;
			}
		}
		else if (_1e21a8736_IsU64((*((*(_4830_d))))._field_Constant.ptr())) {
			_case_begin_1cb0a0237:;
			{
				jule::F64 _603_x = _1e21a7191_AsF64((*((*(_4830_d))))._field_Constant);;
				if ((_603_x <= _502_max)) {
					return true;;
				};
			}
		}
		else if (_1e21a84a0_IsI64((*((*(_4830_d))))._field_Constant.ptr())) {
			_case_begin_1cb0a02ae:;
			{
				jule::F64 _653_x = _1e21a7191_AsF64((*((*(_4830_d))))._field_Constant);;
				return ((_492_min <= _653_x) && (_653_x <= _502_max));;
			}
		}
		_match_end_1cb0a00a0:;
	};
	return false;;
}



inline jule::Bool _1e5ddeb3e_unsigAssignable(jule::Str _7120_kind, jule::Ptr<_1e5e08c13_Data>* _7132_d) {
	jule::F64 _722_max = _1e21a0233_Max(_7120_kind);;
	if (((*((*(_7132_d))))._field_IsRune && (_7120_kind == static_cast<jule::Str>(jule::Str::lit("u8", 2))))) {
		return _1e5dc268d_IsAscii(static_cast<jule::I32>(_1e21a5da4_ReadI64((*((*(_7132_d))))._field_Constant.ptr())));;
	};
	{
		
		if (_1e21a8ed9_IsF64((*((*(_7132_d))))._field_Constant)) {
			_case_begin_1cb0a5e41:;
			{
				jule::F64 _793_x = _1e21a68dd_ReadF64((*((*(_7132_d))))._field_Constant);;
				if ((_793_x < 0LL)) {
					return false;;
				};
				jule::F64 _833_i;
				jule::F64 _836_frac;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1e2154d97_Modf(_793_x);
					_833_i = __jule_assign_result.__jule_result_arg0;
					_836_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_836_frac != 0LL)) {
					return false;;
				};
				return (_833_i <= _722_max);;
			}
		}
		else if (_1e21a8736_IsU64((*((*(_7132_d))))._field_Constant)) {
			_case_begin_1cb0a5ea7:;
			{
				jule::F64 _893_x = _1e21a7191_AsF64((*((*(_7132_d))))._field_Constant);;
				if ((_893_x <= _722_max)) {
					return true;;
				};
			}
		}
		else if (_1e21a84a0_IsI64((*((*(_7132_d))))._field_Constant)) {
			_case_begin_1cb0a601d:;
			{
				jule::F64 _943_x = _1e21a7191_AsF64((*((*(_7132_d))))._field_Constant);;
				return ((0LL <= _943_x) && (_943_x <= _722_max));;
			}
		}
		_match_end_1cb0a54e5:;
	};
	return false;;
}



inline jule::Bool _1e5ddeeb3_intAssignable(jule::Str _10018_kind, jule::Ptr<_1e5e08c13_Data>* _10030_d) {
	{
		
		if (_1e21a3258_IsSigInt(_10018_kind)) {
			_case_begin_1cb0aaa6c:;
			{
				return _1e5dde776_sigAssignable(_10018_kind, _10030_d);;
			}
		}
		else if (_1e21a3566_IsUnsigInt(_10018_kind)) {
			_case_begin_1cb0aab05:;
			{
				return _1e5ddeb3e_unsigAssignable(_10018_kind, _10030_d);;
			}
		}
		else {
			_case_begin_1cb0aa594:;
			{
				return false;;
			}
		}
		_match_end_1cb0aa4b7:;
	};
}



inline void _1e5deb4a8_checkMutRiskOfStructLit(jule::Ptr<_1e5d7b768_sema>* _92133_s, jule::Ptr<_1e5cd3aee_StructLitExprModel>* _92144_m) {
	{
		auto expr = &((*((*(_92144_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb0abbd3:;
		if (it != expr_end) {
			jule::Ptr<_1e5cd3758_StructArgExprModel> *_9229_arg = it;
			{
				if ((*((*((*((*(_9229_arg))))._field_Field))._field_Decl))._field_Mutable) {
					goto _iter_next_1cb0abbd3;
				};
				if (((!((*((*(*(_9229_arg)).alloc)._field_Expr))._field_Mutable)) && _1e5e431d1_Mutable((*(*((*(_9229_arg))))._field_Expr.alloc)._field_Kind.ptr()))) {
					_1e5d7e66c_pushErr((*(_92133_s)).ptr(), (*(*(_9229_arg)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*((*((*(_9229_arg))))._field_Expr))._field_Kind), &__jule_any_type4); __jule_collection; }));
				};
			}
			_iter_next_1cb0abbd3:;
			++it;
			goto _iter_begin_1cb0abbd3;
		}
		_iter_end_1cb0abbd3:;
	};
}



inline jule::Ptr<_1e5e417ea_TypeKind> _1e5e022e4_lenKind(void) {
	return _1e60275b2_primInt;;
}



inline jule::Bool _1e5e02646_isGoodValueToInfer(jule::Ptr<_1e5e08c13_Data>* _142624_d) {
	return (!(_1e5e09131_IsNil((*(_142624_d)).ptr())));;
}



inline jule::Ptr<_1e5ca44a4_Directive> _1e5e33215_findDirective(jule::Slice<jule::Ptr<_1e5ca44a4_Directive>>* _440223_directives, jule::Str _440254_d) {
	{
		auto expr = _440223_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cae16169:;
		if (it != expr_end) {
			jule::Ptr<_1e5ca44a4_Directive> _440314_dr = *it;
			{
				if (((*((*(_440314_dr))._field_Tag))._field_Kind == _440254_d)) {
					return _440314_dr;;
				};
			}
			_iter_next_1cae16169:;
			++it;
			goto _iter_begin_1cae16169;
		}
		_iter_end_1cae16169:;
	};
	return nullptr;;
}



inline jule::Any _1e5e335cd_findBuiltinsImport(jule::Str* _441124_ident, jule::Ptr<_1e5d5b2e7_ImportInfo> _441136_imp) {
	return _1e602abc0_findPackageBuiltinDef(&((*(_441136_imp))._field_LinkPath), _441124_ident);;
}



inline void _1e5e3380e_fitBitsize(jule::Ptr<_1e5e08c13_Data>* _442020_d) {
	jule::Ptr<_1e5e49913_Prim> _44216_prim = _1e5e43ea1_Prim((*((*(_442020_d))))._field_Kind.ptr());;
	jule::I64 _44222_z = _1e2198814_BitsizeOf(_1e5e49c87_Str(_44216_prim.ptr()));;
	{
		
		if (_1e21a84a0_IsI64((*((*(_442020_d))))._field_Constant.ptr())) {
			_case_begin_1cae196ab:;
			{
				jule::I64 _44253_k = _1e219a33d_BitsizeOfInt(_1e21a5da4_ReadI64((*((*(_442020_d))))._field_Constant));;
				if (((_44253_k > _44222_z) || _1e21a3566_IsUnsigInt((*_44216_prim.alloc)._field_Kind))) {
					(*(*((*(_442020_d))))._field_Constant.alloc)._field_Kind=_1e2198b55_IntFromBits(_44253_k);
					(*((*(_442020_d))))._field_Kind=(*((*(_1e6029916_findBuiltinTypeAlias((*(*((*(_442020_d))))._field_Constant.alloc)._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		else if (_1e21a8736_IsU64((*((*(_442020_d))))._field_Constant.ptr())) {
			_case_begin_1cae19722:;
			{
				jule::I64 _44313_k = _1e219a607_BitsizeOfUint(_1e21a613a_ReadU64((*((*(_442020_d))))._field_Constant));;
				if (((_44313_k > _44222_z) || _1e21a3258_IsSigInt((*_44216_prim.alloc)._field_Kind))) {
					(*(*((*(_442020_d))))._field_Constant.alloc)._field_Kind=_1e2198ddb_UintFromBits(_44313_k);
					(*((*(_442020_d))))._field_Kind=(*((*(_1e6029916_findBuiltinTypeAlias((*(*((*(_442020_d))))._field_Constant.alloc)._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		else if (_1e21a8ed9_IsF64((*((*(_442020_d))))._field_Constant.ptr())) {
			_case_begin_1cae19799:;
			{
				if ((_44222_z == 64LLU)) {
					return;;
				};
				jule::I64 _44413_k = _1e219a074_BitsizeOfFloat(_1e21a68dd_ReadF64((*((*(_442020_d))))._field_Constant));;
				if ((_44413_k > _44222_z)) {
					(*(*((*(_442020_d))))._field_Constant.alloc)._field_Kind=_1e21991a5_FloatFromBits(_44413_k);
					(*((*(_442020_d))))._field_Kind=(*((*(_1e6029916_findBuiltinTypeAlias((*(*((*(_442020_d))))._field_Constant.alloc)._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		_match_end_1cae1958a:;
	};
}



inline void _1e5e33b3e_makeStructLitAlloc(jule::Ptr<_1e5e08c13_Data>* _444928_d, jule::Ptr<_1e5cd3aee_StructLitExprModel>* _444943_lit) {
	(*((*(_444928_d))))._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1e5e4d43e_Sptr>(_1e5e4d43e_Sptr{._field_Elem=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*((*(_444943_lit))))._field_Strct, (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data0)})}), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data23)});
	(*((*(_444928_d))))._field_Model=jule::Any(jule::new_ptr<_1e5cd3deb_AllocStructLitExprModel>(_1e5cd3deb_AllocStructLitExprModel{._field_Lit=(*(_444943_lit))}), &__jule_any_type114);
}



inline jule::Ptr<_1e5da0bcc_Var> _1e5e33eb3_buildErrorVar(jule::Ptr<_1e5d384d3_Scope>* _446023_s, jule::Ptr<_1e5cad0e5_FnCallExpr>* _446039_fc) {
	return jule::new_ptr<_1e5da0bcc_Var>(_1e5da0bcc_Var{._field_Scope=(*(_446023_s)), ._field_Token=(*((*(_446039_fc))))._field_Token, ._field_Ident=jule::Str::lit("error", 5), ._field_Binded=false, ._field_Constant=false, ._field_Mutable=true, ._field_Public=false, ._field_Used=true, ._field_Statically=false, ._field_Reference=false, ._field_Kind=(*(_1e6029916_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("any", 3)))))._field_Kind, ._field_Value=jule::new_ptr<_1e5e09d8a_Value>(_1e5e09d8a_Value{._field_Expr=jule::Ptr<_1e5ca93bb_Expr>(nullptr), ._field_Data=jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)})}), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1e5ca44a4_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1e5da0bcc_Var>>(nullptr)});;
}



inline jule::Any _1e5e34337_findBuiltinsSema(jule::Str* _447522_ident, jule::Ptr<_1e5d7b768_sema> _447538_s) {
	{
		auto expr = &((*((*(_447538_s))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cae28973:;
		if (it != expr_end) {
			jule::Ptr<_1e5d5b2e7_ImportInfo> _447614_imp = *it;
			{
				if (((*(_447614_imp))._field_ImportAll || _1e5d5dbac_existIdent(_447614_imp, (*(_447522_ident))))) {
					jule::Any _44788_def = _1e5e335cd_findBuiltinsImport(_447522_ident, _447614_imp);;
					if ((_44788_def != nullptr)) {
						return _44788_def;;
					};
				};
			}
			_iter_next_1cae28973:;
			++it;
			goto _iter_begin_1cae28973;
		}
		_iter_end_1cae28973:;
	};
	jule::Str _44866_ppath = _1e5c95a4a_Dir((*(*(_447538_s))._field_file.alloc)._field_File.ptr());;
	if (_2256d7380_HasPrefix(_44866_ppath, _2258644eb_PathStdlib)) {
		(_44866_ppath).mut_slice(_2258644eb_PathStdlib.len());;
		_44866_ppath=(jule::Str::lit("std", 3) + _2256dcc26_Replace(_44866_ppath, jule::Str::lit("\\", 1), jule::Str::lit("::", 2), -1LL));
		return _1e602abc0_findPackageBuiltinDef(&(_44866_ppath), _447522_ident);;
	};
	return nullptr;;
}



inline jule::Bool _1e5e34601_isOkForShifting(jule::Ptr<_1e5e08c13_Data>* _450025_d) {
	if (_1e5e0964d_IsConst((*(_450025_d)).ptr())) {
		{
			
			if (_1e21a84a0_IsI64((*((*(_450025_d))))._field_Constant.ptr())) {
				_case_begin_1cae2be2c:;
				{
					return (_1e21a5da4_ReadI64((*((*(_450025_d))))._field_Constant) >= 0LL);;
				}
			}
			else if (_1e21a8736_IsU64((*((*(_450025_d))))._field_Constant.ptr())) {
				_case_begin_1cae2bec6:;
				{
					return true;;
				}
			}
			else if (_1e21a8ed9_IsF64((*((*(_450025_d))))._field_Constant.ptr())) {
				_case_begin_1cae2c04d:;
				{
					return (_1e21a68dd_ReadF64((*((*(_450025_d))))._field_Constant) >= 0LL);;
				}
			}
			else {
				_case_begin_1cae2bd94:;
				{
					return false;;
				}
			}
			_match_end_1cae2bcb7:;
		};
	};
	jule::Ptr<_1e5e49913_Prim> _45132_prim = _1e5e43ea1_Prim((*((*(_450025_d))))._field_Kind.ptr());;
	return ((_45132_prim != nullptr) && _1e21a3830_IsInt(_1e5e49c87_Str(_45132_prim)));;
}



inline jule::Bool _1e5e349ca_isInstancedStruct(jule::Ptr<_1e5cc8c7b_StructIns> _451722_s) {
	return ((*((*(_451722_s))._field_Decl))._field_Generics.len() == (*_451722_s.alloc)._field_Generics.len());;
}



inline jule::Bool _1e5e34cc7_isPtrArithmeticCompatible(jule::Ptr<_1e5e08c13_Data>* _452135_l, jule::Ptr<_1e5e08c13_Data>* _452150_r) {
	jule::Ptr<_1e5e51c06_Ptr> _45222_ptr = _1e5e444bd_Ptr((*((*(_452150_r))))._field_Kind.ptr());;
	if ((_45222_ptr != nullptr)) {
		return _1e5e42037_Equal((*(_1e5e444bd_Ptr((*((*(_452135_l))))._field_Kind)))._field_Elem, (*_45222_ptr.alloc)._field_Elem);;
	};
	if ((_1e5e0964d_IsConst((*(_452150_r)).ptr()) && (*((*(_452150_r))))._field_untyped)) {
		return (_1e5ddeeb3_intAssignable(static_cast<jule::Str>(jule::Str::lit("int", 3)), _452150_r) || _1e5ddeeb3_intAssignable(static_cast<jule::Str>(jule::Str::lit("uint", 4)), _452150_r));;
	};
	_1e5de049c_typeCompatibilityChecker _45316_tcc = _1e5de049c_typeCompatibilityChecker{._field_s=jule::Ptr<_1e5d7b768_sema>(nullptr), ._field_dest=_1e60275b2_primInt, ._field_src=(*((*(_452150_r))))._field_Kind, ._field_errorToken=jule::Ptr<_1e5c8eacc_Token>(nullptr)};;
	if (_1e5de1b96_check(&_45316_tcc)) {
		return true;;
	};
	_45316_tcc._field_dest=_1e60271e9_primUint;
	return _1e5de1b96_check(&_45316_tcc);;
}



inline void _1e5e352d3_applyRuntimeToStr(jule::Ptr<_1e5d7b768_sema>* _454227_s, jule::Ptr<_1e5e417ea_TypeKind>* _454242_from, jule::Ptr<_1e5e417ea_TypeKind>* _454264_to, jule::Ptr<_1e5c8eacc_Token>* _45437_token, jule::Ptr<_1e5ce65a1_ReferenceStack> _454326_refers) {
	jule::Ptr<_1e5e49913_Prim> _45442_prim = _1e5e43ea1_Prim((*(_454264_to)).ptr());;
	if ((_45442_prim != nullptr)) {
		if (_1e5e4d164_IsAny(_45442_prim)) {
			_1e5d9e69d_pushRuntimeToStr(_454227_s, _454242_from, _45437_token, _454326_refers);
		};
		return;;
	};
	if ((_1e5e449da_TypeEnum((*(_454264_to)).ptr()) != nullptr)) {
		_1e5d9e69d_pushRuntimeToStr(_454227_s, _454242_from, _45437_token, _454326_refers);
		return;;
	};
}



inline void _1e5e357de_applyCastKindModel(jule::Ptr<_1e5d7b768_sema>* _455728_s, jule::Ptr<_1e5e08c13_Data>* _455743_d, jule::Ptr<_1e5e417ea_TypeKind>* _455758_t, jule::Ptr<_1e5c8eacc_Token>* _45587_token, jule::Ptr<_1e5ce65a1_ReferenceStack> _455826_refers) {
	_1e5e352d3_applyRuntimeToStr(_455728_s, &((*((*(_455743_d))))._field_Kind), _455758_t, _45587_token, _455826_refers);
	(*((*(_455743_d))))._field_Model=jule::Any(jule::new_ptr<_1e5cd447e_CastingExprModel>(_1e5cd447e_CastingExprModel{._field_Token=(*(_45587_token)), ._field_Expr=jule::new_ptr<_1e5e08c13_Data>((*((*(_455743_d))))), ._field_Kind=(*(_455758_t)), ._field_ExprKind=(*((*(_455743_d))))._field_Kind}), &__jule_any_type95);
}



inline void _1e5e35cea_applyCastKind(jule::Ptr<_1e5d7b768_sema>* _456823_s, jule::Ptr<_1e5e08c13_Data>* _456838_d, jule::Ptr<_1e5e417ea_TypeKind>* _456853_t, jule::Ptr<_1e5c8eacc_Token>* _45697_token, jule::Ptr<_1e5ce65a1_ReferenceStack> _456926_refers) {
	_1e5e357de_applyCastKindModel(_456823_s, _456838_d, _456853_t, _45697_token, _456926_refers);
	(*((*(_456838_d))))._field_Kind=(*(_456853_t));
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e36009_buildVoidData(void) {
	return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=_1e602632a_primVoid, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)});;
}



inline jule::Str _1e5e3b350_checkDataForIntegerIndexing(jule::Ptr<_1e5d7b768_sema>* _458037_s, jule::Ptr<_1e5e08c13_Data>* _458052_d, jule::Ptr<_1e5c8eacc_Token>* _45817_token, jule::Ptr<_1e5ce65a1_ReferenceStack> _458126_refers) {
	jule::Str __jule_func_result = jule::Str();
	if (((*(_458052_d)) == nullptr)) {
		__jule_func_result = static_cast<jule::Str>(jule::Str());
		return __jule_func_result;;
	};
	{
		
		if ((_1e5e43ea1_Prim((*((*(_458052_d))))._field_Kind.ptr()) == nullptr)) {
			_case_begin_1cae3d218:;
			{
				__jule_func_result = static_cast<jule::Str>(jule::Str::lit("type @ is invalid for indexing", 30));
				return __jule_func_result;;
			}
		}
		else if ((!(_1e21a3830_IsInt(_1e5e49c87_Str(_1e5e43ea1_Prim((*((*(_458052_d))))._field_Kind.ptr()).ptr()))))) {
			_case_begin_1cae3d27e:;
			{
				__jule_func_result = static_cast<jule::Str>(jule::Str::lit("type @ is invalid for indexing", 30));
				return __jule_func_result;;
			}
		}
		else if (_1e5e0964d_IsConst((*(_458052_d)).ptr())) {
			_case_begin_1cae3d2e5:;
			{
				if ((_1e21a7191_AsF64((*((*(_458052_d))))._field_Constant.ptr()) < 0LL)) {
					__jule_func_result = static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31));
					return __jule_func_result;;
				};
			}
		}
		else if ((_1e5e43ea1_Prim((*((*(_458052_d))))._field_Kind.ptr()) == nullptr) || _1e5e0964d_IsConst((*(_458052_d)).ptr()) || (_1e219854a_RealKindOf(_1e5e49c87_Str(_1e5e43ea1_Prim((*((*(_458052_d))))._field_Kind).ptr())) != _1e219854a_RealKindOf(static_cast<jule::Str>(jule::Str::lit("int", 3))))) {
			_case_begin_1cae3d35b:;
			{
				_1e5e35cea_applyCastKind(_458037_s, _458052_d, &(_1e60275b2_primInt), _45817_token, _458126_refers);
			}
		}
		_match_end_1cae3ccea:;
	};
	__jule_func_result = static_cast<jule::Str>(jule::Str());
	return __jule_func_result;;
}



inline void _1e5e3b85b_applyCastModelByEnum(jule::Ptr<_1e5d7b768_sema>* _460630_s, jule::Ptr<_1e5e08c13_Data>* _460645_d, jule::Ptr<_1e5d065c2_Enum> _460659_e, jule::Ptr<_1e5c8eacc_Token>* _46077_token, jule::Ptr<_1e5ce65a1_ReferenceStack> _460726_refers) {
	if ((_460659_e == nullptr)) {
		return;;
	};
	_1e5e357de_applyCastKindModel(_460630_s, _460645_d, &((*((*(_460659_e))._field_Kind))._field_Kind), _46077_token, _460726_refers);
}



inline void _1e5e3bd78_castConstByType(jule::Str* _461421_t, jule::Ptr<_1e5e08c13_Data>* _461434_d) {
	{
		
		if (_1e21a3258_IsSigInt((*(_461421_t)))) {
			_case_begin_1cae43eaa:;
			{
				{
					auto _match_expr{ _1e2198814_BitsizeOf(_1e219854a_RealKindOf((*(_461421_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1cae44a8d:;
						{
							_1e21a7449_SetI64((*((*(_461434_d))))._field_Constant.ptr(), _1e21a6b74_AsI64((*((*(_461434_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1cae44b15:;
						{
							_1e21a7449_SetI64((*((*(_461434_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I32>(_1e21a6b74_AsI64((*((*(_461434_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1cae44b7b:;
						{
							_1e21a7449_SetI64((*((*(_461434_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I16>(_1e21a6b74_AsI64((*((*(_461434_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1cae44be2:;
						{
							_1e21a7449_SetI64((*((*(_461434_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I8>(_1e21a6b74_AsI64((*((*(_461434_d))))._field_Constant))));
						}
					}
					_match_end_1cae4475d:;
				};
			}
		}
		else if (_1e21a3566_IsUnsigInt((*(_461421_t)))) {
			_case_begin_1cae44054:;
			{
				{
					auto _match_expr{ _1e2198814_BitsizeOf(_1e219854a_RealKindOf((*(_461421_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1cae4450a:;
						{
							_1e21a7702_SetU64((*((*(_461434_d))))._field_Constant.ptr(), _1e21a6e0a_AsU64((*((*(_461434_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1cae48ce5:;
						{
							_1e21a7702_SetU64((*((*(_461434_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U32>(_1e21a6e0a_AsU64((*((*(_461434_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1cae48d5b:;
						{
							_1e21a7702_SetU64((*((*(_461434_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U16>(_1e21a6e0a_AsU64((*((*(_461434_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1cae48dc2:;
						{
							_1e21a7702_SetU64((*((*(_461434_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U8>(_1e21a6e0a_AsU64((*((*(_461434_d))))._field_Constant))));
						}
					}
					_match_end_1cae48c7e:;
				};
			}
		}
		else if (_1e21a3b71_IsFloat((*(_461421_t)))) {
			_case_begin_1cae440ba:;
			{
				{
					auto _match_expr{ _1e2198814_BitsizeOf(_1e219854a_RealKindOf((*(_461421_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1cae44ede:;
						{
							_1e21a801b_SetF64((*((*(_461434_d))))._field_Constant.ptr(), _1e21a7191_AsF64((*((*(_461434_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1cae4ce09:;
						{
							_1e21a801b_SetF64((*((*(_461434_d))))._field_Constant.ptr(), static_cast<jule::F64>(static_cast<jule::F32>(_1e21a7191_AsF64((*((*(_461434_d))))._field_Constant))));
						}
					}
					_match_end_1cae4cd71:;
				};
			}
		}
		_match_end_1cae43d56:;
	};
}



inline void _1e5e3c054_updateModelToGenericIns(jule::Any* _464833_m, jule::Ptr<_1e5ce3416_FnIns>* _464852_f) {
	{
		auto &_match_expr{ (*(_464833_m)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1cae49356:;
			{
				(*(_464833_m))=jule::Any((*(_464852_f)), &__jule_any_type7);
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1cae4d3d2:;
			{
				(*((*(_464833_m)).cast_ptr<_1e5cd78c2_StructSubIdentExprModel>(&__jule_any_type100)))._field_Method=(*(_464852_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1cae4d1a1:;
			{
				(*((*(_464833_m)).cast_ptr<_1e5cd7c68_StructStaticIdentExprModel>(&__jule_any_type98)))._field_Method=(*(_464852_f));
			}
		}
		_match_end_1cae492bd:;
	};
}



inline jule::Bool _1e5e3c3c8_pushSubIdentFromExpr(jule::Any _465929_expr, jule::Ptr<_1e5ca595b_SubIdentTypeDecl>* _465950_t) {
	{
		auto &_match_expr{ _465929_expr };
		
		if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1cae54064:;
			{
				jule::Ptr<_1e5caabd6_IdentExpr> _46627_e = _465929_expr.unsafe_cast_ptr<_1e5caabd6_IdentExpr>();;
				{ jule::Slice<jule::Ptr<_1e5ca5692_IdentTypeDecl>> &__jule_push_dest = (*((*(_465950_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1e5ca5692_IdentTypeDecl>(_1e5ca5692_IdentTypeDecl{._field_Token=(*(_46627_e))._field_Token, ._field_Ident=(*_46627_e.alloc)._field_Ident, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1e5ca5087_TypeDecl>>(nullptr)})); };
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1cae51391:;
			{
				jule::Ptr<_1e5cac4ce_SubIdentExpr> _46687_e = _465929_expr.unsafe_cast_ptr<_1e5cac4ce_SubIdentExpr>();;
				if ((!(_1e5e3c3c8_pushSubIdentFromExpr((*((*(_46687_e))._field_Expr))._field_Kind, _465950_t)))) {
					return false;;
				};
				{ jule::Slice<jule::Ptr<_1e5ca5692_IdentTypeDecl>> &__jule_push_dest = (*((*(_465950_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1e5ca5692_IdentTypeDecl>(_1e5ca5692_IdentTypeDecl{._field_Token=(*_46687_e.alloc)._field_Ident, ._field_Ident=(*((*_46687_e.alloc)._field_Ident))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1e5ca5087_TypeDecl>>(nullptr)})); };
			}
		}
		else {
			_case_begin_1cae5132a:;
			{
				return false;;
			}
		}
		_match_end_1cae512b4:;
	};
	return true;;
}



inline jule::Str _1e5e3c692_constoa(jule::Ptr<_1e21a449b_Const>* _468213_c) {
	{
		
		if (_1e21a84a0_IsI64((*(_468213_c)).ptr())) {
			_case_begin_1cae5a0e2:;
			{
				return _1e2195b85_FmtInt(_1e21a5da4_ReadI64((*(_468213_c)).ptr()), 10LL);;
			}
		}
		else if (_1e21a8736_IsU64((*(_468213_c)).ptr())) {
			_case_begin_1cae58b4b:;
			{
				return _1e21957bc_FmtUint(_1e21a613a_ReadU64((*(_468213_c)).ptr()), 10LL);;
			}
		}
		else {
			_case_begin_1cae5a7b8:;
			{
				return jule::Str();;
			}
		}
		_match_end_1cae58079:;
	};
}



inline jule::Ptr<_1e5e08c13_Data> _1e5e3cc36_evalEnumStatic(jule::Ptr<_1e5d7b768_sema>* _469324_s, jule::Ptr<_1e5d065c2_Enum>* _469339_enm, jule::Ptr<_1e5d05a55_EnumItem>* _469356_item, jule::Ptr<_1e5c8eacc_Token>* _46947_token, jule::Ptr<_1e5ce65a1_ReferenceStack> _469426_refers) {
	jule::Ptr<_1e5e08c13_Data> _46956_d = jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_469339_enm)), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data3)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)});;
	if (((*(_469356_item)) != nullptr)) {
		(*(_46956_d))._field_Constant=jule::new_ptr<_1e21a449b_Const>((*(*((*((*((*(_469356_item))))._field_Value))._field_Data))._field_Constant.alloc));
		(*_46956_d.alloc)._field_Model=jule::Any((*_46956_d.alloc)._field_Constant, &__jule_any_type20);
		_1e5e3b85b_applyCastModelByEnum(_469324_s, &(_46956_d), (*(_469339_enm)), _46947_token, _469426_refers);
	};
	return _46956_d;;
}



inline jule::Ptr<_1e5cd3aee_StructLitExprModel> _1e5e3d000_isLitBased(jule::Any* _471120_m) {
	{
		auto &_match_expr{ (*(_471120_m)) };
		
		if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1cae6013b:;
			{
				return (*(_471120_m)).cast_ptr<_1e5cd3aee_StructLitExprModel>(&__jule_any_type97);;
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1cae601a2:;
			{
				return (*((*(_471120_m)).cast_ptr<_1e5cd3deb_AllocStructLitExprModel>(&__jule_any_type114)))._field_Lit;;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1cae60218:;
			{
				jule::Ptr<_1e5cd78c2_StructSubIdentExprModel> _47187_ssi = (*(_471120_m)).cast_ptr<_1e5cd78c2_StructSubIdentExprModel>(&__jule_any_type100);;
				return _1e5e3d000_isLitBased(&((*((*(_47187_ssi))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1cae6027e:;
			{
				jule::Ptr<_1e5cd447e_CastingExprModel> _47217_c = (*(_471120_m)).cast_ptr<_1e5cd447e_CastingExprModel>(&__jule_any_type95);;
				return _1e5e3d000_isLitBased(&((*((*(_47217_c))._field_Expr))._field_Model));;
			}
		}
		else {
			_case_begin_1cae5ebda:;
			{
				return nullptr;;
			}
		}
		_match_end_1cae5eb74:;
	};
}



inline void _1e5e3d2db_makeImplicitDeref(jule::Ptr<_1e5e08c13_Data>* _472827_d, jule::Ptr<_1e5c8eacc_Token> _472841_baseToken) {
	jule::Ptr<_1e5cd322a_UnaryExprModel> _47296_unary = jule::new_ptr<_1e5cd322a_UnaryExprModel>(_1e5cd322a_UnaryExprModel{._field_Expr=jule::new_ptr<_1e5e08c13_Data>((*((*(_472827_d))))), ._field_Op=jule::new_ptr<_1e5c8eacc_Token>((*(_472841_baseToken)))});;
	(*((*(_47296_unary))._field_Op))._field_Id=static_cast<jule::U64>(62LLU);
	(*(*(_47296_unary))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("*", 1));
	(*((*(_472827_d))))._field_Model=jule::Any(_47296_unary, &__jule_any_type112);
}



inline void _1c8034a71_updateRefer(jule::Ptr<_1e5ce65a1_ReferenceStack> _473923_ref, jule::Ptr<_1e5ce3416_FnIns>* _473946_old, jule::Ptr<_1e5ce3416_FnIns>* _473959_new) {
	{
		auto expr = &((*(_473923_ref))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c80364ce:;
		if (it != expr_end) {
			jule::I64 _47406_i = it - expr->begin();
			jule::Any _47409_sym = *it;
			{
				if ((jule::Any((*(_473946_old)), &__jule_any_type7) == _47409_sym)) {
					(*(_473923_ref))._field_buffer[_47406_i]=jule::Any((*(_473959_new)), &__jule_any_type7);
				};
			}
			_iter_next_1c80364ce:;
			++it;
			_47406_i++;
			goto _iter_begin_1c80364ce;
		}
		_iter_end_1c80364ce:;
	};
}



inline void _1e5e3d96d_makeVariadic(jule::Ptr<_1e5e08c13_Data>* _474722_d, jule::Ptr<_1e5e417ea_TypeKind> _474736_elem) {
	(*((*(_474722_d))))._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=(*_474736_elem.alloc)._field_BindIdent, ._field_Generic=(*(_474736_elem))._field_Generic, ._field_Variadic=true, ._field_Kind=(*_474736_elem.alloc)._field_Kind});
}



inline jule::Bool _1e5e3dd9c_isVarCaptured(jule::Ptr<_1e5d40771_scopeChecker> _476118_r, jule::Ptr<_1e5d40771_scopeChecker> _476140_s, jule::Ptr<_1e5da0bcc_Var> _476158_v) {
	if (((*(_476158_v))._field_Scope == nullptr)) {
		return false;;
	};
	for (;;) {
		{
			if (((*(_476140_s))._field_scope == (*_476158_v.alloc)._field_Scope)) {
				return false;;
			};
			if ((((*_476140_s.alloc)._field_parent == nullptr) || (_476140_s == _476118_r))) {
				goto _iter_end_1cae69343;
			};
			_476140_s=(*_476140_s.alloc)._field_parent;
		}
	_iter_next_1cae69343:;
	}
	_iter_end_1cae69343:;;
	return true;;
}



inline jule::Bool _1e5e5c99d_kindUsesGenerics(jule::Ptr<_1e5e417ea_TypeKind>* _175726_k, jule::Slice<jule::Ptr<_1e5cb2292_GenericDecl>>* _175741_generics) {
	{
		auto expr = _175741_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb6dc225:;
		if (it != expr_end) {
			jule::Ptr<_1e5cb2292_GenericDecl> *_17589_g = it;
			{
				if (static__1e5e5c5a2_exist(&((*((*(_17589_g))))._field_Ident), _175726_k)) {
					return true;;
				};
			}
			_iter_next_1cb6dc225:;
			++it;
			goto _iter_begin_1cb6dc225;
		}
		_iter_end_1cb6dc225:;
	};
	return false;;
}



inline jule::Bool _1e5e5cd66_hasDirective(jule::Slice<jule::Ptr<_1e5ca44a4_Directive>>* _176722_directives, jule::Str _176753_tag) {
	{
		auto expr = _176722_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb6e3270:;
		if (it != expr_end) {
			jule::Ptr<_1e5ca44a4_Directive> _176814_dr = *it;
			{
				if (((*((*(_176814_dr))._field_Tag))._field_Kind == _176753_tag)) {
					return true;;
				};
			}
			_iter_next_1cb6e3270:;
			++it;
			goto _iter_begin_1cb6e3270;
		}
		_iter_end_1cb6e3270:;
	};
	return false;;
}



inline jule::Bool _1e5e5d130_canGetPtr(jule::Ptr<_1e5e08c13_Data>* _177619_d) {
	return (*((*(_177619_d))))._field_Lvalue;;
}



inline jule::Bool _1e5e5d471_isValidForSptrType(jule::Ptr<_1e5e417ea_TypeKind>* _177928_t) {
	jule::Ptr<_1e5cc8c7b_StructIns> _17806_s = _1e5e45524_Struct((*(_177928_t)).ptr());;
	if ((((_17806_s != nullptr) && ((*_17806_s.alloc)._field_Decl != nullptr)) && (*(*(_17806_s))._field_Decl.alloc)._field_Binded)) {
		return false;;
	};
	return true;;
}



inline jule::Bool _1e5e5d707_isValidForRef(jule::Ptr<_1e5e417ea_TypeKind>* _178823_t) {
	return (_1e5e4528d_Fn((*(_178823_t)).ptr()) == nullptr);;
}



inline jule::Bool _1e5e5d9c1_isBuiltinStrConvertable(jule::Ptr<_1e5e417ea_TypeKind>* _179133_t) {
	return ((((!(_1e5e42bb4_Void((*(_179133_t)).ptr()))) && (_1e5e4528d_Fn((*(_179133_t)).ptr()) == nullptr)) && (_1e5e45cc7_Tup((*(_179133_t)).ptr()) == nullptr)) && (!(_1e5e4605d_comptime((*(_179133_t)).ptr()))));;
}



inline jule::Str _1e5e5dc8a_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _179527_tokens) {
	if ((((*(_179527_tokens)).len() == 1LL) && ((*((*(_179527_tokens))[0LL]))._field_Id == static_cast<jule::U64>(31LLU)))) {
		return jule::Str::lit("std::unsafe", 11);;
	};
	jule::I64 _17996_n = 0LL;;
	{
		auto expr = _179527_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb6e7b6a:;
		if (it != expr_end) {
			jule::Ptr<_1e5c8eacc_Token> *_18009_token = it;
			{
				_17996_n+=(*((*(_18009_token))))._field_Kind.len();
				_17996_n+=2LL;
			}
			_iter_next_1cb6e7b6a:;
			++it;
			goto _iter_begin_1cb6e7b6a;
		}
		_iter_end_1cb6e7b6a:;
	};
	_224497295_StrBuilder _18046_s = static__2244a0b83_New(_17996_n);;
	{
		auto expr = _179527_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb6e6471:;
		if (it != expr_end) {
			jule::I64 _18056_i = it - expr->begin();
			jule::Ptr<_1e5c8eacc_Token> *_18059_token = it;
			{
				_2244a1090_WriteStr(&_18046_s, (*((*(_18059_token))))._field_Kind);
				if ((((*(_179527_tokens)).len() - _18056_i) > 1LL)) {
					_2244a1090_WriteStr(&_18046_s, jule::Str::lit("::", 2));
				};
			}
			_iter_next_1cb6e6471:;
			++it;
			_18056_i++;
			goto _iter_begin_1cb6e6471;
		}
		_iter_end_1cb6e6471:;
	};
	return _2244a1887_Str(&_18046_s);;
}



inline jule::Ptr<_1e5e49913_Prim> _1e5e5e164_buildPrimType(jule::Str _181418_kind) {
	return jule::new_ptr<_1e5e49913_Prim>(_1e5e49913_Prim{._field_Kind=_181418_kind});;
}



inline void _1e5e5e8b2_applyImplicitCast(jule::Ptr<_1e5d7b768_sema>* _184227_s, jule::Ptr<_1e5e417ea_TypeKind>* _184242_dest, jule::Ptr<_1e5e08c13_Data>* _184264_d, jule::Ptr<_1e5c8eacc_Token>* _18437_token, jule::Ptr<_1e5ce65a1_ReferenceStack> _184326_refers) {
	if (_1e5e4292d_IsNil((*((*(_184264_d))))._field_Kind.ptr())) {
		return;;
	};
	jule::Ptr<_1e5e49913_Prim> _18472_destPrim = _1e5e43ea1_Prim((*(_184242_dest)).ptr());;
	if (((_18472_destPrim != nullptr) && _1e5e4d164_IsAny(_18472_destPrim))) {
		jule::Ptr<_1e5e49913_Prim> _18493_prim = _1e5e43ea1_Prim((*((*(_184264_d))))._field_Kind);;
		if (((_18493_prim == nullptr) || (!(_1e5e4d164_IsAny(_18493_prim.ptr()))))) {
			_1e5e35cea_applyCastKind(_184227_s, _184264_d, _184242_dest, _18437_token, _184326_refers);
		};
		return;;
	};
	jule::Ptr<_1e5d03db6_Trait> _18562_dt = _1e5e457aa_Trait((*(_184242_dest)).ptr());;
	if ((_18562_dt != nullptr)) {
		jule::Ptr<_1e5d03db6_Trait> _18583_bt = _1e5e457aa_Trait((*((*(_184264_d))))._field_Kind);;
		if (((_18583_bt == nullptr) || (_18583_bt != _18562_dt))) {
			_1e5e357de_applyCastKindModel(_184227_s, _184264_d, _184242_dest, _18437_token, _184326_refers);
			return;;
		};
	};
	if (((_1e5e449da_TypeEnum((*(_184242_dest)).ptr()) != nullptr) && (_1e5e449da_TypeEnum((*((*(_184264_d))))._field_Kind) == nullptr))) {
		_1e5e357de_applyCastKindModel(_184227_s, _184264_d, _184242_dest, _18437_token, _184326_refers);
		return;;
	};
}



inline jule::Bool _1e5e5eb7b_validTypeForXof(jule::Ptr<_1e5e417ea_TypeKind>* _187125_t) {
	return ((!(_1e5e42bb4_Void((*(_187125_t)).ptr()))) && (_1e5e4528d_Fn((*(_187125_t)).ptr()) == nullptr));;
}



inline __jule_tuple_x_1e5e03548_SymbolTable__jule_tuple_s_22578b38a_Log _1e5e62c8e_buildSymbols(jule::Ptr<_1e5ca3173_AST>* _1622_ast, jule::Trait* _1638_importer, jule::Ptr<_1e5cec563_symbolBuilder> _1662_owner) {
	__jule_tuple_x_1e5e03548_SymbolTable__jule_tuple_s_22578b38a_Log __jule_func_result;
	jule::Ptr<_1e5cec563_symbolBuilder> _176_sb = jule::new_ptr<_1e5cec563_symbolBuilder>(_1e5cec563_symbolBuilder{._field_owner=_1662_owner, ._field_importer=(*(_1638_importer)), ._field_errors=jule::Slice<_22578b38a_Log>(nullptr), ._field_ast=(*(_1622_ast)), ._field_table=jule::Ptr<_1e5e03548_SymbolTable>(nullptr)});;
	_1e5d02ee7_build(_176_sb);
	if (((*_176_sb.alloc)._field_errors.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*_176_sb.alloc)._field_table;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = (*_176_sb.alloc)._field_errors;
	return __jule_func_result;;
}



inline void _1e5e630be_collectImplicitImports(jule::Ptr<_1e5d7b768_sema>* _3132_s, jule::Ptr<_1e5e03548_SymbolTable>* _3147_file) {
	{
		auto expr = &((*((*(_3147_file))))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb8287b2:;
		if (it != expr_end) {
			jule::Ptr<_1e5d5b2e7_ImportInfo> _3214_imp = *it;
			{
				if ((!(_1e5d033b0_isImplicitImport(_3214_imp)))) {
					goto _iter_end_1cb8287b2;
				};
				{
					auto &_match_expr{ (*(_3214_imp))._field_LinkPath };
					
					if (_match_expr == jule::Str::lit("std::runtime", 12)) {
						_case_begin_1cb8299a0:;
						{
							(*((*((*(_3132_s))))._field_meta))._field_runtime=_3214_imp;
						}
					}
					else {
						_case_begin_1cb829043:;
						{
							__jule_panic_s(jule::Str::lit("implementation mistake in implicit import collection, this panic call should be unreachable", 91) + jule::Str("\nlocation: std/jule/sema/analysis.jule:40:4"));;
						}
					}
					_match_end_1cb8295d7:;
				};
			}
			_iter_next_1cb8287b2:;
			++it;
			goto _iter_begin_1cb8287b2;
		}
		_iter_end_1cb8287b2:;
	};
}



inline __jule_tuple_x_1e5d5e21d_Package__jule_tuple_s_22578b38a_Log _1e5e634ed_analyzePackage(jule::Slice<jule::Ptr<_1e5ca3173_AST>>* _4524_files, jule::Trait* _4544_importer, jule::I64* _4565_flags) {
	__jule_tuple_x_1e5d5e21d_Package__jule_tuple_s_22578b38a_Log __jule_func_result;
	jule::Slice<jule::Ptr<_1e5e03548_SymbolTable>> _476_tables = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5e03548_SymbolTable>>::alloc(0LL, (*(_4524_files)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1e5e03548_SymbolTable>(nullptr); __jule_collection; });;
	{
		auto expr = _4524_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb82ac04:;
		if (it != expr_end) {
			jule::Ptr<_1e5ca3173_AST> _4814_f = *it;
			{
				jule::Ptr<_1e5e03548_SymbolTable> _497_table;
				jule::Slice<_22578b38a_Log> _4918_errors;
				({
					__jule_tuple_x_1e5e03548_SymbolTable__jule_tuple_s_22578b38a_Log __jule_assign_result = _1e5e62c8e_buildSymbols(&(_4814_f), _4544_importer, nullptr);
					_497_table = __jule_assign_result.__jule_result_arg0;
					_4918_errors = __jule_assign_result.__jule_result_arg1;
				});
				if ((_4918_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _4918_errors;
					return __jule_func_result;;
				};
				{ jule::Slice<jule::Ptr<_1e5e03548_SymbolTable>> &__jule_push_dest = _476_tables; __jule_push_dest.push(_497_table); };
			}
			_iter_next_1cb82ac04:;
			++it;
			goto _iter_begin_1cb82ac04;
		}
		_iter_end_1cb82ac04:;
	};
	jule::Ptr<_1e5d7b768_sema> _566_sema = jule::new_ptr<_1e5d7b768_sema>(_1e5d7b768_sema{._field_errors=jule::Slice<_22578b38a_Log>(nullptr), ._field_files=jule::Slice<jule::Ptr<_1e5e03548_SymbolTable>>(nullptr), ._field_file=jule::Ptr<_1e5e03548_SymbolTable>(nullptr), ._field_flags=(*(_4565_flags)), ._field_meta=jule::new_ptr<_1e5d7ab41_commonSemaMeta>(_1e5d7ab41_commonSemaMeta{._field_comptimeTypeInfos=jule::Slice<jule::Ptr<_1e5d1a608_comptimeTypeInfo>>(nullptr), ._field_runtime=jule::Ptr<_1e5d5b2e7_ImportInfo>(nullptr)})});;
	jule::Ptr<_1e5e03548_SymbolTable> _636_firstTable = _476_tables[0LL];;
	_1e5e630be_collectImplicitImports(&(_566_sema), &(_636_firstTable));
	_1e5d9c129_check(_566_sema, &(_476_tables));
	if (((*_566_sema.alloc)._field_errors.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = (*_566_sema.alloc)._field_errors;
		return __jule_func_result;;
	};
	jule::Ptr<_1e5d5e21d_Package> _716_pkg = jule::new_ptr<_1e5d5e21d_Package>(_1e5d5e21d_Package{._field_Files=(*_566_sema.alloc)._field_files});;
	__jule_func_result.__jule_result_arg0 = _716_pkg;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_x_1e5d5e21d_Package__jule_tuple_s_22578b38a_Log _1e5e639a4_AnalyzePackage(jule::Slice<jule::Ptr<_1e5ca3173_AST>> _9523_files, jule::Trait _9542_importer, jule::I64 _9562_flags) {
	__jule_tuple_x_1e5d5e21d_Package__jule_tuple_s_22578b38a_Log __jule_func_result;
	if ((_9523_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result = std::move(_1e5e634ed_analyzePackage(&(_9523_files), &(_9542_importer), &(_9562_flags)));
return __jule_func_result;;
}



inline jule::Ptr<_1e5ce3416_FnIns> _1e6025912_findBuiltinFunc(jule::Str* _2621_ident) {
	{
		auto &_match_expr{ (*(_2621_ident)) };
		
		if (_match_expr == jule::Str::lit("out", 3)) {
			_case_begin_1cb8357e1:;
			{
				static jule::Ptr<_1e5ce3416_FnIns> _2914_f = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>(_1e602b473_builtinCallerOut), ._field_reloaded=false});;
				return _2914_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("outln", 5)) {
			_case_begin_1cb835857:;
			{
				static jule::Ptr<_1e5ce3416_FnIns> _3214_f = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>(_1e602b8a2_builtinCallerOutln), ._field_reloaded=false});;
				return _3214_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("new", 3)) {
			_case_begin_1cb8358bd:;
			{
				static jule::Ptr<_1e5ce3416_FnIns> _3514_f = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>(_1e602bcd1_builtinCallerNew), ._field_reloaded=false});;
				return _3514_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("panic", 5)) {
			_case_begin_1cb835945:;
			{
				static jule::Ptr<_1e5ce3416_FnIns> _3814_f = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>(_1e602c210_builtinCallerPanic), ._field_reloaded=false});;
				return _3814_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("make", 4)) {
			_case_begin_1cb835add:;
			{
				static jule::Ptr<_1e5ce3416_FnIns> _4114_f = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>(_1e602c870_builtinCallerMake), ._field_reloaded=false});;
				return _4114_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("append", 6)) {
			_case_begin_1cb835b54:;
			{
				static jule::Ptr<_1e5ce3416_FnIns> _4414_f = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>(_1e602cb8e_builtinCallerAppend), ._field_reloaded=false});;
				return _4414_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("copy", 4)) {
			_case_begin_1cb835bba:;
			{
				static jule::Ptr<_1e5ce3416_FnIns> _4714_f = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>(_1e602d5a7_builtinCallerCopy), ._field_reloaded=false});;
				return _4714_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("len", 3)) {
			_case_begin_1cb835c42:;
			{
				static jule::Ptr<_1e5ce3416_FnIns> _5014_f = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>(_1e602ec4b_builtinCallerLen), ._field_reloaded=false});;
				return _5014_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("cap", 3)) {
			_case_begin_1cb835d74:;
			{
				static jule::Ptr<_1e5ce3416_FnIns> _5314_f = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>(_1e60304ee_builtinCallerCap), ._field_reloaded=false});;
				return _5314_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("delete", 6)) {
			_case_begin_1cb835dda:;
			{
				static jule::Ptr<_1e5ce3416_FnIns> _5614_f = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>(_1e6030e17_builtinCallerDelete), ._field_reloaded=false});;
				return _5614_f;;
			}
		}
		else {
			_case_begin_1cb835307:;
			{
				return nullptr;;
			}
		}
		_match_end_1cb83566a:;
	};
}



inline jule::Ptr<_1e5e40a08_TypeAlias> _1e6025c20_primTypeAlias(jule::Ptr<_1e5e417ea_TypeKind>* _6323_k) {
	return jule::new_ptr<_1e5e40a08_TypeAlias>(_1e5e40a08_TypeAlias{._field_Scope=jule::Ptr<_1e5cb50a8_ScopeTree>(nullptr), ._field_Public=true, ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=jule::Ptr<_1e5c8eacc_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Kind=jule::new_ptr<_1e5e4900b_TypeSymbol>(_1e5e4900b_TypeSymbol{._field_Decl=jule::Ptr<_1e5ca5087_TypeDecl>(nullptr), ._field_Kind=(*(_6323_k))}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e40a08_TypeAlias>>(nullptr)});;
}



inline jule::Ptr<_1e5da0bcc_Var> _1e60295c5_findBuiltinVar(jule::Str* _9120_ident) {
	{
		auto &_match_expr{ (*(_9120_ident)) };
		
		if (_match_expr == jule::Str::lit("nil", 3)) {
			_case_begin_1cb83c870:;
			{
				static jule::Ptr<_1e5da0bcc_Var> _9414_v = jule::new_ptr<_1e5da0bcc_Var>(_1e5da0bcc_Var{._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Token=jule::Ptr<_1e5c8eacc_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Used=false, ._field_Statically=false, ._field_Reference=false, ._field_Kind=jule::new_ptr<_1e5e4900b_TypeSymbol>(_1e5e4900b_TypeSymbol{._field_Decl=jule::Ptr<_1e5ca5087_TypeDecl>(nullptr), ._field_Kind=_1e602602d_primNil}), ._field_Value=jule::new_ptr<_1e5e09d8a_Value>(_1e5e09d8a_Value{._field_Expr=jule::Ptr<_1e5ca93bb_Expr>(nullptr), ._field_Data=jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1e21a5744_NewNil()})}), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1e5ca44a4_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1e5da0bcc_Var>>(nullptr)});;
				return _9414_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("true", 4)) {
			_case_begin_1cb83c919:;
			{
				static jule::Ptr<_1e5da0bcc_Var> _10914_v = jule::new_ptr<_1e5da0bcc_Var>(_1e5da0bcc_Var{._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Token=jule::Ptr<_1e5c8eacc_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Used=false, ._field_Statically=false, ._field_Reference=false, ._field_Kind=(*(_1e6029916_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_Kind, ._field_Value=jule::new_ptr<_1e5e09d8a_Value>(_1e5e09d8a_Value{._field_Expr=jule::Ptr<_1e5ca93bb_Expr>(nullptr), ._field_Data=jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1e21a4ea2_NewBool(true)})}), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1e5ca44a4_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1e5da0bcc_Var>>(nullptr)});;
				return _10914_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("false", 5)) {
			_case_begin_1cb83c991:;
			{
				static jule::Ptr<_1e5da0bcc_Var> _12214_v = jule::new_ptr<_1e5da0bcc_Var>(_1e5da0bcc_Var{._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Token=jule::Ptr<_1e5c8eacc_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Used=false, ._field_Statically=false, ._field_Reference=false, ._field_Kind=(*(_1e6029916_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_Kind, ._field_Value=jule::new_ptr<_1e5e09d8a_Value>(_1e5e09d8a_Value{._field_Expr=jule::Ptr<_1e5ca93bb_Expr>(nullptr), ._field_Data=jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1e21a4ea2_NewBool(false)})}), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1e5ca44a4_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1e5da0bcc_Var>>(nullptr)});;
				return _12214_v;;
			}
		}
		else {
			_case_begin_1cb83c0bc:;
			{
				return nullptr;;
			}
		}
		_match_end_1cb836d42:;
	};
}



inline jule::Ptr<_1e5e40a08_TypeAlias> _1e6029916_findBuiltinTypeAlias(jule::Str _13925_ident) {
	{
		auto &_match_expr{ _13925_ident };
		
		if (_match_expr == jule::Str::lit("any", 3)) {
			_case_begin_1cb842765:;
			{
				static jule::Ptr<_1e5e40a08_TypeAlias> _14214_t = _1e6025c20_primTypeAlias(&(_1e60265d3_primAny));;
				return _14214_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("str", 3)) {
			_case_begin_1cb8428ca:;
			{
				static jule::Ptr<_1e5e40a08_TypeAlias> _14514_t = _1e6025c20_primTypeAlias(&(_1e60268d0_primStr));;
				return _14514_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("bool", 4)) {
			_case_begin_1cb842941:;
			{
				static jule::Ptr<_1e5e40a08_TypeAlias> _14814_t = _1e6025c20_primTypeAlias(&(_1e6026b88_primBool));;
				return _14814_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1cb842a1d:;
			{
				static jule::Ptr<_1e5e40a08_TypeAlias> _15114_t = _1e6025c20_primTypeAlias(&(_1e6026e41_primUintptr));;
				return _15114_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1cb842a84:;
			{
				static jule::Ptr<_1e5e40a08_TypeAlias> _15414_t = _1e6025c20_primTypeAlias(&(_1e60271e9_primUint));;
				return _15414_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1cb842aea:;
			{
				static jule::Ptr<_1e5e40a08_TypeAlias> _15714_t = _1e6025c20_primTypeAlias(&(_1e60275b2_primInt));;
				return _15714_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1cb842b61:;
			{
				static jule::Ptr<_1e5e40a08_TypeAlias> _16014_t = _1e6025c20_primTypeAlias(&(_1e6027804_primI8));;
				return _16014_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1cb842bc7:;
			{
				static jule::Ptr<_1e5e40a08_TypeAlias> _16314_t = _1e6025c20_primTypeAlias(&(_1e6027a9b_primI16));;
				return _16314_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1cb842ca4:;
			{
				static jule::Ptr<_1e5e40a08_TypeAlias> _16614_t = _1e6025c20_primTypeAlias(&(_1e602810c_primI64));;
				return _16614_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1cb842d2b:;
			{
				static jule::Ptr<_1e5e40a08_TypeAlias> _16914_t = _1e6025c20_primTypeAlias(&(_1e602866d_primU16));;
				return _16914_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1cb842da3:;
			{
				static jule::Ptr<_1e5e40a08_TypeAlias> _17214_t = _1e6025c20_primTypeAlias(&(_1e6028926_primU32));;
				return _17214_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1cb842e2a:;
			{
				static jule::Ptr<_1e5e40a08_TypeAlias> _17514_t = _1e6025c20_primTypeAlias(&(_1e6028e10_primU64));;
				return _17514_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1cb842ea2:;
			{
				static jule::Ptr<_1e5e40a08_TypeAlias> _17814_t = _1e6025c20_primTypeAlias(&(_1e6029152_primF32));;
				return _17814_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1cb843029:;
			{
				static jule::Ptr<_1e5e40a08_TypeAlias> _18114_t = _1e6025c20_primTypeAlias(&(_1e6029361_primF64));;
				return _18114_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("byte", 4) || _match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1cb8430a1:;
			{
				static jule::Ptr<_1e5e40a08_TypeAlias> _18414_t = _1e6025c20_primTypeAlias(&(_1e60283b5_primU8));;
				return _18414_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("rune", 4) || _match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1cb843128:;
			{
				static jule::Ptr<_1e5e40a08_TypeAlias> _18714_t = _1e6025c20_primTypeAlias(&(_1e6027d54_primI32));;
				return _18714_t;;
			}
		}
		else {
			_case_begin_1cb83ced0:;
			{
				return nullptr;;
			}
		}
		_match_end_1cb83d0ac:;
	};
}



inline jule::Any _1e6029b9c_findBuiltinDef(jule::Str* _19420_ident) {
	jule::Ptr<_1e5da0bcc_Var> _1956_v = _1e60295c5_findBuiltinVar(_19420_ident);;
	if ((_1956_v != nullptr)) {
		return jule::Any(_1956_v, &__jule_any_type8);;
	};
	jule::Ptr<_1e5ce3416_FnIns> _1996_f = _1e6025912_findBuiltinFunc(_19420_ident);;
	if ((_1996_f != nullptr)) {
		return jule::Any(_1996_f, &__jule_any_type7);;
	};
	jule::Ptr<_1e5e40a08_TypeAlias> _2036_ta = _1e6029916_findBuiltinTypeAlias((*(_19420_ident)));;
	if ((_2036_ta != nullptr)) {
		return jule::Any(_2036_ta, &__jule_any_type27);;
	};
	return nullptr;;
}



inline jule::Any _1e6029e66_findBuiltinDefStdDebug(jule::Str* _21028_ident) {
	{
		auto &_match_expr{ (*(_21028_ident)) };
		
		if (_match_expr == jule::Str::lit("Out", 3)) {
			_case_begin_1cb85280d:;
			{
				static jule::Ptr<_1e5ce3416_FnIns> _21314_f = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>(_1e603427d_builtinCallerStdDebugOut), ._field_reloaded=false});;
				return jule::Any(_21314_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Outln", 5)) {
			_case_begin_1cb852c09:;
			{
				static jule::Ptr<_1e5ce3416_FnIns> _21614_f = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>(_1e60346ac_builtinCallerStdDebugOutln), ._field_reloaded=false});;
				return jule::Any(_21614_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1cb8511d0:;
			{
				return nullptr;;
			}
		}
		_match_end_1cb851642:;
	};
}



inline jule::Any _1e602a230_findBuiltinDefStdMem(jule::Str* _22326_ident) {
	{
		auto &_match_expr{ (*(_22326_ident)) };
		
		if (_match_expr == jule::Str::lit("SizeOf", 6)) {
			_case_begin_1cb8528a7:;
			{
				static jule::Ptr<_1e5ce3416_FnIns> _22614_f = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>(_1e60330b2_builtinCallerStdMemSizeOf), ._field_reloaded=false});;
				return jule::Any(_22614_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("AlignOf", 7)) {
			_case_begin_1cb854579:;
			{
				static jule::Ptr<_1e5ce3416_FnIns> _22914_f = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>(_1e60334e1_builtinCallerStdMemAlignOf), ._field_reloaded=false});;
				return jule::Any(_22914_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Free", 4)) {
			_case_begin_1cb852940:;
			{
				static jule::Ptr<_1e5ce3416_FnIns> _23214_f = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>(_1e6033920_builtinCallerStdMemFree), ._field_reloaded=false});;
				return jule::Any(_23214_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1cb852c92:;
			{
				return nullptr;;
			}
		}
		_match_end_1cb8542c1:;
	};
}



inline jule::Any _1e602a609_findBuiltinDefStdComptime(jule::Str* _23931_ident) {
	{
		auto &_match_expr{ (*(_23931_ident)) };
		
		if (_match_expr == jule::Str::lit("TypeOf", 6)) {
			_case_begin_1cb854a0d:;
			{
				static jule::Ptr<_1e5ce3416_FnIns> _24214_f = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>(_1e6031346_builtinCallerStdComptimeTypeOf), ._field_reloaded=false});;
				return jule::Any(_24214_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("ValueOf", 7)) {
			_case_begin_1cb856a43:;
			{
				static jule::Ptr<_1e5ce3416_FnIns> _24514_f = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>(_1e6031775_builtinCallerStdComptimeValueOf), ._field_reloaded=false});;
				return jule::Any(_24514_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Line", 4)) {
			_case_begin_1cb856aba:;
			{
				static jule::Ptr<_1e5ce3416_FnIns> _24814_f = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>(_1e6031de6_builtinCallerStdComptimeLine), ._field_reloaded=false});;
				return jule::Any(_24814_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("File", 4)) {
			_case_begin_1cb854a85:;
			{
				static jule::Ptr<_1e5ce3416_FnIns> _25114_f = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>(_1e6032325_builtinCallerStdComptimeFile), ._field_reloaded=false});;
				return jule::Any(_25114_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Files", 5)) {
			_case_begin_1cb854b0c:;
			{
				static jule::Ptr<_1e5ce3416_FnIns> _25414_f = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>(_1e6032754_builtinCallerStdComptimeFiles), ._field_reloaded=false});;
				return jule::Any(_25414_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("TypeAlias", 9)) {
			_case_begin_1cb856bdb:;
			{
				static jule::Ptr<_1e5ce3416_FnIns> _25714_f = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1e5ce0358_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>(_1e6032b83_builtinCallerStdComptimeTypeAlias), ._field_reloaded=false});;
				return jule::Any(_25714_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1cb8529a6:;
			{
				return nullptr;;
			}
		}
		_match_end_1cb85679b:;
	};
}



inline jule::Any _1e602a84b_findBuiltinDefStdJuleIntegrated(jule::Str* _26437_ident) {
	{
		auto &_match_expr{ (*(_26437_ident)) };
		
		if (_match_expr == jule::Str::lit("Emit", 4)) {
			_case_begin_1cb856e83:;
			{
				static jule::Ptr<_1e5ce3416_FnIns> _26714_f = jule::new_ptr<_1e5ce3416_FnIns>(_1e5ce3416_FnIns{._field_Owner=jule::Ptr<_1e5cc8c7b_StructIns>(nullptr), ._field_Decl=jule::new_ptr<_1e5ce0358_Fn>(_1e5ce0358_Fn{._field_sema=jule::Ptr<_1e5d7b768_sema>(nullptr), ._field_Token=jule::Ptr<_1e5c8eacc_Token>(nullptr), ._field_Global=false, ._field_Unsafety=false, ._field_Public=false, ._field_Binded=false, ._field_Statically=false, ._field_Exceptional=false, ._field_Ident=jule::Str(), ._field_Directives=jule::Slice<jule::Ptr<_1e5ca44a4_Directive>>(nullptr), ._field_Scope=jule::Ptr<_1e5cb50a8_ScopeTree>(nullptr), ._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5cb2292_GenericDecl>>::alloc(1LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1e5cb2292_GenericDecl>(nullptr); __jule_collection; }), ._field_Result=jule::Ptr<_1e5cdd147_RetType>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5cdd884_Param>>(nullptr), ._field_Owner=jule::Ptr<_1e5cc5e21_Struct>(nullptr), ._field_Instances=jule::Slice<jule::Ptr<_1e5ce3416_FnIns>>(nullptr)}), ._field_Generics=jule::Slice<jule::Ptr<_1e5e3ee14_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1e5ce22b1_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1e5e417ea_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1e5d384d3_Scope>(nullptr), ._field_Refers=jule::Ptr<_1e5ce65a1_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1e5e08c13_Data>,jule::Ptr<_1e5e0a93a_eval>*,jule::Ptr<_1e5cad0e5_FnCallExpr>*,jule::Ptr<_1e5e08c13_Data>*>(_1e6033d4e_builtinCallerStdJuleIntegratedEmit), ._field_reloaded=false});;
				return jule::Any(_26714_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1cb856c74:;
			{
				return nullptr;;
			}
		}
		_match_end_1cb85ae98:;
	};
}



inline jule::Any _1e602abc0_findPackageBuiltinDef(jule::Str* _27927_linkPath, jule::Str* _27943_ident) {
	{
		auto &_match_expr{ (*(_27927_linkPath)) };
		
		if (_match_expr == jule::Str::lit("std::comptime", 13)) {
			_case_begin_1cb85ce89:;
			{
				return _1e602a609_findBuiltinDefStdComptime(_27943_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::debug", 10)) {
			_case_begin_1cb85d000:;
			{
				return _1e6029e66_findBuiltinDefStdDebug(_27943_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::mem", 8)) {
			_case_begin_1cb85cb9d:;
			{
				return _1e602a230_findBuiltinDefStdMem(_27943_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::jule::integrated", 21)) {
			_case_begin_1cb85cc14:;
			{
				return _1e602a84b_findBuiltinDefStdJuleIntegrated(_27943_ident);;
			}
		}
		else {
			_case_begin_1cb85c64d:;
			{
				return nullptr;;
			}
		}
		_match_end_1cb85b460:;
	};
}



inline jule::Ptr<_1e5e08c13_Data> _1e602b044_builtinCallerError(jule::Ptr<_1e5e0a93a_eval>* _29428_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _29443_fc) {
	if (((*((*(_29443_fc))))._field_Args.len() < 1LL)) {
		_1e5e0aebd_pushErr((*(_29428_e)).ptr(), (*((*(_29443_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("err", 3), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_29443_fc))))._field_Args.len() > 1LL)) {
		_1e5e0aebd_pushErr((*(_29428_e)).ptr(), (*((*((*(_29443_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("error", 5), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1e5e08c13_Data> _3026_expr = _1e5e297a0_evalExpr((*(_29428_e)), (*((*(_29443_fc))))._field_Args[0LL]);;
	if ((_3026_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1e5c8eacc_Token> _3076_token = (*((*((*(_29443_fc))))._field_Args[0LL]))._field_Token;;
	if (_1e5e09131_IsNil(_3026_expr.ptr())) {
		_1e5e0aebd_pushErr((*(_29428_e)).ptr(), _3076_token, static_cast<jule::Str>(jule::Str::lit("you cannot call error function with nil", 39)), jule::Slice<jule::Any>());
	};
	;
	;
	if ((!(_1e5d8be71_checkValidityForInitExpr((*((*(_29428_e))))._field_s, true, false, &(_1e60265d3_primAny), &(_3026_expr), &(_3076_token))))) {
		return nullptr;;
	};
	_1e5e352d3_applyRuntimeToStr(&((*((*(_29428_e))))._field_s), &((*(_3026_expr))._field_Kind), &(_1e60265d3_primAny), &(_3076_token), _1e5e0dec1_getOwnerRefers((*(_29428_e)).ptr()));
	jule::Ptr<_1e5e08c13_Data> _3206_d = _1e5e36009_buildVoidData();;
	(*(_3206_d))._field_Model=jule::Any(jule::new_ptr<_1e5cdb09b_BuiltinErrorCallExprModel>(_1e5cdb09b_BuiltinErrorCallExprModel{._field_Func=jule::Ptr<_1e5ce3416_FnIns>(nullptr), ._field_Err=_3026_expr}), &__jule_any_type30);
	return _3206_d;;
}



inline jule::Ptr<_1e5e08c13_Data> _1e602b473_builtinCallerOut(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _32526_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _32541_fc, jule::Ptr<_1e5e08c13_Data>* ) {
	if (((*((*(_32541_fc))))._field_Args.len() < 1LL)) {
		_1e5e0aebd_pushErr((*(_32526_e)).ptr(), (*((*(_32541_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("v", 1), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_32541_fc))))._field_Args.len() > 1LL)) {
		_1e5e0aebd_pushErr((*(_32526_e)).ptr(), (*((*((*(_32541_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("out", 3), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1e5ca93bb_Expr> _3346_arg = (*((*(_32541_fc))))._field_Args[0LL];;
	jule::Ptr<_1e5e08c13_Data> _3356_expr = _1e5e297a0_evalExpr((*(_32526_e)), _3346_arg);;
	if ((_3356_expr == nullptr)) {
		return nullptr;;
	};
	if ((!(_1e5e5d9c1_isBuiltinStrConvertable(&((*(_3356_expr))._field_Kind))))) {
		_1e5e0aebd_pushErr((*(_32526_e)).ptr(), (*(_3346_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1e5d9e69d_pushRuntimeToStr(&((*((*(_32526_e))))._field_s), &((*(_3356_expr))._field_Kind), &((*_3346_arg.alloc)._field_Token), _1e5e0dec1_getOwnerRefers((*(_32526_e)).ptr()));
	jule::Ptr<_1e5e08c13_Data> _3476_d = _1e5e36009_buildVoidData();;
	(*(_3476_d))._field_Model=jule::Any(jule::new_ptr<_1e5cd8818_BuiltinOutCallExprModel>(_1e5cd8818_BuiltinOutCallExprModel{._field_Expr=_3356_expr, ._field_Debug=false}), &__jule_any_type34);
	return _3476_d;;
}



inline jule::Ptr<_1e5e08c13_Data> _1e602b8a2_builtinCallerOutln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _35228_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _35243_fc, jule::Ptr<_1e5e08c13_Data>* _35265_d) {
	(*(_35265_d))=_1e602b473_builtinCallerOut(nullptr, _35228_e, _35243_fc, _35265_d);
	if (((*(_35265_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*(_35265_d))))._field_Model=jule::Any(jule::new_ptr<_1e5cd8be2_BuiltinOutlnCallExprModel>(_1e5cd8be2_BuiltinOutlnCallExprModel{._field_Expr=(*((*((*(_35265_d))))._field_Model.cast_ptr<_1e5cd8818_BuiltinOutCallExprModel>(&__jule_any_type34)))._field_Expr, ._field_Debug=false}), &__jule_any_type35);
	return (*(_35265_d));;
}



inline jule::Ptr<_1e5e08c13_Data> _1e602bcd1_builtinCallerNew(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _36426_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _36441_fc, jule::Ptr<_1e5e08c13_Data>* _36463_d) {
	if (((*((*(_36441_fc))))._field_Args.len() < 1LL)) {
		_1e5e0aebd_pushErr((*(_36426_e)).ptr(), (*((*(_36441_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_36441_fc))))._field_Args.len() > 2LL)) {
		_1e5e0aebd_pushErr((*(_36426_e)).ptr(), (*((*((*(_36441_fc))))._field_Args[2LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("new", 3), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1e5e08c13_Data> _3736_t = _1e5e28ccc_eval1((*(_36426_e)), (*((*(_36441_fc))))._field_Args[0LL]);;
	if ((_3736_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_3736_t))._field_Decl))) {
		_1e5e0aebd_pushErr((*(_36426_e)).ptr(), (*((*((*(_36441_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((!(_1e5e5d471_isValidForSptrType(&((*(_3736_t))._field_Kind))))) {
		jule::Ptr<_1e5cc8c7b_StructIns> _3847_s = _1e5e45524_Struct((*(_3736_t))._field_Kind.ptr());;
		if ((((_3847_s != nullptr) && ((*_3847_s.alloc)._field_Decl != nullptr)) && (*(*(_3847_s))._field_Decl.alloc)._field_Binded)) {
			_1e5e0aebd_pushErr((*(_36426_e)).ptr(), (*((*((*(_36441_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("binded structures cannot supports reference counting", 52)), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	(*((*(_36463_d))))._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1e5e4d43e_Sptr>(_1e5e4d43e_Sptr{._field_Elem=(*(_3736_t))._field_Kind}), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data23)});
	if (((*((*(_36441_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1e5e417ea_TypeKind> _3987_old = (*((*(_36426_e))))._field_prefix;;
		(*((*(_36426_e))))._field_prefix=(*(_3736_t))._field_Kind;
		jule::Ptr<_1e5e08c13_Data> _4017_init = _1e5e297a0_evalExpr((*(_36426_e)), (*((*(_36441_fc))))._field_Args[1LL]);;
		(*((*(_36426_e))))._field_prefix=_3987_old;
		if ((_4017_init != nullptr)) {
			jule::Ptr<_1e5c8eacc_Token> _4068_token = (*((*((*(_36441_fc))))._field_Args[1LL]))._field_Token;;
			;
			_1e5d8be71_checkValidityForInitExpr((*((*(_36426_e))))._field_s, (!((*((*(_36426_e))))._field_immutable)), false, &((*(_3736_t))._field_Kind), &(_4017_init), &(_4068_token));
			_1e5d876db_checkAssignType((*((*(_36426_e))))._field_s, false, &((*(_3736_t))._field_Kind), &(_4017_init), _4068_token, _1e5e0dec1_getOwnerRefers((*(_36426_e)).ptr()));
			(*((*(_36463_d))))._field_Model=jule::Any(jule::new_ptr<_1e5cd90bb_BuiltinNewCallExprModel>(_1e5cd90bb_BuiltinNewCallExprModel{._field_Kind=(*(_3736_t))._field_Kind, ._field_Init=(*_4017_init.alloc)._field_Model}), &__jule_any_type115);
		};
	} else {
		(*((*(_36463_d))))._field_Model=jule::Any(jule::new_ptr<_1e5cd90bb_BuiltinNewCallExprModel>(_1e5cd90bb_BuiltinNewCallExprModel{._field_Kind=(*(_3736_t))._field_Kind, ._field_Init=jule::Any(nullptr)}), &__jule_any_type115);
	};
	return (*(_36463_d));;
}



inline jule::Ptr<_1e5e08c13_Data> _1e602c210_builtinCallerPanic(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _42628_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _42643_fc, jule::Ptr<_1e5e08c13_Data>* ) {
	if (((*((*(_42643_fc))))._field_Args.len() < 1LL)) {
		_1e5e0aebd_pushErr((*(_42628_e)).ptr(), (*((*(_42643_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("message", 7), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_42643_fc))))._field_Args.len() > 1LL)) {
		_1e5e0aebd_pushErr((*(_42628_e)).ptr(), (*((*((*(_42643_fc))))._field_Args[2LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("panic", 5), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1e5e08c13_Data> _4356_expr = _1e5e297a0_evalExpr((*(_42628_e)), (*((*(_42643_fc))))._field_Args[0LL]);;
	if ((_4356_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1e5e43ea1_Prim((*(_4356_expr))._field_Kind.ptr()) == nullptr) || (!(_1e5e4cdcd_IsStr(_1e5e43ea1_Prim((*(_4356_expr))._field_Kind).ptr()))))) {
		_1e5e0aebd_pushErr((*(_42628_e)).ptr(), (*((*(_42643_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("panic function only accepts strings", 35)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e5e08c13_Data> _4446_d = _1e5e36009_buildVoidData();;
	(*(_4446_d))._field_Model=jule::Any(jule::new_ptr<_1e5cd9495_BuiltinPanicCallExprModel>(_1e5cd9495_BuiltinPanicCallExprModel{._field_Token=(*((*(_42643_fc))))._field_Token, ._field_Expr=(*(_4356_expr))._field_Model}), &__jule_any_type36);
	return _4446_d;;
}



inline jule::Ptr<_1e5e08c13_Data> _1e602c870_builtinCallerMake(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _45227_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _45242_fc, jule::Ptr<_1e5e08c13_Data>* _45264_d) {
	if (((*((*(_45242_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_45242_fc))))._field_Args.len() == 1LL)) {
			_1e5e0aebd_pushErr((*(_45227_e)).ptr(), (*((*(_45242_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("size", 4), &__jule_any_type4); __jule_collection; }));
			return nullptr;;
		};
		_1e5e0aebd_pushErr((*(_45227_e)).ptr(), (*((*(_45242_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type, size", 10), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	} else if (((*((*(_45242_fc))))._field_Args.len() > 3LL)) {
		_1e5e0aebd_pushErr((*(_45227_e)).ptr(), (*((*((*(_45242_fc))))._field_Args[3LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("make", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1e5e08c13_Data> _4656_t = _1e5e2898b_evalExprKind((*(_45227_e)), (*((*((*(_45242_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_4656_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_4656_t))._field_Decl))) {
		_1e5e0aebd_pushErr((*(_45227_e)).ptr(), (*((*((*(_45242_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_1e5e45007_Slc((*(_4656_t))._field_Kind.ptr()) == nullptr)) {
		_1e5e0aebd_pushErr((*(_45227_e)).ptr(), (*((*((*(_45242_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*(_4656_t))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("make", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	(*((*(_45264_d))))._field_Kind=(*(_4656_t))._field_Kind;
	jule::Ptr<_1e5e08c13_Data> _4806_lenExpr = _1e5e297a0_evalExpr(_1e5d86c7e_evalp((*((*(_45227_e))))._field_s, (*((*(_45227_e))))._field_lookup, (*(_4656_t))._field_Kind), (*((*(_45242_fc))))._field_Args[1LL]);;
	if ((_4806_lenExpr == nullptr)) {
		return nullptr;;
	};
	_1e5e14c41_checkIntegerIndexingByData((*(_45227_e)).ptr(), &(_4806_lenExpr), (*((*((*(_45242_fc))))._field_Args[1LL]))._field_Token);
	jule::Ptr<_1e5cd994b_BuiltinMakeCallExprModel> _4876_model = jule::new_ptr<_1e5cd994b_BuiltinMakeCallExprModel>(_1e5cd994b_BuiltinMakeCallExprModel{._field_Kind=(*(_4656_t))._field_Kind, ._field_Len=(*(_4806_lenExpr))._field_Model, ._field_Cap=jule::Any(nullptr)});;
	(*((*(_45264_d))))._field_Model=jule::Any(_4876_model, &__jule_any_type116);
	if (((*((*(_45242_fc))))._field_Args.len() == 3LL)) {
		jule::Ptr<_1e5e08c13_Data> _4937_capExpr = _1e5e297a0_evalExpr(_1e5d86c7e_evalp((*((*(_45227_e))))._field_s, (*((*(_45227_e))))._field_lookup, (*(_4656_t))._field_Kind), (*((*(_45242_fc))))._field_Args[2LL]);;
		if ((_4937_capExpr == nullptr)) {
			return (*(_45264_d));;
		};
		_1e5e14c41_checkIntegerIndexingByData((*(_45227_e)).ptr(), &(_4937_capExpr), (*((*((*(_45242_fc))))._field_Args[2LL]))._field_Token);
		(*(_4876_model))._field_Cap=(*(_4937_capExpr))._field_Model;
	};
	return (*(_45264_d));;
}



inline jule::Ptr<_1e5e08c13_Data> _1e602cb8e_builtinCallerAppend(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _50329_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _50344_fc, jule::Ptr<_1e5e08c13_Data>* _50366_d) {
	if (((*((*(_50344_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_50344_fc))))._field_Args.len() == 1LL)) {
			_1e5e0aebd_pushErr((*(_50329_e)).ptr(), (*((*(_50344_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("values", 6), &__jule_any_type4); __jule_collection; }));
			return nullptr;;
		};
		_1e5e0aebd_pushErr((*(_50329_e)).ptr(), (*((*(_50344_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1e5ca93bb_Expr> _5136_firstArg = (*((*(_50344_fc))))._field_Args[0LL];;
	jule::Ptr<_1e5e08c13_Data> _5146_t = _1e5e297a0_evalExpr((*(_50329_e)), _5136_firstArg);;
	if ((_5146_t == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1e5e4de12_Slc> _5196_s = _1e5e45007_Slc((*(_5146_t))._field_Kind.ptr());;
	if ((_5196_s == nullptr)) {
		_1e5e0aebd_pushErr((*(_50329_e)).ptr(), (*(_5136_firstArg))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	;
	;
	if (_1e5d8be71_checkValidityForInitExpr((*((*(_50329_e))))._field_s, true, false, &((*(_5146_t))._field_Kind), &(_5146_t), &((*_5136_firstArg.alloc)._field_Token))) {
		_1e5d876db_checkAssignType((*((*(_50329_e))))._field_s, false, &((*(_5146_t))._field_Kind), &(_5146_t), (*_5136_firstArg.alloc)._field_Token, _1e5e0dec1_getOwnerRefers((*(_50329_e)).ptr()));
	};
	jule::Ptr<_1e5e417ea_TypeKind> _5346_prefix = (*((*(_50329_e))))._field_prefix;;
	(*((*(_50329_e))))._field_prefix=(*(_5146_t))._field_Kind;
	__JULE_DEFER({
		(*((*(_50329_e))))._field_prefix=_5346_prefix;
	});;
	(*(_50366_d))=jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=(*(_5146_t))._field_Kind, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)});
	jule::Ptr<_1e5ca93bb_Expr> _5426_secondArg = (*((*(_50344_fc))))._field_Args[1LL];;
	{
		auto &_match_expr{ (*(_5426_secondArg))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1cb8a29e5:;
			{
				if (((*((*(_50344_fc))))._field_Args.len() > 2LL)) {
					_1e5e0aebd_pushErr((*(_50329_e)).ptr(), (*((*((*(_50344_fc))))._field_Args[2LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("variadic argument can't use with more argument", 46)), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1e5e08c13_Data> _5497_e1 = _1e5e297a0_evalExpr((*(_50329_e)), (*((*(_5426_secondArg))._field_Kind.unsafe_cast_ptr<_1e5cab852_VariadicExpr>()))._field_Expr);;
				if ((_5497_e1 == nullptr)) {
					return nullptr;;
				};
				if (((_1e5e43ea1_Prim((*(_5196_s))._field_Elem.ptr()) != nullptr) && _1e5e4b33d_IsU8(_1e5e43ea1_Prim((*(_5196_s))._field_Elem).ptr()))) {
					if (((_1e5e43ea1_Prim((*(_5497_e1))._field_Kind) != nullptr) && _1e5e4cdcd_IsStr(_1e5e43ea1_Prim((*(_5497_e1))._field_Kind).ptr()))) {
						_1e5e3d96d_makeVariadic(&(_5497_e1), _1e60283b5_primU8);
						(*((*(_50366_d))))._field_Model=jule::Any(jule::new_ptr<_1e5cd9d25_BuiltinAppendCallExprModel>(_1e5cd9d25_BuiltinAppendCallExprModel{._field_Dest=(*(_5146_t))._field_Model, ._field_Elements=(*(_5497_e1))._field_Model}), &__jule_any_type33);
						return (*(_50366_d));;
					};
				};
				if ((!(_1e5e43c1a_Variadicable((*(_5497_e1))._field_Kind)))) {
					_1e5e0aebd_pushErr((*(_50329_e)).ptr(), (*(_5426_secondArg))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not variadicable", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*(_5497_e1))._field_Kind), &__jule_any_type4); __jule_collection; }));
					return nullptr;;
				};
				_1e5e3d96d_makeVariadic(&(_5497_e1), (*(_5196_s))._field_Elem);
				(*(*(_5497_e1))._field_Kind.alloc)._field_Variadic=false;
				if (_1e5d8be71_checkValidityForInitExpr((*((*(_50329_e))))._field_s, true, false, &((*(_5196_s))._field_Elem), &(_5497_e1), &((*_5426_secondArg.alloc)._field_Token))) {
					(*(*(_5497_e1))._field_Kind.alloc)._field_Variadic=true;
					_1e5d876db_checkAssignType((*((*(_50329_e))))._field_s, false, &((*(_5196_s))._field_Elem), &(_5497_e1), (*_5426_secondArg.alloc)._field_Token, _1e5e0dec1_getOwnerRefers((*(_50329_e)).ptr()));
				} else {
					(*(*(_5497_e1))._field_Kind.alloc)._field_Variadic=true;
				};
				(*((*(_50366_d))))._field_Model=jule::Any(jule::new_ptr<_1e5cd9d25_BuiltinAppendCallExprModel>(_1e5cd9d25_BuiltinAppendCallExprModel{._field_Dest=(*(_5146_t))._field_Model, ._field_Elements=(*(_5497_e1))._field_Model}), &__jule_any_type33);
				return (*(_50366_d));;
			}
		}
		_match_end_1cb8a296d:;
	};
	jule::Ptr<_1e5e08c13_Data> _5926_e1 = _1e5e297a0_evalExpr((*(_50329_e)), _5426_secondArg);;
	if ((_5926_e1 == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1e5cd520a_SliceExprModel> _5976_slice = jule::new_ptr<_1e5cd520a_SliceExprModel>(_1e5cd520a_SliceExprModel{._field_ElemKind=(*(_5196_s))._field_Elem, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, ((*((*(_50344_fc))))._field_Args.len() - 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
	{
		auto expr = (*((*(_50344_fc))))._field_Args.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1cb8aeace:;
		if (it != expr_end) {
			jule::Ptr<_1e5ca93bb_Expr> _60114_arg = *it;
			{
				_5926_e1=_1e5e297a0_evalExpr((*(_50329_e)), _60114_arg);
				if ((_5926_e1 == nullptr)) {
					return nullptr;;
				};
				if ((*(*(_5926_e1))._field_Kind.alloc)._field_Variadic) {
					_1e5e0aebd_pushErr((*(_50329_e)).ptr(), (*(_60114_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("variadic argument can't use with more argument", 46)), jule::Slice<jule::Any>());
				};
				if (_1e5d8be71_checkValidityForInitExpr((*((*(_50329_e))))._field_s, true, false, &((*(_5196_s))._field_Elem), &(_5926_e1), &((*_60114_arg.alloc)._field_Token))) {
					_1e5d876db_checkAssignType((*((*(_50329_e))))._field_s, false, &((*(_5196_s))._field_Elem), &(_5926_e1), (*_60114_arg.alloc)._field_Token, _1e5e0dec1_getOwnerRefers((*(_50329_e)).ptr()));
				};
				(*(_5976_slice))._field_Elems=jule::append((*_5976_slice.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_5926_e1))._field_Model; __jule_collection; }));
			}
			_iter_next_1cb8aeace:;
			++it;
			goto _iter_begin_1cb8aeace;
		}
		_iter_end_1cb8aeace:;
	};
	(*((*(_50366_d))))._field_Model=jule::Any(jule::new_ptr<_1e5cd9d25_BuiltinAppendCallExprModel>(_1e5cd9d25_BuiltinAppendCallExprModel{._field_Dest=(*(_5146_t))._field_Model, ._field_Elements=jule::Any(_5976_slice, &__jule_any_type79)}), &__jule_any_type33);
	return (*(_50366_d));;
}



inline jule::Ptr<_1e5e08c13_Data> _1e602d178_callerCopySlice(jule::Ptr<_1e5e08c13_Data>* _62325_dest, jule::Ptr<_1e5e0a93a_eval>* _62343_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _62358_fc, jule::Ptr<_1e5e08c13_Data>* _62380_d) {
	if ((!((*((*(_62325_dest))))._field_Mutable))) {
		_1e5e0aebd_pushErr((*(_62343_e)).ptr(), (*((*((*(_62358_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e5e08c13_Data> _6286_src = _1e5e297a0_evalExpr((*(_62343_e)), (*((*(_62358_fc))))._field_Args[1LL]);;
	if ((_6286_src == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1e5e4de12_Slc> _6326_slc = _1e5e45007_Slc((*(_6286_src))._field_Kind.ptr());;
	if ((_6326_slc != nullptr)) {
		if (((!((*(_6286_src))._field_Mutable)) && _1e5e431d1_Mutable((*_6326_slc.alloc)._field_Elem.ptr()))) {
			_1e5e0aebd_pushErr((*(_62343_e)).ptr(), (*((*((*(_62358_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
		};
		if ((!(_1e5e42037_Equal((*((*(_62325_dest))))._field_Kind, (*(_6286_src))._field_Kind)))) {
			_1e5e0aebd_pushErr((*(_62343_e)).ptr(), (*((*((*(_62358_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*((*(_62325_dest))))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1e5e41be6_Str((*(_6286_src))._field_Kind), &__jule_any_type4); __jule_collection; }));
		};
	} else {
		jule::Ptr<_1e5e49913_Prim> _6423_destPrim = _1e5e43ea1_Prim((*(_1e5e45007_Slc((*((*(_62325_dest))))._field_Kind)))._field_Elem.ptr());;
		jule::Ptr<_1e5e49913_Prim> _6433_prim = _1e5e43ea1_Prim((*(_6286_src))._field_Kind);;
		if (((((_6423_destPrim == nullptr) || (_6433_prim == nullptr)) || (!(_1e5e4cdcd_IsStr(_6433_prim.ptr())))) || (!(_1e5e4b33d_IsU8(_6423_destPrim.ptr()))))) {
			_1e5e0aebd_pushErr((*(_62343_e)).ptr(), (*((*((*(_62358_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*((*(_62325_dest))))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1e5e41be6_Str((*(_6286_src))._field_Kind), &__jule_any_type4); __jule_collection; }));
		};
	};
	(*((*(_62380_d))))._field_Kind=_1e5e022e4_lenKind();
	(*((*(_62380_d))))._field_Model=jule::Any(jule::new_ptr<_1e5cdabc2_BuiltinCopyCallExprModel>(_1e5cdabc2_BuiltinCopyCallExprModel{._field_Dest=(*(_62325_dest)), ._field_Src=_6286_src}), &__jule_any_type37);
	return (*(_62380_d));;
}



inline jule::Ptr<_1e5e08c13_Data> _1e602d5a7_builtinCallerCopy(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _65727_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _65742_fc, jule::Ptr<_1e5e08c13_Data>* _65764_d) {
	if (((*((*(_65742_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_65742_fc))))._field_Args.len() == 1LL)) {
			_1e5e0aebd_pushErr((*(_65727_e)).ptr(), (*((*(_65742_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("src", 3), &__jule_any_type4); __jule_collection; }));
			return nullptr;;
		};
		_1e5e0aebd_pushErr((*(_65727_e)).ptr(), (*((*(_65742_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_65742_fc))))._field_Args.len() > 2LL)) {
		_1e5e0aebd_pushErr((*(_65727_e)).ptr(), (*((*((*(_65742_fc))))._field_Args[2LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("copy", 4), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1e5e08c13_Data> _6706_dest = _1e5e297a0_evalExpr((*(_65727_e)), (*((*(_65742_fc))))._field_Args[0LL]);;
	{
		
		if ((_6706_dest == nullptr)) {
			_case_begin_1cb8c55b7:;
			{
				return nullptr;;
			}
		}
		else if ((_1e5e45007_Slc((*(_6706_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cb8c63ba:;
			{
				return _1e602d178_callerCopySlice(&(_6706_dest), _65727_e, _65742_fc, _65764_d);;
			}
		}
		else {
			_case_begin_1cb8c51ee:;
			{
				_1e5e0aebd_pushErr((*(_65727_e)).ptr(), (*((*((*(_65742_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1cb8c354e:;
	};
}



inline jule::Ptr<_1e5e08c13_Data> _1e602d92b_callerLenSlice(jule::Ptr<_1e5e08c13_Data>* _68224_expr, jule::Ptr<_1e5e08c13_Data>* _68242_d) {
	(*((*(_68242_d))))._field_Kind=_1e5e022e4_lenKind();
	(*((*(_68242_d))))._field_Model=jule::Any(jule::new_ptr<_1e5cda122_BuiltinLenCallExprModel>(_1e5cda122_BuiltinLenCallExprModel{._field_Expr=(*(_68224_expr))}), &__jule_any_type117);
	return (*(_68242_d));;
}



inline jule::Ptr<_1e5e08c13_Data> _1e602dca0_callerLenMap(jule::Ptr<_1e5e08c13_Data>* _69022_expr, jule::Ptr<_1e5e08c13_Data>* _69040_d) {
	(*((*(_69040_d))))._field_Kind=_1e5e022e4_lenKind();
	(*((*(_69040_d))))._field_Model=jule::Any(jule::new_ptr<_1e5cda122_BuiltinLenCallExprModel>(_1e5cda122_BuiltinLenCallExprModel{._field_Expr=(*(_69022_expr))}), &__jule_any_type117);
	return (*(_69040_d));;
}



inline jule::Ptr<_1e5e08c13_Data> _1e602e124_callerLenArr(jule::Ptr<_1e5e08c13_Data>* _69822_expr, jule::Ptr<_1e5e08c13_Data>* _69840_d) {
	(*((*(_69840_d))))._field_Kind=_1e5e022e4_lenKind();
	(*((*(_69840_d))))._field_Constant=static__1e21a491e_NewI64(static_cast<jule::I64>((*(_1e5e44c71_Arr((*((*(_69822_expr))))._field_Kind.ptr())))._field_N));
	(*((*(_69840_d))))._field_Model=jule::Any((*((*(_69840_d))))._field_Constant, &__jule_any_type20);
	return (*(_69840_d));;
}



inline jule::Ptr<_1e5e08c13_Data> _1e602e498_callerLenStr(jule::Ptr<_1e5e08c13_Data>* _70522_expr, jule::Ptr<_1e5e08c13_Data>* _70540_d) {
	(*((*(_70540_d))))._field_Kind=_1e5e022e4_lenKind();
	if (_1e5e0964d_IsConst((*(_70522_expr)).ptr())) {
		(*((*(_70540_d))))._field_Constant=static__1e21a491e_NewI64(static_cast<jule::I64>(_1e21a6657_ReadStr((*((*(_70522_expr))))._field_Constant.ptr()).len()));
		(*((*(_70540_d))))._field_Model=jule::Any((*((*(_70540_d))))._field_Constant, &__jule_any_type20);
	} else {
		(*((*(_70540_d))))._field_Model=jule::Any(jule::new_ptr<_1e5cda122_BuiltinLenCallExprModel>(_1e5cda122_BuiltinLenCallExprModel{._field_Expr=(*(_70522_expr))}), &__jule_any_type117);
	};
	return (*(_70540_d));;
}



inline jule::Ptr<_1e5e08c13_Data> _1e602e81c_callerLenComptime(jule::Ptr<_1e5e08c13_Data>* _71827_d, jule::I64 _71837_n) {
	(*((*(_71827_d))))._field_Kind=_1e5e022e4_lenKind();
	(*((*(_71827_d))))._field_Constant=static__1e21a491e_NewI64(static_cast<jule::I64>(_71837_n));
	(*((*(_71827_d))))._field_Model=jule::Any((*((*(_71827_d))))._field_Constant, &__jule_any_type20);
	return (*(_71827_d));;
}



inline jule::Ptr<_1e5e08c13_Data> _1e602ec4b_builtinCallerLen(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _72526_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _72541_fc, jule::Ptr<_1e5e08c13_Data>* _72563_d) {
	if (((*((*(_72541_fc))))._field_Args.len() < 1LL)) {
		_1e5e0aebd_pushErr((*(_72526_e)).ptr(), (*((*(_72541_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("obj", 3), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_72541_fc))))._field_Args.len() > 1LL)) {
		_1e5e0aebd_pushErr((*(_72526_e)).ptr(), (*((*((*(_72541_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("len", 3), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1e5e08c13_Data> _7336_dest = _1e5e2945e_evalExpr1((*(_72526_e)), (*((*(_72541_fc))))._field_Args[0LL]);;
	{
		
		if ((_7336_dest == nullptr)) {
			_case_begin_1cb8d57a3:;
			{
				return nullptr;;
			}
		}
		else if ((_1e5e45007_Slc((*(_7336_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cb8d65a6:;
			{
				return _1e602d92b_callerLenSlice(&(_7336_dest), _72563_d);;
			}
		}
		else if ((_1e5e44c71_Arr((*(_7336_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cb8d661c:;
			{
				return _1e602e124_callerLenArr(&(_7336_dest), _72563_d);;
			}
		}
		else if ((_1e5e45a41_Map((*(_7336_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cb8d5451:;
			{
				return _1e602dca0_callerLenMap(&(_7336_dest), _72563_d);;
			}
		}
		else if (((_1e5e43ea1_Prim((*(_7336_dest))._field_Kind.ptr()) != nullptr) && _1e5e4cdcd_IsStr(_1e5e43ea1_Prim((*(_7336_dest))._field_Kind).ptr()))) {
			_case_begin_1cb8d54b7:;
			{
				return _1e602e498_callerLenStr(&(_7336_dest), _72563_d);;
			}
		}
		else if ((_1e5e462e4_comptimeStructFields((*(_7336_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cb8d552d:;
			{
				return _1e602e81c_callerLenComptime(_72563_d, (*(_1e5e462e4_comptimeStructFields((*(_7336_dest))._field_Kind)))._field_fields.len());;
			}
		}
		else if ((_1e5e46811_comptimeEnumFields((*(_7336_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cb8d5594:;
			{
				return _1e602e81c_callerLenComptime(_72563_d, (*(_1e5e46811_comptimeEnumFields((*(_7336_dest))._field_Kind)))._field_fields.len());;
			}
		}
		else if ((_1e5e475d1_comptimeTypeInfos((*(_7336_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cb8d670a:;
			{
				return _1e602e81c_callerLenComptime(_72563_d, (*(_1e5e475d1_comptimeTypeInfos((*(_7336_dest))._field_Kind)))._field_types.len());;
			}
		}
		else if ((_1e5e46d2d_comptimeParams((*(_7336_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cb8d6771:;
			{
				return _1e602e81c_callerLenComptime(_72563_d, (*(_1e5e46d2d_comptimeParams((*(_7336_dest))._field_Kind)))._field_params.len());;
			}
		}
		else if ((_1e5e47aed_comptimeStatics((*(_7336_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cb8d67d7:;
			{
				return _1e602e81c_callerLenComptime(_72563_d, (*(_1e5e47aed_comptimeStatics((*(_7336_dest))._field_Kind)))._field_fields.len());;
			}
		}
		else if ((_1e5e48b54_comptimeFiles((*(_7336_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cb8d684d:;
			{
				return _1e602e81c_callerLenComptime(_72563_d, (*(_1e5e48b54_comptimeFiles((*(_7336_dest))._field_Kind)))._field_files.len());;
			}
		}
		else if ((_1e5e48637_comptimeDecls((*(_7336_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cb8d68b4:;
			{
				return _1e602e81c_callerLenComptime(_72563_d, (*(_1e5e48637_comptimeDecls((*(_7336_dest))._field_Kind)))._field_decls.len());;
			}
		}
		else {
			_case_begin_1cb8d53da:;
			{
				_1e5e0aebd_pushErr((*(_72526_e)).ptr(), (*((*((*(_72541_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1cb8d373a:;
	};
}



inline jule::Ptr<_1e5e08c13_Data> _1e60300c0_callerCapSlice(jule::Ptr<_1e5e08c13_Data>* _76524_expr, jule::Ptr<_1e5e08c13_Data>* _76542_d) {
	(*((*(_76542_d))))._field_Kind=_1e5e022e4_lenKind();
	(*((*(_76542_d))))._field_Model=jule::Any(jule::new_ptr<_1e5cda41e_BuiltinCapCallExprModel>(_1e5cda41e_BuiltinCapCallExprModel{._field_Expr=(*(_76524_expr))}), &__jule_any_type118);
	return (*(_76542_d));;
}



inline jule::Ptr<_1e5e08c13_Data> _1e60304ee_builtinCallerCap(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _77326_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _77341_fc, jule::Ptr<_1e5e08c13_Data>* _77363_d) {
	if (((*((*(_77341_fc))))._field_Args.len() < 1LL)) {
		_1e5e0aebd_pushErr((*(_77326_e)).ptr(), (*((*(_77341_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("obj", 3), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_77341_fc))))._field_Args.len() > 1LL)) {
		_1e5e0aebd_pushErr((*(_77326_e)).ptr(), (*((*((*(_77341_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("cap", 3), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1e5e08c13_Data> _7816_dest = _1e5e297a0_evalExpr((*(_77326_e)), (*((*(_77341_fc))))._field_Args[0LL]);;
	{
		
		if ((_7816_dest == nullptr)) {
			_case_begin_1cb8e91ac:;
			{
				return nullptr;;
			}
		}
		else if ((*(_7816_dest))._field_Decl) {
			_case_begin_1cb8e9eb0:;
			{
				_1e5e0aebd_pushErr((*(_77326_e)).ptr(), (*((*((*(_77341_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1e5e45007_Slc((*(_7816_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cb8ea026:;
			{
				return _1e60300c0_callerCapSlice(&(_7816_dest), _77363_d);;
			}
		}
		else {
			_case_begin_1cb8e8ce4:;
			{
				_1e5e0aebd_pushErr((*(_77326_e)).ptr(), (*((*((*(_77341_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1cb8e5dac:;
	};
}



inline jule::Ptr<_1e5e08c13_Data> _1e60309d8_callerDeleteMap(jule::Ptr<_1e5e0a93a_eval>* _79625_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _79640_fc, jule::Ptr<_1e5e08c13_Data>* _79662_expr, jule::Ptr<_1e5e08c13_Data>* _79680_d) {
	if ((!((*((*(_79662_expr))))._field_Mutable))) {
		_1e5e0aebd_pushErr((*(_79625_e)).ptr(), (*((*((*(_79640_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
	};
	(*(_79680_d))=_1e5e36009_buildVoidData();
	jule::Ptr<_1e5cda7e8_BuiltinDeleteCallExprModel> _8016_model = jule::new_ptr<_1e5cda7e8_BuiltinDeleteCallExprModel>(_1e5cda7e8_BuiltinDeleteCallExprModel{._field_Dest=(*(_79662_expr)), ._field_Key=jule::Ptr<_1e5e08c13_Data>(nullptr)});;
	if (((*((*(_79640_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1e5e08c13_Data> _8057_key = _1e5e297a0_evalExpr((*(_79625_e)), (*((*(_79640_fc))))._field_Args[1LL]);;
		{
			
			if ((_8057_key == nullptr)) {
				_case_begin_1cb9010d7:;
				{
					return nullptr;;
				}
			}
			else if ((*(_8057_key))._field_Decl) {
				_case_begin_1cb8eec40:;
				{
					_1e5e0aebd_pushErr((*(_79625_e)).ptr(), (*((*((*(_79640_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			else {
				_case_begin_1cb8eebc9:;
				{
					;
					jule::Ptr<_1e5e417ea_TypeKind> _8148_keyType = (*(_1e5e45a41_Map((*((*(_79662_expr))))._field_Kind.ptr())))._field_Key;;
					if ((!(_1e5d876db_checkAssignType((*((*(_79625_e))))._field_s, false, &(_8148_keyType), &(_8057_key), (*((*((*(_79640_fc))))._field_Args[1LL]))._field_Token, _1e5e0dec1_getOwnerRefers((*(_79625_e)).ptr()))))) {
						return nullptr;;
					};
				}
			}
			_match_end_1cb8eeb63:;
		};
		(*(_8016_model))._field_Key=_8057_key;
	};
	(*((*(_79680_d))))._field_Model=jule::Any(_8016_model, &__jule_any_type38);
	return (*(_79680_d));;
}



inline jule::Ptr<_1e5e08c13_Data> _1e6030e17_builtinCallerDelete(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _82529_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _82544_fc, jule::Ptr<_1e5e08c13_Data>* _82566_d) {
	if (((*((*(_82544_fc))))._field_Args.len() < 1LL)) {
		_1e5e0aebd_pushErr((*(_82529_e)).ptr(), (*((*(_82544_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("map", 3), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_82544_fc))))._field_Args.len() > 2LL)) {
		_1e5e0aebd_pushErr((*(_82529_e)).ptr(), (*((*((*(_82544_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("delete", 6), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1e5e08c13_Data> _8336_dest = _1e5e297a0_evalExpr((*(_82529_e)), (*((*(_82544_fc))))._field_Args[0LL]);;
	{
		
		if ((_8336_dest == nullptr)) {
			_case_begin_1cb907a8e:;
			{
				return nullptr;;
			}
		}
		else if ((*(_8336_dest))._field_Decl) {
			_case_begin_1cb908892:;
			{
				_1e5e0aebd_pushErr((*(_82529_e)).ptr(), (*((*((*(_82544_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1e5e45a41_Map((*(_8336_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cb908908:;
			{
				return _1e60309d8_callerDeleteMap(_82529_e, _82544_fc, &(_8336_dest), _82566_d);;
			}
		}
		else {
			_case_begin_1cb9076c6:;
			{
				_1e5e0aebd_pushErr((*(_82529_e)).ptr(), (*((*((*(_82544_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1cb905a26:;
	};
}



inline jule::Ptr<_1e5e08c13_Data> _1e6031346_builtinCallerStdComptimeTypeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _84840_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _84855_fc, jule::Ptr<_1e5e08c13_Data>* ) {
	if (((*((*(_84855_fc))))._field_Args.len() < 1LL)) {
		_1e5e0aebd_pushErr((*(_84840_e)).ptr(), (*((*(_84855_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_84855_fc))))._field_Args.len() > 1LL)) {
		_1e5e0aebd_pushErr((*(_84840_e)).ptr(), (*((*((*(_84855_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("TypeOf", 6), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1e5e08c13_Data> _8576_d = _1e5e2898b_evalExprKind((*(_84840_e)), (*((*((*(_84855_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_8576_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1e5ce3416_FnIns> _8612_f = _1e5e4528d_Fn((*(_8576_d))._field_Kind.ptr());;
	if ((_8612_f != nullptr)) {
		if (_1e5ce48ce_IsBuiltin(_8612_f)) {
			_1e5e0aebd_pushErr((*(_84840_e)).ptr(), (*((*((*(_84855_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime::TypeOf is not supports type @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("<built-in fn>", 13), &__jule_any_type4); __jule_collection; }));
			return nullptr;;
		};
		if (((*_8612_f.alloc)._field_Generics.len() != (*((*_8612_f.alloc)._field_Decl))._field_Generics.len())) {
			_1e5e0aebd_pushErr((*(_84840_e)).ptr(), (*((*((*(_84855_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type has generics and used without instantiate", 46)), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	jule::Ptr<_1e5cc8c7b_StructIns> _8722_s = _1e5e45524_Struct((*(_8576_d))._field_Kind);;
	if (((_8722_s != nullptr) && ((*_8722_s.alloc)._field_Generics.len() != (*((*_8722_s.alloc)._field_Decl))._field_Generics.len()))) {
		_1e5e0aebd_pushErr((*(_84840_e)).ptr(), (*((*((*(_84855_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type has generics and used without instantiate", 46)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (_1e5e4605d_comptime((*(_8576_d))._field_Kind)) {
		_1e5e0aebd_pushErr((*(_84840_e)).ptr(), (*((*((*(_84855_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime::TypeOf is not supports type @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*(_8576_d))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return _1e5d2e870_buildComptimeTypeInfoData(&((*((*(_84840_e))))._field_s), &((*(_8576_d))._field_Kind));;
}



inline jule::Ptr<_1e5e08c13_Data> _1e6031775_builtinCallerStdComptimeValueOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _88441_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _88456_fc, jule::Ptr<_1e5e08c13_Data>* ) {
	if (((*((*(_88456_fc))))._field_Args.len() < 1LL)) {
		_1e5e0aebd_pushErr((*(_88441_e)).ptr(), (*((*(_88456_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_88456_fc))))._field_Args.len() > 1LL)) {
		_1e5e0aebd_pushErr((*(_88441_e)).ptr(), (*((*((*(_88456_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1e5e08c13_Data> _8926_d = _1e5e297a0_evalExpr((*(_88441_e)), (*((*(_88456_fc))))._field_Args[0LL]);;
	if ((_8926_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1e5e02646_isGoodValueToInfer(&(_8926_d))))) {
		_1e5e0aebd_pushErr((*(_88441_e)).ptr(), (*((*((*(_88456_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*(_8926_d))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return _1e5d2ebb1_buildComptimeValue(&(_8926_d));;
}



inline jule::Ptr<_1e5e08c13_Data> _1e6031de6_builtinCallerStdComptimeLine(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _90438_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _90453_fc, jule::Ptr<_1e5e08c13_Data>* ) {
	if (((*((*(_90453_fc))))._field_Args.len() > 0LL)) {
		_1e5e0aebd_pushErr((*(_90438_e)).ptr(), (*((*((*(_90453_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Line", 4), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1e21a449b_Const> _9086_constant = static__1e21a491e_NewI64(static_cast<jule::I64>((*((*((*(_90453_fc))))._field_Token))._field_Row));;
	return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=_1e60275b2_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_9086_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_9086_constant});;
}



inline jule::Ptr<_1e5e08c13_Data> _1e6032325_builtinCallerStdComptimeFile(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _91638_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _91653_fc, jule::Ptr<_1e5e08c13_Data>* ) {
	if (((*((*(_91653_fc))))._field_Args.len() > 0LL)) {
		_1e5e0aebd_pushErr((*(_91638_e)).ptr(), (*((*((*(_91653_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("File", 4), &__jule_any_type4); __jule_collection; }));
	};
	return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1e5d25dd8_comptimeFile>(_1e5d25dd8_comptimeFile{._field_file=(*((*((*(_91638_e))))._field_s))._field_file}), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data18)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)});;
}



inline jule::Ptr<_1e5e08c13_Data> _1e6032754_builtinCallerStdComptimeFiles(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _92939_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _92954_fc, jule::Ptr<_1e5e08c13_Data>* ) {
	if (((*((*(_92954_fc))))._field_Args.len() > 0LL)) {
		_1e5e0aebd_pushErr((*(_92939_e)).ptr(), (*((*((*(_92954_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Files", 5), &__jule_any_type4); __jule_collection; }));
	};
	return jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1e5d24469_comptimeFiles>(_1e5d24469_comptimeFiles{._field_files=(*((*((*(_92939_e))))._field_s))._field_files}), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data17)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)});;
}



inline jule::Ptr<_1e5e08c13_Data> _1e6032b83_builtinCallerStdComptimeTypeAlias(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _94243_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _94258_fc, jule::Ptr<_1e5e08c13_Data>* ) {
	if (((*((*(_94258_fc))))._field_Args.len() > 2LL)) {
		_1e5e0aebd_pushErr((*(_94243_e)).ptr(), (*((*((*(_94258_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_94258_fc))))._field_Args.len() == 0LL)) {
		_1e5e0aebd_pushErr((*(_94243_e)).ptr(), (*((*(_94258_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("ident, type", 11), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_94258_fc))))._field_Args.len() == 1LL)) {
		_1e5e0aebd_pushErr((*(_94243_e)).ptr(), (*((*(_94258_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_94258_fc))))._field_Args[0LL]))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1cb926dee:;
			{
				goto _match_end_1cb9281ca;
			}
		}
		else {
			_case_begin_1cb928252:;
			{
				_1e5e0aebd_pushErr((*(_94243_e)).ptr(), (*((*((*(_94258_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				_1e5e0b331_pushSuggestion((*(_94243_e)).ptr(), static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1cb9281ca:;
	};
	jule::Ptr<_1e5c8eacc_Token> _9636_ident = (*((*((*((*(_94258_fc))))._field_Args[0LL]))._field_Kind.cast_ptr<_1e5caabd6_IdentExpr>(&__jule_any_type51)))._field_Token;;
	{
		auto &_match_expr{ (*((*(_94243_e))))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data0)) {
			_case_begin_1cb92a7b5:;
			{
				goto _match_end_1cb92a9e6;
			}
		}
		else {
			_case_begin_1cb92aa5c:;
			{
				_1e5e0aebd_pushErr((*(_94243_e)).ptr(), (*((*(_94258_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("you can call @ function in the scopes only", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1cb92a9e6:;
	};
	jule::Ptr<_1e5d40771_scopeChecker> _9726_sc = (*((*(_94243_e))))._field_lookup.cast_ptr<_1e5d40771_scopeChecker>((jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data0);;
	jule::Ptr<_1e5e40a08_TypeAlias> _9736_alias = jule::new_ptr<_1e5e40a08_TypeAlias>(_1e5e40a08_TypeAlias{._field_Scope=(*(_9726_sc))._field_tree, ._field_Public=_1e5d78754_IsPub((*(_9636_ident))._field_Kind), ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=_9636_ident, ._field_Ident=(*_9636_ident.alloc)._field_Kind, ._field_Kind=jule::new_ptr<_1e5e4900b_TypeSymbol>(_1e5e4900b_TypeSymbol{._field_Decl=jule::Ptr<_1e5ca5087_TypeDecl>(nullptr), ._field_Kind=jule::Ptr<_1e5e417ea_TypeKind>(nullptr)}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1e5e40a08_TypeAlias>>(nullptr)});;
	jule::Ptr<_1e5e08c13_Data> _9836_t = _1e5e28ccc_eval1((*(_94243_e)), (*((*(_94258_fc))))._field_Args[1LL]);;
	if ((_9836_t == nullptr)) {
		return nullptr;;
	};
	if ((*(_9836_t))._field_Decl) {
		(*((*(_9736_alias))._field_Kind))._field_Kind=(*(_9836_t))._field_Kind;
	} else {
		jule::Ptr<_1e5d1a608_comptimeTypeInfo> _9907_cti = _1e5e47867_comptimeTypeInfo((*(_9836_t))._field_Kind.ptr());;
		if ((_9907_cti == nullptr)) {
			_1e5e0aebd_pushErr((*(_94243_e)).ptr(), (*((*((*(_94258_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			_1e5e0b331_pushSuggestion((*(_94243_e)).ptr(), static_cast<jule::Str>(jule::Str::lit("expected type declaration", 25)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*((*(_9736_alias))._field_Kind))._field_Kind=(*(_9907_cti))._field_base;
	};
	_1e5d458db_checkTypeAlias(_9726_sc, &(_9736_alias));
	return _1e5e36009_buildVoidData();;
}



inline jule::Ptr<_1e5e08c13_Data> _1e60330b2_builtinCallerStdMemSizeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _100235_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _100250_fc, jule::Ptr<_1e5e08c13_Data>* ) {
	jule::Ptr<_1e5e08c13_Data> _10036_result = jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=_1e60271e9_primUint, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)});;
	if (((*((*(_100250_fc))))._field_Args.len() < 1LL)) {
		_1e5e0aebd_pushErr((*(_100235_e)).ptr(), (*((*(_100250_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4); __jule_collection; }));
		return _10036_result;;
	};
	if (((*((*(_100250_fc))))._field_Args.len() > 1LL)) {
		_1e5e0aebd_pushErr((*(_100235_e)).ptr(), (*((*((*(_100250_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1e5e08c13_Data> _10156_d = _1e5e2898b_evalExprKind((*(_100235_e)), (*((*((*(_100250_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_10156_d == nullptr)) {
		return _10036_result;;
	};
	if ((!(_1e5e5eb7b_validTypeForXof(&((*(_10156_d))._field_Kind))))) {
		_1e5e0aebd_pushErr((*(_100235_e)).ptr(), (*((*((*(_100250_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*(_10156_d))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type4); __jule_collection; }));
	};
	(*(_10036_result))._field_Model=jule::Any(jule::new_ptr<_1e5cdb398_SizeofExprModel>(_1e5cdb398_SizeofExprModel{._field_Expr=(*(_10156_d))._field_Model}), &__jule_any_type119);
	return _10036_result;;
}



inline jule::Ptr<_1e5e08c13_Data> _1e60334e1_builtinCallerStdMemAlignOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _102736_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _102751_fc, jule::Ptr<_1e5e08c13_Data>* ) {
	jule::Ptr<_1e5e08c13_Data> _10286_result = jule::new_ptr<_1e5e08c13_Data>(_1e5e08c13_Data{._field_untyped=false, ._field_Kind=_1e60271e9_primUint, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1e21a449b_Const>(nullptr)});;
	if (((*((*(_102751_fc))))._field_Args.len() < 1LL)) {
		_1e5e0aebd_pushErr((*(_102736_e)).ptr(), (*((*(_102751_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4); __jule_collection; }));
		return _10286_result;;
	};
	if (((*((*(_102751_fc))))._field_Args.len() > 1LL)) {
		_1e5e0aebd_pushErr((*(_102736_e)).ptr(), (*((*((*(_102751_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1e5e08c13_Data> _10406_d = _1e5e2898b_evalExprKind((*(_102736_e)), (*((*((*(_102751_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_10406_d == nullptr)) {
		return _10286_result;;
	};
	if ((!(_1e5e5eb7b_validTypeForXof(&((*(_10406_d))._field_Kind))))) {
		_1e5e0aebd_pushErr((*(_102736_e)).ptr(), (*((*((*(_102751_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1e5e41be6_Str((*(_10406_d))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type4); __jule_collection; }));
	};
	(*(_10286_result))._field_Model=jule::Any(jule::new_ptr<_1e5cdba4c_AlignofExprModel>(_1e5cdba4c_AlignofExprModel{._field_Expr=(*(_10406_d))._field_Model}), &__jule_any_type120);
	return _10286_result;;
}



inline jule::Ptr<_1e5e08c13_Data> _1e6033920_builtinCallerStdMemFree(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _105233_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _105248_fc, jule::Ptr<_1e5e08c13_Data>* ) {
	if (((*((*(_105248_fc))))._field_Args.len() < 1LL)) {
		_1e5e0aebd_pushErr((*(_105233_e)).ptr(), (*((*(_105248_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("h", 1), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_105248_fc))))._field_Args.len() > 1LL)) {
		_1e5e0aebd_pushErr((*(_105233_e)).ptr(), (*((*((*(_105248_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Free", 4), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1e5e08c13_Data> _10616_d = _1e5e297a0_evalExpr((*(_105233_e)), (*((*(_105248_fc))))._field_Args[0LL]);;
	if ((_10616_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1e5e43984_GC((*(_10616_d))._field_Kind.ptr())))) {
		_1e5e0aebd_pushErr((*(_105233_e)).ptr(), (*((*((*(_105248_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e5e08c13_Data> _10706_result = _1e5e36009_buildVoidData();;
	(*(_10706_result))._field_Model=jule::Any(jule::new_ptr<_1e5cdc3aa_FreeExprModel>(_1e5cdc3aa_FreeExprModel{._field_Expr=(*(_10616_d))._field_Model}), &__jule_any_type39);
	return _10706_result;;
}



inline jule::Ptr<_1e5e08c13_Data> _1e6033d4e_builtinCallerStdJuleIntegratedEmit(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _107544_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _107559_fc, jule::Ptr<_1e5e08c13_Data>* _107581_d) {
	if ((!(_1e5e0b9b3_isUnsafe((*(_107544_e)).ptr())))) {
		_1e5e0aebd_pushErr((*(_107544_e)).ptr(), (*((*(_107559_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
	};
	if (((*((*(_107559_fc))))._field_Args.len() < 1LL)) {
		_1e5e0aebd_pushErr((*(_107544_e)).ptr(), (*((*(_107559_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("code", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1e5e08c13_Data> _10856_argd = _1e5e297a0_evalExpr((*(_107544_e)), (*((*(_107559_fc))))._field_Args[0LL]);;
	if ((_10856_argd == nullptr)) {
		return nullptr;;
	};
	if (((_1e5e43ea1_Prim((*(_10856_argd))._field_Kind.ptr()) == nullptr) || (!(_1e5e4cdcd_IsStr(_1e5e43ea1_Prim((*(_10856_argd))._field_Kind).ptr()))))) {
		_1e5e0aebd_pushErr((*(_107544_e)).ptr(), (*((*((*(_107559_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type4); (*it++) = jule::Any(_1e5e41be6_Str((*(_10856_argd))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((!(_1e5e0964d_IsConst(_10856_argd.ptr()))) || (!(_1e21a8c53_IsStr((*(_10856_argd))._field_Constant.ptr()))))) {
		_1e5e0aebd_pushErr((*(_107544_e)).ptr(), (*((*((*(_107559_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1e5e08c13_Data> _11006_r = _1e5e36009_buildVoidData();;
	jule::Ptr<_1e5ce3416_FnIns> _11026_f = _1e5e4528d_Fn((*((*(_107581_d))))._field_Kind);;
	if (((*(_11026_f))._field_Generics.len() > 0LL)) {
		(*(_11006_r))._field_Kind=(*((*(_11026_f))._field_Generics[0LL]))._field_Kind;
	};
	jule::Ptr<_1e5cdc0ad_BackendEmitExprModel> _11076_model = jule::new_ptr<_1e5cdc0ad_BackendEmitExprModel>(_1e5cdc0ad_BackendEmitExprModel{._field_Code=_1e21a6657_ReadStr((*(_10856_argd))._field_Constant), ._field_Exprs=jule::Slice<jule::Any>(nullptr)});;
	if (((*((*(_107559_fc))))._field_Args.len() > 1LL)) {
		(*(_11076_model))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, ((*((*(_107559_fc))))._field_Args.len() - 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });
		{
			auto expr = (*((*(_107559_fc))))._field_Args.slice(1LL);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1cb957a34:;
			if (it != expr_end) {
				jule::Ptr<_1e5ca93bb_Expr> _111315_arg = *it;
				{
					_10856_argd=_1e5e28ccc_eval1((*(_107544_e)), _111315_arg);
					if ((_10856_argd == nullptr)) {
						return nullptr;;
					};
					(*_11076_model.alloc)._field_Exprs=jule::append((*_11076_model.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_10856_argd))._field_Model; __jule_collection; }));
				}
				_iter_next_1cb957a34:;
				++it;
				goto _iter_begin_1cb957a34;
			}
			_iter_end_1cb957a34:;
		};
	};
	(*_11006_r.alloc)._field_Model=jule::Any(_11076_model, &__jule_any_type32);
	return _11006_r;;
}



inline jule::Ptr<_1e5e08c13_Data> _1e603427d_builtinCallerStdDebugOut(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _112634_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _112649_fc, jule::Ptr<_1e5e08c13_Data>* _112671_d) {
	(*(_112671_d))=_1e602b473_builtinCallerOut(nullptr, _112634_e, _112649_fc, _112671_d);
	if (((*(_112671_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*((*(_112671_d))))._field_Model.cast_ptr<_1e5cd8818_BuiltinOutCallExprModel>(&__jule_any_type34)))._field_Debug=true;
	return (*(_112671_d));;
}



inline jule::Ptr<_1e5e08c13_Data> _1e60346ac_builtinCallerStdDebugOutln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _113536_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _113551_fc, jule::Ptr<_1e5e08c13_Data>* _113573_d) {
	(*(_113573_d))=_1e602b8a2_builtinCallerOutln(nullptr, _113536_e, _113551_fc, _113573_d);
	if (((*(_113573_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*((*(_113573_d))))._field_Model.cast_ptr<_1e5cd8be2_BuiltinOutlnCallExprModel>(&__jule_any_type35)))._field_Debug=true;
	return (*(_113573_d));;
}



inline jule::Ptr<_1e6970636_FileInfo> _1e6973408_ParseFile(jule::Ptr<_1e5c95363_File> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1e6970636_FileInfo> _276_finf = jule::new_ptr<_1e6970636_FileInfo>(_1e6970636_FileInfo{._field_Ast=jule::Ptr<_1e5ca3173_AST>(nullptr), ._field_Errors=jule::Slice<_22578b38a_Log>(nullptr)});;
	({
		__jule_tuple_x_1e5ca3173_AST__jule_tuple_s_22578b38a_Log __jule_assign_result = _1e69b94c6_parseFileset(_2318_f);
		(*_276_finf.alloc)._field_Ast = __jule_assign_result.__jule_result_arg0;
		(*_276_finf.alloc)._field_Errors = __jule_assign_result.__jule_result_arg1;
	});
	if (((*_276_finf.alloc)._field_Errors.len() > 0LL)) {
		(*_276_finf.alloc)._field_Ast=nullptr;
	};
	return _276_finf;;
}



inline __jule_tuple_x_1e5ca3173_AST__jule_tuple_s_22578b38a_Log _1e69b94c6_parseFileset(jule::Ptr<_1e5c95363_File> _5521_f) {
	__jule_tuple_x_1e5ca3173_AST__jule_tuple_s_22578b38a_Log __jule_func_result;
	jule::Ptr<_1e69da10c_parser> _566_p = jule::new_ptr<_1e69da10c_parser>(_1e69da10c_parser{._field_ast=jule::Ptr<_1e5ca3173_AST>(nullptr), ._field_directives=jule::Slice<jule::Ptr<_1e5ca44a4_Directive>>(nullptr), ._field_errors=jule::Slice<_22578b38a_Log>(nullptr), ._field_ep=jule::Ptr<_1e69c94e7_exprBuilder>(nullptr)});;
	_1e69eae97_parse(_566_p, &(_5521_f));
	__jule_func_result.__jule_result_arg0 = (*_566_p.alloc)._field_ast;
	__jule_func_result.__jule_result_arg1 = (*_566_p.alloc)._field_errors;
	return __jule_func_result;;
}



inline jule::Ptr<_1e5cb50a8_ScopeTree> _1e69b9e99_newScope(void) {
	return jule::new_ptr<_1e5cb50a8_ScopeTree>(_1e5cb50a8_ScopeTree{._field_Parent=jule::Ptr<_1e5cb50a8_ScopeTree>(nullptr), ._field_Unsafety=false, ._field_Deferred=false, ._field_Stmts=jule::Slice<_1e5cb4948_Stmt>(nullptr), ._field_End=jule::Ptr<_1e5c8eacc_Token>(nullptr)});;
}



inline __jule_tuple_bool__jule_tuple_bool _1e69ba2eb_isSt(jule::Ptr<_1e5c8eacc_Token> _499_current, jule::Ptr<_1e5c8eacc_Token> _4926_prev) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=(((*(_499_current))._field_Id == static_cast<jule::U64>(3LLU)) || ((*(_4926_prev))._field_Row < (*_499_current.alloc)._field_Row));
	__jule_func_result.__jule_result_arg1=((*_499_current.alloc)._field_Id == static_cast<jule::U64>(3LLU));
	return __jule_func_result;;
}



inline jule::Bool _1e69ba670_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _5526_tokens, jule::I64* _5545_i) {
	if ((((*(_5545_i)) > 1LL) && ((*((*(_5526_tokens))[((*(_5545_i)) - 2LL)]))._field_Id == static_cast<jule::U64>(19LLU)))) {
		return false;;
	};
	{
		jule::Ptr<_1e5c8eacc_Token> _613_prev = (*(_5526_tokens))[((*(_5545_i)) - 1LL)];;
		return (((*(_613_prev))._field_Id == static_cast<jule::U64>(17LLU)) || (_1e5c90627_IsBinOp((*_613_prev.alloc)._field_Id) && ((*_613_prev.alloc)._field_Row < (*((*(_5526_tokens))[(*(_5545_i))]))._field_Row)));;
	};
}



inline __jule_tuple_int__jule_tuple_bool _1e69baa38_nextStPos(jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _6815_tokens, jule::I64 _6833_start) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _696_braceN = 0LL;;
	jule::I64 _706_i = _6833_start;;
	for (; (_706_i < (*(_6815_tokens)).len()); (_706_i)++) {
		{
			jule::Bool _727_ok = false;;
			jule::Bool _737_terminated = false;;
			jule::Ptr<_1e5c8eacc_Token> _743_tok = (*(_6815_tokens))[_706_i];;
			{
				auto &_match_expr{ (*(_743_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1cb9db6de:;
					{
						if (((_696_braceN == 0LL) && (_706_i > _6833_start))) {
							if ((!(_1e69ba670_prevIsIncompleteExpr(_6815_tokens, &(_706_i))))) {
								({
									__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1e69ba2eb_isSt(_743_tok, (*(_6815_tokens))[(_706_i - 1LL)]);
									_727_ok = __jule_assign_result.__jule_result_arg0;
									_737_terminated = __jule_assign_result.__jule_result_arg1;
								});
								if (_727_ok) {
									goto _julec_label_1cb9e0380;
								};
							};
						};
						(_696_braceN)++;
						goto _iter_next_1cb9da27b;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1cb9db931:;
					{
						(_696_braceN)--;
						if (((_696_braceN == 0LL) && ((_706_i + 1LL) < (*(_6815_tokens)).len()))) {
							({
								__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1e69ba2eb_isSt((*(_6815_tokens))[(_706_i + 1LL)], _743_tok);
								_727_ok = __jule_assign_result.__jule_result_arg0;
								_737_terminated = __jule_assign_result.__jule_result_arg1;
							});
							if (_727_ok) {
								(_706_i)++;
								goto _julec_label_1cb9e0380;
							};
						};
						goto _iter_next_1cb9da27b;
					}
				}
				_match_end_1cb9db887:;
			};
			if ((_696_braceN != 0LL)) {
				goto _iter_next_1cb9da27b;
			};
			if ((_706_i > _6833_start)) {
				if (_1e69ba670_prevIsIncompleteExpr(_6815_tokens, &(_706_i))) {
					goto _iter_next_1cb9da27b;
				};
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1e69ba2eb_isSt(_743_tok, (*(_6815_tokens))[(_706_i - 1LL)]);
					_727_ok = __jule_assign_result.__jule_result_arg0;
					_737_terminated = __jule_assign_result.__jule_result_arg1;
				});
			} else {
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1e69ba2eb_isSt(_743_tok, _743_tok);
					_727_ok = __jule_assign_result.__jule_result_arg0;
					_737_terminated = __jule_assign_result.__jule_result_arg1;
				});
			};
			if ((!(_727_ok))) {
				goto _iter_next_1cb9da27b;
			};
			_julec_label_1cb9e0380:;
			if (_737_terminated) {
				(_706_i)++;
			};
			__jule_func_result.__jule_result_arg0 = _706_i;
			__jule_func_result.__jule_result_arg1 = _737_terminated;
			return __jule_func_result;;
		}
	_iter_next_1cb9da27b:;
	}
	_iter_end_1cb9da27b:;;
	__jule_func_result.__jule_result_arg0 = _706_i;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1e5c8eacc_Token__jule_tuple_bool _1e69badac_skipSt(jule::I64* _13016_i, jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _13028_tokens) {
	__jule_tuple_sx_1e5c8eacc_Token__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _1312_start = (*(_13016_i));;
	jule::Bool _1326_terminated = false;;
	({
		__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1e69baa38_nextStPos(&(_13028_tokens), _1312_start);
		(*(_13016_i)) = __jule_assign_result.__jule_result_arg0;
		_1326_terminated = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _1346_stTokens = _13028_tokens.slice(_1312_start, (*(_13016_i)));;
	if (_1326_terminated) {
		if ((_1346_stTokens.len() == 1LL)) {
			__jule_func_result = std::move(_1e69badac_skipSt(_13016_i, _13028_tokens));
return __jule_func_result;;
		};
		(_1346_stTokens).mut_slice(0LL, (_1346_stTokens.len() - 1LL));;
	};
	__jule_func_result.__jule_result_arg0 = _1346_stTokens;
	__jule_func_result.__jule_result_arg1 = _1326_terminated;
	return __jule_func_result;;
}



inline jule::Slice<jule::Ptr<_1e69bb1dc_stmt>> _1e69bb594_splitStmts(jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _15120_tokens) {
	jule::Slice<jule::Ptr<_1e69bb1dc_stmt>> _1526_stmts = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1e69bb1dc_stmt>>::alloc(0LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1e69bb1dc_stmt>(nullptr); __jule_collection; });;
	jule::I64 _1536_pos = 0LL;;
	while ((_1536_pos < (*(_15120_tokens)).len())) {
		{
			jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _1557_stmt;
			jule::Bool _15513_terminated;
			({
				__jule_tuple_sx_1e5c8eacc_Token__jule_tuple_bool __jule_assign_result = _1e69badac_skipSt(&(_1536_pos), (*(_15120_tokens)));
				_1557_stmt = __jule_assign_result.__jule_result_arg0;
				_15513_terminated = __jule_assign_result.__jule_result_arg1;
			});
			{ jule::Slice<jule::Ptr<_1e69bb1dc_stmt>> &__jule_push_dest = _1526_stmts; __jule_push_dest.push(jule::new_ptr<_1e69bb1dc_stmt>(_1e69bb1dc_stmt{._field_tokens=_1557_stmt, ._field_terminated=_15513_terminated})); };
		}
	_iter_next_1cb9e40ed:;
	}
	_iter_end_1cb9e40ed:;;
	return _1526_stmts;;
}



inline jule::Bool _1e69d4bea_isTypeOp(jule::U64* _89314_id) {
	return ((((*(_89314_id)) == static_cast<jule::U64>(65LLU)) || ((*(_89314_id)) == static_cast<jule::U64>(54LLU))) || ((*(_89314_id)) == static_cast<jule::U64>(62LLU)));;
}



inline jule::Bool _1e69d5008_isTypeRange(jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _90021_tokens) {
	jule::Bool _9016_op = false;;
	{
		auto expr = _90021_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbaba1a2:;
		if (it != expr_end) {
			jule::I64 _9026_i = it - expr->begin();
			jule::Ptr<_1e5c8eacc_Token> _9029_token = *it;
			{
				if (((*(_9029_token))._field_Id == static_cast<jule::U64>(76LLU))) {
					if (_9016_op) {
						return true;;
					};
					jule::I64 _9078_rangeN = 0LL;;
					jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _9088_lTokens = (*(_90021_tokens)).slice(_9026_i);;
					{
						auto expr = &(_9088_lTokens);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1cbabba66:;
						if (it != expr_end) {
							jule::Ptr<_1e5c8eacc_Token> _90911_lToken = *it;
							{
								{
									auto &_match_expr{ (*(_90911_lToken))._field_Id };
									
									if (_match_expr == static_cast<jule::U64>(76LLU)) {
										_case_begin_1cbabc319:;
										{
											(_9078_rangeN)++;
											goto _iter_next_1cbabba66;
										}
									}
									else if (_match_expr == static_cast<jule::U64>(77LLU)) {
										_case_begin_1cbabc704:;
										{
											(_9078_rangeN)--;
											goto _iter_next_1cbabba66;
										}
									}
									_match_end_1cbabc605:;
								};
								if ((_9078_rangeN == 0LL)) {
									return _1e69d4bea_isTypeOp(&((*(_90911_lToken))._field_Id));;
								};
							}
							_iter_next_1cbabba66:;
							++it;
							goto _iter_begin_1cbabba66;
						}
						_iter_end_1cbabba66:;
					};
					return true;;
				};
				if ((!(_1e69d4bea_isTypeOp(&((*_9029_token.alloc)._field_Id))))) {
					return false;;
				};
				_9016_op=true;
			}
			_iter_next_1cbaba1a2:;
			++it;
			_9026_i++;
			goto _iter_begin_1cbaba1a2;
		}
		_iter_end_1cbaba1a2:;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _1e69d52c2_getBlockExpr(jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _93322_tokens) {
	jule::I64 _9346_braceN = 0LL;;
	jule::I64 _9356_skipToNextBraceClose = 0LL;;
	{
		auto expr = _93322_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbabad95:;
		if (it != expr_end) {
			jule::I64 _9366_i = it - expr->begin();
			jule::Ptr<_1e5c8eacc_Token> _9369_tok = *it;
			{
				{
					auto &_match_expr{ (*(_9369_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(31LLU)) {
						_case_begin_1cbac040a:;
						{
							if (((((*(_93322_tokens)).len() - _9366_i) > 1LL) && ((*((*(_93322_tokens))[(_9366_i + 1LL)]))._field_Id == static_cast<jule::U64>(72LLU)))) {
								(_9356_skipToNextBraceClose)++;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1cbac0493:;
						{
							if (((_9346_braceN > 0LL) || (_9356_skipToNextBraceClose > 0LL))) {
								if ((_9356_skipToNextBraceClose > 0LL)) {
									(_9356_skipToNextBraceClose)--;
								};
								(_9346_braceN)++;
								goto _match_end_1cbac033e;
							};
							return (*(_93322_tokens)).slice(0LL, _9366_i);;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1cbac0509:;
						{
							(_9346_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1cbac0570:;
						{
							(_9346_braceN)--;
						}
					}
					_match_end_1cbac033e:;
				};
			}
			_iter_next_1cbabad95:;
			++it;
			_9366_i++;
			goto _iter_begin_1cbabad95;
		}
		_iter_end_1cbabad95:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1e5c8eacc_Token__jule_tuple_sx_1e5c8eacc_Token _1e69d568a_splitDelim(jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _96520_tokens, jule::U64 _96538_delim) {
	__jule_tuple_sx_1e5c8eacc_Token__jule_tuple_sx_1e5c8eacc_Token __jule_func_result;
	jule::I64 _9666_func = -1LL;;
	jule::I64 _9676_rangeN = 0LL;;
	jule::I64 _9686_i = 0LL;;
	for (; (_9686_i < (*(_96520_tokens)).len()); (_9686_i)++) {
		{
			jule::Ptr<_1e5c8eacc_Token> _9703_token = (*(_96520_tokens))[_9686_i];;
			{
				auto &_match_expr{ (*(_9703_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(29LLU)) {
					_case_begin_1cbac5058:;
					{
						_9666_func=_9676_rangeN;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1cbac50d0:;
					{
						(_9676_rangeN)++;
						goto _iter_next_1cbac373d;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1cbac5146:;
					{
						(_9676_rangeN)--;
						if ((_9666_func == _9676_rangeN)) {
							_9666_func=-1LL;
							if (((((*(_96520_tokens)).len() - _9686_i) > 1LL) && ((*((*(_96520_tokens))[(_9686_i + 1LL)]))._field_Id == static_cast<jule::U64>(8LLU)))) {
								(_9686_i)++;
								goto _iter_next_1cbac373d;
							};
						};
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
					_case_begin_1cbac51ac:;
					{
						(_9676_rangeN)--;
					}
				}
				_match_end_1cbac4cc2:;
			};
			if ((((*(_9703_token))._field_Id == _96538_delim) && (_9676_rangeN == 0LL))) {
				jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _9948_l = (*(_96520_tokens)).slice(0LL, _9686_i);;
				jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _9958_r = (*(_96520_tokens)).slice((_9686_i + 1LL));;
				__jule_func_result.__jule_result_arg0 = _9948_l;
				__jule_func_result.__jule_result_arg1 = _9958_r;
				return __jule_func_result;;
			};
		}
	_iter_next_1cbac373d:;
	}
	_iter_end_1cbac373d:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline jule::I64 _1e69d5954_findLowestPrecOp(jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _100422_tokens) {
	jule::U8 _10096_prec = 255LLU;;
	jule::I64 _10106_precPos = -1LL;;
	jule::I64 _10126_braceN = 0LL;;
	jule::Bool _10136_skipToNextBraceOpen = false;;
	{
		auto expr = _100422_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbaca349:;
		if (it != expr_end) {
			jule::I64 _10146_i = it - expr->begin();
			jule::Ptr<_1e5c8eacc_Token> *_10149_token = it;
			{
				{
					auto &_match_expr{ (*((*(_10149_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1cbacb0e7:;
						{
							_10136_skipToNextBraceOpen=false;
							goto _case_begin_1cbacb180;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1cbacb180:;
						{
							(_10126_braceN)++;
							goto _iter_next_1cbaca349;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(75LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1cbacb1e6:;
						{
							(_10126_braceN)--;
							goto _iter_next_1cbaca349;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(13LLU)) {
						_case_begin_1cbacb25c:;
						{
							_10136_skipToNextBraceOpen=true;
							goto _iter_next_1cbaca349;
						}
					}
					_match_end_1cbacb02b:;
				};
				{
					
					if (_10136_skipToNextBraceOpen) {
						_case_begin_1cbacc824:;
						{
							goto _iter_next_1cbaca349;
						}
					}
					else if ((_10146_i == 0LL)) {
						_case_begin_1cbacc9bc:;
						{
							goto _iter_next_1cbaca349;
						}
					}
					else if ((_10126_braceN > 0LL)) {
						_case_begin_1cbacca33:;
						{
							goto _iter_next_1cbaca349;
						}
					}
					else if ((!(_1e5c90627_IsBinOp((*((*(_10149_token))))._field_Id)))) {
						_case_begin_1cbacca99:;
						{
							goto _iter_next_1cbaca349;
						}
					}
					_match_end_1cbacc7ad:;
				};
				jule::Ptr<_1e5c8eacc_Token> _10433_left = (*(_100422_tokens))[(_10146_i - 1LL)];;
				if ((_1e5c90319_IsUnaryOp((*(_10433_left))._field_Id) || ((*_10433_left.alloc)._field_Id == static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1cbaca349;
				};
				if (((_10146_i > 1LL) && ((*_10433_left.alloc)._field_Id == static_cast<jule::U64>(77LLU)))) {
					jule::Ptr<_1e5c8eacc_Token> _10514_lleft = (*(_100422_tokens))[(_10146_i - 2LL)];;
					if (((*(_10514_lleft))._field_Id == static_cast<jule::U64>(76LLU))) {
						if ((((*((*(_10149_token))))._field_Id == static_cast<jule::U64>(65LLU)) || ((*(*(_10149_token)).alloc)._field_Id == static_cast<jule::U64>(62LLU)))) {
							goto _iter_next_1cbaca349;
						};
					};
				};
				jule::U8 _10603_p = _1e5c8ee84_Prec((*(_10149_token)));;
				if (((_10603_p != 0LLU) && (_10603_p <= _10096_prec))) {
					_10096_prec=_10603_p;
					_10106_precPos=_10146_i;
				};
			}
			_iter_next_1cbaca349:;
			++it;
			_10146_i++;
			goto _iter_begin_1cbaca349;
		}
		_iter_end_1cbaca349:;
	};
	return _10106_precPos;;
}



inline jule::Ptr<_1e5caabd6_IdentExpr> _1e69d5c1d_buildIdentExpr(jule::Ptr<_1e5c8eacc_Token>* _106924_token) {
	return jule::new_ptr<_1e5caabd6_IdentExpr>(_1e5caabd6_IdentExpr{._field_Token=(*(_106924_token)), ._field_Ident=(*((*(_106924_token))))._field_Kind, ._field_Binded=false});;
}



inline __jule_tuple_sx_1e5c8eacc_Token__jule_tuple_int _1e69d5ed7_getRangeExprTokens(jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _107728_tokens) {
	__jule_tuple_sx_1e5c8eacc_Token__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg1 = 0;
	jule::I64 _10786_rangeN = 0LL;;
	jule::I64 _10796_i = ((*(_107728_tokens)).len() - 1LL);;
	for (; (_10796_i >= 0LL); (_10796_i)--) {
		{
			jule::Ptr<_1e5c8eacc_Token> _10813_tok = (*(_107728_tokens))[_10796_i];;
			{
				auto &_match_expr{ (*(_10813_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1cbad494c:;
					{
						(_10786_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1cbad4c7c:;
					{
						(_10786_rangeN)--;
					}
				}
				_match_end_1cbad49c4:;
			};
			if ((_10786_rangeN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_107728_tokens)).slice(0LL, _10796_i);
				__jule_func_result.__jule_result_arg1 = _10786_rangeN;
				return __jule_func_result;;
			};
		}
	_iter_next_1cbad3e24:;
	}
	_iter_end_1cbad3e24:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _10786_rangeN;
	return __jule_func_result;;
}



inline jule::Bool _1e69d63b1_isAnonFnHead(jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _110018_tokens) {
	{
		auto &_match_expr{ (*((*(_110018_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1cbad672e:;
			{
				if ((((*(_110018_tokens)).len() == 1LL) || ((*((*(_110018_tokens))[1LL]))._field_Id != static_cast<jule::U64>(29LLU)))) {
					goto _match_end_1cbad6b5d;
				};
				goto _case_begin_1cbad6ca1;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1cbad6ca1:;
			{
				if (((*((*(_110018_tokens))[((*(_110018_tokens)).len() - 1LL)]))._field_Id == static_cast<jule::U64>(73LLU))) {
					goto _match_end_1cbad6b5d;
				};
				return true;;
			}
		}
		_match_end_1cbad6b5d:;
	};
	return false;;
}



inline jule::Bool _1e69d70b5_checkAssignTokens(jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _1623_tokens) {
	if ((((*(_1623_tokens)).len() == 0LL) || (!(_1e5c94395_IsAssign((*((*(_1623_tokens))[0LL]))._field_Id))))) {
		return false;;
	};
	jule::I64 _206_braceN = 0LL;;
	{
		auto expr = _1623_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbb80b3b:;
		if (it != expr_end) {
			jule::Ptr<_1e5c8eacc_Token> *_219_t = it;
			{
				{
					auto &_match_expr{ (*((*(_219_t))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1cbb81301:;
						{
							(_206_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1cbb81686:;
						{
							(_206_braceN)--;
						}
					}
					_match_end_1cbb81587:;
				};
				{
					
					if ((_206_braceN < 0LL)) {
						_case_begin_1cbb827db:;
						{
							return false;;
						}
					}
					else if ((_206_braceN > 0LL)) {
						_case_begin_1cbb82874:;
						{
							goto _iter_next_1cbb80b3b;
						}
					}
					else if (_1e5c94928_IsAssignOp((*((*(_219_t))))._field_Id) || ((*(*(_219_t)).alloc)._field_Id == static_cast<jule::U64>(38LLU))) {
						_case_begin_1cbb828da:;
						{
							return true;;
						}
					}
					_match_end_1cbb82742:;
				};
			}
			_iter_next_1cbb80b3b:;
			++it;
			goto _iter_begin_1cbb80b3b;
		}
		_iter_end_1cbb80b3b:;
	};
	return false;;
}



inline _22578b38a_Log _1e69d8281_makeErr(jule::I64 _5112_row, jule::I64 _5122_col, jule::Ptr<_1e5c95363_File>* _5133_f, jule::Str _5143_fmt, jule::Slice<jule::Any> _5156_args) {
	return _22578b38a_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_5112_row, ._field_Column=_5122_col, ._field_Path=(*((*(_5133_f))))._field_Path, ._field_Text=_22578b7ec_Logf(_5143_fmt, _5156_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
}



inline jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _1e69d87ae_range(jule::I64* _6915_i, jule::U64 _6923_open, jule::U64 _6938_close, jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _6959_tokens) {
	if (((*(_6915_i)) >= (*(_6959_tokens)).len())) {
		return nullptr;;
	};
	jule::Ptr<_1e5c8eacc_Token> _732_tok = (*(_6959_tokens))[(*(_6915_i))];;
	if (((*(_732_tok))._field_Id != _6923_open)) {
		return nullptr;;
	};
	((*(_6915_i)))++;
	jule::I64 _786_rangeN = 1LL;;
	jule::I64 _792_start = (*(_6915_i));;
	for (; ((_786_rangeN != 0LL) && ((*(_6915_i)) < (*(_6959_tokens)).len())); ((*(_6915_i)))++) {
		{
			jule::Ptr<_1e5c8eacc_Token> _813_token = (*(_6959_tokens))[(*(_6915_i))];;
			{
				auto &_match_expr{ (*(_813_token))._field_Id };
				
				if (_match_expr == _6923_open) {
					_case_begin_1cbb87945:;
					{
						(_786_rangeN)++;
					}
				}
				else if (_match_expr == _6938_close) {
					_case_begin_1cbb87ca8:;
					{
						(_786_rangeN)--;
					}
				}
				_match_end_1cbb87c20:;
			};
		}
	_iter_next_1cbb85547:;
	}
	_iter_end_1cbb85547:;;
	return (*(_6959_tokens)).slice(_792_start, ((*(_6915_i)) - 1LL));;
}



inline __jule_tuple_sx_1e5c8eacc_Token__jule_tuple_sx_1e5c8eacc_Token _1e69d8a78_rangeLast(jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _9919_tokens) {
	__jule_tuple_sx_1e5c8eacc_Token__jule_tuple_sx_1e5c8eacc_Token __jule_func_result;
	if (((*(_9919_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::U64 _1032_first = (*((*(_9919_tokens))[((*(_9919_tokens)).len() - 1LL)]))._field_Id;;
	if ((((_1032_first != static_cast<jule::U64>(73LLU)) && (_1032_first != static_cast<jule::U64>(76LLU))) && (_1032_first != static_cast<jule::U64>(75LLU)))) {
		__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I64 _1096_braceN = 0LL;;
	jule::I64 _1106_i = ((*(_9919_tokens)).len() - 1LL);;
	for (; (_1106_i >= 0LL); (_1106_i)--) {
		{
			jule::Ptr<_1e5c8eacc_Token> _1123_token = (*(_9919_tokens))[_1106_i];;
			{
				auto &_match_expr{ (*(_1123_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1cbb8bb25:;
					{
						(_1096_braceN)++;
						goto _iter_next_1cbb8ae65;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1cbb8be55:;
					{
						(_1096_braceN)--;
					}
				}
				_match_end_1cbb8bb9c:;
			};
			if ((_1096_braceN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_9919_tokens)).slice(0LL, _1106_i);
				__jule_func_result.__jule_result_arg1 = (*(_9919_tokens)).slice(_1106_i);
				return __jule_func_result;;
			};
		}
	_iter_next_1cbb8ae65:;
	}
	_iter_end_1cbb8ae65:;;
	__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_1e5c8eacc_Token__jule_tuple_s_22578b38a_Log _1e69d902e_parts(jule::Slice<jule::Ptr<_1e5c8eacc_Token>>* _13715_tokens, jule::U64 _13733_id, jule::Bool _13746_exprMust) {
	__jule_tuple_ssx_1e5c8eacc_Token__jule_tuple_s_22578b38a_Log __jule_func_result;
	if (((*(_13715_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I64 _1416_rangeN = 0LL;;
	jule::I64 _1426_last = 0LL;;
	{
		auto expr = _13715_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbb8ece3:;
		if (it != expr_end) {
			jule::I64 _1436_i = it - expr->begin();
			jule::Ptr<_1e5c8eacc_Token> _1439_token = *it;
			{
				{
					auto &_match_expr{ (*(_1439_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1cbb90d27:;
						{
							(_1416_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1cbb90d9e:;
						{
							(_1416_rangeN)--;
						}
					}
					else if (_match_expr == _13733_id) {
						_case_begin_1cbb90e15:;
						{
							if ((_1416_rangeN > 0LL)) {
								goto _iter_next_1cbb8ece3;
							};
							if ((_13746_exprMust && ((_1436_i - _1426_last) <= 0LL))) {
								_22578b38a_Log _1545_err = _1e69d8281_makeErr((*(_1439_token))._field_Row, (*_1439_token.alloc)._field_Column, &((*_1439_token.alloc)._field_File), static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());;
								{ jule::Slice<_22578b38a_Log> &__jule_push_dest = __jule_func_result.__jule_result_arg1; __jule_push_dest.push(_1545_err); };
							};
							{ jule::Slice<jule::Slice<jule::Ptr<_1e5c8eacc_Token>>> &__jule_push_dest = __jule_func_result.__jule_result_arg0; __jule_push_dest.push((*(_13715_tokens)).slice(_1426_last, _1436_i)); };
							_1426_last=(_1436_i + 1LL);
						}
					}
					_match_end_1cbb90c5b:;
				};
			}
			_iter_next_1cbb8ece3:;
			++it;
			_1436_i++;
			goto _iter_begin_1cbb8ece3;
		}
		_iter_end_1cbb8ece3:;
	};
	if ((_1426_last < (*(_13715_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1e5c8eacc_Token>>> &__jule_push_dest = __jule_func_result.__jule_result_arg0; __jule_push_dest.push((*(_13715_tokens)).slice(_1426_last)); };
	};
	return __jule_func_result;;
}



inline jule::U64 _1e69d92b5_getCloseOfBrace(jule::U64 _16720_left) {
	{
		auto &_match_expr{ _16720_left };
		
		if (_match_expr == static_cast<jule::U64>(75LLU)) {
			_case_begin_1cbb94457:;
			{
				return static_cast<jule::U64>(74LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1cbb94501:;
			{
				return static_cast<jule::U64>(72LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1cbb94578:;
			{
				return static_cast<jule::U64>(76LLU);;
			}
		}
		else {
			_case_begin_1cbb9072d:;
			{
				return _16720_left;;
			}
		}
		_match_end_1cbb9080a:;
	};
}



inline _22578b38a_Log _1e69d96e4_compilerErr(jule::Ptr<_1e5c8eacc_Token>* _18017_token, jule::Str* _18033_fmt, jule::Slice<jule::Any> _18046_args) {
	return _22578b38a_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*((*(_18017_token))))._field_Row, ._field_Column=(*((*(_18017_token))))._field_Column, ._field_Path=(*((*((*(_18017_token))))._field_File))._field_Path, ._field_Text=_22578b7ec_Logf((*(_18033_fmt)), _18046_args), ._field_Line=_1e5c963a8_GetRow((*((*(_18017_token))))._field_File, (*((*(_18017_token))))._field_Row), ._field_Suggestion=jule::Str()};;
}



inline void _1e69d9a8a_pushSuggestion(_22578b38a_Log* _19130_log, jule::Str _19141_fmt, jule::Slice<jule::Any> _19154_args) {
	(*(_19130_log))._field_Suggestion=_22578b7ec_Logf(_19141_fmt, _19154_args);
}



inline jule::Ptr<_1e5ca5087_TypeDecl> _1e69eb99d_buildVoidType(void) {
	return jule::new_ptr<_1e5ca5087_TypeDecl>(_1e5ca5087_TypeDecl{._field_Token=jule::Ptr<_1e5c8eacc_Token>(nullptr), ._field_Kind=jule::Any(nullptr)});;
}



inline __jule_tuple_bool__jule_tuple_bool _1e61d870c_checkOs(jule::Str _912_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("windows", 7))) {
			_case_begin_1cbd6d70d:;
			{
				__jule_func_result.__jule_result_arg0=_22578e5ad_IsWindows(_22586509b_Os);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("darwin", 6))) {
			_case_begin_1cbd6d774:;
			{
				__jule_func_result.__jule_result_arg0=_22578e8bb_IsDarwin(_22586509b_Os);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("linux", 5))) {
			_case_begin_1cbd6d3de:;
			{
				__jule_func_result.__jule_result_arg0=_22578eb85_IsLinux(_22586509b_Os);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("unix", 4))) {
			_case_begin_1cbd6d455:;
			{
				__jule_func_result.__jule_result_arg0=_2257907e0_IsUnix(_22586509b_Os);
			}
		}
		else {
			_case_begin_1cbd6cd4a:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1cbd6d2bd:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_bool__jule_tuple_bool _1e61d8850_checkArch(jule::Str _2814_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i386", 4))) {
			_case_begin_1cbd70c71:;
			{
				__jule_func_result.__jule_result_arg0=_22578eec6_IsI386(_225865354_Arch);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("amd64", 5))) {
			_case_begin_1cbd70cd7:;
			{
				__jule_func_result.__jule_result_arg0=_22579025c_IsAmd64(_225865354_Arch);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("arm64", 5))) {
			_case_begin_1cbd70952:;
			{
				__jule_func_result.__jule_result_arg0=_225790526_IsArm64(_225865354_Arch);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("x64", 3))) {
			_case_begin_1cbd709b8:;
			{
				__jule_func_result.__jule_result_arg0=_225790e0b_Is64Bit(_225865354_Arch);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("x32", 3))) {
			_case_begin_1cbd70a2e:;
			{
				__jule_func_result.__jule_result_arg0=_225790bb9_Is32Bit(_225865354_Arch);
			}
		}
		else {
			_case_begin_1cbd703ad:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1cbd70831:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1e61d89e8_isPassFileAnnotation(jule::Str _5029_p) {
	_5029_p=_2256e3600_Base(_5029_p);
	jule::I64 _522_n = _5029_p.len();;
	(_5029_p).mut_slice(0LL, (_522_n - _2256e306c_Ext(_5029_p).len()));;
	jule::Str _586_a1 = jule::Str();;
	jule::Str _616_a2 = jule::Str();;
	jule::I64 _646_i = _2256da086_FindLastByte(_5029_p, '_');;
	if ((_646_i == -1LL)) {
		jule::Bool _677_ok;
		jule::Bool _6715_exist;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1e61d870c_checkOs(_5029_p);
			_677_ok = __jule_assign_result.__jule_result_arg0;
			_6715_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_6715_exist) {
			return _677_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1e61d8850_checkArch(_5029_p);
			_677_ok = __jule_assign_result.__jule_result_arg0;
			_6715_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_6715_exist)) || _677_ok);;
	};
	if (((_646_i + 1LL) >= _522_n)) {
		return true;;
	};
	_586_a1=_5029_p.slice((_646_i + 1LL));
	(_5029_p).mut_slice(0LL, _646_i);;
	_646_i=_2256da086_FindLastByte(_5029_p, '_');
	if ((_646_i != -1LL)) {
		_616_a2=_5029_p.slice((_646_i + 1LL));
	};
	if ((_616_a2).empty()) {
		jule::Bool _887_ok;
		jule::Bool _8815_exist;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1e61d870c_checkOs(_586_a1);
			_887_ok = __jule_assign_result.__jule_result_arg0;
			_8815_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_8815_exist) {
			return _887_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1e61d8850_checkArch(_586_a1);
			_887_ok = __jule_assign_result.__jule_result_arg0;
			_8815_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_8815_exist)) || _887_ok);;
	};
	jule::Bool _966_ok;
	jule::Bool _9614_exist;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1e61d8850_checkArch(_586_a1);
		_966_ok = __jule_assign_result.__jule_result_arg0;
		_9614_exist = __jule_assign_result.__jule_result_arg1;
	});
	if (_9614_exist) {
		if ((!(_966_ok))) {
			return false;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1e61d870c_checkOs(_616_a2);
			_966_ok = __jule_assign_result.__jule_result_arg0;
			_9614_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_9614_exist)) || _966_ok);;
	};
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1e61d870c_checkOs(_586_a1);
		_966_ok = __jule_assign_result.__jule_result_arg0;
		_9614_exist = __jule_assign_result.__jule_result_arg1;
	});
	return ((!(_9614_exist)) || _966_ok);;
}



inline void _1e62094db_setOsVars(jule::Slice<jule::Str>* _3619_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(_22586509b_Os); };
	if (_2257907e0_IsUnix(_22586509b_Os)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(jule::Str::lit("unix", 4)); };
	};
}



inline void _1e6209761_setArchVars(jule::Slice<jule::Str>* _4421_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(_225865354_Arch); };
	if (_225790e0b_Is64Bit(_225865354_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x64", 3)); };
	};
	if (_225790bb9_Is32Bit(_225865354_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x32", 3)); };
	};
}



inline void _1e6209a4c_initVars(jule::Slice<jule::Str>* _5518_vars, _1e62091bc_CompileInfo* _5532_info) {
	_1e62094db_setOsVars(_5518_vars);
	_1e6209761_setArchVars(_5518_vars);
	if ((*(_5532_info))._field_Prod) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("production", 10)); };
	};
	if ((*(_5532_info))._field_Test) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("test", 4)); };
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_Compiler };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("clang", 5))) {
			_case_begin_1cbd7bc16:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("clang", 5)); };
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("gcc", 3))) {
			_case_begin_1cbd7b6a5:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("gcc", 3)); };
			}
		}
		_match_end_1cbd7b63e:;
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_CppStd };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp14", 5))) {
			_case_begin_1cbd7b74e:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp14", 5)); };
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp17", 5))) {
			_case_begin_1cbd7cc06:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp17", 5)); };
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp20", 5))) {
			_case_begin_1cbd7cc6c:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp20", 5)); };
			}
		}
		_match_end_1cbd7cb6d:;
	};
}



inline jule::Slice<jule::U8> _1e6a0092a_readBuff(jule::Str _3013_path) {
	return ({
		auto except = static__2243e12aa_Read(_3013_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(_1c8d69498_toStr(jule::Str::lit("error: file cannot read", 23)));
			;
			_225864023_Exit(1LL);
			return nullptr;;
		} jule::Slice<jule::U8>(nullptr);});
	});;
}



inline _22578b38a_Log _1e6a00c38_flatCompilerErr(jule::Str _4120_text) {
	return _22578b38a_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=0, ._field_Column=0, ._field_Path=jule::Str(), ._field_Text=_4120_text, ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
}



inline jule::Ptr<_1e5ce0358_Fn> _1e614dc8d_RuntimeFindFn(jule::Ptr<_1e5d5b2e7_ImportInfo>* _1823_runtime, jule::Str _1845_ident) {
	;
	jule::Ptr<_1e5ce0358_Fn> _206_f = _1e5d5c903_FindFn((*(_1823_runtime)).ptr(), _1845_ident, false);;
	if ((_206_f == nullptr)) {
		jule::outln(_1cbdbd1ca_toStr(_1845_ident));
		__jule_panic_s(jule::Str::lit("runtime function is not exist, this is an implementation mistake, this panic call should be unreachable", 103) + jule::Str("\nlocation: julec/obj/runtime.jule:23:3"));;
	};
	return _206_f;;
}



inline jule::Ptr<_1e5cc5e21_Struct> _1e61560a3_RuntimeFindStruct(jule::Ptr<_1e5d5b2e7_ImportInfo>* _3327_runtime, jule::Str _3349_ident) {
	;
	jule::Ptr<_1e5cc5e21_Struct> _356_f = _1e5d5c507_FindStruct((*(_3327_runtime)).ptr(), _3349_ident, false);;
	if ((_356_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("runtime struct is not exist, this is an implementation mistake, this panic call should be unreachable", 101) + jule::Str("\nlocation: julec/obj/runtime.jule:37:3"));;
	};
	return _356_f;;
}



inline void _1e6a05468_pushPasses(jule::Ptr<_1e5d5e21d_Package>* _12220_p, jule::Slice<jule::Str>* _12244_passes) {
	{
		auto expr = &((*((*(_12220_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbdbedd0:;
		if (it != expr_end) {
			jule::Ptr<_1e5e03548_SymbolTable> _12314_f = *it;
			{
				_julec_label_1cbdc0551:;
				{
					auto expr = &((*(_12314_f))._field_Passes);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cbdc0980:;
					if (it != expr_end) {
						_1e5ce7aad_Pass _12510_pass = *it;
						{
							if ((_12510_pass._field_Text).empty()) {
								goto _iter_next_1cbdc0980;
							};
							{
								auto expr = _12244_passes;
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1cbdc29b5:;
								if (it != expr_end) {
									jule::Str _12911_cpass = *it;
									{
										if ((_12911_cpass == _12510_pass._field_Text)) {
											goto _iter_next_1cbdc0980;
										};
									}
									_iter_next_1cbdc29b5:;
									++it;
									goto _iter_begin_1cbdc29b5;
								}
								_iter_end_1cbdc29b5:;
							};
							{ jule::Slice<jule::Str> &__jule_push_dest = (*(_12244_passes)); __jule_push_dest.push(_12510_pass._field_Text); };
						}
						_iter_next_1cbdc0980:;
						++it;
						goto _iter_begin_1cbdc0980;
					}
					_iter_end_1cbdc0980:;
				};
			}
			_iter_next_1cbdbedd0:;
			++it;
			goto _iter_begin_1cbdbedd0;
		}
		_iter_end_1cbdbedd0:;
	};
}



inline jule::Slice<jule::Str> _1e6a05831_getAllUniquePasses(jule::Ptr<_1e5d5e21d_Package>* _13928_pkg, jule::Slice<jule::Ptr<_1e5d5b2e7_ImportInfo>> _13953_uses) {
	jule::Slice<jule::Str> _14010_passes = nullptr;;
	_1e6a05468_pushPasses(_13928_pkg, &(_14010_passes));
	{
		auto expr = &(_13953_uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbdc391c:;
		if (it != expr_end) {
			jule::Ptr<_1e5d5b2e7_ImportInfo> _14314_u = *it;
			{
				if ((!((*(_14314_u))._field_Binded))) {
					_1e6a05468_pushPasses(&((*_14314_u.alloc)._field_Package), &(_14010_passes));
				};
			}
			_iter_next_1cbdc391c:;
			++it;
			goto _iter_begin_1cbdc391c;
		}
		_iter_end_1cbdc391c:;
	};
	return _14010_passes;;
}



inline _1e62091bc_CompileInfo _1e6a05a40_buildCompileInfo(void) {
	_1e62091bc_CompileInfo _1536_info = _1e62091bc_CompileInfo{._field_Prod=_22586c4e3_Production, ._field_Test=_22586bb30_Test, ._field_Compiler=jule::Str::lit("clang", 5), ._field_CppStd=jule::Str::lit("cpp14", 5)};;
	{
		auto &_match_expr{ _225869c82_Compiler };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("clang", 5))) {
			_case_begin_1cbdc4c3c:;
			{
				_1536_info._field_Compiler=static_cast<jule::Str>(jule::Str::lit("clang", 5));
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("gcc", 3))) {
			_case_begin_1cbdc4d80:;
			{
				_1536_info._field_Compiler=static_cast<jule::Str>(jule::Str::lit("gcc", 3));
			}
		}
		_match_end_1cbdc4d19:;
	};
	{
		auto &_match_expr{ _22586b38d_CppStd };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp14", 5))) {
			_case_begin_1cbdc4e18:;
			{
				_1536_info._field_CppStd=static_cast<jule::Str>(jule::Str::lit("cpp14", 5));
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp17", 5))) {
			_case_begin_1cbdc5b50:;
			{
				_1536_info._field_CppStd=static_cast<jule::Str>(jule::Str::lit("cpp17", 5));
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp20", 5))) {
			_case_begin_1cbdc53be:;
			{
				_1536_info._field_CppStd=static_cast<jule::Str>(jule::Str::lit("cpp20", 5));
			}
		}
		_match_end_1cbdc5e4c:;
	};
	return _1536_info;;
}



inline void _1e6a05ce8_pushRuntimeToAST(jule::Ptr<_1e5ca3173_AST>* _17826_f) {
	jule::Ptr<_1e5cbd18d_UseDecl> _1796_decl = jule::new_ptr<_1e5cbd18d_UseDecl>(_1e5cbd18d_UseDecl{._field_Token=nullptr, ._field_LinkPath=jule::Str::lit("std::runtime", 12), ._field_Alias=jule::Str(), ._field_Full=false, ._field_Selected=nullptr, ._field_Binded=false, ._field_Std=true});;
	{ jule::Slice<jule::Ptr<_1e5cbd18d_UseDecl>> &__jule_push_dest = (*((*(_17826_f))))._field_UseDecls; __jule_push_dest.push(_1796_decl); };
	if (((*((*(_17826_f))))._field_UseDecls.len() > 1LL)) {
		(*((*(_17826_f))))._field_UseDecls[((*((*(_17826_f))))._field_UseDecls.len() - 1LL)]=(*((*(_17826_f))))._field_UseDecls[0LL];
		(*((*(_17826_f))))._field_UseDecls[0LL]=_1796_decl;
	};
}



inline void _1e6a06447_IterPackages(jule::Ptr<_1e6a03ab5_IR>* _722_ir, jule::Fn<void,jule::Ptr<_1e5d5e21d_Package>*> _731_f) {
	{
		auto expr = &((*((*(_722_ir))))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbde3464:;
		if (it != expr_end) {
			jule::Ptr<_1e5d5b2e7_ImportInfo> _814_used = *it;
			{
				if ((!((*(_814_used))._field_Binded))) {
					_731_f(&((*_814_used.alloc)._field_Package));
				};
			}
			_iter_next_1cbde3464:;
			++it;
			goto _iter_begin_1cbde3464;
		}
		_iter_end_1cbde3464:;
	};
	_731_f(&((*((*(_722_ir))))._field_Main));
}



inline void _1e6a06777_IterFiles(jule::Ptr<_1e5d5e21d_Package>* _1619_pkg, jule::Fn<void,jule::Ptr<_1e5e03548_SymbolTable>*> _1634_f) {
	{
		auto expr = &((*((*(_1619_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbdeb813:;
		if (it != expr_end) {
			jule::Ptr<_1e5e03548_SymbolTable> _1714_file = *it;
			{
				_1634_f(&(_1714_file));
			}
			_iter_next_1cbdeb813:;
			++it;
			goto _iter_begin_1cbdeb813;
		}
		_iter_end_1cbdeb813:;
	};
}



inline void _1e6a06b1d_iterTraitInheritMethods(jule::Ptr<_1e5d03db6_Trait>* _2233_base, jule::Ptr<_1e5d03db6_Trait>* _2252_t, jule::Fn<void,jule::Ptr<_1e5ce0358_Fn>*> _2263_f) {
	_1e6a0703b_iterTraitInheritMethods1(_2233_base, _2252_t, _2263_f);
	{
		auto expr = &((*((*(_2252_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbdec957:;
		if (it != expr_end) {
			jule::Ptr<_1e5ce0358_Fn> _2414_m = *it;
			{
				if ((!(_1e6a0c162_ContainsTraitMethod(_2233_base, &((*(_2414_m))._field_Ident))))) {
					_2263_f(&(_2414_m));
				};
			}
			_iter_next_1cbdec957:;
			++it;
			goto _iter_begin_1cbdec957;
		}
		_iter_end_1cbdec957:;
	};
}



inline void _1e6a0703b_iterTraitInheritMethods1(jule::Ptr<_1e5d03db6_Trait>* _3134_base, jule::Ptr<_1e5d03db6_Trait>* _3153_t, jule::Fn<void,jule::Ptr<_1e5ce0358_Fn>*> _3164_f) {
	{
		auto expr = &((*((*(_3153_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbdedcee:;
		if (it != expr_end) {
			jule::Ptr<_1e5e4900b_TypeSymbol> _3214_inh = *it;
			{
				jule::Ptr<_1e5d03db6_Trait> _337_t2 = _1e5e457aa_Trait((*(_3214_inh))._field_Kind.ptr());;
				_1e6a06b1d_iterTraitInheritMethods(_3134_base, &(_337_t2), _3164_f);
			}
			_iter_next_1cbdedcee:;
			++it;
			goto _iter_begin_1cbdedcee;
		}
		_iter_end_1cbdedcee:;
	};
}



inline void _1e6a072e4_IterTraitMethods(jule::Ptr<_1e5d03db6_Trait>* _3926_t, jule::Fn<void,jule::Ptr<_1e5ce0358_Fn>*> _3937_f) {
	{
		auto expr = &((*((*(_3926_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbe00295:;
		if (it != expr_end) {
			jule::Ptr<_1e5ce0358_Fn> _4014_m = *it;
			{
				_3937_f(&(_4014_m));
			}
			_iter_next_1cbe00295:;
			++it;
			goto _iter_begin_1cbe00295;
		}
		_iter_end_1cbe00295:;
	};
	_1e6a0703b_iterTraitInheritMethods1(_3926_t, _3926_t, _3937_f);
}



inline jule::Bool _1e6a0957c_IsForwarded(jule::Ptr<_1e5d384d3_Scope>* _2417_s) {
	jule::Any _252_last = (*((*(_2417_s))))._field_Stmts[((*((*(_2417_s))))._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _252_last };
		
		if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1cbe24e35:;
			{
				{
					auto &_match_expr{ (*(_252_last.cast_ptr<_1e5e08c13_Data>(&__jule_any_type31)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type30) {
						_case_begin_1cbe25177:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1cbe25ce3:;
						{
							return false;;
						}
					}
					_match_end_1cbe25c7c:;
				};
			}
		}
		else {
			_case_begin_1cbe250ab:;
			{
				return true;;
			}
		}
		_match_end_1cbe25045:;
	};
}



inline jule::Bool _1e6a0988a_IsExprComesFromBind(jule::Ptr<_1e5e08c13_Data>* _4025_d) {
	{
		auto &_match_expr{ (*((*(_4025_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1cbe2683d:;
			{
				return (*((*((*(_4025_d))))._field_Model.unsafe_cast_ptr<_1e5da0bcc_Var>()))._field_Binded;;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1cbe26a4c:;
			{
				return (*((*((*((*((*(_4025_d))))._field_Model.unsafe_cast_ptr<_1e5cd78c2_StructSubIdentExprModel>()))._field_Owner))._field_Decl))._field_Binded;;
			}
		}
		else {
			_case_begin_1cbe258a3:;
			{
				return false;;
			}
		}
		_match_end_1cbe2583c:;
	};
}



inline jule::Bool _1e6a09b54_IsAny(jule::Ptr<_1e5e417ea_TypeKind>* _5215_t) {
	if ((_1e5e449da_TypeEnum((*(_5215_t)).ptr()) != nullptr)) {
		return true;;
	};
	jule::Ptr<_1e5e49913_Prim> _562_prim = _1e5e43ea1_Prim((*(_5215_t)).ptr());;
	return ((_562_prim != nullptr) && _1e5e4d164_IsAny(_562_prim));;
}



inline jule::Bool _1e6a09e95_IsClosure(jule::Ptr<_1e5cd5b67_AnonFnExprModel>* _6115_m) {
	return ((*((*(_6115_m))))._field_Captured.len() > 0LL);;
}



inline jule::Bool _1e6a0a22b_IsOpMethod(jule::Ptr<_1e5ce0358_Fn>* _6416_m) {
	if ((((*((*(_6416_m))))._field_Generics.len() > 0LL) || ((*((*(_6416_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	jule::Ptr<_1e5ce3416_FnIns> _682_mi = (*((*(_6416_m))))._field_Instances[0LL];;
	;
	;
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Eq)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Gt)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_GtEq)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Lt)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_LtEq)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Shl)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Shr)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Add)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Sub)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Div)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Mul)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Mod)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_BitAnd)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_BitOr)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_BitXor)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Neg)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Pos)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_BitNot)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_AddAssign)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_SubAssign)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_DivAssign)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_MulAssign)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_ModAssign)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_ShlAssign)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_ShrAssign)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_BitOrAssign)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_BitAndAssign)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_BitXorAssign)) {
			return true;;
		};
	};
	return false;;
}



inline jule::Bool _1e6a0a5a0_IsTraitMethod(jule::Ptr<_1e5cc8c7b_StructIns>* _8023_owner, jule::Ptr<_1e5ce3416_FnIns>* _8043_f) {
	{
		auto expr = &((*((*((*(_8023_owner))))._field_Decl))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbe2c327:;
		if (it != expr_end) {
			jule::Ptr<_1e5d03db6_Trait> _8114_t = *it;
			{
				if ((_1e5d04a98_FindMethod(_8114_t.ptr(), (*((*((*(_8043_f))))._field_Decl))._field_Ident) != nullptr)) {
					return true;;
				};
			}
			_iter_next_1cbe2c327:;
			++it;
			goto _iter_begin_1cbe2c327;
		}
		_iter_end_1cbe2c327:;
	};
	return false;;
}



inline jule::Bool _1e6a0a924_IsStdPackage(jule::Str _9417_f, jule::Str _9425_p) {
	return _2256d7380_HasPrefix(_9417_f, _2256e2cd6_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _2258644eb_PathStdlib; (*it++) = _9425_p; __jule_collection; })));;
}



inline jule::Ptr<_1e5ca44a4_Directive> _1e6a0b925_FindDirective(jule::Slice<jule::Ptr<_1e5ca44a4_Directive>>* _1123_directives, jule::Str _1154_tag) {
	{
		auto expr = _1123_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbe387ea:;
		if (it != expr_end) {
			jule::Ptr<_1e5ca44a4_Directive> _1214_dr = *it;
			{
				if (((*((*(_1214_dr))._field_Tag))._field_Kind == _1154_tag)) {
					return _1214_dr;;
				};
			}
			_iter_next_1cbe387ea:;
			++it;
			goto _iter_begin_1cbe387ea;
		}
		_iter_end_1cbe387ea:;
	};
	return nullptr;;
}



inline jule::Bool _1e6a0bcdd_HasDirective(jule::Slice<jule::Ptr<_1e5ca44a4_Directive>>* _2118_directives, jule::Str _2149_tag) {
	return (_1e6a0b925_FindDirective(&((*((&((*(_2118_directives))))))), _2149_tag) != nullptr);;
}



inline jule::Bool _1e6a0c162_ContainsTraitMethod(jule::Ptr<_1e5d03db6_Trait>* _2629_t, jule::Str* _2641_ident) {
	{
		auto expr = &((*((*(_2629_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbe3a434:;
		if (it != expr_end) {
			jule::Ptr<_1e5ce0358_Fn> _279_m = *it;
			{
				if (((*(_279_m))._field_Ident == (*(_2641_ident)))) {
					return true;;
				};
			}
			_iter_next_1cbe3a434:;
			++it;
			goto _iter_begin_1cbe3a434;
		}
		_iter_end_1cbe3a434:;
	};
	return false;;
}



inline jule::I64 _1e6a0c827_FindTraitTypeOffsetS(jule::Ptr<_1e5d03db6_Trait> _3925_t, jule::Ptr<_1e5cc8c7b_StructIns> _3940_s) {
	if (((*(_3925_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::I64 _436_i = 0LL;;
	{
		auto expr = &((*_3925_t.alloc)._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbe3c14a:;
		if (it != expr_end) {
			jule::Ptr<_1e5cc5e21_Struct> *_449_si = it;
			{
				if (((*(_3940_s))._field_Decl == (*(_449_si)))) {
					{
						auto expr = &((*((*(_449_si))))._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1cbe3d03b:;
						if (it != expr_end) {
							jule::Ptr<_1e5cc8c7b_StructIns> *_4611_ins = it;
							{
								if (((*(_4611_ins)) == _3940_s)) {
									return _436_i;;
								};
								(_436_i)++;
							}
							_iter_next_1cbe3d03b:;
							++it;
							goto _iter_begin_1cbe3d03b;
						}
						_iter_end_1cbe3d03b:;
					};
					goto _iter_end_1cbe3c14a;
				} else {
					_436_i+=(*((*(_449_si))))._field_Instances.len();
				};
			}
			_iter_next_1cbe3c14a:;
			++it;
			goto _iter_begin_1cbe3c14a;
		}
		_iter_end_1cbe3c14a:;
	};
	return -1LL;;
}



inline jule::I64 _1e6a0cb9b_FindTraitTypeOffset(jule::Ptr<_1e5d03db6_Trait> _6224_t, jule::Ptr<_1e5e417ea_TypeKind> _6239_k) {
	if (((*(_6224_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::Ptr<_1e5cc8c7b_StructIns> _6610_s = nullptr;;
	if ((_1e5e44237_Sptr(_6239_k.ptr()) != nullptr)) {
		_6239_k=(*(_1e5e44237_Sptr(_6239_k)))._field_Elem;
	};
	_6610_s=_1e5e45524_Struct(_6239_k);
	if ((_6610_s == nullptr)) {
		return -1LL;;
	};
	return _1e6a0c827_FindTraitTypeOffsetS(_6224_t, _6610_s);;
}



inline jule::Ptr<_1e5ce3416_FnIns> _1e6a0d0ca_FindOperator(jule::Ptr<_1e5cc8c7b_StructIns>* _7822_s, jule::U64 _7837_op, jule::Bool _7850_unary) {
	{
		auto &_match_expr{ _7837_op };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1cbe41a34:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Eq;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1cbe41836:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Gt;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1cbe4189c:;
			{
				return (*((*(_7822_s))))._field_Operators._field_GtEq;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_1cbe41a9a:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Lt;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1cbe41b22:;
			{
				return (*((*(_7822_s))))._field_Operators._field_LtEq;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1cbe41b99:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Shl;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1cbe41cba:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Shr;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1cbe41d31:;
			{
				if (_7850_unary) {
					return (*((*(_7822_s))))._field_Operators._field_Pos;;
				};
				return (*((*(_7822_s))))._field_Operators._field_Add;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1cbe41d97:;
			{
				if (_7850_unary) {
					return (*((*(_7822_s))))._field_Operators._field_Neg;;
				};
				return (*((*(_7822_s))))._field_Operators._field_Sub;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1cbe41e0d:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Div;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1cbe41e74:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Mul;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1cbe41eeb:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Mod;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1cbe42073:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitAnd;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_1cbe420ea:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitOr;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1cbe42172:;
			{
				if (_7850_unary) {
					return (*((*(_7822_s))))._field_Operators._field_BitNot;;
				};
				return (*((*(_7822_s))))._field_Operators._field_BitXor;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1cbe421e9:;
			{
				return (*((*(_7822_s))))._field_Operators._field_AddAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_1cbe42271:;
			{
				return (*((*(_7822_s))))._field_Operators._field_SubAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1cbe422e8:;
			{
				return (*((*(_7822_s))))._field_Operators._field_DivAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_1cbe42370:;
			{
				return (*((*(_7822_s))))._field_Operators._field_MulAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1cbe423e7:;
			{
				return (*((*(_7822_s))))._field_Operators._field_ModAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1cbe4246e:;
			{
				return (*((*(_7822_s))))._field_Operators._field_ShlAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1cbe424e6:;
			{
				return (*((*(_7822_s))))._field_Operators._field_ShrAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_1cbe4256d:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitOrAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_1cbe425e5:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitAndAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_1cbe4266c:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitXorAssign;;
			}
		}
		else {
			_case_begin_1cbe4146d:;
			{
				return nullptr;;
			}
		}
		_match_end_1cbe415a0:;
	};
}



inline jule::Ptr<_1e5ce3416_FnIns> _1e6a0d44e_FindFnGenericInstance(jule::Ptr<_1e5ce0358_Fn>* _14731_f, jule::Slice<jule::Ptr<_1e5e417ea_TypeKind>> _14739_generics) {
	_julec_label_1cbe4b225:;
	{
		auto expr = &((*((*(_14731_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbe4e0b3:;
		if (it != expr_end) {
			jule::Ptr<_1e5ce3416_FnIns> _14914_ins = *it;
			{
				{
					auto expr = &((*(_14914_ins))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cbe4e9ba:;
					if (it != expr_end) {
						jule::I64 _1507_i = it - expr->begin();
						{
							if ((!(_1e5e42037_Equal((*((*(_14914_ins))._field_Generics[_1507_i]))._field_Kind, _14739_generics[_1507_i])))) {
								goto _iter_next_1cbe4e0b3;
							};
						}
						_iter_next_1cbe4e9ba:;
						++it;
						_1507_i++;
						goto _iter_begin_1cbe4e9ba;
					}
					_iter_end_1cbe4e9ba:;
				};
				return _14914_ins;;
			}
			_iter_next_1cbe4e0b3:;
			++it;
			goto _iter_begin_1cbe4e0b3;
		}
		_iter_end_1cbe4e0b3:;
	};
	__jule_panic_s(jule::Str::lit("generic instance lookup failed, this is an implementation mistake", 65) + jule::Str("\nlocation: julec/obj/lookup.jule:157:2"));;
}



inline jule::Ptr<_1e5cc8c7b_StructIns> _1e6a0d8d3_FindStructGenericInstance(jule::Ptr<_1e5cc5e21_Struct>* _16335_s, jule::Slice<jule::Ptr<_1e5e417ea_TypeKind>> _16347_generics) {
	_julec_label_1cbe4ee3d:;
	{
		auto expr = &((*((*(_16335_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbe511b4:;
		if (it != expr_end) {
			jule::Ptr<_1e5cc8c7b_StructIns> _16514_ins = *it;
			{
				{
					auto expr = &((*(_16514_ins))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cbe51abb:;
					if (it != expr_end) {
						jule::I64 _1667_i = it - expr->begin();
						{
							if ((!(_1e5e42037_Equal((*((*(_16514_ins))._field_Generics[_1667_i]))._field_Kind, _16347_generics[_1667_i])))) {
								goto _iter_next_1cbe511b4;
							};
						}
						_iter_next_1cbe51abb:;
						++it;
						_1667_i++;
						goto _iter_begin_1cbe51abb;
					}
					_iter_end_1cbe51abb:;
				};
				return _16514_ins;;
			}
			_iter_next_1cbe511b4:;
			++it;
			goto _iter_begin_1cbe511b4;
		}
		_iter_end_1cbe511b4:;
	};
	__jule_panic_s(jule::Str::lit("generic instance lookup failed, this is an implementation mistake", 65) + jule::Str("\nlocation: julec/obj/lookup.jule:173:2"));;
}



inline jule::Bool _1cbde1363_isOrdered(jule::Ptr<_1e5da0bcc_Var>* _1418_t, jule::Slice<jule::Ptr<_1e5da0bcc_Var>> _1425_s) {
	_julec_label_1cbde3794:;
	{
		auto expr = &((*((*(_1418_t))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbde3be5:;
		if (it != expr_end) {
			jule::Ptr<_1e5da0bcc_Var> *_169_d = it;
			{
				{
					
{
						_case_begin_1cbde44ed:;
						{
							if ((*((*(_169_d))))._field_Constant) {
								goto _iter_next_1cbde3be5;
							};
						}
					}
					_match_end_1cbde4476:;
				};
				{
					auto expr = &(_1425_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cbde4bd5:;
					if (it != expr_end) {
						jule::Ptr<_1e5da0bcc_Var> *_2510_o = it;
						{
							if (((*(_169_d)) == (*(_2510_o)))) {
								goto _iter_next_1cbde3be5;
							};
						}
						_iter_next_1cbde4bd5:;
						++it;
						goto _iter_begin_1cbde4bd5;
					}
					_iter_end_1cbde4bd5:;
				};
				return false;;
			}
			_iter_next_1cbde3be5:;
			++it;
			goto _iter_begin_1cbde3be5;
		}
		_iter_end_1cbde3be5:;
	};
	return true;;
}

inline jule::Bool _1cbde70d3_isOrdered(jule::Ptr<_1e5cc5e21_Struct>* _1418_t, jule::Slice<jule::Ptr<_1e5cc5e21_Struct>> _1425_s) {
	_julec_label_1cbde94c0:;
	{
		auto expr = &((*((*(_1418_t))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbde9921:;
		if (it != expr_end) {
			jule::Ptr<_1e5cc5e21_Struct> *_169_d = it;
			{
				;
				{
					auto expr = &(_1425_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cbdea03c:;
					if (it != expr_end) {
						jule::Ptr<_1e5cc5e21_Struct> *_2510_o = it;
						{
							if (((*(_169_d)) == (*(_2510_o)))) {
								goto _iter_next_1cbde9921;
							};
						}
						_iter_next_1cbdea03c:;
						++it;
						goto _iter_begin_1cbdea03c;
					}
					_iter_end_1cbdea03c:;
				};
				return false;;
			}
			_iter_next_1cbde9921:;
			++it;
			goto _iter_begin_1cbde9921;
		}
		_iter_end_1cbde9921:;
	};
	return true;;
}



inline void _1cbddd98c_order(jule::Slice<jule::Ptr<_1e5da0bcc_Var>> _3717_s) {
	jule::I64 _386_i = 0LL;;
	_julec_label_1cbddde54:;
	jule::I64 _406_j = _386_i;;
	_julec_label_1cbddebe1:;
	for (; (_406_j < _3717_s.len()); (_406_j)++) {
		{
			jule::Ptr<_1e5da0bcc_Var> _437_t = _3717_s[_406_j];;
			{
				auto expr = _3717_s.slice(0LL, _386_i);
				auto it = expr.begin();
				auto expr_end = expr.end();
				_iter_begin_1cbde0dce:;
				if (it != expr_end) {
					jule::Ptr<_1e5da0bcc_Var> _4410_o = *it;
					{
						if ((_437_t == _4410_o)) {
							goto _iter_next_1cbde0296;
						};
					}
					_iter_next_1cbde0dce:;
					++it;
					goto _iter_begin_1cbde0dce;
				}
				_iter_end_1cbde0dce:;
			};
			if (_1cbde1363_isOrdered(&(_437_t), _3717_s.slice(0LL, _386_i))) {
				if ((_386_i != _406_j)) {
					std::swap(_3717_s[_386_i], _3717_s[_406_j]);
				};
				(_386_i)++;
			};
		}
	_iter_next_1cbde0296:;
	}
	_iter_end_1cbde0296:;;
	if ((_386_i < _3717_s.len())) {
		goto _julec_label_1cbddde54;
	};
}

inline void _1cbdde570_order(jule::Slice<jule::Ptr<_1e5cc5e21_Struct>> _3717_s) {
	jule::I64 _386_i = 0LL;;
	_julec_label_1cbde050a:;
	jule::I64 _406_j = _386_i;;
	_julec_label_1cbde4245:;
	for (; (_406_j < _3717_s.len()); (_406_j)++) {
		{
			jule::Ptr<_1e5cc5e21_Struct> _437_t = _3717_s[_406_j];;
			{
				auto expr = _3717_s.slice(0LL, _386_i);
				auto it = expr.begin();
				auto expr_end = expr.end();
				_iter_begin_1cbde6b4e:;
				if (it != expr_end) {
					jule::Ptr<_1e5cc5e21_Struct> _4410_o = *it;
					{
						if ((_437_t == _4410_o)) {
							goto _iter_next_1cbde6016;
						};
					}
					_iter_next_1cbde6b4e:;
					++it;
					goto _iter_begin_1cbde6b4e;
				}
				_iter_end_1cbde6b4e:;
			};
			if (_1cbde70d3_isOrdered(&(_437_t), _3717_s.slice(0LL, _386_i))) {
				if ((_386_i != _406_j)) {
					std::swap(_3717_s[_386_i], _3717_s[_406_j]);
				};
				(_386_i)++;
			};
		}
	_iter_next_1cbde6016:;
	}
	_iter_end_1cbde6016:;;
	if ((_386_i < _3717_s.len())) {
		goto _julec_label_1cbde050a;
	};
}



inline void _1c7ee0587_EliminateDefines(jule::Ptr<_1e6a03ab5_IR>* _40226_ir) {
	jule::Ptr<_1c7edc199_ObjectDeadCode> _4036_ocd = static__1c7edc71b_new(_40226_ir);;
	_1c7ee02ce_elimanate(_4036_ocd);
}



inline void _1c7ee4503_eliminateDeadCodeOfScope(jule::Ptr<_1e5d384d3_Scope> _23833_s) {
	jule::Slice<jule::Ptr<_1e5d3b030_Label>> _2392_labels = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5d3b030_Label>>::alloc(0LL, 16LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1e5d3b030_Label>(nullptr); __jule_collection; });;
	jule::Slice<jule::Ptr<_1e5d3b690_GotoSt>> _2402_gotos = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5d3b690_GotoSt>>::alloc(0LL, 16LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1e5d3b690_GotoSt>(nullptr); __jule_collection; });;
	jule::Ptr<_1c7ee12be_scopeDeadCode> _2416_sdc = jule::new_ptr<_1c7ee12be_scopeDeadCode>(_1c7ee12be_scopeDeadCode{._field_parent=jule::Ptr<_1c7ee12be_scopeDeadCode>(nullptr), ._field_s=_23833_s, ._field_i=0, ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_1e5d3b030_Label>>>)((&(_2392_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_1e5d3b690_GotoSt>>>)((&(_2402_gotos)))), ._field_except=false});;
	{
		_1c7ee4206_optimizeStmts(_2416_sdc);
	};
}



inline void _1c7ee4778_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1e5ce0358_Fn>>* _25033_funcs) {
	{
		auto expr = _25033_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbed3785:;
		if (it != expr_end) {
			jule::Ptr<_1e5ce0358_Fn> _25114_func = *it;
			{
				{
					auto expr = &((*(_25114_func))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cbed6238:;
					if (it != expr_end) {
						jule::Ptr<_1e5ce3416_FnIns> _25215_ins = *it;
						{
							_1c7ee4503_eliminateDeadCodeOfScope((*(_25215_ins))._field_Scope);
						}
						_iter_next_1cbed6238:;
						++it;
						goto _iter_begin_1cbed6238;
					}
					_iter_end_1cbed6238:;
				};
			}
			_iter_next_1cbed3785:;
			++it;
			goto _iter_begin_1cbed3785;
		}
		_iter_end_1cbed3785:;
	};
}



inline void _1c7ee49a9_eliminateScopeStructMethods(jule::Slice<jule::Ptr<_1e5cc5e21_Struct>>* _25937_structs) {
	{
		auto expr = _25937_structs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbed61a0:;
		if (it != expr_end) {
			jule::Ptr<_1e5cc5e21_Struct> _26014_s = *it;
			{
				{
					auto expr = &((*(_26014_s))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cbed7349:;
					if (it != expr_end) {
						jule::Ptr<_1e5cc8c7b_StructIns> _26115_ins = *it;
						{
							_1c7ee4778_eliminateScopeFunctions(&((*(_26115_ins))._field_Methods));
						}
						_iter_next_1cbed7349:;
						++it;
						goto _iter_begin_1cbed7349;
					}
					_iter_end_1cbed7349:;
				};
			}
			_iter_next_1cbed61a0:;
			++it;
			goto _iter_begin_1cbed61a0;
		}
		_iter_end_1cbed61a0:;
	};
}



inline void _1c7ee4c62_eliminateFunctionsScopePackage(jule::Ptr<_1e5d5e21d_Package>* _26740_pkg) {
	{
		auto expr = &((*((*(_26740_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbed8108:;
		if (it != expr_end) {
			jule::Ptr<_1e5e03548_SymbolTable> _26814_f = *it;
			{
				_1c7ee4778_eliminateScopeFunctions(&((*(_26814_f))._field_Funcs));
				_1c7ee49a9_eliminateScopeStructMethods(&((*_26814_f.alloc)._field_Structs));
			}
			_iter_next_1cbed8108:;
			++it;
			goto _iter_begin_1cbed8108;
		}
		_iter_end_1cbed8108:;
	};
}



inline void _1c7ee4e60_eliminateScopePackage(jule::Ptr<_1e5d5e21d_Package>* _27431_pkg) {
	_1c7ee4c62_eliminateFunctionsScopePackage(_27431_pkg);
}



inline void _1c7ee5191_EliminateScopes(jule::Ptr<_1e6a03ab5_IR>* _27925_ir) {
	jule::I64 _2806_i = ((*((*(_27925_ir))))._field_Used.len() - 1LL);;
	for (; (_2806_i >= 0LL); (_2806_i)--) {
		{
			jule::Ptr<_1e5d5b2e7_ImportInfo> _2827_u = (*((*(_27925_ir))))._field_Used[_2806_i];;
			if ((!((*(_2827_u))._field_Binded))) {
				_1c7ee4e60_eliminateScopePackage(&((*_2827_u.alloc)._field_Package));
			};
		}
	_iter_next_1cbed9813:;
	}
	_iter_end_1cbed9813:;;
	_1c7ee4e60_eliminateScopePackage(&((*((*(_27925_ir))))._field_Main));
}



inline jule::Uintptr _1e6034833_typeData(jule::Any* _1714_m) {
	return ((jule::Uintptr)(((*(_1714_m))).type));;
}



inline jule::Bool _1e6034b41_equalConst(jule::Ptr<_1e21a449b_Const> _2115_l, jule::Ptr<_1e21a449b_Const> _2126_r) {
	{
		
		if (_1e21a84a0_IsI64(_2115_l.ptr())) {
			_case_begin_1cc051eb8:;
			{
				return (_1e21a84a0_IsI64(_2126_r.ptr()) && (_1e21a5da4_ReadI64(_2115_l) == _1e21a5da4_ReadI64(_2126_r)));;
			}
		}
		else if (_1e21a8736_IsU64(_2115_l.ptr())) {
			_case_begin_1cc05202e:;
			{
				return (_1e21a8736_IsU64(_2126_r.ptr()) && (_1e21a613a_ReadU64(_2115_l) == _1e21a613a_ReadU64(_2126_r)));;
			}
		}
		else if (_1e21a8ed9_IsF64(_2115_l.ptr())) {
			_case_begin_1cc052095:;
			{
				return (_1e21a8ed9_IsF64(_2126_r.ptr()) && (_1e21a68dd_ReadF64(_2115_l) == _1e21a68dd_ReadF64(_2126_r)));;
			}
		}
		else if (_1e21a8c53_IsStr(_2115_l.ptr())) {
			_case_begin_1cc05211c:;
			{
				return (_1e21a8c53_IsStr(_2126_r.ptr()) && (_1e21a6657_ReadStr(_2115_l) == _1e21a6657_ReadStr(_2126_r)));;
			}
		}
		else if (_1e21a89bc_IsBool(_2115_l.ptr())) {
			_case_begin_1cc052194:;
			{
				return (_1e21a89bc_IsBool(_2126_r.ptr()) && (_1e21a63c1_ReadBool(_2115_l) == _1e21a63c1_ReadBool(_2126_r)));;
			}
		}
		else if (_1e21a9270_IsNil(_2115_l.ptr())) {
			_case_begin_1cc052309:;
			{
				return _1e21a9270_IsNil(_2126_r.ptr());;
			}
		}
		else {
			_case_begin_1cc051dca:;
			{
				return false;;
			}
		}
		_match_end_1cc051924:;
	};
}



inline jule::Bool _1e6034eb5_equalCasting(jule::Ptr<_1e5cd447e_CastingExprModel> _4017_l, jule::Ptr<_1e5cd447e_CastingExprModel> _4039_r) {
	if ((!(_1e5e42037_Equal((*(_4017_l))._field_Kind, (*(_4039_r))._field_Kind)))) {
		return false;;
	};
	return _1e6035dea_equalModels((*((*_4017_l.alloc)._field_Expr))._field_Model, (*(*(_4039_r))._field_Expr.alloc)._field_Model);;
}



inline jule::Bool _1e603537d_equalUnary(jule::Ptr<_1e5cd322a_UnaryExprModel> _4715_l, jule::Ptr<_1e5cd322a_UnaryExprModel> _4735_r) {
	if ((((*((*(_4715_l))._field_Op))._field_Id != (*(*(_4735_r))._field_Op.alloc)._field_Id) || ((*(*(_4715_l))._field_Op.alloc)._field_Kind != (*(*(_4735_r))._field_Op.alloc)._field_Kind))) {
		return false;;
	};
	return _1e6035dea_equalModels((*((*_4715_l.alloc)._field_Expr))._field_Model, (*(*(_4735_r))._field_Expr.alloc)._field_Model);;
}



inline jule::Bool _1e6035702_equalIndexing(jule::Ptr<_1e5cd56b1_IndexingExprModel> _5418_l, jule::Ptr<_1e5cd56b1_IndexingExprModel> _5441_r) {
	return (_1e6035dea_equalModels((*((*(_5418_l))._field_Expr))._field_Model, (*(*(_5441_r))._field_Expr.alloc)._field_Model) && _1e6035dea_equalModels((*((*_5418_l.alloc)._field_Index))._field_Model, (*(*(_5441_r))._field_Index.alloc)._field_Model));;
}



inline jule::Bool _1e6035a76_equalBinary(jule::Ptr<_1e5cd2d51_BinaryExprModel> _5916_l, jule::Ptr<_1e5cd2d51_BinaryExprModel> _5937_r) {
	if ((((*((*(_5916_l))._field_Op))._field_Id != (*(*(_5937_r))._field_Op.alloc)._field_Id) || ((*(*(_5916_l))._field_Op.alloc)._field_Kind != (*(*(_5937_r))._field_Op.alloc)._field_Kind))) {
		return false;;
	};
	return (_1e6035dea_equalModels((*((*_5916_l.alloc)._field_Left))._field_Model, (*(*(_5937_r))._field_Left.alloc)._field_Model) && _1e6035dea_equalModels((*((*_5916_l.alloc)._field_Right))._field_Model, (*(*(_5937_r))._field_Right.alloc)._field_Model));;
}



inline jule::Bool _1e6035dea_equalModels(jule::Any _7016_l, jule::Any _7030_r) {
	if ((_1e6034833_typeData(&(_7016_l)) != _1e6034833_typeData(&(_7030_r)))) {
		return false;;
	};
	{
		auto &_match_expr{ _7016_l };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1cc060b86:;
			{
				return (_7016_l.unsafe_cast_ptr<_1e5da0bcc_Var>() == _7030_r.cast_ptr<_1e5da0bcc_Var>(&__jule_any_type8));;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1cc061725:;
			{
				jule::Ptr<_1e5cd78c2_StructSubIdentExprModel> _783_li = _7016_l.unsafe_cast_ptr<_1e5cd78c2_StructSubIdentExprModel>();;
				jule::Ptr<_1e5cd78c2_StructSubIdentExprModel> _793_ri = _7030_r.cast_ptr<_1e5cd78c2_StructSubIdentExprModel>(&__jule_any_type100);;
				return (((*(_783_li))._field_Field == (*(_793_ri))._field_Field) && _1e6035dea_equalModels((*((*_783_li.alloc)._field_Expr))._field_Model, (*(*(_793_ri))._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1cc06178b:;
			{
				return _1e6034b41_equalConst(_7016_l.cast_ptr<_1e21a449b_Const>(&__jule_any_type20), _7030_r.cast_ptr<_1e21a449b_Const>(&__jule_any_type20));;
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1cc06134b:;
			{
				return _1e6034eb5_equalCasting(_7016_l.cast_ptr<_1e5cd447e_CastingExprModel>(&__jule_any_type95), _7030_r.cast_ptr<_1e5cd447e_CastingExprModel>(&__jule_any_type95));;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1cc0613b2:;
			{
				return _1e603537d_equalUnary(_7016_l.cast_ptr<_1e5cd322a_UnaryExprModel>(&__jule_any_type112), _7030_r.cast_ptr<_1e5cd322a_UnaryExprModel>(&__jule_any_type112));;
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1cc061428:;
			{
				return _1e6035702_equalIndexing(_7016_l.cast_ptr<_1e5cd56b1_IndexingExprModel>(&__jule_any_type52), _7030_r.cast_ptr<_1e5cd56b1_IndexingExprModel>(&__jule_any_type52));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1cc06148e:;
			{
				return _1e6035a76_equalBinary(_7016_l.cast_ptr<_1e5cd2d51_BinaryExprModel>(&__jule_any_type113), _7030_r.cast_ptr<_1e5cd2d51_BinaryExprModel>(&__jule_any_type113));;
			}
		}
		else {
			_case_begin_1cc0612d5:;
			{
				return false;;
			}
		}
		_match_end_1cc060dc8:;
	};
}



inline void _1e603ba16_possibleNilRemove(jule::Ptr<_1e603aa37_nils>* _7827_n, jule::Any _7837_m) {
	if (((*(_7827_n)) != nullptr)) {
		_1e603b31d_removeVar((*(_7827_n)).ptr(), _1e603c4d9_getNilVar(_7837_m));
	};
}



inline jule::Bool _1e603bdce_isGuaranteedNonNilExpr(jule::Ptr<_1e603aa37_nils>* _8432_n, jule::Any _8442_m) {
	{
		auto &_match_expr{ _8442_m };
		
		if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1cc067671:;
			{
				return true;;
			}
		}
		_match_end_1cc06760a:;
	};
	return (((*(_8432_n)) != nullptr) && _1e603b65e_isSafe((*(_8432_n)).ptr(), _1e603c4d9_getNilVar(_8442_m)));;
}



inline jule::Bool _1e603c198_isNilValidType(jule::Ptr<_1e5e417ea_TypeKind> _9223_t) {
	return (_1e5e44237_Sptr(_9223_t.ptr()) != nullptr);;
}



inline jule::Uintptr _1e603c4d9_getNilVar(jule::Any _9414_m) {
	if ((!(_1e6a2570d_Access))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _9414_m };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1cc068c27:;
			{
				jule::Ptr<_1e5da0bcc_Var> _1003_v = _9414_m.unsafe_cast_ptr<_1e5da0bcc_Var>();;
				if ((!((*(_1003_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_9414_m.unsafe_cast_ptr<_1e5da0bcc_Var>());;
				};
				return _1e603c4d9_getNilVar((*((*((*_1003_v.alloc)._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1cc069178:;
			{
				return static_cast<jule::Uintptr>((*(_9414_m.unsafe_cast_ptr<_1e5cd78c2_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		_match_end_1cc068bb1:;
	};
	return 0LLU;;
}



inline jule::Bool _1e6a152ad_isConstantValidConditionalCase(jule::Ptr<_1e5d38901_If>* _68736_i) {
	{
		auto &_match_expr{ (*((*(_68736_i))))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1cc07116e:;
			{
				jule::Ptr<_1e21a449b_Const> _6903_c = (*((*(_68736_i))))._field_Expr.unsafe_cast_ptr<_1e21a449b_Const>();;
				return (_1e21a89bc_IsBool(_6903_c.ptr()) && _1e21a63c1_ReadBool(_6903_c));;
			}
		}
		_match_end_1cc071834:;
	};
	return false;;
}



inline jule::Bool _1e6a155bb_isUnreachableExpr(jule::Any* _69623_expr) {
	{
		auto &_match_expr{ (*(_69623_expr)) };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1cc0720c6:;
			{
				jule::Ptr<_1e21a449b_Const> _6993_c = (*(_69623_expr)).cast_ptr<_1e21a449b_Const>(&__jule_any_type20);;
				return (_1e21a89bc_IsBool(_6993_c.ptr()) && (!(_1e21a63c1_ReadBool(_6993_c))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1cc071207:;
			{
				jule::Ptr<_1e5cd2d51_BinaryExprModel> _7023_m = (*(_69623_expr)).cast_ptr<_1e5cd2d51_BinaryExprModel>(&__jule_any_type113);;
				if (((*((*(_7023_m))._field_Op))._field_Id == static_cast<jule::U64>(54LLU))) {
					return (_1e6a155bb_isUnreachableExpr(&((*((*_7023_m.alloc)._field_Left))._field_Model)) || _1e6a155bb_isUnreachableExpr(&((*((*_7023_m.alloc)._field_Right))._field_Model)));;
				};
			}
		}
		_match_end_1cc072a44:;
	};
	return false;;
}



inline jule::Bool _1e6a15885_isConstantValidMatchCase(jule::Ptr<_1e5d3d73b_Case>* _71130_case) {
	{
		auto expr = &((*((*(_71130_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc0762d9:;
		if (it != expr_end) {
			jule::Ptr<_1e5e08c13_Data> *_7129_expr = it;
			{
				if (((_1e5e0964d_IsConst((*(_7129_expr)).ptr()) && _1e21a89bc_IsBool((*(*(_7129_expr)).alloc)._field_Constant.ptr())) && _1e21a63c1_ReadBool((*((*(_7129_expr))))._field_Constant))) {
					return true;;
				};
			}
			_iter_next_1cc0762d9:;
			++it;
			goto _iter_begin_1cc0762d9;
		}
		_iter_end_1cc0762d9:;
	};
	return false;;
}



inline jule::Bool _1e6a15bc6_isUnreachableConditionalCase(jule::Ptr<_1e5d38901_If>* _72034_i) {
	return _1e6a155bb_isUnreachableExpr(&((*((*(_72034_i))))._field_Expr));;
}



inline jule::Bool _1e6a15e5c_isUnreachableMatchCase(jule::Ptr<_1e5d3d73b_Case>* _72428_case) {
	{
		auto expr = &((*((*(_72428_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc0782ec:;
		if (it != expr_end) {
			jule::Ptr<_1e5e08c13_Data> *_7259_expr = it;
			{
				if ((!(_1e6a155bb_isUnreachableExpr(&((*((*(_7259_expr))))._field_Model))))) {
					return false;;
				};
			}
			_iter_next_1cc0782ec:;
			++it;
			goto _iter_begin_1cc0782ec;
		}
		_iter_end_1cc0782ec:;
	};
	return true;;
}



inline __jule_tuple_bool__jule_tuple_u64 _1e6a1b391_checkForBitShiftOpt(jule::Ptr<_1e5cd2856_OperandExprModel>* _59625_l, jule::Ptr<_1e5cd2856_OperandExprModel>* _59648_r) {
	__jule_tuple_bool__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((!(_1e21a3830_IsInt(_1e5e41be6_Str((*((*(_59625_l))))._field_Kind.ptr())))) || (!(_1e21a3830_IsInt(_1e5e41be6_Str((*((*(_59648_r))))._field_Kind)))))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg1=_1e21a6e0a_AsU64((*((*(_59648_r))))._field_Model.cast_ptr<_1e21a449b_Const>(&__jule_any_type20).ptr());
	if (((__jule_func_result.__jule_result_arg1 == 0LLU) || ((__jule_func_result.__jule_result_arg1 & 1LL) != 0LLU))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	jule::F64 _6042_j = _1e21556a0_Log2(static_cast<jule::F64>(__jule_func_result.__jule_result_arg1));;
	jule::U64 _6052_z = static_cast<jule::U64>(_6042_j);;
	if ((static_cast<jule::F64>(_6052_z) != _6042_j)) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = _6052_z;
	return __jule_func_result;;
}



inline jule::Bool _1e6a1b759_areSameLvalueExprModel(jule::Any* _61328_l, jule::Any* _61343_r) {
	{
		auto &_match_expr{ (*(_61328_l)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1cc12cb65:;
			{
				return ((*(_61343_r)) == (*(_61328_l)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1cc12c978:;
			{
				{
					auto &_match_expr{ (*(_61343_r)) };
					
					if (_match_expr.type == &__jule_any_type100) {
						_case_begin_1cc12d506:;
						{
							goto _match_end_1cc12d98a;
						}
					}
					else {
						_case_begin_1cc12da01:;
						{
							return false;;
						}
					}
					_match_end_1cc12d98a:;
				};
				jule::Ptr<_1e5cd78c2_StructSubIdentExprModel> _6263_lsi = (*(_61328_l)).cast_ptr<_1e5cd78c2_StructSubIdentExprModel>(&__jule_any_type100);;
				jule::Ptr<_1e5cd78c2_StructSubIdentExprModel> _6273_rsi = (*(_61343_r)).cast_ptr<_1e5cd78c2_StructSubIdentExprModel>(&__jule_any_type100);;
				if (((*(_6263_lsi))._field_Field != (*(_6273_rsi))._field_Field)) {
					return false;;
				};
				return _1e6a1b759_areSameLvalueExprModel(&((*((*_6263_lsi.alloc)._field_Expr))._field_Model), &((*(*(_6273_rsi))._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1cc12cbdc:;
			{
				{
					auto &_match_expr{ (*(_61343_r)) };
					
					if (_match_expr.type == &__jule_any_type112) {
						_case_begin_1cc1302e9:;
						{
							jule::Ptr<_1e5cd322a_UnaryExprModel> _6394_ul = (*(_61328_l)).cast_ptr<_1e5cd322a_UnaryExprModel>(&__jule_any_type112);;
							jule::Ptr<_1e5cd322a_UnaryExprModel> _6404_ur = (*(_61343_r)).cast_ptr<_1e5cd322a_UnaryExprModel>(&__jule_any_type112);;
							if ((((*((*(_6394_ul))._field_Op))._field_Id != (*(*(_6404_ur))._field_Op.alloc)._field_Id) || ((*(*(_6394_ul))._field_Op.alloc)._field_Kind != (*(*(_6404_ur))._field_Op.alloc)._field_Kind))) {
								return false;;
							};
							return _1e6a1b759_areSameLvalueExprModel(&((*((*_6394_ul.alloc)._field_Expr))._field_Model), &((*(*(_6404_ur))._field_Expr.alloc)._field_Model));;
						}
					}
					_match_end_1cc130272:;
				};
			}
		}
		_match_end_1cc12caee:;
	};
	return false;;
}



inline void _1e6a1d926_possibleDynamicRemove(jule::Ptr<_1e6a1c88c_dynamic>* _8131_d, jule::Any _8144_m) {
	if (((*(_8131_d)) != nullptr)) {
		_1e6a1d173_removeVar((*(_8131_d)).ptr(), _1e6a1e4a4_getDynamicVar(_8144_m));
	};
}



inline jule::Bool _1e6a1dc34_isDynamicValidType(jule::Ptr<_1e5e417ea_TypeKind> _8727_t) {
	return _1e6a09b54_IsAny(&(_8727_t));;
}



inline jule::Ptr<_1e5e417ea_TypeKind> _1e6a1e163_isTypeGuaranteedDynamicData(jule::Ptr<_1e6a1c88c_dynamic>* _8937_dy, jule::Ptr<_1e5e417ea_TypeKind> _8955_t, jule::Any _8973_m) {
	jule::Bool _902_isAny = _1e6a09b54_IsAny(&(_8955_t));;
	if (((!(_902_isAny)) && (_1e5e457aa_Trait(_8955_t.ptr()) == nullptr))) {
		return _8955_t;;
	};
	if ((!(_902_isAny))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _8973_m };
		
		if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1cc1c3975:;
			{
				jule::Ptr<_1e5cd447e_CastingExprModel> _997_cem = _8973_m.unsafe_cast_ptr<_1e5cd447e_CastingExprModel>();;
				return _1e6a1e163_isTypeGuaranteedDynamicData(_8937_dy, (*(_997_cem))._field_ExprKind, (*((*_997_cem.alloc)._field_Expr))._field_Model);;
			}
		}
		_match_end_1cc1c3ee7:;
	};
	jule::Uintptr _1022_var = _1e6a1e4a4_getDynamicVar(_8973_m);;
	if ((_1022_var == 0LLU)) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_8937_dy))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc1c5878:;
		if (it != expr_end) {
			_1e6a1c54b_dynamicVar _10614_v = *it;
			{
				if ((_10614_v._field_var == _1022_var)) {
					return _10614_v._field_kind;;
				};
			}
			_iter_next_1cc1c5878:;
			++it;
			goto _iter_begin_1cc1c5878;
		}
		_iter_end_1cc1c5878:;
	};
	return nullptr;;
}



inline jule::Uintptr _1e6a1e4a4_getDynamicVar(jule::Any _11418_m) {
	if ((!(_1e6a271e3_Dynamic))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _11418_m };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1cc1c604e:;
			{
				jule::Ptr<_1e5da0bcc_Var> _1203_v = _11418_m.unsafe_cast_ptr<_1e5da0bcc_Var>();;
				if ((!((*(_1203_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_11418_m.unsafe_cast_ptr<_1e5da0bcc_Var>());;
				};
				return _1e6a1e4a4_getDynamicVar((*((*((*_1203_v.alloc)._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1cc1c6bcb:;
			{
				return static_cast<jule::Uintptr>((*(_11418_m.unsafe_cast_ptr<_1e5cd78c2_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1cc1c60c6:;
			{
				jule::Ptr<_1e5cd322a_UnaryExprModel> _1313_uem = _11418_m.unsafe_cast_ptr<_1e5cd322a_UnaryExprModel>();;
				if (((*((*(_1313_uem))._field_Op))._field_Id == static_cast<jule::U64>(62LLU))) {
					return _1e6a1e4a4_getDynamicVar((*((*_1313_uem.alloc)._field_Expr))._field_Model);;
				};
			}
		}
		_match_end_1cc1c5ed8:;
	};
	return 0LLU;;
}



inline jule::Bool _1e6a22e7a_isValidBoundaryInfo(jule::Any _8424_m) {
	return _1e6a236b7_fitsSize(_8424_m, _8424_m);;
}



inline jule::I64 _1e6a23343_fitsMaxSize(jule::Slice<jule::Any> _8916_max, jule::Any _8934_expr) {
	{
		auto expr = &(_8916_max);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc1d612a:;
		if (it != expr_end) {
			jule::I64 _906_i = it - expr->begin();
			jule::Any *_909_m = it;
			{
				if (_1e6a236b7_fitsSize((*(_909_m)), _8934_expr)) {
					return _906_i;;
				};
			}
			_iter_next_1cc1d612a:;
			++it;
			_906_i++;
			goto _iter_begin_1cc1d612a;
		}
		_iter_end_1cc1d612a:;
	};
	return -1LL;;
}



inline jule::Bool _1e6a236b7_fitsSize(jule::Any _9813_e1, jule::Any _9828_e2) {
	if ((_1e6034833_typeData(&(_9813_e1)) != _1e6034833_typeData(&(_9828_e2)))) {
		return false;;
	};
	{
		auto &_match_expr{ _9813_e1 };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1cc1d7ba9:;
			{
				jule::Ptr<_1e21a449b_Const> _1043_exprConst = _9828_e2.cast_ptr<_1e21a449b_Const>(&__jule_any_type20);;
				return ((_1e21a7191_AsF64(_1043_exprConst.ptr()) >= 0LL) && _1e21aad98_GtEq(_9813_e1.unsafe_cast_ptr<_1e21a449b_Const>().ptr(), (*(_1043_exprConst))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1cc1d7c20:;
			{
				return (_9828_e2 == _9813_e1);;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1cc1d7c86:;
			{
				jule::Ptr<_1e5cd78c2_StructSubIdentExprModel> _1093_ssi1 = _9813_e1.unsafe_cast_ptr<_1e5cd78c2_StructSubIdentExprModel>();;
				jule::Ptr<_1e5cd78c2_StructSubIdentExprModel> _1103_ssi2 = _9828_e2.cast_ptr<_1e5cd78c2_StructSubIdentExprModel>(&__jule_any_type100);;
				return (_1e6035dea_equalModels((*((*(_1093_ssi1))._field_Expr))._field_Model, (*(*(_1103_ssi2))._field_Expr.alloc)._field_Model) && ((*_1093_ssi1.alloc)._field_Field == (*(_1103_ssi2))._field_Field));;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1cc1d7835:;
			{
				jule::Ptr<_1e5cd322a_UnaryExprModel> _1133_uem1 = _9813_e1.unsafe_cast_ptr<_1e5cd322a_UnaryExprModel>();;
				jule::Ptr<_1e5cd322a_UnaryExprModel> _1143_uem2 = _9828_e2.cast_ptr<_1e5cd322a_UnaryExprModel>(&__jule_any_type112);;
				if ((((*((*(_1133_uem1))._field_Op))._field_Id != static_cast<jule::U64>(62LLU)) || ((*(*(_1133_uem1))._field_Op.alloc)._field_Id != (*(*(_1143_uem2))._field_Op.alloc)._field_Id))) {
					return false;;
				};
				return _1e6a236b7_fitsSize((*((*_1133_uem1.alloc)._field_Expr))._field_Model, (*(*(_1143_uem2))._field_Expr.alloc)._field_Model);;
			}
		}
		else {
			_case_begin_1cc1d77be:;
			{
				return false;;
			}
		}
		_match_end_1cc1d7703:;
	};
}



inline void _1e6a239e7_possibleBoundaryRemove(jule::Ptr<_1e6a21e13_boundary>* _12432_b, jule::Any _12446_model) {
	{
		auto expr = &((*((*(_12432_b))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc1d810a:;
		if (it != expr_end) {
			_1e6a21ac2_boundaryVar _12614_v = *it;
			{
				{
					auto expr = &(_12614_v._field_maxSize);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cc1deb39:;
					if (it != expr_end) {
						jule::I64 _1277_i = it - expr->begin();
						jule::Any _12710_max = *it;
						{
							if (_1e6035dea_equalModels(_12710_max, _12446_model)) {
								_12614_v._field_maxSize=jule::append(_12614_v._field_maxSize.slice(0LL, _1277_i),_12614_v._field_maxSize.slice((_1277_i + 1LL)));
								goto _iter_end_1cc1deb39;
							};
						}
						_iter_next_1cc1deb39:;
						++it;
						_1277_i++;
						goto _iter_begin_1cc1deb39;
					}
					_iter_end_1cc1deb39:;
				};
			}
			_iter_next_1cc1d810a:;
			++it;
			goto _iter_begin_1cc1d810a;
		}
		_iter_end_1cc1d810a:;
	};
}



inline jule::Bool _1e6a23cb1_isBoundaryRiskyType(jule::Ptr<_1e5e417ea_TypeKind> _13628_t) {
	return (_1e5e44c71_Arr(_13628_t.ptr()) == nullptr);;
}



inline jule::Bool _1e6a2407a_isBoundaryValidType(jule::Ptr<_1e5e417ea_TypeKind> _14128_t) {
	return ((_1e5e45007_Slc(_14128_t.ptr()) != nullptr) || (_1e5e44c71_Arr(_14128_t) != nullptr));;
}



inline jule::Uintptr _1e6a24344_getBoundaryVar(jule::Any _14319_m) {
	if ((!(_1e6a2570d_Access))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _14319_m };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1cc1e2004:;
			{
				jule::Ptr<_1e5da0bcc_Var> _1493_v = _14319_m.unsafe_cast_ptr<_1e5da0bcc_Var>();;
				if ((!((*(_1493_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_14319_m.unsafe_cast_ptr<_1e5da0bcc_Var>());;
				};
				return _1e6a24344_getBoundaryVar((*((*((*_1493_v.alloc)._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1cc1e2488:;
			{
				return static_cast<jule::Uintptr>((*(_14319_m.unsafe_cast_ptr<_1e5cd78c2_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1cc1e206a:;
			{
				jule::Ptr<_1e5cd322a_UnaryExprModel> _1603_uem = _14319_m.unsafe_cast_ptr<_1e5cd322a_UnaryExprModel>();;
				if (((*((*(_1603_uem))._field_Op))._field_Id == static_cast<jule::U64>(62LLU))) {
					return _1e6a24344_getBoundaryVar((*((*_1603_uem.alloc)._field_Expr))._field_Model);;
				};
			}
		}
		_match_end_1cc1e23ab:;
	};
	return 0LLU;;
}



inline void _1e6a273be_PushOptLevel(jule::I64 _3217_level) {
	jule::Bool _332_l1 = (_3217_level >= static_cast<jule::I64>(1LL));;
	_1e6a24aa3_Copy=_332_l1;
	_1e6a24da0_Deadcode=_332_l1;
	_1e6a25158_Append=_332_l1;
	_1e6a25455_Math=_332_l1;
	_1e6a2570d_Access=_332_l1;
	_1e6a259b6_Inline=_332_l1;
	_1e6a25c6e_Ptr=_332_l1;
	_1e6a26137_Cond=_332_l1;
	_1e6a26379_Str=_332_l1;
	_1e6a26621_Slice=_332_l1;
	_1e6a268c9_Assign=_332_l1;
	_1e6a26b82_Exceptional=_332_l1;
	_1e6a26e3a_Iter=_332_l1;
	_1e6a271e3_Dynamic=_332_l1;
}



inline void _1c7ee8958_detectEnabled(void) {
	_1c7ee66ae_exprEnabled=(((_1e6a25c6e_Ptr || _1e6a25455_Math) || _1e6a2570d_Access) || _1e6a26137_Cond);
	_1c7ee6956_scopeEnabled=((((((((_1e6a26137_Cond || _1e6a25158_Append) || _1e6a24aa3_Copy) || _1e6a26379_Str) || _1e6a26621_Slice) || _1e6a268c9_Assign) || _1e6a26b82_Exceptional) || _1e6a26e3a_Iter) || _1e6a271e3_Dynamic);
}



inline void _1c8020b5b_Throw(jule::Str _910_msg) {
	jule::outln(_1c8d69498_toStr(_910_msg));
	_225864023_Exit(1LL);
}



inline jule::U64 _1c8a6dea0_unix(void) {
	return static_cast<jule::U64>(time(nullptr));;
}



inline jule::Bool _1c89a18a5_isCopyOptimizable(jule::Ptr<_1e5e08c13_Data>* _119123_expr) {
	if ((!((*((*(_119123_expr))))._field_Lvalue))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_119123_expr))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1cc3862ec:;
			{
				return false;;
			}
		}
		_match_end_1cc386286:;
	};
	return true;;
}



inline jule::Bool _1c89a1c6d_isIterCopyOptimizable(jule::Ptr<_1e5e08c13_Data>* _120227_expr, jule::Ptr<_1e5da0bcc_Var>* _120241_v) {
	if (((!((*((*(_120227_expr))))._field_Lvalue)) && (!(_1e5e431d1_Mutable((*((*(_120227_expr))))._field_Kind.ptr()))))) {
		return true;;
	};
	return ((!((*((*(_120241_v))))._field_Mutable)) && (!((*((*(_120227_expr))))._field_Mutable)));;
}



inline jule::Bool _1c89a219c_captureVarHandling(jule::Ptr<_1c8a7d92c_ObjectCoder>* _120928_oc, jule::Ptr<_1e5cd5b67_AnonFnExprModel>* _120951_m, jule::Ptr<_1e5da0bcc_Var>* _120977_v) {
	{
		auto expr = &((*((*(_120951_m))))._field_Captured);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc3884b9:;
		if (it != expr_end) {
			jule::Ptr<_1e5da0bcc_Var> _12109_cv = *it;
			{
				if ((_12109_cv == (*(_120977_v)))) {
					_1c8a7e147_write((*(_120928_oc)), jule::Str::lit("__jule_closure_ctx.alloc->", 26));
					static__1c89bcb24_var(&((*((*(_120928_oc))))._field_Buf), (*(_120977_v)));
					return true;;
				};
			}
			_iter_next_1cc3884b9:;
			++it;
			goto _iter_begin_1cc3884b9;
		}
		_iter_end_1cc3884b9:;
	};
	return false;;
}



inline jule::Str _1c89b49c8_decomposeCommonEsq(jule::U8 _197423_b) {
	{
		auto &_match_expr{ _197423_b };
		
		if (_match_expr == '\\') {
			_case_begin_1cc50a41b:;
			{
				return jule::Str::lit("\\\\", 2);;
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1cc50a284:;
			{
				return jule::Str::lit("'", 1);;
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1cc50a2ea:;
			{
				return jule::Str::lit("\\\"", 2);;
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1cc509cde:;
			{
				return jule::Str::lit("\\a", 2);;
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1cc509d55:;
			{
				return jule::Str::lit("\\b", 2);;
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1cc509dcc:;
			{
				return jule::Str::lit("\\f", 2);;
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1cc509e54:;
			{
				return jule::Str::lit("\\n", 2);;
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1cc509ecb:;
			{
				return jule::Str::lit("\\r", 2);;
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1cc50a482:;
			{
				return jule::Str::lit("\\t", 2);;
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1cc50a4e8:;
			{
				return jule::Str::lit("\\v", 2);;
			}
		}
		else {
			_case_begin_1cc5077ae:;
			{
				return jule::Str();;
			}
		}
		_match_end_1cc509c34:;
	};
}



inline jule::Str _1c89b4cd6_sbtoa(jule::U8 _200110_b) {
	if ((_200110_b == 0LLU)) {
		return jule::Str::lit("\\x00", 4);;
	};
	if ((_200110_b < 128LLU)) {
		jule::Str _20063_seq = _1c89b49c8_decomposeCommonEsq(_200110_b);;
		if (!(_20063_seq).empty()) {
			return _20063_seq;;
		};
		if (((32LL <= _200110_b) && (_200110_b <= 126LLU))) {
			return __jule_strFromByte(_200110_b);;
		};
	};
	jule::Str _20142_seq = _1e21957bc_FmtUint(static_cast<jule::U64>(_200110_b), 8LL);;
	if ((_20142_seq.len() == 2LL)) {
		return (jule::Str::lit("\\0", 2) + _20142_seq);;
	};
	return (jule::Str::lit("\\", 1) + _20142_seq);;
}



inline void _1c89b50c2_cstrBytes(_224497295_StrBuilder* _202119_s, jule::Str _202134_ctx) {
	{
		auto expr = &(_202134_ctx);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc5100ad:;
		if (it != expr_end) {
			jule::U8 *_20229_b = it;
			{
				_2244a1090_WriteStr(_202119_s, _1c89b4cd6_sbtoa((*(_20229_b))));
			}
			_iter_next_1cc5100ad:;
			++it;
			goto _iter_begin_1cc5100ad;
		}
		_iter_end_1cc5100ad:;
	};
}



inline void _1c89b5402_cstrLit(_224497295_StrBuilder* _202717_s, jule::Str _202732_ctx) {
	_2244a1348_WriteByte(_202717_s, '\"');
	_1c89b50c2_cstrBytes(_202717_s, _202732_ctx);
	_2244a1348_WriteByte(_202717_s, '\"');
}



inline void _1c89b5798_ftoa(_224497295_StrBuilder* _203314_s, jule::F64 _203329_f, jule::I64 _203337_bitsize) {
	if ((_203337_bitsize != 32LL)) {
		if ((_203329_f == static_cast<jule::F64>(static_cast<jule::I64>(_203329_f)))) {
			_1c89b5a84_itoa(_203314_s, static_cast<jule::I64>(_203329_f));
			return;;
		};
		if ((_203329_f == static_cast<jule::F64>(static_cast<jule::U64>(_203329_f)))) {
			_1c89b5d70_utoa(_203314_s, static_cast<jule::U64>(_203329_f));
			return;;
		};
	};
	jule::Str _20442_m = _1e217e146_FmtFloat(_203329_f, 'f', -1LL, _203337_bitsize);;
	_2244a1090_WriteStr(_203314_s, _20442_m);
	if ((!(_2256db84b_Contains(_20442_m, jule::Str::lit(".", 1))))) {
		_2244a1090_WriteStr(_203314_s, jule::Str::lit(".0", 2));
	};
}



inline void _1c89b5a84_itoa(_224497295_StrBuilder* _205114_s, jule::I64 _205129_x) {
	{
		
		if ((_205129_x == jule::MAX_I64)) {
			_case_begin_1cc514656:;
			{
				_2244a1090_WriteStr(_205114_s, jule::Str::lit("jule::MAX_I64", 13));
				return;;
			}
		}
		else if ((_205129_x == jule::MIN_I64)) {
			_case_begin_1cc514700:;
			{
				_2244a1090_WriteStr(_205114_s, jule::Str::lit("jule::MIN_I64", 13));
				return;;
			}
		}
		_match_end_1cc514535:;
	};
	_2244a1090_WriteStr(_205114_s, _1e2195b85_FmtInt(_205129_x, 10LL));
	if (_225790e0b_Is64Bit(jule::Str::lit("amd64", 5))) {
		_2244a1348_WriteByte(_205114_s, 'L');
	};
	_2244a1348_WriteByte(_205114_s, 'L');
}



inline void _1c89b5d70_utoa(_224497295_StrBuilder* _206814_s, jule::U64 _206829_x) {
	{
		
		if ((_206829_x == jule::MAX_U64)) {
			_case_begin_1cc5167e0:;
			{
				_2244a1090_WriteStr(_206814_s, jule::Str::lit("jule::MAX_U64", 13));
				return;;
			}
		}
		_match_end_1cc51669c:;
	};
	_2244a1090_WriteStr(_206814_s, _1e21957bc_FmtUint(_206829_x, 10LL));
	if (_225790e0b_Is64Bit(jule::Str::lit("amd64", 5))) {
		_2244a1348_WriteByte(_206814_s, 'L');
	};
	_2244a1090_WriteStr(_206814_s, jule::Str::lit("LU", 2));
}



inline void _1c89b64be_operatorOverloadingBinary(_224497295_StrBuilder* _208235_buf, jule::Ptr<_1e5cc8c7b_StructIns>* _208257_s, jule::Str* _208273_l, jule::Str* _20833_r, jule::U64 _208311_op, jule::Str _208324_kind) {
	;
	jule::Ptr<_1e5ce3416_FnIns> _20856_f = static_cast<jule::Ptr<_1e5ce3416_FnIns>>(nullptr);;
	if ((_208311_op == static_cast<jule::U64>(51LLU))) {
		_20856_f=_1e6a0d0ca_FindOperator(_208257_s, static_cast<jule::U64>(50LLU), false);
		_2244a1348_WriteByte(_208235_buf, '!');
	} else {
		_20856_f=_1e6a0d0ca_FindOperator(_208257_s, _208311_op, false);
	};
	if ((_20856_f == nullptr)) {
		if (((_208311_op == static_cast<jule::U64>(50LLU)) || (_208311_op == static_cast<jule::U64>(51LLU)))) {
			static__1c89bc54c_structureIns(_208235_buf, _208257_s);
			_2244a1090_WriteStr(_208235_buf, jule::Str::lit("_eq", 3));
			goto _julec_label_1cc51a2e9;
		};
		__jule_panic_s(jule::Str::lit("binary operator overloading is not exist, this is an implementation mistake", 75) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2099:3"));;
	};
	static__1c89bb89d_funcIns(_208235_buf, &(_20856_f));
	_julec_label_1cc51a2e9:;
	_2244a1090_WriteStr(_208235_buf, jule::Str::lit("(&", 2));
	_2244a1090_WriteStr(_208235_buf, (*(_208273_l)));
	_2244a1090_WriteStr(_208235_buf, jule::Str::lit(", ", 2));
	_2244a1090_WriteStr(_208235_buf, (*(_20833_r)));
	_2244a1348_WriteByte(_208235_buf, ')');
}



inline jule::Slice<jule::U8> _1c8a8b275_concatAllParts(jule::Slice<jule::Ptr<_1e5c8eacc_Token>> _140919_parts) {
	jule::I64 _14106_n = 0LL;;
	{
		auto expr = &(_140919_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc7ca90b:;
		if (it != expr_end) {
			jule::Ptr<_1e5c8eacc_Token> *_14119_part = it;
			{
				_14106_n+=(*((*(_14119_part))))._field_Kind.len();
			}
			_iter_next_1cc7ca90b:;
			++it;
			goto _iter_begin_1cc7ca90b;
		}
		_iter_end_1cc7ca90b:;
	};
	if ((_14106_n == 0LL)) {
		return nullptr;;
	};
	_224497295_StrBuilder _14176_s = static__2244a0b83_New(_14106_n);;
	{
		auto expr = &(_140919_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc7c980b:;
		if (it != expr_end) {
			jule::Ptr<_1e5c8eacc_Token> *_14189_p = it;
			{
				_2244a1090_WriteStr(&_14176_s, (*((*(_14189_p))))._field_Kind);
			}
			_iter_next_1cc7c980b:;
			++it;
			goto _iter_begin_1cc7c980b;
		}
		_iter_end_1cc7c980b:;
	};
	return _2244a2338_Buf(&_14176_s);;
}



inline jule::Bool _1c8a8b583_isHeadDecl(jule::Ptr<_1e5ce0358_Fn>* _142520_m) {
	if ((((*((*(_142520_m))))._field_Generics.len() > 0LL) || ((*((*(_142520_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	if (_1e6a0a22b_IsOpMethod(_142520_m)) {
		return true;;
	};
	jule::Ptr<_1e5ce3416_FnIns> _14326_mi = (*((*(_142520_m))))._field_Instances[0LL];;
	;
	return static__1e5da22c7_Dispose(_1e5cc9d26_FindMethod((*(_14326_mi))._field_Owner.ptr(), jule::Str::lit("Dispose", 7), false));;
}



inline jule::Bool _1c8a8b84c_defaultEq(jule::Ptr<_1e5cc8c7b_StructIns>* _143815_s) {
	return ((*((*(_143815_s))))._field_Comparable && ((*((*(_143815_s))))._field_Operators._field_Eq == nullptr));;
}



inline jule::Bool _1c8a9aa15_ableToInit(jule::Ptr<_1e5e417ea_TypeKind>* _46820_t) {
	return (!(_1e5e42697_Binded((*(_46820_t)).ptr())));;
}



inline jule::Bool _1c8a9ace0_shouldInitialized(jule::Ptr<_1e5e417ea_TypeKind>* _47527_t) {
	if ((!(_1c8a9aa15_ableToInit(_47527_t)))) {
		return false;;
	};
	jule::Ptr<_1e5e49913_Prim> _4792_prim = _1e5e43ea1_Prim((*(_47527_t)).ptr());;
	if ((_4792_prim != nullptr)) {
		return ((!(_1e5e4d164_IsAny(_4792_prim))) && (!(_1e5e4cdcd_IsStr(_4792_prim))));;
	};
	{
		
		if ((_1e5e44237_Sptr((*(_47527_t)).ptr()) != nullptr)) {
			_case_begin_1cc920787:;
			{
				return false;;
			}
		}
		else if ((_1e5e45a41_Map((*(_47527_t)).ptr()) != nullptr)) {
			_case_begin_1cc921513:;
			{
				return false;;
			}
		}
		else if ((_1e5e45007_Slc((*(_47527_t)).ptr()) != nullptr)) {
			_case_begin_1cc920820:;
			{
				return false;;
			}
		}
		else if ((_1e5e457aa_Trait((*(_47527_t)).ptr()) != nullptr)) {
			_case_begin_1cc920886:;
			{
				return false;;
			}
		}
		else if ((_1e5e4528d_Fn((*(_47527_t)).ptr()) != nullptr)) {
			_case_begin_1cc92169a:;
			{
				return false;;
			}
		}
		else if ((_1e5e44c71_Arr((*(_47527_t)).ptr()) != nullptr)) {
			_case_begin_1cc921711:;
			{
				jule::Ptr<_1e5e51233_Arr> _4957_arr = _1e5e44c71_Arr((*(_47527_t)).ptr());;
				return _1c8a9aa15_ableToInit(&((*(_4957_arr))._field_Elem));;
			}
		}
		else if ((_1e5e45524_Struct((*(_47527_t)).ptr()) != nullptr)) {
			_case_begin_1cc921777:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1cc920688:;
			{
				return true;;
			}
		}
		_match_end_1cc920a73:;
	};
}



inline void _22586d88a_printErrorMessage(jule::Str _3022_msg) {
	jule::outln(_1c8d69498_toStr(_3022_msg));
}



inline void _22586db10_help(jule::Slice<jule::Str>* _3510_args) {
	if (((*(_3510_args)).len() > 2LL)) {
		_22586d88a_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_3510_args))[2LL]));
		return;;
	};
	jule::I64 _416_max = _22586d6ae_HelpMap[0LL][0LL].len();;
	{
		auto expr = &(_22586d6ae_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc9b8de6:;
		if (it != expr_end) {
			jule::Array<jule::Str,2> *_429_k = it;
			{
				jule::I64 _433_n = (*(_429_k))[0LL].len();;
				if ((_433_n > _416_max)) {
					_416_max=_433_n;
				};
			}
			_iter_next_1cc9b8de6:;
			++it;
			goto _iter_begin_1cc9b8de6;
		}
		_iter_end_1cc9b8de6:;
	};
	_224497295_StrBuilder _496_s = static__2244a0b83_New(32LL);;
	;
	{
		auto expr = &(_22586d6ae_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc9b9ed5:;
		if (it != expr_end) {
			jule::I64 _516_i = it - expr->begin();
			jule::Array<jule::Str,2> *_519_part = it;
			{
				_2244a1090_WriteStr(&_496_s, (*(_519_part))[0LL]);
				_2244a1090_WriteStr(&_496_s, _2256d6eb7_Repeat(jule::Str::lit(" ", 1), ((_416_max - (*(_519_part))[0LL].len()) + 5LL)));
				_2244a1090_WriteStr(&_496_s, (*(_519_part))[1LL]);
				if (((_516_i + 1LL) < 5LL)) {
					_2244a1348_WriteByte(&_496_s, '\n');
				};
			}
			_iter_next_1cc9b9ed5:;
			++it;
			_516_i++;
			goto _iter_begin_1cc9b9ed5;
		}
		_iter_end_1cc9b9ed5:;
	};
	jule::outln(_1cc9baea3_toStr(_496_s));
}



inline void _22586dd41_version(jule::Slice<jule::Str>* _6313_args) {
	if (((*(_6313_args)).len() > 2LL)) {
		_22586d88a_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_6313_args))[2LL]));
		return;;
	};
	jule::outln(_1c8d69498_toStr(jule::Str::lit("jule0.1.0", 9)));
}



inline void _22586e050_toolDistos(void) {
	jule::out(_1c8d69498_toStr(jule::Str::lit("supported operating systems:\n ", 30)));
	jule::out(_1cc9c2b25_toStr(static_cast<jule::Str>(jule::Str::lit("windows", 7))));
	jule::out(_1c8d69498_toStr(jule::Str::lit(" ", 1)));
	jule::out(_1cc9c2b25_toStr(static_cast<jule::Str>(jule::Str::lit("linux", 5))));
	jule::out(_1c8d69498_toStr(jule::Str::lit(" ", 1)));
	jule::out(_1cc9c2b25_toStr(static_cast<jule::Str>(jule::Str::lit("darwin", 6))));
	jule::outln(_1c8d69498_toStr(jule::Str()));
}



inline void _22586e1b5_toolDistarch(void) {
	jule::out(_1c8d69498_toStr(jule::Str::lit("supported architects:\n ", 23)));
	jule::out(_1cc9c9c3c_toStr(static_cast<jule::Str>(jule::Str::lit("amd64", 5))));
	jule::out(_1c8d69498_toStr(jule::Str::lit(" ", 1)));
	jule::out(_1cc9c9c3c_toStr(static_cast<jule::Str>(jule::Str::lit("i386", 4))));
	jule::out(_1c8d69498_toStr(jule::Str::lit(" ", 1)));
	jule::out(_1cc9c9c3c_toStr(static_cast<jule::Str>(jule::Str::lit("arm64", 5))));
	jule::outln(_1c8d69498_toStr(jule::Str()));
}



inline void _22586e3b3_tool(jule::Slice<jule::Str>* _9410_args) {
	if (((*(_9410_args)).len() == 2LL)) {
		jule::outln(_1c8d69498_toStr(jule::Str::lit("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107)));
		return;;
	} else if (((*(_9410_args)).len() > 3LL)) {
		_22586d88a_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_9410_args))[3LL]));
		return;;
	};
	jule::Str _1052_cmd = (*(_9410_args))[2LL];;
	{
		auto &_match_expr{ _1052_cmd };
		
		if (_match_expr == jule::Str::lit("distos", 6)) {
			_case_begin_1cc9d8245:;
			{
				_22586e050_toolDistos();
			}
		}
		else if (_match_expr == jule::Str::lit("distarch", 8)) {
			_case_begin_1cc9d1947:;
			{
				_22586e1b5_toolDistarch();
			}
		}
		else {
			_case_begin_1cc9d1749:;
			{
				_22586d88a_printErrorMessage((jule::Str::lit("undefined command: ", 19) + _1052_cmd));
			}
		}
		_match_end_1cc9d1826:;
	};
}



inline void _22586e5e4_julenv(jule::Slice<jule::Str>* _11712_args) {
	if (((*(_11712_args)).len() > 2LL)) {
		_22586d88a_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_11712_args))[2LL]));
		return;;
	};
	jule::outln(_1c8d69498_toStr(jule::Str::lit("julec version: jule0.1.0", 24)));
	jule::outln(_1c8d69498_toStr(jule::Str::lit("architecture: amd64", 19)));
	jule::outln(_1c8d69498_toStr(jule::Str::lit("operating system: windows", 25)));
	jule::outln(_1c8d69498_toStr((jule::Str::lit("default compiler: ", 18) + _225869c82_Compiler)));
	jule::outln(_1c8d69498_toStr((jule::Str::lit("default C++ standard: ", 22) + _22586b38d_CppStd)));
}



inline void _22586e935_mod(jule::Slice<jule::Str>* _1309_args) {
	if (((*(_1309_args)).len() == 2LL)) {
		jule::outln(_1c8d69498_toStr(jule::Str::lit("command is not given, try julec mod init", 40)));
		return;;
	};
	if (((*(_1309_args)).len() > 3LL)) {
		_22586d88a_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[3LL]));
		return;;
	};
	{
		auto &_match_expr{ (*(_1309_args))[2LL] };
		
		if (_match_expr == jule::Str::lit("init", 4)) {
			_case_begin_1cc9dbc0a:;
			{
				({
					auto except = static__2243e1651_Write(jule::Str::lit("jule.mod", 8), jule::Slice<jule::U8>(), 432LL);
					if (!except.ok()) {
						_22586d88a_printErrorMessage(jule::Str::lit("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1cc9db04a:;
			{
				_22586d88a_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[2LL]));
			}
		}
		_match_end_1cc9db666:;
	};
}



inline jule::Bool _22586eb77_processCommand(jule::Slice<jule::Str>* _15320_args) {
	{
		auto &_match_expr{ (*(_15320_args))[1LL] };
		
		if (_match_expr == jule::Str::lit("help", 4)) {
			_case_begin_1cc9dd1a1:;
			{
				_22586db10_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("version", 7)) {
			_case_begin_1cc9dd217:;
			{
				_22586dd41_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("tool", 4)) {
			_case_begin_1cc9dd27d:;
			{
				_22586e3b3_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("julenv", 6)) {
			_case_begin_1cc9dc975:;
			{
				_22586e5e4_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("mod", 3)) {
			_case_begin_1cc9dc9db:;
			{
				_22586e935_mod(_15320_args);
			}
		}
		else {
			_case_begin_1cc9db7dc:;
			{
				return false;;
			}
		}
		_match_end_1cc9dc2b0:;
	};
	return true;;
}



inline void _22586ed20_showInfo(void) {
	jule::outln(_1c8d69498_toStr(jule::Str::lit("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help\n    version       Show version\n    tool          Tools for effective Jule\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 307)));
}



void entry_point(void) {
	jule::Slice<jule::Str> _1896_args = _2244cd474_Args();;
	if ((_1896_args.len() < 2LL)) {
		_22586ed20_showInfo();
		return;;
	};
	if (_22586eb77_processCommand(&(_1896_args))) {
		return;;
	};
	_1c8b1aed6_compileCommand(&(_1896_args));
}



inline void _22587079e_enableVtp(void) {
	jule::Uintptr _192_hOut = _224088bab_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551605LLU));;
	if ((_192_hOut == jule::MAX_U64)) {
		return;;
	};
	jule::I64 _246_dwMode = 0LL;;
	if ((!(_22408b230_GetConsoleMode(_192_hOut, &(_246_dwMode))))) {
		return;;
	};
	_246_dwMode|=4LL;
	_22408b83a_SetConsoleMode(_192_hOut, _246_dwMode);
}



inline void _225870969_init(void) {
	_22587079e_enableVtp();
}



inline void _1c8b17e06_init(void) {
	_225869c82_Compiler=jule::Str::lit("clang", 5);
}



inline jule::Ptr<_2243e07c6_File> _1c8b181c0_openOutput(jule::Str* _4316_path) {
	jule::Str _442_dir = _2256e39c9_Dir((*(_4316_path)));;
	({
		auto except = static__2256e5107_Of(_442_dir);
		if (!except.ok()) {
			({
				auto except = static__2256e4513_Create(_442_dir);
				if (!except.ok()) {
					_1c8020b5b_Throw(jule::Str::lit("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__2243e0ee1_Create((*(_4316_path)));
		(except.ok()) ? (except.result) : ({
			_1c8020b5b_Throw(jule::Str::lit("a problem occurs when code generation", 37));

			nullptr;
		});
	});;
}



inline void _1c8b18368_clearObjects(void) {
	({
		auto except = static__2243e4555_Remove(_1c8b194bd_getCompilePath());
		if (!except.ok()) {
			jule::outln(_1c8d69498_toStr(jule::Str::lit("a problem occurs when object cleaning", 37)));
			return;;
		}
	});
	static__2256e4744_Remove(_1c8b176ca_OutDir);
}



inline void _1c8b18676_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd) {
	jule::Ptr<_22584814a_Cmd> _736_cmd = static__22584858a_New(_7214_compiler);;
	(*(_736_cmd))._field_Args=_2256db4c7_Split(_7229_compilerCmd, jule::Str::lit(" ", 1), -1LL);
	({
		auto except = _225848788_Spawn(_736_cmd);
		if (!except.ok()) {
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1cc9e586d:;
					{
						static__1c801c031_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(0LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1cc9e58d4:;
					{
						static__1c801c031_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1cc9e5351:;
					{
						static__1c801c031_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of unknown problem", 59));
					}
				}
				_match_end_1cc9e5461:;
			};
			_1c8020b5b_Throw(jule::Str());
		}
	});
	jule::I64 _862_status = ({
		auto except = _225848c1c_Wait(_736_cmd);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:86:12"));
		(except.result);
	});;
	if ((_862_status != 0LL)) {
		jule::Str _883_errorMessage = ((jule::Str::lit("\n>>> your backend compiler (", 28) + _225869c82_Compiler) + jule::Str::lit(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__1c801c031_Print(jule::Str::lit("\033[31m", 5), _883_errorMessage);
		_1c8020b5b_Throw(jule::Str());
	};
	_1c8b18368_clearObjects();
}



inline jule::Bool _1c8b18940_isCppSourceFile(jule::Str _9920_path) {
	jule::I64 _1002_offset = _2256da086_FindLastByte(_9920_path, '.');;
	if ((_1002_offset == -1LL)) {
		return false;;
	};
	return _225779543_IsValidCppExt(_9920_path.slice(_1002_offset));;
}



inline void _1c8b18b71_pushCompCmdClang(_224497295_StrBuilder* _10726_cmd) {
	_2244a1090_WriteStr(_10726_cmd, jule::Str::lit("-Wno-everything ", 16));
	_2244a1090_WriteStr(_10726_cmd, jule::Str::lit("--std=", 6));
	{
		auto &_match_expr{ _22586b38d_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1cc9e8a80:;
			{
				_2244a1090_WriteStr(_10726_cmd, jule::Str::lit("c++14", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1cc9e9773:;
			{
				_2244a1090_WriteStr(_10726_cmd, jule::Str::lit("c++17", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1cc9e97d9:;
			{
				_2244a1090_WriteStr(_10726_cmd, jule::Str::lit("c++20", 5));
			}
		}
		_match_end_1cc9e9652:;
	};
	_2244a1348_WriteByte(_10726_cmd, ' ');
	if (_22586c4e3_Production) {
		_2244a1090_WriteStr(_10726_cmd, jule::Str::lit("-O3 ", 4));
		_2244a1090_WriteStr(_10726_cmd, jule::Str::lit("-flto ", 6));
		_2244a1090_WriteStr(_10726_cmd, jule::Str::lit("-DNDEBUG ", 9));
		_2244a1090_WriteStr(_10726_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
	} else {
		_2244a1090_WriteStr(_10726_cmd, jule::Str::lit("-O0 ", 4));
	};
}



inline void _1c8b18da2_pushCompCmdGcc(_224497295_StrBuilder* _13324_cmd) {
	_2244a1090_WriteStr(_13324_cmd, jule::Str::lit("-w ", 3));
	_2244a1090_WriteStr(_13324_cmd, jule::Str::lit("--std=", 6));
	{
		auto &_match_expr{ _22586b38d_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1cc9eac2a:;
			{
				_2244a1090_WriteStr(_13324_cmd, jule::Str::lit("c++14", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1cc9eac91:;
			{
				_2244a1090_WriteStr(_13324_cmd, jule::Str::lit("c++17", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1cc9ec7a9:;
			{
				_2244a1090_WriteStr(_13324_cmd, jule::Str::lit("c++20", 5));
			}
		}
		_match_end_1cc9ec688:;
	};
	_2244a1348_WriteByte(_13324_cmd, ' ');
	if (_22586c4e3_Production) {
		_2244a1090_WriteStr(_13324_cmd, jule::Str::lit("-O3 ", 4));
		_2244a1090_WriteStr(_13324_cmd, jule::Str::lit("-DNDEBUG ", 9));
		_2244a1090_WriteStr(_13324_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
	} else {
		_2244a1090_WriteStr(_13324_cmd, jule::Str::lit("-O0 ", 4));
	};
}



inline __jule_tuple_str__jule_tuple_str _1c8b19336_genCompileCmd(jule::Str _15918_sourcePath, jule::Ptr<_1e6a03ab5_IR>* _15936_ir) {
	__jule_tuple_str__jule_tuple_str __jule_func_result;
	jule::Str *_1603_compiler = &(_22586b17e_CompilerPath);;
	_224497295_StrBuilder _1616_cmd = static__2244a0b83_New(64LL);;
	{
		auto &_match_expr{ _225869c82_Compiler };
		
		if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1cca0089a:;
			{
				_1c8b18da2_pushCompCmdGcc(&(_1616_cmd));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1cca009cc:;
			{
				_1c8b18b71_pushCompCmdClang(&(_1616_cmd));
			}
		}
		_match_end_1cca0048d:;
	};
	{
		auto expr = &((*((*(_15936_ir))))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cca00c85:;
		if (it != expr_end) {
			jule::Ptr<_1e5d5b2e7_ImportInfo> *_1719_u = it;
			{
				if (((*((*(_1719_u))))._field_Binded && _1c8b18940_isCppSourceFile((*(*(_1719_u)).alloc)._field_Path))) {
					_2244a1090_WriteStr(&_1616_cmd, (*(*(_1719_u)).alloc)._field_Path);
					_2244a1348_WriteByte(&_1616_cmd, ' ');
				};
			}
			_iter_next_1cca00c85:;
			++it;
			goto _iter_begin_1cca00c85;
		}
		_iter_end_1cca00c85:;
	};
	if (!(_1c8b17c4c_Out).empty()) {
		_2244a1090_WriteStr(&_1616_cmd, jule::Str::lit("-o ", 3));
		_2244a1090_WriteStr(&_1616_cmd, _1c8b17c4c_Out);
		_2244a1348_WriteByte(&_1616_cmd, ' ');
	};
	_2244a1090_WriteStr(&_1616_cmd, _15918_sourcePath);
	{
		auto expr = &((*((*(_15936_ir))))._field_Passes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cca03826:;
		if (it != expr_end) {
			jule::Str *_1869_pass = it;
			{
				_2244a1348_WriteByte(&_1616_cmd, ' ');
				_2244a1090_WriteStr(&_1616_cmd, (*(_1869_pass)));
			}
			_iter_next_1cca03826:;
			++it;
			goto _iter_begin_1cca03826;
		}
		_iter_end_1cca03826:;
	};
	if ((_22586509b_Os == static_cast<jule::Str>(jule::Str::lit("windows", 7)))) {
		_2244a1090_WriteStr(&_1616_cmd, jule::Str::lit(" -lshell32", 10));
	};
	__jule_func_result.__jule_result_arg0 = (*(_1603_compiler));
	__jule_func_result.__jule_result_arg1 = _2244a1887_Str(&_1616_cmd);
	return __jule_func_result;;
}



inline jule::Str _1c8b194bd_getCompilePath(void) {
	return _2256e2cd6_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1c8b176ca_OutDir; (*it++) = _1c8b17994_OutName; __jule_collection; }));;
}



inline void _1c8b196ee_applyTargetIndependentOptimizations(jule::Ptr<_1e6a03ab5_IR>* _20545_ir) {
	jule::Ptr<_1c7ee6b54_Optimizer> _2066_opt = static__1c7ee710a_New(_20545_ir);;
	_1c7ee86e4_Optimize(_2066_opt.ptr());
}



inline void _1c8b19897_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _225869c82_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1cca060dc:;
			{
				_1c8020b5b_Throw(jule::Str::lit("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1cca06021:;
			{
				if ((_22586b17e_CompilerPath).empty()) {
					_22586b17e_CompilerPath=jule::Str::lit("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1cca05bd0:;
			{
				if ((_22586b17e_CompilerPath).empty()) {
					_22586b17e_CompilerPath=jule::Str::lit("g++", 3);
				};
			}
		}
		else {
			_case_begin_1cca04c01:;
			{
				_1c8020b5b_Throw((jule::Str::lit("invalid option value for --compiler: ", 37) + _225869c82_Compiler));
			}
		}
		_match_end_1cca05a15:;
	};
}



inline void _1c8b19aa6_checkTargetArch(jule::Str _22720_arch) {
	if ((((_22720_arch != static_cast<jule::Str>(jule::Str::lit("amd64", 5))) && (_22720_arch != static_cast<jule::Str>(jule::Str::lit("arm64", 5)))) && (_22720_arch != static_cast<jule::Str>(jule::Str::lit("i386", 4))))) {
		_1c8020b5b_Throw((jule::Str::lit("--target: unsupported/undefined architecture: ", 46) + _22720_arch));
	};
}



inline void _1c8b19cd7_checkTargetOs(jule::Str _23518_os) {
	if ((((_23518_os != static_cast<jule::Str>(jule::Str::lit("windows", 7))) && (_23518_os != static_cast<jule::Str>(jule::Str::lit("linux", 5)))) && (_23518_os != static_cast<jule::Str>(jule::Str::lit("darwin", 6))))) {
		_1c8020b5b_Throw((jule::Str::lit("--target: unsupported/undefined operating system: ", 50) + _23518_os));
	};
}



inline void _1c8b1a018_checkTargetFlag(jule::Str* _24321_target) {
	if (((*(_24321_target))).empty()) {
		_1c8020b5b_Throw(jule::Str::lit("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2482_parts = _2256db4c7_Split((*(_24321_target)), jule::Str::lit("-", 1), -1LL);;
	if ((_2482_parts.len() != 2LL)) {
		_1c8020b5b_Throw((jule::Str::lit("--target: undefined platform target format: ", 44) + (*(_24321_target))));
	};
	jule::Str _2532_os;
	jule::Str _2536_arch;
	({
		jule::Str ___jule_assign_arg = _2482_parts[0LL];
		jule::Str _1___jule_assign_arg = _2482_parts[1LL];
		_2532_os = ___jule_assign_arg;
		_2536_arch = _1___jule_assign_arg;
	});
	if ((!_2532_os.equal("native", 6))) {
		_1c8b19cd7_checkTargetOs(_2532_os);
		_22586509b_Os=_2532_os;
	};
	if ((!_2536_arch.equal("native", 6))) {
		_1c8b19aa6_checkTargetArch(_2536_arch);
		_225865354_Arch=_2536_arch;
	};
	_1e219a7a0_UpdateTarget();
}



inline void _1c8b1a249_checkOptFlag(jule::Str* _26618_opt) {
	if (((*(_26618_opt))).empty()) {
		_1c8020b5b_Throw(jule::Str::lit("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ (*(_26618_opt)) };
		
		if (_match_expr == jule::Str::lit("L0", 2)) {
			_case_begin_1cca0d04a:;
			{
				goto _match_end_1cca0c8b8;
			}
		}
		else if (_match_expr == jule::Str::lit("L1", 2)) {
			_case_begin_1cca0d0e4:;
			{
				_1e6a273be_PushOptLevel(static_cast<jule::I64>(1LL));
			}
		}
		else {
			_case_begin_1cca0c720:;
			{
				_1c8020b5b_Throw((jule::Str::lit("--opt: invalid optimization level: ", 35) + (*(_26618_opt))));
			}
		}
		_match_end_1cca0c8b8:;
	};
}



inline void _1c8b1a612_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _22586b38d_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5) || _match_expr == jule::Str::lit("cpp17", 5) || _match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1cca0de08:;
			{
				goto _match_end_1cca0d8ca;
			}
		}
		else {
			_case_begin_1cca0c92e:;
			{
				_1c8020b5b_Throw((jule::Str::lit("--cppstd: invalid cpp standard: ", 32) + _22586b38d_CppStd));
			}
		}
		_match_end_1cca0d8ca:;
	};
}



inline jule::Slice<jule::Str> _1c8b1a7cc_checkFlags(jule::Slice<jule::Str>* _29216_args) {
	jule::Str _2936_opt = jule::Str::lit("L0", 2);;
	jule::Str _2946_target = jule::Str::lit("native-native", 13);;
	jule::Ptr<_1c8b12692_FlagSet> _2966_fs = static__1c8b129b1_New();;
	_1cca10811_AddVar(_2966_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2936_opt)))), jule::Str::lit("opt", 3), 0LL, jule::Str::lit("Optimization level", 18));
	_1cca10811_AddVar(_2966_fs, ((jule::Ptr<jule::Str>)((&(_2946_target)))), jule::Str::lit("target", 6), 0LL, jule::Str::lit("Target system", 13));
	_1cca10811_AddVar(_2966_fs, ((jule::Ptr<jule::Str>)((&(_1c8b17c4c_Out)))), jule::Str::lit("out", 3), 'o', jule::Str::lit("Output identifier", 17));
	_1cca1992a_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_22586b5be_Shadowing)))), jule::Str::lit("shadowing", 9), 0LL, jule::Str::lit("Allow shadowing", 15));
	_1cca1992a_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_22586b877_Transpilation)))), jule::Str::lit("transpile", 9), 't', jule::Str::lit("Transpile code", 14));
	_1cca10811_AddVar(_2966_fs, ((jule::Ptr<jule::Str>)((&(_225869c82_Compiler)))), jule::Str::lit("compiler", 8), 0LL, jule::Str::lit("Backend compiler", 16));
	_1cca10811_AddVar(_2966_fs, ((jule::Ptr<jule::Str>)((&(_22586b17e_CompilerPath)))), jule::Str::lit("compiler-path", 13), 0LL, jule::Str::lit("Path of backend compiler", 24));
	_1cca1992a_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_22586c4e3_Production)))), jule::Str::lit("production", 10), 'p', jule::Str::lit("Compile for production", 22));
	_1cca1992a_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_22586bdd8_RC)))), jule::Str::lit("disable-rc", 10), 0LL, jule::Str::lit("Disable reference counting", 26));
	_1cca1992a_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_22586c2a1_Safety)))), jule::Str::lit("disable-safety", 14), 0LL, jule::Str::lit("Disable safety", 14));
	_1cca10811_AddVar(_2966_fs, ((jule::Ptr<jule::Str>)((&(_22586b38d_CppStd)))), jule::Str::lit("cppstd", 6), 0LL, jule::Str::lit("C++ standard", 12));
	_1cca1992a_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1e6a24aa3_Copy)))), jule::Str::lit("opt-copy", 8), 0LL, jule::Str::lit("Copy optimization", 17));
	_1cca1992a_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1e6a24da0_Deadcode)))), jule::Str::lit("opt-deadcode", 12), 0LL, jule::Str::lit("Deadcode optimization", 21));
	_1cca1992a_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1e6a25158_Append)))), jule::Str::lit("opt-append", 10), 0LL, jule::Str::lit("Append optimization", 19));
	_1cca1992a_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1e6a25455_Math)))), jule::Str::lit("opt-math", 8), 0LL, jule::Str::lit("Math optimization", 17));
	_1cca1992a_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1e6a2570d_Access)))), jule::Str::lit("opt-access", 10), 0LL, jule::Str::lit("Access optimization", 19));
	_1cca1992a_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1e6a259b6_Inline)))), jule::Str::lit("opt-inline", 10), 0LL, jule::Str::lit("Inline optimization", 19));
	_1cca1992a_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1e6a25c6e_Ptr)))), jule::Str::lit("opt-ptr", 7), 0LL, jule::Str::lit("Pointer optimizations", 21));
	_1cca1992a_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1e6a26137_Cond)))), jule::Str::lit("opt-cond", 8), 0LL, jule::Str::lit("Conditional optimizations", 25));
	_1cca1992a_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1e6a26379_Str)))), jule::Str::lit("opt-str", 7), 0LL, jule::Str::lit("String optimizations", 20));
	_1cca1992a_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1e6a26621_Slice)))), jule::Str::lit("opt-slice", 9), 0LL, jule::Str::lit("Slice optimizations", 19));
	_1cca1992a_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1e6a268c9_Assign)))), jule::Str::lit("opt-assign", 10), 0LL, jule::Str::lit("Assignment optimizations", 24));
	_1cca1992a_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1e6a26b82_Exceptional)))), jule::Str::lit("opt-exceptional", 15), 0LL, jule::Str::lit("Exceptional optimizations", 25));
	_1cca1992a_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1e6a26e3a_Iter)))), jule::Str::lit("opt-iter", 8), 0LL, jule::Str::lit("Iterations optimizations", 24));
	_1cca1992a_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1e6a271e3_Dynamic)))), jule::Str::lit("opt-dynamic", 11), 0LL, jule::Str::lit("Dynamic programming optimizations", 33));
	jule::Slice<jule::Str> _3246_content = ({
		auto except = _1c8b13880_Parse(_2966_fs, (*(_29216_args)));
		(except.ok()) ? (except.result) : ({
			_1c8020b5b_Throw(except.error.cast<jule::Str>(&__jule_any_type4));

			nullptr;
		});
	});;
	_1c8b19897_checkCompilerFlag();
	_1c8b1a612_checkCppStdFlag();
	_1c8b1a018_checkTargetFlag(&(_2946_target));
	_1c8b1a249_checkOptFlag(&(_2936_opt));
	return _3246_content;;
}



inline void _1c8b1a9db_setupSemaFlags(jule::I64* _33724_flags) {
	if (_22586b5be_Shadowing) {
		(*(_33724_flags))|=static_cast<jule::I64>(1LL);
	};
}



inline jule::Ptr<_1e6a03ab5_IR> _1c8b1aca5_buildIr(jule::Slice<jule::Str>* _34313_args) {
	jule::Slice<jule::Str> _3442_content = _1c8b1a7cc_checkFlags(_34313_args);;
	jule::I64 _3466_semaFlags = static_cast<jule::I64>(0LL);;
	_1c8b1a9db_setupSemaFlags(&(_3466_semaFlags));
	if ((_3442_content.len() == 0LL)) {
		_1c8020b5b_Throw(_22578b7ec_Logf(static_cast<jule::Str>(jule::Str::lit("missing compile path", 20)), jule::Slice<jule::Any>()));
	} else if ((_3442_content.len() > 1LL)) {
		_1c8020b5b_Throw((jule::Str::lit("undefined content: ", 19) + _3442_content[1LL]));
	};
	jule::Str _3546_path;
	jule::Bool _35412_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2256e3336_Abs(_3442_content[0LL]);
		_3546_path = __jule_assign_result.__jule_result_arg0;
		_35412_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_35412_ok))) {
		_1c8020b5b_Throw(jule::Str::lit("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_2243e290a_Status> _3602_inf = ({
		auto except = static__2256e5107_Of(_2258644eb_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_1c8020b5b_Throw(_22578b7ec_Logf(static_cast<jule::Str>(jule::Str::lit("standard library directory not found", 36)), jule::Slice<jule::Any>()));
			return nullptr;;
		} jule::Ptr<_2243e290a_Status>(nullptr);});
	});;
	if ((!(_2243e2d17_IsDir(_3602_inf.ptr())))) {
		_1c8020b5b_Throw(_22578b7ec_Logf(static_cast<jule::Str>(jule::Str::lit("standard library directory not found", 36)), jule::Slice<jule::Any>()));
	};
	jule::Ptr<_1e6a03ab5_IR> _3686_ir;
	jule::Slice<_22578b38a_Log> _36810_logs;
	({
		__jule_tuple_x_1e6a03ab5_IR__jule_tuple_s_22578b38a_Log __jule_assign_result = static__1e6a0408d_Build(_3546_path, _3466_semaFlags);
		_3686_ir = __jule_assign_result.__jule_result_arg0;
		_36810_logs = __jule_assign_result.__jule_result_arg1;
	});
	if (((_3686_ir == nullptr) && (_36810_logs == nullptr))) {
		_1c8020b5b_Throw(_22578b7ec_Logf(static_cast<jule::Str>(jule::Str::lit("there is no Jule source code in package: @", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_3546_path, &__jule_any_type4); __jule_collection; })));
	};
	if ((_36810_logs != nullptr)) {
		static__1c80201cc_PrintLogs(&(_36810_logs));
		_1c8020b5b_Throw(jule::Str());
	};
	return _3686_ir;;
}



inline void _1c8b1aed6_compileCommand(jule::Slice<jule::Str>* _38324_args) {
	((*(_38324_args))).mut_slice(1LL);;
	if ((*(_38324_args))[0LL].equal("test", 4)) {
		_22586bb30_Test=true;
		((*(_38324_args))).mut_slice(1LL);;
	};
	jule::Ptr<_1e6a03ab5_IR> _3896_ir = _1c8b1aca5_buildIr(_38324_args);;
	;
	if ((!(_22586bb30_Test))) {
		jule::Ptr<_1e5ce0358_Fn> _3947_main = _1e5d607d5_FindFn((*(_3896_ir))._field_Main.ptr(), jule::Str::lit("main", 4), false);;
		if ((_3947_main == nullptr)) {
			_1c8020b5b_Throw(_22578b7ec_Logf(static_cast<jule::Str>(jule::Str::lit("missing entry point: entry point (main) function is not defined", 63)), jule::Slice<jule::Any>()));
		};
	};
	_1c8b196ee_applyTargetIndependentOptimizations(&(_3896_ir));
	_1e6a05105_Order(_3896_ir);
	jule::Str _4052_compPath = _1c8b194bd_getCompilePath();;
	jule::Str _4062_compiler;
	jule::Str _40612_compilerCmd;
	({
		__jule_tuple_str__jule_tuple_str __jule_assign_result = _1c8b19336_genCompileCmd(_4052_compPath, &(_3896_ir));
		_4062_compiler = __jule_assign_result.__jule_result_arg0;
		_40612_compilerCmd = __jule_assign_result.__jule_result_arg1;
	});
	jule::Ptr<_1c8a7d92c_ObjectCoder> _4086_oc = static__1c8a7dd8e_New(&(_3896_ir), _1c8a767c1_SerializationInfo{._field_Compiler=_4062_compiler, ._field_CompilerCommand=_40612_compilerCmd});;
	if (_22586bb30_Test) {
		jule::Ptr<_1c89b7514_TestCoder> _4137_tc = static__1c89b79ba_New(&(_4086_oc));;
		_1c89b8d40_Serialize(_4137_tc);
	} else {
		_1c8a8ade0_Serialize(_4086_oc);
	};
	jule::Ptr<_2243e07c6_File> _4196_file = _1c8b181c0_openOutput(&(_4052_compPath));;
	({
		auto except = _2243e49d9_Write(_4196_file.ptr(), _2244a2338_Buf(&(*(_4086_oc))._field_Buf));
		if (!except.ok()) {
			_1c8020b5b_Throw(jule::Str::lit("object code could not write", 27));
		}
	});
	({
		auto except = _2243e1d8d_Close(_4196_file);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:423:2"));
	});
	if ((!(_22586b877_Transpilation))) {
		_1c8b18676_compileIr(_4062_compiler, _40612_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_225865497_init();
	_1e219a926_init();
	_225870969_init();
	_1c8b17e06_init();

}

inline jule::Bool __jule_anon1ca65449b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5ce22b1_ParamIns> _25021_p1, jule::Ptr<_1e5ce22b1_ParamIns> _25036_p2) {
	if (((*((*(_25021_p1))._field_Decl))._field_Mutable != (*(*(_25036_p2))._field_Decl.alloc)._field_Mutable)) {
		return false;;
	};
	if (_1e5cdded3_IsSelf((*(_25021_p1))._field_Decl)) {
		if ((!(_1e5cdded3_IsSelf((*(_25036_p2))._field_Decl)))) {
			return false;;
		};
		if ((_1e5cde269_IsRef((*(_25021_p1))._field_Decl) != _1e5cde269_IsRef((*(_25036_p2))._field_Decl))) {
			return false;;
		};
		return true;;
	};
	if (((*(*(_25021_p1))._field_Decl.alloc)._field_Reference != (*(*(_25036_p2))._field_Decl.alloc)._field_Reference)) {
		return false;;
	};
	if (((*(*(_25021_p1))._field_Decl.alloc)._field_Variadic != (*(*(_25036_p2))._field_Decl.alloc)._field_Variadic)) {
		return false;;
	};
	return _1e5e42037_Equal((*_25021_p1.alloc)._field_Kind, (*(_25036_p2))._field_Kind);;
}

inline jule::Bool __jule_anon_1ca6ad9cd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5d5b2e7_ImportInfo> _49935_spkg) {
	jule::Ptr<__jule_anon_1ca6ad9cd_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ca6ad9cd_ctx>();
	return ((!(_1e5d033b0_isImplicitImport(_49935_spkg))) && ((*((*(__jule_closure_ctx.alloc->_49828_pkg))))._field_Path == (*(_49935_spkg))._field_Path));;
}

inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca730038(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _6521_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _6536_fc, jule::Ptr<_1e5e08c13_Data>* ) {
	jule::Ptr<__jule_anon_1ca730038_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ca730038_ctx>();
	return _1e5d0be68__Decl(__jule_closure_ctx.alloc->_self_, _6521_e, _6536_fc);;
}

inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca731eb3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _7221_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _7236_fc, jule::Ptr<_1e5e08c13_Data>* ) {
	jule::Ptr<__jule_anon_1ca731eb3_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ca731eb3_ctx>();
	return _1e5d0c364__Type(__jule_closure_ctx.alloc->_self_, _7221_e, _7236_fc);;
}

inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca7488e2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _17821_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _17836_fc, jule::Ptr<_1e5e08c13_Data>* ) {
	jule::Ptr<__jule_anon_1ca7488e2_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ca7488e2_ctx>();
	return _1e5d1018b__Decl(__jule_closure_ctx.alloc->_self_, _17821_e, _17836_fc);;
}

inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca74a86c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _18521_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _18536_fc, jule::Ptr<_1e5e08c13_Data>* ) {
	jule::Ptr<__jule_anon_1ca74a86c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ca74a86c_ctx>();
	return _1e5d10587__Type(__jule_closure_ctx.alloc->_self_, _18521_e, _18536_fc);;
}

inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca75bcce(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _28321_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _28336_fc, jule::Ptr<_1e5e08c13_Data>* ) {
	jule::Ptr<__jule_anon_1ca75bcce_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ca75bcce_ctx>();
	return _1e5d1339d__Decl(__jule_closure_ctx.alloc->_self_, _28321_e, _28336_fc);;
}

inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca77360e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _40221_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _40236_fc, jule::Ptr<_1e5e08c13_Data>* ) {
	jule::Ptr<__jule_anon_1ca77360e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ca77360e_ctx>();
	return _1e5d161d6__Decl(__jule_closure_ctx.alloc->_self_, _40221_e, _40236_fc);;
}

inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca775589(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _40921_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _40936_fc, jule::Ptr<_1e5e08c13_Data>* ) {
	jule::Ptr<__jule_anon_1ca775589_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ca775589_ctx>();
	return _1e5d169cd__Recv(__jule_closure_ctx.alloc->_self_, _40921_e, _40936_fc);;
}

inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca777514(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _41621_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _41636_fc, jule::Ptr<_1e5e08c13_Data>* ) {
	jule::Ptr<__jule_anon_1ca777514_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ca777514_ctx>();
	return _1e5d165d2__Type(__jule_closure_ctx.alloc->_self_, _41621_e, _41636_fc);;
}

inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca824e74(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _97421_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _97436_fc, jule::Ptr<_1e5e08c13_Data>* ) {
	jule::Ptr<__jule_anon_1ca824e74_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ca824e74_ctx>();
	return _1e5d1b43e__Decl(__jule_closure_ctx.alloc->_self_, _97421_e, _97436_fc);;
}

inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca826dee(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _98121_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _98136_fc, jule::Ptr<_1e5e08c13_Data>* ) {
	jule::Ptr<__jule_anon_1ca826dee_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ca826dee_ctx>();
	return _1e5d1b83a__Str(__jule_closure_ctx.alloc->_self_, _98121_e, _98136_fc);;
}

inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca828d79(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _98821_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _98836_fc, jule::Ptr<_1e5e08c13_Data>* ) {
	jule::Ptr<__jule_anon_1ca828d79_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ca828d79_ctx>();
	return _1e5d1c132__Bits(__jule_closure_ctx.alloc->_self_, _98821_e, _98836_fc);;
}

inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca82ad04(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _99521_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _99536_fc, jule::Ptr<_1e5e08c13_Data>* ) {
	jule::Ptr<__jule_anon_1ca82ad04_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ca82ad04_ctx>();
	return _1e5d1c52d__Elem(__jule_closure_ctx.alloc->_self_, _99521_e, _99536_fc);;
}

inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca82cc7e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _100221_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _100236_fc, jule::Ptr<_1e5e08c13_Data>* ) {
	jule::Ptr<__jule_anon_1ca82cc7e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ca82cc7e_ctx>();
	return _1e5d1c929__Size(__jule_closure_ctx.alloc->_self_, _100221_e, _100236_fc);;
}

inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca82ec09(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _100921_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _100936_fc, jule::Ptr<_1e5e08c13_Data>* ) {
	jule::Ptr<__jule_anon_1ca82ec09_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ca82ec09_ctx>();
	return _1e5d1cd25__Key(__jule_closure_ctx.alloc->_self_, _100921_e, _100936_fc);;
}

inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca831b84(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _101621_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _101636_fc, jule::Ptr<_1e5e08c13_Data>* ) {
	jule::Ptr<__jule_anon_1ca831b84_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ca831b84_ctx>();
	return _1e5d1d221__Value(__jule_closure_ctx.alloc->_self_, _101621_e, _101636_fc);;
}

inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca833b0e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _102321_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _102336_fc, jule::Ptr<_1e5e08c13_Data>* ) {
	jule::Ptr<__jule_anon_1ca833b0e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ca833b0e_ctx>();
	return _1e5d1d61c__Fields(__jule_closure_ctx.alloc->_self_, _102321_e, _102336_fc);;
}

inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca835bcc(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _103021_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _103036_fc, jule::Ptr<_1e5e08c13_Data>* ) {
	jule::Ptr<__jule_anon_1ca835bcc_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ca835bcc_ctx>();
	return _1e5d1da18__Statics(__jule_closure_ctx.alloc->_self_, _103021_e, _103036_fc);;
}

inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca837b57(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _103721_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _103736_fc, jule::Ptr<_1e5e08c13_Data>* ) {
	jule::Ptr<__jule_anon_1ca837b57_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ca837b57_ctx>();
	return _1e5d210e2__Params(__jule_closure_ctx.alloc->_self_, _103721_e, _103736_fc);;
}

inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca839ad2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _104421_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _104436_fc, jule::Ptr<_1e5e08c13_Data>* ) {
	jule::Ptr<__jule_anon_1ca839ad2_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ca839ad2_ctx>();
	return _1e5d20003__Types(__jule_closure_ctx.alloc->_self_, _104421_e, _104436_fc);;
}

inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca83ba5c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _105121_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _105136_fc, jule::Ptr<_1e5e08c13_Data>* ) {
	jule::Ptr<__jule_anon_1ca83ba5c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ca83ba5c_ctx>();
	return _1e5d1de14__Binded(__jule_closure_ctx.alloc->_self_, _105121_e, _105136_fc);;
}

inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca83d9d7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _105821_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _105836_fc, jule::Ptr<_1e5e08c13_Data>* ) {
	jule::Ptr<__jule_anon_1ca83d9d7_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ca83d9d7_ctx>();
	return _1e5d1e310__Ordered(__jule_closure_ctx.alloc->_self_, _105821_e, _105836_fc);;
}

inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca840962(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _106521_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _106536_fc, jule::Ptr<_1e5e08c13_Data>* ) {
	jule::Ptr<__jule_anon_1ca840962_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ca840962_ctx>();
	return _1e5d1e70b__Comparable(__jule_closure_ctx.alloc->_self_, _106521_e, _106536_fc);;
}

inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca8428dc(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _107221_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _107236_fc, jule::Ptr<_1e5e08c13_Data>* ) {
	jule::Ptr<__jule_anon_1ca8428dc_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ca8428dc_ctx>();
	return _1e5d1eb07__Mutable(__jule_closure_ctx.alloc->_self_, _107221_e, _107236_fc);;
}

inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca844867(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _107921_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _107936_fc, jule::Ptr<_1e5e08c13_Data>* ) {
	jule::Ptr<__jule_anon_1ca844867_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ca844867_ctx>();
	return _1e5d203ee__CanNil(__jule_closure_ctx.alloc->_self_, _107921_e, _107936_fc);;
}

inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca8467e2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _108621_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _108636_fc, jule::Ptr<_1e5e08c13_Data>* ) {
	jule::Ptr<__jule_anon_1ca8467e2_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ca8467e2_ctx>();
	return _1e5d207ea__GC(__jule_closure_ctx.alloc->_self_, _108621_e, _108636_fc);;
}

inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca84876c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _109321_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _109336_fc, jule::Ptr<_1e5e08c13_Data>* ) {
	jule::Ptr<__jule_anon_1ca84876c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ca84876c_ctx>();
	return _1e5d20be6__Result(__jule_closure_ctx.alloc->_self_, _109321_e, _109336_fc);;
}

inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca84a6e7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _110021_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _110036_fc, jule::Ptr<_1e5e08c13_Data>* ) {
	jule::Ptr<__jule_anon_1ca84a6e7_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ca84a6e7_ctx>();
	return _1e5d1bc36__Kind(__jule_closure_ctx.alloc->_self_, _110021_e, _110036_fc);;
}

inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca8769cb(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _126221_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _126236_fc, jule::Ptr<_1e5e08c13_Data>* ) {
	jule::Ptr<__jule_anon_1ca8769cb_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ca8769cb_ctx>();
	return _1e5d22467__Unwrap(__jule_closure_ctx.alloc->_self_, _126221_e, _126236_fc);;
}

inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca878956(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _126921_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _126936_fc, jule::Ptr<_1e5e08c13_Data>* ) {
	jule::Ptr<__jule_anon_1ca878956_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ca878956_ctx>();
	return _1e5d22863__Type(__jule_closure_ctx.alloc->_self_, _126921_e, _126936_fc);;
}

inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca87a8d1(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _127621_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _127636_fc, jule::Ptr<_1e5e08c13_Data>* ) {
	jule::Ptr<__jule_anon_1ca87a8d1_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ca87a8d1_ctx>();
	return _1e5d22c5e__Lvalue(__jule_closure_ctx.alloc->_self_, _127621_e, _127636_fc);;
}

inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca87c85b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _128321_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _128336_fc, jule::Ptr<_1e5e08c13_Data>* ) {
	jule::Ptr<__jule_anon_1ca87c85b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ca87c85b_ctx>();
	return _1e5d2315a__Mutable(__jule_closure_ctx.alloc->_self_, _128321_e, _128336_fc);;
}

inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca87e7d6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _129021_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _129036_fc, jule::Ptr<_1e5e08c13_Data>* ) {
	jule::Ptr<__jule_anon_1ca87e7d6_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ca87e7d6_ctx>();
	return _1e5d23556__Const(__jule_closure_ctx.alloc->_self_, _129021_e, _129036_fc);;
}

inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca881761(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _129721_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _129736_fc, jule::Ptr<_1e5e08c13_Data>* ) {
	jule::Ptr<__jule_anon_1ca881761_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ca881761_ctx>();
	return _1e5d23952__Field(__jule_closure_ctx.alloc->_self_, _129721_e, _129736_fc);;
}

inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca8836db(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _130421_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _130436_fc, jule::Ptr<_1e5e08c13_Data>* ) {
	jule::Ptr<__jule_anon_1ca8836db_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ca8836db_ctx>();
	return _1e5d23d4d__Method(__jule_closure_ctx.alloc->_self_, _130421_e, _130436_fc);;
}

inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca898404(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _142921_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _142936_fc, jule::Ptr<_1e5e08c13_Data>* ) {
	jule::Ptr<__jule_anon_1ca898404_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ca898404_ctx>();
	return _1e5d26aed__Path(__jule_closure_ctx.alloc->_self_, _142921_e, _142936_fc);;
}

inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca89a37e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _143621_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _143636_fc, jule::Ptr<_1e5e08c13_Data>* ) {
	jule::Ptr<__jule_anon_1ca89a37e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ca89a37e_ctx>();
	return _1e5d26ee9__Name(__jule_closure_ctx.alloc->_self_, _143621_e, _143636_fc);;
}

inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca89c309(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _144321_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _144336_fc, jule::Ptr<_1e5e08c13_Data>* ) {
	jule::Ptr<__jule_anon_1ca89c309_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ca89c309_ctx>();
	return _1e5d273e5__Dir(__jule_closure_ctx.alloc->_self_, _144321_e, _144336_fc);;
}

inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca913b34(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _194921_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _194936_fc, jule::Ptr<_1e5e08c13_Data>* ) {
	jule::Ptr<__jule_anon_1ca913b34_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ca913b34_ctx>();
	return _1e5d2ad44__Name(__jule_closure_ctx.alloc->_self_, _194921_e, _194936_fc);;
}

inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca915aae(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _195621_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _195636_fc, jule::Ptr<_1e5e08c13_Data>* ) {
	jule::Ptr<__jule_anon_1ca915aae_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ca915aae_ctx>();
	return _1e5d2b240__Public(__jule_closure_ctx.alloc->_self_, _195621_e, _195636_fc);;
}

inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca917a39(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _196321_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _196336_fc, jule::Ptr<_1e5e08c13_Data>* ) {
	jule::Ptr<__jule_anon_1ca917a39_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ca917a39_ctx>();
	return _1e5d2b63b__Binded(__jule_closure_ctx.alloc->_self_, _196321_e, _196336_fc);;
}

inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca9199b4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _197021_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _197036_fc, jule::Ptr<_1e5e08c13_Data>* ) {
	jule::Ptr<__jule_anon_1ca9199b4_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ca9199b4_ctx>();
	return _1e5d2ba37__Exceptional(__jule_closure_ctx.alloc->_self_, _197021_e, _197036_fc);;
}

inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca91b93e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _197721_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _197736_fc, jule::Ptr<_1e5e08c13_Data>* ) {
	jule::Ptr<__jule_anon_1ca91b93e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ca91b93e_ctx>();
	return _1e5d2be33__Mutable(__jule_closure_ctx.alloc->_self_, _197721_e, _197736_fc);;
}

inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca91d8b9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _198421_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _198436_fc, jule::Ptr<_1e5e08c13_Data>* ) {
	jule::Ptr<__jule_anon_1ca91d8b9_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ca91d8b9_ctx>();
	return _1e5d2c32e__Variadic(__jule_closure_ctx.alloc->_self_, _198421_e, _198436_fc);;
}

inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca920844(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _199121_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _199136_fc, jule::Ptr<_1e5e08c13_Data>* ) {
	jule::Ptr<__jule_anon_1ca920844_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ca920844_ctx>();
	return _1e5d2c72a__Reference(__jule_closure_ctx.alloc->_self_, _199121_e, _199136_fc);;
}

inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca9227be(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _199821_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _199836_fc, jule::Ptr<_1e5e08c13_Data>* ) {
	jule::Ptr<__jule_anon_1ca9227be_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ca9227be_ctx>();
	return _1e5d2cb26__Params(__jule_closure_ctx.alloc->_self_, _199821_e, _199836_fc);;
}

inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca92488c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _200521_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _200536_fc, jule::Ptr<_1e5e08c13_Data>* ) {
	jule::Ptr<__jule_anon_1ca92488c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ca92488c_ctx>();
	return _1e5d2d022__Fields(__jule_closure_ctx.alloc->_self_, _200521_e, _200536_fc);;
}

inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca926817(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _201221_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _201236_fc, jule::Ptr<_1e5e08c13_Data>* ) {
	jule::Ptr<__jule_anon_1ca926817_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ca926817_ctx>();
	return _1e5d2d41d__Statics(__jule_closure_ctx.alloc->_self_, _201221_e, _201236_fc);;
}

inline jule::Ptr<_1e5e08c13_Data> __jule_anon_1ca928792(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e0a93a_eval>* _201921_e, jule::Ptr<_1e5cad0e5_FnCallExpr>* _201936_fc, jule::Ptr<_1e5e08c13_Data>* ) {
	jule::Ptr<__jule_anon_1ca928792_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ca928792_ctx>();
	return _1e5d2d819__Methods(__jule_closure_ctx.alloc->_self_, _201921_e, _201936_fc);;
}

inline jule::Bool __jule_anon_1ca934a67(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5d7b768_sema>* _6415_sema, jule::Slice<jule::Ptr<_1e5e40a08_TypeAlias>>* _6433_generics) {
	jule::Ptr<__jule_anon_1ca934a67_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ca934a67_ctx>();
	{
		auto expr = &((*__jule_closure_ctx.alloc->_self_.alloc)._field_genericsD);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca935b23:;
		if (it != expr_end) {
			jule::I64 _659_i = it - expr->begin();
			jule::Ptr<_1e5cb2292_GenericDecl> _6516_g = *it;
			{
				jule::Ptr<_1e5e3ee14_InsGeneric> _669_generic = (*(__jule_closure_ctx.alloc->_self_))._field_generics[_659_i];;
				if ((((*(_6516_g))._field_Constraint == nullptr) || ((*((*_6516_g.alloc)._field_Constraint))._field_Mask.len() == 0LL))) {
					goto _iter_next_1ca935b23;
				};
				(*(_669_generic))._field_Constraint=({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5e417ea_TypeKind>>::alloc(0LL, (*((*_6516_g.alloc)._field_Constraint))._field_Mask.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1e5e417ea_TypeKind>(nullptr); __jule_collection; });
				{
					auto expr = &((*((*_6516_g.alloc)._field_Constraint))._field_Mask);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ca9388b2:;
					if (it != expr_end) {
						jule::Ptr<_1e5ca5087_TypeDecl> _7117_mask = *it;
						{
							jule::I64 _726_n = (*((*(_6415_sema))))._field_errors.len();;
							jule::Ptr<_1e5e417ea_TypeKind> _7310_kind = _1e5d845ea_buildTypeWithRefers((*(_6415_sema)), &(_7117_mask), jule::Trait((*(_6415_sema)), (jule::Trait::Type*)&_1e5e61e9c_Lookup_mptr_data3), (*(_6433_generics)), nullptr);;
							if ((_7310_kind == nullptr)) {
								{
									auto &_match_expr{ (*(_7117_mask))._field_Kind };
									
									if (_match_expr.type == &__jule_any_type77) {
										_case_begin_1ca93a71b:;
										{
											jule::Ptr<_1e5ca5692_IdentTypeDecl> _7712_itd = (*(_7117_mask))._field_Kind.unsafe_cast_ptr<_1e5ca5692_IdentTypeDecl>();;
											if ((((*(_7712_itd))._field_Generics.len() == 0LL) && _1e5d33335_isBuiltinConstraint(&((*_7712_itd.alloc)._field_Ident)))) {
												_7310_kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1e5e5e164_buildPrimType((*_7712_itd.alloc)._field_Ident), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data22)});
												((*((*(_6415_sema))))._field_errors).mut_slice(0LL, _726_n);;
												goto _julec_label_1ca93ae25;
											};
										}
									}
									_match_end_1ca93a694:;
								};
								return false;;
							};
							_julec_label_1ca93ae25:;
							(*_669_generic.alloc)._field_Constraint=jule::append((*_669_generic.alloc)._field_Constraint,({ auto __jule_collection = jule::Slice<jule::Ptr<_1e5e417ea_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7310_kind; __jule_collection; }));
						}
						_iter_next_1ca9388b2:;
						++it;
						goto _iter_begin_1ca9388b2;
					}
					_iter_end_1ca9388b2:;
				};
			}
			_iter_next_1ca935b23:;
			++it;
			_659_i++;
			goto _iter_begin_1ca935b23;
		}
		_iter_end_1ca935b23:;
	};
	return true;;
}

inline jule::Bool __jule_anon_1cac61646(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5d7b768_sema>* _103742_sema) {
	jule::Ptr<__jule_anon_1cac61646_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1cac61646_ctx>();
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(__jule_closure_ctx.alloc->_103047_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cac62647:;
		if (it != expr_end) {
			jule::Ptr<_1e5ce22b1_ParamIns> _103916_p = *it;
			{
				if ((!(_1e5cdded3_IsSelf((*(_103916_p))._field_Decl.ptr())))) {
					(*_103916_p.alloc)._field_Kind=_1e5d88ec3_buildNonGenericTypeKind((*(_103742_sema)), &((*((*(*(_103916_p))._field_Decl.alloc)._field_Kind))._field_Decl), &(__jule_closure_ctx.alloc->_103111_generics), __jule_closure_ctx.alloc->_103063_ignored);
					__jule_func_result=(__jule_func_result && ((*_103916_p.alloc)._field_Kind != nullptr));
				};
			}
			_iter_next_1cac62647:;
			++it;
			goto _iter_begin_1cac62647;
		}
		_iter_end_1cac62647:;
	};
	if ((!(_1e5ce080e_IsVoid((*__jule_closure_ctx.alloc->_103047_f.alloc)._field_Decl.ptr())))) {
		(*__jule_closure_ctx.alloc->_103047_f.alloc)._field_Result=_1e5d88ec3_buildNonGenericTypeKind((*(_103742_sema)), &((*((*((*(*(__jule_closure_ctx.alloc->_103047_f))._field_Decl.alloc)._field_Result))._field_Kind))._field_Decl), &(__jule_closure_ctx.alloc->_103111_generics), __jule_closure_ctx.alloc->_103063_ignored);
		__jule_func_result=(__jule_func_result && ((*__jule_closure_ctx.alloc->_103047_f.alloc)._field_Result != nullptr));
	};
	return __jule_func_result;;
}

inline jule::Bool __jule_anon_1cac7961a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5d7b768_sema>* _114042_sema) {
	jule::Ptr<__jule_anon_1cac7961a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1cac7961a_ctx>();
	return __jule_closure_ctx.alloc->_113346_algo(_114042_sema, &(__jule_closure_ctx.alloc->_11387_generics));;
}

inline jule::Bool __jule_anon_1cac7de05(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5d7b768_sema>* _115637_sema, jule::Slice<jule::Ptr<_1e5e40a08_TypeAlias>>* _115655_generics) {
	jule::Ptr<__jule_anon_1cac7de05_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1cac7de05_ctx>();
	jule::Bool _11578_ok = true;;
	{
		auto expr = &((*__jule_closure_ctx.alloc->_115237_f.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cac8039b:;
		if (it != expr_end) {
			jule::Ptr<_1e5ce22b1_ParamIns> _115816_p = *it;
			{
				if (_1e5cdded3_IsSelf((*(_115816_p))._field_Decl.ptr())) {
					if (((*__jule_closure_ctx.alloc->_115237_f.alloc)._field_Owner == nullptr)) {
						goto _iter_next_1cac8039b;
					};
					if (_1e5cde269_IsRef((*(_115816_p))._field_Decl)) {
						(*_115816_p.alloc)._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1e5e4d43e_Sptr>(_1e5e4d43e_Sptr{._field_Elem=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*__jule_closure_ctx.alloc->_115237_f.alloc)._field_Owner, (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data0)})}), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data23)});
					} else {
						(*_115816_p.alloc)._field_Kind=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*__jule_closure_ctx.alloc->_115237_f.alloc)._field_Owner, (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data0)});
					};
				} else {
					(*(_115816_p))._field_Kind=_1e5d85c4a_buildTypeWithGenerics((*(_115637_sema)), &((*((*((*_115816_p.alloc)._field_Decl))._field_Kind))._field_Decl), (*(_115655_generics)), (*__jule_closure_ctx.alloc->_115237_f.alloc)._field_Refers);
					if (((*_115816_p.alloc)._field_Kind != nullptr)) {
						_1e5d8ac1c_checkFnParamKind(__jule_closure_ctx.alloc->_self_, &(_115816_p));
					} else {
						_11578_ok=false;
					};
				};
			}
			_iter_next_1cac8039b:;
			++it;
			goto _iter_begin_1cac8039b;
		}
		_iter_end_1cac8039b:;
	};
	if ((!(_1e5ce080e_IsVoid((*__jule_closure_ctx.alloc->_115237_f.alloc)._field_Decl.ptr())))) {
		(*__jule_closure_ctx.alloc->_115237_f.alloc)._field_Result=_1e5d85c4a_buildTypeWithGenerics((*(_115637_sema)), &((*((*((*(*(__jule_closure_ctx.alloc->_115237_f))._field_Decl.alloc)._field_Result))._field_Kind))._field_Decl), (*(_115655_generics)), (*__jule_closure_ctx.alloc->_115237_f.alloc)._field_Refers);
		_11578_ok=(((*__jule_closure_ctx.alloc->_115237_f.alloc)._field_Result != nullptr) && _11578_ok);
	};
	return _11578_ok;;
}

inline jule::Bool __jule_anon_1cb43c6b2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5d5b2e7_ImportInfo> _191843_imp) {
	jule::Ptr<__jule_anon_1cb43c6b2_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1cb43c6b2_ctx>();
	if ((((*__jule_closure_ctx.alloc->_191635_s.alloc)._field_Ns.len() == 1LL) && ((*(_191843_imp))._field_Alias == __jule_closure_ctx.alloc->_19173_path))) {
		return true;;
	};
	return (((*_191843_imp.alloc)._field_LinkPath == __jule_closure_ctx.alloc->_19173_path) && _1e5d5de43_isAccessibleViaSelection(_191843_imp));;
}

inline jule::Str __jule_anon1cb76a061(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _87319_def) {
	{
		auto &_match_expr{ (*(_87319_def)) };
		
		if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1cb76b161:;
			{
				return (*((*(_87319_def)).cast_ptr<_1e5e40a08_TypeAlias>(&__jule_any_type27)))._field_Ident;;
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1cb76ae85:;
			{
				return (*((*(_87319_def)).cast_ptr<_1e5cc5e21_Struct>(&__jule_any_type23)))._field_Ident;;
			}
		}
		else {
			_case_begin_1cb76aa45:;
			{
				return jule::Str();;
			}
		}
		_match_end_1cb76a9ce:;
	};
}

inline jule::Bool __jule_anon_1cb7eecb6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5d5b2e7_ImportInfo> _156043_imp) {
	jule::Ptr<__jule_anon_1cb7eecb6_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1cb7eecb6_ctx>();
	if ((((*__jule_closure_ctx.alloc->_155836_decl.alloc)._field_Idents.len() == 1LL) && ((*(_156043_imp))._field_Alias == __jule_closure_ctx.alloc->_15593_path))) {
		return true;;
	};
	return (((*_156043_imp.alloc)._field_LinkPath == __jule_closure_ctx.alloc->_15593_path) && _1e5d5de43_isAccessibleViaSelection(_156043_imp));;
}

inline void __jule_anon_1cbeabd8a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e03548_SymbolTable>* _22131_file) {
	jule::Ptr<__jule_anon_1cbeabd8a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1cbeabd8a_ctx>();
	{
		auto expr = &((*((*(_22131_file))))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbeac808:;
		if (it != expr_end) {
			jule::Ptr<_1e5da0bcc_Var> _22216_v = *it;
			{
				if (_1e6a0bcdd_HasDirective(&((*(_22216_v))._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6)))) {
					if ((!(_1cbea2a2e_isLive(__jule_closure_ctx.alloc->_self_, &(_22216_v))))) {
						_1cbea2dd6_pushLive(__jule_closure_ctx.alloc->_self_, _22216_v);
						_1c7edd343_setReferencesAsLive(__jule_closure_ctx.alloc->_self_, &((*_22216_v.alloc)._field_Refers));
					};
				};
			}
			_iter_next_1cbeac808:;
			++it;
			goto _iter_begin_1cbeac808;
		}
		_iter_end_1cbeac808:;
	};
	{
		auto expr = &((*((*(_22131_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cbeae992:;
		if (it != expr_end) {
			jule::Ptr<_1e5ce0358_Fn> _23016_f = *it;
			{
				if (_1e6a0bcdd_HasDirective(&((*(_23016_f))._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6)))) {
					{
						auto expr = &((*_23016_f.alloc)._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1cbeb0289:;
						if (it != expr_end) {
							jule::Ptr<_1e5ce3416_FnIns> _23218_ins = *it;
							{
								if ((!(_1cbe70bc8_isLive(__jule_closure_ctx.alloc->_self_, &(_23218_ins))))) {
									_1cbe710d5_pushLive(__jule_closure_ctx.alloc->_self_, _23218_ins);
									_1c7edd343_setReferencesAsLive(__jule_closure_ctx.alloc->_self_, &((*(_23218_ins))._field_Refers));
								};
							}
							_iter_next_1cbeb0289:;
							++it;
							goto _iter_begin_1cbeb0289;
						}
						_iter_end_1cbeb0289:;
					};
				};
			}
			_iter_next_1cbeae992:;
			++it;
			goto _iter_begin_1cbeae992;
		}
		_iter_end_1cbeae992:;
	};
}

inline void __jule_anon_1cc014e59(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _2636_expr) {
	jule::Ptr<__jule_anon_1cc014e59_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1cc014e59_ctx>();
	{
		auto &_match_expr{ (*(_2636_expr)) };
		
		if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1cc0158a5:;
			{
				jule::Ptr<_1e5cd4d31_FnCallExprModel> _299_m = (*(_2636_expr)).cast_ptr<_1e5cd4d31_FnCallExprModel>(&__jule_any_type40);;
				if (((*(_299_m))._field_Except != nullptr)) {
					{
						_1c7ee1a94_optimizeBodyChildExceptional((*(__jule_closure_ctx.alloc->_self_))._field_s, &((*_299_m.alloc)._field_Except));
					};
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1cc0156eb:;
			{
				jule::Ptr<_1e5cd5b67_AnonFnExprModel> _349_m = (*(_2636_expr)).cast_ptr<_1e5cd5b67_AnonFnExprModel>(&__jule_any_type102);;
				_1c7ee4503_eliminateDeadCodeOfScope((*((*(_349_m))._field_Func))._field_Scope);
			}
		}
		_match_end_1cc01582d:;
	};
}

inline void __jule_anon_1cc1bbd14(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _56447_m) {
	jule::Ptr<__jule_anon_1cc1bbd14_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1cc1bbd14_ctx>();
	{
		(*(__jule_closure_ctx.alloc->_self_))._field_model=((jule::Ptr<jule::Any>)(_56447_m));
	};
	{
		auto &_match_expr{ (*(_56447_m)) };
		
		if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1cc1bc694:;
			{
				{
					_1e6a19504_binary(__jule_closure_ctx.alloc->_self_, (*(_56447_m)).cast_ptr<_1e5cd2d51_BinaryExprModel>(&__jule_any_type113));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1cc1bc8e7:;
			{
				{
					_1e6a197ac_unary(__jule_closure_ctx.alloc->_self_, (*(_56447_m)).cast_ptr<_1e5cd322a_UnaryExprModel>(&__jule_any_type112));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1cc1bc70a:;
			{
				{
					_1e6a19a65_structureLit(__jule_closure_ctx.alloc->_self_, (*(_56447_m)).cast_ptr<_1e5cd3aee_StructLitExprModel>(&__jule_any_type97));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1cc1bc771:;
			{
				{
					_1e6a19d1d_casting(__jule_closure_ctx.alloc->_self_, (*(_56447_m)).cast_ptr<_1e5cd447e_CastingExprModel>(&__jule_any_type95));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1cc1bc7d7:;
			{
				{
					_1e6a1a6e2_funcCall(__jule_closure_ctx.alloc->_self_, (*(_56447_m)).cast_ptr<_1e5cd4d31_FnCallExprModel>(&__jule_any_type40));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1cc1bd101:;
			{
				{
					_1e6a1a99a_indexing(__jule_closure_ctx.alloc->_self_, (*(_56447_m)).cast_ptr<_1e5cd56b1_IndexingExprModel>(&__jule_any_type52));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1cc1bd167:;
			{
				{
					_1e6a1ac53_anonFunc(__jule_closure_ctx.alloc->_self_, (*(_56447_m)).cast_ptr<_1e5cd5b67_AnonFnExprModel>(&__jule_any_type102));
				};
			}
		}
		_match_end_1cc1bc595:;
	};
}

inline void __jule_anon_1cc39cdb3(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1cc39cdb3_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1cc39cdb3_ctx>();
	if (__jule_closure_ctx.alloc->_1377_ref) {
		_1c8a7e147_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it - expr->begin()", 18));
	} else {
		_1c8a7e147_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it - expr.begin()", 17));
	};
}

inline void __jule_anon_1cc3a18bc(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1cc3a18bc_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1cc3a18bc_ctx>();
	{
		if ((*(*((*(__jule_closure_ctx.alloc->_12936_it))))._field_KeyB.alloc)._field_Reference) {
			_1c8a7e147_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it", 2));
		} else {
			_1c8a7e147_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("*it", 3));
		};
	};
}

inline void __jule_anon_1cc3c1ea3(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1cc3c1ea3_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1cc3c1ea3_ctx>();
	_1c8a7e147_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("*__iterator_result.__jule_result_arg0", 37));
}

inline void __jule_anon_1cc3c448e(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1cc3c448e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1cc3c448e_ctx>();
	_1c8a7e147_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("*__iterator_result.__jule_result_arg1", 37));
}

inline void __jule_anon_1cc3dd453(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1cc3dd453_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1cc3dd453_ctx>();
	_1c8a7e147_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("0", 1));
}

inline void __jule_anon_1cc47ce71(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1cc47ce71_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1cc47ce71_ctx>();
	_1c8a7e147_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("_match_expr", 11));
}

inline void __jule_anon_1cc47e2a2(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1cc47e2a2_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1cc47e2a2_ctx>();
	_1c89a93c4_possibleRefExpr((*(*(__jule_closure_ctx.alloc->_self_))._field_oc.alloc)._field_ec, (*(*(__jule_closure_ctx.alloc->_77630_m))._field_Expr.alloc)._field_Model);
}

inline jule::Bool __jule_anon_1cc4eeb6e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5da0bcc_Var> _115267_v) {
	jule::Ptr<__jule_anon_1cc4eeb6e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1cc4eeb6e_ctx>();
	return _1c89a219c_captureVarHandling(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_oc), &(__jule_closure_ctx.alloc->_114634_m), &(_115267_v));;
}

inline void __jule_anon_1cc8906a2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5d5e21d_Package>* _88638_pkg) {
	jule::Ptr<__jule_anon_1cc8906a2_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1cc8906a2_ctx>();
	_1e6a06777_IterFiles(_88638_pkg, jule::__new_closure<void,jule::Ptr<_1e5e03548_SymbolTable>*>((void*)__jule_anon_1cc8915b5, jule::Ptr<__jule_anon_1cc8915b5_ctx>::make(__jule_anon_1cc8915b5_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1cc8915b5_ctx_handler));
}

inline void __jule_anon_1cc891b7b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5ce0358_Fn>* _89936_m) {
	jule::Ptr<__jule_anon_1cc891b7b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1cc891b7b_ctx>();
	jule::Ptr<_1e5ce3416_FnIns> _9008_ins = (*((*(_89936_m))))._field_Instances[0LL];;
	{
		auto expr = (*(_9008_ins))._field_Params.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1cc894d49:;
		if (it != expr_end) {
			jule::I64 _9019_i = it - expr.begin();
			jule::Ptr<_1e5ce22b1_ParamIns> _90116_ip = *it;
			{
				if (_1e5c9277d_IsAnonIdent((*((*(_90116_ip))._field_Decl))._field_Ident)) {
					(*(*(_90116_ip))._field_Decl.alloc)._field_Ident=(jule::Str::lit("_", 1) + _1e2195e4e_Itoa(_9019_i));
				};
			}
			_iter_next_1cc894d49:;
			++it;
			_9019_i++;
			goto _iter_begin_1cc894d49;
		}
		_iter_end_1cc894d49:;
	};
	_1c8a811b0_pushResult(__jule_closure_ctx.alloc->_self_, _89936_m);
	_1c8a84d95_funcDeclTrait(__jule_closure_ctx.alloc->_self_, _89936_m);
}

inline void __jule_anon_1cc8972e1(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5d5e21d_Package>* _91238_pkg) {
	jule::Ptr<__jule_anon_1cc8972e1_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1cc8972e1_ctx>();
	_1e6a06777_IterFiles(_91238_pkg, jule::__new_closure<void,jule::Ptr<_1e5e03548_SymbolTable>*>((void*)__jule_anon_1cc898204, jule::Ptr<__jule_anon_1cc898204_ctx>::make(__jule_anon_1cc898204_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1cc898204_ctx_handler));
}

inline void __jule_anon_1cc8a7994(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1cc8a7994_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1cc8a7994_ctx>();
	_1c8a7e147_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("&(", 2));
	_1c89b3477_model((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*((*(__jule_closure_ctx.alloc->_97924_v))._field_Value))._field_Data.alloc)._field_Model);
	_1c8a7e147_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit(")", 1));
}

inline void __jule_anon_1cc8a9a84(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1cc8a9a84_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1cc8a9a84_ctx>();
	_1c89a93c4_possibleRefExpr((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*((*(__jule_closure_ctx.alloc->_97924_v))._field_Value))._field_Data.alloc)._field_Model);
}

inline void __jule_anon_1cc8ac290(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1cc8ac290_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1cc8ac290_ctx>();
	_1c8a7e147_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("nullptr", 7));
}

inline void __jule_anon_1cc8ad439(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1cc8ad439_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1cc8ad439_ctx>();
	_1c89b4643_initExpr((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*(__jule_closure_ctx.alloc->_97924_v))._field_Kind.alloc)._field_Kind);
}

inline void __jule_anon_1cc8cb600(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5d5e21d_Package>* _112238_pkg) {
	jule::Ptr<__jule_anon_1cc8cb600_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1cc8cb600_ctx>();
	_1e6a06777_IterFiles(_112238_pkg, jule::__new_closure<void,jule::Ptr<_1e5e03548_SymbolTable>*>((void*)__jule_anon_1cc8cc502, jule::Ptr<__jule_anon_1cc8cc502_ctx>::make(__jule_anon_1cc8cc502_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1cc8cc502_ctx_handler));
}

inline void __jule_anon_1cc8cc975(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5ce0358_Fn>* _113736_m) {
	jule::Ptr<__jule_anon_1cc8cc975_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1cc8cc975_ctx>();
	_1c8a7e9e9_indent(__jule_closure_ctx.alloc->_self_);
	_1c8a7e147_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit(".", 1));
	static__1c89bb5b2_func(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_Buf), _113736_m);
	_1c8a7e147_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("=__jule_trait_method_", 21));
	jule::Ptr<_1e5ce3416_FnIns> _11424_mepf;
	jule::Bool _114210_exist;
	({
		__jule_tuple_x_1e5ce3416_FnIns__jule_tuple_bool __jule_assign_result = _1c8a877d2_findTraitMetMap(__jule_closure_ctx.alloc->_self_, _113736_m);
		_11424_mepf = __jule_assign_result.__jule_result_arg0;
		_114210_exist = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_114210_exist))) {
		__jule_panic_s(jule::Str::lit("implementation mistake, [traitDataMethods] could not found MepMap record", 72) + jule::Str("\nlocation: julec/obj/cxx/object.jule:1144:5"));;
	};
	_1c8a7e147_write(__jule_closure_ctx.alloc->_self_, _1e21957bc_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_11424_mepf)), 15LL));
	_1c8a7e147_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("_", 1));
	_1c8a7e147_write(__jule_closure_ctx.alloc->_self_, _1e21957bc_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(__jule_closure_ctx.alloc->_113649_s)), 15LL));
	_1c8a7e147_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit(",\n", 2));
}

inline void __jule_anon_1cc8da301(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5d5e21d_Package>* _117438_pkg) {
	jule::Ptr<__jule_anon_1cc8da301_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1cc8da301_ctx>();
	_1e6a06777_IterFiles(_117438_pkg, jule::__new_closure<void,jule::Ptr<_1e5e03548_SymbolTable>*>((void*)__jule_anon_1cc8db214, jule::Ptr<__jule_anon_1cc8db214_ctx>::make(__jule_anon_1cc8db214_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1cc8db214_ctx_handler));
}

inline void __jule_anon_1cc8ea92c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5d5e21d_Package>* _124638_pkg) {
	jule::Ptr<__jule_anon_1cc8ea92c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1cc8ea92c_ctx>();
	_1e6a06777_IterFiles(_124638_pkg, jule::__new_closure<void,jule::Ptr<_1e5e03548_SymbolTable>*>((void*)__jule_anon_1cc8eb840, jule::Ptr<__jule_anon_1cc8eb840_ctx>::make(__jule_anon_1cc8eb840_ctx{._124638_pkg=_124638_pkg,._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1cc8eb840_ctx_handler));
}

inline void __jule_anon_1cc8ebe06(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e03548_SymbolTable>* _126931_file) {
	jule::Ptr<__jule_anon_1cc8ebe06_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1cc8ebe06_ctx>();
	{
		auto expr = &((*((*(_126931_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc90115d:;
		if (it != expr_end) {
			jule::Ptr<_1e5ce0358_Fn> _127016_f = *it;
			{
				if ((*(_127016_f))._field_Ident.equal("init", 4)) {
					_1c8a7e9e9_indent(__jule_closure_ctx.alloc->_self_);
					static__1c89bb5b2_func(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_Buf), &(_127016_f));
					_1c8a7e147_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("();\n", 4));
				};
			}
			_iter_next_1cc90115d:;
			++it;
			goto _iter_begin_1cc90115d;
		}
		_iter_end_1cc90115d:;
	};
}

inline void __jule_anon_1cc908297(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5d5e21d_Package>* _130838_pkg) {
	jule::Ptr<__jule_anon_1cc908297_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1cc908297_ctx>();
	_1c8a89b8b_pushInit(__jule_closure_ctx.alloc->_self_, _130838_pkg);
}

inline __jule_tuple_i64__jule_tuple_bool __jule_anon1cc995ce6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _22856_s, jule::I64 _22864_base) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0 = ({
		auto except = _1e21845d0_ParseInt(_22856_s, _22864_base, 64LL);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} 0;});
	});
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool __jule_anon1cc99d958(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _23657_s, jule::I64 _23665_base) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0 = ({
		auto except = _1e2184129_ParseUint(_23657_s, _23665_base, 64LL);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = 0LLU;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} 0;});
	});
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}

inline jule::Bool __jule_anon1ca72389a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5d5b2e7_ImportInfo> _203925_pkg) {
	return (*(_203925_pkg))._field_LinkPath.equal("std::comptime", 13);;
}

inline void __jule_anon_1cc8915b5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e03548_SymbolTable>* _88732_file) {
	jule::Ptr<__jule_anon_1cc8915b5_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1cc8915b5_ctx>();
	{
		auto expr = &((*((*(_88732_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc892044:;
		if (it != expr_end) {
			jule::Ptr<_1e5ce0358_Fn> _88817_f = *it;
			{
				if (((!((*(_88817_f))._field_Binded)) && ((*_88817_f.alloc)._field_Token != nullptr))) {
					_1c8a811b0_pushResult(__jule_closure_ctx.alloc->_self_, &(_88817_f));
					_1c8a84adc_funcDecl(__jule_closure_ctx.alloc->_self_, &(_88817_f), false);
				};
			}
			_iter_next_1cc892044:;
			++it;
			goto _iter_begin_1cc892044;
		}
		_iter_end_1cc892044:;
	};
}

inline void __jule_anon_1cc898204(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e03548_SymbolTable>* _91332_file) {
	jule::Ptr<__jule_anon_1cc898204_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1cc898204_ctx>();
	{
		auto expr = &((*((*(_91332_file))))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc898b83:;
		if (it != expr_end) {
			jule::Ptr<_1e5d03db6_Trait> _91417_t = *it;
			{
				if (((*(_91417_t))._field_Token == nullptr)) {
					goto _iter_next_1cc898b83;
				};
				_1c8a7e147_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("struct ", 7));
				static__1c89bbb89_traitDecl(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_Buf), _91417_t);
				_1c8a7e147_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("MptrData", 8));
				_1c8a7e147_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit(" {\n", 3));
				_1c8a7e5ed_addIndent(__jule_closure_ctx.alloc->_self_);
				_1c8a7e9e9_indent(__jule_closure_ctx.alloc->_self_);
				_1c8a7e147_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("void (*dealloc)(jule::Ptr<jule::Uintptr>&);\n", 44));
				_1c8a8534b_traitDataTypeMethods(__jule_closure_ctx.alloc->_self_, &(_91417_t));
				_1c8a7e7eb_doneIndent(__jule_closure_ctx.alloc->_self_);
				_1c8a7e9e9_indent(__jule_closure_ctx.alloc->_self_);
				_1c8a7e147_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("};\n\n", 4));
			}
			_iter_next_1cc898b83:;
			++it;
			goto _iter_begin_1cc898b83;
		}
		_iter_end_1cc898b83:;
	};
}

inline void __jule_anon_1cc8cc502(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e03548_SymbolTable>* _112332_file) {
	jule::Ptr<__jule_anon_1cc8cc502_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1cc8cc502_ctx>();
	{
		auto expr = &((*((*(_112332_file))))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc8cce81:;
		if (it != expr_end) {
			jule::Ptr<_1e5d03db6_Trait> _112417_t = *it;
			{
				if (((*(_112417_t))._field_Implemented.len() == 0LL)) {
					goto _iter_next_1cc8cce81;
				};
				_1e6a072e4_IterTraitMethods(&(_112417_t), jule::__new_closure<void,jule::Ptr<_1e5ce0358_Fn>*>((void*)__jule_anon_1cc8ce4e3, jule::Ptr<__jule_anon_1cc8ce4e3_ctx>::make(__jule_anon_1cc8ce4e3_ctx{._self_=__jule_closure_ctx.alloc->_self_,._112417_t=_112417_t}).as<jule::Uintptr>(), __jule_anon_1cc8ce4e3_ctx_handler));
			}
			_iter_next_1cc8cce81:;
			++it;
			goto _iter_begin_1cc8cce81;
		}
		_iter_end_1cc8cce81:;
	};
}

inline void __jule_anon_1cc8db214(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e03548_SymbolTable>* _117532_file) {
	jule::Ptr<__jule_anon_1cc8db214_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1cc8db214_ctx>();
	{
		auto expr = &((*((*(_117532_file))))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc8dbb93:;
		if (it != expr_end) {
			jule::Ptr<_1e5d03db6_Trait> _117617_t = *it;
			{
				jule::I64 _117710_i = 0LL;;
				{
					auto expr = &((*(_117617_t))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cc8dc9c9:;
					if (it != expr_end) {
						jule::Ptr<_1e5cc5e21_Struct> _117818_s = *it;
						{
							{
								auto expr = &((*(_117818_s))._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1cc8dd37b:;
								if (it != expr_end) {
									jule::Ptr<_1e5cc8c7b_StructIns> _117919_ins = *it;
									{
										_1c8a885c4_traitData(__jule_closure_ctx.alloc->_self_, &(_117617_t), _117710_i, &(_117919_ins));
										(_117710_i)++;
									}
									_iter_next_1cc8dd37b:;
									++it;
									goto _iter_begin_1cc8dd37b;
								}
								_iter_end_1cc8dd37b:;
							};
						}
						_iter_next_1cc8dc9c9:;
						++it;
						goto _iter_begin_1cc8dc9c9;
					}
					_iter_end_1cc8dc9c9:;
				};
			}
			_iter_next_1cc8dbb93:;
			++it;
			goto _iter_begin_1cc8dbb93;
		}
		_iter_end_1cc8dbb93:;
	};
}

inline void __jule_anon_1cc8eb840(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5e03548_SymbolTable>* _124732_file) {
	jule::Ptr<__jule_anon_1cc8eb840_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1cc8eb840_ctx>();
	{
		auto expr = &((*((*(_124732_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cc8ec2be:;
		if (it != expr_end) {
			jule::Ptr<_1e5ce0358_Fn> _124817_f = *it;
			{
				if (((!(_22586bb30_Test)) && _1e6a0bcdd_HasDirective(&((*(_124817_f))._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4))))) {
					goto _iter_next_1cc8ec2be;
				};
				if (((*(__jule_closure_ctx.alloc->_124638_pkg)) == (*((*((*__jule_closure_ctx.alloc->_self_.alloc)._field_ir))._field_Runtime))._field_Package)) {
					{
						auto &_match_expr{ (*(_124817_f))._field_Ident };
						
						if (_match_expr == jule::Str::lit("_RCAdd", 6) || _match_expr == jule::Str::lit("_RCLoad", 7) || _match_expr == jule::Str::lit("_RCDrop", 7)) {
							_case_begin_1cc8edc0a:;
							{
								goto _iter_next_1cc8ec2be;
							}
						}
						_match_end_1cc8edb50:;
					};
				};
				if (((!((*_124817_f.alloc)._field_Binded)) && ((*_124817_f.alloc)._field_Token != nullptr))) {
					_1c8a8712d_func(__jule_closure_ctx.alloc->_self_, &(_124817_f));
					_1c8a7e147_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("\n\n", 2));
				};
			}
			_iter_next_1cc8ec2be:;
			++it;
			goto _iter_begin_1cc8ec2be;
		}
		_iter_end_1cc8ec2be:;
	};
}

inline void __jule_anon_1cc8ce4e3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1e5ce0358_Fn>* _112839_m) {
	jule::Ptr<__jule_anon_1cc8ce4e3_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1cc8ce4e3_ctx>();
	_1c8a87b45_traitWrapper(__jule_closure_ctx.alloc->_self_, &(__jule_closure_ctx.alloc->_112417_t), _112839_m);
}

inline void __jule_RCAdd(jule::U64* _5722_p) {
	(*(_5722_p))+=1LLU;
}

inline jule::U64 __jule_RCLoad(jule::U64* _4019_p) {
	return (*(_4019_p));;
}

inline jule::Bool __jule_RCDrop(jule::U64* _7523_p) {
	jule::Bool _772_alive = ((*(_7523_p)) > 1LLU);;
	(*(_7523_p))-=1LLU;
	return _772_alive;;
}

int main(int argc, char *argv[], char *envp[]) {

	_22586d6ae_HelpMap = ({ auto __jule_collection = jule::Array<jule::Array<jule::Str,2>,5>(); auto it = __jule_collection.begin(); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("help", 4); (*it++) = jule::Str::lit("Show help", 9); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("version", 7); (*it++) = jule::Str::lit("Show version", 12); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("tool", 4); (*it++) = jule::Str::lit("Tools for effective Jule", 24); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("julenv", 6); (*it++) = jule::Str::lit("Show information about native jule environment", 46); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("mod", 3); (*it++) = jule::Str::lit("Module management", 17); __jule_collection; }); __jule_collection; });
	_1c8b176ca_OutDir = jule::Str::lit("dist", 4);
	_1c8b17994_OutName = jule::Str::lit("ir.cpp", 6);
	_1c8b17c4c_Out = jule::Str();
	_2240883a3_STDIN = _224088bab_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551606LLU));
	_22408864a_STDOUT = _224088bab_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551605LLU));
	_224088947_STDERR = _224088bab_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551604LLU));
	_2241a1422_first = ({ auto __jule_collection = jule::Array<jule::U8,256>(); auto it = __jule_collection.begin(); (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 19LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 35LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 52LLU; (*it++) = 4LLU; (*it++) = 4LLU; (*it++) = 4LLU; (*it++) = 68LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; __jule_collection; });
	_2241a1d6d_acceptRanges = ({ auto __jule_collection = jule::Array<_2241a19c7_acceptRange,16>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); (*it++) = _2241a19c7_acceptRange{._field_lo=128LLU, ._field_hi=191LLU}; (*it++) = _2241a19c7_acceptRange{._field_lo=160LLU, ._field_hi=191LLU}; (*it++) = _2241a19c7_acceptRange{._field_lo=128LLU, ._field_hi=159LLU}; (*it++) = _2241a19c7_acceptRange{._field_lo=144LLU, ._field_hi=191LLU}; (*it++) = _2241a19c7_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}; for (; it < __jule_collection_end; ++it) *it = _2241a19c7_acceptRange{._field_lo=0, ._field_hi=0};__jule_collection; });
	_224315dd3__DE_BRUIJN32_TAB = ({ auto __jule_collection = jule::Array<jule::U8,32>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 1LLU; (*it++) = 28LLU; (*it++) = 2LLU; (*it++) = 29LLU; (*it++) = 14LLU; (*it++) = 24LLU; (*it++) = 3LLU; (*it++) = 30LLU; (*it++) = 22LLU; (*it++) = 20LLU; (*it++) = 15LLU; (*it++) = 25LLU; (*it++) = 17LLU; (*it++) = 4LLU; (*it++) = 8LLU; (*it++) = 31LLU; (*it++) = 27LLU; (*it++) = 13LLU; (*it++) = 23LLU; (*it++) = 21LLU; (*it++) = 19LLU; (*it++) = 16LLU; (*it++) = 7LLU; (*it++) = 26LLU; (*it++) = 12LLU; (*it++) = 18LLU; (*it++) = 6LLU; (*it++) = 11LLU; (*it++) = 5LLU; (*it++) = 10LLU; (*it++) = 9LLU; __jule_collection; });
	_224316477__DE_BRUIJN64_TAB = ({ auto __jule_collection = jule::Array<jule::U8,64>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 1LLU; (*it++) = 56LLU; (*it++) = 2LLU; (*it++) = 57LLU; (*it++) = 49LLU; (*it++) = 28LLU; (*it++) = 3LLU; (*it++) = 61LLU; (*it++) = 58LLU; (*it++) = 42LLU; (*it++) = 50LLU; (*it++) = 38LLU; (*it++) = 29LLU; (*it++) = 17LLU; (*it++) = 4LLU; (*it++) = 62LLU; (*it++) = 47LLU; (*it++) = 59LLU; (*it++) = 36LLU; (*it++) = 45LLU; (*it++) = 43LLU; (*it++) = 51LLU; (*it++) = 22LLU; (*it++) = 53LLU; (*it++) = 39LLU; (*it++) = 33LLU; (*it++) = 30LLU; (*it++) = 24LLU; (*it++) = 18LLU; (*it++) = 12LLU; (*it++) = 5LLU; (*it++) = 63LLU; (*it++) = 55LLU; (*it++) = 48LLU; (*it++) = 27LLU; (*it++) = 60LLU; (*it++) = 41LLU; (*it++) = 37LLU; (*it++) = 16LLU; (*it++) = 46LLU; (*it++) = 35LLU; (*it++) = 44LLU; (*it++) = 21LLU; (*it++) = 52LLU; (*it++) = 32LLU; (*it++) = 23LLU; (*it++) = 11LLU; (*it++) = 54LLU; (*it++) = 26LLU; (*it++) = 40LLU; (*it++) = 15LLU; (*it++) = 34LLU; (*it++) = 20LLU; (*it++) = 31LLU; (*it++) = 10LLU; (*it++) = 25LLU; (*it++) = 14LLU; (*it++) = 19LLU; (*it++) = 9LLU; (*it++) = 13LLU; (*it++) = 8LLU; (*it++) = 7LLU; (*it++) = 6LLU; __jule_collection; });
	__jule_argc = 0LL;
	__jule_argv = nullptr;
	__jule_envp = nullptr;
	_22563051a__L = jule::new_ptr<_225692c64_RangeTable>(_225692c64_RangeTable{._field_R16=({ auto __jule_collection = jule::Slice<_2256922b3_Range16>::alloc(359, 359); auto it = __jule_collection.begin(); (*it++) = _2256922b3_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU}; (*it++) = _2256922b3_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU}; (*it++) = _2256922b3_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU}; (*it++) = _2256922b3_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU}; (*it++) = _2256922b3_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU}; (*it++) = _2256922b3_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU}; (*it++) = _2256922b3_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU}; (*it++) = _2256922b3_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU}; (*it++) = _2256922b3_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU}; (*it++) = _2256922b3_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU}; (*it++) = _2256922b3_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU}; (*it++) = _2256922b3_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU}; (*it++) = _2256922b3_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU}; (*it++) = _2256922b3_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU}; (*it++) = _2256922b3_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU}; (*it++) = _2256922b3_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU}; (*it++) = _2256922b3_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU}; (*it++) = _2256922b3_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU}; (*it++) = _2256922b3_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU}; (*it++) = _2256922b3_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU}; (*it++) = _2256922b3_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU}; (*it++) = _2256922b3_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU}; (*it++) = _2256922b3_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU}; (*it++) = _2256922b3_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU}; (*it++) = _2256922b3_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU}; (*it++) = _2256922b3_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU}; (*it++) = _2256922b3_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU}; (*it++) = _2256922b3_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU}; (*it++) = _2256922b3_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU}; (*it++) = _2256922b3_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU}; (*it++) = _2256922b3_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU}; (*it++) = _2256922b3_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU}; (*it++) = _2256922b3_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU}; (*it++) = _2256922b3_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU}; (*it++) = _2256922b3_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU}; (*it++) = _2256922b3_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU}; (*it++) = _2256922b3_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU}; (*it++) = _2256922b3_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU}; (*it++) = _2256922b3_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU}; (*it++) = _2256922b3_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU}; (*it++) = _2256922b3_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU}; (*it++) = _2256922b3_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU}; (*it++) = _2256922b3_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU}; (*it++) = _2256922b3_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU}; (*it++) = _2256922b3_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU}; (*it++) = _2256922b3_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU}; (*it++) = _2256922b3_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU}; (*it++) = _2256922b3_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU}; (*it++) = _2256922b3_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU}; (*it++) = _2256922b3_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU}; (*it++) = _2256922b3_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU}; (*it++) = _2256922b3_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU}; (*it++) = _2256922b3_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU}; (*it++) = _2256922b3_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU}; (*it++) = _2256922b3_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU}; (*it++) = _2256922b3_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU}; (*it++) = _2256922b3_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU}; (*it++) = _2256922b3_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU}; (*it++) = _2256922b3_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU}; (*it++) = _2256922b3_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU}; (*it++) = _2256922b3_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU}; (*it++) = _2256922b3_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU}; (*it++) = _2256922b3_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU}; (*it++) = _2256922b3_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU}; (*it++) = _2256922b3_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU}; (*it++) = _2256922b3_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU}; (*it++) = _2256922b3_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU}; (*it++) = _2256922b3_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU}; (*it++) = _2256922b3_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU}; (*it++) = _2256922b3_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU}; (*it++) = _2256922b3_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU}; (*it++) = _2256922b3_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU}; (*it++) = _2256922b3_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU}; (*it++) = _2256922b3_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU}; (*it++) = _2256922b3_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU}; (*it++) = _2256922b3_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU}; (*it++) = _2256922b3_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU}; (*it++) = _2256922b3_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_R32=({ auto __jule_collection = jule::Slice<_2256927e1_Range32>::alloc(264, 264); auto it = __jule_collection.begin(); (*it++) = _2256927e1_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU}; (*it++) = _2256927e1_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU}; (*it++) = _2256927e1_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU}; (*it++) = _2256927e1_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU}; (*it++) = _2256927e1_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU}; (*it++) = _2256927e1_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU}; (*it++) = _2256927e1_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU}; (*it++) = _2256927e1_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU}; (*it++) = _2256927e1_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU}; (*it++) = _2256927e1_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU}; (*it++) = _2256927e1_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU}; (*it++) = _2256927e1_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU}; (*it++) = _2256927e1_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU}; (*it++) = _2256927e1_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU}; (*it++) = _2256927e1_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU}; (*it++) = _2256927e1_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU}; (*it++) = _2256927e1_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU}; (*it++) = _2256927e1_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU}; (*it++) = _2256927e1_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU}; (*it++) = _2256927e1_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU}; (*it++) = _2256927e1_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU}; (*it++) = _2256927e1_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU}; (*it++) = _2256927e1_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU}; (*it++) = _2256927e1_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU}; (*it++) = _2256927e1_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU}; (*it++) = _2256927e1_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU}; (*it++) = _2256927e1_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU}; (*it++) = _2256927e1_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU}; (*it++) = _2256927e1_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU}; (*it++) = _2256927e1_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU}; (*it++) = _2256927e1_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU}; (*it++) = _2256927e1_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU}; (*it++) = _2256927e1_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU}; (*it++) = _2256927e1_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU}; (*it++) = _2256927e1_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU}; (*it++) = _2256927e1_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU}; (*it++) = _2256927e1_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU}; (*it++) = _2256927e1_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU}; (*it++) = _2256927e1_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU}; (*it++) = _2256927e1_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU}; (*it++) = _2256927e1_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU}; (*it++) = _2256927e1_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU}; (*it++) = _2256927e1_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_LatinOffset=6LL});
	_22563142d__LU = jule::new_ptr<_225692c64_RangeTable>(_225692c64_RangeTable{._field_R16=({ auto __jule_collection = jule::Slice<_2256922b3_Range16>::alloc(109, 109); auto it = __jule_collection.begin(); (*it++) = _2256922b3_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU}; (*it++) = _2256922b3_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU}; (*it++) = _2256922b3_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU}; (*it++) = _2256922b3_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU}; (*it++) = _2256922b3_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU}; (*it++) = _2256922b3_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU}; (*it++) = _2256922b3_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU}; (*it++) = _2256922b3_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU}; (*it++) = _2256922b3_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU}; (*it++) = _2256922b3_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU}; (*it++) = _2256922b3_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU}; (*it++) = _2256922b3_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU}; (*it++) = _2256922b3_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU}; (*it++) = _2256922b3_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU}; (*it++) = _2256922b3_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU}; (*it++) = _2256922b3_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU}; (*it++) = _2256922b3_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU}; (*it++) = _2256922b3_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU}; (*it++) = _2256922b3_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU}; (*it++) = _2256922b3_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU}; (*it++) = _2256922b3_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU}; (*it++) = _2256922b3_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU}; (*it++) = _2256922b3_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU}; (*it++) = _2256922b3_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU}; (*it++) = _2256922b3_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU}; (*it++) = _2256922b3_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU}; (*it++) = _2256922b3_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU}; (*it++) = _2256922b3_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU}; (*it++) = _2256922b3_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU}; (*it++) = _2256922b3_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU}; (*it++) = _2256922b3_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU}; (*it++) = _2256922b3_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU}; (*it++) = _2256922b3_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU}; (*it++) = _2256922b3_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU}; (*it++) = _2256922b3_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU}; (*it++) = _2256922b3_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU}; (*it++) = _2256922b3_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU}; (*it++) = _2256922b3_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU}; (*it++) = _2256922b3_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU}; (*it++) = _2256922b3_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU}; (*it++) = _2256922b3_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU}; (*it++) = _2256922b3_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU}; (*it++) = _2256922b3_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU}; (*it++) = _2256922b3_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU}; (*it++) = _2256922b3_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU}; (*it++) = _2256922b3_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU}; (*it++) = _2256922b3_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU}; (*it++) = _2256922b3_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU}; (*it++) = _2256922b3_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU}; (*it++) = _2256922b3_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU}; (*it++) = _2256922b3_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU}; (*it++) = _2256922b3_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU}; (*it++) = _2256922b3_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU}; (*it++) = _2256922b3_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU}; (*it++) = _2256922b3_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU}; (*it++) = _2256922b3_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU}; (*it++) = _2256922b3_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU}; (*it++) = _2256922b3_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU}; (*it++) = _2256922b3_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU}; (*it++) = _2256922b3_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_R32=({ auto __jule_collection = jule::Slice<_2256927e1_Range32>::alloc(40, 40); auto it = __jule_collection.begin(); (*it++) = _2256927e1_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU}; (*it++) = _2256927e1_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU}; (*it++) = _2256927e1_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU}; (*it++) = _2256927e1_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU}; (*it++) = _2256927e1_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU}; (*it++) = _2256927e1_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU}; (*it++) = _2256927e1_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_LatinOffset=3LL});
	_225637412_Letter = _22563051a__L;
	_22563d6d2_Upper = _22563142d__LU;
	_22568adc2__CaseRanges = ({ auto __jule_collection = jule::Slice<_225691d0c_CaseRange>::alloc(328, 328); auto it = __jule_collection.begin(); (*it++) = _225691d0c_CaseRange{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=181LLU, ._field_Hi=181LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 743LL; (*it++) = 0LL; (*it++) = 743LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=224LLU, ._field_Hi=246LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=248LLU, ._field_Hi=254LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=255LLU, ._field_Hi=255LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 121LL; (*it++) = 0LL; (*it++) = 121LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=256LLU, ._field_Hi=303LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=304LLU, ._field_Hi=304LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -199LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=305LLU, ._field_Hi=305LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -232LL; (*it++) = 0LL; (*it++) = -232LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=306LLU, ._field_Hi=311LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=313LLU, ._field_Hi=328LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=330LLU, ._field_Hi=375LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=376LLU, ._field_Hi=376LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -121LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=377LLU, ._field_Hi=382LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=383LLU, ._field_Hi=383LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -300LL; (*it++) = 0LL; (*it++) = -300LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=384LLU, ._field_Hi=384LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 195LL; (*it++) = 0LL; (*it++) = 195LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=385LLU, ._field_Hi=385LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 210LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=386LLU, ._field_Hi=389LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=390LLU, ._field_Hi=390LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 206LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=391LLU, ._field_Hi=392LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=393LLU, ._field_Hi=394LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 205LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=395LLU, ._field_Hi=396LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=398LLU, ._field_Hi=398LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 79LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=399LLU, ._field_Hi=399LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 202LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=400LLU, ._field_Hi=400LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 203LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=401LLU, ._field_Hi=402LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=403LLU, ._field_Hi=403LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 205LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=404LLU, ._field_Hi=404LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 207LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=405LLU, ._field_Hi=405LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 97LL; (*it++) = 0LL; (*it++) = 97LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=406LLU, ._field_Hi=406LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 211LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=407LLU, ._field_Hi=407LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 209LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=408LLU, ._field_Hi=409LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=410LLU, ._field_Hi=410LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 163LL; (*it++) = 0LL; (*it++) = 163LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=412LLU, ._field_Hi=412LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 211LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=413LLU, ._field_Hi=413LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 213LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=414LLU, ._field_Hi=414LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 130LL; (*it++) = 0LL; (*it++) = 130LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=415LLU, ._field_Hi=415LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 214LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=416LLU, ._field_Hi=421LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=422LLU, ._field_Hi=422LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 218LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=423LLU, ._field_Hi=424LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=425LLU, ._field_Hi=425LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 218LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=428LLU, ._field_Hi=429LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=430LLU, ._field_Hi=430LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 218LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=431LLU, ._field_Hi=432LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=433LLU, ._field_Hi=434LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 217LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=435LLU, ._field_Hi=438LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=439LLU, ._field_Hi=439LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 219LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=440LLU, ._field_Hi=441LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=444LLU, ._field_Hi=445LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=447LLU, ._field_Hi=447LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 56LL; (*it++) = 0LL; (*it++) = 56LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=452LLU, ._field_Hi=452LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 2LL; (*it++) = 1LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=453LLU, ._field_Hi=453LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -1LL; (*it++) = 1LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=454LLU, ._field_Hi=454LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -2LL; (*it++) = 0LL; (*it++) = -1LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=455LLU, ._field_Hi=455LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 2LL; (*it++) = 1LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=456LLU, ._field_Hi=456LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -1LL; (*it++) = 1LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=457LLU, ._field_Hi=457LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -2LL; (*it++) = 0LL; (*it++) = -1LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=458LLU, ._field_Hi=458LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 2LL; (*it++) = 1LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=459LLU, ._field_Hi=459LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -1LL; (*it++) = 1LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=460LLU, ._field_Hi=460LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -2LL; (*it++) = 0LL; (*it++) = -1LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=461LLU, ._field_Hi=476LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=477LLU, ._field_Hi=477LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -79LL; (*it++) = 0LL; (*it++) = -79LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=478LLU, ._field_Hi=495LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=497LLU, ._field_Hi=497LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 2LL; (*it++) = 1LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=498LLU, ._field_Hi=498LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -1LL; (*it++) = 1LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=499LLU, ._field_Hi=499LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -2LL; (*it++) = 0LL; (*it++) = -1LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=500LLU, ._field_Hi=501LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=502LLU, ._field_Hi=502LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -97LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=503LLU, ._field_Hi=503LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -56LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=504LLU, ._field_Hi=543LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=544LLU, ._field_Hi=544LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -130LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=546LLU, ._field_Hi=563LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=570LLU, ._field_Hi=570LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 10795LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=571LLU, ._field_Hi=572LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=573LLU, ._field_Hi=573LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -163LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=574LLU, ._field_Hi=574LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 10792LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=575LLU, ._field_Hi=576LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10815LL; (*it++) = 0LL; (*it++) = 10815LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=577LLU, ._field_Hi=578LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=579LLU, ._field_Hi=579LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -195LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=580LLU, ._field_Hi=580LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 69LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=581LLU, ._field_Hi=581LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 71LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=582LLU, ._field_Hi=591LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=592LLU, ._field_Hi=592LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10783LL; (*it++) = 0LL; (*it++) = 10783LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=593LLU, ._field_Hi=593LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10780LL; (*it++) = 0LL; (*it++) = 10780LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=594LLU, ._field_Hi=594LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10782LL; (*it++) = 0LL; (*it++) = 10782LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=595LLU, ._field_Hi=595LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -210LL; (*it++) = 0LL; (*it++) = -210LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=596LLU, ._field_Hi=596LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -206LL; (*it++) = 0LL; (*it++) = -206LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=598LLU, ._field_Hi=599LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -205LL; (*it++) = 0LL; (*it++) = -205LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=601LLU, ._field_Hi=601LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -202LL; (*it++) = 0LL; (*it++) = -202LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=603LLU, ._field_Hi=603LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -203LL; (*it++) = 0LL; (*it++) = -203LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=604LLU, ._field_Hi=604LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42319LL; (*it++) = 0LL; (*it++) = 42319LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=608LLU, ._field_Hi=608LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -205LL; (*it++) = 0LL; (*it++) = -205LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=609LLU, ._field_Hi=609LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42315LL; (*it++) = 0LL; (*it++) = 42315LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=611LLU, ._field_Hi=611LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -207LL; (*it++) = 0LL; (*it++) = -207LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=613LLU, ._field_Hi=613LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42280LL; (*it++) = 0LL; (*it++) = 42280LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=614LLU, ._field_Hi=614LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42308LL; (*it++) = 0LL; (*it++) = 42308LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=616LLU, ._field_Hi=616LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -209LL; (*it++) = 0LL; (*it++) = -209LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=617LLU, ._field_Hi=617LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -211LL; (*it++) = 0LL; (*it++) = -211LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=618LLU, ._field_Hi=618LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42308LL; (*it++) = 0LL; (*it++) = 42308LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=619LLU, ._field_Hi=619LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10743LL; (*it++) = 0LL; (*it++) = 10743LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=620LLU, ._field_Hi=620LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42305LL; (*it++) = 0LL; (*it++) = 42305LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=623LLU, ._field_Hi=623LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -211LL; (*it++) = 0LL; (*it++) = -211LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=625LLU, ._field_Hi=625LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10749LL; (*it++) = 0LL; (*it++) = 10749LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=626LLU, ._field_Hi=626LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -213LL; (*it++) = 0LL; (*it++) = -213LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=629LLU, ._field_Hi=629LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -214LL; (*it++) = 0LL; (*it++) = -214LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=637LLU, ._field_Hi=637LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10727LL; (*it++) = 0LL; (*it++) = 10727LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=640LLU, ._field_Hi=640LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -218LL; (*it++) = 0LL; (*it++) = -218LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=642LLU, ._field_Hi=642LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42307LL; (*it++) = 0LL; (*it++) = 42307LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=643LLU, ._field_Hi=643LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -218LL; (*it++) = 0LL; (*it++) = -218LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=647LLU, ._field_Hi=647LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42282LL; (*it++) = 0LL; (*it++) = 42282LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=648LLU, ._field_Hi=648LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -218LL; (*it++) = 0LL; (*it++) = -218LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=649LLU, ._field_Hi=649LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -69LL; (*it++) = 0LL; (*it++) = -69LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=650LLU, ._field_Hi=651LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -217LL; (*it++) = 0LL; (*it++) = -217LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=652LLU, ._field_Hi=652LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -71LL; (*it++) = 0LL; (*it++) = -71LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=658LLU, ._field_Hi=658LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -219LL; (*it++) = 0LL; (*it++) = -219LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=669LLU, ._field_Hi=669LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42261LL; (*it++) = 0LL; (*it++) = 42261LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=670LLU, ._field_Hi=670LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42258LL; (*it++) = 0LL; (*it++) = 42258LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=837LLU, ._field_Hi=837LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 84LL; (*it++) = 0LL; (*it++) = 84LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=880LLU, ._field_Hi=883LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=891LLU, ._field_Hi=893LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 130LL; (*it++) = 0LL; (*it++) = 130LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=895LLU, ._field_Hi=895LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 116LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=902LLU, ._field_Hi=902LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 38LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 37LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=908LLU, ._field_Hi=908LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 64LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=910LLU, ._field_Hi=911LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 63LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=913LLU, ._field_Hi=929LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=940LLU, ._field_Hi=940LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -38LL; (*it++) = 0LL; (*it++) = -38LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=941LLU, ._field_Hi=943LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -37LL; (*it++) = 0LL; (*it++) = -37LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=945LLU, ._field_Hi=961LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=962LLU, ._field_Hi=962LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -31LL; (*it++) = 0LL; (*it++) = -31LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=963LLU, ._field_Hi=971LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=972LLU, ._field_Hi=972LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -64LL; (*it++) = 0LL; (*it++) = -64LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=973LLU, ._field_Hi=974LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -63LL; (*it++) = 0LL; (*it++) = -63LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=975LLU, ._field_Hi=975LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=976LLU, ._field_Hi=976LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -62LL; (*it++) = 0LL; (*it++) = -62LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=977LLU, ._field_Hi=977LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -57LL; (*it++) = 0LL; (*it++) = -57LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=981LLU, ._field_Hi=981LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -47LL; (*it++) = 0LL; (*it++) = -47LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=982LLU, ._field_Hi=982LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -54LL; (*it++) = 0LL; (*it++) = -54LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=983LLU, ._field_Hi=983LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -8LL; (*it++) = 0LL; (*it++) = -8LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=984LLU, ._field_Hi=1007LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=1008LLU, ._field_Hi=1008LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -86LL; (*it++) = 0LL; (*it++) = -86LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=1009LLU, ._field_Hi=1009LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -80LL; (*it++) = 0LL; (*it++) = -80LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=1010LLU, ._field_Hi=1010LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 7LL; (*it++) = 0LL; (*it++) = 7LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=1011LLU, ._field_Hi=1011LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -116LL; (*it++) = 0LL; (*it++) = -116LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=1012LLU, ._field_Hi=1012LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -60LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=1013LLU, ._field_Hi=1013LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -96LL; (*it++) = 0LL; (*it++) = -96LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=1015LLU, ._field_Hi=1016LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=1017LLU, ._field_Hi=1017LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -7LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=1018LLU, ._field_Hi=1019LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=1021LLU, ._field_Hi=1023LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -130LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=1024LLU, ._field_Hi=1039LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 80LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=1040LLU, ._field_Hi=1071LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=1072LLU, ._field_Hi=1103LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=1104LLU, ._field_Hi=1119LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -80LL; (*it++) = 0LL; (*it++) = -80LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=1120LLU, ._field_Hi=1153LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=1162LLU, ._field_Hi=1215LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=1216LLU, ._field_Hi=1216LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 15LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=1217LLU, ._field_Hi=1230LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=1231LLU, ._field_Hi=1231LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -15LL; (*it++) = 0LL; (*it++) = -15LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=1232LLU, ._field_Hi=1327LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 48LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=1377LLU, ._field_Hi=1414LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -48LL; (*it++) = 0LL; (*it++) = -48LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 7264LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=4295LLU, ._field_Hi=4295LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 7264LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=4301LLU, ._field_Hi=4301LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 7264LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 3008LL; (*it++) = 0LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=4349LLU, ._field_Hi=4351LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 3008LL; (*it++) = 0LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=5024LLU, ._field_Hi=5103LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 38864LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=5104LLU, ._field_Hi=5109LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -8LL; (*it++) = 0LL; (*it++) = -8LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=7296LLU, ._field_Hi=7296LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6254LL; (*it++) = 0LL; (*it++) = -6254LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=7297LLU, ._field_Hi=7297LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6253LL; (*it++) = 0LL; (*it++) = -6253LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=7298LLU, ._field_Hi=7298LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6244LL; (*it++) = 0LL; (*it++) = -6244LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=7299LLU, ._field_Hi=7300LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6242LL; (*it++) = 0LL; (*it++) = -6242LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=7301LLU, ._field_Hi=7301LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6243LL; (*it++) = 0LL; (*it++) = -6243LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=7302LLU, ._field_Hi=7302LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6236LL; (*it++) = 0LL; (*it++) = -6236LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=7303LLU, ._field_Hi=7303LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6181LL; (*it++) = 0LL; (*it++) = -6181LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=7304LLU, ._field_Hi=7304LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 35266LL; (*it++) = 0LL; (*it++) = 35266LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -3008LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -3008LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=7545LLU, ._field_Hi=7545LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 35332LL; (*it++) = 0LL; (*it++) = 35332LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=7549LLU, ._field_Hi=7549LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 3814LL; (*it++) = 0LL; (*it++) = 3814LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=7566LLU, ._field_Hi=7566LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 35384LL; (*it++) = 0LL; (*it++) = 35384LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=7680LLU, ._field_Hi=7829LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=7835LLU, ._field_Hi=7835LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -59LL; (*it++) = 0LL; (*it++) = -59LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=7838LLU, ._field_Hi=7838LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -7615LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=7840LLU, ._field_Hi=7935LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=7936LLU, ._field_Hi=7943LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=7952LLU, ._field_Hi=7957LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=7968LLU, ._field_Hi=7975LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=7984LLU, ._field_Hi=7991LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=8000LLU, ._field_Hi=8005LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=8017LLU, ._field_Hi=8017LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=8019LLU, ._field_Hi=8019LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=8021LLU, ._field_Hi=8021LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=8023LLU, ._field_Hi=8023LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=8025LLU, ._field_Hi=8025LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=8027LLU, ._field_Hi=8027LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=8029LLU, ._field_Hi=8029LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=8031LLU, ._field_Hi=8031LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=8032LLU, ._field_Hi=8039LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=8048LLU, ._field_Hi=8049LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 74LL; (*it++) = 0LL; (*it++) = 74LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=8050LLU, ._field_Hi=8053LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 86LL; (*it++) = 0LL; (*it++) = 86LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=8054LLU, ._field_Hi=8055LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 100LL; (*it++) = 0LL; (*it++) = 100LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=8056LLU, ._field_Hi=8057LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 128LL; (*it++) = 0LL; (*it++) = 128LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=8058LLU, ._field_Hi=8059LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 112LL; (*it++) = 0LL; (*it++) = 112LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=8060LLU, ._field_Hi=8061LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 126LL; (*it++) = 0LL; (*it++) = 126LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=8064LLU, ._field_Hi=8071LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=8072LLU, ._field_Hi=8079LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=8080LLU, ._field_Hi=8087LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=8088LLU, ._field_Hi=8095LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=8096LLU, ._field_Hi=8103LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=8104LLU, ._field_Hi=8111LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=8112LLU, ._field_Hi=8113LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=8115LLU, ._field_Hi=8115LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 9LL; (*it++) = 0LL; (*it++) = 9LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=8120LLU, ._field_Hi=8121LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=8122LLU, ._field_Hi=8123LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -74LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=8124LLU, ._field_Hi=8124LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -9LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=8126LLU, ._field_Hi=8126LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -7205LL; (*it++) = 0LL; (*it++) = -7205LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=8131LLU, ._field_Hi=8131LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 9LL; (*it++) = 0LL; (*it++) = 9LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -86LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=8140LLU, ._field_Hi=8140LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -9LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=8144LLU, ._field_Hi=8145LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=8152LLU, ._field_Hi=8153LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=8154LLU, ._field_Hi=8155LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -100LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=8160LLU, ._field_Hi=8161LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=8165LLU, ._field_Hi=8165LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 7LL; (*it++) = 0LL; (*it++) = 7LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=8168LLU, ._field_Hi=8169LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=8170LLU, ._field_Hi=8171LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -112LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=8172LLU, ._field_Hi=8172LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -7LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=8179LLU, ._field_Hi=8179LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 9LL; (*it++) = 0LL; (*it++) = 9LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=8184LLU, ._field_Hi=8185LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -128LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=8186LLU, ._field_Hi=8187LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -126LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=8188LLU, ._field_Hi=8188LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -9LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=8486LLU, ._field_Hi=8486LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -7517LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=8490LLU, ._field_Hi=8490LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8383LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=8491LLU, ._field_Hi=8491LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8262LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=8498LLU, ._field_Hi=8498LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 28LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=8526LLU, ._field_Hi=8526LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -28LL; (*it++) = 0LL; (*it++) = -28LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=8544LLU, ._field_Hi=8559LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 16LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=8560LLU, ._field_Hi=8575LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -16LL; (*it++) = 0LL; (*it++) = -16LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=8579LLU, ._field_Hi=8580LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=9398LLU, ._field_Hi=9423LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 26LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=9424LLU, ._field_Hi=9449LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -26LL; (*it++) = 0LL; (*it++) = -26LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 48LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=11312LLU, ._field_Hi=11359LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -48LL; (*it++) = 0LL; (*it++) = -48LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=11360LLU, ._field_Hi=11361LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=11362LLU, ._field_Hi=11362LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10743LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=11363LLU, ._field_Hi=11363LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -3814LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=11364LLU, ._field_Hi=11364LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10727LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=11365LLU, ._field_Hi=11365LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -10795LL; (*it++) = 0LL; (*it++) = -10795LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=11366LLU, ._field_Hi=11366LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -10792LL; (*it++) = 0LL; (*it++) = -10792LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=11367LLU, ._field_Hi=11372LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=11373LLU, ._field_Hi=11373LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10780LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=11374LLU, ._field_Hi=11374LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10749LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=11375LLU, ._field_Hi=11375LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10783LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=11376LLU, ._field_Hi=11376LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10782LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=11378LLU, ._field_Hi=11379LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=11381LLU, ._field_Hi=11382LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=11390LLU, ._field_Hi=11391LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10815LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=11392LLU, ._field_Hi=11491LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -7264LL; (*it++) = 0LL; (*it++) = -7264LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=11559LLU, ._field_Hi=11559LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -7264LL; (*it++) = 0LL; (*it++) = -7264LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=11565LLU, ._field_Hi=11565LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -7264LL; (*it++) = 0LL; (*it++) = -7264LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=42560LLU, ._field_Hi=42605LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=42624LLU, ._field_Hi=42651LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=42786LLU, ._field_Hi=42799LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=42802LLU, ._field_Hi=42863LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=42873LLU, ._field_Hi=42876LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=42877LLU, ._field_Hi=42877LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -35332LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=42878LLU, ._field_Hi=42887LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=42891LLU, ._field_Hi=42892LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=42893LLU, ._field_Hi=42893LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42280LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=42896LLU, ._field_Hi=42899LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=42900LLU, ._field_Hi=42900LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 48LL; (*it++) = 0LL; (*it++) = 48LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=42902LLU, ._field_Hi=42921LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=42922LLU, ._field_Hi=42922LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42308LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=42923LLU, ._field_Hi=42923LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42319LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=42924LLU, ._field_Hi=42924LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42315LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=42925LLU, ._field_Hi=42925LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42305LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=42926LLU, ._field_Hi=42926LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42308LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=42928LLU, ._field_Hi=42928LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42258LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=42929LLU, ._field_Hi=42929LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42282LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=42930LLU, ._field_Hi=42930LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42261LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=42931LLU, ._field_Hi=42931LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 928LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=42932LLU, ._field_Hi=42947LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=42948LLU, ._field_Hi=42948LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -48LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=42949LLU, ._field_Hi=42949LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42307LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=42950LLU, ._field_Hi=42950LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -35384LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=42951LLU, ._field_Hi=42954LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=42997LLU, ._field_Hi=42998LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=43859LLU, ._field_Hi=43859LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -928LL; (*it++) = 0LL; (*it++) = -928LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=43888LLU, ._field_Hi=43967LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -38864LL; (*it++) = 0LL; (*it++) = -38864LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 40LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=66600LLU, ._field_Hi=66639LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -40LL; (*it++) = 0LL; (*it++) = -40LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 40LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -40LL; (*it++) = 0LL; (*it++) = -40LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 39LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 39LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 39LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 39LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -39LL; (*it++) = 0LL; (*it++) = -39LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -39LL; (*it++) = 0LL; (*it++) = -39LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -39LL; (*it++) = 0LL; (*it++) = -39LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -39LL; (*it++) = 0LL; (*it++) = -39LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 64LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -64LL; (*it++) = 0LL; (*it++) = -64LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=71872LLU, ._field_Hi=71903LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=93792LLU, ._field_Hi=93823LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=125184LLU, ._field_Hi=125217LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 34LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _225691d0c_CaseRange{._field_Lo=125218LLU, ._field_Hi=125251LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -34LL; (*it++) = 0LL; (*it++) = -34LL; __jule_collection; })}; __jule_collection; });
	_22568b1ad__PROPERTIES = ({ auto __jule_collection = jule::Array<jule::U8,256>(); auto it = __jule_collection.begin(); (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 144LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 16LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 224LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 0LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 136LLU; (*it++) = 192LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 132LLU; (*it++) = 224LLU; (*it++) = 130LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 130LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 136LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 136LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; __jule_collection; });
	_22568ce90_asciiFold = ({ auto __jule_collection = jule::Array<jule::U16,128>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 1LLU; (*it++) = 2LLU; (*it++) = 3LLU; (*it++) = 4LLU; (*it++) = 5LLU; (*it++) = 6LLU; (*it++) = 7LLU; (*it++) = 8LLU; (*it++) = 9LLU; (*it++) = 10LLU; (*it++) = 11LLU; (*it++) = 12LLU; (*it++) = 13LLU; (*it++) = 14LLU; (*it++) = 15LLU; (*it++) = 16LLU; (*it++) = 17LLU; (*it++) = 18LLU; (*it++) = 19LLU; (*it++) = 20LLU; (*it++) = 21LLU; (*it++) = 22LLU; (*it++) = 23LLU; (*it++) = 24LLU; (*it++) = 25LLU; (*it++) = 26LLU; (*it++) = 27LLU; (*it++) = 28LLU; (*it++) = 29LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 32LLU; (*it++) = 33LLU; (*it++) = 34LLU; (*it++) = 35LLU; (*it++) = 36LLU; (*it++) = 37LLU; (*it++) = 38LLU; (*it++) = 39LLU; (*it++) = 40LLU; (*it++) = 41LLU; (*it++) = 42LLU; (*it++) = 43LLU; (*it++) = 44LLU; (*it++) = 45LLU; (*it++) = 46LLU; (*it++) = 47LLU; (*it++) = 48LLU; (*it++) = 49LLU; (*it++) = 50LLU; (*it++) = 51LLU; (*it++) = 52LLU; (*it++) = 53LLU; (*it++) = 54LLU; (*it++) = 55LLU; (*it++) = 56LLU; (*it++) = 57LLU; (*it++) = 58LLU; (*it++) = 59LLU; (*it++) = 60LLU; (*it++) = 61LLU; (*it++) = 62LLU; (*it++) = 63LLU; (*it++) = 64LLU; (*it++) = 97LLU; (*it++) = 98LLU; (*it++) = 99LLU; (*it++) = 100LLU; (*it++) = 101LLU; (*it++) = 102LLU; (*it++) = 103LLU; (*it++) = 104LLU; (*it++) = 105LLU; (*it++) = 106LLU; (*it++) = 107LLU; (*it++) = 108LLU; (*it++) = 109LLU; (*it++) = 110LLU; (*it++) = 111LLU; (*it++) = 112LLU; (*it++) = 113LLU; (*it++) = 114LLU; (*it++) = 115LLU; (*it++) = 116LLU; (*it++) = 117LLU; (*it++) = 118LLU; (*it++) = 119LLU; (*it++) = 120LLU; (*it++) = 121LLU; (*it++) = 122LLU; (*it++) = 91LLU; (*it++) = 92LLU; (*it++) = 93LLU; (*it++) = 94LLU; (*it++) = 95LLU; (*it++) = 96LLU; (*it++) = 65LLU; (*it++) = 66LLU; (*it++) = 67LLU; (*it++) = 68LLU; (*it++) = 69LLU; (*it++) = 70LLU; (*it++) = 71LLU; (*it++) = 72LLU; (*it++) = 73LLU; (*it++) = 74LLU; (*it++) = 8490LLU; (*it++) = 76LLU; (*it++) = 77LLU; (*it++) = 78LLU; (*it++) = 79LLU; (*it++) = 80LLU; (*it++) = 81LLU; (*it++) = 82LLU; (*it++) = 383LLU; (*it++) = 84LLU; (*it++) = 85LLU; (*it++) = 86LLU; (*it++) = 87LLU; (*it++) = 88LLU; (*it++) = 89LLU; (*it++) = 90LLU; (*it++) = 123LLU; (*it++) = 124LLU; (*it++) = 125LLU; (*it++) = 126LLU; (*it++) = 127LLU; __jule_collection; });
	_22568d27b_caseOrbit = ({ auto __jule_collection = jule::Slice<_225691812_foldPair>::alloc(88, 88); auto it = __jule_collection.begin(); (*it++) = _225691812_foldPair{._field_from=75LLU, ._field_to=107LLU}; (*it++) = _225691812_foldPair{._field_from=83LLU, ._field_to=115LLU}; (*it++) = _225691812_foldPair{._field_from=107LLU, ._field_to=8490LLU}; (*it++) = _225691812_foldPair{._field_from=115LLU, ._field_to=383LLU}; (*it++) = _225691812_foldPair{._field_from=181LLU, ._field_to=924LLU}; (*it++) = _225691812_foldPair{._field_from=197LLU, ._field_to=229LLU}; (*it++) = _225691812_foldPair{._field_from=223LLU, ._field_to=7838LLU}; (*it++) = _225691812_foldPair{._field_from=229LLU, ._field_to=8491LLU}; (*it++) = _225691812_foldPair{._field_from=304LLU, ._field_to=304LLU}; (*it++) = _225691812_foldPair{._field_from=305LLU, ._field_to=305LLU}; (*it++) = _225691812_foldPair{._field_from=383LLU, ._field_to=83LLU}; (*it++) = _225691812_foldPair{._field_from=452LLU, ._field_to=453LLU}; (*it++) = _225691812_foldPair{._field_from=453LLU, ._field_to=454LLU}; (*it++) = _225691812_foldPair{._field_from=454LLU, ._field_to=452LLU}; (*it++) = _225691812_foldPair{._field_from=455LLU, ._field_to=456LLU}; (*it++) = _225691812_foldPair{._field_from=456LLU, ._field_to=457LLU}; (*it++) = _225691812_foldPair{._field_from=457LLU, ._field_to=455LLU}; (*it++) = _225691812_foldPair{._field_from=458LLU, ._field_to=459LLU}; (*it++) = _225691812_foldPair{._field_from=459LLU, ._field_to=460LLU}; (*it++) = _225691812_foldPair{._field_from=460LLU, ._field_to=458LLU}; (*it++) = _225691812_foldPair{._field_from=497LLU, ._field_to=498LLU}; (*it++) = _225691812_foldPair{._field_from=498LLU, ._field_to=499LLU}; (*it++) = _225691812_foldPair{._field_from=499LLU, ._field_to=497LLU}; (*it++) = _225691812_foldPair{._field_from=837LLU, ._field_to=921LLU}; (*it++) = _225691812_foldPair{._field_from=914LLU, ._field_to=946LLU}; (*it++) = _225691812_foldPair{._field_from=917LLU, ._field_to=949LLU}; (*it++) = _225691812_foldPair{._field_from=920LLU, ._field_to=952LLU}; (*it++) = _225691812_foldPair{._field_from=921LLU, ._field_to=953LLU}; (*it++) = _225691812_foldPair{._field_from=922LLU, ._field_to=954LLU}; (*it++) = _225691812_foldPair{._field_from=924LLU, ._field_to=956LLU}; (*it++) = _225691812_foldPair{._field_from=928LLU, ._field_to=960LLU}; (*it++) = _225691812_foldPair{._field_from=929LLU, ._field_to=961LLU}; (*it++) = _225691812_foldPair{._field_from=931LLU, ._field_to=962LLU}; (*it++) = _225691812_foldPair{._field_from=934LLU, ._field_to=966LLU}; (*it++) = _225691812_foldPair{._field_from=937LLU, ._field_to=969LLU}; (*it++) = _225691812_foldPair{._field_from=946LLU, ._field_to=976LLU}; (*it++) = _225691812_foldPair{._field_from=949LLU, ._field_to=1013LLU}; (*it++) = _225691812_foldPair{._field_from=952LLU, ._field_to=977LLU}; (*it++) = _225691812_foldPair{._field_from=953LLU, ._field_to=8126LLU}; (*it++) = _225691812_foldPair{._field_from=954LLU, ._field_to=1008LLU}; (*it++) = _225691812_foldPair{._field_from=956LLU, ._field_to=181LLU}; (*it++) = _225691812_foldPair{._field_from=960LLU, ._field_to=982LLU}; (*it++) = _225691812_foldPair{._field_from=961LLU, ._field_to=1009LLU}; (*it++) = _225691812_foldPair{._field_from=962LLU, ._field_to=963LLU}; (*it++) = _225691812_foldPair{._field_from=963LLU, ._field_to=931LLU}; (*it++) = _225691812_foldPair{._field_from=966LLU, ._field_to=981LLU}; (*it++) = _225691812_foldPair{._field_from=969LLU, ._field_to=8486LLU}; (*it++) = _225691812_foldPair{._field_from=976LLU, ._field_to=914LLU}; (*it++) = _225691812_foldPair{._field_from=977LLU, ._field_to=1012LLU}; (*it++) = _225691812_foldPair{._field_from=981LLU, ._field_to=934LLU}; (*it++) = _225691812_foldPair{._field_from=982LLU, ._field_to=928LLU}; (*it++) = _225691812_foldPair{._field_from=1008LLU, ._field_to=922LLU}; (*it++) = _225691812_foldPair{._field_from=1009LLU, ._field_to=929LLU}; (*it++) = _225691812_foldPair{._field_from=1012LLU, ._field_to=920LLU}; (*it++) = _225691812_foldPair{._field_from=1013LLU, ._field_to=917LLU}; (*it++) = _225691812_foldPair{._field_from=1042LLU, ._field_to=1074LLU}; (*it++) = _225691812_foldPair{._field_from=1044LLU, ._field_to=1076LLU}; (*it++) = _225691812_foldPair{._field_from=1054LLU, ._field_to=1086LLU}; (*it++) = _225691812_foldPair{._field_from=1057LLU, ._field_to=1089LLU}; (*it++) = _225691812_foldPair{._field_from=1058LLU, ._field_to=1090LLU}; (*it++) = _225691812_foldPair{._field_from=1066LLU, ._field_to=1098LLU}; (*it++) = _225691812_foldPair{._field_from=1074LLU, ._field_to=7296LLU}; (*it++) = _225691812_foldPair{._field_from=1076LLU, ._field_to=7297LLU}; (*it++) = _225691812_foldPair{._field_from=1086LLU, ._field_to=7298LLU}; (*it++) = _225691812_foldPair{._field_from=1089LLU, ._field_to=7299LLU}; (*it++) = _225691812_foldPair{._field_from=1090LLU, ._field_to=7300LLU}; (*it++) = _225691812_foldPair{._field_from=1098LLU, ._field_to=7302LLU}; (*it++) = _225691812_foldPair{._field_from=1122LLU, ._field_to=1123LLU}; (*it++) = _225691812_foldPair{._field_from=1123LLU, ._field_to=7303LLU}; (*it++) = _225691812_foldPair{._field_from=7296LLU, ._field_to=1042LLU}; (*it++) = _225691812_foldPair{._field_from=7297LLU, ._field_to=1044LLU}; (*it++) = _225691812_foldPair{._field_from=7298LLU, ._field_to=1054LLU}; (*it++) = _225691812_foldPair{._field_from=7299LLU, ._field_to=1057LLU}; (*it++) = _225691812_foldPair{._field_from=7300LLU, ._field_to=7301LLU}; (*it++) = _225691812_foldPair{._field_from=7301LLU, ._field_to=1058LLU}; (*it++) = _225691812_foldPair{._field_from=7302LLU, ._field_to=1066LLU}; (*it++) = _225691812_foldPair{._field_from=7303LLU, ._field_to=1122LLU}; (*it++) = _225691812_foldPair{._field_from=7304LLU, ._field_to=42570LLU}; (*it++) = _225691812_foldPair{._field_from=7776LLU, ._field_to=7777LLU}; (*it++) = _225691812_foldPair{._field_from=7777LLU, ._field_to=7835LLU}; (*it++) = _225691812_foldPair{._field_from=7835LLU, ._field_to=7776LLU}; (*it++) = _225691812_foldPair{._field_from=7838LLU, ._field_to=223LLU}; (*it++) = _225691812_foldPair{._field_from=8126LLU, ._field_to=837LLU}; (*it++) = _225691812_foldPair{._field_from=8486LLU, ._field_to=937LLU}; (*it++) = _225691812_foldPair{._field_from=8490LLU, ._field_to=75LLU}; (*it++) = _225691812_foldPair{._field_from=8491LLU, ._field_to=197LLU}; (*it++) = _225691812_foldPair{._field_from=42570LLU, ._field_to=42571LLU}; (*it++) = _225691812_foldPair{._field_from=42571LLU, ._field_to=7304LLU}; __jule_collection; });
	_2257784a9_CppHeaderExts = ({ auto __jule_collection = jule::Array<jule::Str,4>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit(".h", 2); (*it++) = jule::Str::lit(".hpp", 4); (*it++) = jule::Str::lit(".hxx", 4); (*it++) = jule::Str::lit(".hh", 3); __jule_collection; });
	_2256e6b86_CppExts = ({ auto __jule_collection = jule::Array<jule::Str,3>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit(".cpp", 4); (*it++) = jule::Str::lit(".cc", 3); (*it++) = jule::Str::lit(".cxx", 4); __jule_collection; });
	_225777321_ObjectiveCppExts = ({ auto __jule_collection = jule::Array<jule::Str,1>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit(".mm", 3); __jule_collection; });
	_2258644eb_PathStdlib = jule::Str();
	_22586473d_PathExec = jule::Str();
	_2258649e6_PathWd = jule::Str();
	_225864ce3_PathApi = jule::Str();
	_22586509b_Os = jule::Str::lit("windows", 7);
	_225865354_Arch = jule::Str::lit("amd64", 5);
	_225869c82_Compiler = jule::Str();
	_22586b17e_CompilerPath = jule::Str();
	_22586b38d_CppStd = jule::Str::lit("cpp17", 5);
	_22586b5be_Shadowing = false;
	_22586b877_Transpilation = false;
	_22586bb30_Test = false;
	_22586bdd8_RC = true;
	_22586c2a1_Safety = true;
	_22586c4e3_Production = false;
	_1e217d332_f32info = _1e217ce36_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
	_1e217d62e_f64info = _1e217ce36_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
	_1e2186109_detailedPowsOfTen = ({ auto __jule_collection = jule::Array<jule::Array<jule::U64,2>,696>(); auto it = __jule_collection.begin(); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1671618768450675795LLU; (*it++) = 18054884314459144840LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1044761730281672372LLU; (*it++) = 11284302696536965525LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5917638181279478369LLU; (*it++) = 14105378370671206906LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16620419763454123769LLU; (*it++) = 17631722963339008632LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10387762352158827356LLU; (*it++) = 11019826852086880395LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8373016921771146291LLU; (*it++) = 13774783565108600494LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1242899115359157055LLU; (*it++) = 17218479456385750618LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5388497965526861063LLU; (*it++) = 10761549660241094136LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6735622456908576329LLU; (*it++) = 13451937075301367670LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17642900107990496220LLU; (*it++) = 16814921344126709587LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8720969558280366185LLU; (*it++) = 10509325840079193492LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10901211947850457732LLU; (*it++) = 13136657300098991865LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18238200953240460069LLU; (*it++) = 16420821625123739831LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18316404623416369399LLU; (*it++) = 10263013515702337394LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13672133742415685941LLU; (*it++) = 12828766894627921743LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12478481159592219522LLU; (*it++) = 16035958618284902179LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5493207715531443249LLU; (*it++) = 10022474136428063862LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16089881681269079869LLU; (*it++) = 12528092670535079827LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15500666083158961933LLU; (*it++) = 15660115838168849784LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9687916301974351208LLU; (*it++) = 9787572398855531115LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7498209359040551106LLU; (*it++) = 12234465498569413894LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 149389661945913074LLU; (*it++) = 15293081873211767368LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 93368538716195671LLU; (*it++) = 9558176170757354605LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4728396691822632493LLU; (*it++) = 11947720213446693256LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5910495864778290617LLU; (*it++) = 14934650266808366570LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8305745933913819539LLU; (*it++) = 9334156416755229106LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1158810380537498616LLU; (*it++) = 11667695520944036383LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15283571030954036982LLU; (*it++) = 14584619401180045478LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9881091751837770420LLU; (*it++) = 18230774251475056848LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6175682344898606512LLU; (*it++) = 11394233907171910530LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16942974967978033949LLU; (*it++) = 14242792383964888162LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11955346673117766628LLU; (*it++) = 17803490479956110203LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5166248661484910190LLU; (*it++) = 11127181549972568877LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11069496845283525642LLU; (*it++) = 13908976937465711096LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13836871056604407053LLU; (*it++) = 17386221171832138870LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4036358391950366504LLU; (*it++) = 10866388232395086794LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14268820026792733938LLU; (*it++) = 13582985290493858492LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17836025033490917422LLU; (*it++) = 16978731613117323115LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8841672636718129437LLU; (*it++) = 10611707258198326947LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6440404777470273892LLU; (*it++) = 13264634072747908684LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8050505971837842365LLU; (*it++) = 16580792590934885855LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11949095260039733334LLU; (*it++) = 10362995369334303659LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10324683056622278764LLU; (*it++) = 12953744211667879574LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3682481783923072647LLU; (*it++) = 16192180264584849468LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11524923151806696212LLU; (*it++) = 10120112665365530917LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 571095884476206553LLU; (*it++) = 12650140831706913647LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14548927910877421904LLU; (*it++) = 15812676039633642058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13704765962725776594LLU; (*it++) = 9882922524771026286LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7907585416552444934LLU; (*it++) = 12353653155963782858LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 661109733835780360LLU; (*it++) = 15442066444954728573LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2719036592861056677LLU; (*it++) = 9651291528096705358LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12622167777931096654LLU; (*it++) = 12064114410120881697LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1942651667131707105LLU; (*it++) = 15080143012651102122LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5825843310384704845LLU; (*it++) = 9425089382906938826LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16505676174835656864LLU; (*it++) = 11781361728633673532LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2185351144835019464LLU; (*it++) = 14726702160792091916LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2731688931043774330LLU; (*it++) = 18408377700990114895LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8624834609543440812LLU; (*it++) = 11505236063118821809LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15392729280356688919LLU; (*it++) = 14381545078898527261LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5405853545163697437LLU; (*it++) = 17976931348623159077LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5684501474941004850LLU; (*it++) = 11235582092889474423LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2493940825248868159LLU; (*it++) = 14044477616111843029LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7729112049988473103LLU; (*it++) = 17555597020139803786LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9442381049670183593LLU; (*it++) = 10972248137587377366LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2579604275232953683LLU; (*it++) = 13715310171984221708LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3224505344041192104LLU; (*it++) = 17144137714980277135LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8932844867666826921LLU; (*it++) = 10715086071862673209LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15777742103010921555LLU; (*it++) = 13393857589828341511LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15110491610336264040LLU; (*it++) = 16742321987285426889LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2526528228819083169LLU; (*it++) = 10463951242053391806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12381532322878629770LLU; (*it++) = 13079939052566739757LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1641857348316123500LLU; (*it++) = 16349923815708424697LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12555375888766046947LLU; (*it++) = 10218702384817765435LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11082533842530170780LLU; (*it++) = 12773377981022206794LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4629795266307937667LLU; (*it++) = 15966722476277758493LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5199465050656154994LLU; (*it++) = 9979201547673599058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15722703350174969551LLU; (*it++) = 12474001934591998822LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10430007150863936130LLU; (*it++) = 15592502418239998528LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6518754469289960081LLU; (*it++) = 9745314011399999080LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8148443086612450102LLU; (*it++) = 12181642514249998850LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 962181821410786819LLU; (*it++) = 15227053142812498563LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16742264702877599426LLU; (*it++) = 9516908214257811601LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7092772823314835570LLU; (*it++) = 11896135267822264502LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18089338065998320271LLU; (*it++) = 14870169084777830627LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8999993282035256217LLU; (*it++) = 9293855677986144142LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2026619565689294464LLU; (*it++) = 11617319597482680178LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11756646493966393888LLU; (*it++) = 14521649496853350222LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5472436080603216552LLU; (*it++) = 18152061871066687778LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8031958568804398249LLU; (*it++) = 11345038669416679861LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14651634229432885715LLU; (*it++) = 14181298336770849826LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9091170749936331336LLU; (*it++) = 17726622920963562283LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3376138709496513133LLU; (*it++) = 11079139325602226427LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18055231442152805128LLU; (*it++) = 13848924157002783033LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8733981247408842698LLU; (*it++) = 17311155196253478792LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5458738279630526686LLU; (*it++) = 10819471997658424245LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11435108867965546262LLU; (*it++) = 13524339997073030306LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5070514048102157020LLU; (*it++) = 16905424996341287883LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 863228270850154185LLU; (*it++) = 10565890622713304927LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14914093393844856443LLU; (*it++) = 13207363278391631158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9419244705451294746LLU; (*it++) = 16509204097989538948LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15110399977761835024LLU; (*it++) = 10318252561243461842LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9664627935347517973LLU; (*it++) = 12897815701554327303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7469098900757009562LLU; (*it++) = 16122269626942909129LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16197401859041600736LLU; (*it++) = 10076418516839318205LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6411694268519837208LLU; (*it++) = 12595523146049147757LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12626303854077184414LLU; (*it++) = 15744403932561434696LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7891439908798240259LLU; (*it++) = 9840252457850896685LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14475985904425188227LLU; (*it++) = 12300315572313620856LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18094982380531485284LLU; (*it++) = 15375394465392026070LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6697677969404790399LLU; (*it++) = 9609621540870016294LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17595469498610763806LLU; (*it++) = 12012026926087520367LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17382650854836066854LLU; (*it++) = 15015033657609400459LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8558313775058847832LLU; (*it++) = 9384396036005875287LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6086206200396171886LLU; (*it++) = 11730495045007344109LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12219443768922602761LLU; (*it++) = 14663118806259180136LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15274304711153253452LLU; (*it++) = 18328898507823975170LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14158126462898171311LLU; (*it++) = 11455561567389984481LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3862600023340550427LLU; (*it++) = 14319451959237480602LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14051622066030463842LLU; (*it++) = 17899314949046850752LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8782263791269039901LLU; (*it++) = 11187071843154281720LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10977829739086299876LLU; (*it++) = 13983839803942852150LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4498915137003099037LLU; (*it++) = 17479799754928565188LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12035193997481712706LLU; (*it++) = 10924874846830353242LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5820620459997365075LLU; (*it++) = 13656093558537941553LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11887461593424094248LLU; (*it++) = 17070116948172426941LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9735506505103752857LLU; (*it++) = 10668823092607766838LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2946011094524915263LLU; (*it++) = 13336028865759708548LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3682513868156144079LLU; (*it++) = 16670036082199635685LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4607414176811284001LLU; (*it++) = 10418772551374772303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1147581702586717097LLU; (*it++) = 13023465689218465379LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15269535183515560084LLU; (*it++) = 16279332111523081723LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7237616480483531100LLU; (*it++) = 10174582569701926077LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13658706619031801779LLU; (*it++) = 12718228212127407596LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17073383273789752224LLU; (*it++) = 15897785265159259495LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17588393573759676996LLU; (*it++) = 9936115790724537184LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3538747893490044629LLU; (*it++) = 12420144738405671481LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9035120885289943691LLU; (*it++) = 15525180923007089351LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12564479580947296663LLU; (*it++) = 9703238076879430844LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15705599476184120828LLU; (*it++) = 12129047596099288555LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15020313326802763131LLU; (*it++) = 15161309495124110694LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4776009810824339053LLU; (*it++) = 9475818434452569184LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5970012263530423816LLU; (*it++) = 11844773043065711480LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7462515329413029771LLU; (*it++) = 14805966303832139350LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 52386062455755702LLU; (*it++) = 9253728939895087094LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9288854614924470436LLU; (*it++) = 11567161174868858867LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6999382250228200141LLU; (*it++) = 14458951468586073584LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8749227812785250177LLU; (*it++) = 18073689335732591980LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14691639419845557168LLU; (*it++) = 11296055834832869987LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13752863256379558556LLU; (*it++) = 14120069793541087484LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17191079070474448196LLU; (*it++) = 17650087241926359355LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8438581409832836170LLU; (*it++) = 11031304526203974597LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15159912780718433117LLU; (*it++) = 13789130657754968246LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9726518939043265588LLU; (*it++) = 17236413322193710308LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15302446373756816800LLU; (*it++) = 10772758326371068942LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9904685930341245193LLU; (*it++) = 13465947907963836178LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3157485376071780683LLU; (*it++) = 16832434884954795223LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8890957387685944783LLU; (*it++) = 10520271803096747014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1890324697752655170LLU; (*it++) = 13150339753870933768LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2362905872190818963LLU; (*it++) = 16437924692338667210LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6088502188546649756LLU; (*it++) = 10273702932711667006LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16833999772538088003LLU; (*it++) = 12842128665889583757LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7207441660390446292LLU; (*it++) = 16052660832361979697LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16033866083812498692LLU; (*it++) = 10032913020226237310LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10818960567910847557LLU; (*it++) = 12541141275282796638LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4300328673033783639LLU; (*it++) = 15676426594103495798LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16522763475928278486LLU; (*it++) = 9797766621314684873LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6818396289628184396LLU; (*it++) = 12247208276643356092LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8522995362035230495LLU; (*it++) = 15309010345804195115LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3021029092058325107LLU; (*it++) = 9568131466127621947LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17611344420355070096LLU; (*it++) = 11960164332659527433LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8179122470161673908LLU; (*it++) = 14950205415824409292LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14335323580705822000LLU; (*it++) = 9343878384890255807LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13307468457454889596LLU; (*it++) = 11679847981112819759LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12022649553391224092LLU; (*it++) = 14599809976391024699LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10416625923311642211LLU; (*it++) = 18249762470488780874LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11122077220497164286LLU; (*it++) = 11406101544055488046LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4679224488766679549LLU; (*it++) = 14257626930069360058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15072402647813125244LLU; (*it++) = 17822033662586700072LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9420251654883203278LLU; (*it++) = 11138771039116687545LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16387000587031392001LLU; (*it++) = 13923463798895859431LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15872064715361852097LLU; (*it++) = 17404329748619824289LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3002511419460075705LLU; (*it++) = 10877706092887390181LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8364825292752482535LLU; (*it++) = 13597132616109237726LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1232659579085827361LLU; (*it++) = 16996415770136547158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14605470292210805812LLU; (*it++) = 10622759856335341973LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4421779809981343554LLU; (*it++) = 13278449820419177467LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 915538744049291538LLU; (*it++) = 16598062275523971834LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5183897733458195115LLU; (*it++) = 10373788922202482396LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6479872166822743894LLU; (*it++) = 12967236152753102995LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3488154190101041964LLU; (*it++) = 16209045190941378744LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2180096368813151227LLU; (*it++) = 10130653244338361715LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16560178516298602746LLU; (*it++) = 12663316555422952143LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16088537126945865529LLU; (*it++) = 15829145694278690179LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7749492695127472003LLU; (*it++) = 9893216058924181362LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 463493832054564196LLU; (*it++) = 12366520073655226703LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14414425345350368957LLU; (*it++) = 15458150092069033378LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13620701859271368502LLU; (*it++) = 9661343807543145861LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3190819268807046916LLU; (*it++) = 12076679759428932327LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17823582141290972357LLU; (*it++) = 15095849699286165408LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11139738838306857723LLU; (*it++) = 9434906062053853380LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13924673547883572154LLU; (*it++) = 11793632577567316725LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3570783879572301480LLU; (*it++) = 14742040721959145907LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18298537904747540562LLU; (*it++) = 18427550902448932383LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18354115218108294707LLU; (*it++) = 11517219314030582739LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18330958004207980480LLU; (*it++) = 14396524142538228424LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4466953431550423984LLU; (*it++) = 17995655178172785531LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 486002885505321038LLU; (*it++) = 11247284486357990957LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5219189625309039202LLU; (*it++) = 14059105607947488696LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6523987031636299002LLU; (*it++) = 17573882009934360870LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17912549950054850588LLU; (*it++) = 10983676256208975543LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17779001419141175331LLU; (*it++) = 13729595320261219429LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8388693718644305452LLU; (*it++) = 17161994150326524287LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12160462601793772764LLU; (*it++) = 10726246343954077679LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10588892233814828051LLU; (*it++) = 13407807929942597099LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8624429273841147159LLU; (*it++) = 16759759912428246374LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 778582277723329070LLU; (*it++) = 10474849945267653984LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 973227847154161338LLU; (*it++) = 13093562431584567480LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1216534808942701673LLU; (*it++) = 16366953039480709350LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14595392310871352257LLU; (*it++) = 10229345649675443343LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13632554370161802418LLU; (*it++) = 12786682062094304179LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12429006944274865118LLU; (*it++) = 15983352577617880224LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7768129340171790699LLU; (*it++) = 9989595361011175140LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9710161675214738374LLU; (*it++) = 12486994201263968925LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16749388112445810871LLU; (*it++) = 15608742751579961156LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1244995533423855986LLU; (*it++) = 9755464219737475723LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15391302472061983695LLU; (*it++) = 12194330274671844653LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5404070034795315907LLU; (*it++) = 15242912843339805817LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14906758817815542202LLU; (*it++) = 9526820527087378635LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14021762503842039848LLU; (*it++) = 11908525658859223294LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8303831092947774002LLU; (*it++) = 14885657073574029118LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 578208414664970847LLU; (*it++) = 9303535670983768199LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14557818573613377271LLU; (*it++) = 11629419588729710248LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18197273217016721589LLU; (*it++) = 14536774485912137810LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13523219484416126178LLU; (*it++) = 18170968107390172263LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15369541205401160717LLU; (*it++) = 11356855067118857664LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 765182433041899281LLU; (*it++) = 14196068833898572081LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5568164059729762005LLU; (*it++) = 17745086042373215101LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5785945546544795205LLU; (*it++) = 11090678776483259438LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16455803970035769814LLU; (*it++) = 13863348470604074297LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6734696907262548556LLU; (*it++) = 17329185588255092872LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4209185567039092847LLU; (*it++) = 10830740992659433045LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9873167977226253963LLU; (*it++) = 13538426240824291306LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3118087934678041646LLU; (*it++) = 16923032801030364133LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4254647968387469981LLU; (*it++) = 10576895500643977583LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 706623942056949572LLU; (*it++) = 13221119375804971979LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14718337982853350677LLU; (*it++) = 16526399219756214973LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11504804248497038125LLU; (*it++) = 10328999512347634358LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5157633273766521849LLU; (*it++) = 12911249390434542948LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6447041592208152311LLU; (*it++) = 16139061738043178685LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6335244004343789146LLU; (*it++) = 10086913586276986678LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17142427042284512241LLU; (*it++) = 12608641982846233347LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16816347784428252397LLU; (*it++) = 15760802478557791684LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1286845328412881940LLU; (*it++) = 9850501549098619803LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15443614715798266137LLU; (*it++) = 12313126936373274753LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5469460339465668959LLU; (*it++) = 15391408670466593442LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8030098730593431003LLU; (*it++) = 9619630419041620901LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14649309431669176658LLU; (*it++) = 12024538023802026126LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9088264752731695015LLU; (*it++) = 15030672529752532658LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10291851488884697288LLU; (*it++) = 9394170331095332911LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8253128342678483706LLU; (*it++) = 11742712913869166139LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5704724409920716729LLU; (*it++) = 14678391142336457674LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16354277549255671720LLU; (*it++) = 18347988927920572092LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 998051431430019017LLU; (*it++) = 11467493079950357558LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10470936326142299579LLU; (*it++) = 14334366349937946947LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8476984389250486570LLU; (*it++) = 17917957937422433684LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14521487280136329914LLU; (*it++) = 11198723710889021052LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18151859100170412392LLU; (*it++) = 13998404638611276315LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18078137856785627587LLU; (*it++) = 17498005798264095394LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15910522178918405146LLU; (*it++) = 10936253623915059621LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6053094668365842720LLU; (*it++) = 13670317029893824527LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2954682317029915496LLU; (*it++) = 17087896287367280659LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17987577512639554849LLU; (*it++) = 10679935179604550411LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17872785872372055657LLU; (*it++) = 13349918974505688014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13117610303610293764LLU; (*it++) = 16687398718132110018LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12810192458183821506LLU; (*it++) = 10429624198832568761LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2177682517447613171LLU; (*it++) = 13037030248540710952LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2722103146809516464LLU; (*it++) = 16296287810675888690LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6313000485183335694LLU; (*it++) = 10185179881672430431LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3279564588051781713LLU; (*it++) = 12731474852090538039LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17934513790346890853LLU; (*it++) = 15914343565113172548LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1985699082112030975LLU; (*it++) = 9946464728195732843LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16317181907922202431LLU; (*it++) = 12433080910244666053LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6561419329620589327LLU; (*it++) = 15541351137805832567LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11018416108653950185LLU; (*it++) = 9713344461128645354LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4549648098962661924LLU; (*it++) = 12141680576410806693LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10298746142130715309LLU; (*it++) = 15177100720513508366LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1825030320404309164LLU; (*it++) = 9485687950320942729LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6892973918932774359LLU; (*it++) = 11857109937901178411LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4004531380238580045LLU; (*it++) = 14821387422376473014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16337890167931276240LLU; (*it++) = 9263367138985295633LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6587304654631931588LLU; (*it++) = 11579208923731619542LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17457502855144690293LLU; (*it++) = 14474011154664524427LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17210192550503474962LLU; (*it++) = 18092513943330655534LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6144684325637283947LLU; (*it++) = 11307821214581659709LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12292541425473992838LLU; (*it++) = 14134776518227074636LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15365676781842491048LLU; (*it++) = 17668470647783843295LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16521077016292638761LLU; (*it++) = 11042794154864902059LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16039660251938410547LLU; (*it++) = 13803492693581127574LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10826203278068237376LLU; (*it++) = 17254365866976409468LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15989749085647424168LLU; (*it++) = 10783978666860255917LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6152128301777116498LLU; (*it++) = 13479973333575319897LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12301846395648783526LLU; (*it++) = 16849966666969149871LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14606183024921571560LLU; (*it++) = 10531229166855718669LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4422670725869800738LLU; (*it++) = 13164036458569648337LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10140024425764638826LLU; (*it++) = 16455045573212060421LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8643358275316593218LLU; (*it++) = 10284403483257537763LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6192511825718353619LLU; (*it++) = 12855504354071922204LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7740639782147942024LLU; (*it++) = 16069380442589902755LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2532056854628769813LLU; (*it++) = 10043362776618689222LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12388443105140738074LLU; (*it++) = 12554203470773361527LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10873867862998534689LLU; (*it++) = 15692754338466701909LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9102010423587778132LLU; (*it++) = 9807971461541688693LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15989199047912110569LLU; (*it++) = 12259964326927110866LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10763126773035362404LLU; (*it++) = 15324955408658888583LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13644483260788183358LLU; (*it++) = 9578097130411805364LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17055604075985229198LLU; (*it++) = 11972621413014756705LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7484447039699372786LLU; (*it++) = 14965776766268445882LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9289465418239495895LLU; (*it++) = 9353610478917778676LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11611831772799369869LLU; (*it++) = 11692013098647223345LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 679731660717048624LLU; (*it++) = 14615016373309029182LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10073036612751086588LLU; (*it++) = 18268770466636286477LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8601490892183123069LLU; (*it++) = 11417981541647679048LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10751863615228903837LLU; (*it++) = 14272476927059598810LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4216457482181353988LLU; (*it++) = 17840596158824498513LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14164500972431816002LLU; (*it++) = 11150372599265311570LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8482254178684994195LLU; (*it++) = 13937965749081639463LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5991131704928854840LLU; (*it++) = 17422457186352049329LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15273672361649004035LLU; (*it++) = 10889035741470030830LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9868718415206479236LLU; (*it++) = 13611294676837538538LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3112525982153323237LLU; (*it++) = 17014118346046923173LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4251171748059520975LLU; (*it++) = 10633823966279326983LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 702278666647013314LLU; (*it++) = 13292279957849158729LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5489534351736154547LLU; (*it++) = 16615349947311448411LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1125115960621402640LLU; (*it++) = 10384593717069655257LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6018080969204141204LLU; (*it++) = 12980742146337069071LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2910915193077788601LLU; (*it++) = 16225927682921336339LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17960223060169475539LLU; (*it++) = 10141204801825835211LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17838592806784456520LLU; (*it++) = 12676506002282294014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13074868971625794843LLU; (*it++) = 15845632502852867518LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3560107088838733872LLU; (*it++) = 9903520314283042199LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18285191916330581053LLU; (*it++) = 12379400392853802748LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4409745821703674700LLU; (*it++) = 15474250491067253436LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11979463175419572495LLU; (*it++) = 9671406556917033397LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1139270913992301907LLU; (*it++) = 12089258196146291747LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15259146697772541096LLU; (*it++) = 15111572745182864683LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7231123676894144233LLU; (*it++) = 9444732965739290427LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4427218577690292387LLU; (*it++) = 11805916207174113034LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14757395258967641292LLU; (*it++) = 14757395258967641292LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 9223372036854775808LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 11529215046068469760LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 14411518807585587200LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 18014398509481984000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 11258999068426240000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 14073748835532800000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 17592186044416000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10995116277760000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 13743895347200000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 17179869184000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10737418240000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 13421772800000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 16777216000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10485760000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 13107200000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 16384000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10240000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 12800000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 16000000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10000000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 12500000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 15625000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 9765625000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 12207031250000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 15258789062500000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 9536743164062500000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 11920928955078125000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 14901161193847656250LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4611686018427387904LLU; (*it++) = 9313225746154785156LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5764607523034234880LLU; (*it++) = 11641532182693481445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11817445422220181504LLU; (*it++) = 14551915228366851806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5548434740920451072LLU; (*it++) = 18189894035458564758LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17302829768357445632LLU; (*it++) = 11368683772161602973LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7793479155164643328LLU; (*it++) = 14210854715202003717LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14353534962383192064LLU; (*it++) = 17763568394002504646LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4359273333062107136LLU; (*it++) = 11102230246251565404LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5449091666327633920LLU; (*it++) = 13877787807814456755LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2199678564482154496LLU; (*it++) = 17347234759768070944LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1374799102801346560LLU; (*it++) = 10842021724855044340LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1718498878501683200LLU; (*it++) = 13552527156068805425LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6759809616554491904LLU; (*it++) = 16940658945086006781LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6530724019560251392LLU; (*it++) = 10587911840678754238LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17386777061305090048LLU; (*it++) = 13234889800848442797LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7898413271349198848LLU; (*it++) = 16543612251060553497LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16465723340661719040LLU; (*it++) = 10339757656912845935LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15970468157399760896LLU; (*it++) = 12924697071141057419LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15351399178322313216LLU; (*it++) = 16155871338926321774LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4982938468024057856LLU; (*it++) = 10097419586828951109LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10840359103457460224LLU; (*it++) = 12621774483536188886LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4327076842467049472LLU; (*it++) = 15777218104420236108LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11927795063396681728LLU; (*it++) = 9860761315262647567LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10298057810818464256LLU; (*it++) = 12325951644078309459LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8260886245095692416LLU; (*it++) = 15407439555097886824LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5163053903184807760LLU; (*it++) = 9629649721936179265LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11065503397408397604LLU; (*it++) = 12037062152420224081LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18443565265187884909LLU; (*it++) = 15046327690525280101LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13833071299956122020LLU; (*it++) = 9403954806578300063LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12679653106517764621LLU; (*it++) = 11754943508222875079LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11237880364719817872LLU; (*it++) = 14693679385278593849LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 212292400617608628LLU; (*it++) = 18367099231598242312LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 132682750386005392LLU; (*it++) = 11479437019748901445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4777539456409894645LLU; (*it++) = 14349296274686126806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15195296357367144114LLU; (*it++) = 17936620343357658507LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7191217214140771119LLU; (*it++) = 11210387714598536567LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4377335499248575995LLU; (*it++) = 14012984643248170709LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10083355392488107898LLU; (*it++) = 17516230804060213386LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10913783138732455340LLU; (*it++) = 10947644252537633366LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4418856886560793367LLU; (*it++) = 13684555315672041708LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5523571108200991709LLU; (*it++) = 17105694144590052135LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10369760970266701674LLU; (*it++) = 10691058840368782584LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12962201212833377092LLU; (*it++) = 13363823550460978230LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6979379479186945558LLU; (*it++) = 16704779438076222788LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13585484211346616781LLU; (*it++) = 10440487148797639242LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7758483227328495169LLU; (*it++) = 13050608935997049053LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14309790052588006865LLU; (*it++) = 16313261169996311316LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18166990819722280098LLU; (*it++) = 10195788231247694572LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4261994450943298507LLU; (*it++) = 12744735289059618216LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5327493063679123134LLU; (*it++) = 15930919111324522770LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7941369183226839863LLU; (*it++) = 9956824444577826731LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5315025460606161924LLU; (*it++) = 12446030555722283414LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15867153862612478214LLU; (*it++) = 15557538194652854267LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7611128154919104931LLU; (*it++) = 9723461371658033917LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14125596212076269068LLU; (*it++) = 12154326714572542396LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17656995265095336336LLU; (*it++) = 15192908393215677995LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8729779031470891258LLU; (*it++) = 9495567745759798747LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6300537770911226168LLU; (*it++) = 11869459682199748434LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17099044250493808518LLU; (*it++) = 14836824602749685542LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6075216638131242420LLU; (*it++) = 9273015376718553464LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7594020797664053025LLU; (*it++) = 11591269220898191830LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 269153960225290473LLU; (*it++) = 14489086526122739788LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 336442450281613091LLU; (*it++) = 18111358157653424735LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7127805559067090038LLU; (*it++) = 11319598848533390459LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4298070930406474644LLU; (*it++) = 14149498560666738074LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14595960699862869113LLU; (*it++) = 17686873200833422592LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9122475437414293195LLU; (*it++) = 11054295750520889120LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11403094296767866494LLU; (*it++) = 13817869688151111400LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14253867870959833118LLU; (*it++) = 17272337110188889250LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13520353437777283602LLU; (*it++) = 10795210693868055781LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3065383741939440791LLU; (*it++) = 13494013367335069727LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17666787732706464701LLU; (*it++) = 16867516709168837158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6430056314514152534LLU; (*it++) = 10542197943230523224LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8037570393142690668LLU; (*it++) = 13177747429038154030LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 823590954573587527LLU; (*it++) = 16472184286297692538LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5126430365035880108LLU; (*it++) = 10295115178936057836LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6408037956294850135LLU; (*it++) = 12868893973670072295LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3398361426941174765LLU; (*it++) = 16086117467087590369LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13653190937906703988LLU; (*it++) = 10053823416929743980LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17066488672383379985LLU; (*it++) = 12567279271162179975LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16721424822051837077LLU; (*it++) = 15709099088952724969LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3533361486141316317LLU; (*it++) = 9818186930595453106LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13640073894531421205LLU; (*it++) = 12272733663244316382LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7826720331309500698LLU; (*it++) = 15340917079055395478LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 280014188641050032LLU; (*it++) = 9588073174409622174LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9573389772656088348LLU; (*it++) = 11985091468012027717LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16578423234247498339LLU; (*it++) = 14981364335015034646LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5749828502977298558LLU; (*it++) = 9363352709384396654LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16410657665576399005LLU; (*it++) = 11704190886730495817LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6678264026688335045LLU; (*it++) = 14630238608413119772LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8347830033360418806LLU; (*it++) = 18287798260516399715LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2911550761636567802LLU; (*it++) = 11429873912822749822LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12862810488900485560LLU; (*it++) = 14287342391028437277LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2243455055843443238LLU; (*it++) = 17859177988785546597LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3708002419115845976LLU; (*it++) = 11161986242990966623LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 23317005467419566LLU; (*it++) = 13952482803738708279LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13864204312116438170LLU; (*it++) = 17440603504673385348LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17888499731927549664LLU; (*it++) = 10900377190420865842LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13137252628054661272LLU; (*it++) = 13625471488026082303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11809879766640938686LLU; (*it++) = 17031839360032602879LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14298703881791668535LLU; (*it++) = 10644899600020376799LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13261693833812197764LLU; (*it++) = 13306124500025470999LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11965431273837859301LLU; (*it++) = 16632655625031838749LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9784237555362356015LLU; (*it++) = 10395409765644899218LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3006924907348169211LLU; (*it++) = 12994262207056124023LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17593714189467375226LLU; (*it++) = 16242827758820155028LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1772699331562333708LLU; (*it++) = 10151767349262596893LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6827560182880305039LLU; (*it++) = 12689709186578246116LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8534450228600381299LLU; (*it++) = 15862136483222807645LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7639874402088932264LLU; (*it++) = 9913835302014254778LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 326470965756389522LLU; (*it++) = 12392294127517818473LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5019774725622874806LLU; (*it++) = 15490367659397273091LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 831516194300602802LLU; (*it++) = 9681479787123295682LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10262767279730529310LLU; (*it++) = 12101849733904119602LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3605087062808385830LLU; (*it++) = 15127312167380149503LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9170708441896323000LLU; (*it++) = 9454570104612593439LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6851699533943015846LLU; (*it++) = 11818212630765741799LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3952938399001381903LLU; (*it++) = 14772765788457177249LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13999801545444333449LLU; (*it++) = 9232978617785735780LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17499751931805416812LLU; (*it++) = 11541223272232169725LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8039631859474607303LLU; (*it++) = 14426529090290212157LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14661225842770647033LLU; (*it++) = 18033161362862765196LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18386638188586430203LLU; (*it++) = 11270725851789228247LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18371611717305649850LLU; (*it++) = 14088407314736535309LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9129456591349898601LLU; (*it++) = 17610509143420669137LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17235125415662156385LLU; (*it++) = 11006568214637918210LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12320534732722919674LLU; (*it++) = 13758210268297397763LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10788982397476261688LLU; (*it++) = 17197762835371747204LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15966486035277439363LLU; (*it++) = 10748601772107342002LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10734735507242023396LLU; (*it++) = 13435752215134177503LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8806733365625141341LLU; (*it++) = 16794690268917721879LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12421737381156795194LLU; (*it++) = 10496681418073576174LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6303799689591218185LLU; (*it++) = 13120851772591970218LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17103121648843798539LLU; (*it++) = 16401064715739962772LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1466078993672598279LLU; (*it++) = 10250665447337476733LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6444284760518135752LLU; (*it++) = 12813331809171845916LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8055355950647669691LLU; (*it++) = 16016664761464807395LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2728754459941099604LLU; (*it++) = 10010415475915504622LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12634315111781150314LLU; (*it++) = 12513019344894380777LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1957835834444274180LLU; (*it++) = 15641274181117975972LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10447019433382447170LLU; (*it++) = 9775796363198734982LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3835402254873283155LLU; (*it++) = 12219745453998418728LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4794252818591603944LLU; (*it++) = 15274681817498023410LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7608094030047140369LLU; (*it++) = 9546676135936264631LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4898431519131537557LLU; (*it++) = 11933345169920330789LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10734725417341809851LLU; (*it++) = 14916681462400413486LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2097517367411243253LLU; (*it++) = 9322925914000258429LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7233582727691441970LLU; (*it++) = 11653657392500323036LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9041978409614302462LLU; (*it++) = 14567071740625403795LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6690786993590490174LLU; (*it++) = 18208839675781754744LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4181741870994056359LLU; (*it++) = 11380524797363596715LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 615491320315182544LLU; (*it++) = 14225655996704495894LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9992736187248753989LLU; (*it++) = 17782069995880619867LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3939617107816777291LLU; (*it++) = 11113793747425387417LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9536207403198359517LLU; (*it++) = 13892242184281734271LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7308573235570561493LLU; (*it++) = 17365302730352167839LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11485387299872682789LLU; (*it++) = 10853314206470104899LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9745048106413465582LLU; (*it++) = 13566642758087631124LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12181310133016831978LLU; (*it++) = 16958303447609538905LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 695789805494438130LLU; (*it++) = 10598939654755961816LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 869737256868047663LLU; (*it++) = 13248674568444952270LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10310543607939835386LLU; (*it++) = 16560843210556190337LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17973304801030866876LLU; (*it++) = 10350527006597618960LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4019886927579031980LLU; (*it++) = 12938158758247023701LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9636544677901177879LLU; (*it++) = 16172698447808779626LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10634526442115624078LLU; (*it++) = 10107936529880487266LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4069786015789754290LLU; (*it++) = 12634920662350609083LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 475546501309804958LLU; (*it++) = 15793650827938261354LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4908902581746016003LLU; (*it++) = 9871031767461413346LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15359500264037295811LLU; (*it++) = 12338789709326766682LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9976003293191843956LLU; (*it++) = 15423487136658458353LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17764217104313372233LLU; (*it++) = 9639679460411536470LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12981899343536939483LLU; (*it++) = 12049599325514420588LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16227374179421174354LLU; (*it++) = 15061999156893025735LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17059637889779315827LLU; (*it++) = 9413749473058141084LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2877803288514593168LLU; (*it++) = 11767186841322676356LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3597254110643241460LLU; (*it++) = 14708983551653345445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9108253656731439729LLU; (*it++) = 18386229439566681806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1080972517029761926LLU; (*it++) = 11491393399729176129LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5962901664714590312LLU; (*it++) = 14364241749661470161LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12065313099320625794LLU; (*it++) = 17955302187076837701LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9846663696289085073LLU; (*it++) = 11222063866923023563LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7696643601933968437LLU; (*it++) = 14027579833653779454LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 397432465562684739LLU; (*it++) = 17534474792067224318LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14083453346258841674LLU; (*it++) = 10959046745042015198LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8380944645968776284LLU; (*it++) = 13698808431302518998LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1252808770606194547LLU; (*it++) = 17123510539128148748LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10006377518483647400LLU; (*it++) = 10702194086955092967LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7896285879677171346LLU; (*it++) = 13377742608693866209LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14482043368023852087LLU; (*it++) = 16722178260867332761LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2133748077373825698LLU; (*it++) = 10451361413042082976LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2667185096717282123LLU; (*it++) = 13064201766302603720LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3333981370896602653LLU; (*it++) = 16330252207878254650LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6695424375237764562LLU; (*it++) = 10206407629923909156LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8369280469047205703LLU; (*it++) = 12758009537404886445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15073286604736395033LLU; (*it++) = 15947511921756108056LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9420804127960246895LLU; (*it++) = 9967194951097567535LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7164319141522920715LLU; (*it++) = 12458993688871959419LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4343712908476262990LLU; (*it++) = 15573742111089949274LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7326506586225052273LLU; (*it++) = 9733588819431218296LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9158133232781315341LLU; (*it++) = 12166986024289022870LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2224294504121868368LLU; (*it++) = 15208732530361278588LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10613556101930943538LLU; (*it++) = 9505457831475799117LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17878631145841067327LLU; (*it++) = 11881822289344748896LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3901544858591782542LLU; (*it++) = 14852277861680936121LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13967680582688333849LLU; (*it++) = 9282673663550585075LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12847914709933029407LLU; (*it++) = 11603342079438231344LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16059893387416286759LLU; (*it++) = 14504177599297789180LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1628122660560806833LLU; (*it++) = 18130221999122236476LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10240948699705280078LLU; (*it++) = 11331388749451397797LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17412871893058988002LLU; (*it++) = 14164235936814247246LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12542717829468959195LLU; (*it++) = 17705294921017809058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12450884661845487401LLU; (*it++) = 11065809325636130661LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1728547772024695539LLU; (*it++) = 13832261657045163327LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15995742770313033136LLU; (*it++) = 17290327071306454158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5385653213018257806LLU; (*it++) = 10806454419566533849LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11343752534700210161LLU; (*it++) = 13508068024458167311LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9568004649947874797LLU; (*it++) = 16885085030572709139LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3674159897003727796LLU; (*it++) = 10553178144107943212LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4592699871254659745LLU; (*it++) = 13191472680134929015LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1129188820640936778LLU; (*it++) = 16489340850168661269LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3011586022114279438LLU; (*it++) = 10305838031355413293LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8376168546070237202LLU; (*it++) = 12882297539194266616LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10470210682587796502LLU; (*it++) = 16102871923992833270LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1932195658189984910LLU; (*it++) = 10064294952495520794LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11638616609592256945LLU; (*it++) = 12580368690619400992LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14548270761990321182LLU; (*it++) = 15725460863274251240LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9092669226243950738LLU; (*it++) = 9828413039546407025LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15977522551232326327LLU; (*it++) = 12285516299433008781LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6136845133758244197LLU; (*it++) = 15356895374291260977LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15364743254667372383LLU; (*it++) = 9598059608932038110LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9982557031479439671LLU; (*it++) = 11997574511165047638LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3254824252494523781LLU; (*it++) = 14996968138956309548LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11257637194663853171LLU; (*it++) = 9373105086847693467LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9460360474902428559LLU; (*it++) = 11716381358559616834LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2602078556773259891LLU; (*it++) = 14645476698199521043LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17087656251248738576LLU; (*it++) = 18306845872749401303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17597314184671543466LLU; (*it++) = 11441778670468375814LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12773270693984653525LLU; (*it++) = 14302223338085469768LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15966588367480816906LLU; (*it++) = 17877779172606837210LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14590803748102898470LLU; (*it++) = 11173611982879273256LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18238504685128623088LLU; (*it++) = 13967014978599091570LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13574758819556003052LLU; (*it++) = 17458768723248864463LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15401753289863583763LLU; (*it++) = 10911730452030540289LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5417133557047315992LLU; (*it++) = 13639663065038175362LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15994788983163920798LLU; (*it++) = 17049578831297719202LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14608429132904838403LLU; (*it++) = 10655986769561074501LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4425478360848884291LLU; (*it++) = 13319983461951343127LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 920161932633717460LLU; (*it++) = 16649979327439178909LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2880944217109767365LLU; (*it++) = 10406237079649486818LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12824552308241985014LLU; (*it++) = 13007796349561858522LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6807318348447705459LLU; (*it++) = 16259745436952323153LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15783789013848285672LLU; (*it++) = 10162340898095201970LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10506364230455581282LLU; (*it++) = 12702926122619002463LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8521269269642088699LLU; (*it++) = 15878657653273753079LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12243322321167387293LLU; (*it++) = 9924161033296095674LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6080780864604458308LLU; (*it++) = 12405201291620119593LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12212662099182960789LLU; (*it++) = 15506501614525149491LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5327070802775656541LLU; (*it++) = 9691563509078218432LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6658838503469570676LLU; (*it++) = 12114454386347773040LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8323548129336963345LLU; (*it++) = 15143067982934716300LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14425589617690377899LLU; (*it++) = 9464417489334197687LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13420301003685584469LLU; (*it++) = 11830521861667747109LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2940318199324816875LLU; (*it++) = 14788152327084683887LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8755227902219092403LLU; (*it++) = 9242595204427927429LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15555720896201253407LLU; (*it++) = 11553244005534909286LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10221279083396790951LLU; (*it++) = 14441555006918636608LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12776598854245988689LLU; (*it++) = 18051943758648295760LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7985374283903742931LLU; (*it++) = 11282464849155184850LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 758345818024902856LLU; (*it++) = 14103081061443981063LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14782990327813292282LLU; (*it++) = 17628851326804976328LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9239368954883307676LLU; (*it++) = 11018032079253110205LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16160897212031522499LLU; (*it++) = 13772540099066387756LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1754377441329851508LLU; (*it++) = 17215675123832984696LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1096485900831157192LLU; (*it++) = 10759796952395615435LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15205665431321110202LLU; (*it++) = 13449746190494519293LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5172023733869224041LLU; (*it++) = 16812182738118149117LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5538357842881958977LLU; (*it++) = 10507614211323843198LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16146319340457224530LLU; (*it++) = 13134517764154803997LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6347841120289366950LLU; (*it++) = 16418147205193504997LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6273243709394548296LLU; (*it++) = 10261342003245940623LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3229868618315797466LLU; (*it++) = 12826677504057425779LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17872393828176910545LLU; (*it++) = 16033346880071782223LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18087775170251650946LLU; (*it++) = 10020841800044863889LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8774660907532399971LLU; (*it++) = 12526052250056079862LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1744954097560724156LLU; (*it++) = 15657565312570099828LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10313968347830228405LLU; (*it++) = 9785978320356312392LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12892460434787785506LLU; (*it++) = 12232472900445390490LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6892203506629956075LLU; (*it++) = 15290591125556738113LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15836842237712192307LLU; (*it++) = 9556619453472961320LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1349308723430688768LLU; (*it++) = 11945774316841201651LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15521693959570524672LLU; (*it++) = 14932217896051502063LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16618587752372659776LLU; (*it++) = 9332636185032188789LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6938176635183661008LLU; (*it++) = 11665795231290235987LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4061034775552188356LLU; (*it++) = 14582244039112794984LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5076293469440235445LLU; (*it++) = 18227805048890993730LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7784369436827535057LLU; (*it++) = 11392378155556871081LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14342147814461806725LLU; (*it++) = 14240472694446088851LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13315998749649870503LLU; (*it++) = 17800590868057611064LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8322499218531169064LLU; (*it++) = 11125369292536006915LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5791438004736573426LLU; (*it++) = 13906711615670008644LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7239297505920716783LLU; (*it++) = 17383389519587510805LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6830403950414141941LLU; (*it++) = 10864618449742194253LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13149690956445065330LLU; (*it++) = 13580773062177742816LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16437113695556331663LLU; (*it++) = 16975966327722178520LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10273196059722707289LLU; (*it++) = 10609978954826361575LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8229809056225996208LLU; (*it++) = 13262473693532951969LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14898947338709883164LLU; (*it++) = 16578092116916189961LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2394313059052595121LLU; (*it++) = 10361307573072618726LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12216263360670519709LLU; (*it++) = 12951634466340773407LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10658643182410761733LLU; (*it++) = 16189543082925966759LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13579181016647807939LLU; (*it++) = 10118464426828729224LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16973976270809759924LLU; (*it++) = 12648080533535911530LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11994098301657424097LLU; (*it++) = 15810100666919889413LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9802154447749584012LLU; (*it++) = 9881312916824930883LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7641007041259592112LLU; (*it++) = 12351641146031163604LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9551258801574490140LLU; (*it++) = 15439551432538954505LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17498751797052526097LLU; (*it++) = 9649719645336846565LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8038381691033493909LLU; (*it++) = 12062149556671058207LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5436291095364479483LLU; (*it++) = 15077686945838822759LLU; __jule_collection; }); __jule_collection; });
	_1e2187e1e_powtab = ({ auto __jule_collection = jule::Slice<jule::I64>::alloc(9, 9); auto it = __jule_collection.begin(); (*it++) = 1LL; (*it++) = 3LL; (*it++) = 6LL; (*it++) = 9LL; (*it++) = 13LL; (*it++) = 16LL; (*it++) = 19LL; (*it++) = 23LL; (*it++) = 26LL; __jule_collection; });
	_1e21889d0_f64pow10 = ({ auto __jule_collection = jule::Slice<jule::F64>::alloc(23, 23); auto it = __jule_collection.begin(); (*it++) = 1LL; (*it++) = 10LL; (*it++) = 100LL; (*it++) = 1000LL; (*it++) = 10000LL; (*it++) = 100000LL; (*it++) = 1000000LL; (*it++) = 10000000LL; (*it++) = 100000000LL; (*it++) = 1000000000LL; (*it++) = 10000000000LL; (*it++) = 100000000000LL; (*it++) = 1000000000000LL; (*it++) = 10000000000000LL; (*it++) = 100000000000000LL; (*it++) = 1000000000000000LL; (*it++) = 10000000000000000LL; (*it++) = 100000000000000000LL; (*it++) = 1000000000000000000LL; (*it++) = 10000000000000000000LLU; (*it++) = 100000000000000000000.0; (*it++) = 1000000000000000000000.0; (*it++) = 10000000000000000000000.0; __jule_collection; });
	_1e2188d10_f32pow10 = ({ auto __jule_collection = jule::Slice<jule::F32>::alloc(11, 11); auto it = __jule_collection.begin(); (*it++) = 1.0f; (*it++) = 10.0f; (*it++) = 100.0f; (*it++) = 1000.0f; (*it++) = 10000.0f; (*it++) = 100000.0f; (*it++) = 1000000.0f; (*it++) = 10000000.0f; (*it++) = 100000000.0f; (*it++) = 1000000000.0f; (*it++) = 10000000000.0f; __jule_collection; });
	_1e218c066_u64pow10 = ({ auto __jule_collection = jule::Array<jule::U64,20>(); auto it = __jule_collection.begin(); (*it++) = 1LLU; (*it++) = 10LLU; (*it++) = 100LLU; (*it++) = 1000LLU; (*it++) = 10000LLU; (*it++) = 100000LLU; (*it++) = 1000000LLU; (*it++) = 10000000LLU; (*it++) = 100000000LLU; (*it++) = 1000000000LLU; (*it++) = 10000000000LLU; (*it++) = 100000000000LLU; (*it++) = 1000000000000LLU; (*it++) = 10000000000000LLU; (*it++) = 100000000000000LLU; (*it++) = 1000000000000000LLU; (*it++) = 10000000000000000LLU; (*it++) = 100000000000000000LLU; (*it++) = 1000000000000000000LLU; (*it++) = 10000000000000000000LLU; __jule_collection; });
	_1e2191235_leftCheats = ({ auto __jule_collection = jule::Slice<_1e2190d06_leftCheat>::alloc(61, 61); auto it = __jule_collection.begin(); (*it++) = _1e2190d06_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()}; (*it++) = _1e2190d06_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("5", 1)}; (*it++) = _1e2190d06_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("25", 2)}; (*it++) = _1e2190d06_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("125", 3)}; (*it++) = _1e2190d06_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("625", 3)}; (*it++) = _1e2190d06_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("3125", 4)}; (*it++) = _1e2190d06_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("15625", 5)}; (*it++) = _1e2190d06_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("78125", 5)}; (*it++) = _1e2190d06_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("390625", 6)}; (*it++) = _1e2190d06_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("1953125", 7)}; (*it++) = _1e2190d06_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("9765625", 7)}; (*it++) = _1e2190d06_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("48828125", 8)}; (*it++) = _1e2190d06_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("244140625", 9)}; (*it++) = _1e2190d06_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("1220703125", 10)}; (*it++) = _1e2190d06_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("6103515625", 10)}; (*it++) = _1e2190d06_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("30517578125", 11)}; (*it++) = _1e2190d06_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("152587890625", 12)}; (*it++) = _1e2190d06_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("762939453125", 12)}; (*it++) = _1e2190d06_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("3814697265625", 13)}; (*it++) = _1e2190d06_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("19073486328125", 14)}; (*it++) = _1e2190d06_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("95367431640625", 14)}; (*it++) = _1e2190d06_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("476837158203125", 15)}; (*it++) = _1e2190d06_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("2384185791015625", 16)}; (*it++) = _1e2190d06_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("11920928955078125", 17)}; (*it++) = _1e2190d06_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("59604644775390625", 17)}; (*it++) = _1e2190d06_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("298023223876953125", 18)}; (*it++) = _1e2190d06_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("1490116119384765625", 19)}; (*it++) = _1e2190d06_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("7450580596923828125", 19)}; (*it++) = _1e2190d06_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("37252902984619140625", 20)}; (*it++) = _1e2190d06_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("186264514923095703125", 21)}; (*it++) = _1e2190d06_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("931322574615478515625", 21)}; (*it++) = _1e2190d06_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("4656612873077392578125", 22)}; (*it++) = _1e2190d06_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("23283064365386962890625", 23)}; (*it++) = _1e2190d06_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("116415321826934814453125", 24)}; (*it++) = _1e2190d06_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("582076609134674072265625", 24)}; (*it++) = _1e2190d06_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("2910383045673370361328125", 25)}; (*it++) = _1e2190d06_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("14551915228366851806640625", 26)}; (*it++) = _1e2190d06_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("72759576141834259033203125", 26)}; (*it++) = _1e2190d06_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("363797880709171295166015625", 27)}; (*it++) = _1e2190d06_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("1818989403545856475830078125", 28)}; (*it++) = _1e2190d06_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("9094947017729282379150390625", 28)}; (*it++) = _1e2190d06_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("45474735088646411895751953125", 29)}; (*it++) = _1e2190d06_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("227373675443232059478759765625", 30)}; (*it++) = _1e2190d06_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("1136868377216160297393798828125", 31)}; (*it++) = _1e2190d06_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("5684341886080801486968994140625", 31)}; (*it++) = _1e2190d06_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("28421709430404007434844970703125", 32)}; (*it++) = _1e2190d06_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("142108547152020037174224853515625", 33)}; (*it++) = _1e2190d06_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("710542735760100185871124267578125", 33)}; (*it++) = _1e2190d06_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("3552713678800500929355621337890625", 34)}; (*it++) = _1e2190d06_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("17763568394002504646778106689453125", 35)}; (*it++) = _1e2190d06_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("88817841970012523233890533447265625", 35)}; (*it++) = _1e2190d06_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("444089209850062616169452667236328125", 36)}; (*it++) = _1e2190d06_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("2220446049250313080847263336181640625", 37)}; (*it++) = _1e2190d06_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("11102230246251565404236316680908203125", 38)}; (*it++) = _1e2190d06_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("55511151231257827021181583404541015625", 38)}; (*it++) = _1e2190d06_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("277555756156289135105907917022705078125", 39)}; (*it++) = _1e2190d06_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("1387778780781445675529539585113525390625", 40)}; (*it++) = _1e2190d06_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("6938893903907228377647697925567626953125", 40)}; (*it++) = _1e2190d06_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("34694469519536141888238489627838134765625", 41)}; (*it++) = _1e2190d06_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("173472347597680709441192448139190673828125", 42)}; (*it++) = _1e2190d06_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str::lit("867361737988403547205962240695953369140625", 42)}; __jule_collection; });
	_1e2197769_BitSize = 0LL;
	_1e2197a66_SysInt = jule::Str();
	_1e2197d1e_SysUint = jule::Str();
	_1e5be5bcb_Spaces = ({ auto __jule_collection = jule::Array<jule::I32,5>(); auto it = __jule_collection.begin(); (*it++) = ' '; (*it++) = '\t'; (*it++) = '\v'; (*it++) = '\r'; (*it++) = '\n'; __jule_collection; });
	_1e5be5dda_UnaryOps = ({ auto __jule_collection = jule::Array<jule::U64,6>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U64>(61LLU); (*it++) = static_cast<jule::U64>(60LLU); (*it++) = static_cast<jule::U64>(67LLU); (*it++) = static_cast<jule::U64>(68LLU); (*it++) = static_cast<jule::U64>(62LLU); (*it++) = static_cast<jule::U64>(65LLU); __jule_collection; });
	_1e5be612c_BinOps = ({ auto __jule_collection = jule::Array<jule::U64,18>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U64>(60LLU); (*it++) = static_cast<jule::U64>(61LLU); (*it++) = static_cast<jule::U64>(62LLU); (*it++) = static_cast<jule::U64>(63LLU); (*it++) = static_cast<jule::U64>(64LLU); (*it++) = static_cast<jule::U64>(65LLU); (*it++) = static_cast<jule::U64>(66LLU); (*it++) = static_cast<jule::U64>(67LLU); (*it++) = static_cast<jule::U64>(56LLU); (*it++) = static_cast<jule::U64>(57LLU); (*it++) = static_cast<jule::U64>(69LLU); (*it++) = static_cast<jule::U64>(70LLU); (*it++) = static_cast<jule::U64>(53LLU); (*it++) = static_cast<jule::U64>(52LLU); (*it++) = static_cast<jule::U64>(54LLU); (*it++) = static_cast<jule::U64>(55LLU); (*it++) = static_cast<jule::U64>(50LLU); (*it++) = static_cast<jule::U64>(51LLU); __jule_collection; });
	_1e5c890b0_PostfixOps = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U64>(58LLU); (*it++) = static_cast<jule::U64>(59LLU); __jule_collection; });
	_1e5c8939b_AssignOps = ({ auto __jule_collection = jule::Array<jule::U64,11>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U64>(71LLU); (*it++) = static_cast<jule::U64>(40LLU); (*it++) = static_cast<jule::U64>(41LLU); (*it++) = static_cast<jule::U64>(43LLU); (*it++) = static_cast<jule::U64>(42LLU); (*it++) = static_cast<jule::U64>(44LLU); (*it++) = static_cast<jule::U64>(46LLU); (*it++) = static_cast<jule::U64>(45LLU); (*it++) = static_cast<jule::U64>(49LLU); (*it++) = static_cast<jule::U64>(48LLU); (*it++) = static_cast<jule::U64>(47LLU); __jule_collection; });
	_1e5c978e8_keywords = ({ auto __jule_collection = jule::Array<_1e5c974b9_kindPair,28>(); auto it = __jule_collection.begin(); (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("const", 5)), ._field_id=static_cast<jule::U64>(6LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("ret", 3)), ._field_id=static_cast<jule::U64>(2LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("type", 4)), ._field_id=static_cast<jule::U64>(7LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("for", 3)), ._field_id=static_cast<jule::U64>(9LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("break", 5)), ._field_id=static_cast<jule::U64>(10LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("continue", 8)), ._field_id=static_cast<jule::U64>(11LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("in", 2)), ._field_id=static_cast<jule::U64>(12LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("if", 2)), ._field_id=static_cast<jule::U64>(13LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("else", 4)), ._field_id=static_cast<jule::U64>(14LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("use", 3)), ._field_id=static_cast<jule::U64>(16LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("goto", 4)), ._field_id=static_cast<jule::U64>(18LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("enum", 4)), ._field_id=static_cast<jule::U64>(20LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("struct", 6)), ._field_id=static_cast<jule::U64>(21LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("co", 2)), ._field_id=static_cast<jule::U64>(22LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("match", 5)), ._field_id=static_cast<jule::U64>(23LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("self", 4)), ._field_id=static_cast<jule::U64>(24LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("trait", 5)), ._field_id=static_cast<jule::U64>(25LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("impl", 4)), ._field_id=static_cast<jule::U64>(26LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("cpp", 3)), ._field_id=static_cast<jule::U64>(27LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("fall", 4)), ._field_id=static_cast<jule::U64>(28LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("fn", 2)), ._field_id=static_cast<jule::U64>(29LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("let", 3)), ._field_id=static_cast<jule::U64>(30LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("unsafe", 6)), ._field_id=static_cast<jule::U64>(31LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("mut", 3)), ._field_id=static_cast<jule::U64>(32LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("defer", 5)), ._field_id=static_cast<jule::U64>(33LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("static", 6)), ._field_id=static_cast<jule::U64>(34LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("error", 5)), ._field_id=static_cast<jule::U64>(36LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("map", 3)), ._field_id=static_cast<jule::U64>(37LLU)}; __jule_collection; });
	_1e5c97c28_basicOps = ({ auto __jule_collection = jule::Array<_1e5c974b9_kindPair,46>(); auto it = __jule_collection.begin(); (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("::", 2)), ._field_id=static_cast<jule::U64>(19LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(":=", 2)), ._field_id=static_cast<jule::U64>(38LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(":", 1)), ._field_id=static_cast<jule::U64>(8LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(";", 1)), ._field_id=static_cast<jule::U64>(3LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(",", 1)), ._field_id=static_cast<jule::U64>(5LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("...", 3)), ._field_id=static_cast<jule::U64>(39LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(".", 1)), ._field_id=static_cast<jule::U64>(17LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("+=", 2)), ._field_id=static_cast<jule::U64>(40LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("-=", 2)), ._field_id=static_cast<jule::U64>(41LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("*=", 2)), ._field_id=static_cast<jule::U64>(42LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("/=", 2)), ._field_id=static_cast<jule::U64>(43LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("%=", 2)), ._field_id=static_cast<jule::U64>(44LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("<<=", 3)), ._field_id=static_cast<jule::U64>(45LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(">>=", 3)), ._field_id=static_cast<jule::U64>(46LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("^=", 2)), ._field_id=static_cast<jule::U64>(47LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("&=", 2)), ._field_id=static_cast<jule::U64>(48LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("|=", 2)), ._field_id=static_cast<jule::U64>(49LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("==", 2)), ._field_id=static_cast<jule::U64>(50LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("!=", 2)), ._field_id=static_cast<jule::U64>(51LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(">=", 2)), ._field_id=static_cast<jule::U64>(52LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("<=", 2)), ._field_id=static_cast<jule::U64>(53LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("&&", 2)), ._field_id=static_cast<jule::U64>(54LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("||", 2)), ._field_id=static_cast<jule::U64>(55LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("<<", 2)), ._field_id=static_cast<jule::U64>(56LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(">>", 2)), ._field_id=static_cast<jule::U64>(57LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("++", 2)), ._field_id=static_cast<jule::U64>(58LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("--", 2)), ._field_id=static_cast<jule::U64>(59LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("+", 1)), ._field_id=static_cast<jule::U64>(60LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("-", 1)), ._field_id=static_cast<jule::U64>(61LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("*", 1)), ._field_id=static_cast<jule::U64>(62LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("/", 1)), ._field_id=static_cast<jule::U64>(63LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("%", 1)), ._field_id=static_cast<jule::U64>(64LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("&", 1)), ._field_id=static_cast<jule::U64>(65LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("|", 1)), ._field_id=static_cast<jule::U64>(66LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("^", 1)), ._field_id=static_cast<jule::U64>(67LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("!", 1)), ._field_id=static_cast<jule::U64>(68LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("<", 1)), ._field_id=static_cast<jule::U64>(69LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(">", 1)), ._field_id=static_cast<jule::U64>(70LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("=", 1)), ._field_id=static_cast<jule::U64>(71LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("#", 1)), ._field_id=static_cast<jule::U64>(35LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("{", 1)), ._field_id=static_cast<jule::U64>(72LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("}", 1)), ._field_id=static_cast<jule::U64>(73LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("[", 1)), ._field_id=static_cast<jule::U64>(76LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("]", 1)), ._field_id=static_cast<jule::U64>(77LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("(", 1)), ._field_id=static_cast<jule::U64>(74LLU)}; (*it++) = _1e5c974b9_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(")", 1)), ._field_id=static_cast<jule::U64>(75LLU)}; __jule_collection; });
	_1e5d31069_builtinConstraints = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(8, 8); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::Str>(jule::Str::lit("signed", 6)); (*it++) = static_cast<jule::Str>(jule::Str::lit("unsigned", 8)); (*it++) = static_cast<jule::Str>(jule::Str::lit("float", 5)); (*it++) = static_cast<jule::Str>(jule::Str::lit("numeric", 7)); (*it++) = static_cast<jule::Str>(jule::Str::lit("mutable", 7)); (*it++) = static_cast<jule::Str>(jule::Str::lit("immutable", 9)); (*it++) = static_cast<jule::Str>(jule::Str::lit("ordered", 7)); (*it++) = static_cast<jule::Str>(jule::Str::lit("comparable", 10)); __jule_collection; });
	_1e602602d_primNil = jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=nullptr});
	_1e602632a_primVoid = jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1e5e5e164_buildPrimType(jule::Str::lit("void", 4)), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data22)});
	_1e60265d3_primAny = jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1e5e5e164_buildPrimType(static_cast<jule::Str>(jule::Str::lit("any", 3))), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data22)});
	_1e60268d0_primStr = jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1e5e5e164_buildPrimType(static_cast<jule::Str>(jule::Str::lit("str", 3))), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data22)});
	_1e6026b88_primBool = jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1e5e5e164_buildPrimType(static_cast<jule::Str>(jule::Str::lit("bool", 4))), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data22)});
	_1e6026e41_primUintptr = jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1e5e5e164_buildPrimType(static_cast<jule::Str>(jule::Str::lit("uintptr", 7))), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data22)});
	_1e60271e9_primUint = jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1e5e5e164_buildPrimType(static_cast<jule::Str>(jule::Str::lit("uint", 4))), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data22)});
	_1e60275b2_primInt = jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1e5e5e164_buildPrimType(static_cast<jule::Str>(jule::Str::lit("int", 3))), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data22)});
	_1e6027804_primI8 = jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1e5e5e164_buildPrimType(static_cast<jule::Str>(jule::Str::lit("i8", 2))), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data22)});
	_1e6027a9b_primI16 = jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1e5e5e164_buildPrimType(static_cast<jule::Str>(jule::Str::lit("i16", 3))), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data22)});
	_1e6027d54_primI32 = jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1e5e5e164_buildPrimType(static_cast<jule::Str>(jule::Str::lit("i32", 3))), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data22)});
	_1e602810c_primI64 = jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1e5e5e164_buildPrimType(static_cast<jule::Str>(jule::Str::lit("i64", 3))), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data22)});
	_1e60283b5_primU8 = jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1e5e5e164_buildPrimType(static_cast<jule::Str>(jule::Str::lit("u8", 2))), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data22)});
	_1e602866d_primU16 = jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1e5e5e164_buildPrimType(static_cast<jule::Str>(jule::Str::lit("u16", 3))), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data22)});
	_1e6028926_primU32 = jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1e5e5e164_buildPrimType(static_cast<jule::Str>(jule::Str::lit("u32", 3))), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data22)});
	_1e6028e10_primU64 = jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1e5e5e164_buildPrimType(static_cast<jule::Str>(jule::Str::lit("u64", 3))), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data22)});
	_1e6029152_primF32 = jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1e5e5e164_buildPrimType(static_cast<jule::Str>(jule::Str::lit("f32", 3))), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data22)});
	_1e6029361_primF64 = jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1e5e5e164_buildPrimType(static_cast<jule::Str>(jule::Str::lit("f64", 3))), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data22)});
	_1e6a1eb25_emptyData = jule::new_ptr<_1e6a2051b_data>(_1e6a2051b_data{._field_boundary=jule::Ptr<_1e6a21e13_boundary>(nullptr), ._field_nils=jule::Ptr<_1e603aa37_nils>(nullptr), ._field_dynamic=jule::Ptr<_1e6a1c88c_dynamic>(nullptr)});
	_1e6a24aa3_Copy = false;
	_1e6a24da0_Deadcode = false;
	_1e6a25158_Append = false;
	_1e6a25455_Math = false;
	_1e6a2570d_Access = false;
	_1e6a259b6_Inline = false;
	_1e6a25c6e_Ptr = false;
	_1e6a26137_Cond = false;
	_1e6a26379_Str = false;
	_1e6a26621_Slice = false;
	_1e6a268c9_Assign = false;
	_1e6a26b82_Exceptional = false;
	_1e6a26e3a_Iter = false;
	_1e6a271e3_Dynamic = false;
	_1c7ee66ae_exprEnabled = false;
	_1c7ee6956_scopeEnabled = false;
	_1c8a6ab4a_mdays = ({ auto __jule_collection = jule::Array<jule::U64,12>(); auto it = __jule_collection.begin(); (*it++) = 31LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 31LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 31LLU; (*it++) = 29LLU; __jule_collection; });
	_1c8997c20_assignArgName = jule::Str::lit("__jule_assign_arg", 17);
	_1c8a764e6_generalGCPtr = jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1e5e4d43e_Sptr>(_1e5e4d43e_Sptr{._field_Elem=jule::new_ptr<_1e5e417ea_TypeKind>(_1e5e417ea_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1e5e49913_Prim>(_1e5e49913_Prim{._field_Kind=static_cast<jule::Str>(jule::Str::lit("uintptr", 7))}), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data22)})}), (jule::Trait::Type*)&_1e5e41344_Kind_mptr_data23)});
	_22568aad6_CaseRanges = _22568adc2__CaseRanges;

	__jule_argc = static_cast<jule::Int>(argc);
	__jule_argv = reinterpret_cast<jule::U8**>(argv);
	__jule_envp = reinterpret_cast<jule::U8**>(envp);

	__jule_call_initializers();
	entry_point();

	return EXIT_SUCCESS;
}