// Auto generated by JuleC.
// JuleC version: jule0.0.10
// Date: 3/4/2024 12.26 (DD/MM/YYYY) (HH.MM) UTC
//
// Recommended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp

#define __JULE_ENABLE__PRODUCTION


#include "api/jule.hpp"                                   

#include <dirent.h>
#include <cstdio>
#include <sys/stat.h>
#include <fcntl.h>
#include <unistd.h>
#include <time.h>
#include "std/jule/integrated/integrated.hpp"                                   

struct _1a7713d75_Reader {};
struct _1a77142a4_Writer {};
struct _1a771487b_WriterCloser {};
struct _1a77150c9_Stream {};
struct _1a75c6e25_Importer {};
struct _1a7672971_Kind {};
struct _1a768b25e_Lookup {};
struct _1a7e5e14c_CommonFlag {};

struct _1e9e8e954_accept_range;


struct _1d099e14d_FoldPair;


struct _1d099e615_CaseRange;


struct _1d099ea88_Range16;


struct _1d09a0050_Range32;


struct _1d09a04c3_RangeTable;


struct _1d09a51ba_LazyBuff;


struct _1e9da8494_DirEntry;


struct _1e9da8708_Directory;


struct _1e9da9880_File;


struct _1e9dab5b8_Status;


struct _1d0059b9e_Cmd;


struct _1d0019224_Log;


struct _1d0747985_Token;


struct _1d074cd75_File;


struct _1d074ee43_KindPair;


struct _1d0755751_Lex;


struct _1d06e7b66_Ast;


struct _1d06c9ce1_Node;


struct _1d06c9ecd_Directive;


struct _1d0759c1c_TypeDecl;


struct _1d0759e09_IdentTypeDecl;


struct _1d075a0e6_NamespaceTypeDecl;


struct _1d075a2d3_SptrTypeDecl;


struct _1d075a4c0_SlcTypeDecl;


struct _1d075a6ac_TupleTypeDecl;


struct _1d075a899_PtrTypeDecl;


struct _1d075aa86_ArrTypeDecl;


struct _1d075ac73_MapTypeDecl;


struct _1d075ae60_RetTypeDecl;


struct _1d075b14c_Expr;


struct _1d075b339_UseExpr;


struct _1d075b526_TupleExpr;


struct _1d075b944_LitExpr;


struct _1d075bb31_UnsafeExpr;


struct _1d075bd1d_CoExpr;


struct _1d075c00a_IdentExpr;


struct _1d075c1e7_UnaryExpr;


struct _1d075c3d4_VariadicExpr;


struct _1d075c5c1_CastExpr;


struct _1d075c7ad_NsSelectionExpr;


struct _1d075c99a_SubIdentExpr;


struct _1d075cb87_BinopExpr;


struct _1d075cd74_FnCallExpr;


struct _1d075d193_FieldExprPair;


struct _1d075d4b2_StructLit;


struct _1d075d69e_BraceLit;


struct _1d075d9bd_KeyValPair;


struct _1d075dbaa_SliceExpr;


struct _1d075e4a2_IndexingExpr;


struct _1d075eaac_SlicingExpr;


struct _1d075ee64_GenericDecl;


struct _1d076031b_LabelSt;


struct _1d07606c3_GotoSt;


struct _1d07609ae_FallSt;


struct _1d07610b9_AssignLeft;


struct _1d0761608_AssignSt;


struct _1d0761c13_ScopeTree;


struct _1d07623d9_ParamDecl;


struct _1d0763709_FnDecl;


struct _1d07646d8_VarDecl;


struct _1d0764a90_RetSt;


struct _1d0765112_Iter;


struct _1d07658d7_WhileKind;


struct _1d0766278_RangeKind;


struct _1d0766630_BreakSt;


struct _1d07669d7_ContSt;


struct _1d0766e5a_If;


struct _1d0767312_Else;


struct _1d0767785_Conditional;


struct _1d0767e5b_TypeAliasDecl;


struct _1d07683ce_Case;


struct _1d0768aa5_MatchCase;


struct _1d0769347_UseDecl;


struct _1d07697ba_EnumItemDecl;


struct _1d076a414_EnumDecl;


struct _1d076ae3c_FieldDecl;


struct _1d076b79a_StructDecl;


struct _1d076bda5_TraitDecl;


struct _1d076c4b0_Impl;


struct _1b6506593_FileInfo;


struct _1b6506780_PackageInfo;


struct _1b654d3cb_Stmt;


struct _1b654dc06_ScopeParser;


struct _1b655a5c5_CallData;


struct _1b655ba27_ExprBuilder;


struct _1b6566d51_AssignInfo;


struct _1b656a382_Parser;


struct _1b657ab78_TypeBuilder;


struct _1a71e9c9b_FloatInfo;


struct _1a708e723_DecimalSlice;


struct _1a7460880_LeftCheat;


struct _1a7460ce2_Decimal;


struct _1a751ddb1_Const;


struct _1a770e469_FileStream;


struct _1a771542b_ByteStream;


struct _1a77179c2_Scanner;


struct _1a6363e9e_Field;


struct _1a64139aa_Operators;


struct _1a64147be_Struct;


struct _1a6416ae0_FieldIns;


struct _1a64190a9_OperandExprModel;


struct _1a6419571_BinopExprModel;


struct _1a6419928_UnaryExprModel;


struct _1a6419d24_StructArgExprModel;


struct _1a641a1cb_StructLitExprModel;


struct _1a641a50b_AllocStructLitExprModel;


struct _1a641aa39_CastingExprModel;


struct _1a641b364_FnCallExprModel;


struct _1a641b71b_SliceExprModel;


struct _1a641bb8e_IndexingExprModel;


struct _1a641c046_AnonFnExprModel;


struct _1a641c3ed_KeyValPairExprModel;


struct _1a641c871_MapExprModel;


struct _1a641cdb0_SlicingExprModel;


struct _1a641d3ee_TraitSubIdentExprModel;


struct _1a641db6e_StructSubIdentExprModel;


struct _1a641e125_StructStaticIdentExprModel;


struct _1a641e4bb_ArrayExprModel;


struct _1a641e7a7_CommonIdentExprModel;


struct _1a641ed3a_CommonSubIdentExprModel;


struct _1a6420115_TupleExprModel;


struct _1a6420511_BuiltinOutCallExprModel;


struct _1a64208eb_BuiltinOutlnCallExprModel;


struct _1a6420c1a_BuiltinCloneCallExprModel;


struct _1a6421105_BuiltinNewCallExprModel;


struct _1a64214e0_BuiltinPanicCallExprModel;


struct _1a6421996_BuiltinAssertCallExprModel;


struct _1a6421e4c_BuiltinMakeCallExprModel;


struct _1a6422337_BuiltinAppendCallExprModel;


struct _1a6422722_BuiltinErrorCallExprModel;


struct _1a64229ec_SizeofExprModel;


struct _1a642316d_AlignofExprModel;


struct _1a642335a_RuneExprModel;


struct _1a6423646_IntegratedToStrExprModel;


struct _1a64239dc_BackendEmitExprModel;


struct _1a6423cc8_FreeExprModel;


struct _1a6424a32_RetType;


struct _1a6425208_Param;


struct _1a6426a45_Fn;


struct _1a6428d55_ParamIns;


struct _1a6429be1_FnIns;


struct _1a642cc9e_ReferenceStack;


struct _1a642e113_Pass;


struct _1a6432bb6_SymbolBuilder;


struct _1a7465bd7_Trait;


struct _1a7467403_EnumItem;


struct _1a7467de8_Enum;


struct _1a746936c_Impl;


struct _1a759e606_Scope;


struct _1a75a6003_If;


struct _1a7550a80_Else;


struct _1a7550c6c_Conditional;


struct _1a7561893_InfIter;


struct _1a7561a80_WhileIter;


struct _1a7561c6c_RangeIter;


struct _1a758e926_ContSt;


struct _1a758eb13_BreakSt;


struct _1a75b233e_Label;


struct _1a75b252b_GotoSt;


struct _1a75b2718_Postfix;


struct _1a75b2905_Assign;


struct _1a75b2ae2_MultiAssign;


struct _1a75b2cce_Match;


struct _1a75b31ec_Case;


struct _1a75b33d9_FallSt;


struct _1a75b35c6_RetSt;


struct _1a75b37b3_ScopeLabel;


struct _1a75b39a0_ScopeGoto;


struct _1a75b3b8c_ScopeChecker;


struct _1a75c395a_DirectiveChecker;


struct _1a75c928a_ImportInfo;


struct _1a75cbe4c_Package;


struct _1a75d1e74_Sema;


struct _1a75e97d8_MissingRetChecker;


struct _1a75eb4aa_IterRelation;


struct _1a75ec478_Var;


struct _1a75ece7e_FuncPattern;


struct _1a7634ceb_TypeCompatibilityChecker;


struct _1a7636072_AssignTypeChecker;


struct _1a76378c0_DynamicTypeAnnotation;


struct _1a763a681_FnCallArgChecker;


struct _1a763d08a_StructLitChecker;


struct _1a763eb6e_RangeChecker;


struct _1a7641d08_RetTypeChecker;


struct _1a76439db_SymbolTable;


struct _1a7648b67_Data;


struct _1a7649be0_Value;


struct _1a764a6d5_Eval;


struct _1a7665315_UnaryEval;


struct _1a76670a3_BinaryEval;


struct _1a7672168_TypeAlias;


struct _1a7672da0_TypeKind;


struct _1a7676c3e_TypeSymbol;


struct _1a7677602_Prim;


struct _1a767ab11_Sptr;


struct _1a767b56d_Slc;


struct _1a767c063_Tuple;


struct _1a767cb24_Map;


struct _1a767d718_Arr;


struct _1a767e175_Ptr;


struct _1a768181a_Referencer;


struct _1a7682497_TypeChecker;


struct _1d0b69d74_CompileInfo;


struct _1d076d3e5_DirectiveEval;


struct _1b65b7544_JuleImporter;


struct _1b65924db_OrderedDefines;


struct _1b662c6ec_DefineOrderer;


struct _1b689822b_ScopeDeadCode;


struct _1b6a2100d_AnsiEscape;


struct _1b6a4b720_Logger;


struct _1a7d52c99_UnsafeBinopExprModel;


struct _1a7d538d2_UnsafeIndexingExprModel;


struct _1a7d60889_PushToSliceExprModel;


struct _1a7d60e0b_MutSlicingExprModel;


struct _1a7d61307_StrInsertBeginExprModel;


struct _1a7d626b0_ScopeOptimizer;


struct _1a7d67d69_ExprOptimizer;


struct _1a7d6eb84_Optimizer;


struct _1d0a3d63d_AbsTime;


struct _1d0a3dd14_Time;


struct _1d0a40cd3_Duration;


struct _1a7bdc5a1_TestCoder;


struct _1a7c5c962_ScopeCoder;


struct _1a7c244d9_ExprCoder;


struct _1a7d7bba2_DeriveCoder;


struct _1a7d7d28b_IdentCoder;


struct _1d0a436cb_SerializationInfo;


struct _1d0a438b8_TraitHash;


struct _1d0a50133_CustomType;


struct _1d0a50a5c_TypeCoder;


struct _1a7e8ebc7_Flag_0;

struct _1a7e8ebc7_Flag_1;

struct _1a7e8ebc7_Flag_2;

struct _1a7e8ebc7_Flag_3;

struct _1a7e8ebc7_Flag_4;


struct _1a7e91118_FlagSet;


struct _1a641744d_StructIns;


struct _1d0a43aa5_ObjectCoder;


struct _1b737ec89_IR;


struct _1a7e93824_ArgParser;

struct _1e9e8e954_accept_range {
	jule::U8 _field_lo = jule::U8();
	jule::U8 _field_hi = jule::U8();


	_1e9e8e954_accept_range(jule::U8 __param_lo, jule::U8 __param_hi): _field_lo(__param_lo), _field_hi(__param_hi) {}

	

	_1e9e8e954_accept_range(void) = default;

	inline bool operator==(_1e9e8e954_accept_range _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_1e9e8e954_accept_range _other) { return !this->operator==(_other); }


};
struct _1d099e14d_FoldPair {
	jule::U16 _field_from = jule::U16();
	jule::U16 _field_to = jule::U16();


	_1d099e14d_FoldPair(jule::U16 __param_from, jule::U16 __param_to): _field_from(__param_from), _field_to(__param_to) {}

	

	_1d099e14d_FoldPair(void) = default;

	inline bool operator==(_1d099e14d_FoldPair _other) {
		return 
			this->_field_from == _other._field_from &&
			this->_field_to == _other._field_to;
	}

	inline bool operator!=(_1d099e14d_FoldPair _other) { return !this->operator==(_other); }


};
struct _1d099e615_CaseRange {
	jule::U32 _field_lo = jule::U32();
	jule::U32 _field_hi = jule::U32();
	jule::Array<jule::I32,3> _field_delta = jule::Array<jule::I32,3>();


	_1d099e615_CaseRange(jule::U32 __param_lo, jule::U32 __param_hi, jule::Array<jule::I32,3> __param_delta): _field_lo(__param_lo), _field_hi(__param_hi), _field_delta(__param_delta) {}

	

	_1d099e615_CaseRange(void) = default;

	inline bool operator==(_1d099e615_CaseRange _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi &&
			this->_field_delta == _other._field_delta;
	}

	inline bool operator!=(_1d099e615_CaseRange _other) { return !this->operator==(_other); }


};
struct _1d099ea88_Range16 {
	jule::U16 _field_lo = jule::U16();
	jule::U16 _field_hi = jule::U16();
	jule::U16 _field_stride = jule::U16();


	_1d099ea88_Range16(jule::U16 __param_lo, jule::U16 __param_hi, jule::U16 __param_stride): _field_lo(__param_lo), _field_hi(__param_hi), _field_stride(__param_stride) {}

	

	_1d099ea88_Range16(void) = default;

	inline bool operator==(_1d099ea88_Range16 _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi &&
			this->_field_stride == _other._field_stride;
	}

	inline bool operator!=(_1d099ea88_Range16 _other) { return !this->operator==(_other); }


};
struct _1d09a0050_Range32 {
	jule::U32 _field_lo = jule::U32();
	jule::U32 _field_hi = jule::U32();
	jule::U32 _field_stride = jule::U32();


	_1d09a0050_Range32(jule::U32 __param_lo, jule::U32 __param_hi, jule::U32 __param_stride): _field_lo(__param_lo), _field_hi(__param_hi), _field_stride(__param_stride) {}

	

	_1d09a0050_Range32(void) = default;

	inline bool operator==(_1d09a0050_Range32 _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi &&
			this->_field_stride == _other._field_stride;
	}

	inline bool operator!=(_1d09a0050_Range32 _other) { return !this->operator==(_other); }


};
struct _1d09a04c3_RangeTable {
	jule::Slice<_1d099ea88_Range16> _field_r16 = jule::Slice<_1d099ea88_Range16>();
	jule::Slice<_1d09a0050_Range32> _field_r32 = jule::Slice<_1d09a0050_Range32>();
	jule::I64 _field_latin_offset = jule::I64();


	_1d09a04c3_RangeTable(jule::Slice<_1d099ea88_Range16> __param_r16, jule::Slice<_1d09a0050_Range32> __param_r32, jule::I64 __param_latin_offset): _field_r16(__param_r16), _field_r32(__param_r32), _field_latin_offset(__param_latin_offset) {}

	

	_1d09a04c3_RangeTable(void) = default;

	inline bool operator==(_1d09a04c3_RangeTable _other) {
		return 
			this->_field_r16 == _other._field_r16 &&
			this->_field_r32 == _other._field_r32 &&
			this->_field_latin_offset == _other._field_latin_offset;
	}

	inline bool operator!=(_1d09a04c3_RangeTable _other) { return !this->operator==(_other); }


};
inline jule::U8 _1d09a53a7_index(_1d09a51ba_LazyBuff*,jule::I64);
inline void _1d09a54d9_append(_1d09a51ba_LazyBuff*,jule::U8);
inline jule::Str _1d09a561b_string(_1d09a51ba_LazyBuff*);
struct _1d09a51ba_LazyBuff {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::U8> _field_buff = jule::Slice<jule::U8>();
	jule::I64 _field_w = jule::I64();
	jule::Str _field_vol_and_path = jule::Str();
	jule::I64 _field_vol_len = jule::I64();


	_1d09a51ba_LazyBuff(jule::Str __param_path, jule::Slice<jule::U8> __param_buff, jule::I64 __param_w, jule::Str __param_vol_and_path, jule::I64 __param_vol_len): _field_path(__param_path), _field_buff(__param_buff), _field_w(__param_w), _field_vol_and_path(__param_vol_and_path), _field_vol_len(__param_vol_len) {}

	

	_1d09a51ba_LazyBuff(void) = default;

	inline bool operator==(_1d09a51ba_LazyBuff _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_buff == _other._field_buff &&
			this->_field_w == _other._field_w &&
			this->_field_vol_and_path == _other._field_vol_and_path &&
			this->_field_vol_len == _other._field_vol_len;
	}

	inline bool operator!=(_1d09a51ba_LazyBuff _other) { return !this->operator==(_other); }


};
struct _1e9da8494_DirEntry {
	jule::Str _field_name = jule::Str();
	jule::Ptr<_1e9dab5b8_Status> _field_stat = jule::Ptr<_1e9dab5b8_Status>();


	_1e9da8494_DirEntry(jule::Str __param_name, jule::Ptr<_1e9dab5b8_Status> __param_stat): _field_name(__param_name), _field_stat(__param_stat) {}

	

	_1e9da8494_DirEntry(void) = default;

	inline bool operator==(_1e9da8494_DirEntry _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_stat == _other._field_stat;
	}

	inline bool operator!=(_1e9da8494_DirEntry _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Slice<jule::Ptr<_1e9da8494_DirEntry>>> static__1d09a7255_read(jule::Str);
inline jule::VoidExceptional static__1d09a7464_create(jule::Str);
inline jule::VoidExceptional static__1d09a7673_remove(jule::Str);
struct _1e9da8708_Directory {
	

	_1e9da8708_Directory(void) = default;

	inline bool operator==(_1e9da8708_Directory _other) { return true; }

	inline bool operator!=(_1e9da8708_Directory _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e9da9880_File> static__1e9da9cd1_new(jule::U64);
inline jule::Exceptional<jule::Ptr<_1e9da9880_File>> static__1e9daa078_create(jule::Str);
inline jule::Exceptional<jule::Slice<jule::U8>> static__1e9daa320_read(jule::Str);
inline jule::VoidExceptional static__1e9daa672_write(jule::Str,jule::Slice<jule::U8>,jule::I64);
inline jule::Exceptional<jule::I64> _1e9daab28_seek(_1e9da9880_File*,jule::I64,jule::I64);
inline jule::VoidExceptional _1e9daad04_close(_1e9da9880_File*);
inline jule::Exceptional<jule::Ptr<_1e9da9880_File>> static__1e9e23da0_open(jule::Str,jule::I64,jule::I64);
inline jule::VoidExceptional static__1e9e73691_remove(jule::Str);
inline jule::Exceptional<jule::I64> _1e9e228c6_write(_1e9da9880_File*,jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I64> _1e9e27dd7_read(_1e9da9880_File*,jule::Slice<jule::U8>);
struct _1e9da9880_File {
	jule::U64 _field_handle = jule::U64();


	_1e9da9880_File(jule::U64 __param_handle): _field_handle(__param_handle) {}

	

	_1e9da9880_File(void) = default;

	inline bool operator==(_1e9da9880_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_1e9da9880_File _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e9dab9b4_is_dir(_1e9dab5b8_Status*);
inline jule::Bool _1e9dabc28_is_reg(_1e9dab5b8_Status*);
inline jule::Exceptional<jule::Ptr<_1e9dab5b8_Status>> static__1d09a8058_of(jule::Str);
struct _1e9dab5b8_Status {
	jule::U64 _field_mode = jule::U64();
	jule::U64 _field_size = jule::U64();


	_1e9dab5b8_Status(jule::U64 __param_mode, jule::U64 __param_size): _field_mode(__param_mode), _field_size(__param_size) {}

	

	_1e9dab5b8_Status(void) = default;

	inline bool operator==(_1e9dab5b8_Status _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_1e9dab5b8_Status _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1d0059b9e_Cmd> static__1d005a0cd_new(jule::Str);
inline jule::Exceptional<jule::I64> _1d005e544_spawn(_1d0059b9e_Cmd*);
inline jule::Exceptional<jule::I64> _1d0069ecd___spawn(_1d0059b9e_Cmd*);
struct _1d0059b9e_Cmd {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::Str> _field_args = jule::Slice<jule::Str>();
	jule::Slice<jule::Str> _field_env = jule::Slice<jule::Str>();


	_1d0059b9e_Cmd(jule::Str __param_path, jule::Slice<jule::Str> __param_args, jule::Slice<jule::Str> __param_env): _field_path(__param_path), _field_args(__param_args), _field_env(__param_env) {}

	

	_1d0059b9e_Cmd(void) = default;

	inline bool operator==(_1d0059b9e_Cmd _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_args == _other._field_args &&
			this->_field_env == _other._field_env;
	}

	inline bool operator!=(_1d0059b9e_Cmd _other) { return !this->operator==(_other); }


};
struct _1d0019224_Log {
	jule::I64 _field_kind = 0LL;
	jule::I64 _field_row = jule::I64();
	jule::I64 _field_column = jule::I64();
	jule::Str _field_path = jule::Str();
	jule::Str _field_text = jule::Str();
	jule::Str _field_line = jule::Str();
	jule::Str _field_suggestion = jule::Str();


	_1d0019224_Log(jule::I64 __param_kind, jule::I64 __param_row, jule::I64 __param_column, jule::Str __param_path, jule::Str __param_text, jule::Str __param_line, jule::Str __param_suggestion): _field_kind(__param_kind), _field_row(__param_row), _field_column(__param_column), _field_path(__param_path), _field_text(__param_text), _field_line(__param_line), _field_suggestion(__param_suggestion) {}

	

	_1d0019224_Log(void) = default;

	inline bool operator==(_1d0019224_Log _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_row == _other._field_row &&
			this->_field_column == _other._field_column &&
			this->_field_path == _other._field_path &&
			this->_field_text == _other._field_text &&
			this->_field_line == _other._field_line &&
			this->_field_suggestion == _other._field_suggestion;
	}

	inline bool operator!=(_1d0019224_Log _other) { return !this->operator==(_other); }


};
inline jule::U8 _1d0747d70_prec(_1d0747985_Token*);
struct _1d0747985_Token {
	jule::Ptr<_1d074cd75_File> _field_file = jule::Ptr<_1d074cd75_File>();
	jule::I64 _field_row = jule::I64();
	jule::I64 _field_column = jule::I64();
	jule::Str _field_kind = jule::Str();
	jule::U64 _field_id = 0LLU;


	_1d0747985_Token(jule::Ptr<_1d074cd75_File> __param_file, jule::I64 __param_row, jule::I64 __param_column, jule::Str __param_kind, jule::U64 __param_id): _field_file(__param_file), _field_row(__param_row), _field_column(__param_column), _field_kind(__param_kind), _field_id(__param_id) {}

	

	_1d0747985_Token(void) = default;

	inline bool operator==(_1d0747985_Token _other) {
		return 
			this->_field_file == _other._field_file &&
			this->_field_row == _other._field_row &&
			this->_field_column == _other._field_column &&
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_1d0747985_Token _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d074d282_is_ok(_1d074cd75_File*);
inline void _1d074d507_fill(_1d074cd75_File*,jule::Slice<jule::U8>);
inline jule::Str _1d074d76b_dir(_1d074cd75_File*);
inline jule::Str _1d074d9d0_name(_1d074cd75_File*);
inline jule::U64 _1d074dc44_addr(_1d074cd75_File*);
inline jule::Str _1d074e052_get_row(_1d074cd75_File*,jule::I64);
struct _1d074cd75_File {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::U8> _field_data = jule::Slice<jule::U8>();
	jule::Slice<jule::Ptr<_1d0747985_Token>> _field_tokens = jule::Slice<jule::Ptr<_1d0747985_Token>>();


	_1d074cd75_File(jule::Str __param_path, jule::Slice<jule::U8> __param_data, jule::Slice<jule::Ptr<_1d0747985_Token>> __param_tokens): _field_path(__param_path), _field_data(__param_data), _field_tokens(__param_tokens) {}

	

	_1d074cd75_File(void) = default;

	inline bool operator==(_1d074cd75_File _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_data == _other._field_data &&
			this->_field_tokens == _other._field_tokens;
	}

	inline bool operator!=(_1d074cd75_File _other) { return !this->operator==(_other); }


};
struct _1d074ee43_KindPair {
	jule::Str _field_kind = jule::Str("::", 2);
	jule::U64 _field_id = 0LLU;


	_1d074ee43_KindPair(jule::Str __param_kind, jule::U64 __param_id): _field_kind(__param_kind), _field_id(__param_id) {}

	

	_1d074ee43_KindPair(void) = default;

	inline bool operator==(_1d074ee43_KindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_1d074ee43_KindPair _other) { return !this->operator==(_other); }


};
inline void _1d0755ce5_push_err(_1d0755751_Lex*,jule::Str,jule::Slice<jule::Any>);
inline void _1d0756114_push_err_tok(_1d0755751_Lex*,jule::Ptr<_1d0747985_Token>&,jule::Str);
inline void _1d07562e0_lex(_1d0755751_Lex*);
inline jule::Str _1d07565ed_id(_1d0755751_Lex*,jule::Slice<jule::U8>&);
inline jule::Slice<jule::U8> _1d0756862_resume(_1d0755751_Lex*);
inline void _1d0756ad7_lex_line_comment(_1d0755751_Lex*,jule::Ptr<_1d0747985_Token>&);
inline void _1d0756d5c_lex_range_comment(_1d0755751_Lex*,jule::Ptr<_1d0747985_Token>&);
inline jule::Str _1d075716a_num(_1d0755751_Lex*,jule::Slice<jule::U8>&);
inline jule::Str _1d0757478_escape_seq(_1d0755751_Lex*,jule::Slice<jule::U8>&);
inline jule::Str _1d0757830_get_rune(_1d0755751_Lex*,jule::Slice<jule::U8>&,jule::Bool);
inline jule::Str _1d0757b3d_lex_rune(_1d0755751_Lex*,jule::Slice<jule::U8>&);
inline jule::Str _1d0757da2_lex_str(_1d0755751_Lex*);
inline jule::Bool _1d0758116_is_first_token_of_line(_1d0755751_Lex*);
inline void _1d07582e2_new_line(_1d0755751_Lex*);
inline jule::Bool _1d07587dc_is_op(_1d0755751_Lex*,jule::Slice<jule::U8>&,jule::Str,jule::U64,jule::Ptr<_1d0747985_Token>&);
inline jule::Bool _1d0758b94_lex_basic_ops(_1d0755751_Lex*,jule::Slice<jule::U8>,jule::Ptr<_1d0747985_Token>&);
inline jule::Bool _1d075904b_lex_id(_1d0755751_Lex*,jule::Slice<jule::U8>&,jule::Ptr<_1d0747985_Token>&);
inline jule::Bool _1d0759403_lex_num(_1d0755751_Lex*,jule::Slice<jule::U8>&,jule::Ptr<_1d0747985_Token>&);
inline jule::Ptr<_1d0747985_Token> _1d0759667_token(_1d0755751_Lex*);
struct _1d0755751_Lex {
	jule::I64 _field_mode = 0LL;
	jule::Slice<jule::Ptr<_1d0747985_Token>> _field_tokens = jule::Slice<jule::Ptr<_1d0747985_Token>>();
	jule::Ptr<_1d074cd75_File> _field_file = jule::Ptr<_1d074cd75_File>();
	jule::I64 _field_pos = jule::I64();
	jule::I64 _field_column = jule::I64();
	jule::I64 _field_row = jule::I64();
	jule::Slice<_1d0019224_Log> _field_errors = jule::Slice<_1d0019224_Log>();


	_1d0755751_Lex(jule::I64 __param_mode, jule::Slice<jule::Ptr<_1d0747985_Token>> __param_tokens, jule::Ptr<_1d074cd75_File> __param_file, jule::I64 __param_pos, jule::I64 __param_column, jule::I64 __param_row, jule::Slice<_1d0019224_Log> __param_errors): _field_mode(__param_mode), _field_tokens(__param_tokens), _field_file(__param_file), _field_pos(__param_pos), _field_column(__param_column), _field_row(__param_row), _field_errors(__param_errors) {}

	

	_1d0755751_Lex(void) = default;

	inline bool operator==(_1d0755751_Lex _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_tokens == _other._field_tokens &&
			this->_field_file == _other._field_file &&
			this->_field_pos == _other._field_pos &&
			this->_field_column == _other._field_column &&
			this->_field_row == _other._field_row &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_1d0755751_Lex _other) { return !this->operator==(_other); }


};
struct _1d06e7b66_Ast {
	jule::Ptr<_1d074cd75_File> _field_file = jule::Ptr<_1d074cd75_File>();
	jule::Slice<jule::Ptr<_1d06c9ecd_Directive>> _field_top_directives = jule::Slice<jule::Ptr<_1d06c9ecd_Directive>>();
	jule::Slice<jule::Ptr<_1d0769347_UseDecl>> _field_use_decls = jule::Slice<jule::Ptr<_1d0769347_UseDecl>>();
	jule::Slice<_1d06c9ce1_Node> _field_nodes = jule::Slice<_1d06c9ce1_Node>();


	_1d06e7b66_Ast(jule::Ptr<_1d074cd75_File> __param_file, jule::Slice<jule::Ptr<_1d06c9ecd_Directive>> __param_top_directives, jule::Slice<jule::Ptr<_1d0769347_UseDecl>> __param_use_decls, jule::Slice<_1d06c9ce1_Node> __param_nodes): _field_file(__param_file), _field_top_directives(__param_top_directives), _field_use_decls(__param_use_decls), _field_nodes(__param_nodes) {}

	

	_1d06e7b66_Ast(void) = default;

	inline bool operator==(_1d06e7b66_Ast _other) {
		return 
			this->_field_file == _other._field_file &&
			this->_field_top_directives == _other._field_top_directives &&
			this->_field_use_decls == _other._field_use_decls &&
			this->_field_nodes == _other._field_nodes;
	}

	inline bool operator!=(_1d06e7b66_Ast _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d0134ac0_is_decl(_1d06c9ce1_Node*);
inline jule::Bool _1d0659de7_is_directive(_1d06c9ce1_Node*);
inline jule::Bool _1d06cb397_is_impl(_1d06c9ce1_Node*);
inline jule::Bool _1d06d0c2b_is_use_decl(_1d06c9ce1_Node*);
struct _1d06c9ce1_Node {
	jule::Ptr<_1d0747985_Token> _field_token = jule::Ptr<_1d0747985_Token>();
	jule::Any _field_data = jule::Any();


	_1d06c9ce1_Node(jule::Ptr<_1d0747985_Token> __param_token, jule::Any __param_data): _field_token(__param_token), _field_data(__param_data) {}

	

	_1d06c9ce1_Node(void) = default;

	inline bool operator==(_1d06c9ce1_Node _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1d06c9ce1_Node _other) { return !this->operator==(_other); }


};
struct _1d06c9ecd_Directive {
	jule::Ptr<_1d0747985_Token> _field_tag = jule::Ptr<_1d0747985_Token>();
	jule::Slice<jule::Ptr<_1d0747985_Token>> _field_args = jule::Slice<jule::Ptr<_1d0747985_Token>>();


	_1d06c9ecd_Directive(jule::Ptr<_1d0747985_Token> __param_tag, jule::Slice<jule::Ptr<_1d0747985_Token>> __param_args): _field_tag(__param_tag), _field_args(__param_args) {}

	

	_1d06c9ecd_Directive(void) = default;

	inline bool operator==(_1d06c9ecd_Directive _other) {
		return 
			this->_field_tag == _other._field_tag &&
			this->_field_args == _other._field_args;
	}

	inline bool operator!=(_1d06c9ecd_Directive _other) { return !this->operator==(_other); }


};
struct _1d0759c1c_TypeDecl {
	jule::Ptr<_1d0747985_Token> _field_token = jule::Ptr<_1d0747985_Token>();
	jule::Any _field_kind = jule::Any();


	_1d0759c1c_TypeDecl(jule::Ptr<_1d0747985_Token> __param_token, jule::Any __param_kind): _field_token(__param_token), _field_kind(__param_kind) {}

	

	_1d0759c1c_TypeDecl(void) = default;

	inline bool operator==(_1d0759c1c_TypeDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1d0759c1c_TypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d06ed221_is_prim(_1d0759e09_IdentTypeDecl*);
struct _1d0759e09_IdentTypeDecl {
	jule::Ptr<_1d0747985_Token> _field_token = jule::Ptr<_1d0747985_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Slice<jule::Ptr<_1d0759c1c_TypeDecl>> _field_generics = jule::Slice<jule::Ptr<_1d0759c1c_TypeDecl>>();


	_1d0759e09_IdentTypeDecl(jule::Ptr<_1d0747985_Token> __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Slice<jule::Ptr<_1d0759c1c_TypeDecl>> __param_generics): _field_token(__param_token), _field_ident(__param_ident), _field_cpp_linked(__param_cpp_linked), _field_generics(__param_generics) {}

	

	_1d0759e09_IdentTypeDecl(void) = default;

	inline bool operator==(_1d0759e09_IdentTypeDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_generics == _other._field_generics;
	}

	inline bool operator!=(_1d0759e09_IdentTypeDecl _other) { return !this->operator==(_other); }


};
struct _1d075a0e6_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_1d0747985_Token>> _field_idents = jule::Slice<jule::Ptr<_1d0747985_Token>>();
	jule::Ptr<_1d0759e09_IdentTypeDecl> _field_kind = jule::Ptr<_1d0759e09_IdentTypeDecl>();


	_1d075a0e6_NamespaceTypeDecl(jule::Slice<jule::Ptr<_1d0747985_Token>> __param_idents, jule::Ptr<_1d0759e09_IdentTypeDecl> __param_kind): _field_idents(__param_idents), _field_kind(__param_kind) {}

	

	_1d075a0e6_NamespaceTypeDecl(void) = default;

	inline bool operator==(_1d075a0e6_NamespaceTypeDecl _other) {
		return 
			this->_field_idents == _other._field_idents &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1d075a0e6_NamespaceTypeDecl _other) { return !this->operator==(_other); }


};
struct _1d075a2d3_SptrTypeDecl {
	jule::Ptr<_1d0759c1c_TypeDecl> _field_elem = jule::Ptr<_1d0759c1c_TypeDecl>();


	_1d075a2d3_SptrTypeDecl(jule::Ptr<_1d0759c1c_TypeDecl> __param_elem): _field_elem(__param_elem) {}

	

	_1d075a2d3_SptrTypeDecl(void) = default;

	inline bool operator==(_1d075a2d3_SptrTypeDecl _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1d075a2d3_SptrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1d075a4c0_SlcTypeDecl {
	jule::Ptr<_1d0759c1c_TypeDecl> _field_elem = jule::Ptr<_1d0759c1c_TypeDecl>();


	_1d075a4c0_SlcTypeDecl(jule::Ptr<_1d0759c1c_TypeDecl> __param_elem): _field_elem(__param_elem) {}

	

	_1d075a4c0_SlcTypeDecl(void) = default;

	inline bool operator==(_1d075a4c0_SlcTypeDecl _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1d075a4c0_SlcTypeDecl _other) { return !this->operator==(_other); }


};
struct _1d075a6ac_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1d0759c1c_TypeDecl>> _field_types = jule::Slice<jule::Ptr<_1d0759c1c_TypeDecl>>();


	_1d075a6ac_TupleTypeDecl(jule::Slice<jule::Ptr<_1d0759c1c_TypeDecl>> __param_types): _field_types(__param_types) {}

	

	_1d075a6ac_TupleTypeDecl(void) = default;

	inline bool operator==(_1d075a6ac_TupleTypeDecl _other) {
		return 
			this->_field_types == _other._field_types;
	}

	inline bool operator!=(_1d075a6ac_TupleTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d072dc68_is_unsafe(_1d075a899_PtrTypeDecl*);
struct _1d075a899_PtrTypeDecl {
	jule::Ptr<_1d0759c1c_TypeDecl> _field_elem = jule::Ptr<_1d0759c1c_TypeDecl>();


	_1d075a899_PtrTypeDecl(jule::Ptr<_1d0759c1c_TypeDecl> __param_elem): _field_elem(__param_elem) {}

	

	_1d075a899_PtrTypeDecl(void) = default;

	inline bool operator==(_1d075a899_PtrTypeDecl _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1d075a899_PtrTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d0730880_auto_sized(_1d075aa86_ArrTypeDecl*);
struct _1d075aa86_ArrTypeDecl {
	jule::Ptr<_1d0759c1c_TypeDecl> _field_elem = jule::Ptr<_1d0759c1c_TypeDecl>();
	jule::Ptr<_1d075b14c_Expr> _field_size = jule::Ptr<_1d075b14c_Expr>();


	_1d075aa86_ArrTypeDecl(jule::Ptr<_1d0759c1c_TypeDecl> __param_elem, jule::Ptr<_1d075b14c_Expr> __param_size): _field_elem(__param_elem), _field_size(__param_size) {}

	

	_1d075aa86_ArrTypeDecl(void) = default;

	inline bool operator==(_1d075aa86_ArrTypeDecl _other) {
		return 
			this->_field_elem == _other._field_elem &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_1d075aa86_ArrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1d075ac73_MapTypeDecl {
	jule::Ptr<_1d0759c1c_TypeDecl> _field_key = jule::Ptr<_1d0759c1c_TypeDecl>();
	jule::Ptr<_1d0759c1c_TypeDecl> _field_val = jule::Ptr<_1d0759c1c_TypeDecl>();


	_1d075ac73_MapTypeDecl(jule::Ptr<_1d0759c1c_TypeDecl> __param_key, jule::Ptr<_1d0759c1c_TypeDecl> __param_val): _field_key(__param_key), _field_val(__param_val) {}

	

	_1d075ac73_MapTypeDecl(void) = default;

	inline bool operator==(_1d075ac73_MapTypeDecl _other) {
		return 
			this->_field_key == _other._field_key &&
			this->_field_val == _other._field_val;
	}

	inline bool operator!=(_1d075ac73_MapTypeDecl _other) { return !this->operator==(_other); }


};
struct _1d075ae60_RetTypeDecl {
	jule::Ptr<_1d0759c1c_TypeDecl> _field_kind = jule::Ptr<_1d0759c1c_TypeDecl>();
	jule::Slice<jule::Ptr<_1d0747985_Token>> _field_idents = jule::Slice<jule::Ptr<_1d0747985_Token>>();


	_1d075ae60_RetTypeDecl(jule::Ptr<_1d0759c1c_TypeDecl> __param_kind, jule::Slice<jule::Ptr<_1d0747985_Token>> __param_idents): _field_kind(__param_kind), _field_idents(__param_idents) {}

	

	_1d075ae60_RetTypeDecl(void) = default;

	inline bool operator==(_1d075ae60_RetTypeDecl _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_idents == _other._field_idents;
	}

	inline bool operator!=(_1d075ae60_RetTypeDecl _other) { return !this->operator==(_other); }


};
struct _1d075b14c_Expr {
	jule::Ptr<_1d0747985_Token> _field_token = jule::Ptr<_1d0747985_Token>();
	jule::Ptr<_1d0747985_Token> _field_end = jule::Ptr<_1d0747985_Token>();
	jule::Bool _field_range = jule::Bool();
	jule::Any _field_kind = jule::Any();


	_1d075b14c_Expr(jule::Ptr<_1d0747985_Token> __param_token, jule::Ptr<_1d0747985_Token> __param_end, jule::Bool __param_range, jule::Any __param_kind): _field_token(__param_token), _field_end(__param_end), _field_range(__param_range), _field_kind(__param_kind) {}

	

	_1d075b14c_Expr(void) = default;

	inline bool operator==(_1d075b14c_Expr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_range == _other._field_range &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1d075b14c_Expr _other) { return !this->operator==(_other); }


};
struct _1d075b339_UseExpr {
	jule::Ptr<_1d0747985_Token> _field_token = jule::Ptr<_1d0747985_Token>();
	jule::Ptr<_1d075b14c_Expr> _field_expr = jule::Ptr<_1d075b14c_Expr>();


	_1d075b339_UseExpr(jule::Ptr<_1d0747985_Token> __param_token, jule::Ptr<_1d075b14c_Expr> __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_1d075b339_UseExpr(void) = default;

	inline bool operator==(_1d075b339_UseExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1d075b339_UseExpr _other) { return !this->operator==(_other); }


};
struct _1d075b526_TupleExpr {
	jule::Slice<jule::Ptr<_1d075b14c_Expr>> _field_expr = jule::Slice<jule::Ptr<_1d075b14c_Expr>>();


	_1d075b526_TupleExpr(jule::Slice<jule::Ptr<_1d075b14c_Expr>> __param_expr): _field_expr(__param_expr) {}

	

	_1d075b526_TupleExpr(void) = default;

	inline bool operator==(_1d075b526_TupleExpr _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1d075b526_TupleExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d0136891_is_nil(_1d075b944_LitExpr*);
struct _1d075b944_LitExpr {
	jule::Ptr<_1d0747985_Token> _field_token = jule::Ptr<_1d0747985_Token>();
	jule::Str _field_value = jule::Str();


	_1d075b944_LitExpr(jule::Ptr<_1d0747985_Token> __param_token, jule::Str __param_value): _field_token(__param_token), _field_value(__param_value) {}

	

	_1d075b944_LitExpr(void) = default;

	inline bool operator==(_1d075b944_LitExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_value == _other._field_value;
	}

	inline bool operator!=(_1d075b944_LitExpr _other) { return !this->operator==(_other); }


};
struct _1d075bb31_UnsafeExpr {
	jule::Ptr<_1d0747985_Token> _field_token = jule::Ptr<_1d0747985_Token>();
	jule::Ptr<_1d075b14c_Expr> _field_expr = jule::Ptr<_1d075b14c_Expr>();


	_1d075bb31_UnsafeExpr(jule::Ptr<_1d0747985_Token> __param_token, jule::Ptr<_1d075b14c_Expr> __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_1d075bb31_UnsafeExpr(void) = default;

	inline bool operator==(_1d075bb31_UnsafeExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1d075bb31_UnsafeExpr _other) { return !this->operator==(_other); }


};
struct _1d075bd1d_CoExpr {
	jule::Ptr<_1d0747985_Token> _field_token = jule::Ptr<_1d0747985_Token>();
	jule::Ptr<_1d075b14c_Expr> _field_expr = jule::Ptr<_1d075b14c_Expr>();


	_1d075bd1d_CoExpr(jule::Ptr<_1d0747985_Token> __param_token, jule::Ptr<_1d075b14c_Expr> __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_1d075bd1d_CoExpr(void) = default;

	inline bool operator==(_1d075bd1d_CoExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1d075bd1d_CoExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d06d9b8b_is_self(_1d075c00a_IdentExpr*);
struct _1d075c00a_IdentExpr {
	jule::Ptr<_1d0747985_Token> _field_token = jule::Ptr<_1d0747985_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();


	_1d075c00a_IdentExpr(jule::Ptr<_1d0747985_Token> __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked): _field_token(__param_token), _field_ident(__param_ident), _field_cpp_linked(__param_cpp_linked) {}

	

	_1d075c00a_IdentExpr(void) = default;

	inline bool operator==(_1d075c00a_IdentExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_cpp_linked == _other._field_cpp_linked;
	}

	inline bool operator!=(_1d075c00a_IdentExpr _other) { return !this->operator==(_other); }


};
struct _1d075c1e7_UnaryExpr {
	jule::Ptr<_1d0747985_Token> _field_op = jule::Ptr<_1d0747985_Token>();
	jule::Ptr<_1d075b14c_Expr> _field_expr = jule::Ptr<_1d075b14c_Expr>();


	_1d075c1e7_UnaryExpr(jule::Ptr<_1d0747985_Token> __param_op, jule::Ptr<_1d075b14c_Expr> __param_expr): _field_op(__param_op), _field_expr(__param_expr) {}

	

	_1d075c1e7_UnaryExpr(void) = default;

	inline bool operator==(_1d075c1e7_UnaryExpr _other) {
		return 
			this->_field_op == _other._field_op &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1d075c1e7_UnaryExpr _other) { return !this->operator==(_other); }


};
struct _1d075c3d4_VariadicExpr {
	jule::Ptr<_1d0747985_Token> _field_token = jule::Ptr<_1d0747985_Token>();
	jule::Ptr<_1d075b14c_Expr> _field_expr = jule::Ptr<_1d075b14c_Expr>();


	_1d075c3d4_VariadicExpr(jule::Ptr<_1d0747985_Token> __param_token, jule::Ptr<_1d075b14c_Expr> __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_1d075c3d4_VariadicExpr(void) = default;

	inline bool operator==(_1d075c3d4_VariadicExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1d075c3d4_VariadicExpr _other) { return !this->operator==(_other); }


};
struct _1d075c5c1_CastExpr {
	jule::Ptr<_1d0759c1c_TypeDecl> _field_kind = jule::Ptr<_1d0759c1c_TypeDecl>();
	jule::Ptr<_1d075b14c_Expr> _field_expr = jule::Ptr<_1d075b14c_Expr>();


	_1d075c5c1_CastExpr(jule::Ptr<_1d0759c1c_TypeDecl> __param_kind, jule::Ptr<_1d075b14c_Expr> __param_expr): _field_kind(__param_kind), _field_expr(__param_expr) {}

	

	_1d075c5c1_CastExpr(void) = default;

	inline bool operator==(_1d075c5c1_CastExpr _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1d075c5c1_CastExpr _other) { return !this->operator==(_other); }


};
struct _1d075c7ad_NsSelectionExpr {
	jule::Slice<jule::Ptr<_1d0747985_Token>> _field_ns = jule::Slice<jule::Ptr<_1d0747985_Token>>();
	jule::Ptr<_1d0747985_Token> _field_ident = jule::Ptr<_1d0747985_Token>();


	_1d075c7ad_NsSelectionExpr(jule::Slice<jule::Ptr<_1d0747985_Token>> __param_ns, jule::Ptr<_1d0747985_Token> __param_ident): _field_ns(__param_ns), _field_ident(__param_ident) {}

	

	_1d075c7ad_NsSelectionExpr(void) = default;

	inline bool operator==(_1d075c7ad_NsSelectionExpr _other) {
		return 
			this->_field_ns == _other._field_ns &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1d075c7ad_NsSelectionExpr _other) { return !this->operator==(_other); }


};
struct _1d075c99a_SubIdentExpr {
	jule::Bool _field_is_self = jule::Bool();
	jule::Ptr<_1d075b14c_Expr> _field_expr = jule::Ptr<_1d075b14c_Expr>();
	jule::Ptr<_1d0747985_Token> _field_ident = jule::Ptr<_1d0747985_Token>();


	_1d075c99a_SubIdentExpr(jule::Bool __param_is_self, jule::Ptr<_1d075b14c_Expr> __param_expr, jule::Ptr<_1d0747985_Token> __param_ident): _field_is_self(__param_is_self), _field_expr(__param_expr), _field_ident(__param_ident) {}

	

	_1d075c99a_SubIdentExpr(void) = default;

	inline bool operator==(_1d075c99a_SubIdentExpr _other) {
		return 
			this->_field_is_self == _other._field_is_self &&
			this->_field_expr == _other._field_expr &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1d075c99a_SubIdentExpr _other) { return !this->operator==(_other); }


};
struct _1d075cb87_BinopExpr {
	jule::Ptr<_1d075b14c_Expr> _field_left = jule::Ptr<_1d075b14c_Expr>();
	jule::Ptr<_1d075b14c_Expr> _field_right = jule::Ptr<_1d075b14c_Expr>();
	jule::Ptr<_1d0747985_Token> _field_op = jule::Ptr<_1d0747985_Token>();


	_1d075cb87_BinopExpr(jule::Ptr<_1d075b14c_Expr> __param_left, jule::Ptr<_1d075b14c_Expr> __param_right, jule::Ptr<_1d0747985_Token> __param_op): _field_left(__param_left), _field_right(__param_right), _field_op(__param_op) {}

	

	_1d075cb87_BinopExpr(void) = default;

	inline bool operator==(_1d075cb87_BinopExpr _other) {
		return 
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1d075cb87_BinopExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d072adec_unhandled(_1d075cd74_FnCallExpr*);
inline jule::Bool _1d075d061_ignored(_1d075cd74_FnCallExpr*);
struct _1d075cd74_FnCallExpr {
	jule::Ptr<_1d0747985_Token> _field_token = jule::Ptr<_1d0747985_Token>();
	jule::Ptr<_1d075b14c_Expr> _field_expr = jule::Ptr<_1d075b14c_Expr>();
	jule::Slice<jule::Ptr<_1d0759c1c_TypeDecl>> _field_generics = jule::Slice<jule::Ptr<_1d0759c1c_TypeDecl>>();
	jule::Slice<jule::Ptr<_1d075b14c_Expr>> _field_args = jule::Slice<jule::Ptr<_1d075b14c_Expr>>();
	jule::Ptr<_1d0761c13_ScopeTree> _field_exception = jule::Ptr<_1d0761c13_ScopeTree>();


	_1d075cd74_FnCallExpr(jule::Ptr<_1d0747985_Token> __param_token, jule::Ptr<_1d075b14c_Expr> __param_expr, jule::Slice<jule::Ptr<_1d0759c1c_TypeDecl>> __param_generics, jule::Slice<jule::Ptr<_1d075b14c_Expr>> __param_args, jule::Ptr<_1d0761c13_ScopeTree> __param_exception): _field_token(__param_token), _field_expr(__param_expr), _field_generics(__param_generics), _field_args(__param_args), _field_exception(__param_exception) {}

	

	_1d075cd74_FnCallExpr(void) = default;

	inline bool operator==(_1d075cd74_FnCallExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_generics == _other._field_generics &&
			this->_field_args == _other._field_args &&
			this->_field_exception == _other._field_exception;
	}

	inline bool operator!=(_1d075cd74_FnCallExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d075d380_is_targeted(_1d075d193_FieldExprPair*);
struct _1d075d193_FieldExprPair {
	jule::Ptr<_1d0747985_Token> _field_field = jule::Ptr<_1d0747985_Token>();
	jule::Ptr<_1d075b14c_Expr> _field_expr = jule::Ptr<_1d075b14c_Expr>();


	_1d075d193_FieldExprPair(jule::Ptr<_1d0747985_Token> __param_field, jule::Ptr<_1d075b14c_Expr> __param_expr): _field_field(__param_field), _field_expr(__param_expr) {}

	

	_1d075d193_FieldExprPair(void) = default;

	inline bool operator==(_1d075d193_FieldExprPair _other) {
		return 
			this->_field_field == _other._field_field &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1d075d193_FieldExprPair _other) { return !this->operator==(_other); }


};
struct _1d075d4b2_StructLit {
	jule::Ptr<_1d0747985_Token> _field_end = jule::Ptr<_1d0747985_Token>();
	jule::Ptr<_1d0759c1c_TypeDecl> _field_kind = jule::Ptr<_1d0759c1c_TypeDecl>();
	jule::Slice<jule::Ptr<_1d075b14c_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1d075b14c_Expr>>();


	_1d075d4b2_StructLit(jule::Ptr<_1d0747985_Token> __param_end, jule::Ptr<_1d0759c1c_TypeDecl> __param_kind, jule::Slice<jule::Ptr<_1d075b14c_Expr>> __param_exprs): _field_end(__param_end), _field_kind(__param_kind), _field_exprs(__param_exprs) {}

	

	_1d075d4b2_StructLit(void) = default;

	inline bool operator==(_1d075d4b2_StructLit _other) {
		return 
			this->_field_end == _other._field_end &&
			this->_field_kind == _other._field_kind &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_1d075d4b2_StructLit _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d075d88b_is_empty(_1d075d69e_BraceLit*);
struct _1d075d69e_BraceLit {
	jule::Ptr<_1d0747985_Token> _field_token = jule::Ptr<_1d0747985_Token>();
	jule::Ptr<_1d0747985_Token> _field_end = jule::Ptr<_1d0747985_Token>();
	jule::Slice<jule::Ptr<_1d075b14c_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1d075b14c_Expr>>();


	_1d075d69e_BraceLit(jule::Ptr<_1d0747985_Token> __param_token, jule::Ptr<_1d0747985_Token> __param_end, jule::Slice<jule::Ptr<_1d075b14c_Expr>> __param_exprs): _field_token(__param_token), _field_end(__param_end), _field_exprs(__param_exprs) {}

	

	_1d075d69e_BraceLit(void) = default;

	inline bool operator==(_1d075d69e_BraceLit _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_1d075d69e_BraceLit _other) { return !this->operator==(_other); }


};
struct _1d075d9bd_KeyValPair {
	jule::Ptr<_1d075b14c_Expr> _field_key = jule::Ptr<_1d075b14c_Expr>();
	jule::Ptr<_1d075b14c_Expr> _field_val = jule::Ptr<_1d075b14c_Expr>();
	jule::Ptr<_1d0747985_Token> _field_colon = jule::Ptr<_1d0747985_Token>();


	_1d075d9bd_KeyValPair(jule::Ptr<_1d075b14c_Expr> __param_key, jule::Ptr<_1d075b14c_Expr> __param_val, jule::Ptr<_1d0747985_Token> __param_colon): _field_key(__param_key), _field_val(__param_val), _field_colon(__param_colon) {}

	

	_1d075d9bd_KeyValPair(void) = default;

	inline bool operator==(_1d075d9bd_KeyValPair _other) {
		return 
			this->_field_key == _other._field_key &&
			this->_field_val == _other._field_val &&
			this->_field_colon == _other._field_colon;
	}

	inline bool operator!=(_1d075d9bd_KeyValPair _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d075b713_is_empty(_1d075dbaa_SliceExpr*);
struct _1d075dbaa_SliceExpr {
	jule::Ptr<_1d0747985_Token> _field_token = jule::Ptr<_1d0747985_Token>();
	jule::Ptr<_1d0747985_Token> _field_end = jule::Ptr<_1d0747985_Token>();
	jule::Slice<jule::Ptr<_1d075b14c_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1d075b14c_Expr>>();


	_1d075dbaa_SliceExpr(jule::Ptr<_1d0747985_Token> __param_token, jule::Ptr<_1d0747985_Token> __param_end, jule::Slice<jule::Ptr<_1d075b14c_Expr>> __param_exprs): _field_token(__param_token), _field_end(__param_end), _field_exprs(__param_exprs) {}

	

	_1d075dbaa_SliceExpr(void) = default;

	inline bool operator==(_1d075dbaa_SliceExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_1d075dbaa_SliceExpr _other) { return !this->operator==(_other); }


};
struct _1d075e4a2_IndexingExpr {
	jule::Ptr<_1d0747985_Token> _field_token = jule::Ptr<_1d0747985_Token>();
	jule::Ptr<_1d0747985_Token> _field_end = jule::Ptr<_1d0747985_Token>();
	jule::Ptr<_1d075b14c_Expr> _field_expr = jule::Ptr<_1d075b14c_Expr>();
	jule::Ptr<_1d075b14c_Expr> _field_index = jule::Ptr<_1d075b14c_Expr>();


	_1d075e4a2_IndexingExpr(jule::Ptr<_1d0747985_Token> __param_token, jule::Ptr<_1d0747985_Token> __param_end, jule::Ptr<_1d075b14c_Expr> __param_expr, jule::Ptr<_1d075b14c_Expr> __param_index): _field_token(__param_token), _field_end(__param_end), _field_expr(__param_expr), _field_index(__param_index) {}

	

	_1d075e4a2_IndexingExpr(void) = default;

	inline bool operator==(_1d075e4a2_IndexingExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_expr == _other._field_expr &&
			this->_field_index == _other._field_index;
	}

	inline bool operator!=(_1d075e4a2_IndexingExpr _other) { return !this->operator==(_other); }


};
struct _1d075eaac_SlicingExpr {
	jule::Ptr<_1d0747985_Token> _field_token = jule::Ptr<_1d0747985_Token>();
	jule::Ptr<_1d0747985_Token> _field_end = jule::Ptr<_1d0747985_Token>();
	jule::Ptr<_1d075b14c_Expr> _field_expr = jule::Ptr<_1d075b14c_Expr>();
	jule::Ptr<_1d075b14c_Expr> _field_start = jule::Ptr<_1d075b14c_Expr>();
	jule::Ptr<_1d075b14c_Expr> _field_to = jule::Ptr<_1d075b14c_Expr>();


	_1d075eaac_SlicingExpr(jule::Ptr<_1d0747985_Token> __param_token, jule::Ptr<_1d0747985_Token> __param_end, jule::Ptr<_1d075b14c_Expr> __param_expr, jule::Ptr<_1d075b14c_Expr> __param_start, jule::Ptr<_1d075b14c_Expr> __param_to): _field_token(__param_token), _field_end(__param_end), _field_expr(__param_expr), _field_start(__param_start), _field_to(__param_to) {}

	

	_1d075eaac_SlicingExpr(void) = default;

	inline bool operator==(_1d075eaac_SlicingExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_expr == _other._field_expr &&
			this->_field_start == _other._field_start &&
			this->_field_to == _other._field_to;
	}

	inline bool operator!=(_1d075eaac_SlicingExpr _other) { return !this->operator==(_other); }


};
struct _1d075ee64_GenericDecl {
	jule::Ptr<_1d0747985_Token> _field_token = jule::Ptr<_1d0747985_Token>();
	jule::Str _field_ident = jule::Str();


	_1d075ee64_GenericDecl(jule::Ptr<_1d0747985_Token> __param_token, jule::Str __param_ident): _field_token(__param_token), _field_ident(__param_ident) {}

	

	_1d075ee64_GenericDecl(void) = default;

	inline bool operator==(_1d075ee64_GenericDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1d075ee64_GenericDecl _other) { return !this->operator==(_other); }


};
struct _1d076031b_LabelSt {
	jule::Ptr<_1d0747985_Token> _field_token = jule::Ptr<_1d0747985_Token>();
	jule::Str _field_ident = jule::Str();


	_1d076031b_LabelSt(jule::Ptr<_1d0747985_Token> __param_token, jule::Str __param_ident): _field_token(__param_token), _field_ident(__param_ident) {}

	

	_1d076031b_LabelSt(void) = default;

	inline bool operator==(_1d076031b_LabelSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1d076031b_LabelSt _other) { return !this->operator==(_other); }


};
struct _1d07606c3_GotoSt {
	jule::Ptr<_1d0747985_Token> _field_token = jule::Ptr<_1d0747985_Token>();
	jule::Ptr<_1d0747985_Token> _field_label = jule::Ptr<_1d0747985_Token>();


	_1d07606c3_GotoSt(jule::Ptr<_1d0747985_Token> __param_token, jule::Ptr<_1d0747985_Token> __param_label): _field_token(__param_token), _field_label(__param_label) {}

	

	_1d07606c3_GotoSt(void) = default;

	inline bool operator==(_1d07606c3_GotoSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label;
	}

	inline bool operator!=(_1d07606c3_GotoSt _other) { return !this->operator==(_other); }


};
struct _1d07609ae_FallSt {
	jule::Ptr<_1d0747985_Token> _field_token = jule::Ptr<_1d0747985_Token>();


	_1d07609ae_FallSt(jule::Ptr<_1d0747985_Token> __param_token): _field_token(__param_token) {}

	

	_1d07609ae_FallSt(void) = default;

	inline bool operator==(_1d07609ae_FallSt _other) {
		return 
			this->_field_token == _other._field_token;
	}

	inline bool operator!=(_1d07609ae_FallSt _other) { return !this->operator==(_other); }


};
struct _1d07610b9_AssignLeft {
	jule::Ptr<_1d0747985_Token> _field_token = jule::Ptr<_1d0747985_Token>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1d075b14c_Expr> _field_expr = jule::Ptr<_1d075b14c_Expr>();


	_1d07610b9_AssignLeft(jule::Ptr<_1d0747985_Token> __param_token, jule::Bool __param_mutable, jule::Bool __param_reference, jule::Str __param_ident, jule::Ptr<_1d075b14c_Expr> __param_expr): _field_token(__param_token), _field_mutable(__param_mutable), _field_reference(__param_reference), _field_ident(__param_ident), _field_expr(__param_expr) {}

	

	_1d07610b9_AssignLeft(void) = default;

	inline bool operator==(_1d07610b9_AssignLeft _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_reference == _other._field_reference &&
			this->_field_ident == _other._field_ident &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1d07610b9_AssignLeft _other) { return !this->operator==(_other); }


};
struct _1d0761608_AssignSt {
	jule::Bool _field_declarative = jule::Bool();
	jule::Ptr<_1d0747985_Token> _field_setter = jule::Ptr<_1d0747985_Token>();
	jule::Slice<jule::Ptr<_1d07610b9_AssignLeft>> _field_left = jule::Slice<jule::Ptr<_1d07610b9_AssignLeft>>();
	jule::Ptr<_1d075b14c_Expr> _field_right = jule::Ptr<_1d075b14c_Expr>();


	_1d0761608_AssignSt(jule::Bool __param_declarative, jule::Ptr<_1d0747985_Token> __param_setter, jule::Slice<jule::Ptr<_1d07610b9_AssignLeft>> __param_left, jule::Ptr<_1d075b14c_Expr> __param_right): _field_declarative(__param_declarative), _field_setter(__param_setter), _field_left(__param_left), _field_right(__param_right) {}

	

	_1d0761608_AssignSt(void) = default;

	inline bool operator==(_1d0761608_AssignSt _other) {
		return 
			this->_field_declarative == _other._field_declarative &&
			this->_field_setter == _other._field_setter &&
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right;
	}

	inline bool operator!=(_1d0761608_AssignSt _other) { return !this->operator==(_other); }


};
struct _1d0761c13_ScopeTree {
	jule::Ptr<_1d0761c13_ScopeTree> _field_parent = jule::Ptr<_1d0761c13_ScopeTree>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_deferred = jule::Bool();
	jule::Slice<_1d06c9ce1_Node> _field_stmts = jule::Slice<_1d06c9ce1_Node>();
	jule::Ptr<_1d0747985_Token> _field_end = jule::Ptr<_1d0747985_Token>();


	_1d0761c13_ScopeTree(jule::Ptr<_1d0761c13_ScopeTree> __param_parent, jule::Bool __param_unsafety, jule::Bool __param_deferred, jule::Slice<_1d06c9ce1_Node> __param_stmts, jule::Ptr<_1d0747985_Token> __param_end): _field_parent(__param_parent), _field_unsafety(__param_unsafety), _field_deferred(__param_deferred), _field_stmts(__param_stmts), _field_end(__param_end) {}

	

	_1d0761c13_ScopeTree(void) = default;

	inline bool operator==(_1d0761c13_ScopeTree _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_deferred == _other._field_deferred &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_end == _other._field_end;
	}

	inline bool operator!=(_1d0761c13_ScopeTree _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d076274c_is_self(_1d07623d9_ParamDecl*);
inline jule::Bool _1d07629b1_is_ref(_1d07623d9_ParamDecl*);
struct _1d07623d9_ParamDecl {
	jule::Ptr<_1d0747985_Token> _field_token = jule::Ptr<_1d0747985_Token>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_variadic = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Ptr<_1d0759c1c_TypeDecl> _field_kind = jule::Ptr<_1d0759c1c_TypeDecl>();
	jule::Str _field_ident = jule::Str();


	_1d07623d9_ParamDecl(jule::Ptr<_1d0747985_Token> __param_token, jule::Bool __param_mutable, jule::Bool __param_variadic, jule::Bool __param_reference, jule::Ptr<_1d0759c1c_TypeDecl> __param_kind, jule::Str __param_ident): _field_token(__param_token), _field_mutable(__param_mutable), _field_variadic(__param_variadic), _field_reference(__param_reference), _field_kind(__param_kind), _field_ident(__param_ident) {}

	

	_1d07623d9_ParamDecl(void) = default;

	inline bool operator==(_1d07623d9_ParamDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_variadic == _other._field_variadic &&
			this->_field_reference == _other._field_reference &&
			this->_field_kind == _other._field_kind &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1d07623d9_ParamDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d0763a5b_is_anon(_1d0763709_FnDecl*);
struct _1d0763709_FnDecl {
	jule::Ptr<_1d0747985_Token> _field_token = jule::Ptr<_1d0747985_Token>();
	jule::Bool _field_global = jule::Bool();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_exceptional = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1d06c9ecd_Directive>> _field_directives = jule::Slice<jule::Ptr<_1d06c9ecd_Directive>>();
	jule::Ptr<_1d0761c13_ScopeTree> _field_scope = jule::Ptr<_1d0761c13_ScopeTree>();
	jule::Slice<jule::Ptr<_1d075ee64_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_1d075ee64_GenericDecl>>();
	jule::Ptr<_1d075ae60_RetTypeDecl> _field_result = jule::Ptr<_1d075ae60_RetTypeDecl>();
	jule::Slice<jule::Ptr<_1d07623d9_ParamDecl>> _field_params = jule::Slice<jule::Ptr<_1d07623d9_ParamDecl>>();


	_1d0763709_FnDecl(jule::Ptr<_1d0747985_Token> __param_token, jule::Bool __param_global, jule::Bool __param_unsafety, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_statically, jule::Bool __param_exceptional, jule::Str __param_ident, jule::Slice<jule::Ptr<_1d06c9ecd_Directive>> __param_directives, jule::Ptr<_1d0761c13_ScopeTree> __param_scope, jule::Slice<jule::Ptr<_1d075ee64_GenericDecl>> __param_generics, jule::Ptr<_1d075ae60_RetTypeDecl> __param_result, jule::Slice<jule::Ptr<_1d07623d9_ParamDecl>> __param_params): _field_token(__param_token), _field_global(__param_global), _field_unsafety(__param_unsafety), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_statically(__param_statically), _field_exceptional(__param_exceptional), _field_ident(__param_ident), _field_directives(__param_directives), _field_scope(__param_scope), _field_generics(__param_generics), _field_result(__param_result), _field_params(__param_params) {}

	

	_1d0763709_FnDecl(void) = default;

	inline bool operator==(_1d0763709_FnDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_global == _other._field_global &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_statically == _other._field_statically &&
			this->_field_exceptional == _other._field_exceptional &&
			this->_field_ident == _other._field_ident &&
			this->_field_directives == _other._field_directives &&
			this->_field_scope == _other._field_scope &&
			this->_field_generics == _other._field_generics &&
			this->_field_result == _other._field_result &&
			this->_field_params == _other._field_params;
	}

	inline bool operator!=(_1d0763709_FnDecl _other) { return !this->operator==(_other); }


};
struct _1d07646d8_VarDecl {
	jule::Ptr<_1d0761c13_ScopeTree> _field_scope = jule::Ptr<_1d0761c13_ScopeTree>();
	jule::Ptr<_1d0747985_Token> _field_token = jule::Ptr<_1d0747985_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_constant = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Slice<jule::Ptr<_1d06c9ecd_Directive>> _field_directives = jule::Slice<jule::Ptr<_1d06c9ecd_Directive>>();
	jule::Ptr<_1d0759c1c_TypeDecl> _field_kind = jule::Ptr<_1d0759c1c_TypeDecl>();
	jule::Ptr<_1d075b14c_Expr> _field_expr = jule::Ptr<_1d075b14c_Expr>();


	_1d07646d8_VarDecl(jule::Ptr<_1d0761c13_ScopeTree> __param_scope, jule::Ptr<_1d0747985_Token> __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Bool __param_public, jule::Bool __param_mutable, jule::Bool __param_constant, jule::Bool __param_statically, jule::Bool __param_reference, jule::Slice<jule::Ptr<_1d06c9ecd_Directive>> __param_directives, jule::Ptr<_1d0759c1c_TypeDecl> __param_kind, jule::Ptr<_1d075b14c_Expr> __param_expr): _field_scope(__param_scope), _field_token(__param_token), _field_ident(__param_ident), _field_cpp_linked(__param_cpp_linked), _field_public(__param_public), _field_mutable(__param_mutable), _field_constant(__param_constant), _field_statically(__param_statically), _field_reference(__param_reference), _field_directives(__param_directives), _field_kind(__param_kind), _field_expr(__param_expr) {}

	

	_1d07646d8_VarDecl(void) = default;

	inline bool operator==(_1d07646d8_VarDecl _other) {
		return 
			this->_field_scope == _other._field_scope &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_public == _other._field_public &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_constant == _other._field_constant &&
			this->_field_statically == _other._field_statically &&
			this->_field_reference == _other._field_reference &&
			this->_field_directives == _other._field_directives &&
			this->_field_kind == _other._field_kind &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1d07646d8_VarDecl _other) { return !this->operator==(_other); }


};
struct _1d0764a90_RetSt {
	jule::Ptr<_1d0747985_Token> _field_token = jule::Ptr<_1d0747985_Token>();
	jule::Ptr<_1d075b14c_Expr> _field_expr = jule::Ptr<_1d075b14c_Expr>();


	_1d0764a90_RetSt(jule::Ptr<_1d0747985_Token> __param_token, jule::Ptr<_1d075b14c_Expr> __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_1d0764a90_RetSt(void) = default;

	inline bool operator==(_1d0764a90_RetSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1d0764a90_RetSt _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d0765464_is_inf(_1d0765112_Iter*);
struct _1d0765112_Iter {
	jule::Ptr<_1d0747985_Token> _field_token = jule::Ptr<_1d0747985_Token>();
	jule::Any _field_kind = jule::Any();
	jule::Ptr<_1d0761c13_ScopeTree> _field_scope = jule::Ptr<_1d0761c13_ScopeTree>();


	_1d0765112_Iter(jule::Ptr<_1d0747985_Token> __param_token, jule::Any __param_kind, jule::Ptr<_1d0761c13_ScopeTree> __param_scope): _field_token(__param_token), _field_kind(__param_kind), _field_scope(__param_scope) {}

	

	_1d0765112_Iter(void) = default;

	inline bool operator==(_1d0765112_Iter _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_kind == _other._field_kind &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1d0765112_Iter _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d0765c39_is_while_next(_1d07658d7_WhileKind*);
struct _1d07658d7_WhileKind {
	jule::Ptr<_1d075b14c_Expr> _field_expr = jule::Ptr<_1d075b14c_Expr>();
	jule::Any _field_next = jule::Any();
	jule::Ptr<_1d0747985_Token> _field_next_token = jule::Ptr<_1d0747985_Token>();


	_1d07658d7_WhileKind(jule::Ptr<_1d075b14c_Expr> __param_expr, jule::Any __param_next, jule::Ptr<_1d0747985_Token> __param_next_token): _field_expr(__param_expr), _field_next(__param_next), _field_next_token(__param_next_token) {}

	

	_1d07658d7_WhileKind(void) = default;

	inline bool operator==(_1d07658d7_WhileKind _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_next == _other._field_next &&
			this->_field_next_token == _other._field_next_token;
	}

	inline bool operator!=(_1d07658d7_WhileKind _other) { return !this->operator==(_other); }


};
struct _1d0766278_RangeKind {
	jule::Ptr<_1d0747985_Token> _field_in_token = jule::Ptr<_1d0747985_Token>();
	jule::Ptr<_1d075b14c_Expr> _field_expr = jule::Ptr<_1d075b14c_Expr>();
	jule::Ptr<_1d07646d8_VarDecl> _field_key_a = jule::Ptr<_1d07646d8_VarDecl>();
	jule::Ptr<_1d07646d8_VarDecl> _field_key_b = jule::Ptr<_1d07646d8_VarDecl>();


	_1d0766278_RangeKind(jule::Ptr<_1d0747985_Token> __param_in_token, jule::Ptr<_1d075b14c_Expr> __param_expr, jule::Ptr<_1d07646d8_VarDecl> __param_key_a, jule::Ptr<_1d07646d8_VarDecl> __param_key_b): _field_in_token(__param_in_token), _field_expr(__param_expr), _field_key_a(__param_key_a), _field_key_b(__param_key_b) {}

	

	_1d0766278_RangeKind(void) = default;

	inline bool operator==(_1d0766278_RangeKind _other) {
		return 
			this->_field_in_token == _other._field_in_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_key_a == _other._field_key_a &&
			this->_field_key_b == _other._field_key_b;
	}

	inline bool operator!=(_1d0766278_RangeKind _other) { return !this->operator==(_other); }


};
struct _1d0766630_BreakSt {
	jule::Ptr<_1d0747985_Token> _field_token = jule::Ptr<_1d0747985_Token>();
	jule::Ptr<_1d0747985_Token> _field_label = jule::Ptr<_1d0747985_Token>();


	_1d0766630_BreakSt(jule::Ptr<_1d0747985_Token> __param_token, jule::Ptr<_1d0747985_Token> __param_label): _field_token(__param_token), _field_label(__param_label) {}

	

	_1d0766630_BreakSt(void) = default;

	inline bool operator==(_1d0766630_BreakSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label;
	}

	inline bool operator!=(_1d0766630_BreakSt _other) { return !this->operator==(_other); }


};
struct _1d07669d7_ContSt {
	jule::Ptr<_1d0747985_Token> _field_token = jule::Ptr<_1d0747985_Token>();
	jule::Ptr<_1d0747985_Token> _field_label = jule::Ptr<_1d0747985_Token>();


	_1d07669d7_ContSt(jule::Ptr<_1d0747985_Token> __param_token, jule::Ptr<_1d0747985_Token> __param_label): _field_token(__param_token), _field_label(__param_label) {}

	

	_1d07669d7_ContSt(void) = default;

	inline bool operator==(_1d07669d7_ContSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label;
	}

	inline bool operator!=(_1d07669d7_ContSt _other) { return !this->operator==(_other); }


};
struct _1d0766e5a_If {
	jule::Ptr<_1d0747985_Token> _field_token = jule::Ptr<_1d0747985_Token>();
	jule::Ptr<_1d075b14c_Expr> _field_expr = jule::Ptr<_1d075b14c_Expr>();
	jule::Ptr<_1d0761c13_ScopeTree> _field_scope = jule::Ptr<_1d0761c13_ScopeTree>();


	_1d0766e5a_If(jule::Ptr<_1d0747985_Token> __param_token, jule::Ptr<_1d075b14c_Expr> __param_expr, jule::Ptr<_1d0761c13_ScopeTree> __param_scope): _field_token(__param_token), _field_expr(__param_expr), _field_scope(__param_scope) {}

	

	_1d0766e5a_If(void) = default;

	inline bool operator==(_1d0766e5a_If _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1d0766e5a_If _other) { return !this->operator==(_other); }


};
struct _1d0767312_Else {
	jule::Ptr<_1d0747985_Token> _field_token = jule::Ptr<_1d0747985_Token>();
	jule::Ptr<_1d0761c13_ScopeTree> _field_scope = jule::Ptr<_1d0761c13_ScopeTree>();


	_1d0767312_Else(jule::Ptr<_1d0747985_Token> __param_token, jule::Ptr<_1d0761c13_ScopeTree> __param_scope): _field_token(__param_token), _field_scope(__param_scope) {}

	

	_1d0767312_Else(void) = default;

	inline bool operator==(_1d0767312_Else _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1d0767312_Else _other) { return !this->operator==(_other); }


};
struct _1d0767785_Conditional {
	jule::Ptr<_1d0766e5a_If> _field_head = jule::Ptr<_1d0766e5a_If>();
	jule::Slice<jule::Ptr<_1d0766e5a_If>> _field_tail = jule::Slice<jule::Ptr<_1d0766e5a_If>>();
	jule::Ptr<_1d0767312_Else> _field_default = jule::Ptr<_1d0767312_Else>();


	_1d0767785_Conditional(jule::Ptr<_1d0766e5a_If> __param_head, jule::Slice<jule::Ptr<_1d0766e5a_If>> __param_tail, jule::Ptr<_1d0767312_Else> __param_default): _field_head(__param_head), _field_tail(__param_tail), _field_default(__param_default) {}

	

	_1d0767785_Conditional(void) = default;

	inline bool operator==(_1d0767785_Conditional _other) {
		return 
			this->_field_head == _other._field_head &&
			this->_field_tail == _other._field_tail &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1d0767785_Conditional _other) { return !this->operator==(_other); }


};
struct _1d0767e5b_TypeAliasDecl {
	jule::Ptr<_1d0761c13_ScopeTree> _field_scope = jule::Ptr<_1d0761c13_ScopeTree>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Ptr<_1d0747985_Token> _field_token = jule::Ptr<_1d0747985_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1d0759c1c_TypeDecl> _field_kind = jule::Ptr<_1d0759c1c_TypeDecl>();


	_1d0767e5b_TypeAliasDecl(jule::Ptr<_1d0761c13_ScopeTree> __param_scope, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Ptr<_1d0747985_Token> __param_token, jule::Str __param_ident, jule::Ptr<_1d0759c1c_TypeDecl> __param_kind): _field_scope(__param_scope), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_token(__param_token), _field_ident(__param_ident), _field_kind(__param_kind) {}

	

	_1d0767e5b_TypeAliasDecl(void) = default;

	inline bool operator==(_1d0767e5b_TypeAliasDecl _other) {
		return 
			this->_field_scope == _other._field_scope &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1d0767e5b_TypeAliasDecl _other) { return !this->operator==(_other); }


};
struct _1d07683ce_Case {
	jule::Ptr<_1d0747985_Token> _field_token = jule::Ptr<_1d0747985_Token>();
	jule::Ptr<_1d0761c13_ScopeTree> _field_scope = jule::Ptr<_1d0761c13_ScopeTree>();
	jule::Slice<jule::Ptr<_1d075b14c_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1d075b14c_Expr>>();


	_1d07683ce_Case(jule::Ptr<_1d0747985_Token> __param_token, jule::Ptr<_1d0761c13_ScopeTree> __param_scope, jule::Slice<jule::Ptr<_1d075b14c_Expr>> __param_exprs): _field_token(__param_token), _field_scope(__param_scope), _field_exprs(__param_exprs) {}

	

	_1d07683ce_Case(void) = default;

	inline bool operator==(_1d07683ce_Case _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_scope == _other._field_scope &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_1d07683ce_Case _other) { return !this->operator==(_other); }


};
struct _1d0768aa5_MatchCase {
	jule::Ptr<_1d0747985_Token> _field_token = jule::Ptr<_1d0747985_Token>();
	jule::Ptr<_1d0747985_Token> _field_end = jule::Ptr<_1d0747985_Token>();
	jule::Bool _field_type_match = jule::Bool();
	jule::Ptr<_1d075b14c_Expr> _field_expr = jule::Ptr<_1d075b14c_Expr>();
	jule::Slice<jule::Ptr<_1d07683ce_Case>> _field_cases = jule::Slice<jule::Ptr<_1d07683ce_Case>>();
	jule::Ptr<_1d0767312_Else> _field_default = jule::Ptr<_1d0767312_Else>();


	_1d0768aa5_MatchCase(jule::Ptr<_1d0747985_Token> __param_token, jule::Ptr<_1d0747985_Token> __param_end, jule::Bool __param_type_match, jule::Ptr<_1d075b14c_Expr> __param_expr, jule::Slice<jule::Ptr<_1d07683ce_Case>> __param_cases, jule::Ptr<_1d0767312_Else> __param_default): _field_token(__param_token), _field_end(__param_end), _field_type_match(__param_type_match), _field_expr(__param_expr), _field_cases(__param_cases), _field_default(__param_default) {}

	

	_1d0768aa5_MatchCase(void) = default;

	inline bool operator==(_1d0768aa5_MatchCase _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_type_match == _other._field_type_match &&
			this->_field_expr == _other._field_expr &&
			this->_field_cases == _other._field_cases &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1d0768aa5_MatchCase _other) { return !this->operator==(_other); }


};
struct _1d0769347_UseDecl {
	jule::Ptr<_1d0747985_Token> _field_token = jule::Ptr<_1d0747985_Token>();
	jule::Str _field_link_path = jule::Str();
	jule::Str _field_alias = jule::Str();
	jule::Bool _field_full = jule::Bool();
	jule::Slice<jule::Ptr<_1d0747985_Token>> _field_selected = jule::Slice<jule::Ptr<_1d0747985_Token>>();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_std = jule::Bool();


	_1d0769347_UseDecl(jule::Ptr<_1d0747985_Token> __param_token, jule::Str __param_link_path, jule::Str __param_alias, jule::Bool __param_full, jule::Slice<jule::Ptr<_1d0747985_Token>> __param_selected, jule::Bool __param_cpp_linked, jule::Bool __param_std): _field_token(__param_token), _field_link_path(__param_link_path), _field_alias(__param_alias), _field_full(__param_full), _field_selected(__param_selected), _field_cpp_linked(__param_cpp_linked), _field_std(__param_std) {}

	

	_1d0769347_UseDecl(void) = default;

	inline bool operator==(_1d0769347_UseDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_link_path == _other._field_link_path &&
			this->_field_alias == _other._field_alias &&
			this->_field_full == _other._field_full &&
			this->_field_selected == _other._field_selected &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_std == _other._field_std;
	}

	inline bool operator!=(_1d0769347_UseDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d0769d4d_auto_expr(_1d07697ba_EnumItemDecl*);
struct _1d07697ba_EnumItemDecl {
	jule::Ptr<_1d0747985_Token> _field_token = jule::Ptr<_1d0747985_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1d075b14c_Expr> _field_expr = jule::Ptr<_1d075b14c_Expr>();


	_1d07697ba_EnumItemDecl(jule::Ptr<_1d0747985_Token> __param_token, jule::Str __param_ident, jule::Ptr<_1d075b14c_Expr> __param_expr): _field_token(__param_token), _field_ident(__param_ident), _field_expr(__param_expr) {}

	

	_1d07697ba_EnumItemDecl(void) = default;

	inline bool operator==(_1d07697ba_EnumItemDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1d07697ba_EnumItemDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d076a766_default_typed(_1d076a414_EnumDecl*);
struct _1d076a414_EnumDecl {
	jule::Ptr<_1d0747985_Token> _field_token = jule::Ptr<_1d0747985_Token>();
	jule::Bool _field_public = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1d0759c1c_TypeDecl> _field_kind = jule::Ptr<_1d0759c1c_TypeDecl>();
	jule::Slice<jule::Ptr<_1d07697ba_EnumItemDecl>> _field_items = jule::Slice<jule::Ptr<_1d07697ba_EnumItemDecl>>();
	jule::Ptr<_1d0747985_Token> _field_end = jule::Ptr<_1d0747985_Token>();


	_1d076a414_EnumDecl(jule::Ptr<_1d0747985_Token> __param_token, jule::Bool __param_public, jule::Str __param_ident, jule::Ptr<_1d0759c1c_TypeDecl> __param_kind, jule::Slice<jule::Ptr<_1d07697ba_EnumItemDecl>> __param_items, jule::Ptr<_1d0747985_Token> __param_end): _field_token(__param_token), _field_public(__param_public), _field_ident(__param_ident), _field_kind(__param_kind), _field_items(__param_items), _field_end(__param_end) {}

	

	_1d076a414_EnumDecl(void) = default;

	inline bool operator==(_1d076a414_EnumDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_items == _other._field_items &&
			this->_field_end == _other._field_end;
	}

	inline bool operator!=(_1d076a414_EnumDecl _other) { return !this->operator==(_other); }


};
struct _1d076ae3c_FieldDecl {
	jule::Ptr<_1d0747985_Token> _field_token = jule::Ptr<_1d0747985_Token>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1d0759c1c_TypeDecl> _field_kind = jule::Ptr<_1d0759c1c_TypeDecl>();
	jule::Ptr<_1d075b14c_Expr> _field_default = jule::Ptr<_1d075b14c_Expr>();


	_1d076ae3c_FieldDecl(jule::Ptr<_1d0747985_Token> __param_token, jule::Bool __param_public, jule::Bool __param_mutable, jule::Str __param_ident, jule::Ptr<_1d0759c1c_TypeDecl> __param_kind, jule::Ptr<_1d075b14c_Expr> __param_default): _field_token(__param_token), _field_public(__param_public), _field_mutable(__param_mutable), _field_ident(__param_ident), _field_kind(__param_kind), _field_default(__param_default) {}

	

	_1d076ae3c_FieldDecl(void) = default;

	inline bool operator==(_1d076ae3c_FieldDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1d076ae3c_FieldDecl _other) { return !this->operator==(_other); }


};
struct _1d076b79a_StructDecl {
	jule::Ptr<_1d0747985_Token> _field_token = jule::Ptr<_1d0747985_Token>();
	jule::Ptr<_1d0747985_Token> _field_end = jule::Ptr<_1d0747985_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1d076ae3c_FieldDecl>> _field_fields = jule::Slice<jule::Ptr<_1d076ae3c_FieldDecl>>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Slice<jule::Ptr<_1d06c9ecd_Directive>> _field_directives = jule::Slice<jule::Ptr<_1d06c9ecd_Directive>>();
	jule::Slice<jule::Ptr<_1d075ee64_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_1d075ee64_GenericDecl>>();


	_1d076b79a_StructDecl(jule::Ptr<_1d0747985_Token> __param_token, jule::Ptr<_1d0747985_Token> __param_end, jule::Str __param_ident, jule::Slice<jule::Ptr<_1d076ae3c_FieldDecl>> __param_fields, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Slice<jule::Ptr<_1d06c9ecd_Directive>> __param_directives, jule::Slice<jule::Ptr<_1d075ee64_GenericDecl>> __param_generics): _field_token(__param_token), _field_end(__param_end), _field_ident(__param_ident), _field_fields(__param_fields), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_directives(__param_directives), _field_generics(__param_generics) {}

	

	_1d076b79a_StructDecl(void) = default;

	inline bool operator==(_1d076b79a_StructDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_ident == _other._field_ident &&
			this->_field_fields == _other._field_fields &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_directives == _other._field_directives &&
			this->_field_generics == _other._field_generics;
	}

	inline bool operator!=(_1d076b79a_StructDecl _other) { return !this->operator==(_other); }


};
struct _1d076bda5_TraitDecl {
	jule::Ptr<_1d0747985_Token> _field_token = jule::Ptr<_1d0747985_Token>();
	jule::Ptr<_1d0747985_Token> _field_end = jule::Ptr<_1d0747985_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_public = jule::Bool();
	jule::Slice<jule::Ptr<_1d0763709_FnDecl>> _field_methods = jule::Slice<jule::Ptr<_1d0763709_FnDecl>>();


	_1d076bda5_TraitDecl(jule::Ptr<_1d0747985_Token> __param_token, jule::Ptr<_1d0747985_Token> __param_end, jule::Str __param_ident, jule::Bool __param_public, jule::Slice<jule::Ptr<_1d0763709_FnDecl>> __param_methods): _field_token(__param_token), _field_end(__param_end), _field_ident(__param_ident), _field_public(__param_public), _field_methods(__param_methods) {}

	

	_1d076bda5_TraitDecl(void) = default;

	inline bool operator==(_1d076bda5_TraitDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_ident == _other._field_ident &&
			this->_field_public == _other._field_public &&
			this->_field_methods == _other._field_methods;
	}

	inline bool operator!=(_1d076bda5_TraitDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d076c823_is_trait_impl(_1d076c4b0_Impl*);
inline jule::Bool _1d076ca87_is_struct_impl(_1d076c4b0_Impl*);
struct _1d076c4b0_Impl {
	jule::Ptr<_1d0747985_Token> _field_end = jule::Ptr<_1d0747985_Token>();
	jule::Ptr<_1d0759c1c_TypeDecl> _field_base = jule::Ptr<_1d0759c1c_TypeDecl>();
	jule::Ptr<_1d0759c1c_TypeDecl> _field_dest = jule::Ptr<_1d0759c1c_TypeDecl>();
	jule::Slice<jule::Ptr<_1d0763709_FnDecl>> _field_methods = jule::Slice<jule::Ptr<_1d0763709_FnDecl>>();
	jule::Slice<jule::Ptr<_1d07646d8_VarDecl>> _field_statics = jule::Slice<jule::Ptr<_1d07646d8_VarDecl>>();


	_1d076c4b0_Impl(jule::Ptr<_1d0747985_Token> __param_end, jule::Ptr<_1d0759c1c_TypeDecl> __param_base, jule::Ptr<_1d0759c1c_TypeDecl> __param_dest, jule::Slice<jule::Ptr<_1d0763709_FnDecl>> __param_methods, jule::Slice<jule::Ptr<_1d07646d8_VarDecl>> __param_statics): _field_end(__param_end), _field_base(__param_base), _field_dest(__param_dest), _field_methods(__param_methods), _field_statics(__param_statics) {}

	

	_1d076c4b0_Impl(void) = default;

	inline bool operator==(_1d076c4b0_Impl _other) {
		return 
			this->_field_end == _other._field_end &&
			this->_field_base == _other._field_base &&
			this->_field_dest == _other._field_dest &&
			this->_field_methods == _other._field_methods &&
			this->_field_statics == _other._field_statics;
	}

	inline bool operator!=(_1d076c4b0_Impl _other) { return !this->operator==(_other); }


};
struct _1b6506593_FileInfo {
	jule::Ptr<_1d06e7b66_Ast> _field_ast = jule::Ptr<_1d06e7b66_Ast>();
	jule::Slice<_1d0019224_Log> _field_errors = jule::Slice<_1d0019224_Log>();


	_1b6506593_FileInfo(jule::Ptr<_1d06e7b66_Ast> __param_ast, jule::Slice<_1d0019224_Log> __param_errors): _field_ast(__param_ast), _field_errors(__param_errors) {}

	

	_1b6506593_FileInfo(void) = default;

	inline bool operator==(_1b6506593_FileInfo _other) {
		return 
			this->_field_ast == _other._field_ast &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_1b6506593_FileInfo _other) { return !this->operator==(_other); }


};
struct _1b6506780_PackageInfo {
	jule::Slice<jule::Ptr<_1b6506593_FileInfo>> _field_files = jule::Slice<jule::Ptr<_1b6506593_FileInfo>>();


	_1b6506780_PackageInfo(jule::Slice<jule::Ptr<_1b6506593_FileInfo>> __param_files): _field_files(__param_files) {}

	

	_1b6506780_PackageInfo(void) = default;

	inline bool operator==(_1b6506780_PackageInfo _other) {
		return 
			this->_field_files == _other._field_files;
	}

	inline bool operator!=(_1b6506780_PackageInfo _other) { return !this->operator==(_other); }


};
struct _1b654d3cb_Stmt {
	jule::Slice<jule::Ptr<_1d0747985_Token>> _field_tokens = jule::Slice<jule::Ptr<_1d0747985_Token>>();
	jule::Bool _field_terminated = jule::Bool();


	_1b654d3cb_Stmt(jule::Slice<jule::Ptr<_1d0747985_Token>> __param_tokens, jule::Bool __param_terminated): _field_tokens(__param_tokens), _field_terminated(__param_terminated) {}

	

	_1b654d3cb_Stmt(void) = default;

	inline bool operator==(_1b654d3cb_Stmt _other) {
		return 
			this->_field_tokens == _other._field_tokens &&
			this->_field_terminated == _other._field_terminated;
	}

	inline bool operator!=(_1b654d3cb_Stmt _other) { return !this->operator==(_other); }


};
inline void _1b654e388_stop(_1b654dc06_ScopeParser*);
inline jule::Bool _1b654e5ec_stopped(_1b654dc06_ScopeParser*);
inline jule::Bool _1b654e861_finished(_1b654dc06_ScopeParser*);
inline jule::Bool _1b654eac5_is_last_st(_1b654dc06_ScopeParser*);
inline void _1b654ede4_push_err(_1b654dc06_ScopeParser*,jule::Ptr<_1d0747985_Token>,jule::Str);
inline void _1b6550213_push_suggestion(_1b654dc06_ScopeParser*,jule::Str,jule::Slice<jule::Any>);
inline void _1b6550488_insert_as_next(_1b654dc06_ScopeParser*,jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline jule::Ptr<_1b654d3cb_Stmt> _1b65506ec_next(_1b654dc06_ScopeParser*);
inline jule::Ptr<_1d0761c13_ScopeTree> _1b6550aa4_build_scope(_1b654dc06_ScopeParser*,jule::Slice<jule::Ptr<_1d0747985_Token>>&,jule::Ptr<_1d0747985_Token>);
inline jule::Any _1b6550db2_build_var_st(_1b654dc06_ScopeParser*,jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline jule::Any _1b65511c0_build_ret_st(_1b654dc06_ScopeParser*,jule::Slice<jule::Ptr<_1d0747985_Token>>);
inline jule::Any _1b65514cd_build_while_next_iter(_1b654dc06_ScopeParser*,jule::Ptr<_1b654d3cb_Stmt>&);
inline jule::Ptr<_1d07658d7_WhileKind> _1b65517db_build_while_iter_kind(_1b654dc06_ScopeParser*,jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_1d0747985_Token>>> _1b6551b3d_get_range_kind_keys_tokens(_1b654dc06_ScopeParser*,jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline jule::Ptr<_1d07646d8_VarDecl> _1b6551e3a_build_range_kind_key(_1b654dc06_ScopeParser*,jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline jule::Slice<jule::Ptr<_1d07646d8_VarDecl>> _1b6552248_build_range_kind_keys(_1b654dc06_ScopeParser*,jule::Slice<jule::Slice<jule::Ptr<_1d0747985_Token>>>&);
inline void _1b65525ab_setup_range_kind_keys_plain(_1b654dc06_ScopeParser*,jule::Ptr<_1d0766278_RangeKind>&,jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline void _1b655290d_setup_range_kind_keys_explicit(_1b654dc06_ScopeParser*,jule::Ptr<_1d0766278_RangeKind>&,jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline void _1b6552c1b_setup_range_kind_keys(_1b654dc06_ScopeParser*,jule::Ptr<_1d0766278_RangeKind>&,jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline jule::Ptr<_1d0766278_RangeKind> _1b655316c_build_range_iter_kind(_1b654dc06_ScopeParser*,jule::Slice<jule::Ptr<_1d0747985_Token>>&,jule::Slice<jule::Ptr<_1d0747985_Token>>&,jule::Ptr<_1d0747985_Token>&);
inline jule::Any _1b6553524_build_common_iter_kind(_1b654dc06_ScopeParser*,jule::Slice<jule::Ptr<_1d0747985_Token>>&,jule::Ptr<_1d0747985_Token>&);
inline jule::Any _1b6553832_build_common_iter(_1b654dc06_ScopeParser*,jule::Slice<jule::Ptr<_1d0747985_Token>>);
inline jule::Any _1b6553b40_build_iter_st(_1b654dc06_ScopeParser*,jule::Ptr<_1b654d3cb_Stmt>&);
inline jule::Any _1b6553e4d_build_break_st(_1b654dc06_ScopeParser*,jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline jule::Any _1b655425b_build_cont_st(_1b654dc06_ScopeParser*,jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline jule::Ptr<_1d0766e5a_If> _1b6554569_build_if(_1b654dc06_ScopeParser*,jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline jule::Ptr<_1d0767312_Else> _1b6554877_build_else(_1b654dc06_ScopeParser*,jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline jule::Any _1b6554b85_build_if_else_chain(_1b654dc06_ScopeParser*,jule::Slice<jule::Ptr<_1d0747985_Token>>);
inline jule::Any _1b6554e93_build_co_call_st(_1b654dc06_ScopeParser*,jule::Slice<jule::Ptr<_1d0747985_Token>>);
inline jule::Any _1b65552a1_build_goto_st(_1b654dc06_ScopeParser*,jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline jule::Any _1b65555ae_build_fall_st(_1b654dc06_ScopeParser*,jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline jule::Any _1b65558bc_build_type_alias_st(_1b654dc06_ScopeParser*,jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline void _1b6555d2e_push_case_expr(_1b654dc06_ScopeParser*,jule::Slice<jule::Ptr<_1d0747985_Token>>,jule::Ptr<_1d0747985_Token>,jule::Bool,jule::Slice<jule::Ptr<_1d075b14c_Expr>>&);
inline jule::Slice<jule::Ptr<_1d075b14c_Expr>> _1b65561d6_build_case_exprs(_1b654dc06_ScopeParser*,jule::Slice<jule::Ptr<_1d0747985_Token>>&,jule::Bool);
inline jule::Ptr<_1d0761c13_ScopeTree> _1b65564e4_build_case_scope(_1b654dc06_ScopeParser*,jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline std::tuple<jule::Ptr<_1d07683ce_Case>,jule::Bool> _1b655689b_build_case(_1b654dc06_ScopeParser*,jule::Slice<jule::Ptr<_1d0747985_Token>>&,jule::Bool);
inline std::tuple<jule::Slice<jule::Ptr<_1d07683ce_Case>>,jule::Ptr<_1d0767312_Else>> _1b6556c53_build_cases(_1b654dc06_ScopeParser*,jule::Slice<jule::Ptr<_1d0747985_Token>>,jule::Bool);
inline jule::Ptr<_1d0768aa5_MatchCase> _1b6557061_build_match_case(_1b654dc06_ScopeParser*,jule::Slice<jule::Ptr<_1d0747985_Token>>);
inline jule::Ptr<_1d0761c13_ScopeTree> _1b655736e_build_scope_st(_1b654dc06_ScopeParser*,jule::Slice<jule::Ptr<_1d0747985_Token>>);
inline jule::Ptr<_1d076031b_LabelSt> _1b655767c_build_label_st(_1b654dc06_ScopeParser*,jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline std::tuple<jule::Any,jule::Bool> _1b655798a_build_id_st(_1b654dc06_ScopeParser*,jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline jule::Ptr<_1b6566d51_AssignInfo> _1b6557c98_build_assign_info(_1b654dc06_ScopeParser*,jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline jule::Ptr<_1d07610b9_AssignLeft> _1b65580a6_build_assign_l(_1b654dc06_ScopeParser*,jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline jule::Slice<jule::Ptr<_1d07610b9_AssignLeft>> _1b65583b4_build_assign_ls(_1b654dc06_ScopeParser*,jule::Slice<jule::Slice<jule::Ptr<_1d0747985_Token>>>&);
inline std::tuple<jule::Ptr<_1d0761608_AssignSt>,jule::Bool> _1b65586c2_build_plain_assign(_1b654dc06_ScopeParser*,jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline std::tuple<jule::Ptr<_1d0761608_AssignSt>,jule::Bool> _1b65589d0_build_decl_assign(_1b654dc06_ScopeParser*,jule::Slice<jule::Ptr<_1d0747985_Token>>);
inline std::tuple<jule::Ptr<_1d0761608_AssignSt>,jule::Bool> _1b6558cdd_build_assign_st(_1b654dc06_ScopeParser*,jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline jule::Any _1b65590eb_build_use_expr(_1b654dc06_ScopeParser*,jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline jule::Any _1b6559409_build_st(_1b654dc06_ScopeParser*,jule::Ptr<_1b654d3cb_Stmt>&);
inline void _1b6559728_build(_1b654dc06_ScopeParser*,jule::Slice<jule::Ptr<_1d0747985_Token>>&,jule::Ptr<_1d0761c13_ScopeTree>&);
struct _1b654dc06_ScopeParser {
	jule::Ptr<_1b656a382_Parser> _field_p = jule::Ptr<_1b656a382_Parser>();
	jule::Ptr<_1d0761c13_ScopeTree> _field_s = jule::Ptr<_1d0761c13_ScopeTree>();
	jule::Slice<jule::Ptr<_1b654d3cb_Stmt>> _field_stmts = jule::Slice<jule::Ptr<_1b654d3cb_Stmt>>();
	jule::I64 _field_pos = jule::I64();


	_1b654dc06_ScopeParser(jule::Ptr<_1b656a382_Parser> __param_p, jule::Ptr<_1d0761c13_ScopeTree> __param_s, jule::Slice<jule::Ptr<_1b654d3cb_Stmt>> __param_stmts, jule::I64 __param_pos): _field_p(__param_p), _field_s(__param_s), _field_stmts(__param_stmts), _field_pos(__param_pos) {}

	

	_1b654dc06_ScopeParser(void) = default;

	inline bool operator==(_1b654dc06_ScopeParser _other) {
		return 
			this->_field_p == _other._field_p &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1b654dc06_ScopeParser _other) { return !this->operator==(_other); }


};
struct _1b655a5c5_CallData {
	jule::Slice<jule::Ptr<_1d0747985_Token>> _field_expr_tokens = jule::Slice<jule::Ptr<_1d0747985_Token>>();
	jule::Slice<jule::Ptr<_1d0747985_Token>> _field_args_tokens = jule::Slice<jule::Ptr<_1d0747985_Token>>();
	jule::Slice<jule::Ptr<_1d0747985_Token>> _field_generics_tokens = jule::Slice<jule::Ptr<_1d0747985_Token>>();


	_1b655a5c5_CallData(jule::Slice<jule::Ptr<_1d0747985_Token>> __param_expr_tokens, jule::Slice<jule::Ptr<_1d0747985_Token>> __param_args_tokens, jule::Slice<jule::Ptr<_1d0747985_Token>> __param_generics_tokens): _field_expr_tokens(__param_expr_tokens), _field_args_tokens(__param_args_tokens), _field_generics_tokens(__param_generics_tokens) {}

	

	_1b655a5c5_CallData(void) = default;

	inline bool operator==(_1b655a5c5_CallData _other) {
		return 
			this->_field_expr_tokens == _other._field_expr_tokens &&
			this->_field_args_tokens == _other._field_args_tokens &&
			this->_field_generics_tokens == _other._field_generics_tokens;
	}

	inline bool operator!=(_1b655a5c5_CallData _other) { return !this->operator==(_other); }


};
inline void _1b655c31e_push_err(_1b655ba27_ExprBuilder*,jule::Ptr<_1d0747985_Token>,jule::Str,jule::Slice<jule::Any>);
inline void _1b655c63d_push_suggestion(_1b655ba27_ExprBuilder*,jule::Str,jule::Slice<jule::Any>);
inline jule::Ptr<_1d075b526_TupleExpr> _1b655c94b_build_tuple(_1b655ba27_ExprBuilder*,jule::Slice<jule::Slice<jule::Ptr<_1d0747985_Token>>>&);
inline jule::Ptr<_1d075b944_LitExpr> _1b655cc59_build_lit(_1b655ba27_ExprBuilder*,jule::Ptr<_1d0747985_Token>);
inline jule::Ptr<_1d0759c1c_TypeDecl> _1b655d067_build_primitive_type(_1b655ba27_ExprBuilder*,jule::Ptr<_1d0747985_Token>&);
inline jule::Any _1b655d375_build_single(_1b655ba27_ExprBuilder*,jule::Ptr<_1d0747985_Token>);
inline jule::Ptr<_1d075c00a_IdentExpr> _1b655d683_build_cpp_linked_ident(_1b655ba27_ExprBuilder*,jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline jule::Ptr<_1d075c1e7_UnaryExpr> _1b655d991_build_unary(_1b655ba27_ExprBuilder*,jule::Slice<jule::Ptr<_1d0747985_Token>>);
inline jule::Ptr<_1d075c99a_SubIdentExpr> _1b655dc9e_build_obj_sub_ident(_1b655ba27_ExprBuilder*,jule::Slice<jule::Ptr<_1d0747985_Token>>);
inline jule::Ptr<_1d075c7ad_NsSelectionExpr> _1b655e0ac_build_ns_sub_ident(_1b655ba27_ExprBuilder*,jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline jule::Ptr<_1d0759c1c_TypeDecl> _1b655e3ba_build_type(_1b655ba27_ExprBuilder*,jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline jule::Any _1b655e6c8_build_sub_ident(_1b655ba27_ExprBuilder*,jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline jule::Ptr<_1d075c3d4_VariadicExpr> _1b655e9d6_build_variadic(_1b655ba27_ExprBuilder*,jule::Slice<jule::Ptr<_1d0747985_Token>>);
inline jule::Any _1b655ece4_build_op_right(_1b655ba27_ExprBuilder*,jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline jule::Ptr<_1d075b14c_Expr> _1b6560146_build_between_parentheses(_1b655ba27_ExprBuilder*,jule::Slice<jule::Ptr<_1d0747985_Token>>);
inline jule::Ptr<_1d075c5c1_CastExpr> _1b6560443_try_build_cast(_1b655ba27_ExprBuilder*,jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline void _1b656080b_push_arg(_1b655ba27_ExprBuilder*,jule::Slice<jule::Ptr<_1d075b14c_Expr>>&,jule::Slice<jule::Ptr<_1d0747985_Token>>,jule::Ptr<_1d0747985_Token>);
inline jule::Slice<jule::Ptr<_1d075b14c_Expr>> _1b6560b19_build_args(_1b655ba27_ExprBuilder*,jule::Slice<jule::Ptr<_1d0747985_Token>>);
inline jule::Slice<jule::Ptr<_1d0759c1c_TypeDecl>> _1b6560e27_build_call_generics(_1b655ba27_ExprBuilder*,jule::Slice<jule::Ptr<_1d0747985_Token>>);
inline jule::Ptr<_1d075cd74_FnCallExpr> _1b65612ce_build_fn_call(_1b655ba27_ExprBuilder*,jule::Ptr<_1d0747985_Token>&,jule::Ptr<_1b655a5c5_CallData>&);
inline jule::Any _1b6561631_build_parentheses_range(_1b655ba27_ExprBuilder*,jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline jule::Ptr<_1d075bb31_UnsafeExpr> _1b656192d_build_unsafe_expr(_1b655ba27_ExprBuilder*,jule::Slice<jule::Ptr<_1d0747985_Token>>);
inline jule::Ptr<_1d0763709_FnDecl> _1b6561c3b_build_anon_fn(_1b655ba27_ExprBuilder*,jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline jule::Any _1b6562049_build_unsafe(_1b655ba27_ExprBuilder*,jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline void _1b6562412_push_range_lit_part(_1b655ba27_ExprBuilder*,jule::Slice<jule::Ptr<_1d0747985_Token>>,jule::Ptr<_1d0747985_Token>,jule::Slice<jule::Slice<jule::Ptr<_1d0747985_Token>>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_1d0747985_Token>>> _1b6562764_get_brace_range_lit_expr_parts(_1b655ba27_ExprBuilder*,jule::Slice<jule::Ptr<_1d0747985_Token>>);
inline jule::Ptr<_1d075d193_FieldExprPair> _1b6562a61_build_field_expr_pair(_1b655ba27_ExprBuilder*,jule::Slice<jule::Ptr<_1d0747985_Token>>);
inline jule::Ptr<_1d075b14c_Expr> _1b6562d6e_build_struct_lit_expr(_1b655ba27_ExprBuilder*,jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline jule::Slice<jule::Ptr<_1d075b14c_Expr>> _1b656317c_build_struct_lit_exprs(_1b655ba27_ExprBuilder*,jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline jule::Ptr<_1d075d4b2_StructLit> _1b65634ce_build_typed_struct_literal(_1b655ba27_ExprBuilder*,jule::Slice<jule::Ptr<_1d0747985_Token>>);
inline jule::Ptr<_1d075b14c_Expr> _1b65637cb_build_brace_lit_part(_1b655ba27_ExprBuilder*,jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline jule::Ptr<_1d075d69e_BraceLit> _1b6563ad9_build_brace_lit(_1b655ba27_ExprBuilder*,jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline jule::Any _1b6563de7_build_brace_range(_1b655ba27_ExprBuilder*,jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_1d0747985_Token>>> _1b6564205_get_enumerable_parts(_1b655ba27_ExprBuilder*,jule::Slice<jule::Ptr<_1d0747985_Token>>);
inline jule::Ptr<_1d075dbaa_SliceExpr> _1b6564513_build_slice(_1b655ba27_ExprBuilder*,jule::Slice<jule::Ptr<_1d0747985_Token>>);
inline jule::Ptr<_1d075e4a2_IndexingExpr> _1b6564964_build_indexing(_1b655ba27_ExprBuilder*,jule::Slice<jule::Ptr<_1d0747985_Token>>,jule::Slice<jule::Ptr<_1d0747985_Token>>,jule::Ptr<_1d0747985_Token>);
inline jule::Ptr<_1d075eaac_SlicingExpr> _1b6565008_build_slicing(_1b655ba27_ExprBuilder*,jule::Slice<jule::Ptr<_1d0747985_Token>>&,jule::Slice<jule::Ptr<_1d0747985_Token>>&,jule::I64&,jule::Ptr<_1d0747985_Token>&,jule::Ptr<_1d0747985_Token>);
inline jule::Any _1b6565316_build_bracket_range(_1b655ba27_ExprBuilder*,jule::Slice<jule::Ptr<_1d0747985_Token>>);
inline jule::Any _1b6565624_build_data(_1b655ba27_ExprBuilder*,jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline jule::Ptr<_1d075cb87_BinopExpr> _1b65659cb_build_binop(_1b655ba27_ExprBuilder*,jule::Slice<jule::Ptr<_1d0747985_Token>>&,jule::I64);
inline jule::Any _1b6565cd9_build(_1b655ba27_ExprBuilder*,jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline jule::Any _1b65660e7_build_kind(_1b655ba27_ExprBuilder*,jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline jule::Ptr<_1d075b14c_Expr> _1b6566405_build_from_tokens(_1b655ba27_ExprBuilder*,jule::Slice<jule::Ptr<_1d0747985_Token>>);
struct _1b655ba27_ExprBuilder {
	jule::Ptr<_1b656a382_Parser> _field_p = jule::Ptr<_1b656a382_Parser>();


	_1b655ba27_ExprBuilder(jule::Ptr<_1b656a382_Parser> __param_p): _field_p(__param_p) {}

	

	_1b655ba27_ExprBuilder(void) = default;

	inline bool operator==(_1b655ba27_ExprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_1b655ba27_ExprBuilder _other) { return !this->operator==(_other); }


};
struct _1b6566d51_AssignInfo {
	jule::Slice<jule::Ptr<_1d0747985_Token>> _field_l = jule::Slice<jule::Ptr<_1d0747985_Token>>();
	jule::Slice<jule::Ptr<_1d0747985_Token>> _field_r = jule::Slice<jule::Ptr<_1d0747985_Token>>();
	jule::Ptr<_1d0747985_Token> _field_setter = jule::Ptr<_1d0747985_Token>();
	jule::Bool _field_ok = jule::Bool();


	_1b6566d51_AssignInfo(jule::Slice<jule::Ptr<_1d0747985_Token>> __param_l, jule::Slice<jule::Ptr<_1d0747985_Token>> __param_r, jule::Ptr<_1d0747985_Token> __param_setter, jule::Bool __param_ok): _field_l(__param_l), _field_r(__param_r), _field_setter(__param_setter), _field_ok(__param_ok) {}

	

	_1b6566d51_AssignInfo(void) = default;

	inline bool operator==(_1b6566d51_AssignInfo _other) {
		return 
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_setter == _other._field_setter &&
			this->_field_ok == _other._field_ok;
	}

	inline bool operator!=(_1b6566d51_AssignInfo _other) { return !this->operator==(_other); }


};
inline void _1b656a6b2_stop(_1b656a382_Parser*);
inline jule::Bool _1b656a926_stopped(_1b656a382_Parser*);
inline void _1b656acde_push_err(_1b656a382_Parser*,jule::Ptr<_1d0747985_Token>,jule::Str,jule::Slice<jule::Any>);
inline void _1b656b10d_push_suggestion(_1b656a382_Parser*,jule::Str,jule::Slice<jule::Any>);
inline jule::Ptr<_1d075b14c_Expr> _1b656b41b_build_expr(jule::Ptr<_1b656a382_Parser>,jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline jule::Ptr<_1d06c9ecd_Directive> _1b656b729_build_directive(_1b656a382_Parser*,jule::Slice<jule::Ptr<_1d0747985_Token>>);
inline void _1b656b99e_push_directive(_1b656a382_Parser*,jule::Ptr<_1d06c9ecd_Directive>);
inline jule::Ptr<_1d0761c13_ScopeTree> _1b656bd56_build_scope(jule::Ptr<_1b656a382_Parser>,jule::Slice<jule::Ptr<_1d0747985_Token>>&,jule::Ptr<_1d0747985_Token>);
inline std::tuple<jule::Ptr<_1d0759c1c_TypeDecl>,jule::Bool> _1b656c2a7___build_type(jule::Ptr<_1b656a382_Parser>,jule::Slice<jule::Ptr<_1d0747985_Token>>&,jule::I64*,jule::Bool);
inline std::tuple<jule::Ptr<_1d0759c1c_TypeDecl>,jule::Bool> _1b656c708_build_type(jule::Ptr<_1b656a382_Parser>,jule::Slice<jule::Ptr<_1d0747985_Token>>&,jule::I64*,jule::Bool);
inline jule::Ptr<_1d0767e5b_TypeAliasDecl> _1b656ca16_build_type_alias_decl(jule::Ptr<_1b656a382_Parser>,jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline void _1b656cd79_build_var_type_and_expr(jule::Ptr<_1b656a382_Parser>,jule::Ptr<_1d07646d8_VarDecl>&,jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline void _1b656d187_build_var_common(jule::Ptr<_1b656a382_Parser>,jule::Ptr<_1d07646d8_VarDecl>&,jule::Slice<jule::Ptr<_1d0747985_Token>>);
inline void _1b656d550_build_var_begin(_1b656a382_Parser*,jule::Ptr<_1d07646d8_VarDecl>&,jule::Ptr<jule::I64>,jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline jule::Ptr<_1d07646d8_VarDecl> _1b656d85d_build_var(jule::Ptr<_1b656a382_Parser>,jule::Slice<jule::Ptr<_1d0747985_Token>>);
inline jule::Ptr<_1d075ee64_GenericDecl> _1b656db6b_build_generic(_1b656a382_Parser*,jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline jule::Slice<jule::Ptr<_1d075ee64_GenericDecl>> _1b656e023_build_generics(_1b656a382_Parser*,jule::Slice<jule::Ptr<_1d0747985_Token>>&,jule::Ptr<_1d0747985_Token>&);
inline jule::Ptr<_1d07623d9_ParamDecl> _1b656e331_build_self_param(_1b656a382_Parser*,jule::Slice<jule::Ptr<_1d0747985_Token>>);
inline void _1b656e6e9_param_type_begin(_1b656a382_Parser*,jule::Ptr<_1d07623d9_ParamDecl>&,jule::I64&,jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline void _1b656ea18_build_param_type(jule::Ptr<_1b656a382_Parser>,jule::Ptr<_1d07623d9_ParamDecl>&,jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline void _1b656edd1_build_param_body(jule::Ptr<_1b656a382_Parser>,jule::Ptr<_1d07623d9_ParamDecl>&,jule::Ptr<jule::I64>,jule::Slice<jule::Ptr<_1d0747985_Token>>);
inline jule::Ptr<_1d07623d9_ParamDecl> _1b65701de_build_param(jule::Ptr<_1b656a382_Parser>,jule::Slice<jule::Ptr<_1d0747985_Token>>);
inline void _1b6570464_check_params(_1b656a382_Parser*,jule::Slice<jule::Ptr<_1d07623d9_ParamDecl>>&);
inline jule::Slice<jule::Ptr<_1d07623d9_ParamDecl>> _1b657081b_build_params(jule::Ptr<_1b656a382_Parser>,jule::Slice<jule::Ptr<_1d0747985_Token>>&,jule::Bool);
inline std::tuple<jule::Ptr<_1d075ae60_RetTypeDecl>,jule::Bool> _1b6570bc3_build_multi_ret_type(jule::Ptr<_1b656a382_Parser>,jule::Slice<jule::Ptr<_1d0747985_Token>>&,jule::I64&);
inline std::tuple<jule::Ptr<_1d075ae60_RetTypeDecl>,jule::Bool> _1b657107a_build_ret_type(jule::Ptr<_1b656a382_Parser>,jule::Slice<jule::Ptr<_1d0747985_Token>>&,jule::I64&);
inline jule::Ptr<_1d0763709_FnDecl> _1b65714cb_build_fn_prototype(jule::Ptr<_1b656a382_Parser>,jule::Slice<jule::Ptr<_1d0747985_Token>>&,jule::I64&,jule::Bool);
inline jule::Ptr<_1d0763709_FnDecl> _1b657192c_build_fn(jule::Ptr<_1b656a382_Parser>,jule::Slice<jule::Ptr<_1d0747985_Token>>&,jule::Bool,jule::Bool);
inline jule::Slice<jule::Ptr<_1d0747985_Token>> _1b6571c3a_get_use_decl_selectors(_1b656a382_Parser*,jule::Slice<jule::Ptr<_1d0747985_Token>>);
inline void _1b6572059_build_cpp_use_decl(_1b656a382_Parser*,jule::Ptr<_1d0769347_UseDecl>&,jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline void _1b6572378_build_std_use_decl(_1b656a382_Parser*,jule::Ptr<_1d0769347_UseDecl>&,jule::Slice<jule::Ptr<_1d0747985_Token>>);
inline void _1b6572697_build_ident_use_decl(_1b656a382_Parser*,jule::Ptr<_1d0769347_UseDecl>&,jule::Slice<jule::Ptr<_1d0747985_Token>>);
inline void _1b65729b6_parse_use_decl(_1b656a382_Parser*,jule::Ptr<_1d0769347_UseDecl>&,jule::Slice<jule::Ptr<_1d0747985_Token>>);
inline jule::Ptr<_1d0769347_UseDecl> _1b6572d6d_build_use_decl(_1b656a382_Parser*,jule::Slice<jule::Ptr<_1d0747985_Token>>,jule::Bool);
inline jule::Ptr<_1d075b14c_Expr> _1b6573225_build_enum_item_expr(jule::Ptr<_1b656a382_Parser>,jule::Ptr<jule::I64>,jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline jule::Slice<jule::Ptr<_1d07697ba_EnumItemDecl>> _1b6573533_build_enum_items(jule::Ptr<_1b656a382_Parser>,jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline jule::Ptr<_1d076a414_EnumDecl> _1b6573841_build_enum_decl(jule::Ptr<_1b656a382_Parser>,jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline jule::Ptr<_1d076ae3c_FieldDecl> _1b6573b4e_build_field(jule::Ptr<_1b656a382_Parser>,jule::Slice<jule::Ptr<_1d0747985_Token>>);
inline jule::Slice<jule::Ptr<_1d076ae3c_FieldDecl>> _1b6573ea1_build_struct_decl_fields(jule::Ptr<_1b656a382_Parser>,jule::Slice<jule::Ptr<_1d0747985_Token>>);
inline jule::Ptr<_1d076b79a_StructDecl> _1b657429d_build_struct_decl(jule::Ptr<_1b656a382_Parser>,jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline void _1b6574523_check_method_receiver(_1b656a382_Parser*,jule::Ptr<_1d0763709_FnDecl>&);
inline jule::Slice<jule::Ptr<_1d0763709_FnDecl>> _1b6574831_build_trait_methods(jule::Ptr<_1b656a382_Parser>,jule::Slice<jule::Ptr<_1d0747985_Token>>);
inline jule::Ptr<_1d076bda5_TraitDecl> _1b6574b3e_build_trait_decl(jule::Ptr<_1b656a382_Parser>,jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline jule::Ptr<_1d0763709_FnDecl> _1b6574e4c_build_cpp_link_fn(jule::Ptr<_1b656a382_Parser>,jule::Slice<jule::Ptr<_1d0747985_Token>>);
inline jule::Ptr<_1d07646d8_VarDecl> _1b657525a_build_cpp_link_var(jule::Ptr<_1b656a382_Parser>,jule::Slice<jule::Ptr<_1d0747985_Token>>);
inline jule::Ptr<_1d076b79a_StructDecl> _1b6575568_build_cpp_link_struct(jule::Ptr<_1b656a382_Parser>,jule::Slice<jule::Ptr<_1d0747985_Token>>);
inline jule::Ptr<_1d0767e5b_TypeAliasDecl> _1b65758ba_build_cpp_link_type_alias(jule::Ptr<_1b656a382_Parser>,jule::Slice<jule::Ptr<_1d0747985_Token>>);
inline jule::Ptr<_1d0769347_UseDecl> _1b6575bb7_build_cpp_link_use(jule::Ptr<_1b656a382_Parser>,jule::Slice<jule::Ptr<_1d0747985_Token>>);
inline jule::Any _1b6575ec5_build_cpp_link(jule::Ptr<_1b656a382_Parser>,jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline jule::Ptr<_1d0763709_FnDecl> _1b65762d3_get_method(jule::Ptr<_1b656a382_Parser>,jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline void _1b6576602_parse_impl_body(jule::Ptr<_1b656a382_Parser>,jule::Ptr<_1d076c4b0_Impl>&,jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline jule::Ptr<_1d076c4b0_Impl> _1b6576910_build_impl(jule::Ptr<_1b656a382_Parser>,jule::Slice<jule::Ptr<_1d0747985_Token>>);
inline jule::Any _1b6576c1d_build_node_data(jule::Ptr<_1b656a382_Parser>,jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline void _1b6576e93_check_directive(_1b656a382_Parser*,_1d06c9ce1_Node&);
inline void _1b65772b2_apply_fn_meta(_1b656a382_Parser*,jule::Ptr<_1d0763709_FnDecl>&,jule::Bool);
inline void _1b65775d1_apply_meta(_1b656a382_Parser*,_1d06c9ce1_Node&,jule::Bool);
inline void _1b6577856_check_use_decl(_1b656a382_Parser*,_1d06c9ce1_Node&);
inline std::tuple<jule::Bool,jule::Any> _1b6577ba8_build_general_scope_node_data(jule::Ptr<_1b656a382_Parser>,jule::Slice<jule::Ptr<_1d0747985_Token>>);
inline _1d06c9ce1_Node _1b6577ea5_parse_node(jule::Ptr<_1b656a382_Parser>,jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline void _1b657822a_append_node(jule::Ptr<_1b656a382_Parser>,jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline void _1b657868c_remove_range(_1b656a382_Parser*,jule::I64,jule::Str,jule::Slice<jule::Ptr<_1d0747985_Token>>&,jule::Slice<jule::I64>&);
inline void _1b6578a99_push_wrong_order_close_err(_1b656a382_Parser*,jule::Ptr<_1d0747985_Token>&,jule::Slice<jule::Ptr<_1d0747985_Token>>&,jule::Slice<jule::I64>&);
inline void _1b6578eea_push_range_close(_1b656a382_Parser*,jule::Ptr<_1d0747985_Token>,jule::Str,jule::Slice<jule::Ptr<_1d0747985_Token>>&,jule::Slice<jule::I64>&);
inline void _1b6579270_check_ranges(_1b656a382_Parser*,jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline void _1b65794e5_parse(jule::Ptr<_1b656a382_Parser>,jule::Ptr<_1d074cd75_File>&);
struct _1b656a382_Parser {
	jule::Ptr<_1d06e7b66_Ast> _field_ast = jule::Ptr<_1d06e7b66_Ast>();
	jule::Slice<jule::Ptr<_1d06c9ecd_Directive>> _field_directives = jule::Slice<jule::Ptr<_1d06c9ecd_Directive>>();
	jule::Slice<_1d0019224_Log> _field_errors = jule::Slice<_1d0019224_Log>();


	_1b656a382_Parser(jule::Ptr<_1d06e7b66_Ast> __param_ast, jule::Slice<jule::Ptr<_1d06c9ecd_Directive>> __param_directives, jule::Slice<_1d0019224_Log> __param_errors): _field_ast(__param_ast), _field_directives(__param_directives), _field_errors(__param_errors) {}

	

	_1b656a382_Parser(void) = default;

	inline bool operator==(_1b656a382_Parser _other) {
		return 
			this->_field_ast == _other._field_ast &&
			this->_field_directives == _other._field_directives &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_1b656a382_Parser _other) { return !this->operator==(_other); }


};
inline void _1b657b250_push_err(_1b657ab78_TypeBuilder*,jule::Ptr<_1d0747985_Token>,jule::Str);
inline void _1b657b56e_push_suggestion(_1b657ab78_TypeBuilder*,jule::Str,jule::Slice<jule::Any>);
inline jule::Ptr<_1d0759c1c_TypeDecl> _1b657b7d3_build_prim(_1b657ab78_TypeBuilder*);
inline jule::Ptr<_1d0759c1c_TypeDecl> _1b657ba47_build_namespace(_1b657ab78_TypeBuilder*);
inline jule::Slice<jule::Ptr<_1d0759c1c_TypeDecl>> _1b657bcab_build_generics(_1b657ab78_TypeBuilder*);
inline jule::Slice<jule::Slice<jule::Ptr<_1d0747985_Token>>> _1b657c020_ident_generics(_1b657ab78_TypeBuilder*);
inline jule::Ptr<_1d0759c1c_TypeDecl> _1b657c284_build_ident(_1b657ab78_TypeBuilder*);
inline jule::Ptr<_1d0759c1c_TypeDecl> _1b657c4e8_build_cpp_link(_1b657ab78_TypeBuilder*);
inline jule::Ptr<_1d0759c1c_TypeDecl> _1b657c75c_build_fn(_1b657ab78_TypeBuilder*);
inline jule::Ptr<_1d0759c1c_TypeDecl> _1b657c9c1_build_ptr(_1b657ab78_TypeBuilder*);
inline jule::Ptr<_1d0759c1c_TypeDecl> _1b657cc35_build_sptr(_1b657ab78_TypeBuilder*);
inline jule::Ptr<_1d0759c1c_TypeDecl> _1b657ce99_build_op(_1b657ab78_TypeBuilder*);
inline jule::Ptr<_1d0759c1c_TypeDecl> _1b657d20d_build_slc(_1b657ab78_TypeBuilder*);
inline jule::Ptr<_1d0759c1c_TypeDecl> _1b657d472_build_arr(_1b657ab78_TypeBuilder*);
inline jule::Ptr<_1d0759c1c_TypeDecl> _1b657d829_build_map(_1b657ab78_TypeBuilder*,jule::I64,jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline jule::Ptr<_1d0759c1c_TypeDecl> _1b657da8d_build_enumerable(_1b657ab78_TypeBuilder*);
inline jule::Ptr<_1d0759c1c_TypeDecl> _1b657dd02_step(_1b657ab78_TypeBuilder*);
inline std::tuple<jule::Ptr<_1d0759c1c_TypeDecl>,jule::Bool> _1b657e066_build(_1b657ab78_TypeBuilder*);
struct _1b657ab78_TypeBuilder {
	jule::Ptr<_1b656a382_Parser> _field_p = jule::Ptr<_1b656a382_Parser>();
	jule::Slice<jule::Ptr<_1d0747985_Token>> _field_tokens = jule::Slice<jule::Ptr<_1d0747985_Token>>();
	jule::I64* _field_i = nullptr;
	jule::Bool _field_err = jule::Bool();


	_1b657ab78_TypeBuilder(jule::Ptr<_1b656a382_Parser> __param_p, jule::Slice<jule::Ptr<_1d0747985_Token>> __param_tokens, jule::I64* __param_i, jule::Bool __param_err): _field_p(__param_p), _field_tokens(__param_tokens), _field_i(__param_i), _field_err(__param_err) {}

	

	_1b657ab78_TypeBuilder(void) = default;

	inline bool operator==(_1b657ab78_TypeBuilder _other) {
		return 
			this->_field_p == _other._field_p &&
			this->_field_tokens == _other._field_tokens &&
			this->_field_i == _other._field_i &&
			this->_field_err == _other._field_err;
	}

	inline bool operator!=(_1b657ab78_TypeBuilder _other) { return !this->operator==(_other); }


};
struct _1a71e9c9b_FloatInfo {
	jule::U64 _field_mantbits = jule::U64();
	jule::U64 _field_expbits = jule::U64();
	jule::I64 _field_bias = jule::I64();


	_1a71e9c9b_FloatInfo(jule::U64 __param_mantbits, jule::U64 __param_expbits, jule::I64 __param_bias): _field_mantbits(__param_mantbits), _field_expbits(__param_expbits), _field_bias(__param_bias) {}

	

	_1a71e9c9b_FloatInfo(void) = default;

	inline bool operator==(_1a71e9c9b_FloatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_1a71e9c9b_FloatInfo _other) { return !this->operator==(_other); }


};
struct _1a708e723_DecimalSlice {
	jule::Slice<jule::U8> _field_d = jule::Slice<jule::U8>();
	jule::I64 _field_nd = jule::I64();
	jule::I64 _field_dp = jule::I64();
	jule::Bool _field_neg = jule::Bool();


	_1a708e723_DecimalSlice(jule::Slice<jule::U8> __param_d, jule::I64 __param_nd, jule::I64 __param_dp, jule::Bool __param_neg): _field_d(__param_d), _field_nd(__param_nd), _field_dp(__param_dp), _field_neg(__param_neg) {}

	

	_1a708e723_DecimalSlice(void) = default;

	inline bool operator==(_1a708e723_DecimalSlice _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg;
	}

	inline bool operator!=(_1a708e723_DecimalSlice _other) { return !this->operator==(_other); }


};
struct _1a7460880_LeftCheat {
	jule::I64 _field_delta = jule::I64();
	jule::Str _field_cutoff = jule::Str();


	_1a7460880_LeftCheat(jule::I64 __param_delta, jule::Str __param_cutoff): _field_delta(__param_delta), _field_cutoff(__param_cutoff) {}

	

	_1a7460880_LeftCheat(void) = default;

	inline bool operator==(_1a7460880_LeftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_1a7460880_LeftCheat _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a745d52b_set(_1a7460ce2_Decimal*,jule::Str);
inline std::tuple<jule::U64,jule::Bool> _1a745d65d_float_bits(_1a7460ce2_Decimal*,_1a71e9c9b_FloatInfo&);
inline void _1a74611ee_assign(_1a7460ce2_Decimal*,jule::U64);
inline void _1a7461474_shift(_1a7460ce2_Decimal*,jule::I64);
inline void _1a74616e9_round_down(_1a7460ce2_Decimal*,jule::I64);
inline void _1a746196e_round_up(_1a7460ce2_Decimal*,jule::I64);
inline void _1a7461be4_round(_1a7460ce2_Decimal*,jule::I64);
inline jule::U64 _1a7461e58_rounded_integer(_1a7460ce2_Decimal*);
struct _1a7460ce2_Decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>();
	jule::I64 _field_nd = jule::I64();
	jule::I64 _field_dp = jule::I64();
	jule::Bool _field_neg = jule::Bool();
	jule::Bool _field_trunc = jule::Bool();


	_1a7460ce2_Decimal(jule::Array<jule::U8,800> __param_d, jule::I64 __param_nd, jule::I64 __param_dp, jule::Bool __param_neg, jule::Bool __param_trunc): _field_d(__param_d), _field_nd(__param_nd), _field_dp(__param_dp), _field_neg(__param_neg), _field_trunc(__param_trunc) {}

	

	_1a7460ce2_Decimal(void) = default;

	inline bool operator==(_1a7460ce2_Decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_1a7460ce2_Decimal _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a751ddb1_Const> static__1a751cdb0_new_i64(jule::I64);
inline jule::Ptr<_1a751ddb1_Const> static__1a751e09d_new_u64(jule::U64);
inline jule::Ptr<_1a751ddb1_Const> static__1a751e2e0_new_bool(jule::Bool);
inline jule::Ptr<_1a751ddb1_Const> static__1a751e587_new_str(jule::Str);
inline jule::Ptr<_1a751ddb1_Const> static__1a751e82e_new_f64(jule::F64);
inline jule::Ptr<_1a751ddb1_Const> static__1a751ea2c_new_nil(void);
inline jule::I64 _1a7520126_read_i64(_1a751ddb1_Const*);
inline jule::U64 _1a752038a_read_u64(_1a751ddb1_Const*);
inline jule::Bool _1a75205ee_read_bool(_1a751ddb1_Const*);
inline jule::Str _1a7520863_read_str(_1a751ddb1_Const*);
inline jule::F64 _1a7520ac7_read_f64(_1a751ddb1_Const*);
inline jule::I64 _1a7520d3b_as_i64(_1a751ddb1_Const*);
inline jule::U64 _1a75210a0_as_u64(_1a751ddb1_Const*);
inline jule::F64 _1a7521314_as_f64(_1a751ddb1_Const*);
inline void _1a7521589_set_i64(_1a751ddb1_Const*,jule::I64);
inline void _1a752180e_set_u64(_1a751ddb1_Const*,jule::U64);
inline void _1a7521a84_set_bool(_1a751ddb1_Const*,jule::Bool);
inline void _1a7521d09_set_str(_1a751ddb1_Const*,jule::Str);
inline void _1a752207e_set_f64(_1a751ddb1_Const*,jule::F64);
inline void _1a752225a_set_nil(_1a751ddb1_Const*);
inline jule::Bool _1a75224be_is_i64(_1a751ddb1_Const*);
inline jule::Bool _1a7522733_is_u64(_1a751ddb1_Const*);
inline jule::Bool _1a7522997_is_bool(_1a751ddb1_Const*);
inline jule::Bool _1a7522c0b_is_str(_1a751ddb1_Const*);
inline jule::Bool _1a7522e70_is_f64(_1a751ddb1_Const*);
inline jule::Bool _1a75231d4_is_nil(_1a751ddb1_Const*);
inline jule::Bool _1a75234e2_are_same_types(_1a751ddb1_Const*,_1a751ddb1_Const);
inline jule::Bool _1a7523800_and(_1a751ddb1_Const*,_1a751ddb1_Const);
inline jule::Bool _1a7523b0d_or(_1a751ddb1_Const*,_1a751ddb1_Const);
inline jule::Bool _1a7523e1b_eq(_1a751ddb1_Const*,_1a751ddb1_Const);
inline jule::Bool _1a7524229_lt(_1a751ddb1_Const*,_1a751ddb1_Const);
inline jule::Bool _1a7524537_lt_eq(_1a751ddb1_Const*,_1a751ddb1_Const);
inline jule::Bool _1a7524845_gt(_1a751ddb1_Const*,_1a751ddb1_Const);
inline jule::Bool _1a7524b53_gt_eq(_1a751ddb1_Const*,_1a751ddb1_Const);
inline jule::Bool _1a7524e61_add(_1a751ddb1_Const*,_1a751ddb1_Const);
inline jule::Bool _1a752526e_sub(_1a751ddb1_Const*,_1a751ddb1_Const);
inline jule::Bool _1a752557c_mul(_1a751ddb1_Const*,_1a751ddb1_Const);
inline jule::Bool _1a752588a_div(_1a751ddb1_Const*,_1a751ddb1_Const);
inline jule::Bool _1a7525b98_mod(_1a751ddb1_Const*,_1a751ddb1_Const);
inline jule::Bool _1a7525ea6_bitwise_and(_1a751ddb1_Const*,_1a751ddb1_Const);
inline jule::Bool _1a75262b4_bitwise_or(_1a751ddb1_Const*,_1a751ddb1_Const);
inline jule::Bool _1a75265c2_xor(_1a751ddb1_Const*,_1a751ddb1_Const);
inline jule::Bool _1a75268d0_lshift(_1a751ddb1_Const*,_1a751ddb1_Const);
inline jule::Bool _1a7526bdd_rshift(_1a751ddb1_Const*,_1a751ddb1_Const);
struct _1a751ddb1_Const {
	jule::Any _field_data = jule::Any();


	_1a751ddb1_Const(jule::Any __param_data): _field_data(__param_data) {}

	

	_1a751ddb1_Const(void) = default;

	inline jule::Bool operator==(_1a751ddb1_Const _other) { return _1a7523e1b_eq(this, _other); }

	inline bool operator!=(_1a751ddb1_Const _other) { return !this->operator==(_other); }

	inline jule::Bool operator>(_1a751ddb1_Const _other) { return _1a7524845_gt(this, _other); }

	inline jule::Bool operator>=(_1a751ddb1_Const _other) { return _1a7524b53_gt_eq(this, _other); }

	inline jule::Bool operator<(_1a751ddb1_Const _other) { return _1a7524229_lt(this, _other); }

	inline jule::Bool operator<=(_1a751ddb1_Const _other) { return _1a7524537_lt_eq(this, _other); }


};
inline jule::Ptr<_1a770e469_FileStream> static__1a770c830_new(jule::Ptr<_1e9da9880_File>);
inline jule::Exceptional<jule::I64> _1a7712eb7_read(_1a770e469_FileStream*,jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I64> _1a77132c5_write(_1a770e469_FileStream*,jule::Slice<jule::U8>);
inline jule::Exceptional<jule::Slice<jule::U8>> _1a7713627_read_line(_1a770e469_FileStream*);
struct _1a770e469_FileStream {
	jule::Ptr<_1e9da9880_File> _field_buff = jule::Ptr<_1e9da9880_File>();


	_1a770e469_FileStream(jule::Ptr<_1e9da9880_File> __param_buff): _field_buff(__param_buff) {}

	

	_1a770e469_FileStream(void) = default;

	inline bool operator==(_1a770e469_FileStream _other) {
		return 
			this->_field_buff == _other._field_buff;
	}

	inline bool operator!=(_1a770e469_FileStream _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::I64> _1a7715abe_read(_1a771542b_ByteStream*,jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I64> _1a7715dcc_write(_1a771542b_ByteStream*,jule::Slice<jule::U8>);
inline jule::Ptr<_1a771542b_ByteStream> static__1a77161da_new(void);
inline jule::Bool _1a771644e_data(_1a771542b_ByteStream*);
inline void _1a771662a_fit(_1a771542b_ByteStream*);
struct _1a771542b_ByteStream {
	jule::Slice<jule::U8> _field_buff = jule::Slice<jule::U8>();


	_1a771542b_ByteStream(jule::Slice<jule::U8> __param_buff): _field_buff(__param_buff) {}

	

	_1a771542b_ByteStream(void) = default;

	inline bool operator==(_1a771542b_ByteStream _other) {
		return 
			this->_field_buff == _other._field_buff;
	}

	inline bool operator!=(_1a771542b_ByteStream _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a77179c2_Scanner> static__1a7717e01_new(jule::Trait<_1a7713d75_Reader>);
inline jule::Ptr<_1a77179c2_Scanner> static__1a7718198_newf(jule::Ptr<_1e9da9880_File>);
inline void _1a7718495_reset(_1a77179c2_Scanner*);
inline jule::Slice<jule::U8> _1a7718709_bytes(_1a77179c2_Scanner*);
inline jule::Str _1a771896d_text(_1a77179c2_Scanner*);
inline jule::Exceptional<jule::Bool> _1a7718bd2_scan(_1a77179c2_Scanner*);
struct _1a77179c2_Scanner {
	jule::Trait<_1a7713d75_Reader> _field_r = jule::Trait<_1a7713d75_Reader>();
	jule::Slice<jule::U8> _field_b = jule::Slice<jule::U8>();


	_1a77179c2_Scanner(jule::Trait<_1a7713d75_Reader> __param_r, jule::Slice<jule::U8> __param_b): _field_r(__param_r), _field_b(__param_b) {}

	

	_1a77179c2_Scanner(void) = default;

	inline bool operator==(_1a77179c2_Scanner _other) {
		return 
			this->_field_r == _other._field_r &&
			this->_field_b == _other._field_b;
	}

	inline bool operator!=(_1a77179c2_Scanner _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a6416ae0_FieldIns> _1a6412129_instance(jule::Ptr<_1a6363e9e_Field>);
struct _1a6363e9e_Field {
	jule::Ptr<_1a64147be_Struct> _field_owner = jule::Ptr<_1a64147be_Struct>();
	jule::Ptr<_1d0747985_Token> _field_token = jule::Ptr<_1d0747985_Token>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1a7676c3e_TypeSymbol> _field_kind = jule::Ptr<_1a7676c3e_TypeSymbol>();
	jule::Ptr<_1d075b14c_Expr> _field_default = jule::Ptr<_1d075b14c_Expr>();


	_1a6363e9e_Field(jule::Ptr<_1a64147be_Struct> __param_owner, jule::Ptr<_1d0747985_Token> __param_token, jule::Bool __param_public, jule::Bool __param_mutable, jule::Str __param_ident, jule::Ptr<_1a7676c3e_TypeSymbol> __param_kind, jule::Ptr<_1d075b14c_Expr> __param_default): _field_owner(__param_owner), _field_token(__param_token), _field_public(__param_public), _field_mutable(__param_mutable), _field_ident(__param_ident), _field_kind(__param_kind), _field_default(__param_default) {}

	

	_1a6363e9e_Field(void) = default;

	inline bool operator==(_1a6363e9e_Field _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1a6363e9e_Field _other) { return !this->operator==(_other); }


};
struct _1a64139aa_Operators {
	jule::Ptr<_1a6429be1_FnIns> _field_eq = jule::Ptr<_1a6429be1_FnIns>();
	jule::Ptr<_1a6429be1_FnIns> _field_gt = jule::Ptr<_1a6429be1_FnIns>();
	jule::Ptr<_1a6429be1_FnIns> _field_gt_eq = jule::Ptr<_1a6429be1_FnIns>();
	jule::Ptr<_1a6429be1_FnIns> _field_lt = jule::Ptr<_1a6429be1_FnIns>();
	jule::Ptr<_1a6429be1_FnIns> _field_lt_eq = jule::Ptr<_1a6429be1_FnIns>();
	jule::Ptr<_1a6429be1_FnIns> _field_shl = jule::Ptr<_1a6429be1_FnIns>();
	jule::Ptr<_1a6429be1_FnIns> _field_shr = jule::Ptr<_1a6429be1_FnIns>();
	jule::Ptr<_1a6429be1_FnIns> _field_add = jule::Ptr<_1a6429be1_FnIns>();
	jule::Ptr<_1a6429be1_FnIns> _field_sub = jule::Ptr<_1a6429be1_FnIns>();
	jule::Ptr<_1a6429be1_FnIns> _field_div = jule::Ptr<_1a6429be1_FnIns>();
	jule::Ptr<_1a6429be1_FnIns> _field_mul = jule::Ptr<_1a6429be1_FnIns>();
	jule::Ptr<_1a6429be1_FnIns> _field_mod = jule::Ptr<_1a6429be1_FnIns>();
	jule::Ptr<_1a6429be1_FnIns> _field_bit_and = jule::Ptr<_1a6429be1_FnIns>();
	jule::Ptr<_1a6429be1_FnIns> _field_bit_or = jule::Ptr<_1a6429be1_FnIns>();
	jule::Ptr<_1a6429be1_FnIns> _field_bit_xor = jule::Ptr<_1a6429be1_FnIns>();
	jule::Ptr<_1a6429be1_FnIns> _field_neg = jule::Ptr<_1a6429be1_FnIns>();
	jule::Ptr<_1a6429be1_FnIns> _field_pos = jule::Ptr<_1a6429be1_FnIns>();
	jule::Ptr<_1a6429be1_FnIns> _field_bit_not = jule::Ptr<_1a6429be1_FnIns>();
	jule::Ptr<_1a6429be1_FnIns> _field_add_assign = jule::Ptr<_1a6429be1_FnIns>();
	jule::Ptr<_1a6429be1_FnIns> _field_sub_assign = jule::Ptr<_1a6429be1_FnIns>();
	jule::Ptr<_1a6429be1_FnIns> _field_div_assign = jule::Ptr<_1a6429be1_FnIns>();
	jule::Ptr<_1a6429be1_FnIns> _field_mul_assign = jule::Ptr<_1a6429be1_FnIns>();
	jule::Ptr<_1a6429be1_FnIns> _field_mod_assign = jule::Ptr<_1a6429be1_FnIns>();
	jule::Ptr<_1a6429be1_FnIns> _field_shl_assign = jule::Ptr<_1a6429be1_FnIns>();
	jule::Ptr<_1a6429be1_FnIns> _field_shr_assign = jule::Ptr<_1a6429be1_FnIns>();
	jule::Ptr<_1a6429be1_FnIns> _field_bit_or_assign = jule::Ptr<_1a6429be1_FnIns>();
	jule::Ptr<_1a6429be1_FnIns> _field_bit_and_assign = jule::Ptr<_1a6429be1_FnIns>();
	jule::Ptr<_1a6429be1_FnIns> _field_bit_xor_assign = jule::Ptr<_1a6429be1_FnIns>();


	_1a64139aa_Operators(jule::Ptr<_1a6429be1_FnIns> __param_eq, jule::Ptr<_1a6429be1_FnIns> __param_gt, jule::Ptr<_1a6429be1_FnIns> __param_gt_eq, jule::Ptr<_1a6429be1_FnIns> __param_lt, jule::Ptr<_1a6429be1_FnIns> __param_lt_eq, jule::Ptr<_1a6429be1_FnIns> __param_shl, jule::Ptr<_1a6429be1_FnIns> __param_shr, jule::Ptr<_1a6429be1_FnIns> __param_add, jule::Ptr<_1a6429be1_FnIns> __param_sub, jule::Ptr<_1a6429be1_FnIns> __param_div, jule::Ptr<_1a6429be1_FnIns> __param_mul, jule::Ptr<_1a6429be1_FnIns> __param_mod, jule::Ptr<_1a6429be1_FnIns> __param_bit_and, jule::Ptr<_1a6429be1_FnIns> __param_bit_or, jule::Ptr<_1a6429be1_FnIns> __param_bit_xor, jule::Ptr<_1a6429be1_FnIns> __param_neg, jule::Ptr<_1a6429be1_FnIns> __param_pos, jule::Ptr<_1a6429be1_FnIns> __param_bit_not, jule::Ptr<_1a6429be1_FnIns> __param_add_assign, jule::Ptr<_1a6429be1_FnIns> __param_sub_assign, jule::Ptr<_1a6429be1_FnIns> __param_div_assign, jule::Ptr<_1a6429be1_FnIns> __param_mul_assign, jule::Ptr<_1a6429be1_FnIns> __param_mod_assign, jule::Ptr<_1a6429be1_FnIns> __param_shl_assign, jule::Ptr<_1a6429be1_FnIns> __param_shr_assign, jule::Ptr<_1a6429be1_FnIns> __param_bit_or_assign, jule::Ptr<_1a6429be1_FnIns> __param_bit_and_assign, jule::Ptr<_1a6429be1_FnIns> __param_bit_xor_assign): _field_eq(__param_eq), _field_gt(__param_gt), _field_gt_eq(__param_gt_eq), _field_lt(__param_lt), _field_lt_eq(__param_lt_eq), _field_shl(__param_shl), _field_shr(__param_shr), _field_add(__param_add), _field_sub(__param_sub), _field_div(__param_div), _field_mul(__param_mul), _field_mod(__param_mod), _field_bit_and(__param_bit_and), _field_bit_or(__param_bit_or), _field_bit_xor(__param_bit_xor), _field_neg(__param_neg), _field_pos(__param_pos), _field_bit_not(__param_bit_not), _field_add_assign(__param_add_assign), _field_sub_assign(__param_sub_assign), _field_div_assign(__param_div_assign), _field_mul_assign(__param_mul_assign), _field_mod_assign(__param_mod_assign), _field_shl_assign(__param_shl_assign), _field_shr_assign(__param_shr_assign), _field_bit_or_assign(__param_bit_or_assign), _field_bit_and_assign(__param_bit_and_assign), _field_bit_xor_assign(__param_bit_xor_assign) {}

	

	_1a64139aa_Operators(void) = default;

	inline bool operator==(_1a64139aa_Operators _other) {
		return 
			this->_field_eq == _other._field_eq &&
			this->_field_gt == _other._field_gt &&
			this->_field_gt_eq == _other._field_gt_eq &&
			this->_field_lt == _other._field_lt &&
			this->_field_lt_eq == _other._field_lt_eq &&
			this->_field_shl == _other._field_shl &&
			this->_field_shr == _other._field_shr &&
			this->_field_add == _other._field_add &&
			this->_field_sub == _other._field_sub &&
			this->_field_div == _other._field_div &&
			this->_field_mul == _other._field_mul &&
			this->_field_mod == _other._field_mod &&
			this->_field_bit_and == _other._field_bit_and &&
			this->_field_bit_or == _other._field_bit_or &&
			this->_field_bit_xor == _other._field_bit_xor &&
			this->_field_neg == _other._field_neg &&
			this->_field_pos == _other._field_pos &&
			this->_field_bit_not == _other._field_bit_not &&
			this->_field_add_assign == _other._field_add_assign &&
			this->_field_sub_assign == _other._field_sub_assign &&
			this->_field_div_assign == _other._field_div_assign &&
			this->_field_mul_assign == _other._field_mul_assign &&
			this->_field_mod_assign == _other._field_mod_assign &&
			this->_field_shl_assign == _other._field_shl_assign &&
			this->_field_shr_assign == _other._field_shr_assign &&
			this->_field_bit_or_assign == _other._field_bit_or_assign &&
			this->_field_bit_and_assign == _other._field_bit_and_assign &&
			this->_field_bit_xor_assign == _other._field_bit_xor_assign;
	}

	inline bool operator!=(_1a64139aa_Operators _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a641744d_StructIns> _1a6414bed_instance(jule::Ptr<_1a64147be_Struct>);
inline jule::Ptr<_1a641744d_StructIns> _1a641500b_append_instance(_1a64147be_Struct*,jule::Ptr<_1a641744d_StructIns>&);
inline jule::Ptr<_1a6426a45_Fn> _1a64153b3_find_method(_1a64147be_Struct*,jule::Str,jule::Bool);
inline jule::Ptr<_1a75ec478_Var> _1a64156c1_find_static(_1a64147be_Struct*,jule::Str);
inline jule::Ptr<_1a6363e9e_Field> _1a64159ce_find_field(_1a64147be_Struct*,jule::Str);
inline jule::Bool _1a6415cdc_is_implements(_1a64147be_Struct*,jule::Ptr<_1a7465bd7_Trait>);
inline jule::Bool _1a64160ea_is_derives(_1a64147be_Struct*,jule::Str);
inline jule::Bool _1a6416408_is_uses(_1a64147be_Struct*,jule::Ptr<_1a64147be_Struct>);
inline jule::Bool _1a641666c_has_ref_accessible(_1a64147be_Struct*);
struct _1a64147be_Struct {
	jule::Ptr<_1a75d1e74_Sema> _field_sema = jule::Ptr<_1a75d1e74_Sema>();
	jule::Slice<jule::Ptr<_1a64147be_Struct>> _field_depends = jule::Slice<jule::Ptr<_1a64147be_Struct>>();
	jule::Slice<jule::Ptr<_1a64147be_Struct>> _field_uses = jule::Slice<jule::Ptr<_1a64147be_Struct>>();
	jule::Ptr<_1d0747985_Token> _field_token = jule::Ptr<_1d0747985_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1a6363e9e_Field>> _field_fields = jule::Slice<jule::Ptr<_1a6363e9e_Field>>();
	jule::Slice<jule::Ptr<_1a6426a45_Fn>> _field_methods = jule::Slice<jule::Ptr<_1a6426a45_Fn>>();
	jule::Slice<jule::Ptr<_1a75ec478_Var>> _field_statics = jule::Slice<jule::Ptr<_1a75ec478_Var>>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Slice<jule::Ptr<_1d06c9ecd_Directive>> _field_directives = jule::Slice<jule::Ptr<_1d06c9ecd_Directive>>();
	jule::Slice<jule::Ptr<_1d075ee64_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_1d075ee64_GenericDecl>>();
	jule::Slice<jule::Ptr<_1a7465bd7_Trait>> _field_implements = jule::Slice<jule::Ptr<_1a7465bd7_Trait>>();
	jule::Slice<jule::Ptr<_1a641744d_StructIns>> _field_instances = jule::Slice<jule::Ptr<_1a641744d_StructIns>>();


	_1a64147be_Struct(jule::Ptr<_1a75d1e74_Sema> __param_sema, jule::Slice<jule::Ptr<_1a64147be_Struct>> __param_depends, jule::Slice<jule::Ptr<_1a64147be_Struct>> __param_uses, jule::Ptr<_1d0747985_Token> __param_token, jule::Str __param_ident, jule::Slice<jule::Ptr<_1a6363e9e_Field>> __param_fields, jule::Slice<jule::Ptr<_1a6426a45_Fn>> __param_methods, jule::Slice<jule::Ptr<_1a75ec478_Var>> __param_statics, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Slice<jule::Ptr<_1d06c9ecd_Directive>> __param_directives, jule::Slice<jule::Ptr<_1d075ee64_GenericDecl>> __param_generics, jule::Slice<jule::Ptr<_1a7465bd7_Trait>> __param_implements, jule::Slice<jule::Ptr<_1a641744d_StructIns>> __param_instances): _field_sema(__param_sema), _field_depends(__param_depends), _field_uses(__param_uses), _field_token(__param_token), _field_ident(__param_ident), _field_fields(__param_fields), _field_methods(__param_methods), _field_statics(__param_statics), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_directives(__param_directives), _field_generics(__param_generics), _field_implements(__param_implements), _field_instances(__param_instances) {}

	

	_1a64147be_Struct(void) = default;

	inline bool operator==(_1a64147be_Struct _other) {
		return 
			this->_field_sema == _other._field_sema &&
			this->_field_depends == _other._field_depends &&
			this->_field_uses == _other._field_uses &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_fields == _other._field_fields &&
			this->_field_methods == _other._field_methods &&
			this->_field_statics == _other._field_statics &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_directives == _other._field_directives &&
			this->_field_generics == _other._field_generics &&
			this->_field_implements == _other._field_implements &&
			this->_field_instances == _other._field_instances;
	}

	inline bool operator!=(_1a64147be_Struct _other) { return !this->operator==(_other); }


};
struct _1a6416ae0_FieldIns {
	jule::Ptr<_1a6363e9e_Field> _field_decl = jule::Ptr<_1a6363e9e_Field>();
	jule::Ptr<_1a7672da0_TypeKind> _field_kind = jule::Ptr<_1a7672da0_TypeKind>();
	jule::Ptr<_1a7648b67_Data> _field_default = jule::Ptr<_1a7648b67_Data>();


	_1a6416ae0_FieldIns(jule::Ptr<_1a6363e9e_Field> __param_decl, jule::Ptr<_1a7672da0_TypeKind> __param_kind, jule::Ptr<_1a7648b67_Data> __param_default): _field_decl(__param_decl), _field_kind(__param_kind), _field_default(__param_default) {}

	

	_1a6416ae0_FieldIns(void) = default;

	inline bool operator==(_1a6416ae0_FieldIns _other) {
		return 
			this->_field_decl == _other._field_decl &&
			this->_field_kind == _other._field_kind &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1a6416ae0_FieldIns _other) { return !this->operator==(_other); }


};
struct _1a64190a9_OperandExprModel {
	jule::Ptr<_1a7672da0_TypeKind> _field_kind = jule::Ptr<_1a7672da0_TypeKind>();
	jule::Any _field_model = jule::Any();


	_1a64190a9_OperandExprModel(jule::Ptr<_1a7672da0_TypeKind> __param_kind, jule::Any __param_model): _field_kind(__param_kind), _field_model(__param_model) {}

	

	_1a64190a9_OperandExprModel(void) = default;

	inline bool operator==(_1a64190a9_OperandExprModel _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1a64190a9_OperandExprModel _other) { return !this->operator==(_other); }


};
struct _1a6419571_BinopExprModel {
	jule::Ptr<_1a64190a9_OperandExprModel> _field_left = jule::Ptr<_1a64190a9_OperandExprModel>();
	jule::Ptr<_1a64190a9_OperandExprModel> _field_right = jule::Ptr<_1a64190a9_OperandExprModel>();
	jule::Ptr<_1d0747985_Token> _field_op = jule::Ptr<_1d0747985_Token>();


	_1a6419571_BinopExprModel(jule::Ptr<_1a64190a9_OperandExprModel> __param_left, jule::Ptr<_1a64190a9_OperandExprModel> __param_right, jule::Ptr<_1d0747985_Token> __param_op): _field_left(__param_left), _field_right(__param_right), _field_op(__param_op) {}

	

	_1a6419571_BinopExprModel(void) = default;

	inline bool operator==(_1a6419571_BinopExprModel _other) {
		return 
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1a6419571_BinopExprModel _other) { return !this->operator==(_other); }


};
struct _1a6419928_UnaryExprModel {
	jule::Ptr<_1a7648b67_Data> _field_expr = jule::Ptr<_1a7648b67_Data>();
	jule::Ptr<_1d0747985_Token> _field_op = jule::Ptr<_1d0747985_Token>();


	_1a6419928_UnaryExprModel(jule::Ptr<_1a7648b67_Data> __param_expr, jule::Ptr<_1d0747985_Token> __param_op): _field_expr(__param_expr), _field_op(__param_op) {}

	

	_1a6419928_UnaryExprModel(void) = default;

	inline bool operator==(_1a6419928_UnaryExprModel _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1a6419928_UnaryExprModel _other) { return !this->operator==(_other); }


};
struct _1a6419d24_StructArgExprModel {
	jule::Ptr<_1a6416ae0_FieldIns> _field_field = jule::Ptr<_1a6416ae0_FieldIns>();
	jule::Any _field_expr = jule::Any();


	_1a6419d24_StructArgExprModel(jule::Ptr<_1a6416ae0_FieldIns> __param_field, jule::Any __param_expr): _field_field(__param_field), _field_expr(__param_expr) {}

	

	_1a6419d24_StructArgExprModel(void) = default;

	inline bool operator==(_1a6419d24_StructArgExprModel _other) {
		return 
			this->_field_field == _other._field_field &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1a6419d24_StructArgExprModel _other) { return !this->operator==(_other); }


};
struct _1a641a1cb_StructLitExprModel {
	jule::Ptr<_1a641744d_StructIns> _field_strct = jule::Ptr<_1a641744d_StructIns>();
	jule::Slice<jule::Ptr<_1a6419d24_StructArgExprModel>> _field_args = jule::Slice<jule::Ptr<_1a6419d24_StructArgExprModel>>();


	_1a641a1cb_StructLitExprModel(jule::Ptr<_1a641744d_StructIns> __param_strct, jule::Slice<jule::Ptr<_1a6419d24_StructArgExprModel>> __param_args): _field_strct(__param_strct), _field_args(__param_args) {}

	

	_1a641a1cb_StructLitExprModel(void) = default;

	inline bool operator==(_1a641a1cb_StructLitExprModel _other) {
		return 
			this->_field_strct == _other._field_strct &&
			this->_field_args == _other._field_args;
	}

	inline bool operator!=(_1a641a1cb_StructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1a641a50b_AllocStructLitExprModel {
	jule::Ptr<_1a641a1cb_StructLitExprModel> _field_lit = jule::Ptr<_1a641a1cb_StructLitExprModel>();


	_1a641a50b_AllocStructLitExprModel(jule::Ptr<_1a641a1cb_StructLitExprModel> __param_lit): _field_lit(__param_lit) {}

	

	_1a641a50b_AllocStructLitExprModel(void) = default;

	inline bool operator==(_1a641a50b_AllocStructLitExprModel _other) {
		return 
			this->_field_lit == _other._field_lit;
	}

	inline bool operator!=(_1a641a50b_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1a641aa39_CastingExprModel {
	jule::Ptr<_1d0747985_Token> _field_token = jule::Ptr<_1d0747985_Token>();
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1a7672da0_TypeKind> _field_kind = jule::Ptr<_1a7672da0_TypeKind>();
	jule::Ptr<_1a7672da0_TypeKind> _field_expr_kind = jule::Ptr<_1a7672da0_TypeKind>();


	_1a641aa39_CastingExprModel(jule::Ptr<_1d0747985_Token> __param_token, jule::Any __param_expr, jule::Ptr<_1a7672da0_TypeKind> __param_kind, jule::Ptr<_1a7672da0_TypeKind> __param_expr_kind): _field_token(__param_token), _field_expr(__param_expr), _field_kind(__param_kind), _field_expr_kind(__param_expr_kind) {}

	

	_1a641aa39_CastingExprModel(void) = default;

	inline bool operator==(_1a641aa39_CastingExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_kind == _other._field_kind &&
			this->_field_expr_kind == _other._field_expr_kind;
	}

	inline bool operator!=(_1a641aa39_CastingExprModel _other) { return !this->operator==(_other); }


};
struct _1a641b364_FnCallExprModel {
	jule::Ptr<_1d0747985_Token> _field_token = jule::Ptr<_1d0747985_Token>();
	jule::Ptr<_1a6429be1_FnIns> _field_func = jule::Ptr<_1a6429be1_FnIns>();
	jule::Bool _field_is_co = jule::Bool();
	jule::Any _field_expr = jule::Any();
	jule::Slice<jule::Any> _field_args = jule::Slice<jule::Any>();
	jule::Ptr<_1a759e606_Scope> _field_except = jule::Ptr<_1a759e606_Scope>();
	jule::Bool _field_assigned = jule::Bool();


	_1a641b364_FnCallExprModel(jule::Ptr<_1d0747985_Token> __param_token, jule::Ptr<_1a6429be1_FnIns> __param_func, jule::Bool __param_is_co, jule::Any __param_expr, jule::Slice<jule::Any> __param_args, jule::Ptr<_1a759e606_Scope> __param_except, jule::Bool __param_assigned): _field_token(__param_token), _field_func(__param_func), _field_is_co(__param_is_co), _field_expr(__param_expr), _field_args(__param_args), _field_except(__param_except), _field_assigned(__param_assigned) {}

	

	_1a641b364_FnCallExprModel(void) = default;

	inline bool operator==(_1a641b364_FnCallExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_func == _other._field_func &&
			this->_field_is_co == _other._field_is_co &&
			this->_field_expr == _other._field_expr &&
			this->_field_args == _other._field_args &&
			this->_field_except == _other._field_except &&
			this->_field_assigned == _other._field_assigned;
	}

	inline bool operator!=(_1a641b364_FnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a641b71b_SliceExprModel {
	jule::Ptr<_1a7672da0_TypeKind> _field_elem_kind = jule::Ptr<_1a7672da0_TypeKind>();
	jule::Slice<jule::Any> _field_elems = jule::Slice<jule::Any>();


	_1a641b71b_SliceExprModel(jule::Ptr<_1a7672da0_TypeKind> __param_elem_kind, jule::Slice<jule::Any> __param_elems): _field_elem_kind(__param_elem_kind), _field_elems(__param_elems) {}

	

	_1a641b71b_SliceExprModel(void) = default;

	inline bool operator==(_1a641b71b_SliceExprModel _other) {
		return 
			this->_field_elem_kind == _other._field_elem_kind &&
			this->_field_elems == _other._field_elems;
	}

	inline bool operator!=(_1a641b71b_SliceExprModel _other) { return !this->operator==(_other); }


};
struct _1a641bb8e_IndexingExprModel {
	jule::Ptr<_1d0747985_Token> _field_token = jule::Ptr<_1d0747985_Token>();
	jule::Ptr<_1a7648b67_Data> _field_expr = jule::Ptr<_1a7648b67_Data>();
	jule::Ptr<_1a7648b67_Data> _field_index = jule::Ptr<_1a7648b67_Data>();


	_1a641bb8e_IndexingExprModel(jule::Ptr<_1d0747985_Token> __param_token, jule::Ptr<_1a7648b67_Data> __param_expr, jule::Ptr<_1a7648b67_Data> __param_index): _field_token(__param_token), _field_expr(__param_expr), _field_index(__param_index) {}

	

	_1a641bb8e_IndexingExprModel(void) = default;

	inline bool operator==(_1a641bb8e_IndexingExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_index == _other._field_index;
	}

	inline bool operator!=(_1a641bb8e_IndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1a641c046_AnonFnExprModel {
	jule::Ptr<_1a6429be1_FnIns> _field_func = jule::Ptr<_1a6429be1_FnIns>();
	jule::Bool _field_global = jule::Bool();


	_1a641c046_AnonFnExprModel(jule::Ptr<_1a6429be1_FnIns> __param_func, jule::Bool __param_global): _field_func(__param_func), _field_global(__param_global) {}

	

	_1a641c046_AnonFnExprModel(void) = default;

	inline bool operator==(_1a641c046_AnonFnExprModel _other) {
		return 
			this->_field_func == _other._field_func &&
			this->_field_global == _other._field_global;
	}

	inline bool operator!=(_1a641c046_AnonFnExprModel _other) { return !this->operator==(_other); }


};
struct _1a641c3ed_KeyValPairExprModel {
	jule::Any _field_key = jule::Any();
	jule::Any _field_val = jule::Any();


	_1a641c3ed_KeyValPairExprModel(jule::Any __param_key, jule::Any __param_val): _field_key(__param_key), _field_val(__param_val) {}

	

	_1a641c3ed_KeyValPairExprModel(void) = default;

	inline bool operator==(_1a641c3ed_KeyValPairExprModel _other) {
		return 
			this->_field_key == _other._field_key &&
			this->_field_val == _other._field_val;
	}

	inline bool operator!=(_1a641c3ed_KeyValPairExprModel _other) { return !this->operator==(_other); }


};
struct _1a641c871_MapExprModel {
	jule::Ptr<_1a7672da0_TypeKind> _field_key_kind = jule::Ptr<_1a7672da0_TypeKind>();
	jule::Ptr<_1a7672da0_TypeKind> _field_val_kind = jule::Ptr<_1a7672da0_TypeKind>();
	jule::Slice<jule::Ptr<_1a641c3ed_KeyValPairExprModel>> _field_entries = jule::Slice<jule::Ptr<_1a641c3ed_KeyValPairExprModel>>();


	_1a641c871_MapExprModel(jule::Ptr<_1a7672da0_TypeKind> __param_key_kind, jule::Ptr<_1a7672da0_TypeKind> __param_val_kind, jule::Slice<jule::Ptr<_1a641c3ed_KeyValPairExprModel>> __param_entries): _field_key_kind(__param_key_kind), _field_val_kind(__param_val_kind), _field_entries(__param_entries) {}

	

	_1a641c871_MapExprModel(void) = default;

	inline bool operator==(_1a641c871_MapExprModel _other) {
		return 
			this->_field_key_kind == _other._field_key_kind &&
			this->_field_val_kind == _other._field_val_kind &&
			this->_field_entries == _other._field_entries;
	}

	inline bool operator!=(_1a641c871_MapExprModel _other) { return !this->operator==(_other); }


};
struct _1a641cdb0_SlicingExprModel {
	jule::Ptr<_1d0747985_Token> _field_token = jule::Ptr<_1d0747985_Token>();
	jule::Any _field_expr = jule::Any();
	jule::Any _field_left = jule::Any();
	jule::Any _field_right = jule::Any();


	_1a641cdb0_SlicingExprModel(jule::Ptr<_1d0747985_Token> __param_token, jule::Any __param_expr, jule::Any __param_left, jule::Any __param_right): _field_token(__param_token), _field_expr(__param_expr), _field_left(__param_left), _field_right(__param_right) {}

	

	_1a641cdb0_SlicingExprModel(void) = default;

	inline bool operator==(_1a641cdb0_SlicingExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right;
	}

	inline bool operator!=(_1a641cdb0_SlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1a641d3ee_TraitSubIdentExprModel {
	jule::Ptr<_1d0747985_Token> _field_token = jule::Ptr<_1d0747985_Token>();
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1a6426a45_Fn> _field_method = jule::Ptr<_1a6426a45_Fn>();
	jule::Ptr<_1a7465bd7_Trait> _field_trt = jule::Ptr<_1a7465bd7_Trait>();


	_1a641d3ee_TraitSubIdentExprModel(jule::Ptr<_1d0747985_Token> __param_token, jule::Any __param_expr, jule::Ptr<_1a6426a45_Fn> __param_method, jule::Ptr<_1a7465bd7_Trait> __param_trt): _field_token(__param_token), _field_expr(__param_expr), _field_method(__param_method), _field_trt(__param_trt) {}

	

	_1a641d3ee_TraitSubIdentExprModel(void) = default;

	inline bool operator==(_1a641d3ee_TraitSubIdentExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_method == _other._field_method &&
			this->_field_trt == _other._field_trt;
	}

	inline bool operator!=(_1a641d3ee_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1a641db6e_StructSubIdentExprModel {
	jule::Ptr<_1d0747985_Token> _field_token = jule::Ptr<_1d0747985_Token>();
	jule::Ptr<_1a7648b67_Data> _field_expr = jule::Ptr<_1a7648b67_Data>();
	jule::Ptr<_1a7672da0_TypeKind> _field_expr_kind = jule::Ptr<_1a7672da0_TypeKind>();
	jule::Ptr<_1a6429be1_FnIns> _field_method = jule::Ptr<_1a6429be1_FnIns>();
	jule::Ptr<_1a6416ae0_FieldIns> _field_field = jule::Ptr<_1a6416ae0_FieldIns>();


	_1a641db6e_StructSubIdentExprModel(jule::Ptr<_1d0747985_Token> __param_token, jule::Ptr<_1a7648b67_Data> __param_expr, jule::Ptr<_1a7672da0_TypeKind> __param_expr_kind, jule::Ptr<_1a6429be1_FnIns> __param_method, jule::Ptr<_1a6416ae0_FieldIns> __param_field): _field_token(__param_token), _field_expr(__param_expr), _field_expr_kind(__param_expr_kind), _field_method(__param_method), _field_field(__param_field) {}

	

	_1a641db6e_StructSubIdentExprModel(void) = default;

	inline bool operator==(_1a641db6e_StructSubIdentExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_expr_kind == _other._field_expr_kind &&
			this->_field_method == _other._field_method &&
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1a641db6e_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1a641e125_StructStaticIdentExprModel {
	jule::Ptr<_1a641744d_StructIns> _field_structure = jule::Ptr<_1a641744d_StructIns>();
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1a6429be1_FnIns> _field_method = jule::Ptr<_1a6429be1_FnIns>();


	_1a641e125_StructStaticIdentExprModel(jule::Ptr<_1a641744d_StructIns> __param_structure, jule::Any __param_expr, jule::Ptr<_1a6429be1_FnIns> __param_method): _field_structure(__param_structure), _field_expr(__param_expr), _field_method(__param_method) {}

	

	_1a641e125_StructStaticIdentExprModel(void) = default;

	inline bool operator==(_1a641e125_StructStaticIdentExprModel _other) {
		return 
			this->_field_structure == _other._field_structure &&
			this->_field_expr == _other._field_expr &&
			this->_field_method == _other._field_method;
	}

	inline bool operator!=(_1a641e125_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1a641e4bb_ArrayExprModel {
	jule::Ptr<_1a767d718_Arr> _field_kind = jule::Ptr<_1a767d718_Arr>();
	jule::Slice<jule::Any> _field_elems = jule::Slice<jule::Any>();


	_1a641e4bb_ArrayExprModel(jule::Ptr<_1a767d718_Arr> __param_kind, jule::Slice<jule::Any> __param_elems): _field_kind(__param_kind), _field_elems(__param_elems) {}

	

	_1a641e4bb_ArrayExprModel(void) = default;

	inline bool operator==(_1a641e4bb_ArrayExprModel _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_elems == _other._field_elems;
	}

	inline bool operator!=(_1a641e4bb_ArrayExprModel _other) { return !this->operator==(_other); }


};
struct _1a641e7a7_CommonIdentExprModel {
	jule::Str _field_ident = jule::Str();


	_1a641e7a7_CommonIdentExprModel(jule::Str __param_ident): _field_ident(__param_ident) {}

	

	_1a641e7a7_CommonIdentExprModel(void) = default;

	inline bool operator==(_1a641e7a7_CommonIdentExprModel _other) {
		return 
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1a641e7a7_CommonIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1a641ed3a_CommonSubIdentExprModel {
	jule::Ptr<_1a7672da0_TypeKind> _field_expr_kind = jule::Ptr<_1a7672da0_TypeKind>();
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1d0747985_Token> _field_token = jule::Ptr<_1d0747985_Token>();
	jule::Str _field_ident = jule::Str();


	_1a641ed3a_CommonSubIdentExprModel(jule::Ptr<_1a7672da0_TypeKind> __param_expr_kind, jule::Any __param_expr, jule::Ptr<_1d0747985_Token> __param_token, jule::Str __param_ident): _field_expr_kind(__param_expr_kind), _field_expr(__param_expr), _field_token(__param_token), _field_ident(__param_ident) {}

	

	_1a641ed3a_CommonSubIdentExprModel(void) = default;

	inline bool operator==(_1a641ed3a_CommonSubIdentExprModel _other) {
		return 
			this->_field_expr_kind == _other._field_expr_kind &&
			this->_field_expr == _other._field_expr &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1a641ed3a_CommonSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1a6420115_TupleExprModel {
	jule::Slice<jule::Ptr<_1a7648b67_Data>> _field_datas = jule::Slice<jule::Ptr<_1a7648b67_Data>>();


	_1a6420115_TupleExprModel(jule::Slice<jule::Ptr<_1a7648b67_Data>> __param_datas): _field_datas(__param_datas) {}

	

	_1a6420115_TupleExprModel(void) = default;

	inline bool operator==(_1a6420115_TupleExprModel _other) {
		return 
			this->_field_datas == _other._field_datas;
	}

	inline bool operator!=(_1a6420115_TupleExprModel _other) { return !this->operator==(_other); }


};
struct _1a6420511_BuiltinOutCallExprModel {
	jule::Any _field_expr = jule::Any();
	jule::Bool _field_debug = jule::Bool();


	_1a6420511_BuiltinOutCallExprModel(jule::Any __param_expr, jule::Bool __param_debug): _field_expr(__param_expr), _field_debug(__param_debug) {}

	

	_1a6420511_BuiltinOutCallExprModel(void) = default;

	inline bool operator==(_1a6420511_BuiltinOutCallExprModel _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_debug == _other._field_debug;
	}

	inline bool operator!=(_1a6420511_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a64208eb_BuiltinOutlnCallExprModel {
	jule::Any _field_expr = jule::Any();
	jule::Bool _field_debug = jule::Bool();


	_1a64208eb_BuiltinOutlnCallExprModel(jule::Any __param_expr, jule::Bool __param_debug): _field_expr(__param_expr), _field_debug(__param_debug) {}

	

	_1a64208eb_BuiltinOutlnCallExprModel(void) = default;

	inline bool operator==(_1a64208eb_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_debug == _other._field_debug;
	}

	inline bool operator!=(_1a64208eb_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a6420c1a_BuiltinCloneCallExprModel {
	jule::Any _field_expr = jule::Any();


	_1a6420c1a_BuiltinCloneCallExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1a6420c1a_BuiltinCloneCallExprModel(void) = default;

	inline bool operator==(_1a6420c1a_BuiltinCloneCallExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1a6420c1a_BuiltinCloneCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a6421105_BuiltinNewCallExprModel {
	jule::Ptr<_1a7672da0_TypeKind> _field_kind = jule::Ptr<_1a7672da0_TypeKind>();
	jule::Any _field_init = jule::Any();


	_1a6421105_BuiltinNewCallExprModel(jule::Ptr<_1a7672da0_TypeKind> __param_kind, jule::Any __param_init): _field_kind(__param_kind), _field_init(__param_init) {}

	

	_1a6421105_BuiltinNewCallExprModel(void) = default;

	inline bool operator==(_1a6421105_BuiltinNewCallExprModel _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_init == _other._field_init;
	}

	inline bool operator!=(_1a6421105_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a64214e0_BuiltinPanicCallExprModel {
	jule::Ptr<_1d0747985_Token> _field_token = jule::Ptr<_1d0747985_Token>();
	jule::Any _field_expr = jule::Any();


	_1a64214e0_BuiltinPanicCallExprModel(jule::Ptr<_1d0747985_Token> __param_token, jule::Any __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_1a64214e0_BuiltinPanicCallExprModel(void) = default;

	inline bool operator==(_1a64214e0_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1a64214e0_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a6421996_BuiltinAssertCallExprModel {
	jule::Ptr<_1d0747985_Token> _field_token = jule::Ptr<_1d0747985_Token>();
	jule::Any _field_expr = jule::Any();
	jule::Str _field_log = jule::Str();


	_1a6421996_BuiltinAssertCallExprModel(jule::Ptr<_1d0747985_Token> __param_token, jule::Any __param_expr, jule::Str __param_log): _field_token(__param_token), _field_expr(__param_expr), _field_log(__param_log) {}

	

	_1a6421996_BuiltinAssertCallExprModel(void) = default;

	inline bool operator==(_1a6421996_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_log == _other._field_log;
	}

	inline bool operator!=(_1a6421996_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a6421e4c_BuiltinMakeCallExprModel {
	jule::Ptr<_1a7672da0_TypeKind> _field_kind = jule::Ptr<_1a7672da0_TypeKind>();
	jule::Any _field_len = jule::Any();
	jule::Any _field_cap = jule::Any();


	_1a6421e4c_BuiltinMakeCallExprModel(jule::Ptr<_1a7672da0_TypeKind> __param_kind, jule::Any __param_len, jule::Any __param_cap): _field_kind(__param_kind), _field_len(__param_len), _field_cap(__param_cap) {}

	

	_1a6421e4c_BuiltinMakeCallExprModel(void) = default;

	inline bool operator==(_1a6421e4c_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_len == _other._field_len &&
			this->_field_cap == _other._field_cap;
	}

	inline bool operator!=(_1a6421e4c_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a6422337_BuiltinAppendCallExprModel {
	jule::Any _field_dest = jule::Any();
	jule::Any _field_elements = jule::Any();


	_1a6422337_BuiltinAppendCallExprModel(jule::Any __param_dest, jule::Any __param_elements): _field_dest(__param_dest), _field_elements(__param_elements) {}

	

	_1a6422337_BuiltinAppendCallExprModel(void) = default;

	inline bool operator==(_1a6422337_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_dest == _other._field_dest &&
			this->_field_elements == _other._field_elements;
	}

	inline bool operator!=(_1a6422337_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a6422722_BuiltinErrorCallExprModel {
	jule::Ptr<_1a6429be1_FnIns> _field_func = jule::Ptr<_1a6429be1_FnIns>();
	jule::Any _field_err = jule::Any();


	_1a6422722_BuiltinErrorCallExprModel(jule::Ptr<_1a6429be1_FnIns> __param_func, jule::Any __param_err): _field_func(__param_func), _field_err(__param_err) {}

	

	_1a6422722_BuiltinErrorCallExprModel(void) = default;

	inline bool operator==(_1a6422722_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_func == _other._field_func &&
			this->_field_err == _other._field_err;
	}

	inline bool operator!=(_1a6422722_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a64229ec_SizeofExprModel {
	jule::Any _field_expr = jule::Any();


	_1a64229ec_SizeofExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1a64229ec_SizeofExprModel(void) = default;

	inline bool operator==(_1a64229ec_SizeofExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1a64229ec_SizeofExprModel _other) { return !this->operator==(_other); }


};
struct _1a642316d_AlignofExprModel {
	jule::Any _field_expr = jule::Any();


	_1a642316d_AlignofExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1a642316d_AlignofExprModel(void) = default;

	inline bool operator==(_1a642316d_AlignofExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1a642316d_AlignofExprModel _other) { return !this->operator==(_other); }


};
struct _1a642335a_RuneExprModel {
	jule::I32 _field_code = jule::I32();


	_1a642335a_RuneExprModel(jule::I32 __param_code): _field_code(__param_code) {}

	

	_1a642335a_RuneExprModel(void) = default;

	inline bool operator==(_1a642335a_RuneExprModel _other) {
		return 
			this->_field_code == _other._field_code;
	}

	inline bool operator!=(_1a642335a_RuneExprModel _other) { return !this->operator==(_other); }


};
struct _1a6423646_IntegratedToStrExprModel {
	jule::Any _field_expr = jule::Any();


	_1a6423646_IntegratedToStrExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1a6423646_IntegratedToStrExprModel(void) = default;

	inline bool operator==(_1a6423646_IntegratedToStrExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1a6423646_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};
struct _1a64239dc_BackendEmitExprModel {
	jule::Str _field_code = jule::Str();
	jule::Slice<jule::Any> _field_exprs = jule::Slice<jule::Any>();


	_1a64239dc_BackendEmitExprModel(jule::Str __param_code, jule::Slice<jule::Any> __param_exprs): _field_code(__param_code), _field_exprs(__param_exprs) {}

	

	_1a64239dc_BackendEmitExprModel(void) = default;

	inline bool operator==(_1a64239dc_BackendEmitExprModel _other) {
		return 
			this->_field_code == _other._field_code &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_1a64239dc_BackendEmitExprModel _other) { return !this->operator==(_other); }


};
struct _1a6423cc8_FreeExprModel {
	jule::Any _field_expr = jule::Any();


	_1a6423cc8_FreeExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1a6423cc8_FreeExprModel(void) = default;

	inline bool operator==(_1a6423cc8_FreeExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1a6423cc8_FreeExprModel _other) { return !this->operator==(_other); }


};
struct _1a6424a32_RetType {
	jule::Ptr<_1a7676c3e_TypeSymbol> _field_kind = jule::Ptr<_1a7676c3e_TypeSymbol>();
	jule::Slice<jule::Ptr<_1d0747985_Token>> _field_idents = jule::Slice<jule::Ptr<_1d0747985_Token>>();


	_1a6424a32_RetType(jule::Ptr<_1a7676c3e_TypeSymbol> __param_kind, jule::Slice<jule::Ptr<_1d0747985_Token>> __param_idents): _field_kind(__param_kind), _field_idents(__param_idents) {}

	

	_1a6424a32_RetType(void) = default;

	inline bool operator==(_1a6424a32_RetType _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_idents == _other._field_idents;
	}

	inline bool operator!=(_1a6424a32_RetType _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a6428d55_ParamIns> _1a64255c1_instance(jule::Ptr<_1a6425208_Param>);
inline jule::Bool _1a6425835_is_self(_1a6425208_Param*);
inline jule::Bool _1a6425a99_is_ref(_1a6425208_Param*);
struct _1a6425208_Param {
	jule::Ptr<_1d0747985_Token> _field_token = jule::Ptr<_1d0747985_Token>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_variadic = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Ptr<_1a7676c3e_TypeSymbol> _field_kind = jule::Ptr<_1a7676c3e_TypeSymbol>();
	jule::Str _field_ident = jule::Str();


	_1a6425208_Param(jule::Ptr<_1d0747985_Token> __param_token, jule::Bool __param_mutable, jule::Bool __param_variadic, jule::Bool __param_reference, jule::Ptr<_1a7676c3e_TypeSymbol> __param_kind, jule::Str __param_ident): _field_token(__param_token), _field_mutable(__param_mutable), _field_variadic(__param_variadic), _field_reference(__param_reference), _field_kind(__param_kind), _field_ident(__param_ident) {}

	

	_1a6425208_Param(void) = default;

	inline bool operator==(_1a6425208_Param _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_variadic == _other._field_variadic &&
			this->_field_reference == _other._field_reference &&
			this->_field_kind == _other._field_kind &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1a6425208_Param _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a6426e96_is_void(_1a6426a45_Fn*);
inline jule::Bool _1a642720a_is_method(_1a6426a45_Fn*);
inline jule::Bool _1a642746e_is_entry_point(_1a6426a45_Fn*);
inline jule::Bool _1a64276d3_is_init(_1a6426a45_Fn*);
inline jule::Bool _1a6427947_is_anon(_1a6426a45_Fn*);
inline jule::Bool _1a6427bab_any_var(_1a6426a45_Fn*);
inline jule::Bool _1a6427e64_parameters_uses_generics(_1a6426a45_Fn*);
inline jule::Bool _1a64281b7_result_uses_generics(_1a6426a45_Fn*);
inline jule::Ptr<_1a6429be1_FnIns> _1a642842b_instance_force(jule::Ptr<_1a6426a45_Fn>);
inline jule::Ptr<_1a6429be1_FnIns> _1a6428690_instance(jule::Ptr<_1a6426a45_Fn>);
inline jule::Ptr<_1a6429be1_FnIns> _1a642899d_append_instance(_1a6426a45_Fn*,jule::Ptr<_1a6429be1_FnIns>&);
struct _1a6426a45_Fn {
	jule::Ptr<_1a75d1e74_Sema> _field_sema = jule::Ptr<_1a75d1e74_Sema>();
	jule::Ptr<_1d0747985_Token> _field_token = jule::Ptr<_1d0747985_Token>();
	jule::Bool _field_global = jule::Bool();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_exceptional = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1d06c9ecd_Directive>> _field_directives = jule::Slice<jule::Ptr<_1d06c9ecd_Directive>>();
	jule::Ptr<_1d0761c13_ScopeTree> _field_scope = jule::Ptr<_1d0761c13_ScopeTree>();
	jule::Slice<jule::Ptr<_1d075ee64_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_1d075ee64_GenericDecl>>();
	jule::Ptr<_1a6424a32_RetType> _field_result = jule::Ptr<_1a6424a32_RetType>();
	jule::Slice<jule::Ptr<_1a6425208_Param>> _field_params = jule::Slice<jule::Ptr<_1a6425208_Param>>();
	jule::Ptr<_1a64147be_Struct> _field_owner = jule::Ptr<_1a64147be_Struct>();
	jule::Slice<jule::Ptr<_1a6429be1_FnIns>> _field_instances = jule::Slice<jule::Ptr<_1a6429be1_FnIns>>();


	_1a6426a45_Fn(jule::Ptr<_1a75d1e74_Sema> __param_sema, jule::Ptr<_1d0747985_Token> __param_token, jule::Bool __param_global, jule::Bool __param_unsafety, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_statically, jule::Bool __param_exceptional, jule::Str __param_ident, jule::Slice<jule::Ptr<_1d06c9ecd_Directive>> __param_directives, jule::Ptr<_1d0761c13_ScopeTree> __param_scope, jule::Slice<jule::Ptr<_1d075ee64_GenericDecl>> __param_generics, jule::Ptr<_1a6424a32_RetType> __param_result, jule::Slice<jule::Ptr<_1a6425208_Param>> __param_params, jule::Ptr<_1a64147be_Struct> __param_owner, jule::Slice<jule::Ptr<_1a6429be1_FnIns>> __param_instances): _field_sema(__param_sema), _field_token(__param_token), _field_global(__param_global), _field_unsafety(__param_unsafety), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_statically(__param_statically), _field_exceptional(__param_exceptional), _field_ident(__param_ident), _field_directives(__param_directives), _field_scope(__param_scope), _field_generics(__param_generics), _field_result(__param_result), _field_params(__param_params), _field_owner(__param_owner), _field_instances(__param_instances) {}

	

	_1a6426a45_Fn(void) = default;

	inline bool operator==(_1a6426a45_Fn _other) {
		return 
			this->_field_sema == _other._field_sema &&
			this->_field_token == _other._field_token &&
			this->_field_global == _other._field_global &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_statically == _other._field_statically &&
			this->_field_exceptional == _other._field_exceptional &&
			this->_field_ident == _other._field_ident &&
			this->_field_directives == _other._field_directives &&
			this->_field_scope == _other._field_scope &&
			this->_field_generics == _other._field_generics &&
			this->_field_result == _other._field_result &&
			this->_field_params == _other._field_params &&
			this->_field_owner == _other._field_owner &&
			this->_field_instances == _other._field_instances;
	}

	inline bool operator!=(_1a6426a45_Fn _other) { return !this->operator==(_other); }


};
inline jule::Str _1a642922e_to_str(_1a6428d55_ParamIns*);
struct _1a6428d55_ParamIns {
	jule::Ptr<_1a6425208_Param> _field_decl = jule::Ptr<_1a6425208_Param>();
	jule::Ptr<_1a7672da0_TypeKind> _field_kind = jule::Ptr<_1a7672da0_TypeKind>();


	_1a6428d55_ParamIns(jule::Ptr<_1a6425208_Param> __param_decl, jule::Ptr<_1a7672da0_TypeKind> __param_kind): _field_decl(__param_decl), _field_kind(__param_kind) {}

	

	_1a6428d55_ParamIns(void) = default;

	inline bool operator==(_1a6428d55_ParamIns _other) {
		return 
			this->_field_decl == _other._field_decl &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1a6428d55_ParamIns _other) { return !this->operator==(_other); }


};
inline jule::Str _1a642a054_to_str(_1a6429be1_FnIns*);
inline jule::Bool _1a642a362_equals(jule::Ptr<_1a6429be1_FnIns>,jule::Ptr<_1a7672da0_TypeKind>);
inline jule::Slice<jule::Ptr<_1a7672da0_TypeKind>> _1a642a708_types(_1a6429be1_FnIns*);
inline jule::Bool _1a642a96c_is_builtin(_1a6429be1_FnIns*);
inline jule::Bool _1a642abd1_is_anon(_1a6429be1_FnIns*);
inline jule::Bool _1a642aede_same(_1a6429be1_FnIns*,jule::Ptr<_1a6429be1_FnIns>);
inline jule::Str _1a642b2ec_get_kind_str(_1a6429be1_FnIns*,jule::Bool);
struct _1a6429be1_FnIns {
	jule::Ptr<_1a641744d_StructIns> _field_owner = jule::Ptr<_1a641744d_StructIns>();
	jule::Ptr<_1a6426a45_Fn> _field_decl = jule::Ptr<_1a6426a45_Fn>();
	jule::Slice<jule::Ptr<_1a7672da0_TypeKind>> _field_generics = jule::Slice<jule::Ptr<_1a7672da0_TypeKind>>();
	jule::Slice<jule::Ptr<_1a6428d55_ParamIns>> _field_params = jule::Slice<jule::Ptr<_1a6428d55_ParamIns>>();
	jule::Ptr<_1a7672da0_TypeKind> _field_result = jule::Ptr<_1a7672da0_TypeKind>();
	jule::Ptr<_1a759e606_Scope> _field_scope = jule::Ptr<_1a759e606_Scope>();
	jule::Ptr<_1a642cc9e_ReferenceStack> _field_references = jule::Ptr<_1a642cc9e_ReferenceStack>();
	jule::Bool _field_anon = jule::Bool();
	jule::Fn<jule::Ptr<_1a7648b67_Data>(jule::Ptr<_1a764a6d5_Eval>&,jule::Ptr<_1d075cd74_FnCallExpr>&,jule::Ptr<_1a7648b67_Data>&)> _field_caller = jule::Fn<jule::Ptr<_1a7648b67_Data>(jule::Ptr<_1a764a6d5_Eval>&,jule::Ptr<_1d075cd74_FnCallExpr>&,jule::Ptr<_1a7648b67_Data>&)>();
	jule::Bool _field_reloaded = jule::Bool();


	_1a6429be1_FnIns(jule::Ptr<_1a641744d_StructIns> __param_owner, jule::Ptr<_1a6426a45_Fn> __param_decl, jule::Slice<jule::Ptr<_1a7672da0_TypeKind>> __param_generics, jule::Slice<jule::Ptr<_1a6428d55_ParamIns>> __param_params, jule::Ptr<_1a7672da0_TypeKind> __param_result, jule::Ptr<_1a759e606_Scope> __param_scope, jule::Ptr<_1a642cc9e_ReferenceStack> __param_references, jule::Bool __param_anon, jule::Fn<jule::Ptr<_1a7648b67_Data>(jule::Ptr<_1a764a6d5_Eval>&,jule::Ptr<_1d075cd74_FnCallExpr>&,jule::Ptr<_1a7648b67_Data>&)> __param_caller, jule::Bool __param_reloaded): _field_owner(__param_owner), _field_decl(__param_decl), _field_generics(__param_generics), _field_params(__param_params), _field_result(__param_result), _field_scope(__param_scope), _field_references(__param_references), _field_anon(__param_anon), _field_caller(__param_caller), _field_reloaded(__param_reloaded) {}

	

	_1a6429be1_FnIns(void) = default;

	inline bool operator==(_1a6429be1_FnIns _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_decl == _other._field_decl &&
			this->_field_generics == _other._field_generics &&
			this->_field_params == _other._field_params &&
			this->_field_result == _other._field_result &&
			this->_field_scope == _other._field_scope &&
			this->_field_references == _other._field_references &&
			this->_field_anon == _other._field_anon &&
			this->_field_caller == _other._field_caller &&
			this->_field_reloaded == _other._field_reloaded;
	}

	inline bool operator!=(_1a6429be1_FnIns _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a642cc9e_ReferenceStack> static__1a642d035_new(void);
inline jule::I64 _1a642d3ba_len(_1a642cc9e_ReferenceStack*);
inline jule::Any _1a642d6c8_at(_1a642cc9e_ReferenceStack*,jule::I64);
inline void _1a642d94d_push(_1a642cc9e_ReferenceStack*,jule::Any);
inline jule::Bool _1a642dc5b_exist_0(_1a642cc9e_ReferenceStack*,jule::Ptr<_1a75ec478_Var>);
inline jule::Bool _1a642dc5b_exist_1(_1a642cc9e_ReferenceStack*,jule::Ptr<_1a6429be1_FnIns>);
struct _1a642cc9e_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer = jule::Slice<jule::Any>();


	_1a642cc9e_ReferenceStack(jule::Slice<jule::Any> __param_buffer): _field_buffer(__param_buffer) {}

	

	_1a642cc9e_ReferenceStack(void) = default;

	inline bool operator==(_1a642cc9e_ReferenceStack _other) {
		return 
			this->_field_buffer == _other._field_buffer;
	}

	inline bool operator!=(_1a642cc9e_ReferenceStack _other) { return !this->operator==(_other); }


};
struct _1a642e113_Pass {
	jule::Ptr<_1d0747985_Token> _field_token = jule::Ptr<_1d0747985_Token>();
	jule::Str _field_text = jule::Str();


	_1a642e113_Pass(jule::Ptr<_1d0747985_Token> __param_token, jule::Str __param_text): _field_token(__param_token), _field_text(__param_text) {}

	

	_1a642e113_Pass(void) = default;

	inline bool operator==(_1a642e113_Pass _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_text == _other._field_text;
	}

	inline bool operator!=(_1a642e113_Pass _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a6432bb6_SymbolBuilder> _1a643327c_get_root(jule::Ptr<_1a6432bb6_SymbolBuilder>);
inline void _1a6433645_push_err(_1a6432bb6_SymbolBuilder*,jule::Ptr<_1d0747985_Token>&,jule::Str,jule::Slice<jule::Any>);
inline void _1a6433a0d_push_err_text(_1a6432bb6_SymbolBuilder*,jule::Ptr<_1d0747985_Token>&,jule::Str,jule::Slice<jule::Any>);
inline void _1a6433d2c_push_suggestion(_1a6432bb6_SymbolBuilder*,jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _1a6434228_check_cpp_use_decl_path(_1a6432bb6_SymbolBuilder*,jule::Ptr<_1d0769347_UseDecl>&,jule::Str);
inline jule::Ptr<_1a75c928a_ImportInfo> _1a6434536_build_cpp_header_import(_1a6432bb6_SymbolBuilder*,jule::Ptr<_1d0769347_UseDecl>&);
inline jule::Ptr<_1a75c928a_ImportInfo> _1a6434833_build_std_import(_1a6432bb6_SymbolBuilder*,jule::Ptr<_1d0769347_UseDecl>&);
inline jule::Ptr<_1a75c928a_ImportInfo> _1a6434b41_build_ident_import(jule::Ptr<_1a6432bb6_SymbolBuilder>,jule::Ptr<_1d0769347_UseDecl>&);
inline jule::Ptr<_1a75c928a_ImportInfo> _1a6434e4e_build_import(jule::Ptr<_1a6432bb6_SymbolBuilder>,jule::Ptr<_1d0769347_UseDecl>&);
inline jule::Bool _1a64352a1_check_duplicate_use_decl(_1a6432bb6_SymbolBuilder*,jule::Ptr<_1a75c928a_ImportInfo>&);
inline void _1a64355ae_impl_import_selections(_1a6432bb6_SymbolBuilder*,jule::Ptr<_1a75c928a_ImportInfo>&,jule::Ptr<_1d0769347_UseDecl>&);
inline jule::Str _1a64358bc_get_as_link_path(jule::Ptr<_1a6432bb6_SymbolBuilder>,jule::Str);
inline void _1a6435c85_push_cycle_error(jule::Ptr<_1a6432bb6_SymbolBuilder>,jule::Ptr<_1a6432bb6_SymbolBuilder>&,jule::Str,jule::Str&);
inline void _1a643614d_push_cross_cycle_error(jule::Ptr<_1a6432bb6_SymbolBuilder>,jule::Ptr<_1a6432bb6_SymbolBuilder>&,jule::Ptr<_1a75c928a_ImportInfo>&,jule::Ptr<_1d0747985_Token>&);
inline jule::Bool _1a6436505_check_import_cycles(jule::Ptr<_1a6432bb6_SymbolBuilder>,jule::Ptr<_1a75c928a_ImportInfo>,jule::Ptr<_1d0769347_UseDecl>&);
inline void _1a6436912_check_package_accessibility(_1a6432bb6_SymbolBuilder*,jule::Ptr<_1d0769347_UseDecl>&,jule::Str&,jule::Str&);
inline jule::Bool _1a6436ca8_import_package(jule::Ptr<_1a6432bb6_SymbolBuilder>,jule::Ptr<_1a75c928a_ImportInfo>&,jule::Ptr<_1d0769347_UseDecl>&);
inline jule::Ptr<_1a75c928a_ImportInfo> _1a64370b6_import_use_decl(jule::Ptr<_1a6432bb6_SymbolBuilder>,jule::Ptr<_1d0769347_UseDecl>&);
inline void _1a6437292_import_use_decls(jule::Ptr<_1a6432bb6_SymbolBuilder>);
inline void _1a6437517_append_node(_1a6432bb6_SymbolBuilder*,_1d06c9ce1_Node&);
inline void _1a64376e3_append_nodes(_1a6432bb6_SymbolBuilder*);
inline void _1a6437968_push_directive_pass(_1a6432bb6_SymbolBuilder*,jule::Ptr<_1d06c9ecd_Directive>&);
inline void _1a6437b44_append_top_directives(_1a6432bb6_SymbolBuilder*);
inline void _1a6437d20_build(jule::Ptr<_1a6432bb6_SymbolBuilder>);
struct _1a6432bb6_SymbolBuilder {
	jule::Ptr<_1a6432bb6_SymbolBuilder> _field_owner = jule::Ptr<_1a6432bb6_SymbolBuilder>();
	jule::Trait<_1a75c6e25_Importer> _field_importer = jule::Trait<_1a75c6e25_Importer>();
	jule::Slice<_1d0019224_Log> _field_errors = jule::Slice<_1d0019224_Log>();
	jule::Ptr<_1d06e7b66_Ast> _field_ast = jule::Ptr<_1d06e7b66_Ast>();
	jule::Ptr<_1a76439db_SymbolTable> _field_table = jule::Ptr<_1a76439db_SymbolTable>();


	_1a6432bb6_SymbolBuilder(jule::Ptr<_1a6432bb6_SymbolBuilder> __param_owner, jule::Trait<_1a75c6e25_Importer> __param_importer, jule::Slice<_1d0019224_Log> __param_errors, jule::Ptr<_1d06e7b66_Ast> __param_ast, jule::Ptr<_1a76439db_SymbolTable> __param_table): _field_owner(__param_owner), _field_importer(__param_importer), _field_errors(__param_errors), _field_ast(__param_ast), _field_table(__param_table) {}

	

	_1a6432bb6_SymbolBuilder(void) = default;

	inline bool operator==(_1a6432bb6_SymbolBuilder _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_importer == _other._field_importer &&
			this->_field_errors == _other._field_errors &&
			this->_field_ast == _other._field_ast &&
			this->_field_table == _other._field_table;
	}

	inline bool operator!=(_1a6432bb6_SymbolBuilder _other) { return !this->operator==(_other); }


};
inline jule::Str _1a74660d3_to_str(_1a7465bd7_Trait*);
inline jule::Bool _1a74663e1_equals(jule::Ptr<_1a7465bd7_Trait>,jule::Ptr<_1a7672da0_TypeKind>);
inline jule::Bool _1a7466754_is_builtin(_1a7465bd7_Trait*);
inline jule::Ptr<_1a6426a45_Fn> _1a7466a62_find_method(_1a7465bd7_Trait*,jule::Str);
struct _1a7465bd7_Trait {
	jule::Ptr<_1d0747985_Token> _field_token = jule::Ptr<_1d0747985_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Slice<jule::Ptr<_1a6426a45_Fn>> _field_methods = jule::Slice<jule::Ptr<_1a6426a45_Fn>>();
	jule::Slice<jule::Ptr<_1a64147be_Struct>> _field_implemented = jule::Slice<jule::Ptr<_1a64147be_Struct>>();


	_1a7465bd7_Trait(jule::Ptr<_1d0747985_Token> __param_token, jule::Str __param_ident, jule::Bool __param_public, jule::Bool __param_mutable, jule::Slice<jule::Ptr<_1a6426a45_Fn>> __param_methods, jule::Slice<jule::Ptr<_1a64147be_Struct>> __param_implemented): _field_token(__param_token), _field_ident(__param_ident), _field_public(__param_public), _field_mutable(__param_mutable), _field_methods(__param_methods), _field_implemented(__param_implemented) {}

	

	_1a7465bd7_Trait(void) = default;

	inline bool operator==(_1a7465bd7_Trait _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_public == _other._field_public &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_methods == _other._field_methods &&
			this->_field_implemented == _other._field_implemented;
	}

	inline bool operator!=(_1a7465bd7_Trait _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a74677dd_auto_expr(_1a7467403_EnumItem*);
struct _1a7467403_EnumItem {
	jule::Ptr<_1d0747985_Token> _field_token = jule::Ptr<_1d0747985_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1a7649be0_Value> _field_value = jule::Ptr<_1a7649be0_Value>();


	_1a7467403_EnumItem(jule::Ptr<_1d0747985_Token> __param_token, jule::Str __param_ident, jule::Ptr<_1a7649be0_Value> __param_value): _field_token(__param_token), _field_ident(__param_ident), _field_value(__param_value) {}

	

	_1a7467403_EnumItem(void) = default;

	inline bool operator==(_1a7467403_EnumItem _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_value == _other._field_value;
	}

	inline bool operator!=(_1a7467403_EnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _1a746825b_to_str(_1a7467de8_Enum*);
inline jule::Bool _1a7468569_equals(jule::Ptr<_1a7467de8_Enum>,jule::Ptr<_1a7672da0_TypeKind>);
inline jule::Ptr<_1a7467403_EnumItem> _1a74689a9_find_item(_1a7467de8_Enum*,jule::Str);
struct _1a7467de8_Enum {
	jule::Ptr<_1d0747985_Token> _field_token = jule::Ptr<_1d0747985_Token>();
	jule::Bool _field_public = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1a7676c3e_TypeSymbol> _field_kind = jule::Ptr<_1a7676c3e_TypeSymbol>();
	jule::Slice<jule::Ptr<_1a7467403_EnumItem>> _field_items = jule::Slice<jule::Ptr<_1a7467403_EnumItem>>();


	_1a7467de8_Enum(jule::Ptr<_1d0747985_Token> __param_token, jule::Bool __param_public, jule::Str __param_ident, jule::Ptr<_1a7676c3e_TypeSymbol> __param_kind, jule::Slice<jule::Ptr<_1a7467403_EnumItem>> __param_items): _field_token(__param_token), _field_public(__param_public), _field_ident(__param_ident), _field_kind(__param_kind), _field_items(__param_items) {}

	

	_1a7467de8_Enum(void) = default;

	inline bool operator==(_1a7467de8_Enum _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_items == _other._field_items;
	}

	inline bool operator!=(_1a7467de8_Enum _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a7469768_is_trait_impl(_1a746936c_Impl*);
inline jule::Bool _1a74699cc_is_struct_impl(_1a746936c_Impl*);
struct _1a746936c_Impl {
	jule::Ptr<_1d0759c1c_TypeDecl> _field_base = jule::Ptr<_1d0759c1c_TypeDecl>();
	jule::Ptr<_1d0759c1c_TypeDecl> _field_dest = jule::Ptr<_1d0759c1c_TypeDecl>();
	jule::Slice<jule::Ptr<_1a6426a45_Fn>> _field_methods = jule::Slice<jule::Ptr<_1a6426a45_Fn>>();
	jule::Slice<jule::Ptr<_1a75ec478_Var>> _field_statics = jule::Slice<jule::Ptr<_1a75ec478_Var>>();


	_1a746936c_Impl(jule::Ptr<_1d0759c1c_TypeDecl> __param_base, jule::Ptr<_1d0759c1c_TypeDecl> __param_dest, jule::Slice<jule::Ptr<_1a6426a45_Fn>> __param_methods, jule::Slice<jule::Ptr<_1a75ec478_Var>> __param_statics): _field_base(__param_base), _field_dest(__param_dest), _field_methods(__param_methods), _field_statics(__param_statics) {}

	

	_1a746936c_Impl(void) = default;

	inline bool operator==(_1a746936c_Impl _other) {
		return 
			this->_field_base == _other._field_base &&
			this->_field_dest == _other._field_dest &&
			this->_field_methods == _other._field_methods &&
			this->_field_statics == _other._field_statics;
	}

	inline bool operator!=(_1a746936c_Impl _other) { return !this->operator==(_other); }


};
struct _1a759e606_Scope {
	jule::Ptr<_1a759e606_Scope> _field_parent = jule::Ptr<_1a759e606_Scope>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_deferred = jule::Bool();
	jule::Slice<jule::Any> _field_stmts = jule::Slice<jule::Any>();


	_1a759e606_Scope(jule::Ptr<_1a759e606_Scope> __param_parent, jule::Bool __param_unsafety, jule::Bool __param_deferred, jule::Slice<jule::Any> __param_stmts): _field_parent(__param_parent), _field_unsafety(__param_unsafety), _field_deferred(__param_deferred), _field_stmts(__param_stmts) {}

	

	_1a759e606_Scope(void) = default;

	inline bool operator==(_1a759e606_Scope _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_deferred == _other._field_deferred &&
			this->_field_stmts == _other._field_stmts;
	}

	inline bool operator!=(_1a759e606_Scope _other) { return !this->operator==(_other); }


};
struct _1a75a6003_If {
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1a759e606_Scope> _field_scope = jule::Ptr<_1a759e606_Scope>();


	_1a75a6003_If(jule::Any __param_expr, jule::Ptr<_1a759e606_Scope> __param_scope): _field_expr(__param_expr), _field_scope(__param_scope) {}

	

	_1a75a6003_If(void) = default;

	inline bool operator==(_1a75a6003_If _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1a75a6003_If _other) { return !this->operator==(_other); }


};
struct _1a7550a80_Else {
	jule::Ptr<_1a759e606_Scope> _field_scope = jule::Ptr<_1a759e606_Scope>();


	_1a7550a80_Else(jule::Ptr<_1a759e606_Scope> __param_scope): _field_scope(__param_scope) {}

	

	_1a7550a80_Else(void) = default;

	inline bool operator==(_1a7550a80_Else _other) {
		return 
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1a7550a80_Else _other) { return !this->operator==(_other); }


};
struct _1a7550c6c_Conditional {
	jule::Slice<jule::Ptr<_1a75a6003_If>> _field_elifs = jule::Slice<jule::Ptr<_1a75a6003_If>>();
	jule::Ptr<_1a7550a80_Else> _field_default = jule::Ptr<_1a7550a80_Else>();


	_1a7550c6c_Conditional(jule::Slice<jule::Ptr<_1a75a6003_If>> __param_elifs, jule::Ptr<_1a7550a80_Else> __param_default): _field_elifs(__param_elifs), _field_default(__param_default) {}

	

	_1a7550c6c_Conditional(void) = default;

	inline bool operator==(_1a7550c6c_Conditional _other) {
		return 
			this->_field_elifs == _other._field_elifs &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1a7550c6c_Conditional _other) { return !this->operator==(_other); }


};
struct _1a7561893_InfIter {
	jule::Ptr<_1a759e606_Scope> _field_scope = jule::Ptr<_1a759e606_Scope>();


	_1a7561893_InfIter(jule::Ptr<_1a759e606_Scope> __param_scope): _field_scope(__param_scope) {}

	

	_1a7561893_InfIter(void) = default;

	inline bool operator==(_1a7561893_InfIter _other) {
		return 
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1a7561893_InfIter _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a758d1d8_is_while_next(_1a7561a80_WhileIter*);
struct _1a7561a80_WhileIter {
	jule::Any _field_expr = jule::Any();
	jule::Any _field_next = jule::Any();
	jule::Ptr<_1a759e606_Scope> _field_scope = jule::Ptr<_1a759e606_Scope>();


	_1a7561a80_WhileIter(jule::Any __param_expr, jule::Any __param_next, jule::Ptr<_1a759e606_Scope> __param_scope): _field_expr(__param_expr), _field_next(__param_next), _field_scope(__param_scope) {}

	

	_1a7561a80_WhileIter(void) = default;

	inline bool operator==(_1a7561a80_WhileIter _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_next == _other._field_next &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1a7561a80_WhileIter _other) { return !this->operator==(_other); }


};
struct _1a7561c6c_RangeIter {
	jule::Ptr<_1a7648b67_Data> _field_expr = jule::Ptr<_1a7648b67_Data>();
	jule::Ptr<_1a759e606_Scope> _field_scope = jule::Ptr<_1a759e606_Scope>();
	jule::Ptr<_1a75ec478_Var> _field_key_a = jule::Ptr<_1a75ec478_Var>();
	jule::Ptr<_1a75ec478_Var> _field_key_b = jule::Ptr<_1a75ec478_Var>();


	_1a7561c6c_RangeIter(jule::Ptr<_1a7648b67_Data> __param_expr, jule::Ptr<_1a759e606_Scope> __param_scope, jule::Ptr<_1a75ec478_Var> __param_key_a, jule::Ptr<_1a75ec478_Var> __param_key_b): _field_expr(__param_expr), _field_scope(__param_scope), _field_key_a(__param_key_a), _field_key_b(__param_key_b) {}

	

	_1a7561c6c_RangeIter(void) = default;

	inline bool operator==(_1a7561c6c_RangeIter _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_scope == _other._field_scope &&
			this->_field_key_a == _other._field_key_a &&
			this->_field_key_b == _other._field_key_b;
	}

	inline bool operator!=(_1a7561c6c_RangeIter _other) { return !this->operator==(_other); }


};
struct _1a758e926_ContSt {
	jule::U64 _field_it = jule::U64();


	_1a758e926_ContSt(jule::U64 __param_it): _field_it(__param_it) {}

	

	_1a758e926_ContSt(void) = default;

	inline bool operator==(_1a758e926_ContSt _other) {
		return 
			this->_field_it == _other._field_it;
	}

	inline bool operator!=(_1a758e926_ContSt _other) { return !this->operator==(_other); }


};
struct _1a758eb13_BreakSt {
	jule::U64 _field_it = jule::U64();
	jule::U64 _field_mtch = jule::U64();


	_1a758eb13_BreakSt(jule::U64 __param_it, jule::U64 __param_mtch): _field_it(__param_it), _field_mtch(__param_mtch) {}

	

	_1a758eb13_BreakSt(void) = default;

	inline bool operator==(_1a758eb13_BreakSt _other) {
		return 
			this->_field_it == _other._field_it &&
			this->_field_mtch == _other._field_mtch;
	}

	inline bool operator!=(_1a758eb13_BreakSt _other) { return !this->operator==(_other); }


};
struct _1a75b233e_Label {
	jule::Str _field_ident = jule::Str();


	_1a75b233e_Label(jule::Str __param_ident): _field_ident(__param_ident) {}

	

	_1a75b233e_Label(void) = default;

	inline bool operator==(_1a75b233e_Label _other) {
		return 
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1a75b233e_Label _other) { return !this->operator==(_other); }


};
struct _1a75b252b_GotoSt {
	jule::Str _field_ident = jule::Str();


	_1a75b252b_GotoSt(jule::Str __param_ident): _field_ident(__param_ident) {}

	

	_1a75b252b_GotoSt(void) = default;

	inline bool operator==(_1a75b252b_GotoSt _other) {
		return 
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1a75b252b_GotoSt _other) { return !this->operator==(_other); }


};
struct _1a75b2718_Postfix {
	jule::Any _field_expr = jule::Any();
	jule::Str _field_op = jule::Str();


	_1a75b2718_Postfix(jule::Any __param_expr, jule::Str __param_op): _field_expr(__param_expr), _field_op(__param_op) {}

	

	_1a75b2718_Postfix(void) = default;

	inline bool operator==(_1a75b2718_Postfix _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1a75b2718_Postfix _other) { return !this->operator==(_other); }


};
struct _1a75b2905_Assign {
	jule::Ptr<_1a64190a9_OperandExprModel> _field_l = jule::Ptr<_1a64190a9_OperandExprModel>();
	jule::Ptr<_1a64190a9_OperandExprModel> _field_r = jule::Ptr<_1a64190a9_OperandExprModel>();
	jule::Ptr<_1d0747985_Token> _field_op = jule::Ptr<_1d0747985_Token>();


	_1a75b2905_Assign(jule::Ptr<_1a64190a9_OperandExprModel> __param_l, jule::Ptr<_1a64190a9_OperandExprModel> __param_r, jule::Ptr<_1d0747985_Token> __param_op): _field_l(__param_l), _field_r(__param_r), _field_op(__param_op) {}

	

	_1a75b2905_Assign(void) = default;

	inline bool operator==(_1a75b2905_Assign _other) {
		return 
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1a75b2905_Assign _other) { return !this->operator==(_other); }


};
struct _1a75b2ae2_MultiAssign {
	jule::Slice<jule::Any> _field_l = jule::Slice<jule::Any>();
	jule::Any _field_r = jule::Any();


	_1a75b2ae2_MultiAssign(jule::Slice<jule::Any> __param_l, jule::Any __param_r): _field_l(__param_l), _field_r(__param_r) {}

	

	_1a75b2ae2_MultiAssign(void) = default;

	inline bool operator==(_1a75b2ae2_MultiAssign _other) {
		return 
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r;
	}

	inline bool operator!=(_1a75b2ae2_MultiAssign _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a758ed00_is_generic_type_match(_1a75b2cce_Match*);
struct _1a75b2cce_Match {
	jule::Ptr<_1a7648b67_Data> _field_expr = jule::Ptr<_1a7648b67_Data>();
	jule::Bool _field_type_match = jule::Bool();
	jule::Slice<jule::Ptr<_1a75b31ec_Case>> _field_cases = jule::Slice<jule::Ptr<_1a75b31ec_Case>>();
	jule::Ptr<_1a75b31ec_Case> _field_default = jule::Ptr<_1a75b31ec_Case>();


	_1a75b2cce_Match(jule::Ptr<_1a7648b67_Data> __param_expr, jule::Bool __param_type_match, jule::Slice<jule::Ptr<_1a75b31ec_Case>> __param_cases, jule::Ptr<_1a75b31ec_Case> __param_default): _field_expr(__param_expr), _field_type_match(__param_type_match), _field_cases(__param_cases), _field_default(__param_default) {}

	

	_1a75b2cce_Match(void) = default;

	inline bool operator==(_1a75b2cce_Match _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_type_match == _other._field_type_match &&
			this->_field_cases == _other._field_cases &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1a75b2cce_Match _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a75907a1_is_default(_1a75b31ec_Case*);
struct _1a75b31ec_Case {
	jule::Ptr<_1a75b2cce_Match> _field_owner = jule::Ptr<_1a75b2cce_Match>();
	jule::Ptr<_1a759e606_Scope> _field_scope = jule::Ptr<_1a759e606_Scope>();
	jule::Slice<jule::Ptr<_1a7648b67_Data>> _field_exprs = jule::Slice<jule::Ptr<_1a7648b67_Data>>();
	jule::Ptr<_1a75b31ec_Case> _field_next = jule::Ptr<_1a75b31ec_Case>();


	_1a75b31ec_Case(jule::Ptr<_1a75b2cce_Match> __param_owner, jule::Ptr<_1a759e606_Scope> __param_scope, jule::Slice<jule::Ptr<_1a7648b67_Data>> __param_exprs, jule::Ptr<_1a75b31ec_Case> __param_next): _field_owner(__param_owner), _field_scope(__param_scope), _field_exprs(__param_exprs), _field_next(__param_next) {}

	

	_1a75b31ec_Case(void) = default;

	inline bool operator==(_1a75b31ec_Case _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_scope == _other._field_scope &&
			this->_field_exprs == _other._field_exprs &&
			this->_field_next == _other._field_next;
	}

	inline bool operator!=(_1a75b31ec_Case _other) { return !this->operator==(_other); }


};
struct _1a75b33d9_FallSt {
	jule::U64 _field_dest_case = jule::U64();


	_1a75b33d9_FallSt(jule::U64 __param_dest_case): _field_dest_case(__param_dest_case) {}

	

	_1a75b33d9_FallSt(void) = default;

	inline bool operator==(_1a75b33d9_FallSt _other) {
		return 
			this->_field_dest_case == _other._field_dest_case;
	}

	inline bool operator!=(_1a75b33d9_FallSt _other) { return !this->operator==(_other); }


};
struct _1a75b35c6_RetSt {
	jule::Ptr<_1a6429be1_FnIns> _field_func = jule::Ptr<_1a6429be1_FnIns>();
	jule::Slice<jule::Ptr<_1a75ec478_Var>> _field_vars = jule::Slice<jule::Ptr<_1a75ec478_Var>>();
	jule::Any _field_expr = jule::Any();


	_1a75b35c6_RetSt(jule::Ptr<_1a6429be1_FnIns> __param_func, jule::Slice<jule::Ptr<_1a75ec478_Var>> __param_vars, jule::Any __param_expr): _field_func(__param_func), _field_vars(__param_vars), _field_expr(__param_expr) {}

	

	_1a75b35c6_RetSt(void) = default;

	inline bool operator==(_1a75b35c6_RetSt _other) {
		return 
			this->_field_func == _other._field_func &&
			this->_field_vars == _other._field_vars &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1a75b35c6_RetSt _other) { return !this->operator==(_other); }


};
struct _1a75b37b3_ScopeLabel {
	jule::Ptr<_1d0747985_Token> _field_token = jule::Ptr<_1d0747985_Token>();
	jule::Ptr<_1a75b233e_Label> _field_label = jule::Ptr<_1a75b233e_Label>();
	jule::I64 _field_pos = jule::I64();
	jule::Ptr<_1a75b3b8c_ScopeChecker> _field_scope = jule::Ptr<_1a75b3b8c_ScopeChecker>();
	jule::Bool _field_used = jule::Bool();


	_1a75b37b3_ScopeLabel(jule::Ptr<_1d0747985_Token> __param_token, jule::Ptr<_1a75b233e_Label> __param_label, jule::I64 __param_pos, jule::Ptr<_1a75b3b8c_ScopeChecker> __param_scope, jule::Bool __param_used): _field_token(__param_token), _field_label(__param_label), _field_pos(__param_pos), _field_scope(__param_scope), _field_used(__param_used) {}

	

	_1a75b37b3_ScopeLabel(void) = default;

	inline bool operator==(_1a75b37b3_ScopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_1a75b37b3_ScopeLabel _other) { return !this->operator==(_other); }


};
struct _1a75b39a0_ScopeGoto {
	jule::Ptr<_1d07606c3_GotoSt> _field_gt = jule::Ptr<_1d07606c3_GotoSt>();
	jule::Ptr<_1a75b3b8c_ScopeChecker> _field_scope = jule::Ptr<_1a75b3b8c_ScopeChecker>();
	jule::I64 _field_pos = jule::I64();


	_1a75b39a0_ScopeGoto(jule::Ptr<_1d07606c3_GotoSt> __param_gt, jule::Ptr<_1a75b3b8c_ScopeChecker> __param_scope, jule::I64 __param_pos): _field_gt(__param_gt), _field_scope(__param_scope), _field_pos(__param_pos) {}

	

	_1a75b39a0_ScopeGoto(void) = default;

	inline bool operator==(_1a75b39a0_ScopeGoto _other) {
		return 
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1a75b39a0_ScopeGoto _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a75c928a_ImportInfo> _1a75a1493_find_package(_1a75b3b8c_ScopeChecker*,jule::Str);
inline jule::Ptr<_1a75c928a_ImportInfo> _1a759253e_select_package(_1a75b3b8c_ScopeChecker*,jule::Fn<jule::Bool(jule::Ptr<_1a75c928a_ImportInfo>)>);
inline jule::Ptr<_1a75ec478_Var> _1a757e0ec_find_var(_1a75b3b8c_ScopeChecker*,jule::Str,jule::Bool);
inline jule::Ptr<_1a7672168_TypeAlias> _1a75b3e9a_find_type_alias(_1a75b3b8c_ScopeChecker*,jule::Str,jule::Bool);
inline jule::Ptr<_1a64147be_Struct> _1a75b4352_find_struct(_1a75b3b8c_ScopeChecker*,jule::Str,jule::Bool);
inline jule::Ptr<_1a6426a45_Fn> _1a75b4709_find_fn(_1a75b3b8c_ScopeChecker*,jule::Str,jule::Bool);
inline jule::Ptr<_1a7465bd7_Trait> _1a75b4a17_find_trait(_1a75b3b8c_ScopeChecker*,jule::Str);
inline jule::Ptr<_1a7467de8_Enum> _1a75b4d25_find_enum(_1a75b3b8c_ScopeChecker*,jule::Str);
inline jule::Bool _1a75b5155_is_unsafe(jule::Ptr<_1a75b3b8c_ScopeChecker>);
inline jule::Bool _1a75b53b9_is_root(_1a75b3b8c_ScopeChecker*);
inline void _1a75b5595_stop(_1a75b3b8c_ScopeChecker*);
inline jule::Bool _1a75b5809_stopped(_1a75b3b8c_ScopeChecker*);
inline jule::Bool _1a75b5a6d_is_deferred(jule::Ptr<_1a75b3b8c_ScopeChecker>);
inline jule::Ptr<_1a75b3b8c_ScopeChecker> _1a75b5cd2_get_root(jule::Ptr<_1a75b3b8c_ScopeChecker>);
inline jule::Ptr<_1a75b3b8c_ScopeChecker> _1a75b6046_get_hard_root(jule::Ptr<_1a75b3b8c_ScopeChecker>);
inline jule::Ptr<_1a75b233e_Label> _1a75b6354_find_label(_1a75b3b8c_ScopeChecker*,jule::Str);
inline jule::Ptr<_1a75b37b3_ScopeLabel> _1a75b6662_find_label_scope(jule::Ptr<_1a75b3b8c_ScopeChecker>,jule::Str);
inline jule::Ptr<_1a75b37b3_ScopeLabel> _1a75b6970_find_label_all(_1a75b3b8c_ScopeChecker*,jule::Str);
inline jule::Bool _1a75b6d27_is_duplicated_ident(_1a75b3b8c_ScopeChecker*,jule::U64,jule::Str);
inline void _1a75b709c_check_var_decl(jule::Ptr<_1a75b3b8c_ScopeChecker>,jule::Ptr<_1d07646d8_VarDecl>);
inline void _1a75b7322_check_type_alias_decl(jule::Ptr<_1a75b3b8c_ScopeChecker>,jule::Ptr<_1d0767e5b_TypeAliasDecl>);
inline jule::Ptr<_1a759e606_Scope> _1a75b7586_get_child(_1a75b3b8c_ScopeChecker*);
inline void _1a75b794e_check_child_ssc(jule::Ptr<_1a75b3b8c_ScopeChecker>,jule::Ptr<_1d0761c13_ScopeTree>&,jule::Ptr<_1a759e606_Scope>&,jule::Ptr<_1a75b3b8c_ScopeChecker>&);
inline jule::Ptr<_1a759e606_Scope> _1a75b7d06_check_child_sc(jule::Ptr<_1a75b3b8c_ScopeChecker>,jule::Ptr<_1d0761c13_ScopeTree>&,jule::Ptr<_1a75b3b8c_ScopeChecker>&);
inline jule::Ptr<_1a759e606_Scope> _1a75b8114_check_child(jule::Ptr<_1a75b3b8c_ScopeChecker>,jule::Ptr<_1d0761c13_ScopeTree>&);
inline void _1a75b8389_check_anon_scope(jule::Ptr<_1a75b3b8c_ScopeChecker>,jule::Ptr<_1d0761c13_ScopeTree>);
inline void _1a75b86a8_process_error_call(jule::Ptr<_1a75b3b8c_ScopeChecker>,jule::Ptr<_1a6422722_BuiltinErrorCallExprModel>&,jule::Ptr<_1d0747985_Token>);
inline void _1a75b892d_check_expr(jule::Ptr<_1a75b3b8c_ScopeChecker>,jule::Ptr<_1d075b14c_Expr>);
inline void _1a75b8ba3_check_co_expr(jule::Ptr<_1a75b3b8c_ScopeChecker>,jule::Ptr<_1d075bd1d_CoExpr>);
inline jule::Ptr<_1a75a6003_If> _1a75b8eb1_check_if(jule::Ptr<_1a75b3b8c_ScopeChecker>,jule::Ptr<_1d0766e5a_If>);
inline jule::Ptr<_1a7550a80_Else> _1a75b92be_check_else(jule::Ptr<_1a75b3b8c_ScopeChecker>,jule::Ptr<_1d0767312_Else>);
inline void _1a75b9544_check_conditional(jule::Ptr<_1a75b3b8c_ScopeChecker>,jule::Ptr<_1d0767785_Conditional>);
inline jule::Ptr<_1a759e606_Scope> _1a75b9995_check_iter_scope_sc(jule::Ptr<_1a75b3b8c_ScopeChecker>,jule::U64,jule::Ptr<_1d0761c13_ScopeTree>,jule::Ptr<_1a75b3b8c_ScopeChecker>);
inline jule::Ptr<_1a759e606_Scope> _1a75b9d4c_check_iter_scope(jule::Ptr<_1a75b3b8c_ScopeChecker>,jule::U64,jule::Ptr<_1d0761c13_ScopeTree>&);
inline void _1a75ba0c2_check_inf_iter(jule::Ptr<_1a75b3b8c_ScopeChecker>,jule::Ptr<_1d0765112_Iter>&);
inline void _1a75ba347_check_while_iter(jule::Ptr<_1a75b3b8c_ScopeChecker>,jule::Ptr<_1d0765112_Iter>&);
inline void _1a75ba5bc_check_range_iter(jule::Ptr<_1a75b3b8c_ScopeChecker>,jule::Ptr<_1d0765112_Iter>&);
inline void _1a75ba842_check_iter(jule::Ptr<_1a75b3b8c_ScopeChecker>,jule::Ptr<_1d0765112_Iter>);
inline jule::Bool _1a75bab50_check_valid_cont_label(jule::Ptr<_1a75b3b8c_ScopeChecker>,jule::U64);
inline jule::Bool _1a75baea2_check_valid_break_label(jule::Ptr<_1a75b3b8c_ScopeChecker>,jule::U64);
inline jule::Ptr<_1a758e926_ContSt> _1a75bb29e_check_cont_valid_scope(jule::Ptr<_1a75b3b8c_ScopeChecker>,jule::Ptr<_1d07669d7_ContSt>);
inline void _1a75bb524_check_cont(jule::Ptr<_1a75b3b8c_ScopeChecker>,jule::Ptr<_1d07669d7_ContSt>);
inline void _1a75bb799_check_label(jule::Ptr<_1a75b3b8c_ScopeChecker>,jule::Ptr<_1d076031b_LabelSt>);
inline void _1a75bba1e_push_goto(jule::Ptr<_1a75b3b8c_ScopeChecker>,jule::Ptr<_1d07606c3_GotoSt>);
inline void _1a75bbc94_check_postfix(jule::Ptr<_1a75b3b8c_ScopeChecker>,jule::Ptr<_1d0761608_AssignSt>);
inline jule::Bool _1a75bc0a2_is_new_assign_ident(_1a75b3b8c_ScopeChecker*,jule::Str);
inline jule::Bool _1a75bc547_check_structure_assign_op(jule::Ptr<_1a75b3b8c_ScopeChecker>,jule::Ptr<_1a641744d_StructIns>&,jule::Ptr<_1d0761608_AssignSt>&,jule::Ptr<_1a7648b67_Data>&);
inline void _1a75bc7ab_check_single_assign(jule::Ptr<_1a75b3b8c_ScopeChecker>,jule::Ptr<_1d0761608_AssignSt>&);
inline void _1a75bcd2d___process_end_part_of_multi_assign(_1a75b3b8c_ScopeChecker*,jule::Ptr<_1a75b2ae2_MultiAssign>,jule::Ptr<_1d0761608_AssignSt>,jule::Ptr<_1d07610b9_AssignLeft>,jule::Ptr<_1a7648b67_Data>,jule::Ptr<_1a7648b67_Data>);
inline void _1a75bd070_check_ret_multi_assign(jule::Ptr<_1a75b3b8c_ScopeChecker>,jule::Ptr<_1d0761608_AssignSt>&);
inline void _1a75bd2e5_check_multi_assign(jule::Ptr<_1a75b3b8c_ScopeChecker>,jule::Ptr<_1d0761608_AssignSt>&);
inline void _1a75bd56a_check_assign_st(jule::Ptr<_1a75b3b8c_ScopeChecker>,jule::Ptr<_1d0761608_AssignSt>);
inline jule::Ptr<_1a759e606_Scope> _1a75bd922_check_case_scope(jule::Ptr<_1a75b3b8c_ScopeChecker>,jule::Ptr<_1a75b31ec_Case>&,jule::Ptr<_1d0761c13_ScopeTree>&);
inline jule::Ptr<_1a75b31ec_Case> _1a75bde1c_check_case(jule::Ptr<_1a75b3b8c_ScopeChecker>,jule::Ptr<_1a75b2cce_Match>,jule::I64,jule::Ptr<_1d07683ce_Case>,jule::Ptr<_1a7648b67_Data>);
inline void _1a75be2d5_check_cases(jule::Ptr<_1a75b3b8c_ScopeChecker>,jule::Ptr<_1d0768aa5_MatchCase>&,jule::Ptr<_1a75b2cce_Match>,jule::Ptr<_1a7648b67_Data>);
inline jule::Ptr<_1a75b31ec_Case> _1a75be68c_check_default(jule::Ptr<_1a75b3b8c_ScopeChecker>,jule::Ptr<_1a75b2cce_Match>,jule::Ptr<_1d0767312_Else>);
inline void _1a75be912_check_comptime_panic(_1a75b3b8c_ScopeChecker*,jule::Ptr<_1a759e606_Scope>&);
inline void _1a75bec31_push_type_match(jule::Ptr<_1a75b3b8c_ScopeChecker>,jule::Ptr<_1a75b2cce_Match>,jule::Ptr<_1d0768aa5_MatchCase>&);
inline void _1a75beea6_check_type_match(jule::Ptr<_1a75b3b8c_ScopeChecker>,jule::Ptr<_1d0768aa5_MatchCase>&);
inline void _1a75c022b_check_common_match(jule::Ptr<_1a75b3b8c_ScopeChecker>,jule::Ptr<_1d0768aa5_MatchCase>&);
inline void _1a75c04a1_check_match(jule::Ptr<_1a75b3b8c_ScopeChecker>,jule::Ptr<_1d0768aa5_MatchCase>);
inline void _1a75c0726_check_fall(jule::Ptr<_1a75b3b8c_ScopeChecker>,jule::Ptr<_1d07609ae_FallSt>);
inline jule::Ptr<_1a758eb13_BreakSt> _1a75c0a34_check_break_with_label(jule::Ptr<_1a75b3b8c_ScopeChecker>,jule::Ptr<_1d0766630_BreakSt>);
inline jule::Ptr<_1a758eb13_BreakSt> _1a75c0d42_check_plain_break(jule::Ptr<_1a75b3b8c_ScopeChecker>,jule::Ptr<_1d0766630_BreakSt>);
inline void _1a75c10b7_check_break(jule::Ptr<_1a75b3b8c_ScopeChecker>,jule::Ptr<_1d0766630_BreakSt>);
inline void _1a75c133c_check_ret(jule::Ptr<_1a75b3b8c_ScopeChecker>,jule::Ptr<_1d0764a90_RetSt>);
inline void _1a75c15b2_check_use_expr(jule::Ptr<_1a75b3b8c_ScopeChecker>,jule::Ptr<_1d075b339_UseExpr>);
inline void _1a75c1837_check_node(jule::Ptr<_1a75b3b8c_ScopeChecker>,jule::Any&);
inline void _1a75c1a13_check_result(jule::Ptr<_1a75b3b8c_ScopeChecker>);
inline void _1a75c1bde_check_tree(jule::Ptr<_1a75b3b8c_ScopeChecker>);
inline void _1a75c200d_check_goto(_1a75b3b8c_ScopeChecker*,jule::Ptr<_1a75b39a0_ScopeGoto>&,jule::Ptr<_1a75b37b3_ScopeLabel>&);
inline void _1a75c21d9_check_gotos(_1a75b3b8c_ScopeChecker*);
inline void _1a75c23b5_check_labels(_1a75b3b8c_ScopeChecker*);
inline void _1a75c2591_check_vars(_1a75b3b8c_ScopeChecker*);
inline void _1a75c276c_check_aliases(_1a75b3b8c_ScopeChecker*);
inline void _1a75c2a8b_check(jule::Ptr<_1a75b3b8c_ScopeChecker>,jule::Ptr<_1d0761c13_ScopeTree>&,jule::Ptr<_1a759e606_Scope>&);
inline jule::Ptr<_1a75b3b8c_ScopeChecker> _1a75c2d00_new_child_checker(jule::Ptr<_1a75b3b8c_ScopeChecker>);
struct _1a75b3b8c_ScopeChecker {
	jule::Ptr<_1d0747985_Token> _field_called_from = jule::Ptr<_1d0747985_Token>();
	jule::Ptr<_1a75d1e74_Sema> _field_s = jule::Ptr<_1a75d1e74_Sema>();
	jule::Ptr<_1a6429be1_FnIns> _field_owner = jule::Ptr<_1a6429be1_FnIns>();
	jule::Ptr<_1a75b3b8c_ScopeChecker> _field_parent = jule::Ptr<_1a75b3b8c_ScopeChecker>();
	jule::I64 _field_child_index = jule::I64();
	jule::Ptr<_1a76439db_SymbolTable> _field_table = jule::Ptr<_1a76439db_SymbolTable>();
	jule::Ptr<_1a759e606_Scope> _field_scope = jule::Ptr<_1a759e606_Scope>();
	jule::Ptr<_1d0761c13_ScopeTree> _field_tree = jule::Ptr<_1d0761c13_ScopeTree>();
	jule::Ptr<_1a6429be1_FnIns> _field_result = jule::Ptr<_1a6429be1_FnIns>();
	jule::U64 _field_it = jule::U64();
	jule::U64 _field_cse = jule::U64();
	jule::Ptr<jule::Slice<jule::Ptr<_1a75b37b3_ScopeLabel>>> _field_labels = jule::Ptr<jule::Slice<jule::Ptr<_1a75b37b3_ScopeLabel>>>();
	jule::Ptr<jule::Slice<jule::Ptr<_1a75b39a0_ScopeGoto>>> _field_gotos = jule::Ptr<jule::Slice<jule::Ptr<_1a75b39a0_ScopeGoto>>>();
	jule::I64 _field_i = jule::I64();


	_1a75b3b8c_ScopeChecker(jule::Ptr<_1d0747985_Token> __param_called_from, jule::Ptr<_1a75d1e74_Sema> __param_s, jule::Ptr<_1a6429be1_FnIns> __param_owner, jule::Ptr<_1a75b3b8c_ScopeChecker> __param_parent, jule::I64 __param_child_index, jule::Ptr<_1a76439db_SymbolTable> __param_table, jule::Ptr<_1a759e606_Scope> __param_scope, jule::Ptr<_1d0761c13_ScopeTree> __param_tree, jule::Ptr<_1a6429be1_FnIns> __param_result, jule::U64 __param_it, jule::U64 __param_cse, jule::Ptr<jule::Slice<jule::Ptr<_1a75b37b3_ScopeLabel>>> __param_labels, jule::Ptr<jule::Slice<jule::Ptr<_1a75b39a0_ScopeGoto>>> __param_gotos, jule::I64 __param_i): _field_called_from(__param_called_from), _field_s(__param_s), _field_owner(__param_owner), _field_parent(__param_parent), _field_child_index(__param_child_index), _field_table(__param_table), _field_scope(__param_scope), _field_tree(__param_tree), _field_result(__param_result), _field_it(__param_it), _field_cse(__param_cse), _field_labels(__param_labels), _field_gotos(__param_gotos), _field_i(__param_i) {}

	

	_1a75b3b8c_ScopeChecker(void) = default;

	inline bool operator==(_1a75b3b8c_ScopeChecker _other) {
		return 
			this->_field_called_from == _other._field_called_from &&
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_child_index == _other._field_child_index &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1a75b3b8c_ScopeChecker _other) { return !this->operator==(_other); }


};
inline void _1a75c3d9a_check_cdef(_1a75c395a_DirectiveChecker*,jule::Ptr<_1d06c9ecd_Directive>&);
inline void _1a75c4120_check_typedef(_1a75c395a_DirectiveChecker*,jule::Ptr<_1d06c9ecd_Directive>&);
inline void _1a75c4395_check_derive(_1a75c395a_DirectiveChecker*,jule::Ptr<_1d06c9ecd_Directive>&);
inline void _1a75c461a_check_namespace(_1a75c395a_DirectiveChecker*,jule::Ptr<_1d06c9ecd_Directive>&);
inline void _1a75c4890_check_deprecated(_1a75c395a_DirectiveChecker*,jule::Ptr<_1d06c9ecd_Directive>&);
inline void _1a75c4b15_check_test(_1a75c395a_DirectiveChecker*,jule::Ptr<_1d06c9ecd_Directive>&);
inline void _1a75c4d8a_check_directive(_1a75c395a_DirectiveChecker*,jule::Ptr<_1d06c9ecd_Directive>&);
inline void _1a75c5066_check(_1a75c395a_DirectiveChecker*);
struct _1a75c395a_DirectiveChecker {
	jule::Ptr<_1a75d1e74_Sema> _field_s = jule::Ptr<_1a75d1e74_Sema>();
	jule::Ptr<jule::Slice<jule::Ptr<_1d06c9ecd_Directive>>> _field_d = jule::Ptr<jule::Slice<jule::Ptr<_1d06c9ecd_Directive>>>();
	jule::Any _field_o = jule::Any();


	_1a75c395a_DirectiveChecker(jule::Ptr<_1a75d1e74_Sema> __param_s, jule::Ptr<jule::Slice<jule::Ptr<_1d06c9ecd_Directive>>> __param_d, jule::Any __param_o): _field_s(__param_s), _field_d(__param_d), _field_o(__param_o) {}

	

	_1a75c395a_DirectiveChecker(void) = default;

	inline bool operator==(_1a75c395a_DirectiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_1a75c395a_DirectiveChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a75c928a_ImportInfo> _1a75c9796_find_package(_1a75c928a_ImportInfo*,jule::Str);
inline jule::Ptr<_1a75c928a_ImportInfo> _1a75c9aa4_select_package(_1a75c928a_ImportInfo*,jule::Fn<jule::Bool(jule::Ptr<_1a75c928a_ImportInfo>)>);
inline jule::Ptr<_1a75ec478_Var> _1a75c9e5b_find_var(_1a75c928a_ImportInfo*,jule::Str,jule::Bool);
inline jule::Ptr<_1a7672168_TypeAlias> _1a75ca313_find_type_alias(_1a75c928a_ImportInfo*,jule::Str,jule::Bool);
inline jule::Ptr<_1a64147be_Struct> _1a75ca6ba_find_struct(_1a75c928a_ImportInfo*,jule::Str,jule::Bool);
inline jule::Ptr<_1a6426a45_Fn> _1a75caa72_find_fn(_1a75c928a_ImportInfo*,jule::Str,jule::Bool);
inline jule::Ptr<_1a7465bd7_Trait> _1a75cad80_find_trait(_1a75c928a_ImportInfo*,jule::Str);
inline jule::Ptr<_1a7467de8_Enum> _1a75cb18d_find_enum(_1a75c928a_ImportInfo*,jule::Str);
inline jule::Bool _1a75cb5ab_is_lookupable(_1a75c928a_ImportInfo*,jule::Str);
inline jule::Bool _1a75cb8b9_exist_ident(_1a75c928a_ImportInfo*,jule::Str);
inline jule::Bool _1a75cbb72_is_accessible_via_selection(_1a75c928a_ImportInfo*);
struct _1a75c928a_ImportInfo {
	jule::Ptr<_1d0747985_Token> _field_token = jule::Ptr<_1d0747985_Token>();
	jule::Str _field_path = jule::Str();
	jule::Str _field_link_path = jule::Str();
	jule::Str _field_ident = jule::Str();
	jule::Str _field_alias = jule::Str();
	jule::Bool _field_duplicate = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_std = jule::Bool();
	jule::Bool _field_import_all = jule::Bool();
	jule::Slice<jule::Ptr<_1d0747985_Token>> _field_selected = jule::Slice<jule::Ptr<_1d0747985_Token>>();
	jule::Ptr<_1a75cbe4c_Package> _field_package = jule::Ptr<_1a75cbe4c_Package>();
	jule::I64 _field_mod_id = jule::I64();


	_1a75c928a_ImportInfo(jule::Ptr<_1d0747985_Token> __param_token, jule::Str __param_path, jule::Str __param_link_path, jule::Str __param_ident, jule::Str __param_alias, jule::Bool __param_duplicate, jule::Bool __param_cpp_linked, jule::Bool __param_std, jule::Bool __param_import_all, jule::Slice<jule::Ptr<_1d0747985_Token>> __param_selected, jule::Ptr<_1a75cbe4c_Package> __param_package, jule::I64 __param_mod_id): _field_token(__param_token), _field_path(__param_path), _field_link_path(__param_link_path), _field_ident(__param_ident), _field_alias(__param_alias), _field_duplicate(__param_duplicate), _field_cpp_linked(__param_cpp_linked), _field_std(__param_std), _field_import_all(__param_import_all), _field_selected(__param_selected), _field_package(__param_package), _field_mod_id(__param_mod_id) {}

	

	_1a75c928a_ImportInfo(void) = default;

	inline bool operator==(_1a75c928a_ImportInfo _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_path == _other._field_path &&
			this->_field_link_path == _other._field_link_path &&
			this->_field_ident == _other._field_ident &&
			this->_field_alias == _other._field_alias &&
			this->_field_duplicate == _other._field_duplicate &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_std == _other._field_std &&
			this->_field_import_all == _other._field_import_all &&
			this->_field_selected == _other._field_selected &&
			this->_field_package == _other._field_package &&
			this->_field_mod_id == _other._field_mod_id;
	}

	inline bool operator!=(_1a75c928a_ImportInfo _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a75c928a_ImportInfo> _1a75cc414_find_package(_1a75cbe4c_Package*,jule::Str);
inline jule::Ptr<_1a75c928a_ImportInfo> _1a75cc722_select_package(_1a75cbe4c_Package*,jule::Fn<jule::Bool(jule::Ptr<_1a75c928a_ImportInfo>)>);
inline jule::Ptr<_1a75ec478_Var> _1a75ccac9_find_var(_1a75cbe4c_Package*,jule::Str,jule::Bool);
inline jule::Ptr<_1a7672168_TypeAlias> _1a75cce81_find_type_alias(_1a75cbe4c_Package*,jule::Str,jule::Bool);
inline jule::Ptr<_1a64147be_Struct> _1a75cd338_find_struct(_1a75cbe4c_Package*,jule::Str,jule::Bool);
inline jule::Ptr<_1a6426a45_Fn> _1a75cd6e0_find_fn(_1a75cbe4c_Package*,jule::Str,jule::Bool);
inline jule::Ptr<_1a7465bd7_Trait> _1a75cd9ed_find_trait(_1a75cbe4c_Package*,jule::Str);
inline jule::Ptr<_1a7467de8_Enum> _1a75cdd0b_find_enum(_1a75cbe4c_Package*,jule::Str);
struct _1a75cbe4c_Package {
	jule::Slice<jule::Ptr<_1a76439db_SymbolTable>> _field_files = jule::Slice<jule::Ptr<_1a76439db_SymbolTable>>();


	_1a75cbe4c_Package(jule::Slice<jule::Ptr<_1a76439db_SymbolTable>> __param_files): _field_files(__param_files) {}

	

	_1a75cbe4c_Package(void) = default;

	inline bool operator==(_1a75cbe4c_Package _other) {
		return 
			this->_field_files == _other._field_files;
	}

	inline bool operator!=(_1a75cbe4c_Package _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a75c928a_ImportInfo> _1a75d2480_find_package(_1a75d1e74_Sema*,jule::Str);
inline jule::Ptr<_1a75c928a_ImportInfo> _1a75d278d_select_package(_1a75d1e74_Sema*,jule::Fn<jule::Bool(jule::Ptr<_1a75c928a_ImportInfo>)>);
inline jule::Ptr<_1a75ec478_Var> _1a75d2b45_find_var(_1a75d1e74_Sema*,jule::Str,jule::Bool);
inline jule::Ptr<_1a7672168_TypeAlias> _1a75d2eec_find_type_alias(_1a75d1e74_Sema*,jule::Str,jule::Bool);
inline jule::Ptr<_1a64147be_Struct> _1a75d33a4_find_struct(_1a75d1e74_Sema*,jule::Str,jule::Bool);
inline jule::Ptr<_1a6426a45_Fn> _1a75d375b_find_fn(_1a75d1e74_Sema*,jule::Str,jule::Bool);
inline jule::Ptr<_1a7465bd7_Trait> _1a75d3a69_find_trait(_1a75d1e74_Sema*,jule::Str);
inline jule::Ptr<_1a7467de8_Enum> _1a75d3d77_find_enum(_1a75d1e74_Sema*,jule::Str);
inline jule::Bool _1a75d4251_is_flag(_1a75d1e74_Sema*,jule::I64);
inline void _1a75d44c6_set_current_file(_1a75d1e74_Sema*,jule::Ptr<_1a76439db_SymbolTable>);
inline void _1a75d488e_push_err(_1a75d1e74_Sema*,jule::Ptr<_1d0747985_Token>,jule::Str,jule::Slice<jule::Any>);
inline void _1a75d4bad_push_suggestion(_1a75d1e74_Sema*,jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _1a75d5065_is_accessible_define(_1a75d1e74_Sema*,jule::Bool,jule::Ptr<_1d0747985_Token>);
inline jule::Bool _1a75d54b6_is_duplicated_ident(_1a75d1e74_Sema*,jule::U64,jule::Str,jule::Bool);
inline void _1a75d57d5_check_directives(jule::Ptr<_1a75d1e74_Sema>,jule::Slice<jule::Ptr<_1d06c9ecd_Directive>>&,jule::Any);
inline jule::Bool _1a75d5c36_check_generic_quantity(_1a75d1e74_Sema*,jule::I64,jule::I64,jule::Ptr<_1d0747985_Token>);
inline jule::Bool _1a75d6132_is_duplicated_import_selection(_1a75d1e74_Sema*,jule::U64,jule::Str);
inline jule::Any _1a75d64c8_get_import_def(_1a75d1e74_Sema*,jule::Str,jule::Ptr<_1a75c928a_ImportInfo>&);
inline jule::Bool _1a75d682a_check_import_selections(_1a75d1e74_Sema*,jule::Ptr<_1a75c928a_ImportInfo>&);
inline jule::Bool _1a75d6b6b_is_use_alias_duplication(_1a75d1e74_Sema*,jule::Ptr<_1a75c928a_ImportInfo>&);
inline jule::Bool _1a75d6e68_check_import(_1a75d1e74_Sema*,jule::Ptr<_1a75c928a_ImportInfo>&);
inline void _1a75d7144_check_imports(_1a75d1e74_Sema*);
inline void _1a75d7320_impl_file_impls(jule::Ptr<_1a75d1e74_Sema>);
inline void _1a75d74eb_impl_impls(jule::Ptr<_1a75d1e74_Sema>);
inline void _1a75d76c7_check_enums(jule::Ptr<_1a75d1e74_Sema>);
inline jule::Bool _1a75d7b28_check_type_with_refers(jule::Ptr<_1a75d1e74_Sema>,jule::Ptr<_1a7676c3e_TypeSymbol>&,jule::Trait<_1a768b25e_Lookup>,jule::Ptr<_1a768181a_Referencer>);
inline jule::Bool _1a75d7ed0_check_type(jule::Ptr<_1a75d1e74_Sema>,jule::Ptr<_1a7676c3e_TypeSymbol>&,jule::Trait<_1a768b25e_Lookup>);
inline jule::Ptr<_1a7672da0_TypeKind> _1a75d83cb_build_type_with_generics(jule::Ptr<_1a75d1e74_Sema>,jule::Ptr<_1d0759c1c_TypeDecl>&,jule::Slice<jule::Ptr<_1a7672168_TypeAlias>>);
inline jule::Ptr<_1a7672da0_TypeKind> _1a75d86c8_build_type(jule::Ptr<_1a75d1e74_Sema>,jule::Ptr<_1d0759c1c_TypeDecl>&);
inline jule::Ptr<_1a7672da0_TypeKind> _1a75d89d6_select_type(jule::Ptr<_1a75d1e74_Sema>,jule::Ptr<_1d0759c1c_TypeDecl>&);
inline jule::Ptr<_1a764a6d5_Eval> _1a75d8e37_evalpd(jule::Ptr<_1a75d1e74_Sema>,jule::Trait<_1a768b25e_Lookup>,jule::Ptr<_1a7672da0_TypeKind>,jule::Ptr<_1a75ec478_Var>);
inline jule::Ptr<_1a764a6d5_Eval> _1a75d92de_evalp(jule::Ptr<_1a75d1e74_Sema>,jule::Trait<_1a768b25e_Lookup>,jule::Ptr<_1a7672da0_TypeKind>);
inline jule::Ptr<_1a764a6d5_Eval> _1a75d95ec_eval(jule::Ptr<_1a75d1e74_Sema>,jule::Trait<_1a768b25e_Lookup>);
inline jule::Bool _1a75d9ae7_check_assign_type(jule::Ptr<_1a75d1e74_Sema>,jule::Bool,jule::Ptr<_1a7672da0_TypeKind>&,jule::Ptr<_1a7648b67_Data>&,jule::Ptr<_1d0747985_Token>);
inline jule::Bool _1a75da08c_check_type_compatibility(jule::Ptr<_1a75d1e74_Sema>,jule::Ptr<_1a7672da0_TypeKind>&,jule::Ptr<_1a7672da0_TypeKind>&,jule::Ptr<_1d0747985_Token>&);
inline jule::Ptr<_1a7672da0_TypeKind> _1a75da477_build_non_generic_type_kind(jule::Ptr<_1a75d1e74_Sema>,jule::Ptr<_1d0759c1c_TypeDecl>&,jule::Slice<jule::Ptr<_1d075ee64_GenericDecl>>&);
inline void _1a75da730_build_fn_non_generic_type_kinds(jule::Ptr<_1a75d1e74_Sema>,jule::Ptr<_1a6429be1_FnIns>&);
inline jule::Ptr<_1a6429be1_FnIns> _1a75daa71_get_trait_check_fn_kind(jule::Ptr<_1a75d1e74_Sema>,jule::Ptr<_1a6426a45_Fn>&);
inline jule::Bool _1a75dad6d_reload_fn_ins_types(jule::Ptr<_1a75d1e74_Sema>,jule::Ptr<_1a6429be1_FnIns>&);
inline jule::Bool _1a75db335_check_ref_validity_for_init_expr(jule::Ptr<_1a75d1e74_Sema>,jule::Bool,jule::Ptr<_1a7648b67_Data>&,jule::Ptr<_1d0747985_Token>&);
inline jule::Bool _1a75db91d_check_validity_for_init_expr(jule::Ptr<_1a75d1e74_Sema>,jule::Bool,jule::Bool,jule::Ptr<_1a7672da0_TypeKind>&,jule::Ptr<_1a7648b67_Data>&,jule::Ptr<_1d0747985_Token>&);
inline jule::Bool _1a75dbcc5_check_type_alias_decl_kind(jule::Ptr<_1a75d1e74_Sema>,jule::Ptr<_1a7672168_TypeAlias>&,jule::Trait<_1a768b25e_Lookup>);
inline void _1a75dc0d3_check_type_alias_decl(jule::Ptr<_1a75d1e74_Sema>,jule::Ptr<_1a7672168_TypeAlias>&,jule::Trait<_1a768b25e_Lookup>);
inline void _1a75dc39c_check_type_alias_decl_dup(jule::Ptr<_1a75d1e74_Sema>,jule::Ptr<_1a7672168_TypeAlias>&);
inline jule::Bool _1a75dc600_check_type_alias_decls(jule::Ptr<_1a75d1e74_Sema>);
inline void _1a75dc875_check_enum_items_dup(_1a75d1e74_Sema*,jule::Ptr<_1a7467de8_Enum>);
inline void _1a75dcaea_check_enum_items_str(jule::Ptr<_1a75d1e74_Sema>,jule::Ptr<_1a7467de8_Enum>&);
inline void _1a75dcd70_check_enum_items_int(jule::Ptr<_1a75d1e74_Sema>,jule::Ptr<_1a7467de8_Enum>&);
inline void _1a75dd0e5_check_enum_decl(jule::Ptr<_1a75d1e74_Sema>,jule::Ptr<_1a7467de8_Enum>&);
inline jule::Bool _1a75dd359_check_enum_decls(jule::Ptr<_1a75d1e74_Sema>);
inline jule::Bool _1a75dd667_check_decl_generics(_1a75d1e74_Sema*,jule::Slice<jule::Ptr<_1d075ee64_GenericDecl>>&);
inline jule::Bool _1a75dd9b9_check_fn_decl_params_dup(_1a75d1e74_Sema*,jule::Ptr<_1a6426a45_Fn>&);
inline jule::Bool _1a75ddd0a_check_fn_decl_result_dup(_1a75d1e74_Sema*,jule::Ptr<_1a6426a45_Fn>&);
inline void _1a75de06e_check_fn_decl_types(jule::Ptr<_1a75d1e74_Sema>,jule::Ptr<_1a6426a45_Fn>&);
inline void _1a75de338_check_fn_decl_prototype(jule::Ptr<_1a75d1e74_Sema>,jule::Ptr<_1a6426a45_Fn>&);
inline void _1a75de5e1_check_trait_decl_method(jule::Ptr<_1a75d1e74_Sema>,jule::Ptr<_1a6426a45_Fn>&);
inline void _1a75de899_check_trait_decl_methods(jule::Ptr<_1a75d1e74_Sema>,jule::Ptr<_1a7465bd7_Trait>&);
inline void _1a75deb0d_check_trait_decl(jule::Ptr<_1a75d1e74_Sema>,jule::Ptr<_1a7465bd7_Trait>&);
inline jule::Bool _1a75ded72_check_trait_decls(jule::Ptr<_1a75d1e74_Sema>);
inline jule::Bool _1a75e026d_check_trait_impl_methods(_1a75d1e74_Sema*,jule::Ptr<_1a7465bd7_Trait>&,jule::Ptr<_1a746936c_Impl>&);
inline jule::Bool _1a75e0614_impl_to_struct(jule::Ptr<_1a75d1e74_Sema>,jule::Ptr<_1a64147be_Struct>&,jule::Ptr<_1a746936c_Impl>&);
inline void _1a75e0889_impl_trait(jule::Ptr<_1a75d1e74_Sema>,jule::Ptr<_1a746936c_Impl>&);
inline void _1a75e0b0e_impl_struct(jule::Ptr<_1a75d1e74_Sema>,jule::Ptr<_1a746936c_Impl>&);
inline void _1a75e0d84_impl_impl(jule::Ptr<_1a75d1e74_Sema>,jule::Ptr<_1a746936c_Impl>&);
inline void _1a75e11a3_check_var_decl(jule::Ptr<_1a75d1e74_Sema>,jule::Ptr<_1a75ec478_Var>&,jule::Trait<_1a768b25e_Lookup>);
inline void _1a75e1428_check_global_var_decl(jule::Ptr<_1a75d1e74_Sema>,jule::Ptr<_1a75ec478_Var>&);
inline jule::Bool _1a75e168c_check_global_decls(jule::Ptr<_1a75d1e74_Sema>);
inline jule::Bool _1a75e1a88_check_struct_trait_impl(jule::Ptr<_1a75d1e74_Sema>,jule::Ptr<_1a64147be_Struct>&,jule::Ptr<_1a7465bd7_Trait>&);
inline jule::Bool _1a75e1d85_check_struct_impls(jule::Ptr<_1a75d1e74_Sema>,jule::Ptr<_1a64147be_Struct>&);
inline jule::Bool _1a75e2193_check_struct_fields(jule::Ptr<_1a75d1e74_Sema>,jule::Ptr<_1a64147be_Struct>&);
inline jule::Bool _1a75e24e5_check_struct_decl_methods(jule::Ptr<_1a75d1e74_Sema>,jule::Ptr<_1a64147be_Struct>&);
inline void _1a75e2759_check_struct_decl(jule::Ptr<_1a75d1e74_Sema>,jule::Ptr<_1a64147be_Struct>&);
inline jule::Bool _1a75e29bd_check_struct_decls(jule::Ptr<_1a75d1e74_Sema>);
inline void _1a75e2c43_check_fn_decl(jule::Ptr<_1a75d1e74_Sema>,jule::Ptr<_1a6426a45_Fn>&);
inline jule::Bool _1a75e2ea7_check_fn_decls(jule::Ptr<_1a75d1e74_Sema>);
inline void _1a75e3370_push_cycle_error(_1a75d1e74_Sema*,jule::Ptr<_1a64147be_Struct>&,jule::Ptr<_1a64147be_Struct>&,jule::Str&);
inline jule::Bool _1a75e37c1_check_cross_cycle(_1a75d1e74_Sema*,jule::Ptr<_1a64147be_Struct>&,jule::Ptr<_1a64147be_Struct>&,jule::Str&);
inline jule::Bool _1a75e3c88_check_struct_derive_illegal_cycles(_1a75d1e74_Sema*,jule::Str,jule::Ptr<_1a64147be_Struct>&,jule::Ptr<_1a7672da0_TypeKind>&);
inline jule::Bool _1a75e40a7_check_struct_ins_derive_clone(_1a75d1e74_Sema*,jule::Ptr<_1a641744d_StructIns>);
inline jule::Bool _1a75e43e8_check_struct_derive_clone(_1a75d1e74_Sema*,jule::Ptr<_1a64147be_Struct>&);
inline jule::Bool _1a75e464b_check_file_derives(_1a75d1e74_Sema*);
inline void _1a75e4827_check_package_derives(_1a75d1e74_Sema*);
inline void _1a75e4a03_check_package_decls(jule::Ptr<_1a75d1e74_Sema>);
inline void _1a75e4d66_check_data_for_type_inference(_1a75d1e74_Sema*,jule::Ptr<_1a7648b67_Data>&,jule::Ptr<_1d0747985_Token>&);
inline void _1a75e50ca_check_var(jule::Ptr<_1a75d1e74_Sema>,jule::Ptr<_1a75ec478_Var>&);
inline void _1a75e53e9_check_type_var(jule::Ptr<_1a75d1e74_Sema>,jule::Ptr<_1a75ec478_Var>&,jule::Trait<_1a768b25e_Lookup>);
inline void _1a75e55c5_check_global_types(jule::Ptr<_1a75d1e74_Sema>);
inline jule::Ptr<_1a6429be1_FnIns> _1a75e597c_ready_to_check_fn(jule::Ptr<_1a75d1e74_Sema>,jule::Ptr<_1a641744d_StructIns>&,jule::Ptr<_1a6426a45_Fn>&);
inline void _1a75e5c9b_check_type_method(jule::Ptr<_1a75d1e74_Sema>,jule::Ptr<_1a641744d_StructIns>&,jule::Ptr<_1a6426a45_Fn>&);
inline void _1a75e6021_check_field_defaults(jule::Ptr<_1a75d1e74_Sema>,jule::Ptr<_1a641744d_StructIns>&);
inline jule::Ptr<_1a6429be1_FnIns> _1a75e6472_check_struct_ins_op(jule::Ptr<_1a75d1e74_Sema>,jule::Ptr<_1a641744d_StructIns>&,jule::Ptr<_1a6426a45_Fn>&,jule::Fn<jule::Bool(jule::Ptr<_1a6426a45_Fn>)>);
inline void _1a75e66e7_check_struct_ins(jule::Ptr<_1a75d1e74_Sema>,jule::Ptr<_1a641744d_StructIns>&);
inline void _1a75e696c_check_type_struct(jule::Ptr<_1a75d1e74_Sema>,jule::Ptr<_1a64147be_Struct>&);
inline void _1a75e6b48_check_struct_types(jule::Ptr<_1a75d1e74_Sema>);
inline void _1a75e6e12_check_struct_ins_operators(jule::Ptr<_1a75d1e74_Sema>,jule::Ptr<_1a641744d_StructIns>);
inline void _1a75e71ba_check_type_struct_operators(jule::Ptr<_1a75d1e74_Sema>,jule::Ptr<_1a64147be_Struct>&);
inline void _1a75e73c9_check_struct_types_operators(jule::Ptr<_1a75d1e74_Sema>);
inline void _1a75e763d_check_rets(_1a75d1e74_Sema*,jule::Ptr<_1a6429be1_FnIns>&);
inline void _1a75e795c_check_fn_ins_sc(_1a75d1e74_Sema*,jule::Ptr<_1a6429be1_FnIns>&,jule::Ptr<_1a75b3b8c_ScopeChecker>&);
inline void _1a75e7c7b_check_fn_ins_caller(jule::Ptr<_1a75d1e74_Sema>,jule::Ptr<_1a6429be1_FnIns>&,jule::Ptr<_1d0747985_Token>);
inline void _1a75e8001_check_fn_ins(jule::Ptr<_1a75d1e74_Sema>,jule::Ptr<_1a6429be1_FnIns>&);
inline void _1a75e8276_check_type_fn(jule::Ptr<_1a75d1e74_Sema>,jule::Ptr<_1a6426a45_Fn>&);
inline void _1a75e84eb_check_test_fn(_1a75d1e74_Sema*,jule::Ptr<_1a6429be1_FnIns>&);
inline void _1a75e8771_precheck_type_fn(jule::Ptr<_1a75d1e74_Sema>,jule::Ptr<_1a6426a45_Fn>&);
inline void _1a75e894c_precheck_fn_types(jule::Ptr<_1a75d1e74_Sema>);
inline void _1a75e8b28_check_fn_types(jule::Ptr<_1a75d1e74_Sema>);
inline void _1a75e8d04_check_package_types(jule::Ptr<_1a75d1e74_Sema>);
inline void _1a75e8ed0_set_file_sema_fields(jule::Ptr<_1a75d1e74_Sema>);
inline void _1a75e91ab_set_sema_fields(jule::Ptr<_1a75d1e74_Sema>);
inline void _1a75e9431_check(jule::Ptr<_1a75d1e74_Sema>,jule::Slice<jule::Ptr<_1a76439db_SymbolTable>>&);
struct _1a75d1e74_Sema {
	jule::Slice<_1d0019224_Log> _field_errors = jule::Slice<_1d0019224_Log>();
	jule::Slice<jule::Ptr<_1a76439db_SymbolTable>> _field_files = jule::Slice<jule::Ptr<_1a76439db_SymbolTable>>();
	jule::Ptr<_1a76439db_SymbolTable> _field_file = jule::Ptr<_1a76439db_SymbolTable>();
	jule::I64 _field_flags = 0LL;


	_1a75d1e74_Sema(jule::Slice<_1d0019224_Log> __param_errors, jule::Slice<jule::Ptr<_1a76439db_SymbolTable>> __param_files, jule::Ptr<_1a76439db_SymbolTable> __param_file, jule::I64 __param_flags): _field_errors(__param_errors), _field_files(__param_files), _field_file(__param_file), _field_flags(__param_flags) {}

	

	_1a75d1e74_Sema(void) = default;

	inline bool operator==(_1a75d1e74_Sema _other) {
		return 
			this->_field_errors == _other._field_errors &&
			this->_field_files == _other._field_files &&
			this->_field_file == _other._field_file &&
			this->_field_flags == _other._field_flags;
	}

	inline bool operator!=(_1a75d1e74_Sema _other) { return !this->operator==(_other); }


};
inline _1a75e97d8_MissingRetChecker static__1a75e9ba1_new(void);
inline jule::Bool _1a75e9e7b_check_conditional(_1a75e97d8_MissingRetChecker*,jule::Ptr<_1a7550c6c_Conditional>);
inline jule::Bool _1a75ea289_check_match(_1a75e97d8_MissingRetChecker*,jule::Ptr<_1a75b2cce_Match>);
inline jule::Bool _1a75ea597_check_inf_iter(_1a75e97d8_MissingRetChecker*,jule::Ptr<_1a7561893_InfIter>);
inline jule::Bool _1a75ea8a5_check_scope(_1a75e97d8_MissingRetChecker*,jule::Ptr<_1a759e606_Scope>);
inline jule::Bool _1a75eabb3_check(_1a75e97d8_MissingRetChecker*,jule::Ptr<_1a759e606_Scope>);
struct _1a75e97d8_MissingRetChecker {
	jule::Slice<jule::U64> _field_breaked = jule::Slice<jule::U64>();
	jule::Bool _field_falled = jule::Bool();


	_1a75e97d8_MissingRetChecker(jule::Slice<jule::U64> __param_breaked, jule::Bool __param_falled): _field_breaked(__param_breaked), _field_falled(__param_falled) {}

	

	_1a75e97d8_MissingRetChecker(void) = default;

	inline bool operator==(_1a75e97d8_MissingRetChecker _other) {
		return 
			this->_field_breaked == _other._field_breaked &&
			this->_field_falled == _other._field_falled;
	}

	inline bool operator!=(_1a75e97d8_MissingRetChecker _other) { return !this->operator==(_other); }


};
struct _1a75eb4aa_IterRelation {
	jule::Ptr<_1a75ec478_Var> _field_range = jule::Ptr<_1a75ec478_Var>();


	_1a75eb4aa_IterRelation(jule::Ptr<_1a75ec478_Var> __param_range): _field_range(__param_range) {}

	

	_1a75eb4aa_IterRelation(void) = default;

	inline bool operator==(_1a75eb4aa_IterRelation _other) {
		return 
			this->_field_range == _other._field_range;
	}

	inline bool operator!=(_1a75eb4aa_IterRelation _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a75ec830_is_initialized(_1a75ec478_Var*);
inline jule::Bool _1a75eca94_is_type_inferred(_1a75ec478_Var*);
struct _1a75ec478_Var {
	jule::Ptr<_1a759e606_Scope> _field_scope = jule::Ptr<_1a759e606_Scope>();
	jule::Ptr<_1d0747985_Token> _field_token = jule::Ptr<_1d0747985_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_constant = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_used = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Ptr<_1a7676c3e_TypeSymbol> _field_kind = jule::Ptr<_1a7676c3e_TypeSymbol>();
	jule::Ptr<_1a7649be0_Value> _field_value = jule::Ptr<_1a7649be0_Value>();
	jule::Ptr<_1a642cc9e_ReferenceStack> _field_references = jule::Ptr<_1a642cc9e_ReferenceStack>();
	jule::Slice<jule::Ptr<_1d06c9ecd_Directive>> _field_directives = jule::Slice<jule::Ptr<_1d06c9ecd_Directive>>();
	jule::Ptr<_1a75eb4aa_IterRelation> _field_iter_relation = jule::Ptr<_1a75eb4aa_IterRelation>();
	jule::Slice<jule::Ptr<_1a75ec478_Var>> _field_depends = jule::Slice<jule::Ptr<_1a75ec478_Var>>();


	_1a75ec478_Var(jule::Ptr<_1a759e606_Scope> __param_scope, jule::Ptr<_1d0747985_Token> __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Bool __param_constant, jule::Bool __param_mutable, jule::Bool __param_public, jule::Bool __param_used, jule::Bool __param_statically, jule::Bool __param_reference, jule::Ptr<_1a7676c3e_TypeSymbol> __param_kind, jule::Ptr<_1a7649be0_Value> __param_value, jule::Ptr<_1a642cc9e_ReferenceStack> __param_references, jule::Slice<jule::Ptr<_1d06c9ecd_Directive>> __param_directives, jule::Ptr<_1a75eb4aa_IterRelation> __param_iter_relation, jule::Slice<jule::Ptr<_1a75ec478_Var>> __param_depends): _field_scope(__param_scope), _field_token(__param_token), _field_ident(__param_ident), _field_cpp_linked(__param_cpp_linked), _field_constant(__param_constant), _field_mutable(__param_mutable), _field_public(__param_public), _field_used(__param_used), _field_statically(__param_statically), _field_reference(__param_reference), _field_kind(__param_kind), _field_value(__param_value), _field_references(__param_references), _field_directives(__param_directives), _field_iter_relation(__param_iter_relation), _field_depends(__param_depends) {}

	

	_1a75ec478_Var(void) = default;

	inline bool operator==(_1a75ec478_Var _other) {
		return 
			this->_field_scope == _other._field_scope &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_constant == _other._field_constant &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_public == _other._field_public &&
			this->_field_used == _other._field_used &&
			this->_field_statically == _other._field_statically &&
			this->_field_reference == _other._field_reference &&
			this->_field_kind == _other._field_kind &&
			this->_field_value == _other._field_value &&
			this->_field_references == _other._field_references &&
			this->_field_directives == _other._field_directives &&
			this->_field_iter_relation == _other._field_iter_relation &&
			this->_field_depends == _other._field_depends;
	}

	inline bool operator!=(_1a75ec478_Var _other) { return !this->operator==(_other); }


};
inline jule::Bool static__1a75ed600_dispose(jule::Ptr<_1a6426a45_Fn>);
inline jule::Bool static__1a75ed897_to_str(jule::Ptr<_1a6426a45_Fn>);
inline jule::Bool static__1a75edbd8_logical(jule::Ptr<_1a6426a45_Fn>&,jule::Str);
inline jule::Bool static__1a75ede80_eq(jule::Ptr<_1a6426a45_Fn>);
inline jule::Bool static__1a75ee227_gt(jule::Ptr<_1a6426a45_Fn>);
inline jule::Bool static__1a75ee4be_gt_eq(jule::Ptr<_1a6426a45_Fn>);
inline jule::Bool static__1a75ee766_lt(jule::Ptr<_1a6426a45_Fn>);
inline jule::Bool static__1a75eea0d_lt_eq(jule::Ptr<_1a6426a45_Fn>);
inline jule::Bool static__1a75eed4e_result(jule::Ptr<_1a6426a45_Fn>&,jule::Str);
inline jule::Bool static__1a76000e6_shl(jule::Ptr<_1a6426a45_Fn>);
inline jule::Bool static__1a760038d_shr(jule::Ptr<_1a6426a45_Fn>);
inline jule::Bool static__1a7600635_add(jule::Ptr<_1a6426a45_Fn>);
inline jule::Bool static__1a76008cc_sub(jule::Ptr<_1a6426a45_Fn>);
inline jule::Bool static__1a7600b74_div(jule::Ptr<_1a6426a45_Fn>);
inline jule::Bool static__1a7600e1b_mul(jule::Ptr<_1a6426a45_Fn>);
inline jule::Bool static__1a76011b3_mod(jule::Ptr<_1a6426a45_Fn>);
inline jule::Bool static__1a760145a_bit_and(jule::Ptr<_1a6426a45_Fn>);
inline jule::Bool static__1a7601702_bit_or(jule::Ptr<_1a6426a45_Fn>);
inline jule::Bool static__1a7601999_bit_xor(jule::Ptr<_1a6426a45_Fn>);
inline jule::Bool static__1a7601cda_unary(jule::Ptr<_1a6426a45_Fn>&,jule::Str);
inline jule::Bool static__1a7602082_neg(jule::Ptr<_1a6426a45_Fn>);
inline jule::Bool static__1a7602329_pos(jule::Ptr<_1a6426a45_Fn>);
inline jule::Bool static__1a76025c1_bit_not(jule::Ptr<_1a6426a45_Fn>);
inline jule::Bool static__1a7602912_assign(jule::Ptr<_1a6426a45_Fn>&,jule::Str);
inline jule::Bool static__1a7602ba9_add_assign(jule::Ptr<_1a6426a45_Fn>);
inline jule::Bool static__1a7607cad_sub_assign(jule::Ptr<_1a6426a45_Fn>);
inline jule::Bool static__1a7608055_div_assign(jule::Ptr<_1a6426a45_Fn>);
inline jule::Bool static__1a76082ec_mul_assign(jule::Ptr<_1a6426a45_Fn>);
inline jule::Bool static__1a7608594_mod_assign(jule::Ptr<_1a6426a45_Fn>);
inline jule::Bool static__1a760883b_shl_assign(jule::Ptr<_1a6426a45_Fn>);
inline jule::Bool static__1a7608ad3_shr_assign(jule::Ptr<_1a6426a45_Fn>);
inline jule::Bool static__1a7608d7a_bit_or_assign(jule::Ptr<_1a6426a45_Fn>);
inline jule::Bool static__1a7609122_bit_and_assign(jule::Ptr<_1a6426a45_Fn>);
inline jule::Bool static__1a76093b9_bit_xor_assign(jule::Ptr<_1a6426a45_Fn>);
struct _1a75ece7e_FuncPattern {
	

	_1a75ece7e_FuncPattern(void) = default;

	inline bool operator==(_1a75ece7e_FuncPattern _other) { return true; }

	inline bool operator!=(_1a75ece7e_FuncPattern _other) { return !this->operator==(_other); }


};
inline void _1a7635082_push_err(_1a7634ceb_TypeCompatibilityChecker*,jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _1a76352e6_check_trait(_1a7634ceb_TypeCompatibilityChecker*);
inline jule::Bool _1a763555a_check_ptr(_1a7634ceb_TypeCompatibilityChecker*);
inline jule::Bool _1a76357be_check_prim(_1a7634ceb_TypeCompatibilityChecker*);
inline jule::Bool _1a7635a33_check(_1a7634ceb_TypeCompatibilityChecker*);
struct _1a7634ceb_TypeCompatibilityChecker {
	jule::Ptr<_1a75d1e74_Sema> _field_s = jule::Ptr<_1a75d1e74_Sema>();
	jule::Ptr<_1a7672da0_TypeKind> _field_dest = jule::Ptr<_1a7672da0_TypeKind>();
	jule::Ptr<_1a7672da0_TypeKind> _field_src = jule::Ptr<_1a7672da0_TypeKind>();
	jule::Ptr<_1d0747985_Token> _field_error_token = jule::Ptr<_1d0747985_Token>();


	_1a7634ceb_TypeCompatibilityChecker(jule::Ptr<_1a75d1e74_Sema> __param_s, jule::Ptr<_1a7672da0_TypeKind> __param_dest, jule::Ptr<_1a7672da0_TypeKind> __param_src, jule::Ptr<_1d0747985_Token> __param_error_token): _field_s(__param_s), _field_dest(__param_dest), _field_src(__param_src), _field_error_token(__param_error_token) {}

	

	_1a7634ceb_TypeCompatibilityChecker(void) = default;

	inline bool operator==(_1a7634ceb_TypeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_error_token == _other._field_error_token;
	}

	inline bool operator!=(_1a7634ceb_TypeCompatibilityChecker _other) { return !this->operator==(_other); }


};
inline void _1a76364d4_push_err(_1a7636072_AssignTypeChecker*,jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _1a7636748_check_validity(_1a7636072_AssignTypeChecker*);
inline jule::Bool _1a76369ac_check_const(_1a7636072_AssignTypeChecker*);
inline jule::Bool _1a7636c21_is_prim(_1a7636072_AssignTypeChecker*);
inline jule::Bool _1a7636e85_check_compatibility(_1a7636072_AssignTypeChecker*);
inline jule::Bool _1a76371e9_check(_1a7636072_AssignTypeChecker*);
struct _1a7636072_AssignTypeChecker {
	jule::Ptr<_1a75d1e74_Sema> _field_s = jule::Ptr<_1a75d1e74_Sema>();
	jule::Ptr<_1a7672da0_TypeKind> _field_dest = jule::Ptr<_1a7672da0_TypeKind>();
	jule::Ptr<_1a7648b67_Data> _field_d = jule::Ptr<_1a7648b67_Data>();
	jule::Ptr<_1d0747985_Token> _field_error_token = jule::Ptr<_1d0747985_Token>();


	_1a7636072_AssignTypeChecker(jule::Ptr<_1a75d1e74_Sema> __param_s, jule::Ptr<_1a7672da0_TypeKind> __param_dest, jule::Ptr<_1a7648b67_Data> __param_d, jule::Ptr<_1d0747985_Token> __param_error_token): _field_s(__param_s), _field_dest(__param_dest), _field_d(__param_d), _field_error_token(__param_error_token) {}

	

	_1a7636072_AssignTypeChecker(void) = default;

	inline bool operator==(_1a7636072_AssignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_error_token == _other._field_error_token;
	}

	inline bool operator!=(_1a7636072_AssignTypeChecker _other) { return !this->operator==(_other); }


};
inline void _1a7637e53_push_generic(_1a76378c0_DynamicTypeAnnotation*,jule::Ptr<_1a7672da0_TypeKind>&,jule::I64);
inline jule::Bool _1a763822d_annotate_prim(_1a76378c0_DynamicTypeAnnotation*,jule::Ptr<_1a7672da0_TypeKind>&);
inline jule::Bool _1a763853b_annotate_slc(_1a76378c0_DynamicTypeAnnotation*,jule::Ptr<_1a7672da0_TypeKind>&);
inline jule::Bool _1a76388e3_check_map_key(_1a76378c0_DynamicTypeAnnotation*,jule::Ptr<_1a7672da0_TypeKind>*,jule::Ptr<_1a7672da0_TypeKind>&);
inline jule::Bool _1a7638c01_annotate_map(_1a76378c0_DynamicTypeAnnotation*,jule::Ptr<_1a7672da0_TypeKind>&);
inline jule::Bool _1a763900e_annotate_fn(_1a76378c0_DynamicTypeAnnotation*,jule::Ptr<_1a7672da0_TypeKind>&);
inline jule::Bool _1a763931c_annotate_ptr(_1a76378c0_DynamicTypeAnnotation*,jule::Ptr<_1a7672da0_TypeKind>&);
inline jule::Bool _1a763962a_annotate_sptr(_1a76378c0_DynamicTypeAnnotation*,jule::Ptr<_1a7672da0_TypeKind>&);
inline jule::Bool _1a7639938_annotate_any(_1a76378c0_DynamicTypeAnnotation*,jule::Ptr<_1a7672da0_TypeKind>&);
inline jule::Bool _1a7639c46_annotate_kind(_1a76378c0_DynamicTypeAnnotation*,jule::Ptr<_1a7672da0_TypeKind>&);
inline jule::Bool _1a7639eaa_annotate(_1a76378c0_DynamicTypeAnnotation*);
struct _1a76378c0_DynamicTypeAnnotation {
	jule::Ptr<_1a764a6d5_Eval> _field_e = jule::Ptr<_1a764a6d5_Eval>();
	jule::Ptr<_1a6429be1_FnIns> _field_f = jule::Ptr<_1a6429be1_FnIns>();
	jule::Ptr<_1a6428d55_ParamIns> _field_p = jule::Ptr<_1a6428d55_ParamIns>();
	jule::Ptr<_1a7648b67_Data> _field_a = jule::Ptr<_1a7648b67_Data>();
	jule::Ptr<_1d0747985_Token> _field_error_token = jule::Ptr<_1d0747985_Token>();
	jule::Ptr<_1a7672da0_TypeKind>* _field_k = nullptr;


	_1a76378c0_DynamicTypeAnnotation(jule::Ptr<_1a764a6d5_Eval> __param_e, jule::Ptr<_1a6429be1_FnIns> __param_f, jule::Ptr<_1a6428d55_ParamIns> __param_p, jule::Ptr<_1a7648b67_Data> __param_a, jule::Ptr<_1d0747985_Token> __param_error_token, jule::Ptr<_1a7672da0_TypeKind>* __param_k): _field_e(__param_e), _field_f(__param_f), _field_p(__param_p), _field_a(__param_a), _field_error_token(__param_error_token), _field_k(__param_k) {}

	

	_1a76378c0_DynamicTypeAnnotation(void) = default;

	inline bool operator==(_1a76378c0_DynamicTypeAnnotation _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_f == _other._field_f &&
			this->_field_p == _other._field_p &&
			this->_field_a == _other._field_a &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_k == _other._field_k;
	}

	inline bool operator!=(_1a76378c0_DynamicTypeAnnotation _other) { return !this->operator==(_other); }


};
inline void _1a763abd1_push_err_token(_1a763a681_FnCallArgChecker*,jule::Ptr<_1d0747985_Token>,jule::Str,jule::Slice<jule::Any>);
inline void _1a763b000_push_err(_1a763a681_FnCallArgChecker*,jule::Str,jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1a6428d55_ParamIns>> _1a763b264_get_params(_1a763a681_FnCallArgChecker*);
inline jule::Bool _1a763b572_check_counts(_1a763a681_FnCallArgChecker*,jule::Slice<jule::Ptr<_1a6428d55_ParamIns>>&);
inline jule::Bool _1a763b9c3_check_arg(_1a763a681_FnCallArgChecker*,jule::Ptr<_1a6428d55_ParamIns>&,jule::Ptr<_1a7648b67_Data>&,jule::Ptr<_1d0747985_Token>&);
inline jule::Bool _1a763bd7a_push(_1a763a681_FnCallArgChecker*,jule::Ptr<_1a6428d55_ParamIns>&,jule::Ptr<_1d075b14c_Expr>);
inline jule::Bool _1a763c232_push_variadic(_1a763a681_FnCallArgChecker*,jule::Ptr<_1a6428d55_ParamIns>&,jule::I64);
inline jule::Bool _1a763c540_check_args(_1a763a681_FnCallArgChecker*,jule::Slice<jule::Ptr<_1a6428d55_ParamIns>>&);
inline jule::Bool _1a763c7e8_check_dynamic_type_annotation(_1a763a681_FnCallArgChecker*);
inline jule::Bool _1a763ca4b_check(_1a763a681_FnCallArgChecker*);
struct _1a763a681_FnCallArgChecker {
	jule::Ptr<_1a764a6d5_Eval> _field_e = jule::Ptr<_1a764a6d5_Eval>();
	jule::Slice<jule::Ptr<_1d075b14c_Expr>> _field_args = jule::Slice<jule::Ptr<_1d075b14c_Expr>>();
	jule::Ptr<_1d0747985_Token> _field_error_token = jule::Ptr<_1d0747985_Token>();
	jule::Ptr<_1a6429be1_FnIns> _field_f = jule::Ptr<_1a6429be1_FnIns>();
	jule::Bool _field_dynamic_annotation = jule::Bool();
	jule::Slice<jule::Any> _field_arg_models = jule::Slice<jule::Any>();


	_1a763a681_FnCallArgChecker(jule::Ptr<_1a764a6d5_Eval> __param_e, jule::Slice<jule::Ptr<_1d075b14c_Expr>> __param_args, jule::Ptr<_1d0747985_Token> __param_error_token, jule::Ptr<_1a6429be1_FnIns> __param_f, jule::Bool __param_dynamic_annotation, jule::Slice<jule::Any> __param_arg_models): _field_e(__param_e), _field_args(__param_args), _field_error_token(__param_error_token), _field_f(__param_f), _field_dynamic_annotation(__param_dynamic_annotation), _field_arg_models(__param_arg_models) {}

	

	_1a763a681_FnCallArgChecker(void) = default;

	inline bool operator==(_1a763a681_FnCallArgChecker _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_args == _other._field_args &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_f == _other._field_f &&
			this->_field_dynamic_annotation == _other._field_dynamic_annotation &&
			this->_field_arg_models == _other._field_arg_models;
	}

	inline bool operator!=(_1a763a681_FnCallArgChecker _other) { return !this->operator==(_other); }


};
inline void _1a763d596_push_err(_1a763d08a_StructLitChecker*,jule::Ptr<_1d0747985_Token>,jule::Str,jule::Slice<jule::Any>);
inline void _1a763d8b5_push_suggestion(_1a763d08a_StructLitChecker*,jule::Str,jule::Slice<jule::Any>);
inline void _1a763dc7d_push_match(_1a763d08a_StructLitChecker*,jule::Ptr<_1a6416ae0_FieldIns>&,jule::Ptr<_1a7648b67_Data>&,jule::Ptr<_1d0747985_Token>&);
inline void _1a763e09c_check_pair(_1a763d08a_StructLitChecker*,jule::Ptr<_1d075d193_FieldExprPair>&,jule::Slice<jule::Ptr<_1d075b14c_Expr>>&);
inline jule::Bool _1a763e3aa_ready_exprs(_1a763d08a_StructLitChecker*,jule::Slice<jule::Ptr<_1d075b14c_Expr>>&);
inline void _1a763e630_check(_1a763d08a_StructLitChecker*,jule::Slice<jule::Ptr<_1d075b14c_Expr>>&);
struct _1a763d08a_StructLitChecker {
	jule::Ptr<_1a764a6d5_Eval> _field_e = jule::Ptr<_1a764a6d5_Eval>();
	jule::Ptr<_1d0747985_Token> _field_error_token = jule::Ptr<_1d0747985_Token>();
	jule::Ptr<_1a641744d_StructIns> _field_s = jule::Ptr<_1a641744d_StructIns>();
	jule::Slice<jule::Ptr<_1a6419d24_StructArgExprModel>> _field_args = jule::Slice<jule::Ptr<_1a6419d24_StructArgExprModel>>();


	_1a763d08a_StructLitChecker(jule::Ptr<_1a764a6d5_Eval> __param_e, jule::Ptr<_1d0747985_Token> __param_error_token, jule::Ptr<_1a641744d_StructIns> __param_s, jule::Slice<jule::Ptr<_1a6419d24_StructArgExprModel>> __param_args): _field_e(__param_e), _field_error_token(__param_error_token), _field_s(__param_s), _field_args(__param_args) {}

	

	_1a763d08a_StructLitChecker(void) = default;

	inline bool operator==(_1a763d08a_StructLitChecker _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_s == _other._field_s &&
			this->_field_args == _other._field_args;
	}

	inline bool operator!=(_1a763d08a_StructLitChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a75ec478_Var> _1a7640114_build_var(_1a763eb6e_RangeChecker*,jule::Ptr<_1d07646d8_VarDecl>&);
inline void _1a76402e0_set_size_key(_1a763eb6e_RangeChecker*);
inline void _1a76406ec_check_range_expr_validity(_1a763eb6e_RangeChecker*,jule::Ptr<_1a7648b67_Data>&,jule::Ptr<_1a75ec478_Var>&,jule::Ptr<_1a7672da0_TypeKind>&);
inline void _1a76408b7_check_slice(_1a763eb6e_RangeChecker*);
inline void _1a7640a93_check_array(_1a763eb6e_RangeChecker*);
inline void _1a7640c6e_check_map_key_a(_1a763eb6e_RangeChecker*);
inline void _1a7640e4a_check_map_key_b(_1a763eb6e_RangeChecker*);
inline void _1a7641126_check_map(_1a763eb6e_RangeChecker*);
inline void _1a7641302_check_str(_1a763eb6e_RangeChecker*);
inline jule::Bool _1a7641566_check(_1a763eb6e_RangeChecker*);
struct _1a763eb6e_RangeChecker {
	jule::Ptr<_1a75b3b8c_ScopeChecker> _field_sc = jule::Ptr<_1a75b3b8c_ScopeChecker>();
	jule::Ptr<_1d0766278_RangeKind> _field_rang = jule::Ptr<_1d0766278_RangeKind>();
	jule::Ptr<_1a7561c6c_RangeIter> _field_kind = jule::Ptr<_1a7561c6c_RangeIter>();
	jule::Ptr<_1a7648b67_Data> _field_d = jule::Ptr<_1a7648b67_Data>();


	_1a763eb6e_RangeChecker(jule::Ptr<_1a75b3b8c_ScopeChecker> __param_sc, jule::Ptr<_1d0766278_RangeKind> __param_rang, jule::Ptr<_1a7561c6c_RangeIter> __param_kind, jule::Ptr<_1a7648b67_Data> __param_d): _field_sc(__param_sc), _field_rang(__param_rang), _field_kind(__param_kind), _field_d(__param_d) {}

	

	_1a763eb6e_RangeChecker(void) = default;

	inline bool operator==(_1a763eb6e_RangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_kind == _other._field_kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_1a763eb6e_RangeChecker _other) { return !this->operator==(_other); }


};
inline void _1a76422ae_prepare_types(_1a7641d08_RetTypeChecker*);
inline void _1a7642534_prepare_exprs(_1a7641d08_RetTypeChecker*,jule::Ptr<_1d075b14c_Expr>&);
inline void _1a7642710_ret_vars(_1a7641d08_RetTypeChecker*);
inline void _1a76428db_check_exprs(_1a7641d08_RetTypeChecker*);
inline jule::Bool _1a7642be9_check(_1a7641d08_RetTypeChecker*,jule::Ptr<_1d075b14c_Expr>&);
struct _1a7641d08_RetTypeChecker {
	jule::Ptr<_1a75b3b8c_ScopeChecker> _field_sc = jule::Ptr<_1a75b3b8c_ScopeChecker>();
	jule::Ptr<_1a6429be1_FnIns> _field_f = jule::Ptr<_1a6429be1_FnIns>();
	jule::Slice<jule::Ptr<_1a7672da0_TypeKind>> _field_types = jule::Slice<jule::Ptr<_1a7672da0_TypeKind>>();
	jule::Slice<jule::Ptr<_1d075b14c_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1d075b14c_Expr>>();
	jule::Slice<jule::Ptr<_1a75ec478_Var>> _field_vars = jule::Slice<jule::Ptr<_1a75ec478_Var>>();
	jule::Ptr<_1d0747985_Token> _field_error_token = jule::Ptr<_1d0747985_Token>();
	jule::Any _field_model = jule::Any();


	_1a7641d08_RetTypeChecker(jule::Ptr<_1a75b3b8c_ScopeChecker> __param_sc, jule::Ptr<_1a6429be1_FnIns> __param_f, jule::Slice<jule::Ptr<_1a7672da0_TypeKind>> __param_types, jule::Slice<jule::Ptr<_1d075b14c_Expr>> __param_exprs, jule::Slice<jule::Ptr<_1a75ec478_Var>> __param_vars, jule::Ptr<_1d0747985_Token> __param_error_token, jule::Any __param_model): _field_sc(__param_sc), _field_f(__param_f), _field_types(__param_types), _field_exprs(__param_exprs), _field_vars(__param_vars), _field_error_token(__param_error_token), _field_model(__param_model) {}

	

	_1a7641d08_RetTypeChecker(void) = default;

	inline bool operator==(_1a7641d08_RetTypeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_f == _other._field_f &&
			this->_field_types == _other._field_types &&
			this->_field_exprs == _other._field_exprs &&
			this->_field_vars == _other._field_vars &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1a7641d08_RetTypeChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a75c928a_ImportInfo> _1a7643ee7_find_package(_1a76439db_SymbolTable*,jule::Str);
inline jule::Ptr<_1a75c928a_ImportInfo> _1a7644305_select_package(_1a76439db_SymbolTable*,jule::Fn<jule::Bool(jule::Ptr<_1a75c928a_ImportInfo>)>);
inline jule::Ptr<_1a75ec478_Var> _1a76446ac_find_var(_1a76439db_SymbolTable*,jule::Str,jule::Bool);
inline jule::Ptr<_1a7672168_TypeAlias> _1a7644a64_find_type_alias(_1a76439db_SymbolTable*,jule::Str,jule::Bool);
inline jule::Ptr<_1a64147be_Struct> _1a7644e1b_find_struct(_1a76439db_SymbolTable*,jule::Str,jule::Bool);
inline jule::Ptr<_1a6426a45_Fn> _1a76452c3_find_fn(_1a76439db_SymbolTable*,jule::Str,jule::Bool);
inline jule::Ptr<_1a7465bd7_Trait> _1a76455d1_find_trait(_1a76439db_SymbolTable*,jule::Str);
inline jule::Ptr<_1a7467de8_Enum> _1a76458de_find_enum(_1a76439db_SymbolTable*,jule::Str);
inline jule::Ptr<_1a75ec478_Var> _1a7645e61___find_var(_1a76439db_SymbolTable*,jule::Str,jule::Bool,jule::Bool);
inline jule::Ptr<_1a7672168_TypeAlias> _1a76463b2___find_type_alias(_1a76439db_SymbolTable*,jule::Str,jule::Bool,jule::Bool);
inline jule::Any _1a7646769_def_by_ident(_1a76439db_SymbolTable*,jule::Str,jule::Bool);
inline jule::Bool _1a7646bba_is_duplicated_ident(_1a76439db_SymbolTable*,jule::U64,jule::Str,jule::Bool);
struct _1a76439db_SymbolTable {
	jule::Ptr<_1d074cd75_File> _field_file = jule::Ptr<_1d074cd75_File>();
	jule::Slice<_1a642e113_Pass> _field_passes = jule::Slice<_1a642e113_Pass>();
	jule::Slice<jule::Ptr<_1a75c928a_ImportInfo>> _field_imports = jule::Slice<jule::Ptr<_1a75c928a_ImportInfo>>();
	jule::Slice<jule::Ptr<_1a75ec478_Var>> _field_vars = jule::Slice<jule::Ptr<_1a75ec478_Var>>();
	jule::Slice<jule::Ptr<_1a7672168_TypeAlias>> _field_type_aliases = jule::Slice<jule::Ptr<_1a7672168_TypeAlias>>();
	jule::Slice<jule::Ptr<_1a64147be_Struct>> _field_structs = jule::Slice<jule::Ptr<_1a64147be_Struct>>();
	jule::Slice<jule::Ptr<_1a6426a45_Fn>> _field_funcs = jule::Slice<jule::Ptr<_1a6426a45_Fn>>();
	jule::Slice<jule::Ptr<_1a7465bd7_Trait>> _field_traits = jule::Slice<jule::Ptr<_1a7465bd7_Trait>>();
	jule::Slice<jule::Ptr<_1a7467de8_Enum>> _field_enums = jule::Slice<jule::Ptr<_1a7467de8_Enum>>();
	jule::Slice<jule::Ptr<_1a746936c_Impl>> _field_impls = jule::Slice<jule::Ptr<_1a746936c_Impl>>();


	_1a76439db_SymbolTable(jule::Ptr<_1d074cd75_File> __param_file, jule::Slice<_1a642e113_Pass> __param_passes, jule::Slice<jule::Ptr<_1a75c928a_ImportInfo>> __param_imports, jule::Slice<jule::Ptr<_1a75ec478_Var>> __param_vars, jule::Slice<jule::Ptr<_1a7672168_TypeAlias>> __param_type_aliases, jule::Slice<jule::Ptr<_1a64147be_Struct>> __param_structs, jule::Slice<jule::Ptr<_1a6426a45_Fn>> __param_funcs, jule::Slice<jule::Ptr<_1a7465bd7_Trait>> __param_traits, jule::Slice<jule::Ptr<_1a7467de8_Enum>> __param_enums, jule::Slice<jule::Ptr<_1a746936c_Impl>> __param_impls): _field_file(__param_file), _field_passes(__param_passes), _field_imports(__param_imports), _field_vars(__param_vars), _field_type_aliases(__param_type_aliases), _field_structs(__param_structs), _field_funcs(__param_funcs), _field_traits(__param_traits), _field_enums(__param_enums), _field_impls(__param_impls) {}

	

	_1a76439db_SymbolTable(void) = default;

	inline bool operator==(_1a76439db_SymbolTable _other) {
		return 
			this->_field_file == _other._field_file &&
			this->_field_passes == _other._field_passes &&
			this->_field_imports == _other._field_imports &&
			this->_field_vars == _other._field_vars &&
			this->_field_type_aliases == _other._field_type_aliases &&
			this->_field_structs == _other._field_structs &&
			this->_field_funcs == _other._field_funcs &&
			this->_field_traits == _other._field_traits &&
			this->_field_enums == _other._field_enums &&
			this->_field_impls == _other._field_impls;
	}

	inline bool operator!=(_1a76439db_SymbolTable _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a7649052_is_nil(_1a7648b67_Data*);
inline jule::Bool _1a76492b6_is_void(_1a7648b67_Data*);
inline jule::Bool _1a764952a_is_const(_1a7648b67_Data*);
inline jule::Bool _1a7649838_good_operand(_1a7648b67_Data*,jule::Ptr<_1a7648b67_Data>&);
struct _1a7648b67_Data {
	jule::Ptr<_1a7672da0_TypeKind> _field_kind = jule::Ptr<_1a7672da0_TypeKind>();
	jule::Ptr<_1a7672da0_TypeKind> _field_cast_kind = jule::Ptr<_1a7672da0_TypeKind>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Bool _field_lvalue = jule::Bool();
	jule::Bool _field_is_rune = jule::Bool();
	jule::Any _field_model = jule::Any();
	jule::Bool _field_decl = jule::Bool();
	jule::Ptr<_1a751ddb1_Const> _field_constant = jule::Ptr<_1a751ddb1_Const>();


	_1a7648b67_Data(jule::Ptr<_1a7672da0_TypeKind> __param_kind, jule::Ptr<_1a7672da0_TypeKind> __param_cast_kind, jule::Bool __param_mutable, jule::Bool __param_reference, jule::Bool __param_lvalue, jule::Bool __param_is_rune, jule::Any __param_model, jule::Bool __param_decl, jule::Ptr<_1a751ddb1_Const> __param_constant): _field_kind(__param_kind), _field_cast_kind(__param_cast_kind), _field_mutable(__param_mutable), _field_reference(__param_reference), _field_lvalue(__param_lvalue), _field_is_rune(__param_is_rune), _field_model(__param_model), _field_decl(__param_decl), _field_constant(__param_constant) {}

	

	_1a7648b67_Data(void) = default;

	inline bool operator==(_1a7648b67_Data _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_cast_kind == _other._field_cast_kind &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_reference == _other._field_reference &&
			this->_field_lvalue == _other._field_lvalue &&
			this->_field_is_rune == _other._field_is_rune &&
			this->_field_model == _other._field_model &&
			this->_field_decl == _other._field_decl &&
			this->_field_constant == _other._field_constant;
	}

	inline bool operator!=(_1a7648b67_Data _other) { return !this->operator==(_other); }


};
struct _1a7649be0_Value {
	jule::Ptr<_1d075b14c_Expr> _field_expr = jule::Ptr<_1d075b14c_Expr>();
	jule::Ptr<_1a7648b67_Data> _field_data = jule::Ptr<_1a7648b67_Data>();


	_1a7649be0_Value(jule::Ptr<_1d075b14c_Expr> __param_expr, jule::Ptr<_1a7648b67_Data> __param_data): _field_expr(__param_expr), _field_data(__param_data) {}

	

	_1a7649be0_Value(void) = default;

	inline bool operator==(_1a7649be0_Value _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1a7649be0_Value _other) { return !this->operator==(_other); }


};
inline void _1a764abad_push_err(_1a764a6d5_Eval*,jule::Ptr<_1d0747985_Token>,jule::Str,jule::Slice<jule::Any>);
inline void _1a764aecc_push_suggestion(_1a764a6d5_Eval*,jule::Str,jule::Slice<jule::Any>);
inline void _1a764b1a8_allow_builtin(_1a764a6d5_Eval*);
inline void _1a764b384_disallow_builtin(_1a764a6d5_Eval*);
inline jule::Bool _1a764b5e8_is_unsafe(_1a764a6d5_Eval*);
inline jule::Bool _1a764b85c_is_global(_1a764a6d5_Eval*);
inline jule::Bool _1a764bb6a_apply_numeric_prefix(_1a764a6d5_Eval*,jule::Ptr<_1a7648b67_Data>&);
inline jule::Ptr<_1a7648b67_Data> _1a764bdce_lit_nil(_1a764a6d5_Eval*);
inline jule::Ptr<_1a7648b67_Data> _1a764c1dc_lit_str(_1a764a6d5_Eval*,jule::Ptr<_1d075b944_LitExpr>&);
inline jule::Ptr<_1a7648b67_Data> _1a764c4ea_lit_bool(_1a764a6d5_Eval*,jule::Ptr<_1d075b944_LitExpr>&);
inline jule::Ptr<_1a7648b67_Data> _1a764c808_lit_rune(_1a764a6d5_Eval*,jule::Ptr<_1d075b944_LitExpr>&);
inline jule::Ptr<_1a7648b67_Data> _1a764cb16_lit_float(_1a764a6d5_Eval*,jule::Ptr<_1d075b944_LitExpr>&);
inline jule::Ptr<_1a7648b67_Data> _1a764ce24_lit_int(_1a764a6d5_Eval*,jule::Ptr<_1d075b944_LitExpr>&);
inline jule::Ptr<_1a7648b67_Data> _1a764d232_lit_num(_1a764a6d5_Eval*,jule::Ptr<_1d075b944_LitExpr>&);
inline jule::Ptr<_1a7648b67_Data> _1a764d540_eval_lit(_1a764a6d5_Eval*,jule::Ptr<_1d075b944_LitExpr>);
inline jule::Any _1a764d84d_find_builtins(_1a764a6d5_Eval*,jule::Str);
inline jule::Any _1a764dc05_get_def(_1a764a6d5_Eval*,jule::Str,jule::Bool);
inline void _1a764de7a_push_reference(_1a764a6d5_Eval*,jule::Ptr<_1a642cc9e_ReferenceStack>&);
inline void _1a764e200_push_reference_to_fn(_1a764a6d5_Eval*,jule::Ptr<_1a6429be1_FnIns>&);
inline void _1a764e475_push_reference_to_var(_1a764a6d5_Eval*,jule::Ptr<_1a75ec478_Var>&);
inline void _1a764e73e_push_reference_to_struct(_1a764a6d5_Eval*,jule::Ptr<_1a641744d_StructIns>&);
inline jule::Ptr<_1a7648b67_Data> _1a764ea3b___eval_enum(_1a764a6d5_Eval*,jule::Ptr<_1a7467de8_Enum>);
inline jule::Ptr<_1a7648b67_Data> _1a764ede3_eval_enum(_1a764a6d5_Eval*,jule::Ptr<_1a7467de8_Enum>,jule::Ptr<_1d0747985_Token>);
inline jule::Ptr<_1a7648b67_Data> _1a7650201___eval_struct(_1a764a6d5_Eval*,jule::Ptr<_1a641744d_StructIns>);
inline jule::Ptr<_1a7648b67_Data> _1a76505a8_eval_struct(_1a764a6d5_Eval*,jule::Ptr<_1a641744d_StructIns>,jule::Ptr<_1d0747985_Token>);
inline jule::Ptr<_1a7648b67_Data> _1a76508b6_eval_fn_ins(_1a764a6d5_Eval*,jule::Ptr<_1a6429be1_FnIns>);
inline void _1a7650bd5_check_deprecated(_1a764a6d5_Eval*,jule::Slice<jule::Ptr<_1d06c9ecd_Directive>>&,jule::Ptr<_1d0747985_Token>);
inline jule::Ptr<_1a7648b67_Data> _1a765108c_eval_fn(_1a764a6d5_Eval*,jule::Ptr<_1a6426a45_Fn>,jule::Ptr<_1d0747985_Token>);
inline void _1a7651499_push_illegal_cycle_error(_1a764a6d5_Eval*,jule::Ptr<_1a75ec478_Var>&,jule::Ptr<_1a75ec478_Var>&,jule::Str&);
inline jule::Bool _1a7651840_check_cross_cycle(_1a764a6d5_Eval*,jule::Ptr<_1a75ec478_Var>&,jule::Str&);
inline jule::Bool _1a7651be7_check_illegal_cycles(_1a764a6d5_Eval*,jule::Ptr<_1a75ec478_Var>&,jule::Ptr<_1d0747985_Token>);
inline jule::Ptr<_1a7648b67_Data> _1a765209e_eval_var(_1a764a6d5_Eval*,jule::Ptr<_1a75ec478_Var>,jule::Ptr<_1d0747985_Token>);
inline jule::Ptr<_1a7648b67_Data> _1a7652456_eval_type_alias(_1a764a6d5_Eval*,jule::Ptr<_1a7672168_TypeAlias>,jule::Ptr<_1d0747985_Token>);
inline jule::Ptr<_1a7648b67_Data> _1a765280d_eval_def(_1a764a6d5_Eval*,jule::Any,jule::Ptr<_1d0747985_Token>);
inline jule::Ptr<_1a7648b67_Data> _1a7652b1b_eval_ident(_1a764a6d5_Eval*,jule::Ptr<_1d075c00a_IdentExpr>);
inline jule::Ptr<_1a7648b67_Data> _1a7652e29_eval_unary(jule::Ptr<_1a764a6d5_Eval>,jule::Ptr<_1d075c1e7_UnaryExpr>);
inline jule::Ptr<_1a7648b67_Data> _1a7653237_eval_variadic(jule::Ptr<_1a764a6d5_Eval>,jule::Ptr<_1d075c3d4_VariadicExpr>);
inline jule::Ptr<_1a7648b67_Data> _1a7653545_eval_unsafe(jule::Ptr<_1a764a6d5_Eval>,jule::Ptr<_1d075bb31_UnsafeExpr>);
inline jule::Ptr<_1a7648b67_Data> _1a7653853_eval_arr(jule::Ptr<_1a764a6d5_Eval>,jule::Ptr<_1d075dbaa_SliceExpr>);
inline jule::Ptr<_1a7648b67_Data> _1a7653c0a_eval_exp_slc(jule::Ptr<_1a764a6d5_Eval>,jule::Ptr<_1d075dbaa_SliceExpr>,jule::Ptr<_1a7672da0_TypeKind>);
inline jule::Ptr<_1a7648b67_Data> _1a7654018_eval_slice_expr(jule::Ptr<_1a764a6d5_Eval>,jule::Ptr<_1d075dbaa_SliceExpr>);
inline void _1a765437b_check_integer_indexing_by_data(_1a764a6d5_Eval*,jule::Ptr<_1a7648b67_Data>&,jule::Ptr<_1d0747985_Token>);
inline void _1a7654733_indexing_ptr(_1a764a6d5_Eval*,jule::Ptr<_1a7648b67_Data>&,jule::Ptr<_1a7648b67_Data>&,jule::Ptr<_1d075e4a2_IndexingExpr>&);
inline void _1a7654aeb_indexing_arr(_1a764a6d5_Eval*,jule::Ptr<_1a7648b67_Data>&,jule::Ptr<_1a7648b67_Data>&,jule::Ptr<_1d075e4a2_IndexingExpr>&);
inline void _1a7654eb4_indexing_slc(_1a764a6d5_Eval*,jule::Ptr<_1a7648b67_Data>&,jule::Ptr<_1a7648b67_Data>&,jule::Ptr<_1d075e4a2_IndexingExpr>&);
inline void _1a765537c_indexing_map(_1a764a6d5_Eval*,jule::Ptr<_1a7648b67_Data>&,jule::Ptr<_1a7648b67_Data>&,jule::Ptr<_1d075e4a2_IndexingExpr>&);
inline void _1a7655745_indexing_str(_1a764a6d5_Eval*,jule::Ptr<_1a7648b67_Data>&,jule::Ptr<_1a7648b67_Data>&,jule::Ptr<_1d075e4a2_IndexingExpr>&);
inline void _1a7655b0d_to_indexing(_1a764a6d5_Eval*,jule::Ptr<_1a7648b67_Data>&,jule::Ptr<_1a7648b67_Data>&,jule::Ptr<_1d075e4a2_IndexingExpr>&);
inline jule::Bool _1a7656009_push_generics_from_index_data(jule::Ptr<_1a764a6d5_Eval>,jule::Ptr<_1d0759e09_IdentTypeDecl>&,jule::Ptr<_1d075e4a2_IndexingExpr>&);
inline jule::Ptr<_1a7648b67_Data> _1a76563e4_eval_ident_decl_from_indexing(jule::Ptr<_1a764a6d5_Eval>,jule::Ptr<_1a7648b67_Data>&,jule::Ptr<_1d075e4a2_IndexingExpr>&);
inline jule::Ptr<_1a7648b67_Data> _1a76566e1_eval_indexing(jule::Ptr<_1a764a6d5_Eval>,jule::Ptr<_1d075e4a2_IndexingExpr>);
inline std::tuple<jule::Ptr<_1a7648b67_Data>,jule::Ptr<_1a7648b67_Data>> _1a76569ee_eval_slicing_exprs(jule::Ptr<_1a764a6d5_Eval>,jule::Ptr<_1d075eaac_SlicingExpr>&);
inline void _1a7656c74_slicing_arr(_1a764a6d5_Eval*,jule::Ptr<_1a7648b67_Data>&);
inline void _1a765713c_slicing_str(_1a764a6d5_Eval*,jule::Ptr<_1a7648b67_Data>&,jule::Ptr<_1a7648b67_Data>&,jule::Ptr<_1a7648b67_Data>&);
inline void _1a765759e_check_slicing(_1a764a6d5_Eval*,jule::Ptr<_1a7648b67_Data>&,jule::Ptr<_1a7648b67_Data>&,jule::Ptr<_1a7648b67_Data>&,jule::Ptr<_1d075eaac_SlicingExpr>&);
inline jule::Ptr<_1a7648b67_Data> _1a76578ac_eval_slicing(jule::Ptr<_1a764a6d5_Eval>,jule::Ptr<_1d075eaac_SlicingExpr>);
inline void _1a7657c75_cast_ptr(_1a764a6d5_Eval*,jule::Ptr<_1a7672da0_TypeKind>,jule::Ptr<_1a7648b67_Data>,jule::Ptr<_1d0747985_Token>);
inline void _1a765813d_cast_struct(_1a764a6d5_Eval*,jule::Ptr<_1a7672da0_TypeKind>,jule::Ptr<_1a7648b67_Data>,jule::Ptr<_1d0747985_Token>);
inline void _1a7658506_cast_ref(_1a764a6d5_Eval*,jule::Ptr<_1a7672da0_TypeKind>,jule::Ptr<_1a7648b67_Data>,jule::Ptr<_1d0747985_Token>);
inline void _1a76588be_cast_slc(_1a764a6d5_Eval*,jule::Ptr<_1a7672da0_TypeKind>,jule::Ptr<_1a7648b67_Data>,jule::Ptr<_1d0747985_Token>);
inline void _1a7658bdd_cast_str(_1a764a6d5_Eval*,jule::Ptr<_1a7648b67_Data>,jule::Ptr<_1d0747985_Token>);
inline void _1a76590a6_cast_int(_1a764a6d5_Eval*,jule::Ptr<_1a7672da0_TypeKind>,jule::Ptr<_1a7648b67_Data>,jule::Ptr<_1d0747985_Token>);
inline void _1a765946e_cast_num(_1a764a6d5_Eval*,jule::Ptr<_1a7672da0_TypeKind>,jule::Ptr<_1a7648b67_Data>,jule::Ptr<_1d0747985_Token>);
inline void _1a7659837_cast_prim(_1a764a6d5_Eval*,jule::Ptr<_1a7672da0_TypeKind>,jule::Ptr<_1a7648b67_Data>,jule::Ptr<_1d0747985_Token>);
inline void _1a7659b56_cast_constant(_1a764a6d5_Eval*,jule::Ptr<_1a7672da0_TypeKind>&,jule::Ptr<_1a7648b67_Data>&);
inline jule::Ptr<_1a7648b67_Data> _1a765a0eb_eval_cast_by_type_n_data(_1a764a6d5_Eval*,jule::Ptr<_1a7672da0_TypeKind>,jule::Ptr<_1a7648b67_Data>,jule::Ptr<_1d0747985_Token>);
inline jule::Ptr<_1a7648b67_Data> _1a765a3e8_eval_cast(jule::Ptr<_1a764a6d5_Eval>,jule::Ptr<_1d075c5c1_CastExpr>);
inline jule::Ptr<_1a7648b67_Data> _1a765a706_eval_ns_selection(_1a764a6d5_Eval*,jule::Ptr<_1d075c7ad_NsSelectionExpr>);
inline jule::Ptr<_1a7648b67_Data> _1a765ab9b_eval_struct_lit_explicit(jule::Ptr<_1a764a6d5_Eval>,jule::Ptr<_1a641744d_StructIns>,jule::Slice<jule::Ptr<_1d075b14c_Expr>>,jule::Ptr<_1d0747985_Token>);
inline jule::Ptr<_1a7648b67_Data> _1a765ae98_eval_struct_lit(jule::Ptr<_1a764a6d5_Eval>,jule::Ptr<_1d075d4b2_StructLit>);
inline jule::Ptr<_1a7648b67_Data> _1a765b2a6_eval_type(_1a764a6d5_Eval*,jule::Ptr<_1d0759c1c_TypeDecl>);
inline void _1a765b5c5_call_type_fn(jule::Ptr<_1a764a6d5_Eval>,jule::Ptr<_1d075cd74_FnCallExpr>&,jule::Ptr<_1a7648b67_Data>&);
inline std::tuple<jule::Bool,jule::Bool> _1a765b97c_check_fn_call_generics(_1a764a6d5_Eval*,jule::Ptr<_1a6429be1_FnIns>,jule::Ptr<_1d075cd74_FnCallExpr>);
inline void _1a765bc9b_call_builtin_fn(jule::Ptr<_1a764a6d5_Eval>,jule::Ptr<_1d075cd74_FnCallExpr>&,jule::Ptr<_1a7648b67_Data>&);
inline void _1a765c10e_check_fn_of_concurrent_call(_1a764a6d5_Eval*,jule::Ptr<_1a6429be1_FnIns>&,jule::Ptr<_1d0747985_Token>);
inline void _1a765c50a_process_exceptional_handler(_1a764a6d5_Eval*,jule::Ptr<_1a6429be1_FnIns>&,jule::Ptr<_1d075cd74_FnCallExpr>&,jule::Ptr<_1a7648b67_Data>&);
inline void _1a765c818_call_fn(jule::Ptr<_1a764a6d5_Eval>,jule::Ptr<_1d075cd74_FnCallExpr>&,jule::Ptr<_1a7648b67_Data>&);
inline jule::Ptr<_1a7648b67_Data> _1a765cb26_eval_fn_call(jule::Ptr<_1a764a6d5_Eval>,jule::Ptr<_1d075cd74_FnCallExpr>);
inline jule::Ptr<_1a7648b67_Data> _1a765cecd_eval_enum_static(_1a764a6d5_Eval*,jule::Ptr<_1a7467de8_Enum>,jule::Ptr<_1d0747985_Token>);
inline jule::Ptr<_1a7648b67_Data> _1a765d385_eval_struct_static(_1a764a6d5_Eval*,jule::Ptr<_1a641744d_StructIns>,jule::Ptr<_1d0747985_Token>);
inline jule::Ptr<_1a7648b67_Data> _1a765d7d6_eval_trait_sub_ident(_1a764a6d5_Eval*,jule::Ptr<_1a7648b67_Data>,jule::Ptr<_1a7465bd7_Trait>,jule::Ptr<_1d0747985_Token>);
inline jule::Ptr<_1a7648b67_Data> _1a765dcd1_eval_struct_sub_ident(_1a764a6d5_Eval*,jule::Ptr<_1a7648b67_Data>,jule::Ptr<_1a641744d_StructIns>,jule::Ptr<_1d075c99a_SubIdentExpr>,jule::Bool);
inline jule::Ptr<_1a7648b67_Data> _1a765e188_eval_slice_sub_ident(_1a764a6d5_Eval*,jule::Ptr<_1a7648b67_Data>,jule::Ptr<_1d0747985_Token>);
inline jule::Ptr<_1a7648b67_Data> _1a765e540_eval_array_sub_ident(_1a764a6d5_Eval*,jule::Ptr<_1a7648b67_Data>,jule::Ptr<_1d0747985_Token>);
inline jule::Ptr<_1a7648b67_Data> _1a765e8e7_eval_map_sub_ident(_1a764a6d5_Eval*,jule::Ptr<_1a7648b67_Data>,jule::Ptr<_1d0747985_Token>);
inline jule::Ptr<_1a7648b67_Data> _1a765ec9e_eval_str_sub_ident(_1a764a6d5_Eval*,jule::Ptr<_1a7648b67_Data>,jule::Ptr<_1d0747985_Token>);
inline jule::Ptr<_1a7648b67_Data> _1a76600ac_eval_int_type_static(_1a764a6d5_Eval*,jule::Ptr<_1d0747985_Token>);
inline jule::Ptr<_1a7648b67_Data> _1a76603ba_eval_uint_type_static(_1a764a6d5_Eval*,jule::Ptr<_1d0747985_Token>);
inline jule::Ptr<_1a7648b67_Data> _1a76606c8_eval_i8_type_static(_1a764a6d5_Eval*,jule::Ptr<_1d0747985_Token>);
inline jule::Ptr<_1a7648b67_Data> _1a76609d6_eval_i16_type_static(_1a764a6d5_Eval*,jule::Ptr<_1d0747985_Token>);
inline jule::Ptr<_1a7648b67_Data> _1a7660ce4_eval_i32_type_static(_1a764a6d5_Eval*,jule::Ptr<_1d0747985_Token>);
inline jule::Ptr<_1a7648b67_Data> _1a7661102_eval_i64_type_static(_1a764a6d5_Eval*,jule::Ptr<_1d0747985_Token>);
inline jule::Ptr<_1a7648b67_Data> _1a7661410_eval_u8_type_static(_1a764a6d5_Eval*,jule::Ptr<_1d0747985_Token>);
inline jule::Ptr<_1a7648b67_Data> _1a766171d_eval_u16_type_static(_1a764a6d5_Eval*,jule::Ptr<_1d0747985_Token>);
inline jule::Ptr<_1a7648b67_Data> _1a7661a2b_eval_u32_type_static(_1a764a6d5_Eval*,jule::Ptr<_1d0747985_Token>);
inline jule::Ptr<_1a7648b67_Data> _1a7661d39_eval_u64_type_static(_1a764a6d5_Eval*,jule::Ptr<_1d0747985_Token>);
inline jule::Ptr<_1a7648b67_Data> _1a7662147_eval_f32_type_tatic(_1a764a6d5_Eval*,jule::Ptr<_1d0747985_Token>);
inline jule::Ptr<_1a7648b67_Data> _1a7662455_eval_f64_type_static(_1a764a6d5_Eval*,jule::Ptr<_1d0747985_Token>);
inline jule::Ptr<_1a7648b67_Data> _1a766280c_eval_prim_static(_1a764a6d5_Eval*,jule::Str,jule::Ptr<_1d0747985_Token>);
inline jule::Ptr<_1a7648b67_Data> _1a7662bb4_eval_type_static(_1a764a6d5_Eval*,jule::Ptr<_1a7648b67_Data>,jule::Ptr<_1d075c99a_SubIdentExpr>);
inline jule::Ptr<_1a7648b67_Data> _1a766306b_eval_obj_sub_ident(_1a764a6d5_Eval*,jule::Ptr<_1a7648b67_Data>,jule::Ptr<_1d075c99a_SubIdentExpr>);
inline jule::Ptr<_1a7648b67_Data> _1a7663379_eval_sub_ident(jule::Ptr<_1a764a6d5_Eval>,jule::Ptr<_1d075c99a_SubIdentExpr>);
inline jule::Ptr<_1a7648b67_Data> _1a7663687_eval_tuple(jule::Ptr<_1a764a6d5_Eval>,jule::Ptr<_1d075b526_TupleExpr>);
inline jule::Ptr<_1a7648b67_Data> _1a7663a3e_eval_map(jule::Ptr<_1a764a6d5_Eval>,jule::Ptr<_1a767cb24_Map>,jule::Ptr<_1d075d69e_BraceLit>);
inline jule::Ptr<_1a7648b67_Data> _1a7663d4c_eval_brace_lit(jule::Ptr<_1a764a6d5_Eval>,jule::Ptr<_1d075d69e_BraceLit>);
inline jule::Ptr<_1a7648b67_Data> _1a766415a_eval_anon_fn(_1a764a6d5_Eval*,jule::Ptr<_1d0763709_FnDecl>);
inline jule::Ptr<_1a7648b67_Data> _1a7664468_eval_binop(jule::Ptr<_1a764a6d5_Eval>,jule::Ptr<_1d075cb87_BinopExpr>);
inline jule::Ptr<_1a7648b67_Data> _1a7664776_eval_expr_kind(jule::Ptr<_1a764a6d5_Eval>,jule::Any);
inline jule::Ptr<_1a7648b67_Data> _1a7664a84_eval(jule::Ptr<_1a764a6d5_Eval>,jule::Ptr<_1d075b14c_Expr>);
inline jule::Ptr<_1a7648b67_Data> _1a7664d92_eval_expr(jule::Ptr<_1a764a6d5_Eval>,jule::Ptr<_1d075b14c_Expr>);
struct _1a764a6d5_Eval {
	jule::Ptr<_1a75d1e74_Sema> _field_s = jule::Ptr<_1a75d1e74_Sema>();
	jule::Trait<_1a768b25e_Lookup> _field_lookup = jule::Trait<_1a768b25e_Lookup>();
	jule::Ptr<_1a7672da0_TypeKind> _field_prefix = jule::Ptr<_1a7672da0_TypeKind>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_immutable = jule::Bool();
	jule::Bool _field_ignored = jule::Bool();
	jule::Bool _field_dis_builtin = jule::Bool();
	jule::Ptr<_1a75ec478_Var> _field_owner = jule::Ptr<_1a75ec478_Var>();
	jule::Ptr<_1a6416ae0_FieldIns> _field_field = jule::Ptr<_1a6416ae0_FieldIns>();
	jule::Bool _field_arg = jule::Bool();


	_1a764a6d5_Eval(jule::Ptr<_1a75d1e74_Sema> __param_s, jule::Trait<_1a768b25e_Lookup> __param_lookup, jule::Ptr<_1a7672da0_TypeKind> __param_prefix, jule::Bool __param_unsafety, jule::Bool __param_immutable, jule::Bool __param_ignored, jule::Bool __param_dis_builtin, jule::Ptr<_1a75ec478_Var> __param_owner, jule::Ptr<_1a6416ae0_FieldIns> __param_field, jule::Bool __param_arg): _field_s(__param_s), _field_lookup(__param_lookup), _field_prefix(__param_prefix), _field_unsafety(__param_unsafety), _field_immutable(__param_immutable), _field_ignored(__param_ignored), _field_dis_builtin(__param_dis_builtin), _field_owner(__param_owner), _field_field(__param_field), _field_arg(__param_arg) {}

	

	_1a764a6d5_Eval(void) = default;

	inline bool operator==(_1a764a6d5_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_dis_builtin == _other._field_dis_builtin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field &&
			this->_field_arg == _other._field_arg;
	}

	inline bool operator!=(_1a764a6d5_Eval _other) { return !this->operator==(_other); }


};
inline _1a7665315_UnaryEval static__1a76657bb_new(jule::Ptr<_1a764a6d5_Eval>);
inline void _1a7665997_minus(_1a7665315_UnaryEval*);
inline void _1a7665b73_plus(_1a7665315_UnaryEval*);
inline void _1a7665d4e_caret(_1a7665315_UnaryEval*);
inline void _1a766602a_excl(_1a7665315_UnaryEval*);
inline void _1a7666206_star(_1a7665315_UnaryEval*);
inline void _1a76663d2_amper(_1a7665315_UnaryEval*);
inline void _1a76665ad_type_decl(_1a7665315_UnaryEval*);
inline void _1a7666789_eval_data(_1a7665315_UnaryEval*);
inline jule::Ptr<_1a7648b67_Data> _1a7666a64_eval(_1a7665315_UnaryEval*,jule::Ptr<_1d075c1e7_UnaryExpr>);
struct _1a7665315_UnaryEval {
	jule::Ptr<_1a764a6d5_Eval> _field_e = jule::Ptr<_1a764a6d5_Eval>();
	jule::Ptr<_1a7648b67_Data> _field_d = jule::Ptr<_1a7648b67_Data>();
	jule::Ptr<_1d075c1e7_UnaryExpr> _field_u = jule::Ptr<_1d075c1e7_UnaryExpr>();


	_1a7665315_UnaryEval(jule::Ptr<_1a764a6d5_Eval> __param_e, jule::Ptr<_1a7648b67_Data> __param_d, jule::Ptr<_1d075c1e7_UnaryExpr> __param_u): _field_e(__param_e), _field_d(__param_d), _field_u(__param_u) {}

	

	_1a7665315_UnaryEval(void) = default;

	inline bool operator==(_1a7665315_UnaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_1a7665315_UnaryEval _other) { return !this->operator==(_other); }


};
inline _1a76670a3_BinaryEval static__1a7667658_new_plain(jule::Ptr<_1a764a6d5_Eval>);
inline _1a76670a3_BinaryEval static__1a7667999_new(jule::Ptr<_1a764a6d5_Eval>,jule::Ptr<_1d0747985_Token>);
inline jule::Bool _1a7667c52_check_type_compatibility(_1a76670a3_BinaryEval*);
inline jule::Bool _1a766801b_check_struct_common_operator_compatibility(_1a76670a3_BinaryEval*);
inline jule::Ptr<_1a7648b67_Data> _1a7668280_eval_nil(_1a76670a3_BinaryEval*);
inline jule::Ptr<_1a7648b67_Data> _1a76684e4_eval_enum(_1a76670a3_BinaryEval*);
inline jule::Ptr<_1a7648b67_Data> _1a7668758_eval_sptr(_1a76670a3_BinaryEval*);
inline jule::Ptr<_1a7648b67_Data> _1a76689bc_eval_ptr(_1a76670a3_BinaryEval*);
inline jule::Ptr<_1a7648b67_Data> _1a7668c31_eval_arr(_1a76670a3_BinaryEval*);
inline jule::Ptr<_1a7648b67_Data> _1a7668e95_eval_slc(_1a76670a3_BinaryEval*);
inline jule::Ptr<_1a7648b67_Data> _1a7669209_eval_fn(_1a76670a3_BinaryEval*);
inline jule::Ptr<_1a7648b67_Data> _1a766946d_eval_struct(_1a76670a3_BinaryEval*);
inline jule::Ptr<_1a7648b67_Data> _1a76696d2_eval_trait(_1a76670a3_BinaryEval*);
inline jule::Ptr<_1a7648b67_Data> _1a7669946_eval_any(_1a76670a3_BinaryEval*);
inline jule::Ptr<_1a7648b67_Data> _1a7669baa_eval_bool(_1a76670a3_BinaryEval*);
inline jule::Ptr<_1a7648b67_Data> _1a7669e1e_eval_str(_1a76670a3_BinaryEval*);
inline void _1a766a0ea_set_type_to_greater(_1a76670a3_BinaryEval*);
inline void _1a766a33c_check_mod_data(_1a76670a3_BinaryEval*,jule::Ptr<_1a7648b67_Data>&);
inline void _1a766a518_mod(_1a76670a3_BinaryEval*);
inline jule::Bool _1a766a914_numbers_are_compatibile(_1a76670a3_BinaryEval*,jule::Str&,jule::Str&);
inline jule::Ptr<_1a7648b67_Data> _1a766ab67_eval_float(_1a76670a3_BinaryEval*);
inline jule::Ptr<_1a7648b67_Data> _1a766adcb_eval_int(_1a76670a3_BinaryEval*);
inline jule::Ptr<_1a7648b67_Data> _1a766b140_eval_prim(_1a76670a3_BinaryEval*);
inline jule::Ptr<_1a7648b67_Data> _1a766b3a4_eval_op(_1a76670a3_BinaryEval*);
inline void _1a766b629_eval_const(_1a76670a3_BinaryEval*,jule::Ptr<_1a7648b67_Data>&);
inline void _1a766b89e_check_data(_1a76670a3_BinaryEval*,jule::Ptr<_1a7648b67_Data>&);
inline void _1a766ba7a_check_datas(_1a76670a3_BinaryEval*);
inline void _1a766bd00_set_model(_1a76670a3_BinaryEval*,jule::Ptr<_1a7648b67_Data>&);
inline void _1a766c075_post_eval(_1a76670a3_BinaryEval*,jule::Ptr<_1a7648b67_Data>&);
inline jule::Ptr<_1a7648b67_Data> _1a766c42c_solve_explicit(_1a76670a3_BinaryEval*,jule::Ptr<_1a7648b67_Data>&,jule::Ptr<_1a7648b67_Data>&);
inline jule::Ptr<_1a7648b67_Data> _1a766c73a_eval(_1a76670a3_BinaryEval*,jule::Ptr<_1d075cb87_BinopExpr>&);
struct _1a76670a3_BinaryEval {
	jule::Ptr<_1a764a6d5_Eval> _field_e = jule::Ptr<_1a764a6d5_Eval>();
	jule::Ptr<_1a7648b67_Data> _field_l = jule::Ptr<_1a7648b67_Data>();
	jule::Ptr<_1a7648b67_Data> _field_r = jule::Ptr<_1a7648b67_Data>();
	jule::Ptr<_1d0747985_Token> _field_op = jule::Ptr<_1d0747985_Token>();


	_1a76670a3_BinaryEval(jule::Ptr<_1a764a6d5_Eval> __param_e, jule::Ptr<_1a7648b67_Data> __param_l, jule::Ptr<_1a7648b67_Data> __param_r, jule::Ptr<_1d0747985_Token> __param_op): _field_e(__param_e), _field_l(__param_l), _field_r(__param_r), _field_op(__param_op) {}

	

	_1a76670a3_BinaryEval(void) = default;

	inline bool operator==(_1a76670a3_BinaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1a76670a3_BinaryEval _other) { return !this->operator==(_other); }


};
struct _1a7672168_TypeAlias {
	jule::Ptr<_1d0761c13_ScopeTree> _field_scope = jule::Ptr<_1d0761c13_ScopeTree>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_used = jule::Bool();
	jule::Bool _field_generic = jule::Bool();
	jule::Ptr<_1d0747985_Token> _field_token = jule::Ptr<_1d0747985_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1a7676c3e_TypeSymbol> _field_kind = jule::Ptr<_1a7676c3e_TypeSymbol>();
	jule::Slice<jule::Any> _field_refers = jule::Slice<jule::Any>();
	jule::Slice<jule::Ptr<_1a7672168_TypeAlias>> _field_generics = jule::Slice<jule::Ptr<_1a7672168_TypeAlias>>();


	_1a7672168_TypeAlias(jule::Ptr<_1d0761c13_ScopeTree> __param_scope, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_used, jule::Bool __param_generic, jule::Ptr<_1d0747985_Token> __param_token, jule::Str __param_ident, jule::Ptr<_1a7676c3e_TypeSymbol> __param_kind, jule::Slice<jule::Any> __param_refers, jule::Slice<jule::Ptr<_1a7672168_TypeAlias>> __param_generics): _field_scope(__param_scope), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_used(__param_used), _field_generic(__param_generic), _field_token(__param_token), _field_ident(__param_ident), _field_kind(__param_kind), _field_refers(__param_refers), _field_generics(__param_generics) {}

	

	_1a7672168_TypeAlias(void) = default;

	inline bool operator==(_1a7672168_TypeAlias _other) {
		return 
			this->_field_scope == _other._field_scope &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_used == _other._field_used &&
			this->_field_generic == _other._field_generic &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_refers == _other._field_refers &&
			this->_field_generics == _other._field_generics;
	}

	inline bool operator!=(_1a7672168_TypeAlias _other) { return !this->operator==(_other); }


};
inline jule::Str _1a7673257_to_str(_1a7672da0_TypeKind*);
inline jule::Bool _1a7673565_equals(jule::Ptr<_1a7672da0_TypeKind>,jule::Ptr<_1a7672da0_TypeKind>);
inline jule::Bool _1a7673a0a_cpp_linked(_1a7672da0_TypeKind*);
inline jule::Bool _1a7673c6e_is_nil(_1a7672da0_TypeKind*);
inline jule::Bool _1a7673ed3_void(_1a7672da0_TypeKind*);
inline jule::Bool _1a7674247_mutable(_1a7672da0_TypeKind*);
inline jule::Bool _1a76744ab_nil_compatible(_1a7672da0_TypeKind*);
inline jule::Bool _1a7674720_performs_rc(_1a7672da0_TypeKind*);
inline jule::Bool _1a7674984_supports_cloning(_1a7672da0_TypeKind*);
inline jule::Bool _1a7674be8_variadicable(_1a7672da0_TypeKind*);
inline jule::Ptr<_1a7677602_Prim> _1a7674e5c_prim(_1a7672da0_TypeKind*);
inline jule::Ptr<_1a767ab11_Sptr> _1a76751c1_sptr(_1a7672da0_TypeKind*);
inline jule::Ptr<_1a767e175_Ptr> _1a7675435_ptr(_1a7672da0_TypeKind*);
inline jule::Ptr<_1a7467de8_Enum> _1a7675699_enm(_1a7672da0_TypeKind*);
inline jule::Ptr<_1a767d718_Arr> _1a767590d_arr(_1a7672da0_TypeKind*);
inline jule::Ptr<_1a767b56d_Slc> _1a7675b72_slc(_1a7672da0_TypeKind*);
inline jule::Ptr<_1a6429be1_FnIns> _1a7675dd6_fnc(_1a7672da0_TypeKind*);
inline jule::Ptr<_1a641744d_StructIns> _1a767614a_strct(_1a7672da0_TypeKind*);
inline jule::Ptr<_1a7465bd7_Trait> _1a76763ae_trt(_1a7672da0_TypeKind*);
inline jule::Ptr<_1a767cb24_Map> _1a7676623_map(_1a7672da0_TypeKind*);
inline jule::Ptr<_1a767c063_Tuple> _1a7676887_tup(_1a7672da0_TypeKind*);
struct _1a7672da0_TypeKind {
	jule::Str _field_cpp_ident = jule::Str();
	jule::Bool _field_generic = jule::Bool();
	jule::Bool _field_variadic = jule::Bool();
	jule::Trait<_1a7672971_Kind> _field_kind = jule::Trait<_1a7672971_Kind>();


	_1a7672da0_TypeKind(jule::Str __param_cpp_ident, jule::Bool __param_generic, jule::Bool __param_variadic, jule::Trait<_1a7672971_Kind> __param_kind): _field_cpp_ident(__param_cpp_ident), _field_generic(__param_generic), _field_variadic(__param_variadic), _field_kind(__param_kind) {}

	

	_1a7672da0_TypeKind(void) = default;

	inline bool operator==(_1a7672da0_TypeKind _other) {
		return 
			this->_field_cpp_ident == _other._field_cpp_ident &&
			this->_field_generic == _other._field_generic &&
			this->_field_variadic == _other._field_variadic &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1a7672da0_TypeKind _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a767713a_checked(_1a7676c3e_TypeSymbol*);
inline void _1a7677316_remove_kind(_1a7676c3e_TypeSymbol*);
struct _1a7676c3e_TypeSymbol {
	jule::Ptr<_1d0759c1c_TypeDecl> _field_decl = jule::Ptr<_1d0759c1c_TypeDecl>();
	jule::Ptr<_1a7672da0_TypeKind> _field_kind = jule::Ptr<_1a7672da0_TypeKind>();


	_1a7676c3e_TypeSymbol(jule::Ptr<_1d0759c1c_TypeDecl> __param_decl, jule::Ptr<_1a7672da0_TypeKind> __param_kind): _field_decl(__param_decl), _field_kind(__param_kind) {}

	

	_1a7676c3e_TypeSymbol(void) = default;

	inline bool operator==(_1a7676c3e_TypeSymbol _other) {
		return 
			this->_field_decl == _other._field_decl &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1a7676c3e_TypeSymbol _other) { return !this->operator==(_other); }


};
inline jule::Str _1a7677965_to_str(_1a7677602_Prim*);
inline jule::Bool _1a7677c73_equals(jule::Ptr<_1a7677602_Prim>,jule::Ptr<_1a7672da0_TypeKind>);
inline jule::Bool _1a76781d5_is_i8(_1a7677602_Prim*);
inline jule::Bool _1a7678449_is_i16(_1a7677602_Prim*);
inline jule::Bool _1a76786ad_is_i32(_1a7677602_Prim*);
inline jule::Bool _1a7678922_is_i64(_1a7677602_Prim*);
inline jule::Bool _1a7678b86_is_u8(_1a7677602_Prim*);
inline jule::Bool _1a7678dea_is_u16(_1a7677602_Prim*);
inline jule::Bool _1a767915e_is_u32(_1a7677602_Prim*);
inline jule::Bool _1a76793c3_is_u64(_1a7677602_Prim*);
inline jule::Bool _1a7679637_is_f32(_1a7677602_Prim*);
inline jule::Bool _1a767989b_is_f64(_1a7677602_Prim*);
inline jule::Bool _1a7679b10_is_int(_1a7677602_Prim*);
inline jule::Bool _1a7679d74_is_uint(_1a7677602_Prim*);
inline jule::Bool _1a767a0d8_is_uintptr(_1a7677602_Prim*);
inline jule::Bool _1a767a34c_is_bool(_1a7677602_Prim*);
inline jule::Bool _1a767a5b1_is_str(_1a7677602_Prim*);
inline jule::Bool _1a767a825_is_any(_1a7677602_Prim*);
struct _1a7677602_Prim {
	jule::Str _field_kind = jule::Str();


	_1a7677602_Prim(jule::Str __param_kind): _field_kind(__param_kind) {}

	

	_1a7677602_Prim(void) = default;

	inline bool operator==(_1a7677602_Prim _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1a7677602_Prim _other) { return !this->operator==(_other); }


};
inline jule::Str _1a767ae74_to_str(_1a767ab11_Sptr*);
inline jule::Bool _1a767b282_equals(jule::Ptr<_1a767ab11_Sptr>,jule::Ptr<_1a7672da0_TypeKind>);
struct _1a767ab11_Sptr {
	jule::Ptr<_1a7672da0_TypeKind> _field_elem = jule::Ptr<_1a7672da0_TypeKind>();


	_1a767ab11_Sptr(jule::Ptr<_1a7672da0_TypeKind> __param_elem): _field_elem(__param_elem) {}

	

	_1a767ab11_Sptr(void) = default;

	inline bool operator==(_1a767ab11_Sptr _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1a767ab11_Sptr _other) { return !this->operator==(_other); }


};
inline jule::Str _1a767b9e1_to_str(_1a767b56d_Slc*);
inline jule::Bool _1a767bcee_equals(jule::Ptr<_1a767b56d_Slc>,jule::Ptr<_1a7672da0_TypeKind>);
struct _1a767b56d_Slc {
	jule::Ptr<_1a7672da0_TypeKind> _field_elem = jule::Ptr<_1a7672da0_TypeKind>();


	_1a767b56d_Slc(jule::Ptr<_1a7672da0_TypeKind> __param_elem): _field_elem(__param_elem) {}

	

	_1a767b56d_Slc(void) = default;

	inline bool operator==(_1a767b56d_Slc _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1a767b56d_Slc _other) { return !this->operator==(_other); }


};
inline jule::Str _1a767c45e_to_str(_1a767c063_Tuple*);
inline jule::Bool _1a767c76c_equals(jule::Ptr<_1a767c063_Tuple>,jule::Ptr<_1a7672da0_TypeKind>);
struct _1a767c063_Tuple {
	jule::Slice<jule::Ptr<_1a7672da0_TypeKind>> _field_types = jule::Slice<jule::Ptr<_1a7672da0_TypeKind>>();


	_1a767c063_Tuple(jule::Slice<jule::Ptr<_1a7672da0_TypeKind>> __param_types): _field_types(__param_types) {}

	

	_1a767c063_Tuple(void) = default;

	inline bool operator==(_1a767c063_Tuple _other) {
		return 
			this->_field_types == _other._field_types;
	}

	inline bool operator!=(_1a767c063_Tuple _other) { return !this->operator==(_other); }


};
inline jule::Str _1a767ce87_to_str(_1a767cb24_Map*);
inline jule::Bool _1a767d295_equals(jule::Ptr<_1a767cb24_Map>,jule::Ptr<_1a7672da0_TypeKind>);
struct _1a767cb24_Map {
	jule::Ptr<_1a7672da0_TypeKind> _field_key = jule::Ptr<_1a7672da0_TypeKind>();
	jule::Ptr<_1a7672da0_TypeKind> _field_val = jule::Ptr<_1a7672da0_TypeKind>();


	_1a767cb24_Map(jule::Ptr<_1a7672da0_TypeKind> __param_key, jule::Ptr<_1a7672da0_TypeKind> __param_val): _field_key(__param_key), _field_val(__param_val) {}

	

	_1a767cb24_Map(void) = default;

	inline bool operator==(_1a767cb24_Map _other) {
		return 
			this->_field_key == _other._field_key &&
			this->_field_val == _other._field_val;
	}

	inline bool operator!=(_1a767cb24_Map _other) { return !this->operator==(_other); }


};
inline jule::Str _1a767da7b_to_str(_1a767d718_Arr*);
inline jule::Bool _1a767dd89_equals(jule::Ptr<_1a767d718_Arr>,jule::Ptr<_1a7672da0_TypeKind>);
struct _1a767d718_Arr {
	jule::Bool _field_auto = jule::Bool();
	jule::I64 _field_n = jule::I64();
	jule::Ptr<_1a7672da0_TypeKind> _field_elem = jule::Ptr<_1a7672da0_TypeKind>();


	_1a767d718_Arr(jule::Bool __param_auto, jule::I64 __param_n, jule::Ptr<_1a7672da0_TypeKind> __param_elem): _field_auto(__param_auto), _field_n(__param_n), _field_elem(__param_elem) {}

	

	_1a767d718_Arr(void) = default;

	inline bool operator==(_1a767d718_Arr _other) {
		return 
			this->_field_auto == _other._field_auto &&
			this->_field_n == _other._field_n &&
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1a767d718_Arr _other) { return !this->operator==(_other); }


};
inline jule::Str _1a767e4d8_to_str(_1a767e175_Ptr*);
inline jule::Bool _1a767e7e6_equals(jule::Ptr<_1a767e175_Ptr>,jule::Ptr<_1a7672da0_TypeKind>);
inline jule::Bool _1a767eb48_is_unsafe(_1a767e175_Ptr*);
struct _1a767e175_Ptr {
	jule::Ptr<_1a7672da0_TypeKind> _field_elem = jule::Ptr<_1a7672da0_TypeKind>();


	_1a767e175_Ptr(jule::Ptr<_1a7672da0_TypeKind> __param_elem): _field_elem(__param_elem) {}

	

	_1a767e175_Ptr(void) = default;

	inline bool operator==(_1a767e175_Ptr _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1a767e175_Ptr _other) { return !this->operator==(_other); }


};
struct _1a768181a_Referencer {
	jule::Str _field_ident = jule::Str();
	jule::Any _field_owner = jule::Any();
	jule::Slice<jule::Any>* _field_refs = nullptr;


	_1a768181a_Referencer(jule::Str __param_ident, jule::Any __param_owner, jule::Slice<jule::Any>* __param_refs): _field_ident(__param_ident), _field_owner(__param_owner), _field_refs(__param_refs) {}

	

	_1a768181a_Referencer(void) = default;

	inline bool operator==(_1a768181a_Referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_1a768181a_Referencer _other) { return !this->operator==(_other); }


};
inline void _1a7682b5c_push_err(_1a7682497_TypeChecker*,jule::Ptr<_1d0747985_Token>,jule::Str,jule::Slice<jule::Any>);
inline void _1a7682d38_allow_builtin(_1a7682497_TypeChecker*);
inline void _1a7683014_disallow_builtin(_1a7682497_TypeChecker*);
inline jule::Ptr<_1a7677602_Prim> _1a7683322_build_prim(_1a7682497_TypeChecker*,jule::Ptr<_1d0759e09_IdentTypeDecl>&);
inline void _1a76836da_push_cycle_error(_1a7682497_TypeChecker*,jule::Any,jule::Any,jule::Str&);
inline jule::Bool _1a7683a92_check_cross_cycle(_1a7682497_TypeChecker*,jule::Any,jule::Str&);
inline jule::Bool _1a7683e49_check_illegal_cycles(_1a7682497_TypeChecker*,jule::Ptr<_1d0759e09_IdentTypeDecl>&,jule::Any);
inline jule::Trait<_1a7672971_Kind> _1a7684301_from_type_alias(_1a7682497_TypeChecker*,jule::Ptr<_1d0759e09_IdentTypeDecl>&,jule::Ptr<_1a7672168_TypeAlias>&);
inline jule::Ptr<_1a7467de8_Enum> _1a76846a8_from_enum(_1a7682497_TypeChecker*,jule::Ptr<_1d0759e09_IdentTypeDecl>&,jule::Ptr<_1a7467de8_Enum>&);
inline jule::Ptr<_1a7465bd7_Trait> _1a7684a60_from_trait(_1a7682497_TypeChecker*,jule::Ptr<_1d0759e09_IdentTypeDecl>&,jule::Ptr<_1a7465bd7_Trait>&);
inline jule::Bool _1a7684e17_check_struct_ins(_1a7682497_TypeChecker*,jule::Ptr<_1a641744d_StructIns>&,jule::Ptr<_1d0747985_Token>&);
inline void _1a76851d1_append_used_struct_reference(_1a7682497_TypeChecker*,jule::Ptr<_1a64147be_Struct>&);
inline jule::Ptr<_1a641744d_StructIns> _1a7685577_build_struct_instance(_1a7682497_TypeChecker*,jule::Ptr<_1d0759e09_IdentTypeDecl>&,jule::Ptr<_1a64147be_Struct>&);
inline jule::Ptr<_1a641744d_StructIns> _1a768592e_from_struct(_1a7682497_TypeChecker*,jule::Ptr<_1d0759e09_IdentTypeDecl>&,jule::Ptr<_1a64147be_Struct>&);
inline jule::Trait<_1a7672971_Kind> _1a7685cd6_get_def(_1a7682497_TypeChecker*,jule::Trait<_1a768b25e_Lookup>,jule::Ptr<_1d0759e09_IdentTypeDecl>&);
inline jule::Trait<_1a7672971_Kind> _1a76860e4_build_ident(_1a7682497_TypeChecker*,jule::Ptr<_1d0759e09_IdentTypeDecl>);
inline jule::Ptr<_1a767ab11_Sptr> _1a7686402_build_sptr_from_type(_1a7682497_TypeChecker*,jule::Ptr<_1a7672da0_TypeKind>&);
inline jule::Ptr<_1a767ab11_Sptr> _1a7686710_build_sptr(_1a7682497_TypeChecker*,jule::Ptr<_1d075a2d3_SptrTypeDecl>);
inline jule::Ptr<_1a767e175_Ptr> _1a7686a1d_build_ptr_from_type(_1a7682497_TypeChecker*,jule::Ptr<_1a7672da0_TypeKind>&);
inline jule::Ptr<_1a767e175_Ptr> _1a7686d2b_build_ptr(_1a7682497_TypeChecker*,jule::Ptr<_1d075a899_PtrTypeDecl>);
inline jule::Ptr<_1a767b56d_Slc> _1a7687139_build_slc(_1a7682497_TypeChecker*,jule::Ptr<_1d075a4c0_SlcTypeDecl>);
inline jule::Ptr<_1a767d718_Arr> _1a7687447_build_arr(_1a7682497_TypeChecker*,jule::Ptr<_1d075aa86_ArrTypeDecl>);
inline jule::Ptr<_1a767cb24_Map> _1a7687755_build_map(_1a7682497_TypeChecker*,jule::Ptr<_1d075ac73_MapTypeDecl>);
inline jule::Ptr<_1a767c063_Tuple> _1a7687a63_build_tuple(_1a7682497_TypeChecker*,jule::Ptr<_1d075a6ac_TupleTypeDecl>);
inline jule::Bool _1a7687d71_check_fn_types(_1a7682497_TypeChecker*,jule::Ptr<_1a6429be1_FnIns>&);
inline jule::Ptr<_1a6429be1_FnIns> _1a768817e_build_fn(_1a7682497_TypeChecker*,jule::Ptr<_1d0763709_FnDecl>);
inline jule::Trait<_1a7672971_Kind> _1a768848c_build_by_namespace(_1a7682497_TypeChecker*,jule::Ptr<_1d075a0e6_NamespaceTypeDecl>);
inline jule::Ptr<_1a7672da0_TypeKind> _1a768879a_build(_1a7682497_TypeChecker*,jule::Any&);
inline jule::Ptr<_1a7672da0_TypeKind> _1a7688aa8_check_decl(_1a7682497_TypeChecker*,jule::Ptr<_1d0759c1c_TypeDecl>&);
inline void _1a7688d2d_check(_1a7682497_TypeChecker*,jule::Ptr<_1a7676c3e_TypeSymbol>&);
struct _1a7682497_TypeChecker {
	jule::Ptr<_1a75d1e74_Sema> _field_s = jule::Ptr<_1a75d1e74_Sema>();
	jule::Trait<_1a768b25e_Lookup> _field_lookup = jule::Trait<_1a768b25e_Lookup>();
	jule::Ptr<_1a768181a_Referencer> _field_referencer = jule::Ptr<_1a768181a_Referencer>();
	jule::Ptr<_1d0747985_Token> _field_error_token = jule::Ptr<_1d0747985_Token>();
	jule::Slice<jule::Ptr<_1d075ee64_GenericDecl>> _field_ignore_generics = jule::Slice<jule::Ptr<_1d075ee64_GenericDecl>>();
	jule::Slice<jule::Ptr<_1a7672168_TypeAlias>> _field_use_generics = jule::Slice<jule::Ptr<_1a7672168_TypeAlias>>();
	jule::Bool _field_not_plain = jule::Bool();
	jule::Bool _field_dis_builtin = jule::Bool();
	jule::Bool _field_selection = jule::Bool();
	jule::Ptr<_1a7672168_TypeAlias> _field_owner_alias = jule::Ptr<_1a7672168_TypeAlias>();
	jule::Slice<jule::Ptr<_1a7672168_TypeAlias>> _field_banned_generics = jule::Slice<jule::Ptr<_1a7672168_TypeAlias>>();
	jule::Bool _field_inscatch = jule::Bool();


	_1a7682497_TypeChecker(jule::Ptr<_1a75d1e74_Sema> __param_s, jule::Trait<_1a768b25e_Lookup> __param_lookup, jule::Ptr<_1a768181a_Referencer> __param_referencer, jule::Ptr<_1d0747985_Token> __param_error_token, jule::Slice<jule::Ptr<_1d075ee64_GenericDecl>> __param_ignore_generics, jule::Slice<jule::Ptr<_1a7672168_TypeAlias>> __param_use_generics, jule::Bool __param_not_plain, jule::Bool __param_dis_builtin, jule::Bool __param_selection, jule::Ptr<_1a7672168_TypeAlias> __param_owner_alias, jule::Slice<jule::Ptr<_1a7672168_TypeAlias>> __param_banned_generics, jule::Bool __param_inscatch): _field_s(__param_s), _field_lookup(__param_lookup), _field_referencer(__param_referencer), _field_error_token(__param_error_token), _field_ignore_generics(__param_ignore_generics), _field_use_generics(__param_use_generics), _field_not_plain(__param_not_plain), _field_dis_builtin(__param_dis_builtin), _field_selection(__param_selection), _field_owner_alias(__param_owner_alias), _field_banned_generics(__param_banned_generics), _field_inscatch(__param_inscatch) {}

	

	_1a7682497_TypeChecker(void) = default;

	inline bool operator==(_1a7682497_TypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_referencer == _other._field_referencer &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_ignore_generics == _other._field_ignore_generics &&
			this->_field_use_generics == _other._field_use_generics &&
			this->_field_not_plain == _other._field_not_plain &&
			this->_field_dis_builtin == _other._field_dis_builtin &&
			this->_field_selection == _other._field_selection &&
			this->_field_owner_alias == _other._field_owner_alias &&
			this->_field_banned_generics == _other._field_banned_generics &&
			this->_field_inscatch == _other._field_inscatch;
	}

	inline bool operator!=(_1a7682497_TypeChecker _other) { return !this->operator==(_other); }


};
struct _1d0b69d74_CompileInfo {
	jule::Bool _field_prod = jule::Bool();
	jule::Bool _field_test = jule::Bool();
	jule::Str _field_compiler = jule::Str("clang", 5);
	jule::Str _field_cpp_std = jule::Str("cpp14", 5);


	_1d0b69d74_CompileInfo(jule::Bool __param_prod, jule::Bool __param_test, jule::Str __param_compiler, jule::Str __param_cpp_std): _field_prod(__param_prod), _field_test(__param_test), _field_compiler(__param_compiler), _field_cpp_std(__param_cpp_std) {}

	

	_1d0b69d74_CompileInfo(void) = default;

	inline bool operator==(_1d0b69d74_CompileInfo _other) {
		return 
			this->_field_prod == _other._field_prod &&
			this->_field_test == _other._field_test &&
			this->_field_compiler == _other._field_compiler &&
			this->_field_cpp_std == _other._field_cpp_std;
	}

	inline bool operator!=(_1d0b69d74_CompileInfo _other) { return !this->operator==(_other); }


};
inline void _1d076d945_push_err(_1d076d3e5_DirectiveEval*,jule::Ptr<_1d0747985_Token>,jule::Str,jule::Slice<jule::Any>);
inline jule::Slice<jule::Slice<jule::Ptr<_1d0747985_Token>>> _1d076dcec_split_operans(_1d076d3e5_DirectiveEval*,jule::Str,jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline jule::Bool _1d076e10a_eval_directive_ident(_1d076d3e5_DirectiveEval*,jule::Str);
inline jule::Bool _1d076e418_eval_directive_part(_1d076d3e5_DirectiveEval*,jule::Slice<jule::Ptr<_1d0747985_Token>>);
inline jule::Bool _1d076e67c_eval(_1d076d3e5_DirectiveEval*);
struct _1d076d3e5_DirectiveEval {
	jule::Slice<_1d0019224_Log> _field_logs = jule::Slice<_1d0019224_Log>();
	jule::Ptr<_1d06c9ecd_Directive> _field_d = jule::Ptr<_1d06c9ecd_Directive>();
	jule::Slice<jule::Str> _field_vars = jule::Slice<jule::Str>();


	_1d076d3e5_DirectiveEval(jule::Slice<_1d0019224_Log> __param_logs, jule::Ptr<_1d06c9ecd_Directive> __param_d, jule::Slice<jule::Str> __param_vars): _field_logs(__param_logs), _field_d(__param_d), _field_vars(__param_vars) {}

	

	_1d076d3e5_DirectiveEval(void) = default;

	inline bool operator==(_1d076d3e5_DirectiveEval _other) {
		return 
			this->_field_logs == _other._field_logs &&
			this->_field_d == _other._field_d &&
			this->_field_vars == _other._field_vars;
	}

	inline bool operator!=(_1d076d3e5_DirectiveEval _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1b65b7544_JuleImporter> static__1b65b4002_new(_1d0b69d74_CompileInfo);
inline jule::Slice<jule::Ptr<_1a75c928a_ImportInfo>> _1b65b5dc2_all_packages(_1b65b7544_JuleImporter*);
inline void _1b65b6d18_set_mod_path(_1b65b7544_JuleImporter*,jule::Str);
inline jule::Str _1b65b92d2_get_mod_path(_1b65b7544_JuleImporter*);
inline jule::Str _1b65b9c83_mod_by_id(_1b65b7544_JuleImporter*,jule::I64);
inline jule::Ptr<_1a75c928a_ImportInfo> _1b65bb3a0_get_import(_1b65b7544_JuleImporter*,jule::Str);
inline std::tuple<jule::Slice<jule::Ptr<_1d06e7b66_Ast>>,jule::Slice<_1d0019224_Log>> _1b65b7cd6_import_package(_1b65b7544_JuleImporter*,jule::Str,jule::Bool);
inline void _1b65b7e7e_imported(_1b65b7544_JuleImporter*,jule::Ptr<_1a75c928a_ImportInfo>);
inline std::tuple<jule::Bool,jule::Slice<_1d0019224_Log>> _1b65bdeda_is_pass_build_directives(_1b65b7544_JuleImporter*,jule::Ptr<_1d06e7b66_Ast>&);
struct _1b65b7544_JuleImporter {
	jule::Slice<jule::Str> _field_mods = jule::Slice<jule::Str>();
	jule::Str _field_mod = jule::Str();
	jule::Slice<jule::Ptr<_1a75c928a_ImportInfo>> _field_pkgs = jule::Slice<jule::Ptr<_1a75c928a_ImportInfo>>();
	jule::Slice<jule::Str> _field_vars = jule::Slice<jule::Str>();


	_1b65b7544_JuleImporter(jule::Slice<jule::Str> __param_mods, jule::Str __param_mod, jule::Slice<jule::Ptr<_1a75c928a_ImportInfo>> __param_pkgs, jule::Slice<jule::Str> __param_vars): _field_mods(__param_mods), _field_mod(__param_mod), _field_pkgs(__param_pkgs), _field_vars(__param_vars) {}

	

	_1b65b7544_JuleImporter(void) = default;

	inline bool operator==(_1b65b7544_JuleImporter _other) {
		return 
			this->_field_mods == _other._field_mods &&
			this->_field_mod == _other._field_mod &&
			this->_field_pkgs == _other._field_pkgs &&
			this->_field_vars == _other._field_vars;
	}

	inline bool operator!=(_1b65b7544_JuleImporter _other) { return !this->operator==(_other); }


};
struct _1b65924db_OrderedDefines {
	jule::Slice<jule::Ptr<_1a64147be_Struct>> _field_structs = jule::Slice<jule::Ptr<_1a64147be_Struct>>();


	_1b65924db_OrderedDefines(jule::Slice<jule::Ptr<_1a64147be_Struct>> __param_structs): _field_structs(__param_structs) {}

	

	_1b65924db_OrderedDefines(void) = default;

	inline bool operator==(_1b65924db_OrderedDefines _other) {
		return 
			this->_field_structs == _other._field_structs;
	}

	inline bool operator!=(_1b65924db_OrderedDefines _other) { return !this->operator==(_other); }


};
inline jule::Bool static__1b66b3794_is_common_ordered_0(jule::Slice<jule::Ptr<_1a64147be_Struct>>&,jule::Ptr<_1a64147be_Struct>);
inline void static__1b66b7105_order_common_0(jule::Slice<jule::Ptr<_1a64147be_Struct>>&);
inline void static__1b66bdabd_order_structures(jule::Slice<jule::Ptr<_1a64147be_Struct>>&);
struct _1b662c6ec_DefineOrderer {
	

	_1b662c6ec_DefineOrderer(void) = default;

	inline bool operator==(_1b662c6ec_DefineOrderer _other) { return true; }

	inline bool operator!=(_1b662c6ec_DefineOrderer _other) { return !this->operator==(_other); }


};
inline void _1b68b1585_optimize_child(jule::Ptr<_1b689822b_ScopeDeadCode>,jule::Ptr<_1a759e606_Scope>&);
inline void _1b68b6601_eliminate_followed(_1b689822b_ScopeDeadCode*);
inline void _1b68bc21c_optimize_stmt(jule::Ptr<_1b689822b_ScopeDeadCode>,jule::Any);
inline void _1b68be906_optimize_stmts(jule::Ptr<_1b689822b_ScopeDeadCode>);
struct _1b689822b_ScopeDeadCode {
	jule::Ptr<_1b689822b_ScopeDeadCode> _field_parent = jule::Ptr<_1b689822b_ScopeDeadCode>();
	jule::Ptr<_1a759e606_Scope> _field_s = jule::Ptr<_1a759e606_Scope>();
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::I64 _field_i = jule::I64();


	_1b689822b_ScopeDeadCode(jule::Ptr<_1b689822b_ScopeDeadCode> __param_parent, jule::Ptr<_1a759e606_Scope> __param_s, jule::Slice<jule::Any>* __param_stmts, jule::I64 __param_i): _field_parent(__param_parent), _field_s(__param_s), _field_stmts(__param_stmts), _field_i(__param_i) {}

	

	_1b689822b_ScopeDeadCode(void) = default;

	inline bool operator==(_1b689822b_ScopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1b689822b_ScopeDeadCode _other) { return !this->operator==(_other); }


};
inline void static__1b694277b_reset(void);
inline void static__1b6975b22_print(jule::Str,jule::Str);
struct _1b6a2100d_AnsiEscape {
	

	_1b6a2100d_AnsiEscape(void) = default;

	inline bool operator==(_1b6a2100d_AnsiEscape _other) { return true; }

	inline bool operator!=(_1b6a2100d_AnsiEscape _other) { return !this->operator==(_other); }


};
inline void static__1b69773d7_log_flat(_1d0019224_Log&);
inline void static__1b6987a35_log_error(_1d0019224_Log&);
inline void static__1b6989262_log(_1d0019224_Log&);
inline void static__1b698ced0_print_logs(jule::Slice<_1d0019224_Log>&);
struct _1b6a4b720_Logger {
	

	_1b6a4b720_Logger(void) = default;

	inline bool operator==(_1b6a4b720_Logger _other) { return true; }

	inline bool operator!=(_1b6a4b720_Logger _other) { return !this->operator==(_other); }


};
struct _1a7d52c99_UnsafeBinopExprModel {
	jule::Ptr<_1a6419571_BinopExprModel> _field_node = jule::Ptr<_1a6419571_BinopExprModel>();


	_1a7d52c99_UnsafeBinopExprModel(jule::Ptr<_1a6419571_BinopExprModel> __param_node): _field_node(__param_node) {}

	

	_1a7d52c99_UnsafeBinopExprModel(void) = default;

	inline bool operator==(_1a7d52c99_UnsafeBinopExprModel _other) {
		return 
			this->_field_node == _other._field_node;
	}

	inline bool operator!=(_1a7d52c99_UnsafeBinopExprModel _other) { return !this->operator==(_other); }


};
struct _1a7d538d2_UnsafeIndexingExprModel {
	jule::Ptr<_1a641bb8e_IndexingExprModel> _field_node = jule::Ptr<_1a641bb8e_IndexingExprModel>();


	_1a7d538d2_UnsafeIndexingExprModel(jule::Ptr<_1a641bb8e_IndexingExprModel> __param_node): _field_node(__param_node) {}

	

	_1a7d538d2_UnsafeIndexingExprModel(void) = default;

	inline bool operator==(_1a7d538d2_UnsafeIndexingExprModel _other) {
		return 
			this->_field_node == _other._field_node;
	}

	inline bool operator!=(_1a7d538d2_UnsafeIndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1a7d60889_PushToSliceExprModel {
	jule::Any _field_dest = jule::Any();
	jule::Ptr<_1a641b71b_SliceExprModel> _field_elems = jule::Ptr<_1a641b71b_SliceExprModel>();


	_1a7d60889_PushToSliceExprModel(jule::Any __param_dest, jule::Ptr<_1a641b71b_SliceExprModel> __param_elems): _field_dest(__param_dest), _field_elems(__param_elems) {}

	

	_1a7d60889_PushToSliceExprModel(void) = default;

	inline bool operator==(_1a7d60889_PushToSliceExprModel _other) {
		return 
			this->_field_dest == _other._field_dest &&
			this->_field_elems == _other._field_elems;
	}

	inline bool operator!=(_1a7d60889_PushToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1a7d60e0b_MutSlicingExprModel {
	jule::Ptr<_1d0747985_Token> _field_token = jule::Ptr<_1d0747985_Token>();
	jule::Any _field_expr = jule::Any();
	jule::Any _field_left = jule::Any();
	jule::Any _field_right = jule::Any();


	_1a7d60e0b_MutSlicingExprModel(jule::Ptr<_1d0747985_Token> __param_token, jule::Any __param_expr, jule::Any __param_left, jule::Any __param_right): _field_token(__param_token), _field_expr(__param_expr), _field_left(__param_left), _field_right(__param_right) {}

	

	_1a7d60e0b_MutSlicingExprModel(void) = default;

	inline bool operator==(_1a7d60e0b_MutSlicingExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right;
	}

	inline bool operator!=(_1a7d60e0b_MutSlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1a7d61307_StrInsertBeginExprModel {
	jule::Any _field_dest = jule::Any();
	jule::Any _field_expr = jule::Any();


	_1a7d61307_StrInsertBeginExprModel(jule::Any __param_dest, jule::Any __param_expr): _field_dest(__param_dest), _field_expr(__param_expr) {}

	

	_1a7d61307_StrInsertBeginExprModel(void) = default;

	inline bool operator==(_1a7d61307_StrInsertBeginExprModel _other) {
		return 
			this->_field_dest == _other._field_dest &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1a7d61307_StrInsertBeginExprModel _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a7d626b0_ScopeOptimizer> static__1a7d62b88_new(jule::Ptr<_1a759e606_Scope>);
inline void _1a7d62e0d_set_current_stmt(_1a7d626b0_ScopeOptimizer*,jule::Any);
inline void _1a7d63183_optimize_data(_1a7d626b0_ScopeOptimizer*,jule::Ptr<_1a7648b67_Data>);
inline void _1a7d63408_optimize_var(_1a7d626b0_ScopeOptimizer*,jule::Ptr<_1a75ec478_Var>);
inline void _1a7d6367d_optimize_conditional(_1a7d626b0_ScopeOptimizer*,jule::Ptr<_1a7550c6c_Conditional>);
inline void _1a7d63a8a_build_default_constat_true_case(_1a7d626b0_ScopeOptimizer*,jule::Ptr<_1a75b31ec_Case>,jule::I64&,jule::Ptr<_1a75b2cce_Match>&);
inline void _1a7d63cee_optimize_match(_1a7d626b0_ScopeOptimizer*,jule::Ptr<_1a75b2cce_Match>);
inline void _1a7d64074_optimize_range_iter(_1a7d626b0_ScopeOptimizer*,jule::Ptr<_1a7561c6c_RangeIter>);
inline void _1a7d642e9_optimize_while_iter(_1a7d626b0_ScopeOptimizer*,jule::Ptr<_1a7561a80_WhileIter>);
inline jule::Bool _1a7d64607_substr(_1a7d626b0_ScopeOptimizer*,jule::Ptr<_1a75b2905_Assign>);
inline jule::Bool _1a7d64915_str_insert(_1a7d626b0_ScopeOptimizer*,jule::Ptr<_1a75b2905_Assign>);
inline jule::Bool _1a7d64c23_str_assign(_1a7d626b0_ScopeOptimizer*,jule::Ptr<_1a75b2905_Assign>);
inline void _1a7d64e98_optimize_assign(_1a7d626b0_ScopeOptimizer*,jule::Ptr<_1a75b2905_Assign>);
inline void _1a7d6521d_optimize_multi_assign(_1a7d626b0_ScopeOptimizer*,jule::Ptr<_1a75b2ae2_MultiAssign>);
inline void _1a7d65493_optimize_ret(_1a7d626b0_ScopeOptimizer*,jule::Ptr<_1a75b35c6_RetSt>);
inline void _1a7d65718_optimize_stmt(_1a7d626b0_ScopeOptimizer*,jule::Any);
inline void _1a7d6598d_optimize_child(_1a7d626b0_ScopeOptimizer*,jule::Ptr<_1a759e606_Scope>);
inline void _1a7d65b69_optimize(_1a7d626b0_ScopeOptimizer*);
struct _1a7d626b0_ScopeOptimizer {
	jule::I64 _field_i = jule::I64();
	jule::Ptr<_1a759e606_Scope> _field_scope = jule::Ptr<_1a759e606_Scope>();


	_1a7d626b0_ScopeOptimizer(jule::I64 __param_i, jule::Ptr<_1a759e606_Scope> __param_scope): _field_i(__param_i), _field_scope(__param_scope) {}

	

	_1a7d626b0_ScopeOptimizer(void) = default;

	inline bool operator==(_1a7d626b0_ScopeOptimizer _other) {
		return 
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1a7d626b0_ScopeOptimizer _other) { return !this->operator==(_other); }


};
inline void static__1a7d68793_optimize(jule::Any&);
inline jule::Bool _1a7d68aa1_str_cond(_1a7d67d69_ExprOptimizer*,jule::Ptr<_1a6419571_BinopExprModel>);
inline void _1a7d68d26_binary(_1a7d67d69_ExprOptimizer*,jule::Ptr<_1a6419571_BinopExprModel>);
inline void _1a7d6909b_unary(_1a7d67d69_ExprOptimizer*,jule::Ptr<_1a6419928_UnaryExprModel>);
inline void _1a7d69321_structure_lit(_1a7d67d69_ExprOptimizer*,jule::Ptr<_1a641a1cb_StructLitExprModel>);
inline void _1a7d69596_alloc_structure(_1a7d67d69_ExprOptimizer*,jule::Ptr<_1a641a50b_AllocStructLitExprModel>);
inline void _1a7d6981b_casting(_1a7d67d69_ExprOptimizer*,jule::Ptr<_1a641aa39_CastingExprModel>);
inline void _1a7d69a91_args(_1a7d67d69_ExprOptimizer*,jule::Slice<jule::Any>);
inline void _1a7d69d16_scope(_1a7d67d69_ExprOptimizer*,jule::Ptr<_1a759e606_Scope>&);
inline void _1a7d6a08b_func_call(_1a7d67d69_ExprOptimizer*,jule::Ptr<_1a641b364_FnCallExprModel>);
inline void _1a7d6a311_slice(_1a7d67d69_ExprOptimizer*,jule::Ptr<_1a641b71b_SliceExprModel>);
inline void _1a7d6a586_array(_1a7d67d69_ExprOptimizer*,jule::Ptr<_1a641e4bb_ArrayExprModel>);
inline void _1a7d6a80b_indexing(_1a7d67d69_ExprOptimizer*,jule::Ptr<_1a641bb8e_IndexingExprModel>);
inline void _1a7d6aa81_anon_func(_1a7d67d69_ExprOptimizer*,jule::Ptr<_1a641c046_AnonFnExprModel>);
inline void _1a7d6ad06_map(_1a7d67d69_ExprOptimizer*,jule::Ptr<_1a641c871_MapExprModel>);
inline void _1a7d6b07b_slicing(_1a7d67d69_ExprOptimizer*,jule::Ptr<_1a641cdb0_SlicingExprModel>);
inline void _1a7d6b301_trait_sub(_1a7d67d69_ExprOptimizer*,jule::Ptr<_1a641d3ee_TraitSubIdentExprModel>);
inline void _1a7d6b576_structure_sub(_1a7d67d69_ExprOptimizer*,jule::Ptr<_1a641db6e_StructSubIdentExprModel>);
inline void _1a7d6b7eb_common_sub(_1a7d67d69_ExprOptimizer*,jule::Ptr<_1a641ed3a_CommonSubIdentExprModel>);
inline void _1a7d6ba71_tuple(_1a7d67d69_ExprOptimizer*,jule::Ptr<_1a6420115_TupleExprModel>);
inline void _1a7d6bce6_new_call(_1a7d67d69_ExprOptimizer*,jule::Ptr<_1a6421105_BuiltinNewCallExprModel>);
inline void _1a7d6c06b_out_call(_1a7d67d69_ExprOptimizer*,jule::Ptr<_1a6420511_BuiltinOutCallExprModel>);
inline void _1a7d6c2e1_outln_call(_1a7d67d69_ExprOptimizer*,jule::Ptr<_1a64208eb_BuiltinOutlnCallExprModel>);
inline void _1a7d6c566_panic_call(_1a7d67d69_ExprOptimizer*,jule::Ptr<_1a64214e0_BuiltinPanicCallExprModel>);
inline void _1a7d6c7db_assert_call(_1a7d67d69_ExprOptimizer*,jule::Ptr<_1a6421996_BuiltinAssertCallExprModel>);
inline void _1a7d6ca61_error_call(_1a7d67d69_ExprOptimizer*,jule::Ptr<_1a6422722_BuiltinErrorCallExprModel>);
inline void _1a7d6ccd6_make_call(_1a7d67d69_ExprOptimizer*,jule::Ptr<_1a6421e4c_BuiltinMakeCallExprModel>);
inline void _1a7d6d05b_append_call(_1a7d67d69_ExprOptimizer*,jule::Ptr<_1a6422337_BuiltinAppendCallExprModel>);
inline void _1a7d6d2d1_clone_call(_1a7d67d69_ExprOptimizer*,jule::Ptr<_1a6420c1a_BuiltinCloneCallExprModel>);
inline void _1a7d6d556_sizeof(_1a7d67d69_ExprOptimizer*,jule::Ptr<_1a64229ec_SizeofExprModel>);
inline void _1a7d6d7cb_alignof(_1a7d67d69_ExprOptimizer*,jule::Ptr<_1a642316d_AlignofExprModel>);
inline void _1a7d6da51_integrated_to_str(_1a7d67d69_ExprOptimizer*,jule::Ptr<_1a6423646_IntegratedToStrExprModel>);
inline void _1a7d6dc2c_do(_1a7d67d69_ExprOptimizer*);
struct _1a7d67d69_ExprOptimizer {
	jule::Ptr<jule::Any> _field_model = jule::Ptr<jule::Any>();


	_1a7d67d69_ExprOptimizer(jule::Ptr<jule::Any> __param_model): _field_model(__param_model) {}

	

	_1a7d67d69_ExprOptimizer(void) = default;

	inline bool operator==(_1a7d67d69_ExprOptimizer _other) {
		return 
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1a7d67d69_ExprOptimizer _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a7d6eb84_Optimizer> static__1a7d700a2_new(jule::Ptr<_1b737ec89_IR>&);
inline void _1a7d70327_optimize_global(_1a7d6eb84_Optimizer*,jule::Ptr<_1a75ec478_Var>&);
inline void _1a7d7059c_optimize_function(_1a7d6eb84_Optimizer*,jule::Ptr<_1a6426a45_Fn>&);
inline void _1a7d70822_optimize_struct(_1a7d6eb84_Optimizer*,jule::Ptr<_1a64147be_Struct>&);
inline void _1a7d70a97_optimize_globals(_1a7d6eb84_Optimizer*,jule::Ptr<_1a75cbe4c_Package>&);
inline void _1a7d70d1c_optimize_functions(_1a7d6eb84_Optimizer*,jule::Ptr<_1a75cbe4c_Package>&);
inline void _1a7d71092_optimize_structs(_1a7d6eb84_Optimizer*,jule::Ptr<_1a75cbe4c_Package>&);
inline void _1a7d71317_optimize_package(_1a7d6eb84_Optimizer*,jule::Ptr<_1a75cbe4c_Package>&);
inline void _1a7d714e3_optimize(_1a7d6eb84_Optimizer*);
struct _1a7d6eb84_Optimizer {
	jule::Ptr<_1b737ec89_IR> _field_ir = jule::Ptr<_1b737ec89_IR>();


	_1a7d6eb84_Optimizer(jule::Ptr<_1b737ec89_IR> __param_ir): _field_ir(__param_ir) {}

	

	_1a7d6eb84_Optimizer(void) = default;

	inline bool operator==(_1a7d6eb84_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1a7d6eb84_Optimizer _other) { return !this->operator==(_other); }


};
inline jule::U64 _1d0a3da28_unix(_1d0a3d63d_AbsTime*);
struct _1d0a3d63d_AbsTime {
	jule::U64 _field_day = jule::U64();
	jule::U64 _field_week_day = jule::U64();
	jule::U64 _field_year_day = jule::U64();
	jule::U64 _field_month = jule::U64();
	jule::U64 _field_year = jule::U64();
	jule::U64 _field_second = jule::U64();
	jule::U64 _field_minute = jule::U64();
	jule::U64 _field_hour = jule::U64();


	_1d0a3d63d_AbsTime(jule::U64 __param_day, jule::U64 __param_week_day, jule::U64 __param_year_day, jule::U64 __param_month, jule::U64 __param_year, jule::U64 __param_second, jule::U64 __param_minute, jule::U64 __param_hour): _field_day(__param_day), _field_week_day(__param_week_day), _field_year_day(__param_year_day), _field_month(__param_month), _field_year(__param_year), _field_second(__param_second), _field_minute(__param_minute), _field_hour(__param_hour) {}

	

	_1d0a3d63d_AbsTime(void) = default;

	inline bool operator==(_1d0a3d63d_AbsTime _other) {
		return 
			this->_field_day == _other._field_day &&
			this->_field_week_day == _other._field_week_day &&
			this->_field_year_day == _other._field_year_day &&
			this->_field_month == _other._field_month &&
			this->_field_year == _other._field_year &&
			this->_field_second == _other._field_second &&
			this->_field_minute == _other._field_minute &&
			this->_field_hour == _other._field_hour;
	}

	inline bool operator!=(_1d0a3d63d_AbsTime _other) { return !this->operator==(_other); }


};
inline _1d0a3dd14_Time static__1d0a3e1aa_unix(jule::U64);
inline _1d0a3dd14_Time static__1d0a3e3a8_now(void);
inline jule::U64 _1d0a3e809_unix(_1d0a3dd14_Time*);
inline jule::U64 _1d0a3ea6d_day(_1d0a3dd14_Time*);
inline jule::U64 _1d0a3ecd2_month(_1d0a3dd14_Time*);
inline jule::U64 _1d0a40046_year(_1d0a3dd14_Time*);
inline jule::U64 _1d0a402aa_second(_1d0a3dd14_Time*);
inline jule::U64 _1d0a4051e_minute(_1d0a3dd14_Time*);
inline jule::U64 _1d0a40783_hour(_1d0a3dd14_Time*);
inline _1d0a3d63d_AbsTime _1d0a409e7_abs(_1d0a3dd14_Time*);
struct _1d0a3dd14_Time {
	jule::U64 _field_sec = jule::U64();


	_1d0a3dd14_Time(jule::U64 __param_sec): _field_sec(__param_sec) {}

	

	_1d0a3dd14_Time(void) = default;

	inline bool operator==(_1d0a3dd14_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_1d0a3dd14_Time _other) { return !this->operator==(_other); }


};
inline jule::I64 static__1d0a41212_nanoseconds(jule::I64);
inline jule::I64 static__1d0a414a9_microseconds(jule::I64);
inline jule::I64 static__1d0a41751_milliseconds(jule::I64);
inline jule::I64 static__1d0a419e8_seconds(jule::I64);
inline jule::I64 static__1d0a41c90_minutes(jule::I64);
inline jule::I64 static__1d0a42037_hours(jule::I64);
struct _1d0a40cd3_Duration {
	

	_1d0a40cd3_Duration(void) = default;

	inline bool operator==(_1d0a40cd3_Duration _other) { return true; }

	inline bool operator!=(_1d0a40cd3_Duration _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a7bdc5a1_TestCoder> static__1a7bdc78d_new(jule::Ptr<_1d0a43aa5_ObjectCoder>&);
inline jule::Ptr<_1a75c928a_ImportInfo> _1a7bdc8c0_find_testing_package(_1a7bdc5a1_TestCoder*);
inline void _1a7bdcabd_append_test(_1a7bdc5a1_TestCoder*,jule::Str&,jule::Ptr<_1a6429be1_FnIns>);
inline void _1a7c1eb22_append_package_tests(_1a7bdc5a1_TestCoder*,jule::Str&,jule::Ptr<_1a75cbe4c_Package>&);
inline jule::Bool _1a7c1ed31_ready_testing_package(_1a7bdc5a1_TestCoder*);
inline jule::Str _1a7c20095_call_tm_reset(_1a7bdc5a1_TestCoder*);
inline jule::Str _1a7c20309_call_tm_failed(_1a7bdc5a1_TestCoder*);
inline jule::Str _1a7c2056d_call_tm_skipped(_1a7bdc5a1_TestCoder*);
inline void _1a7c207e3_serialize(_1a7bdc5a1_TestCoder*,jule::Str&);
struct _1a7bdc5a1_TestCoder {
	jule::Ptr<_1a641744d_StructIns> _field_t = jule::Ptr<_1a641744d_StructIns>();
	jule::Ptr<_1a6426a45_Fn> _field_tm_reset = jule::Ptr<_1a6426a45_Fn>();
	jule::Ptr<_1a6426a45_Fn> _field_tm_failed = jule::Ptr<_1a6426a45_Fn>();
	jule::Ptr<_1a6426a45_Fn> _field_tm_skipped = jule::Ptr<_1a6426a45_Fn>();
	jule::Ptr<_1d0a43aa5_ObjectCoder> _field_oc = jule::Ptr<_1d0a43aa5_ObjectCoder>();


	_1a7bdc5a1_TestCoder(jule::Ptr<_1a641744d_StructIns> __param_t, jule::Ptr<_1a6426a45_Fn> __param_tm_reset, jule::Ptr<_1a6426a45_Fn> __param_tm_failed, jule::Ptr<_1a6426a45_Fn> __param_tm_skipped, jule::Ptr<_1d0a43aa5_ObjectCoder> __param_oc): _field_t(__param_t), _field_tm_reset(__param_tm_reset), _field_tm_failed(__param_tm_failed), _field_tm_skipped(__param_tm_skipped), _field_oc(__param_oc) {}

	

	_1a7bdc5a1_TestCoder(void) = default;

	inline bool operator==(_1a7bdc5a1_TestCoder _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_tm_reset == _other._field_tm_reset &&
			this->_field_tm_failed == _other._field_tm_failed &&
			this->_field_tm_skipped == _other._field_tm_skipped &&
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1a7bdc5a1_TestCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a7c5c962_ScopeCoder> static__1a7c644e6_new(jule::Ptr<_1d0a43aa5_ObjectCoder>&);
inline jule::Str _1a7c7ec92_range_index_iter(_1a7c5c962_ScopeCoder*,jule::Ptr<_1a7561c6c_RangeIter>&);
inline jule::Str _1a7c823e3_range_hashmap_iter(_1a7c5c962_ScopeCoder*,jule::Ptr<_1a7561c6c_RangeIter>&);
inline jule::Str _1a7c9019d_if_case(_1a7c5c962_ScopeCoder*,jule::Ptr<_1a75a6003_If>);
inline jule::Str _1a7c97947_conditional(_1a7c5c962_ScopeCoder*,jule::Ptr<_1a7550c6c_Conditional>);
inline jule::Str _1a7d0e393_inf_iter(_1a7c5c962_ScopeCoder*,jule::Ptr<_1a7561893_InfIter>);
inline jule::Str _1a7d0ec45_while_iter(_1a7c5c962_ScopeCoder*,jule::Ptr<_1a7561a80_WhileIter>);
inline jule::Str _1a7d14156_range_iter(_1a7c5c962_ScopeCoder*,jule::Ptr<_1a7561c6c_RangeIter>);
inline jule::Str _1a7d1bc1e_cont(_1a7c5c962_ScopeCoder*,jule::Ptr<_1a758e926_ContSt>);
inline jule::Str _1a7d207d3_label(_1a7c5c962_ScopeCoder*,jule::Ptr<_1a75b233e_Label>);
inline jule::Str _1a7d20b35_goto_st(_1a7c5c962_ScopeCoder*,jule::Ptr<_1a75b252b_GotoSt>);
inline jule::Str _1a7d215c5_postfix(_1a7c5c962_ScopeCoder*,jule::Ptr<_1a75b2718_Postfix>);
inline jule::Str _1a7d23b38_assign(_1a7c5c962_ScopeCoder*,jule::Ptr<_1a75b2905_Assign>);
inline jule::Str _1a7d2451d_multi_assign(_1a7c5c962_ScopeCoder*,jule::Ptr<_1a75b2ae2_MultiAssign>);
inline jule::Str _1a7d24e03_match_expr(_1a7c5c962_ScopeCoder*,jule::Ptr<_1a75b2cce_Match>&);
inline jule::Str _1a7d257d8_case(_1a7c5c962_ScopeCoder*,jule::Ptr<_1a75b2cce_Match>,jule::Ptr<_1a75b31ec_Case>);
inline jule::Str _1a7d261bd_match_st(_1a7c5c962_ScopeCoder*,jule::Ptr<_1a75b2cce_Match>);
inline jule::Str _1a7d282be_fall_st(_1a7c5c962_ScopeCoder*,jule::Ptr<_1a75b33d9_FallSt>);
inline jule::Str _1a7d290e4_break_st(_1a7c5c962_ScopeCoder*,jule::Ptr<_1a758eb13_BreakSt>);
inline jule::Str _1a7d29996_ret_with_vars(_1a7c5c962_ScopeCoder*,jule::Ptr<_1a75b35c6_RetSt>);
inline jule::Str _1a7d2a348_ret_tuple(_1a7c5c962_ScopeCoder*,jule::Ptr<_1a75b35c6_RetSt>);
inline jule::Str _1a7d2ae70_ret_with_exprs(_1a7c5c962_ScopeCoder*,jule::Ptr<_1a75b35c6_RetSt>);
inline jule::Str _1a7c249e5_ret_st(_1a7c5c962_ScopeCoder*,jule::Ptr<_1a75b35c6_RetSt>);
inline jule::Str _1a7c63ddb_ret_with_defaults(_1a7c5c962_ScopeCoder*,jule::Ptr<_1a7672da0_TypeKind>);
inline jule::Str _1a7d555e8_var(_1a7c5c962_ScopeCoder*,jule::Ptr<_1a75ec478_Var>);
inline jule::Str _1a7c5d699_st(_1a7c5c962_ScopeCoder*,jule::Any);
inline void _1a7c99a9d_scope_end(_1a7c5c962_ScopeCoder*,jule::Str&,jule::Ptr<_1a759e606_Scope>&);
inline jule::Str _1a7ca1379_scope(_1a7c5c962_ScopeCoder*,jule::Ptr<_1a759e606_Scope>);
inline jule::Str _1a7ce61b0_func_scope(_1a7c5c962_ScopeCoder*,jule::Ptr<_1a6429be1_FnIns>);
struct _1a7c5c962_ScopeCoder {
	jule::Ptr<_1d0a43aa5_ObjectCoder> _field_oc = jule::Ptr<_1d0a43aa5_ObjectCoder>();


	_1a7c5c962_ScopeCoder(jule::Ptr<_1d0a43aa5_ObjectCoder> __param_oc): _field_oc(__param_oc) {}

	

	_1a7c5c962_ScopeCoder(void) = default;

	inline bool operator==(_1a7c5c962_ScopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1a7c5c962_ScopeCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a7c244d9_ExprCoder> static__1a7c5d0d3_new(jule::Ptr<_1d0a43aa5_ObjectCoder>&);
inline jule::Str _1a7d53063_string(_1a7c244d9_ExprCoder*,jule::Ptr<_1a751ddb1_Const>&);
inline jule::Str _1a7d53195_boolean(_1a7c244d9_ExprCoder*,jule::Ptr<_1a751ddb1_Const>&);
inline jule::Str _1a7ce66aa_nil_lit(_1a7c244d9_ExprCoder*);
inline jule::Str _1a7ce67dc_ftoa_special_cases(_1a7c244d9_ExprCoder*,jule::F64&);
inline jule::Str _1a7ce691e_float32(_1a7c244d9_ExprCoder*,jule::Ptr<_1a751ddb1_Const>&);
inline jule::Str _1a7d716d0_float64(_1a7c244d9_ExprCoder*,jule::Ptr<_1a751ddb1_Const>&);
inline jule::Str _1a7d71812_constant(_1a7c244d9_ExprCoder*,jule::Ptr<_1a751ddb1_Const>,jule::Bool);
inline jule::Str _1a7d71944_div_by_zero_binary(_1a7c244d9_ExprCoder*,jule::Ptr<_1d0747985_Token>&,jule::Ptr<_1a64190a9_OperandExprModel>&,jule::Ptr<_1a64190a9_OperandExprModel>&);
inline jule::Str _1a7d71a76_unsafe_binary(_1a7c244d9_ExprCoder*,jule::Ptr<_1a6419571_BinopExprModel>);
inline jule::Str _1a7d71ba8_binary(_1a7c244d9_ExprCoder*,jule::Ptr<_1a6419571_BinopExprModel>);
inline jule::Str _1a7d71cda_var(_1a7c244d9_ExprCoder*,jule::Ptr<_1a75ec478_Var>);
inline jule::Str _1a7d71e1c_structure(_1a7c244d9_ExprCoder*,jule::Ptr<_1a64147be_Struct>);
inline jule::Str _1a7d7204e_structure_ins(_1a7c244d9_ExprCoder*,jule::Ptr<_1a641744d_StructIns>);
inline jule::Str _1a7d72181_unary(_1a7c244d9_ExprCoder*,jule::Ptr<_1a6419928_UnaryExprModel>);
inline jule::Str _1a7d722b3_cpp_structure_lit(_1a7c244d9_ExprCoder*,jule::Ptr<_1a641a1cb_StructLitExprModel>);
inline jule::Str _1a7d723e5_structure_lit(_1a7c244d9_ExprCoder*,jule::Ptr<_1a641a1cb_StructLitExprModel>);
inline jule::Str _1a7d72527_alloc_structure(_1a7c244d9_ExprCoder*,jule::Ptr<_1a641a50b_AllocStructLitExprModel>);
inline jule::Str _1a7d72659_casting(_1a7c244d9_ExprCoder*,jule::Ptr<_1a641aa39_CastingExprModel>);
inline jule::Str _1a7d7278b_args(_1a7c244d9_ExprCoder*,jule::Slice<jule::Any>);
inline jule::Str _1a7d728bd_model_for_call(_1a7c244d9_ExprCoder*,jule::Any);
inline void _1a7d72a00_push_call_inf(_1a7c244d9_ExprCoder*,jule::Str&,jule::Ptr<_1a641b364_FnCallExprModel>&);
inline jule::Str _1a7d72b32_pure_func_call(_1a7c244d9_ExprCoder*,jule::Ptr<_1a641b364_FnCallExprModel>&);
inline jule::Str _1a7d72c64_func_call(_1a7c244d9_ExprCoder*,jule::Ptr<_1a641b364_FnCallExprModel>);
inline jule::Str _1a7d72d96_slice(_1a7c244d9_ExprCoder*,jule::Ptr<_1a641b71b_SliceExprModel>);
inline jule::Str _1a7d72ec8_indexing(_1a7c244d9_ExprCoder*,jule::Ptr<_1a641bb8e_IndexingExprModel>);
inline jule::Str _1a7d7310a_unsafe_indexing(_1a7c244d9_ExprCoder*,jule::Ptr<_1a7d538d2_UnsafeIndexingExprModel>);
inline jule::Str _1a7d7323c_anon_func(_1a7c244d9_ExprCoder*,jule::Ptr<_1a641c046_AnonFnExprModel>);
inline jule::Str _1a7d7336e_map(_1a7c244d9_ExprCoder*,jule::Ptr<_1a641c871_MapExprModel>);
inline jule::Str _1a7d734a1_slicing(_1a7c244d9_ExprCoder*,jule::Ptr<_1a641cdb0_SlicingExprModel>);
inline jule::Str _1a7d735d3_trait_sub(_1a7c244d9_ExprCoder*,jule::Ptr<_1a641d3ee_TraitSubIdentExprModel>);
inline jule::Str _1a7d737ae_structure_sub(_1a7c244d9_ExprCoder*,jule::Ptr<_1a641db6e_StructSubIdentExprModel>);
inline jule::Str _1a7d73abc_common_ident(_1a7c244d9_ExprCoder*,jule::Ptr<_1a641e7a7_CommonIdentExprModel>);
inline jule::Str _1a7d73dca_common_sub(_1a7c244d9_ExprCoder*,jule::Ptr<_1a641ed3a_CommonSubIdentExprModel>);
inline jule::Str _1a7d741d8_array(_1a7c244d9_ExprCoder*,jule::Ptr<_1a641e4bb_ArrayExprModel>);
inline jule::Str _1a7d744e6_func_ins_common(_1a7c244d9_ExprCoder*,jule::Ptr<_1a6429be1_FnIns>);
inline jule::Str _1a7d74804_func_ins(_1a7c244d9_ExprCoder*,jule::Ptr<_1a6429be1_FnIns>);
inline jule::Str _1a7d74b12_tuple(_1a7c244d9_ExprCoder*,jule::Ptr<_1a6420115_TupleExprModel>);
inline jule::Str _1a7d74e20_new_call(_1a7c244d9_ExprCoder*,jule::Ptr<_1a6421105_BuiltinNewCallExprModel>);
inline jule::Str _1a7d7522d_out_call(_1a7c244d9_ExprCoder*,jule::Ptr<_1a6420511_BuiltinOutCallExprModel>);
inline jule::Str _1a7d7553b_outln_call(_1a7c244d9_ExprCoder*,jule::Ptr<_1a64208eb_BuiltinOutlnCallExprModel>);
inline jule::Str _1a7d75849_panic_call(_1a7c244d9_ExprCoder*,jule::Ptr<_1a64214e0_BuiltinPanicCallExprModel>);
inline jule::Str _1a7d75b57_assert_call(_1a7c244d9_ExprCoder*,jule::Ptr<_1a6421996_BuiltinAssertCallExprModel>);
inline jule::Str _1a7d75e65_error_call(_1a7c244d9_ExprCoder*,jule::Ptr<_1a6422722_BuiltinErrorCallExprModel>);
inline jule::Str _1a7d76273_make_call(_1a7c244d9_ExprCoder*,jule::Ptr<_1a6421e4c_BuiltinMakeCallExprModel>);
inline jule::Str _1a7d76581_push_to_slice(_1a7c244d9_ExprCoder*,jule::Ptr<_1a7d60889_PushToSliceExprModel>);
inline jule::Str _1a7d7688e_append_call(_1a7c244d9_ExprCoder*,jule::Ptr<_1a6422337_BuiltinAppendCallExprModel>);
inline jule::Str _1a7d76b9c_clone_call(_1a7c244d9_ExprCoder*,jule::Ptr<_1a6420c1a_BuiltinCloneCallExprModel>);
inline jule::Str _1a7d76eaa_sizeof(_1a7c244d9_ExprCoder*,jule::Ptr<_1a64229ec_SizeofExprModel>);
inline jule::Str _1a7d772b8_alignof(_1a7c244d9_ExprCoder*,jule::Ptr<_1a642316d_AlignofExprModel>);
inline jule::Str _1a7d775c6_rune_lit(_1a7c244d9_ExprCoder*,jule::Ptr<_1a642335a_RuneExprModel>);
inline jule::Str _1a7d778d4_structure_static(_1a7c244d9_ExprCoder*,jule::Ptr<_1a641e125_StructStaticIdentExprModel>);
inline jule::Str _1a7d77be2_integrated_to_str(_1a7c244d9_ExprCoder*,jule::Ptr<_1a6423646_IntegratedToStrExprModel>);
inline jule::Str _1a7d78000_backend_emit(_1a7c244d9_ExprCoder*,jule::Ptr<_1a64239dc_BackendEmitExprModel>);
inline jule::Str _1a7d7830d_free(_1a7c244d9_ExprCoder*,jule::Ptr<_1a6423cc8_FreeExprModel>);
inline jule::Str _1a7d7861b_mut_slicing(_1a7c244d9_ExprCoder*,jule::Ptr<_1a7d60e0b_MutSlicingExprModel>);
inline jule::Str _1a7d78929_str_insert_begin(_1a7c244d9_ExprCoder*,jule::Ptr<_1a7d61307_StrInsertBeginExprModel>);
inline jule::Str _1a7d78c37_model(_1a7c244d9_ExprCoder*,jule::Any);
inline jule::Str _1a7d79045_expr(_1a7c244d9_ExprCoder*,jule::Any);
inline jule::Str _1a7d79353_val(_1a7c244d9_ExprCoder*,jule::Ptr<_1a7649be0_Value>);
inline jule::Str _1a7d79661_init_expr(_1a7c244d9_ExprCoder*,jule::Ptr<_1a7672da0_TypeKind>);
struct _1a7c244d9_ExprCoder {
	jule::Ptr<_1d0a43aa5_ObjectCoder> _field_oc = jule::Ptr<_1d0a43aa5_ObjectCoder>();


	_1a7c244d9_ExprCoder(jule::Ptr<_1d0a43aa5_ObjectCoder> __param_oc): _field_oc(__param_oc) {}

	

	_1a7c244d9_ExprCoder(void) = default;

	inline bool operator==(_1a7c244d9_ExprCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1a7c244d9_ExprCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__1a7d7bed2_clone_func_decl(jule::Ptr<_1a64147be_Struct>&);
inline jule::Str static__1a7d7c279_clone_func_def(jule::Ptr<_1a64147be_Struct>&);
struct _1a7d7bba2_DeriveCoder {
	

	_1a7d7bba2_DeriveCoder(void) = default;

	inline bool operator==(_1a7d7bba2_DeriveCoder _other) { return true; }

	inline bool operator!=(_1a7d7bba2_DeriveCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__1a7d7d6ed_to_ident(jule::Str);
inline jule::Str static__1a7d7d995_addr(jule::U64);
inline jule::Str static__1a7d7dcd6_to_out(jule::Str,jule::U64);
inline jule::Str static__1a7d7e1c1_to_local(jule::I64,jule::I64,jule::Str);
inline jule::Str static__1a7d7e468_func(jule::Ptr<_1a6426a45_Fn>&);
inline jule::Str static__1a7d7e710_func_ins(jule::Ptr<_1a6429be1_FnIns>&);
inline jule::Str static__1a7d7e9a7_trait_decl(jule::Ptr<_1a7465bd7_Trait>);
inline jule::Str static__1a7d7ec4e_param(jule::Ptr<_1a6425208_Param>&);
inline jule::Str static__1a7d7eee6_structure(jule::Ptr<_1a64147be_Struct>&);
inline jule::Str static__1a7d8028d_structure_ins(jule::Ptr<_1a641744d_StructIns>&);
inline jule::Str static__1a7d80535_field(jule::Ptr<_1a6363e9e_Field>&);
inline jule::Str static__1a7d807cc_var(jule::Ptr<_1a75ec478_Var>);
inline jule::Str static__1a7d80a74_iter_begin(jule::U64);
inline jule::Str static__1a7d80d1b_iter_end(jule::U64);
inline jule::Str static__1a7d810b3_iter_next(jule::U64);
inline jule::Str static__1a7d8135a_label(jule::Str);
inline jule::Str static__1a7d81602_match_end(jule::U64);
inline jule::Str static__1a7d81899_case_begin(jule::U64);
struct _1a7d7d28b_IdentCoder {
	

	_1a7d7d28b_IdentCoder(void) = default;

	inline bool operator==(_1a7d7d28b_IdentCoder _other) { return true; }

	inline bool operator!=(_1a7d7d28b_IdentCoder _other) { return !this->operator==(_other); }


};
struct _1d0a436cb_SerializationInfo {
	jule::Str _field_compiler = jule::Str();
	jule::Str _field_compiler_command = jule::Str();


	_1d0a436cb_SerializationInfo(jule::Str __param_compiler, jule::Str __param_compiler_command): _field_compiler(__param_compiler), _field_compiler_command(__param_compiler_command) {}

	

	_1d0a436cb_SerializationInfo(void) = default;

	inline bool operator==(_1d0a436cb_SerializationInfo _other) {
		return 
			this->_field_compiler == _other._field_compiler &&
			this->_field_compiler_command == _other._field_compiler_command;
	}

	inline bool operator!=(_1d0a436cb_SerializationInfo _other) { return !this->operator==(_other); }


};
struct _1d0a438b8_TraitHash {
	jule::Ptr<_1a7465bd7_Trait> _field_t = jule::Ptr<_1a7465bd7_Trait>();
	jule::Ptr<_1a641744d_StructIns> _field_s = jule::Ptr<_1a641744d_StructIns>();
	jule::I64 _field_i = jule::I64();


	_1d0a438b8_TraitHash(jule::Ptr<_1a7465bd7_Trait> __param_t, jule::Ptr<_1a641744d_StructIns> __param_s, jule::I64 __param_i): _field_t(__param_t), _field_s(__param_s), _field_i(__param_i) {}

	

	_1d0a438b8_TraitHash(void) = default;

	inline bool operator==(_1d0a438b8_TraitHash _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_s == _other._field_s &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1d0a438b8_TraitHash _other) { return !this->operator==(_other); }


};
inline jule::Str _1d0a5052e_to_str(_1d0a50133_CustomType*);
inline jule::Bool _1d0a5083c_equals(jule::Ptr<_1d0a50133_CustomType>,jule::Ptr<_1a7672da0_TypeKind>);
struct _1d0a50133_CustomType {
	jule::Str _field_kind = jule::Str();


	_1d0a50133_CustomType(jule::Str __param_kind): _field_kind(__param_kind) {}

	

	_1d0a50133_CustomType(void) = default;

	inline bool operator==(_1d0a50133_CustomType _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1d0a50133_CustomType _other) { return !this->operator==(_other); }


};
inline jule::Str static__1d0a51079_to_type(jule::Str);
inline jule::Str static__1d0a51321_prim(jule::Ptr<_1a7677602_Prim>);
inline jule::Str static__1d0a515b8_tuple(jule::Ptr<_1a767c063_Tuple>);
inline jule::Str static__1d0a51860_as_sptr(jule::Str);
inline jule::Str static__1d0a51b07_as_ptr(jule::Str);
inline jule::Str static__1d0a51d9e_sptr(jule::Ptr<_1a767ab11_Sptr>);
inline jule::Str static__1d0a52146_ptr(jule::Ptr<_1a767e175_Ptr>);
inline jule::Str static__1d0a523dd_enum_decl(jule::Ptr<_1a7467de8_Enum>);
inline jule::Str static__1d0a52685_as_slice(jule::Ptr<_1a7672da0_TypeKind>);
inline jule::Str static__1d0a5292c_slice(jule::Ptr<_1a767b56d_Slc>);
inline jule::Str static__1d0a52bc4_map(jule::Ptr<_1a767cb24_Map>);
inline jule::Str static__1d0a52e6b_trait_ident(jule::Str);
inline jule::Str static__1d0a53213_trait_decl(jule::Ptr<_1a7465bd7_Trait>);
inline jule::Str static__1d0a534aa_structure(jule::Ptr<_1a64147be_Struct>);
inline jule::Str static__1d0a53752_structure_ins(jule::Ptr<_1a641744d_StructIns>);
inline jule::Str static__1d0a539e9_array(jule::Ptr<_1a767d718_Arr>);
inline jule::Str static__1d0a53c91_param(jule::Ptr<_1a6425208_Param>&);
inline jule::Str static__1d0a54038_param_ins(jule::Ptr<_1a6428d55_ParamIns>&);
inline jule::Str static__1d0a542d0_func_result(jule::Ptr<_1a6426a45_Fn>&);
inline jule::Str static__1d0a54577_func_ins_result(jule::Ptr<_1a6429be1_FnIns>&);
inline jule::Str static__1d0a5481e_anon_func(jule::Ptr<_1a6429be1_FnIns>);
inline jule::Str static__1d0a54ab6_func(jule::Ptr<_1a6429be1_FnIns>);
inline jule::Str static__1d0a54d5d_kind(jule::Ptr<_1a7672da0_TypeKind>);
struct _1d0a50a5c_TypeCoder {
	

	_1d0a50a5c_TypeCoder(void) = default;

	inline bool operator==(_1d0a50a5c_TypeCoder _other) { return true; }

	inline bool operator!=(_1d0a50a5c_TypeCoder _other) { return !this->operator==(_other); }


};
inline jule::Str _1aa6a781b_name(_1a7e8ebc7_Flag_0*);
inline jule::Str _1aa6a794d_what(_1a7e8ebc7_Flag_0*);
inline void _1aa6a7a80_reset(_1a7e8ebc7_Flag_0*);
inline jule::I32 _1aa6a7bb2_short(_1a7e8ebc7_Flag_0*);
struct _1a7e8ebc7_Flag_0 {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::I64 _field__default = jule::I64();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::I64> _field__data = jule::Ptr<jule::I64>();


	_1a7e8ebc7_Flag_0(jule::Str __param__name, jule::I32 __param__short, jule::I64 __param__default, jule::Str __param__what, jule::Ptr<jule::I64> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_1a7e8ebc7_Flag_0(void) = default;

	inline bool operator==(_1a7e8ebc7_Flag_0 _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1a7e8ebc7_Flag_0 _other) { return !this->operator==(_other); }


};inline jule::Str _1aa6aa610_name(_1a7e8ebc7_Flag_1*);
inline jule::Str _1aa6aa81e_what(_1a7e8ebc7_Flag_1*);
inline void _1aa6a7d27_reset(_1a7e8ebc7_Flag_1*);
inline jule::I32 _1aa6aa368_short(_1a7e8ebc7_Flag_1*);
struct _1a7e8ebc7_Flag_1 {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::U64 _field__default = jule::U64();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::U64> _field__data = jule::Ptr<jule::U64>();


	_1a7e8ebc7_Flag_1(jule::Str __param__name, jule::I32 __param__short, jule::U64 __param__default, jule::Str __param__what, jule::Ptr<jule::U64> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_1a7e8ebc7_Flag_1(void) = default;

	inline bool operator==(_1a7e8ebc7_Flag_1 _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1a7e8ebc7_Flag_1 _other) { return !this->operator==(_other); }


};inline jule::Str _1aa6ad7de_name(_1a7e8ebc7_Flag_2*);
inline jule::Str _1aa6ad9ed_what(_1a7e8ebc7_Flag_2*);
inline void _1aa6ad547_reset(_1a7e8ebc7_Flag_2*);
inline jule::I32 _1aa6ae26d_short(_1a7e8ebc7_Flag_2*);
struct _1a7e8ebc7_Flag_2 {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::F64 _field__default = jule::F64();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::F64> _field__data = jule::Ptr<jule::F64>();


	_1a7e8ebc7_Flag_2(jule::Str __param__name, jule::I32 __param__short, jule::F64 __param__default, jule::Str __param__what, jule::Ptr<jule::F64> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_1a7e8ebc7_Flag_2(void) = default;

	inline bool operator==(_1a7e8ebc7_Flag_2 _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1a7e8ebc7_Flag_2 _other) { return !this->operator==(_other); }


};inline jule::Str _1aa6b1a12_name(_1a7e8ebc7_Flag_3*);
inline jule::Str _1aa6b1c21_what(_1a7e8ebc7_Flag_3*);
inline void _1aa6b176a_reset(_1a7e8ebc7_Flag_3*);
inline jule::I32 _1aa6b2491_short(_1a7e8ebc7_Flag_3*);
struct _1a7e8ebc7_Flag_3 {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::Bool _field__default = jule::Bool();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::Bool> _field__data = jule::Ptr<jule::Bool>();


	_1a7e8ebc7_Flag_3(jule::Str __param__name, jule::I32 __param__short, jule::Bool __param__default, jule::Str __param__what, jule::Ptr<jule::Bool> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_1a7e8ebc7_Flag_3(void) = default;

	inline bool operator==(_1a7e8ebc7_Flag_3 _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1a7e8ebc7_Flag_3 _other) { return !this->operator==(_other); }


};inline jule::Str _1aa6b4be1_name(_1a7e8ebc7_Flag_4*);
inline jule::Str _1aa6b4e00_what(_1a7e8ebc7_Flag_4*);
inline void _1aa6b4949_reset(_1a7e8ebc7_Flag_4*);
inline jule::I32 _1aa6b5670_short(_1a7e8ebc7_Flag_4*);
struct _1a7e8ebc7_Flag_4 {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::Str _field__default = jule::Str();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::Str> _field__data = jule::Ptr<jule::Str>();


	_1a7e8ebc7_Flag_4(jule::Str __param__name, jule::I32 __param__short, jule::Str __param__default, jule::Str __param__what, jule::Ptr<jule::Str> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_1a7e8ebc7_Flag_4(void) = default;

	inline bool operator==(_1a7e8ebc7_Flag_4 _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1a7e8ebc7_Flag_4 _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a7e91118_FlagSet> static__1a7e91404_new(void);
inline jule::Trait<_1a7e5e14c_CommonFlag> _1a7e918bb_find_flag(_1a7e91118_FlagSet*,jule::Str);
inline jule::Trait<_1a7e5e14c_CommonFlag> _1a7e91bc9_find_flag_short(_1a7e91118_FlagSet*,jule::I32);
inline jule::Slice<jule::Trait<_1a7e5e14c_CommonFlag>> _1a7e91e3d_flags(_1a7e91118_FlagSet*);
inline jule::Exceptional<jule::Slice<jule::Str>> _1a7e9224b_parse(_1a7e91118_FlagSet*,jule::Slice<jule::Str>);
inline void _1a7e92427_reset(_1a7e91118_FlagSet*);
inline jule::Ptr<_1a7e8ebc7_Flag_4> _1a7e92878_add_flag_common_0(_1a7e91118_FlagSet*,jule::Str,jule::I32,jule::Str);
inline jule::Ptr<_1a7e8ebc7_Flag_3> _1a7e92878_add_flag_common_1(_1a7e91118_FlagSet*,jule::Str,jule::I32,jule::Str);
inline void _1a7e932d5_add_var_0(_1a7e91118_FlagSet*,jule::Ptr<jule::Str>,jule::Str,jule::I32,jule::Str);
inline void _1a7e932d5_add_var_1(_1a7e91118_FlagSet*,jule::Ptr<jule::Bool>,jule::Str,jule::I32,jule::Str);
struct _1a7e91118_FlagSet {
	jule::Slice<jule::Trait<_1a7e5e14c_CommonFlag>> _field__flags = jule::Slice<jule::Trait<_1a7e5e14c_CommonFlag>>();


	_1a7e91118_FlagSet(jule::Slice<jule::Trait<_1a7e5e14c_CommonFlag>> __param__flags): _field__flags(__param__flags) {}

	

	_1a7e91118_FlagSet(void) = default;

	inline bool operator==(_1a7e91118_FlagSet _other) {
		return 
			this->_field__flags == _other._field__flags;
	}

	inline bool operator!=(_1a7e91118_FlagSet _other) { return !this->operator==(_other); }


};
inline jule::Str _1a6417805_to_str(_1a641744d_StructIns*);
inline jule::Bool _1a6417b13_equals(jule::Ptr<_1a641744d_StructIns>,jule::Ptr<_1a7672da0_TypeKind>);
inline jule::Bool _1a6418031_same(_1a641744d_StructIns*,jule::Ptr<_1a641744d_StructIns>);
inline jule::Ptr<_1a6426a45_Fn> _1a64183d8_find_method(_1a641744d_StructIns*,jule::Str,jule::Bool);
inline jule::Ptr<_1a6416ae0_FieldIns> _1a64186e6_find_field(_1a641744d_StructIns*,jule::Str);
struct _1a641744d_StructIns {
	jule::Bool _field_checked = jule::Bool();
	jule::Ptr<_1a64147be_Struct> _field_decl = jule::Ptr<_1a64147be_Struct>();
	jule::Slice<jule::Ptr<_1a7672da0_TypeKind>> _field_generics = jule::Slice<jule::Ptr<_1a7672da0_TypeKind>>();
	jule::Slice<jule::Ptr<_1a6416ae0_FieldIns>> _field_fields = jule::Slice<jule::Ptr<_1a6416ae0_FieldIns>>();
	jule::Slice<jule::Ptr<_1a6426a45_Fn>> _field_methods = jule::Slice<jule::Ptr<_1a6426a45_Fn>>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Ptr<_1a642cc9e_ReferenceStack> _field_references = jule::Ptr<_1a642cc9e_ReferenceStack>();
	_1a64139aa_Operators _field_operators = _1a64139aa_Operators();


	_1a641744d_StructIns(jule::Bool __param_checked, jule::Ptr<_1a64147be_Struct> __param_decl, jule::Slice<jule::Ptr<_1a7672da0_TypeKind>> __param_generics, jule::Slice<jule::Ptr<_1a6416ae0_FieldIns>> __param_fields, jule::Slice<jule::Ptr<_1a6426a45_Fn>> __param_methods, jule::Bool __param_mutable, jule::Ptr<_1a642cc9e_ReferenceStack> __param_references, _1a64139aa_Operators __param_operators): _field_checked(__param_checked), _field_decl(__param_decl), _field_generics(__param_generics), _field_fields(__param_fields), _field_methods(__param_methods), _field_mutable(__param_mutable), _field_references(__param_references), _field_operators(__param_operators) {}

	

	_1a641744d_StructIns(void) = default;

	inline bool operator==(_1a641744d_StructIns _other) {
		return 
			this->_field_checked == _other._field_checked &&
			this->_field_decl == _other._field_decl &&
			this->_field_generics == _other._field_generics &&
			this->_field_fields == _other._field_fields &&
			this->_field_methods == _other._field_methods &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_references == _other._field_references &&
			this->_field_operators == _other._field_operators;
	}

	inline bool operator!=(_1a641744d_StructIns _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1d0a43aa5_ObjectCoder> static__1d09a8861_new(jule::Ptr<_1b737ec89_IR>&,_1d0a436cb_SerializationInfo);
inline void _1d09aee72_add_indent(_1d0a43aa5_ObjectCoder*);
inline void _1d0a4416b_done_indent(_1d0a43aa5_ObjectCoder*);
inline jule::Str _1d0a4429d_indent(_1d0a43aa5_ObjectCoder*);
inline jule::I64 _1d0a443d0_find_type_offset(_1d0a43aa5_ObjectCoder*,jule::Ptr<_1a7465bd7_Trait>,jule::Ptr<_1a7672da0_TypeKind>);
inline jule::Str _1d0a44512_loc_info(_1d0a43aa5_ObjectCoder*,jule::Ptr<_1d0747985_Token>&);
inline jule::Str _1d0a44644_links(_1d0a43aa5_ObjectCoder*);
inline jule::Str _1d0a448ec_param_ins(_1d0a43aa5_ObjectCoder*,jule::Ptr<_1a6428d55_ParamIns>&);
inline jule::Str _1d0a44c0a_param(_1d0a43aa5_ObjectCoder*,jule::Ptr<_1a6425208_Param>&);
inline jule::Str _1d0a45018_params(_1d0a43aa5_ObjectCoder*,jule::Slice<jule::Ptr<_1a6425208_Param>>&);
inline jule::Str _1d0a45326_params_ins(_1d0a43aa5_ObjectCoder*,jule::Slice<jule::Ptr<_1a6428d55_ParamIns>>&);
inline jule::Str _1d0a45634_params_decls(_1d0a43aa5_ObjectCoder*,jule::Slice<jule::Ptr<_1a6428d55_ParamIns>>&);
inline void _1d0a458a9_prepare_structure(_1d0a43aa5_ObjectCoder*,jule::Ptr<_1a64147be_Struct>&);
inline void _1d0a45a85_prepare_structures(_1d0a43aa5_ObjectCoder*);
inline void _1d0a45d0a_build_trait_wrapper(_1d0a43aa5_ObjectCoder*,jule::Ptr<_1d0a438b8_TraitHash>&);
inline void _1d0a46080_trait_decl(_1d0a43aa5_ObjectCoder*,jule::Ptr<_1a7465bd7_Trait>&);
inline void _1d0a46305_trait_decls(_1d0a43aa5_ObjectCoder*,jule::Ptr<_1a75cbe4c_Package>&);
inline jule::Str _1d0a46613_structure_plain_decl(_1d0a43aa5_ObjectCoder*,jule::Ptr<_1a64147be_Struct>&);
inline jule::Str _1d0a46877_structure_plain_decls(_1d0a43aa5_ObjectCoder*);
inline jule::Str _1d0a46c2e_var_init_expr(_1d0a43aa5_ObjectCoder*,jule::Ptr<_1a75ec478_Var>&,jule::Str);
inline jule::Str _1d0a4703c_var(_1d0a43aa5_ObjectCoder*,jule::Ptr<_1a75ec478_Var>);
inline jule::Str _1d0a4734a_field_decl(_1d0a43aa5_ObjectCoder*,jule::Ptr<_1a6416ae0_FieldIns>&);
inline jule::Str _1d0a47658_structure_constructor(_1d0a43aa5_ObjectCoder*,jule::Ptr<_1a641744d_StructIns>&);
inline jule::Str _1d0a47966_structure_destructor(_1d0a43aa5_ObjectCoder*,jule::Ptr<_1a641744d_StructIns>&);
inline void _1d0a47d2e_structure_operator_eq(_1d0a43aa5_ObjectCoder*,jule::Str&,jule::Str&,jule::Ptr<_1a641744d_StructIns>&);
inline void _1d0a4823b_structure_operator_not_eq(_1d0a43aa5_ObjectCoder*,jule::Str&,jule::Str&,jule::Ptr<_1a641744d_StructIns>&);
inline void _1d0a4868c_structure_operator(_1d0a43aa5_ObjectCoder*,jule::Str&,jule::Str&,jule::Ptr<_1a6429be1_FnIns>&,jule::Str);
inline jule::Str _1d0a4899a_structure_operators(_1d0a43aa5_ObjectCoder*,jule::Ptr<_1a641744d_StructIns>&);
inline jule::Str _1d0a48cec_structure_derive_defs_decls(_1d0a43aa5_ObjectCoder*,jule::Ptr<_1a641744d_StructIns>&);
inline jule::Str _1d0a490e9_structure_ins_decl(_1d0a43aa5_ObjectCoder*,jule::Ptr<_1a641744d_StructIns>&);
inline jule::Str _1d0a49407_structure_decl(_1d0a43aa5_ObjectCoder*,jule::Ptr<_1a64147be_Struct>&);
inline jule::Str _1d0a4966b_structure_decls(_1d0a43aa5_ObjectCoder*);
inline jule::Str _1d0a49a23_func_head(_1d0a43aa5_ObjectCoder*,jule::Ptr<_1a6429be1_FnIns>&,jule::Bool);
inline jule::Str _1d0a49dca_func_decl(_1d0a43aa5_ObjectCoder*,jule::Ptr<_1a6426a45_Fn>&,jule::Bool);
inline jule::Str _1d0a4a1d8_func_decls(_1d0a43aa5_ObjectCoder*,jule::Ptr<_1a75cbe4c_Package>&);
inline void _1d0a4a3b4_build_trait_map(_1d0a43aa5_ObjectCoder*);
inline void _1d0a4a590_process_traits(_1d0a43aa5_ObjectCoder*);
inline jule::Str _1d0a4a804_decls(_1d0a43aa5_ObjectCoder*);
inline jule::Str _1d0a4abab_pkg_globals(_1d0a43aa5_ObjectCoder*,jule::Ptr<_1a75cbe4c_Package>&,jule::Str&);
inline jule::Str _1d0a4aeb9_globals(_1d0a43aa5_ObjectCoder*,jule::Str&);
inline jule::Str _1d0a4b2c7_func(_1d0a43aa5_ObjectCoder*,jule::Ptr<_1a6426a45_Fn>&);
inline jule::Str _1d0a4b5d5_pkg_funcs(_1d0a43aa5_ObjectCoder*,jule::Ptr<_1a75cbe4c_Package>&);
inline jule::Str _1d0a4b8e3_structure_methods(_1d0a43aa5_ObjectCoder*,jule::Ptr<_1a641744d_StructIns>&);
inline jule::Str _1d0a4bc01_structure_ostream(_1d0a43aa5_ObjectCoder*,jule::Ptr<_1a641744d_StructIns>&);
inline jule::Str _1d0a4c00e_structure_derive_defs(_1d0a43aa5_ObjectCoder*,jule::Ptr<_1a641744d_StructIns>&);
inline jule::Str _1d0a4c31c_structure_ins(_1d0a43aa5_ObjectCoder*,jule::Ptr<_1a641744d_StructIns>&);
inline jule::Str _1d0a4c62a_structure(_1d0a43aa5_ObjectCoder*,jule::Ptr<_1a64147be_Struct>&);
inline jule::Str _1d0a4c88e_structures(_1d0a43aa5_ObjectCoder*);
inline jule::Str _1d0a4cb03_funcs(_1d0a43aa5_ObjectCoder*);
inline void _1d0a4ce22_push_init(_1d0a43aa5_ObjectCoder*,jule::Ptr<_1a75cbe4c_Package>&,jule::Str&);
inline jule::Str _1d0a4d230_init_caller(_1d0a43aa5_ObjectCoder*,jule::Str&);
inline void _1d0a4d4a5_append_standard(_1d0a43aa5_ObjectCoder*,jule::Str&);
inline jule::Str _1d0a4d719_serialize(_1d0a43aa5_ObjectCoder*);
struct _1d0a43aa5_ObjectCoder {
	jule::Ptr<_1b737ec89_IR> _field_ir = jule::Ptr<_1b737ec89_IR>();
	_1d0a436cb_SerializationInfo _field_info = _1d0a436cb_SerializationInfo();
	jule::Str _field_indent_buffer = jule::Str();
	jule::Str _field_trait_declarations = jule::Str();
	jule::Str _field_trait_wrappers = jule::Str();
	jule::Str _field_trait_data = jule::Str();
	jule::Str _field_trait_data_t = jule::Str();
	jule::Slice<jule::Ptr<_1d0a438b8_TraitHash>> _field_trait_map = jule::Slice<jule::Ptr<_1d0a438b8_TraitHash>>();
	jule::Ptr<_1a7c244d9_ExprCoder> _field_ec = jule::Ptr<_1a7c244d9_ExprCoder>();
	jule::Ptr<_1a7c5c962_ScopeCoder> _field_sc = jule::Ptr<_1a7c5c962_ScopeCoder>();


	_1d0a43aa5_ObjectCoder(jule::Ptr<_1b737ec89_IR> __param_ir, _1d0a436cb_SerializationInfo __param_info, jule::Str __param_indent_buffer, jule::Str __param_trait_declarations, jule::Str __param_trait_wrappers, jule::Str __param_trait_data, jule::Str __param_trait_data_t, jule::Slice<jule::Ptr<_1d0a438b8_TraitHash>> __param_trait_map, jule::Ptr<_1a7c244d9_ExprCoder> __param_ec, jule::Ptr<_1a7c5c962_ScopeCoder> __param_sc): _field_ir(__param_ir), _field_info(__param_info), _field_indent_buffer(__param_indent_buffer), _field_trait_declarations(__param_trait_declarations), _field_trait_wrappers(__param_trait_wrappers), _field_trait_data(__param_trait_data), _field_trait_data_t(__param_trait_data_t), _field_trait_map(__param_trait_map), _field_ec(__param_ec), _field_sc(__param_sc) {}

	

	_1d0a43aa5_ObjectCoder(void) = default;

	inline bool operator==(_1d0a43aa5_ObjectCoder _other) {
		return 
			this->_field_ir == _other._field_ir &&
			this->_field_info == _other._field_info &&
			this->_field_indent_buffer == _other._field_indent_buffer &&
			this->_field_trait_declarations == _other._field_trait_declarations &&
			this->_field_trait_wrappers == _other._field_trait_wrappers &&
			this->_field_trait_data == _other._field_trait_data &&
			this->_field_trait_data_t == _other._field_trait_data_t &&
			this->_field_trait_map == _other._field_trait_map &&
			this->_field_ec == _other._field_ec &&
			this->_field_sc == _other._field_sc;
	}

	inline bool operator!=(_1d0a43aa5_ObjectCoder _other) { return !this->operator==(_other); }


};
inline std::tuple<jule::Ptr<_1b737ec89_IR>,jule::Slice<_1d0019224_Log>> static__1b6607056_build(jule::Str,jule::I64);
inline void _1b662b2cd_append_structs(_1b737ec89_IR*,jule::Ptr<_1a75cbe4c_Package>&,jule::Slice<jule::Ptr<_1a64147be_Struct>>&);
inline jule::Slice<jule::Ptr<_1a64147be_Struct>> _1b66a8338_get_all_structures(_1b737ec89_IR*);
inline void _1b66ad3b5_order(_1b737ec89_IR*);
struct _1b737ec89_IR {
	jule::Str _field_root = jule::Str();
	jule::Slice<jule::Str> _field_passes = jule::Slice<jule::Str>();
	jule::Ptr<_1a75cbe4c_Package> _field_main = jule::Ptr<_1a75cbe4c_Package>();
	jule::Slice<jule::Ptr<_1a75c928a_ImportInfo>> _field_used = jule::Slice<jule::Ptr<_1a75c928a_ImportInfo>>();
	_1b65924db_OrderedDefines _field_ordered = _1b65924db_OrderedDefines();


	_1b737ec89_IR(jule::Str __param_root, jule::Slice<jule::Str> __param_passes, jule::Ptr<_1a75cbe4c_Package> __param_main, jule::Slice<jule::Ptr<_1a75c928a_ImportInfo>> __param_used, _1b65924db_OrderedDefines __param_ordered): _field_root(__param_root), _field_passes(__param_passes), _field_main(__param_main), _field_used(__param_used), _field_ordered(__param_ordered) {}

	

	_1b737ec89_IR(void) = default;

	inline bool operator==(_1b737ec89_IR _other) {
		return 
			this->_field_root == _other._field_root &&
			this->_field_passes == _other._field_passes &&
			this->_field_main == _other._field_main &&
			this->_field_used == _other._field_used &&
			this->_field_ordered == _other._field_ordered;
	}

	inline bool operator!=(_1b737ec89_IR _other) { return !this->operator==(_other); }


};
inline std::tuple<jule::I64,jule::Bool> _1a7e93d74_parse_integer_0(_1a7e93824_ArgParser*,jule::Str&,jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)>);
inline std::tuple<jule::U64,jule::Bool> _1a7e93d74_parse_integer_1(_1a7e93824_ArgParser*,jule::Str&,jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)>);
inline jule::Str _1a7e940d8_get_data(_1a7e93824_ArgParser*);
inline jule::VoidExceptional _1a7e9435d_process_flag(_1a7e93824_ArgParser*,jule::Trait<_1a7e5e14c_CommonFlag>&);
inline jule::VoidExceptional _1a7e945d3_single_dash(_1a7e93824_ArgParser*,jule::Str&);
inline jule::VoidExceptional _1a7e94858_double_dash(_1a7e93824_ArgParser*,jule::Str&);
inline jule::VoidExceptional _1a7e94a34_try_arg(_1a7e93824_ArgParser*);
inline jule::VoidExceptional _1a7e94c10_parse(_1a7e93824_ArgParser*);
struct _1a7e93824_ArgParser {
	_1a7e91118_FlagSet _field_set = _1a7e91118_FlagSet();
	jule::Slice<jule::Str> _field_args = jule::Slice<jule::Str>();
	jule::Slice<jule::Str> _field_content = jule::Slice<jule::Str>();
	jule::I64 _field_i = jule::I64();


	_1a7e93824_ArgParser(_1a7e91118_FlagSet __param_set, jule::Slice<jule::Str> __param_args, jule::Slice<jule::Str> __param_content, jule::I64 __param_i): _field_set(__param_set), _field_args(__param_args), _field_content(__param_content), _field_i(__param_i) {}

	

	_1a7e93824_ArgParser(void) = default;

	inline bool operator==(_1a7e93824_ArgParser _other) {
		return 
			this->_field_set == _other._field_set &&
			this->_field_args == _other._field_args &&
			this->_field_content == _other._field_content &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1a7e93824_ArgParser _other) { return !this->operator==(_other); }


};
inline void _1e829c68c_push_opt_level(jule::I64);
inline jule::I32 _1e84a914b_decode_rune(jule::I32,jule::I32);
inline std::tuple<jule::I32,jule::I32> _1e84a93e3_encode_rune(jule::I32);
inline jule::Slice<jule::I32> _1e84a9976_decode(jule::Slice<jule::U16>);
inline jule::Slice<jule::U16> _1e84a9cb7_append_rune(jule::Slice<jule::U16>,jule::I32);
inline jule::Slice<jule::U16> _1e8493e16_utf16_from_str(jule::Str);
inline jule::Str _1e849ed23_utf16_to_str(jule::Slice<jule::U16>);
inline jule::Str _1e8498b0d_u16_ptr_to_str(jule::U16*);
inline jule::I64 _1e844a96c_get_last_errno(void);
inline jule::U64 _1e9d9909a_get_std_handle(jule::U64);
inline jule::I64 _1e9d99683_wstat(jule::U16*,struct stat*);
inline jule::I64 _1e9d99a6d__wopen(jule::U16*,jule::I64,jule::I64);
inline jule::U32 _1e9d99c6b_get_last_error(void);
inline jule::U32 _1e9d9a0ac_get_current_directory(jule::U32,jule::U16*);
inline jule::Bool _1e9d9a5eb_delete_file(jule::U16*);
inline jule::Bool _1e9d9a893_create_directory(jule::U16*);
inline jule::Bool _1e9d9ab3a_remove_directory(jule::U16*);
inline _WDIR* _1e9d9add2__wopendir(jule::U16*);
inline struct _wdirent* _1e9d9b179__wreaddir(_WDIR*);
inline jule::I64 _1e9d9b421__wclosedir(_WDIR*);
inline jule::U32 _1e9d9bae7_get_full_path_name(jule::U16*,jule::U32,jule::U16*,jule::U16**);
inline jule::Bool _1e9d9be38_get_console_mode(jule::U64,jule::I64&);
inline jule::Bool _1e9d9c279_set_console_mode(jule::U64,jule::I64);
inline jule::Bool _1e9d9c7a7_write_console(jule::U64,jule::U16*,jule::I64,jule::I64&,void*);
inline jule::Bool _1e9d9ccd5_read_console(jule::U64,jule::U16*,jule::I64,jule::I64&,void*);
inline jule::I64 _1e9da028d_seek(jule::I64,jule::I64,jule::I64);
inline jule::I64 _1e9da0678_read(jule::I64,void*,jule::U64);
inline jule::I64 _1e9da09a8_close(jule::I64);
inline jule::I64 _1e9da0d93_write(jule::I64,void*,jule::U64);
inline void _1e9da10a2_exit(jule::I64);
inline std::tuple<jule::I32,jule::I64> _1e9e904b0_decode_rune(jule::Slice<jule::U8>);
inline std::tuple<jule::I32,jule::I64> _1e9e90a43_decode_last_rune(jule::Slice<jule::U8>);
inline jule::I64 _1e9e91082_rune_len(jule::I32);
inline jule::I64 _1e9e9145b_encode_rune(jule::Slice<jule::U8>,jule::I32);
inline jule::Slice<jule::U8> _1e9e9179c_append_rune(jule::Slice<jule::U8>,jule::I32);
inline jule::Slice<jule::U8> _1e9e91add_append_rune_non_ascii(jule::Slice<jule::U8>,jule::I32);
inline jule::I64 _1e9e9212c_rune_count_str(jule::Str);
inline jule::Bool _1e9e923c4_rune_start(jule::U8);
inline jule::I64 _1ce928d87_get_last_os_error_windows(void);
inline jule::Slice<jule::Str> _1ce92cad3_args(void);
inline jule::Exceptional<jule::Str> _1ce92d023_working_dir(void);
inline jule::Exceptional<jule::Str> _1ce92dce3___getwd(void);
inline jule::Slice<jule::U8> _1ce9b099b_stobs(jule::Str&);
inline jule::Bool _1d0966e29_is_letter(jule::I32);
inline jule::Bool _1d09a16c2_is16(jule::Slice<_1d099ea88_Range16>,jule::U16);
inline jule::Bool _1d09a1a13_is32(jule::Slice<_1d09a0050_Range32>,jule::U32);
inline jule::Bool _1d09a222d_is_excluding_latin(jule::Ptr<_1d09a04c3_RangeTable>,jule::I32);
inline jule::Str _1d0940e58_repeat(jule::Str,jule::I64);
inline jule::Bool _1d095e32d__has_prefix(jule::Str&,jule::Str&,jule::I64);
inline jule::Bool _1d095aa22_has_prefix(jule::Str,jule::Str);
inline jule::Bool _1d09414ca__has_suffix(jule::Str&,jule::Str&,jule::I64);
inline jule::Bool _1d0941a08_has_suffix(jule::Str,jule::Str);
inline jule::I64 _1d0942883_find_at(jule::Str,jule::Str,jule::I64);
inline jule::I64 _1d0942168_find_last_at(jule::Str,jule::Str,jule::I64);
inline jule::I64 _1d094229a_find_last(jule::Str,jule::Str);
inline jule::I64 _1d09a2c45__find_rune(jule::Slice<jule::U8>&,jule::I32);
inline jule::I64 _1d09a31da_find_last_byte(jule::Str,jule::U8);
inline jule::I64 _1d09a36b3_find_any(jule::Str,jule::Str);
inline jule::Slice<jule::Str> _1d09a3927_split(jule::Str,jule::Str,jule::I64);
inline jule::Bool _1d09a3a59_contains(jule::Str,jule::Str);
inline jule::Bool _1d09a3e00_contains_any(jule::Str,jule::Str);
inline jule::Str _1d09a4164_replace(jule::Str,jule::Str,jule::Str,jule::I64);
inline void _1d09a2ea9__trim_left(jule::Slice<jule::U8>&,jule::Slice<jule::U8>&);
inline jule::Str _1d09a4ab0_trim_left(jule::Str,jule::Str);
inline void _1d09a4be2__trim_right(jule::Slice<jule::U8>&,jule::Slice<jule::U8>&);
inline jule::Str _1d09a4e56_trim(jule::Str,jule::Str);
inline jule::Bool _1ce907ad0_is_path_sep(jule::U8);
inline jule::Bool _1ce905c32_is_slash(jule::U8);
inline jule::U8 _1ce905d64_to_upper(jule::U8);
inline jule::I64 _1ce905a12_volume_name_len(jule::Str);
inline std::tuple<jule::Str,jule::Str,jule::Bool> _1ce9037e0_cut_path(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _1ce903a87_full_path(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _1ce903db7___abs(jule::Str);
inline jule::Str _1ce90415e___join(jule::Slice<jule::Str>);
inline jule::Str _1d09a574d_clean(jule::Str);
inline jule::Str _1d09a59b2_from_slash(jule::Str);
inline jule::Str _1d09a5c6a_join(jule::Slice<jule::Str>);
inline jule::Str _1d09a6012_ext(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _1d09a62a9_abs(jule::Str);
inline jule::Str _1d09a6551_base(jule::Str);
inline jule::Str _1d09a6881_dir(jule::Str);
inline jule::Str _1d09a6b28_volume_name(jule::Str);
inline jule::I64 _1e9da7d9a_get_last_fs_error(void);
inline jule::Bool _1e9e92e41_is_console_handle(jule::U64);
inline jule::I64 _1d0059440_get_last_process_error(void);
inline jule::Slice<wchar_t*> _1d0069164_ustr_slice_to_wcstr_slice(jule::Slice<jule::Slice<jule::U16>>);
inline jule::Slice<jule::Slice<jule::U16>> _1d006943e_str_slice_to_ustr_slice(jule::Slice<jule::Str>);
inline jule::I64 _1d006976e_execvp(jule::Str,jule::Slice<jule::Str>);
inline jule::I64 _1d0069b59_execve(jule::Str,jule::Slice<jule::Str>,jule::Slice<jule::Str>);
inline void _1d006a85d_exit(jule::I64);
inline jule::Str _1d006aa5b_executable(void);
inline jule::Bool _1e9ea40a6_is_std_header_path(jule::Str);
inline jule::Bool _1e9ea55c4_is_valid_header_ext(jule::Str);
inline jule::Bool _1e9eb469e_is_valid_cpp_ext(jule::Str);
inline jule::Str _1d0019664_logf(jule::Str,jule::Slice<jule::Any>);
inline jule::Str _1d0019950_arg_to_str(jule::Any);
inline jule::I64 _1d0019be7_find_next_fmt(jule::Str);
inline jule::Str _1d001a07c_apply_fmt(jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _1d001ae90_is_top_directive(jule::Str);
inline jule::Bool _1d001c722_is_windows(jule::Str);
inline jule::Bool _1d001ca0d_is_darwin(jule::Str);
inline jule::Bool _1d001cca5_is_linux(jule::Str);
inline jule::Bool _1d001d091_is_i386(jule::Str);
inline jule::Bool _1d001d338_is_amd64(jule::Str);
inline jule::Bool _1d001d5d0_is_arm64(jule::Str);
inline jule::Bool _1d001d877_is_unix(jule::Str);
inline jule::Bool _1d001dba7_is_32bit(jule::Str);
inline jule::Bool _1d001de4e_is_64bit(jule::Str);
inline void _1d0057e66_init(void);
inline jule::Bool _1d07481c2_is_unary_op(jule::Str);
inline jule::Bool _1d07484ad_is_bin_op(jule::Str);
inline jule::Bool _1d0748a41_is_str(jule::Str);
inline jule::Bool _1d0748cd8_is_raw_str(jule::Str);
inline jule::Bool _1d0749080_is_rune(jule::Str);
inline jule::Bool _1d0749657_is_bool(jule::Str);
inline jule::Bool _1d07498ee_is_float(jule::Str);
inline jule::Bool _1d0749b96_is_num(jule::Str);
inline jule::Bool _1d074a1d5_is_ignore_ident(jule::Str);
inline jule::Bool _1d074a47c_is_anon_ident(jule::Str);
inline jule::Bool _1d074a9bb_is_space(jule::I32);
inline jule::Bool _1d074ad84_is_letter(jule::I32);
inline jule::Bool _1d074b3c3_is_decimal(jule::U8);
inline jule::Bool _1d074b66a_is_binary(jule::U8);
inline jule::Bool _1d074b912_is_octal(jule::U8);
inline jule::Bool _1d074bba9_is_hex(jule::U8);
inline jule::Bool _1d074be51_is_assign(jule::U64);
inline jule::Bool _1d074c1e8_is_postfix_op(jule::Str);
inline jule::Bool _1d074c490_is_assign_op(jule::Str);
inline jule::Ptr<_1d074cd75_File> _1d074e3a4_new_file_set(jule::Str);
inline _1d0019224_Log _1d0750927_make_err(jule::I64,jule::I64,jule::Ptr<_1d074cd75_File>&,jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _1d0750cac_bytes_has_prefix(jule::Slice<jule::U8>&,jule::Str);
inline jule::Str _1d07510ed_float_fmt_e(jule::Slice<jule::U8>&,jule::I64);
inline jule::Str _1d0751483_float_fmt_p(jule::Slice<jule::U8>&,jule::I64);
inline jule::Str _1d07517c4_float_fmt_dotnp(jule::Slice<jule::U8>&,jule::I64);
inline jule::Str _1d0751b15_float_fmt_dotfp(jule::Slice<jule::U8>&,jule::I64);
inline jule::Str _1d0751e56_float_fmt_dotp(jule::Slice<jule::U8>&,jule::I64);
inline jule::Str _1d0752330_float_num(jule::Slice<jule::U8>&,jule::I64);
inline jule::Str _1d07525c7_common_num(jule::Slice<jule::U8>&);
inline jule::Str _1d075286e_binary_num(jule::Slice<jule::U8>&);
inline jule::Bool _1d0752bb0_is_float_fmt_e(jule::U8,jule::I64);
inline jule::Bool _1d0753001_is_float_fmt_p(jule::U8,jule::I64);
inline jule::Bool _1d0753342_is_float_fmt_dotnp(jule::Slice<jule::U8>&,jule::I64);
inline jule::Bool _1d0753683_is_float_fmt_dotp(jule::Slice<jule::U8>&,jule::I64);
inline jule::Bool _1d07539c4_is_float_fmt_dotfp(jule::Slice<jule::U8>&,jule::I64);
inline jule::Str _1d0753d8c_octal_num(jule::Slice<jule::U8>&);
inline jule::Str _1d0754134_hex_num(jule::Slice<jule::U8>&);
inline jule::Str _1d0754475_hex_escape(jule::Slice<jule::U8>&,jule::I64);
inline jule::Str _1d0754761_big_unicode_point_escape(jule::Slice<jule::U8>&);
inline jule::Str _1d0754a3b_little_unicode_point_escape(jule::Slice<jule::U8>&);
inline jule::Str _1d0754cc2_hex_byte_escape(jule::Slice<jule::U8>&);
inline jule::Str _1d0755069_byte_escape(jule::Slice<jule::U8>&);
inline jule::Slice<_1d0019224_Log> _1d0759a63_lex(jule::Ptr<_1d074cd75_File>,jule::I64);
inline jule::Bool _1d077d9aa_find_module_file(jule::Slice<jule::Ptr<_1e9da8494_DirEntry>>&);
inline jule::Str _1d077db53_find_module_file_deep(jule::Str);
inline jule::Slice<_1d0019224_Log> _1d077ddea_check_module_file(jule::Str);
inline jule::Ptr<_1b6506593_FileInfo> _1b650696c_parse_file(jule::Ptr<_1d074cd75_File>);
inline std::tuple<jule::Ptr<_1d06e7b66_Ast>,jule::Slice<_1d0019224_Log>> _1b654b572_parse_fileset(jule::Ptr<_1d074cd75_File>);
inline jule::Ptr<_1d0761c13_ScopeTree> _1b654c276_new_scope(void);
inline std::tuple<jule::Bool,jule::Bool> _1b654c584_is_st(jule::Ptr<_1d0747985_Token>,jule::Ptr<_1d0747985_Token>);
inline jule::Bool _1b654c919_prev_is_incomplete_expr(jule::Slice<jule::Ptr<_1d0747985_Token>>&,jule::I64&);
inline std::tuple<jule::I64,jule::Bool> _1b654cc8d_next_st_pos(jule::Slice<jule::Ptr<_1d0747985_Token>>&,jule::I64);
inline std::tuple<jule::Slice<jule::Ptr<_1d0747985_Token>>,jule::Bool> _1b654d0ce_skip_st(jule::I64&,jule::Slice<jule::Ptr<_1d0747985_Token>>);
inline jule::Slice<jule::Ptr<_1b654d3cb_Stmt>> _1b654d772_split_stmts(jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline jule::Ptr<_1b655a5c5_CallData> _1b655a938_get_call_data(jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline jule::Slice<jule::Ptr<_1d0747985_Token>> _1b655ac24_get_block_expr(jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline std::tuple<jule::Slice<jule::Ptr<_1d0747985_Token>>,jule::Slice<jule::Ptr<_1d0747985_Token>>> _1b655aebb_split_colon(jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline jule::I64 _1b655b2a7_find_lowest_prec_op(jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline jule::Ptr<_1d075c00a_IdentExpr> _1b655b54e_build_ident_expr(jule::Ptr<_1d0747985_Token>&);
inline std::tuple<jule::Slice<jule::Ptr<_1d0747985_Token>>,jule::I64> _1b655b7e6_get_range_expr_tokens(jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline jule::Bool _1b65671e7_check_assign_tokens(jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline _1d0019224_Log _1b6568506_make_err(jule::I64,jule::I64,jule::Ptr<_1d074cd75_File>&,jule::Str,jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1d0747985_Token>> _1b656899b_range(jule::I64&,jule::Str,jule::Str,jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline std::tuple<jule::Slice<jule::Ptr<_1d0747985_Token>>,jule::Slice<jule::Ptr<_1d0747985_Token>>> _1b6568c43_range_last(jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_1d0747985_Token>>>,jule::Slice<_1d0019224_Log>> _1b6569172_parts(jule::Slice<jule::Ptr<_1d0747985_Token>>&,jule::U64,jule::Bool);
inline jule::Str _1b656945d_get_close_kind_of_brace(jule::Str);
inline _1d0019224_Log _1b6569837_compiler_err(jule::Ptr<_1d0747985_Token>&,jule::Str&,jule::Slice<jule::Any>);
inline void _1b6569b89_push_suggestion(_1d0019224_Log*,jule::Str,jule::Slice<jule::Any>);
inline jule::Str _1b6569eb9_tokstoa(jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline jule::Ptr<_1d0759c1c_TypeDecl> _1b657a0d9_build_void_type(void);
inline jule::Ptr<_1d0759c1c_TypeDecl> _1b657a35e_build_prim_type(jule::Ptr<_1d0747985_Token>);
inline std::tuple<jule::Slice<jule::Ptr<_1d0747985_Token>>,jule::I64> _1b657a6a0_split_map_range(jule::Slice<jule::Ptr<_1d0747985_Token>>&,jule::I64&);
inline jule::I64 _1a7432687_leading_zeros64(jule::U64);
inline jule::I64 _1a74330d3_trailing_zeros(jule::U64);
inline jule::I64 _1a7433952_trailing_zeros32(jule::U32);
inline jule::I64 _1a7433be9_trailing_zeros64(jule::U64);
inline jule::I64 _1a7438c21_len32(jule::U32);
inline jule::I64 _1a7438eb8_len64(jule::U64);
inline std::tuple<jule::U64,jule::U64> _1a7439b78_add64(jule::U64,jule::U64,jule::U64);
inline std::tuple<jule::U64,jule::U64> _1a743b30b_mul64(jule::U64,jule::U64);
inline jule::U32 _1a7355225_f32_bits(jule::F32);
inline jule::F32 _1a7355511_f32_from_bits(jule::U32);
inline jule::U64 _1a73557a8_f64_bits(jule::F64);
inline jule::F64 _1a7355a94_f64_from_bits(jule::U64);
inline std::tuple<jule::F64,jule::I64> _1a7357a0d_frexp(jule::F64);
inline jule::F64 _1a74001d2_nan(void);
inline jule::Bool _1a73c96a6_is_nan(jule::F64);
inline jule::F64 _1a73a3dab_inf(jule::I64);
inline jule::Bool _1a73a4d8a_is_inf(jule::F64,jule::I64);
inline std::tuple<jule::F64,jule::I64> _1a73bb28b_normalize(jule::F64);
inline jule::F64 _1a743ece3_log(jule::F64);
inline jule::F64 _1a74403ba_abs(jule::F64);
inline std::tuple<jule::F64,jule::F64> _1a7441bc4_modf(jule::F64);
inline jule::F64 _1a74420e2_log2(jule::F64);
inline jule::Str _1b774e312_fmt_float(jule::F64,jule::U8,jule::I64,jule::I64);
inline jule::Slice<jule::U8> _1a70d7b9a_generic_ftoa(jule::Slice<jule::U8>,jule::F64,jule::U8,jule::I64,jule::I64);
inline jule::Slice<jule::U8> _1a71b234b_big_ftoa(jule::Slice<jule::U8>,jule::I64,jule::U8,jule::Bool,jule::U64,jule::I64,_1a71e9c9b_FloatInfo&);
inline jule::Slice<jule::U8> _1a71eb74d_fmt_digits(jule::Slice<jule::U8>,jule::Bool,jule::Bool,_1a708e723_DecimalSlice,jule::I64,jule::U8);
inline void _1a723b815_round_shortest(_1a7460ce2_Decimal&,jule::U64,jule::I64,_1a71e9c9b_FloatInfo&);
inline jule::Slice<jule::U8> _1a723bb56_fmt_e(jule::Slice<jule::U8>,jule::Bool,_1a708e723_DecimalSlice,jule::I64,jule::U8);
inline jule::Slice<jule::U8> _1a732219d_fmt_f(jule::Slice<jule::U8>,jule::Bool,_1a708e723_DecimalSlice,jule::I64);
inline jule::Slice<jule::U8> _1a7333786_fmt_b(jule::Slice<jule::U8>,jule::Bool,jule::U64,jule::I64,_1a71e9c9b_FloatInfo&);
inline jule::Slice<jule::U8> _1a7114974_fmt_x(jule::Slice<jule::U8>,jule::I64,jule::U8,jule::Bool,jule::U64,jule::I64,_1a71e9c9b_FloatInfo&);
inline jule::I64 _1a7114d4d_min(jule::I64,jule::I64);
inline jule::I64 _1a7238713_max(jule::I64,jule::I64);
inline jule::U8 _1a708aee4_lower(jule::U8);
inline std::tuple<jule::U64,jule::I64> _1a745c42b___parse_uint(jule::Str,jule::I64,jule::I64);
inline jule::Exceptional<jule::U64> _1a745c55d_parse_uint(jule::Str,jule::I64,jule::I64);
inline jule::Exceptional<jule::I64> _1a745c690_parse_int(jule::Str,jule::I64,jule::I64);
inline std::tuple<jule::F64,jule::Bool> _1a745caad_eisel_lemire64(jule::U64,jule::I64,jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _1a745cbe0_eisel_lemire32(jule::U64,jule::I64,jule::Bool);
inline jule::I64 _1a745d185_common_prefix_len_ignore_case(jule::Str,jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::Bool> _1a745d2b7_special(jule::Str);
inline std::tuple<jule::U64,jule::I64,jule::Bool,jule::Bool,jule::Bool,jule::I64,jule::Bool> _1a745d3e9_read_float(jule::Str);
inline std::tuple<jule::F64,jule::Bool> _1a745d8c2_atof64exact(jule::U64,jule::I64,jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _1a745da04_atof32exact(jule::U64,jule::I64,jule::Bool);
inline std::tuple<jule::F64,jule::I64> _1a745db36_atof_hex(jule::Str,_1a71e9c9b_FloatInfo&,jule::U64,jule::I64,jule::Bool,jule::Bool);
inline std::tuple<jule::F32,jule::I64,jule::I64> _1a745dc68_atof32(jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::I64> _1a745dd9a_atof64(jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::I64> _1a745decc_parse_float_prefix(jule::Str,jule::I64);
inline jule::Exceptional<jule::F64> _1a745e10e_parse_float(jule::Str,jule::I64);
inline void _1a745e50a_ryu_ftoa_fixed32(_1a708e723_DecimalSlice&,jule::U32,jule::I64,jule::I64);
inline void _1a745e63c_ryu_ftoa_fixed64(_1a708e723_DecimalSlice&,jule::U64,jule::I64,jule::I64);
inline void _1a745e76e_format_decimal(_1a708e723_DecimalSlice&,jule::U64,jule::Bool,jule::Bool,jule::I64);
inline void _1a745e8a1_ryu_ftoa_shortest(_1a708e723_DecimalSlice&,jule::U64,jule::I64,_1a71e9c9b_FloatInfo&);
inline jule::I64 _1a745e9d3_mul_by_log2_log10(jule::I64);
inline jule::I64 _1a745eb15_mul_by_log10_log2(jule::I64);
inline std::tuple<jule::U64,jule::U64,jule::U64,jule::I64> _1a745ec47_compute_bounds(jule::U64,jule::I64,_1a71e9c9b_FloatInfo&);
inline void _1a745ee89_ryu_digits(_1a708e723_DecimalSlice&,jule::U64,jule::U64,jule::U64,jule::Bool,jule::Bool);
inline void _1a74600bb_ryu_digits32(_1a708e723_DecimalSlice&,jule::U32,jule::U32,jule::U32,jule::Bool,jule::Bool,jule::I64);
inline std::tuple<jule::U32,jule::I64,jule::Bool> _1a74601ed_mult64bit_pow10(jule::U32,jule::I64,jule::I64);
inline std::tuple<jule::U64,jule::I64,jule::Bool> _1a7460330_mult128bit_pow10(jule::U64,jule::I64,jule::I64);
inline jule::Bool _1a7460462_divisible_by_pow5(jule::U64,jule::I64);
inline std::tuple<jule::U32,jule::U32> _1a7460594_divmod1e9(jule::U64);
inline void _1a746250d_trim(_1a7460ce2_Decimal&);
inline void _1a74627b6_right_shift(_1a7460ce2_Decimal&,jule::U64);
inline jule::Bool _1a7462be5_prefix_is_less_than(jule::Array<jule::U8,800>,jule::I64,jule::Str);
inline void _1a7462e9d_left_shift(_1a7460ce2_Decimal&,jule::U64);
inline jule::Bool _1a74632de_should_round_up(_1a7460ce2_Decimal&,jule::I64);
inline jule::Str _1a7464279_fmt_uint(jule::U64,jule::I64);
inline jule::Str _1a746460e_fmt_int(jule::I64,jule::I64);
inline jule::Str _1a74648a6_itoa(jule::I64);
inline jule::Str _1a7464b92_small(jule::I64);
inline jule::Bool _1a7464e39_is_power_of_two(jule::I64);
inline std::tuple<jule::Slice<jule::U8>,jule::Str> _1a7465467_fmt_bits(jule::Slice<jule::U8>,jule::U64,jule::I64,jule::Bool,jule::Bool);
inline void _1a7527051_lshift_unsig(_1a751ddb1_Const&,_1a751ddb1_Const&);
inline void _1a752734d_rshift_unsig(_1a751ddb1_Const&,_1a751ddb1_Const&);
inline jule::Str _1a75a6a81_real_kind_of(jule::Str);
inline jule::I64 _1a75a6d28_bitsize_of(jule::Str);
inline jule::Str _1a75a7114_int_from_bits(jule::I64);
inline jule::Str _1a75a73ab_uint_from_bits(jule::I64);
inline jule::Str _1a75a7653_float_from_bits(jule::I64);
inline jule::Bool _1a75a81ae_check_bit_float(jule::Str,jule::I64);
inline jule::I64 _1a75a8456_bitsize_of_float(jule::F64);
inline jule::I64 _1a75a86ed_bitsize_of_int(jule::I64);
inline jule::I64 _1a75a8995_bitsize_of_uint(jule::U64);
inline void _1a75a8b0a_update_target(void);
inline void _1a75a8c70_init(void);
inline jule::F64 _1a75ab14b_min(jule::Str);
inline jule::F64 _1a75ab437_max(jule::Str);
inline jule::Bool _1a75ab899_is_i8_compatible(jule::Str);
inline jule::Bool _1a75abb85_is_i16_compatible(jule::Str);
inline jule::Bool _1a75abe2c_is_i32_compatible(jule::Str);
inline jule::Bool _1a75ac218_is_i64_compatible(jule::Str);
inline jule::Bool _1a75ac4b0_is_u8_compatible(jule::Str);
inline jule::Bool _1a75ac757_is_u16_compatible(jule::Str);
inline jule::Bool _1a75ac9ee_is_u32_compatible(jule::Str);
inline jule::Bool _1a75acd2e_is_u64_compatible(jule::Str);
inline jule::Bool _1a75ad0c6_is_f32_compatible(jule::Str);
inline jule::Bool _1a75ad36d_is_f64_compatible(jule::Str);
inline jule::Bool _1a75ad6ae_types_are_compatible(jule::Str,jule::Str);
inline jule::Bool _1a75ad956_is_i16_greater(jule::Str);
inline jule::Bool _1a75adbed_is_i32_greater(jule::Str);
inline jule::Bool _1a75ade95_is_i64_greater(jule::Str);
inline jule::Bool _1a75ae23c_is_u16_greater(jule::Str);
inline jule::Bool _1a75ae605_is_u32_greater(jule::Str);
inline jule::Bool _1a75ae89c_is_u64_greater(jule::Str);
inline jule::Bool _1a75aeb44_is_f32_greater(jule::Str);
inline jule::Bool _1a75aeddb_is_f64_greater(jule::Str);
inline jule::Bool _1a75b022c_is_greater(jule::Str,jule::Str);
inline jule::Bool _1a75b134e_is_sig_int(jule::Str);
inline jule::Bool _1a75b163a_is_unsig_int(jule::Str);
inline jule::Bool _1a75b18d2_is_int(jule::Str);
inline jule::Bool _1a75b1bbd_is_float(jule::Str);
inline jule::Bool _1a75b1e65_is_num(jule::Str);
inline jule::Bool _1a7631d1a_is_ascii(jule::I32);
inline jule::I32 _1a76337de_to_rune(jule::Slice<jule::U8>);
inline jule::Str _1a7633921_to_raw_str(jule::Slice<jule::U8>);
inline jule::Str _1a7633b96_to_str(jule::Slice<jule::U8>);
inline std::tuple<jule::U8,jule::Bool> _1a7633e3d_try_btoa_common_esq(jule::Slice<jule::U8>);
inline jule::I32 _1a763427e_rune_from_esq_seq(jule::Slice<jule::U8>,jule::I64&);
inline jule::Slice<jule::U8> _1a76345c0_str_esq_seq(jule::Slice<jule::U8>,jule::I64&);
inline jule::I64 _1a7701cca_find_format_prefix(jule::Slice<jule::U8>&,jule::I64&);
inline jule::Slice<jule::U8> _1a76e0934_get_format_range(jule::I64&,jule::Slice<jule::U8>&);
inline jule::Slice<jule::U8> _1a76e0a66_fmt_by_default(jule::Any&);
inline jule::Slice<jule::U8> _1a76e023b_apply_fmt_by_default(jule::I64&,jule::Slice<jule::Any>&);
inline jule::Slice<jule::U8> _1a76e036d_apply_fmt(jule::Slice<jule::U8>&,jule::I64&,jule::Slice<jule::Any>&);
inline jule::Slice<jule::U8> _1a76e111b_format_bytes(jule::Str,jule::Slice<jule::Any>);
inline jule::Str _1a76e124d_format(jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _1a642b6e8_kind_uses_generics(jule::Ptr<_1a7672da0_TypeKind>,jule::Slice<jule::Ptr<_1d075ee64_GenericDecl>>&);
inline jule::Bool _1a642bac2_parameter_uses_generics(jule::Ptr<_1a6425208_Param>&,jule::Slice<jule::Ptr<_1d075ee64_GenericDecl>>&);
inline jule::Ptr<_1a7676c3e_TypeSymbol> _1a642e465_build_type(jule::Ptr<_1d0759c1c_TypeDecl>);
inline jule::Ptr<_1a7649be0_Value> _1a642e751_build_expr(jule::Ptr<_1d075b14c_Expr>);
inline jule::Ptr<_1a7672168_TypeAlias> _1a642e9e8_build_type_alias(jule::Ptr<_1d0767e5b_TypeAliasDecl>);
inline jule::Ptr<_1a6363e9e_Field> _1a642ecd4_build_field(jule::Ptr<_1d076ae3c_FieldDecl>);
inline jule::Slice<jule::Ptr<_1a6363e9e_Field>> _1a643007b_build_fields(jule::Slice<jule::Ptr<_1d076ae3c_FieldDecl>>&);
inline jule::Ptr<_1a64147be_Struct> _1a6430323_build_struct(jule::Ptr<_1d076b79a_StructDecl>);
inline jule::Ptr<_1a6425208_Param> _1a64305ba_build_param(jule::Ptr<_1d07623d9_ParamDecl>);
inline jule::Slice<jule::Ptr<_1a6425208_Param>> _1a64308ea_build_params(jule::Slice<jule::Ptr<_1d07623d9_ParamDecl>>&);
inline jule::Ptr<_1a6424a32_RetType> _1a6430b92_build_ret_type(jule::Ptr<_1d075ae60_RetTypeDecl>);
inline jule::Ptr<_1a6426a45_Fn> _1a6430e39_build_fn(jule::Ptr<_1d0763709_FnDecl>);
inline jule::Slice<jule::Ptr<_1a6426a45_Fn>> _1a64311d1_build_methods(jule::Slice<jule::Ptr<_1d0763709_FnDecl>>&);
inline jule::Ptr<_1a7465bd7_Trait> _1a6431478_build_trait(jule::Ptr<_1d076bda5_TraitDecl>);
inline jule::Ptr<_1a7467403_EnumItem> _1a6431720_build_enum_item(jule::Ptr<_1d07697ba_EnumItemDecl>);
inline jule::Slice<jule::Ptr<_1a7467403_EnumItem>> _1a64319b7_build_enum_items(jule::Slice<jule::Ptr<_1d07697ba_EnumItemDecl>>&);
inline jule::Ptr<_1a7467de8_Enum> _1a6431c5e_build_enum(jule::Ptr<_1d076a414_EnumDecl>);
inline jule::Ptr<_1a75ec478_Var> _1a6432127_build_var(jule::Ptr<_1d07646d8_VarDecl>);
inline jule::Slice<jule::Ptr<_1a75ec478_Var>> _1a64323be_build_vars(jule::Slice<jule::Ptr<_1d07646d8_VarDecl>>);
inline jule::Ptr<_1a746936c_Impl> _1a6432666_build_impl(jule::Ptr<_1d076c4b0_Impl>);
inline jule::Ptr<_1a75b3b8c_ScopeChecker> _1a7537c76_new_scope_checker_base(jule::Ptr<_1a75d1e74_Sema>&,jule::Ptr<_1a6429be1_FnIns>);
inline jule::Ptr<_1a75b3b8c_ScopeChecker> _1a754d4a6_new_scope_checker(jule::Ptr<_1a75d1e74_Sema>&,jule::Ptr<_1a6429be1_FnIns>);
inline jule::Ptr<_1a75b37b3_ScopeLabel> _1a7562058_find_label_parent(jule::Str,jule::Ptr<_1a75b3b8c_ScopeChecker>);
inline jule::Bool _1a757ccaa_stmt_is_goto_scope(jule::Any&,jule::Ptr<_1a759e606_Scope>&);
inline jule::I64 _1a75804c7_count_match_type(jule::Ptr<_1a75b2cce_Match>&,jule::Ptr<_1a7672da0_TypeKind>&);
inline jule::Slice<jule::Ptr<_1a7648b67_Data>> _1a7580c58_get_datas_from_tuple_data(jule::Ptr<_1a7648b67_Data>&);
inline jule::Slice<jule::Any> _1a7581891_get_expr_models(jule::Any&);
inline jule::Bool _1a7583cb1_check_mut(jule::Ptr<_1a75d1e74_Sema>&,jule::Ptr<_1a7648b67_Data>&,jule::Ptr<_1a7648b67_Data>,jule::Ptr<_1d0747985_Token>);
inline jule::Bool _1a7584542_check_assign(jule::Ptr<_1a75d1e74_Sema>&,jule::Ptr<_1a7648b67_Data>&,jule::Ptr<_1a7648b67_Data>,jule::Ptr<_1d0747985_Token>);
inline jule::Bool _1a7584cd4_is_valid_ast_st_for_next_st(jule::Any&);
inline jule::Bool _1a758bd63_is_valid_st_for_next_st(jule::Any&);
inline jule::Bool _1a758c5a0_st_is_def(jule::Any&);
inline jule::Ptr<_1a75ec478_Var> _1a75c72aa_find_var_in_package(jule::Slice<jule::Ptr<_1a76439db_SymbolTable>>&,jule::Str,jule::Bool);
inline jule::Ptr<_1a7672168_TypeAlias> _1a75c772d_find_type_alias_in_package(jule::Slice<jule::Ptr<_1a76439db_SymbolTable>>&,jule::Str,jule::Bool);
inline jule::Ptr<_1a64147be_Struct> _1a75c7b07_find_struct_in_package(jule::Slice<jule::Ptr<_1a76439db_SymbolTable>>&,jule::Str,jule::Bool);
inline jule::Ptr<_1a6426a45_Fn> _1a75c8036_find_fn_in_package(jule::Slice<jule::Ptr<_1a76439db_SymbolTable>>&,jule::Str,jule::Bool);
inline jule::Ptr<_1a7465bd7_Trait> _1a75c8377_find_trait_in_package(jule::Slice<jule::Ptr<_1a76439db_SymbolTable>>&,jule::Str);
inline jule::Ptr<_1a7467de8_Enum> _1a75c86b8_find_enum_in_package(jule::Slice<jule::Ptr<_1a76439db_SymbolTable>>&,jule::Str);
inline jule::Bool _1a75ce207_is_std_package(jule::Str,jule::Str);
inline jule::Bool _1a75d0192_is_valid_model_for_ref(jule::Any&);
inline _1d0019224_Log _1a75d05d2_compiler_err(jule::Ptr<_1d0747985_Token>&,jule::Bool,jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _1a75d0923_imp_is_lookupable(jule::Ptr<_1a75c928a_ImportInfo>&,jule::Str);
inline void _1a75d0c20_append_ret_vars(jule::Slice<jule::Ptr<_1a75ec478_Var>>&,jule::Ptr<_1a6429be1_FnIns>&);
inline void _1a75d0ec8_append_param_vars(jule::Slice<jule::Ptr<_1a75ec478_Var>>&,jule::Ptr<_1a6429be1_FnIns>&);
inline void _1a75d12c5_append_generic_type_aliases(jule::Slice<jule::Ptr<_1a7672168_TypeAlias>>&,jule::Ptr<_1a6429be1_FnIns>&);
inline jule::Ptr<_1a76439db_SymbolTable> _1a75d1605_find_file(jule::Slice<jule::Ptr<_1a76439db_SymbolTable>>&,jule::Ptr<_1d074cd75_File>&);
inline void _1a75d19e0_push_suggestion(_1d0019224_Log*,jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _1a761aac3_trait_has_reference_receiver(jule::Ptr<_1a7465bd7_Trait>&);
inline jule::Bool _1a7634823_float_assignable(jule::Str,jule::Ptr<_1a7648b67_Data>&);
inline jule::Bool _1a7634955_sig_assignable(jule::Str,jule::Ptr<_1a7648b67_Data>&);
inline jule::Bool _1a7634a87_unsig_assignable(jule::Str,jule::Ptr<_1a7648b67_Data>&);
inline jule::Bool _1a7634bb9_int_assignable(jule::Str,jule::Ptr<_1a7648b67_Data>&);
inline jule::Ptr<_1d06c9ecd_Directive> _1a766cb36_find_directive(jule::Slice<jule::Ptr<_1d06c9ecd_Directive>>&,jule::Str);
inline jule::Any _1a766cebb_find_builtins_import(jule::Str,jule::Ptr<_1a75c928a_ImportInfo>);
inline void _1a766d1ca_fit_bitsize(jule::Ptr<_1a7648b67_Data>&);
inline void _1a766d4c7_make_struct_lit_alloc(jule::Ptr<_1a7648b67_Data>&,jule::Ptr<_1a641a1cb_StructLitExprModel>&);
inline jule::Ptr<_1a75ec478_Var> _1a766d818_build_error_var(jule::Ptr<_1a759e606_Scope>&,jule::Ptr<_1d075cd74_FnCallExpr>&);
inline jule::Any _1a766db59_find_builtins_sema(jule::Str,jule::Ptr<_1a75d1e74_Sema>);
inline jule::Bool _1a766de01_is_ok_for_shifting(jule::Ptr<_1a7648b67_Data>&);
inline jule::Bool _1a766e231_is_instanced_struct(jule::Ptr<_1a641744d_StructIns>);
inline jule::Bool _1a766e53e_is_ptr_arithmetic_compatible_int(jule::Ptr<_1a7648b67_Data>&);
inline void _1a766e71a_apply_cast_kind_model(jule::Ptr<_1a7648b67_Data>&);
inline void _1a766e929_apply_cast_kind(jule::Ptr<_1a7648b67_Data>&);
inline jule::Ptr<_1a7648b67_Data> _1a766eb27_build_void_data(void);
inline jule::Str _1a766ee13_check_data_for_integer_indexing(jule::Ptr<_1a7648b67_Data>&);
inline void _1a76701ee_apply_cast_model_by_enum(jule::Ptr<_1a7648b67_Data>&,jule::Ptr<_1a7467de8_Enum>);
inline void _1a7670496_cast_const_by_type(jule::Str&,jule::Ptr<_1a7648b67_Data>&);
inline jule::Bool _1a76716d9_has_directive(jule::Slice<jule::Ptr<_1d06c9ecd_Directive>>&,jule::Str);
inline jule::Bool _1a767ee9a_can_get_ptr(jule::Ptr<_1a7648b67_Data>&);
inline jule::Bool _1a7680242_is_valid_for_sptr_type(jule::Ptr<_1a7672da0_TypeKind>&);
inline jule::Bool _1a768052d_is_valid_for_ref(jule::Ptr<_1a7672da0_TypeKind>&);
inline jule::Bool _1a7680819_is_builtin_str_convertable(jule::Ptr<_1a7672da0_TypeKind>&);
inline jule::Str _1a7680ae4_build_link_path_by_tokens(jule::Slice<jule::Ptr<_1d0747985_Token>>&);
inline jule::Ptr<_1a7677602_Prim> _1a7680d7a_build_prim_type(jule::Str);
inline jule::Ptr<_1a64147be_Struct> _1a76811aa_get_struct_from_kind(jule::Ptr<_1a7672da0_TypeKind>);
inline jule::Bool _1a7681452_is_prim(jule::Str);
inline void _1a7689191_apply_implicit_cast(jule::Ptr<_1a7672da0_TypeKind>&,jule::Ptr<_1a7648b67_Data>&);
inline std::tuple<jule::Ptr<_1a76439db_SymbolTable>,jule::Slice<_1d0019224_Log>> _1a768bd31_build_symbols(jule::Ptr<_1d06e7b66_Ast>&,jule::Trait<_1a75c6e25_Importer>&,jule::Ptr<_1a6432bb6_SymbolBuilder>);
inline std::tuple<jule::Ptr<_1a75cbe4c_Package>,jule::Slice<_1d0019224_Log>> _1a768c260___analyze_package(jule::Slice<jule::Ptr<_1d06e7b66_Ast>>&,jule::Trait<_1a75c6e25_Importer>&,jule::I64&);
inline std::tuple<jule::Ptr<_1a75cbe4c_Package>,jule::Slice<_1d0019224_Log>> _1a768c64a_analyze_package(jule::Slice<jule::Ptr<_1d06e7b66_Ast>>,jule::Trait<_1a75c6e25_Importer>,jule::I64);
inline jule::Ptr<_1a6429be1_FnIns> _1a7696313_find_builtin_fn(jule::Str);
inline jule::Ptr<_1a7672168_TypeAlias> _1a76983c0_find_builtin_type_alias(jule::Str);
inline jule::Ptr<_1a7465bd7_Trait> _1a7698e09_find_builtin_trait(jule::Str);
inline jule::Any _1a7699855_find_builtin_def(jule::Str);
inline jule::Any _1a76c3373_find_builtin_def_std_debug(jule::Str);
inline jule::Any _1a76c44c8_find_builtin_def_std_mem(jule::Str);
inline jule::Any _1a76b152b_find_builtin_def_std_jule_integrated(jule::Str);
inline jule::Any _1a76e1380_find_package_builtin_def(jule::Str,jule::Str);
inline jule::Ptr<_1a7648b67_Data> _1a76948a5_builtin_caller_common_plain(jule::Ptr<_1a764a6d5_Eval>&,jule::Ptr<_1d075cd74_FnCallExpr>&,jule::Ptr<_1a7648b67_Data>&);
inline jule::Ptr<_1a7648b67_Data> _1a769ba00_builtin_caller_common(jule::Ptr<_1a764a6d5_Eval>&,jule::Ptr<_1d075cd74_FnCallExpr>&,jule::Ptr<_1a7648b67_Data>&);
inline jule::Ptr<_1a7648b67_Data> _1a76cd933_builtin_caller_common_mut(jule::Ptr<_1a764a6d5_Eval>&,jule::Ptr<_1d075cd74_FnCallExpr>&,jule::Ptr<_1a7648b67_Data>&);
inline jule::Ptr<_1a7648b67_Data> _1a76b0c89_builtin_caller_error(jule::Ptr<_1a764a6d5_Eval>&,jule::Ptr<_1d075cd74_FnCallExpr>&);
inline jule::Ptr<_1a7648b67_Data> _1a76b0dbb_builtin_caller_out(jule::Ptr<_1a764a6d5_Eval>&,jule::Ptr<_1d075cd74_FnCallExpr>&,jule::Ptr<_1a7648b67_Data>&);
inline jule::Ptr<_1a7648b67_Data> _1a7719342_builtin_caller_outln(jule::Ptr<_1a764a6d5_Eval>&,jule::Ptr<_1d075cd74_FnCallExpr>&,jule::Ptr<_1a7648b67_Data>&);
inline jule::Ptr<_1a7648b67_Data> _1a7719474_builtin_caller_new(jule::Ptr<_1a764a6d5_Eval>&,jule::Ptr<_1d075cd74_FnCallExpr>&,jule::Ptr<_1a7648b67_Data>&);
inline jule::Ptr<_1a7648b67_Data> _1a77197d7_builtin_caller_panic(jule::Ptr<_1a764a6d5_Eval>&,jule::Ptr<_1d075cd74_FnCallExpr>&,jule::Ptr<_1a7648b67_Data>&);
inline jule::Ptr<_1a7648b67_Data> _1a7719919_builtin_caller_make(jule::Ptr<_1a764a6d5_Eval>&,jule::Ptr<_1d075cd74_FnCallExpr>&,jule::Ptr<_1a7648b67_Data>&);
inline jule::Ptr<_1a7648b67_Data> _1a7719a4b_builtin_caller_append(jule::Ptr<_1a764a6d5_Eval>&,jule::Ptr<_1d075cd74_FnCallExpr>&,jule::Ptr<_1a7648b67_Data>&);
inline jule::Ptr<_1a7648b67_Data> _1a7719b7d_builtin_caller_copy(jule::Ptr<_1a764a6d5_Eval>&,jule::Ptr<_1d075cd74_FnCallExpr>&,jule::Ptr<_1a7648b67_Data>&);
inline jule::Ptr<_1a7648b67_Data> _1a7719cb0_builtin_caller_clone(jule::Ptr<_1a764a6d5_Eval>&,jule::Ptr<_1d075cd74_FnCallExpr>&,jule::Ptr<_1a7648b67_Data>&);
inline jule::Ptr<_1a7648b67_Data> _1a7719de2_builtin_caller_assert(jule::Ptr<_1a764a6d5_Eval>&,jule::Ptr<_1d075cd74_FnCallExpr>&,jule::Ptr<_1a7648b67_Data>&);
inline jule::Ptr<_1a7648b67_Data> _1a771a024_builtin_caller_std_mem_size_of(jule::Ptr<_1a764a6d5_Eval>&,jule::Ptr<_1d075cd74_FnCallExpr>&,jule::Ptr<_1a7648b67_Data>&);
inline jule::Ptr<_1a7648b67_Data> _1a771a156_builtin_caller_std_mem_align_of(jule::Ptr<_1a764a6d5_Eval>&,jule::Ptr<_1d075cd74_FnCallExpr>&,jule::Ptr<_1a7648b67_Data>&);
inline jule::Ptr<_1a7648b67_Data> _1a771a288_builtin_caller_std_mem_free(jule::Ptr<_1a764a6d5_Eval>&,jule::Ptr<_1d075cd74_FnCallExpr>&,jule::Ptr<_1a7648b67_Data>&);
inline jule::Ptr<_1a7648b67_Data> _1a771a6b7_builtin_caller_std_jule_integrated_to_str(jule::Ptr<_1a764a6d5_Eval>&,jule::Ptr<_1d075cd74_FnCallExpr>&,jule::Ptr<_1a7648b67_Data>&);
inline jule::Ptr<_1a7648b67_Data> _1a771aad5_builtin_caller_std_jule_integrated_emit(jule::Ptr<_1a764a6d5_Eval>&,jule::Ptr<_1d075cd74_FnCallExpr>&,jule::Ptr<_1a7648b67_Data>&);
inline jule::Ptr<_1a7648b67_Data> _1a771aed1_builtin_caller_std_debug_out(jule::Ptr<_1a764a6d5_Eval>&,jule::Ptr<_1d075cd74_FnCallExpr>&,jule::Ptr<_1a7648b67_Data>&);
inline jule::Ptr<_1a7648b67_Data> _1a771b3ee_builtin_caller_std_debug_outln(jule::Ptr<_1a764a6d5_Eval>&,jule::Ptr<_1d075cd74_FnCallExpr>&,jule::Ptr<_1a7648b67_Data>&);
inline std::tuple<jule::Bool,jule::Bool> _1d0b4e8d6_check_os(jule::Str);
inline std::tuple<jule::Bool,jule::Bool> _1d0b4ea18_check_arch(jule::Str);
inline jule::Bool _1d0b68ee9_is_pass_file_annotation(jule::Str);
inline void _1d0b6a182_set_os_vars(jule::Slice<jule::Str>&);
inline void _1d0b6a3d5_set_arch_vars(jule::Slice<jule::Str>&);
inline void _1d0b6a68d_init_vars(jule::Slice<jule::Str>&,_1d0b69d74_CompileInfo&);
inline jule::Slice<jule::U8> _1b658acdc_read_buff(jule::Str);
inline _1d0019224_Log _1b659ea6a_flat_compiler_err(jule::Str);
inline void _1b66ad86b_push_passes(jule::Ptr<_1a75cbe4c_Package>&,jule::Slice<jule::Str>&);
inline jule::Slice<jule::Str> _1b66b0917_get_all_unique_passes(jule::Ptr<_1a75cbe4c_Package>&,jule::Slice<jule::Ptr<_1a75c928a_ImportInfo>>);
inline _1d0b69d74_CompileInfo _1b66b32dd_build_compile_info(void);
inline jule::Ptr<_1d06c9ecd_Directive> _1b66c2396_find_directive(jule::Slice<jule::Ptr<_1d06c9ecd_Directive>>&,jule::Str);
inline jule::Bool _1b66c48a4_has_directive(jule::Slice<jule::Ptr<_1d06c9ecd_Directive>>&,jule::Str);
inline jule::Bool _1b66c9d0a_is_exist(jule::Slice<jule::Any>,jule::Any);
inline jule::Bool _1b66d6872_is_dead(jule::Any);
inline void _1b66ddd52_drop_ref(jule::Slice<jule::Any>&,jule::I64);
inline jule::Bool _1b66e871e_is_all_references_are_dead(jule::Ptr<_1a642cc9e_ReferenceStack>);
inline jule::Bool _1b66eb06d_is_fn_dead(jule::Ptr<_1a6429be1_FnIns>);
inline jule::Bool _1b67026b2_is_var_dead(jule::Ptr<_1a75ec478_Var>);
inline jule::Bool _1b6708db1_is_struct_dead(jule::Ptr<_1a641744d_StructIns>);
inline jule::Bool _1b6729de3_is_trait_dead(jule::Ptr<_1a7465bd7_Trait>);
inline void _1b6893336_eliminate_dead_functions(jule::Slice<jule::Ptr<_1a6426a45_Fn>>&);
inline void _1b6897857_eliminate_dead_globals(jule::Ptr<_1a75cbe4c_Package>&);
inline void _1b6898a89_eliminate_dead_functions_package(jule::Ptr<_1a75cbe4c_Package>&);
inline void _1b689d42e_keep_alive_init(jule::Ptr<_1a75cbe4c_Package>&);
inline void _1b68a867b_eliminate_package(jule::Ptr<_1a75cbe4c_Package>&);
inline void _1b68b08b4_eliminate_defines(jule::Ptr<_1b737ec89_IR>&);
inline void _1b68cd272_eliminate_dead_code_of_scope(jule::Ptr<_1a759e606_Scope>);
inline void _1b68cecbd_eliminate_scope_functions(jule::Slice<jule::Ptr<_1a6426a45_Fn>>&);
inline void _1b69155a6_eliminate_functions_scope_package(jule::Ptr<_1a75cbe4c_Package>&);
inline void _1b692cd82_eliminate_scope_package(jule::Ptr<_1a75cbe4c_Package>&);
inline void _1b6938b4b_eliminate_scopes(jule::Ptr<_1b737ec89_IR>&);
inline void _1b69d7ed6_throw(jule::Str);
inline jule::Bool _1a7d66065_is_std_package(jule::Str,jule::Str);
inline jule::Bool _1a7d663b7_is_constant_valid_conditional_case(jule::Ptr<_1a75a6003_If>&);
inline jule::Bool _1a7d6662b_is_unreachable_expr(jule::Any&);
inline jule::Bool _1a7d6695b_is_constant_valid_match_case(jule::Ptr<_1a75b31ec_Case>&);
inline jule::Bool _1a7d66c36_is_unreachable_conditional_case(jule::Ptr<_1a75a6003_If>&);
inline jule::Bool _1a7d67011_is_unreachable_match_case(jule::Ptr<_1a75b31ec_Case>&);
inline std::tuple<jule::Bool,jule::U64> _1a7d6e16c_check_for_bit_shift_opt(jule::Ptr<_1a64190a9_OperandExprModel>&,jule::Ptr<_1a64190a9_OperandExprModel>&);
inline jule::U64 _1d0a42d90_unix(void);
inline jule::U64 _1d0a431d1_unix_year_to_seconds(jule::U64,jule::Bool&);
inline jule::U64 _1d0a43566_unix_month_to_seconds(jule::U64,jule::Bool);
inline jule::Bool _1a7d5c644_is_copy_optimizable(jule::Ptr<_1a7648b67_Data>&);
inline jule::Bool _1a7d5c776_is_iter_copy_optimizable(jule::Ptr<_1a7648b67_Data>&,jule::Ptr<_1a75ec478_Var>&);
inline jule::Str _1a7d799b3_concat_all_parts(jule::Slice<jule::Ptr<_1d0747985_Token>>);
inline jule::Str _1a7d79c9e_decompose_common_esq(jule::U8);
inline jule::Str _1a7d7a046_sbtoa(jule::U8);
inline jule::Str _1a7d7a332_cstr_bytes(jule::Slice<jule::U8>);
inline jule::Str _1a7d7a5c9_cstr_lit(jule::Slice<jule::U8>);
inline jule::Str _1a7d7a91a_ftoa(jule::F64,jule::I64);
inline jule::Str _1a7d7abb2_itoa(jule::I64);
inline jule::Str _1a7d7aee2_utoa(jule::U64);
inline jule::Bool _1a7d7b289_is_forwarded(jule::Ptr<_1a759e606_Scope>&);
inline jule::Bool _1a7d7b575_is_builtin_call_has_debuginf(jule::Ptr<_1a641b364_FnCallExprModel>&);
inline jule::Bool _1d0a4da6b_is_cpp_header_file(jule::Str);
inline jule::Ptr<_1d06c9ecd_Directive> _1d0a4ea6c_find_directive(jule::Slice<jule::Ptr<_1d06c9ecd_Directive>>&,jule::Str);
inline jule::Bool _1d0a4ee02_has_directive(jule::Slice<jule::Ptr<_1d06c9ecd_Directive>>&,jule::Str);
inline void _1d00241da_print_error_message(jule::Str);
inline void _1d002431c_help(jule::Slice<jule::Str>&);
inline void _1d002444e_version(jule::Slice<jule::Str>&);
inline void _1d0024581_tool_distos(void);
inline void _1d00246b3_tool_distarch(void);
inline void _1d00247e5_tool(jule::Slice<jule::Str>&);
inline void _1d0024927_julenv(jule::Slice<jule::Str>&);
inline void _1d006ac26_mod(jule::Slice<jule::Str>&);
inline jule::Bool _1d006ad58_process_command(jule::Slice<jule::Str>&);
inline void _1d006ae8a_show_info(void);
void entry_point(void);
inline void _1d006b573_enable_vtp(void);
inline void _1d006b6a5_init(void);
inline void _1a7e6243b_write_output(jule::Str,jule::Str);
inline void _1a7e66110_clear_objects(void);
inline void _1a7e78b28_compile_ir(jule::Str,jule::Str);
inline void _1a7e5e4b0_do_spell(jule::Str,jule::Str,jule::Str);
inline jule::Bool _1a7e63ad0_is_cpp_source_file(jule::Str);
inline void _1a7e70e83_push_comp_cmd_clang(jule::Str&);
inline void _1a7e5e1e6_push_comp_cmd_gcc(jule::Str&);
inline std::tuple<jule::Str,jule::Str> _1a7e60060_gen_compile_cmd(jule::Str,jule::Ptr<_1b737ec89_IR>&);
inline jule::Str _1a7e678a3_get_compile_path(void);
inline void _1a7e94e30_apply_target_independent_optimizations(jule::Ptr<_1b737ec89_IR>&);
inline void _1a7e95062_check_compiler_flag(void);
inline void _1a7e95194_check_target_arch(jule::Str);
inline void _1a7e952c6_check_target_os(jule::Str);
inline void _1a7e95408_check_target_flag(jule::Str&);
inline void _1a7e9576b_check_opt_flag(jule::Str&);
inline void _1a7e9589d_check_cpp_std_flag(void);
inline jule::Slice<jule::Str> _1a7e959d0_check_flags(jule::Slice<jule::Str>&);
inline void _1a7e95b12_setup_sema_flags(jule::I64&);
inline jule::Ptr<_1b737ec89_IR> _1a7e95c44_build_ir(jule::Slice<jule::Str>&);
inline void _1a7e95d76_compile_command(jule::Slice<jule::Str>&);


struct _1a7713d75_ReaderMptrData {
	jule::Exceptional<jule::I64>(*_1a7713c32_read)(jule::Trait<_1a7713d75_Reader>,jule::Slice<jule::U8>);
};

struct _1a77142a4_WriterMptrData {
	jule::Exceptional<jule::I64>(*_1a7714161_write)(jule::Trait<_1a77142a4_Writer>,jule::Slice<jule::U8>);
};

struct _1a771487b_WriterCloserMptrData {
	jule::Exceptional<jule::I64>(*_1a771455c_write)(jule::Trait<_1a771487b_WriterCloser>,jule::Slice<jule::U8>);
	jule::VoidExceptional(*_1a7714738_close)(jule::Trait<_1a771487b_WriterCloser>);
};

struct _1a77150c9_StreamMptrData {
	jule::Exceptional<jule::I64>(*_1a7714b78_read)(jule::Trait<_1a77150c9_Stream>,jule::Slice<jule::U8>);
	jule::Exceptional<jule::I64>(*_1a7714e86_write)(jule::Trait<_1a77150c9_Stream>,jule::Slice<jule::U8>);
};

struct _1a75c6e25_ImporterMptrData {
	void(*_1a75c5d47_set_mod_path)(jule::Trait<_1a75c6e25_Importer>,jule::Str);
	jule::Str(*_1a75c6089_get_mod_path)(jule::Trait<_1a75c6e25_Importer>);
	jule::Str(*_1a75c6397_mod_by_id)(jule::Trait<_1a75c6e25_Importer>,jule::I64);
	jule::Ptr<_1a75c928a_ImportInfo>(*_1a75c66a5_get_import)(jule::Trait<_1a75c6e25_Importer>,jule::Str);
	std::tuple<jule::Slice<jule::Ptr<_1d06e7b66_Ast>>,jule::Slice<_1d0019224_Log>>(*_1a75c6a5c_import_package)(jule::Trait<_1a75c6e25_Importer>,jule::Str,jule::Bool);
	void(*_1a75c6cd2_imported)(jule::Trait<_1a75c6e25_Importer>,jule::Ptr<_1a75c928a_ImportInfo>);
};

struct _1a7672971_KindMptrData {
	jule::Str(*_1a7672520_to_str)(jule::Trait<_1a7672971_Kind>);
	jule::Bool(*_1a767282d_equals)(jule::Trait<_1a7672971_Kind>,jule::Ptr<_1a7672da0_TypeKind>);
};

struct _1a768b25e_LookupMptrData {
	jule::Ptr<_1a75c928a_ImportInfo>(*_1a7689724_find_package)(jule::Trait<_1a768b25e_Lookup>,jule::Str);
	jule::Ptr<_1a75c928a_ImportInfo>(*_1a7689a32_select_package)(jule::Trait<_1a768b25e_Lookup>,jule::Fn<jule::Bool(jule::Ptr<_1a75c928a_ImportInfo>)>);
	jule::Ptr<_1a75ec478_Var>(*_1a7689dd9_find_var)(jule::Trait<_1a768b25e_Lookup>,jule::Str,jule::Bool);
	jule::Ptr<_1a7672168_TypeAlias>(*_1a768a291_find_type_alias)(jule::Trait<_1a768b25e_Lookup>,jule::Str,jule::Bool);
	jule::Ptr<_1a64147be_Struct>(*_1a768a648_find_struct)(jule::Trait<_1a768b25e_Lookup>,jule::Str,jule::Bool);
	jule::Ptr<_1a6426a45_Fn>(*_1a768aa00_find_fn)(jule::Trait<_1a768b25e_Lookup>,jule::Str,jule::Bool);
	jule::Ptr<_1a7465bd7_Trait>(*_1a768ad0d_find_trait)(jule::Trait<_1a768b25e_Lookup>,jule::Str);
	jule::Ptr<_1a7467de8_Enum>(*_1a768b11b_find_enum)(jule::Trait<_1a768b25e_Lookup>,jule::Str);
};

struct _1a7e5e14c_CommonFlagMptrData {
	jule::Str(*_1a7e5dc62_name)(jule::Trait<_1a7e5e14c_CommonFlag>);
	jule::I32(*_1a7e5dd94_short)(jule::Trait<_1a7e5e14c_CommonFlag>);
	jule::Str(*_1a7e5dec6_what)(jule::Trait<_1a7e5e14c_CommonFlag>);
	void(*_1a7e8e644_reset)(jule::Trait<_1a7e5e14c_CommonFlag>);
};



inline jule::Exceptional<jule::I64> _1a7713c32_read_0(jule::Trait<_1a7713d75_Reader> _self_,jule::Slice<jule::U8> _731_buff) {
	return _1a7712eb7_read(_self_.safe_ptr<_1a770e469_FileStream>(), _731_buff);
}
inline jule::Exceptional<jule::I64> _1a7713c32_read_1(jule::Trait<_1a7713d75_Reader> _self_,jule::Slice<jule::U8> _731_buff) {
	return _1a7715abe_read(_self_.safe_ptr<_1a771542b_ByteStream>(), _731_buff);
}
inline jule::Exceptional<jule::I64> _1a7714161_write_0(jule::Trait<_1a77142a4_Writer> _self_,jule::Slice<jule::U8> _1228_buff) {
	return _1a77132c5_write(_self_.safe_ptr<_1a770e469_FileStream>(), _1228_buff);
}
inline jule::Exceptional<jule::I64> _1a7714161_write_1(jule::Trait<_1a77142a4_Writer> _self_,jule::Slice<jule::U8> _1228_buff) {
	return _1a7715dcc_write(_self_.safe_ptr<_1a771542b_ByteStream>(), _1228_buff);
}
inline jule::Exceptional<jule::I64> _1a7714b78_read_0(jule::Trait<_1a77150c9_Stream> _self_,jule::Slice<jule::U8> _2331_buff) {
	return _1a7712eb7_read(_self_.safe_ptr<_1a770e469_FileStream>(), _2331_buff);
}
inline jule::Exceptional<jule::I64> _1a7714e86_write_0(jule::Trait<_1a77150c9_Stream> _self_,jule::Slice<jule::U8> _2428_buff) {
	return _1a77132c5_write(_self_.safe_ptr<_1a770e469_FileStream>(), _2428_buff);
}
inline jule::Exceptional<jule::I64> _1a7714b78_read_1(jule::Trait<_1a77150c9_Stream> _self_,jule::Slice<jule::U8> _2331_buff) {
	return _1a7715abe_read(_self_.safe_ptr<_1a771542b_ByteStream>(), _2331_buff);
}
inline jule::Exceptional<jule::I64> _1a7714e86_write_1(jule::Trait<_1a77150c9_Stream> _self_,jule::Slice<jule::U8> _2428_buff) {
	return _1a7715dcc_write(_self_.safe_ptr<_1a771542b_ByteStream>(), _2428_buff);
}
inline void _1a75c5d47_set_mod_path_0(jule::Trait<_1a75c6e25_Importer> _self_,jule::Str _1735_path) {
	_1b65b6d18_set_mod_path(_self_.safe_ptr<_1b65b7544_JuleImporter>(), _1735_path);
}
inline jule::Str _1a75c6089_get_mod_path_0(jule::Trait<_1a75c6e25_Importer> _self_) {
	return _1b65b92d2_get_mod_path(_self_.safe_ptr<_1b65b7544_JuleImporter>());
}
inline jule::Str _1a75c6397_mod_by_id_0(jule::Trait<_1a75c6e25_Importer> _self_,jule::I64 _2528_id) {
	return _1b65b9c83_mod_by_id(_self_.safe_ptr<_1b65b7544_JuleImporter>(), _2528_id);
}
inline jule::Ptr<_1a75c928a_ImportInfo> _1a75c66a5_get_import_0(jule::Trait<_1a75c6e25_Importer> _self_,jule::Str _3133_path) {
	return _1b65bb3a0_get_import(_self_.safe_ptr<_1b65b7544_JuleImporter>(), _3133_path);
}
inline std::tuple<jule::Slice<jule::Ptr<_1d06e7b66_Ast>>,jule::Slice<_1d0019224_Log>> _1a75c6a5c_import_package_0(jule::Trait<_1a75c6e25_Importer> _self_,jule::Str _3737_path,jule::Bool _3748_update_mod) {
	return _1b65b7cd6_import_package(_self_.safe_ptr<_1b65b7544_JuleImporter>(), _3737_path, _3748_update_mod);
}
inline void _1a75c6cd2_imported_0(jule::Trait<_1a75c6e25_Importer> _self_,jule::Ptr<_1a75c928a_ImportInfo> _4135__0) {
	_1b65b7e7e_imported(_self_.safe_ptr<_1b65b7544_JuleImporter>(), _4135__0);
}
inline jule::Str _1a7672520_to_str_0(jule::Trait<_1a7672971_Kind> _self_) {
	return _1a6417805_to_str(_self_.safe_ptr<_1a641744d_StructIns>());
}
inline jule::Bool _1a767282d_equals_0(jule::Trait<_1a7672971_Kind> _self_,jule::Ptr<_1a7672da0_TypeKind> _5926_other) {
	return _1a6417b13_equals(_self_.data.as<_1a641744d_StructIns>(), _5926_other);
}
inline jule::Str _1a7672520_to_str_1(jule::Trait<_1a7672971_Kind> _self_) {
	return _1a642a054_to_str(_self_.safe_ptr<_1a6429be1_FnIns>());
}
inline jule::Bool _1a767282d_equals_1(jule::Trait<_1a7672971_Kind> _self_,jule::Ptr<_1a7672da0_TypeKind> _5926_other) {
	return _1a642a362_equals(_self_.data.as<_1a6429be1_FnIns>(), _5926_other);
}
inline jule::Str _1a7672520_to_str_2(jule::Trait<_1a7672971_Kind> _self_) {
	return _1a74660d3_to_str(_self_.safe_ptr<_1a7465bd7_Trait>());
}
inline jule::Bool _1a767282d_equals_2(jule::Trait<_1a7672971_Kind> _self_,jule::Ptr<_1a7672da0_TypeKind> _5926_other) {
	return _1a74663e1_equals(_self_.data.as<_1a7465bd7_Trait>(), _5926_other);
}
inline jule::Str _1a7672520_to_str_3(jule::Trait<_1a7672971_Kind> _self_) {
	return _1a746825b_to_str(_self_.safe_ptr<_1a7467de8_Enum>());
}
inline jule::Bool _1a767282d_equals_3(jule::Trait<_1a7672971_Kind> _self_,jule::Ptr<_1a7672da0_TypeKind> _5926_other) {
	return _1a7468569_equals(_self_.data.as<_1a7467de8_Enum>(), _5926_other);
}
inline jule::Str _1a7672520_to_str_4(jule::Trait<_1a7672971_Kind> _self_) {
	return _1a7673257_to_str(_self_.safe_ptr<_1a7672da0_TypeKind>());
}
inline jule::Bool _1a767282d_equals_4(jule::Trait<_1a7672971_Kind> _self_,jule::Ptr<_1a7672da0_TypeKind> _5926_other) {
	return _1a7673565_equals(_self_.data.as<_1a7672da0_TypeKind>(), _5926_other);
}
inline jule::Str _1a7672520_to_str_5(jule::Trait<_1a7672971_Kind> _self_) {
	return _1a7677965_to_str(_self_.safe_ptr<_1a7677602_Prim>());
}
inline jule::Bool _1a767282d_equals_5(jule::Trait<_1a7672971_Kind> _self_,jule::Ptr<_1a7672da0_TypeKind> _5926_other) {
	return _1a7677c73_equals(_self_.data.as<_1a7677602_Prim>(), _5926_other);
}
inline jule::Str _1a7672520_to_str_6(jule::Trait<_1a7672971_Kind> _self_) {
	return _1a767ae74_to_str(_self_.safe_ptr<_1a767ab11_Sptr>());
}
inline jule::Bool _1a767282d_equals_6(jule::Trait<_1a7672971_Kind> _self_,jule::Ptr<_1a7672da0_TypeKind> _5926_other) {
	return _1a767b282_equals(_self_.data.as<_1a767ab11_Sptr>(), _5926_other);
}
inline jule::Str _1a7672520_to_str_7(jule::Trait<_1a7672971_Kind> _self_) {
	return _1a767b9e1_to_str(_self_.safe_ptr<_1a767b56d_Slc>());
}
inline jule::Bool _1a767282d_equals_7(jule::Trait<_1a7672971_Kind> _self_,jule::Ptr<_1a7672da0_TypeKind> _5926_other) {
	return _1a767bcee_equals(_self_.data.as<_1a767b56d_Slc>(), _5926_other);
}
inline jule::Str _1a7672520_to_str_8(jule::Trait<_1a7672971_Kind> _self_) {
	return _1a767c45e_to_str(_self_.safe_ptr<_1a767c063_Tuple>());
}
inline jule::Bool _1a767282d_equals_8(jule::Trait<_1a7672971_Kind> _self_,jule::Ptr<_1a7672da0_TypeKind> _5926_other) {
	return _1a767c76c_equals(_self_.data.as<_1a767c063_Tuple>(), _5926_other);
}
inline jule::Str _1a7672520_to_str_9(jule::Trait<_1a7672971_Kind> _self_) {
	return _1a767ce87_to_str(_self_.safe_ptr<_1a767cb24_Map>());
}
inline jule::Bool _1a767282d_equals_9(jule::Trait<_1a7672971_Kind> _self_,jule::Ptr<_1a7672da0_TypeKind> _5926_other) {
	return _1a767d295_equals(_self_.data.as<_1a767cb24_Map>(), _5926_other);
}
inline jule::Str _1a7672520_to_str_10(jule::Trait<_1a7672971_Kind> _self_) {
	return _1a767da7b_to_str(_self_.safe_ptr<_1a767d718_Arr>());
}
inline jule::Bool _1a767282d_equals_10(jule::Trait<_1a7672971_Kind> _self_,jule::Ptr<_1a7672da0_TypeKind> _5926_other) {
	return _1a767dd89_equals(_self_.data.as<_1a767d718_Arr>(), _5926_other);
}
inline jule::Str _1a7672520_to_str_11(jule::Trait<_1a7672971_Kind> _self_) {
	return _1a767e4d8_to_str(_self_.safe_ptr<_1a767e175_Ptr>());
}
inline jule::Bool _1a767282d_equals_11(jule::Trait<_1a7672971_Kind> _self_,jule::Ptr<_1a7672da0_TypeKind> _5926_other) {
	return _1a767e7e6_equals(_self_.data.as<_1a767e175_Ptr>(), _5926_other);
}
inline jule::Str _1a7672520_to_str_12(jule::Trait<_1a7672971_Kind> _self_) {
	return _1d0a5052e_to_str(_self_.safe_ptr<_1d0a50133_CustomType>());
}
inline jule::Bool _1a767282d_equals_12(jule::Trait<_1a7672971_Kind> _self_,jule::Ptr<_1a7672da0_TypeKind> _5926_other) {
	return _1d0a5083c_equals(_self_.data.as<_1d0a50133_CustomType>(), _5926_other);
}
inline jule::Ptr<_1a75c928a_ImportInfo> _1a7689724_find_package_0(jule::Trait<_1a768b25e_Lookup> _self_,jule::Str _935_ident) {
	return _1a75a1493_find_package(_self_.safe_ptr<_1a75b3b8c_ScopeChecker>(), _935_ident);
}
inline jule::Ptr<_1a75c928a_ImportInfo> _1a7689a32_select_package_0(jule::Trait<_1a768b25e_Lookup> _self_,jule::Fn<jule::Bool(jule::Ptr<_1a75c928a_ImportInfo>)> _1337_selector) {
	return _1a759253e_select_package(_self_.safe_ptr<_1a75b3b8c_ScopeChecker>(), _1337_selector);
}
inline jule::Ptr<_1a75ec478_Var> _1a7689dd9_find_var_0(jule::Trait<_1a768b25e_Lookup> _self_,jule::Str _1731_ident,jule::Bool _1743_cpp_linked) {
	return _1a757e0ec_find_var(_self_.safe_ptr<_1a75b3b8c_ScopeChecker>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1a7672168_TypeAlias> _1a768a291_find_type_alias_0(jule::Trait<_1a768b25e_Lookup> _self_,jule::Str _2138_ident,jule::Bool _2150_cpp_linked) {
	return _1a75b3e9a_find_type_alias(_self_.safe_ptr<_1a75b3b8c_ScopeChecker>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1a64147be_Struct> _1a768a648_find_struct_0(jule::Trait<_1a768b25e_Lookup> _self_,jule::Str _2534_ident,jule::Bool _2546_cpp_linked) {
	return _1a75b4352_find_struct(_self_.safe_ptr<_1a75b3b8c_ScopeChecker>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1a6426a45_Fn> _1a768aa00_find_fn_0(jule::Trait<_1a768b25e_Lookup> _self_,jule::Str _2930_ident,jule::Bool _2942_cpp_linked) {
	return _1a75b4709_find_fn(_self_.safe_ptr<_1a75b3b8c_ScopeChecker>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1a7465bd7_Trait> _1a768ad0d_find_trait_0(jule::Trait<_1a768b25e_Lookup> _self_,jule::Str _3333_ident) {
	return _1a75b4a17_find_trait(_self_.safe_ptr<_1a75b3b8c_ScopeChecker>(), _3333_ident);
}
inline jule::Ptr<_1a7467de8_Enum> _1a768b11b_find_enum_0(jule::Trait<_1a768b25e_Lookup> _self_,jule::Str _3732_ident) {
	return _1a75b4d25_find_enum(_self_.safe_ptr<_1a75b3b8c_ScopeChecker>(), _3732_ident);
}
inline jule::Ptr<_1a75c928a_ImportInfo> _1a7689724_find_package_1(jule::Trait<_1a768b25e_Lookup> _self_,jule::Str _935_ident) {
	return _1a75c9796_find_package(_self_.safe_ptr<_1a75c928a_ImportInfo>(), _935_ident);
}
inline jule::Ptr<_1a75c928a_ImportInfo> _1a7689a32_select_package_1(jule::Trait<_1a768b25e_Lookup> _self_,jule::Fn<jule::Bool(jule::Ptr<_1a75c928a_ImportInfo>)> _1337_selector) {
	return _1a75c9aa4_select_package(_self_.safe_ptr<_1a75c928a_ImportInfo>(), _1337_selector);
}
inline jule::Ptr<_1a75ec478_Var> _1a7689dd9_find_var_1(jule::Trait<_1a768b25e_Lookup> _self_,jule::Str _1731_ident,jule::Bool _1743_cpp_linked) {
	return _1a75c9e5b_find_var(_self_.safe_ptr<_1a75c928a_ImportInfo>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1a7672168_TypeAlias> _1a768a291_find_type_alias_1(jule::Trait<_1a768b25e_Lookup> _self_,jule::Str _2138_ident,jule::Bool _2150_cpp_linked) {
	return _1a75ca313_find_type_alias(_self_.safe_ptr<_1a75c928a_ImportInfo>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1a64147be_Struct> _1a768a648_find_struct_1(jule::Trait<_1a768b25e_Lookup> _self_,jule::Str _2534_ident,jule::Bool _2546_cpp_linked) {
	return _1a75ca6ba_find_struct(_self_.safe_ptr<_1a75c928a_ImportInfo>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1a6426a45_Fn> _1a768aa00_find_fn_1(jule::Trait<_1a768b25e_Lookup> _self_,jule::Str _2930_ident,jule::Bool _2942_cpp_linked) {
	return _1a75caa72_find_fn(_self_.safe_ptr<_1a75c928a_ImportInfo>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1a7465bd7_Trait> _1a768ad0d_find_trait_1(jule::Trait<_1a768b25e_Lookup> _self_,jule::Str _3333_ident) {
	return _1a75cad80_find_trait(_self_.safe_ptr<_1a75c928a_ImportInfo>(), _3333_ident);
}
inline jule::Ptr<_1a7467de8_Enum> _1a768b11b_find_enum_1(jule::Trait<_1a768b25e_Lookup> _self_,jule::Str _3732_ident) {
	return _1a75cb18d_find_enum(_self_.safe_ptr<_1a75c928a_ImportInfo>(), _3732_ident);
}
inline jule::Ptr<_1a75c928a_ImportInfo> _1a7689724_find_package_2(jule::Trait<_1a768b25e_Lookup> _self_,jule::Str _935_ident) {
	return _1a75cc414_find_package(_self_.safe_ptr<_1a75cbe4c_Package>(), _935_ident);
}
inline jule::Ptr<_1a75c928a_ImportInfo> _1a7689a32_select_package_2(jule::Trait<_1a768b25e_Lookup> _self_,jule::Fn<jule::Bool(jule::Ptr<_1a75c928a_ImportInfo>)> _1337_selector) {
	return _1a75cc722_select_package(_self_.safe_ptr<_1a75cbe4c_Package>(), _1337_selector);
}
inline jule::Ptr<_1a75ec478_Var> _1a7689dd9_find_var_2(jule::Trait<_1a768b25e_Lookup> _self_,jule::Str _1731_ident,jule::Bool _1743_cpp_linked) {
	return _1a75ccac9_find_var(_self_.safe_ptr<_1a75cbe4c_Package>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1a7672168_TypeAlias> _1a768a291_find_type_alias_2(jule::Trait<_1a768b25e_Lookup> _self_,jule::Str _2138_ident,jule::Bool _2150_cpp_linked) {
	return _1a75cce81_find_type_alias(_self_.safe_ptr<_1a75cbe4c_Package>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1a64147be_Struct> _1a768a648_find_struct_2(jule::Trait<_1a768b25e_Lookup> _self_,jule::Str _2534_ident,jule::Bool _2546_cpp_linked) {
	return _1a75cd338_find_struct(_self_.safe_ptr<_1a75cbe4c_Package>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1a6426a45_Fn> _1a768aa00_find_fn_2(jule::Trait<_1a768b25e_Lookup> _self_,jule::Str _2930_ident,jule::Bool _2942_cpp_linked) {
	return _1a75cd6e0_find_fn(_self_.safe_ptr<_1a75cbe4c_Package>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1a7465bd7_Trait> _1a768ad0d_find_trait_2(jule::Trait<_1a768b25e_Lookup> _self_,jule::Str _3333_ident) {
	return _1a75cd9ed_find_trait(_self_.safe_ptr<_1a75cbe4c_Package>(), _3333_ident);
}
inline jule::Ptr<_1a7467de8_Enum> _1a768b11b_find_enum_2(jule::Trait<_1a768b25e_Lookup> _self_,jule::Str _3732_ident) {
	return _1a75cdd0b_find_enum(_self_.safe_ptr<_1a75cbe4c_Package>(), _3732_ident);
}
inline jule::Ptr<_1a75c928a_ImportInfo> _1a7689724_find_package_3(jule::Trait<_1a768b25e_Lookup> _self_,jule::Str _935_ident) {
	return _1a75d2480_find_package(_self_.safe_ptr<_1a75d1e74_Sema>(), _935_ident);
}
inline jule::Ptr<_1a75c928a_ImportInfo> _1a7689a32_select_package_3(jule::Trait<_1a768b25e_Lookup> _self_,jule::Fn<jule::Bool(jule::Ptr<_1a75c928a_ImportInfo>)> _1337_selector) {
	return _1a75d278d_select_package(_self_.safe_ptr<_1a75d1e74_Sema>(), _1337_selector);
}
inline jule::Ptr<_1a75ec478_Var> _1a7689dd9_find_var_3(jule::Trait<_1a768b25e_Lookup> _self_,jule::Str _1731_ident,jule::Bool _1743_cpp_linked) {
	return _1a75d2b45_find_var(_self_.safe_ptr<_1a75d1e74_Sema>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1a7672168_TypeAlias> _1a768a291_find_type_alias_3(jule::Trait<_1a768b25e_Lookup> _self_,jule::Str _2138_ident,jule::Bool _2150_cpp_linked) {
	return _1a75d2eec_find_type_alias(_self_.safe_ptr<_1a75d1e74_Sema>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1a64147be_Struct> _1a768a648_find_struct_3(jule::Trait<_1a768b25e_Lookup> _self_,jule::Str _2534_ident,jule::Bool _2546_cpp_linked) {
	return _1a75d33a4_find_struct(_self_.safe_ptr<_1a75d1e74_Sema>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1a6426a45_Fn> _1a768aa00_find_fn_3(jule::Trait<_1a768b25e_Lookup> _self_,jule::Str _2930_ident,jule::Bool _2942_cpp_linked) {
	return _1a75d375b_find_fn(_self_.safe_ptr<_1a75d1e74_Sema>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1a7465bd7_Trait> _1a768ad0d_find_trait_3(jule::Trait<_1a768b25e_Lookup> _self_,jule::Str _3333_ident) {
	return _1a75d3a69_find_trait(_self_.safe_ptr<_1a75d1e74_Sema>(), _3333_ident);
}
inline jule::Ptr<_1a7467de8_Enum> _1a768b11b_find_enum_3(jule::Trait<_1a768b25e_Lookup> _self_,jule::Str _3732_ident) {
	return _1a75d3d77_find_enum(_self_.safe_ptr<_1a75d1e74_Sema>(), _3732_ident);
}
inline jule::Ptr<_1a75c928a_ImportInfo> _1a7689724_find_package_4(jule::Trait<_1a768b25e_Lookup> _self_,jule::Str _935_ident) {
	return _1a7643ee7_find_package(_self_.safe_ptr<_1a76439db_SymbolTable>(), _935_ident);
}
inline jule::Ptr<_1a75c928a_ImportInfo> _1a7689a32_select_package_4(jule::Trait<_1a768b25e_Lookup> _self_,jule::Fn<jule::Bool(jule::Ptr<_1a75c928a_ImportInfo>)> _1337_selector) {
	return _1a7644305_select_package(_self_.safe_ptr<_1a76439db_SymbolTable>(), _1337_selector);
}
inline jule::Ptr<_1a75ec478_Var> _1a7689dd9_find_var_4(jule::Trait<_1a768b25e_Lookup> _self_,jule::Str _1731_ident,jule::Bool _1743_cpp_linked) {
	return _1a76446ac_find_var(_self_.safe_ptr<_1a76439db_SymbolTable>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1a7672168_TypeAlias> _1a768a291_find_type_alias_4(jule::Trait<_1a768b25e_Lookup> _self_,jule::Str _2138_ident,jule::Bool _2150_cpp_linked) {
	return _1a7644a64_find_type_alias(_self_.safe_ptr<_1a76439db_SymbolTable>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1a64147be_Struct> _1a768a648_find_struct_4(jule::Trait<_1a768b25e_Lookup> _self_,jule::Str _2534_ident,jule::Bool _2546_cpp_linked) {
	return _1a7644e1b_find_struct(_self_.safe_ptr<_1a76439db_SymbolTable>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1a6426a45_Fn> _1a768aa00_find_fn_4(jule::Trait<_1a768b25e_Lookup> _self_,jule::Str _2930_ident,jule::Bool _2942_cpp_linked) {
	return _1a76452c3_find_fn(_self_.safe_ptr<_1a76439db_SymbolTable>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1a7465bd7_Trait> _1a768ad0d_find_trait_4(jule::Trait<_1a768b25e_Lookup> _self_,jule::Str _3333_ident) {
	return _1a76455d1_find_trait(_self_.safe_ptr<_1a76439db_SymbolTable>(), _3333_ident);
}
inline jule::Ptr<_1a7467de8_Enum> _1a768b11b_find_enum_4(jule::Trait<_1a768b25e_Lookup> _self_,jule::Str _3732_ident) {
	return _1a76458de_find_enum(_self_.safe_ptr<_1a76439db_SymbolTable>(), _3732_ident);
}
inline jule::Str _1a7e5dc62_name_0(jule::Trait<_1a7e5e14c_CommonFlag> _self_) {
	return _1aa6a781b_name(_self_.safe_ptr<_1a7e8ebc7_Flag_0>());
}
inline jule::I32 _1a7e5dd94_short_0(jule::Trait<_1a7e5e14c_CommonFlag> _self_) {
	return _1aa6a7bb2_short(_self_.safe_ptr<_1a7e8ebc7_Flag_0>());
}
inline jule::Str _1a7e5dec6_what_0(jule::Trait<_1a7e5e14c_CommonFlag> _self_) {
	return _1aa6a794d_what(_self_.safe_ptr<_1a7e8ebc7_Flag_0>());
}
inline void _1a7e8e644_reset_0(jule::Trait<_1a7e5e14c_CommonFlag> _self_) {
	_1aa6a7a80_reset(_self_.safe_ptr<_1a7e8ebc7_Flag_0>());
}
inline jule::Str _1a7e5dc62_name_1(jule::Trait<_1a7e5e14c_CommonFlag> _self_) {
	return _1aa6aa610_name(_self_.safe_ptr<_1a7e8ebc7_Flag_1>());
}
inline jule::I32 _1a7e5dd94_short_1(jule::Trait<_1a7e5e14c_CommonFlag> _self_) {
	return _1aa6aa368_short(_self_.safe_ptr<_1a7e8ebc7_Flag_1>());
}
inline jule::Str _1a7e5dec6_what_1(jule::Trait<_1a7e5e14c_CommonFlag> _self_) {
	return _1aa6aa81e_what(_self_.safe_ptr<_1a7e8ebc7_Flag_1>());
}
inline void _1a7e8e644_reset_1(jule::Trait<_1a7e5e14c_CommonFlag> _self_) {
	_1aa6a7d27_reset(_self_.safe_ptr<_1a7e8ebc7_Flag_1>());
}
inline jule::Str _1a7e5dc62_name_2(jule::Trait<_1a7e5e14c_CommonFlag> _self_) {
	return _1aa6ad7de_name(_self_.safe_ptr<_1a7e8ebc7_Flag_2>());
}
inline jule::I32 _1a7e5dd94_short_2(jule::Trait<_1a7e5e14c_CommonFlag> _self_) {
	return _1aa6ae26d_short(_self_.safe_ptr<_1a7e8ebc7_Flag_2>());
}
inline jule::Str _1a7e5dec6_what_2(jule::Trait<_1a7e5e14c_CommonFlag> _self_) {
	return _1aa6ad9ed_what(_self_.safe_ptr<_1a7e8ebc7_Flag_2>());
}
inline void _1a7e8e644_reset_2(jule::Trait<_1a7e5e14c_CommonFlag> _self_) {
	_1aa6ad547_reset(_self_.safe_ptr<_1a7e8ebc7_Flag_2>());
}
inline jule::Str _1a7e5dc62_name_3(jule::Trait<_1a7e5e14c_CommonFlag> _self_) {
	return _1aa6b1a12_name(_self_.safe_ptr<_1a7e8ebc7_Flag_3>());
}
inline jule::I32 _1a7e5dd94_short_3(jule::Trait<_1a7e5e14c_CommonFlag> _self_) {
	return _1aa6b2491_short(_self_.safe_ptr<_1a7e8ebc7_Flag_3>());
}
inline jule::Str _1a7e5dec6_what_3(jule::Trait<_1a7e5e14c_CommonFlag> _self_) {
	return _1aa6b1c21_what(_self_.safe_ptr<_1a7e8ebc7_Flag_3>());
}
inline void _1a7e8e644_reset_3(jule::Trait<_1a7e5e14c_CommonFlag> _self_) {
	_1aa6b176a_reset(_self_.safe_ptr<_1a7e8ebc7_Flag_3>());
}
inline jule::Str _1a7e5dc62_name_4(jule::Trait<_1a7e5e14c_CommonFlag> _self_) {
	return _1aa6b4be1_name(_self_.safe_ptr<_1a7e8ebc7_Flag_4>());
}
inline jule::I32 _1a7e5dd94_short_4(jule::Trait<_1a7e5e14c_CommonFlag> _self_) {
	return _1aa6b5670_short(_self_.safe_ptr<_1a7e8ebc7_Flag_4>());
}
inline jule::Str _1a7e5dec6_what_4(jule::Trait<_1a7e5e14c_CommonFlag> _self_) {
	return _1aa6b4e00_what(_self_.safe_ptr<_1a7e8ebc7_Flag_4>());
}
inline void _1a7e8e644_reset_4(jule::Trait<_1a7e5e14c_CommonFlag> _self_) {
	_1aa6b4949_reset(_self_.safe_ptr<_1a7e8ebc7_Flag_4>());
}


static _1a7713d75_ReaderMptrData _1a7713d75_Reader_mptr_data[] = {
	{
		._1a7713c32_read=_1a7713c32_read_0,
	},
	{
		._1a7713c32_read=_1a7713c32_read_1,
	},
};static _1a77142a4_WriterMptrData _1a77142a4_Writer_mptr_data[] = {
	{
		._1a7714161_write=_1a7714161_write_0,
	},
	{
		._1a7714161_write=_1a7714161_write_1,
	},
};static _1a771487b_WriterCloserMptrData _1a771487b_WriterCloser_mptr_data[] = {
};static _1a77150c9_StreamMptrData _1a77150c9_Stream_mptr_data[] = {
	{
		._1a7714b78_read=_1a7714b78_read_0,
		._1a7714e86_write=_1a7714e86_write_0,
	},
	{
		._1a7714b78_read=_1a7714b78_read_1,
		._1a7714e86_write=_1a7714e86_write_1,
	},
};static _1a75c6e25_ImporterMptrData _1a75c6e25_Importer_mptr_data[] = {
	{
		._1a75c5d47_set_mod_path=_1a75c5d47_set_mod_path_0,
		._1a75c6089_get_mod_path=_1a75c6089_get_mod_path_0,
		._1a75c6397_mod_by_id=_1a75c6397_mod_by_id_0,
		._1a75c66a5_get_import=_1a75c66a5_get_import_0,
		._1a75c6a5c_import_package=_1a75c6a5c_import_package_0,
		._1a75c6cd2_imported=_1a75c6cd2_imported_0,
	},
};static _1a7672971_KindMptrData _1a7672971_Kind_mptr_data[] = {
	{
		._1a7672520_to_str=_1a7672520_to_str_0,
		._1a767282d_equals=_1a767282d_equals_0,
	},
	{
		._1a7672520_to_str=_1a7672520_to_str_1,
		._1a767282d_equals=_1a767282d_equals_1,
	},
	{
		._1a7672520_to_str=_1a7672520_to_str_2,
		._1a767282d_equals=_1a767282d_equals_2,
	},
	{
		._1a7672520_to_str=_1a7672520_to_str_3,
		._1a767282d_equals=_1a767282d_equals_3,
	},
	{
		._1a7672520_to_str=_1a7672520_to_str_4,
		._1a767282d_equals=_1a767282d_equals_4,
	},
	{
		._1a7672520_to_str=_1a7672520_to_str_5,
		._1a767282d_equals=_1a767282d_equals_5,
	},
	{
		._1a7672520_to_str=_1a7672520_to_str_6,
		._1a767282d_equals=_1a767282d_equals_6,
	},
	{
		._1a7672520_to_str=_1a7672520_to_str_7,
		._1a767282d_equals=_1a767282d_equals_7,
	},
	{
		._1a7672520_to_str=_1a7672520_to_str_8,
		._1a767282d_equals=_1a767282d_equals_8,
	},
	{
		._1a7672520_to_str=_1a7672520_to_str_9,
		._1a767282d_equals=_1a767282d_equals_9,
	},
	{
		._1a7672520_to_str=_1a7672520_to_str_10,
		._1a767282d_equals=_1a767282d_equals_10,
	},
	{
		._1a7672520_to_str=_1a7672520_to_str_11,
		._1a767282d_equals=_1a767282d_equals_11,
	},
	{
		._1a7672520_to_str=_1a7672520_to_str_12,
		._1a767282d_equals=_1a767282d_equals_12,
	},
};static _1a768b25e_LookupMptrData _1a768b25e_Lookup_mptr_data[] = {
	{
		._1a7689724_find_package=_1a7689724_find_package_0,
		._1a7689a32_select_package=_1a7689a32_select_package_0,
		._1a7689dd9_find_var=_1a7689dd9_find_var_0,
		._1a768a291_find_type_alias=_1a768a291_find_type_alias_0,
		._1a768a648_find_struct=_1a768a648_find_struct_0,
		._1a768aa00_find_fn=_1a768aa00_find_fn_0,
		._1a768ad0d_find_trait=_1a768ad0d_find_trait_0,
		._1a768b11b_find_enum=_1a768b11b_find_enum_0,
	},
	{
		._1a7689724_find_package=_1a7689724_find_package_1,
		._1a7689a32_select_package=_1a7689a32_select_package_1,
		._1a7689dd9_find_var=_1a7689dd9_find_var_1,
		._1a768a291_find_type_alias=_1a768a291_find_type_alias_1,
		._1a768a648_find_struct=_1a768a648_find_struct_1,
		._1a768aa00_find_fn=_1a768aa00_find_fn_1,
		._1a768ad0d_find_trait=_1a768ad0d_find_trait_1,
		._1a768b11b_find_enum=_1a768b11b_find_enum_1,
	},
	{
		._1a7689724_find_package=_1a7689724_find_package_2,
		._1a7689a32_select_package=_1a7689a32_select_package_2,
		._1a7689dd9_find_var=_1a7689dd9_find_var_2,
		._1a768a291_find_type_alias=_1a768a291_find_type_alias_2,
		._1a768a648_find_struct=_1a768a648_find_struct_2,
		._1a768aa00_find_fn=_1a768aa00_find_fn_2,
		._1a768ad0d_find_trait=_1a768ad0d_find_trait_2,
		._1a768b11b_find_enum=_1a768b11b_find_enum_2,
	},
	{
		._1a7689724_find_package=_1a7689724_find_package_3,
		._1a7689a32_select_package=_1a7689a32_select_package_3,
		._1a7689dd9_find_var=_1a7689dd9_find_var_3,
		._1a768a291_find_type_alias=_1a768a291_find_type_alias_3,
		._1a768a648_find_struct=_1a768a648_find_struct_3,
		._1a768aa00_find_fn=_1a768aa00_find_fn_3,
		._1a768ad0d_find_trait=_1a768ad0d_find_trait_3,
		._1a768b11b_find_enum=_1a768b11b_find_enum_3,
	},
	{
		._1a7689724_find_package=_1a7689724_find_package_4,
		._1a7689a32_select_package=_1a7689a32_select_package_4,
		._1a7689dd9_find_var=_1a7689dd9_find_var_4,
		._1a768a291_find_type_alias=_1a768a291_find_type_alias_4,
		._1a768a648_find_struct=_1a768a648_find_struct_4,
		._1a768aa00_find_fn=_1a768aa00_find_fn_4,
		._1a768ad0d_find_trait=_1a768ad0d_find_trait_4,
		._1a768b11b_find_enum=_1a768b11b_find_enum_4,
	},
};static _1a7e5e14c_CommonFlagMptrData _1a7e5e14c_CommonFlag_mptr_data[] = {
	{
		._1a7e5dc62_name=_1a7e5dc62_name_0,
		._1a7e5dd94_short=_1a7e5dd94_short_0,
		._1a7e5dec6_what=_1a7e5dec6_what_0,
		._1a7e8e644_reset=_1a7e8e644_reset_0,
	},
	{
		._1a7e5dc62_name=_1a7e5dc62_name_1,
		._1a7e5dd94_short=_1a7e5dd94_short_1,
		._1a7e5dec6_what=_1a7e5dec6_what_1,
		._1a7e8e644_reset=_1a7e8e644_reset_1,
	},
	{
		._1a7e5dc62_name=_1a7e5dc62_name_2,
		._1a7e5dd94_short=_1a7e5dd94_short_2,
		._1a7e5dec6_what=_1a7e5dec6_what_2,
		._1a7e8e644_reset=_1a7e8e644_reset_2,
	},
	{
		._1a7e5dc62_name=_1a7e5dc62_name_3,
		._1a7e5dd94_short=_1a7e5dd94_short_3,
		._1a7e5dec6_what=_1a7e5dec6_what_3,
		._1a7e8e644_reset=_1a7e8e644_reset_3,
	},
	{
		._1a7e5dc62_name=_1a7e5dc62_name_4,
		._1a7e5dd94_short=_1a7e5dd94_short_4,
		._1a7e5dec6_what=_1a7e5dec6_what_4,
		._1a7e8e644_reset=_1a7e8e644_reset_4,
	},
};

jule::Bool _1e829b746_PRODUCTION;
jule::Bool _1e829b878_OPT_COPY;
jule::Bool _1e829b9ee_OPT_DEADCODE;
jule::Bool _1e829bbb9_OPT_APPEND;
jule::Bool _1e829bd40_OPT_MATH;
jule::Bool _1e829beb6_OPT_ACCESS;
jule::Bool _1e829c13c_OPT_INLINE;
jule::Bool _1e829c34b_OPT_PTR;
jule::Bool _1e829c4c2_OPT_COND;
jule::Str _1e829caaa_COMPILER;
jule::Str _1e829cc75_COMPILER_PATH;
jule::Str _1e829cdeb_CPP_STD;
jule::Bool _1e829d0b6_SHADOWING;
jule::Bool _1e829d23c_TRANSPILATION;
jule::Bool _1e829d3b3_TEST;
jule::Bool _1e829d539_RC;
jule::Bool _1e829d748_SAFETY;
jule::U64 _1e9d98a06_STDIN;
jule::U64 _1e9d98b7c_STDOUT;
jule::U64 _1e9d98d47_STDERR;
jule::Array<jule::U8,256> _1e9e8e3d2_FIRST;
jule::Array<_1e9e8e954_accept_range,16> _1e9e8ebc9_ACCEPT_RANGES;
jule::Ptr<_1d09a04c3_RangeTable> _1d09685e0__L;
jule::Ptr<_1d09a04c3_RangeTable> _1d096c528_LETTER;
jule::Array<jule::U8,256> _1d099ae3b__PROPERTIES;
jule::Array<jule::Str,4> _1e9eb4eb8_CPP_HEADER_EXTS;
jule::Array<jule::Str,3> _1e9eb9033_CPP_EXTS;
jule::Array<jule::Str,1> _1e9ee0e8e_OBJECTIVE_CPP_EXTS;
jule::Array<jule::Str,3> _1d001c2c1_DISTOS;
jule::Array<jule::Str,3> _1d001c4be_DISTARCH;
jule::Str _1d002c897_PATH_STDLIB;
jule::Str _1d002a92d_PATH_EXEC;
jule::Str _1d002bc3c_PATH_WD;
jule::Str _1d003abc4_PATH_API;
jule::Str _1d003c28b_OS;
jule::Str _1d003d127_ARCH;
jule::Array<jule::I32,5> _1d0742232_SPACES;
jule::Array<jule::Str,6> _1d0742320_UNARY_OPS;
jule::Array<jule::Str,12> _1d074240d_BIN_OPS;
jule::Array<jule::Str,2> _1d07425d9_POSTFIX_OPS;
jule::Array<jule::Str,11> _1d07426c7_ASSING_OPS;
jule::Array<_1d074ee43_KindPair,47> _1d0750240_KEYWORDS;
jule::Array<_1d074ee43_KindPair,39> _1d075043d_BASIC_OPS;
jule::Array<jule::U8,32> _1a7432a50_DE_BRUIJN32_TAB;
jule::Array<jule::U8,64> _1a7432d80_DE_BRUIJN64_TAB;
_1a71e9c9b_FloatInfo _1b774e796_F32_INFO;
_1a71e9c9b_FloatInfo _1a70906be_F64_INFO;
jule::Array<jule::Array<jule::U64,2>,696> _1a716d0d7_DETAILED_POWS_OF_TEN;
jule::Slice<jule::I64> _1a71ede8c_POWTAB;
jule::Slice<jule::F64> _1a727e517_F64_POW10;
jule::Slice<jule::F32> _1a729c9a8_F32_POW10;
jule::Array<jule::U64,20> _1a730a5a4_U64_POW10;
jule::Slice<_1a7460880_LeftCheat> _1a729c3e2_LEFTCHEATS;
jule::I64 _1a75a6432_BIT_SIZE;
jule::Str _1a75a6520_SYS_INT;
jule::Str _1a75a660d_SYS_UINT;
jule::Slice<jule::Any> _1d0786386_deads;
jule::Slice<jule::Any> _1b6508919_checking;
jule::Any _1b6587415_current;
jule::Any _1b658d482_main_current;
jule::Array<jule::U64,12> _1d0a3cb8c_MDAYS;
jule::Array<jule::Array<jule::Str,2>,5> _1d00240ec_HELP_MAP;
jule::Str _1a7e69ae7_OUT_DIR;
jule::Str _1a7e6eb74_OUT_NAME;
jule::Str _1a7e79ee2_OUT;





std::ostream &operator<<(std::ostream &_Stream, _1e9e8e954_accept_range _Src) {
	_Stream << "accept_range{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d099e14d_FoldPair _Src) {
	_Stream << "FoldPair{";
	_Stream << "from:" << _Src._field_from << ", ";
	_Stream << "to:" << _Src._field_to;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d099e615_CaseRange _Src) {
	_Stream << "CaseRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "delta:" << _Src._field_delta;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d099ea88_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "stride:" << _Src._field_stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d09a0050_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "stride:" << _Src._field_stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d09a04c3_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "r16:" << _Src._field_r16 << ", ";
	_Stream << "r32:" << _Src._field_r32 << ", ";
	_Stream << "latin_offset:" << _Src._field_latin_offset;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1d09a53a7_index(_1d09a51ba_LazyBuff* _self_,jule::I64 _5424_i) {
	if (((*_self_)._field_buff != nullptr)) {
		return (*_self_)._field_buff[_5424_i];
	}
	return (*_self_)._field_path[_5424_i];
}



inline void _1d09a54d9_append(_1d09a51ba_LazyBuff* _self_,jule::U8 _6125_c) {
	if (((*_self_)._field_buff == nullptr)) {
		if (((*_self_)._field_w < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_path.len()))) && ((*_self_)._field_path[(*_self_)._field_w] == _6125_c)) {
			((*_self_)._field_w)++;
			return;
		}
		(*_self_)._field_buff=jule::Slice<jule::U8>::alloc(static_cast<jule::I64>((*_self_)._field_path.len()));
		copy((*_self_)._field_buff,static_cast<jule::Slice<jule::U8>>((*_self_)._field_path.slice(0LL,(*_self_)._field_w)));
	}
	(*_self_)._field_buff[(*_self_)._field_w]=_6125_c;
	((*_self_)._field_w)++;
}



inline jule::Str _1d09a561b_string(_1d09a51ba_LazyBuff* _self_) {
	if (((*_self_)._field_buff == nullptr)) {
		return (*_self_)._field_vol_and_path.slice(0LL,(*_self_)._field_vol_len + (*_self_)._field_w);
	}
	return (*_self_)._field_vol_and_path.slice(0LL,(*_self_)._field_vol_len) + static_cast<jule::Str>((*_self_)._field_buff.slice(0LL,(*_self_)._field_w));
}







std::ostream &operator<<(std::ostream &_Stream, _1d09a51ba_LazyBuff _Src) {
	_Stream << "LazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "vol_and_path:" << _Src._field_vol_and_path << ", ";
	_Stream << "vol_len:" << _Src._field_vol_len;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e9da8494_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "stat:" << _Src._field_stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_1e9da8494_DirEntry>>> static__1d09a7255_read(jule::Str _1524_path) {
	jule::Slice<jule::Ptr<_1e9da8494_DirEntry>> _1538_dirents = jule::Slice<jule::Ptr<_1e9da8494_DirEntry>>();
	jule::Slice<jule::U16> _1613_utf16_path = _1e8493e16_utf16_from_str(_1524_path);
	_WDIR* _1717_dir = _1e9d9add2__wopendir((&(_1613_utf16_path[0LL])));
	if ((_1717_dir == nullptr)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_1e9da8494_DirEntry>>>(_1e9da7d9a_get_last_fs_error());
	}
	for (;;) {
		{
			struct _wdirent* _2217_dirent = _1e9d9b179__wreaddir(_1717_dir);
			if ((_2217_dirent == nullptr)) {
				goto _iter_end_1a86a9787;
			}
			jule::Str _2617_name = _1e8498b0d_u16_ptr_to_str(((jule::U16*)(_2217_dirent->d_name)));
			jule::Ptr<_1e9dab5b8_Status> _2721_stat = ({
				auto except = static__1d09a8058_of(_1d09a5c6a_join(jule::Slice<jule::Str>({_1524_path,_2617_name})));
				(except.ok()) ? (except.result) : ({{
					return jule::Exceptional<jule::Slice<jule::Ptr<_1e9da8494_DirEntry>>>(except.error);
					return jule::Exceptional<jule::Slice<jule::Ptr<_1e9da8494_DirEntry>>>(except.error);
				} jule::Ptr<_1e9dab5b8_Status>();});
			});
			_1538_dirents = jule::alloc_for_append(_1538_dirents,1);_1538_dirents.__push(jule::new_ptr<_1e9da8494_DirEntry>(_1e9da8494_DirEntry(_2617_name,_2721_stat)));
		}
	_iter_next_1a86a9787:;
	}
	_iter_end_1a86a9787:;
	_1e9d9b421__wclosedir(_1717_dir);
	return jule::Exceptional<jule::Slice<jule::Ptr<_1e9da8494_DirEntry>>>(jule::Any(), _1538_dirents);
}



inline jule::VoidExceptional static__1d09a7464_create(jule::Str _4026_path) {
	jule::Slice<jule::U16> _4513_utf16_path = _1e8493e16_utf16_from_str(_4026_path);
	if ((!(_1e9d9a893_create_directory((&(_4513_utf16_path[0LL])))))) {
		return jule::VoidExceptional(_1e9da7d9a_get_last_fs_error());
	} return jule::VoidExceptional(); }



inline jule::VoidExceptional static__1d09a7673_remove(jule::Str _5426_path) {
	jule::Slice<jule::U16> _5513_utf16_path = _1e8493e16_utf16_from_str(_5426_path);
	if ((!(_1e9d9ab3a_remove_directory((&(_5513_utf16_path[0LL])))))) {
		return jule::VoidExceptional(_1e9da7d9a_get_last_fs_error());
	} return jule::VoidExceptional(); }







std::ostream &operator<<(std::ostream &_Stream, _1e9da8708_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e9da9880_File> static__1e9da9cd1_new(jule::U64 _4523_handle) {
	return jule::new_ptr<_1e9da9880_File>(_1e9da9880_File(_4523_handle));
}



inline jule::Exceptional<jule::Ptr<_1e9da9880_File>> static__1e9daa078_create(jule::Str _5526_path) {
	return jule::Exceptional<jule::Ptr<_1e9da9880_File>>(jule::Any(),({
		auto except = static__1e9e23da0_open(_5526_path,((static_cast<jule::I64>(770LL) | 770LL) | 770LL),438LL);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Ptr<_1e9da9880_File>>(except.error);
			return jule::Exceptional<jule::Ptr<_1e9da9880_File>>(except.error);
		} jule::Ptr<_1e9da9880_File>();});
	}));
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__1e9daa320_read(jule::Str _6724_path) {
	jule::Ptr<_1e9dab5b8_Status> _6813_s = ({
		auto except = static__1d09a8058_of(_6724_path);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_1e9dab5b8_Status>();});
	});
	if ((!(_1e9dabc28_is_reg(_6813_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>(static_cast<jule::I64>(14LL));
	}
	if ((_6813_s.get()._field_size == 0LLU)) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(),jule::Slice<jule::U8>::alloc(0LL));
	}
	jule::Ptr<_1e9da9880_File> _7817_f = ({
		auto except = static__1e9e23da0_open(_6724_path,static_cast<jule::I64>(0LL),0LL);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_1e9da9880_File>();});
	});
	__JULE_DEFER({
		({
			auto except = _1e9daad04_close(_7817_f.ptr());
			if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/fs/file.jule:79:17"));
		});
	});
	jule::Slice<jule::U8> _8117_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::I64>(_6813_s.get()._field_size));
	jule::I64 _8213_n = ({
		auto except = _1e9e27dd7_read(_7817_f.ptr(), _8117_buff);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::I64();});
	});
	return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(),_8117_buff.slice(0LL,_8213_n));
}



inline jule::VoidExceptional static__1e9daa672_write(jule::Str _9125_path,jule::Slice<jule::U8> _9136_data,jule::I64 _9150_perm) {
	jule::Ptr<_1e9da9880_File> _9217_f = ({
		auto except = static__1e9e23da0_open(_9125_path,((static_cast<jule::I64>(769LL) | 769LL) | 769LL),_9150_perm);
		(except.ok()) ? (except.result) : ({{
			return jule::VoidExceptional(except.error);
			return jule::VoidExceptional(except.error);
		} jule::Ptr<_1e9da9880_File>();});
	});
	({
		auto except = _1e9e228c6_write(_9217_f.ptr(), _9136_data);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	({
		auto except = _1e9daad04_close(_9217_f.ptr());
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	}); return jule::VoidExceptional(); }



inline jule::Exceptional<jule::I64> _1e9daab28_seek(_1e9da9880_File* _self_,jule::I64 _10527_offset,jule::I64 _10540_origin) {
	jule::I64 _10613_pos = _1e9da028d_seek(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),_10527_offset,static_cast<jule::I64>(_10540_origin));
	if ((_10613_pos == -1LL)) {
		return jule::Exceptional<jule::I64>(_1e9da7d9a_get_last_fs_error());
	}
	return jule::Exceptional<jule::I64>(jule::Any(),_10613_pos);
}



inline jule::VoidExceptional _1e9daad04_close(_1e9da9880_File* _self_) {
	if ((_1e9da09a8_close(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle))) == -1LL)) {
		return jule::VoidExceptional(_1e9da7d9a_get_last_fs_error());
	} return jule::VoidExceptional(); }



inline jule::Exceptional<jule::Ptr<_1e9da9880_File>> static__1e9e23da0_open(jule::Str _2124_path,jule::I64 _2135_flag,jule::I64 _2148_mode) {
	jule::Slice<jule::U16> _2213_utf16_path = _1e8493e16_utf16_from_str(_2124_path);
	jule::I64 _2313_handle = _1e9d99a6d__wopen((&(_2213_utf16_path[0LL])),static_cast<jule::I64>(_2135_flag),_2148_mode);
	if ((_2313_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_1e9da9880_File>>(_1e9da7d9a_get_last_fs_error());
	}
	return jule::Exceptional<jule::Ptr<_1e9da9880_File>>(jule::Any(),static__1e9da9cd1_new(static_cast<jule::U64>(static_cast<jule::U64>(_2313_handle))));
}



inline jule::VoidExceptional static__1e9e73691_remove(jule::Str _3426_path) {
	jule::Slice<jule::U16> _3513_utf16_path = _1e8493e16_utf16_from_str(_3426_path);
	if ((!(_1e9d9a5eb_delete_file((&(_3513_utf16_path[0LL])))))) {
		return jule::VoidExceptional(_1e9da7d9a_get_last_fs_error());
	} return jule::VoidExceptional(); }



inline jule::Exceptional<jule::I64> _1e9e228c6_write(_1e9da9880_File* _self_,jule::Slice<jule::U8> _4928_buff) {
	jule::I64 _4945_n = jule::I64();
	if ((_4928_buff.len() == 0LL)) {
		_4945_n = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(),_4945_n);
	}
	if (_1e9e92e41_is_console_handle((*_self_)._field_handle)) {
		jule::Slice<jule::U16> _5517_utf16_buff = _1e8493e16_utf16_from_str(static_cast<jule::Str>(_4928_buff));
		jule::Bool _5617_ok = _1e9d9c7a7_write_console((*_self_)._field_handle,(&(_5517_utf16_buff[0LL])),static_cast<jule::I64>(_5517_utf16_buff.len()),_4945_n,nullptr);
		if ((!(_5617_ok))) {
			return jule::Exceptional<jule::I64>(_1e9da7d9a_get_last_fs_error());
		}
		return jule::Exceptional<jule::I64>(jule::Any(),_4945_n);
	}
	_4945_n=static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_1e9da0d93_write(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),(&(_4928_buff[0LL])),static_cast<jule::U64>(static_cast<jule::U64>(_4928_buff.len()))))));
	if ((_4945_n == -1LL)) {
		return jule::Exceptional<jule::I64>(_1e9da7d9a_get_last_fs_error());
	}
	return jule::Exceptional<jule::I64>(jule::Any(),_4945_n);
}



inline jule::Exceptional<jule::I64> _1e9e27dd7_read(_1e9da9880_File* _self_,jule::Slice<jule::U8> _8231_buff) {
	jule::I64 _8248_n = jule::I64();
	if ((_8231_buff.len() == 0LL)) {
		_8248_n = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(),_8248_n);
	}
	if (_1e9e92e41_is_console_handle((*_self_)._field_handle)) {
		jule::Slice<jule::U16> _8821_codepage = jule::Slice<jule::U16>::alloc(static_cast<jule::I64>(_8231_buff.len()));
		jule::Bool _8917_ok = _1e9d9ccd5_read_console((*_self_)._field_handle,(&(_8821_codepage[0LL])),static_cast<jule::I64>(_8231_buff.len()),_8248_n,nullptr);
		if ((!(_8917_ok))) {
			return jule::Exceptional<jule::I64>(_1e9da7d9a_get_last_fs_error());
		}
		jule::Slice<jule::I32> _9417_runes = _1e84a9976_decode(_8821_codepage.slice(0LL,_8248_n));
		_8248_n=0LL;
		{
			auto &expr = _9417_runes;
			auto it = expr.begin();
			_iter_begin_1a86ca7ec:;
			if (it != expr.end()) {
				jule::I32 &_1a86ca8b8_r = *it;
				{
					jule::I64 _9721_size = _1e9e91082_rune_len(_1a86ca8b8_r);
					if ((_8248_n + _9721_size) > static_cast<jule::I64>(static_cast<jule::I64>(_8231_buff.len()))) {
						goto _iter_end_1a86ca7ec;
					}
					_1e9e9145b_encode_rune(_8231_buff.slice(_8248_n),_1a86ca8b8_r);
					_8248_n+=_9721_size;
				}
				_iter_next_1a86ca7ec:;
				++it;
				goto _iter_begin_1a86ca7ec;
			}
			_iter_end_1a86ca7ec:;
		}
		return jule::Exceptional<jule::I64>(jule::Any(),_8248_n);
	}
	_8248_n=static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_1e9da0678_read(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),(&(_8231_buff[0LL])),static_cast<jule::U64>(static_cast<jule::U64>(_8231_buff.len()))))));
	if ((_8248_n == -1LL)) {
		return jule::Exceptional<jule::I64>(_1e9da7d9a_get_last_fs_error());
	}
	return jule::Exceptional<jule::I64>(jule::Any(),_8248_n);
}







std::ostream &operator<<(std::ostream &_Stream, _1e9da9880_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e9dab9b4_is_dir(_1e9dab5b8_Status* _self_) {
	return (((*_self_)._field_mode & 16384LLU) == 16384LLU);
}



inline jule::Bool _1e9dabc28_is_reg(_1e9dab5b8_Status* _self_) {
	return (((*_self_)._field_mode & 32768LLU) == 32768LLU);
}



inline jule::Exceptional<jule::Ptr<_1e9dab5b8_Status>> static__1d09a8058_of(jule::Str _1222_path) {
	jule::Slice<jule::U16> _1313_utf16_path = _1e8493e16_utf16_from_str(_1222_path);
	struct stat _1417_handle = (struct stat){};
	jule::I64 _1513_code = _1e9d99683_wstat((&(_1313_utf16_path[0LL])),(&(_1417_handle)));
	if ((_1513_code != -1LL)) {
		return jule::Exceptional<jule::Ptr<_1e9dab5b8_Status>>(jule::Any(),jule::new_ptr<_1e9dab5b8_Status>(_1e9dab5b8_Status(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_1417_handle.st_mode))),static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_1417_handle.st_size))))));
	}
	return jule::Exceptional<jule::Ptr<_1e9dab5b8_Status>>(_1e9da7d9a_get_last_fs_error());
}







std::ostream &operator<<(std::ostream &_Stream, _1e9dab5b8_Status _Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d0059b9e_Cmd> static__1d005a0cd_new(jule::Str _2023_path) {
	return jule::new_ptr<_1d0059b9e_Cmd>(_1d0059b9e_Cmd(_2023_path,jule::Slice<jule::Str>(),jule::Slice<jule::Str>()));
}



inline jule::Exceptional<jule::I64> _1d005e544_spawn(_1d0059b9e_Cmd* _self_) {
	return jule::Exceptional<jule::I64>(jule::Any(),static_cast<jule::I64>(({
		auto except = _1d0069ecd___spawn(&(*_self_));
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::I64>(except.error);
			return jule::Exceptional<jule::I64>(except.error);
		} jule::I64();});
	})));
}



inline jule::Exceptional<jule::I64> _1d0069ecd___spawn(_1d0059b9e_Cmd* _self_) {
	jule::I64 _5217_pid = 0LL;
	if (((*_self_)._field_env == nullptr)) {
		_5217_pid=static_cast<jule::I64>(_1d006976e_execvp((*_self_)._field_path,(*_self_)._field_args));
	} else {
		_5217_pid=static_cast<jule::I64>(_1d0069b59_execve((*_self_)._field_path,(*_self_)._field_args,(*_self_)._field_env));
	}
	if ((_5217_pid == -1LL)) {
		return jule::Exceptional<jule::I64>(_1d0059440_get_last_process_error());
	}
	jule::I64 _6113_status = 0LL;
	if ((_cwait(((signed*)((&(_6113_status)))),_5217_pid,0LL) == -1LL)) {
		return jule::Exceptional<jule::I64>(_1d0059440_get_last_process_error());
	}
	return jule::Exceptional<jule::I64>(jule::Any(),_6113_status);
}







std::ostream &operator<<(std::ostream &_Stream, _1d0059b9e_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "env:" << _Src._field_env;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0019224_Log _Src) {
	_Stream << "Log{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "text:" << _Src._field_text << ", ";
	_Stream << "line:" << _Src._field_line << ", ";
	_Stream << "suggestion:" << _Src._field_suggestion;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1d0747d70_prec(_1d0747985_Token* _self_) {
	if ((*_self_)._field_id != static_cast<jule::U64>(7LLU)) {
		return 0LLU;
	}
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("%", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str(">>", 2) || _match_expr == jule::Str("<<", 2) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1a877c32c:;
			{
				return 5LLU;
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1a877bea8:;
			{
				return 4LLU;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("=", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1a877c01e:;
			{
				return 3LLU;
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1a877c085:;
			{
				return 2LLU;
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1a877c11d:;
			{
				return 1LLU;
			}
		}
		else {
			_case_begin_1a877b98b:;
			{
				return 0LLU;
			}
		}
		_match_end_1a877b936:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, _1d0747985_Token _Src) {
	_Stream << "Token{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d074d282_is_ok(_1d074cd75_File* _self_) {
	({
		auto except = static__1d09a8058_of((*_self_)._field_path);
		(except.ok()) ? (except.result) : ({{
			return false;
			return false;
		} jule::Ptr<_1e9dab5b8_Status>();});
	});
	return true;
}



inline void _1d074d507_fill(_1d074cd75_File* _self_,jule::Slice<jule::U8> _2331_data) {
	(*_self_)._field_data=_2331_data;
}



inline jule::Str _1d074d76b_dir(_1d074cd75_File* _self_) {
	return _1d09a6881_dir((*_self_)._field_path);
}



inline jule::Str _1d074d9d0_name(_1d074cd75_File* _self_) {
	return _1d09a6551_base((*_self_)._field_path);
}



inline jule::U64 _1d074dc44_addr(_1d074cd75_File* _self_) {
	return static_cast<jule::U64>(((jule::U64)((&((*_self_))))));
}



inline jule::Str _1d074e052_get_row(_1d074cd75_File* _self_,jule::I64 _4426_row) {
	jule::I64 _4517_n = 0LL;
	jule::I64 _4617_line_start = 0LL;
	jule::I64 _4717_i = 0LL;
	for (; _4717_i < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_data.len())); (_4717_i)++) {
		{
			if ((*_self_)._field_data[_4717_i] != '\n') {
				goto _iter_next_1a8783cb2;
			}
			(_4517_n)++;
			if (_4517_n == _4426_row) {
				return static_cast<jule::Str>((*_self_)._field_data.slice(_4617_line_start,_4717_i));
			}
			_4617_line_start=static_cast<jule::I64>((_4717_i + 1LL));
		}
	_iter_next_1a8783cb2:;
	}
	_iter_end_1a8783cb2:;
	return jule::Str();
}







std::ostream &operator<<(std::ostream &_Stream, _1d074cd75_File _Src) {
	_Stream << "File{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "data:" << _Src._field_data << ", ";
	_Stream << "tokens:" << _Src._field_tokens;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d074ee43_KindPair _Src) {
	_Stream << "KindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _1d0755ce5_push_err(_1d0755751_Lex* _self_,jule::Str _45827_fmt,jule::Slice<jule::Any> _45840_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1d0750927_make_err((*_self_)._field_row,(*_self_)._field_column,(*_self_)._field_file,_45827_fmt,_45840_args));
}



inline void _1d0756114_push_err_tok(_1d0755751_Lex* _self_,jule::Ptr<_1d0747985_Token>& _46332_token,jule::Str _46347_fmt) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1d0750927_make_err(_46332_token.get()._field_row,_46332_token.get()._field_column,(*_self_)._field_file,_46347_fmt,jule::Slice<jule::Any>()));
}



inline void _1d07562e0_lex(_1d0755751_Lex* _self_) {
	(*_self_)._field_errors=nullptr;
	_1d07582e2_new_line(&(*_self_));
	while ((*_self_)._field_pos < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_file.get()._field_data.len()))) {
		{
			jule::Ptr<_1d0747985_Token> _47321_token = _1d0759667_token(&(*_self_));
			if (_47321_token.get()._field_id != static_cast<jule::U64>(0LLU)) {
				(*_self_)._field_tokens = jule::alloc_for_append((*_self_)._field_tokens,1);(*_self_)._field_tokens.__push(_47321_token);
			}
		}
	_iter_next_1a8787e4d:;
	}
	_iter_end_1a8787e4d:;
}



inline jule::Str _1d07565ed_id(_1d0755751_Lex* _self_,jule::Slice<jule::U8>& _48222_ln) {
	if ((_48222_ln.len() == 0LL)) {
		return jule::Str();
	}
	jule::I32 _48614_r;
	jule::I64 _48621_i;
	std::tie(_48614_r,_48621_i) = _1e9e904b0_decode_rune(_48222_ln);
	if ((_48614_r != '_') && (!(_1d074ad84_is_letter(_48614_r)))) {
		return jule::Str();
	}
	while (_48621_i < static_cast<jule::I64>(static_cast<jule::I64>(_48222_ln.len()))) {
		{
			jule::I32 _49218_pr;
			jule::I64 _49222_n;
			std::tie(_49218_pr,_49222_n) = _1e9e904b0_decode_rune(_48222_ln.slice(_48621_i));
			if (((_49218_pr != '_') && (!(_1d074b3c3_is_decimal(static_cast<jule::U8>(static_cast<jule::U8>(_49218_pr)))))) && (!(_1d074ad84_is_letter(_49218_pr)))) {
				(*_self_)._field_pos+=_48621_i;
				return static_cast<jule::Str>(_48222_ln.slice(0LL,_48621_i));
			}
			_48621_i+=_49222_n;
		}
	_iter_next_1a8792430:;
	}
	_iter_end_1a8792430:;
	(*_self_)._field_pos+=static_cast<jule::I64>(_48222_ln.len());
	return static_cast<jule::Str>(_48222_ln);
}



inline jule::Slice<jule::U8> _1d0756862_resume(_1d0755751_Lex* _self_) {
	jule::I64 _50717_i = (*_self_)._field_pos;
	for (; _50717_i < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_file.get()._field_data.len())); (_50717_i)++) {
		{
			jule::I32 _50917_r = static_cast<jule::I32>((*_self_)._field_file.get()._field_data[_50717_i]);
			if (_1d074a9bb_is_space(_50917_r)) {
				
				((*_self_)._field_pos)++;
				{
					auto &_match_expr{ _50917_r };
					
					if (_match_expr == '\n') {
						_case_begin_1a8797512:;
						{
							_1d07582e2_new_line(&(*_self_));
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_1a87976ee:;
						{
							(*_self_)._field_column+=8LL;
						}
					}
					else {
						_case_begin_1a87971b0:;
						{
							((*_self_)._field_column)++;
						}
					}
					_match_end_1a87970d3:;
				}
				goto _iter_next_1a8795763;
			}
			jule::I64 _52421_j = _50717_i;
			for (; _52421_j < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_file.get()._field_data.len())); (_52421_j)++) {
				{
					if ((*_self_)._field_file.get()._field_data[_52421_j] == '\n') {
						goto _iter_end_1a8796126;
					}
				}
			_iter_next_1a8796126:;
			}
			_iter_end_1a8796126:;
			return (*_self_)._field_file.get()._field_data.slice(_50717_i,_52421_j);
		}
	_iter_next_1a8795763:;
	}
	_iter_end_1a8795763:;
	return nullptr;
}



inline void _1d0756ad7_lex_line_comment(_1d0755751_Lex* _self_,jule::Ptr<_1d0747985_Token>& _53640_token) {
	jule::I64 _53713_start = (*_self_)._field_pos;
	(*_self_)._field_pos+=2LL;
	for (; (*_self_)._field_pos < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_file.get()._field_data.len())); ((*_self_)._field_pos)++) {
		{
			jule::U8 _54017_r = (*_self_)._field_file.get()._field_data[(*_self_)._field_pos];
			if ((_54017_r == '\n') || (_54017_r == '\r')) {
				goto _iter_end_1a879a416;
			}
		}
	_iter_next_1a879a416:;
	}
	_iter_end_1a879a416:;
	if (((*_self_)._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL)) {
		_53640_token.get()._field_id=static_cast<jule::U64>(18LLU);
		_53640_token.get()._field_kind=static_cast<jule::Str>((*_self_)._field_file.get()._field_data.slice(_53713_start,(*_self_)._field_pos));
	}
}



inline void _1d0756d5c_lex_range_comment(_1d0755751_Lex* _self_,jule::Ptr<_1d0747985_Token>& _55141_token) {
	jule::I64 _55213_start = (*_self_)._field_pos;
	(*_self_)._field_pos+=2LL;
	for (; (*_self_)._field_pos < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_file.get()._field_data.len())); ((*_self_)._field_pos)++) {
		{
			jule::U8 _55517_r = (*_self_)._field_file.get()._field_data[(*_self_)._field_pos];
			if (_55517_r == '\r') {
				goto _iter_next_1a879db56;
			}
			if (_55517_r == '\n') {
				_1d07582e2_new_line(&(*_self_));
				goto _iter_next_1a879db56;
			}
			(*_self_)._field_column+=1LL;
			if (((((*_self_)._field_pos + 1LL) < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_file.get()._field_data.len()))) && (_55517_r == '*')) && ((*_self_)._field_file.get()._field_data[((*_self_)._field_pos + 1LL)] == '/')) {
				(*_self_)._field_column+=2LL;
				(*_self_)._field_pos+=2LL;
				if (((*_self_)._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL)) {
					_55141_token.get()._field_id=static_cast<jule::U64>(18LLU);
					_55141_token.get()._field_kind=static_cast<jule::Str>((*_self_)._field_file.get()._field_data.slice(_55213_start,(*_self_)._field_pos));
				}
				return;
			}
		}
	_iter_next_1a879db56:;
	}
	_iter_end_1a879db56:;
	_1d0755ce5_push_err(&(*_self_), jule::Str("missing block comment close", 27),jule::Slice<jule::Any>());
}



inline jule::Str _1d075716a_num(_1d0755751_Lex* _self_,jule::Slice<jule::U8>& _57923_txt) {
	jule::Str _57938_lit = jule::Str();
	if (_57923_txt[0LL] == '_') {
		_57938_lit = jule::Str();
		return _57938_lit;
	}
	_57938_lit=_1d0754134_hex_num(_57923_txt);
	if ((!(_57938_lit.empty()))) {
		goto _julec_label_end;
	}
	_57938_lit=_1d0753d8c_octal_num(_57923_txt);
	if ((!(_57938_lit.empty()))) {
		goto _julec_label_end;
	}
	_57938_lit=_1d075286e_binary_num(_57923_txt);
	if ((!(_57938_lit.empty()))) {
		goto _julec_label_end;
	}
	_57938_lit=_1d07525c7_common_num(_57923_txt);
	_julec_label_end:;
	(*_self_)._field_pos+=static_cast<jule::I64>(_57938_lit.len());
	return _57938_lit;
}



inline jule::Str _1d0757478_escape_seq(_1d0755751_Lex* _self_,jule::Slice<jule::U8>& _60130_txt) {
	jule::Str _60217_seq = jule::Str();
	if ((_60130_txt.len() < 2LL)) {
		goto _julec_label_end;
	}
	{
		auto &_match_expr{ _60130_txt[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1a87a9b84:;
			{
				(*_self_)._field_pos+=2LL;
				return static_cast<jule::Str>(_60130_txt.slice(0LL,2LL));
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1a87a9a96:;
			{
				_60217_seq=_1d0754761_big_unicode_point_escape(_60130_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1a87aa0c4:;
			{
				_60217_seq=_1d0754a3b_little_unicode_point_escape(_60130_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1a87a9810:;
			{
				_60217_seq=_1d0754cc2_hex_byte_escape(_60130_txt);
			}
		}
		else {
			_case_begin_1a87a90c3:;
			{
				_60217_seq=_1d0755069_byte_escape(_60130_txt);
			}
		}
		_match_end_1a87a9733:;
	}
	_julec_label_end:;
	if (_60217_seq.empty()) {
		((*_self_)._field_pos)++;
		_1d0755ce5_push_err(&(*_self_), jule::Str("invalid escape sequence", 23),jule::Slice<jule::Any>());
		return jule::Str();
	}
	(*_self_)._field_pos+=static_cast<jule::I64>(_60217_seq.len());
	return _60217_seq;
}



inline jule::Str _1d0757830_get_rune(_1d0755751_Lex* _self_,jule::Slice<jule::U8>& _63128_txt,jule::Bool _63141_raw) {
	if ((!(_63141_raw)) && (_63128_txt[0LL] == '\\')) {
		return _1d0757478_escape_seq(&(*_self_), _63128_txt);
	}
	jule::I32 _63614_r;
	jule::I64 _63617_n;
	std::tie(_63614_r,_63617_n) = _1e9e904b0_decode_rune(_63128_txt);
	(*_self_)._field_pos+=_63617_n;
	return static_cast<jule::Str>(_63614_r);
}



inline jule::Str _1d0757b3d_lex_rune(_1d0755751_Lex* _self_,jule::Slice<jule::U8>& _64128_txt) {
	jule::Str _64217_run = jule::Str("'", 1);
	((*_self_)._field_column)++;
	jule::I64 _64417_n = 0LL;
	jule::I64 _64517_i = 1LL;
	for (; _64517_i < static_cast<jule::I64>(static_cast<jule::I64>(_64128_txt.len())); (_64517_i)++) {
		{
			if (_64128_txt[_64517_i] == '\r') {
				goto _iter_next_1a87b25a4;
			}
			if (_64128_txt[_64517_i] == '\n') {
				_1d0755ce5_push_err(&(*_self_), jule::Str("rune is not finished", 20),jule::Slice<jule::Any>());
				((*_self_)._field_pos)++;
				_1d07582e2_new_line(&(*_self_));
				return jule::Str();
			}
			jule::Slice<jule::U8> _65717_part = _64128_txt.slice(_64517_i);
			jule::Str _65817_r = _1d0757830_get_rune(&(*_self_), _65717_part,false);
			_64217_run+=_65817_r;
			(*_self_)._field_column+=static_cast<jule::I64>(_1e9e9212c_rune_count_str(_65817_r));
			if ((_65817_r == jule::Str("'", 1))) {
				((*_self_)._field_pos)++;
				goto _iter_end_1a87b25a4;
			}
			if ((_65817_r.len() > 1LL)) {
				_64517_i+=static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(_65817_r.len())) - 1LL));
			}
			(_64417_n)++;
		}
	_iter_next_1a87b25a4:;
	}
	_iter_end_1a87b25a4:;
	if ((_64417_n == 0LL)) {
		_1d0755ce5_push_err(&(*_self_), jule::Str("rune is cannot empty", 20),jule::Slice<jule::Any>());
	} else if ((_64417_n > 1LL)) {
		_1d0755ce5_push_err(&(*_self_), jule::Str("rune is should be single", 24),jule::Slice<jule::Any>());
	}
	return _64217_run;
}



inline jule::Str _1d0757da2_lex_str(_1d0755751_Lex* _self_) {
	jule::Str _68117_s = jule::Str();
	jule::U8 _68213_mark = (*_self_)._field_file.get()._field_data[(*_self_)._field_pos];
	((*_self_)._field_pos)++;
	jule::Bool _68413_raw = _68213_mark == '`';
	_68117_s+=static_cast<jule::Str>(_68213_mark);
	((*_self_)._field_column)++;
	while ((*_self_)._field_pos < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_file.get()._field_data.len()))) {
		{
			jule::U8 _68917_ch = (*_self_)._field_file.get()._field_data[(*_self_)._field_pos];
			if (_68917_ch == '\r') {
				goto _iter_next_1a87b8d91;
			}
			if (_68917_ch == '\n') {
				_1d07582e2_new_line(&(*_self_));
				if ((!(_68413_raw))) {
					_1d0755ce5_push_err(&(*_self_), jule::Str("string is not finished", 22),jule::Slice<jule::Any>());
					((*_self_)._field_pos)++;
					return jule::Str();
				}
			}
			jule::Slice<jule::U8> _70121_part = (*_self_)._field_file.get()._field_data.slice((*_self_)._field_pos);
			jule::Str _70217_r = _1d0757830_get_rune(&(*_self_), _70121_part,_68413_raw);
			_68117_s+=_70217_r;
			(*_self_)._field_column+=static_cast<jule::I64>(_1e9e9212c_rune_count_str(_70217_r));
			if (_68917_ch == _68213_mark) {
				goto _iter_end_1a87b8d91;
			}
		}
	_iter_next_1a87b8d91:;
	}
	_iter_end_1a87b8d91:;
	return _68117_s;
}



inline jule::Bool _1d0758116_is_first_token_of_line(_1d0755751_Lex* _self_) {
	return ((*_self_)._field_column == 1LL);
}



inline void _1d07582e2_new_line(_1d0755751_Lex* _self_) {
	((*_self_)._field_row)++;
	(*_self_)._field_column=1LL;
}



inline jule::Bool _1d07587dc_is_op(_1d0755751_Lex* _self_,jule::Slice<jule::U8>& _72225_txt,jule::Str _72238_kind,jule::U64 _72249_id,jule::Ptr<_1d0747985_Token>& _72267_t) {
	if ((!(_1d0750cac_bytes_has_prefix(_72225_txt,_72238_kind)))) {
		return false;
	}
	_72267_t.get()._field_kind=_72238_kind;
	_72267_t.get()._field_id=_72249_id;
	(*_self_)._field_pos+=static_cast<jule::I64>(_72238_kind.len());
	return true;
}



inline jule::Bool _1d0758b94_lex_basic_ops(_1d0755751_Lex* _self_,jule::Slice<jule::U8> _73332_txt,jule::Ptr<_1d0747985_Token>& _73350_tok) {
	{
		auto &expr = _1d075043d_BASIC_OPS;
		auto it = expr.begin();
		_iter_begin_1a87c1717:;
		if (it != expr.end()) {
			_1d074ee43_KindPair &_1a87c185a_pair = *it;
			{
				if (_1d07587dc_is_op(&(*_self_), _73332_txt,_1a87c185a_pair._field_kind,_1a87c185a_pair._field_id,_73350_tok)) {
					return true;
				}
			}
			_iter_next_1a87c1717:;
			++it;
			goto _iter_begin_1a87c1717;
		}
		_iter_end_1a87c1717:;
	}
	return false;
}



inline jule::Bool _1d075904b_lex_id(_1d0755751_Lex* _self_,jule::Slice<jule::U8>& _74326_txt,jule::Ptr<_1d0747985_Token>& _74344_t) {
	jule::Str _74413_lex = _1d07565ed_id(&(*_self_), _74326_txt);
	if (_74413_lex.empty()) {
		return false;
	}
	_74344_t.get()._field_kind=_74413_lex;
	_74344_t.get()._field_id=static_cast<jule::U64>(2LLU);
	return true;
}



inline jule::Bool _1d0759403_lex_num(_1d0755751_Lex* _self_,jule::Slice<jule::U8>& _75427_txt,jule::Ptr<_1d0747985_Token>& _75445_t) {
	jule::Str _75513_lex = _1d075716a_num(&(*_self_), _75427_txt);
	if (_75513_lex.empty()) {
		return false;
	}
	_75445_t.get()._field_kind=_75513_lex;
	_75445_t.get()._field_id=static_cast<jule::U64>(6LLU);
	return true;
}



inline jule::Ptr<_1d0747985_Token> _1d0759667_token(_1d0755751_Lex* _self_) {
	jule::Ptr<_1d0747985_Token> _76717_t = jule::new_ptr<_1d0747985_Token>(_1d0747985_Token((*_self_)._field_file,jule::I64(),jule::I64(),jule::Str(),static_cast<jule::U64>(0LLU)));
	jule::Slice<jule::U8> _77213_txt = _1d0756862_resume(&(*_self_));
	if ((_77213_txt == nullptr)) {
		return _76717_t;
	}
	_76717_t.get()._field_column=(*_self_)._field_column;
	_76717_t.get()._field_row=(*_self_)._field_row;
	{
		
		if (_1d0759403_lex_num(&(*_self_), _77213_txt,_76717_t)) {
			_case_begin_1a87c9148:;
			{
				goto _match_end_1a87c7bb3;
			}
		}
		else if (_77213_txt[0LL] == '\'') {
			_case_begin_1a87c890b:;
			{
				_76717_t.get()._field_kind=_1d0757b3d_lex_rune(&(*_self_), _77213_txt);
				_76717_t.get()._field_id=static_cast<jule::U64>(6LLU);
				return _76717_t;
			}
		}
		else if ((_77213_txt[0LL] == '\"') || (_77213_txt[0LL] == '`')) {
			_case_begin_1a87c7c7e:;
			{
				_76717_t.get()._field_kind=_1d0757da2_lex_str(&(*_self_));
				_76717_t.get()._field_id=static_cast<jule::U64>(6LLU);
				return _76717_t;
			}
		}
		else if (_1d0750cac_bytes_has_prefix(_77213_txt,jule::Str("//", 2))) {
			_case_begin_1a87c7ce5:;
			{
				_1d0756ad7_lex_line_comment(&(*_self_), _76717_t);
				return _76717_t;
			}
		}
		else if (_1d0750cac_bytes_has_prefix(_77213_txt,jule::Str("/*", 2))) {
			_case_begin_1a87c7d5b:;
			{
				_1d0756d5c_lex_range_comment(&(*_self_), _76717_t);
				return _76717_t;
			}
		}
		else if (_1d07587dc_is_op(&(*_self_), _77213_txt,jule::Str("(", 1),static_cast<jule::U64>(3LLU),_76717_t) || _1d07587dc_is_op(&(*_self_), _77213_txt,jule::Str(")", 1),static_cast<jule::U64>(3LLU),_76717_t) || _1d07587dc_is_op(&(*_self_), _77213_txt,jule::Str("{", 1),static_cast<jule::U64>(3LLU),_76717_t) || _1d07587dc_is_op(&(*_self_), _77213_txt,jule::Str("}", 1),static_cast<jule::U64>(3LLU),_76717_t) || _1d07587dc_is_op(&(*_self_), _77213_txt,jule::Str("[", 1),static_cast<jule::U64>(3LLU),_76717_t) || _1d07587dc_is_op(&(*_self_), _77213_txt,jule::Str("]", 1),static_cast<jule::U64>(3LLU),_76717_t) || _1d0758b94_lex_basic_ops(&(*_self_), _77213_txt,_76717_t)) {
			_case_begin_1a87c7dc2:;
			{
				goto _match_end_1a87c7bb3;
			}
		}
		else if (_1d075904b_lex_id(&(*_self_), _77213_txt,_76717_t)) {
			_case_begin_1a87c949a:;
			{
				{
					auto &expr = _1d0750240_KEYWORDS;
					auto it = expr.begin();
					_iter_begin_1a87d142a:;
					if (it != expr.end()) {
						_1d074ee43_KindPair &_1a87d1b67_pair = *it;
						{
							if (_1a87d1b67_pair._field_kind == _76717_t.get()._field_kind) {
								_76717_t.get()._field_id=_1a87d1b67_pair._field_id;
								goto _iter_end_1a87d142a;
							}
						}
						_iter_next_1a87d142a:;
						++it;
						goto _iter_begin_1a87d142a;
					}
					_iter_end_1a87d142a:;
				}
			}
		}
		else {
			_case_begin_1a87c7c18:;
			{
				jule::I32 _81718_r;
				jule::I64 _81721_sz;
				std::tie(_81718_r,_81721_sz) = _1e9e904b0_decode_rune(_77213_txt);
				_1d0755ce5_push_err(&(*_self_), jule::Str("undefined token: @", 18),jule::Slice<jule::Any>({jule::Any(_81718_r)}));
				((*_self_)._field_column)++;
				(*_self_)._field_pos+=_81721_sz;
				return _76717_t;
			}
		}
		_match_end_1a87c7bb3:;
	}
	(*_self_)._field_column+=static_cast<jule::I64>(_1e9e9212c_rune_count_str(_76717_t.get()._field_kind));
	return _76717_t;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0755751_Lex _Src) {
	_Stream << "Lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d06e7b66_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "top_directives:" << _Src._field_top_directives << ", ";
	_Stream << "use_decls:" << _Src._field_use_decls << ", ";
	_Stream << "nodes:" << _Src._field_nodes;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d0134ac0_is_decl(_1d06c9ce1_Node* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1d076a414_EnumDecl>>() || _match_expr.type_is<jule::Ptr<_1d0763709_FnDecl>>() || _match_expr.type_is<jule::Ptr<_1d076b79a_StructDecl>>() || _match_expr.type_is<jule::Ptr<_1d076bda5_TraitDecl>>() || _match_expr.type_is<jule::Ptr<_1d0767e5b_TypeAliasDecl>>() || _match_expr.type_is<jule::Ptr<_1d076ae3c_FieldDecl>>() || _match_expr.type_is<jule::Ptr<_1d0769347_UseDecl>>() || _match_expr.type_is<jule::Ptr<_1d07646d8_VarDecl>>() || _match_expr.type_is<jule::Ptr<_1d0759c1c_TypeDecl>>()) {
			_case_begin_1a8858bab:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a8858e20:;
			{
				return false;
			}
		}
		_match_end_1a8858dba:;
	}
}



inline jule::Bool _1d0659de7_is_directive(_1d06c9ce1_Node* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1d06c9ecd_Directive>>()) {
			_case_begin_1a885a3b6:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a885ab25:;
			{
				return false;
			}
		}
		_match_end_1a885aac0:;
	}
}



inline jule::Bool _1d06cb397_is_impl(_1d06c9ce1_Node* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1d076c4b0_Impl>>()) {
			_case_begin_1a885b4c7:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a885b9d3:;
			{
				return false;
			}
		}
		_match_end_1a885b97d:;
	}
}



inline jule::Bool _1d06d0c2b_is_use_decl(_1d06c9ce1_Node* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1d0769347_UseDecl>>()) {
			_case_begin_1a885c011:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a885c8b3:;
			{
				return false;
			}
		}
		_match_end_1a885c85d:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, _1d06c9ce1_Node _Src) {
	_Stream << "Node{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d06c9ecd_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "tag:" << _Src._field_tag << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0759c1c_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d06ed221_is_prim(_1d0759e09_IdentTypeDecl* _self_) {
	return (*_self_)._field_token.get()._field_id == static_cast<jule::U64>(1LLU);
}







std::ostream &operator<<(std::ostream &_Stream, _1d0759e09_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d075a0e6_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "idents:" << _Src._field_idents << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d075a2d3_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d075a4c0_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d075a6ac_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "types:" << _Src._field_types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d072dc68_is_unsafe(_1d075a899_PtrTypeDecl* _self_) {
	return ((*_self_)._field_elem == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1d075a899_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d0730880_auto_sized(_1d075aa86_ArrTypeDecl* _self_) {
	return ((*_self_)._field_size == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1d075aa86_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d075ac73_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d075ae60_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d075b14c_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "range:" << _Src._field_range << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d075b339_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d075b526_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d0136891_is_nil(_1d075b944_LitExpr* _self_) {
	return ((*_self_)._field_value == jule::Str("nil", 3));
}







std::ostream &operator<<(std::ostream &_Stream, _1d075b944_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "value:" << _Src._field_value;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d075bb31_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d075bd1d_CoExpr _Src) {
	_Stream << "CoExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d06d9b8b_is_self(_1d075c00a_IdentExpr* _self_) {
	return ((*_self_)._field_ident == jule::Str("self", 4));
}







std::ostream &operator<<(std::ostream &_Stream, _1d075c00a_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d075c1e7_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "op:" << _Src._field_op << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d075c3d4_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d075c5c1_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d075c7ad_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "ns:" << _Src._field_ns << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d075c99a_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "is_self:" << _Src._field_is_self << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d075cb87_BinopExpr _Src) {
	_Stream << "BinopExpr{";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d072adec_unhandled(_1d075cd74_FnCallExpr* _self_) {
	return ((*_self_)._field_exception == nullptr);
}



inline jule::Bool _1d075d061_ignored(_1d075cd74_FnCallExpr* _self_) {
	return ((*_self_)._field_exception != nullptr) && (*_self_)._field_exception.get()._field_deferred;
}







std::ostream &operator<<(std::ostream &_Stream, _1d075cd74_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "exception:" << _Src._field_exception;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d075d380_is_targeted(_1d075d193_FieldExprPair* _self_) {
	return ((*_self_)._field_field != nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1d075d193_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d075d4b2_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d075d88b_is_empty(_1d075d69e_BraceLit* _self_) {
	return ((*_self_)._field_exprs.len() == 0LL);
}







std::ostream &operator<<(std::ostream &_Stream, _1d075d69e_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d075d9bd_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val << ", ";
	_Stream << "colon:" << _Src._field_colon;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d075b713_is_empty(_1d075dbaa_SliceExpr* _self_) {
	return ((*_self_)._field_exprs.len() == 0LL);
}







std::ostream &operator<<(std::ostream &_Stream, _1d075dbaa_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d075e4a2_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "index:" << _Src._field_index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d075eaac_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "start:" << _Src._field_start << ", ";
	_Stream << "to:" << _Src._field_to;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d075ee64_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d076031b_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d07606c3_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d07609ae_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "token:" << _Src._field_token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d07610b9_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0761608_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "declarative:" << _Src._field_declarative << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0761c13_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "deferred:" << _Src._field_deferred << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "end:" << _Src._field_end;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d076274c_is_self(_1d07623d9_ParamDecl* _self_) {
	return ((*_self_)._field_ident == jule::Str("&self", 5)) || ((*_self_)._field_ident == jule::Str("self", 4));
}



inline jule::Bool _1d07629b1_is_ref(_1d07623d9_ParamDecl* _self_) {
	return (!((*_self_)._field_ident.empty())) && ((*_self_)._field_ident[0LL] == '&');
}







std::ostream &operator<<(std::ostream &_Stream, _1d07623d9_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d0763a5b_is_anon(_1d0763709_FnDecl* _self_) {
	return ((*_self_)._field_ident == jule::Str("<anonymous>", 11));
}







std::ostream &operator<<(std::ostream &_Stream, _1d0763709_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "global:" << _Src._field_global << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "exceptional:" << _Src._field_exceptional << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "params:" << _Src._field_params;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d07646d8_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "constant:" << _Src._field_constant << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0764a90_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d0765464_is_inf(_1d0765112_Iter* _self_) {
	return (*_self_)._field_kind == jule::Any(jule::Any(nullptr));
}







std::ostream &operator<<(std::ostream &_Stream, _1d0765112_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d0765c39_is_while_next(_1d07658d7_WhileKind* _self_) {
	return (*_self_)._field_next != jule::Any(jule::Any(nullptr));
}







std::ostream &operator<<(std::ostream &_Stream, _1d07658d7_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "next:" << _Src._field_next << ", ";
	_Stream << "next_token:" << _Src._field_next_token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0766278_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "in_token:" << _Src._field_in_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "key_a:" << _Src._field_key_a << ", ";
	_Stream << "key_b:" << _Src._field_key_b;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0766630_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d07669d7_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0766e5a_If _Src) {
	_Stream << "If{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0767312_Else _Src) {
	_Stream << "Else{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0767785_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "head:" << _Src._field_head << ", ";
	_Stream << "tail:" << _Src._field_tail << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0767e5b_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d07683ce_Case _Src) {
	_Stream << "Case{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0768aa5_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "type_match:" << _Src._field_type_match << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "cases:" << _Src._field_cases << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0769347_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "link_path:" << _Src._field_link_path << ", ";
	_Stream << "alias:" << _Src._field_alias << ", ";
	_Stream << "full:" << _Src._field_full << ", ";
	_Stream << "selected:" << _Src._field_selected << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "std:" << _Src._field_std;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d0769d4d_auto_expr(_1d07697ba_EnumItemDecl* _self_) {
	return ((*_self_)._field_expr == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1d07697ba_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d076a766_default_typed(_1d076a414_EnumDecl* _self_) {
	return ((*_self_)._field_kind == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1d076a414_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "items:" << _Src._field_items << ", ";
	_Stream << "end:" << _Src._field_end;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d076ae3c_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d076b79a_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d076bda5_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "methods:" << _Src._field_methods;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d076c823_is_trait_impl(_1d076c4b0_Impl* _self_) {
	return ((*_self_)._field_base != nullptr);
}



inline jule::Bool _1d076ca87_is_struct_impl(_1d076c4b0_Impl* _self_) {
	return ((*_self_)._field_base == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1d076c4b0_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "base:" << _Src._field_base << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b6506593_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b6506780_PackageInfo _Src) {
	_Stream << "PackageInfo{";
	_Stream << "files:" << _Src._field_files;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b654d3cb_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _1b654e388_stop(_1b654dc06_ScopeParser* _self_) {
	(*_self_)._field_pos=-1LL;
}



inline jule::Bool _1b654e5ec_stopped(_1b654dc06_ScopeParser* _self_) {
	return ((*_self_)._field_pos == -1LL);
}



inline jule::Bool _1b654e861_finished(_1b654dc06_ScopeParser* _self_) {
	return (*_self_)._field_pos >= static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_stmts.len()));
}



inline jule::Bool _1b654eac5_is_last_st(_1b654dc06_ScopeParser* _self_) {
	return ((*_self_)._field_pos + 1LL) >= static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_stmts.len()));
}



inline void _1b654ede4_push_err(_1b654dc06_ScopeParser* _self_,jule::Ptr<_1d0747985_Token> _18927_token,jule::Str _18942_fmt) {
	_1b656acde_push_err((*_self_)._field_p.ptr(), _18927_token,_18942_fmt,jule::Slice<jule::Any>());
}



inline void _1b6550213_push_suggestion(_1b654dc06_ScopeParser* _self_,jule::Str _19434_fmt,jule::Slice<jule::Any> _19447_args) {
	_1b656b10d_push_suggestion((*_self_)._field_p.ptr(), _19434_fmt,_19447_args);
}



inline void _1b6550488_insert_as_next(_1b654dc06_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _19838_tokens) {
	(*_self_)._field_stmts=jule::append((*_self_)._field_stmts.slice(0LL,((*_self_)._field_pos + 1LL)),(*_self_)._field_stmts.slice((*_self_)._field_pos));
	(*_self_)._field_stmts[((*_self_)._field_pos + 1LL)]=jule::new_ptr<_1b654d3cb_Stmt>(_1b654d3cb_Stmt(_19838_tokens,jule::Bool()));
}



inline jule::Ptr<_1b654d3cb_Stmt> _1b65506ec_next(_1b654dc06_ScopeParser* _self_) {
	((*_self_)._field_pos)++;
	return (*_self_)._field_stmts[(*_self_)._field_pos];
}



inline jule::Ptr<_1d0761c13_ScopeTree> _1b6550aa4_build_scope(_1b654dc06_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _20835_tokens,jule::Ptr<_1d0747985_Token> _20857_end) {
	jule::Ptr<_1d0761c13_ScopeTree> _20917_s = _1b654c276_new_scope();
	_20917_s.get()._field_parent=(*_self_)._field_s;
	_20917_s.get()._field_end=_20857_end;
	_1b654dc06_ScopeParser _21217_ssp = _1b654dc06_ScopeParser((*_self_)._field_p,jule::Ptr<_1d0761c13_ScopeTree>(),jule::Slice<jule::Ptr<_1b654d3cb_Stmt>>(),jule::I64());
	_1b6559728_build(&_21217_ssp, _20835_tokens,_20917_s);
	return _20917_s;
}



inline jule::Any _1b6550db2_build_var_st(_1b654dc06_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _21936_tokens) {
	jule::Ptr<_1d07646d8_VarDecl> _22017_v = _1b656d85d_build_var((*_self_)._field_p, _21936_tokens);
	_22017_v.get()._field_scope=(*_self_)._field_s;
	return jule::Any(_22017_v);
}



inline jule::Any _1b65511c0_build_ret_st(_1b654dc06_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>> _22535_tokens) {
	jule::Ptr<_1d0764a90_RetSt> _22617_st = jule::new_ptr<_1d0764a90_RetSt>(_1d0764a90_RetSt(_22535_tokens[0LL],jule::Ptr<_1d075b14c_Expr>()));
	if ((_22535_tokens.len() > 1LL)) {
		_22535_tokens=_22535_tokens.slice(1LL);
		_22617_st.get()._field_expr=_1b656b41b_build_expr((*_self_)._field_p, _22535_tokens);
	}
	return jule::Any(_22617_st);
}



inline jule::Any _1b65514cd_build_while_next_iter(_1b654dc06_ScopeParser* _self_,jule::Ptr<_1b654d3cb_Stmt>& _23645_s) {
	jule::Ptr<_1d0765112_Iter> _23717_it = jule::new_ptr<_1d0765112_Iter>(_1d0765112_Iter(_23645_s.get()._field_tokens[0LL],jule::Any(),jule::Ptr<_1d0761c13_ScopeTree>()));
	jule::Slice<jule::Ptr<_1d0747985_Token>> _24017_tokens = _23645_s.get()._field_tokens.slice(1LL);
	jule::Ptr<_1d07658d7_WhileKind> _24117_kind = jule::new_ptr<_1d07658d7_WhileKind>(_1d07658d7_WhileKind());
	if ((_24017_tokens.len() > 0LL)) {
		_24117_kind.get()._field_expr=_1b656b41b_build_expr((*_self_)._field_p, _24017_tokens);
	}
	if (_1b654eac5_is_last_st(&(*_self_))) {
		_1b654ede4_push_err(&(*_self_), _23717_it.get()._field_token,jule::Str("invalid syntax", 14));
		return jule::Any(nullptr);
	}
	_24017_tokens=_1b65506ec_next(&(*_self_)).get()._field_tokens;
	jule::Slice<jule::Ptr<_1d0747985_Token>> _25317_st_tokens = _1b655ac24_get_block_expr(_24017_tokens);
	if ((_25317_st_tokens.len() > 0LL)) {
		jule::Ptr<_1b654d3cb_Stmt> _25521_stmt = jule::new_ptr<_1b654d3cb_Stmt>(_1b654d3cb_Stmt(_25317_st_tokens,_23645_s.get()._field_terminated));
		_24117_kind.get()._field_next_token=_25317_st_tokens[0LL];
		_24117_kind.get()._field_next=_1b6559409_build_st(&(*_self_), _25521_stmt);
	}
	jule::I64 _26317_i = _25317_st_tokens.len();
	jule::Slice<jule::Ptr<_1d0747985_Token>> _26417_block_tokens = _1b656899b_range(_26317_i,jule::Str("{", 1),jule::Str("}", 1),_24017_tokens);
	if ((_26417_block_tokens == nullptr)) {
		_1b654e388_stop(&(*_self_));
		_1b654ede4_push_err(&(*_self_), _23717_it.get()._field_token,jule::Str("body is not exist", 17));
		_1b6550213_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return jule::Any(nullptr);
	}
	if (_26317_i < static_cast<jule::I64>(static_cast<jule::I64>(_24017_tokens.len()))) {
		_1b654ede4_push_err(&(*_self_), _24017_tokens[_26317_i],jule::Str("invalid syntax", 14));
	}
	_23717_it.get()._field_scope=_1b6550aa4_build_scope(&(*_self_), _26417_block_tokens,_24017_tokens[(_26317_i - 1LL)]);
	_23717_it.get()._field_kind=jule::Any(_24117_kind);
	return jule::Any(_23717_it);
}



inline jule::Ptr<_1d07658d7_WhileKind> _1b65517db_build_while_iter_kind(_1b654dc06_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _28145_tokens) {
	return jule::new_ptr<_1d07658d7_WhileKind>(_1d07658d7_WhileKind(_1b656b41b_build_expr((*_self_)._field_p, _28145_tokens),jule::Any(),jule::Ptr<_1d0747985_Token>()));
}



inline jule::Slice<jule::Slice<jule::Ptr<_1d0747985_Token>>> _1b6551b3d_get_range_kind_keys_tokens(_1b654dc06_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _28750_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_1d0747985_Token>>> _28818_vars;
	jule::Slice<_1d0019224_Log> _28824_errs;
	std::tie(_28818_vars,_28824_errs) = _1b6569172_parts(_28750_toks,static_cast<jule::U64>(8LLU),true);
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_28824_errs);
	return _28818_vars;
}



inline jule::Ptr<_1d07646d8_VarDecl> _1b6551e3a_build_range_kind_key(_1b654dc06_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _29344_tokens) {
	if ((_29344_tokens.len() == 0LL)) {
		return nullptr;
	}
	jule::Ptr<_1d07646d8_VarDecl> _29717_key = jule::new_ptr<_1d07646d8_VarDecl>(_1d07646d8_VarDecl(jule::Ptr<_1d0761c13_ScopeTree>(),_29344_tokens[0LL],jule::Str(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Slice<jule::Ptr<_1d06c9ecd_Directive>>(),jule::Ptr<_1d0759c1c_TypeDecl>(),jule::Ptr<_1d075b14c_Expr>()));
	if (_29717_key.get()._field_token.get()._field_id == static_cast<jule::U64>(36LLU)) {
		_29717_key.get()._field_mutable=true;
		if ((_29344_tokens.len() == 1LL)) {
			_1b654ede4_push_err(&(*_self_), _29717_key.get()._field_token,jule::Str("invalid syntax", 14));
		}
		_29717_key.get()._field_token=_29344_tokens[1LL];
	} else if ((_29344_tokens.len() > 1LL)) {
		_1b654ede4_push_err(&(*_self_), _29344_tokens[1LL],jule::Str("invalid syntax", 14));
	}
	if (_29717_key.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU)) {
		_1b654ede4_push_err(&(*_self_), _29717_key.get()._field_token,jule::Str("invalid syntax", 14));
		_1b6550213_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	}
	_29717_key.get()._field_ident=_29717_key.get()._field_token.get()._field_kind;
	return _29717_key;
}



inline jule::Slice<jule::Ptr<_1d07646d8_VarDecl>> _1b6552248_build_range_kind_keys(_1b654dc06_ScopeParser* _self_,jule::Slice<jule::Slice<jule::Ptr<_1d0747985_Token>>>& _31845_parts) {
	jule::Slice<jule::Ptr<_1d07646d8_VarDecl>> _31917_keys = nullptr;
	{
		auto &expr = _31845_parts;
		auto it = expr.begin();
		_iter_begin_1a88cdbdc:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1d0747985_Token>> _1a88cdd96_tokens = *it;
			{
				_31917_keys = jule::alloc_for_append(_31917_keys,1);_31917_keys.__push(_1b6551e3a_build_range_kind_key(&(*_self_), _1a88cdd96_tokens));
			}
			_iter_next_1a88cdbdc:;
			++it;
			goto _iter_begin_1a88cdbdc;
		}
		_iter_end_1a88cdbdc:;
	}
	return _31917_keys;
}



inline void _1b65525ab_setup_range_kind_keys_plain(_1b654dc06_ScopeParser* _self_,jule::Ptr<_1d0766278_RangeKind>& _32651_rng,jule::Slice<jule::Ptr<_1d0747985_Token>>& _32673_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1d0747985_Token>>> _32717_key_tokens = _1b6551b3d_get_range_kind_keys_tokens(&(*_self_), _32673_tokens);
	if ((_32717_key_tokens.len() == 0LL)) {
		return;
	}
	if ((_32717_key_tokens.len() > 2LL)) {
		_1b654ede4_push_err(&(*_self_), _32651_rng.get()._field_in_token,jule::Str("range variables can be maximum two", 34));
	}
	jule::Slice<jule::Ptr<_1d07646d8_VarDecl>> _33417_keys = _1b6552248_build_range_kind_keys(&(*_self_), _32717_key_tokens);
	_32651_rng.get()._field_key_a=_33417_keys[0LL];
	if ((_33417_keys.len() > 1LL)) {
		_32651_rng.get()._field_key_b=_33417_keys[1LL];
	}
}



inline void _1b655290d_setup_range_kind_keys_explicit(_1b654dc06_ScopeParser* _self_,jule::Ptr<_1d0766278_RangeKind>& _34154_rng,jule::Slice<jule::Ptr<_1d0747985_Token>>& _34176_tokens) {
	jule::I64 _34217_i = 0LL;
	jule::Slice<jule::Ptr<_1d0747985_Token>> _34317_rang = _1b656899b_range(_34217_i,jule::Str("(", 1),jule::Str(")", 1),_34176_tokens);
	if (_34217_i < static_cast<jule::I64>(static_cast<jule::I64>(_34176_tokens.len()))) {
		_1b654ede4_push_err(&(*_self_), _34154_rng.get()._field_in_token,jule::Str("invalid syntax", 14));
	}
	_1b65525ab_setup_range_kind_keys_plain(&(*_self_), _34154_rng,_34317_rang);
}



inline void _1b6552c1b_setup_range_kind_keys(_1b654dc06_ScopeParser* _self_,jule::Ptr<_1d0766278_RangeKind>& _35045_rng,jule::Slice<jule::Ptr<_1d0747985_Token>>& _35067_tokens) {
	if (_35067_tokens[0LL].get()._field_id == static_cast<jule::U64>(3LLU)) {
		if ((_35067_tokens[0LL].get()._field_kind != jule::Str("(", 1))) {
			_1b654ede4_push_err(&(*_self_), _35067_tokens[0LL],jule::Str("invalid syntax", 14));
			return;
		}
		_1b655290d_setup_range_kind_keys_explicit(&(*_self_), _35045_rng,_35067_tokens);
		return;
	}
	_1b65525ab_setup_range_kind_keys_plain(&(*_self_), _35045_rng,_35067_tokens);
}



inline jule::Ptr<_1d0766278_RangeKind> _1b655316c_build_range_iter_kind(_1b654dc06_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _36245_var_tokens,jule::Slice<jule::Ptr<_1d0747985_Token>>& _36314_expr_tokens,jule::Ptr<_1d0747985_Token>& _36342_in_token) {
	jule::Ptr<_1d0766278_RangeKind> _36417_rng = jule::new_ptr<_1d0766278_RangeKind>(_1d0766278_RangeKind(_36342_in_token,jule::Ptr<_1d075b14c_Expr>(),jule::Ptr<_1d07646d8_VarDecl>(),jule::Ptr<_1d07646d8_VarDecl>()));
	if ((_36314_expr_tokens.len() == 0LL)) {
		_1b654ede4_push_err(&(*_self_), _36417_rng.get()._field_in_token,jule::Str("expression missing", 18));
		return _36417_rng;
	}
	_36417_rng.get()._field_expr=_1b656b41b_build_expr((*_self_)._field_p, _36314_expr_tokens);
	if ((_36245_var_tokens.len() > 0LL)) {
		_1b6552c1b_setup_range_kind_keys(&(*_self_), _36417_rng,_36245_var_tokens);
	}
	return _36417_rng;
}



inline jule::Any _1b6553524_build_common_iter_kind(_1b654dc06_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _37846_tokens,jule::Ptr<_1d0747985_Token>& _37865_err_tok) {
	jule::I64 _37917_brace_n = 0LL;
	{
		auto &expr = _37846_tokens;
		auto it = expr.begin();
		_iter_begin_1a88dc932:;
		if (it != expr.end()) {
			jule::I64 _1a88dc9cb_i = it - expr.begin();
			jule::Ptr<_1d0747985_Token> _1a88dcc1d_tok = *it;
			{
				if (_1a88dcc1d_tok.get()._field_id == static_cast<jule::U64>(3LLU)) {
					{
						auto &_match_expr{ _1a88dcc1d_tok.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1a88ddb53:;
							{
								(_37917_brace_n)++;
								goto _iter_next_1a88dc932;
							}
						}
						else {
							_case_begin_1a88dd548:;
							{
								(_37917_brace_n)--;
							}
						}
						_match_end_1a88dd801:;
					}
				}
				if ((_37917_brace_n != 0LL)) {
					goto _iter_next_1a88dc932;
				}
				{
					auto &_match_expr{ _1a88dcc1d_tok.get()._field_id };
					
					if (_match_expr == static_cast<jule::U64>(15LLU)) {
						_case_begin_1a88de79c:;
						{
							jule::Slice<jule::Ptr<_1d0747985_Token>> _39725_decl_tokens = _37846_tokens.slice(0LL,_1a88dc9cb_i);
							jule::Slice<jule::Ptr<_1d0747985_Token>> _39825_expr_tokens = _37846_tokens.slice((_1a88dc9cb_i + 1LL));
							return jule::Any(_1b655316c_build_range_iter_kind(&(*_self_), _39725_decl_tokens,_39825_expr_tokens,_1a88dcc1d_tok));
						}
					}
					_match_end_1a88de6c0:;
				}
			}
			_iter_next_1a88dc932:;
			++it;
			_1a88dc9cb_i++;
			goto _iter_begin_1a88dc932;
		}
		_iter_end_1a88dc932:;
	}
	return jule::Any(_1b65517db_build_while_iter_kind(&(*_self_), _37846_tokens));
}



inline jule::Any _1b6553832_build_common_iter(_1b654dc06_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>> _40540_tokens) {
	jule::Ptr<_1d0765112_Iter> _40617_it = jule::new_ptr<_1d0765112_Iter>(_1d0765112_Iter(_40540_tokens[0LL],jule::Any(),jule::Ptr<_1d0761c13_ScopeTree>()));
	_40540_tokens=_40540_tokens.slice(1LL);
	if ((_40540_tokens.len() == 0LL)) {
		_1b654e388_stop(&(*_self_));
		_1b654ede4_push_err(&(*_self_), _40617_it.get()._field_token,jule::Str("body is not exist", 17));
		_1b6550213_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return jule::Any(nullptr);
	}
	jule::Slice<jule::Ptr<_1d0747985_Token>> _41617_expr_tokens = _1b655ac24_get_block_expr(_40540_tokens);
	if ((_41617_expr_tokens.len() > 0LL)) {
		_40617_it.get()._field_kind=_1b6553524_build_common_iter_kind(&(*_self_), _41617_expr_tokens,_40617_it.get()._field_token);
	}
	jule::I64 _42017_i = _41617_expr_tokens.len();
	jule::Slice<jule::Ptr<_1d0747985_Token>> _42117_scope_tokens = _1b656899b_range(_42017_i,jule::Str("{", 1),jule::Str("}", 1),_40540_tokens);
	if ((_42117_scope_tokens == nullptr)) {
		_1b654e388_stop(&(*_self_));
		_1b654ede4_push_err(&(*_self_), _40617_it.get()._field_token,jule::Str("body is not exist", 17));
		_1b6550213_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return jule::Any(nullptr);
	}
	if (_42017_i < static_cast<jule::I64>(static_cast<jule::I64>(_40540_tokens.len()))) {
		_1b654ede4_push_err(&(*_self_), _40540_tokens[_42017_i],jule::Str("invalid syntax", 14));
	}
	_40617_it.get()._field_scope=_1b6550aa4_build_scope(&(*_self_), _42117_scope_tokens,_40540_tokens[(_42017_i - 1LL)]);
	return jule::Any(_40617_it);
}



inline jule::Any _1b6553b40_build_iter_st(_1b654dc06_ScopeParser* _self_,jule::Ptr<_1b654d3cb_Stmt>& _43537_st) {
	if (_43537_st.get()._field_terminated) {
		return _1b65514cd_build_while_next_iter(&(*_self_), _43537_st);
	}
	return _1b6553832_build_common_iter(&(*_self_), _43537_st.get()._field_tokens);
}



inline jule::Any _1b6553e4d_build_break_st(_1b654dc06_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _44238_tokens) {
	jule::Ptr<_1d0766630_BreakSt> _44317_brk = jule::new_ptr<_1d0766630_BreakSt>(_1d0766630_BreakSt(_44238_tokens[0LL],jule::Ptr<_1d0747985_Token>()));
	if ((_44238_tokens.len() > 1LL)) {
		if (_44238_tokens[1LL].get()._field_id != static_cast<jule::U64>(2LLU)) {
			_1b654ede4_push_err(&(*_self_), _44238_tokens[1LL],jule::Str("invalid syntax", 14));
			_1b6550213_push_suggestion(&(*_self_), jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_44317_brk.get()._field_label=_44238_tokens[1LL];
			if ((_44238_tokens.len() > 2LL)) {
				_1b654ede4_push_err(&(*_self_), _44238_tokens[1LL],jule::Str("invalid syntax", 14));
			}
		}
	}
	return jule::Any(_44317_brk);
}



inline jule::Any _1b655425b_build_cont_st(_1b654dc06_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _46037_tokens) {
	jule::Ptr<_1d07669d7_ContSt> _46117_cont = jule::new_ptr<_1d07669d7_ContSt>(_1d07669d7_ContSt(_46037_tokens[0LL],jule::Ptr<_1d0747985_Token>()));
	if ((_46037_tokens.len() > 1LL)) {
		if (_46037_tokens[1LL].get()._field_id != static_cast<jule::U64>(2LLU)) {
			_1b654ede4_push_err(&(*_self_), _46037_tokens[1LL],jule::Str("invalid syntax", 14));
			_1b6550213_push_suggestion(&(*_self_), jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_46117_cont.get()._field_label=_46037_tokens[1LL];
			if ((_46037_tokens.len() > 2LL)) {
				_1b654ede4_push_err(&(*_self_), _46037_tokens[1LL],jule::Str("invalid syntax", 14));
			}
		}
	}
	return jule::Any(_46117_cont);
}



inline jule::Ptr<_1d0766e5a_If> _1b6554569_build_if(_1b654dc06_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _47832_tokens) {
	jule::Ptr<_1d0766e5a_If> _47917_model = jule::new_ptr<_1d0766e5a_If>(_1d0766e5a_If(_47832_tokens[0LL],jule::Ptr<_1d075b14c_Expr>(),jule::Ptr<_1d0761c13_ScopeTree>()));
	_47832_tokens=_47832_tokens.slice(1LL);
	jule::Slice<jule::Ptr<_1d0747985_Token>> _48317_expr_tokens = _1b655ac24_get_block_expr(_47832_tokens);
	jule::I64 _48417_i = 0LL;
	if ((_48317_expr_tokens.len() == 0LL)) {
		_1b654ede4_push_err(&(*_self_), _47917_model.get()._field_token,jule::Str("expression missing", 18));
	} else {
		_48417_i=static_cast<jule::I64>(_48317_expr_tokens.len());
	}
	jule::Slice<jule::Ptr<_1d0747985_Token>> _49017_scope_tokens = _1b656899b_range(_48417_i,jule::Str("{", 1),jule::Str("}", 1),_47832_tokens);
	if ((_49017_scope_tokens == nullptr)) {
		_1b654e388_stop(&(*_self_));
		_1b654ede4_push_err(&(*_self_), _47917_model.get()._field_token,jule::Str("body is not exist", 17));
		_1b6550213_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1d0747985_Token> _49717_end = _47832_tokens[(_48417_i - 1LL)];
	if (_48417_i < static_cast<jule::I64>(static_cast<jule::I64>(_47832_tokens.len()))) {
		if (_47832_tokens[_48417_i].get()._field_id == static_cast<jule::U64>(17LLU)) {
			_47832_tokens=_47832_tokens.slice(_48417_i);
		} else {
			_1b654ede4_push_err(&(*_self_), _47832_tokens[_48417_i],jule::Str("invalid syntax", 14));
			_47832_tokens=nullptr;
		}
	}
	_47917_model.get()._field_expr=_1b656b41b_build_expr((*_self_)._field_p, _48317_expr_tokens);
	_47917_model.get()._field_scope=_1b6550aa4_build_scope(&(*_self_), _49017_scope_tokens,_49717_end);
	return _47917_model;
}



inline jule::Ptr<_1d0767312_Else> _1b6554877_build_else(_1b654dc06_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _51134_tokens) {
	jule::Ptr<_1d0767312_Else> _51217_els = jule::new_ptr<_1d0767312_Else>(_1d0767312_Else(_51134_tokens[0LL],jule::Ptr<_1d0761c13_ScopeTree>()));
	_51134_tokens=_51134_tokens.slice(1LL);
	jule::I64 _51617_i = 0LL;
	jule::Slice<jule::Ptr<_1d0747985_Token>> _51717_scope_tokens = _1b656899b_range(_51617_i,jule::Str("{", 1),jule::Str("}", 1),_51134_tokens);
	if ((_51717_scope_tokens == nullptr)) {
		if (_51617_i < static_cast<jule::I64>(static_cast<jule::I64>(_51134_tokens.len()))) {
			_1b654ede4_push_err(&(*_self_), _51217_els.get()._field_token,jule::Str("else's cannot have any expression", 33));
		} else {
			_1b654e388_stop(&(*_self_));
			_1b654ede4_push_err(&(*_self_), _51217_els.get()._field_token,jule::Str("body is not exist", 17));
			_1b6550213_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		}
		return nullptr;
	}
	if (_51617_i < static_cast<jule::I64>(static_cast<jule::I64>(_51134_tokens.len()))) {
		_1b654ede4_push_err(&(*_self_), _51134_tokens[_51617_i],jule::Str("invalid syntax", 14));
	}
	_51217_els.get()._field_scope=_1b6550aa4_build_scope(&(*_self_), _51717_scope_tokens,_51134_tokens[(_51617_i - 1LL)]);
	return _51217_els;
}



inline jule::Any _1b6554b85_build_if_else_chain(_1b654dc06_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>> _53542_tokens) {
	jule::Ptr<_1d0767785_Conditional> _53617_chain = jule::new_ptr<_1d0767785_Conditional>(_1d0767785_Conditional(_1b6554569_build_if(&(*_self_), _53542_tokens),jule::Slice<jule::Ptr<_1d0766e5a_If>>(),jule::Ptr<_1d0767312_Else>()));
	if ((_53617_chain.get()._field_head == nullptr)) {
		return jule::Any(nullptr);
	}
	while ((_53542_tokens.len() != 0LL)) {
		{
			if (_53542_tokens[0LL].get()._field_id != static_cast<jule::U64>(17LLU)) {
				goto _iter_end_1a8915284;
			}
			if ((_53542_tokens.len() > 1LL) && (_53542_tokens[1LL].get()._field_id == static_cast<jule::U64>(16LLU))) {
				_53542_tokens=_53542_tokens.slice(1LL);
				jule::Ptr<_1d0766e5a_If> _54825_elif = _1b6554569_build_if(&(*_self_), _53542_tokens);
				_53617_chain.get()._field_tail = jule::alloc_for_append(_53617_chain.get()._field_tail,1);_53617_chain.get()._field_tail.__push(_54825_elif);
				goto _iter_next_1a8915284;
			}
			_53617_chain.get()._field_default=_1b6554877_build_else(&(*_self_), _53542_tokens);
			goto _iter_end_1a8915284;
		}
	_iter_next_1a8915284:;
	}
	_iter_end_1a8915284:;
	return jule::Any(_53617_chain);
}



inline jule::Any _1b6554e93_build_co_call_st(_1b654dc06_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>> _55839_tokens) {
	jule::Ptr<_1d075bd1d_CoExpr> _55917_c = jule::new_ptr<_1d075bd1d_CoExpr>(_1d075bd1d_CoExpr(_55839_tokens[0LL],jule::Ptr<_1d075b14c_Expr>()));
	_55839_tokens=_55839_tokens.slice(1LL);
	_55917_c.get()._field_expr=_1b656b41b_build_expr((*_self_)._field_p, _55839_tokens);
	return jule::Any(_55917_c);
}



inline jule::Any _1b65552a1_build_goto_st(_1b654dc06_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _56737_tokens) {
	jule::Ptr<_1d07606c3_GotoSt> _56817_gt = jule::new_ptr<_1d07606c3_GotoSt>(_1d07606c3_GotoSt(_56737_tokens[0LL],jule::Ptr<_1d0747985_Token>()));
	if ((_56737_tokens.len() == 1LL)) {
		_1b654ede4_push_err(&(*_self_), _56817_gt.get()._field_token,jule::Str("missing label identifier for goto statement", 43));
		return jule::Any(nullptr);
	} else if ((_56737_tokens.len() > 2LL)) {
		_1b654ede4_push_err(&(*_self_), _56737_tokens[2LL],jule::Str("invalid syntax", 14));
	}
	jule::Ptr<_1d0747985_Token> _57717_ident_token = _56737_tokens[1LL];
	if (_57717_ident_token.get()._field_id != static_cast<jule::U64>(2LLU)) {
		_1b654ede4_push_err(&(*_self_), _57717_ident_token,jule::Str("invalid syntax", 14));
		_1b6550213_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return jule::Any(_56817_gt);
	}
	_56817_gt.get()._field_label=_57717_ident_token;
	return jule::Any(_56817_gt);
}



inline jule::Any _1b65555ae_build_fall_st(_1b654dc06_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _58737_tokens) {
	jule::Ptr<_1d07609ae_FallSt> _58817_fll = jule::new_ptr<_1d07609ae_FallSt>(_1d07609ae_FallSt(_58737_tokens[0LL]));
	if ((_58737_tokens.len() > 1LL)) {
		_1b654ede4_push_err(&(*_self_), _58737_tokens[1LL],jule::Str("invalid syntax", 14));
	}
	return jule::Any(_58817_fll);
}



inline jule::Any _1b65558bc_build_type_alias_st(_1b654dc06_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _59743_tokens) {
	jule::Ptr<_1d0767e5b_TypeAliasDecl> _59817_tad = _1b656ca16_build_type_alias_decl((*_self_)._field_p, _59743_tokens);
	_59817_tad.get()._field_scope=(*_self_)._field_s;
	return jule::Any(_59817_tad);
}



inline void _1b6555d2e_push_case_expr(_1b654dc06_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>> _60337_tokens,jule::Ptr<_1d0747985_Token> _60359_token,jule::Bool _6049_type_match,jule::Slice<jule::Ptr<_1d075b14c_Expr>>& _60432_exprs) {
	if ((_60337_tokens.len() == 0LL)) {
		return;
	}
	if (_6049_type_match) {
		jule::I64 _61021_i = 0LL;
		jule::Ptr<_1d0759c1c_TypeDecl> _61122_t;
		jule::Bool _61125_ok;
		std::tie(_61122_t,_61125_ok) = _1b656c708_build_type((*_self_)._field_p, _60337_tokens,(&(_61021_i)),true);
		if (_61125_ok) {
			_60432_exprs = jule::alloc_for_append(_60432_exprs,1);_60432_exprs.__push(jule::new_ptr<_1d075b14c_Expr>(_1d075b14c_Expr(_60337_tokens[0LL],jule::Ptr<_1d0747985_Token>(),jule::Bool(),jule::Any(jule::Any(_61122_t)))));
			if (_61021_i < static_cast<jule::I64>(static_cast<jule::I64>(_60337_tokens.len()))) {
				_1b654ede4_push_err(&(*_self_), _60337_tokens[_61021_i],jule::Str("invalid syntax", 14));
			}
		}
		return;
	}
	_60432_exprs = jule::alloc_for_append(_60432_exprs,1);_60432_exprs.__push(_1b656b41b_build_expr((*_self_)._field_p, _60337_tokens));
}



inline jule::Slice<jule::Ptr<_1d075b14c_Expr>> _1b65561d6_build_case_exprs(_1b654dc06_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _62640_tokens,jule::Bool _62658_type_match) {
	jule::Slice<jule::Ptr<_1d075b14c_Expr>> _62717_exprs = jule::Slice<jule::Ptr<_1d075b14c_Expr>>::alloc(0LL,1LL);
	jule::I64 _62917_brace_n = 0LL;
	jule::I64 _63017_j = 0LL;
	{
		auto &expr = _62640_tokens;
		auto it = expr.begin();
		_iter_begin_1a89293db:;
		if (it != expr.end()) {
			jule::I64 _1a8929485_i = it - expr.begin();
			jule::Ptr<_1d0747985_Token> _1a89296c7_tok = *it;
			{
				if (_1a89296c7_tok.get()._field_id == static_cast<jule::U64>(3LLU)) {
					{
						auto &_match_expr{ _1a89296c7_tok.get()._field_kind };
						
						if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
							_case_begin_1a892a61d:;
							{
								(_62917_brace_n)++;
							}
						}
						else {
							_case_begin_1a892a013:;
							{
								(_62917_brace_n)--;
							}
						}
						_match_end_1a892a2bb:;
					}
					goto _iter_next_1a89293db;
				} else if ((_62917_brace_n != 0LL)) {
					goto _iter_next_1a89293db;
				}
				{
					
					if ((_1a89296c7_tok.get()._field_id == static_cast<jule::U64>(7LLU)) && (_1a89296c7_tok.get()._field_kind == jule::Str("|", 1))) {
						_case_begin_1a892a882:;
						{
							jule::Slice<jule::Ptr<_1d0747985_Token>> _64721_expr_tokens = _62640_tokens.slice(_63017_j,_1a8929485_i);
							if ((_64721_expr_tokens.len() == 0LL)) {
								_1b654ede4_push_err(&(*_self_), _1a89296c7_tok,jule::Str("expression missing", 18));
							} else {
								_1b6555d2e_push_case_expr(&(*_self_), _62640_tokens.slice(_63017_j,_1a8929485_i),_1a89296c7_tok,_62658_type_match,_62717_exprs);
							}
							_63017_j=static_cast<jule::I64>((_1a8929485_i + 1LL));
						}
					}
					else if (_1a89296c7_tok.get()._field_id == static_cast<jule::U64>(11LLU)) {
						_case_begin_1a892b157:;
						{
							_1b6555d2e_push_case_expr(&(*_self_), _62640_tokens.slice(_63017_j,_1a8929485_i),_1a89296c7_tok,_62658_type_match,_62717_exprs);
							_62640_tokens=_62640_tokens.slice((_1a8929485_i + 1LL));
							return _62717_exprs;
						}
					}
					_match_end_1a8929c7c:;
				}
			}
			_iter_next_1a89293db:;
			++it;
			_1a8929485_i++;
			goto _iter_begin_1a89293db;
		}
		_iter_end_1a89293db:;
	}
	_1b654ede4_push_err(&(*_self_), _62640_tokens[0LL],jule::Str("invalid syntax", 14));
	_62640_tokens=nullptr;
	return nullptr;
}



inline jule::Ptr<_1d0761c13_ScopeTree> _1b65564e4_build_case_scope(_1b654dc06_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _66540_tokens) {
	jule::I64 _66617_n = 0LL;
	for (;;) {
		{
			jule::I64 _66821_i = 0LL;
			jule::Slice<jule::Ptr<_1d0747985_Token>> _66922_next;
			std::tie(_66922_next,std::ignore) = _1b654d0ce_skip_st(_66821_i,_66540_tokens.slice(_66617_n));
			if ((_66922_next.len() == 0LL)) {
				goto _iter_end_1a8930ab8;
			}
			jule::Ptr<_1d0747985_Token> _67317_tok = _66922_next[0LL];
			if ((_67317_tok.get()._field_id != static_cast<jule::U64>(7LLU)) || (_67317_tok.get()._field_kind != jule::Str("|", 1))) {
				_66617_n+=_66821_i;
				goto _iter_next_1a8930ab8;
			}
			jule::Slice<jule::Ptr<_1d0747985_Token>> _67821_scope_tokens = _66540_tokens.slice(0LL,_66617_n);
			jule::Ptr<_1d0761c13_ScopeTree> _67921_scope = _1b6550aa4_build_scope(&(*_self_), _67821_scope_tokens,_66540_tokens[_66617_n]);
			_66540_tokens=_66540_tokens.slice(_66617_n);
			return _67921_scope;
		}
	_iter_next_1a8930ab8:;
	}
	_iter_end_1a8930ab8:;
	jule::Ptr<_1d0747985_Token> _68317_end = jule::Ptr<_1d0747985_Token>();
	if ((_66540_tokens.len() > 0LL)) {
		_68317_end=_66540_tokens[(_66540_tokens.len() - 1LL)];
	}
	jule::Ptr<_1d0761c13_ScopeTree> _68717_scope = _1b6550aa4_build_scope(&(*_self_), _66540_tokens,_68317_end);
	_66540_tokens=nullptr;
	return _68717_scope;
}



inline std::tuple<jule::Ptr<_1d07683ce_Case>,jule::Bool> _1b655689b_build_case(_1b654dc06_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _69234_tokens,jule::Bool _69252_type_match) {
	jule::Ptr<_1d07683ce_Case> _69317_c = jule::new_ptr<_1d07683ce_Case>(_1d07683ce_Case(_69234_tokens[0LL],jule::Ptr<_1d0761c13_ScopeTree>(),jule::Slice<jule::Ptr<_1d075b14c_Expr>>()));
	_69234_tokens=_69234_tokens.slice(1LL);
	_69317_c.get()._field_exprs=_1b65561d6_build_case_exprs(&(*_self_), _69234_tokens,_69252_type_match);
	_69317_c.get()._field_scope=_1b65564e4_build_case_scope(&(*_self_), _69234_tokens);
	jule::Bool _69913_is_default = (_69317_c.get()._field_exprs.len() == 0LL);
	return std::make_tuple(_69317_c,_69913_is_default);
}



inline std::tuple<jule::Slice<jule::Ptr<_1d07683ce_Case>>,jule::Ptr<_1d0767312_Else>> _1b6556c53_build_cases(_1b654dc06_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>> _70334_tokens,jule::Bool _70352_type_match) {
	jule::Slice<jule::Ptr<_1d07683ce_Case>> _70417_cases = nullptr;
	jule::Ptr<_1d0767312_Else> _70517_def = nullptr;
	jule::Bool _70617_def_not_last = false;
	while ((_70334_tokens.len() > 0LL)) {
		{
			jule::Ptr<_1d0747985_Token> _70821_tok = _70334_tokens[0LL];
			if ((_70821_tok.get()._field_id != static_cast<jule::U64>(7LLU)) || (_70821_tok.get()._field_kind != jule::Str("|", 1))) {
				_1b654ede4_push_err(&(*_self_), _70821_tok,jule::Str("invalid syntax", 14));
				goto _iter_end_1a89399b2;
			}
			jule::Ptr<_1d07683ce_Case> _71322_c;
			jule::Bool _71325_is_default;
			std::tie(_71322_c,_71325_is_default) = _1b655689b_build_case(&(*_self_), _70334_tokens,_70352_type_match);
			if (_71325_is_default) {
				_71322_c.get()._field_token=_70821_tok;
				if ((_70517_def == nullptr)) {
					_70517_def=jule::new_ptr<_1d0767312_Else>(_1d0767312_Else(_71322_c.get()._field_token,_71322_c.get()._field_scope));
				} else {
					_1b654ede4_push_err(&(*_self_), _70821_tok,jule::Str("invalid syntax", 14));
				}
			} else {
				_70617_def_not_last=_70617_def_not_last || (_70517_def != nullptr);
				_70417_cases = jule::alloc_for_append(_70417_cases,1);_70417_cases.__push(_71322_c);
			}
		}
	_iter_next_1a89399b2:;
	}
	_iter_end_1a89399b2:;
	if (_70617_def_not_last) {
		_1b654ede4_push_err(&(*_self_), _70517_def.get()._field_token,jule::Str("default case should be last case", 32));
	}
	return std::make_tuple(_70417_cases,_70517_def);
}



inline jule::Ptr<_1d0768aa5_MatchCase> _1b6557061_build_match_case(_1b654dc06_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>> _73739_tokens) {
	jule::Ptr<_1d0768aa5_MatchCase> _73817_m = jule::new_ptr<_1d0768aa5_MatchCase>(_1d0768aa5_MatchCase(_73739_tokens[0LL],jule::Ptr<_1d0747985_Token>(),jule::Bool(),jule::Ptr<_1d075b14c_Expr>(),jule::Slice<jule::Ptr<_1d07683ce_Case>>(),jule::Ptr<_1d0767312_Else>()));
	_73739_tokens=_73739_tokens.slice(1LL);
	if ((_73739_tokens.len() > 0LL) && (_73739_tokens[0LL].get()._field_id == static_cast<jule::U64>(10LLU))) {
		_73817_m.get()._field_type_match=true;
		_73739_tokens=_73739_tokens.slice(1LL);
	}
	jule::Slice<jule::Ptr<_1d0747985_Token>> _74817_expr_tokens = _1b655ac24_get_block_expr(_73739_tokens);
	if ((_74817_expr_tokens.len() > 0LL)) {
		_73817_m.get()._field_expr=_1b656b41b_build_expr((*_self_)._field_p, _74817_expr_tokens);
	} else if (_73817_m.get()._field_type_match) {
		_1b654ede4_push_err(&(*_self_), _73817_m.get()._field_token,jule::Str("expression missing", 18));
	}
	jule::I64 _75517_i = _74817_expr_tokens.len();
	jule::Slice<jule::Ptr<_1d0747985_Token>> _75617_block_toks = _1b656899b_range(_75517_i,jule::Str("{", 1),jule::Str("}", 1),_73739_tokens);
	if ((_75617_block_toks == nullptr)) {
		_1b654e388_stop(&(*_self_));
		_1b654ede4_push_err(&(*_self_), _73817_m.get()._field_token,jule::Str("body is not exist", 17));
		_1b6550213_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	} else if (_75517_i < static_cast<jule::I64>(static_cast<jule::I64>(_73739_tokens.len()))) {
		_1b654ede4_push_err(&(*_self_), _73739_tokens[_75517_i],jule::Str("invalid syntax", 14));
	}
	_73817_m.get()._field_end=_73739_tokens[(_75517_i - 1LL)];
	std::tie(_73817_m.get()._field_cases,_73817_m.get()._field_default) = _1b6556c53_build_cases(&(*_self_), _75617_block_toks,_73817_m.get()._field_type_match);
	return _73817_m;
}



inline jule::Ptr<_1d0761c13_ScopeTree> _1b655736e_build_scope_st(_1b654dc06_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>> _77037_tokens) {
	jule::Bool _77117_is_unsafe = false;
	jule::Bool _77217_is_deferred = false;
	jule::Ptr<_1d0747985_Token> _77317_token = _77037_tokens[0LL];
	if (_77317_token.get()._field_id == static_cast<jule::U64>(35LLU)) {
		_77117_is_unsafe=true;
		_77037_tokens=_77037_tokens.slice(1LL);
		if ((_77037_tokens.len() == 0LL)) {
			_1b654ede4_push_err(&(*_self_), _77317_token,jule::Str("invalid syntax", 14));
			return nullptr;
		}
		_77317_token=_77037_tokens[0LL];
		if (_77317_token.get()._field_id == static_cast<jule::U64>(37LLU)) {
			_77217_is_deferred=true;
			_77037_tokens=_77037_tokens.slice(1LL);
			if ((_77037_tokens.len() == 0LL)) {
				_1b654ede4_push_err(&(*_self_), _77317_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
	} else if (_77317_token.get()._field_id == static_cast<jule::U64>(37LLU)) {
		_77217_is_deferred=true;
		_77037_tokens=_77037_tokens.slice(1LL);
		if ((_77037_tokens.len() == 0LL)) {
			_1b654ede4_push_err(&(*_self_), _77317_token,jule::Str("invalid syntax", 14));
			return nullptr;
		}
	}
	jule::I64 _79917_i = 0LL;
	jule::Slice<jule::Ptr<_1d0747985_Token>> _80017_scope_tokens = _1b656899b_range(_79917_i,jule::Str("{", 1),jule::Str("}", 1),_77037_tokens);
	if ((_80017_scope_tokens == nullptr)) {
		_1b654ede4_push_err(&(*_self_), _77317_token,jule::Str("invalid syntax", 14));
		return nullptr;
	} else if (_79917_i < static_cast<jule::I64>(static_cast<jule::I64>(_77037_tokens.len()))) {
		_1b654ede4_push_err(&(*_self_), _77037_tokens[_79917_i],jule::Str("invalid syntax", 14));
	}
	jule::Ptr<_1d0761c13_ScopeTree> _80717_scope = _1b6550aa4_build_scope(&(*_self_), _80017_scope_tokens,_77037_tokens[(_79917_i - 1LL)]);
	_80717_scope.get()._field_unsafety=_77117_is_unsafe;
	_80717_scope.get()._field_deferred=_77217_is_deferred;
	return _80717_scope;
}



inline jule::Ptr<_1d076031b_LabelSt> _1b655767c_build_label_st(_1b654dc06_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _81338_tokens) {
	jule::Ptr<_1d076031b_LabelSt> _81417_lbl = jule::new_ptr<_1d076031b_LabelSt>(_1d076031b_LabelSt(_81338_tokens[0LL],_81338_tokens[0LL].get()._field_kind));
	if ((_81338_tokens.len() > 2LL)) {
		_81338_tokens=_81338_tokens.slice(2LL);
		_1b6550488_insert_as_next(&(*_self_), _81338_tokens);
	}
	return _81417_lbl;
}



inline std::tuple<jule::Any,jule::Bool> _1b655798a_build_id_st(_1b654dc06_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _82835_tokens) {
	jule::Bool _82865_ok = jule::Bool();
	if ((_82835_tokens.len() == 1LL)) {
		return std::make_tuple(jule::Any(),_82865_ok);
	}
	jule::Ptr<_1d0747985_Token> _83317_token = _82835_tokens[1LL];
	{
		auto &_match_expr{ _83317_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1a8952bea:;
			{
				_82865_ok = true;
				return std::make_tuple(jule::Any(_1b655767c_build_label_st(&(*_self_), _82835_tokens)),_82865_ok);
			}
		}
		_match_end_1a89535ad:;
	}
	return std::make_tuple(jule::Any(),_82865_ok);
}



inline jule::Ptr<_1b6566d51_AssignInfo> _1b6557c98_build_assign_info(_1b654dc06_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _84241_tokens) {
	jule::Ptr<_1b6566d51_AssignInfo> _84317_info = jule::new_ptr<_1b6566d51_AssignInfo>(_1b6566d51_AssignInfo(jule::Slice<jule::Ptr<_1d0747985_Token>>(),jule::Slice<jule::Ptr<_1d0747985_Token>>(),jule::Ptr<_1d0747985_Token>(),true));
	jule::I64 _84617_brace_n = 0LL;
	{
		auto &expr = _84241_tokens;
		auto it = expr.begin();
		_iter_begin_1a8955747:;
		if (it != expr.end()) {
			jule::I64 _1a8955879_i = it - expr.begin();
			jule::Ptr<_1d0747985_Token> _1a8955aaa_token = *it;
			{
				if (_1a8955aaa_token.get()._field_id == static_cast<jule::U64>(3LLU)) {
					{
						auto &_match_expr{ _1a8955aaa_token.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1a8956a34:;
							{
								(_84617_brace_n)++;
							}
						}
						else {
							_case_begin_1a8956429:;
							{
								(_84617_brace_n)--;
							}
						}
						_match_end_1a89566d2:;
					}
				}
				{
					
					if ((_84617_brace_n > 0LL)) {
						_case_begin_1a8956193:;
						{
							goto _iter_next_1a8955747;
						}
					}
					else if (_1a8955aaa_token.get()._field_id != static_cast<jule::U64>(7LLU)) {
						_case_begin_1a89570a6:;
						{
							goto _iter_next_1a8955747;
						}
					}
					else if ((!(_1d074c490_is_assign_op(_1a8955aaa_token.get()._field_kind)))) {
						_case_begin_1a895712d:;
						{
							goto _iter_next_1a8955747;
						}
					}
					_match_end_1a8956c98:;
				}
				_84317_info.get()._field_l=_84241_tokens.slice(0LL,_1a8955879_i);
				if ((_84317_info.get()._field_l.len() == 0LL)) {
					_84317_info.get()._field_ok=false;
				}
				_84317_info.get()._field_setter=_1a8955aaa_token;
				if ((_1a8955879_i + 1LL) >= static_cast<jule::I64>(static_cast<jule::I64>(_84241_tokens.len()))) {
					_84317_info.get()._field_r=nullptr;
					_84317_info.get()._field_ok=_1d074c1e8_is_postfix_op(_84317_info.get()._field_setter.get()._field_kind);
					goto _iter_end_1a8955747;
				}
				_84317_info.get()._field_r=_84241_tokens.slice((_1a8955879_i + 1LL));
				if (_1d074c1e8_is_postfix_op(_84317_info.get()._field_setter.get()._field_kind)) {
					if ((_84317_info.get()._field_r.len() > 0LL)) {
						_1b654ede4_push_err(&(*_self_), _84317_info.get()._field_r[0LL],jule::Str("invalid syntax", 14));
						_84317_info.get()._field_r=nullptr;
					}
				}
				goto _iter_end_1a8955747;
			}
			_iter_next_1a8955747:;
			++it;
			_1a8955879_i++;
			goto _iter_begin_1a8955747;
		}
		_iter_end_1a8955747:;
	}
	return _84317_info;
}



inline jule::Ptr<_1d07610b9_AssignLeft> _1b65580a6_build_assign_l(_1b654dc06_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _89038_tokens) {
	jule::Ptr<_1d07610b9_AssignLeft> _89117_l = jule::new_ptr<_1d07610b9_AssignLeft>(_1d07610b9_AssignLeft(_89038_tokens[0LL],jule::Bool(),jule::Bool(),jule::Str(),jule::Ptr<_1d075b14c_Expr>()));
	if (_89038_tokens[0LL].get()._field_id == static_cast<jule::U64>(2LLU)) {
		_89117_l.get()._field_ident=_89117_l.get()._field_token.get()._field_kind;
	}
	_89117_l.get()._field_expr=_1b656b41b_build_expr((*_self_)._field_p, _89038_tokens);
	return _89117_l;
}



inline jule::Slice<jule::Ptr<_1d07610b9_AssignLeft>> _1b65583b4_build_assign_ls(_1b654dc06_ScopeParser* _self_,jule::Slice<jule::Slice<jule::Ptr<_1d0747985_Token>>>& _90339_parts) {
	jule::Slice<jule::Ptr<_1d07610b9_AssignLeft>> _90417_lefts = nullptr;
	{
		auto &expr = _90339_parts;
		auto it = expr.begin();
		_iter_begin_1a895ec29:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1d0747985_Token>> _1a895edd3_part = *it;
			{
				jule::Ptr<_1d07610b9_AssignLeft> _90621_l = _1b65580a6_build_assign_l(&(*_self_), _1a895edd3_part);
				_90417_lefts = jule::alloc_for_append(_90417_lefts,1);_90417_lefts.__push(_90621_l);
			}
			_iter_next_1a895ec29:;
			++it;
			goto _iter_begin_1a895ec29;
		}
		_iter_end_1a895ec29:;
	}
	return _90417_lefts;
}



inline std::tuple<jule::Ptr<_1d0761608_AssignSt>,jule::Bool> _1b65586c2_build_plain_assign(_1b654dc06_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _91342_tokens) {
	jule::Ptr<_1b6566d51_AssignInfo> _91417_info = _1b6557c98_build_assign_info(&(*_self_), _91342_tokens);
	if ((!(_91417_info.get()._field_ok))) {
		return std::make_tuple(nullptr,false);
	}
	jule::Ptr<_1d0761608_AssignSt> _91917_assign = jule::new_ptr<_1d0761608_AssignSt>(_1d0761608_AssignSt(jule::Bool(),_91417_info.get()._field_setter,jule::Slice<jule::Ptr<_1d07610b9_AssignLeft>>(),jule::Ptr<_1d075b14c_Expr>()));
	jule::Slice<jule::Slice<jule::Ptr<_1d0747985_Token>>> _92318_parts;
	jule::Slice<_1d0019224_Log> _92325_errs;
	std::tie(_92318_parts,_92325_errs) = _1b6569172_parts(_91417_info.get()._field_l,static_cast<jule::U64>(8LLU),true);
	if ((_92325_errs.len() > 0LL)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_92325_errs);
		return std::make_tuple(nullptr,false);
	}
	_91917_assign.get()._field_left=_1b65583b4_build_assign_ls(&(*_self_), _92318_parts);
	if ((_91417_info.get()._field_r != nullptr)) {
		_91917_assign.get()._field_right=_1b656b41b_build_expr((*_self_)._field_p, _91417_info.get()._field_r);
	}
	return std::make_tuple(_91917_assign,true);
}



inline std::tuple<jule::Ptr<_1d0761608_AssignSt>,jule::Bool> _1b65589d0_build_decl_assign(_1b654dc06_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>> _93740_tokens) {
	if ((_93740_tokens.len() < 1LL)) {
		return std::make_tuple(nullptr,false);
	}
	_93740_tokens=_93740_tokens.slice(1LL);
	jule::Ptr<_1d0747985_Token> _94317_token = _93740_tokens[0LL];
	if ((_94317_token.get()._field_id != static_cast<jule::U64>(3LLU)) || (_94317_token.get()._field_kind != jule::Str("(", 1))) {
		return std::make_tuple(nullptr,false);
	}
	jule::Ptr<_1d0761608_AssignSt> _94817_assign = jule::new_ptr<_1d0761608_AssignSt>(_1d0761608_AssignSt(true,jule::Ptr<_1d0747985_Token>(),jule::Slice<jule::Ptr<_1d07610b9_AssignLeft>>(),jule::Ptr<_1d075b14c_Expr>()));
	jule::I64 _95217_i = 0LL;
	jule::Slice<jule::Ptr<_1d0747985_Token>> _95317_rang = _1b656899b_range(_95217_i,jule::Str("(", 1),jule::Str(")", 1),_93740_tokens);
	if ((_95317_rang == nullptr)) {
		_1b654ede4_push_err(&(*_self_), _94317_token,jule::Str("invalid syntax", 14));
		return std::make_tuple(nullptr,false);
	} else if ((_95217_i + 1LL) < static_cast<jule::I64>(static_cast<jule::I64>(_93740_tokens.len()))) {
		_94817_assign.get()._field_setter=_93740_tokens[_95217_i];
		(_95217_i)++;
		jule::Slice<jule::Ptr<_1d0747985_Token>> _96021_expr_tokens = _93740_tokens.slice(_95217_i);
		_94817_assign.get()._field_right=_1b656b41b_build_expr((*_self_)._field_p, _96021_expr_tokens);
	}
	jule::Slice<jule::Slice<jule::Ptr<_1d0747985_Token>>> _96518_parts;
	jule::Slice<_1d0019224_Log> _96525_errs;
	std::tie(_96518_parts,_96525_errs) = _1b6569172_parts(_95317_rang,static_cast<jule::U64>(8LLU),true);
	if ((_96525_errs.len() > 0LL)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_96525_errs);
		return std::make_tuple(nullptr,false);
	}
	{
		auto &expr = _96518_parts;
		auto it = expr.begin();
		_iter_begin_1a896bebc:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1d0747985_Token>> _1a896c990_part = *it;
			{
				jule::Bool _97221_is_mut = false;
				jule::Bool _97321_is_ref = false;
				_94317_token=_1a896c990_part[0LL];
				if (_94317_token.get()._field_id == static_cast<jule::U64>(36LLU)) {
					_97221_is_mut=true;
					_1a896c990_part=_1a896c990_part.slice(1LL);
					if ((_1a896c990_part.len() == 0LL)) {
						_1b654ede4_push_err(&(*_self_), _94317_token,jule::Str("invalid syntax", 14));
						goto _iter_next_1a896bebc;
					}
				}
				if ((_1a896c990_part[0LL].get()._field_id == static_cast<jule::U64>(7LLU)) && (_1a896c990_part[0LL].get()._field_kind == jule::Str("&", 1))) {
					_97321_is_ref=true;
					_1a896c990_part=_1a896c990_part.slice(1LL);
					if ((_1a896c990_part.len() == 0LL)) {
						_1b654ede4_push_err(&(*_self_), _94317_token,jule::Str("invalid syntax", 14));
						goto _iter_next_1a896bebc;
					}
				}
				if (((_1a896c990_part[0LL].get()._field_id != static_cast<jule::U64>(2LLU)) && (_1a896c990_part[0LL].get()._field_id != static_cast<jule::U64>(3LLU))) && (_1a896c990_part[0LL].get()._field_kind != jule::Str("(", 1))) {
					_1b654ede4_push_err(&(*_self_), _94317_token,jule::Str("invalid syntax", 14));
					goto _iter_next_1a896bebc;
				}
				jule::Ptr<_1d07610b9_AssignLeft> _100121_l = _1b65580a6_build_assign_l(&(*_self_), _1a896c990_part);
				_100121_l.get()._field_mutable=_97221_is_mut;
				_100121_l.get()._field_reference=_97321_is_ref;
				_94817_assign.get()._field_left = jule::alloc_for_append(_94817_assign.get()._field_left,1);_94817_assign.get()._field_left.__push(_100121_l);
			}
			_iter_next_1a896bebc:;
			++it;
			goto _iter_begin_1a896bebc;
		}
		_iter_end_1a896bebc:;
	}
	return std::make_tuple(_94817_assign,true);
}



inline std::tuple<jule::Ptr<_1d0761608_AssignSt>,jule::Bool> _1b6558cdd_build_assign_st(_1b654dc06_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _101039_tokens) {
	jule::Ptr<_1d0761608_AssignSt> _101059_st = jule::Ptr<_1d0761608_AssignSt>();
	jule::Bool _101074_ok = jule::Bool();
	if ((!(_1b65671e7_check_assign_tokens(_101039_tokens)))) {
		_101059_st = nullptr;
		_101074_ok = false;
		return std::make_tuple(_101059_st,_101074_ok);
	}
	{
		auto &_match_expr{ _101039_tokens[0LL].get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1a8976ca7:;
			{
				std::tie(_101059_st,_101074_ok) = _1b65589d0_build_decl_assign(&(*_self_), _101039_tokens);
			}
		}
		else {
			_case_begin_1a8975d2d:;
			{
				std::tie(_101059_st,_101074_ok) = _1b65586c2_build_plain_assign(&(*_self_), _101039_tokens);
			}
		}
		_match_end_1a897648d:;
	}
	return std::make_tuple(_101059_st,_101074_ok);
}



inline jule::Any _1b65590eb_build_use_expr(_1b654dc06_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _102538_tokens) {
	if ((_102538_tokens.len() == 1LL)) {
		_1b654ede4_push_err(&(*_self_), _102538_tokens[0LL],jule::Str("expression missing", 18));
		return jule::Any(nullptr);
	}
	jule::Ptr<_1d075b339_UseExpr> _103117_ue = jule::new_ptr<_1d075b339_UseExpr>(_1d075b339_UseExpr(_102538_tokens[0LL],jule::Ptr<_1d075b14c_Expr>()));
	_102538_tokens=_102538_tokens.slice(1LL);
	_103117_ue.get()._field_expr=_1b656b41b_build_expr((*_self_)._field_p, _102538_tokens);
	return jule::Any(_103117_ue);
}



inline jule::Any _1b6559409_build_st(_1b654dc06_ScopeParser* _self_,jule::Ptr<_1b654d3cb_Stmt>& _104032_st) {
	jule::Ptr<_1d0747985_Token> _104117_token = _104032_st.get()._field_tokens[0LL];
	if (_104117_token.get()._field_id == static_cast<jule::U64>(2LLU)) {
		jule::Any _104322_s;
		jule::Bool _104325_ok;
		std::tie(_104322_s,_104325_ok) = _1b655798a_build_id_st(&(*_self_), _104032_st.get()._field_tokens);
		if (_104325_ok) {
			return _104322_s;
		}
	}
	jule::Ptr<_1d0761608_AssignSt> _104918_s;
	jule::Bool _104921_ok;
	std::tie(_104918_s,_104921_ok) = _1b6558cdd_build_assign_st(&(*_self_), _104032_st.get()._field_tokens);
	if (_104921_ok) {
		return jule::Any(_104918_s);
	}
	{
		auto &_match_expr{ _104117_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1a897be33:;
			{
				return _1b65590eb_build_use_expr(&(*_self_), _104032_st.get()._field_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(38LLU) || _match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_1a897c61a:;
			{
				return _1b6550db2_build_var_st(&(*_self_), _104032_st.get()._field_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(4LLU)) {
			_case_begin_1a897c21e:;
			{
				return _1b65511c0_build_ret_st(&(*_self_), _104032_st.get()._field_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(12LLU)) {
			_case_begin_1a897c285:;
			{
				return _1b6553b40_build_iter_st(&(*_self_), _104032_st);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(13LLU)) {
			_case_begin_1a897c2eb:;
			{
				return _1b6553e4d_build_break_st(&(*_self_), _104032_st.get()._field_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(14LLU)) {
			_case_begin_1a897c95b:;
			{
				return _1b655425b_build_cont_st(&(*_self_), _104032_st.get()._field_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1a897c9c2:;
			{
				return _1b6554b85_build_if_else_chain(&(*_self_), _104032_st.get()._field_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(26LLU)) {
			_case_begin_1a897ca38:;
			{
				return _1b6554e93_build_co_call_st(&(*_self_), _104032_st.get()._field_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1a897ca9e:;
			{
				return _1b65552a1_build_goto_st(&(*_self_), _104032_st.get()._field_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1a897cb15:;
			{
				return _1b65555ae_build_fall_st(&(*_self_), _104032_st.get()._field_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1a897cb7b:;
			{
				return _1b65558bc_build_type_alias_st(&(*_self_), _104032_st.get()._field_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1a897cbe2:;
			{
				return jule::Any(_1b6557061_build_match_case(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(35LLU) || _match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1a897cc58:;
			{
				return jule::Any(_1b655736e_build_scope_st(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1a897ccbe:;
			{
				if ((_104117_token.get()._field_kind == jule::Str("{", 1))) {
					return jule::Any(_1b655736e_build_scope_st(&(*_self_), _104032_st.get()._field_tokens));
				}
			}
		}
		_match_end_1a897c5a4:;
	}
	jule::Ptr<_1d075b14c_Expr> _109017_expr = _1b656b41b_build_expr((*_self_)._field_p, _104032_st.get()._field_tokens);
	if ((_109017_expr != nullptr)) {
		return jule::Any(_109017_expr);
	}
	_1b654ede4_push_err(&(*_self_), _104117_token,jule::Str("invalid syntax", 14));
	return jule::Any(nullptr);
}



inline void _1b6559728_build(_1b654dc06_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _109829_tokens,jule::Ptr<_1d0761c13_ScopeTree>& _109852_s) {
	if ((_109852_s == nullptr)) {
		return;
	}
	(*_self_)._field_stmts=_1b654d772_split_stmts(_109829_tokens);
	(*_self_)._field_pos=-1LL;
	(*_self_)._field_s=_109852_s;
	while ((!(_1b654eac5_is_last_st(&(*_self_)))) && (!(_1b654e861_finished(&(*_self_))))) {
		{
			jule::Ptr<_1b654d3cb_Stmt> _110721_st = _1b65506ec_next(&(*_self_));
			jule::Any _110821_data = _1b6559409_build_st(&(*_self_), _110721_st);
			if (_110821_data != jule::Any(jule::Any(nullptr))) {
				(*_self_)._field_s.get()._field_stmts = jule::alloc_for_append((*_self_)._field_s.get()._field_stmts,1);(*_self_)._field_s.get()._field_stmts.__push(_1d06c9ce1_Node(_110721_st.get()._field_tokens[0LL],_110821_data));
			}
			if (_1b654e5ec_stopped(&(*_self_))) {
				goto _iter_end_1a8987438;
			}
		}
	_iter_next_1a8987438:;
	}
	_iter_end_1a8987438:;
}







std::ostream &operator<<(std::ostream &_Stream, _1b654dc06_ScopeParser _Src) {
	_Stream << "ScopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b655a5c5_CallData _Src) {
	_Stream << "CallData{";
	_Stream << "expr_tokens:" << _Src._field_expr_tokens << ", ";
	_Stream << "args_tokens:" << _Src._field_args_tokens << ", ";
	_Stream << "generics_tokens:" << _Src._field_generics_tokens;
	_Stream << "}";
	return _Stream;
}



inline void _1b655c31e_push_err(_1b655ba27_ExprBuilder* _self_,jule::Ptr<_1d0747985_Token> _21827_token,jule::Str _21842_fmt,jule::Slice<jule::Any> _21855_args) {
	_1b656acde_push_err((*_self_)._field_p.ptr(), _21827_token,_21842_fmt,_21855_args);
}



inline void _1b655c63d_push_suggestion(_1b655ba27_ExprBuilder* _self_,jule::Str _22334_fmt,jule::Slice<jule::Any> _22347_args) {
	_1b656b10d_push_suggestion((*_self_)._field_p.ptr(), _22334_fmt,_22347_args);
}



inline jule::Ptr<_1d075b526_TupleExpr> _1b655c94b_build_tuple(_1b655ba27_ExprBuilder* _self_,jule::Slice<jule::Slice<jule::Ptr<_1d0747985_Token>>>& _22735_parts) {
	jule::Ptr<_1d075b526_TupleExpr> _22817_tuple = jule::new_ptr<_1d075b526_TupleExpr>(_1d075b526_TupleExpr(jule::Slice<jule::Ptr<_1d075b14c_Expr>>::alloc(0LL,static_cast<jule::I64>(_22735_parts.len()))));
	{
		auto &expr = _22735_parts;
		auto it = expr.begin();
		_iter_begin_1a898d75d:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1d0747985_Token>> _1a898db8c_part = *it;
			{
				_22817_tuple.get()._field_expr = jule::alloc_for_append(_22817_tuple.get()._field_expr,1);_22817_tuple.get()._field_expr.__push(_1b6566405_build_from_tokens(&(*_self_), _1a898db8c_part));
			}
			_iter_next_1a898d75d:;
			++it;
			goto _iter_begin_1a898d75d;
		}
		_iter_end_1a898d75d:;
	}
	return _22817_tuple;
}



inline jule::Ptr<_1d075b944_LitExpr> _1b655cc59_build_lit(_1b655ba27_ExprBuilder* _self_,jule::Ptr<_1d0747985_Token> _23728_token) {
	return jule::new_ptr<_1d075b944_LitExpr>(_1d075b944_LitExpr(_23728_token,_23728_token.get()._field_kind));
}



inline jule::Ptr<_1d0759c1c_TypeDecl> _1b655d067_build_primitive_type(_1b655ba27_ExprBuilder* _self_,jule::Ptr<_1d0747985_Token>& _24440_token) {
	return _1b657a35e_build_prim_type(_24440_token);
}



inline jule::Any _1b655d375_build_single(_1b655ba27_ExprBuilder* _self_,jule::Ptr<_1d0747985_Token> _24835_token) {
	{
		auto &_match_expr{ _24835_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1a8991b18:;
			{
				return jule::Any(_1b655cc59_build_lit(&(*_self_), _24835_token));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1a8991e48:;
			{
				if ((_24835_token.get()._field_kind == jule::Str("...", 3))) {
					return jule::Any(jule::new_ptr<_1d075c3d4_VariadicExpr>(_1d075c3d4_VariadicExpr(_24835_token,jule::Ptr<_1d075b14c_Expr>())));
				}
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU) || _match_expr == static_cast<jule::U64>(28LLU) || _match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1a8991eae:;
			{
				return jule::Any(_1b655b54e_build_ident_expr(_24835_token));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1a8992036:;
			{
				return jule::Any(_1b655d067_build_primitive_type(&(*_self_), _24835_token));
			}
		}
		_match_end_1a8991d49:;
	}
	_1b655c31e_push_err(&(*_self_), _24835_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return jule::Any(nullptr);
}



inline jule::Ptr<_1d075c00a_IdentExpr> _1b655d683_build_cpp_linked_ident(_1b655ba27_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _26946_tokens) {
	if (_26946_tokens[0LL].get()._field_id != static_cast<jule::U64>(31LLU)) {
		return nullptr;
	} else if (_26946_tokens[1LL].get()._field_id != static_cast<jule::U64>(20LLU)) {
		_1b655c31e_push_err(&(*_self_), _26946_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1b655c63d_push_suggestion(&(*_self_), jule::Str("use dot (.) to access cpp-linked defines", 40),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1d0747985_Token> _27717_token = _26946_tokens[2LL];
	if (_27717_token.get()._field_id != static_cast<jule::U64>(2LLU)) {
		_1b655c31e_push_err(&(*_self_), _26946_tokens[2LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1b655c63d_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1d075c00a_IdentExpr> _28317_expr = _1b655b54e_build_ident_expr(_27717_token);
	_28317_expr.get()._field_cpp_linked=true;
	return _28317_expr;
}



inline jule::Ptr<_1d075c1e7_UnaryExpr> _1b655d991_build_unary(_1b655ba27_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>> _28834_tokens) {
	jule::Ptr<_1d0747985_Token> _28917_op = _28834_tokens[0LL];
	if ((_28834_tokens.len() == 1LL)) {
		_1b655c31e_push_err(&(*_self_), _28917_op,jule::Str("missing expression for unary operator", 37),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((!(_1d07481c2_is_unary_op(_28917_op.get()._field_kind)))) {
		_1b655c31e_push_err(&(*_self_), _28917_op,jule::Str("invalid unary operator: @", 25),jule::Slice<jule::Any>({jule::Any(_28917_op.get()._field_kind)}));
		return nullptr;
	}
	_28834_tokens=_28834_tokens.slice(1LL);
	return jule::new_ptr<_1d075c1e7_UnaryExpr>(_1d075c1e7_UnaryExpr(_28917_op,_1b6566405_build_from_tokens(&(*_self_), _28834_tokens)));
}



inline jule::Ptr<_1d075c99a_SubIdentExpr> _1b655dc9e_build_obj_sub_ident(_1b655ba27_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>> _30942_tokens) {
	jule::I64 _31017_i = (_30942_tokens.len() - 1LL);
	jule::Ptr<_1d0747985_Token> _31117_ident_token = _30942_tokens[_31017_i];
	(_31017_i)--;
	_30942_tokens=_30942_tokens.slice(0LL,_31017_i);
	if ((_30942_tokens.len() == 0LL)) {
		_1b655c31e_push_err(&(*_self_), _31117_ident_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_ptr<_1d075c99a_SubIdentExpr>(_1d075c99a_SubIdentExpr(jule::Bool(),_1b6566405_build_from_tokens(&(*_self_), _30942_tokens),_31117_ident_token));
}



inline jule::Ptr<_1d075c7ad_NsSelectionExpr> _1b655e0ac_build_ns_sub_ident(_1b655ba27_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _32442_tokens) {
	jule::Ptr<_1d075c7ad_NsSelectionExpr> _32517_ns = jule::new_ptr<_1d075c7ad_NsSelectionExpr>(_1d075c7ad_NsSelectionExpr());
	{
		auto &expr = _32442_tokens;
		auto it = expr.begin();
		_iter_begin_1a89a0a4a:;
		if (it != expr.end()) {
			jule::I64 _1a89a0d58_i = it - expr.begin();
			jule::Ptr<_1d0747985_Token> _1a89a1089_token = *it;
			{
				if (((_1a89a0d58_i & 1LL) == 0LL)) {
					if (_1a89a1089_token.get()._field_id != static_cast<jule::U64>(2LLU)) {
						_1b655c31e_push_err(&(*_self_), _1a89a1089_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						_1b655c63d_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					}
					_32517_ns.get()._field_ns = jule::alloc_for_append(_32517_ns.get()._field_ns,1);_32517_ns.get()._field_ns.__push(_1a89a1089_token);
				} else if (_1a89a1089_token.get()._field_id != static_cast<jule::U64>(23LLU)) {
					_1b655c31e_push_err(&(*_self_), _1a89a1089_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					_1b655c63d_push_suggestion(&(*_self_), jule::Str("expected double colon \"::\"", 26),jule::Slice<jule::Any>());
				}
			}
			_iter_next_1a89a0a4a:;
			++it;
			_1a89a0d58_i++;
			goto _iter_begin_1a89a0a4a;
		}
		_iter_end_1a89a0a4a:;
	}
	_32517_ns.get()._field_ident=_32517_ns.get()._field_ns[(_32517_ns.get()._field_ns.len() - 1LL)];
	_32517_ns.get()._field_ns=_32517_ns.get()._field_ns.slice(0LL,(_32517_ns.get()._field_ns.len() - 1LL));
	return _32517_ns;
}



inline jule::Ptr<_1d0759c1c_TypeDecl> _1b655e3ba_build_type(_1b655ba27_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _34334_tokens) {
	jule::I64 _34417_i = 0LL;
	jule::Ptr<_1d0759c1c_TypeDecl> _34518_t;
	jule::Bool _34521_ok;
	std::tie(_34518_t,_34521_ok) = _1b656c708_build_type((*_self_)._field_p, _34334_tokens,(&(_34417_i)),false);
	if ((!(_34521_ok))) {
		_1b655c31e_push_err(&(*_self_), _34334_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_34417_i < static_cast<jule::I64>(static_cast<jule::I64>(_34334_tokens.len()))) {
		_1b655c31e_push_err(&(*_self_), _34334_tokens[_34417_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	return _34518_t;
}



inline jule::Any _1b655e6c8_build_sub_ident(_1b655ba27_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _35739_tokens) {
	jule::I64 _35813_i = (_35739_tokens.len() - 2LL);
	jule::Ptr<_1d0747985_Token> _35913_token = _35739_tokens[_35813_i];
	{
		auto &_match_expr{ _35913_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(20LLU)) {
			_case_begin_1a89a8bc9:;
			{
				return jule::Any(_1b655dc9e_build_obj_sub_ident(&(*_self_), _35739_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1a89a9889:;
			{
				return jule::Any(_1b655e0ac_build_ns_sub_ident(&(*_self_), _35739_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1a89a9900:;
			{
				if ((_35913_token.get()._field_kind == jule::Str("]", 1))) {
					return jule::Any(_1b655e3ba_build_type(&(*_self_), _35739_tokens));
				}
			}
		}
		_match_end_1a89a9768:;
	}
	_1b655c31e_push_err(&(*_self_), _35913_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return jule::Any(nullptr);
}



inline jule::Ptr<_1d075c3d4_VariadicExpr> _1b655e9d6_build_variadic(_1b655ba27_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>> _37537_tokens) {
	jule::Ptr<_1d0747985_Token> _37617_token = _37537_tokens[(_37537_tokens.len() - 1LL)];
	_37537_tokens=_37537_tokens.slice(0LL,(_37537_tokens.len() - 1LL));
	return jule::new_ptr<_1d075c3d4_VariadicExpr>(_1d075c3d4_VariadicExpr(_37617_token,_1b6566405_build_from_tokens(&(*_self_), _37537_tokens)));
}



inline jule::Any _1b655ece4_build_op_right(_1b655ba27_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _38438_tokens) {
	jule::Ptr<_1d0747985_Token> _38517_token = _38438_tokens[(_38438_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _38517_token.get()._field_kind };
		
		if (_match_expr == jule::Str("!", 1)) {
			_case_begin_1a89aea04:;
			{
				_38438_tokens=_38438_tokens.slice(0LL,(_38438_tokens.len() - 1LL));
				jule::Any _38921_d = _1b6565cd9_build(&(*_self_), _38438_tokens);
				if (_38921_d == jule::Any(jule::Any(nullptr))) {
					return jule::Any(nullptr);
				}
				{
					auto &_match_expr{ _38921_d };
					
					if (_match_expr.type_is<jule::Ptr<_1d075cd74_FnCallExpr>>()) {
						_case_begin_1a89b1286:;
						{
							_38921_d.operator jule::Ptr<_1d075cd74_FnCallExpr>().get()._field_exception=jule::new_ptr<_1d0761c13_ScopeTree>(_1d0761c13_ScopeTree(jule::Ptr<_1d0761c13_ScopeTree>(),jule::Bool(),true,jule::Slice<_1d06c9ce1_Node>(),jule::Ptr<_1d0747985_Token>()));
							return _38921_d;
						}
					}
					_match_end_1a89b15a5:;
				}
			}
		}
		else if (_match_expr == jule::Str("...", 3)) {
			_case_begin_1a89aea6a:;
			{
				return jule::Any(_1b655e9d6_build_variadic(&(*_self_), _38438_tokens));
			}
		}
		_match_end_1a89ae97c:;
	}
	_1b655c31e_push_err(&(*_self_), _38517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return jule::Any(nullptr);
}



inline jule::Ptr<_1d075b14c_Expr> _1b6560146_build_between_parentheses(_1b655ba27_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>> _40748_tokens) {
	if ((_40748_tokens.len() == 2LL)) {
		_1b655c31e_push_err(&(*_self_), _40748_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		_1b655c63d_push_suggestion(&(*_self_), jule::Str("empty parentheses are not valid expression, must include an expression in range", 79),jule::Slice<jule::Any>());
		return nullptr;
	}
	_40748_tokens=_40748_tokens.slice(1LL,(_40748_tokens.len() - 1LL));
	jule::Ptr<_1d075b14c_Expr> _41417_expr = _1b6566405_build_from_tokens(&(*_self_), _40748_tokens);
	_41417_expr.get()._field_range=true;
	return _41417_expr;
}



inline jule::Ptr<_1d075c5c1_CastExpr> _1b6560443_try_build_cast(_1b655ba27_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _41938_tokens) {
	jule::I64 _42017_range_n = 0LL;
	{
		auto &expr = _41938_tokens;
		auto it = expr.begin();
		_iter_begin_1a89b6874:;
		if (it != expr.end()) {
			jule::I64 _1a89b691d_i = it - expr.begin();
			jule::Ptr<_1d0747985_Token> _1a89b6b60_token = *it;
			{
				if (_1a89b6b60_token.get()._field_id == static_cast<jule::U64>(3LLU)) {
					{
						auto &_match_expr{ _1a89b6b60_token.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1a89b7a95:;
							{
								(_42017_range_n)++;
								goto _iter_next_1a89b6874;
							}
						}
						else {
							_case_begin_1a89b748a:;
							{
								(_42017_range_n)--;
							}
						}
						_match_end_1a89b7743:;
					}
				}
				if ((_42017_range_n > 0LL)) {
					goto _iter_next_1a89b6874;
				} else if ((_1a89b691d_i + 1LL) == static_cast<jule::I64>(static_cast<jule::I64>(_41938_tokens.len()))) {
					return nullptr;
				}
				jule::Slice<jule::Ptr<_1d0747985_Token>> _44021_type_tokens = _41938_tokens.slice(0LL,(_1a89b691d_i + 1LL));
				jule::Slice<jule::Ptr<_1d0747985_Token>> _44121_expr_tokens = _41938_tokens.slice((_1a89b691d_i + 1LL));
				if ((_44121_expr_tokens.len() == 0LL)) {
					return nullptr;
				}
				jule::Ptr<_1d0747985_Token> _44817_tok = _44121_expr_tokens[0LL];
				if ((_44817_tok.get()._field_id != static_cast<jule::U64>(3LLU)) || (_44817_tok.get()._field_kind != jule::Str("(", 1))) {
					return nullptr;
				}
				jule::Ptr<_1d075c5c1_CastExpr> _45321_cast = jule::new_ptr<_1d075c5c1_CastExpr>(_1d075c5c1_CastExpr());
				if ((_44121_expr_tokens.len() == 2LL)) {
					_1b655c31e_push_err(&(*_self_), _44121_expr_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
					_1b655c63d_push_suggestion(&(*_self_), jule::Str("give an expression for casting", 30),jule::Slice<jule::Any>());
				}
				if ((_44021_type_tokens.len() == 2LL)) {
					_1b655c31e_push_err(&(*_self_), _44021_type_tokens[0LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
					_1b655c63d_push_suggestion(&(*_self_), jule::Str("type declaration expected for casting", 37),jule::Slice<jule::Any>());
				} else {
					_44021_type_tokens=_44021_type_tokens.slice(1LL,(_44021_type_tokens.len() - 1LL));
					jule::I64 _46725_type_index = 0LL;
					jule::Ptr<_1d0759c1c_TypeDecl> _46826_t;
					jule::Bool _46829_ok;
					std::tie(_46826_t,_46829_ok) = _1b656c708_build_type((*_self_)._field_p, _44021_type_tokens,(&(_46725_type_index)),true);
					if (_46829_ok && (_46725_type_index < static_cast<jule::I64>(static_cast<jule::I64>(_44021_type_tokens.len())))) {
						_1b655c31e_push_err(&(*_self_), _44021_type_tokens[_46725_type_index],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					} else if ((!(_46829_ok))) {
						return _45321_cast;
					}
					_45321_cast.get()._field_kind=_46826_t;
					if ((_44121_expr_tokens.len() > 2LL)) {
						jule::I64 _47829_j = 0LL;
						_1b656899b_range(_47829_j,jule::Str("(", 1),jule::Str(")", 1),_44121_expr_tokens);
						if (_47829_j < static_cast<jule::I64>(static_cast<jule::I64>(_44121_expr_tokens.len()))) {
							return nullptr;
						}
						_44121_expr_tokens=_44121_expr_tokens.slice(0LL,_47829_j);
						_45321_cast.get()._field_expr=_1b6566405_build_from_tokens(&(*_self_), _44121_expr_tokens);
					}
				}
				return _45321_cast;
			}
			_iter_next_1a89b6874:;
			++it;
			_1a89b691d_i++;
			goto _iter_begin_1a89b6874;
		}
		_iter_end_1a89b6874:;
	}
	return nullptr;
}



inline void _1b656080b_push_arg(_1b655ba27_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d075b14c_Expr>>& _49332_args,jule::Slice<jule::Ptr<_1d0747985_Token>> _49351_tokens,jule::Ptr<_1d0747985_Token> _49369_err_token) {
	if ((_49351_tokens.len() == 0LL)) {
		_1b655c31e_push_err(&(*_self_), _49369_err_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1b655c63d_push_suggestion(&(*_self_), jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;
	}
	_49332_args = jule::alloc_for_append(_49332_args,1);_49332_args.__push(_1b6566405_build_from_tokens(&(*_self_), _49351_tokens));
}



inline jule::Slice<jule::Ptr<_1d075b14c_Expr>> _1b6560b19_build_args(_1b655ba27_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>> _50233_tokens) {
	if ((_50233_tokens.len() < 2LL)) {
		return nullptr;
	}
	jule::Slice<jule::Ptr<_1d075b14c_Expr>> _50817_args = nullptr;
	jule::I64 _50917_last = 0LL;
	jule::I64 _51017_range_n = 0LL;
	_50233_tokens=_50233_tokens.slice(1LL,(_50233_tokens.len() - 1LL));
	{
		auto &expr = _50233_tokens;
		auto it = expr.begin();
		_iter_begin_1a89c6e8e:;
		if (it != expr.end()) {
			jule::I64 _1a89c718c_i = it - expr.begin();
			jule::Ptr<_1d0747985_Token> _1a89c727a_token = *it;
			{
				if (_1a89c727a_token.get()._field_id == static_cast<jule::U64>(3LLU)) {
					{
						auto &_match_expr{ _1a89c727a_token.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1a89c81b0:;
							{
								(_51017_range_n)++;
							}
						}
						else {
							_case_begin_1a89c7aa5:;
							{
								(_51017_range_n)--;
							}
						}
						_match_end_1a89c7d5d:;
					}
				}
				if ((_51017_range_n > 0LL) || (_1a89c727a_token.get()._field_id != static_cast<jule::U64>(8LLU))) {
					goto _iter_next_1a89c6e8e;
				}
				_1b656080b_push_arg(&(*_self_), _50817_args,_50233_tokens.slice(_50917_last,_1a89c718c_i),_1a89c727a_token);
				_50917_last=static_cast<jule::I64>((_1a89c718c_i + 1LL));
			}
			_iter_next_1a89c6e8e:;
			++it;
			_1a89c718c_i++;
			goto _iter_begin_1a89c6e8e;
		}
		_iter_end_1a89c6e8e:;
	}
	if (_50917_last < static_cast<jule::I64>(static_cast<jule::I64>(_50233_tokens.len()))) {
		if ((_50917_last == 0LL)) {
			if ((_50233_tokens.len() > 0LL)) {
				_1b656080b_push_arg(&(*_self_), _50817_args,_50233_tokens.slice(_50917_last),_50233_tokens[_50917_last]);
			}
		} else {
			_1b656080b_push_arg(&(*_self_), _50817_args,_50233_tokens.slice(_50917_last),_50233_tokens[(_50917_last - 1LL)]);
		}
	}
	return _50817_args;
}



inline jule::Slice<jule::Ptr<_1d0759c1c_TypeDecl>> _1b6560e27_build_call_generics(_1b655ba27_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>> _54442_tokens) {
	if ((_54442_tokens.len() == 0LL)) {
		return nullptr;
	}
	_54442_tokens=_54442_tokens.slice(1LL,(_54442_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_1d0747985_Token>>> _55018_parts;
	jule::Slice<_1d0019224_Log> _55025_errs;
	std::tie(_55018_parts,_55025_errs) = _1b6569172_parts(_54442_tokens,static_cast<jule::U64>(8LLU),true);
	jule::Slice<jule::Ptr<_1d0759c1c_TypeDecl>> _55117_generics = jule::Slice<jule::Ptr<_1d0759c1c_TypeDecl>>::alloc(0LL,static_cast<jule::I64>(_55018_parts.len()));
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_55025_errs);
	{
		auto &expr = _55018_parts;
		auto it = expr.begin();
		_iter_begin_1a89ce66c:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1d0747985_Token>> _1a89ceabd_part = *it;
			{
				if ((_1a89ceabd_part.len() == 0LL)) {
					goto _iter_next_1a89ce66c;
				}
				jule::I64 _55721_j = 0LL;
				jule::Ptr<_1d0759c1c_TypeDecl> _55822_generic;
				std::tie(_55822_generic,std::ignore) = _1b656c708_build_type((*_self_)._field_p, _1a89ceabd_part,(&(_55721_j)),true);
				if (_55721_j < static_cast<jule::I64>(static_cast<jule::I64>(_1a89ceabd_part.len()))) {
					_1b655c31e_push_err(&(*_self_), _1a89ceabd_part[_55721_j],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				}
				_55117_generics = jule::alloc_for_append(_55117_generics,1);_55117_generics.__push(_55822_generic);
			}
			_iter_next_1a89ce66c:;
			++it;
			goto _iter_begin_1a89ce66c;
		}
		_iter_end_1a89ce66c:;
	}
	return _55117_generics;
}



inline jule::Ptr<_1d075cd74_FnCallExpr> _1b65612ce_build_fn_call(_1b655ba27_ExprBuilder* _self_,jule::Ptr<_1d0747985_Token>& _56837_token,jule::Ptr<_1b655a5c5_CallData>& _56857_data) {
	return jule::new_ptr<_1d075cd74_FnCallExpr>(_1d075cd74_FnCallExpr(_56837_token,_1b6566405_build_from_tokens(&(*_self_), _56857_data.get()._field_expr_tokens),_1b6560e27_build_call_generics(&(*_self_), _56857_data.get()._field_generics_tokens),_1b6560b19_build_args(&(*_self_), _56857_data.get()._field_args_tokens),jule::Ptr<_1d0761c13_ScopeTree>()));
}



inline jule::Any _1b6561631_build_parentheses_range(_1b655ba27_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _57747_tokens) {
	jule::Ptr<_1d0747985_Token> _57817_token = _57747_tokens[0LL];
	{
		auto &_match_expr{ _57817_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1a89d4276:;
			{
				{
					auto &_match_expr{ _57817_token.get()._field_kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1a89d4e7a:;
						{
							jule::Ptr<_1d075c5c1_CastExpr> _58325_expr = _1b6560443_try_build_cast(&(*_self_), _57747_tokens);
							if ((_58325_expr != nullptr)) {
								return jule::Any(_58325_expr);
							}
						}
					}
					_match_end_1a89d5189:;
				}
			}
		}
		_match_end_1a89d48a3:;
	}
	jule::Ptr<_1b655a5c5_CallData> _59017_data = _1b655a938_get_call_data(_57747_tokens);
	if ((_59017_data.get()._field_expr_tokens.len() == 0LL)) {
		return jule::Any(_1b6560146_build_between_parentheses(&(*_self_), _59017_data.get()._field_args_tokens));
	}
	return jule::Any(_1b65612ce_build_fn_call(&(*_self_), _57817_token,_59017_data));
}



inline jule::Ptr<_1d075bb31_UnsafeExpr> _1b656192d_build_unsafe_expr(_1b655ba27_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>> _60140_tokens) {
	jule::Ptr<_1d0747985_Token> _60217_token = _60140_tokens[0LL];
	_60140_tokens=_60140_tokens.slice(1LL);
	jule::I64 _60417_i = 0LL;
	jule::Slice<jule::Ptr<_1d0747985_Token>> _60517_range_tokens = _1b656899b_range(_60417_i,jule::Str("{", 1),jule::Str("}", 1),_60140_tokens);
	if ((_60517_range_tokens.len() == 0LL)) {
		_1b655c31e_push_err(&(*_self_), _60140_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_ptr<_1d075bb31_UnsafeExpr>(_1d075bb31_UnsafeExpr(_60217_token,_1b6566405_build_from_tokens(&(*_self_), _60517_range_tokens)));
}



inline jule::Ptr<_1d0763709_FnDecl> _1b6561c3b_build_anon_fn(_1b655ba27_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _61637_tokens) {
	jule::Ptr<_1d0763709_FnDecl> _61717_f = _1b657192c_build_fn((*_self_)._field_p, _61637_tokens,false,false);
	if ((!(_1d0763a5b_is_anon(_61717_f.ptr())))) {
		_1b655c31e_push_err(&(*_self_), _61717_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1b655c63d_push_suggestion(&(*_self_), jule::Str("anonymous function expected, remove identifier of function", 58),jule::Slice<jule::Any>());
	}
	return _61717_f;
}



inline jule::Any _1b6562049_build_unsafe(_1b655ba27_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _62536_tokens) {
	{
		auto &_match_expr{ _62536_tokens[1LL].get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1a89de4e5:;
			{
				return jule::Any(_1b6561c3b_build_anon_fn(&(*_self_), _62536_tokens));
			}
		}
		else {
			_case_begin_1a89dd9bc:;
			{
				return jule::Any(_1b656192d_build_unsafe_expr(&(*_self_), _62536_tokens));
			}
		}
		_match_end_1a89dde0c:;
	}
}



inline void _1b6562412_push_range_lit_part(_1b655ba27_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>> _63542_part,jule::Ptr<_1d0747985_Token> _6369_error_token,jule::Slice<jule::Slice<jule::Ptr<_1d0747985_Token>>>& _63635_parts) {
	if ((_63542_part.len() == 0LL)) {
		_1b655c31e_push_err(&(*_self_), _6369_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1b655c63d_push_suggestion(&(*_self_), jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;
	}
	_63635_parts = jule::alloc_for_append(_63635_parts,1);_63635_parts.__push(_63542_part);
}



inline jule::Slice<jule::Slice<jule::Ptr<_1d0747985_Token>>> _1b6562764_get_brace_range_lit_expr_parts(_1b655ba27_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>> _64653_tokens) {
	if ((_64653_tokens.len() < 2LL)) {
		return nullptr;
	}
	jule::Slice<jule::Slice<jule::Ptr<_1d0747985_Token>>> _65217_parts = nullptr;
	jule::I64 _65417_last = 0LL;
	jule::I64 _65517_range_n = 0LL;
	_64653_tokens=_64653_tokens.slice(1LL,(_64653_tokens.len() - 1LL));
	{
		auto &expr = _64653_tokens;
		auto it = expr.begin();
		_iter_begin_1a89e460a:;
		if (it != expr.end()) {
			jule::I64 _1a89e4808_i = it - expr.begin();
			jule::Ptr<_1d0747985_Token> _1a89e48e6_token = *it;
			{
				if (_1a89e48e6_token.get()._field_id == static_cast<jule::U64>(3LLU)) {
					{
						auto &_match_expr{ _1a89e48e6_token.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1a89e582b:;
							{
								(_65517_range_n)++;
							}
						}
						else {
							_case_begin_1a89e5221:;
							{
								(_65517_range_n)--;
							}
						}
						_match_end_1a89e54c9:;
					}
				}
				if ((_65517_range_n > 0LL) || (_1a89e48e6_token.get()._field_id != static_cast<jule::U64>(8LLU))) {
					goto _iter_next_1a89e460a;
				}
				_1b6562412_push_range_lit_part(&(*_self_), _64653_tokens.slice(_65417_last,_1a89e4808_i),_1a89e48e6_token,_65217_parts);
				_65417_last=static_cast<jule::I64>((_1a89e4808_i + 1LL));
			}
			_iter_next_1a89e460a:;
			++it;
			_1a89e4808_i++;
			goto _iter_begin_1a89e460a;
		}
		_iter_end_1a89e460a:;
	}
	if (_65417_last < static_cast<jule::I64>(static_cast<jule::I64>(_64653_tokens.len()))) {
		if ((_65417_last == 0LL)) {
			if ((_64653_tokens.len() > 0LL)) {
				_1b6562412_push_range_lit_part(&(*_self_), _64653_tokens.slice(_65417_last),_64653_tokens[_65417_last],_65217_parts);
			}
		} else {
			_1b6562412_push_range_lit_part(&(*_self_), _64653_tokens.slice(_65417_last),_64653_tokens[(_65417_last - 1LL)],_65217_parts);
		}
	}
	return _65217_parts;
}



inline jule::Ptr<_1d075d193_FieldExprPair> _1b6562a61_build_field_expr_pair(_1b655ba27_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>> _68844_tokens) {
	if (((_68844_tokens.len() - 2LL) == 0LL)) {
		_1b655c31e_push_err(&(*_self_), _68844_tokens[1LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1d075d193_FieldExprPair> _69317_pair = jule::new_ptr<_1d075d193_FieldExprPair>(_1d075d193_FieldExprPair(_68844_tokens[0LL],jule::Ptr<_1d075b14c_Expr>()));
	_68844_tokens=_68844_tokens.slice(2LL);
	_69317_pair.get()._field_expr=_1b6566405_build_from_tokens(&(*_self_), _68844_tokens);
	return _69317_pair;
}



inline jule::Ptr<_1d075b14c_Expr> _1b6562d6e_build_struct_lit_expr(_1b655ba27_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _70145_tokens) {
	jule::Ptr<_1d0747985_Token> _70217_token = _70145_tokens[0LL];
	if ((_70217_token.get()._field_id == static_cast<jule::U64>(2LLU)) && (_70145_tokens.len() > 1LL)) {
		_70217_token=_70145_tokens[1LL];
		if (_70217_token.get()._field_id == static_cast<jule::U64>(11LLU)) {
			return jule::new_ptr<_1d075b14c_Expr>(_1d075b14c_Expr(_70217_token,_70145_tokens[(_70145_tokens.len() - 1LL)],jule::Bool(),jule::Any(jule::Any(_1b6562a61_build_field_expr_pair(&(*_self_), _70145_tokens)))));
		}
	}
	return _1b6566405_build_from_tokens(&(*_self_), _70145_tokens);
}



inline jule::Slice<jule::Ptr<_1d075b14c_Expr>> _1b656317c_build_struct_lit_exprs(_1b655ba27_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _71646_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1d0747985_Token>>> _71717_parts = _1b6562764_get_brace_range_lit_expr_parts(&(*_self_), _71646_tokens);
	if ((_71717_parts.len() == 0LL)) {
		return nullptr;
	}
	jule::Slice<jule::Ptr<_1d075b14c_Expr>> _72217_pairs = jule::Slice<jule::Ptr<_1d075b14c_Expr>>::alloc(0LL,static_cast<jule::I64>(_71717_parts.len()));
	{
		auto &expr = _71717_parts;
		auto it = expr.begin();
		_iter_begin_1a8a016a0:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1d0747985_Token>> _1a8a0120a_part = *it;
			{
				_72217_pairs = jule::alloc_for_append(_72217_pairs,1);_72217_pairs.__push(_1b6562d6e_build_struct_lit_expr(&(*_self_), _1a8a0120a_part));
			}
			_iter_next_1a8a016a0:;
			++it;
			goto _iter_begin_1a8a016a0;
		}
		_iter_end_1a8a016a0:;
	}
	return _72217_pairs;
}



inline jule::Ptr<_1d075d4b2_StructLit> _1b65634ce_build_typed_struct_literal(_1b655ba27_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>> _72949_tokens) {
	jule::I64 _73017_i = 0LL;
	jule::Ptr<_1d0759c1c_TypeDecl> _73118_t;
	jule::Bool _73121_ok;
	std::tie(_73118_t,_73121_ok) = _1b656c708_build_type((*_self_)._field_p, _72949_tokens,(&(_73017_i)),true);
	if ((!(_73121_ok))) {
		return nullptr;
	} else if (_73017_i >= static_cast<jule::I64>(static_cast<jule::I64>(_72949_tokens.len()))) {
		_1b655c31e_push_err(&(*_self_), _72949_tokens[_73017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	_72949_tokens=_72949_tokens.slice(_73017_i);
	jule::Ptr<_1d0747985_Token> _74013_token = _72949_tokens[0LL];
	if ((_74013_token.get()._field_id != static_cast<jule::U64>(3LLU)) || (_74013_token.get()._field_kind != jule::Str("{", 1))) {
		_1b655c31e_push_err(&(*_self_), _74013_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_ptr<_1d075d4b2_StructLit>(_1d075d4b2_StructLit(_72949_tokens[(_72949_tokens.len() - 1LL)],_73118_t,_1b656317c_build_struct_lit_exprs(&(*_self_), _72949_tokens)));
}



inline jule::Ptr<_1d075b14c_Expr> _1b65637cb_build_brace_lit_part(_1b655ba27_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _75344_tokens) {
	jule::Slice<jule::Ptr<_1d0747985_Token>> _75418_l;
	jule::Slice<jule::Ptr<_1d0747985_Token>> _75425_r;
	std::tie(_75418_l,_75425_r) = _1b655aebb_split_colon(_75344_tokens);
	if ((_75418_l != nullptr)) {
		return jule::new_ptr<_1d075b14c_Expr>(_1d075b14c_Expr(_75344_tokens[0LL],jule::Ptr<_1d0747985_Token>(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_1d075d9bd_KeyValPair>(_1d075d9bd_KeyValPair(_1b6566405_build_from_tokens(&(*_self_), _75418_l),_1b6566405_build_from_tokens(&(*_self_), _75425_r),_75344_tokens[_75418_l.len()]))))));
	}
	return _1b6566405_build_from_tokens(&(*_self_), _75344_tokens);
}



inline jule::Ptr<_1d075d69e_BraceLit> _1b6563ad9_build_brace_lit(_1b655ba27_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _76939_tokens) {
	jule::Ptr<_1d075d69e_BraceLit> _77017_lit = jule::new_ptr<_1d075d69e_BraceLit>(_1d075d69e_BraceLit(_76939_tokens[0LL],_76939_tokens[(_76939_tokens.len() - 1LL)],jule::Slice<jule::Ptr<_1d075b14c_Expr>>()));
	jule::Slice<jule::Slice<jule::Ptr<_1d0747985_Token>>> _77517_parts = _1b6562764_get_brace_range_lit_expr_parts(&(*_self_), _76939_tokens);
	if ((_77517_parts == nullptr)) {
		return _77017_lit;
	}
	_77017_lit.get()._field_exprs=jule::Slice<jule::Ptr<_1d075b14c_Expr>>::alloc(0LL,static_cast<jule::I64>(_77517_parts.len()));
	{
		auto &expr = _77517_parts;
		auto it = expr.begin();
		_iter_begin_1a8a0b644:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1d0747985_Token>> _1a8a0ba40_part = *it;
			{
				_77017_lit.get()._field_exprs = jule::alloc_for_append(_77017_lit.get()._field_exprs,1);_77017_lit.get()._field_exprs.__push(_1b65637cb_build_brace_lit_part(&(*_self_), _1a8a0ba40_part));
			}
			_iter_next_1a8a0b644:;
			++it;
			goto _iter_begin_1a8a0b644;
		}
		_iter_end_1a8a0b644:;
	}
	return _77017_lit;
}



inline jule::Any _1b6563de7_build_brace_range(_1b655ba27_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _78841_tokens) {
	jule::Slice<jule::Ptr<_1d0747985_Token>> _78918_expr_tokens;
	jule::I64 _78931_range_n;
	std::tie(_78918_expr_tokens,_78931_range_n) = _1b655b7e6_get_range_expr_tokens(_78841_tokens);
	{
		
		if ((_78918_expr_tokens.len() == 0LL)) {
			_case_begin_1a8a0daec:;
			{
				return jule::Any(_1b6563ad9_build_brace_lit(&(*_self_), _78841_tokens));
			}
		}
		else if ((_78931_range_n > 0LL)) {
			_case_begin_1a8a0db74:;
			{
				_1b655c31e_push_err(&(*_self_), _78841_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return jule::Any(nullptr);
			}
		}
		_match_end_1a8a0da53:;
	}
	jule::Ptr<_1d0747985_Token> _80013_else_token = _78918_expr_tokens[(_78918_expr_tokens.len() - 1LL)];
	if (_78918_expr_tokens[(_78918_expr_tokens.len() - 1LL)].get()._field_id == static_cast<jule::U64>(17LLU)) {
		_78918_expr_tokens=_78918_expr_tokens.slice(0LL,(_78918_expr_tokens.len() - 1LL));
		jule::Any _80321_d = _1b6565cd9_build(&(*_self_), _78918_expr_tokens);
		if (_80321_d == jule::Any(jule::Any(nullptr))) {
			return jule::Any(nullptr);
		}
		{
			auto &_match_expr{ _80321_d };
			
			if (_match_expr.type_is<jule::Ptr<_1d075cd74_FnCallExpr>>()) {
				_case_begin_1a8a13041:;
				{
					_78841_tokens=_78841_tokens.slice((_78918_expr_tokens.len() + 1LL));
					jule::I64 _81025_i = 0LL;
					jule::Slice<jule::Ptr<_1d0747985_Token>> _81125_range_tokens = _1b656899b_range(_81025_i,jule::Str("{", 1),jule::Str("}", 1),_78841_tokens);
					jule::Ptr<_1d075cd74_FnCallExpr> _81225_model = _80321_d.operator jule::Ptr<_1d075cd74_FnCallExpr>();
					if (_1d075d061_ignored(_81225_model.ptr())) {
						_1b655c31e_push_err(&(*_self_), _80013_else_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						_1b655c63d_push_suggestion(&(*_self_), jule::Str("just ignore exceptional or handle it but you cannot do both at same time", 72),jule::Slice<jule::Any>());
					}
					_81225_model.get()._field_exception=_1b656bd56_build_scope((*_self_)._field_p, _81125_range_tokens,_78841_tokens[(_81025_i - 1LL)]);
					return _80321_d;
				}
			}
			else {
				_case_begin_1a8a11a78:;
				{
					_1b655c31e_push_err(&(*_self_), _78918_expr_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return jule::Any(nullptr);
				}
			}
			_match_end_1a8a11d0e:;
		}
	}
	{
		auto &_match_expr{ _78918_expr_tokens[0LL].get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1a8a17133:;
			{
				return _1b6562049_build_unsafe(&(*_self_), _78841_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1a8a17199:;
			{
				return jule::Any(_1b6561c3b_build_anon_fn(&(*_self_), _78841_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1a8a17210:;
			{
				return jule::Any(_1b65634ce_build_typed_struct_literal(&(*_self_), _78841_tokens));
			}
		}
		else {
			_case_begin_1a8a0d976:;
			{
				_1b655c31e_push_err(&(*_self_), _78918_expr_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return jule::Any(nullptr);
			}
		}
		_match_end_1a8a16ebd:;
	}
}



inline jule::Slice<jule::Slice<jule::Ptr<_1d0747985_Token>>> _1b6564205_get_enumerable_parts(_1b655ba27_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>> _84043_tokens) {
	_84043_tokens=_84043_tokens.slice(1LL,(_84043_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_1d0747985_Token>>> _84218_parts;
	jule::Slice<_1d0019224_Log> _84225_errors;
	std::tie(_84218_parts,_84225_errors) = _1b6569172_parts(_84043_tokens,static_cast<jule::U64>(8LLU),true);
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_84225_errors);
	return _84218_parts;
}



inline jule::Ptr<_1d075dbaa_SliceExpr> _1b6564513_build_slice(_1b655ba27_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>> _84734_tokens) {
	jule::Ptr<_1d075dbaa_SliceExpr> _84817_slc = jule::new_ptr<_1d075dbaa_SliceExpr>(_1d075dbaa_SliceExpr(_84734_tokens[0LL],_84734_tokens[(_84734_tokens.len() - 1LL)],jule::Slice<jule::Ptr<_1d075b14c_Expr>>()));
	jule::Slice<jule::Slice<jule::Ptr<_1d0747985_Token>>> _85317_parts = _1b6564205_get_enumerable_parts(&(*_self_), _84734_tokens);
	if ((_85317_parts.len() == 0LL)) {
		return _84817_slc;
	}
	_84817_slc.get()._field_exprs=jule::Slice<jule::Ptr<_1d075b14c_Expr>>::alloc(0LL,static_cast<jule::I64>(_85317_parts.len()));
	{
		auto &expr = _85317_parts;
		auto it = expr.begin();
		_iter_begin_1a8a1d4e1:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1d0747985_Token>> _1a8a1dbc8_p = *it;
			{
				if ((_1a8a1dbc8_p.len() == 0LL)) {
					goto _iter_next_1a8a1d4e1;
				}
				_84817_slc.get()._field_exprs = jule::alloc_for_append(_84817_slc.get()._field_exprs,1);_84817_slc.get()._field_exprs.__push(_1b6566405_build_from_tokens(&(*_self_), _1a8a1dbc8_p));
			}
			_iter_next_1a8a1d4e1:;
			++it;
			goto _iter_begin_1a8a1d4e1;
		}
		_iter_end_1a8a1d4e1:;
	}
	return _84817_slc;
}



inline jule::Ptr<_1d075e4a2_IndexingExpr> _1b6564964_build_indexing(_1b655ba27_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>> _86937_expr_tokens,jule::Slice<jule::Ptr<_1d0747985_Token>> _87013_tokens,jule::Ptr<_1d0747985_Token> _87035_error_token) {
	jule::Ptr<_1d0747985_Token> _87117_end = _87013_tokens[(_87013_tokens.len() - 1LL)];
	_87013_tokens=_87013_tokens.slice(1LL,(_87013_tokens.len() - 1LL));
	if ((_87013_tokens.len() == 0LL)) {
		_1b655c31e_push_err(&(*_self_), _87035_error_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1d075b14c_Expr> _87717_expr = _1b6566405_build_from_tokens(&(*_self_), _86937_expr_tokens);
	if ((_87717_expr == nullptr)) {
		return nullptr;
	}
	jule::Ptr<_1d075b14c_Expr> _88117_index = _1b6566405_build_from_tokens(&(*_self_), _87013_tokens);
	if ((_88117_index == nullptr)) {
		return nullptr;
	}
	return jule::new_ptr<_1d075e4a2_IndexingExpr>(_1d075e4a2_IndexingExpr(_87035_error_token,_87117_end,_87717_expr,_88117_index));
}



inline jule::Ptr<_1d075eaac_SlicingExpr> _1b6565008_build_slicing(_1b655ba27_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _89337_expr_tokens,jule::Slice<jule::Ptr<_1d0747985_Token>>& _89365_slicing_tokens,jule::I64& _89410_colon,jule::Ptr<_1d0747985_Token>& _89427_error_token,jule::Ptr<_1d0747985_Token> _89452_end) {
	jule::Ptr<_1d075eaac_SlicingExpr> _89517_slc = jule::new_ptr<_1d075eaac_SlicingExpr>(_1d075eaac_SlicingExpr(_89427_error_token,_89452_end,_1b6566405_build_from_tokens(&(*_self_), _89337_expr_tokens),jule::Ptr<_1d075b14c_Expr>(),jule::Ptr<_1d075b14c_Expr>()));
	jule::Slice<jule::Ptr<_1d0747985_Token>> _90117_start_expr_tokens = _89365_slicing_tokens.slice(0LL,_89410_colon);
	if ((_90117_start_expr_tokens.len() > 0LL)) {
		_89517_slc.get()._field_start=_1b6566405_build_from_tokens(&(*_self_), _90117_start_expr_tokens);
	}
	jule::Slice<jule::Ptr<_1d0747985_Token>> _90617_to_expr_tokens = _89365_slicing_tokens.slice((_89410_colon + 1LL));
	if ((_90617_to_expr_tokens.len() > 0LL)) {
		_89517_slc.get()._field_to=_1b6566405_build_from_tokens(&(*_self_), _90617_to_expr_tokens);
	}
	return _89517_slc;
}



inline jule::Any _1b6565316_build_bracket_range(_1b655ba27_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>> _91442_tokens) {
	jule::Ptr<_1d0747985_Token> _91517_error_token = _91442_tokens[0LL];
	jule::Slice<jule::Ptr<_1d0747985_Token>> _91618_expr_tokens;
	jule::I64 _91631_range_n;
	std::tie(_91618_expr_tokens,_91631_range_n) = _1b655b7e6_get_range_expr_tokens(_91442_tokens);
	{
		
		if ((_91618_expr_tokens.len() == 0LL)) {
			_case_begin_1a8a2940e:;
			{
				return jule::Any(_1b6564513_build_slice(&(*_self_), _91442_tokens));
			}
		}
		else if ((_91618_expr_tokens.len() == 0LL) || (_91631_range_n > 0LL)) {
			_case_begin_1a8a29486:;
			{
				_1b655c31e_push_err(&(*_self_), _91517_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return jule::Any(nullptr);
			}
		}
		_match_end_1a8a29365:;
	}
	_91442_tokens=_91442_tokens.slice(_91618_expr_tokens.len());
	jule::I64 _93417_i = 0LL;
	jule::Slice<jule::Ptr<_1d0747985_Token>> _93518_slicing_tokens;
	jule::I64 _93534_colon;
	std::tie(_93518_slicing_tokens,_93534_colon) = _1b657a6a0_split_map_range(_91442_tokens,_93417_i);
	if ((_93534_colon != -1LL)) {
		return jule::Any(_1b6565008_build_slicing(&(*_self_), _91618_expr_tokens,_93518_slicing_tokens,_93534_colon,_91517_error_token,_91442_tokens[(_91442_tokens.len() - 1LL)]));
	}
	return jule::Any(_1b6564964_build_indexing(&(*_self_), _91618_expr_tokens,_91442_tokens,_91517_error_token));
}



inline jule::Any _1b6565624_build_data(_1b655ba27_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _94234_tokens) {
	{
		auto _match_expr{ _94234_tokens.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1a8a2dd92:;
			{
				return jule::Any(nullptr);
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1a8a2de08:;
			{
				return _1b655d375_build_single(&(*_self_), _94234_tokens[0LL]);
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1a8a2de6e:;
			{
				if (_94234_tokens[0LL].get()._field_id == static_cast<jule::U64>(31LLU)) {
					return jule::Any(_1b655d683_build_cpp_linked_ident(&(*_self_), _94234_tokens));
				}
			}
		}
		_match_end_1a8a2db94:;
	}
	jule::Ptr<_1d0747985_Token> _95417_token = _94234_tokens[0LL];
	{
		auto &_match_expr{ _95417_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1a8a2ded5:;
			{
				if ((_94234_tokens.len() > 1LL) && (_95417_token.get()._field_kind == jule::Str("*", 1))) {
					_95417_token=_94234_tokens[1LL];
					if ((_95417_token.get()._field_id == static_cast<jule::U64>(1LLU)) || (_95417_token.get()._field_id == static_cast<jule::U64>(35LLU))) {
						return jule::Any(_1b655e3ba_build_type(&(*_self_), _94234_tokens));
					}
				}
				return jule::Any(_1b655d991_build_unary(&(*_self_), _94234_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1a8a3124b:;
			{
				if ((_94234_tokens.len() < 3LL)) {
					goto _match_end_1a8a3113b;
				}
				if ((_94234_tokens.len() > 3LL)) {
					jule::Ptr<_1d0747985_Token> _97221_t = _94234_tokens[(_94234_tokens.len() - 1LL)];
					if ((_97221_t.get()._field_id == static_cast<jule::U64>(3LLU)) && (_97221_t.get()._field_kind == jule::Str(")", 1))) {
						goto _match_end_1a8a3113b;
					}
				}
				jule::Ptr<_1d0747985_Token> _97817_next = _94234_tokens[1LL];
				if ((_97817_next.get()._field_id != static_cast<jule::U64>(3LLU)) || (_97817_next.get()._field_kind != jule::Str("]", 1))) {
					goto _match_end_1a8a3113b;
				}
				return jule::Any(_1b655e3ba_build_type(&(*_self_), _94234_tokens));
			}
		}
		_match_end_1a8a3113b:;
	}
	_95417_token=_94234_tokens[(_94234_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _95417_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1a8a312b2:;
			{
				return _1b655e6c8_build_sub_ident(&(*_self_), _94234_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1a8a36b58:;
			{
				return jule::Any(_1b655e3ba_build_type(&(*_self_), _94234_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1a8a36bbe:;
			{
				return _1b655ece4_build_op_right(&(*_self_), _94234_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1a8a36c35:;
			{
				{
					auto &_match_expr{ _95417_token.get()._field_kind };
					
					if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1a8a38880:;
						{
							return _1b6561631_build_parentheses_range(&(*_self_), _94234_tokens);
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1a8a38929:;
						{
							return _1b6563de7_build_brace_range(&(*_self_), _94234_tokens);
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1a8a38990:;
						{
							return _1b6565316_build_bracket_range(&(*_self_), _94234_tokens);
						}
					}
					_match_end_1a8a38819:;
				}
			}
		}
		_match_end_1a8a36a7b:;
	}
	_1b655c31e_push_err(&(*_self_), _95417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return jule::Any(nullptr);
}



inline jule::Ptr<_1d075cb87_BinopExpr> _1b65659cb_build_binop(_1b655ba27_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _100935_tokens,jule::I64 _100953_i) {
	jule::Slice<jule::Ptr<_1d0747985_Token>> _101017_left_tokens = _100935_tokens.slice(0LL,_100953_i);
	jule::Slice<jule::Ptr<_1d0747985_Token>> _101117_right_tokens = _100935_tokens.slice((_100953_i + 1LL));
	if ((_101017_left_tokens.len() == 0LL)) {
		_1b655c31e_push_err(&(*_self_), _100935_tokens[_100953_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1b655c63d_push_suggestion(&(*_self_), jule::Str("left operand expected for binary operator", 41),jule::Slice<jule::Any>());
		return nullptr;
	}
	if ((_101117_right_tokens.len() == 0LL)) {
		_1b655c31e_push_err(&(*_self_), _100935_tokens[_100953_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1b655c63d_push_suggestion(&(*_self_), jule::Str("right operand expected for binary operator", 42),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_ptr<_1d075cb87_BinopExpr>(_1d075cb87_BinopExpr(_1b6566405_build_from_tokens(&(*_self_), _101017_left_tokens),_1b6566405_build_from_tokens(&(*_self_), _101117_right_tokens),_100935_tokens[_100953_i]));
}



inline jule::Any _1b6565cd9_build(_1b655ba27_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _102929_tokens) {
	jule::I64 _103013_i = _1b655b2a7_find_lowest_prec_op(_102929_tokens);
	if ((_103013_i == -1LL)) {
		return _1b6565624_build_data(&(*_self_), _102929_tokens);
	}
	return jule::Any(_1b65659cb_build_binop(&(*_self_), _102929_tokens,_103013_i));
}



inline jule::Any _1b65660e7_build_kind(_1b655ba27_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _103734_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1d0747985_Token>>> _103818_parts;
	jule::Slice<_1d0019224_Log> _103825_errors;
	std::tie(_103818_parts,_103825_errors) = _1b6569172_parts(_103734_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_103825_errors != nullptr)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_103825_errors);
		return jule::Any(nullptr);
	} else if ((_103818_parts.len() > 1LL)) {
		return jule::Any(_1b655c94b_build_tuple(&(*_self_), _103818_parts));
	}
	return _1b6565cd9_build(&(*_self_), _103734_tokens);
}



inline jule::Ptr<_1d075b14c_Expr> _1b6566405_build_from_tokens(_1b655ba27_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>> _104840_tokens) {
	if ((_104840_tokens.len() == 0LL)) {
		return nullptr;
	}
	return jule::new_ptr<_1d075b14c_Expr>(_1d075b14c_Expr(_104840_tokens[0LL],_104840_tokens[(_104840_tokens.len() - 1LL)],jule::Bool(),_1b65660e7_build_kind(&(*_self_), _104840_tokens)));
}







std::ostream &operator<<(std::ostream &_Stream, _1b655ba27_ExprBuilder _Src) {
	_Stream << "ExprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b6566d51_AssignInfo _Src) {
	_Stream << "AssignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _1b656a6b2_stop(_1b656a382_Parser* _self_) {
	(*_self_)._field_ast=nullptr;
}



inline jule::Bool _1b656a926_stopped(_1b656a382_Parser* _self_) {
	return ((*_self_)._field_ast == nullptr);
}



inline void _1b656acde_push_err(_1b656a382_Parser* _self_,jule::Ptr<_1d0747985_Token> _23327_token,jule::Str _23342_fmt,jule::Slice<jule::Any> _23355_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1b6569837_compiler_err(_23327_token,_23342_fmt,_23355_args));
}



inline void _1b656b10d_push_suggestion(_1b656a382_Parser* _self_,jule::Str _23834_fmt,jule::Slice<jule::Any> _23847_args) {
	{
		_1b6569b89_push_suggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_23834_fmt,_23847_args);
	}
}



inline jule::Ptr<_1d075b14c_Expr> _1b656b41b_build_expr(jule::Ptr<_1b656a382_Parser> _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _24235_tokens) {
	jule::Ptr<_1b655ba27_ExprBuilder> _24317_ep = jule::new_ptr<_1b655ba27_ExprBuilder>(_1b655ba27_ExprBuilder(_self_));
	jule::Ptr<_1d075b14c_Expr> _24617_expr = _1b6566405_build_from_tokens(_24317_ep.ptr(), _24235_tokens);
	return _24617_expr;
}



inline jule::Ptr<_1d06c9ecd_Directive> _1b656b729_build_directive(_1b656a382_Parser* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>> _25038_tokens) {
	if ((_25038_tokens.len() == 1LL)) {
		_1b656acde_push_err(&(*_self_), _25038_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_25038_tokens[1LL].get()._field_column != static_cast<jule::I64>(static_cast<jule::I64>((_25038_tokens[0LL].get()._field_column + 1LL)))) {
		_1b656acde_push_err(&(*_self_), _25038_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_ptr<_1d06c9ecd_Directive>(_1d06c9ecd_Directive(_25038_tokens[1LL],_25038_tokens.slice(2LL)));
}



inline void _1b656b99e_push_directive(_1b656a382_Parser* _self_,jule::Ptr<_1d06c9ecd_Directive> _26737_d) {
	if ((_26737_d == nullptr)) {
		return;
	}
	{
		auto &expr = (*_self_)._field_directives;
		auto it = expr.begin();
		_iter_begin_1a8a4dca2:;
		if (it != expr.end()) {
			jule::Ptr<_1d06c9ecd_Directive> _1a8a4d7a7_pd = *it;
			{
				if (_26737_d.get()._field_tag.get()._field_kind == _1a8a4d7a7_pd.get()._field_tag.get()._field_kind) {
					return;
				}
			}
			_iter_next_1a8a4dca2:;
			++it;
			goto _iter_begin_1a8a4dca2;
		}
		_iter_end_1a8a4dca2:;
	}
	(*_self_)._field_directives = jule::alloc_for_append((*_self_)._field_directives,1);(*_self_)._field_directives.__push(_26737_d);
}



inline jule::Ptr<_1d0761c13_ScopeTree> _1b656bd56_build_scope(jule::Ptr<_1b656a382_Parser> _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _28136_tokens,jule::Ptr<_1d0747985_Token> _28158_end) {
	jule::Ptr<_1d0761c13_ScopeTree> _28217_s = _1b654c276_new_scope();
	_28217_s.get()._field_end=_28158_end;
	_1b654dc06_ScopeParser _28417_sp = _1b654dc06_ScopeParser(_self_,jule::Ptr<_1d0761c13_ScopeTree>(),jule::Slice<jule::Ptr<_1b654d3cb_Stmt>>(),jule::I64());
	_1b6559728_build(&_28417_sp, _28136_tokens,_28217_s);
	return _28217_s;
}



inline std::tuple<jule::Ptr<_1d0759c1c_TypeDecl>,jule::Bool> _1b656c2a7___build_type(jule::Ptr<_1b656a382_Parser> _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _29144_tokens,jule::I64* _29213_i,jule::Bool _29222_err) {
	_1b657ab78_TypeBuilder _29317_tb = _1b657ab78_TypeBuilder(_self_,_29144_tokens,_29213_i,_29222_err);
	jule::Ptr<_1d0759c1c_TypeDecl> _29918_decl;
	jule::Bool _29924_ok;
	std::tie(_29918_decl,_29924_ok) = _1b657e066_build(&_29317_tb);
	return std::make_tuple(_29918_decl,_29924_ok);
}



inline std::tuple<jule::Ptr<_1d0759c1c_TypeDecl>,jule::Bool> _1b656c708_build_type(jule::Ptr<_1b656a382_Parser> _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _30442_tokens,jule::I64* _30513_i,jule::Bool _30522_err) {
	jule::Ptr<_1d0747985_Token> _30613_token = _30442_tokens[(*(_30513_i))];
	jule::Ptr<_1d0759c1c_TypeDecl> _30718_t;
	jule::Bool _30721_ok;
	std::tie(_30718_t,_30721_ok) = _1b656c2a7___build_type(_self_, _30442_tokens,_30513_i,_30522_err);
	if (_30522_err && (!(_30721_ok))) {
		_1b656acde_push_err(_self_.ptr(), _30613_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
	}
	return std::make_tuple(_30718_t,_30721_ok);
}



inline jule::Ptr<_1d0767e5b_TypeAliasDecl> _1b656ca16_build_type_alias_decl(jule::Ptr<_1b656a382_Parser> _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _31446_tokens) {
	jule::I64 _31517_i = 1LL;
	if (_31517_i >= static_cast<jule::I64>(static_cast<jule::I64>(_31446_tokens.len()))) {
		_1b656acde_push_err(_self_.ptr(), _31446_tokens[(_31517_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1d0767e5b_TypeAliasDecl> _32017_tad = jule::new_ptr<_1d0767e5b_TypeAliasDecl>(_1d0767e5b_TypeAliasDecl(jule::Ptr<_1d0761c13_ScopeTree>(),jule::Bool(),jule::Bool(),_31446_tokens[1LL],_31446_tokens[1LL].get()._field_kind,jule::Ptr<_1d0759c1c_TypeDecl>()));
	jule::Ptr<_1d0747985_Token> _32417_token = _31446_tokens[_31517_i];
	if (_32417_token.get()._field_id != static_cast<jule::U64>(2LLU)) {
		_1b656acde_push_err(_self_.ptr(), _32417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1b656b10d_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	}
	(_31517_i)++;
	if (_31517_i >= static_cast<jule::I64>(static_cast<jule::I64>(_31446_tokens.len()))) {
		_1b656acde_push_err(_self_.ptr(), _31446_tokens[(_31517_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _32017_tad;
	}
	_32417_token=_31446_tokens[_31517_i];
	if (_32417_token.get()._field_id != static_cast<jule::U64>(11LLU)) {
		_1b656acde_push_err(_self_.ptr(), _31446_tokens[(_31517_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1b656b10d_push_suggestion(_self_.ptr(), jule::Str("expected colon \":\"", 18),jule::Slice<jule::Any>());
		return _32017_tad;
	}
	(_31517_i)++;
	if (_31517_i >= static_cast<jule::I64>(static_cast<jule::I64>(_31446_tokens.len()))) {
		_1b656acde_push_err(_self_.ptr(), _31446_tokens[(_31517_i - 1LL)],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return _32017_tad;
	}
	jule::Ptr<_1d0759c1c_TypeDecl> _34518_t;
	jule::Bool _34521_ok;
	std::tie(_34518_t,_34521_ok) = _1b656c708_build_type(_self_, _31446_tokens,(&(_31517_i)),true);
	_32017_tad.get()._field_kind=_34518_t;
	if (_34521_ok && (_31517_i < static_cast<jule::I64>(static_cast<jule::I64>(_31446_tokens.len())))) {
		_1b656acde_push_err(_self_.ptr(), _31446_tokens[_31517_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	return _32017_tad;
}



inline void _1b656cd79_build_var_type_and_expr(jule::Ptr<_1b656a382_Parser> _self_,jule::Ptr<_1d07646d8_VarDecl>& _35348_v,jule::Slice<jule::Ptr<_1d0747985_Token>>& _35366_tokens) {
	jule::I64 _35417_i = 0LL;
	jule::Ptr<_1d0747985_Token> _35517_tok = _35366_tokens[_35417_i];
	if (_35517_tok.get()._field_id == static_cast<jule::U64>(11LLU)) {
		(_35417_i)++;
		if ((_35417_i >= static_cast<jule::I64>(static_cast<jule::I64>(_35366_tokens.len()))) || ((_35366_tokens[_35417_i].get()._field_id == static_cast<jule::U64>(7LLU)) && (_35366_tokens[_35417_i].get()._field_kind == jule::Str("=", 1)))) {
			_1b656acde_push_err(_self_.ptr(), _35517_tok,jule::Str("type missing", 12),jule::Slice<jule::Any>());
			return;
		}
		jule::Ptr<_1d0759c1c_TypeDecl> _36322_t;
		jule::Bool _36325_ok;
		std::tie(_36322_t,_36325_ok) = _1b656c708_build_type(_self_, _35366_tokens,(&(_35417_i)),true);
		if (_36325_ok) {
			_35348_v.get()._field_kind=_36322_t;
			if (_35417_i >= static_cast<jule::I64>(static_cast<jule::I64>(_35366_tokens.len()))) {
				return;
			}
			_35517_tok=_35366_tokens[_35417_i];
		}
	}
	if (_35517_tok.get()._field_id == static_cast<jule::U64>(7LLU)) {
		if ((_35517_tok.get()._field_kind != jule::Str("=", 1))) {
			_1b656acde_push_err(_self_.ptr(), _35517_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return;
		}
		jule::Slice<jule::Ptr<_1d0747985_Token>> _37821_expr_tokens = _35366_tokens.slice((_35417_i + 1LL));
		if ((_37821_expr_tokens.len() == 0LL)) {
			_1b656acde_push_err(_self_.ptr(), _35517_tok,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return;
		}
		_35348_v.get()._field_expr=_1b656b41b_build_expr(_self_, _37821_expr_tokens);
	} else {
		_1b656acde_push_err(_self_.ptr(), _35517_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
}



inline void _1b656d187_build_var_common(jule::Ptr<_1b656a382_Parser> _self_,jule::Ptr<_1d07646d8_VarDecl>& _38941_v,jule::Slice<jule::Ptr<_1d0747985_Token>> _38958_tokens) {
	_38941_v.get()._field_token=_38958_tokens[0LL];
	if (_38941_v.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU)) {
		_1b656acde_push_err(_self_.ptr(), _38941_v.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1b656b10d_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;
	}
	_38941_v.get()._field_ident=_38941_v.get()._field_token.get()._field_kind;
	_38941_v.get()._field_kind=nullptr;
	if ((_38958_tokens.len() > 1LL)) {
		_38958_tokens=_38958_tokens.slice(1LL);
		_1b656cd79_build_var_type_and_expr(_self_, _38941_v,_38958_tokens);
	}
}



inline void _1b656d550_build_var_begin(_1b656a382_Parser* _self_,jule::Ptr<_1d07646d8_VarDecl>& _40439_v,jule::Ptr<jule::I64> _40456_i,jule::Slice<jule::Ptr<_1d0747985_Token>>& _40466_tokens) {
	jule::Ptr<_1d0747985_Token> _40513_tok = _40466_tokens[(*(_40456_i))];
	{
		auto &_match_expr{ _40513_tok.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(38LLU)) {
			_case_begin_1a8a728ca:;
			{
				_40439_v.get()._field_statically=true;
				goto _case_begin_1a8a72941;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1a8a72941:;
			{
				((*(_40456_i)))++;
				if ((*(_40456_i)) >= static_cast<jule::I64>(static_cast<jule::I64>(_40466_tokens.len()))) {
					_1b656acde_push_err(&(*_self_), _40513_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				if (_40466_tokens[(*(_40456_i))].get()._field_id == static_cast<jule::U64>(36LLU)) {
					_40439_v.get()._field_mutable=true;
					((*(_40456_i)))++;
				}
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1a8a71e07:;
			{
				((*(_40456_i)))++;
				_40439_v.get()._field_constant=true;
			}
		}
		else {
			_case_begin_1a8a717b9:;
			{
				_1b656acde_push_err(&(*_self_), _40513_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;
			}
		}
		_match_end_1a8a71d80:;
	}
	if ((*(_40456_i)) >= static_cast<jule::I64>(static_cast<jule::I64>(_40466_tokens.len()))) {
		_1b656acde_push_err(&(*_self_), _40513_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
}



inline jule::Ptr<_1d07646d8_VarDecl> _1b656d85d_build_var(jule::Ptr<_1b656a382_Parser> _self_,jule::Slice<jule::Ptr<_1d0747985_Token>> _43533_tokens) {
	jule::Ptr<jule::I64> _43617_i = jule::new_ptr<jule::I64>(0LL);
	jule::Ptr<_1d07646d8_VarDecl> _43717_v = jule::new_ptr<_1d07646d8_VarDecl>(_1d07646d8_VarDecl(jule::Ptr<_1d0761c13_ScopeTree>(),_43533_tokens[(*(_43617_i))],jule::Str(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Slice<jule::Ptr<_1d06c9ecd_Directive>>(),jule::Ptr<_1d0759c1c_TypeDecl>(),jule::Ptr<_1d075b14c_Expr>()));
	_1b656d550_build_var_begin(_self_.ptr(), _43717_v,_43617_i,_43533_tokens);
	if ((*(_43617_i)) >= static_cast<jule::I64>(static_cast<jule::I64>(_43533_tokens.len()))) {
		return nullptr;
	}
	_43533_tokens=_43533_tokens.slice((*(_43617_i)));
	if ((_43533_tokens[0LL].get()._field_id == static_cast<jule::U64>(7LLU)) && (_43533_tokens[0LL].get()._field_kind == jule::Str("&", 1))) {
		_43717_v.get()._field_reference=true;
		if ((_43533_tokens.len() == 1LL)) {
			return nullptr;
		}
		_43533_tokens=_43533_tokens.slice(1LL);
	}
	_1b656d187_build_var_common(_self_, _43717_v,_43533_tokens);
	return _43717_v;
}



inline jule::Ptr<_1d075ee64_GenericDecl> _1b656db6b_build_generic(_1b656a382_Parser* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _45737_tokens) {
	if ((_45737_tokens.len() > 1LL)) {
		_1b656acde_push_err(&(*_self_), _45737_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1d075ee64_GenericDecl> _46117_g = jule::new_ptr<_1d075ee64_GenericDecl>(_1d075ee64_GenericDecl(_45737_tokens[0LL],jule::Str()));
	if (_46117_g.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU)) {
		_1b656acde_push_err(&(*_self_), _46117_g.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1b656b10d_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	}
	_46117_g.get()._field_ident=_46117_g.get()._field_token.get()._field_kind;
	return _46117_g;
}



inline jule::Slice<jule::Ptr<_1d075ee64_GenericDecl>> _1b656e023_build_generics(_1b656a382_Parser* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _47238_tokens,jule::Ptr<_1d0747985_Token>& _47257_error_token) {
	if ((_47238_tokens.len() == 0LL)) {
		_1b656acde_push_err(&(*_self_), _47257_error_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Slice<jule::Slice<jule::Ptr<_1d0747985_Token>>> _47818_parts;
	jule::Slice<_1d0019224_Log> _47825_errors;
	std::tie(_47818_parts,_47825_errors) = _1b6569172_parts(_47238_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_47825_errors.len() > 0LL)) {
		(*_self_)._field_errors=jule::append((*_self_)._field_errors,_47825_errors);
		return nullptr;
	}
	jule::Slice<jule::Ptr<_1d075ee64_GenericDecl>> _48417_generics = jule::Slice<jule::Ptr<_1d075ee64_GenericDecl>>::alloc(0LL,static_cast<jule::I64>(_47818_parts.len()));
	{
		auto &expr = _47818_parts;
		auto it = expr.begin();
		_iter_begin_1a8a819e9:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1d0747985_Token>> _1a8a8108c_part = *it;
			{
				_48417_generics = jule::alloc_for_append(_48417_generics,1);_48417_generics.__push(_1b656db6b_build_generic(&(*_self_), _1a8a8108c_part));
			}
			_iter_next_1a8a819e9:;
			++it;
			goto _iter_begin_1a8a819e9;
		}
		_iter_end_1a8a819e9:;
	}
	return _48417_generics;
}



inline jule::Ptr<_1d07623d9_ParamDecl> _1b656e331_build_self_param(_1b656a382_Parser* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>> _49239_tokens) {
	if ((_49239_tokens.len() == 0LL)) {
		return nullptr;
	}
	jule::Ptr<_1d07623d9_ParamDecl> _49717_param = jule::new_ptr<_1d07623d9_ParamDecl>();
	jule::I64 _50017_i = 0LL;
	if (_49239_tokens[_50017_i].get()._field_id == static_cast<jule::U64>(36LLU)) {
		_49717_param.get()._field_mutable=true;
		(_50017_i)++;
		if (_50017_i >= static_cast<jule::I64>(static_cast<jule::I64>(_49239_tokens.len()))) {
			_1b656acde_push_err(&(*_self_), _49239_tokens[(_50017_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
	}
	if ((_49239_tokens[_50017_i].get()._field_kind == jule::Str("&", 1))) {
		_49717_param.get()._field_ident=jule::Str("&", 1);
		(_50017_i)++;
		if (_50017_i >= static_cast<jule::I64>(static_cast<jule::I64>(_49239_tokens.len()))) {
			_1b656acde_push_err(&(*_self_), _49239_tokens[(_50017_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
	}
	if (_49239_tokens[_50017_i].get()._field_id == static_cast<jule::U64>(28LLU)) {
		_49717_param.get()._field_ident+=jule::Str("self", 4);
		_49717_param.get()._field_token=_49239_tokens[_50017_i];
		(_50017_i)++;
		if (_50017_i < static_cast<jule::I64>(static_cast<jule::I64>(_49239_tokens.len()))) {
			_1b656acde_push_err(&(*_self_), _49239_tokens[_50017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		}
	}
	return _49717_param;
}



inline void _1b656e6e9_param_type_begin(_1b656a382_Parser* _self_,jule::Ptr<_1d07623d9_ParamDecl>& _53140_param,jule::I64& _53164_i,jule::Slice<jule::Ptr<_1d0747985_Token>>& _53173_tokens) {
	for (; _53164_i < static_cast<jule::I64>(static_cast<jule::I64>(_53173_tokens.len())); (_53164_i)++) {
		{
			jule::Ptr<_1d0747985_Token> _53317_token = _53173_tokens[_53164_i];
			if (_53317_token.get()._field_id != static_cast<jule::U64>(7LLU)) {
				return;
			} else if ((_53317_token.get()._field_kind != jule::Str("...", 3))) {
				return;
			}
			if (_53140_param.get()._field_variadic) {
				_1b656acde_push_err(&(*_self_), _53317_token,jule::Str("define is already variadic", 26),jule::Slice<jule::Any>());
				goto _iter_next_1a8a88cdc;
			}
			_53140_param.get()._field_variadic=true;
		}
	_iter_next_1a8a88cdc:;
	}
	_iter_end_1a8a88cdc:;
}



inline void _1b656ea18_build_param_type(jule::Ptr<_1b656a382_Parser> _self_,jule::Ptr<_1d07623d9_ParamDecl>& _54841_param,jule::Slice<jule::Ptr<_1d0747985_Token>>& _54865_tokens) {
	jule::I64 _54917_i = 0LL;
	_1b656e6e9_param_type_begin(_self_.ptr(), _54841_param,_54917_i,_54865_tokens);
	if (_54917_i >= static_cast<jule::I64>(static_cast<jule::I64>(_54865_tokens.len()))) {
		return;
	}
	std::tie(_54841_param.get()._field_kind,std::ignore) = _1b656c708_build_type(_self_, _54865_tokens,(&(_54917_i)),true);
	if (_54917_i < static_cast<jule::I64>(static_cast<jule::I64>(_54865_tokens.len()))) {
		_1b656acde_push_err(_self_.ptr(), _54865_tokens[_54917_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
}



inline void _1b656edd1_build_param_body(jule::Ptr<_1b656a382_Parser> _self_,jule::Ptr<_1d07623d9_ParamDecl>& _56141_param,jule::Ptr<jule::I64> _56164_i,jule::Slice<jule::Ptr<_1d0747985_Token>> _56177_tokens) {
	jule::Ptr<_1d0747985_Token> _56217_tok = _56177_tokens[(*(_56164_i))];
	_56141_param.get()._field_ident=_56217_tok.get()._field_kind;
	if (((*(_56164_i)) + 1LL) >= static_cast<jule::I64>(static_cast<jule::I64>(_56177_tokens.len()))) {
		return;
	} else if ((((_56177_tokens.len() - (*(_56164_i))) - 1LL) < 2LL)) {
		_1b656acde_push_err(_self_.ptr(), _56217_tok,jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return;
	}
	_56217_tok=_56177_tokens[((*(_56164_i)) + 1LL)];
	if (_56217_tok.get()._field_id != static_cast<jule::U64>(11LLU)) {
		_1b656ea18_build_param_type(_self_, _56141_param,_56177_tokens);
		return;
	}
	_56177_tokens=_56177_tokens.slice(((*(_56164_i)) + 2LL));
	_1b656ea18_build_param_type(_self_, _56141_param,_56177_tokens);
}



inline jule::Ptr<_1d07623d9_ParamDecl> _1b65701de_build_param(jule::Ptr<_1b656a382_Parser> _self_,jule::Slice<jule::Ptr<_1d0747985_Token>> _58235_tokens) {
	jule::Ptr<_1d07623d9_ParamDecl> _58317_param = jule::new_ptr<_1d07623d9_ParamDecl>(_1d07623d9_ParamDecl(_58235_tokens[0LL],jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1d0759c1c_TypeDecl>(),jule::Str()));
	if (_58317_param.get()._field_token.get()._field_id == static_cast<jule::U64>(36LLU)) {
		_58317_param.get()._field_mutable=true;
		if ((_58235_tokens.len() == 1LL)) {
			_1b656acde_push_err(_self_.ptr(), _58235_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		_58235_tokens=_58235_tokens.slice(1LL);
		_58317_param.get()._field_token=_58235_tokens[0LL];
	}
	if ((_58235_tokens.len() >= 3LL)) {
		if ((_58317_param.get()._field_token.get()._field_id == static_cast<jule::U64>(7LLU)) && (_58317_param.get()._field_token.get()._field_kind == jule::Str("&", 1))) {
			if ((_58235_tokens.len() == 1LL)) {
				_1b656acde_push_err(_self_.ptr(), _58235_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
			if ((_58235_tokens[1LL].get()._field_id == static_cast<jule::U64>(2LLU)) && (_58235_tokens[2LL].get()._field_id == static_cast<jule::U64>(11LLU))) {
				_58317_param.get()._field_reference=true;
				_58235_tokens=_58235_tokens.slice(1LL);
				_58317_param.get()._field_token=_58235_tokens[0LL];
			}
		}
	}
	if (_58317_param.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU)) {
		_58317_param.get()._field_ident=jule::Str("<anonymous>", 11);
		_1b656ea18_build_param_type(_self_, _58317_param,_58235_tokens);
	} else {
		jule::Ptr<jule::I64> _61921_i = jule::new_ptr<jule::I64>(0LL);
		_1b656edd1_build_param_body(_self_, _58317_param,_61921_i,_58235_tokens);
	}
	return _58317_param;
}



inline void _1b6570464_check_params(_1b656a382_Parser* _self_,jule::Slice<jule::Ptr<_1d07623d9_ParamDecl>>& _62636_params) {
	{
		auto &expr = _62636_params;
		auto it = expr.begin();
		_iter_begin_1a8a9c66e:;
		if (it != expr.end()) {
			jule::Ptr<_1d07623d9_ParamDecl> _1a8a9c718_param = *it;
			{
				if (_1d076274c_is_self(_1a8a9c718_param.ptr()) || (_1a8a9c718_param.get()._field_kind != nullptr)) {
					goto _iter_next_1a8a9c66e;
				}
				if ((_1a8a9c718_param.get()._field_token == nullptr)) {
					_1b656acde_push_err(&(*_self_), _1a8a9c718_param.get()._field_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
				} else {
					_1a8a9c718_param.get()._field_kind=jule::new_ptr<_1d0759c1c_TypeDecl>(_1d0759c1c_TypeDecl(_1a8a9c718_param.get()._field_token,jule::Any(jule::Any(jule::new_ptr<_1d0759e09_IdentTypeDecl>(_1d0759e09_IdentTypeDecl(_1a8a9c718_param.get()._field_token,_1a8a9c718_param.get()._field_token.get()._field_kind,jule::Bool(),jule::Slice<jule::Ptr<_1d0759c1c_TypeDecl>>()))))));
					_1a8a9c718_param.get()._field_ident=jule::Str("<anonymous>", 11);
				}
			}
			_iter_next_1a8a9c66e:;
			++it;
			goto _iter_begin_1a8a9c66e;
		}
		_iter_end_1a8a9c66e:;
	}
}



inline jule::Slice<jule::Ptr<_1d07623d9_ParamDecl>> _1b657081b_build_params(jule::Ptr<_1b656a382_Parser> _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _64637_tokens,jule::Bool _64655_method) {
	jule::Slice<jule::Slice<jule::Ptr<_1d0747985_Token>>> _64718_parts;
	jule::Slice<_1d0019224_Log> _64725_errs;
	std::tie(_64718_parts,_64725_errs) = _1b6569172_parts(_64637_tokens,static_cast<jule::U64>(8LLU),true);
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_64725_errs);
	if ((_64718_parts.len() == 0LL)) {
		return nullptr;
	}
	jule::Slice<jule::Ptr<_1d07623d9_ParamDecl>> _65317_params = nullptr;
	if (_64655_method && (_64718_parts.len() > 0LL)) {
		jule::Ptr<_1d07623d9_ParamDecl> _65521_param = _1b656e331_build_self_param(_self_.ptr(), _64718_parts[0LL]);
		if ((_65521_param != nullptr) && _1d076274c_is_self(_65521_param.ptr())) {
			_65317_params = jule::alloc_for_append(_65317_params,1);_65317_params.__push(_65521_param);
			_64718_parts=_64718_parts.slice(1LL);
		}
	}
	{
		auto &expr = _64718_parts;
		auto it = expr.begin();
		_iter_begin_1a8aa2a70:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1d0747985_Token>> _1a8aa4335_part = *it;
			{
				jule::Ptr<_1d07623d9_ParamDecl> _66321_param = _1b65701de_build_param(_self_, _1a8aa4335_part);
				if ((_66321_param != nullptr)) {
					_65317_params = jule::alloc_for_append(_65317_params,1);_65317_params.__push(_66321_param);
				}
			}
			_iter_next_1a8aa2a70:;
			++it;
			goto _iter_begin_1a8aa2a70;
		}
		_iter_end_1a8aa2a70:;
	}
	_1b6570464_check_params(_self_.ptr(), _65317_params);
	return _65317_params;
}



inline std::tuple<jule::Ptr<_1d075ae60_RetTypeDecl>,jule::Bool> _1b6570bc3_build_multi_ret_type(jule::Ptr<_1b656a382_Parser> _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _67345_tokens,jule::I64& _67368_i) {
	jule::Ptr<_1d075ae60_RetTypeDecl> _67378_t = jule::Ptr<_1d075ae60_RetTypeDecl>();
	jule::Bool _67395_ok = jule::Bool();
	_67378_t=jule::new_ptr<_1d075ae60_RetTypeDecl>();
	(_67368_i)++;
	if (_67368_i >= static_cast<jule::I64>(static_cast<jule::I64>(_67345_tokens.len()))) {
		(_67368_i)--;
		std::tie(_67378_t.get()._field_kind,_67395_ok) = _1b656c708_build_type(_self_, _67345_tokens,(&(_67368_i)),false);
		return std::make_tuple(_67378_t,_67395_ok);
	}
	(_67368_i)--;
	jule::Slice<jule::Ptr<_1d0747985_Token>> _68317_range_tokens = _1b656899b_range(_67368_i,jule::Str("(", 1),jule::Str(")", 1),_67345_tokens);
	jule::Slice<jule::Slice<jule::Ptr<_1d0747985_Token>>> _68518_parts;
	jule::Slice<_1d0019224_Log> _68525_errs;
	std::tie(_68518_parts,_68525_errs) = _1b6569172_parts(_68317_range_tokens,static_cast<jule::U64>(8LLU),true);
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_68525_errs);
	if ((_68518_parts.len() == 0LL)) {
		return std::make_tuple(_67378_t,_67395_ok);
	}
	jule::Slice<jule::Ptr<_1d0759c1c_TypeDecl>> _69117_types = jule::Slice<jule::Ptr<_1d0759c1c_TypeDecl>>::alloc(0LL,static_cast<jule::I64>(_68518_parts.len()));
	_67378_t.get()._field_idents=jule::Slice<jule::Ptr<_1d0747985_Token>>::alloc(0LL,static_cast<jule::I64>(_68518_parts.len()));
	{
		auto &expr = _68518_parts;
		auto it = expr.begin();
		_iter_begin_1a8aaa46d:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1d0747985_Token>> _1a8aaa5d3_part = *it;
			{
				jule::Ptr<_1d0747985_Token> _69421_token = _1a8aaa5d3_part[0LL];
				jule::I64 _69521_offset = 0LL;
				if ((_1a8aaa5d3_part.len() > 1LL)) {
					_69421_token=_1a8aaa5d3_part[1LL];
					if (_69421_token.get()._field_id == static_cast<jule::U64>(11LLU)) {
						_69521_offset=2LL;
						if ((_1a8aaa5d3_part.len() < 3LL)) {
							_1b656acde_push_err(_self_.ptr(), _69421_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
							goto _iter_next_1a8aaa46d;
						}
					}
				}
				_69421_token=_1a8aaa5d3_part[0LL];
				if ((_69521_offset != 2LL)) {
					jule::Ptr<_1d0747985_Token> _71125_new_token = jule::new_ptr<_1d0747985_Token>((*(_69421_token)));
					_71125_new_token.get()._field_kind=jule::Str("<anonymous>", 11);
					_67378_t.get()._field_idents = jule::alloc_for_append(_67378_t.get()._field_idents,1);_67378_t.get()._field_idents.__push(_71125_new_token);
				} else {
					_67378_t.get()._field_idents = jule::alloc_for_append(_67378_t.get()._field_idents,1);_67378_t.get()._field_idents.__push(_69421_token);
				}
				jule::Ptr<_1d0759c1c_TypeDecl> _71822_tk;
				std::tie(_71822_tk,std::ignore) = _1b656c708_build_type(_self_, _1a8aaa5d3_part,(&(_69521_offset)),true);
				if (_69521_offset < static_cast<jule::I64>(static_cast<jule::I64>(_1a8aaa5d3_part.len()))) {
					_1b656acde_push_err(_self_.ptr(), _1a8aaa5d3_part[_69521_offset],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				}
				_69117_types = jule::alloc_for_append(_69117_types,1);_69117_types.__push(_71822_tk);
			}
			_iter_next_1a8aaa46d:;
			++it;
			goto _iter_begin_1a8aaa46d;
		}
		_iter_end_1a8aaa46d:;
	}
	if ((_69117_types.len() > 1LL)) {
		_67378_t.get()._field_kind=jule::new_ptr<_1d0759c1c_TypeDecl>(_1d0759c1c_TypeDecl(_67345_tokens[0LL],jule::Any(jule::Any(jule::new_ptr<_1d075a6ac_TupleTypeDecl>(_1d075a6ac_TupleTypeDecl(_69117_types))))));
	} else {
		_67378_t.get()._field_kind=_69117_types[0LL];
	}
	_67395_ok=true;
	return std::make_tuple(_67378_t,_67395_ok);
}



inline std::tuple<jule::Ptr<_1d075ae60_RetTypeDecl>,jule::Bool> _1b657107a_build_ret_type(jule::Ptr<_1b656a382_Parser> _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _74139_tokens,jule::I64& _74162_i) {
	jule::Ptr<_1d075ae60_RetTypeDecl> _74172_t = jule::Ptr<_1d075ae60_RetTypeDecl>();
	jule::Bool _74189_ok = jule::Bool();
	_74172_t=jule::new_ptr<_1d075ae60_RetTypeDecl>();
	if (_74162_i >= static_cast<jule::I64>(static_cast<jule::I64>(_74139_tokens.len()))) {
		return std::make_tuple(_74172_t,_74189_ok);
	}
	jule::Ptr<_1d0747985_Token> _74717_token = _74139_tokens[_74162_i];
	{
		auto &_match_expr{ _74717_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1a8ab4169:;
			{
				if ((_74717_token.get()._field_kind == jule::Str("{", 1))) {
					return std::make_tuple(_74172_t,_74189_ok);
				}
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1a8ab493e:;
			{
				if ((_74717_token.get()._field_kind == jule::Str("=", 1))) {
					return std::make_tuple(_74172_t,_74189_ok);
				}
			}
		}
		else if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1a8ab49a5:;
			{
				if ((_74162_i + 1LL) >= static_cast<jule::I64>(static_cast<jule::I64>(_74139_tokens.len()))) {
					_1b656acde_push_err(_self_.ptr(), _74717_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
					return std::make_tuple(_74172_t,_74189_ok);
				}
				(_74162_i)++;
				_74717_token=_74139_tokens[_74162_i];
				if (_74717_token.get()._field_id == static_cast<jule::U64>(3LLU)) {
					{
						auto &_match_expr{ _74717_token.get()._field_kind };
						
						if (_match_expr == jule::Str("(", 1)) {
							_case_begin_1a8ab6b3e:;
							{
								std::tie(_74172_t,_74189_ok) = _1b6570bc3_build_multi_ret_type(_self_, _74139_tokens,_74162_i);
								return std::make_tuple(_74172_t,_74189_ok);
							}
						}
						else if (_match_expr == jule::Str("{", 1)) {
							_case_begin_1a8ab77aa:;
							{
								_1b656acde_push_err(_self_.ptr(), _74717_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
								return std::make_tuple(_74172_t,_74189_ok);
							}
						}
						_match_end_1a8ab7689:;
					}
				}
				std::tie(_74172_t.get()._field_kind,_74189_ok) = _1b656c708_build_type(_self_, _74139_tokens,(&(_74162_i)),true);
				return std::make_tuple(_74172_t,_74189_ok);
			}
		}
		_match_end_1a8ab4895:;
	}
	(_74162_i)++;
	_1b656acde_push_err(_self_.ptr(), _74717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return std::make_tuple(_74172_t,_74189_ok);
}



inline jule::Ptr<_1d0763709_FnDecl> _1b65714cb_build_fn_prototype(jule::Ptr<_1b656a382_Parser> _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _78643_tokens,jule::I64& _78666_i,jule::Bool _78674_method) {
	jule::Ptr<_1d0763709_FnDecl> _78717_f = jule::new_ptr<_1d0763709_FnDecl>(_1d0763709_FnDecl(_78643_tokens[_78666_i],jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Str(),jule::Slice<jule::Ptr<_1d06c9ecd_Directive>>(),jule::Ptr<_1d0761c13_ScopeTree>(),jule::Slice<jule::Ptr<_1d075ee64_GenericDecl>>(),jule::Ptr<_1d075ae60_RetTypeDecl>(),jule::Slice<jule::Ptr<_1d07623d9_ParamDecl>>()));
	if (_78717_f.get()._field_token.get()._field_id == static_cast<jule::U64>(38LLU)) {
		_78717_f.get()._field_statically=true;
		(_78666_i)++;
		if (_78666_i >= static_cast<jule::I64>(static_cast<jule::I64>(_78643_tokens.len()))) {
			_1b656acde_push_err(_self_.ptr(), _78717_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		_78717_f.get()._field_token=_78643_tokens[_78666_i];
	}
	if (_78717_f.get()._field_token.get()._field_id == static_cast<jule::U64>(35LLU)) {
		_78717_f.get()._field_unsafety=true;
		(_78666_i)++;
		if (_78666_i >= static_cast<jule::I64>(static_cast<jule::I64>(_78643_tokens.len()))) {
			_1b656acde_push_err(_self_.ptr(), _78717_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		_78717_f.get()._field_token=_78643_tokens[_78666_i];
	}
	(_78666_i)++;
	if (_78666_i >= static_cast<jule::I64>(static_cast<jule::I64>(_78643_tokens.len()))) {
		_1b656acde_push_err(_self_.ptr(), _78717_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1d0747985_Token> _82013_tok = _78643_tokens[_78666_i];
	if (_82013_tok.get()._field_id == static_cast<jule::U64>(2LLU)) {
		(_78666_i)++;
		if (_78666_i >= static_cast<jule::I64>(static_cast<jule::I64>(_78643_tokens.len()))) {
			_1b656acde_push_err(_self_.ptr(), _78717_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		_78717_f.get()._field_ident=_82013_tok.get()._field_kind;
	} else {
		_78717_f.get()._field_ident=jule::Str("<anonymous>", 11);
	}
	jule::Ptr<_1d0747985_Token> _83213_error_token = _78643_tokens[_78666_i];
	jule::Slice<jule::Ptr<_1d0747985_Token>> _83317_generics_tokens = _1b656899b_range(_78666_i,jule::Str("[", 1),jule::Str("]", 1),_78643_tokens);
	if ((_83317_generics_tokens != nullptr)) {
		_78717_f.get()._field_generics=_1b656e023_build_generics(_self_.ptr(), _83317_generics_tokens,_83213_error_token);
	}
	if ((_78643_tokens[_78666_i].get()._field_kind != jule::Str("(", 1))) {
		_1b656acde_push_err(_self_.ptr(), _78643_tokens[_78666_i],jule::Str("missing function parentheses", 28),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Slice<jule::Ptr<_1d0747985_Token>> _84317_params_toks = _1b656899b_range(_78666_i,jule::Str("(", 1),jule::Str(")", 1),_78643_tokens);
	if ((_84317_params_toks.len() > 0LL)) {
		_78717_f.get()._field_params=_1b657081b_build_params(_self_, _84317_params_toks,_78674_method);
	}
	if (_78666_i < static_cast<jule::I64>(static_cast<jule::I64>(_78643_tokens.len()))) {
		jule::Ptr<_1d0747985_Token> _84917_token = _78643_tokens[_78666_i];
		if ((_84917_token.get()._field_id == static_cast<jule::U64>(7LLU)) && (_84917_token.get()._field_kind == jule::Str("!", 1))) {
			_78717_f.get()._field_exceptional=true;
			(_78666_i)++;
		}
	}
	std::tie(_78717_f.get()._field_result,std::ignore) = _1b657107a_build_ret_type(_self_, _78643_tokens,_78666_i);
	return _78717_f;
}



inline jule::Ptr<_1d0763709_FnDecl> _1b657192c_build_fn(jule::Ptr<_1b656a382_Parser> _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _86233_tokens,jule::Bool _86251_method,jule::Bool _86265_prototype) {
	jule::I64 _86317_i = 0LL;
	jule::Ptr<_1d0763709_FnDecl> _86417_f = _1b65714cb_build_fn_prototype(_self_, _86233_tokens,_86317_i,_86251_method);
	if (_86265_prototype) {
		if (_86317_i < static_cast<jule::I64>(static_cast<jule::I64>(_86233_tokens.len()))) {
			_1b656acde_push_err(_self_.ptr(), _86233_tokens[(_86317_i + 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		}
		return _86417_f;
	} else if ((_86417_f == nullptr)) {
		return _86417_f;
	}
	if (_86317_i >= static_cast<jule::I64>(static_cast<jule::I64>(_86233_tokens.len()))) {
		_1b656a6b2_stop(_self_.ptr());
		_1b656acde_push_err(_self_.ptr(), _86417_f.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1b656b10d_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Slice<jule::Ptr<_1d0747985_Token>> _88017_block_tokens = _1b656899b_range(_86317_i,jule::Str("{", 1),jule::Str("}", 1),_86233_tokens);
	if ((_88017_block_tokens != nullptr)) {
		_86417_f.get()._field_scope=_1b656bd56_build_scope(_self_, _88017_block_tokens,_86233_tokens[(_86317_i - 1LL)]);
		_86417_f.get()._field_scope.get()._field_unsafety=_86417_f.get()._field_unsafety;
		if (_86317_i < static_cast<jule::I64>(static_cast<jule::I64>(_86233_tokens.len()))) {
			_1b656acde_push_err(_self_.ptr(), _86233_tokens[_86317_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		}
	} else {
		_1b656a6b2_stop(_self_.ptr());
		_1b656acde_push_err(_self_.ptr(), _86417_f.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1b656b10d_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	return _86417_f;
}



inline jule::Slice<jule::Ptr<_1d0747985_Token>> _1b6571c3a_get_use_decl_selectors(_1b656a382_Parser* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>> _89645_tokens) {
	jule::I64 _89717_i = 0LL;
	_89645_tokens=_1b656899b_range(_89717_i,jule::Str("{", 1),jule::Str("}", 1),_89645_tokens);
	jule::Slice<jule::Slice<jule::Ptr<_1d0747985_Token>>> _89918_parts;
	jule::Slice<_1d0019224_Log> _89925_errs;
	std::tie(_89918_parts,_89925_errs) = _1b6569172_parts(_89645_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_89925_errs.len() > 0LL)) {
		(*_self_)._field_errors=jule::append((*_self_)._field_errors,_89925_errs);
		return nullptr;
	}
	jule::Slice<jule::Ptr<_1d0747985_Token>> _90517_selectors = jule::Slice<jule::Ptr<_1d0747985_Token>>::alloc(0LL,static_cast<jule::I64>(_89918_parts.len()));
	{
		auto &expr = _89918_parts;
		auto it = expr.begin();
		_iter_begin_1a8ad1560:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1d0747985_Token>> _1a8ad2a39_part = *it;
			{
				if ((_1a8ad2a39_part.len() > 1LL)) {
					_1b656acde_push_err(&(*_self_), _1a8ad2a39_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				}
				jule::Ptr<_1d0747985_Token> _91021_tok = _1a8ad2a39_part[0LL];
				if ((_91021_tok.get()._field_id != static_cast<jule::U64>(2LLU)) && (_91021_tok.get()._field_id != static_cast<jule::U64>(28LLU))) {
					_1b656acde_push_err(&(*_self_), _91021_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					_1b656b10d_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					goto _iter_next_1a8ad1560;
				}
				_90517_selectors = jule::alloc_for_append(_90517_selectors,1);_90517_selectors.__push(_91021_tok);
			}
			_iter_next_1a8ad1560:;
			++it;
			goto _iter_begin_1a8ad1560;
		}
		_iter_end_1a8ad1560:;
	}
	return _90517_selectors;
}



inline void _1b6572059_build_cpp_use_decl(_1b656a382_Parser* _self_,jule::Ptr<_1d0769347_UseDecl>& _92142_decl,jule::Slice<jule::Ptr<_1d0747985_Token>>& _92159_tokens) {
	if ((_92159_tokens.len() > 1LL)) {
		_1b656acde_push_err(&(*_self_), _92159_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1d0747985_Token> _92513_token = _92159_tokens[0LL];
	if ((_92513_token.get()._field_id != static_cast<jule::U64>(6LLU)) || ((_92513_token.get()._field_kind[0LL] != '`') && (_92513_token.get()._field_kind[0LL] != '\"'))) {
		_1b656acde_push_err(&(*_self_), _92513_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return;
	}
	_92142_decl.get()._field_cpp_linked=true;
	_92142_decl.get()._field_link_path=_92513_token.get()._field_kind.slice(1LL,(_92513_token.get()._field_kind.len() - 1LL));
}



inline void _1b6572378_build_std_use_decl(_1b656a382_Parser* _self_,jule::Ptr<_1d0769347_UseDecl>& _93442_decl,jule::Slice<jule::Ptr<_1d0747985_Token>> _93462_tokens) {
	_93442_decl.get()._field_std=true;
	jule::Ptr<_1d0747985_Token> _93717_token = _93462_tokens[0LL];
	if ((_93462_tokens.len() < 3LL)) {
		_1b656acde_push_err(&(*_self_), _93717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	_93462_tokens=_93462_tokens.slice(2LL);
	_93717_token=_93462_tokens[(_93462_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _93717_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1a8adc648:;
			{
				_1b656acde_push_err(&(*_self_), _93717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1a8adc6e2:;
			{
				if ((_93717_token.get()._field_kind != jule::Str("}", 1))) {
					_1b656acde_push_err(&(*_self_), _93717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				jule::Slice<jule::Ptr<_1d0747985_Token>> _95421_selectors = nullptr;
				std::tie(_93462_tokens,_95421_selectors) = _1b6568c43_range_last(_93462_tokens);
				_93442_decl.get()._field_selected=_1b6571c3a_get_use_decl_selectors(&(*_self_), _95421_selectors);
				if ((_93462_tokens.len() == 0LL)) {
					_1b656acde_push_err(&(*_self_), _93717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_93717_token=_93462_tokens[(_93462_tokens.len() - 1LL)];
				if (_93717_token.get()._field_id != static_cast<jule::U64>(23LLU)) {
					_1b656acde_push_err(&(*_self_), _93717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_93462_tokens=_93462_tokens.slice(0LL,(_93462_tokens.len() - 1LL));
				if ((_93462_tokens.len() == 0LL)) {
					_1b656acde_push_err(&(*_self_), _93717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1a8adc758:;
			{
				if ((_93717_token.get()._field_kind != jule::Str("*", 1))) {
					_1b656acde_push_err(&(*_self_), _93717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_93462_tokens=_93462_tokens.slice(0LL,(_93462_tokens.len() - 1LL));
				if ((_93462_tokens.len() == 0LL)) {
					_1b656acde_push_err(&(*_self_), _93717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_93717_token=_93462_tokens[(_93462_tokens.len() - 1LL)];
				if (_93717_token.get()._field_id != static_cast<jule::U64>(23LLU)) {
					_1b656acde_push_err(&(*_self_), _93717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_93462_tokens=_93462_tokens.slice(0LL,(_93462_tokens.len() - 1LL));
				if ((_93462_tokens.len() == 0LL)) {
					_1b656acde_push_err(&(*_self_), _93717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_93442_decl.get()._field_full=true;
			}
		}
		_match_end_1a8adc5e3:;
	}
	_93442_decl.get()._field_link_path=jule::Str("std::", 5) + _1b6569eb9_tokstoa(_93462_tokens);
}



inline void _1b6572697_build_ident_use_decl(_1b656a382_Parser* _self_,jule::Ptr<_1d0769347_UseDecl>& _99644_decl,jule::Slice<jule::Ptr<_1d0747985_Token>> _99664_tokens) {
	_99644_decl.get()._field_std=false;
	jule::Ptr<_1d0747985_Token> _99917_token = _99664_tokens[(_99664_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _99917_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1a8ae7c08:;
			{
				_1b656acde_push_err(&(*_self_), _99917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1a8ae89b7:;
			{
				if ((_99917_token.get()._field_kind != jule::Str("}", 1))) {
					_1b656acde_push_err(&(*_self_), _99917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				jule::Slice<jule::Ptr<_1d0747985_Token>> _101021_selectors = nullptr;
				std::tie(_99664_tokens,_101021_selectors) = _1b6568c43_range_last(_99664_tokens);
				_99644_decl.get()._field_selected=_1b6571c3a_get_use_decl_selectors(&(*_self_), _101021_selectors);
				if ((_99664_tokens.len() == 0LL)) {
					_1b656acde_push_err(&(*_self_), _99917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_99917_token=_99664_tokens[(_99664_tokens.len() - 1LL)];
				if (_99917_token.get()._field_id != static_cast<jule::U64>(23LLU)) {
					_1b656acde_push_err(&(*_self_), _99917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_99664_tokens=_99664_tokens.slice(0LL,(_99664_tokens.len() - 1LL));
				if ((_99664_tokens.len() == 0LL)) {
					_1b656acde_push_err(&(*_self_), _99917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1a8ae8a2d:;
			{
				if ((_99917_token.get()._field_kind != jule::Str("*", 1))) {
					_1b656acde_push_err(&(*_self_), _99917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_99664_tokens=_99664_tokens.slice(0LL,(_99664_tokens.len() - 1LL));
				if ((_99664_tokens.len() == 0LL)) {
					_1b656acde_push_err(&(*_self_), _99917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_99917_token=_99664_tokens[(_99664_tokens.len() - 1LL)];
				if (_99917_token.get()._field_id != static_cast<jule::U64>(23LLU)) {
					_1b656acde_push_err(&(*_self_), _99917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_99664_tokens=_99664_tokens.slice(0LL,(_99664_tokens.len() - 1LL));
				if ((_99664_tokens.len() == 0LL)) {
					_1b656acde_push_err(&(*_self_), _99917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_99644_decl.get()._field_full=true;
			}
		}
		_match_end_1a8ae88b8:;
	}
	_99644_decl.get()._field_link_path=_1b6569eb9_tokstoa(_99664_tokens);
}



inline void _1b65729b6_parse_use_decl(_1b656a382_Parser* _self_,jule::Ptr<_1d0769347_UseDecl>& _105938_decl,jule::Slice<jule::Ptr<_1d0747985_Token>> _105958_tokens) {
	if (_105938_decl.get()._field_cpp_linked) {
		_1b6572059_build_cpp_use_decl(&(*_self_), _105938_decl,_105958_tokens);
		return;
	}
	jule::Ptr<_1d0747985_Token> _106517_token = _105958_tokens[0LL];
	if (_106517_token.get()._field_id != static_cast<jule::U64>(2LLU)) {
		_1b656acde_push_err(&(*_self_), _106517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1b656b10d_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;
	}
	if ((_105958_tokens.len() > 2LL) && (_105958_tokens[1LL].get()._field_id == static_cast<jule::U64>(12LLU))) {
		_105938_decl.get()._field_alias=_106517_token.get()._field_kind;
		if (_105958_tokens[2LL].get()._field_id != static_cast<jule::U64>(2LLU)) {
			_1b656acde_push_err(&(*_self_), _106517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			_1b656b10d_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			return;
		}
		_105958_tokens=_105958_tokens.slice(2LL);
		_106517_token=_105958_tokens[0LL];
	}
	
	{
		
		if ((_106517_token.get()._field_kind == jule::Str("std", 3))) {
			_case_begin_1a8b08b3c:;
			{
				_1b6572378_build_std_use_decl(&(*_self_), _105938_decl,_105958_tokens);
			}
		}
		else {
			_case_begin_1a8b087b8:;
			{
				_1b6572697_build_ident_use_decl(&(*_self_), _105938_decl,_105958_tokens);
			}
		}
		_match_end_1a8b08741:;
	}
}



inline jule::Ptr<_1d0769347_UseDecl> _1b6572d6d_build_use_decl(_1b656a382_Parser* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>> _109337_tokens,jule::Bool _109355_cpp_linked) {
	jule::Ptr<_1d0769347_UseDecl> _109417_decl = jule::new_ptr<_1d0769347_UseDecl>(_1d0769347_UseDecl(_109337_tokens[0LL],jule::Str(),jule::Str(),jule::Bool(),jule::Slice<jule::Ptr<_1d0747985_Token>>(),_109355_cpp_linked,jule::Bool()));
	if ((_109337_tokens.len() < 2LL)) {
		_1b656acde_push_err(&(*_self_), _109417_decl.get()._field_token,jule::Str("missing path of use statement", 29),jule::Slice<jule::Any>());
		return nullptr;
	}
	_109337_tokens=_109337_tokens.slice(1LL);
	_1b65729b6_parse_use_decl(&(*_self_), _109417_decl,_109337_tokens);
	return _109417_decl;
}



inline jule::Ptr<_1d075b14c_Expr> _1b6573225_build_enum_item_expr(jule::Ptr<_1b656a382_Parser> _self_,jule::Ptr<jule::I64> _110744_i,jule::Slice<jule::Ptr<_1d0747985_Token>>& _110758_tokens) {
	jule::I64 _110817_brace_n = 0LL;
	jule::I64 _110913_expr_start = (*(_110744_i));
	for (; (*(_110744_i)) < static_cast<jule::I64>(static_cast<jule::I64>(_110758_tokens.len())); ((*(_110744_i)))++) {
		{
			jule::Ptr<_1d0747985_Token> _111117_t = _110758_tokens[(*(_110744_i))];
			if (_111117_t.get()._field_id == static_cast<jule::U64>(3LLU)) {
				{
					auto &_match_expr{ _111117_t.get()._field_kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1a8b0ec0e:;
						{
							(_110817_brace_n)++;
							goto _iter_next_1a8b0d724;
						}
					}
					else {
						_case_begin_1a8b0e615:;
						{
							(_110817_brace_n)--;
						}
					}
					_match_end_1a8b0e8ac:;
				}
			}
			if ((_110817_brace_n > 0LL)) {
				goto _iter_next_1a8b0d724;
			}
			if ((_111117_t.get()._field_id == static_cast<jule::U64>(8LLU)) || (((*(_110744_i)) + 1LL) >= static_cast<jule::I64>(static_cast<jule::I64>(_110758_tokens.len())))) {
				jule::Slice<jule::Ptr<_1d0747985_Token>> _112925_expr_tokens = nullptr;
				if (_111117_t.get()._field_id == static_cast<jule::U64>(8LLU)) {
					_112925_expr_tokens=_110758_tokens.slice(_110913_expr_start,(*(_110744_i)));
				} else {
					_112925_expr_tokens=_110758_tokens.slice(_110913_expr_start);
				}
				return _1b656b41b_build_expr(_self_, _112925_expr_tokens);
			}
		}
	_iter_next_1a8b0d724:;
	}
	_iter_end_1a8b0d724:;
	return nullptr;
}



inline jule::Slice<jule::Ptr<_1d07697ba_EnumItemDecl>> _1b6573533_build_enum_items(jule::Ptr<_1b656a382_Parser> _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _114141_tokens) {
	jule::Slice<jule::Ptr<_1d07697ba_EnumItemDecl>> _114217_items = jule::Slice<jule::Ptr<_1d07697ba_EnumItemDecl>>::alloc(0LL,1LL);
	jule::Ptr<jule::I64> _114317_i = jule::new_ptr<jule::I64>(0LL);
	for (; (*(_114317_i)) < static_cast<jule::I64>(static_cast<jule::I64>(_114141_tokens.len())); ((*(_114317_i)))++) {
		{
			jule::Ptr<_1d0747985_Token> _114521_t = _114141_tokens[(*(_114317_i))];
			jule::Ptr<_1d07697ba_EnumItemDecl> _114621_item = jule::new_ptr<_1d07697ba_EnumItemDecl>(_1d07697ba_EnumItemDecl());
			_114621_item.get()._field_token=_114521_t;
			if (_114621_item.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU)) {
				_1b656acde_push_err(_self_.ptr(), _114621_item.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_1b656b10d_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			}
			_114621_item.get()._field_ident=_114621_item.get()._field_token.get()._field_kind;
			if ((((*(_114317_i)) + 1LL) >= static_cast<jule::I64>(static_cast<jule::I64>(_114141_tokens.len()))) || (_114141_tokens[((*(_114317_i)) + 1LL)].get()._field_id == static_cast<jule::U64>(8LLU))) {
				if (((*(_114317_i)) + 1LL) < static_cast<jule::I64>(static_cast<jule::I64>(_114141_tokens.len()))) {
					((*(_114317_i)))++;
				}
				_114217_items = jule::alloc_for_append(_114217_items,1);_114217_items.__push(_114621_item);
				goto _iter_next_1a8b13dab;
			}
			((*(_114317_i)))++;
			_114521_t=_114141_tokens[(*(_114317_i))];
			((*(_114317_i)))++;
			if ((_114521_t.get()._field_id != static_cast<jule::U64>(7LLU)) || (_114521_t.get()._field_kind != jule::Str("=", 1))) {
				_1b656acde_push_err(_self_.ptr(), _114521_t,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_1b656b10d_push_suggestion(_self_.ptr(), jule::Str("expected equals \"=\" for assignment", 34),jule::Slice<jule::Any>());
				goto _iter_next_1a8b13dab;
			}
			if (((*(_114317_i)) >= static_cast<jule::I64>(static_cast<jule::I64>(_114141_tokens.len()))) || (_114141_tokens[(*(_114317_i))].get()._field_id == static_cast<jule::U64>(8LLU))) {
				_1b656acde_push_err(_self_.ptr(), _114521_t,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
				goto _iter_next_1a8b13dab;
			}
			_114621_item.get()._field_expr=_1b6573225_build_enum_item_expr(_self_, _114317_i,_114141_tokens);
			_114217_items = jule::alloc_for_append(_114217_items,1);_114217_items.__push(_114621_item);
		}
	_iter_next_1a8b13dab:;
	}
	_iter_end_1a8b13dab:;
	return _114217_items;
}



inline jule::Ptr<_1d076a414_EnumDecl> _1b6573841_build_enum_decl(jule::Ptr<_1b656a382_Parser> _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _117840_tokens) {
	if ((_117840_tokens.len() < 2LL) || (_117840_tokens.len() < 3LL)) {
		_1b656acde_push_err(_self_.ptr(), _117840_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1d076a414_EnumDecl> _118317_e = jule::new_ptr<_1d076a414_EnumDecl>(_1d076a414_EnumDecl(_117840_tokens[1LL],jule::Bool(),jule::Str(),jule::Ptr<_1d0759c1c_TypeDecl>(),jule::Slice<jule::Ptr<_1d07697ba_EnumItemDecl>>(),jule::Ptr<_1d0747985_Token>()));
	if (_118317_e.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU)) {
		_1b656acde_push_err(_self_.ptr(), _118317_e.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1b656b10d_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	}
	_118317_e.get()._field_ident=_118317_e.get()._field_token.get()._field_kind;
	jule::I64 _119117_i = 2LL;
	if (_117840_tokens[_119117_i].get()._field_id == static_cast<jule::U64>(11LLU)) {
		(_119117_i)++;
		if (_119117_i >= static_cast<jule::I64>(static_cast<jule::I64>(_117840_tokens.len()))) {
			_1b656acde_push_err(_self_.ptr(), _117840_tokens[(_119117_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return _118317_e;
		}
		std::tie(_118317_e.get()._field_kind,std::ignore) = _1b656c708_build_type(_self_, _117840_tokens,(&(_119117_i)),true);
		if (_119117_i >= static_cast<jule::I64>(static_cast<jule::I64>(_117840_tokens.len()))) {
			_1b656a6b2_stop(_self_.ptr());
			_1b656acde_push_err(_self_.ptr(), _118317_e.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
			_1b656b10d_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
			return _118317_e;
		}
	} else {
		_118317_e.get()._field_kind=nullptr;
	}
	jule::Slice<jule::Ptr<_1d0747985_Token>> _120817_item_tokens = _1b656899b_range(_119117_i,jule::Str("{", 1),jule::Str("}", 1),_117840_tokens);
	if ((_120817_item_tokens == nullptr)) {
		_1b656a6b2_stop(_self_.ptr());
		_1b656acde_push_err(_self_.ptr(), _118317_e.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1b656b10d_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _118317_e;
	} else if (_119117_i < static_cast<jule::I64>(static_cast<jule::I64>(_117840_tokens.len()))) {
		_1b656acde_push_err(_self_.ptr(), _117840_tokens[_119117_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	_118317_e.get()._field_end=_117840_tokens[(_119117_i - 1LL)];
	_118317_e.get()._field_items=_1b6573533_build_enum_items(_self_, _120817_item_tokens);
	return _118317_e;
}



inline jule::Ptr<_1d076ae3c_FieldDecl> _1b6573b4e_build_field(jule::Ptr<_1b656a382_Parser> _self_,jule::Slice<jule::Ptr<_1d0747985_Token>> _122235_tokens) {
	jule::Ptr<_1d076ae3c_FieldDecl> _122317_f = jule::new_ptr<_1d076ae3c_FieldDecl>(_1d076ae3c_FieldDecl());
	_122317_f.get()._field_public=_122235_tokens[0LL].get()._field_id == static_cast<jule::U64>(21LLU);
	if (_122317_f.get()._field_public) {
		if ((_122235_tokens.len() == 1LL)) {
			_1b656acde_push_err(_self_.ptr(), _122235_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		_122235_tokens=_122235_tokens.slice(1LL);
	}
	_122317_f.get()._field_mutable=_122235_tokens[0LL].get()._field_id == static_cast<jule::U64>(36LLU);
	if (_122317_f.get()._field_mutable) {
		if ((_122235_tokens.len() == 1LL)) {
			_1b656acde_push_err(_self_.ptr(), _122235_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		_122235_tokens=_122235_tokens.slice(1LL);
	}
	_122317_f.get()._field_token=_122235_tokens[0LL];
	if (_122317_f.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU)) {
		_1b656acde_push_err(_self_.ptr(), _122317_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1b656b10d_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	}
	_122317_f.get()._field_ident=_122317_f.get()._field_token.get()._field_kind;
	if ((_122235_tokens.len() == 1LL)) {
		_1b656acde_push_err(_self_.ptr(), _122235_tokens[0LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return nullptr;
	} else if (_122235_tokens[1LL].get()._field_id != static_cast<jule::U64>(11LLU)) {
		_1b656acde_push_err(_self_.ptr(), _122235_tokens[1LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return nullptr;
	}
	_122235_tokens=_122235_tokens.slice(2LL);
	jule::I64 _126017_i = 0LL;
	std::tie(_122317_f.get()._field_kind,std::ignore) = _1b656c708_build_type(_self_, _122235_tokens,(&(_126017_i)),true);
	if (_126017_i < static_cast<jule::I64>(static_cast<jule::I64>(_122235_tokens.len()))) {
		jule::Ptr<_1d0747985_Token> _126317_token = _122235_tokens[_126017_i];
		if ((_126317_token.get()._field_id != static_cast<jule::U64>(7LLU)) || (_126317_token.get()._field_kind != jule::Str("=", 1))) {
			_1b656acde_push_err(_self_.ptr(), _122235_tokens[_126017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		(_126017_i)++;
		if (_126017_i >= static_cast<jule::I64>(static_cast<jule::I64>(_122235_tokens.len()))) {
			_1b656acde_push_err(_self_.ptr(), _126317_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return nullptr;
		}
		_122235_tokens=_122235_tokens.slice(_126017_i);
		_122317_f.get()._field_default=_1b656b41b_build_expr(_self_, _122235_tokens);
	}
	return _122317_f;
}



inline jule::Slice<jule::Ptr<_1d076ae3c_FieldDecl>> _1b6573ea1_build_struct_decl_fields(jule::Ptr<_1b656a382_Parser> _self_,jule::Slice<jule::Ptr<_1d0747985_Token>> _128048_tokens) {
	jule::Slice<jule::Ptr<_1d076ae3c_FieldDecl>> _128117_fields = nullptr;
	jule::Slice<jule::Ptr<_1b654d3cb_Stmt>> _128217_stmts = _1b654d772_split_stmts(_128048_tokens);
	{
		auto &expr = _128217_stmts;
		auto it = expr.begin();
		_iter_begin_1a8b355e7:;
		if (it != expr.end()) {
			jule::Ptr<_1b654d3cb_Stmt> _1a8b3563b_stmt = *it;
			{
				_128048_tokens=_1a8b3563b_stmt.get()._field_tokens;
				jule::Ptr<_1d076ae3c_FieldDecl> _128521_f = _1b6573b4e_build_field(_self_, _128048_tokens);
				_128117_fields = jule::alloc_for_append(_128117_fields,1);_128117_fields.__push(_128521_f);
			}
			_iter_next_1a8b355e7:;
			++it;
			goto _iter_begin_1a8b355e7;
		}
		_iter_end_1a8b355e7:;
	}
	return _128117_fields;
}



inline jule::Ptr<_1d076b79a_StructDecl> _1b657429d_build_struct_decl(jule::Ptr<_1b656a382_Parser> _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _129142_tokens) {
	if ((_129142_tokens.len() < 3LL)) {
		_1b656acde_push_err(_self_.ptr(), _129142_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::I64 _129717_i = 1LL;
	jule::Ptr<_1d076b79a_StructDecl> _129817_s = jule::new_ptr<_1d076b79a_StructDecl>(_1d076b79a_StructDecl(_129142_tokens[_129717_i],jule::Ptr<_1d0747985_Token>(),jule::Str(),jule::Slice<jule::Ptr<_1d076ae3c_FieldDecl>>(),jule::Bool(),jule::Bool(),jule::Slice<jule::Ptr<_1d06c9ecd_Directive>>(),jule::Slice<jule::Ptr<_1d075ee64_GenericDecl>>()));
	if (_129817_s.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU)) {
		_1b656acde_push_err(_self_.ptr(), _129817_s.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1b656b10d_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	}
	(_129717_i)++;
	if (_129717_i >= static_cast<jule::I64>(static_cast<jule::I64>(_129142_tokens.len()))) {
		_1b656acde_push_err(_self_.ptr(), _129142_tokens[_129717_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _129817_s;
	}
	_129817_s.get()._field_ident=_129817_s.get()._field_token.get()._field_kind;
	jule::Ptr<_1d0747985_Token> _131213_error_token = _129142_tokens[_129717_i];
	jule::Slice<jule::Ptr<_1d0747985_Token>> _131317_generics_tokens = _1b656899b_range(_129717_i,jule::Str("[", 1),jule::Str("]", 1),_129142_tokens);
	if ((_131317_generics_tokens != nullptr)) {
		_129817_s.get()._field_generics=_1b656e023_build_generics(_self_.ptr(), _131317_generics_tokens,_131213_error_token);
	}
	if (_129717_i >= static_cast<jule::I64>(static_cast<jule::I64>(_129142_tokens.len()))) {
		_1b656acde_push_err(_self_.ptr(), _129142_tokens[(_129717_i - 1LL)],jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1b656b10d_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _129817_s;
	}
	jule::Slice<jule::Ptr<_1d0747985_Token>> _132317_body_tokens = _1b656899b_range(_129717_i,jule::Str("{", 1),jule::Str("}", 1),_129142_tokens);
	if ((_132317_body_tokens == nullptr)) {
		_1b656a6b2_stop(_self_.ptr());
		_1b656acde_push_err(_self_.ptr(), _129817_s.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1b656b10d_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _129817_s;
	}
	if (_129717_i < static_cast<jule::I64>(static_cast<jule::I64>(_129142_tokens.len()))) {
		_1b656acde_push_err(_self_.ptr(), _129142_tokens[_129717_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	_129817_s.get()._field_fields=_1b6573ea1_build_struct_decl_fields(_self_, _132317_body_tokens);
	_129817_s.get()._field_end=_129142_tokens[(_129717_i - 1LL)];
	return _129817_s;
}



inline void _1b6574523_check_method_receiver(_1b656a382_Parser* _self_,jule::Ptr<_1d0763709_FnDecl>& _133841_f) {
	if (_133841_f.get()._field_statically) {
		if ((_133841_f.get()._field_params.len() > 0LL) && _1d076274c_is_self(_133841_f.get()._field_params[0LL].ptr())) {
			_1b656acde_push_err(&(*_self_), _133841_f.get()._field_token,jule::Str("static functions cannot have receiver parameter", 47),jule::Slice<jule::Any>());
		}
		return;
	}
	if ((_133841_f.get()._field_params.len() == 0LL)) {
		_1b656acde_push_err(&(*_self_), _133841_f.get()._field_token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_1d07623d9_ParamDecl> _135113_param = _133841_f.get()._field_params[0LL];
	if ((!(_1d076274c_is_self(_135113_param.ptr())))) {
		_1b656acde_push_err(&(*_self_), _133841_f.get()._field_token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;
	}
}



inline jule::Slice<jule::Ptr<_1d0763709_FnDecl>> _1b6574831_build_trait_methods(jule::Ptr<_1b656a382_Parser> _self_,jule::Slice<jule::Ptr<_1d0747985_Token>> _135843_tokens) {
	jule::Slice<jule::Ptr<_1d0763709_FnDecl>> _135917_methods = nullptr;
	jule::Slice<jule::Ptr<_1b654d3cb_Stmt>> _136017_stmts = _1b654d772_split_stmts(_135843_tokens);
	{
		auto &expr = _136017_stmts;
		auto it = expr.begin();
		_iter_begin_1a8b4742d:;
		if (it != expr.end()) {
			jule::Ptr<_1b654d3cb_Stmt> _1a8b47472_stmt = *it;
			{
				_135843_tokens=_1a8b47472_stmt.get()._field_tokens;
				if ((_135843_tokens.len() == 0LL)) {
					goto _iter_next_1a8b4742d;
				}
				jule::Bool _136721_is_pub = false;
				if (_135843_tokens[0LL].get()._field_id == static_cast<jule::U64>(21LLU)) {
					_136721_is_pub=true;
					if ((_135843_tokens.len() == 1LL)) {
						_1b656acde_push_err(_self_.ptr(), _135843_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						goto _iter_next_1a8b4742d;
					}
					_135843_tokens=_135843_tokens.slice(1LL);
				}
				jule::Ptr<_1d0763709_FnDecl> _137721_f = _1b657192c_build_fn(_self_, _135843_tokens,true,true);
				if ((_137721_f != nullptr)) {
					if (_1d0763a5b_is_anon(_137721_f.ptr())) {
						_1b656acde_push_err(_self_.ptr(), _137721_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					}
					_1b6574523_check_method_receiver(_self_.ptr(), _137721_f);
					if ((_137721_f.get()._field_generics.len() > 0LL)) {
						_1b656acde_push_err(_self_.ptr(), _137721_f.get()._field_token,jule::Str("trait methods cannot have generics", 34),jule::Slice<jule::Any>());
					}
					_137721_f.get()._field_public=_136721_is_pub;
					_135917_methods = jule::alloc_for_append(_135917_methods,1);_135917_methods.__push(_137721_f);
				}
			}
			_iter_next_1a8b4742d:;
			++it;
			goto _iter_begin_1a8b4742d;
		}
		_iter_end_1a8b4742d:;
	}
	return _135917_methods;
}



inline jule::Ptr<_1d076bda5_TraitDecl> _1b6574b3e_build_trait_decl(jule::Ptr<_1b656a382_Parser> _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _139341_tokens) {
	if ((_139341_tokens.len() < 3LL)) {
		_1b656acde_push_err(_self_.ptr(), _139341_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1d076bda5_TraitDecl> _139817_t = jule::new_ptr<_1d076bda5_TraitDecl>(_1d076bda5_TraitDecl(_139341_tokens[1LL],jule::Ptr<_1d0747985_Token>(),jule::Str(),jule::Bool(),jule::Slice<jule::Ptr<_1d0763709_FnDecl>>()));
	if (_139817_t.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU)) {
		_1b656acde_push_err(_self_.ptr(), _139817_t.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1b656b10d_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	}
	_139817_t.get()._field_ident=_139817_t.get()._field_token.get()._field_kind;
	jule::I64 _140617_i = 2LL;
	jule::Slice<jule::Ptr<_1d0747985_Token>> _140717_body_tokens = _1b656899b_range(_140617_i,jule::Str("{", 1),jule::Str("}", 1),_139341_tokens);
	if ((_140717_body_tokens == nullptr)) {
		_1b656a6b2_stop(_self_.ptr());
		_1b656acde_push_err(_self_.ptr(), _139817_t.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1b656b10d_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_140617_i < static_cast<jule::I64>(static_cast<jule::I64>(_139341_tokens.len()))) {
		_1b656acde_push_err(_self_.ptr(), _139341_tokens[_140617_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	_139817_t.get()._field_methods=_1b6574831_build_trait_methods(_self_, _140717_body_tokens);
	_139817_t.get()._field_end=_139341_tokens[(_140617_i - 1LL)];
	return _139817_t;
}



inline jule::Ptr<_1d0763709_FnDecl> _1b6574e4c_build_cpp_link_fn(jule::Ptr<_1b656a382_Parser> _self_,jule::Slice<jule::Ptr<_1d0747985_Token>> _142241_tokens) {
	_142241_tokens=_142241_tokens.slice(1LL);
	jule::Ptr<_1d0763709_FnDecl> _142417_f = _1b657192c_build_fn(_self_, _142241_tokens,false,true);
	if ((_142417_f != nullptr)) {
		if (_1d0763a5b_is_anon(_142417_f.ptr())) {
			_1b656acde_push_err(_self_.ptr(), _142417_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		}
		_142417_f.get()._field_cpp_linked=true;
	}
	return _142417_f;
}



inline jule::Ptr<_1d07646d8_VarDecl> _1b657525a_build_cpp_link_var(jule::Ptr<_1b656a382_Parser> _self_,jule::Slice<jule::Ptr<_1d0747985_Token>> _143442_tokens) {
	_143442_tokens=_143442_tokens.slice(1LL);
	jule::Ptr<_1d07646d8_VarDecl> _143617_v = _1b656d85d_build_var(_self_, _143442_tokens);
	if ((_143617_v != nullptr)) {
		_143617_v.get()._field_cpp_linked=true;
		if ((_143617_v.get()._field_expr != nullptr)) {
			_1b656acde_push_err(_self_.ptr(), _143617_v.get()._field_token,jule::Str("cpp linked variables cannot have expression", 43),jule::Slice<jule::Any>());
		}
	}
	return _143617_v;
}



inline jule::Ptr<_1d076b79a_StructDecl> _1b6575568_build_cpp_link_struct(jule::Ptr<_1b656a382_Parser> _self_,jule::Slice<jule::Ptr<_1d0747985_Token>> _144645_tokens) {
	_144645_tokens=_144645_tokens.slice(1LL);
	jule::Ptr<_1d076b79a_StructDecl> _144817_s = _1b657429d_build_struct_decl(_self_, _144645_tokens);
	if ((_144817_s != nullptr)) {
		_144817_s.get()._field_cpp_linked=true;
	}
	return _144817_s;
}



inline jule::Ptr<_1d0767e5b_TypeAliasDecl> _1b65758ba_build_cpp_link_type_alias(jule::Ptr<_1b656a382_Parser> _self_,jule::Slice<jule::Ptr<_1d0747985_Token>> _145549_tokens) {
	_145549_tokens=_145549_tokens.slice(1LL);
	jule::Ptr<_1d0767e5b_TypeAliasDecl> _145717_t = _1b656ca16_build_type_alias_decl(_self_, _145549_tokens);
	if ((_145717_t != nullptr)) {
		_145717_t.get()._field_cpp_linked=true;
	}
	return _145717_t;
}



inline jule::Ptr<_1d0769347_UseDecl> _1b6575bb7_build_cpp_link_use(jule::Ptr<_1b656a382_Parser> _self_,jule::Slice<jule::Ptr<_1d0747985_Token>> _146442_tokens) {
	if ((_146442_tokens.len() == 1LL)) {
		_1b656acde_push_err(_self_.ptr(), _146442_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	_146442_tokens=_146442_tokens.slice(1LL);
	
	return _1b6572d6d_build_use_decl(_self_.ptr(), _146442_tokens,true);
}



inline jule::Any _1b6575ec5_build_cpp_link(jule::Ptr<_1b656a382_Parser> _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _147539_tokens) {
	jule::Ptr<_1d0747985_Token> _147617_token = _147539_tokens[0LL];
	if ((_147539_tokens.len() == 1LL)) {
		_1b656acde_push_err(_self_.ptr(), _147617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return jule::Any(nullptr);
	}
	_147617_token=_147539_tokens[1LL];
	{
		auto &_match_expr{ _147617_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1a8b621c3:;
			{
				return jule::Any(_1b6575bb7_build_cpp_link_use(_self_, _147539_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1a8b62239:;
			{
				return jule::Any(_1b6574e4c_build_cpp_link_fn(_self_, _147539_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1a8b622a0:;
			{
				return jule::Any(_1b657525a_build_cpp_link_var(_self_, _147539_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1a8b62316:;
			{
				return jule::Any(_1b6575568_build_cpp_link_struct(_self_, _147539_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1a8b62b0d:;
			{
				return jule::Any(_1b65758ba_build_cpp_link_type_alias(_self_, _147539_tokens));
			}
		}
		else {
			_case_begin_1a8b61a96:;
			{
				_1b656acde_push_err(_self_.ptr(), _147617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1a8b620c4:;
	}
	return jule::Any(nullptr);
}



inline jule::Ptr<_1d0763709_FnDecl> _1b65762d3_get_method(jule::Ptr<_1b656a382_Parser> _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _150135_tokens) {
	jule::I64 _150217_i = 0LL;
	jule::Ptr<_1d0747985_Token> _150317_token = _150135_tokens[_150217_i];
	if (_150317_token.get()._field_id == static_cast<jule::U64>(38LLU)) {
		if ((_150217_i + 1LL) >= static_cast<jule::I64>(static_cast<jule::I64>(_150135_tokens.len()))) {
			_1b656acde_push_err(_self_.ptr(), _150317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		(_150217_i)++;
		_150317_token=_150135_tokens[_150217_i];
	}
	if (_150317_token.get()._field_id == static_cast<jule::U64>(35LLU)) {
		if ((_150217_i + 1LL) >= static_cast<jule::I64>(static_cast<jule::I64>(_150135_tokens.len()))) {
			_1b656acde_push_err(_self_.ptr(), _150317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		(_150217_i)++;
		_150317_token=_150135_tokens[_150217_i];
	}
	if (_150317_token.get()._field_id != static_cast<jule::U64>(33LLU)) {
		_1b656acde_push_err(_self_.ptr(), _150317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1d0763709_FnDecl> _152717_f = _1b657192c_build_fn(_self_, _150135_tokens,true,false);
	if ((_152717_f != nullptr) && _1d0763a5b_is_anon(_152717_f.ptr())) {
		_1b656acde_push_err(_self_.ptr(), _152717_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	return _152717_f;
}



inline void _1b6576602_parse_impl_body(jule::Ptr<_1b656a382_Parser> _self_,jule::Ptr<_1d076c4b0_Impl>& _153440_ipl,jule::Slice<jule::Ptr<_1d0747985_Token>>& _153457_tokens) {
	jule::Slice<jule::Ptr<_1b654d3cb_Stmt>> _153517_stmts = _1b654d772_split_stmts(_153457_tokens);
	{
		auto &expr = _153517_stmts;
		auto it = expr.begin();
		_iter_begin_1a8b6c772:;
		if (it != expr.end()) {
			jule::Ptr<_1b654d3cb_Stmt> _1a8b6c7b6_stmt = *it;
			{
				_153457_tokens=_1a8b6c7b6_stmt.get()._field_tokens;
				jule::Ptr<_1d0747985_Token> _153821_token = _153457_tokens[0LL];
				jule::Bool _153921_is_pub = false;
				{
					auto &_match_expr{ _153821_token.get()._field_id };
					
					if (_match_expr == static_cast<jule::U64>(39LLU)) {
						_case_begin_1a8b6d82d:;
						{
							_1b656b99e_push_directive(_self_.ptr(), _1b656b729_build_directive(_self_.ptr(), _153457_tokens));
							goto _iter_next_1a8b6c772;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(21LLU)) {
						_case_begin_1a8b6dab4:;
						{
							_153921_is_pub=true;
							if ((_153457_tokens.len() == 1LL)) {
								_1b656acde_push_err(_self_.ptr(), _153457_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
								goto _iter_next_1a8b6c772;
							}
							_153457_tokens=_153457_tokens.slice(1LL);
							if ((_153457_tokens.len() > 0LL)) {
								_153821_token=_153457_tokens[0LL];
							}
						}
					}
					_match_end_1a8b6da09:;
				}
				{
					auto &_match_expr{ _153821_token.get()._field_id };
					
					if (_match_expr == static_cast<jule::U64>(9LLU)) {
						_case_begin_1a8b6ea82:;
						{
							jule::Ptr<_1d07646d8_VarDecl> _155825_v = _1b656d85d_build_var(_self_, _153457_tokens);
							if ((_155825_v != nullptr)) {
								_155825_v.get()._field_public=_153921_is_pub;
								_153440_ipl.get()._field_statics = jule::alloc_for_append(_153440_ipl.get()._field_statics,1);_153440_ipl.get()._field_statics.__push(_155825_v);
							}
						}
					}
					else if (_match_expr == static_cast<jule::U64>(38LLU) || _match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
						_case_begin_1a8b6eae8:;
						{
							jule::Ptr<_1d0763709_FnDecl> _156625_f = _1b65762d3_get_method(_self_, _153457_tokens);
							if ((_156625_f != nullptr)) {
								_1b6574523_check_method_receiver(_self_.ptr(), _156625_f);
								_1b65772b2_apply_fn_meta(_self_.ptr(), _156625_f,_153921_is_pub);
								_153440_ipl.get()._field_methods = jule::alloc_for_append(_153440_ipl.get()._field_methods,1);_153440_ipl.get()._field_methods.__push(_156625_f);
							}
						}
					}
					else {
						_case_begin_1a8b6db2a:;
						{
							_1b656acde_push_err(_self_.ptr(), _153821_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							goto _iter_next_1a8b6c772;
						}
					}
					_match_end_1a8b712ae:;
				}
			}
			_iter_next_1a8b6c772:;
			++it;
			goto _iter_begin_1a8b6c772;
		}
		_iter_end_1a8b6c772:;
	}
}



inline jule::Ptr<_1d076c4b0_Impl> _1b6576910_build_impl(jule::Ptr<_1b656a382_Parser> _self_,jule::Slice<jule::Ptr<_1d0747985_Token>> _157934_tokens) {
	jule::Ptr<_1d0747985_Token> _158017_token = _157934_tokens[0LL];
	if ((_157934_tokens.len() < 2LL)) {
		_1b656acde_push_err(_self_.ptr(), _158017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::I64 _158617_i = 1LL;
	jule::Ptr<_1d0759c1c_TypeDecl> _158818_base;
	jule::Bool _158828_ok;
	std::tie(_158818_base,_158828_ok) = _1b656c708_build_type(_self_, _157934_tokens,(&(_158617_i)),true);
	if ((!(_158828_ok))) {
		return nullptr;
	}
	if (_158617_i >= static_cast<jule::I64>(static_cast<jule::I64>(_157934_tokens.len()))) {
		_1b656acde_push_err(_self_.ptr(), _158017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1d076c4b0_Impl> _159717_ipl = jule::new_ptr<_1d076c4b0_Impl>(_1d076c4b0_Impl(jule::Ptr<_1d0747985_Token>(),_158818_base,jule::Ptr<_1d0759c1c_TypeDecl>(),jule::Slice<jule::Ptr<_1d0763709_FnDecl>>(),jule::Slice<jule::Ptr<_1d07646d8_VarDecl>>()));
	_158017_token=_157934_tokens[_158617_i];
	if (_158017_token.get()._field_id != static_cast<jule::U64>(12LLU)) {
		if ((_158017_token.get()._field_id == static_cast<jule::U64>(3LLU)) && (_158017_token.get()._field_kind == jule::Str("{", 1))) {
			std::tie(_159717_ipl.get()._field_base,_159717_ipl.get()._field_dest) = std::make_tuple(_159717_ipl.get()._field_dest,_159717_ipl.get()._field_base);
			goto _julec_label_body;
		}
		_1b656a6b2_stop(_self_.ptr());
		_1b656acde_push_err(_self_.ptr(), _158017_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1b656b10d_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	(_158617_i)++;
	if (_158617_i >= static_cast<jule::I64>(static_cast<jule::I64>(_157934_tokens.len()))) {
		_1b656a6b2_stop(_self_.ptr());
		_1b656acde_push_err(_self_.ptr(), _158017_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1b656b10d_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	std::tie(_159717_ipl.get()._field_dest,_158828_ok) = _1b656c708_build_type(_self_, _157934_tokens,(&(_158617_i)),true);
	if ((!(_158828_ok))) {
		return nullptr;
	}
	if (_158617_i >= static_cast<jule::I64>(static_cast<jule::I64>(_157934_tokens.len()))) {
		_1b656a6b2_stop(_self_.ptr());
		_1b656acde_push_err(_self_.ptr(), _158017_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1b656b10d_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	_julec_label_body:;
	jule::Slice<jule::Ptr<_1d0747985_Token>> _163717_body_tokens = _1b656899b_range(_158617_i,jule::Str("{", 1),jule::Str("}", 1),_157934_tokens);
	if ((_163717_body_tokens == nullptr)) {
		_1b656a6b2_stop(_self_.ptr());
		_1b656acde_push_err(_self_.ptr(), _158017_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1b656b10d_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_158617_i < static_cast<jule::I64>(static_cast<jule::I64>(_157934_tokens.len()))) {
		_1b656acde_push_err(_self_.ptr(), _157934_tokens[_158617_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	_159717_ipl.get()._field_end=_157934_tokens[(_158617_i - 1LL)];
	_1b6576602_parse_impl_body(_self_, _159717_ipl,_163717_body_tokens);
	return _159717_ipl;
}



inline jule::Any _1b6576c1d_build_node_data(jule::Ptr<_1b656a382_Parser> _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _165240_tokens) {
	jule::Ptr<_1d0747985_Token> _165317_token = _165240_tokens[0LL];
	{
		auto &_match_expr{ _165317_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1a8b85a98:;
			{
				
				return jule::Any(_1b6572d6d_build_use_decl(_self_.ptr(), _165240_tokens,false));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1a8b85922:;
			{
				jule::Ptr<_1d0763709_FnDecl> _166021_f = _1b657192c_build_fn(_self_, _165240_tokens,false,false);
				if ((_166021_f != nullptr)) {
					_166021_f.get()._field_global=true;
					if (_1d0763a5b_is_anon(_166021_f.ptr())) {
						_1b656acde_push_err(_self_.ptr(), _166021_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					}
				}
				return jule::Any(_166021_f);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(36LLU) || _match_expr == static_cast<jule::U64>(38LLU)) {
			_case_begin_1a8b85988:;
			{
				return jule::Any(_1b656d85d_build_var(_self_, _165240_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1a8b84d72:;
			{
				return jule::Any(_1b656ca16_build_type_alias_decl(_self_, _165240_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(24LLU)) {
			_case_begin_1a8b84dd8:;
			{
				return jule::Any(_1b6573841_build_enum_decl(_self_, _165240_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1a8b84e4e:;
			{
				return jule::Any(_1b657429d_build_struct_decl(_self_, _165240_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1a8b84eb5:;
			{
				return jule::Any(_1b6574b3e_build_trait_decl(_self_, _165240_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1a8b85bb9:;
			{
				return jule::Any(_1b6576910_build_impl(_self_, _165240_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1a8b85c30:;
			{
				return _1b6575ec5_build_cpp_link(_self_, _165240_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(39LLU)) {
			_case_begin_1a8b85c96:;
			{
				return jule::Any(_1b656b729_build_directive(_self_.ptr(), _165240_tokens));
			}
		}
		else {
			_case_begin_1a8b846ce:;
			{
				_1b656acde_push_err(_self_.ptr(), _165317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return jule::Any(nullptr);
			}
		}
		_match_end_1a8b84d0b:;
	}
}



inline void _1b6576e93_check_directive(_1b656a382_Parser* _self_,_1d06c9ce1_Node& _169335_node) {
	if (((*_self_)._field_directives == nullptr)) {
		return;
	}
	{
		auto &_match_expr{ _169335_node._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1d06c9ecd_Directive>>()) {
			_case_begin_1a8b8e4ec:;
			{
				goto _match_end_1a8b8cb05;
			}
		}
		else {
			_case_begin_1a8b8d122:;
			{
				if (((*_self_)._field_directives.len() != 0LL)) {
					_1b656acde_push_err(&(*_self_), (*_self_)._field_directives[0LL].get()._field_tag,jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75),jule::Slice<jule::Any>());
				}
				(*_self_)._field_directives=nullptr;
			}
		}
		_match_end_1a8b8cb05:;
	}
}



inline void _1b65772b2_apply_fn_meta(_1b656a382_Parser* _self_,jule::Ptr<_1d0763709_FnDecl>& _171037_f,jule::Bool _171049_is_pub) {
	_171037_f.get()._field_public=_171049_is_pub;
	_171037_f.get()._field_directives=(*_self_)._field_directives;
	(*_self_)._field_directives=nullptr;
}



inline void _1b65775d1_apply_meta(_1b656a382_Parser* _self_,_1d06c9ce1_Node& _171634_node,jule::Bool _171646_is_pub) {
	{
		auto &_match_expr{ _171634_node._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1d07646d8_VarDecl>>()) {
			_case_begin_1a8b91466:;
			{
				jule::Ptr<_1d07646d8_VarDecl> _171921_v = _171634_node._field_data.operator jule::Ptr<_1d07646d8_VarDecl>();
				if ((_171921_v == nullptr)) {
					return;
				}
				_171921_v.get()._field_public=_171646_is_pub;
				_171921_v.get()._field_directives=(*_self_)._field_directives;
				(*_self_)._field_directives=nullptr;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d0763709_FnDecl>>()) {
			_case_begin_1a8b914cc:;
			{
				jule::Ptr<_1d0763709_FnDecl> _172721_f = _171634_node._field_data.operator jule::Ptr<_1d0763709_FnDecl>();
				if ((_172721_f == nullptr)) {
					return;
				}
				_1b65772b2_apply_fn_meta(&(*_self_), _172721_f,_171646_is_pub);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d0767e5b_TypeAliasDecl>>()) {
			_case_begin_1a8b91543:;
			{
				jule::Ptr<_1d0767e5b_TypeAliasDecl> _173321_tad = _171634_node._field_data.operator jule::Ptr<_1d0767e5b_TypeAliasDecl>();
				if ((_173321_tad == nullptr)) {
					return;
				}
				_173321_tad.get()._field_public=_171646_is_pub;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d076a414_EnumDecl>>()) {
			_case_begin_1a8b915a9:;
			{
				jule::Ptr<_1d076a414_EnumDecl> _173921_ed = _171634_node._field_data.operator jule::Ptr<_1d076a414_EnumDecl>();
				if ((_173921_ed == nullptr)) {
					return;
				}
				_173921_ed.get()._field_public=_171646_is_pub;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d076b79a_StructDecl>>()) {
			_case_begin_1a8b917b8:;
			{
				jule::Ptr<_1d076b79a_StructDecl> _174521_sd = _171634_node._field_data.operator jule::Ptr<_1d076b79a_StructDecl>();
				if ((_174521_sd == nullptr)) {
					return;
				}
				_174521_sd.get()._field_directives=(*_self_)._field_directives;
				(*_self_)._field_directives=nullptr;
				_174521_sd.get()._field_public=_171646_is_pub;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d076bda5_TraitDecl>>()) {
			_case_begin_1a8b9182e:;
			{
				jule::Ptr<_1d076bda5_TraitDecl> _175321_td = _171634_node._field_data.operator jule::Ptr<_1d076bda5_TraitDecl>();
				if ((_175321_td == nullptr)) {
					return;
				}
				_175321_td.get()._field_public=_171646_is_pub;
			}
		}
		else {
			_case_begin_1a8b913bc:;
			{
				if (_171646_is_pub) {
					_1b656acde_push_err(&(*_self_), _171634_node._field_token,jule::Str("define is not supports pub modifier", 35),jule::Slice<jule::Any>());
				}
			}
		}
		_match_end_1a8b91367:;
	}
}



inline void _1b6577856_check_use_decl(_1b656a382_Parser* _self_,_1d06c9ce1_Node& _176534_node) {
	{
		auto &_match_expr{ _176534_node._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1d0769347_UseDecl>>()) {
			_case_begin_1a8b98946:;
			{
				goto _match_end_1a8b98b77;
			}
		}
		else {
			_case_begin_1a8b98bcc:;
			{
				return;
			}
		}
		_match_end_1a8b98b77:;
	}
	if (((*_self_)._field_ast.get()._field_nodes.len() > 0LL)) {
		_1b656acde_push_err(&(*_self_), _176534_node._field_token,jule::Str("use declarations must declared top of source code", 49),jule::Slice<jule::Any>());
		_1b656b10d_push_suggestion(&(*_self_), jule::Str("move this use declaration to top of source file", 47),jule::Slice<jule::Any>());
	}
}



inline std::tuple<jule::Bool,jule::Any> _1b6577ba8_build_general_scope_node_data(jule::Ptr<_1b656a382_Parser> _self_,jule::Slice<jule::Ptr<_1d0747985_Token>> _178053_st) {
	jule::Bool _178069_is_pub = jule::Bool();
	jule::Any _178083_data = jule::Any();
	if (_178053_st[0LL].get()._field_id == static_cast<jule::U64>(21LLU)) {
		_178069_is_pub=true;
		_178053_st=_178053_st.slice(1LL);
		if ((_178053_st.len() == 0LL)) {
			_1b656acde_push_err(_self_.ptr(), _178053_st[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return std::make_tuple(_178069_is_pub,_178083_data);
		}
	}
	_178083_data=_1b6576c1d_build_node_data(_self_, _178053_st);
	return std::make_tuple(_178069_is_pub,_178083_data);
}



inline _1d06c9ce1_Node _1b6577ea5_parse_node(jule::Ptr<_1b656a382_Parser> _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _179535_st) {
	_1d06c9ce1_Node _179617_node = _1d06c9ce1_Node(_179535_st[0LL],jule::Any());
	jule::Bool _180014_is_pub;
	jule::Any _180026_data;
	std::tie(_180014_is_pub,_180026_data) = _1b6577ba8_build_general_scope_node_data(_self_, _179535_st);
	if (_180026_data == jule::Any(jule::Any(nullptr))) {
		return _179617_node;
	}
	_179617_node._field_data=_180026_data;
	_1b65775d1_apply_meta(_self_.ptr(), _179617_node,_180014_is_pub);
	_1b6576e93_check_directive(_self_.ptr(), _179617_node);
	_1b6577856_check_use_decl(_self_.ptr(), _179617_node);
	return _179617_node;
}



inline void _1b657822a_append_node(jule::Ptr<_1b656a382_Parser> _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _181336_st) {
	if ((_181336_st.len() == 0LL)) {
		return;
	}
	_1d06c9ce1_Node _181817_node = _1b6577ea5_parse_node(_self_, _181336_st);
	if ((_181817_node._field_data == jule::Any(jule::Any(nullptr))) || _1b656a926_stopped(_self_.ptr())) {
		return;
	}
	{
		
		if (_1d0659de7_is_directive(&_181817_node)) {
			_case_begin_1a8ba3c2b:;
			{
				_1b656b99e_push_directive(_self_.ptr(), _181817_node._field_data.operator jule::Ptr<_1d06c9ecd_Directive>());
			}
		}
		else if (_1d06d0c2b_is_use_decl(&_181817_node)) {
			_case_begin_1a8ba3951:;
			{
				_self_.get()._field_ast.get()._field_use_decls = jule::alloc_for_append(_self_.get()._field_ast.get()._field_use_decls,1);_self_.get()._field_ast.get()._field_use_decls.__push(_181817_node._field_data.operator jule::Ptr<_1d0769347_UseDecl>());
			}
		}
		else if (_1d0134ac0_is_decl(&_181817_node) || _1d06cb397_is_impl(&_181817_node)) {
			_case_begin_1a8ba39b7:;
			{
				_self_.get()._field_ast.get()._field_nodes = jule::alloc_for_append(_self_.get()._field_ast.get()._field_nodes,1);_self_.get()._field_ast.get()._field_nodes.__push(_181817_node);
			}
		}
		else {
			_case_begin_1a8ba38da:;
			{
				_1b656acde_push_err(_self_.ptr(), _181817_node._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1a8ba3885:;
	}
}



inline void _1b657868c_remove_range(_1b656a382_Parser* _self_,jule::I64 _183631_i,jule::Str _183639_kind,jule::Slice<jule::Ptr<_1d0747985_Token>>& _183651_tokens,jule::Slice<jule::I64>& _183674_ranges) {
	jule::Str _183713_close = _1b656945d_get_close_kind_of_brace(_183639_kind);
	for (; (_183631_i >= 0LL); (_183631_i)--) {
		{
			jule::Ptr<_1d0747985_Token> _183917_tok = _183651_tokens[_183674_ranges[_183631_i]];
			if (_183917_tok.get()._field_kind != _183713_close) {
				goto _iter_next_1a8ba7bca;
			}
			_183674_ranges=jule::append(_183674_ranges.slice(0LL,_183631_i),_183674_ranges.slice((_183631_i + 1LL)));
			goto _iter_end_1a8ba7bca;
		}
	_iter_next_1a8ba7bca:;
	}
	_iter_end_1a8ba7bca:;
}



inline void _1b6578a99_push_wrong_order_close_err(_1b656a382_Parser* _self_,jule::Ptr<_1d0747985_Token>& _184846_t,jule::Slice<jule::Ptr<_1d0747985_Token>>& _184858_tokens,jule::Slice<jule::I64>& _184877_ranges) {
	{
		auto &_match_expr{ _184858_tokens[_184877_ranges[_184877_ranges.len() - 1LL]].get()._field_kind };
		
		if (_match_expr == jule::Str("(", 1)) {
			_case_begin_1a8baa99c:;
			{
				_1b656acde_push_err(&(*_self_), _184846_t,jule::Str("was expected parentheses close", 30),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("{", 1)) {
			_case_begin_1a8baaa13:;
			{
				_1b656acde_push_err(&(*_self_), _184846_t,jule::Str("was expected brace close", 24),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("[", 1)) {
			_case_begin_1a8baaa79:;
			{
				_1b656acde_push_err(&(*_self_), _184846_t,jule::Str("was expected bracket close", 26),jule::Slice<jule::Any>());
			}
		}
		_match_end_1a8baa914:;
	}
}



inline void _1b6578eea_push_range_close(_1b656a382_Parser* _self_,jule::Ptr<_1d0747985_Token> _185935_t,jule::Str _185946_left,jule::Slice<jule::Ptr<_1d0747985_Token>>& _185958_tokens,jule::Slice<jule::I64>& _185981_ranges) {
	jule::I64 _186013_n = _185981_ranges.len();
	if ((_186013_n == 0LL)) {
		{
			auto &_match_expr{ _185935_t.get()._field_kind };
			
			if (_match_expr == jule::Str("]", 1)) {
				_case_begin_1a8bb3d90:;
				{
					_1b656acde_push_err(&(*_self_), _185935_t,jule::Str("extra closed brackets", 21),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str("}", 1)) {
				_case_begin_1a8bb41c0:;
				{
					_1b656acde_push_err(&(*_self_), _185935_t,jule::Str("extra closed braces", 19),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str(")", 1)) {
				_case_begin_1a8bb4236:;
				{
					_1b656acde_push_err(&(*_self_), _185935_t,jule::Str("extra closed parentheses", 24),jule::Slice<jule::Any>());
				}
			}
			_match_end_1a8bb40c1:;
		}
		return;
	} else if (_185958_tokens[_185981_ranges[(_186013_n - 1LL)]].get()._field_kind != _185946_left) {
		_1b6578a99_push_wrong_order_close_err(&(*_self_), _185935_t,_185958_tokens,_185981_ranges);
	}
	_1b657868c_remove_range(&(*_self_), static_cast<jule::I64>((_186013_n - 1LL)),_185935_t.get()._field_kind,_185958_tokens,_185981_ranges);
}



inline void _1b6579270_check_ranges(_1b656a382_Parser* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>>& _187732_tokens) {
	jule::Slice<jule::I64> _187817_ranges = nullptr;
	{
		auto &expr = _187732_tokens;
		auto it = expr.begin();
		_iter_begin_1a8bb8108:;
		if (it != expr.end()) {
			jule::I64 _1a8bb82b2_i = it - expr.begin();
			jule::Ptr<_1d0747985_Token> &_1a8bb84d2_token = *it;
			{
				if (_1a8bb84d2_token.get()._field_id != static_cast<jule::U64>(3LLU)) {
					goto _iter_next_1a8bb8108;
				}
				{
					auto &_match_expr{ _1a8bb84d2_token.get()._field_kind };
					
					if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
						_case_begin_1a8bb91e7:;
						{
							_187817_ranges = jule::alloc_for_append(_187817_ranges,1);_187817_ranges.__push(_1a8bb82b2_i);
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1a8bb925d:;
						{
							_1b6578eea_push_range_close(&(*_self_), _1a8bb84d2_token,jule::Str("(", 1),_187732_tokens,_187817_ranges);
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1a8bb92c4:;
						{
							_1b6578eea_push_range_close(&(*_self_), _1a8bb84d2_token,jule::Str("{", 1),_187732_tokens,_187817_ranges);
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1a8bb933a:;
						{
							_1b6578eea_push_range_close(&(*_self_), _1a8bb84d2_token,jule::Str("[", 1),_187732_tokens,_187817_ranges);
						}
					}
					_match_end_1a8bb8b20:;
				}
			}
			_iter_next_1a8bb8108:;
			++it;
			_1a8bb82b2_i++;
			goto _iter_begin_1a8bb8108;
		}
		_iter_end_1a8bb8108:;
	}
	{
		auto &expr = _187817_ranges;
		auto it = expr.begin();
		_iter_begin_1a8bbb6b1:;
		if (it != expr.end()) {
			jule::I64 _1a8bbb419_i = *it;
			{
				jule::Ptr<_1d0747985_Token> _189917_token = _187732_tokens[_1a8bbb419_i];
				{
					auto &_match_expr{ _189917_token.get()._field_kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1a8bb8856:;
						{
							_1b656acde_push_err(&(*_self_), _189917_token,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("{", 1)) {
						_case_begin_1a8bbc2d8:;
						{
							_1b656acde_push_err(&(*_self_), _189917_token,jule::Str("brace waiting to close", 22),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1a8bbc34e:;
						{
							_1b656acde_push_err(&(*_self_), _189917_token,jule::Str("bracket are waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					_match_end_1a8bbc23e:;
				}
			}
			_iter_next_1a8bbb6b1:;
			++it;
			goto _iter_begin_1a8bbb6b1;
		}
		_iter_end_1a8bbb6b1:;
	}
}



inline void _1b65794e5_parse(jule::Ptr<_1b656a382_Parser> _self_,jule::Ptr<_1d074cd75_File>& _191130_f) {
	_self_.get()._field_ast=jule::new_ptr<_1d06e7b66_Ast>(_1d06e7b66_Ast(_191130_f,jule::Slice<jule::Ptr<_1d06c9ecd_Directive>>(),jule::Slice<jule::Ptr<_1d0769347_UseDecl>>(),jule::Slice<_1d06c9ce1_Node>()));
	_1b6579270_check_ranges(_self_.ptr(), _191130_f.get()._field_tokens);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;
	}
	jule::Slice<jule::Ptr<_1b654d3cb_Stmt>> _192117_stmts = _1b654d772_split_stmts(_191130_f.get()._field_tokens);
	jule::I64 _192417_i = 0LL;
	_julec_label_iter:;
	for (; _192417_i < static_cast<jule::I64>(static_cast<jule::I64>(_192117_stmts.len())); (_192417_i)++) {
		{
			jule::Ptr<_1b654d3cb_Stmt> _192721_stmt = _192117_stmts[_192417_i];
			if ((_192721_stmt.get()._field_tokens.len() == 0LL)) {
				return;
			}
			jule::Any _193225_data;
			std::tie(std::ignore,_193225_data) = _1b6577ba8_build_general_scope_node_data(_self_, _192721_stmt.get()._field_tokens);
			if (_193225_data == jule::Any(jule::Any(nullptr))) {
				goto _iter_end_1a8bc0d58;
			}
			if (_1b656a926_stopped(_self_.ptr())) {
				return;
			}
			{
				auto &_match_expr{ _193225_data };
				
				if (_match_expr.type_is<jule::Ptr<_1d06c9ecd_Directive>>()) {
					_case_begin_1a8bc30ad:;
					{
						jule::Ptr<_1d06c9ecd_Directive> _194325_d = _193225_data.operator jule::Ptr<_1d06c9ecd_Directive>();
						if ((_194325_d != nullptr) && _1d001ae90_is_top_directive(_194325_d.get()._field_tag.get()._field_kind)) {
							_self_.get()._field_ast.get()._field_top_directives = jule::alloc_for_append(_self_.get()._field_ast.get()._field_top_directives,1);_self_.get()._field_ast.get()._field_top_directives.__push(_194325_d);
						} else {
							goto _iter_end_1a8bc0d58;
						}
					}
				}
				else {
					_case_begin_1a8bc2e59:;
					{
						goto _iter_end_1a8bc0d58;
					}
				}
				_match_end_1a8bc2e04:;
			}
		}
	_iter_next_1a8bc0d58:;
	}
	_iter_end_1a8bc0d58:;
	_self_.get()._field_errors=nullptr;
	for (; _192417_i < static_cast<jule::I64>(static_cast<jule::I64>(_192117_stmts.len())); (_192417_i)++) {
		{
			jule::Ptr<_1b654d3cb_Stmt> _195821_stmt = _192117_stmts[_192417_i];
			_1b657822a_append_node(_self_, _195821_stmt.get()._field_tokens);
			if (_1b656a926_stopped(_self_.ptr())) {
				goto _iter_end_1a8bc47b8;
			}
		}
	_iter_next_1a8bc47b8:;
	}
	_iter_end_1a8bc47b8:;
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_1b656acde_push_err(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_tag,jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75),jule::Slice<jule::Any>());
	}
}







std::ostream &operator<<(std::ostream &_Stream, _1b656a382_Parser _Src) {
	_Stream << "Parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}



inline void _1b657b250_push_err(_1b657ab78_TypeBuilder* _self_,jule::Ptr<_1d0747985_Token> _7727_token,jule::Str _7742_fmt) {
	if ((*_self_)._field_err) {
		_1b656acde_push_err((*_self_)._field_p.ptr(), _7727_token,_7742_fmt,jule::Slice<jule::Any>());
	}
}



inline void _1b657b56e_push_suggestion(_1b657ab78_TypeBuilder* _self_,jule::Str _8434_fmt,jule::Slice<jule::Any> _8447_args) {
	if ((*_self_)._field_err) {
		_1b656b10d_push_suggestion((*_self_)._field_p.ptr(), _8434_fmt,_8447_args);
	}
}



inline jule::Ptr<_1d0759c1c_TypeDecl> _1b657b7d3_build_prim(_1b657ab78_TypeBuilder* _self_) {
	jule::Ptr<_1d0759c1c_TypeDecl> _9117_t = _1b657a35e_build_prim_type((*_self_)._field_tokens[(*((*_self_)._field_i))]);
	((*((*_self_)._field_i)))++;
	return _9117_t;
}



inline jule::Ptr<_1d0759c1c_TypeDecl> _1b657ba47_build_namespace(_1b657ab78_TypeBuilder* _self_) {
	jule::Ptr<_1d0759c1c_TypeDecl> _9717_t = jule::new_ptr<_1d0759c1c_TypeDecl>(_1d0759c1c_TypeDecl((*_self_)._field_tokens[(*((*_self_)._field_i))],jule::Any()));
	jule::Ptr<_1d075a0e6_NamespaceTypeDecl> _10117_nst = jule::new_ptr<_1d075a0e6_NamespaceTypeDecl>();
	jule::I64 _10217_n = 0LL;
	for (; (*((*_self_)._field_i)) < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_tokens.len())); ((*((*_self_)._field_i)))++) {
		{
			jule::Ptr<_1d0747985_Token> _10421_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];
			if (((_10217_n & 1LL) == 0LL)) {
				if (_10421_token.get()._field_id != static_cast<jule::U64>(2LLU)) {
					_1b657b250_push_err(&(*_self_), _10421_token,jule::Str("invalid syntax", 14));
					_1b657b56e_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
				}
				_10117_nst.get()._field_idents = jule::alloc_for_append(_10117_nst.get()._field_idents,1);_10117_nst.get()._field_idents.__push(_10421_token);
			} else if (_10421_token.get()._field_id != static_cast<jule::U64>(23LLU)) {
				goto _iter_end_1a8bcc5e5;
			}
			(_10217_n)++;
		}
	_iter_next_1a8bcc5e5:;
	}
	_iter_end_1a8bcc5e5:;
	_10117_nst.get()._field_idents=_10117_nst.get()._field_idents.slice(0LL,(_10117_nst.get()._field_idents.len() - 1LL));
	((*((*_self_)._field_i)))--;
	_10117_nst.get()._field_kind=_1b657c284_build_ident(&(*_self_)).get()._field_kind.operator jule::Ptr<_1d0759e09_IdentTypeDecl>();
	_9717_t.get()._field_kind=jule::Any(_10117_nst);
	return _9717_t;
}



inline jule::Slice<jule::Ptr<_1d0759c1c_TypeDecl>> _1b657bcab_build_generics(_1b657ab78_TypeBuilder* _self_) {
	if ((*((*_self_)._field_i)) >= static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_tokens.len()))) {
		return nullptr;
	}
	jule::Ptr<_1d0747985_Token> _13013_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];
	if ((_13013_token.get()._field_id != static_cast<jule::U64>(3LLU)) || (_13013_token.get()._field_kind != jule::Str("[", 1))) {
		return nullptr;
	}
	jule::Slice<jule::Slice<jule::Ptr<_1d0747985_Token>>> _13517_parts = _1b657c020_ident_generics(&(*_self_));
	if ((_13517_parts.len() == 0LL)) {
		_1b657b250_push_err(&(*_self_), _13013_token,jule::Str("invalid syntax", 14));
		return nullptr;
	}
	jule::Slice<jule::Ptr<_1d0759c1c_TypeDecl>> _14117_types = jule::Slice<jule::Ptr<_1d0759c1c_TypeDecl>>::alloc(0LL,static_cast<jule::I64>(_13517_parts.len()));
	{
		auto &expr = _13517_parts;
		auto it = expr.begin();
		_iter_begin_1a8bd5de5:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1d0747985_Token>> _1a8bd5950_part = *it;
			{
				jule::I64 _14321_j = 0LL;
				jule::Ptr<_1d0759c1c_TypeDecl> _14422_t;
				std::tie(_14422_t,std::ignore) = _1b656c708_build_type((*_self_)._field_p, _1a8bd5950_part,(&(_14321_j)),true);
				if (_14321_j < static_cast<jule::I64>(static_cast<jule::I64>(_1a8bd5950_part.len()))) {
					_1b657b250_push_err(&(*_self_), _1a8bd5950_part[_14321_j],jule::Str("invalid syntax", 14));
				}
				_14117_types = jule::alloc_for_append(_14117_types,1);_14117_types.__push(_14422_t);
			}
			_iter_next_1a8bd5de5:;
			++it;
			goto _iter_begin_1a8bd5de5;
		}
		_iter_end_1a8bd5de5:;
	}
	return _14117_types;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1d0747985_Token>>> _1b657c020_ident_generics(_1b657ab78_TypeBuilder* _self_) {
	jule::I64 _15413_first = (*((*_self_)._field_i));
	jule::I64 _15517_range_n = 0LL;
	for (; (*((*_self_)._field_i)) < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_tokens.len())); ((*((*_self_)._field_i)))++) {
		{
			jule::Ptr<_1d0747985_Token> _15717_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];
			if (_15717_token.get()._field_id == static_cast<jule::U64>(3LLU)) {
				{
					auto &_match_expr{ _15717_token.get()._field_kind };
					
					if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1a8bd9910:;
						{
							(_15517_range_n)++;
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1a8bd9976:;
						{
							(_15517_range_n)--;
						}
					}
					_match_end_1a8bd9888:;
				}
			}
			if ((_15517_range_n == 0LL)) {
				((*((*_self_)._field_i)))++;
				goto _iter_end_1a8bd8634;
			}
		}
	_iter_next_1a8bd8634:;
	}
	_iter_end_1a8bd8634:;
	jule::Slice<jule::Ptr<_1d0747985_Token>> _17117_tokens = (*_self_)._field_tokens.slice((_15413_first + 1LL),((*((*_self_)._field_i)) - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_1d0747985_Token>>> _17218_parts;
	jule::Slice<_1d0019224_Log> _17225_errors;
	std::tie(_17218_parts,_17225_errors) = _1b6569172_parts(_17117_tokens,static_cast<jule::U64>(8LLU),true);
	if ((*_self_)._field_err) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_17225_errors);
	}
	return _17218_parts;
}



inline jule::Ptr<_1d0759c1c_TypeDecl> _1b657c284_build_ident(_1b657ab78_TypeBuilder* _self_) {
	if ((((*((*_self_)._field_i)) + 1LL) < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_tokens.len()))) && ((*_self_)._field_tokens[((*((*_self_)._field_i)) + 1LL)].get()._field_id == static_cast<jule::U64>(23LLU))) {
		return _1b657ba47_build_namespace(&(*_self_));
	}
	jule::Ptr<_1d0747985_Token> _18317_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];
	jule::Ptr<_1d0759e09_IdentTypeDecl> _18417_it = jule::new_ptr<_1d0759e09_IdentTypeDecl>(_1d0759e09_IdentTypeDecl(_18317_token,_18317_token.get()._field_kind,false,jule::Slice<jule::Ptr<_1d0759c1c_TypeDecl>>()));
	((*((*_self_)._field_i)))++;
	_18417_it.get()._field_generics=_1b657bcab_build_generics(&(*_self_));
	return jule::new_ptr<_1d0759c1c_TypeDecl>(_1d0759c1c_TypeDecl(_18317_token,jule::Any(jule::Any(_18417_it))));
}



inline jule::Ptr<_1d0759c1c_TypeDecl> _1b657c4e8_build_cpp_link(_1b657ab78_TypeBuilder* _self_) {
	if ((((*((*_self_)._field_i)) + 1LL) >= static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_tokens.len()))) || ((*_self_)._field_tokens[((*((*_self_)._field_i)) + 1LL)].get()._field_id != static_cast<jule::U64>(20LLU))) {
		_1b657b250_push_err(&(*_self_), (*_self_)._field_tokens[(*((*_self_)._field_i))],jule::Str("invalid syntax", 14));
		return nullptr;
	}
	(*((*_self_)._field_i))+=2LL;
	jule::Ptr<_1d0759c1c_TypeDecl> _20317_t = _1b657c284_build_ident(&(*_self_));
	_20317_t.get()._field_kind.operator jule::Ptr<_1d0759e09_IdentTypeDecl>().get()._field_cpp_linked=true;
	return _20317_t;
}



inline jule::Ptr<_1d0759c1c_TypeDecl> _1b657c75c_build_fn(_1b657ab78_TypeBuilder* _self_) {
	jule::Ptr<_1d0747985_Token> _20917_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];
	jule::Ptr<_1d0763709_FnDecl> _21017_f = _1b65714cb_build_fn_prototype((*_self_)._field_p, (*_self_)._field_tokens,(*((*_self_)._field_i)),false);
	if ((_21017_f == nullptr)) {
		return nullptr;
	}
	if ((!(_1d0763a5b_is_anon(_21017_f.ptr())))) {
		_1b657b250_push_err(&(*_self_), _21017_f.get()._field_token,jule::Str("invalid syntax", 14));
	}
	return jule::new_ptr<_1d0759c1c_TypeDecl>(_1d0759c1c_TypeDecl(_20917_token,jule::Any(jule::Any(_21017_f))));
}



inline jule::Ptr<_1d0759c1c_TypeDecl> _1b657c9c1_build_ptr(_1b657ab78_TypeBuilder* _self_) {
	jule::Ptr<_1d0747985_Token> _22417_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];
	if (((*((*_self_)._field_i)) + 1LL) >= static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_tokens.len()))) {
		_1b657b250_push_err(&(*_self_), _22417_token,jule::Str("invalid syntax", 14));
		return nullptr;
	}
	((*((*_self_)._field_i)))++;
	if ((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_id == static_cast<jule::U64>(35LLU)) {
		((*((*_self_)._field_i)))++;
		return jule::new_ptr<_1d0759c1c_TypeDecl>(_1d0759c1c_TypeDecl(_22417_token,jule::Any(jule::Any(jule::new_ptr<_1d075a899_PtrTypeDecl>(_1d075a899_PtrTypeDecl(nullptr))))));
	}
	jule::Ptr<_1d0759c1c_TypeDecl> _24117_elem = _1b657dd02_step(&(*_self_));
	if ((_24117_elem == nullptr)) {
		return nullptr;
	}
	return jule::new_ptr<_1d0759c1c_TypeDecl>(_1d0759c1c_TypeDecl(_22417_token,jule::Any(jule::Any(jule::new_ptr<_1d075a899_PtrTypeDecl>(_1d075a899_PtrTypeDecl(_24117_elem))))));
}



inline jule::Ptr<_1d0759c1c_TypeDecl> _1b657cc35_build_sptr(_1b657ab78_TypeBuilder* _self_) {
	jule::Ptr<_1d0747985_Token> _25517_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];
	if (((*((*_self_)._field_i)) + 1LL) >= static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_tokens.len()))) {
		_1b657b250_push_err(&(*_self_), _25517_token,jule::Str("invalid syntax", 14));
		return nullptr;
	}
	((*((*_self_)._field_i)))++;
	jule::Ptr<_1d0759c1c_TypeDecl> _26217_elem = _1b657dd02_step(&(*_self_));
	if ((_26217_elem == nullptr)) {
		return nullptr;
	}
	return jule::new_ptr<_1d0759c1c_TypeDecl>(_1d0759c1c_TypeDecl(_25517_token,jule::Any(jule::Any(jule::new_ptr<_1d075a2d3_SptrTypeDecl>(_1d075a2d3_SptrTypeDecl(_26217_elem))))));
}



inline jule::Ptr<_1d0759c1c_TypeDecl> _1b657ce99_build_op(_1b657ab78_TypeBuilder* _self_) {
	jule::Ptr<_1d0747985_Token> _27617_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];
	{
		auto &_match_expr{ _27617_token.get()._field_kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1a8beee53:;
			{
				return _1b657c9c1_build_ptr(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1a8beebab:;
			{
				return _1b657cc35_build_sptr(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1a8beec22:;
			{
				return jule::new_ptr<_1d0759c1c_TypeDecl>(_1d0759c1c_TypeDecl(jule::Ptr<_1d0747985_Token>(),jule::Any(jule::Any(jule::new_ptr<_1d075a2d3_SptrTypeDecl>(_1d075a2d3_SptrTypeDecl(_1b657cc35_build_sptr(&(*_self_))))))));
			}
		}
		else {
			_case_begin_1a8bee392:;
			{
				_1b657b250_push_err(&(*_self_), _27617_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
		_match_end_1a8beeb45:;
	}
}



inline jule::Ptr<_1d0759c1c_TypeDecl> _1b657d20d_build_slc(_1b657ab78_TypeBuilder* _self_) {
	jule::Ptr<_1d0747985_Token> _29517_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];
	((*((*_self_)._field_i)))++;
	jule::Ptr<_1d0759c1c_TypeDecl> _29717_elem = _1b657dd02_step(&(*_self_));
	if ((_29717_elem == nullptr)) {
		return nullptr;
	}
	return jule::new_ptr<_1d0759c1c_TypeDecl>(_1d0759c1c_TypeDecl(_29517_token,jule::Any(jule::Any(jule::new_ptr<_1d075a4c0_SlcTypeDecl>(_1d075a4c0_SlcTypeDecl(_29717_elem))))));
}



inline jule::Ptr<_1d0759c1c_TypeDecl> _1b657d472_build_arr(_1b657ab78_TypeBuilder* _self_) {
	if ((*((*_self_)._field_i)) >= static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_tokens.len()))) {
		_1b657b250_push_err(&(*_self_), (*_self_)._field_tokens[((*((*_self_)._field_i)) - 1LL)],jule::Str("type missing", 12));
		return nullptr;
	}
	jule::I64 _31813_expr_delta = (*((*_self_)._field_i));
	jule::Ptr<_1d0759c1c_TypeDecl> _32017_elem = _1b657dd02_step(&(*_self_));
	if ((_32017_elem == nullptr)) {
		return nullptr;
	}
	jule::Ptr<_1d075aa86_ArrTypeDecl> _32517_arrt = jule::new_ptr<_1d075aa86_ArrTypeDecl>(_1d075aa86_ArrTypeDecl(_32017_elem,jule::Ptr<_1d075b14c_Expr>()));
	jule::Slice<jule::Ptr<_1d0747985_Token>> _32917_expr_tokens = (*_self_)._field_tokens.slice(0LL,_31813_expr_delta);
	std::tie(std::ignore,_32917_expr_tokens) = _1b6568c43_range_last(_32917_expr_tokens);
	_32917_expr_tokens=_32917_expr_tokens.slice(1LL,(_32917_expr_tokens.len() - 1LL));
	jule::Ptr<_1d0747985_Token> _33217_token = _32917_expr_tokens[0LL];
	if (((_32917_expr_tokens.len() == 1LL) && (_33217_token.get()._field_id == static_cast<jule::U64>(7LLU))) && (_33217_token.get()._field_kind == jule::Str("...", 3))) {
	} else {
		_32517_arrt.get()._field_size=_1b656b41b_build_expr((*_self_)._field_p, _32917_expr_tokens);
	}
	return jule::new_ptr<_1d0759c1c_TypeDecl>(_1d0759c1c_TypeDecl(_33217_token,jule::Any(jule::Any(_32517_arrt))));
}



inline jule::Ptr<_1d0759c1c_TypeDecl> _1b657d829_build_map(_1b657ab78_TypeBuilder* _self_,jule::I64 _34528_colon,jule::Slice<jule::Ptr<_1d0747985_Token>>& _34545_tokens) {
	jule::Ptr<_1d0747985_Token> _34617_colon_token = (*_self_)._field_tokens[_34528_colon];
	if ((_34528_colon == 0LL) || ((_34528_colon + 1LL) >= static_cast<jule::I64>(static_cast<jule::I64>(_34545_tokens.len())))) {
		_1b657b250_push_err(&(*_self_), _34617_colon_token,jule::Str("type missing", 12));
		return nullptr;
	}
	jule::Slice<jule::Ptr<_1d0747985_Token>> _35117_key_tokens = _34545_tokens.slice(0LL,_34528_colon);
	jule::Slice<jule::Ptr<_1d0747985_Token>> _35217_val_tokens = _34545_tokens.slice((_34528_colon + 1LL));
	jule::Ptr<_1d075ac73_MapTypeDecl> _35317_mapt = jule::new_ptr<_1d075ac73_MapTypeDecl>(_1d075ac73_MapTypeDecl());
	jule::I64 _35517_j = 0LL;
	jule::Ptr<_1d0759c1c_TypeDecl> _35618_keyt;
	jule::Bool _35628_ok;
	std::tie(_35618_keyt,_35628_ok) = _1b656c708_build_type((*_self_)._field_p, _35117_key_tokens,(&(_35517_j)),(*_self_)._field_err);
	if ((!(_35628_ok))) {
		return nullptr;
	} else if (_35517_j < static_cast<jule::I64>(static_cast<jule::I64>(_35117_key_tokens.len()))) {
		_1b657b250_push_err(&(*_self_), _35117_key_tokens[_35517_j],jule::Str("invalid syntax", 14));
	}
	_35317_mapt.get()._field_key=_35618_keyt;
	_35517_j=0LL;
	jule::Ptr<_1d0759c1c_TypeDecl> _36518_valt;
	std::tie(_36518_valt,_35628_ok) = _1b656c708_build_type((*_self_)._field_p, _35217_val_tokens,(&(_35517_j)),(*_self_)._field_err);
	if ((!(_35628_ok))) {
		return nullptr;
	} else if (_35517_j < static_cast<jule::I64>(static_cast<jule::I64>(_35217_val_tokens.len()))) {
		_1b657b250_push_err(&(*_self_), _35217_val_tokens[_35517_j],jule::Str("invalid syntax", 14));
	}
	_35317_mapt.get()._field_val=_36518_valt;
	return jule::new_ptr<_1d0759c1c_TypeDecl>(_1d0759c1c_TypeDecl(_34617_colon_token,jule::Any(jule::Any(_35317_mapt))));
}



inline jule::Ptr<_1d0759c1c_TypeDecl> _1b657da8d_build_enumerable(_1b657ab78_TypeBuilder* _self_) {
	jule::Ptr<_1d0747985_Token> _38017_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];
	if (((((*((*_self_)._field_i)) + 2LL) >= static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_tokens.len()))) || (_38017_token.get()._field_id != static_cast<jule::U64>(3LLU))) || (_38017_token.get()._field_kind != jule::Str("[", 1))) {
		_1b657b250_push_err(&(*_self_), _38017_token,jule::Str("invalid syntax", 14));
		return nullptr;
	}
	((*((*_self_)._field_i)))++;
	_38017_token=(*_self_)._field_tokens[(*((*_self_)._field_i))];
	if ((_38017_token.get()._field_id == static_cast<jule::U64>(3LLU)) && (_38017_token.get()._field_kind == jule::Str("]", 1))) {
		return _1b657d20d_build_slc(&(*_self_));
	}
	((*((*_self_)._field_i)))--;
	jule::Slice<jule::Ptr<_1d0747985_Token>> _39418_map_tokens;
	jule::I64 _39430_colon;
	std::tie(_39418_map_tokens,_39430_colon) = _1b657a6a0_split_map_range((*_self_)._field_tokens,(*((*_self_)._field_i)));
	((*((*_self_)._field_i)))++;
	if ((_39430_colon == -1LL)) {
		return _1b657d472_build_arr(&(*_self_));
	}
	return _1b657d829_build_map(&(*_self_), _39430_colon,_39418_map_tokens);
}



inline jule::Ptr<_1d0759c1c_TypeDecl> _1b657dd02_step(_1b657ab78_TypeBuilder* _self_) {
	jule::Ptr<_1d0747985_Token> _40313_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];
	{
		auto &_match_expr{ _40313_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1a8c17278:;
			{
				return _1b657b7d3_build_prim(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1a8c172de:;
			{
				return _1b657c284_build_ident(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1a8c17355:;
			{
				return _1b657c4e8_build_cpp_link(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1a8c17e05:;
			{
				return _1b657c75c_build_fn(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1a8c17e6b:;
			{
				return _1b657ce99_build_op(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1a8c17ed2:;
			{
				return _1b657da8d_build_enumerable(&(*_self_));
			}
		}
		else {
			_case_begin_1a8c16189:;
			{
				((*((*_self_)._field_i)))++;
				_1b657b250_push_err(&(*_self_), _40313_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
		_match_end_1a8c1718a:;
	}
}



inline std::tuple<jule::Ptr<_1d0759c1c_TypeDecl>,jule::Bool> _1b657e066_build(_1b657ab78_TypeBuilder* _self_) {
	jule::Bool _42644_ok = jule::Bool();
	jule::Ptr<_1d0759c1c_TypeDecl> _42717_root = _1b657dd02_step(&(*_self_));
	if ((_42717_root == nullptr)) {
		_42644_ok = false;
		return std::make_tuple(_1b657a0d9_build_void_type(),_42644_ok);
	}
	_42644_ok = true;
	return std::make_tuple(_42717_root,_42644_ok);
}







std::ostream &operator<<(std::ostream &_Stream, _1b657ab78_TypeBuilder _Src) {
	_Stream << "TypeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a71e9c9b_FloatInfo _Src) {
	_Stream << "FloatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a708e723_DecimalSlice _Src) {
	_Stream << "DecimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a7460880_LeftCheat _Src) {
	_Stream << "LeftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a745d52b_set(_1a7460ce2_Decimal* _self_,jule::Str _23322_s) {
	jule::Bool _23332_ok = jule::Bool();
	jule::I64 _23417_i = 0LL;
	(*_self_)._field_neg=false;
	(*_self_)._field_trunc=false;
	if (_23417_i >= static_cast<jule::I64>(static_cast<jule::I64>(_23322_s.len()))) {
		return _23332_ok;
	}
	{
		
		if (_23322_s[_23417_i] == '+') {
			_case_begin_1a916c6cd:;
			{
				(_23417_i)++;
			}
		}
		else if (_23322_s[_23417_i] == '-') {
			_case_begin_1a916c887:;
			{
				(*_self_)._field_neg=true;
				(_23417_i)++;
			}
		}
		_match_end_1a916c4be:;
	}
	jule::Bool _25117_sawdot = false;
	jule::Bool _25217_sawdigits = false;
	for (; _23417_i < static_cast<jule::I64>(static_cast<jule::I64>(_23322_s.len())); (_23417_i)++) {
		{
			{
				
				if (_23322_s[_23417_i] == '_') {
					_case_begin_1a916e647:;
					{
						goto _iter_next_1a916c14a;
					}
				}
				else if (_23322_s[_23417_i] == '.') {
					_case_begin_1a916e6be:;
					{
						if (_25117_sawdot) {
							return _23332_ok;
						}
						_25117_sawdot=true;
						(*_self_)._field_dp=(*_self_)._field_nd;
						goto _iter_next_1a916c14a;
					}
				}
				else if (('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9')) {
					_case_begin_1a916e746:;
					{
						_25217_sawdigits=true;
						if ((_23322_s[_23417_i] == '0') && ((*_self_)._field_nd == 0LL)) {
							((*_self_)._field_dp)--;
							goto _iter_next_1a916c14a;
						}
						if (((*_self_)._field_nd < 800LL)) {
							(*_self_)._field_d[(*_self_)._field_nd]=_23322_s[_23417_i];
							((*_self_)._field_nd)++;
						} else if (_23322_s[_23417_i] != '0') {
							(*_self_)._field_trunc=true;
						}
						goto _iter_next_1a916c14a;
					}
				}
				_match_end_1a916e526:;
			}
			goto _iter_end_1a916c14a;
		}
	_iter_next_1a916c14a:;
	}
	_iter_end_1a916c14a:;
	if ((!(_25217_sawdigits))) {
		return _23332_ok;
	}
	if ((!(_25117_sawdot))) {
		(*_self_)._field_dp=(*_self_)._field_nd;
	}
	if ((_23417_i < static_cast<jule::I64>(static_cast<jule::I64>(_23322_s.len()))) && (_1a708aee4_lower(_23322_s[_23417_i]) == 'e')) {
		(_23417_i)++;
		if (_23417_i >= static_cast<jule::I64>(static_cast<jule::I64>(_23322_s.len()))) {
			return _23332_ok;
		}
		jule::I64 _29721_esign = 1LL;
		if (_23322_s[_23417_i] == '+') {
			(_23417_i)++;
		} else if (_23322_s[_23417_i] == '-') {
			(_23417_i)++;
			_29721_esign=-1LL;
		}
		if (((_23417_i >= static_cast<jule::I64>(static_cast<jule::I64>(_23322_s.len()))) || (_23322_s[_23417_i] < '0')) || (_23322_s[_23417_i] > '9')) {
			return _23332_ok;
		}
		jule::I64 _30721_e = 0LL;
		for (; (_23417_i < static_cast<jule::I64>(static_cast<jule::I64>(_23322_s.len()))) && ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9')) || (_23322_s[_23417_i] == '_')); (_23417_i)++) {
			{
				if (_23322_s[_23417_i] == '_') {
					goto _iter_next_1a917741e;
				}
				if ((_30721_e < 10000LL)) {
					_30721_e=static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>((_30721_e * 10LL))) + static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_23322_s[_23417_i]))))) - '0');
				}
			}
		_iter_next_1a917741e:;
		}
		_iter_end_1a917741e:;
		(*_self_)._field_dp+=static_cast<jule::I64>(_30721_e * _29721_esign);
	}
	if (_23417_i != static_cast<jule::I64>(static_cast<jule::I64>(_23322_s.len()))) {
		return _23332_ok;
	}
	_23332_ok=true;
	return _23332_ok;
}



inline std::tuple<jule::U64,jule::Bool> _1a745d65d_float_bits(_1a7460ce2_Decimal* _self_,_1a71e9c9b_FloatInfo& _32730_flt) {
	jule::U64 _32748_b = jule::U64();
	jule::Bool _32756_overflow = jule::Bool();
	jule::I64 _32817_exp = 0LL;
	jule::U64 _32917_mant = 0LLU;
	if (((*_self_)._field_nd == 0LL)) {
		_32917_mant=0LLU;
		_32817_exp=_32730_flt._field_bias;
		goto _julec_label_out;
	}
	if (((*_self_)._field_dp > 310LL)) {
		goto _julec_label_overflow;
	}
	if (((*_self_)._field_dp < -330LL)) {
		_32917_mant=0LLU;
		_32817_exp=_32730_flt._field_bias;
		goto _julec_label_out;
	}
	_32817_exp=0LL;
	while (((*_self_)._field_dp > 0LL)) {
		{
			jule::I64 _35421_n = 0LL;
			if ((*_self_)._field_dp >= static_cast<jule::I64>(static_cast<jule::I64>(_1a71ede8c_POWTAB.len()))) {
				_35421_n=27LL;
			} else {
				_35421_n=_1a71ede8c_POWTAB[(*_self_)._field_dp];
			}
			_1a7461474_shift(&(*_self_), static_cast<jule::I64>((-(_35421_n))));
			_32817_exp+=_35421_n;
		}
	_iter_next_1a917e921:;
	}
	_iter_end_1a917e921:;
	while (((*_self_)._field_dp < 0LL) || (((*_self_)._field_dp == 0LL) && ((*_self_)._field_d[0LL] < '5'))) {
		{
			jule::I64 _36421_n = 0LL;
			if ((-((*_self_)._field_dp)) >= static_cast<jule::I64>(static_cast<jule::I64>(_1a71ede8c_POWTAB.len()))) {
				_36421_n=27LL;
			} else {
				_36421_n=_1a71ede8c_POWTAB[(-((*_self_)._field_dp))];
			}
			_1a7461474_shift(&(*_self_), _36421_n);
			_32817_exp-=_36421_n;
		}
	_iter_next_1a918156b:;
	}
	_iter_end_1a918156b:;
	(_32817_exp)--;
	if (_32817_exp < static_cast<jule::I64>(static_cast<jule::I64>((_32730_flt._field_bias + 1LL)))) {
		jule::I64 _38117_n = (_32730_flt._field_bias + 1LL) - _32817_exp;
		_1a7461474_shift(&(*_self_), static_cast<jule::I64>((-(_38117_n))));
		_32817_exp+=_38117_n;
	}
	if ((_32817_exp - _32730_flt._field_bias) >= static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(((1LL << _32730_flt._field_expbits) - 1LL))))) {
		goto _julec_label_overflow;
	}
	_1a7461474_shift(&(*_self_), static_cast<jule::I64>(static_cast<jule::I64>(1LL + _32730_flt._field_mantbits)));
	_32917_mant=static_cast<jule::U64>(_1a7461e58_rounded_integer(&(*_self_)));
	if (_32917_mant == static_cast<jule::U64>(static_cast<jule::U64>(2LLU << _32730_flt._field_mantbits))) {
		_32917_mant>>=1LLU;
		(_32817_exp)++;
		if ((_32817_exp - _32730_flt._field_bias) >= static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(((1LL << _32730_flt._field_expbits) - 1LL))))) {
			goto _julec_label_overflow;
		}
	}
	if (((_32917_mant & static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(1LLU << _32730_flt._field_mantbits)))) == 0LLU)) {
		_32817_exp=_32730_flt._field_bias;
	}
	goto _julec_label_out;
	_julec_label_overflow:;
	_32917_mant=0LLU;
	_32817_exp=static_cast<jule::I64>(static_cast<jule::I64>(((static_cast<jule::U64>(1LLU) << _32730_flt._field_expbits) - 1LLU) + static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_32730_flt._field_bias)))));
	_32756_overflow=true;
	_julec_label_out:;
	jule::U64 _41717_bits = _32917_mant & static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(1LLU << _32730_flt._field_mantbits)) - 1LLU))));
	_41717_bits|=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_32817_exp - _32730_flt._field_bias) & static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(((1LL << _32730_flt._field_expbits) - 1LL))))))) << _32730_flt._field_mantbits);
	if ((*_self_)._field_neg) {
		_41717_bits|=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(1LLU << _32730_flt._field_mantbits)) << _32730_flt._field_expbits);
	}
	_32748_b = _41717_bits;
	return std::make_tuple(_32748_b,_32756_overflow);
}



inline void _1a74611ee_assign(_1a7460ce2_Decimal* _self_,jule::U64 _21029_v) {
	jule::Array<jule::U8,24> _21117_buf = jule::Array<jule::U8,24>();
	jule::I64 _21417_n = 0LL;
	while ((_21029_v > 0LLU)) {
		{
			jule::U64 _21617_v1 = (_21029_v / 10LLU);
			_21029_v-=static_cast<jule::U64>(10LLU * _21617_v1);
			_21117_buf[_21417_n]=static_cast<jule::U8>(static_cast<jule::U8>(_21029_v + '0'));
			(_21417_n)++;
			_21029_v=_21617_v1;
		}
	_iter_next_1a918e315:;
	}
	_iter_end_1a918e315:;
	(*_self_)._field_nd=0LL;
	(_21417_n)--;
	for (; (_21417_n >= 0LL); (_21417_n)--) {
		{
			(*_self_)._field_d[(*_self_)._field_nd]=_21117_buf[_21417_n];
			((*_self_)._field_nd)++;
		}
	_iter_next_1a918e3c0:;
	}
	_iter_end_1a918e3c0:;
	(*_self_)._field_dp=(*_self_)._field_nd;
	_1a746250d_trim((*_self_));
}



inline void _1a7461474_shift(_1a7460ce2_Decimal* _self_,jule::I64 _23528_k) {
	{
		
		if (((*_self_)._field_nd == 0LL)) {
			_case_begin_1a9191ed8:;
		}
		else if ((_23528_k > 0LL)) {
			_case_begin_1a9192060:;
			{
				while ((_23528_k > 60LL)) {
					{
						_1a7462e9d_left_shift((*_self_),60LLU);
						_23528_k-=60LL;
					}
				_iter_next_1a9192736:;
				}
				_iter_end_1a9192736:;
				_1a7462e9d_left_shift((*_self_),static_cast<jule::U64>(static_cast<jule::U64>(_23528_k)));
			}
		}
		else if ((_23528_k < 0LL)) {
			_case_begin_1a91920d7:;
			{
				while ((_23528_k < -60LL)) {
					{
						_1a74627b6_right_shift((*_self_),60LLU);
						_23528_k+=60LL;
					}
				_iter_next_1a919378c:;
				}
				_iter_end_1a919378c:;
				_1a74627b6_right_shift((*_self_),static_cast<jule::U64>(static_cast<jule::U64>((-(_23528_k)))));
			}
		}
		_match_end_1a9191db7:;
	}
}



inline void _1a74616e9_round_down(_1a7460ce2_Decimal* _self_,jule::I64 _25529_nd) {
	if ((_25529_nd < 0LL) || (_25529_nd >= (*_self_)._field_nd)) {
		return;
	}
	(*_self_)._field_nd=_25529_nd;
	_1a746250d_trim((*_self_));
}



inline void _1a746196e_round_up(_1a7460ce2_Decimal* _self_,jule::I64 _26427_nd) {
	if ((_26427_nd < 0LL) || (_26427_nd >= (*_self_)._field_nd)) {
		return;
	}
	jule::I64 _27017_i = (_26427_nd - 1LL);
	for (; (_27017_i >= 0LL); (_27017_i)--) {
		{
			jule::U8 _27217_c = (*_self_)._field_d[_27017_i];
			if (_27217_c < '9') {
				((*_self_)._field_d[_27017_i])++;
				(*_self_)._field_nd=static_cast<jule::I64>((_27017_i + 1LL));
				return;
			}
		}
	_iter_next_1a91966b3:;
	}
	_iter_end_1a91966b3:;
	(*_self_)._field_d[0LL]='1';
	(*_self_)._field_nd=1LL;
	((*_self_)._field_dp)++;
}



inline void _1a7461be4_round(_1a7460ce2_Decimal* _self_,jule::I64 _29124_nd) {
	if ((_29124_nd < 0LL) || (_29124_nd >= (*_self_)._field_nd)) {
		return;
	}
	if (_1a74632de_should_round_up((*_self_),_29124_nd)) {
		_1a746196e_round_up(&(*_self_), _29124_nd);
	} else {
		_1a74616e9_round_down(&(*_self_), _29124_nd);
	}
}



inline jule::U64 _1a7461e58_rounded_integer(_1a7460ce2_Decimal* _self_) {
	if (((*_self_)._field_dp > 20LL)) {
		return jule::MAX_U64;
	}
	jule::I64 _30817_i = 0LL;
	jule::U64 _30917_n = 0LLU;
	for (; (_30817_i < (*_self_)._field_dp) && (_30817_i < (*_self_)._field_nd); (_30817_i)++) {
		{
			_30917_n=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_30917_n * 10LLU))) + static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_d[_30817_i] - '0'))));
		}
	_iter_next_1a919a101:;
	}
	_iter_end_1a919a101:;
	for (; _30817_i < (*_self_)._field_dp; (_30817_i)++) {
		{
			_30917_n*=10LLU;
		}
	_iter_next_1a919d544:;
	}
	_iter_end_1a919d544:;
	if (_1a74632de_should_round_up((*_self_),(*_self_)._field_dp)) {
		(_30917_n)++;
	}
	return _30917_n;
}







std::ostream &operator<<(std::ostream &_Stream, _1a7460ce2_Decimal _Src) {
	_Stream << "Decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a751ddb1_Const> static__1a751cdb0_new_i64(jule::I64 _1327_x) {
	return jule::new_ptr<_1a751ddb1_Const>(_1a751ddb1_Const(jule::Any(jule::Any(_1327_x))));
}



inline jule::Ptr<_1a751ddb1_Const> static__1a751e09d_new_u64(jule::U64 _1627_x) {
	return jule::new_ptr<_1a751ddb1_Const>(_1a751ddb1_Const(jule::Any(jule::Any(_1627_x))));
}



inline jule::Ptr<_1a751ddb1_Const> static__1a751e2e0_new_bool(jule::Bool _1928_x) {
	return jule::new_ptr<_1a751ddb1_Const>(_1a751ddb1_Const(jule::Any(jule::Any(_1928_x))));
}



inline jule::Ptr<_1a751ddb1_Const> static__1a751e587_new_str(jule::Str _2227_x) {
	return jule::new_ptr<_1a751ddb1_Const>(_1a751ddb1_Const(jule::Any(jule::Any(_2227_x))));
}



inline jule::Ptr<_1a751ddb1_Const> static__1a751e82e_new_f64(jule::F64 _2527_x) {
	return jule::new_ptr<_1a751ddb1_Const>(_1a751ddb1_Const(jule::Any(jule::Any(_2527_x))));
}



inline jule::Ptr<_1a751ddb1_Const> static__1a751ea2c_new_nil(void) {
	return jule::new_ptr<_1a751ddb1_Const>(_1a751ddb1_Const(jule::Any(jule::Any(nullptr))));
}



inline jule::I64 _1a7520126_read_i64(_1a751ddb1_Const* _self_) {
	if ((!(_1a75224be_is_i64(&(*_self_))))) {
		return 0LL;
	}
	return static_cast<jule::I64>((*_self_)._field_data.operator jule::I64());
}



inline jule::U64 _1a752038a_read_u64(_1a751ddb1_Const* _self_) {
	if ((!(_1a7522733_is_u64(&(*_self_))))) {
		return 0LLU;
	}
	return static_cast<jule::U64>((*_self_)._field_data.operator jule::U64());
}



inline jule::Bool _1a75205ee_read_bool(_1a751ddb1_Const* _self_) {
	if ((!(_1a7522997_is_bool(&(*_self_))))) {
		return false;
	}
	return (*_self_)._field_data.operator jule::Bool();
}



inline jule::Str _1a7520863_read_str(_1a751ddb1_Const* _self_) {
	if ((!(_1a7522c0b_is_str(&(*_self_))))) {
		return jule::Str();
	}
	return (*_self_)._field_data.operator jule::Str();
}



inline jule::F64 _1a7520ac7_read_f64(_1a751ddb1_Const* _self_) {
	if ((!(_1a7522e70_is_f64(&(*_self_))))) {
		return 0LL;
	}
	return static_cast<jule::F64>((*_self_)._field_data.operator jule::F64());
}



inline jule::I64 _1a7520d3b_as_i64(_1a751ddb1_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1a9352a5b:;
			{
				return static_cast<jule::I64>((*_self_)._field_data.operator jule::I64());
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1a9352ac2:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_data.operator jule::U64()));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1a93524c8:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_data.operator jule::F64()));
			}
		}
		else {
			_case_begin_1a9352396:;
			{
				return 0LL;
			}
		}
		_match_end_1a9352198:;
	}
}



inline jule::U64 _1a75210a0_as_u64(_1a751ddb1_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1a935492b:;
			{
				return static_cast<jule::U64>((*_self_)._field_data.operator jule::U64());
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1a9354992:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_data.operator jule::I64()));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1a9354376:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_data.operator jule::F64()));
			}
		}
		else {
			_case_begin_1a93542cc:;
			{
				return 0LLU;
			}
		}
		_match_end_1a9354277:;
	}
}



inline jule::F64 _1a7521314_as_f64(_1a751ddb1_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1a93567eb:;
			{
				return static_cast<jule::F64>((*_self_)._field_data.operator jule::F64());
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1a9356862:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*_self_)._field_data.operator jule::I64()));
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1a9356246:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*_self_)._field_data.operator jule::U64()));
			}
		}
		else {
			_case_begin_1a935619c:;
			{
				return 0LL;
			}
		}
		_match_end_1a9356147:;
	}
}



inline void _1a7521589_set_i64(_1a751ddb1_Const* _self_,jule::I64 _13530_x) {
	(*_self_)._field_data=jule::Any(_13530_x);
}



inline void _1a752180e_set_u64(_1a751ddb1_Const* _self_,jule::U64 _13830_x) {
	(*_self_)._field_data=jule::Any(_13830_x);
}



inline void _1a7521a84_set_bool(_1a751ddb1_Const* _self_,jule::Bool _14131_x) {
	(*_self_)._field_data=jule::Any(_14131_x);
}



inline void _1a7521d09_set_str(_1a751ddb1_Const* _self_,jule::Str _14430_x) {
	(*_self_)._field_data=jule::Any(_14430_x);
}



inline void _1a752207e_set_f64(_1a751ddb1_Const* _self_,jule::F64 _14730_x) {
	(*_self_)._field_data=jule::Any(_14730_x);
}



inline void _1a752225a_set_nil(_1a751ddb1_Const* _self_) {
	(*_self_)._field_data=jule::Any(nullptr);
}



inline jule::Bool _1a75224be_is_i64(_1a751ddb1_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1a935b977:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a935bc0d:;
			{
				return false;
			}
		}
		_match_end_1a935ba10:;
	}
}



inline jule::Bool _1a7522733_is_u64(_1a751ddb1_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1a935c77a:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a935c1a3:;
			{
				return false;
			}
		}
		_match_end_1a935c14d:;
	}
}



inline jule::Bool _1a7522997_is_bool(_1a751ddb1_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Bool>()) {
			_case_begin_1a935d25e:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a935cb87:;
			{
				return false;
			}
		}
		_match_end_1a935cb32:;
	}
}



inline jule::Bool _1a7522c0b_is_str(_1a751ddb1_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1a935dc43:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a935d66b:;
			{
				return false;
			}
		}
		_match_end_1a935d616:;
	}
}



inline jule::Bool _1a7522e70_is_f64(_1a751ddb1_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1a935e727:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a935e150:;
			{
				return false;
			}
		}
		_match_end_1a935e0ea:;
	}
}



inline jule::Bool _1a75231d4_is_nil(_1a751ddb1_Const* _self_) {
	return (*_self_)._field_data == jule::Any(jule::Any(nullptr));
}



inline jule::Bool _1a75234e2_are_same_types(_1a751ddb1_Const* _self_,_1a751ddb1_Const _21033_x) {
	{
		
		if (_1a75224be_is_i64(&(*_self_)) == _1a75224be_is_i64(&_21033_x)) {
			_case_begin_1a9361839:;
			{
				return true;
			}
		}
		else if (_1a7522733_is_u64(&(*_self_)) == _1a7522733_is_u64(&_21033_x)) {
			_case_begin_1a93618e4:;
			{
				return true;
			}
		}
		else if (_1a7522e70_is_f64(&(*_self_)) == _1a7522e70_is_f64(&_21033_x)) {
			_case_begin_1a936196b:;
			{
				return true;
			}
		}
		else if (_1a7522997_is_bool(&(*_self_)) == _1a7522997_is_bool(&_21033_x)) {
			_case_begin_1a936164c:;
			{
				return true;
			}
		}
		else if (_1a7522c0b_is_str(&(*_self_)) == _1a7522c0b_is_str(&_21033_x)) {
			_case_begin_1a93616b3:;
			{
				return true;
			}
		}
		else if (_1a75231d4_is_nil(&(*_self_)) == _1a75231d4_is_nil(&_21033_x)) {
			_case_begin_1a9361729:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a93611da:;
			{
				return false;
			}
		}
		_match_end_1a936111e:;
	}
}



inline jule::Bool _1a7523800_and(_1a751ddb1_Const* _self_,_1a751ddb1_Const _23522_x) {
	{
		
		if (_1a7522997_is_bool(&(*_self_)) && _1a7522997_is_bool(&_23522_x)) {
			_case_begin_1a9365233:;
			{
				return _1a75205ee_read_bool(&(*_self_)) && _1a75205ee_read_bool(&_23522_x);
			}
		}
		else {
			_case_begin_1a9364b39:;
			{
				return false;
			}
		}
		_match_end_1a9364a6d:;
	}
}



inline jule::Bool _1a7523b0d_or(_1a751ddb1_Const* _self_,_1a751ddb1_Const _24621_x) {
	{
		
		if (_1a7522997_is_bool(&(*_self_)) && _1a7522997_is_bool(&_24621_x)) {
			_case_begin_1a9366b4c:;
			{
				return _1a75205ee_read_bool(&(*_self_)) || _1a75205ee_read_bool(&_24621_x);
			}
		}
		else {
			_case_begin_1a9366553:;
			{
				return false;
			}
		}
		_match_end_1a9366487:;
	}
}



inline jule::Bool _1a7523e1b_eq(_1a751ddb1_Const* _self_,_1a751ddb1_Const _25721_x) {
	{
		
		if (_1a75231d4_is_nil(&(*_self_))) {
			_case_begin_1a93680d2:;
			{
				return _1a75231d4_is_nil(&_25721_x);
			}
		}
		else if (_1a7522997_is_bool(&(*_self_))) {
			_case_begin_1a936818c:;
			{
				return _1a7522997_is_bool(&_25721_x) && (_1a75205ee_read_bool(&(*_self_)) == _1a75205ee_read_bool(&_25721_x));
			}
		}
		else if (_1a7522c0b_is_str(&(*_self_))) {
			_case_begin_1a9368203:;
			{
				return _1a7522c0b_is_str(&_25721_x) && (_1a7520863_read_str(&(*_self_)) == _1a7520863_read_str(&_25721_x));
			}
		}
		else if (_1a75224be_is_i64(&(*_self_))) {
			_case_begin_1a9367de5:;
			{
				return _1a7520126_read_i64(&(*_self_)) == static_cast<jule::I64>(static_cast<jule::I64>(_1a7520d3b_as_i64(&_25721_x)));
			}
		}
		else if (_1a7522733_is_u64(&(*_self_))) {
			_case_begin_1a9367e5b:;
			{
				return _1a752038a_read_u64(&(*_self_)) == static_cast<jule::U64>(static_cast<jule::U64>(_1a75210a0_as_u64(&_25721_x)));
			}
		}
		else if (_1a7522e70_is_f64(&(*_self_))) {
			_case_begin_1a9367ec2:;
			{
				return _1a7520ac7_read_f64(&(*_self_)) == static_cast<jule::F64>(static_cast<jule::F64>(_1a7521314_as_f64(&_25721_x)));
			}
		}
		else {
			_case_begin_1a9367136:;
			{
				return false;
			}
		}
		_match_end_1a936706a:;
	}
}



inline jule::Bool _1a7524229_lt(_1a751ddb1_Const* _self_,_1a751ddb1_Const _28421_x) {
	{
		
		if (_1a7522c0b_is_str(&(*_self_))) {
			_case_begin_1a936c999:;
			{
				return _1a7522c0b_is_str(&_28421_x) && (_1a7520863_read_str(&(*_self_)) < _1a7520863_read_str(&_28421_x));
			}
		}
		else if (_1a75224be_is_i64(&(*_self_))) {
			_case_begin_1a936ca76:;
			{
				return _1a7520126_read_i64(&(*_self_)) < static_cast<jule::I64>(static_cast<jule::I64>(_1a7520d3b_as_i64(&_28421_x)));
			}
		}
		else if (_1a7522733_is_u64(&(*_self_))) {
			_case_begin_1a936cadc:;
			{
				return _1a752038a_read_u64(&(*_self_)) < static_cast<jule::U64>(static_cast<jule::U64>(_1a75210a0_as_u64(&_28421_x)));
			}
		}
		else if (_1a7522e70_is_f64(&(*_self_))) {
			_case_begin_1a936c7ce:;
			{
				return _1a7520ac7_read_f64(&(*_self_)) < static_cast<jule::F64>(static_cast<jule::F64>(_1a7521314_as_f64(&_28421_x)));
			}
		}
		else {
			_case_begin_1a936a557:;
			{
				return false;
			}
		}
		_match_end_1a936a4be:;
	}
}



inline jule::Bool _1a7524537_lt_eq(_1a751ddb1_Const* _self_,_1a751ddb1_Const _30724_x) {
	{
		
		if (_1a7522c0b_is_str(&(*_self_))) {
			_case_begin_1a9370c66:;
			{
				return _1a7522c0b_is_str(&_30724_x) && (_1a7520863_read_str(&(*_self_)) <= _1a7520863_read_str(&_30724_x));
			}
		}
		else if (_1a75224be_is_i64(&(*_self_))) {
			_case_begin_1a9370d43:;
			{
				return _1a7520126_read_i64(&(*_self_)) <= static_cast<jule::I64>(static_cast<jule::I64>(_1a7520d3b_as_i64(&_30724_x)));
			}
		}
		else if (_1a7522733_is_u64(&(*_self_))) {
			_case_begin_1a9370da9:;
			{
				return _1a752038a_read_u64(&(*_self_)) <= static_cast<jule::U64>(static_cast<jule::U64>(_1a75210a0_as_u64(&_30724_x)));
			}
		}
		else if (_1a7522e70_is_f64(&(*_self_))) {
			_case_begin_1a9370a9b:;
			{
				return _1a7520ac7_read_f64(&(*_self_)) <= static_cast<jule::F64>(static_cast<jule::F64>(_1a7521314_as_f64(&_30724_x)));
			}
		}
		else {
			_case_begin_1a936cc52:;
			{
				return false;
			}
		}
		_match_end_1a936cb97:;
	}
}



inline jule::Bool _1a7524845_gt(_1a751ddb1_Const* _self_,_1a751ddb1_Const _33021_x) {
	{
		
		if (_1a7522c0b_is_str(&(*_self_))) {
			_case_begin_1a9374231:;
			{
				return _1a7522c0b_is_str(&_33021_x) && (_1a7520863_read_str(&(*_self_)) > _1a7520863_read_str(&_33021_x));
			}
		}
		else if (_1a75224be_is_i64(&(*_self_))) {
			_case_begin_1a937430d:;
			{
				return _1a7520126_read_i64(&(*_self_)) > static_cast<jule::I64>(static_cast<jule::I64>(_1a7520d3b_as_i64(&_33021_x)));
			}
		}
		else if (_1a7522733_is_u64(&(*_self_))) {
			_case_begin_1a9374374:;
			{
				return _1a752038a_read_u64(&(*_self_)) > static_cast<jule::U64>(static_cast<jule::U64>(_1a75210a0_as_u64(&_33021_x)));
			}
		}
		else if (_1a7522e70_is_f64(&(*_self_))) {
			_case_begin_1a9374066:;
			{
				return _1a7520ac7_read_f64(&(*_self_)) > static_cast<jule::F64>(static_cast<jule::F64>(_1a7521314_as_f64(&_33021_x)));
			}
		}
		else {
			_case_begin_1a937101e:;
			{
				return false;
			}
		}
		_match_end_1a9370e64:;
	}
}



inline jule::Bool _1a7524b53_gt_eq(_1a751ddb1_Const* _self_,_1a751ddb1_Const _35324_x) {
	{
		
		if (_1a7522c0b_is_str(&(*_self_))) {
			_case_begin_1a93774ed:;
			{
				return _1a7522c0b_is_str(&_35324_x) && (_1a7520863_read_str(&(*_self_)) >= _1a7520863_read_str(&_35324_x));
			}
		}
		else if (_1a75224be_is_i64(&(*_self_))) {
			_case_begin_1a93775ca:;
			{
				return _1a7520126_read_i64(&(*_self_)) >= static_cast<jule::I64>(static_cast<jule::I64>(_1a7520d3b_as_i64(&_35324_x)));
			}
		}
		else if (_1a7522733_is_u64(&(*_self_))) {
			_case_begin_1a9377641:;
			{
				return _1a752038a_read_u64(&(*_self_)) >= static_cast<jule::U64>(static_cast<jule::U64>(_1a75210a0_as_u64(&_35324_x)));
			}
		}
		else if (_1a7522e70_is_f64(&(*_self_))) {
			_case_begin_1a9377333:;
			{
				return _1a7520ac7_read_f64(&(*_self_)) >= static_cast<jule::F64>(static_cast<jule::F64>(_1a7521314_as_f64(&_35324_x)));
			}
		}
		else {
			_case_begin_1a93744d9:;
			{
				return false;
			}
		}
		_match_end_1a937442e:;
	}
}



inline jule::Bool _1a7524e61_add(_1a751ddb1_Const* _self_,_1a751ddb1_Const _37426_x) {
	{
		
		if (_1a7522c0b_is_str(&(*_self_))) {
			_case_begin_1a937aa0c:;
			{
				if ((!(_1a7522c0b_is_str(&_37426_x)))) {
					return false;
				}
				_1a7521d09_set_str(&(*_self_), _1a7520863_read_str(&(*_self_)) + _1a7520863_read_str(&_37426_x));
			}
		}
		else if (_1a7522e70_is_f64(&(*_self_))) {
			_case_begin_1a937aad9:;
			{
				_1a752207e_set_f64(&(*_self_), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_1a7520ac7_read_f64(&(*_self_)))) + static_cast<jule::F64>(static_cast<jule::F64>(_1a7521314_as_f64(&_37426_x)))));
			}
		}
		else if (_1a75224be_is_i64(&(*_self_))) {
			_case_begin_1a937ab50:;
			{
				if (_1a7522e70_is_f64(&_37426_x)) {
					_1a752207e_set_f64(&(*_self_), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_1a7521314_as_f64(&(*_self_)))) + static_cast<jule::F64>(static_cast<jule::F64>(_1a7520ac7_read_f64(&_37426_x)))));
				} else {
					_1a7521589_set_i64(&(*_self_), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_1a7520126_read_i64(&(*_self_)))) + static_cast<jule::I64>(static_cast<jule::I64>(_1a7520d3b_as_i64(&_37426_x)))));
				}
			}
		}
		else if (_1a7522733_is_u64(&(*_self_))) {
			_case_begin_1a937a842:;
			{
				if (_1a7522e70_is_f64(&_37426_x)) {
					_1a752207e_set_f64(&(*_self_), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_1a7521314_as_f64(&(*_self_)))) + static_cast<jule::F64>(static_cast<jule::F64>(_1a7520ac7_read_f64(&_37426_x)))));
				} else {
					_1a752180e_set_u64(&(*_self_), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_1a752038a_read_u64(&(*_self_)))) + static_cast<jule::U64>(static_cast<jule::U64>(_1a75210a0_as_u64(&_37426_x)))));
				}
			}
		}
		else {
			_case_begin_1a9377894:;
			{
				return false;
			}
		}
		_match_end_1a93777d9:;
	}
	return true;
}



inline jule::Bool _1a752526e_sub(_1a751ddb1_Const* _self_,_1a751ddb1_Const _40326_x) {
	{
		
		if (_1a7522e70_is_f64(&(*_self_))) {
			_case_begin_1a9382151:;
			{
				_1a752207e_set_f64(&(*_self_), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_1a7520ac7_read_f64(&(*_self_)))) - static_cast<jule::F64>(static_cast<jule::F64>(_1a7521314_as_f64(&_40326_x)))));
			}
		}
		else if (_1a75224be_is_i64(&(*_self_))) {
			_case_begin_1a938223e:;
			{
				if (_1a7522e70_is_f64(&_40326_x)) {
					_1a752207e_set_f64(&(*_self_), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_1a7521314_as_f64(&(*_self_)))) - static_cast<jule::F64>(static_cast<jule::F64>(_1a7520ac7_read_f64(&_40326_x)))));
				} else {
					_1a7521589_set_i64(&(*_self_), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_1a7520126_read_i64(&(*_self_)))) - static_cast<jule::I64>(static_cast<jule::I64>(_1a7520d3b_as_i64(&_40326_x)))));
				}
			}
		}
		else if (_1a7522733_is_u64(&(*_self_))) {
			_case_begin_1a93822a5:;
			{
				if (_1a7522e70_is_f64(&_40326_x)) {
					_1a752207e_set_f64(&(*_self_), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_1a7521314_as_f64(&(*_self_)))) - static_cast<jule::F64>(static_cast<jule::F64>(_1a7520ac7_read_f64(&_40326_x)))));
				} else {
					_1a752180e_set_u64(&(*_self_), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_1a752038a_read_u64(&(*_self_)))) - static_cast<jule::U64>(static_cast<jule::U64>(_1a75210a0_as_u64(&_40326_x)))));
				}
			}
		}
		else {
			_case_begin_1a9381a8a:;
			{
				return false;
			}
		}
		_match_end_1a9380dca:;
	}
	return true;
}



inline jule::Bool _1a752557c_mul(_1a751ddb1_Const* _self_,_1a751ddb1_Const _42726_x) {
	{
		
		if (_1a7522e70_is_f64(&(*_self_))) {
			_case_begin_1a938781b:;
			{
				_1a752207e_set_f64(&(*_self_), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_1a7520ac7_read_f64(&(*_self_)))) * static_cast<jule::F64>(static_cast<jule::F64>(_1a7521314_as_f64(&_42726_x)))));
			}
		}
		else if (_1a75224be_is_i64(&(*_self_))) {
			_case_begin_1a9387909:;
			{
				if (_1a7522e70_is_f64(&_42726_x)) {
					_1a752207e_set_f64(&(*_self_), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_1a7521314_as_f64(&(*_self_)))) * static_cast<jule::F64>(static_cast<jule::F64>(_1a7520ac7_read_f64(&_42726_x)))));
				} else {
					_1a7521589_set_i64(&(*_self_), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_1a7520126_read_i64(&(*_self_)))) * static_cast<jule::I64>(static_cast<jule::I64>(_1a7520d3b_as_i64(&_42726_x)))));
				}
			}
		}
		else if (_1a7522733_is_u64(&(*_self_))) {
			_case_begin_1a9387970:;
			{
				if (_1a7522e70_is_f64(&_42726_x)) {
					_1a752207e_set_f64(&(*_self_), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_1a7521314_as_f64(&(*_self_)))) * static_cast<jule::F64>(static_cast<jule::F64>(_1a7520ac7_read_f64(&_42726_x)))));
				} else {
					_1a752180e_set_u64(&(*_self_), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_1a752038a_read_u64(&(*_self_)))) * static_cast<jule::U64>(static_cast<jule::U64>(_1a75210a0_as_u64(&_42726_x)))));
				}
			}
		}
		else {
			_case_begin_1a9387255:;
			{
				return false;
			}
		}
		_match_end_1a93864da:;
	}
	return true;
}



inline jule::Bool _1a752588a_div(_1a751ddb1_Const* _self_,_1a751ddb1_Const _45526_x) {
	{
		
		if (_1a7522e70_is_f64(&(*_self_))) {
			_case_begin_1a938cc50:;
			{
				jule::F64 _45817_l = _1a7521314_as_f64(&_45526_x);
				if ((_45817_l == 0LL)) {
					return false;
				}
				_1a752207e_set_f64(&(*_self_), static_cast<jule::F64>(jule::div(static_cast<jule::F64>(static_cast<jule::F64>(_1a7520ac7_read_f64(&(*_self_)))),_45817_l)));
			}
		}
		else if (_1a75224be_is_i64(&(*_self_))) {
			_case_begin_1a938cd3d:;
			{
				jule::F64 _46417_l = _1a7521314_as_f64(&_45526_x);
				if ((_46417_l == 0LL)) {
					return false;
				}
				_1a752207e_set_f64(&(*_self_), static_cast<jule::F64>(jule::div(static_cast<jule::F64>(static_cast<jule::F64>(_1a7521314_as_f64(&(*_self_)))),_46417_l)));
			}
		}
		else if (_1a7522733_is_u64(&(*_self_))) {
			_case_begin_1a938cda4:;
			{
				jule::F64 _47017_l = _1a7521314_as_f64(&_45526_x);
				if ((_47017_l == 0LL)) {
					return false;
				}
				_1a752207e_set_f64(&(*_self_), static_cast<jule::F64>(jule::div(static_cast<jule::F64>(static_cast<jule::F64>(_1a7521314_as_f64(&(*_self_)))),_47017_l)));
			}
		}
		else {
			_case_begin_1a938c689:;
			{
				return false;
			}
		}
		_match_end_1a938b9eb:;
	}
	return true;
}



inline jule::Bool _1a7525b98_mod(_1a751ddb1_Const* _self_,_1a751ddb1_Const _48426_x) {
	{
		
		if (_1a75224be_is_i64(&(*_self_))) {
			_case_begin_1a9392507:;
			{
				jule::I64 _48717_l = _1a7520d3b_as_i64(&_48426_x);
				if ((_48717_l == 0LL)) {
					return false;
				}
				_1a7521589_set_i64(&(*_self_), static_cast<jule::I64>(jule::mod(static_cast<jule::I64>(static_cast<jule::I64>(_1a7520126_read_i64(&(*_self_)))),_48717_l)));
			}
		}
		else if (_1a7522733_is_u64(&(*_self_))) {
			_case_begin_1a9392606:;
			{
				jule::U64 _49317_l = _1a75210a0_as_u64(&_48426_x);
				if ((_49317_l == 0LLU)) {
					return false;
				}
				_1a752180e_set_u64(&(*_self_), static_cast<jule::U64>(jule::mod(static_cast<jule::U64>(static_cast<jule::U64>(_1a752038a_read_u64(&(*_self_)))),_49317_l)));
			}
		}
		else {
			_case_begin_1a9391dec:;
			{
				return false;
			}
		}
		_match_end_1a9391d64:;
	}
	return true;
}



inline jule::Bool _1a7525ea6_bitwise_and(_1a751ddb1_Const* _self_,_1a751ddb1_Const _50634_x) {
	{
		
		if (_1a75224be_is_i64(&(*_self_))) {
			_case_begin_1a9395cad:;
			{
				_1a7521589_set_i64(&(*_self_), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_1a7520126_read_i64(&(*_self_)))) & static_cast<jule::I64>(static_cast<jule::I64>(_1a7520d3b_as_i64(&_50634_x)))));
			}
		}
		else if (_1a7522733_is_u64(&(*_self_))) {
			_case_begin_1a9395dac:;
			{
				_1a752180e_set_u64(&(*_self_), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_1a752038a_read_u64(&(*_self_)))) & static_cast<jule::U64>(static_cast<jule::U64>(_1a75210a0_as_u64(&_50634_x)))));
			}
		}
		else {
			_case_begin_1a93956a3:;
			{
				return false;
			}
		}
		_match_end_1a93955d7:;
	}
	return true;
}



inline jule::Bool _1a75262b4_bitwise_or(_1a751ddb1_Const* _self_,_1a751ddb1_Const _52033_x) {
	{
		
		if (_1a75224be_is_i64(&(*_self_))) {
			_case_begin_1a939d700:;
			{
				_1a7521589_set_i64(&(*_self_), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_1a7520126_read_i64(&(*_self_)))) | static_cast<jule::I64>(static_cast<jule::I64>(_1a7520d3b_as_i64(&_52033_x)))));
			}
		}
		else if (_1a7522733_is_u64(&(*_self_))) {
			_case_begin_1a939d7ee:;
			{
				_1a752180e_set_u64(&(*_self_), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_1a752038a_read_u64(&(*_self_)))) | static_cast<jule::U64>(static_cast<jule::U64>(_1a75210a0_as_u64(&_52033_x)))));
			}
		}
		else {
			_case_begin_1a939d0e5:;
			{
				return false;
			}
		}
		_match_end_1a939d029:;
	}
	return true;
}



inline jule::Bool _1a75265c2_xor(_1a751ddb1_Const* _self_,_1a751ddb1_Const _53426_x) {
	{
		
		if (_1a75224be_is_i64(&(*_self_))) {
			_case_begin_1a93a12d5:;
			{
				_1a7521589_set_i64(&(*_self_), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_1a7520126_read_i64(&(*_self_)))) ^ static_cast<jule::I64>(static_cast<jule::I64>(_1a7520d3b_as_i64(&_53426_x)))));
			}
		}
		else if (_1a7522733_is_u64(&(*_self_))) {
			_case_begin_1a93a13d4:;
			{
				_1a752180e_set_u64(&(*_self_), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_1a752038a_read_u64(&(*_self_)))) ^ static_cast<jule::U64>(static_cast<jule::U64>(_1a75210a0_as_u64(&_53426_x)))));
			}
		}
		else {
			_case_begin_1a93a0bca:;
			{
				return false;
			}
		}
		_match_end_1a93a0b0e:;
	}
	return true;
}



inline jule::Bool _1a75268d0_lshift(_1a751ddb1_Const* _self_,_1a751ddb1_Const _54829_x) {
	{
		
		if (_1a75224be_is_i64(&(*_self_))) {
			_case_begin_1a93a422d:;
			{
				jule::I64 _55117_l = _1a7520d3b_as_i64(&(*_self_));
				if ((_55117_l < 0LL)) {
					jule::U64 _55321_r = _1a75210a0_as_u64(&_54829_x);
					_1a7521589_set_i64(&(*_self_), static_cast<jule::I64>(_55117_l << _55321_r));
				} else {
					_1a7527051_lshift_unsig((*_self_),_54829_x);
				}
			}
		}
		else if (_1a7522733_is_u64(&(*_self_))) {
			_case_begin_1a93a432c:;
			{
				_1a7527051_lshift_unsig((*_self_),_54829_x);
			}
		}
		else {
			_case_begin_1a93a3b23:;
			{
				return false;
			}
		}
		_match_end_1a93a3a57:;
	}
	return true;
}



inline jule::Bool _1a7526bdd_rshift(_1a751ddb1_Const* _self_,_1a751ddb1_Const _56829_x) {
	{
		
		if (_1a75224be_is_i64(&(*_self_))) {
			_case_begin_1a93a7275:;
			{
				jule::I64 _57117_l = _1a7520d3b_as_i64(&(*_self_));
				if ((_57117_l < 0LL)) {
					jule::U64 _57321_r = _1a75210a0_as_u64(&_56829_x);
					_1a7521589_set_i64(&(*_self_), static_cast<jule::I64>(_57117_l >> _57321_r));
				} else {
					_1a752734d_rshift_unsig((*_self_),_56829_x);
				}
			}
		}
		else if (_1a7522733_is_u64(&(*_self_))) {
			_case_begin_1a93a7374:;
			{
				_1a752734d_rshift_unsig((*_self_),_56829_x);
			}
		}
		else {
			_case_begin_1a93a6b6a:;
			{
				return false;
			}
		}
		_match_end_1a93a6a9e:;
	}
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1a751ddb1_Const _Src) {
	_Stream << "Const{";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a770e469_FileStream> static__1a770c830_new(jule::Ptr<_1e9da9880_File> _1527_f) {
	return jule::new_ptr<_1a770e469_FileStream>(_1a770e469_FileStream(_1527_f));
}



inline jule::Exceptional<jule::I64> _1a7712eb7_read(_1a770e469_FileStream* _self_,jule::Slice<jule::U8> _3131_buff) {
	jule::I64 _3148_n = jule::I64();
	_3148_n = static_cast<jule::I64>(({
		auto except = _1e9e27dd7_read((*_self_)._field_buff.ptr(), _3131_buff);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::I64>(except.error);
			return jule::Exceptional<jule::I64>(except.error);
		} jule::I64();});
	}));
	return jule::Exceptional<jule::I64>(jule::Any(),_3148_n);
}



inline jule::Exceptional<jule::I64> _1a77132c5_write(_1a770e469_FileStream* _self_,jule::Slice<jule::U8> _3728_buff) {
	jule::I64 _3745_n = jule::I64();
	_3745_n = static_cast<jule::I64>(({
		auto except = _1e9e228c6_write((*_self_)._field_buff.ptr(), _3728_buff);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::I64>(except.error);
			return jule::Exceptional<jule::I64>(except.error);
		} jule::I64();});
	}));
	return jule::Exceptional<jule::I64>(jule::Any(),_3745_n);
}



inline jule::Exceptional<jule::Slice<jule::U8>> _1a7713627_read_line(_1a770e469_FileStream* _self_) {
	
	jule::Slice<jule::U8> _4917_buff = jule::Slice<jule::U8>::alloc(0LL,1024LL);
	jule::Slice<jule::U8> _5017_part = jule::Slice<jule::U8>::alloc(1LL);
	for (;;) {
		{
			jule::I64 _5217_n = ({
				auto except = _1e9e27dd7_read((*_self_)._field_buff.ptr(), _5017_part);
				(except.ok()) ? (except.result) : ({{
					return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
					return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
				} jule::I64();});
			});
			if ((_5217_n == 0LL)) {
				goto _iter_end_1a9428db8;
			}
			jule::U8 _5717_b = _5017_part[0LL];
			_4917_buff = jule::alloc_for_append(_4917_buff,1);_4917_buff.__push(_5717_b);
			if ((_5717_b == 10LLU)) {
				goto _iter_end_1a9428db8;
			}
		}
	_iter_next_1a9428db8:;
	}
	_iter_end_1a9428db8:;
	return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(),_4917_buff);
}







std::ostream &operator<<(std::ostream &_Stream, _1a770e469_FileStream _Src) {
	_Stream << "FileStream{";
	_Stream << "buff:" << _Src._field_buff;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::I64> _1a7715abe_read(_1a771542b_ByteStream* _self_,jule::Slice<jule::U8> _2431_buff) {
	jule::I64 _2448_n = jule::I64();
	if ((!(_1a771644e_data(&(*_self_))))) {
		_2448_n = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(),_2448_n);
	}
	_2448_n=static_cast<jule::I64>(copy(_2431_buff,(*_self_)._field_buff));
	(*_self_)._field_buff=(*_self_)._field_buff.slice(_2448_n);
	return jule::Exceptional<jule::I64>(jule::Any(), _2448_n);
}



inline jule::Exceptional<jule::I64> _1a7715dcc_write(_1a771542b_ByteStream* _self_,jule::Slice<jule::U8> _3528_buff) {
	jule::I64 _3545_n = jule::I64();
	_3545_n=static_cast<jule::I64>(_3528_buff.len());
	(*_self_)._field_buff=jule::append((*_self_)._field_buff,_3528_buff);
	return jule::Exceptional<jule::I64>(jule::Any(), _3545_n);
}



inline jule::Ptr<_1a771542b_ByteStream> static__1a77161da_new(void) {
	return jule::new_ptr<_1a771542b_ByteStream>();
}



inline jule::Bool _1a771644e_data(_1a771542b_ByteStream* _self_) {
	return ((*_self_)._field_buff.len() != 0LL);
}



inline void _1a771662a_fit(_1a771542b_ByteStream* _self_) {
	if ((!(_1a771644e_data(&(*_self_))))) {
		(*_self_)._field_buff=nullptr;
		return;
	}
	jule::Slice<jule::U8> _6017_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::I64>((*_self_)._field_buff.len()));
	copy(_6017_buff,(*_self_)._field_buff);
	(*_self_)._field_buff=_6017_buff;
}







std::ostream &operator<<(std::ostream &_Stream, _1a771542b_ByteStream _Src) {
	_Stream << "ByteStream{";
	_Stream << "buff:" << _Src._field_buff;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a77179c2_Scanner> static__1a7717e01_new(jule::Trait<_1a7713d75_Reader> _1627_r) {
	return jule::new_ptr<_1a77179c2_Scanner>(_1a77179c2_Scanner(_1627_r,jule::Slice<jule::U8>()));
}



inline jule::Ptr<_1a77179c2_Scanner> static__1a7718198_newf(jule::Ptr<_1e9da9880_File> _2428_f) {
	return jule::new_ptr<_1a77179c2_Scanner>(_1a77179c2_Scanner(jule::Trait<_1a7713d75_Reader>(static__1a770c830_new(_2428_f), 0),jule::Slice<jule::U8>()));
}



inline void _1a7718495_reset(_1a77179c2_Scanner* _self_) {
	(*_self_)._field_b=nullptr;
}



inline jule::Slice<jule::U8> _1a7718709_bytes(_1a77179c2_Scanner* _self_) {
	return (*_self_)._field_b;
}



inline jule::Str _1a771896d_text(_1a77179c2_Scanner* _self_) {
	return static_cast<jule::Str>((*_self_)._field_b);
}



inline jule::Exceptional<jule::Bool> _1a7718bd2_scan(_1a77179c2_Scanner* _self_) {
	
	_1a7718495_reset(&(*_self_));
	jule::Slice<jule::U8> _5117_buff = jule::Slice<jule::U8>::alloc(0LL,1024LL);
	jule::Slice<jule::U8> _5217_part = jule::Slice<jule::U8>::alloc(1LL);
	for (;;) {
		{
			jule::I64 _5417_n = ({
				auto except = _1a7713d75_Reader_mptr_data[((*_self_)._field_r).type_offset]._1a7713c32_read((*_self_)._field_r, _5217_part);
				(except.ok()) ? (except.result) : ({{
					return jule::Exceptional<jule::Bool>(jule::Any(),false);
					return jule::Exceptional<jule::Bool>(jule::Any(),false);
				} jule::I64();});
			});
			if ((_5417_n == 0LL)) {
				goto _iter_end_1a9435aea;
			}
			jule::U8 _6117_b = _5217_part[0LL];
			if ((_6117_b == 10LLU)) {
				goto _iter_end_1a9435aea;
			}
			_5117_buff = jule::alloc_for_append(_5117_buff,1);_5117_buff.__push(_6117_b);
		}
	_iter_next_1a9435aea:;
	}
	_iter_end_1a9435aea:;
	(*_self_)._field_b=_5117_buff;
	return jule::Exceptional<jule::Bool>(jule::Any(),(_5217_part[0LL] != 0LLU));
}







std::ostream &operator<<(std::ostream &_Stream, _1a77179c2_Scanner _Src) {
	_Stream << "Scanner{";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "b:" << _Src._field_b;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a6416ae0_FieldIns> _1a6412129_instance(jule::Ptr<_1a6363e9e_Field> _self_) {
	return jule::new_ptr<_1a6416ae0_FieldIns>(_1a6416ae0_FieldIns(_self_,_self_.get()._field_kind.get()._field_kind,jule::Ptr<_1a7648b67_Data>()));
}







std::ostream &operator<<(std::ostream &_Stream, _1a6363e9e_Field _Src) {
	_Stream << "Field{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a64139aa_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "eq:" << _Src._field_eq << ", ";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "gt_eq:" << _Src._field_gt_eq << ", ";
	_Stream << "lt:" << _Src._field_lt << ", ";
	_Stream << "lt_eq:" << _Src._field_lt_eq << ", ";
	_Stream << "shl:" << _Src._field_shl << ", ";
	_Stream << "shr:" << _Src._field_shr << ", ";
	_Stream << "add:" << _Src._field_add << ", ";
	_Stream << "sub:" << _Src._field_sub << ", ";
	_Stream << "div:" << _Src._field_div << ", ";
	_Stream << "mul:" << _Src._field_mul << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "bit_and:" << _Src._field_bit_and << ", ";
	_Stream << "bit_or:" << _Src._field_bit_or << ", ";
	_Stream << "bit_xor:" << _Src._field_bit_xor << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "bit_not:" << _Src._field_bit_not << ", ";
	_Stream << "add_assign:" << _Src._field_add_assign << ", ";
	_Stream << "sub_assign:" << _Src._field_sub_assign << ", ";
	_Stream << "div_assign:" << _Src._field_div_assign << ", ";
	_Stream << "mul_assign:" << _Src._field_mul_assign << ", ";
	_Stream << "mod_assign:" << _Src._field_mod_assign << ", ";
	_Stream << "shl_assign:" << _Src._field_shl_assign << ", ";
	_Stream << "shr_assign:" << _Src._field_shr_assign << ", ";
	_Stream << "bit_or_assign:" << _Src._field_bit_or_assign << ", ";
	_Stream << "bit_and_assign:" << _Src._field_bit_and_assign << ", ";
	_Stream << "bit_xor_assign:" << _Src._field_bit_xor_assign;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a641744d_StructIns> _1a6414bed_instance(jule::Ptr<_1a64147be_Struct> _self_) {
	if ((_self_.get()._field_generics.len() == 0LL) && (_self_.get()._field_instances.len() == 1LL)) {
		return _self_.get()._field_instances[0LL];
	}
	jule::Ptr<_1a641744d_StructIns> _10017_ins = jule::new_ptr<_1a641744d_StructIns>(_1a641744d_StructIns(jule::Bool(),_self_,jule::Slice<jule::Ptr<_1a7672da0_TypeKind>>(),jule::Slice<jule::Ptr<_1a6416ae0_FieldIns>>::alloc(0LL,static_cast<jule::I64>(_self_.get()._field_fields.len())),jule::Slice<jule::Ptr<_1a6426a45_Fn>>(),jule::Bool(),static__1a642d035_new(),_1a64139aa_Operators()));
	{
		auto &expr = _self_.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1a9569c0c:;
		if (it != expr.end()) {
			jule::Ptr<_1a6363e9e_Field> _1a9569e0a_f = *it;
			{
				_10017_ins.get()._field_fields = jule::alloc_for_append(_10017_ins.get()._field_fields,1);_10017_ins.get()._field_fields.__push(_1a6412129_instance(_1a9569e0a_f));
				if (((!(_1a9569e0a_f.get()._field_mutable)) && (_1a9569e0a_f.get()._field_kind.get()._field_kind != nullptr)) && _1a7674247_mutable(_1a9569e0a_f.get()._field_kind.get()._field_kind.ptr())) {
					_10017_ins.get()._field_mutable=true;
				}
			}
			_iter_next_1a9569c0c:;
			++it;
			goto _iter_begin_1a9569c0c;
		}
		_iter_end_1a9569c0c:;
	}
	if ((_self_.get()._field_generics.len() == 0LL)) {
		_10017_ins.get()._field_methods=_self_.get()._field_methods;
	} else {
		_10017_ins.get()._field_methods=jule::Slice<jule::Ptr<_1a6426a45_Fn>>::alloc(0LL,static_cast<jule::I64>(_self_.get()._field_methods.len()));
		{
			auto &expr = _self_.get()._field_methods;
			auto it = expr.begin();
			_iter_begin_1a956d271:;
			if (it != expr.end()) {
				jule::Ptr<_1a6426a45_Fn> _1a956cc43_f = *it;
				{
					jule::Ptr<_1a6426a45_Fn> _11825_fins = jule::new_ptr<_1a6426a45_Fn>((*(_1a956cc43_f)));
					_11825_fins.get()._field_instances=nullptr;
					_10017_ins.get()._field_methods = jule::alloc_for_append(_10017_ins.get()._field_methods,1);_10017_ins.get()._field_methods.__push(_11825_fins);
				}
				_iter_next_1a956d271:;
				++it;
				goto _iter_begin_1a956d271;
			}
			_iter_end_1a956d271:;
		}
	}
	return _10017_ins;
}



inline jule::Ptr<_1a641744d_StructIns> _1a641500b_append_instance(_1a64147be_Struct* _self_,jule::Ptr<_1a641744d_StructIns>& _12939_ins) {
	if (((*_self_)._field_generics.len() == 0LL) && ((*_self_)._field_instances.len() == 1LL)) {
		return (*_self_)._field_instances[0LL];
	}
	{
		auto &expr = (*_self_)._field_instances;
		auto it = expr.begin();
		_iter_begin_1a9570938:;
		if (it != expr.end()) {
			jule::Ptr<_1a641744d_StructIns> _1a9570a48_ains = *it;
			{
				if (_1a6418031_same(_1a9570a48_ains.ptr(), _12939_ins)) {
					return _1a9570a48_ains;
				}
			}
			_iter_next_1a9570938:;
			++it;
			goto _iter_begin_1a9570938;
		}
		_iter_end_1a9570938:;
	}
	(*_self_)._field_instances = jule::alloc_for_append((*_self_)._field_instances,1);(*_self_)._field_instances.__push(_12939_ins);
	return nullptr;
}



inline jule::Ptr<_1a6426a45_Fn> _1a64153b3_find_method(_1a64147be_Struct* _self_,jule::Str _14734_ident,jule::Bool _14746_statically) {
	{
		auto &expr = (*_self_)._field_methods;
		auto it = expr.begin();
		_iter_begin_1a9572ac2:;
		if (it != expr.end()) {
			jule::Ptr<_1a6426a45_Fn> _1a9572bc1_f = *it;
			{
				if ((_1a9572bc1_f.get()._field_statically == _14746_statically) && (_1a9572bc1_f.get()._field_ident == _14734_ident)) {
					return _1a9572bc1_f;
				}
			}
			_iter_next_1a9572ac2:;
			++it;
			goto _iter_begin_1a9572ac2;
		}
		_iter_end_1a9572ac2:;
	}
	return nullptr;
}



inline jule::Ptr<_1a75ec478_Var> _1a64156c1_find_static(_1a64147be_Struct* _self_,jule::Str _15834_ident) {
	{
		auto &expr = (*_self_)._field_statics;
		auto it = expr.begin();
		_iter_begin_1a95741ab:;
		if (it != expr.end()) {
			jule::Ptr<_1a75ec478_Var> _1a95742aa_v = *it;
			{
				if (_1a95742aa_v.get()._field_ident == _15834_ident) {
					return _1a95742aa_v;
				}
			}
			_iter_next_1a95741ab:;
			++it;
			goto _iter_begin_1a95741ab;
		}
		_iter_end_1a95741ab:;
	}
	return nullptr;
}



inline jule::Ptr<_1a6363e9e_Field> _1a64159ce_find_field(_1a64147be_Struct* _self_,jule::Str _16933_ident) {
	{
		auto &expr = (*_self_)._field_fields;
		auto it = expr.begin();
		_iter_begin_1a95754cb:;
		if (it != expr.end()) {
			jule::Ptr<_1a6363e9e_Field> _1a95755ca_f = *it;
			{
				if (_1a95755ca_f.get()._field_ident == _16933_ident) {
					return _1a95755ca_f;
				}
			}
			_iter_next_1a95754cb:;
			++it;
			goto _iter_begin_1a95754cb;
		}
		_iter_end_1a95754cb:;
	}
	return nullptr;
}



inline jule::Bool _1a6415cdc_is_implements(_1a64147be_Struct* _self_,jule::Ptr<_1a7465bd7_Trait> _17932_t) {
	{
		auto &expr = (*_self_)._field_implements;
		auto it = expr.begin();
		_iter_begin_1a95767eb:;
		if (it != expr.end()) {
			jule::Ptr<_1a7465bd7_Trait> &_1a95768ea_it = *it;
			{
				if (_17932_t == _1a95768ea_it) {
					return true;
				}
			}
			_iter_next_1a95767eb:;
			++it;
			goto _iter_begin_1a95767eb;
		}
		_iter_end_1a95767eb:;
	}
	return false;
}



inline jule::Bool _1a64160ea_is_derives(_1a64147be_Struct* _self_,jule::Str _18929_ident) {
	{
		auto &expr = (*_self_)._field_directives;
		auto it = expr.begin();
		_iter_begin_1a9577a1c:;
		if (it != expr.end()) {
			jule::Ptr<_1d06c9ecd_Directive> &_1a9577b1b_d = *it;
			{
				if ((_1a9577b1b_d.get()._field_tag.get()._field_kind == jule::Str("derive", 6))) {
					if ((_1a9577b1b_d.get()._field_args.len() == 1LL) && (_1a9577b1b_d.get()._field_args[0LL].get()._field_kind == _18929_ident)) {
						return true;
					}
				}
			}
			_iter_next_1a9577a1c:;
			++it;
			goto _iter_begin_1a9577a1c;
		}
		_iter_end_1a9577a1c:;
	}
	return false;
}



inline jule::Bool _1a6416408_is_uses(_1a64147be_Struct* _self_,jule::Ptr<_1a64147be_Struct> _20126_s) {
	{
		auto &expr = (*_self_)._field_uses;
		auto it = expr.begin();
		_iter_begin_1a9579c3e:;
		if (it != expr.end()) {
			jule::Ptr<_1a64147be_Struct> &_1a9579d3d_u = *it;
			{
				while (_20126_s == _1a9579d3d_u) {
					{
						return true;
					}
				_iter_next_1a957a217:;
				}
				_iter_end_1a957a217:;
			}
			_iter_next_1a9579c3e:;
			++it;
			goto _iter_begin_1a9579c3e;
		}
		_iter_end_1a9579c3e:;
	}
	return false;
}



inline jule::Bool _1a641666c_has_ref_accessible(_1a64147be_Struct* _self_) {
	{
		auto &expr = (*_self_)._field_methods;
		auto it = expr.begin();
		_iter_begin_1a957ab1e:;
		if (it != expr.end()) {
			jule::Ptr<_1a6426a45_Fn> &_1a957ac1d_m = *it;
			{
				if ((_1a957ac1d_m.get()._field_params.len() > 0LL) && _1a6425a99_is_ref(_1a957ac1d_m.get()._field_params[0LL].ptr())) {
					return true;
				}
			}
			_iter_next_1a957ab1e:;
			++it;
			goto _iter_begin_1a957ab1e;
		}
		_iter_end_1a957ab1e:;
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1a64147be_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "depends:" << _Src._field_depends << ", ";
	_Stream << "uses:" << _Src._field_uses << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "implements:" << _Src._field_implements << ", ";
	_Stream << "instances:" << _Src._field_instances;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a6416ae0_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a64190a9_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a6419571_BinopExprModel _Src) {
	_Stream << "BinopExprModel{";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a6419928_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a6419d24_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a641a1cb_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "strct:" << _Src._field_strct << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a641a50b_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "lit:" << _Src._field_lit;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a641aa39_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr_kind:" << _Src._field_expr_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a641b364_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "is_co:" << _Src._field_is_co << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "except:" << _Src._field_except << ", ";
	_Stream << "assigned:" << _Src._field_assigned;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a641b71b_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "elem_kind:" << _Src._field_elem_kind << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a641bb8e_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "index:" << _Src._field_index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a641c046_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "global:" << _Src._field_global;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a641c3ed_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a641c871_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "key_kind:" << _Src._field_key_kind << ", ";
	_Stream << "val_kind:" << _Src._field_val_kind << ", ";
	_Stream << "entries:" << _Src._field_entries;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a641cdb0_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a641d3ee_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "method:" << _Src._field_method << ", ";
	_Stream << "trt:" << _Src._field_trt;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a641db6e_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "expr_kind:" << _Src._field_expr_kind << ", ";
	_Stream << "method:" << _Src._field_method << ", ";
	_Stream << "field:" << _Src._field_field;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a641e125_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "structure:" << _Src._field_structure << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "method:" << _Src._field_method;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a641e4bb_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a641e7a7_CommonIdentExprModel _Src) {
	_Stream << "CommonIdentExprModel{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a641ed3a_CommonSubIdentExprModel _Src) {
	_Stream << "CommonSubIdentExprModel{";
	_Stream << "expr_kind:" << _Src._field_expr_kind << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a6420115_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "datas:" << _Src._field_datas;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a6420511_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "debug:" << _Src._field_debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a64208eb_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "debug:" << _Src._field_debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a6420c1a_BuiltinCloneCallExprModel _Src) {
	_Stream << "BuiltinCloneCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a6421105_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "init:" << _Src._field_init;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a64214e0_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a6421996_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "log:" << _Src._field_log;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a6421e4c_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "len:" << _Src._field_len << ", ";
	_Stream << "cap:" << _Src._field_cap;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a6422337_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "elements:" << _Src._field_elements;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a6422722_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a64229ec_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a642316d_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a642335a_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "code:" << _Src._field_code;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a6423646_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a64239dc_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "code:" << _Src._field_code << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a6423cc8_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a6424a32_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a6428d55_ParamIns> _1a64255c1_instance(jule::Ptr<_1a6425208_Param> _self_) {
	return jule::new_ptr<_1a6428d55_ParamIns>(_1a6428d55_ParamIns(_self_,jule::Ptr<_1a7672da0_TypeKind>()));
}



inline jule::Bool _1a6425835_is_self(_1a6425208_Param* _self_) {
	return ((*_self_)._field_ident == jule::Str("&self", 5)) || ((*_self_)._field_ident == jule::Str("self", 4));
}



inline jule::Bool _1a6425a99_is_ref(_1a6425208_Param* _self_) {
	return (!((*_self_)._field_ident.empty())) && ((*_self_)._field_ident[0LL] == '&');
}







std::ostream &operator<<(std::ostream &_Stream, _1a6425208_Param _Src) {
	_Stream << "Param{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a6426e96_is_void(_1a6426a45_Fn* _self_) {
	return ((*_self_)._field_result == nullptr);
}



inline jule::Bool _1a642720a_is_method(_1a6426a45_Fn* _self_) {
	return ((*_self_)._field_owner != nullptr);
}



inline jule::Bool _1a642746e_is_entry_point(_1a6426a45_Fn* _self_) {
	return ((*_self_)._field_ident == jule::Str("main", 4));
}



inline jule::Bool _1a64276d3_is_init(_1a6426a45_Fn* _self_) {
	return ((*_self_)._field_ident == jule::Str("init", 4));
}



inline jule::Bool _1a6427947_is_anon(_1a6426a45_Fn* _self_) {
	return _1d074a47c_is_anon_ident((*_self_)._field_ident);
}



inline jule::Bool _1a6427bab_any_var(_1a6426a45_Fn* _self_) {
	return ((*_self_)._field_result != nullptr) && ((*_self_)._field_result.get()._field_idents.len() > 0LL);
}



inline jule::Bool _1a6427e64_parameters_uses_generics(_1a6426a45_Fn* _self_) {
	if (((*_self_)._field_generics.len() == 0LL)) {
		return false;
	}
	{
		auto &expr = (*_self_)._field_params;
		auto it = expr.begin();
		_iter_begin_1a959187c:;
		if (it != expr.end()) {
			jule::Ptr<_1a6425208_Param> &_1a959100d_p = *it;
			{
				if (_1a642bac2_parameter_uses_generics(_1a959100d_p,(*_self_)._field_generics)) {
					return true;
				}
			}
			_iter_next_1a959187c:;
			++it;
			goto _iter_begin_1a959187c;
		}
		_iter_end_1a959187c:;
	}
	return false;
}



inline jule::Bool _1a64281b7_result_uses_generics(_1a6426a45_Fn* _self_) {
	if (_1a6426e96_is_void(&(*_self_))) {
		return false;
	} else if (((*_self_)._field_result.get()._field_kind == nullptr) || ((*_self_)._field_result.get()._field_kind.get()._field_kind == nullptr)) {
		return false;
	}
	return _1a642b6e8_kind_uses_generics((*_self_)._field_result.get()._field_kind.get()._field_kind,(*_self_)._field_generics);
}



inline jule::Ptr<_1a6429be1_FnIns> _1a642842b_instance_force(jule::Ptr<_1a6426a45_Fn> _self_) {
	jule::Ptr<_1a6429be1_FnIns> _12717_ins = jule::new_ptr<_1a6429be1_FnIns>(_1a6429be1_FnIns(jule::Ptr<_1a641744d_StructIns>(),_self_,jule::Slice<jule::Ptr<_1a7672da0_TypeKind>>(),jule::Slice<jule::Ptr<_1a6428d55_ParamIns>>(),jule::Ptr<_1a7672da0_TypeKind>(),jule::new_ptr<_1a759e606_Scope>(),static__1a642d035_new(),jule::Bool(),jule::Fn<jule::Ptr<_1a7648b67_Data>(jule::Ptr<_1a764a6d5_Eval>&,jule::Ptr<_1d075cd74_FnCallExpr>&,jule::Ptr<_1a7648b67_Data>&)>(),jule::Bool()));
	_12717_ins.get()._field_params=jule::Slice<jule::Ptr<_1a6428d55_ParamIns>>::alloc(0LL,static_cast<jule::I64>(_self_.get()._field_params.len()));
	{
		auto &expr = _self_.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1a9595573:;
		if (it != expr.end()) {
			jule::Ptr<_1a6425208_Param> _1a9595ad4_p = *it;
			{
				_12717_ins.get()._field_params = jule::alloc_for_append(_12717_ins.get()._field_params,1);_12717_ins.get()._field_params.__push(_1a64255c1_instance(_1a9595ad4_p));
			}
			_iter_next_1a9595573:;
			++it;
			goto _iter_begin_1a9595573;
		}
		_iter_end_1a9595573:;
	}
	if ((_12717_ins.get()._field_decl.get()._field_result != nullptr)) {
		_12717_ins.get()._field_result=_12717_ins.get()._field_decl.get()._field_result.get()._field_kind.get()._field_kind;
	}
	return _12717_ins;
}



inline jule::Ptr<_1a6429be1_FnIns> _1a6428690_instance(jule::Ptr<_1a6426a45_Fn> _self_) {
	if ((_self_.get()._field_generics.len() == 0LL) && (_self_.get()._field_instances.len() == 1LL)) {
		return _self_.get()._field_instances[0LL];
	}
	return _1a642842b_instance_force(_self_);
}



inline jule::Ptr<_1a6429be1_FnIns> _1a642899d_append_instance(_1a6426a45_Fn* _self_,jule::Ptr<_1a6429be1_FnIns>& _15539_ins) {
	if (((*_self_)._field_generics.len() == 0LL)) {
		if (((*_self_)._field_instances.len() == 1LL)) {
			return (*_self_)._field_instances[0LL];
		}
		(*_self_)._field_instances = jule::alloc_for_append((*_self_)._field_instances,1);(*_self_)._field_instances.__push(_15539_ins);
		return nullptr;
	}
	if (((*_self_)._field_instances.len() == 0LL)) {
		(*_self_)._field_instances = jule::alloc_for_append((*_self_)._field_instances,1);(*_self_)._field_instances.__push(_15539_ins);
		return nullptr;
	}
	{
		auto &expr = (*_self_)._field_instances;
		auto it = expr.begin();
		_iter_begin_1a959b007:;
		if (it != expr.end()) {
			jule::Ptr<_1a6429be1_FnIns> _1a959b15b_ains = *it;
			{
				if (_1a642aede_same(_1a959b15b_ains.ptr(), _15539_ins)) {
					return _1a959b15b_ains;
				}
			}
			_iter_next_1a959b007:;
			++it;
			goto _iter_begin_1a959b007;
		}
		_iter_end_1a959b007:;
	}
	(*_self_)._field_instances = jule::alloc_for_append((*_self_)._field_instances,1);(*_self_)._field_instances.__push(_15539_ins);
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1a6426a45_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "global:" << _Src._field_global << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "exceptional:" << _Src._field_exceptional << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "params:" << _Src._field_params << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "instances:" << _Src._field_instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a642922e_to_str(_1a6428d55_ParamIns* _self_) {
	jule::Str _19317_s = jule::Str();
	if ((*_self_)._field_decl.get()._field_mutable) {
		_19317_s+=jule::Str("mut ", 4);
	}
	if ((*_self_)._field_decl.get()._field_reference) {
		_19317_s+=jule::Str("&_:", 3);
	}
	if (_1a6425835_is_self((*_self_)._field_decl.ptr())) {
		if (_1a6425a99_is_ref((*_self_)._field_decl.ptr())) {
			_19317_s+=jule::Str("&", 1);
		}
		_19317_s+=jule::Str("self", 4);
		return _19317_s;
	}
	if ((*_self_)._field_decl.get()._field_variadic) {
		_19317_s+=jule::Str("...", 3);
	}
	if (((*_self_)._field_kind != nullptr)) {
		_19317_s+=_1a7673257_to_str((*_self_)._field_kind.ptr());
	}
	return _19317_s;
}







std::ostream &operator<<(std::ostream &_Stream, _1a6428d55_ParamIns _Src) {
	_Stream << "ParamIns{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a642a054_to_str(_1a6429be1_FnIns* _self_) {
	
	return _1a642b2ec_get_kind_str(&(*_self_), false);
}



inline jule::Bool _1a642a362_equals(jule::Ptr<_1a6429be1_FnIns> _self_,jule::Ptr<_1a7672da0_TypeKind> _24426_other) {
	jule::Ptr<_1a6429be1_FnIns> _24513_f = _1a7675dd6_fnc(_24426_other.ptr());
	if ((_24513_f == nullptr)) {
		return false;
	}
	if (_self_.get()._field_decl.get()._field_exceptional != _24513_f.get()._field_decl.get()._field_exceptional) {
		return false;
	}
	if (_self_.get()._field_decl.get()._field_unsafety != _24513_f.get()._field_decl.get()._field_unsafety) {
		return false;
	}
	if (_self_.get()._field_generics.len() != static_cast<jule::I64>(static_cast<jule::I64>(_24513_f.get()._field_generics.len()))) {
		return false;
	}
	if (_1a6426e96_is_void(_self_.get()._field_decl.ptr()) != _1a6426e96_is_void(_24513_f.get()._field_decl.ptr())) {
		return false;
	}
	jule::I64 _26617_i = 0LL;
	for (; _26617_i < static_cast<jule::I64>(static_cast<jule::I64>(_self_.get()._field_generics.len())); (_26617_i)++) {
		{
			if ((!(_1a7673565_equals(_self_.get()._field_generics[_26617_i], _24513_f.get()._field_generics[_26617_i])))) {
				return false;
			}
		}
	_iter_next_1a95a396b:;
	}
	_iter_end_1a95a396b:;
	jule::Fn<jule::Bool(jule::Ptr<_1a6428d55_ParamIns>,jule::Ptr<_1a6428d55_ParamIns>)> _27313_check_params = jule::Fn<jule::Bool(jule::Ptr<_1a6428d55_ParamIns>,jule::Ptr<_1a6428d55_ParamIns>)>([=](jule::Ptr<_1a6428d55_ParamIns> _27331_p1,jule::Ptr<_1a6428d55_ParamIns> _27346_p2) mutable -> jule::Bool {
		if (_27331_p1.get()._field_decl.get()._field_mutable != _27346_p2.get()._field_decl.get()._field_mutable) {
			return false;
		}
		if (_1a6425835_is_self(_27331_p1.get()._field_decl.ptr())) {
			if ((!(_1a6425835_is_self(_27346_p2.get()._field_decl.ptr())))) {
				return false;
			}
			if (_1a6425a99_is_ref(_27331_p1.get()._field_decl.ptr()) != _1a6425a99_is_ref(_27346_p2.get()._field_decl.ptr())) {
				return false;
			}
			return true;
		}
		if (_27331_p1.get()._field_decl.get()._field_reference != _27346_p2.get()._field_decl.get()._field_reference) {
			return false;
		}
		if (_27331_p1.get()._field_decl.get()._field_variadic != _27346_p2.get()._field_decl.get()._field_variadic) {
			return false;
		}
		return _1a7673565_equals(_27331_p1.get()._field_kind, _27346_p2.get()._field_kind);
	});
	if (_24513_f.get()._field_params.len() != static_cast<jule::I64>(static_cast<jule::I64>(_self_.get()._field_params.len()))) {
		return false;
	}
	_26617_i=0LL;
	for (; _26617_i < static_cast<jule::I64>(static_cast<jule::I64>(_self_.get()._field_params.len())); (_26617_i)++) {
		{
			if ((!(_27313_check_params(_self_.get()._field_params[_26617_i],_24513_f.get()._field_params[_26617_i])))) {
				return false;
			}
		}
	_iter_next_1a95ab4e0:;
	}
	_iter_end_1a95ab4e0:;
	if ((!(_1a6426e96_is_void(_self_.get()._field_decl.ptr())))) {
		if ((!(_1a7673565_equals(_self_.get()._field_result, _24513_f.get()._field_result)))) {
			return false;
		}
	}
	return true;
}



inline jule::Slice<jule::Ptr<_1a7672da0_TypeKind>> _1a642a708_types(_1a6429be1_FnIns* _self_) {
	{
		
		if (((*_self_)._field_result == nullptr)) {
			_case_begin_1a95ae658:;
			{
				return nullptr;
			}
		}
		else if ((_1a7676887_tup((*_self_)._field_result.ptr()) == nullptr)) {
			_case_begin_1a95ae6be:;
			{
				return jule::Slice<jule::Ptr<_1a7672da0_TypeKind>>({(*_self_)._field_result});
			}
		}
		else {
			_case_begin_1a95ae081:;
			{
				return _1a7676887_tup((*_self_)._field_result.ptr()).get()._field_types;
			}
		}
		_match_end_1a95adeb5:;
	}
}



inline jule::Bool _1a642a96c_is_builtin(_1a6429be1_FnIns* _self_) {
	return ((*_self_)._field_caller != nullptr);
}



inline jule::Bool _1a642abd1_is_anon(_1a6429be1_FnIns* _self_) {
	return (*_self_)._field_anon || (((*_self_)._field_decl != nullptr) && _1a6427947_is_anon((*_self_)._field_decl.ptr()));
}



inline jule::Bool _1a642aede_same(_1a6429be1_FnIns* _self_,jule::Ptr<_1a6429be1_FnIns> _35023_f) {
	if (((*_self_)._field_decl != _35023_f.get()._field_decl) || (_35023_f.get()._field_generics.len() != static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_generics.len())))) {
		return false;
	}
	{
		auto &expr = (*_self_)._field_generics;
		auto it = expr.begin();
		_iter_begin_1a95b387c:;
		if (it != expr.end()) {
			jule::I64 _1a95b398c_i = it - expr.begin();
			jule::Ptr<_1a7672da0_TypeKind> &_1a95b3ae1_g = *it;
			{
				if ((!(_1a7673565_equals(_1a95b3ae1_g, _35023_f.get()._field_generics[_1a95b398c_i])))) {
					return false;
				}
			}
			_iter_next_1a95b387c:;
			++it;
			_1a95b398c_i++;
			goto _iter_begin_1a95b387c;
		}
		_iter_end_1a95b387c:;
	}
	return true;
}



inline jule::Str _1a642b2ec_get_kind_str(_1a6429be1_FnIns* _self_,jule::Bool _36631_ident) {
	jule::Str _36717_s = jule::Str();
	if ((*_self_)._field_decl.get()._field_unsafety) {
		_36717_s+=jule::Str("unsafe ", 7);
	}
	_36717_s+=jule::Str("fn", 2);
	if (_36631_ident && ((*_self_)._field_decl != nullptr)) {
		_36717_s+=jule::Str(" ", 1) + (*_self_)._field_decl.get()._field_ident;
	}
	if (((*_self_)._field_generics.len() > 0LL)) {
		_36717_s+=jule::Str("[", 1);
		{
			auto &expr = (*_self_)._field_generics;
			auto it = expr.begin();
			_iter_begin_1a95b6a7d:;
			if (it != expr.end()) {
				jule::I64 _1a95b6b16_i = it - expr.begin();
				jule::Ptr<_1a7672da0_TypeKind> &_1a95b6d36_t = *it;
				{
					_36717_s+=_1a7673257_to_str(_1a95b6d36_t.ptr());
					if ((_1a95b6b16_i + 1LL) < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_generics.len()))) {
						_36717_s+=jule::Str(",", 1);
					}
				}
				_iter_next_1a95b6a7d:;
				++it;
				_1a95b6b16_i++;
				goto _iter_begin_1a95b6a7d;
			}
			_iter_end_1a95b6a7d:;
		}
		_36717_s+=jule::Str("]", 1);
	} else if (((*_self_)._field_decl.get()._field_generics.len() > 0LL)) {
		_36717_s+=jule::Str("[", 1);
		{
			auto &expr = (*_self_)._field_decl.get()._field_generics;
			auto it = expr.begin();
			_iter_begin_1a95b8860:;
			if (it != expr.end()) {
				jule::I64 _1a95b88e8_i = it - expr.begin();
				jule::Ptr<_1d075ee64_GenericDecl> &_1a95b8b07_g = *it;
				{
					_36717_s+=_1a95b8b07_g.get()._field_ident;
					if ((_1a95b88e8_i + 1LL) < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_decl.get()._field_generics.len()))) {
						_36717_s+=jule::Str(",", 1);
					}
				}
				_iter_next_1a95b8860:;
				++it;
				_1a95b88e8_i++;
				goto _iter_begin_1a95b8860;
			}
			_iter_end_1a95b8860:;
		}
		_36717_s+=jule::Str("]", 1);
	}
	_36717_s+=jule::Str("(", 1);
	jule::I64 _40013_n = (*_self_)._field_params.len();
	if ((_40013_n > 0LL)) {
		{
			auto &expr = (*_self_)._field_params;
			auto it = expr.begin();
			_iter_begin_1a95bab70:;
			if (it != expr.end()) {
				jule::Ptr<_1a6428d55_ParamIns> &_1a95bac6e_p = *it;
				{
					_36717_s+=_1a642922e_to_str(_1a95bac6e_p.ptr());
					_36717_s+=jule::Str(",", 1);
				}
				_iter_next_1a95bab70:;
				++it;
				goto _iter_begin_1a95bab70;
			}
			_iter_end_1a95bab70:;
		}
		(_36717_s).mut_slice(0LL,_36717_s.len() - 1LL);
	}
	_36717_s+=jule::Str(")", 1);
	if ((*_self_)._field_decl.get()._field_exceptional) {
		_36717_s+=jule::Str("!", 1);
	}
	if ((!(_1a6426e96_is_void((*_self_)._field_decl.ptr())))) {
		_36717_s+=jule::Str(":", 1);
		_36717_s+=_1a7673257_to_str((*_self_)._field_result.ptr());
	}
	return _36717_s;
}







std::ostream &operator<<(std::ostream &_Stream, _1a6429be1_FnIns _Src) {
	_Stream << _1a642a054_to_str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1a642cc9e_ReferenceStack> static__1a642d035_new(void) {
	return jule::new_ptr<_1a642cc9e_ReferenceStack>();
}



inline jule::I64 _1a642d3ba_len(_1a642cc9e_ReferenceStack* _self_) {
	return static_cast<jule::I64>((*_self_)._field_buffer.len());
}



inline jule::Any _1a642d6c8_at(_1a642cc9e_ReferenceStack* _self_,jule::I64 _5825_i) {
	return (*_self_)._field_buffer[_5825_i];
}



inline void _1a642d94d_push(_1a642cc9e_ReferenceStack* _self_,jule::Any _6331_ref) {
	(*_self_)._field_buffer = jule::alloc_for_append((*_self_)._field_buffer,1);(*_self_)._field_buffer.__push(_6331_ref);
}



inline jule::Bool _1a642dc5b_exist_0(_1a642cc9e_ReferenceStack* _self_,jule::Ptr<_1a75ec478_Var> _6827_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1a7dd2cd5:;
		if (it != expr.end()) {
			jule::Any &_1a7dd2ee4_ref = *it;
			{
				if (_1a7dd2ee4_ref == jule::Any(jule::Any(_6827_t))) {
					return true;
				}
			}
			_iter_next_1a7dd2cd5:;
			++it;
			goto _iter_begin_1a7dd2cd5;
		}
		_iter_end_1a7dd2cd5:;
	}
	return false;
}

inline jule::Bool _1a642dc5b_exist_1(_1a642cc9e_ReferenceStack* _self_,jule::Ptr<_1a6429be1_FnIns> _6827_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1a7dd5986:;
		if (it != expr.end()) {
			jule::Any &_1a7dd5b95_ref = *it;
			{
				if (_1a7dd5b95_ref == jule::Any(jule::Any(_6827_t))) {
					return true;
				}
			}
			_iter_next_1a7dd5986:;
			++it;
			goto _iter_begin_1a7dd5986;
		}
		_iter_end_1a7dd5986:;
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1a642cc9e_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a642e113_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "text:" << _Src._field_text;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a6432bb6_SymbolBuilder> _1a643327c_get_root(jule::Ptr<_1a6432bb6_SymbolBuilder> _self_) {
	jule::Ptr<_1a6432bb6_SymbolBuilder> _28117_root = _self_;
	while ((_28117_root.get()._field_owner != nullptr)) {
		{
			_28117_root=_28117_root.get()._field_owner;
		}
	_iter_next_1a95c08ab:;
	}
	_iter_end_1a95c08ab:;
	return _28117_root;
}



inline void _1a6433645_push_err(_1a6432bb6_SymbolBuilder* _self_,jule::Ptr<_1d0747985_Token>& _28828_token,jule::Str _28843_fmt,jule::Slice<jule::Any> _28856_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1a75d05d2_compiler_err(_28828_token,true,_28843_fmt,_28856_args));
}



inline void _1a6433a0d_push_err_text(_1a6432bb6_SymbolBuilder* _self_,jule::Ptr<_1d0747985_Token>& _29233_token,jule::Str _29248_fmt,jule::Slice<jule::Any> _29261_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1a75d05d2_compiler_err(_29233_token,false,_29248_fmt,_29261_args));
}



inline void _1a6433d2c_push_suggestion(_1a6432bb6_SymbolBuilder* _self_,jule::Str _29734_fmt,jule::Slice<jule::Any> _29747_args) {
	{
		_1a75d19e0_push_suggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_29734_fmt,_29747_args);
	}
}



inline jule::Bool _1a6434228_check_cpp_use_decl_path(_1a6432bb6_SymbolBuilder* _self_,jule::Ptr<_1d0769347_UseDecl>& _30143_decl,jule::Str _30159_path) {
	jule::Bool _30172_ok = jule::Bool();
	jule::Str _30213_ext = _1d09a6012_ext(_30159_path);
	if ((!(_1e9ea55c4_is_valid_header_ext(_30213_ext))) && (!(_1e9eb469e_is_valid_cpp_ext(_30213_ext)))) {
		_1a6433645_push_err(&(*_self_), _30143_decl.get()._field_token,jule::Str("invalid C++ extension: @", 24),jule::Slice<jule::Any>({jule::Any(_30213_ext)}));
		_30172_ok = false;
		return _30172_ok;
	}
	jule::Ptr<_1e9dab5b8_Status> _30913_info = ({
		auto except = static__1d09a8058_of(_30159_path);
		(except.ok()) ? (except.result) : ({{
			_1a6433645_push_err(&(*_self_), _30143_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_30143_decl.get()._field_link_path)}));
			_30172_ok = false;
			return _30172_ok;
			_30172_ok = false;
			return _30172_ok;
		} jule::Ptr<_1e9dab5b8_Status>();});
	});
	if (_1e9dab9b4_is_dir(_30913_info.ptr())) {
		_1a6433645_push_err(&(*_self_), _30143_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_30143_decl.get()._field_link_path)}));
		_30172_ok = false;
		return _30172_ok;
	}
	_30172_ok = true;
	return _30172_ok;
}



inline jule::Ptr<_1a75c928a_ImportInfo> _1a6434536_build_cpp_header_import(_1a6432bb6_SymbolBuilder* _self_,jule::Ptr<_1d0769347_UseDecl>& _32147_decl) {
	jule::Str _32217_path = _32147_decl.get()._field_link_path;
	if ((!(_1e9ea40a6_is_std_header_path(_32147_decl.get()._field_link_path)))) {
		_32217_path=_1d09a5c6a_join(jule::Slice<jule::Str>({_1d074d76b_dir(_32147_decl.get()._field_token.get()._field_file.ptr()),_32147_decl.get()._field_link_path}));
		jule::Bool _32621_ok = _1a6434228_check_cpp_use_decl_path(&(*_self_), _32147_decl,_32217_path);
		if ((!(_32621_ok))) {
			return nullptr;
		}
		std::tie(_32217_path,_32621_ok) = _1d09a62a9_abs(_32217_path);
		if ((!(_32621_ok))) {
			_1a6433645_push_err(&(*_self_), _32147_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_32147_decl.get()._field_link_path)}));
		}
	}
	return jule::new_ptr<_1a75c928a_ImportInfo>(_1a75c928a_ImportInfo(_32147_decl.get()._field_token,_32217_path,_32147_decl.get()._field_link_path,jule::Str(),jule::Str(),jule::Bool(),true,false,jule::Bool(),jule::Slice<jule::Ptr<_1d0747985_Token>>(),nullptr,jule::I64()));
}



inline jule::Ptr<_1a75c928a_ImportInfo> _1a6434833_build_std_import(_1a6432bb6_SymbolBuilder* _self_,jule::Ptr<_1d0769347_UseDecl>& _34940_decl) {
	jule::Str _35017_path = _34940_decl.get()._field_link_path.slice(5LL);
	_35017_path=_1d09a4164_replace(_35017_path,jule::Str("::", 2),static_cast<jule::Str>(92LL),-1LL);
	_35017_path=_1d09a5c6a_join(jule::Slice<jule::Str>({_1d002c897_PATH_STDLIB,_35017_path}));
	jule::Bool _35320_ok;
	std::tie(_35017_path,_35320_ok) = _1d09a62a9_abs(_35017_path);
	if ((!(_35320_ok))) {
		_1a6433645_push_err(&(*_self_), _34940_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_34940_decl.get()._field_link_path)}));
		return nullptr;
	}
	jule::Ptr<_1e9dab5b8_Status> _36013_info = ({
		auto except = static__1d09a8058_of(_35017_path);
		(except.ok()) ? (except.result) : ({{
			_1a6433645_push_err(&(*_self_), _34940_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_34940_decl.get()._field_link_path)}));
			return nullptr;
			return nullptr;
		} jule::Ptr<_1e9dab5b8_Status>();});
	});
	if ((!(_1e9dab9b4_is_dir(_36013_info.ptr())))) {
		_1a6433645_push_err(&(*_self_), _34940_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_34940_decl.get()._field_link_path)}));
		return nullptr;
	}
	jule::I64 _37013_i = (_1d094229a_find_last(_34940_decl.get()._field_link_path,jule::Str("::", 2)) + 1LL);
	jule::Str _37113_ident = _34940_decl.get()._field_link_path.slice(_37013_i);
	return jule::new_ptr<_1a75c928a_ImportInfo>(_1a75c928a_ImportInfo(_34940_decl.get()._field_token,_35017_path,_34940_decl.get()._field_link_path,_37113_ident,_34940_decl.get()._field_alias,jule::Bool(),false,true,_34940_decl.get()._field_full,jule::Slice<jule::Ptr<_1d0747985_Token>>(),jule::new_ptr<_1a75cbe4c_Package>(_1a75cbe4c_Package(nullptr)),jule::I64()));
}



inline jule::Ptr<_1a75c928a_ImportInfo> _1a6434b41_build_ident_import(jule::Ptr<_1a6432bb6_SymbolBuilder> _self_,jule::Ptr<_1d0769347_UseDecl>& _38843_decl) {
	jule::Str _38913_mod_path = _1a75c6e25_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a75c6089_get_mod_path(_self_.get()._field_importer);
	if ((_38913_mod_path.len() == 0LL)) {
		_1a6433645_push_err(_self_.ptr(), _38843_decl.get()._field_token,jule::Str("no module file found in current directory or any parent directory", 65),jule::Slice<jule::Any>());
		_1a6433d2c_push_suggestion(_self_.ptr(), jule::Str("use \"julec mod init\" command to initialize module", 49),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Str _39617_path = _38843_decl.get()._field_link_path;
	_39617_path=_1d09a4164_replace(_39617_path,jule::Str("::", 2),static_cast<jule::Str>(92LL),-1LL);
	_39617_path=_1d09a5c6a_join(jule::Slice<jule::Str>({_38913_mod_path,_39617_path}));
	jule::Bool _40020_ok;
	std::tie(_39617_path,_40020_ok) = _1d09a62a9_abs(_39617_path);
	if ((!(_40020_ok))) {
		_1a6433645_push_err(_self_.ptr(), _38843_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_38843_decl.get()._field_link_path)}));
		return nullptr;
	}
	jule::Ptr<_1e9dab5b8_Status> _40713_info = ({
		auto except = static__1d09a8058_of(_39617_path);
		(except.ok()) ? (except.result) : ({{
			_1a6433645_push_err(_self_.ptr(), _38843_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_38843_decl.get()._field_link_path)}));
			return nullptr;
			return nullptr;
		} jule::Ptr<_1e9dab5b8_Status>();});
	});
	if ((!(_1e9dab9b4_is_dir(_40713_info.ptr())))) {
		_1a6433645_push_err(_self_.ptr(), _38843_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_38843_decl.get()._field_link_path)}));
		return nullptr;
	}
	jule::I64 _41713_i = (_1d094229a_find_last(_38843_decl.get()._field_link_path,jule::Str("::", 2)) + 1LL);
	jule::Str _41813_ident = _38843_decl.get()._field_link_path.slice(_41713_i);
	return jule::new_ptr<_1a75c928a_ImportInfo>(_1a75c928a_ImportInfo(_38843_decl.get()._field_token,_39617_path,_38843_decl.get()._field_link_path,_41813_ident,_38843_decl.get()._field_alias,jule::Bool(),false,false,_38843_decl.get()._field_full,jule::Slice<jule::Ptr<_1d0747985_Token>>(),jule::new_ptr<_1a75cbe4c_Package>(_1a75cbe4c_Package(nullptr)),jule::I64()));
}



inline jule::Ptr<_1a75c928a_ImportInfo> _1a6434e4e_build_import(jule::Ptr<_1a6432bb6_SymbolBuilder> _self_,jule::Ptr<_1d0769347_UseDecl>& _43537_decl) {
	{
		
		if (_43537_decl.get()._field_cpp_linked) {
			_case_begin_1a95de457:;
			{
				return _1a6434536_build_cpp_header_import(_self_.ptr(), _43537_decl);
			}
		}
		else if (_43537_decl.get()._field_std) {
			_case_begin_1a95de4bd:;
			{
				return _1a6434833_build_std_import(_self_.ptr(), _43537_decl);
			}
		}
		else {
			_case_begin_1a95ddd80:;
			{
				return _1a6434b41_build_ident_import(_self_, _43537_decl);
			}
		}
		_match_end_1a95ddcb4:;
	}
}



inline jule::Bool _1a64352a1_check_duplicate_use_decl(_1a6432bb6_SymbolBuilder* _self_,jule::Ptr<_1a75c928a_ImportInfo>& _44644_pkg) {
	jule::Bool _44664_ok = jule::Bool();
	jule::Ptr<_1a75c928a_ImportInfo> _44813_lpkg = _1a7644305_select_package((*_self_)._field_table.ptr(), jule::Fn<jule::Bool(jule::Ptr<_1a75c928a_ImportInfo>)>([=](jule::Ptr<_1a75c928a_ImportInfo> _44849_spkg) mutable -> jule::Bool {
		return _44644_pkg.get()._field_path == _44849_spkg.get()._field_path;
	}));
	if ((_44813_lpkg == nullptr)) {
		_44664_ok = true;
		return _44664_ok;
	}
	_1a6433645_push_err(&(*_self_), _44644_pkg.get()._field_token,jule::Str("use declaration duplication: @ is already used above", 52),jule::Slice<jule::Any>({jule::Any(_44644_pkg.get()._field_link_path)}));
	_1a6433d2c_push_suggestion(&(*_self_), jule::Str("remove this use declaration, already used, it is safe", 53),jule::Slice<jule::Any>());
	_44664_ok = false;
	return _44664_ok;
}



inline void _1a64355ae_impl_import_selections(_1a6432bb6_SymbolBuilder* _self_,jule::Ptr<_1a75c928a_ImportInfo>& _46046_imp,jule::Ptr<_1d0769347_UseDecl>& _46069_decl) {
	{
		auto &expr = _46069_decl.get()._field_selected;
		auto it = expr.begin();
		_iter_begin_1a95e5051:;
		if (it != expr.end()) {
			jule::Ptr<_1d0747985_Token> _1a95e5150_ident = *it;
			{
				if (_1a75cb8b9_exist_ident(_46046_imp.ptr(), _1a95e5150_ident.get()._field_kind)) {
					_1a6433645_push_err(&(*_self_), _1a95e5150_ident,jule::Str("duplicated selection: @ is already selected", 43),jule::Slice<jule::Any>({jule::Any(_1a95e5150_ident.get()._field_kind)}));
					_1a6433d2c_push_suggestion(&(*_self_), jule::Str("remove this use selection, already selected, it is safe", 55),jule::Slice<jule::Any>());
					goto _iter_next_1a95e5051;
				}
				_46046_imp.get()._field_selected = jule::alloc_for_append(_46046_imp.get()._field_selected,1);_46046_imp.get()._field_selected.__push(_1a95e5150_ident);
			}
			_iter_next_1a95e5051:;
			++it;
			goto _iter_begin_1a95e5051;
		}
		_iter_end_1a95e5051:;
	}
}



inline jule::Str _1a64358bc_get_as_link_path(jule::Ptr<_1a6432bb6_SymbolBuilder> _self_,jule::Str _47240_path) {
	if (_1d095aa22_has_prefix(_47240_path,_1d002c897_PATH_STDLIB)) {
		(_47240_path).mut_slice(_1d002c897_PATH_STDLIB.len());
		return jule::Str("std", 3) + _1d09a4164_replace(_47240_path,static_cast<jule::Str>(92LL),jule::Str("::", 2),-1LL);
	}
	jule::Str _47814_root;
	std::tie(_47814_root,std::ignore) = _1d09a62a9_abs(_1a75c6e25_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a75c6089_get_mod_path(_self_.get()._field_importer));
	(_47240_path).mut_slice(_47814_root.len());
	if ((_47240_path[0LL] == 92LLU)) {
		(_47240_path).mut_slice(1LL);
	}
	return _1d09a4164_replace(_47240_path,static_cast<jule::Str>(92LL),jule::Str("::", 2),-1LL);
}



inline void _1a6435c85_push_cycle_error(jule::Ptr<_1a6432bb6_SymbolBuilder> _self_,jule::Ptr<_1a6432bb6_SymbolBuilder>& _48637_sb,jule::Str _48657_path,jule::Str& _48673_message) {
	
	jule::Str _48913_refers_to = _1d0019664_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(_1a64358bc_get_as_link_path(_self_, _1d074d76b_dir(_48637_sb.get()._field_table.get()._field_file.ptr()))),jule::Any(_1a64358bc_get_as_link_path(_self_, _48657_path))}));
	(_48673_message).buffer.insert(0, (((_1d0940e58_repeat(jule::Str(" ", 1),4LL) + _48913_refers_to) + jule::Str("\n", 1))));
}



inline void _1a643614d_push_cross_cycle_error(jule::Ptr<_1a6432bb6_SymbolBuilder> _self_,jule::Ptr<_1a6432bb6_SymbolBuilder>& _49643_target,jule::Ptr<_1a75c928a_ImportInfo>& _49668_imp,jule::Ptr<_1d0747985_Token>& _49687_error_token) {
	jule::Str _49717_message = jule::Str();
	_1a6435c85_push_cycle_error(_self_, _self_,_49668_imp.get()._field_path,_49717_message);
	jule::Ptr<_1a6432bb6_SymbolBuilder> _50117_owner = _self_.get()._field_owner;
	jule::Ptr<_1a6432bb6_SymbolBuilder> _50217_old = _self_;
	while ((_50117_owner.get()._field_owner != nullptr)) {
		{
			_1a6435c85_push_cycle_error(_self_, _50217_old.get()._field_owner,_1d074d76b_dir(_50217_old.get()._field_table.get()._field_file.ptr()),_49717_message);
			if (_50117_owner.get()._field_owner == _49643_target) {
				_1a6435c85_push_cycle_error(_self_, _49643_target,_1d074d76b_dir(_50117_owner.get()._field_table.get()._field_file.ptr()),_49717_message);
				goto _iter_end_1a95ee3ac;
			}
			_50217_old=_50117_owner;
			_50117_owner=_50117_owner.get()._field_owner;
		}
	_iter_next_1a95ee3ac:;
	}
	_iter_end_1a95ee3ac:;
	_1a6433645_push_err(_self_.ptr(), _49687_error_token,jule::Str("illegal cross cycle in use declarations;\n@", 42),jule::Slice<jule::Any>({jule::Any(_49717_message)}));
}



inline jule::Bool _1a6436505_check_import_cycles(jule::Ptr<_1a6432bb6_SymbolBuilder> _self_,jule::Ptr<_1a75c928a_ImportInfo> _51939_imp,jule::Ptr<_1d0769347_UseDecl>& _51958_decl) {
	if (_51939_imp.get()._field_path == _1d074d76b_dir(_self_.get()._field_table.get()._field_file.ptr())) {
		_1a6433645_push_err(_self_.ptr(), _51958_decl.get()._field_token,jule::Str("illegal cycle in use declaration, package @ refers to itself", 60),jule::Slice<jule::Any>({jule::Any(_1a64358bc_get_as_link_path(_self_, _51939_imp.get()._field_path))}));
		return false;
	}
	if ((_self_.get()._field_owner == nullptr)) {
		return true;
	}
	if (_1d074d76b_dir(_self_.get()._field_owner.get()._field_table.get()._field_file.ptr()) == _51939_imp.get()._field_path) {
		_1a643614d_push_cross_cycle_error(_self_, _self_.get()._field_owner,_51939_imp,_51958_decl.get()._field_token);
		return false;
	}
	jule::Ptr<_1a6432bb6_SymbolBuilder> _53417_owner = _self_.get()._field_owner;
	_julec_label_iter:;
	if (_1d074d76b_dir(_53417_owner.get()._field_table.get()._field_file.ptr()) == _51939_imp.get()._field_path) {
		_1a643614d_push_cross_cycle_error(_self_, _53417_owner,_51939_imp,_51958_decl.get()._field_token);
		return false;
	}
	if ((_53417_owner.get()._field_owner != nullptr)) {
		_53417_owner=_53417_owner.get()._field_owner;
		goto _julec_label_iter;
	}
	return true;
}



inline void _1a6436912_check_package_accessibility(_1a6432bb6_SymbolBuilder* _self_,jule::Ptr<_1d0769347_UseDecl>& _55547_decl,jule::Str& _55564_mod,jule::Str& _55575_path) {
	if ((_1a75c6e25_Importer_mptr_data[((*_self_)._field_importer).type_offset]._1a75c6089_get_mod_path((*_self_)._field_importer) != _55564_mod) && _1d09a3a59_contains(_55575_path,jule::Str("internal", 8))) {
		_1a6433645_push_err(&(*_self_), _55547_decl.get()._field_token,jule::Str("you cannot access to internal packages", 38),jule::Slice<jule::Any>());
	}
}



inline jule::Bool _1a6436ca8_import_package(jule::Ptr<_1a6432bb6_SymbolBuilder> _self_,jule::Ptr<_1a75c928a_ImportInfo>& _56139_imp,jule::Ptr<_1d0769347_UseDecl>& _56162_decl) {
	jule::Bool _56180_ok = jule::Bool();
	if (_56139_imp.get()._field_cpp_linked) {
		_56180_ok = true;
		return _56180_ok;
	}
	jule::Ptr<_1a75c928a_ImportInfo> _56617_port = _1a75c6e25_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a75c66a5_get_import(_self_.get()._field_importer, _56139_imp.get()._field_path);
	if ((_56617_port != nullptr)) {
		_56139_imp.get()._field_package=_56617_port.get()._field_package;
		_56139_imp.get()._field_duplicate=true;
		jule::Str _57117_old_mod = _1a75c6e25_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a75c6089_get_mod_path(_self_.get()._field_importer);
		_1a75c6e25_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a75c5d47_set_mod_path(_self_.get()._field_importer, _1a75c6e25_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a75c6397_mod_by_id(_self_.get()._field_importer, _56139_imp.get()._field_mod_id));
		_1a6436912_check_package_accessibility(_self_.ptr(), _56162_decl,_57117_old_mod,_56617_port.get()._field_path);
		_1a75c6e25_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a75c5d47_set_mod_path(_self_.get()._field_importer, _57117_old_mod);
	} else {
		if ((!(_1a6436505_check_import_cycles(_self_, _56139_imp,_56162_decl)))) {
			_56180_ok = false;
			return _56180_ok;
		}
		jule::Str _58017_old_mod = _1a75c6e25_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a75c6089_get_mod_path(_self_.get()._field_importer);
		__JULE_DEFER({
			_1a75c6e25_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a75c5d47_set_mod_path(_self_.get()._field_importer, _58017_old_mod);
		});
		if (_56139_imp.get()._field_std) {
			_1a75c6e25_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a75c5d47_set_mod_path(_self_.get()._field_importer, _1d002c897_PATH_STDLIB);
		}
		jule::Slice<jule::Ptr<_1d06e7b66_Ast>> _58522_asts;
		jule::Slice<_1d0019224_Log> _58532_errors;
		std::tie(_58522_asts,_58532_errors) = _1a75c6e25_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a75c6a5c_import_package(_self_.get()._field_importer, _56139_imp.get()._field_path,(!(_56139_imp.get()._field_std)));
		if ((_58532_errors.len() > 0LL)) {
			_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_58532_errors);
			_56180_ok = false;
			return _56180_ok;
		}
		_1a6436912_check_package_accessibility(_self_.ptr(), _56162_decl,_58017_old_mod,_56139_imp.get()._field_path);
		{
			auto &expr = _58522_asts;
			auto it = expr.begin();
			_iter_begin_1a9612ada:;
			if (it != expr.end()) {
				jule::Ptr<_1d06e7b66_Ast> _1a96130e6_ast = *it;
				{
					jule::Ptr<_1a76439db_SymbolTable> _59425_table = nullptr;
					std::tie(_59425_table,_58532_errors) = _1a768bd31_build_symbols(_1a96130e6_ast,_self_.get()._field_importer,_self_);
					if ((_58532_errors.len() > 0LL)) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_58532_errors);
						_1a6433a0d_push_err_text(_self_.ptr(), _56139_imp.get()._field_token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>({jule::Any(_56139_imp.get()._field_link_path)}));
						_56180_ok = false;
						return _56180_ok;
					}
					_56139_imp.get()._field_package.get()._field_files = jule::alloc_for_append(_56139_imp.get()._field_package.get()._field_files,1);_56139_imp.get()._field_package.get()._field_files.__push(_59425_table);
				}
				_iter_next_1a9612ada:;
				++it;
				goto _iter_begin_1a9612ada;
			}
			_iter_end_1a9612ada:;
		}
	}
	_1a64355ae_impl_import_selections(_self_.ptr(), _56139_imp,_56162_decl);
	_56180_ok = true;
	return _56180_ok;
}



inline jule::Ptr<_1a75c928a_ImportInfo> _1a64370b6_import_use_decl(jule::Ptr<_1a6432bb6_SymbolBuilder> _self_,jule::Ptr<_1d0769347_UseDecl>& _61340_decl) {
	jule::Ptr<_1a75c928a_ImportInfo> _61417_imp = _1a6434e4e_build_import(_self_, _61340_decl);
	if ((_61417_imp == nullptr)) {
		return nullptr;
	}
	jule::Bool _62017_ok = _1a64352a1_check_duplicate_use_decl(_self_.ptr(), _61417_imp);
	if ((!(_62017_ok))) {
		return nullptr;
	}
	_62017_ok=_1a6436ca8_import_package(_self_, _61417_imp,_61340_decl);
	_self_.get()._field_table.get()._field_imports = jule::alloc_for_append(_self_.get()._field_table.get()._field_imports,1);_self_.get()._field_table.get()._field_imports.__push(_61417_imp);
	if (_62017_ok) {
		_1a75c6e25_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a75c6cd2_imported(_self_.get()._field_importer, _61417_imp);
		return _61417_imp;
	}
	return nullptr;
}



inline void _1a6437292_import_use_decls(jule::Ptr<_1a6432bb6_SymbolBuilder> _self_) {
	{
		auto &expr = _self_.get()._field_ast.get()._field_use_decls;
		auto it = expr.begin();
		_iter_begin_1a961953c:;
		if (it != expr.end()) {
			jule::Ptr<_1d0769347_UseDecl> _1a961976d_decl = *it;
			{
				_1a64370b6_import_use_decl(_self_, _1a961976d_decl);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					goto _iter_end_1a961953c;
				}
			}
			_iter_next_1a961953c:;
			++it;
			goto _iter_begin_1a961953c;
		}
		_iter_end_1a961953c:;
	}
}



inline void _1a6437517_append_node(_1a6432bb6_SymbolBuilder* _self_,_1d06c9ce1_Node& _64535_node) {
	{
		auto &_match_expr{ _64535_node._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1d076c4b0_Impl>>()) {
			_case_begin_1a961ad68:;
			{
				(*_self_)._field_table.get()._field_impls = jule::alloc_for_append((*_self_)._field_table.get()._field_impls,1);(*_self_)._field_table.get()._field_impls.__push(_1a6432666_build_impl(_64535_node._field_data.operator jule::Ptr<_1d076c4b0_Impl>()));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d0767e5b_TypeAliasDecl>>()) {
			_case_begin_1a961adce:;
			{
				jule::Ptr<_1a7672168_TypeAlias> _65021_ta = _1a642e9e8_build_type_alias(_64535_node._field_data.operator jule::Ptr<_1d0767e5b_TypeAliasDecl>());
				(*_self_)._field_table.get()._field_type_aliases = jule::alloc_for_append((*_self_)._field_table.get()._field_type_aliases,1);(*_self_)._field_table.get()._field_type_aliases.__push(_65021_ta);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d076b79a_StructDecl>>()) {
			_case_begin_1a961ae45:;
			{
				jule::Ptr<_1a64147be_Struct> _65321_srct = _1a6430323_build_struct(_64535_node._field_data.operator jule::Ptr<_1d076b79a_StructDecl>());
				(*_self_)._field_table.get()._field_structs = jule::alloc_for_append((*_self_)._field_table.get()._field_structs,1);(*_self_)._field_table.get()._field_structs.__push(_65321_srct);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d0763709_FnDecl>>()) {
			_case_begin_1a961aeab:;
			{
				jule::Ptr<_1a6426a45_Fn> _65621_f = _1a6430e39_build_fn(_64535_node._field_data.operator jule::Ptr<_1d0763709_FnDecl>());
				(*_self_)._field_table.get()._field_funcs = jule::alloc_for_append((*_self_)._field_table.get()._field_funcs,1);(*_self_)._field_table.get()._field_funcs.__push(_65621_f);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d076bda5_TraitDecl>>()) {
			_case_begin_1a961b8e6:;
			{
				jule::Ptr<_1a7465bd7_Trait> _65921_t = _1a6431478_build_trait(_64535_node._field_data.operator jule::Ptr<_1d076bda5_TraitDecl>());
				(*_self_)._field_table.get()._field_traits = jule::alloc_for_append((*_self_)._field_table.get()._field_traits,1);(*_self_)._field_table.get()._field_traits.__push(_65921_t);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d07646d8_VarDecl>>()) {
			_case_begin_1a961b95c:;
			{
				jule::Ptr<_1a75ec478_Var> _66221_v = _1a6432127_build_var(_64535_node._field_data.operator jule::Ptr<_1d07646d8_VarDecl>());
				(*_self_)._field_table.get()._field_vars = jule::alloc_for_append((*_self_)._field_table.get()._field_vars,1);(*_self_)._field_table.get()._field_vars.__push(_66221_v);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d076a414_EnumDecl>>()) {
			_case_begin_1a961b9c3:;
			{
				jule::Ptr<_1a7467de8_Enum> _66521_e = _1a6431c5e_build_enum(_64535_node._field_data.operator jule::Ptr<_1d076a414_EnumDecl>());
				(*_self_)._field_table.get()._field_enums = jule::alloc_for_append((*_self_)._field_table.get()._field_enums,1);(*_self_)._field_table.get()._field_enums.__push(_66521_e);
			}
		}
		else {
			_case_begin_1a961ace1:;
			{
				_1a6433645_push_err(&(*_self_), _64535_node._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1a961ac8b:;
	}
}



inline void _1a64376e3_append_nodes(_1a6432bb6_SymbolBuilder* _self_) {
	{
		auto &expr = (*_self_)._field_ast.get()._field_nodes;
		auto it = expr.begin();
		_iter_begin_1a9623ca5:;
		if (it != expr.end()) {
			_1d06c9ce1_Node _1a9623e5e_node = *it;
			{
				_1a6437517_append_node(&(*_self_), _1a9623e5e_node);
			}
			_iter_next_1a9623ca5:;
			++it;
			goto _iter_begin_1a9623ca5;
		}
		_iter_end_1a9623ca5:;
	}
}



inline void _1a6437968_push_directive_pass(_1a6432bb6_SymbolBuilder* _self_,jule::Ptr<_1d06c9ecd_Directive>& _67843_d) {
	if ((_67843_d.get()._field_args.len() == 0LL)) {
		_1a6433645_push_err(&(*_self_), _67843_d.get()._field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;
	} else if ((_67843_d.get()._field_args.len() > 1LL)) {
		jule::Ptr<_1d0747985_Token> _68317_arg = _67843_d.get()._field_args[1LL];
		_1a6433645_push_err(&(*_self_), _68317_arg,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1d0747985_Token> _68713_arg = _67843_d.get()._field_args[0LL];
	if (_68713_arg.get()._field_id != static_cast<jule::U64>(6LLU)) {
		_1a6433645_push_err(&(*_self_), _68713_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	if (_68713_arg.get()._field_kind[0LL] != '\"') {
		_1a6433645_push_err(&(*_self_), _68713_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	(*_self_)._field_table.get()._field_passes = jule::alloc_for_append((*_self_)._field_table.get()._field_passes,1);(*_self_)._field_table.get()._field_passes.__push(_1a642e113_Pass(_67843_d.get()._field_tag,_68713_arg.get()._field_kind.slice(1LL,(_68713_arg.get()._field_kind.len() - 1LL))));
}



inline void _1a6437b44_append_top_directives(_1a6432bb6_SymbolBuilder* _self_) {
	{
		auto &expr = (*_self_)._field_ast.get()._field_top_directives;
		auto it = expr.begin();
		_iter_begin_1a9624866:;
		if (it != expr.end()) {
			jule::Ptr<_1d06c9ecd_Directive> _1a962aad1_d = *it;
			{
				{
					auto &_match_expr{ _1a962aad1_d.get()._field_tag.get()._field_kind };
					
					if (_match_expr == jule::Str("pass", 4)) {
						_case_begin_1a962b384:;
						{
							_1a6437968_push_directive_pass(&(*_self_), _1a962aad1_d);
						}
					}
					_match_end_1a962b32e:;
				}
			}
			_iter_next_1a9624866:;
			++it;
			goto _iter_begin_1a9624866;
		}
		_iter_end_1a9624866:;
	}
}



inline void _1a6437d20_build(jule::Ptr<_1a6432bb6_SymbolBuilder> _self_) {
	_self_.get()._field_table=jule::new_ptr<_1a76439db_SymbolTable>(_1a76439db_SymbolTable(_self_.get()._field_ast.get()._field_file,jule::Slice<_1a642e113_Pass>(),jule::Slice<jule::Ptr<_1a75c928a_ImportInfo>>(),jule::Slice<jule::Ptr<_1a75ec478_Var>>(),jule::Slice<jule::Ptr<_1a7672168_TypeAlias>>(),jule::Slice<jule::Ptr<_1a64147be_Struct>>(),jule::Slice<jule::Ptr<_1a6426a45_Fn>>(),jule::Slice<jule::Ptr<_1a7465bd7_Trait>>(),jule::Slice<jule::Ptr<_1a7467de8_Enum>>(),jule::Slice<jule::Ptr<_1a746936c_Impl>>()));
	_1a6437b44_append_top_directives(_self_.ptr());
	_1a6437292_import_use_decls(_self_);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;
	}
	_1a64376e3_append_nodes(_self_.ptr());
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;
	}
}







std::ostream &operator<<(std::ostream &_Stream, _1a6432bb6_SymbolBuilder _Src) {
	_Stream << "SymbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a74660d3_to_str(_1a7465bd7_Trait* _self_) {
	return (*_self_)._field_ident;
}



inline jule::Bool _1a74663e1_equals(jule::Ptr<_1a7465bd7_Trait> _self_,jule::Ptr<_1a7672da0_TypeKind> _2626_other) {
	jule::Ptr<_1a7465bd7_Trait> _2713_trt = _1a76763ae_trt(_2626_other.ptr());
	return _self_ == _2713_trt;
}



inline jule::Bool _1a7466754_is_builtin(_1a7465bd7_Trait* _self_) {
	return ((*_self_)._field_token == nullptr);
}



inline jule::Ptr<_1a6426a45_Fn> _1a7466a62_find_method(_1a7465bd7_Trait* _self_,jule::Str _4034_ident) {
	{
		auto &expr = (*_self_)._field_methods;
		auto it = expr.begin();
		_iter_begin_1a9632104:;
		if (it != expr.end()) {
			jule::Ptr<_1a6426a45_Fn> _1a9632203_f = *it;
			{
				if (_1a9632203_f.get()._field_ident == _4034_ident) {
					return _1a9632203_f;
				}
			}
			_iter_next_1a9632104:;
			++it;
			goto _iter_begin_1a9632104;
		}
		_iter_end_1a9632104:;
	}
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1a7465bd7_Trait _Src) {
	_Stream << _1a74660d3_to_str(&_Src);
	return _Stream;
}



inline jule::Bool _1a74677dd_auto_expr(_1a7467403_EnumItem* _self_) {
	return ((*_self_)._field_value == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1a7467403_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "value:" << _Src._field_value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a746825b_to_str(_1a7467de8_Enum* _self_) {
	return (*_self_)._field_ident;
}



inline jule::Bool _1a7468569_equals(jule::Ptr<_1a7467de8_Enum> _self_,jule::Ptr<_1a7672da0_TypeKind> _3826_other) {
	jule::Ptr<_1a7467de8_Enum> _3913_enm = _1a7675699_enm(_3826_other.ptr());
	return _self_ == _3913_enm;
}



inline jule::Ptr<_1a7467403_EnumItem> _1a74689a9_find_item(_1a7467de8_Enum* _self_,jule::Str _4732_ident) {
	{
		auto &expr = (*_self_)._field_items;
		auto it = expr.begin();
		_iter_begin_1a9635cea:;
		if (it != expr.end()) {
			jule::Ptr<_1a7467403_EnumItem> _1a9635de9_item = *it;
			{
				if (_1a9635de9_item.get()._field_ident == _4732_ident) {
					return _1a9635de9_item;
				}
			}
			_iter_next_1a9635cea:;
			++it;
			goto _iter_begin_1a9635cea;
		}
		_iter_end_1a9635cea:;
	}
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1a7467de8_Enum _Src) {
	_Stream << _1a746825b_to_str(&_Src);
	return _Stream;
}



inline jule::Bool _1a7469768_is_trait_impl(_1a746936c_Impl* _self_) {
	return ((*_self_)._field_base != nullptr);
}



inline jule::Bool _1a74699cc_is_struct_impl(_1a746936c_Impl* _self_) {
	return ((*_self_)._field_base == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1a746936c_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "base:" << _Src._field_base << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a759e606_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "deferred:" << _Src._field_deferred << ", ";
	_Stream << "stmts:" << _Src._field_stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a75a6003_If _Src) {
	_Stream << "If{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a7550a80_Else _Src) {
	_Stream << "Else{";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a7550c6c_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "elifs:" << _Src._field_elifs << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a7561893_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a758d1d8_is_while_next(_1a7561a80_WhileIter* _self_) {
	return (*_self_)._field_next != jule::Any(jule::Any(nullptr));
}







std::ostream &operator<<(std::ostream &_Stream, _1a7561a80_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "next:" << _Src._field_next << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a7561c6c_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "key_a:" << _Src._field_key_a << ", ";
	_Stream << "key_b:" << _Src._field_key_b;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a758e926_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "it:" << _Src._field_it;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a758eb13_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "mtch:" << _Src._field_mtch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a75b233e_Label _Src) {
	_Stream << "Label{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a75b252b_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a75b2718_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a75b2905_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a75b2ae2_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a758ed00_is_generic_type_match(_1a75b2cce_Match* _self_) {
	return ((*_self_)._field_type_match && ((*_self_)._field_expr != nullptr)) && (*_self_)._field_expr.get()._field_kind.get()._field_generic;
}







std::ostream &operator<<(std::ostream &_Stream, _1a75b2cce_Match _Src) {
	_Stream << "Match{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "type_match:" << _Src._field_type_match << ", ";
	_Stream << "cases:" << _Src._field_cases << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a75907a1_is_default(_1a75b31ec_Case* _self_) {
	return ((*_self_)._field_exprs == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1a75b31ec_Case _Src) {
	_Stream << "Case{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "next:" << _Src._field_next;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a75b33d9_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "dest_case:" << _Src._field_dest_case;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a75b35c6_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a75b37b3_ScopeLabel _Src) {
	_Stream << "ScopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a75b39a0_ScopeGoto _Src) {
	_Stream << "ScopeGoto{";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a75c928a_ImportInfo> _1a75a1493_find_package(_1a75b3b8c_ScopeChecker* _self_,jule::Str _41335_ident) {
	return _1a75d2480_find_package((*_self_)._field_s.ptr(), _41335_ident);
}



inline jule::Ptr<_1a75c928a_ImportInfo> _1a759253e_select_package(_1a75b3b8c_ScopeChecker* _self_,jule::Fn<jule::Bool(jule::Ptr<_1a75c928a_ImportInfo>)> _42337_selector) {
	return _1a75d278d_select_package((*_self_)._field_s.ptr(), _42337_selector);
}



inline jule::Ptr<_1a75ec478_Var> _1a757e0ec_find_var(_1a75b3b8c_ScopeChecker* _self_,jule::Str _43431_ident,jule::Bool _43443_cpp_linked) {
	
	jule::Ptr<_1a75ec478_Var> _43717_v = _1a7645e61___find_var((*_self_)._field_table.ptr(), _43431_ident,_43443_cpp_linked,true);
	if ((_43717_v != nullptr)) {
		return _43717_v;
	}
	jule::Ptr<_1a75b3b8c_ScopeChecker> _44217_parent = (*_self_)._field_parent;
	while ((_44217_parent != nullptr)) {
		{
			_43717_v=_1a7645e61___find_var(_44217_parent.get()._field_table.ptr(), _43431_ident,_43443_cpp_linked,true);
			if ((_43717_v != nullptr)) {
				return _43717_v;
			}
			_44217_parent=_44217_parent.get()._field_parent;
		}
	_iter_next_1a96402bb:;
	}
	_iter_end_1a96402bb:;
	return _1a75d2b45_find_var((*_self_)._field_s.ptr(), _43431_ident,_43443_cpp_linked);
}



inline jule::Ptr<_1a7672168_TypeAlias> _1a75b3e9a_find_type_alias(_1a75b3b8c_ScopeChecker* _self_,jule::Str _46138_ident,jule::Bool _46150_cpp_linked) {
	
	jule::Ptr<_1a7672168_TypeAlias> _46417_ta = _1a76463b2___find_type_alias((*_self_)._field_table.ptr(), _46138_ident,_46150_cpp_linked,true);
	if ((_46417_ta != nullptr)) {
		return _46417_ta;
	}
	jule::Ptr<_1a75b3b8c_ScopeChecker> _46917_parent = (*_self_)._field_parent;
	while ((_46917_parent != nullptr)) {
		{
			_46417_ta=_1a76463b2___find_type_alias(_46917_parent.get()._field_table.ptr(), _46138_ident,_46150_cpp_linked,true);
			if ((_46417_ta != nullptr)) {
				return _46417_ta;
			}
			_46917_parent=_46917_parent.get()._field_parent;
		}
	_iter_next_1a9644545:;
	}
	_iter_end_1a9644545:;
	return _1a75d2eec_find_type_alias((*_self_)._field_s.ptr(), _46138_ident,_46150_cpp_linked);
}



inline jule::Ptr<_1a64147be_Struct> _1a75b4352_find_struct(_1a75b3b8c_ScopeChecker* _self_,jule::Str _48634_ident,jule::Bool _48646_cpp_linked) {
	return _1a75d33a4_find_struct((*_self_)._field_s.ptr(), _48634_ident,_48646_cpp_linked);
}



inline jule::Ptr<_1a6426a45_Fn> _1a75b4709_find_fn(_1a75b3b8c_ScopeChecker* _self_,jule::Str _49530_ident,jule::Bool _49542_cpp_linked) {
	return _1a75d375b_find_fn((*_self_)._field_s.ptr(), _49530_ident,_49542_cpp_linked);
}



inline jule::Ptr<_1a7465bd7_Trait> _1a75b4a17_find_trait(_1a75b3b8c_ScopeChecker* _self_,jule::Str _50433_ident) {
	return _1a75d3a69_find_trait((*_self_)._field_s.ptr(), _50433_ident);
}



inline jule::Ptr<_1a7467de8_Enum> _1a75b4d25_find_enum(_1a75b3b8c_ScopeChecker* _self_,jule::Str _51332_ident) {
	return _1a75d3d77_find_enum((*_self_)._field_s.ptr(), _51332_ident);
}



inline jule::Bool _1a75b5155_is_unsafe(jule::Ptr<_1a75b3b8c_ScopeChecker> _self_) {
	jule::Ptr<_1a75b3b8c_ScopeChecker> _52117_scope = _self_;
	_julec_label_iter:;
	if (_52117_scope.get()._field_scope.get()._field_unsafety) {
		return true;
	}
	if ((_52117_scope.get()._field_parent != nullptr)) {
		_52117_scope=_52117_scope.get()._field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Bool _1a75b53b9_is_root(_1a75b3b8c_ScopeChecker* _self_) {
	return ((*_self_)._field_parent == nullptr) || ((*_self_)._field_owner != nullptr);
}



inline void _1a75b5595_stop(_1a75b3b8c_ScopeChecker* _self_) {
	(*_self_)._field_i=-1LL;
}



inline jule::Bool _1a75b5809_stopped(_1a75b3b8c_ScopeChecker* _self_) {
	return ((*_self_)._field_i == -1LL);
}



inline jule::Bool _1a75b5a6d_is_deferred(jule::Ptr<_1a75b3b8c_ScopeChecker> _self_) {
	jule::Ptr<_1a75b3b8c_ScopeChecker> _55417_scope = _self_;
	_julec_label_iter:;
	if (_55417_scope.get()._field_scope.get()._field_deferred) {
		return true;
	}
	if ((_55417_scope.get()._field_parent != nullptr)) {
		_55417_scope=_55417_scope.get()._field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Ptr<_1a75b3b8c_ScopeChecker> _1a75b5cd2_get_root(jule::Ptr<_1a75b3b8c_ScopeChecker> _self_) {
	jule::Ptr<_1a75b3b8c_ScopeChecker> _57217_root = _self_;
	while ((_57217_root.get()._field_parent != nullptr) && (_57217_root.get()._field_owner == nullptr)) {
		{
			_57217_root=_57217_root.get()._field_parent;
		}
	_iter_next_1a96534dd:;
	}
	_iter_end_1a96534dd:;
	return _57217_root;
}



inline jule::Ptr<_1a75b3b8c_ScopeChecker> _1a75b6046_get_hard_root(jule::Ptr<_1a75b3b8c_ScopeChecker> _self_) {
	jule::Ptr<_1a75b3b8c_ScopeChecker> _58217_root = _self_;
	while ((_58217_root.get()._field_parent != nullptr)) {
		{
			_58217_root=_58217_root.get()._field_parent;
		}
	_iter_next_1a9654aa5:;
	}
	_iter_end_1a9654aa5:;
	return _58217_root;
}



inline jule::Ptr<_1a75b233e_Label> _1a75b6354_find_label(_1a75b3b8c_ScopeChecker* _self_,jule::Str _59229_ident) {
	{
		auto &expr = (*_self_)._field_scope.get()._field_stmts;
		auto it = expr.begin();
		_iter_begin_1a965603a:;
		if (it != expr.end()) {
			jule::Any _1a9656117_st = *it;
			{
				{
					auto &_match_expr{ _1a9656117_st };
					
					if (_match_expr.type_is<jule::Ptr<_1a75b233e_Label>>()) {
						_case_begin_1a9656755:;
						{
							jule::Ptr<_1a75b233e_Label> _59625_label = _1a9656117_st.operator jule::Ptr<_1a75b233e_Label>();
							if (_59625_label.get()._field_ident == _59229_ident) {
								return _59625_label;
							}
						}
					}
					_match_end_1a9656700:;
				}
			}
			_iter_next_1a965603a:;
			++it;
			goto _iter_begin_1a965603a;
		}
		_iter_end_1a965603a:;
	}
	return nullptr;
}



inline jule::Ptr<_1a75b37b3_ScopeLabel> _1a75b6662_find_label_scope(jule::Ptr<_1a75b3b8c_ScopeChecker> _self_,jule::Str _60836_ident) {
	jule::Ptr<_1a75b37b3_ScopeLabel> _60917_label = _1a75b6970_find_label_all(_self_.ptr(), _60836_ident);
	if ((_60917_label != nullptr) && (_60917_label.get()._field_scope == _self_)) {
		return _60917_label;
	}
	return nullptr;
}



inline jule::Ptr<_1a75b37b3_ScopeLabel> _1a75b6970_find_label_all(_1a75b3b8c_ScopeChecker* _self_,jule::Str _62033_ident) {
	{
		auto &expr = (*((*_self_)._field_labels));
		auto it = expr.begin();
		_iter_begin_1a9659516:;
		if (it != expr.end()) {
			jule::Ptr<_1a75b37b3_ScopeLabel> _1a965979c_lbl = *it;
			{
				if (_1a965979c_lbl.get()._field_label.get()._field_ident == _62033_ident) {
					return _1a965979c_lbl;
				}
			}
			_iter_next_1a9659516:;
			++it;
			goto _iter_begin_1a9659516;
		}
		_iter_end_1a9659516:;
	}
	return nullptr;
}



inline jule::Bool _1a75b6d27_is_duplicated_ident(_1a75b3b8c_ScopeChecker* _self_,jule::U64 _63238_itself,jule::Str _63255_ident) {
	jule::Ptr<_1a75ec478_Var> _63313_v = _1a757e0ec_find_var(&(*_self_), _63255_ident,false);
	if ((_63313_v != nullptr) && (static_cast<jule::U64>(_63313_v) != _63238_itself)) {
		if ((_63313_v.get()._field_scope == nullptr)) {
			return false;
		}
		return (_63313_v.get()._field_scope == (*_self_)._field_scope) || (!(_1a75d4251_is_flag((*_self_)._field_s.ptr(), static_cast<jule::I64>(1LL))));
	}
	jule::Ptr<_1a7672168_TypeAlias> _64113_ta = _1a75b3e9a_find_type_alias(&(*_self_), _63255_ident,false);
	if ((_64113_ta != nullptr) && (static_cast<jule::U64>(_64113_ta) != _63238_itself)) {
		if ((_64113_ta.get()._field_scope == nullptr)) {
			return false;
		}
		return (_64113_ta.get()._field_scope == (*_self_)._field_tree) || (!(_1a75d4251_is_flag((*_self_)._field_s.ptr(), static_cast<jule::I64>(1LL))));
	}
	return false;
}



inline void _1a75b709c_check_var_decl(jule::Ptr<_1a75b3b8c_ScopeChecker> _self_,jule::Ptr<_1d07646d8_VarDecl> _65238_decl) {
	jule::Ptr<_1a75ec478_Var> _65317_v = _1a6432127_build_var(_65238_decl);
	_65317_v.get()._field_scope=_self_.get()._field_scope;
	__JULE_DEFER({
		_self_.get()._field_table.get()._field_vars = jule::alloc_for_append(_self_.get()._field_table.get()._field_vars,1);_self_.get()._field_table.get()._field_vars.__push(_65317_v);
		_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_65317_v));
	});
	if (_1a75b6d27_is_duplicated_ident(_self_.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_65317_v)),_65317_v.get()._field_ident)) {
		_1a75d488e_push_err(_self_.get()._field_s.ptr(), _65317_v.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_65317_v.get()._field_ident)}));
		_1a75d4bad_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		_1a75b5595_stop(_self_.ptr());
		return;
	}
	_1a75e11a3_check_var_decl(_self_.get()._field_s, _65317_v,jule::Trait<_1a768b25e_Lookup>(_self_, 0));
	if ((!(_1a75eca94_is_type_inferred(_65317_v.ptr()))) && ((_65317_v.get()._field_kind == nullptr) || (_65317_v.get()._field_kind.get()._field_kind == nullptr))) {
		return;
	}
	_1a75e53e9_check_type_var(_self_.get()._field_s, _65317_v,jule::Trait<_1a768b25e_Lookup>(_self_, 0));
}



inline void _1a75b7322_check_type_alias_decl(jule::Ptr<_1a75b3b8c_ScopeChecker> _self_,jule::Ptr<_1d0767e5b_TypeAliasDecl> _67645_decl) {
	jule::Ptr<_1a7672168_TypeAlias> _67717_ta = _1a642e9e8_build_type_alias(_67645_decl);
	if (_1a75b6d27_is_duplicated_ident(_self_.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_67717_ta)),_67717_ta.get()._field_ident)) {
		_1a75d488e_push_err(_self_.get()._field_s.ptr(), _67717_ta.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_67717_ta.get()._field_ident)}));
		_1a75d4bad_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		_1a75b5595_stop(_self_.ptr());
		return;
	}
	_1a75dc0d3_check_type_alias_decl(_self_.get()._field_s, _67717_ta,jule::Trait<_1a768b25e_Lookup>(_self_, 0));
	_self_.get()._field_table.get()._field_type_aliases = jule::alloc_for_append(_self_.get()._field_table.get()._field_type_aliases,1);_self_.get()._field_table.get()._field_type_aliases.__push(_67717_ta);
	if ((_67717_ta.get()._field_kind.get()._field_kind == nullptr)) {
		_1a75b5595_stop(_self_.ptr());
	}
}



inline jule::Ptr<_1a759e606_Scope> _1a75b7586_get_child(_1a75b3b8c_ScopeChecker* _self_) {
	return jule::new_ptr<_1a759e606_Scope>(_1a759e606_Scope((*_self_)._field_scope,jule::Bool(),jule::Bool(),jule::Slice<jule::Any>()));
}



inline void _1a75b794e_check_child_ssc(jule::Ptr<_1a75b3b8c_ScopeChecker> _self_,jule::Ptr<_1d0761c13_ScopeTree>& _70040_tree,jule::Ptr<_1a759e606_Scope>& _70063_s,jule::Ptr<_1a75b3b8c_ScopeChecker>& _70079_ssc) {
	_70079_ssc.get()._field_parent=_self_;
	_1a75c2a8b_check(_70079_ssc, _70040_tree,_70063_s);
}



inline jule::Ptr<_1a759e606_Scope> _1a75b7d06_check_child_sc(jule::Ptr<_1a75b3b8c_ScopeChecker> _self_,jule::Ptr<_1d0761c13_ScopeTree>& _70539_tree,jule::Ptr<_1a75b3b8c_ScopeChecker>& _70562_ssc) {
	jule::Ptr<_1a759e606_Scope> _70617_s = _1a75b7586_get_child(_self_.ptr());
	_1a75b794e_check_child_ssc(_self_, _70539_tree,_70617_s,_70562_ssc);
	return _70617_s;
}



inline jule::Ptr<_1a759e606_Scope> _1a75b8114_check_child(jule::Ptr<_1a75b3b8c_ScopeChecker> _self_,jule::Ptr<_1d0761c13_ScopeTree>& _71136_tree) {
	jule::Ptr<_1a75b3b8c_ScopeChecker> _71217_ssc = _1a75c2d00_new_child_checker(_self_);
	return _1a75b7d06_check_child_sc(_self_, _71136_tree,_71217_ssc);
}



inline void _1a75b8389_check_anon_scope(jule::Ptr<_1a75b3b8c_ScopeChecker> _self_,jule::Ptr<_1d0761c13_ScopeTree> _71640_tree) {
	jule::Ptr<_1a759e606_Scope> _71717_s = _1a75b8114_check_child(_self_, _71640_tree);
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_71717_s));
}



inline void _1a75b86a8_process_error_call(jule::Ptr<_1a75b3b8c_ScopeChecker> _self_,jule::Ptr<_1a6422722_BuiltinErrorCallExprModel>& _72143_m,jule::Ptr<_1d0747985_Token> _72174_err) {
	if (_1a75b5a6d_is_deferred(_self_)) {
		_1a75d488e_push_err(_self_.get()._field_s.ptr(), _72174_err,jule::Str("deferred scopes are not supports error calls", 44),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a75b3b8c_ScopeChecker> _72617_root = _1a75b5cd2_get_root(_self_);
	if ((!(_72617_root.get()._field_owner.get()._field_decl.get()._field_exceptional))) {
		_1a75d488e_push_err(_self_.get()._field_s.ptr(), _72174_err,jule::Str("error call can only useable for exceptional functions", 53),jule::Slice<jule::Any>());
		_1a75d4bad_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("you can declare an exceptional function with \"!\" operator", 57),jule::Slice<jule::Any>());
	}
	_72143_m.get()._field_func=_72617_root.get()._field_owner;
}



inline void _1a75b892d_check_expr(jule::Ptr<_1a75b3b8c_ScopeChecker> _self_,jule::Ptr<_1d075b14c_Expr> _73434_expr) {
	jule::Ptr<_1a764a6d5_Eval> _73517_eval = _1a75d95ec_eval(_self_.get()._field_s, jule::Trait<_1a768b25e_Lookup>(_self_, 0));
	_73517_eval.get()._field_ignored=true;
	jule::Ptr<_1a7648b67_Data> _73717_d = _1a7664d92_eval_expr(_73517_eval, _73434_expr);
	if ((_73717_d == nullptr)) {
		return;
	}
	{
		auto &_match_expr{ _73717_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1a6422722_BuiltinErrorCallExprModel>>()) {
			_case_begin_1a9680097:;
			{
				jule::Ptr<_1a6422722_BuiltinErrorCallExprModel> _74421_m = _73717_d.get()._field_model.operator jule::Ptr<_1a6422722_BuiltinErrorCallExprModel>();
				_1a75b86a8_process_error_call(_self_, _74421_m,_73434_expr.get()._field_token);
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_73717_d));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a64239dc_BackendEmitExprModel>>() || _match_expr.type_is<jule::Ptr<_1a6422337_BuiltinAppendCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1a6420c1a_BuiltinCloneCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1a6420511_BuiltinOutCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1a64208eb_BuiltinOutlnCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1a64214e0_BuiltinPanicCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1a6421996_BuiltinAssertCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1a6423cc8_FreeExprModel>>() || _match_expr.type_is<jule::Ptr<_1a641b364_FnCallExprModel>>()) {
			_case_begin_1a968010d:;
			{
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_73717_d));
			}
		}
		else {
			_case_begin_1a967eb13:;
			{
				_1a75d488e_push_err(_self_.get()._field_s.ptr(), _73434_expr.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1a967eaad:;
	}
}



inline void _1a75b8ba3_check_co_expr(jule::Ptr<_1a75b3b8c_ScopeChecker> _self_,jule::Ptr<_1d075bd1d_CoExpr> _76237_expr) {
	jule::Ptr<_1a764a6d5_Eval> _76317_eval = _1a75d95ec_eval(_self_.get()._field_s, jule::Trait<_1a768b25e_Lookup>(_self_, 0));
	_76317_eval.get()._field_ignored=true;
	jule::Ptr<_1a7648b67_Data> _76517_d = _1a7664d92_eval_expr(_76317_eval, _76237_expr.get()._field_expr);
	if ((_76517_d == nullptr)) {
		return;
	}
	{
		auto &_match_expr{ _76517_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1a641b364_FnCallExprModel>>()) {
			_case_begin_1a96864ee:;
			{
				jule::Ptr<_1a641b364_FnCallExprModel> _77221_model = _76517_d.get()._field_model.operator jule::Ptr<_1a641b364_FnCallExprModel>();
				if (_77221_model.get()._field_func.get()._field_decl.get()._field_exceptional) {
					_1a75d488e_push_err(_self_.get()._field_s.ptr(), _76237_expr.get()._field_token,jule::Str("concurrent calls not supports exceptionals", 42),jule::Slice<jule::Any>());
					_1a75d4bad_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("handle exceptional in a separate function or anonymous function", 63),jule::Slice<jule::Any>());
				}
				_77221_model.get()._field_is_co=true;
				_1a765c10e_check_fn_of_concurrent_call(_76317_eval.ptr(), _77221_model.get()._field_func,_76237_expr.get()._field_expr.get()._field_token);
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_76517_d));
			}
		}
		else {
			_case_begin_1a96853ee:;
			{
				_1a75d488e_push_err(_self_.get()._field_s.ptr(), _76237_expr.get()._field_token,jule::Str("statement must have function call expression", 44),jule::Slice<jule::Any>());
				return;
			}
		}
		_match_end_1a9685883:;
	}
}



inline jule::Ptr<_1a75a6003_If> _1a75b8eb1_check_if(jule::Ptr<_1a75b3b8c_ScopeChecker> _self_,jule::Ptr<_1d0766e5a_If> _78632_i) {
	jule::Ptr<_1a759e606_Scope> _78717_s = _1a75b8114_check_child(_self_, _78632_i.get()._field_scope);
	jule::Ptr<_1a7648b67_Data> _78917_d = _1a7664d92_eval_expr(_1a75d95ec_eval(_self_.get()._field_s, jule::Trait<_1a768b25e_Lookup>(_self_, 0)), _78632_i.get()._field_expr);
	if ((_78917_d == nullptr)) {
		return nullptr;
	}
	jule::Ptr<_1a7677602_Prim> _79417_prim = _1a7674e5c_prim(_78917_d.get()._field_kind.ptr());
	if ((_79417_prim == nullptr) || (!(_1a767a34c_is_bool(_79417_prim.ptr())))) {
		_1a75d488e_push_err(_self_.get()._field_s.ptr(), _78632_i.get()._field_expr.get()._field_token,jule::Str("if conditions must be have boolean expression", 45),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_ptr<_1a75a6003_If>(_1a75a6003_If(_78917_d.get()._field_model,_78717_s));
}



inline jule::Ptr<_1a7550a80_Else> _1a75b92be_check_else(jule::Ptr<_1a75b3b8c_ScopeChecker> _self_,jule::Ptr<_1d0767312_Else> _80634_e) {
	return jule::new_ptr<_1a7550a80_Else>(_1a7550a80_Else(_1a75b8114_check_child(_self_, _80634_e.get()._field_scope)));
}



inline void _1a75b9544_check_conditional(jule::Ptr<_1a75b3b8c_ScopeChecker> _self_,jule::Ptr<_1d0767785_Conditional> _81241_conditional) {
	jule::Ptr<_1a7550c6c_Conditional> _81317_c = jule::new_ptr<_1a7550c6c_Conditional>(_1a7550c6c_Conditional());
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_81317_c));
	_81317_c.get()._field_elifs=jule::Slice<jule::Ptr<_1a75a6003_If>>::alloc(0LL,static_cast<jule::I64>((_81241_conditional.get()._field_tail.len() + 1LL)));
	_81317_c.get()._field_elifs = jule::alloc_for_append(_81317_c.get()._field_elifs,1);_81317_c.get()._field_elifs.__push(_1a75b8eb1_check_if(_self_, _81241_conditional.get()._field_head));
	{
		auto &expr = _81241_conditional.get()._field_tail;
		auto it = expr.begin();
		_iter_begin_1a96911c9:;
		if (it != expr.end()) {
			jule::Ptr<_1d0766e5a_If> _1a9691dde_elif = *it;
			{
				_81317_c.get()._field_elifs = jule::alloc_for_append(_81317_c.get()._field_elifs,1);_81317_c.get()._field_elifs.__push(_1a75b8eb1_check_if(_self_, _1a9691dde_elif));
			}
			_iter_next_1a96911c9:;
			++it;
			goto _iter_begin_1a96911c9;
		}
		_iter_end_1a96911c9:;
	}
	if ((_81241_conditional.get()._field_default != nullptr)) {
		_81317_c.get()._field_default=_1a75b92be_check_else(_self_, _81241_conditional.get()._field_default);
	}
}



inline jule::Ptr<_1a759e606_Scope> _1a75b9995_check_iter_scope_sc(jule::Ptr<_1a75b3b8c_ScopeChecker> _self_,jule::U64 _82839_it,jule::Ptr<_1d0761c13_ScopeTree> _82856_tree,jule::Ptr<_1a75b3b8c_ScopeChecker> _82878_ssc) {
	_82878_ssc.get()._field_it=_82839_it;
	return _1a75b7d06_check_child_sc(_self_, _82856_tree,_82878_ssc);
}



inline jule::Ptr<_1a759e606_Scope> _1a75b9d4c_check_iter_scope(jule::Ptr<_1a75b3b8c_ScopeChecker> _self_,jule::U64 _83336_it,jule::Ptr<_1d0761c13_ScopeTree>& _83354_tree) {
	jule::Ptr<_1a75b3b8c_ScopeChecker> _83417_ssc = _1a75c2d00_new_child_checker(_self_);
	return _1a75b9995_check_iter_scope_sc(_self_, _83336_it,_83354_tree,_83417_ssc);
}



inline void _1a75ba0c2_check_inf_iter(jule::Ptr<_1a75b3b8c_ScopeChecker> _self_,jule::Ptr<_1d0765112_Iter>& _83839_it) {
	jule::Ptr<_1a7561893_InfIter> _83917_kind = jule::new_ptr<_1a7561893_InfIter>(_1a7561893_InfIter());
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_83917_kind));
	_83917_kind.get()._field_scope=_1a75b9d4c_check_iter_scope(_self_, static_cast<jule::U64>(static_cast<jule::U64>(_83917_kind)),_83839_it.get()._field_scope);
}



inline void _1a75ba347_check_while_iter(jule::Ptr<_1a75b3b8c_ScopeChecker> _self_,jule::Ptr<_1d0765112_Iter>& _84641_it) {
	jule::Ptr<_1d07658d7_WhileKind> _84717_wh = _84641_it.get()._field_kind.operator jule::Ptr<_1d07658d7_WhileKind>();
	if ((_84717_wh.get()._field_expr == nullptr) && (_84717_wh.get()._field_next == jule::Any(jule::Any(nullptr)))) {
		_1a75ba0c2_check_inf_iter(_self_, _84641_it);
		return;
	}
	jule::Ptr<_1a7561a80_WhileIter> _85317_kind = jule::new_ptr<_1a7561a80_WhileIter>(_1a7561a80_WhileIter());
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_85317_kind));
	_85317_kind.get()._field_scope=_1a75b9d4c_check_iter_scope(_self_, static_cast<jule::U64>(static_cast<jule::U64>(_85317_kind)),_84641_it.get()._field_scope);
	if ((_84717_wh.get()._field_expr != nullptr)) {
		jule::Ptr<_1a7648b67_Data> _86021_d = _1a7664d92_eval_expr(_1a75d95ec_eval(_self_.get()._field_s, jule::Trait<_1a768b25e_Lookup>(_self_, 0)), _84717_wh.get()._field_expr);
		if ((_86021_d == nullptr)) {
			return;
		}
		jule::Ptr<_1a7677602_Prim> _86517_prim = _1a7674e5c_prim(_86021_d.get()._field_kind.ptr());
		if ((_86517_prim == nullptr)) {
			_1a75d488e_push_err(_self_.get()._field_s.ptr(), _84641_it.get()._field_token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;
		}
		if ((!(_1a767a34c_is_bool(_86517_prim.ptr())))) {
			_1a75d488e_push_err(_self_.get()._field_s.ptr(), _84641_it.get()._field_token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;
		}
		_85317_kind.get()._field_expr=_86021_d.get()._field_model;
	}
	if (_1d0765c39_is_while_next(_84717_wh.ptr())) {
		if ((!(_1a7584cd4_is_valid_ast_st_for_next_st(_84717_wh.get()._field_next)))) {
			_1a75d488e_push_err(_self_.get()._field_s.ptr(), _84717_wh.get()._field_next_token,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			return;
		}
		jule::I64 _88517_n = _self_.get()._field_scope.get()._field_stmts.len();
		_1a75c1837_check_node(_self_, _84717_wh.get()._field_next);
		if (_88517_n < static_cast<jule::I64>(static_cast<jule::I64>(_self_.get()._field_scope.get()._field_stmts.len()))) {
			jule::Any _88825_st = _self_.get()._field_scope.get()._field_stmts[_88517_n];
			_self_.get()._field_scope.get()._field_stmts=_self_.get()._field_scope.get()._field_stmts.slice(0LL,_88517_n);
			if ((!(_1a758bd63_is_valid_st_for_next_st(_88825_st)))) {
				_1a75d488e_push_err(_self_.get()._field_s.ptr(), _84717_wh.get()._field_next_token,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			}
			_85317_kind.get()._field_next=_88825_st;
		}
	}
}



inline void _1a75ba5bc_check_range_iter(jule::Ptr<_1a75b3b8c_ScopeChecker> _self_,jule::Ptr<_1d0765112_Iter>& _89941_it) {
	jule::Ptr<_1d0766278_RangeKind> _90017_rang = _89941_it.get()._field_kind.operator jule::Ptr<_1d0766278_RangeKind>();
	jule::Ptr<_1a7648b67_Data> _90217_d = _1a7664d92_eval_expr(_1a75d95ec_eval(_self_.get()._field_s, jule::Trait<_1a768b25e_Lookup>(_self_, 0)), _90017_rang.get()._field_expr);
	if ((_90217_d == nullptr)) {
		return;
	}
	jule::Ptr<_1a7561c6c_RangeIter> _90717_kind = jule::new_ptr<_1a7561c6c_RangeIter>(_1a7561c6c_RangeIter(_90217_d,jule::Ptr<_1a759e606_Scope>(),jule::Ptr<_1a75ec478_Var>(),jule::Ptr<_1a75ec478_Var>()));
	_1a763eb6e_RangeChecker _91117_rc = _1a763eb6e_RangeChecker(_self_,_90017_rang,_90717_kind,_90217_d);
	jule::Bool _91713_ok = _1a7641566_check(&_91117_rc);
	if ((!(_91713_ok))) {
		return;
	}
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_90717_kind));
	jule::Ptr<_1a75b3b8c_ScopeChecker> _92417_ssc = _1a75c2d00_new_child_checker(_self_);
	if ((_90717_kind.get()._field_key_a != nullptr)) {
		if ((!(_1a75d4251_is_flag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1a75b6d27_is_duplicated_ident(_self_.ptr(), 0LLU,_90717_kind.get()._field_key_a.get()._field_ident)) {
			_1a75d488e_push_err(_self_.get()._field_s.ptr(), _90717_kind.get()._field_key_a.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_90717_kind.get()._field_key_a.get()._field_ident)}));
			_1a75d4bad_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		}
		_92417_ssc.get()._field_table.get()._field_vars = jule::alloc_for_append(_92417_ssc.get()._field_table.get()._field_vars,1);_92417_ssc.get()._field_table.get()._field_vars.__push(_90717_kind.get()._field_key_a);
	}
	if ((_90717_kind.get()._field_key_b != nullptr)) {
		if ((!(_1a75d4251_is_flag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1a75b6d27_is_duplicated_ident(_self_.ptr(), 0LLU,_90717_kind.get()._field_key_b.get()._field_ident)) {
			_1a75d488e_push_err(_self_.get()._field_s.ptr(), _90717_kind.get()._field_key_b.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_90717_kind.get()._field_key_b.get()._field_ident)}));
			_1a75d4bad_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		}
		_92417_ssc.get()._field_table.get()._field_vars = jule::alloc_for_append(_92417_ssc.get()._field_table.get()._field_vars,1);_92417_ssc.get()._field_table.get()._field_vars.__push(_90717_kind.get()._field_key_b);
	}
	_90717_kind.get()._field_scope=_1a75b9995_check_iter_scope_sc(_self_, static_cast<jule::U64>(static_cast<jule::U64>(_90717_kind)),_89941_it.get()._field_scope,_92417_ssc);
}



inline void _1a75ba842_check_iter(jule::Ptr<_1a75b3b8c_ScopeChecker> _self_,jule::Ptr<_1d0765112_Iter> _94534_it) {
	if (_1d0765464_is_inf(_94534_it.ptr())) {
		_1a75ba0c2_check_inf_iter(_self_, _94534_it);
		return;
	}
	{
		auto &_match_expr{ _94534_it.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d07658d7_WhileKind>>()) {
			_case_begin_1a96b14c4:;
			{
				_1a75ba347_check_while_iter(_self_, _94534_it);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d0766278_RangeKind>>()) {
			_case_begin_1a96b0737:;
			{
				_1a75ba5bc_check_range_iter(_self_, _94534_it);
			}
		}
		else {
			_case_begin_1a96b0eb8:;
			{
				jule::outln(jule::Str("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_1a96b0e63:;
	}
}



inline jule::Bool _1a75bab50_check_valid_cont_label(jule::Ptr<_1a75b3b8c_ScopeChecker> _self_,jule::U64 _96142_it) {
	jule::Ptr<_1a75b3b8c_ScopeChecker> _96217_scope = _self_;
	_julec_label_iter:;
	if (_96217_scope.get()._field_it == _96142_it) {
		return true;
	}
	if ((_96217_scope.get()._field_parent != nullptr)) {
		_96217_scope=_96217_scope.get()._field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Bool _1a75baea2_check_valid_break_label(jule::Ptr<_1a75b3b8c_ScopeChecker> _self_,jule::U64 _97743_ptr) {
	jule::Ptr<_1a75b3b8c_ScopeChecker> _97817_scope = _self_;
	_julec_label_iter:;
	if (_97817_scope.get()._field_it == _97743_ptr) {
		return true;
	}
	if ((_97817_scope.get()._field_cse != 0LLU)) {
		jule::U64 _98617_mtch = static_cast<jule::U64>(((_1a75b31ec_Case*)(_97817_scope.get()._field_cse))->_field_owner);
		if (_98617_mtch == _97743_ptr) {
			return true;
		}
	}
	if ((_97817_scope.get()._field_parent != nullptr)) {
		_97817_scope=_97817_scope.get()._field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Ptr<_1a758e926_ContSt> _1a75bb29e_check_cont_valid_scope(jule::Ptr<_1a75b3b8c_ScopeChecker> _self_,jule::Ptr<_1d07669d7_ContSt> _100042_c) {
	if (_1a75b5a6d_is_deferred(_self_)) {
		_1a75d488e_push_err(_self_.get()._field_s.ptr(), _100042_c.get()._field_token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
		return nullptr;
	}
	if ((_100042_c.get()._field_label != nullptr)) {
		return jule::new_ptr<_1a758e926_ContSt>();
	}
	jule::Ptr<_1a75b3b8c_ScopeChecker> _101017_scope = _self_;
	_julec_label_iter:;
	{
		
		if (((_101017_scope.get()._field_it == 0LLU) && (_101017_scope.get()._field_parent != nullptr)) && (_101017_scope.get()._field_owner == nullptr)) {
			_case_begin_1a96b9873:;
			{
				_101017_scope=_101017_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_101017_scope.get()._field_it != 0LLU)) {
			_case_begin_1a96b98ea:;
			{
				return jule::new_ptr<_1a758e926_ContSt>(_1a758e926_ContSt(_101017_scope.get()._field_it));
			}
		}
		_match_end_1a96b97a7:;
	}
	_1a75d488e_push_err(_self_.get()._field_s.ptr(), _100042_c.get()._field_token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
	return nullptr;
}



inline void _1a75bb524_check_cont(jule::Ptr<_1a75b3b8c_ScopeChecker> _self_,jule::Ptr<_1d07669d7_ContSt> _102430_c) {
	jule::Ptr<_1a758e926_ContSt> _102517_cont = _1a75bb29e_check_cont_valid_scope(_self_, _102430_c);
	if ((_102517_cont == nullptr)) {
		return;
	}
	if ((_102430_c.get()._field_label != nullptr)) {
		jule::Ptr<_1a75b37b3_ScopeLabel> _103121_label = _1a7562058_find_label_parent(_102430_c.get()._field_label.get()._field_kind,_self_.get()._field_parent);
		if ((_103121_label == nullptr)) {
			_1a75d488e_push_err(_self_.get()._field_s.ptr(), _102430_c.get()._field_label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>({jule::Any(_102430_c.get()._field_label.get()._field_kind)}));
			return;
		}
		_103121_label.get()._field_used=true;
		if ((_103121_label.get()._field_pos + 1LL) >= static_cast<jule::I64>(static_cast<jule::I64>(_103121_label.get()._field_scope.get()._field_scope.get()._field_stmts.len()))) {
			_1a75d488e_push_err(_self_.get()._field_s.ptr(), _102430_c.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>({jule::Any(_102430_c.get()._field_label.get()._field_kind)}));
			return;
		}
		jule::I64 _104417_i = (_103121_label.get()._field_pos + 1LL);
		if (_104417_i >= static_cast<jule::I64>(static_cast<jule::I64>(_103121_label.get()._field_scope.get()._field_scope.get()._field_stmts.len()))) {
			_1a75d488e_push_err(_self_.get()._field_s.ptr(), _102430_c.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>());
		} else {
			jule::Any _104825_st = _103121_label.get()._field_scope.get()._field_scope.get()._field_stmts[_104417_i];
			{
				auto &_match_expr{ _104825_st };
				
				if (_match_expr.type_is<jule::Ptr<_1a7561893_InfIter>>()) {
					_case_begin_1a96c24b3:;
					{
						_102517_cont.get()._field_it=static_cast<jule::U64>(static_cast<jule::U64>(_104825_st.operator jule::Ptr<_1a7561893_InfIter>()));
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1a7561c6c_RangeIter>>()) {
					_case_begin_1a96c3e21:;
					{
						_102517_cont.get()._field_it=static_cast<jule::U64>(static_cast<jule::U64>(_104825_st.operator jule::Ptr<_1a7561c6c_RangeIter>()));
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1a7561a80_WhileIter>>()) {
					_case_begin_1a96c3e87:;
					{
						_102517_cont.get()._field_it=static_cast<jule::U64>(static_cast<jule::U64>(_104825_st.operator jule::Ptr<_1a7561a80_WhileIter>()));
					}
				}
				else {
					_case_begin_1a96c3d33:;
					{
						_1a75d488e_push_err(_self_.get()._field_s.ptr(), _102430_c.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>({jule::Any(_102430_c.get()._field_label.get()._field_kind)}));
					}
				}
				_match_end_1a96c3ccd:;
			}
		}
	}
	if ((_102517_cont.get()._field_it != 0LLU)) {
		if ((!(_1a75bab50_check_valid_cont_label(_self_, _102517_cont.get()._field_it)))) {
			_1a75d488e_push_err(_self_.get()._field_s.ptr(), _102430_c.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>({jule::Any(_102430_c.get()._field_label.get()._field_kind)}));
		}
	}
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_102517_cont));
}



inline void _1a75bb799_check_label(jule::Ptr<_1a75b3b8c_ScopeChecker> _self_,jule::Ptr<_1d076031b_LabelSt> _107135_l) {
	if ((_1a75b6354_find_label(_self_.ptr(), _107135_l.get()._field_ident) != nullptr)) {
		_1a75d488e_push_err(_self_.get()._field_s.ptr(), _107135_l.get()._field_token,jule::Str("label is already exist in this identifier: @", 44),jule::Slice<jule::Any>({jule::Any(_107135_l.get()._field_ident)}));
		return;
	}
	jule::Ptr<_1a75b233e_Label> _107717_label = jule::new_ptr<_1a75b233e_Label>(_1a75b233e_Label(_107135_l.get()._field_ident));
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_107717_label));
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_1a75b37b3_ScopeLabel>>({jule::new_ptr<_1a75b37b3_ScopeLabel>(_1a75b37b3_ScopeLabel(_107135_l.get()._field_token,_107717_label,static_cast<jule::I64>(static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(_self_.get()._field_scope.get()._field_stmts.len())) - 1LL))),_self_,jule::Bool()))}));
}



inline void _1a75bba1e_push_goto(jule::Ptr<_1a75b3b8c_ScopeChecker> _self_,jule::Ptr<_1d07606c3_GotoSt> _109033_gt) {
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(jule::new_ptr<_1a75b252b_GotoSt>(_1a75b252b_GotoSt(_109033_gt.get()._field_label.get()._field_kind))));
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_1a75b39a0_ScopeGoto>>({jule::new_ptr<_1a75b39a0_ScopeGoto>(_1a75b39a0_ScopeGoto(_109033_gt,_self_,static_cast<jule::I64>(static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(_self_.get()._field_scope.get()._field_stmts.len())) - 1LL)))))}));
}



inline void _1a75bbc94_check_postfix(jule::Ptr<_1a75b3b8c_ScopeChecker> _self_,jule::Ptr<_1d0761608_AssignSt> _110237_a) {
	if ((_110237_a.get()._field_left.len() > 1LL)) {
		_1a75d488e_push_err(_self_.get()._field_s.ptr(), _110237_a.get()._field_setter,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_1d075b14c_Expr> _110817_expr = _110237_a.get()._field_left[0LL].get()._field_expr;
	jule::Ptr<_1a7648b67_Data> _110917_d = _1a7664d92_eval_expr(_1a75d95ec_eval(_self_.get()._field_s, jule::Trait<_1a768b25e_Lookup>(_self_, 0)), _110817_expr);
	if ((_110917_d == nullptr)) {
		return;
	}
	_1a7584542_check_assign(_self_.get()._field_s,_110917_d,nullptr,_110237_a.get()._field_setter);
	if ((_1a7675435_ptr(_110917_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1a767e175_Ptr> _111721_ptr = _1a7675435_ptr(_110917_d.get()._field_kind.ptr());
		if (_1a767eb48_is_unsafe(_111721_ptr.ptr())) {
			_1a75d488e_push_err(_self_.get()._field_s.ptr(), _110237_a.get()._field_setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any(_110237_a.get()._field_setter.get()._field_kind),jule::Any(_1a7673257_to_str(_110917_d.get()._field_kind.ptr()))}));
			return;
		}
	} else {
		if ((_1a7674e5c_prim(_110917_d.get()._field_kind.ptr()) == nullptr) || (!(_1a75b1e65_is_num(_1a7674e5c_prim(_110917_d.get()._field_kind.ptr()).get()._field_kind)))) {
			_1a75d488e_push_err(_self_.get()._field_s.ptr(), _110237_a.get()._field_setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any(_110237_a.get()._field_setter.get()._field_kind),jule::Any(_1a7673257_to_str(_110917_d.get()._field_kind.ptr()))}));
			return;
		}
	}
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(jule::new_ptr<_1a75b2718_Postfix>(_1a75b2718_Postfix(_110917_d.get()._field_model,_110237_a.get()._field_setter.get()._field_kind))));
}



inline jule::Bool _1a75bc0a2_is_new_assign_ident(_1a75b3b8c_ScopeChecker* _self_,jule::Str _113538_ident) {
	if (_1d074a1d5_is_ignore_ident(_113538_ident) || _113538_ident.empty()) {
		return false;
	}
	return _1a7646769_def_by_ident((*_self_)._field_table.ptr(), _113538_ident,false) == jule::Any(jule::Any(nullptr));
}



inline jule::Bool _1a75bc547_check_structure_assign_op(jule::Ptr<_1a75b3b8c_ScopeChecker> _self_,jule::Ptr<_1a641744d_StructIns>& _114350_s,jule::Ptr<_1d0761608_AssignSt>& _114370_a,jule::Ptr<_1a7648b67_Data>& _114389_r) {
	jule::Ptr<_1a6429be1_FnIns> _114617_overload = nullptr;
	{
		auto &_match_expr{ _114370_a.get()._field_setter.get()._field_kind };
		
		if (_match_expr == jule::Str("+=", 2)) {
			_case_begin_1a96db224:;
			{
				_114617_overload=_114350_s.get()._field_operators._field_add_assign;
			}
		}
		else if (_match_expr == jule::Str("-=", 2)) {
			_case_begin_1a96dae16:;
			{
				_114617_overload=_114350_s.get()._field_operators._field_sub_assign;
			}
		}
		else if (_match_expr == jule::Str("/=", 2)) {
			_case_begin_1a96dbe06:;
			{
				_114617_overload=_114350_s.get()._field_operators._field_div_assign;
			}
		}
		else if (_match_expr == jule::Str("*=", 2)) {
			_case_begin_1a96dbe6c:;
			{
				_114617_overload=_114350_s.get()._field_operators._field_mul_assign;
			}
		}
		else if (_match_expr == jule::Str("%=", 2)) {
			_case_begin_1a96dbed3:;
			{
				_114617_overload=_114350_s.get()._field_operators._field_mod_assign;
			}
		}
		else if (_match_expr == jule::Str("<<=", 3)) {
			_case_begin_1a96dab3b:;
			{
				_114617_overload=_114350_s.get()._field_operators._field_shl_assign;
			}
		}
		else if (_match_expr == jule::Str(">>=", 3)) {
			_case_begin_1a96daba2:;
			{
				_114617_overload=_114350_s.get()._field_operators._field_shr_assign;
			}
		}
		else if (_match_expr == jule::Str("|=", 2)) {
			_case_begin_1a96dac18:;
			{
				_114617_overload=_114350_s.get()._field_operators._field_bit_or_assign;
			}
		}
		else if (_match_expr == jule::Str("&=", 2)) {
			_case_begin_1a96dac7e:;
			{
				_114617_overload=_114350_s.get()._field_operators._field_bit_and_assign;
			}
		}
		else if (_match_expr == jule::Str("^=", 2)) {
			_case_begin_1a96dc19d:;
			{
				_114617_overload=_114350_s.get()._field_operators._field_bit_xor_assign;
			}
		}
		else {
			_case_begin_1a96da60d:;
			{
				_1a75d488e_push_err(_self_.get()._field_s.ptr(), _114370_a.get()._field_setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any(_114370_a.get()._field_setter.get()._field_kind),jule::Any(_1a6417805_to_str(_114350_s.ptr()))}));
				return false;
			}
		}
		_match_end_1a96daad6:;
	}
	if ((_114617_overload == nullptr)) {
		_1a75d488e_push_err(_self_.get()._field_s.ptr(), _114370_a.get()._field_setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any(_114370_a.get()._field_setter.get()._field_kind),jule::Any(_1a6417805_to_str(_114350_s.ptr()))}));
		return false;
	}
	jule::Ptr<_1a6428d55_ParamIns> _117817_p = _114617_overload.get()._field_params[1LL];
	return _1a75d9ae7_check_assign_type(_self_.get()._field_s, _117817_p.get()._field_decl.get()._field_reference,_117817_p.get()._field_kind,_114389_r,_114370_a.get()._field_setter);
}



inline void _1a75bc7ab_check_single_assign(jule::Ptr<_1a75b3b8c_ScopeChecker> _self_,jule::Ptr<_1d0761608_AssignSt>& _118244_a) {
	jule::Ptr<_1a7648b67_Data> _118317_l = nullptr;
	if ((!(_1d074a1d5_is_ignore_ident(_118244_a.get()._field_left[0LL].get()._field_ident)))) {
		jule::Ptr<_1d075b14c_Expr> _118621_expr = _118244_a.get()._field_left[0LL].get()._field_expr;
		_118317_l=_1a7664d92_eval_expr(_1a75d95ec_eval(_self_.get()._field_s, jule::Trait<_1a768b25e_Lookup>(_self_, 0)), _118621_expr);
		if ((_118317_l == nullptr)) {
			return;
		}
	}
	jule::Ptr<_1a764a6d5_Eval> _119317_eval = nullptr;
	if ((_118317_l != nullptr)) {
		_119317_eval=_1a75d92de_evalp(_self_.get()._field_s, jule::Trait<_1a768b25e_Lookup>(_self_, 0),_118317_l.get()._field_kind);
	} else {
		_119317_eval=_1a75d95ec_eval(_self_.get()._field_s, jule::Trait<_1a768b25e_Lookup>(_self_, 0));
	}
	_119317_eval.get()._field_unsafety=_1a75b5155_is_unsafe(_self_);
	jule::Ptr<_1a7648b67_Data> _120017_r = _1a7664d92_eval_expr(_119317_eval, _118244_a.get()._field_right);
	if ((_120017_r == nullptr)) {
		return;
	}
	if ((_118317_l == nullptr)) {
		if (_1a7673ed3_void(_120017_r.get()._field_kind.ptr())) {
			_1a75d488e_push_err(_self_.get()._field_s.ptr(), _118244_a.get()._field_right.get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		}
		_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_120017_r));
		return;
	}
	if ((!(_1a7584542_check_assign(_self_.get()._field_s,_118317_l,_120017_r,_118244_a.get()._field_setter)))) {
		return;
	}
	if ((_1a7676887_tup(_120017_r.get()._field_kind.ptr()) != nullptr)) {
		_1a75d488e_push_err(_self_.get()._field_s.ptr(), _118244_a.get()._field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_1a64190a9_OperandExprModel> _122217_lm = jule::new_ptr<_1a64190a9_OperandExprModel>(_1a64190a9_OperandExprModel(_118317_l.get()._field_kind,_118317_l.get()._field_model));
	jule::Ptr<_1a64190a9_OperandExprModel> _122617_rm = jule::new_ptr<_1a64190a9_OperandExprModel>(_1a64190a9_OperandExprModel(_120017_r.get()._field_kind,_120017_r.get()._field_model));
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(jule::new_ptr<_1a75b2905_Assign>(_1a75b2905_Assign(_122217_lm,_122617_rm,_118244_a.get()._field_setter))));
	if ((_118244_a.get()._field_setter.get()._field_kind != jule::Str("=", 1))) {
		jule::Ptr<_1a641744d_StructIns> _123321_strct = _1a767614a_strct(_118317_l.get()._field_kind.ptr());
		if ((_123321_strct != nullptr)) {
			_1a75bc547_check_structure_assign_op(_self_, _123321_strct,_118244_a,_120017_r);
			return;
		}
		_118244_a.get()._field_setter.get()._field_kind=_118244_a.get()._field_setter.get()._field_kind.slice(0LL,(_118244_a.get()._field_setter.get()._field_kind.len() - 1LL));
		_1a76670a3_BinaryEval _124021_solver = static__1a7667999_new(_119317_eval,_118244_a.get()._field_setter);
		_120017_r=_1a766c42c_solve_explicit(&_124021_solver, _118317_l,_120017_r);
		if ((_120017_r == nullptr)) {
			return;
		}
		_118244_a.get()._field_setter.get()._field_kind+=jule::Str("=", 1);
		return;
	}
	_1a7636072_AssignTypeChecker _124917_checker = _1a7636072_AssignTypeChecker(_self_.get()._field_s,_118317_l.get()._field_kind,_120017_r,_118244_a.get()._field_setter);
	if (_1a76371e9_check(&_124917_checker)) {
		_122617_rm.get()._field_model=_120017_r.get()._field_model;
		_122217_lm.get()._field_model=_118317_l.get()._field_model;
	}
}



inline void _1a75bcd2d___process_end_part_of_multi_assign(_1a75b3b8c_ScopeChecker* _self_,jule::Ptr<_1a75b2ae2_MultiAssign> _126157_st,jule::Ptr<_1d0761608_AssignSt> _126213_a,jule::Ptr<_1d07610b9_AssignLeft> _126231_lexpr,jule::Ptr<_1a7648b67_Data> _126255_l,jule::Ptr<_1a7648b67_Data> _126269_r) {
	if (_1d074a1d5_is_ignore_ident(_126231_lexpr.get()._field_ident)) {
		if (_1a7673ed3_void(_126269_r.get()._field_kind.ptr())) {
			_1a75d488e_push_err((*_self_)._field_s.ptr(), _126213_a.get()._field_right.get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		}
		_126157_st.get()._field_l = jule::alloc_for_append(_126157_st.get()._field_l,1);_126157_st.get()._field_l.__push(jule::Any(nullptr));
		return;
	}
	if (_126213_a.get()._field_declarative && _1a75bc0a2_is_new_assign_ident(&(*_self_), _126231_lexpr.get()._field_ident)) {
		if (_1a75b6d27_is_duplicated_ident(&(*_self_), 0LLU,_126231_lexpr.get()._field_ident)) {
			_1a75d488e_push_err((*_self_)._field_s.ptr(), _126231_lexpr.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_126231_lexpr.get()._field_ident)}));
			_1a75d4bad_push_suggestion((*_self_)._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
			_1a75b5595_stop(&(*_self_));
			return;
		}
		jule::Ptr<_1a75ec478_Var> _128121_v = jule::new_ptr<_1a75ec478_Var>(_1a75ec478_Var((*_self_)._field_scope,_126231_lexpr.get()._field_token,_126231_lexpr.get()._field_ident,jule::Bool(),jule::Bool(),_126231_lexpr.get()._field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),_126231_lexpr.get()._field_reference,jule::Ptr<_1a7676c3e_TypeSymbol>(),jule::new_ptr<_1a7649be0_Value>(_1a7649be0_Value(_126213_a.get()._field_right,_126269_r)),jule::Ptr<_1a642cc9e_ReferenceStack>(),jule::Slice<jule::Ptr<_1d06c9ecd_Directive>>(),jule::Ptr<_1a75eb4aa_IterRelation>(),jule::Slice<jule::Ptr<_1a75ec478_Var>>()));
		_1a75e50ca_check_var((*_self_)._field_s, _128121_v);
		_126157_st.get()._field_l = jule::alloc_for_append(_126157_st.get()._field_l,1);_126157_st.get()._field_l.__push(jule::Any(_128121_v));
		(*_self_)._field_table.get()._field_vars = jule::alloc_for_append((*_self_)._field_table.get()._field_vars,1);(*_self_)._field_table.get()._field_vars.__push(_128121_v);
		(*_self_)._field_scope.get()._field_stmts = jule::alloc_for_append((*_self_)._field_scope.get()._field_stmts,1);(*_self_)._field_scope.get()._field_stmts.__push(jule::Any(_128121_v));
		return;
	}
	if (_126231_lexpr.get()._field_mutable || _126231_lexpr.get()._field_reference) {
		_1a75d488e_push_err((*_self_)._field_s.ptr(), _126231_lexpr.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_126231_lexpr.get()._field_ident)}));
		_1a75d4bad_push_suggestion((*_self_)._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	if ((!(_1a7584542_check_assign((*_self_)._field_s,_126255_l,_126269_r,_126213_a.get()._field_setter)))) {
		return;
	}
	
	_1a75db91d_check_validity_for_init_expr((*_self_)._field_s, _126255_l.get()._field_mutable,false,_126255_l.get()._field_kind,_126269_r,_126213_a.get()._field_setter);
	_1a7636072_AssignTypeChecker _131617_checker = _1a7636072_AssignTypeChecker((*_self_)._field_s,_126255_l.get()._field_kind,_126269_r,_126213_a.get()._field_setter);
	_1a76371e9_check(&_131617_checker);
	_126157_st.get()._field_l = jule::alloc_for_append(_126157_st.get()._field_l,1);_126157_st.get()._field_l.__push(_126255_l.get()._field_model);
}



inline void _1a75bd070_check_ret_multi_assign(jule::Ptr<_1a75b3b8c_ScopeChecker> _self_,jule::Ptr<_1d0761608_AssignSt>& _132747_a) {
	jule::Ptr<_1a7648b67_Data> _132817_rd = _1a7664d92_eval_expr(_1a75d95ec_eval(_self_.get()._field_s, jule::Trait<_1a768b25e_Lookup>(_self_, 0)), _132747_a.get()._field_right);
	if ((_132817_rd == nullptr)) {
		return;
	}
	jule::Slice<jule::Ptr<_1a7648b67_Data>> _133317_r = _1a7580c58_get_datas_from_tuple_data(_132817_rd);
	{
		
		if (_132747_a.get()._field_left.len() > static_cast<jule::I64>(static_cast<jule::I64>(_133317_r.len()))) {
			_case_begin_1a9713746:;
			{
				_1a75d488e_push_err(_self_.get()._field_s.ptr(), _132747_a.get()._field_setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>());
				return;
			}
		}
		else if (_132747_a.get()._field_left.len() < static_cast<jule::I64>(static_cast<jule::I64>(_133317_r.len()))) {
			_case_begin_1a97137bd:;
			{
				_1a75d488e_push_err(_self_.get()._field_s.ptr(), _132747_a.get()._field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
				return;
			}
		}
		_match_end_1a971369c:;
	}
	jule::Ptr<_1a75b2ae2_MultiAssign> _134417_st = jule::new_ptr<_1a75b2ae2_MultiAssign>(_1a75b2ae2_MultiAssign(jule::Slice<jule::Any>(),_132817_rd.get()._field_model));
	if ((_1a7676887_tup(_132817_rd.get()._field_kind.ptr()) == nullptr)) {
		_134417_st.get()._field_r=jule::Any(jule::new_ptr<_1a6420115_TupleExprModel>(_1a6420115_TupleExprModel(_133317_r)));
	}
	{
		auto &expr = _132747_a.get()._field_left;
		auto it = expr.begin();
		_iter_begin_1a9716e20:;
		if (it != expr.end()) {
			jule::I64 _1a9716b45_i = it - expr.begin();
			{
				jule::Ptr<_1d07610b9_AssignLeft> _135321_lexpr = _132747_a.get()._field_left[_1a9716b45_i];
				jule::Ptr<_1a7648b67_Data> _135421_l = nullptr;
				if ((!(_1d074a1d5_is_ignore_ident(_135321_lexpr.get()._field_ident))) && ((!(_132747_a.get()._field_declarative)) || (!(_1a75bc0a2_is_new_assign_ident(_self_.ptr(), _135321_lexpr.get()._field_ident))))) {
					_135421_l=_1a7664d92_eval_expr(_1a75d95ec_eval(_self_.get()._field_s, jule::Trait<_1a768b25e_Lookup>(_self_, 0)), _135321_lexpr.get()._field_expr);
					if ((_135421_l == nullptr)) {
						goto _iter_next_1a9716e20;
					}
				}
				_1a75bcd2d___process_end_part_of_multi_assign(_self_.ptr(), _134417_st,_132747_a,_135321_lexpr,_135421_l,_133317_r[_1a9716b45_i]);
			}
			_iter_next_1a9716e20:;
			++it;
			_1a9716b45_i++;
			goto _iter_begin_1a9716e20;
		}
		_iter_end_1a9716e20:;
	}
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_134417_st));
}



inline void _1a75bd2e5_check_multi_assign(jule::Ptr<_1a75b3b8c_ScopeChecker> _self_,jule::Ptr<_1d0761608_AssignSt>& _137043_a) {
	{
		auto &_match_expr{ _137043_a.get()._field_right.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d075cd74_FnCallExpr>>()) {
			_case_begin_1a971b1bb:;
			{
				_1a75bd070_check_ret_multi_assign(_self_, _137043_a);
				return;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d075bb31_UnsafeExpr>>()) {
			_case_begin_1a971b232:;
			{
				{
					auto &_match_expr{ _137043_a.get()._field_right.get()._field_kind.operator jule::Ptr<_1d075bb31_UnsafeExpr>().get()._field_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_1d075cd74_FnCallExpr>>()) {
						_case_begin_1a971c684:;
						{
							_1a75bd070_check_ret_multi_assign(_self_, _137043_a);
							return;
						}
					}
					_match_end_1a971c62e:;
				}
			}
		}
		_match_end_1a971b166:;
	}
	jule::Slice<jule::Any> _138317_right = _1a7581891_get_expr_models(_137043_a.get()._field_right.get()._field_kind);
	{
		
		if (_137043_a.get()._field_left.len() > static_cast<jule::I64>(static_cast<jule::I64>(_138317_right.len()))) {
			_case_begin_1a971d421:;
			{
				_1a75d488e_push_err(_self_.get()._field_s.ptr(), _137043_a.get()._field_setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>());
				return;
			}
		}
		else if (_137043_a.get()._field_left.len() < static_cast<jule::I64>(static_cast<jule::I64>(_138317_right.len()))) {
			_case_begin_1a971d498:;
			{
				_1a75d488e_push_err(_self_.get()._field_s.ptr(), _137043_a.get()._field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
				return;
			}
		}
		_match_end_1a971d344:;
	}
	jule::Ptr<_1a6420115_TupleExprModel> _139417_right_tuple = jule::new_ptr<_1a6420115_TupleExprModel>(_1a6420115_TupleExprModel());
	jule::Ptr<_1a75b2ae2_MultiAssign> _139617_st = jule::new_ptr<_1a75b2ae2_MultiAssign>(_1a75b2ae2_MultiAssign(jule::Slice<jule::Any>(),jule::Any(jule::Any(_139417_right_tuple))));
	{
		auto &expr = _137043_a.get()._field_left;
		auto it = expr.begin();
		_iter_begin_1a972117c:;
		if (it != expr.end()) {
			jule::I64 _1a972137a_i = it - expr.begin();
			{
				jule::Ptr<_1d07610b9_AssignLeft> _140121_lexpr = _137043_a.get()._field_left[_1a972137a_i];
				jule::Ptr<_1a7648b67_Data> _140221_l = nullptr;
				if ((!(_1d074a1d5_is_ignore_ident(_140121_lexpr.get()._field_ident))) && ((!(_137043_a.get()._field_declarative)) || (!(_1a75bc0a2_is_new_assign_ident(_self_.ptr(), _140121_lexpr.get()._field_ident))))) {
					_140221_l=_1a7664d92_eval_expr(_1a75d95ec_eval(_self_.get()._field_s, jule::Trait<_1a768b25e_Lookup>(_self_, 0)), _140121_lexpr.get()._field_expr);
					if ((_140221_l == nullptr)) {
						goto _iter_next_1a972117c;
					}
				}
				jule::Ptr<_1d075b14c_Expr> _141221_expr = jule::new_ptr<_1d075b14c_Expr>(_1d075b14c_Expr(_137043_a.get()._field_right.get()._field_token,jule::Ptr<_1d0747985_Token>(),jule::Bool(),_138317_right[_1a972137a_i]));
				jule::Ptr<_1a764a6d5_Eval> _141621_eval = nullptr;
				if ((_140221_l != nullptr)) {
					_141621_eval=_1a75d92de_evalp(_self_.get()._field_s, jule::Trait<_1a768b25e_Lookup>(_self_, 0),_140221_l.get()._field_kind);
				} else {
					_141621_eval=_1a75d95ec_eval(_self_.get()._field_s, jule::Trait<_1a768b25e_Lookup>(_self_, 0));
				}
				jule::Ptr<_1a7648b67_Data> _142221_r = _1a7664d92_eval_expr(_141621_eval, _141221_expr);
				if ((_142221_r == nullptr)) {
					goto _iter_next_1a972117c;
				}
				_139417_right_tuple.get()._field_datas = jule::alloc_for_append(_139417_right_tuple.get()._field_datas,1);_139417_right_tuple.get()._field_datas.__push(_142221_r);
				_1a75bcd2d___process_end_part_of_multi_assign(_self_.ptr(), _139617_st,_137043_a,_140121_lexpr,_140221_l,_142221_r);
			}
			_iter_next_1a972117c:;
			++it;
			_1a972137a_i++;
			goto _iter_begin_1a972117c;
		}
		_iter_end_1a972117c:;
	}
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_139617_st));
}



inline void _1a75bd56a_check_assign_st(jule::Ptr<_1a75b3b8c_ScopeChecker> _self_,jule::Ptr<_1d0761608_AssignSt> _143539_a) {
	{
		
		if (_1d074c1e8_is_postfix_op(_143539_a.get()._field_setter.get()._field_kind)) {
			_case_begin_1a97282c7:;
			{
				_1a75bbc94_check_postfix(_self_, _143539_a);
			}
		}
		else if ((_143539_a.get()._field_left.len() == 1LL) && (!(_143539_a.get()._field_declarative))) {
			_case_begin_1a9727eb9:;
			{
				_1a75bc7ab_check_single_assign(_self_, _143539_a);
			}
		}
		else {
			_case_begin_1a9727e53:;
			{
				_1a75bd2e5_check_multi_assign(_self_, _143539_a);
			}
		}
		_match_end_1a9727d87:;
	}
}



inline jule::Ptr<_1a759e606_Scope> _1a75bd922_check_case_scope(jule::Ptr<_1a75b3b8c_ScopeChecker> _self_,jule::Ptr<_1a75b31ec_Case>& _144637_c,jule::Ptr<_1d0761c13_ScopeTree>& _144652_tree) {
	jule::Ptr<_1a75b3b8c_ScopeChecker> _144717_ssc = _1a75c2d00_new_child_checker(_self_);
	_144717_ssc.get()._field_cse=static_cast<jule::U64>(static_cast<jule::U64>(_144637_c));
	return _1a75b7d06_check_child_sc(_self_, _144652_tree,_144717_ssc);
}



inline jule::Ptr<_1a75b31ec_Case> _1a75bde1c_check_case(jule::Ptr<_1a75b3b8c_ScopeChecker> _self_,jule::Ptr<_1a75b2cce_Match> _145234_m,jule::I64 _145245_i,jule::Ptr<_1d07683ce_Case> _145257_c,jule::Ptr<_1a7648b67_Data> _145287_expr) {
	jule::Ptr<_1a75b31ec_Case> _145317__case = _145234_m.get()._field_cases[_145245_i];
	_145317__case.get()._field_exprs=jule::Slice<jule::Ptr<_1a7648b67_Data>>::alloc(0LL,static_cast<jule::I64>(_145257_c.get()._field_exprs.len()));
	jule::Bool _145517_generic_matched = false;
	jule::Ptr<_1a764a6d5_Eval> _145617_eval = _1a75d95ec_eval(_self_.get()._field_s, jule::Trait<_1a768b25e_Lookup>(_self_, 0));
	{
		auto &expr = _145257_c.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1a972e60d:;
		if (it != expr.end()) {
			jule::Ptr<_1d075b14c_Expr> _1a972e80b_e = *it;
			{
				jule::Ptr<_1a7648b67_Data> _145821_d = _1a7664776_eval_expr_kind(_145617_eval, _1a972e80b_e.get()._field_kind);
				if ((_145821_d == nullptr)) {
					goto _iter_next_1a972e60d;
				}
				if (_145234_m.get()._field_type_match) {
					_145317__case.get()._field_exprs = jule::alloc_for_append(_145317__case.get()._field_exprs,1);_145317__case.get()._field_exprs.__push(_145821_d);
					if ((_1a75804c7_count_match_type(_145234_m,_145821_d.get()._field_kind) > 1LL)) {
						_1a75d488e_push_err(_self_.get()._field_s.ptr(), _1a972e80b_e.get()._field_token,jule::Str("duplicated pattern: type @ is already matched", 45),jule::Slice<jule::Any>({jule::Any(_1a7673257_to_str(_145821_d.get()._field_kind.ptr()))}));
					}
					if (_145287_expr.get()._field_kind.get()._field_generic) {
						_145517_generic_matched=_145517_generic_matched || _1a7673565_equals(_145287_expr.get()._field_kind, _145821_d.get()._field_kind);
					} else {
						jule::Ptr<_1a7465bd7_Trait> _147025_trt = _1a76763ae_trt(_145287_expr.get()._field_kind.ptr());
						if ((_147025_trt != nullptr)) {
							_1a75da08c_check_type_compatibility(_self_.get()._field_s, _145287_expr.get()._field_kind,_145821_d.get()._field_kind,_1a972e80b_e.get()._field_token);
						}
					}
					goto _iter_next_1a972e60d;
				}
				if (_145821_d.get()._field_decl) {
					_1a75d488e_push_err(_self_.get()._field_s.ptr(), _1a972e80b_e.get()._field_token,jule::Str("expecting expression, found type declaration", 44),jule::Slice<jule::Any>());
					_1a75d4bad_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("you can use type-match if you want to match types", 49),jule::Slice<jule::Any>());
					goto _iter_next_1a972e60d;
				}
				_145317__case.get()._field_exprs = jule::alloc_for_append(_145317__case.get()._field_exprs,1);_145317__case.get()._field_exprs.__push(_145821_d);
				_1a7636072_AssignTypeChecker _148721_checker = _1a7636072_AssignTypeChecker(_self_.get()._field_s,_145287_expr.get()._field_kind,_145821_d,_1a972e80b_e.get()._field_token);
				_1a76371e9_check(&_148721_checker);
			}
			_iter_next_1a972e60d:;
			++it;
			goto _iter_begin_1a972e60d;
		}
		_iter_end_1a972e60d:;
	}
	if (((!(_145234_m.get()._field_type_match)) || (!(_145287_expr.get()._field_kind.get()._field_generic))) || _145517_generic_matched) {
		_145317__case.get()._field_scope=_1a75bd922_check_case_scope(_self_, _145317__case,_145257_c.get()._field_scope);
	}
	return _145317__case;
}



inline void _1a75be2d5_check_cases(jule::Ptr<_1a75b3b8c_ScopeChecker> _self_,jule::Ptr<_1d0768aa5_MatchCase>& _150136_m,jule::Ptr<_1a75b2cce_Match> _150155_rm,jule::Ptr<_1a7648b67_Data> _150171_expr) {
	_150155_rm.get()._field_cases=jule::Slice<jule::Ptr<_1a75b31ec_Case>>::alloc(0LL,static_cast<jule::I64>(_150136_m.get()._field_cases.len()));
	{
		auto &expr = _150136_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1a97398c1:;
		if (it != expr.end()) {
			jule::I64 _1a9739393_i = it - expr.begin();
			{
				jule::Ptr<_1a75b31ec_Case> _150421__case = jule::new_ptr<_1a75b31ec_Case>(_1a75b31ec_Case(_150155_rm,jule::Ptr<_1a759e606_Scope>(),jule::Slice<jule::Ptr<_1a7648b67_Data>>(),jule::Ptr<_1a75b31ec_Case>()));
				if ((_1a9739393_i > 0LL)) {
					_150155_rm.get()._field_cases[(_1a9739393_i - 1LL)].get()._field_next=_150421__case;
				}
				_150155_rm.get()._field_cases = jule::alloc_for_append(_150155_rm.get()._field_cases,1);_150155_rm.get()._field_cases.__push(_150421__case);
			}
			_iter_next_1a97398c1:;
			++it;
			_1a9739393_i++;
			goto _iter_begin_1a97398c1;
		}
		_iter_end_1a97398c1:;
	}
	if ((_150155_rm.get()._field_default != nullptr) && (_150136_m.get()._field_cases.len() > 0LL)) {
		_150155_rm.get()._field_cases[(_150155_rm.get()._field_cases.len() - 1LL)].get()._field_next=_150155_rm.get()._field_default;
	}
	{
		auto &expr = _150136_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1a973c264:;
		if (it != expr.end()) {
			jule::I64 _1a973c5a5_i = it - expr.begin();
			jule::Ptr<_1d07683ce_Case> _1a973c6c6_c = *it;
			{
				_1a75bde1c_check_case(_self_, _150155_rm,_1a973c5a5_i,_1a973c6c6_c,_150171_expr);
			}
			_iter_next_1a973c264:;
			++it;
			_1a973c5a5_i++;
			goto _iter_begin_1a973c264;
		}
		_iter_end_1a973c264:;
	}
}



inline jule::Ptr<_1a75b31ec_Case> _1a75be68c_check_default(jule::Ptr<_1a75b3b8c_ScopeChecker> _self_,jule::Ptr<_1a75b2cce_Match> _152237_m,jule::Ptr<_1d0767312_Else> _152252_d) {
	jule::Ptr<_1a75b31ec_Case> _152317_def = jule::new_ptr<_1a75b31ec_Case>(_1a75b31ec_Case(_152237_m,jule::Ptr<_1a759e606_Scope>(),jule::Slice<jule::Ptr<_1a7648b67_Data>>(),jule::Ptr<_1a75b31ec_Case>()));
	_152317_def.get()._field_scope=_1a75bd922_check_case_scope(_self_, _152317_def,_152252_d.get()._field_scope);
	return _152317_def;
}



inline void _1a75be912_check_comptime_panic(_1a75b3b8c_ScopeChecker* _self_,jule::Ptr<_1a759e606_Scope>& _153040_s) {
	if ((_153040_s.get()._field_stmts.len() != 1LL)) {
		return;
	}
	jule::Any _153513_stmt = _153040_s.get()._field_stmts[0LL];
	{
		auto &_match_expr{ _153513_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_1a7648b67_Data>>()) {
			_case_begin_1a9741158:;
			{
				jule::Ptr<_1a7648b67_Data> _153817_d = _153513_stmt.operator jule::Ptr<_1a7648b67_Data>();
				{
					auto &_match_expr{ _153817_d.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1a64214e0_BuiltinPanicCallExprModel>>()) {
						_case_begin_1a9741e4a:;
						{
							jule::Ptr<_1a64214e0_BuiltinPanicCallExprModel> _154121_m = _153817_d.get()._field_model.operator jule::Ptr<_1a64214e0_BuiltinPanicCallExprModel>();
							{
								auto &_match_expr{ _154121_m.get()._field_expr };
								
								if (_match_expr.type_is<jule::Ptr<_1a751ddb1_Const>>()) {
									_case_begin_1a9742ca3:;
									{
										jule::Ptr<_1a751ddb1_Const> _154425_c = _154121_m.get()._field_expr.operator jule::Ptr<_1a751ddb1_Const>();
										if (_1a7522c0b_is_str(_154425_c.ptr())) {
											_1a75d488e_push_err((*_self_)._field_s.ptr(), (*_self_)._field_called_from,jule::Str("compile-time panic: @", 21),jule::Slice<jule::Any>({jule::Any(_1a7520863_read_str(_154425_c.ptr()))}));
										}
									}
								}
								_match_end_1a9742c2b:;
							}
						}
					}
					_match_end_1a9741d90:;
				}
			}
		}
		_match_end_1a9741103:;
	}
}



inline void _1a75bec31_push_type_match(jule::Ptr<_1a75b3b8c_ScopeChecker> _self_,jule::Ptr<_1a75b2cce_Match> _155339_tm,jule::Ptr<_1d0768aa5_MatchCase>& _155356_m) {
	if (_155339_tm.get()._field_expr.get()._field_kind.get()._field_generic) {
		{
			auto &expr = _155339_tm.get()._field_cases;
			auto it = expr.begin();
			_iter_begin_1a9745080:;
			if (it != expr.end()) {
				jule::Ptr<_1a75b31ec_Case> _1a974517e_c = *it;
				{
					if ((_1a974517e_c.get()._field_scope != nullptr)) {
						_1a75be912_check_comptime_panic(_self_.ptr(), _1a974517e_c.get()._field_scope);
						_155339_tm.get()._field_default=_1a974517e_c;
						_155339_tm.get()._field_cases=nullptr;
						goto _julec_label_push;
					}
				}
				_iter_next_1a9745080:;
				++it;
				goto _iter_begin_1a9745080;
			}
			_iter_end_1a9745080:;
		}
		if ((_155356_m.get()._field_default != nullptr)) {
			_155339_tm.get()._field_cases=nullptr;
			_155339_tm.get()._field_default=_1a75be68c_check_default(_self_, _155339_tm,_155356_m.get()._field_default);
			if ((_155339_tm.get()._field_default != nullptr)) {
				_1a75be912_check_comptime_panic(_self_.ptr(), _155339_tm.get()._field_default.get()._field_scope);
			}
		}
	}
	_julec_label_push:;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_155339_tm));
}



inline void _1a75beea6_check_type_match(jule::Ptr<_1a75b3b8c_ScopeChecker> _self_,jule::Ptr<_1d0768aa5_MatchCase>& _157741_m) {
	jule::Ptr<_1a7648b67_Data> _157817_d = _1a7664a84_eval(_1a75d95ec_eval(_self_.get()._field_s, jule::Trait<_1a768b25e_Lookup>(_self_, 0)), _157741_m.get()._field_expr);
	if ((_157817_d == nullptr)) {
		return;
	}
	if ((!(_157817_d.get()._field_kind.get()._field_generic)) && (!(((_1a7674e5c_prim(_157817_d.get()._field_kind.ptr()) != nullptr) && _1a767a825_is_any(_1a7674e5c_prim(_157817_d.get()._field_kind.ptr()).ptr())) || (_1a76763ae_trt(_157817_d.get()._field_kind.ptr()) != nullptr)))) {
		_1a75d488e_push_err(_self_.get()._field_s.ptr(), _157741_m.get()._field_expr.get()._field_token,jule::Str("type-match must be have <any>, <trait> or <generic> typed expression", 68),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_1a75b2cce_Match> _158917_tm = jule::new_ptr<_1a75b2cce_Match>(_1a75b2cce_Match(_157817_d,true,jule::Slice<jule::Ptr<_1a75b31ec_Case>>(),jule::Ptr<_1a75b31ec_Case>()));
	if ((!(_158917_tm.get()._field_expr.get()._field_kind.get()._field_generic)) && (_157741_m.get()._field_default != nullptr)) {
		_158917_tm.get()._field_default=_1a75be68c_check_default(_self_, _158917_tm,_157741_m.get()._field_default);
	}
	_1a75be2d5_check_cases(_self_, _157741_m,_158917_tm,_157817_d);
	_1a75bec31_push_type_match(_self_, _158917_tm,_157741_m);
}



inline void _1a75c022b_check_common_match(jule::Ptr<_1a75b3b8c_ScopeChecker> _self_,jule::Ptr<_1d0768aa5_MatchCase>& _160243_m) {
	jule::Ptr<_1a7648b67_Data> _160317_d = nullptr;
	if ((_160243_m.get()._field_expr == nullptr)) {
		_160317_d=jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1a7672da0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),static__1a751e2e0_new_bool(true)));
		_160317_d.get()._field_model=jule::Any(_160317_d.get()._field_constant);
	} else {
		_160317_d=_1a7664d92_eval_expr(_1a75d95ec_eval(_self_.get()._field_s, jule::Trait<_1a768b25e_Lookup>(_self_, 0)), _160243_m.get()._field_expr);
		if ((_160317_d == nullptr)) {
			return;
		}
	}
	jule::Ptr<_1a75b2cce_Match> _161717_mc = jule::new_ptr<_1a75b2cce_Match>(_1a75b2cce_Match(_160317_d,jule::Bool(),jule::Slice<jule::Ptr<_1a75b31ec_Case>>(),jule::Ptr<_1a75b31ec_Case>()));
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_161717_mc));
	if ((_160243_m.get()._field_default != nullptr)) {
		_161717_mc.get()._field_default=_1a75be68c_check_default(_self_, _161717_mc,_160243_m.get()._field_default);
	}
	_1a75be2d5_check_cases(_self_, _160243_m,_161717_mc,_160317_d);
}



inline void _1a75c04a1_check_match(jule::Ptr<_1a75b3b8c_ScopeChecker> _self_,jule::Ptr<_1d0768aa5_MatchCase> _162935_m) {
	if (_162935_m.get()._field_type_match) {
		_1a75beea6_check_type_match(_self_, _162935_m);
		return;
	}
	_1a75c022b_check_common_match(_self_, _162935_m);
}



inline void _1a75c0726_check_fall(jule::Ptr<_1a75b3b8c_ScopeChecker> _self_,jule::Ptr<_1d07609ae_FallSt> _163730_f) {
	if (((_self_.get()._field_cse == 0LLU) || ((_self_.get()._field_scope.get()._field_stmts.len() + 1LL) < static_cast<jule::I64>(static_cast<jule::I64>(_self_.get()._field_scope.get()._field_stmts.len())))) || _1a75b5a6d_is_deferred(_self_)) {
		_1a75d488e_push_err(_self_.get()._field_s.ptr(), _163730_f.get()._field_token,jule::Str("fall keyword can only useable at end of the case scopes", 55),jule::Slice<jule::Any>());
		return;
	}
	_1a75b31ec_Case* _164517__case = ((_1a75b31ec_Case*)(_self_.get()._field_cse));
	if ((_164517__case->_field_next == nullptr)) {
		_1a75d488e_push_err(_self_.get()._field_s.ptr(), _163730_f.get()._field_token,jule::Str("fall cannot useable at final case", 33),jule::Slice<jule::Any>());
		_1a75d4bad_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("remove \"fall\" keyword", 21),jule::Slice<jule::Any>());
		return;
	}
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(jule::new_ptr<_1a75b33d9_FallSt>(_1a75b33d9_FallSt(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_164517__case->_field_next)))))))));
}



inline jule::Ptr<_1a758eb13_BreakSt> _1a75c0a34_check_break_with_label(jule::Ptr<_1a75b3b8c_ScopeChecker> _self_,jule::Ptr<_1d0766630_BreakSt> _165742_b) {
	jule::Ptr<_1a758eb13_BreakSt> _165817_brk = _1a75c0d42_check_plain_break(_self_, _165742_b);
	if ((_165817_brk == nullptr)) {
		return nullptr;
	}
	_165817_brk.get()._field_it=0LLU;
	_165817_brk.get()._field_mtch=0LLU;
	jule::Ptr<_1a75b37b3_ScopeLabel> _166817_label = _1a7562058_find_label_parent(_165742_b.get()._field_label.get()._field_kind,_self_.get()._field_parent);
	if ((_166817_label == nullptr)) {
		_1a75d488e_push_err(_self_.get()._field_s.ptr(), _165742_b.get()._field_label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>({jule::Any(_165742_b.get()._field_label.get()._field_kind)}));
		return nullptr;
	}
	_166817_label.get()._field_used=true;
	if ((_166817_label.get()._field_pos + 1LL) >= static_cast<jule::I64>(static_cast<jule::I64>(_166817_label.get()._field_scope.get()._field_scope.get()._field_stmts.len()))) {
		_1a75d488e_push_err(_self_.get()._field_s.ptr(), _165742_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>({jule::Any(_165742_b.get()._field_label.get()._field_kind)}));
		return nullptr;
	}
	jule::I64 _168113_i = (_166817_label.get()._field_pos + 1LL);
	if (_168113_i >= static_cast<jule::I64>(static_cast<jule::I64>(_166817_label.get()._field_scope.get()._field_scope.get()._field_stmts.len()))) {
		_1a75d488e_push_err(_self_.get()._field_s.ptr(), _165742_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>({jule::Any(_165742_b.get()._field_label.get()._field_kind)}));
	} else {
		jule::Any _168521_st = _166817_label.get()._field_scope.get()._field_scope.get()._field_stmts[_168113_i];
		{
			auto &_match_expr{ _168521_st };
			
			if (_match_expr.type_is<jule::Ptr<_1a7561893_InfIter>>()) {
				_case_begin_1a9762124:;
				{
					_165817_brk.get()._field_it=static_cast<jule::U64>(static_cast<jule::U64>(_168521_st.operator jule::Ptr<_1a7561893_InfIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1a7561c6c_RangeIter>>()) {
				_case_begin_1a9763d3a:;
				{
					_165817_brk.get()._field_it=static_cast<jule::U64>(static_cast<jule::U64>(_168521_st.operator jule::Ptr<_1a7561c6c_RangeIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1a7561a80_WhileIter>>()) {
				_case_begin_1a9763da1:;
				{
					_165817_brk.get()._field_it=static_cast<jule::U64>(static_cast<jule::U64>(_168521_st.operator jule::Ptr<_1a7561a80_WhileIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1a75b2cce_Match>>()) {
				_case_begin_1a9763e17:;
				{
					_165817_brk.get()._field_mtch=static_cast<jule::U64>(static_cast<jule::U64>(_168521_st.operator jule::Ptr<_1a75b2cce_Match>()));
				}
			}
			else {
				_case_begin_1a9763c4c:;
				{
					_1a75d488e_push_err(_self_.get()._field_s.ptr(), _165742_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>({jule::Any(_165742_b.get()._field_label.get()._field_kind)}));
				}
			}
			_match_end_1a9763be7:;
		}
	}
	if ((_165817_brk.get()._field_it != 0LLU)) {
		if ((!(_1a75baea2_check_valid_break_label(_self_, _165817_brk.get()._field_it)))) {
			_1a75d488e_push_err(_self_.get()._field_s.ptr(), _165742_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>({jule::Any(_165742_b.get()._field_label.get()._field_kind)}));
		}
	}
	if ((_165817_brk.get()._field_mtch != 0LLU)) {
		if ((!(_1a75baea2_check_valid_break_label(_self_, _165817_brk.get()._field_mtch)))) {
			_1a75d488e_push_err(_self_.get()._field_s.ptr(), _165742_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>({jule::Any(_165742_b.get()._field_label.get()._field_kind)}));
		}
	}
	return _165817_brk;
}



inline jule::Ptr<_1a758eb13_BreakSt> _1a75c0d42_check_plain_break(jule::Ptr<_1a75b3b8c_ScopeChecker> _self_,jule::Ptr<_1d0766630_BreakSt> _171537_b) {
	if (_1a75b5a6d_is_deferred(_self_)) {
		_1a75d488e_push_err(_self_.get()._field_s.ptr(), _171537_b.get()._field_token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1a75b3b8c_ScopeChecker> _172117_scope = _self_;
	_julec_label_iter:;
	{
		
		if ((((_172117_scope.get()._field_it == 0LLU) && (_172117_scope.get()._field_cse == 0LLU)) && (_172117_scope.get()._field_parent != nullptr)) && (_172117_scope.get()._field_owner == nullptr)) {
			_case_begin_1a976a913:;
			{
				_172117_scope=_172117_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_172117_scope.get()._field_it != 0LLU)) {
			_case_begin_1a976a98a:;
			{
				return jule::new_ptr<_1a758eb13_BreakSt>(_1a758eb13_BreakSt(_172117_scope.get()._field_it,jule::U64()));
			}
		}
		else if ((_172117_scope.get()._field_cse != 0LLU)) {
			_case_begin_1a976aa12:;
			{
				return jule::new_ptr<_1a758eb13_BreakSt>(_1a758eb13_BreakSt(jule::U64(),static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(((_1a75b31ec_Case*)(_172117_scope.get()._field_cse))->_field_owner)))))));
			}
		}
		_match_end_1a976a836:;
	}
	_1a75d488e_push_err(_self_.get()._field_s.ptr(), _171537_b.get()._field_token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
	return nullptr;
}



inline void _1a75c10b7_check_break(jule::Ptr<_1a75b3b8c_ScopeChecker> _self_,jule::Ptr<_1d0766630_BreakSt> _173731_b) {
	if ((_173731_b.get()._field_label != nullptr)) {
		jule::Ptr<_1a758eb13_BreakSt> _173921_brk = _1a75c0a34_check_break_with_label(_self_, _173731_b);
		_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_173921_brk));
		return;
	}
	jule::Ptr<_1a758eb13_BreakSt> _174417_brk = _1a75c0d42_check_plain_break(_self_, _173731_b);
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_174417_brk));
}



inline void _1a75c133c_check_ret(jule::Ptr<_1a75b3b8c_ScopeChecker> _self_,jule::Ptr<_1d0764a90_RetSt> _174833_r) {
	if (_1a75b5a6d_is_deferred(_self_)) {
		_1a75d488e_push_err(_self_.get()._field_s.ptr(), _174833_r.get()._field_token,jule::Str("deferred scopes are not supports return statements", 50),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a75b35c6_RetSt> _175317_rt = jule::new_ptr<_1a75b35c6_RetSt>(_1a75b35c6_RetSt(_1a75b5cd2_get_root(_self_).get()._field_owner,jule::Slice<jule::Ptr<_1a75ec478_Var>>(),jule::Any()));
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_175317_rt));
	jule::Ptr<_1a7641d08_RetTypeChecker> _175817_rtc = jule::new_ptr<_1a7641d08_RetTypeChecker>(_1a7641d08_RetTypeChecker(_self_,_175317_rt.get()._field_func,jule::Slice<jule::Ptr<_1a7672da0_TypeKind>>(),jule::Slice<jule::Ptr<_1d075b14c_Expr>>(),jule::Slice<jule::Ptr<_1a75ec478_Var>>(),_174833_r.get()._field_token,jule::Any()));
	jule::Bool _176313_ok = _1a7642be9_check(_175817_rtc.ptr(), _174833_r.get()._field_expr);
	if ((!(_176313_ok))) {
		return;
	}
	if ((_174833_r.get()._field_expr == nullptr) && (_175817_rtc.get()._field_vars.len() == 0LL)) {
		return;
	}
	_175317_rt.get()._field_vars=_175817_rtc.get()._field_vars;
	if ((_174833_r.get()._field_expr != nullptr)) {
		_175317_rt.get()._field_expr=_175817_rtc.get()._field_model;
	}
}



inline void _1a75c15b2_check_use_expr(jule::Ptr<_1a75b3b8c_ScopeChecker> _self_,jule::Ptr<_1d075b339_UseExpr> _177934_ue) {
	if ((_self_.get()._field_result == nullptr)) {
		_1a75d488e_push_err(_self_.get()._field_s.ptr(), _177934_ue.get()._field_token,jule::Str("use expressions cannot useable out of exceptional handler scopes", 64),jule::Slice<jule::Any>());
		return;
	}
	if (_1a75b5a6d_is_deferred(_self_)) {
		_1a75d488e_push_err(_self_.get()._field_s.ptr(), _177934_ue.get()._field_token,jule::Str("use expressions cannot useable in deferred scopes", 49),jule::Slice<jule::Any>());
	}
	if ((_self_.get()._field_i + 1LL) < static_cast<jule::I64>(static_cast<jule::I64>(_self_.get()._field_tree.get()._field_stmts.len()))) {
		_1a75d488e_push_err(_self_.get()._field_s.ptr(), _177934_ue.get()._field_token,jule::Str("use expressions must be last statement of scope", 47),jule::Slice<jule::Any>());
	}
}



inline void _1a75c1837_check_node(jule::Ptr<_1a75b3b8c_ScopeChecker> _self_,jule::Any& _179535_node) {
	{
		auto &_match_expr{ _179535_node };
		
		if (_match_expr.type_is<jule::Ptr<_1d0761c13_ScopeTree>>()) {
			_case_begin_1a977ae0c:;
			{
				_1a75b8389_check_anon_scope(_self_, _179535_node.operator jule::Ptr<_1d0761c13_ScopeTree>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d07646d8_VarDecl>>()) {
			_case_begin_1a977b10a:;
			{
				_1a75b709c_check_var_decl(_self_, _179535_node.operator jule::Ptr<_1d07646d8_VarDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d0767e5b_TypeAliasDecl>>()) {
			_case_begin_1a977a9bc:;
			{
				_1a75b7322_check_type_alias_decl(_self_, _179535_node.operator jule::Ptr<_1d0767e5b_TypeAliasDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d075b14c_Expr>>()) {
			_case_begin_1a977b061:;
			{
				_1a75b892d_check_expr(_self_, _179535_node.operator jule::Ptr<_1d075b14c_Expr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d075bd1d_CoExpr>>()) {
			_case_begin_1a977b292:;
			{
				_1a75b8ba3_check_co_expr(_self_, _179535_node.operator jule::Ptr<_1d075bd1d_CoExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d0767785_Conditional>>()) {
			_case_begin_1a977b429:;
			{
				_1a75b9544_check_conditional(_self_, _179535_node.operator jule::Ptr<_1d0767785_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d0765112_Iter>>()) {
			_case_begin_1a977b490:;
			{
				_1a75ba842_check_iter(_self_, _179535_node.operator jule::Ptr<_1d0765112_Iter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d07669d7_ContSt>>()) {
			_case_begin_1a977b506:;
			{
				_1a75bb524_check_cont(_self_, _179535_node.operator jule::Ptr<_1d07669d7_ContSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d076031b_LabelSt>>()) {
			_case_begin_1a977b56c:;
			{
				_1a75bb799_check_label(_self_, _179535_node.operator jule::Ptr<_1d076031b_LabelSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d07606c3_GotoSt>>()) {
			_case_begin_1a977b5d3:;
			{
				_1a75bba1e_push_goto(_self_, _179535_node.operator jule::Ptr<_1d07606c3_GotoSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d0761608_AssignSt>>()) {
			_case_begin_1a977b649:;
			{
				_1a75bd56a_check_assign_st(_self_, _179535_node.operator jule::Ptr<_1d0761608_AssignSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d0768aa5_MatchCase>>()) {
			_case_begin_1a977b6b0:;
			{
				_1a75c04a1_check_match(_self_, _179535_node.operator jule::Ptr<_1d0768aa5_MatchCase>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d07609ae_FallSt>>()) {
			_case_begin_1a977b726:;
			{
				_1a75c0726_check_fall(_self_, _179535_node.operator jule::Ptr<_1d07609ae_FallSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d0766630_BreakSt>>()) {
			_case_begin_1a977b78c:;
			{
				_1a75c10b7_check_break(_self_, _179535_node.operator jule::Ptr<_1d0766630_BreakSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d0764a90_RetSt>>()) {
			_case_begin_1a977b803:;
			{
				_1a75c133c_check_ret(_self_, _179535_node.operator jule::Ptr<_1d0764a90_RetSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d075b339_UseExpr>>()) {
			_case_begin_1a977b869:;
			{
				_1a75c15b2_check_use_expr(_self_, _179535_node.operator jule::Ptr<_1d075b339_UseExpr>());
			}
		}
		else {
			_case_begin_1a977ab76:;
			{
				jule::outln(jule::Str("error <unimplemented scope node>", 32));
			}
		}
		_match_end_1a977aa55:;
	}
}



inline void _1a75c1a13_check_result(jule::Ptr<_1a75b3b8c_ScopeChecker> _self_) {
	_1d06c9ce1_Node _183517_stmt = _self_.get()._field_tree.get()._field_stmts[(_self_.get()._field_tree.get()._field_stmts.len() - 1LL)];
	{
		auto &_match_expr{ _183517_stmt._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1d075b339_UseExpr>>()) {
			_case_begin_1a9785884:;
			{
				jule::Ptr<_1d075b339_UseExpr> _183821_ue = _183517_stmt._field_data.operator jule::Ptr<_1d075b339_UseExpr>();
				jule::Ptr<_1a7648b67_Data> _183921_d = _1a7664d92_eval_expr(_1a75d95ec_eval(_self_.get()._field_s, jule::Trait<_1a768b25e_Lookup>(_self_, 0)), _183821_ue.get()._field_expr);
				if ((_183921_d == nullptr)) {
					return;
				}
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_183921_d));
				jule::Ptr<_1a7641d08_RetTypeChecker> _184421_rtc = jule::new_ptr<_1a7641d08_RetTypeChecker>(_1a7641d08_RetTypeChecker(_self_,jule::Ptr<_1a6429be1_FnIns>(),_1a642a708_types(_self_.get()._field_result.ptr()),jule::Slice<jule::Ptr<_1d075b14c_Expr>>(),jule::Slice<jule::Ptr<_1a75ec478_Var>>(),_183821_ue.get()._field_expr.get()._field_token,jule::Any()));
				_1a7642be9_check(_184421_rtc.ptr(), _183821_ue.get()._field_expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d075b14c_Expr>>()) {
			_case_begin_1a9786ea1:;
			{
				jule::Ptr<_1d075b14c_Expr> _185121_expr = _183517_stmt._field_data.operator jule::Ptr<_1d075b14c_Expr>();
				jule::Ptr<_1a7648b67_Data> _185221_d = _1a7664d92_eval_expr(_1a75d95ec_eval(_self_.get()._field_s, jule::Trait<_1a768b25e_Lookup>(_self_, 0)), _185121_expr);
				if ((_185221_d == nullptr)) {
					return;
				}
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_185221_d));
				{
					auto &_match_expr{ _185221_d.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1a6422722_BuiltinErrorCallExprModel>>()) {
						_case_begin_1a978b48e:;
						{
							jule::Ptr<_1a6422722_BuiltinErrorCallExprModel> _185925_m = _185221_d.get()._field_model.operator jule::Ptr<_1a6422722_BuiltinErrorCallExprModel>();
							_1a75b86a8_process_error_call(_self_, _185925_m,_185121_expr.get()._field_token);
						}
					}
					else {
						_case_begin_1a978b857:;
						{
							return;
						}
					}
					_match_end_1a978b802:;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d07606c3_GotoSt>>() || _match_expr.type_is<jule::Ptr<_1d0766630_BreakSt>>() || _match_expr.type_is<jule::Ptr<_1d07669d7_ContSt>>() || _match_expr.type_is<jule::Ptr<_1d0764a90_RetSt>>()) {
			_case_begin_1a9787017:;
			{
				_1a75c1837_check_node(_self_, _183517_stmt._field_data);
			}
		}
		else {
			_case_begin_1a9786577:;
			{
				_1a75c1837_check_node(_self_, _183517_stmt._field_data);
				return;
			}
		}
		_match_end_1a9786500:;
	}
	_self_.get()._field_result=nullptr;
}



inline void _1a75c1bde_check_tree(jule::Ptr<_1a75b3b8c_ScopeChecker> _self_) {
	_self_.get()._field_i=0LL;
	for (; _self_.get()._field_i < static_cast<jule::I64>(static_cast<jule::I64>(_self_.get()._field_tree.get()._field_stmts.len())); (_self_.get()._field_i)++) {
		{
			_1d06c9ce1_Node _188121_stmt = _self_.get()._field_tree.get()._field_stmts[_self_.get()._field_i];
			_1a75c1837_check_node(_self_, _188121_stmt._field_data);
			if (_1a75b5809_stopped(_self_.ptr())) {
				return;
			}
		}
	_iter_next_1a978e085:;
	}
	_iter_end_1a978e085:;
	if ((_self_.get()._field_result != nullptr) && (_self_.get()._field_tree.get()._field_stmts.len() != 0LL)) {
		_1a75c1a13_check_result(_self_);
	}
}



inline void _1a75c200d_check_goto(_1a75b3b8c_ScopeChecker* _self_,jule::Ptr<_1a75b39a0_ScopeGoto>& _189234_gt,jule::Ptr<_1a75b37b3_ScopeLabel>& _189255_label) {
	jule::Ptr<_1a75b3b8c_ScopeChecker> _189317_gtsc = _189234_gt.get()._field_scope;
	while ((_189317_gtsc.get()._field_child_index - 1LL) > _189255_label.get()._field_scope.get()._field_child_index) {
		{
			_189317_gtsc=_189317_gtsc.get()._field_parent;
		}
	_iter_next_1a979286e:;
	}
	_iter_end_1a979286e:;
	jule::I64 _189817_n = 0LL;
	if (_189317_gtsc.get()._field_scope == _189255_label.get()._field_scope.get()._field_scope) {
		if (_189234_gt.get()._field_pos > _189255_label.get()._field_pos) {
			return;
		}
		_189817_n=_189234_gt.get()._field_pos;
	}
	jule::I64 _191117_i = (_189255_label.get()._field_pos - 1LL);
	if ((_189817_n == 0LL)) {
		{
			auto &expr = _189255_label.get()._field_scope.get()._field_scope.get()._field_stmts;
			auto it = expr.begin();
			_iter_begin_1a97950ad:;
			if (it != expr.end()) {
				jule::I64 _1a97952bc_j = it - expr.begin();
				jule::Any _1a9795476_stmt = *it;
				{
					if (_1a757ccaa_stmt_is_goto_scope(_1a9795476_stmt,_189317_gtsc.get()._field_scope)) {
						_189817_n=_1a97952bc_j;
						goto _iter_end_1a97950ad;
					}
				}
				_iter_next_1a97950ad:;
				++it;
				_1a97952bc_j++;
				goto _iter_begin_1a97950ad;
			}
			_iter_end_1a97950ad:;
		}
	}
	for (; _191117_i >= _189817_n; (_191117_i)--) {
		{
			jule::Any _192421_stmt = _189255_label.get()._field_scope.get()._field_scope.get()._field_stmts[_191117_i];
			if (_1a758c5a0_st_is_def(_192421_stmt)) {
				_1a75d488e_push_err((*_self_)._field_s.ptr(), _189234_gt.get()._field_gt.get()._field_token,jule::Str("goto @ jumps over declaration(s)", 32),jule::Slice<jule::Any>({jule::Any(_189234_gt.get()._field_gt.get()._field_label.get()._field_kind)}));
				return;
			}
		}
	_iter_next_1a9794ab3:;
	}
	_iter_end_1a9794ab3:;
}



inline void _1a75c21d9_check_gotos(_1a75b3b8c_ScopeChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_gotos));
		auto it = expr.begin();
		_iter_begin_1a9798138:;
		if (it != expr.end()) {
			jule::Ptr<_1a75b39a0_ScopeGoto> _1a9798248_gt = *it;
			{
				jule::Ptr<_1a75b37b3_ScopeLabel> _193421_label = _1a75b6970_find_label_all(&(*_self_), _1a9798248_gt.get()._field_gt.get()._field_label.get()._field_kind);
				if ((_193421_label == nullptr)) {
					_1a75d488e_push_err((*_self_)._field_s.ptr(), _1a9798248_gt.get()._field_gt.get()._field_token,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>({jule::Any(_1a9798248_gt.get()._field_gt.get()._field_label.get()._field_kind)}));
					goto _iter_next_1a9798138;
				}
				_193421_label.get()._field_used=true;
				_1a75c200d_check_goto(&(*_self_), _1a9798248_gt,_193421_label);
			}
			_iter_next_1a9798138:;
			++it;
			goto _iter_begin_1a9798138;
		}
		_iter_end_1a9798138:;
	}
}



inline void _1a75c23b5_check_labels(_1a75b3b8c_ScopeChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_labels));
		auto it = expr.begin();
		_iter_begin_1a979acd9:;
		if (it != expr.end()) {
			jule::Ptr<_1a75b37b3_ScopeLabel> _1a979ade9_l = *it;
			{
				if ((!(_1a979ade9_l.get()._field_used))) {
					_1a75d488e_push_err((*_self_)._field_s.ptr(), _1a979ade9_l.get()._field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>({jule::Any(_1a979ade9_l.get()._field_label.get()._field_ident)}));
				}
			}
			_iter_next_1a979acd9:;
			++it;
			goto _iter_begin_1a979acd9;
		}
		_iter_end_1a979acd9:;
	}
}



inline void _1a75c2591_check_vars(_1a75b3b8c_ScopeChecker* _self_) {
	{
		auto &expr = (*_self_)._field_table.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1a979c736:;
		if (it != expr.end()) {
			jule::Ptr<_1a75ec478_Var> _1a979c813_v = *it;
			{
				if ((((!(_1a979c813_v.get()._field_used)) && (!(_1d074a1d5_is_ignore_ident(_1a979c813_v.get()._field_ident)))) && (!(_1d074a47c_is_anon_ident(_1a979c813_v.get()._field_ident)))) && (_1a979c813_v.get()._field_ident != jule::Str("self", 4))) {
					_1a75d488e_push_err((*_self_)._field_s.ptr(), _1a979c813_v.get()._field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>({jule::Any(_1a979c813_v.get()._field_ident)}));
				}
			}
			_iter_next_1a979c736:;
			++it;
			goto _iter_begin_1a979c736;
		}
		_iter_end_1a979c736:;
	}
}



inline void _1a75c276c_check_aliases(_1a75b3b8c_ScopeChecker* _self_) {
	{
		auto &expr = (*_self_)._field_table.get()._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_1a979eccc:;
		if (it != expr.end()) {
			jule::Ptr<_1a7672168_TypeAlias> _1a979eda9_a = *it;
			{
				if (((!(_1a979eda9_a.get()._field_used)) && (!(_1d074a1d5_is_ignore_ident(_1a979eda9_a.get()._field_ident)))) && (!(_1d074a47c_is_anon_ident(_1a979eda9_a.get()._field_ident)))) {
					_1a75d488e_push_err((*_self_)._field_s.ptr(), _1a979eda9_a.get()._field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>({jule::Any(_1a979eda9_a.get()._field_ident)}));
				}
			}
			_iter_next_1a979eccc:;
			++it;
			goto _iter_begin_1a979eccc;
		}
		_iter_end_1a979eccc:;
	}
}



inline void _1a75c2a8b_check(jule::Ptr<_1a75b3b8c_ScopeChecker> _self_,jule::Ptr<_1d0761c13_ScopeTree>& _197030_tree,jule::Ptr<_1a759e606_Scope>& _197053_s) {
	_197053_s.get()._field_deferred=_197030_tree.get()._field_deferred;
	_197053_s.get()._field_unsafety=_197030_tree.get()._field_unsafety;
	jule::I64 _197413_errors = _self_.get()._field_s.get()._field_errors.len();
	_self_.get()._field_tree=_197030_tree;
	_self_.get()._field_scope=_197053_s;
	_1a75c1bde_check_tree(_self_);
	if (_197413_errors == static_cast<jule::I64>(static_cast<jule::I64>(_self_.get()._field_s.get()._field_errors.len()))) {
		_1a75c2591_check_vars(_self_.ptr());
		_1a75c276c_check_aliases(_self_.ptr());
		if (_1a75b53b9_is_root(_self_.ptr())) {
			_1a75c21d9_check_gotos(_self_.ptr());
			_1a75c23b5_check_labels(_self_.ptr());
		}
	}
}



inline jule::Ptr<_1a75b3b8c_ScopeChecker> _1a75c2d00_new_child_checker(jule::Ptr<_1a75b3b8c_ScopeChecker> _self_) {
	jule::Ptr<_1a75b3b8c_ScopeChecker> _199417_base = _1a7537c76_new_scope_checker_base(_self_.get()._field_s,nullptr);
	_199417_base.get()._field_parent=_self_;
	_199417_base.get()._field_labels=_self_.get()._field_labels;
	_199417_base.get()._field_gotos=_self_.get()._field_gotos;
	_199417_base.get()._field_child_index=static_cast<jule::I64>((_self_.get()._field_child_index + 1LL));
	return _199417_base;
}







std::ostream &operator<<(std::ostream &_Stream, _1a75b3b8c_ScopeChecker _Src) {
	_Stream << "ScopeChecker{";
	_Stream << "called_from:" << _Src._field_called_from << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "child_index:" << _Src._field_child_index << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _1a75c3d9a_check_cdef(_1a75c395a_DirectiveChecker* _self_,jule::Ptr<_1d06c9ecd_Directive>& _1630_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1a6426a45_Fn>>()) {
			_case_begin_1a97a6cb2:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1a6426a45_Fn>().get()._field_cpp_linked) {
					goto _match_end_1a97a6d4a;
				}
				goto _case_begin_1a97a7048;
			}
		}
		else {
			_case_begin_1a97a7048:;
			{
				_1a75d488e_push_err((*_self_)._field_s.ptr(), _1630_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_1630_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1a97a6d4a:;
	}
	if ((_1630_d.get()._field_args.len() > 0LL)) {
		_1a75d488e_push_err((*_self_)._field_s.ptr(), _1630_d.get()._field_args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
}



inline void _1a75c4120_check_typedef(_1a75c395a_DirectiveChecker* _self_,jule::Ptr<_1d06c9ecd_Directive>& _3233_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1a64147be_Struct>>()) {
			_case_begin_1a97aa744:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1a64147be_Struct>().get()._field_cpp_linked) {
					goto _match_end_1a97aa0b2;
				}
				goto _case_begin_1a97aa2b0;
			}
		}
		else {
			_case_begin_1a97aa2b0:;
			{
				_1a75d488e_push_err((*_self_)._field_s.ptr(), _3233_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_3233_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1a97aa0b2:;
	}
	if ((_3233_d.get()._field_args.len() > 0LL)) {
		_1a75d488e_push_err((*_self_)._field_s.ptr(), _3233_d.get()._field_args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
}



inline void _1a75c4395_check_derive(_1a75c395a_DirectiveChecker* _self_,jule::Ptr<_1d06c9ecd_Directive>& _4832_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1a64147be_Struct>>()) {
			_case_begin_1a97ad04e:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1a64147be_Struct>().get()._field_cpp_linked))) {
					goto _match_end_1a97ad0d7;
				}
				goto _case_begin_1a97ad2d5;
			}
		}
		else {
			_case_begin_1a97ad2d5:;
			{
				_1a75d488e_push_err((*_self_)._field_s.ptr(), _4832_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>());
			}
		}
		_match_end_1a97ad0d7:;
	}
	if ((_4832_d.get()._field_args.len() == 0LL)) {
		_1a75d488e_push_err((*_self_)._field_s.ptr(), _4832_d.get()._field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		_1a75d4bad_push_suggestion((*_self_)._field_s.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;
	} else if ((_4832_d.get()._field_args.len() > 1LL)) {
		_1a75d488e_push_err((*_self_)._field_s.ptr(), _4832_d.get()._field_args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	{
		auto &_match_expr{ _4832_d.get()._field_args[0LL].get()._field_kind };
		
		if (_match_expr == jule::Str("Clone", 5)) {
			_case_begin_1a97b2509:;
		}
		else {
			_case_begin_1a97b098b:;
			{
				_1a75d488e_push_err((*_self_)._field_s.ptr(), _4832_d.get()._field_args[0LL],jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>({jule::Any(_4832_d.get()._field_args[0LL].get()._field_kind)}));
			}
		}
		_match_end_1a97b1ea9:;
	}
}



inline void _1a75c461a_check_namespace(_1a75c395a_DirectiveChecker* _self_,jule::Ptr<_1d06c9ecd_Directive>& _7439_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1a64147be_Struct>>()) {
			_case_begin_1a97b3b48:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1a64147be_Struct>().get()._field_cpp_linked))) {
					_1a75d488e_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_7439_d.get()._field_tag.get()._field_kind)}));
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6426a45_Fn>>()) {
			_case_begin_1a97b4011:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1a6426a45_Fn>().get()._field_cpp_linked))) {
					_1a75d488e_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_7439_d.get()._field_tag.get()._field_kind)}));
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a75ec478_Var>>()) {
			_case_begin_1a97b4077:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1a75ec478_Var>().get()._field_cpp_linked))) {
					_1a75d488e_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_7439_d.get()._field_tag.get()._field_kind)}));
				}
			}
		}
		else {
			_case_begin_1a97b3dce:;
			{
				_1a75d488e_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_7439_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1a97b3bd1:;
	}
	if ((_7439_d.get()._field_args.len() == 0LL)) {
		_1a75d488e_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;
	} else if ((_7439_d.get()._field_args.len() > 1LL)) {
		_1a75d488e_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1d0747985_Token> _9913_arg = _7439_d.get()._field_args[0LL];
	if (_9913_arg.get()._field_id != static_cast<jule::U64>(6LLU)) {
		_1a75d488e_push_err((*_self_)._field_s.ptr(), _9913_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	if (_9913_arg.get()._field_kind[0LL] != '\"') {
		_1a75d488e_push_err((*_self_)._field_s.ptr(), _9913_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	_7439_d.get()._field_args[0LL].get()._field_kind=_9913_arg.get()._field_kind.slice(1LL,(_9913_arg.get()._field_kind.len() - 1LL));
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1a64147be_Struct>>()) {
			_case_begin_1a97c333e:;
			{
				if ((_1a766cb36_find_directive((*((*_self_)._field_d)),jule::Str("typedef", 7)) == nullptr)) {
					jule::Ptr<_1d06c9ecd_Directive> _11625_typedef = jule::new_ptr<_1d06c9ecd_Directive>(_1d06c9ecd_Directive(_7439_d.get()._field_tag,jule::Slice<jule::Ptr<_1d0747985_Token>>()));
					_11625_typedef.get()._field_tag.get()._field_kind=jule::Str("typedef", 7);
					(*((*_self_)._field_d))=jule::append((*((*_self_)._field_d)),jule::Slice<jule::Ptr<_1d06c9ecd_Directive>>({_11625_typedef}));
				}
			}
		}
		_match_end_1a97c32d9:;
	}
}



inline void _1a75c4890_check_deprecated(_1a75c395a_DirectiveChecker* _self_,jule::Ptr<_1d06c9ecd_Directive>& _12540_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1a64147be_Struct>>()) {
			_case_begin_1a97b20db:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1a64147be_Struct>().get()._field_cpp_linked) {
					_1a75d488e_push_err((*_self_)._field_s.ptr(), _12540_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_12540_d.get()._field_tag.get()._field_kind)}));
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6426a45_Fn>>()) {
			_case_begin_1a97c5a7d:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1a6426a45_Fn>().get()._field_cpp_linked) {
					_1a75d488e_push_err((*_self_)._field_s.ptr(), _12540_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_12540_d.get()._field_tag.get()._field_kind)}));
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a75ec478_Var>>()) {
			_case_begin_1a97c5ae4:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1a75ec478_Var>().get()._field_cpp_linked) {
					_1a75d488e_push_err((*_self_)._field_s.ptr(), _12540_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_12540_d.get()._field_tag.get()._field_kind)}));
				}
			}
		}
		else {
			_case_begin_1a97c59a1:;
			{
				_1a75d488e_push_err((*_self_)._field_s.ptr(), _12540_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_12540_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1a97c594b:;
	}
	if ((_12540_d.get()._field_args.len() == 0LL)) {
		return;
	}
	if ((_12540_d.get()._field_args.len() > 1LL)) {
		_1a75d488e_push_err((*_self_)._field_s.ptr(), _12540_d.get()._field_args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1d0747985_Token> _15013_arg = _12540_d.get()._field_args[0LL];
	if (_15013_arg.get()._field_id != static_cast<jule::U64>(6LLU)) {
		_1a75d488e_push_err((*_self_)._field_s.ptr(), _15013_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	if (_15013_arg.get()._field_kind[0LL] != '\"') {
		_1a75d488e_push_err((*_self_)._field_s.ptr(), _15013_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	_12540_d.get()._field_args[0LL].get()._field_kind=_15013_arg.get()._field_kind.slice(1LL,(_15013_arg.get()._field_kind.len() - 1LL));
}



inline void _1a75c4b15_check_test(_1a75c395a_DirectiveChecker* _self_,jule::Ptr<_1d06c9ecd_Directive>& _16430_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1a6426a45_Fn>>()) {
			_case_begin_1a97d0318:;
			{
				jule::Ptr<_1a6426a45_Fn> _16717_f = (*_self_)._field_o.operator jule::Ptr<_1a6426a45_Fn>();
				if (((!(_16717_f.get()._field_cpp_linked)) && (!(_1a64276d3_is_init(_16717_f.ptr())))) && (!(_1a642746e_is_entry_point(_16717_f.ptr())))) {
					goto _match_end_1a97ceb86;
				}
				if (_1a642720a_is_method(_16717_f.ptr())) {
					_1a75d488e_push_err((*_self_)._field_s.ptr(), _16717_f.get()._field_token,jule::Str("you cannot declare test methods", 31),jule::Slice<jule::Any>());
					goto _match_end_1a97ceb86;
				}
				goto _case_begin_1a97ced84;
			}
		}
		else {
			_case_begin_1a97ced84:;
			{
				_1a75d488e_push_err((*_self_)._field_s.ptr(), _16430_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_16430_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1a97ceb86:;
	}
	if ((_16430_d.get()._field_args.len() > 0LL)) {
		_1a75d488e_push_err((*_self_)._field_s.ptr(), _16430_d.get()._field_args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
}



inline void _1a75c4d8a_check_directive(_1a75c395a_DirectiveChecker* _self_,jule::Ptr<_1d06c9ecd_Directive>& _18539_d) {
	{
		auto &_match_expr{ _18539_d.get()._field_tag.get()._field_kind };
		
		if (_match_expr == jule::Str("cdef", 4)) {
			_case_begin_1a97d4dab:;
			{
				_1a75c3d9a_check_cdef(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("typedef", 7)) {
			_case_begin_1a97d477e:;
			{
				_1a75c4120_check_typedef(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("derive", 6)) {
			_case_begin_1a97d47e5:;
			{
				_1a75c4395_check_derive(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("namespace", 9)) {
			_case_begin_1a97d485b:;
			{
				_1a75c461a_check_namespace(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("deprecated", 10)) {
			_case_begin_1a97d48c2:;
			{
				_1a75c4890_check_deprecated(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("test", 4)) {
			_case_begin_1a97d576e:;
			{
				_1a75c4b15_check_test(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("build", 5) || _match_expr == jule::Str("pass", 4)) {
			_case_begin_1a97d57d5:;
			{
				_1a75d488e_push_err((*_self_)._field_s.ptr(), _18539_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_18539_d.get()._field_tag.get()._field_kind)}));
			}
		}
		else {
			_case_begin_1a97d43c7:;
			{
				_1a75d488e_push_err((*_self_)._field_s.ptr(), _18539_d.get()._field_tag,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>({jule::Any(_18539_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1a97d4729:;
	}
}



inline void _1a75c5066_check(_1a75c395a_DirectiveChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_d));
		auto it = expr.begin();
		_iter_begin_1a97d96a7:;
		if (it != expr.end()) {
			jule::Ptr<_1d06c9ecd_Directive> _1a97d97b7_d = *it;
			{
				_1a75c4d8a_check_directive(&(*_self_), _1a97d97b7_d);
			}
			_iter_next_1a97d96a7:;
			++it;
			goto _iter_begin_1a97d96a7;
		}
		_iter_end_1a97d96a7:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, _1a75c395a_DirectiveChecker _Src) {
	_Stream << "DirectiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a75c928a_ImportInfo> _1a75c9796_find_package(_1a75c928a_ImportInfo* _self_,jule::Str ) {
	return nullptr;
}



inline jule::Ptr<_1a75c928a_ImportInfo> _1a75c9aa4_select_package(_1a75c928a_ImportInfo* _self_,jule::Fn<jule::Bool(jule::Ptr<_1a75c928a_ImportInfo>)> ) {
	return nullptr;
}



inline jule::Ptr<_1a75ec478_Var> _1a75c9e5b_find_var(_1a75c928a_ImportInfo* _self_,jule::Str _16931_ident,jule::Bool _16943_cpp_linked) {
	if ((!(_1a75cb5ab_is_lookupable(&(*_self_), _16931_ident)))) {
		return nullptr;
	}
	return _1a75c72aa_find_var_in_package((*_self_)._field_package.get()._field_files,_16931_ident,false);
}



inline jule::Ptr<_1a7672168_TypeAlias> _1a75ca313_find_type_alias(_1a75c928a_ImportInfo* _self_,jule::Str _18238_ident,jule::Bool _18250_cpp_linked) {
	if ((!(_1a75cb5ab_is_lookupable(&(*_self_), _18238_ident)))) {
		return nullptr;
	}
	return _1a75c772d_find_type_alias_in_package((*_self_)._field_package.get()._field_files,_18238_ident,false);
}



inline jule::Ptr<_1a64147be_Struct> _1a75ca6ba_find_struct(_1a75c928a_ImportInfo* _self_,jule::Str _19534_ident,jule::Bool _19546_cpp_linked) {
	if ((!(_1a75cb5ab_is_lookupable(&(*_self_), _19534_ident)))) {
		return nullptr;
	}
	return _1a75c7b07_find_struct_in_package((*_self_)._field_package.get()._field_files,_19534_ident,false);
}



inline jule::Ptr<_1a6426a45_Fn> _1a75caa72_find_fn(_1a75c928a_ImportInfo* _self_,jule::Str _20830_ident,jule::Bool _20842_cpp_linked) {
	if ((!(_1a75cb5ab_is_lookupable(&(*_self_), _20830_ident)))) {
		return nullptr;
	}
	return _1a75c8036_find_fn_in_package((*_self_)._field_package.get()._field_files,_20830_ident,false);
}



inline jule::Ptr<_1a7465bd7_Trait> _1a75cad80_find_trait(_1a75c928a_ImportInfo* _self_,jule::Str _22033_ident) {
	if ((!(_1a75cb5ab_is_lookupable(&(*_self_), _22033_ident)))) {
		return nullptr;
	}
	return _1a75c8377_find_trait_in_package((*_self_)._field_package.get()._field_files,_22033_ident);
}



inline jule::Ptr<_1a7467de8_Enum> _1a75cb18d_find_enum(_1a75c928a_ImportInfo* _self_,jule::Str _23232_ident) {
	if ((!(_1a75cb5ab_is_lookupable(&(*_self_), _23232_ident)))) {
		return nullptr;
	}
	return _1a75c86b8_find_enum_in_package((*_self_)._field_package.get()._field_files,_23232_ident);
}



inline jule::Bool _1a75cb5ab_is_lookupable(_1a75c928a_ImportInfo* _self_,jule::Str _24228_ident) {
	if ((*_self_)._field_cpp_linked) {
		return false;
	}
	if ((!((*_self_)._field_import_all))) {
		if (((*_self_)._field_alias.len() != 0LL) || _1a75cb8b9_exist_ident(&(*_self_), jule::Str("self", 4))) {
			return true;
		}
		if (((*_self_)._field_selected.len() > 0LL)) {
			if ((!(_1a75cb8b9_exist_ident(&(*_self_), _24228_ident)))) {
				return false;
			}
		}
	}
	return true;
}



inline jule::Bool _1a75cb8b9_exist_ident(_1a75c928a_ImportInfo* _self_,jule::Str _26226_ident) {
	{
		auto &expr = (*_self_)._field_selected;
		auto it = expr.begin();
		_iter_begin_1a97e78e6:;
		if (it != expr.end()) {
			jule::Ptr<_1d0747985_Token> &_1a97e7ae4_sident = *it;
			{
				if (_1a97e7ae4_sident.get()._field_kind == _26226_ident) {
					return true;
				}
			}
			_iter_next_1a97e78e6:;
			++it;
			goto _iter_begin_1a97e78e6;
		}
		_iter_end_1a97e78e6:;
	}
	return false;
}



inline jule::Bool _1a75cbb72_is_accessible_via_selection(_1a75c928a_ImportInfo* _self_) {
	return ((*_self_)._field_import_all || ((*_self_)._field_selected.len() == 0LL)) || _1a75cb8b9_exist_ident(&(*_self_), jule::Str("self", 4));
}







std::ostream &operator<<(std::ostream &_Stream, _1a75c928a_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "link_path:" << _Src._field_link_path << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "alias:" << _Src._field_alias << ", ";
	_Stream << "duplicate:" << _Src._field_duplicate << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "std:" << _Src._field_std << ", ";
	_Stream << "import_all:" << _Src._field_import_all << ", ";
	_Stream << "selected:" << _Src._field_selected << ", ";
	_Stream << "package:" << _Src._field_package << ", ";
	_Stream << "mod_id:" << _Src._field_mod_id;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a75c928a_ImportInfo> _1a75cc414_find_package(_1a75cbe4c_Package* _self_,jule::Str ) {
	return nullptr;
}



inline jule::Ptr<_1a75c928a_ImportInfo> _1a75cc722_select_package(_1a75cbe4c_Package* _self_,jule::Fn<jule::Bool(jule::Ptr<_1a75c928a_ImportInfo>)> ) {
	return nullptr;
}



inline jule::Ptr<_1a75ec478_Var> _1a75ccac9_find_var(_1a75cbe4c_Package* _self_,jule::Str _29231_ident,jule::Bool _29243_cpp_linked) {
	return _1a75c72aa_find_var_in_package((*_self_)._field_files,_29231_ident,_29243_cpp_linked);
}



inline jule::Ptr<_1a7672168_TypeAlias> _1a75cce81_find_type_alias(_1a75cbe4c_Package* _self_,jule::Str _29838_ident,jule::Bool _29850_cpp_linked) {
	return _1a75c772d_find_type_alias_in_package((*_self_)._field_files,_29838_ident,_29850_cpp_linked);
}



inline jule::Ptr<_1a64147be_Struct> _1a75cd338_find_struct(_1a75cbe4c_Package* _self_,jule::Str _30434_ident,jule::Bool _30446_cpp_linked) {
	return _1a75c7b07_find_struct_in_package((*_self_)._field_files,_30434_ident,_30446_cpp_linked);
}



inline jule::Ptr<_1a6426a45_Fn> _1a75cd6e0_find_fn(_1a75cbe4c_Package* _self_,jule::Str _31030_ident,jule::Bool _31042_cpp_linked) {
	return _1a75c8036_find_fn_in_package((*_self_)._field_files,_31030_ident,_31042_cpp_linked);
}



inline jule::Ptr<_1a7465bd7_Trait> _1a75cd9ed_find_trait(_1a75cbe4c_Package* _self_,jule::Str _31633_ident) {
	return _1a75c8377_find_trait_in_package((*_self_)._field_files,_31633_ident);
}



inline jule::Ptr<_1a7467de8_Enum> _1a75cdd0b_find_enum(_1a75cbe4c_Package* _self_,jule::Str _32232_ident) {
	return _1a75c86b8_find_enum_in_package((*_self_)._field_files,_32232_ident);
}







std::ostream &operator<<(std::ostream &_Stream, _1a75cbe4c_Package _Src) {
	_Stream << "Package{";
	_Stream << "files:" << _Src._field_files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a75c928a_ImportInfo> _1a75d2480_find_package(_1a75d1e74_Sema* _self_,jule::Str _22435_ident) {
	return _1a7643ee7_find_package((*_self_)._field_file.ptr(), _22435_ident);
}



inline jule::Ptr<_1a75c928a_ImportInfo> _1a75d278d_select_package(_1a75d1e74_Sema* _self_,jule::Fn<jule::Bool(jule::Ptr<_1a75c928a_ImportInfo>)> _23437_selector) {
	return _1a7644305_select_package((*_self_)._field_file.ptr(), _23437_selector);
}



inline jule::Ptr<_1a75ec478_Var> _1a75d2b45_find_var(_1a75d1e74_Sema* _self_,jule::Str _24431_ident,jule::Bool _24443_cpp_linked) {
	jule::Ptr<_1a75ec478_Var> _24617_v = _1a75c72aa_find_var_in_package((*_self_)._field_files,_24431_ident,_24443_cpp_linked);
	if ((_24617_v != nullptr)) {
		return _24617_v;
	}
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1a980453a:;
		if (it != expr.end()) {
			jule::Ptr<_1a75c928a_ImportInfo> _1a9804150_imp = *it;
			{
				if ((!(_1a75d0923_imp_is_lookupable(_1a9804150_imp,_24431_ident)))) {
					goto _iter_next_1a980453a;
				}
				_24617_v=_1a75c9e5b_find_var(_1a9804150_imp.ptr(), _24431_ident,_24443_cpp_linked);
				if ((_24617_v != nullptr) && _1a75d5065_is_accessible_define(&(*_self_), _24617_v.get()._field_public,_24617_v.get()._field_token)) {
					return _24617_v;
				}
			}
			_iter_next_1a980453a:;
			++it;
			goto _iter_begin_1a980453a;
		}
		_iter_end_1a980453a:;
	}
	return nullptr;
}



inline jule::Ptr<_1a7672168_TypeAlias> _1a75d2eec_find_type_alias(_1a75d1e74_Sema* _self_,jule::Str _27138_ident,jule::Bool _27150_cpp_linked) {
	jule::Ptr<_1a7672168_TypeAlias> _27317_ta = _1a75c772d_find_type_alias_in_package((*_self_)._field_files,_27138_ident,_27150_cpp_linked);
	if ((_27317_ta != nullptr)) {
		return _27317_ta;
	}
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1a9807939:;
		if (it != expr.end()) {
			jule::Ptr<_1a75c928a_ImportInfo> _1a980754e_imp = *it;
			{
				if ((!(_1a75d0923_imp_is_lookupable(_1a980754e_imp,_27138_ident)))) {
					goto _iter_next_1a9807939;
				}
				_27317_ta=_1a75ca313_find_type_alias(_1a980754e_imp.ptr(), _27138_ident,_27150_cpp_linked);
				if ((_27317_ta != nullptr) && _1a75d5065_is_accessible_define(&(*_self_), _27317_ta.get()._field_public,_27317_ta.get()._field_token)) {
					return _27317_ta;
				}
			}
			_iter_next_1a9807939:;
			++it;
			goto _iter_begin_1a9807939;
		}
		_iter_end_1a9807939:;
	}
	return nullptr;
}



inline jule::Ptr<_1a64147be_Struct> _1a75d33a4_find_struct(_1a75d1e74_Sema* _self_,jule::Str _29834_ident,jule::Bool _29846_cpp_linked) {
	jule::Ptr<_1a64147be_Struct> _30017_s = _1a75c7b07_find_struct_in_package((*_self_)._field_files,_29834_ident,_29846_cpp_linked);
	if ((_30017_s != nullptr)) {
		return _30017_s;
	}
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1a980a6a6:;
		if (it != expr.end()) {
			jule::Ptr<_1a75c928a_ImportInfo> _1a980a2bb_imp = *it;
			{
				if ((!(_1a75d0923_imp_is_lookupable(_1a980a2bb_imp,_29834_ident)))) {
					goto _iter_next_1a980a6a6;
				}
				_30017_s=_1a75ca6ba_find_struct(_1a980a2bb_imp.ptr(), _29834_ident,_29846_cpp_linked);
				if ((_30017_s != nullptr) && _1a75d5065_is_accessible_define(&(*_self_), _30017_s.get()._field_public,_30017_s.get()._field_token)) {
					return _30017_s;
				}
			}
			_iter_next_1a980a6a6:;
			++it;
			goto _iter_begin_1a980a6a6;
		}
		_iter_end_1a980a6a6:;
	}
	return nullptr;
}



inline jule::Ptr<_1a6426a45_Fn> _1a75d375b_find_fn(_1a75d1e74_Sema* _self_,jule::Str _32530_ident,jule::Bool _32542_cpp_linked) {
	jule::Ptr<_1a6426a45_Fn> _32717_f = _1a75c8036_find_fn_in_package((*_self_)._field_files,_32530_ident,_32542_cpp_linked);
	if ((_32717_f != nullptr)) {
		return _32717_f;
	}
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1a980d4ab:;
		if (it != expr.end()) {
			jule::Ptr<_1a75c928a_ImportInfo> _1a980d0c1_imp = *it;
			{
				if ((!(_1a75d0923_imp_is_lookupable(_1a980d0c1_imp,_32530_ident)))) {
					goto _iter_next_1a980d4ab;
				}
				_32717_f=_1a75caa72_find_fn(_1a980d0c1_imp.ptr(), _32530_ident,_32542_cpp_linked);
				if ((_32717_f != nullptr) && _1a75d5065_is_accessible_define(&(*_self_), _32717_f.get()._field_public,_32717_f.get()._field_token)) {
					return _32717_f;
				}
			}
			_iter_next_1a980d4ab:;
			++it;
			goto _iter_begin_1a980d4ab;
		}
		_iter_end_1a980d4ab:;
	}
	return nullptr;
}



inline jule::Ptr<_1a7465bd7_Trait> _1a75d3a69_find_trait(_1a75d1e74_Sema* _self_,jule::Str _35233_ident) {
	jule::Ptr<_1a7465bd7_Trait> _35417_t = _1a75c8377_find_trait_in_package((*_self_)._field_files,_35233_ident);
	if ((_35417_t != nullptr)) {
		return _35417_t;
	}
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1a9810e70:;
		if (it != expr.end()) {
			jule::Ptr<_1a75c928a_ImportInfo> _1a9810a85_imp = *it;
			{
				if ((!(_1a75d0923_imp_is_lookupable(_1a9810a85_imp,_35233_ident)))) {
					goto _iter_next_1a9810e70;
				}
				_35417_t=_1a75cad80_find_trait(_1a9810a85_imp.ptr(), _35233_ident);
				if ((_35417_t != nullptr) && _1a75d5065_is_accessible_define(&(*_self_), _35417_t.get()._field_public,_35417_t.get()._field_token)) {
					return _35417_t;
				}
			}
			_iter_next_1a9810e70:;
			++it;
			goto _iter_begin_1a9810e70;
		}
		_iter_end_1a9810e70:;
	}
	return nullptr;
}



inline jule::Ptr<_1a7467de8_Enum> _1a75d3d77_find_enum(_1a75d1e74_Sema* _self_,jule::Str _37932_ident) {
	jule::Ptr<_1a7467de8_Enum> _38117_e = _1a75c86b8_find_enum_in_package((*_self_)._field_files,_37932_ident);
	if ((_38117_e != nullptr)) {
		return _38117_e;
	}
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1a981389b:;
		if (it != expr.end()) {
			jule::Ptr<_1a75c928a_ImportInfo> _1a98134b1_imp = *it;
			{
				if ((!(_1a75d0923_imp_is_lookupable(_1a98134b1_imp,_37932_ident)))) {
					goto _iter_next_1a981389b;
				}
				_38117_e=_1a75cb18d_find_enum(_1a98134b1_imp.ptr(), _37932_ident);
				if ((_38117_e != nullptr) && _1a75d5065_is_accessible_define(&(*_self_), _38117_e.get()._field_public,_38117_e.get()._field_token)) {
					return _38117_e;
				}
			}
			_iter_next_1a981389b:;
			++it;
			goto _iter_begin_1a981389b;
		}
		_iter_end_1a981389b:;
	}
	return nullptr;
}



inline jule::Bool _1a75d4251_is_flag(_1a75d1e74_Sema* _self_,jule::I64 _40322_flags) {
	return ((*_self_)._field_flags & _40322_flags) == _40322_flags;
}



inline void _1a75d44c6_set_current_file(_1a75d1e74_Sema* _self_,jule::Ptr<_1a76439db_SymbolTable> _40539_f) {
	(*_self_)._field_file=_40539_f;
}



inline void _1a75d488e_push_err(_1a75d1e74_Sema* _self_,jule::Ptr<_1d0747985_Token> _40727_token,jule::Str _40742_fmt,jule::Slice<jule::Any> _40755_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1a75d05d2_compiler_err(_40727_token,true,_40742_fmt,_40755_args));
}



inline void _1a75d4bad_push_suggestion(_1a75d1e74_Sema* _self_,jule::Str _41234_fmt,jule::Slice<jule::Any> _41247_args) {
	{
		_1a75d19e0_push_suggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_41234_fmt,_41247_args);
	}
}



inline jule::Bool _1a75d5065_is_accessible_define(_1a75d1e74_Sema* _self_,jule::Bool _41735_public,jule::Ptr<_1d0747985_Token> _41749_token) {
	return (_41735_public || (_41749_token.get()._field_file == nullptr)) || (_1d074d76b_dir((*_self_)._field_file.get()._field_file.ptr()) == _1d074d76b_dir(_41749_token.get()._field_file.ptr()));
}



inline jule::Bool _1a75d54b6_is_duplicated_ident(_1a75d1e74_Sema* _self_,jule::U64 _42434_itself,jule::Str _42451_ident,jule::Bool _42463_cpp_linked) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_1a981b2ee:;
		if (it != expr.end()) {
			jule::Ptr<_1a76439db_SymbolTable> &_1a981b398_f = *it;
			{
				if (_1a7646bba_is_duplicated_ident(_1a981b398_f.ptr(), _42434_itself,_42451_ident,_42463_cpp_linked)) {
					return true;
				}
				{
					auto &expr = _1a981b398_f.get()._field_imports;
					auto it = expr.begin();
					_iter_begin_1a981bb3a:;
					if (it != expr.end()) {
						jule::Ptr<_1a75c928a_ImportInfo> &_1a981c93d_imp = *it;
						{
							{
								auto &expr = _1a981c93d_imp.get()._field_selected;
								auto it = expr.begin();
								_iter_begin_1a981ce16:;
								if (it != expr.end()) {
									jule::Ptr<_1d0747985_Token> &_1a981d18b_selected = *it;
									{
										if (_1a981d18b_selected.get()._field_kind == _42451_ident) {
											return true;
										}
									}
									_iter_next_1a981ce16:;
									++it;
									goto _iter_begin_1a981ce16;
								}
								_iter_end_1a981ce16:;
							}
						}
						_iter_next_1a981bb3a:;
						++it;
						goto _iter_begin_1a981bb3a;
					}
					_iter_end_1a981bb3a:;
				}
			}
			_iter_next_1a981b2ee:;
			++it;
			goto _iter_begin_1a981b2ee;
		}
		_iter_end_1a981b2ee:;
	}
	return false;
}



inline void _1a75d57d5_check_directives(jule::Ptr<_1a75d1e74_Sema> _self_,jule::Slice<jule::Ptr<_1d06c9ecd_Directive>>& _44141_d,jule::Any _44167_o) {
	_1a75c395a_DirectiveChecker _44217_dc = _1a75c395a_DirectiveChecker(_self_,((jule::Ptr<jule::Slice<jule::Ptr<_1d06c9ecd_Directive>>>)((&(_44141_d)))),_44167_o);
	_1a75c5066_check(&_44217_dc);
}



inline jule::Bool _1a75d5c36_check_generic_quantity(_1a75d1e74_Sema* _self_,jule::I64 _45041_required,jule::I64 _45056_given,jule::Ptr<_1d0747985_Token> _45068_token) {
	jule::Bool _45085_ok = jule::Bool();
	{
		
		if ((_45041_required == 0LL) && (_45056_given > 0LL)) {
			_case_begin_1a9821799:;
			{
				_1a75d488e_push_err(&(*_self_), _45068_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
				_45085_ok = false;
				return _45085_ok;
			}
		}
		else if ((_45041_required > 0LL) && (_45056_given == 0LL)) {
			_case_begin_1a9821854:;
			{
				_1a75d488e_push_err(&(*_self_), _45068_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				_45085_ok = false;
				return _45085_ok;
			}
		}
		else if (_45041_required < _45056_given) {
			_case_begin_1a98218ba:;
			{
				_1a75d488e_push_err(&(*_self_), _45068_token,jule::Str("overflow generics", 17),jule::Slice<jule::Any>());
				_45085_ok = false;
				return _45085_ok;
			}
		}
		else if (_45041_required > _45056_given) {
			_case_begin_1a9821579:;
			{
				_1a75d488e_push_err(&(*_self_), _45068_token,jule::Str("missing generics", 16),jule::Slice<jule::Any>());
				_45085_ok = false;
				return _45085_ok;
			}
		}
		else {
			_case_begin_1a9821117:;
			{
				_45085_ok = true;
				return _45085_ok;
			}
		}
		_match_end_1a982106d:;
	}
}



inline jule::Bool _1a75d6132_is_duplicated_import_selection(_1a75d1e74_Sema* _self_,jule::U64 _46945_itself,jule::Str _46962_ident) {
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1a98255c2:;
		if (it != expr.end()) {
			jule::Ptr<_1a75c928a_ImportInfo> &_1a98256b0_imp = *it;
			{
				if (static_cast<jule::U64>(_1a98256b0_imp) == _46945_itself) {
					goto _iter_end_1a98255c2;
				}
				if (_1a75cb8b9_exist_ident(_1a98256b0_imp.ptr(), _46962_ident)) {
					return true;
				}
			}
			_iter_next_1a98255c2:;
			++it;
			goto _iter_begin_1a98255c2;
		}
		_iter_end_1a98255c2:;
	}
	return false;
}



inline jule::Any _1a75d64c8_get_import_def(_1a75d1e74_Sema* _self_,jule::Str _48429_ident,jule::Ptr<_1a75c928a_ImportInfo>& _48446_imp) {
	if (_1a76e1380_find_package_builtin_def(_48446_imp.get()._field_link_path,_48429_ident) != jule::Any(jule::Any(nullptr))) {
		return jule::Any(true);
	}
	{
		auto &expr = _48446_imp.get()._field_package.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1a9827c23:;
		if (it != expr.end()) {
			jule::Ptr<_1a76439db_SymbolTable> _1a9827c67_f = *it;
			{
				
				jule::Any _49121_def = _1a7646769_def_by_ident(_1a9827c67_f.ptr(), _48429_ident,false);
				if (_49121_def != jule::Any(jule::Any(nullptr))) {
					return _49121_def;
				}
			}
			_iter_next_1a9827c23:;
			++it;
			goto _iter_begin_1a9827c23;
		}
		_iter_end_1a9827c23:;
	}
	return jule::Any(nullptr);
}



inline jule::Bool _1a75d682a_check_import_selections(_1a75d1e74_Sema* _self_,jule::Ptr<_1a75c928a_ImportInfo>& _50047_imp) {
	jule::Bool _50067_ok = jule::Bool();
	_50067_ok=true;
	{
		auto &expr = _50047_imp.get()._field_selected;
		auto it = expr.begin();
		_iter_begin_1a9829ab0:;
		if (it != expr.end()) {
			jule::Ptr<_1d0747985_Token> _1a9829d24_ident = *it;
			{
				if ((_1a9829d24_ident.get()._field_kind == jule::Str("self", 4))) {
					goto _iter_next_1a9829ab0;
				}
				if (_1a75d6132_is_duplicated_import_selection(&(*_self_), static_cast<jule::U64>(static_cast<jule::U64>(_50047_imp)),_1a9829d24_ident.get()._field_kind)) {
					_1a75d488e_push_err(&(*_self_), _1a9829d24_ident,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_1a9829d24_ident.get()._field_kind)}));
					_1a75d4bad_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
					_50067_ok=false;
					goto _iter_next_1a9829ab0;
				}
				jule::Any _51421_def = _1a75d64c8_get_import_def(&(*_self_), _1a9829d24_ident.get()._field_kind,_50047_imp);
				{
					auto &_match_expr{ _51421_def };
					
					if (_match_expr.type_is<jule::Bool>()) {
						_case_begin_1a982caa2:;
						{
							goto _iter_next_1a9829ab0;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a75ec478_Var>>()) {
						_case_begin_1a982cb18:;
						{
							jule::Ptr<_1a75ec478_Var> _52025_v = _51421_def.operator jule::Ptr<_1a75ec478_Var>();
							if (_1a75d5065_is_accessible_define(&(*_self_), _52025_v.get()._field_public,_52025_v.get()._field_token)) {
								goto _iter_next_1a9829ab0;
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a7672168_TypeAlias>>()) {
						_case_begin_1a982d83e:;
						{
							jule::Ptr<_1a7672168_TypeAlias> _52525_ta = _51421_def.operator jule::Ptr<_1a7672168_TypeAlias>();
							if (_1a75d5065_is_accessible_define(&(*_self_), _52525_ta.get()._field_public,_52525_ta.get()._field_token)) {
								goto _iter_next_1a9829ab0;
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a64147be_Struct>>()) {
						_case_begin_1a982d8a5:;
						{
							jule::Ptr<_1a64147be_Struct> _53025_strct = _51421_def.operator jule::Ptr<_1a64147be_Struct>();
							if (_1a75d5065_is_accessible_define(&(*_self_), _53025_strct.get()._field_public,_53025_strct.get()._field_token)) {
								goto _iter_next_1a9829ab0;
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a7465bd7_Trait>>()) {
						_case_begin_1a982d91b:;
						{
							jule::Ptr<_1a7465bd7_Trait> _53525_t = _51421_def.operator jule::Ptr<_1a7465bd7_Trait>();
							if (_1a75d5065_is_accessible_define(&(*_self_), _53525_t.get()._field_public,_53525_t.get()._field_token)) {
								goto _iter_next_1a9829ab0;
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a7467de8_Enum>>()) {
						_case_begin_1a982d982:;
						{
							jule::Ptr<_1a7467de8_Enum> _54025_e = _51421_def.operator jule::Ptr<_1a7467de8_Enum>();
							if (_1a75d5065_is_accessible_define(&(*_self_), _54025_e.get()._field_public,_54025_e.get()._field_token)) {
								goto _iter_next_1a9829ab0;
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a6426a45_Fn>>()) {
						_case_begin_1a982d9e8:;
						{
							jule::Ptr<_1a6426a45_Fn> _54525_f = _51421_def.operator jule::Ptr<_1a6426a45_Fn>();
							if (_1a75d5065_is_accessible_define(&(*_self_), _54525_f.get()._field_public,_54525_f.get()._field_token)) {
								goto _iter_next_1a9829ab0;
							}
						}
					}
					else {
						_case_begin_1a982c91a:;
						{
							_1a75d488e_push_err(&(*_self_), _1a9829d24_ident,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>({jule::Any(_1a9829d24_ident.get()._field_kind)}));
							_50067_ok=false;
							goto _iter_next_1a9829ab0;
						}
					}
					_match_end_1a982c8b5:;
				}
				_1a75d488e_push_err(&(*_self_), _1a9829d24_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any(_1a9829d24_ident.get()._field_kind)}));
				_1a75d4bad_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
				_50067_ok=false;
			}
			_iter_next_1a9829ab0:;
			++it;
			goto _iter_begin_1a9829ab0;
		}
		_iter_end_1a9829ab0:;
	}
	return _50067_ok;
}



inline jule::Bool _1a75d6b6b_is_use_alias_duplication(_1a75d1e74_Sema* _self_,jule::Ptr<_1a75c928a_ImportInfo>& _56244_imp) {
	if ((_56244_imp.get()._field_alias.len() == 0LL)) {
		return false;
	}
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1a9835747:;
		if (it != expr.end()) {
			jule::Ptr<_1a75c928a_ImportInfo> _1a98361c6_imp2 = *it;
			{
				if (_1a98361c6_imp2 == _56244_imp) {
					goto _iter_end_1a9835747;
				}
				if (_1a98361c6_imp2.get()._field_alias == _56244_imp.get()._field_alias) {
					return true;
				}
				if ((_1a98361c6_imp2.get()._field_ident == _1a98361c6_imp2.get()._field_link_path) && (_1a98361c6_imp2.get()._field_ident == _56244_imp.get()._field_alias)) {
					return true;
				}
			}
			_iter_next_1a9835747:;
			++it;
			goto _iter_begin_1a9835747;
		}
		_iter_end_1a9835747:;
	}
	return false;
}



inline jule::Bool _1a75d6e68_check_import(_1a75d1e74_Sema* _self_,jule::Ptr<_1a75c928a_ImportInfo>& _58336_imp) {
	if (_58336_imp.get()._field_cpp_linked || (_58336_imp.get()._field_package.get()._field_files.len() == 0LL)) {
		return true;
	}
	if (_1a75d6b6b_is_use_alias_duplication(&(*_self_), _58336_imp)) {
		_1a75d488e_push_err(&(*_self_), _58336_imp.get()._field_token,jule::Str("identifier duplication: @ is already used for another use declaration above", 75),jule::Slice<jule::Any>({jule::Any(_58336_imp.get()._field_alias)}));
		_1a75d4bad_push_suggestion(&(*_self_), jule::Str("rename alias for this use declaration to avoid duplication", 58),jule::Slice<jule::Any>());
	}
	if ((!(_58336_imp.get()._field_duplicate))) {
		jule::Ptr<_1a75d1e74_Sema> _59421_sema = jule::new_ptr<_1a75d1e74_Sema>(_1a75d1e74_Sema(jule::Slice<_1d0019224_Log>(),jule::Slice<jule::Ptr<_1a76439db_SymbolTable>>(),jule::Ptr<_1a76439db_SymbolTable>(),(*_self_)._field_flags));
		_1a75e9431_check(_59421_sema, _58336_imp.get()._field_package.get()._field_files);
		if ((_59421_sema.get()._field_errors.len() != 0LL)) {
			(*_self_)._field_errors=jule::append((*_self_)._field_errors,_59421_sema.get()._field_errors);
			_59421_sema.get()._field_errors=nullptr;
			return false;
		}
	}
	return _1a75d682a_check_import_selections(&(*_self_), _58336_imp);
}



inline void _1a75d7144_check_imports(_1a75d1e74_Sema* _self_) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_1a983cd04:;
		if (it != expr.end()) {
			jule::Ptr<_1a76439db_SymbolTable> _1a983d013_file = *it;
			{
				_1a75d44c6_set_current_file(&(*_self_), _1a983d013_file);
				{
					auto &expr = _1a983d013_file.get()._field_imports;
					auto it = expr.begin();
					_iter_begin_1a983dba1:;
					if (it != expr.end()) {
						jule::Ptr<_1a75c928a_ImportInfo> _1a983dca0_imp = *it;
						{
							jule::Bool _61221_ok = _1a75d6e68_check_import(&(*_self_), _1a983dca0_imp);
							if ((!(_61221_ok))) {
								_1a75d488e_push_err(&(*_self_), _1a983dca0_imp.get()._field_token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>({jule::Any(_1a983dca0_imp.get()._field_link_path)}));
								return;
							}
						}
						_iter_next_1a983dba1:;
						++it;
						goto _iter_begin_1a983dba1;
					}
					_iter_end_1a983dba1:;
				}
			}
			_iter_next_1a983cd04:;
			++it;
			goto _iter_begin_1a983cd04;
		}
		_iter_end_1a983cd04:;
	}
}



inline void _1a75d7320_impl_file_impls(jule::Ptr<_1a75d1e74_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_impls;
		auto it = expr.begin();
		_iter_begin_1a983e971:;
		if (it != expr.end()) {
			jule::Ptr<_1a746936c_Impl> _1a9840796_imp = *it;
			{
				_1a75e0d84_impl_impl(_self_, _1a9840796_imp);
			}
			_iter_next_1a983e971:;
			++it;
			goto _iter_begin_1a983e971;
		}
		_iter_end_1a983e971:;
	}
}



inline void _1a75d74eb_impl_impls(jule::Ptr<_1a75d1e74_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1a9841a1c:;
		if (it != expr.end()) {
			jule::Ptr<_1a76439db_SymbolTable> _1a9841c2b_file = *it;
			{
				_1a75d44c6_set_current_file(_self_.ptr(), _1a9841c2b_file);
				_1a75d7320_impl_file_impls(_self_);
			}
			_iter_next_1a9841a1c:;
			++it;
			goto _iter_begin_1a9841a1c;
		}
		_iter_end_1a9841a1c:;
	}
}



inline void _1a75d76c7_check_enums(jule::Ptr<_1a75d1e74_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1a9842d1a:;
		if (it != expr.end()) {
			jule::Ptr<_1a76439db_SymbolTable> _1a9843029_file = *it;
			{
				_1a75d44c6_set_current_file(_self_.ptr(), _1a9843029_file);
				_1a75dd359_check_enum_decls(_self_);
			}
			_iter_next_1a9842d1a:;
			++it;
			goto _iter_begin_1a9842d1a;
		}
		_iter_end_1a9842d1a:;
	}
}



inline jule::Bool _1a75d7b28_check_type_with_refers(jule::Ptr<_1a75d1e74_Sema> _self_,jule::Ptr<_1a7676c3e_TypeSymbol>& _64547_t,jule::Trait<_1a768b25e_Lookup> _64613_l,jule::Ptr<_1a768181a_Referencer> _64628_referencer) {
	jule::Bool _64655_ok = jule::Bool();
	if (_1a767713a_checked(_64547_t.ptr())) {
		_64655_ok = true;
		return _64655_ok;
	}
	_1a7682497_TypeChecker _65017_tc = _1a7682497_TypeChecker(_self_,_64613_l,_64628_referencer,jule::Ptr<_1d0747985_Token>(),jule::Slice<jule::Ptr<_1d075ee64_GenericDecl>>(),jule::Slice<jule::Ptr<_1a7672168_TypeAlias>>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a7672168_TypeAlias>(),jule::Slice<jule::Ptr<_1a7672168_TypeAlias>>(),jule::Bool());
	if ((_64628_referencer != nullptr) && (_64628_referencer.get()._field_refs != nullptr)) {
		_65017_tc._field_owner_alias=_64628_referencer.get()._field_owner.operator jule::Ptr<_1a7672168_TypeAlias>();
	}
	_1a7688d2d_check(&_65017_tc, _64547_t);
	_64655_ok = _1a767713a_checked(_64547_t.ptr());
	return _64655_ok;
}



inline jule::Bool _1a75d7ed0_check_type(jule::Ptr<_1a75d1e74_Sema> _self_,jule::Ptr<_1a7676c3e_TypeSymbol>& _66935_t,jule::Trait<_1a768b25e_Lookup> _66955_l) {
	return _1a75d7b28_check_type_with_refers(_self_, _66935_t,_66955_l,nullptr);
}



inline jule::Ptr<_1a7672da0_TypeKind> _1a75d83cb_build_type_with_generics(jule::Ptr<_1a75d1e74_Sema> _self_,jule::Ptr<_1d0759c1c_TypeDecl>& _67549_t,jule::Slice<jule::Ptr<_1a7672168_TypeAlias>> _67613_generics) {
	jule::Ptr<_1a7682497_TypeChecker> _67717_tc = jule::new_ptr<_1a7682497_TypeChecker>(_1a7682497_TypeChecker(_self_,jule::Trait<_1a768b25e_Lookup>(_self_, 3),jule::Ptr<_1a768181a_Referencer>(),jule::Ptr<_1d0747985_Token>(),jule::Slice<jule::Ptr<_1d075ee64_GenericDecl>>(),_67613_generics,jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a7672168_TypeAlias>(),jule::Slice<jule::Ptr<_1a7672168_TypeAlias>>(),jule::Bool()));
	return _1a7688aa8_check_decl(_67717_tc.ptr(), _67549_t);
}



inline jule::Ptr<_1a7672da0_TypeKind> _1a75d86c8_build_type(jule::Ptr<_1a75d1e74_Sema> _self_,jule::Ptr<_1d0759c1c_TypeDecl>& _68635_t) {
	return _1a75d83cb_build_type_with_generics(_self_, _68635_t,nullptr);
}



inline jule::Ptr<_1a7672da0_TypeKind> _1a75d89d6_select_type(jule::Ptr<_1a75d1e74_Sema> _self_,jule::Ptr<_1d0759c1c_TypeDecl>& _69136_t) {
	jule::Ptr<_1a7682497_TypeChecker> _69217_tc = jule::new_ptr<_1a7682497_TypeChecker>(_1a7682497_TypeChecker(_self_,jule::Trait<_1a768b25e_Lookup>(_self_, 3),jule::Ptr<_1a768181a_Referencer>(),jule::Ptr<_1d0747985_Token>(),jule::Slice<jule::Ptr<_1d075ee64_GenericDecl>>(),jule::Slice<jule::Ptr<_1a7672168_TypeAlias>>(),jule::Bool(),jule::Bool(),true,jule::Ptr<_1a7672168_TypeAlias>(),jule::Slice<jule::Ptr<_1a7672168_TypeAlias>>(),jule::Bool()));
	return _1a7688aa8_check_decl(_69217_tc.ptr(), _69136_t);
}



inline jule::Ptr<_1a764a6d5_Eval> _1a75d8e37_evalpd(jule::Ptr<_1a75d1e74_Sema> _self_,jule::Trait<_1a768b25e_Lookup> _70230_l,jule::Ptr<_1a7672da0_TypeKind> _70245_p,jule::Ptr<_1a75ec478_Var> _70263_owner) {
	jule::Ptr<_1a764a6d5_Eval> _70317_e = jule::new_ptr<_1a764a6d5_Eval>(_1a764a6d5_Eval(_self_,_70230_l,jule::Ptr<_1a7672da0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_70263_owner,jule::Ptr<_1a6416ae0_FieldIns>(),jule::Bool()));
	{
		auto &_match_expr{ _70230_l };
		
		if (_match_expr.type_is<jule::Ptr<_1a75b3b8c_ScopeChecker>>()) {
			_case_begin_1a984e970:;
			{
				_70317_e.get()._field_unsafety=_1a75b5155_is_unsafe(_70230_l.operator jule::Ptr<_1a75b3b8c_ScopeChecker>());
			}
		}
		_match_end_1a984e91a:;
	}
	_70317_e.get()._field_prefix=_70245_p;
	return _70317_e;
}



inline jule::Ptr<_1a764a6d5_Eval> _1a75d92de_evalp(jule::Ptr<_1a75d1e74_Sema> _self_,jule::Trait<_1a768b25e_Lookup> _72029_l,jule::Ptr<_1a7672da0_TypeKind> _72044_p) {
	return _1a75d8e37_evalpd(_self_, _72029_l,_72044_p,nullptr);
}



inline jule::Ptr<_1a764a6d5_Eval> _1a75d95ec_eval(jule::Ptr<_1a75d1e74_Sema> _self_,jule::Trait<_1a768b25e_Lookup> _72528_l) {
	return _1a75d92de_evalp(_self_, _72528_l,nullptr);
}



inline jule::Bool _1a75d9ae7_check_assign_type(jule::Ptr<_1a75d1e74_Sema> _self_,jule::Bool _72937_dest_is_ref,jule::Ptr<_1a7672da0_TypeKind>& _72961_dest,jule::Ptr<_1a7648b67_Data>& _73014_d,jule::Ptr<_1d0747985_Token> _73028_error_token) {
	if (_73014_d.get()._field_decl) {
		_1a75d488e_push_err(_self_.ptr(), _73028_error_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return false;
	}
	if (_72937_dest_is_ref) {
		if ((!(_1a7673565_equals(_72961_dest, _73014_d.get()._field_kind)))) {
			_1a75d488e_push_err(_self_.ptr(), _73028_error_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_1a7673257_to_str(_72961_dest.ptr())),jule::Any(_1a7673257_to_str(_73014_d.get()._field_kind.ptr()))}));
			return false;
		}
	} else {
		jule::Ptr<_1a7636072_AssignTypeChecker> _74121_atc = jule::new_ptr<_1a7636072_AssignTypeChecker>(_1a7636072_AssignTypeChecker(_self_,_72961_dest,_73014_d,_73028_error_token));
		jule::Bool _74717_ok = _1a76371e9_check(_74121_atc.ptr());
		if ((!(_74717_ok))) {
			return false;
		}
	}
	if ((!(_1a764952a_is_const(_73014_d.ptr()))) || (_1a7674e5c_prim(_72961_dest.ptr()) == nullptr)) {
		return true;
	}
	jule::Str _75717_kind = _1a7674e5c_prim(_72961_dest.ptr()).get()._field_kind;
	{
		
		if (_1a75b134e_is_sig_int(_75717_kind)) {
			_case_begin_1a9856b64:;
			{
				_1a7521589_set_i64(_73014_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1a7520d3b_as_i64(_73014_d.get()._field_constant.ptr())));
			}
		}
		else if (_1a75b163a_is_unsig_int(_75717_kind)) {
			_case_begin_1a9856bdb:;
			{
				_1a752180e_set_u64(_73014_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1a75210a0_as_u64(_73014_d.get()._field_constant.ptr())));
			}
		}
		else if (_1a75b1bbd_is_float(_75717_kind)) {
			_case_begin_1a9856c63:;
			{
				_1a752207e_set_f64(_73014_d.get()._field_constant.ptr(), static_cast<jule::F64>(_1a7521314_as_f64(_73014_d.get()._field_constant.ptr())));
			}
		}
		_match_end_1a9856a87:;
	}
	return true;
}



inline jule::Bool _1a75da08c_check_type_compatibility(jule::Ptr<_1a75d1e74_Sema> _self_,jule::Ptr<_1a7672da0_TypeKind>& _77149_dest,jule::Ptr<_1a7672da0_TypeKind>& _77214_src,jule::Ptr<_1d0747985_Token>& _77235_error_token) {
	if ((_77214_src == nullptr)) {
		_1a75d488e_push_err(_self_.ptr(), _77235_error_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_1a7673257_to_str(_77149_dest.ptr())),jule::Any(_1a7673257_to_str(_77214_src.ptr()))}));
		return false;
	}
	if ((_1a7676887_tup(_77214_src.ptr()) != nullptr)) {
		_1a75d488e_push_err(_self_.ptr(), _77235_error_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_1a7673257_to_str(_77149_dest.ptr())),jule::Any(_1a7673257_to_str(_77214_src.ptr()))}));
		return false;
	}
	_1a7634ceb_TypeCompatibilityChecker _78617_tcc = _1a7634ceb_TypeCompatibilityChecker(_self_,_77149_dest,_77214_src,_77235_error_token);
	if (_1a7635a33_check(&_78617_tcc)) {
		return true;
	}
	_1a75d488e_push_err(_self_.ptr(), _77235_error_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_1a7673257_to_str(_77149_dest.ptr())),jule::Any(_1a7673257_to_str(_77214_src.ptr()))}));
	return false;
}



inline jule::Ptr<_1a7672da0_TypeKind> _1a75da477_build_non_generic_type_kind(jule::Ptr<_1a75d1e74_Sema> _self_,jule::Ptr<_1d0759c1c_TypeDecl>& _80752_ast,jule::Slice<jule::Ptr<_1d075ee64_GenericDecl>>& _80814_generics) {
	jule::Ptr<_1a7682497_TypeChecker> _80917_tc = jule::new_ptr<_1a7682497_TypeChecker>(_1a7682497_TypeChecker(_self_,jule::Trait<_1a768b25e_Lookup>(_self_, 3),jule::Ptr<_1a768181a_Referencer>(),jule::Ptr<_1d0747985_Token>(),_80814_generics,jule::Slice<jule::Ptr<_1a7672168_TypeAlias>>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a7672168_TypeAlias>(),jule::Slice<jule::Ptr<_1a7672168_TypeAlias>>(),jule::Bool()));
	return _1a7688aa8_check_decl(_80917_tc.ptr(), _80752_ast);
}



inline void _1a75da730_build_fn_non_generic_type_kinds(jule::Ptr<_1a75d1e74_Sema> _self_,jule::Ptr<_1a6429be1_FnIns>& _81756_f) {
	jule::Slice<jule::Ptr<_1d075ee64_GenericDecl>> _81817_generics = nullptr;
	if (_1a642720a_is_method(_81756_f.get()._field_decl.ptr())) {
		_81817_generics=jule::append(_81756_f.get()._field_decl.get()._field_generics,_81756_f.get()._field_decl.get()._field_owner.get()._field_generics);
	} else {
		_81817_generics=_81756_f.get()._field_decl.get()._field_generics;
	}
	{
		auto &expr = _81756_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1a986171d:;
		if (it != expr.end()) {
			jule::Ptr<_1a6428d55_ParamIns> _1a9861762_p = *it;
			{
				if ((!(_1a6425835_is_self(_1a9861762_p.get()._field_decl.ptr())))) {
					_1a9861762_p.get()._field_kind=_1a75da477_build_non_generic_type_kind(_self_, _1a9861762_p.get()._field_decl.get()._field_kind.get()._field_decl,_81817_generics);
				}
			}
			_iter_next_1a986171d:;
			++it;
			goto _iter_begin_1a986171d;
		}
		_iter_end_1a986171d:;
	}
	if ((!(_1a6426e96_is_void(_81756_f.get()._field_decl.ptr())))) {
		_81756_f.get()._field_result=_1a75da477_build_non_generic_type_kind(_self_, _81756_f.get()._field_decl.get()._field_result.get()._field_kind.get()._field_decl,_81817_generics);
	}
}



inline jule::Ptr<_1a6429be1_FnIns> _1a75daa71_get_trait_check_fn_kind(jule::Ptr<_1a75d1e74_Sema> _self_,jule::Ptr<_1a6426a45_Fn>& _83548_f) {
	jule::Ptr<_1a6429be1_FnIns> _83617_ins = _1a642842b_instance_force(_83548_f);
	_1a75da730_build_fn_non_generic_type_kinds(_self_, _83617_ins);
	return _83617_ins;
}



inline jule::Bool _1a75dad6d_reload_fn_ins_types(jule::Ptr<_1a75d1e74_Sema> _self_,jule::Ptr<_1a6429be1_FnIns>& _84144_f) {
	jule::Bool _84157_ok = jule::Bool();
	if (_1a642a96c_is_builtin(_84144_f.ptr()) || _1a642abd1_is_anon(_84144_f.ptr())) {
		_84157_ok = true;
		return _84157_ok;
	}
	jule::Ptr<_1a75d1e74_Sema> _84617_sema = _84144_f.get()._field_decl.get()._field_sema;
	jule::Ptr<_1a76439db_SymbolTable> _84817_old = _84144_f.get()._field_decl.get()._field_sema.get()._field_file;
	__JULE_DEFER({
		_1a75d44c6_set_current_file(_84144_f.get()._field_decl.get()._field_sema.ptr(), _84817_old);
	});
	jule::Ptr<_1a76439db_SymbolTable> _85017_file = _1a75d1605_find_file(_84144_f.get()._field_decl.get()._field_sema.get()._field_files,_84144_f.get()._field_decl.get()._field_token.get()._field_file);
	if ((_85017_file != nullptr)) {
		_1a75d44c6_set_current_file(_84144_f.get()._field_decl.get()._field_sema.ptr(), _85017_file);
	}
	jule::I64 _85517_size = _84144_f.get()._field_generics.len();
	if ((_84144_f.get()._field_decl != nullptr) && (_84144_f.get()._field_decl.get()._field_owner != nullptr)) {
		_85517_size+=static_cast<jule::I64>(_84144_f.get()._field_decl.get()._field_owner.get()._field_generics.len());
	}
	jule::Slice<jule::Ptr<_1a7672168_TypeAlias>> _86017_generics = jule::Slice<jule::Ptr<_1a7672168_TypeAlias>>::alloc(0LL,_85517_size);
	{
		auto &expr = _84144_f.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1a986ad43:;
		if (it != expr.end()) {
			jule::I64 _1a986b10c_i = it - expr.begin();
			jule::Ptr<_1a7672da0_TypeKind> _1a986b272_g = *it;
			{
				_86017_generics = jule::alloc_for_append(_86017_generics,1);_86017_generics.__push(jule::new_ptr<_1a7672168_TypeAlias>(_1a7672168_TypeAlias(jule::Ptr<_1d0761c13_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1d0747985_Token>(),_84144_f.get()._field_decl.get()._field_generics[_1a986b10c_i].get()._field_ident,jule::new_ptr<_1a7676c3e_TypeSymbol>(_1a7676c3e_TypeSymbol(jule::Ptr<_1d0759c1c_TypeDecl>(),_1a986b272_g)),jule::Slice<jule::Any>(),jule::Slice<jule::Ptr<_1a7672168_TypeAlias>>())));
			}
			_iter_next_1a986ad43:;
			++it;
			_1a986b10c_i++;
			goto _iter_begin_1a986ad43;
		}
		_iter_end_1a986ad43:;
	}
	if ((_84144_f.get()._field_decl != nullptr) && (_84144_f.get()._field_decl.get()._field_owner != nullptr)) {
		jule::Ptr<_1a641744d_StructIns> _87221_owner = _84144_f.get()._field_owner;
		{
			auto &expr = _87221_owner.get()._field_generics;
			auto it = expr.begin();
			_iter_begin_1a986bb13:;
			if (it != expr.end()) {
				jule::I64 _1a986ca7b_i = it - expr.begin();
				jule::Ptr<_1a7672da0_TypeKind> _1a986cc35_g = *it;
				{
					_86017_generics = jule::alloc_for_append(_86017_generics,1);_86017_generics.__push(jule::new_ptr<_1a7672168_TypeAlias>(_1a7672168_TypeAlias(jule::Ptr<_1d0761c13_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1d0747985_Token>(),_87221_owner.get()._field_decl.get()._field_generics[_1a986ca7b_i].get()._field_ident,jule::new_ptr<_1a7676c3e_TypeSymbol>(_1a7676c3e_TypeSymbol(jule::Ptr<_1d0759c1c_TypeDecl>(),_1a986cc35_g)),jule::Slice<jule::Any>(),jule::Slice<jule::Ptr<_1a7672168_TypeAlias>>())));
				}
				_iter_next_1a986bb13:;
				++it;
				_1a986ca7b_i++;
				goto _iter_begin_1a986bb13;
			}
			_iter_end_1a986bb13:;
		}
	}
	_84157_ok=true;
	{
		auto &expr = _84144_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1a986d0ed:;
		if (it != expr.end()) {
			jule::Ptr<_1a6428d55_ParamIns> _1a986e363_p = *it;
			{
				if (_1a6425835_is_self(_1a986e363_p.get()._field_decl.ptr())) {
					if (_1a6425a99_is_ref(_1a986e363_p.get()._field_decl.ptr())) {
						_1a986e363_p.get()._field_kind=jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(jule::new_ptr<_1a767ab11_Sptr>(_1a767ab11_Sptr(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_84144_f.get()._field_owner, 0))))), 6)));
					} else {
						_1a986e363_p.get()._field_kind=jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_84144_f.get()._field_owner, 0)));
					}
				} else {
					_1a986e363_p.get()._field_kind=_1a75d83cb_build_type_with_generics(_84617_sema, _1a986e363_p.get()._field_decl.get()._field_kind.get()._field_decl,_86017_generics);
					if ((_1a986e363_p.get()._field_kind != nullptr)) {
						_1a986e363_p.get()._field_kind.get()._field_variadic=_1a986e363_p.get()._field_decl.get()._field_variadic;
						if (_1a986e363_p.get()._field_decl.get()._field_reference && (!(_1a768052d_is_valid_for_ref(_1a986e363_p.get()._field_kind)))) {
							_1a75d488e_push_err(_self_.ptr(), _1a986e363_p.get()._field_decl.get()._field_token,jule::Str("references cannot points to type @", 34),jule::Slice<jule::Any>({jule::Any(_1a7673257_to_str(_1a986e363_p.get()._field_kind.ptr()))}));
						}
					} else {
						_84157_ok=false;
					}
				}
			}
			_iter_next_1a986d0ed:;
			++it;
			goto _iter_begin_1a986d0ed;
		}
		_iter_end_1a986d0ed:;
	}
	if ((!(_1a6426e96_is_void(_84144_f.get()._field_decl.ptr())))) {
		_84144_f.get()._field_result=_1a75d83cb_build_type_with_generics(_84617_sema, _84144_f.get()._field_decl.get()._field_result.get()._field_kind.get()._field_decl,_86017_generics);
		_84157_ok=(_84144_f.get()._field_result != nullptr) && _84157_ok;
	}
	if (_84617_sema != _self_) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_84617_sema.get()._field_errors);
		_84617_sema.get()._field_errors=nullptr;
	}
	return _84157_ok;
}



inline jule::Bool _1a75db335_check_ref_validity_for_init_expr(jule::Ptr<_1a75d1e74_Sema> _self_,jule::Bool _92552_left_mut,jule::Ptr<_1a7648b67_Data>& _92573_d,jule::Ptr<_1d0747985_Token>& _92588_error_token) {
	{
		auto &_match_expr{ _92573_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1a75ec478_Var>>()) {
			_case_begin_1a9877855:;
			{
				goto _match_end_1a9876a74;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a641d3ee_TraitSubIdentExprModel>>()) {
			_case_begin_1a9876b73:;
			{
				jule::Ptr<_1a641d3ee_TraitSubIdentExprModel> _93021_model = _92573_d.get()._field_model.operator jule::Ptr<_1a641d3ee_TraitSubIdentExprModel>();
				if ((!(_1a75d0192_is_valid_model_for_ref(_93021_model.get()._field_expr)))) {
					_1a75d488e_push_err(_self_.ptr(), _92588_error_token,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>({jule::Any(_93021_model.get()._field_method.get()._field_ident)}));
					return false;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a641db6e_StructSubIdentExprModel>>()) {
			_case_begin_1a9876bd9:;
			{
				jule::Ptr<_1a641db6e_StructSubIdentExprModel> _93621_model = _92573_d.get()._field_model.operator jule::Ptr<_1a641db6e_StructSubIdentExprModel>();
				if ((!(_1a75d0192_is_valid_model_for_ref(_93621_model.get()._field_expr.get()._field_model)))) {
					_1a75d488e_push_err(_self_.ptr(), _92588_error_token,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>({jule::Any(_93621_model.get()._field_field.get()._field_decl.get()._field_ident)}));
					return false;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a641e7a7_CommonIdentExprModel>>() || _match_expr.type_is<jule::Ptr<_1a641ed3a_CommonSubIdentExprModel>>()) {
			_case_begin_1a9876c50:;
			{
				_1a75d488e_push_err(_self_.ptr(), _92588_error_token,jule::Str("built-in defines cannot pass to references", 42),jule::Slice<jule::Any>());
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6419928_UnaryExprModel>>()) {
			_case_begin_1a9876cb6:;
			{
				jule::Ptr<_1a6419928_UnaryExprModel> _94621_unary = _92573_d.get()._field_model.operator jule::Ptr<_1a6419928_UnaryExprModel>();
				if ((_94621_unary.get()._field_op.get()._field_kind == jule::Str("*", 1))) {
					if ((!(_1a75d0192_is_valid_model_for_ref(_92573_d.get()._field_model)))) {
						_1a75d488e_push_err(_self_.ptr(), _92588_error_token,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>({jule::Any(jule::Str("address from * &T", 17))}));
						return false;
					}
					goto _match_end_1a9876a74;
				}
				goto _case_begin_1a9876ac9;
			}
		}
		else {
			_case_begin_1a9876ac9:;
			{
				_1a75d488e_push_err(_self_.ptr(), _92588_error_token,jule::Str("references requires variable for assignment", 43),jule::Slice<jule::Any>());
				return false;
			}
		}
		_match_end_1a9876a74:;
	}
	if (_92552_left_mut && (!(_92573_d.get()._field_mutable))) {
		_1a75d488e_push_err(_self_.ptr(), _92588_error_token,jule::Str("mutable reference cannot point to immutable data", 48),jule::Slice<jule::Any>());
		return false;
	}
	return true;
}



inline jule::Bool _1a75db91d_check_validity_for_init_expr(jule::Ptr<_1a75d1e74_Sema> _self_,jule::Bool _96748_left_mut,jule::Bool _96764_left_ref,jule::Ptr<_1a7672da0_TypeKind>& _96810_left_kind,jule::Ptr<_1a7648b67_Data>& _96837_d,jule::Ptr<_1d0747985_Token>& _96852_error_token) {
	if ((_96748_left_mut && (!(_96837_d.get()._field_mutable))) && _1a7674247_mutable(_96837_d.get()._field_kind.ptr())) {
		_1a75d488e_push_err(_self_.ptr(), _96852_error_token,jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82),jule::Slice<jule::Any>({jule::Any(_1a7673257_to_str(_96837_d.get()._field_kind.ptr()))}));
		return false;
	}
	if (_96764_left_ref) {
		if ((!(_1a75db335_check_ref_validity_for_init_expr(_self_, _96748_left_mut,_96837_d,_96852_error_token)))) {
			return false;
		}
	}
	jule::Ptr<_1a7636072_AssignTypeChecker> _97917_atc = jule::new_ptr<_1a7636072_AssignTypeChecker>(_1a7636072_AssignTypeChecker(_self_,jule::Ptr<_1a7672da0_TypeKind>(),_96837_d,_96852_error_token));
	return _1a7636748_check_validity(_97917_atc.ptr());
}



inline jule::Bool _1a75dbcc5_check_type_alias_decl_kind(jule::Ptr<_1a75d1e74_Sema> _self_,jule::Ptr<_1a7672168_TypeAlias>& _98751_ta,jule::Trait<_1a768b25e_Lookup> _98771_l) {
	jule::Bool _98784_ok = jule::Bool();
	jule::Ptr<_1a76439db_SymbolTable> _98817_old = _self_.get()._field_file;
	__JULE_DEFER({
		_1a75d44c6_set_current_file(_self_.ptr(), _98817_old);
	});
	if ((_98751_ta.get()._field_token != nullptr)) {
		jule::Ptr<_1a76439db_SymbolTable> _99321_file = _1a75d1605_find_file(_self_.get()._field_files,_98751_ta.get()._field_token.get()._field_file);
		if ((_99321_file != nullptr)) {
			_1a75d44c6_set_current_file(_self_.ptr(), _99321_file);
		}
	}
	_98784_ok=_1a75d7b28_check_type_with_refers(_self_, _98751_ta.get()._field_kind,_98771_l,jule::new_ptr<_1a768181a_Referencer>(_1a768181a_Referencer(_98751_ta.get()._field_ident,jule::Any(jule::Any(_98751_ta)),(&(_98751_ta.get()._field_refers)))));
	if ((_98784_ok && (_1a767590d_arr(_98751_ta.get()._field_kind.get()._field_kind.ptr()) != nullptr)) && _1a767590d_arr(_98751_ta.get()._field_kind.get()._field_kind.ptr()).get()._field_auto) {
		_1a75d488e_push_err(_self_.ptr(), _98751_ta.get()._field_kind.get()._field_decl.get()._field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
		_98784_ok=false;
	}
	return _98784_ok;
}



inline void _1a75dc0d3_check_type_alias_decl(jule::Ptr<_1a75d1e74_Sema> _self_,jule::Ptr<_1a7672168_TypeAlias>& _101046_ta,jule::Trait<_1a768b25e_Lookup> _101066_l) {
	if (_1d074a1d5_is_ignore_ident(_101046_ta.get()._field_ident)) {
		_1a75d488e_push_err(_self_.ptr(), _101046_ta.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	}
	_1a75dbcc5_check_type_alias_decl_kind(_self_, _101046_ta,_101066_l);
}



inline void _1a75dc39c_check_type_alias_decl_dup(jule::Ptr<_1a75d1e74_Sema> _self_,jule::Ptr<_1a7672168_TypeAlias>& _101850_ta) {
	if (_1a75d54b6_is_duplicated_ident(_self_.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_101850_ta)),_101850_ta.get()._field_ident,_101850_ta.get()._field_cpp_linked)) {
		_1a75d488e_push_err(_self_.ptr(), _101850_ta.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_101850_ta.get()._field_ident)}));
		_1a75d4bad_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	_1a75dbcc5_check_type_alias_decl_kind(_self_, _101850_ta,jule::Trait<_1a768b25e_Lookup>(_self_, 3));
}



inline jule::Bool _1a75dc600_check_type_alias_decls(jule::Ptr<_1a75d1e74_Sema> _self_) {
	jule::Bool _102744_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_1a988c6d3:;
		if (it != expr.end()) {
			jule::Ptr<_1a7672168_TypeAlias> _1a988c7b0_ta = *it;
			{
				_1a75dc39c_check_type_alias_decl_dup(_self_, _1a988c7b0_ta);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_102744_ok = false;
					return _102744_ok;
				}
			}
			_iter_next_1a988c6d3:;
			++it;
			goto _iter_begin_1a988c6d3;
		}
		_iter_end_1a988c6d3:;
	}
	_102744_ok = true;
	return _102744_ok;
}



inline void _1a75dc875_check_enum_items_dup(_1a75d1e74_Sema* _self_,jule::Ptr<_1a7467de8_Enum> _103939_e) {
	{
		auto &expr = _103939_e.get()._field_items;
		auto it = expr.begin();
		_iter_begin_1a988e11e:;
		if (it != expr.end()) {
			jule::Ptr<_1a7467403_EnumItem> &_1a988e21d_item = *it;
			{
				if (_1d074a1d5_is_ignore_ident(_1a988e21d_item.get()._field_ident)) {
					_1a75d488e_push_err(&(*_self_), _1a988e21d_item.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
				} else {
					{
						auto &expr = _103939_e.get()._field_items;
						auto it = expr.begin();
						_iter_begin_1a98907d5:;
						if (it != expr.end()) {
							jule::Ptr<_1a7467403_EnumItem> &_1a9890917_citem = *it;
							{
								if (_1a988e21d_item == _1a9890917_citem) {
									goto _iter_end_1a98907d5;
								} else if (_1a988e21d_item.get()._field_ident == _1a9890917_citem.get()._field_ident) {
									_1a75d488e_push_err(&(*_self_), _1a988e21d_item.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_1a988e21d_item.get()._field_ident)}));
									_1a75d4bad_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
									goto _iter_end_1a98907d5;
								}
							}
							_iter_next_1a98907d5:;
							++it;
							goto _iter_begin_1a98907d5;
						}
						_iter_end_1a98907d5:;
					}
				}
			}
			_iter_next_1a988e11e:;
			++it;
			goto _iter_begin_1a988e11e;
		}
		_iter_end_1a988e11e:;
	}
}



inline void _1a75dcaea_check_enum_items_str(jule::Ptr<_1a75d1e74_Sema> _self_,jule::Ptr<_1a7467de8_Enum>& _105745_e) {
	{
		auto &expr = _105745_e.get()._field_items;
		auto it = expr.begin();
		_iter_begin_1a98926e9:;
		if (it != expr.end()) {
			jule::Ptr<_1a7467403_EnumItem> _1a989281a_item = *it;
			{
				if (_1a74677dd_auto_expr(_1a989281a_item.ptr())) {
					_1a989281a_item.get()._field_value=jule::new_ptr<_1a7649be0_Value>(_1a7649be0_Value(jule::Ptr<_1d075b14c_Expr>(),jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::Ptr<_1a7672da0_TypeKind>(),jule::Ptr<_1a7672da0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),static__1a751e587_new_str(_1a989281a_item.get()._field_ident)))));
					_1a989281a_item.get()._field_value.get()._field_data.get()._field_model=jule::Any(_1a989281a_item.get()._field_value.get()._field_data.get()._field_constant);
				} else {
					jule::Ptr<_1a7648b67_Data> _106725_d = _1a7664d92_eval_expr(_1a75d95ec_eval(_self_, jule::Trait<_1a768b25e_Lookup>(_self_, 3)), _1a989281a_item.get()._field_value.get()._field_expr);
					if ((_106725_d == nullptr)) {
						goto _iter_next_1a98926e9;
					}
					if ((!(_1a764952a_is_const(_106725_d.ptr())))) {
						_1a75d488e_push_err(_self_.ptr(), _1a989281a_item.get()._field_value.get()._field_expr.get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					}
					_1a75d9ae7_check_assign_type(_self_, false,_105745_e.get()._field_kind.get()._field_kind,_106725_d,_1a989281a_item.get()._field_token);
					_1a989281a_item.get()._field_value.get()._field_data=_106725_d;
				}
			}
			_iter_next_1a98926e9:;
			++it;
			goto _iter_begin_1a98926e9;
		}
		_iter_end_1a98926e9:;
	}
}



inline void _1a75dcd70_check_enum_items_int(jule::Ptr<_1a75d1e74_Sema> _self_,jule::Ptr<_1a7467de8_Enum>& _108245_e) {
	jule::Ptr<_1a7677602_Prim> _108313_prim = _1a7674e5c_prim(_108245_e.get()._field_kind.get()._field_kind.ptr());
	jule::U64 _108417_max = static_cast<jule::U64>(_1a75ab437_max(_1a7677965_to_str(_108313_prim.ptr())));
	{
		auto &expr = _108245_e.get()._field_items;
		auto it = expr.begin();
		_iter_begin_1a989858a:;
		if (it != expr.end()) {
			jule::I64 _1a9898788_i = it - expr.begin();
			jule::Ptr<_1a7467403_EnumItem> _1a98988cb_item = *it;
			{
				if ((_108417_max == 0LLU)) {
					_1a75d488e_push_err(_self_.ptr(), _1a98988cb_item.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					(_108417_max)--;
				}
				if (_1a74677dd_auto_expr(_1a98988cb_item.ptr())) {
					_1a98988cb_item.get()._field_value=jule::new_ptr<_1a7649be0_Value>(_1a7649be0_Value(jule::Ptr<_1d075b14c_Expr>(),jule::new_ptr<_1a7648b67_Data>()));
					{
						
						if (_1a75b134e_is_sig_int(_1a7677965_to_str(_108313_prim.ptr()))) {
							_case_begin_1a989ab31:;
							{
								_1a98988cb_item.get()._field_value.get()._field_data.get()._field_constant=static__1a751cdb0_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_108417_max - static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_108417_max - static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_1a9898788_i)))))))));
							}
						}
						else {
							_case_begin_1a989a658:;
							{
								_1a98988cb_item.get()._field_value.get()._field_data.get()._field_constant=static__1a751e09d_new_u64(static_cast<jule::U64>(_108417_max - static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_108417_max - static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_1a9898788_i))))))));
							}
						}
						_match_end_1a989a603:;
					}
					_1a98988cb_item.get()._field_value.get()._field_data.get()._field_model=jule::Any(_1a98988cb_item.get()._field_value.get()._field_data.get()._field_constant);
				} else {
					jule::Ptr<_1a7648b67_Data> _110325_d = _1a7664d92_eval_expr(_1a75d95ec_eval(_self_, jule::Trait<_1a768b25e_Lookup>(_self_, 3)), _1a98988cb_item.get()._field_value.get()._field_expr);
					if ((_110325_d == nullptr)) {
						goto _iter_next_1a989858a;
					}
					if ((!(_1a764952a_is_const(_110325_d.ptr())))) {
						_1a75d488e_push_err(_self_.ptr(), _1a98988cb_item.get()._field_value.get()._field_expr.get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					}
					_1a75d9ae7_check_assign_type(_self_, false,_108245_e.get()._field_kind.get()._field_kind,_110325_d,_1a98988cb_item.get()._field_token);
					_1a98988cb_item.get()._field_value.get()._field_data=_110325_d;
				}
			}
			_iter_next_1a989858a:;
			++it;
			_1a9898788_i++;
			goto _iter_begin_1a989858a;
		}
		_iter_end_1a989858a:;
	}
}



inline void _1a75dd0e5_check_enum_decl(jule::Ptr<_1a75d1e74_Sema> _self_,jule::Ptr<_1a7467de8_Enum>& _111840_e) {
	if (_1d074a1d5_is_ignore_ident(_111840_e.get()._field_ident)) {
		_1a75d488e_push_err(_self_.ptr(), _111840_e.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1a75d54b6_is_duplicated_ident(_self_.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_111840_e)),_111840_e.get()._field_ident,false)) {
		_1a75d488e_push_err(_self_.ptr(), _111840_e.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_111840_e.get()._field_ident)}));
		_1a75d4bad_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	if ((_111840_e.get()._field_items.len() == 0LL)) {
		_1a75d488e_push_err(_self_.ptr(), _111840_e.get()._field_token,jule::Str("enum @ have no field", 20),jule::Slice<jule::Any>({jule::Any(_111840_e.get()._field_ident)}));
	}
	_1a75dc875_check_enum_items_dup(_self_.ptr(), _111840_e);
	if ((_111840_e.get()._field_kind != nullptr)) {
		if ((!(_1a75d7ed0_check_type(_self_, _111840_e.get()._field_kind,jule::Trait<_1a768b25e_Lookup>(_self_, 3))))) {
			return;
		}
	} else {
		_111840_e.get()._field_kind=jule::new_ptr<_1a7676c3e_TypeSymbol>(_1a7676c3e_TypeSymbol(jule::Ptr<_1d0759c1c_TypeDecl>(),jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("int", 3)), 5)))));
	}
	jule::Ptr<_1a7677602_Prim> _114517_t = _1a7674e5c_prim(_111840_e.get()._field_kind.get()._field_kind.ptr());
	if ((_114517_t == nullptr)) {
		_1a75d488e_push_err(_self_.ptr(), _111840_e.get()._field_token,jule::Str("invalid type source", 19),jule::Slice<jule::Any>());
		return;
	}
	{
		
		if (_1a767a5b1_is_str(_114517_t.ptr())) {
			_case_begin_1a98a7269:;
			{
				_1a75dcaea_check_enum_items_str(_self_, _111840_e);
			}
		}
		else if (_1a75b18d2_is_int(_1a7677965_to_str(_114517_t.ptr()))) {
			_case_begin_1a98a72d0:;
			{
				_1a75dcd70_check_enum_items_int(_self_, _111840_e);
			}
		}
		else {
			_case_begin_1a98a4794:;
			{
				_1a75d488e_push_err(_self_.ptr(), _111840_e.get()._field_token,jule::Str("invalid type source", 19),jule::Slice<jule::Any>());
			}
		}
		_match_end_1a98a6565:;
	}
}



inline jule::Bool _1a75dd359_check_enum_decls(jule::Ptr<_1a75d1e74_Sema> _self_) {
	jule::Bool _116338_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_enums;
		auto it = expr.begin();
		_iter_begin_1a98a9777:;
		if (it != expr.end()) {
			jule::Ptr<_1a7467de8_Enum> _1a98a9854_e = *it;
			{
				_1a75dd0e5_check_enum_decl(_self_, _1a98a9854_e);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_116338_ok = false;
					return _116338_ok;
				}
			}
			_iter_next_1a98a9777:;
			++it;
			goto _iter_begin_1a98a9777;
		}
		_iter_end_1a98a9777:;
	}
	_116338_ok = true;
	return _116338_ok;
}



inline jule::Bool _1a75dd667_check_decl_generics(_1a75d1e74_Sema* _self_,jule::Slice<jule::Ptr<_1d075ee64_GenericDecl>>& _117539_generics) {
	jule::Bool _117572_ok = jule::Bool();
	_117572_ok=true;
	{
		auto &expr = _117539_generics;
		auto it = expr.begin();
		_iter_begin_1a98ab449:;
		if (it != expr.end()) {
			jule::I64 _1a98ab6d0_i = it - expr.begin();
			jule::Ptr<_1d075ee64_GenericDecl> &_1a98ab8de_g = *it;
			{
				if (_1d074a1d5_is_ignore_ident(_1a98ab8de_g.get()._field_ident)) {
					_1a75d488e_push_err(&(*_self_), _1a98ab8de_g.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
					_117572_ok=false;
					goto _iter_next_1a98ab449;
				}
				_julec_label_duplication_lookup:;
				{
					auto &expr = _117539_generics;
					auto it = expr.begin();
					_iter_begin_1a98ace0c:;
					if (it != expr.end()) {
						jule::I64 _1a98acea6_j = it - expr.begin();
						jule::Ptr<_1d075ee64_GenericDecl> &_1a98ad1e8_ct = *it;
						{
							{
								
								if (_1a98acea6_j >= _1a98ab6d0_i) {
									_case_begin_1a98ad8be:;
									{
										goto _iter_end_1a98ace0c;
									}
								}
								else if (_1a98ab8de_g.get()._field_ident == _1a98ad1e8_ct.get()._field_ident) {
									_case_begin_1a98ad946:;
									{
										_1a75d488e_push_err(&(*_self_), _1a98ab8de_g.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_1a98ab8de_g.get()._field_ident)}));
										_1a75d4bad_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										_117572_ok=false;
										goto _iter_end_1a98ace0c;
									}
								}
								_match_end_1a98ad7ae:;
							}
						}
						_iter_next_1a98ace0c:;
						++it;
						_1a98acea6_j++;
						goto _iter_begin_1a98ace0c;
					}
					_iter_end_1a98ace0c:;
				}
			}
			_iter_next_1a98ab449:;
			++it;
			_1a98ab6d0_i++;
			goto _iter_begin_1a98ab449;
		}
		_iter_end_1a98ab449:;
	}
	return _117572_ok;
}



inline jule::Bool _1a75dd9b9_check_fn_decl_params_dup(_1a75d1e74_Sema* _self_,jule::Ptr<_1a6426a45_Fn>& _120244_f) {
	jule::Bool _120254_ok = jule::Bool();
	_120254_ok=true;
	_julec_label_check:;
	{
		auto &expr = _120244_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1a98b186c:;
		if (it != expr.end()) {
			jule::I64 _1a98b196b_i = it - expr.begin();
			jule::Ptr<_1a6425208_Param> &_1a98b1b03_p = *it;
			{
				{
					auto &expr = _120244_f.get()._field_generics;
					auto it = expr.begin();
					_iter_begin_1a98b2296:;
					if (it != expr.end()) {
						jule::Ptr<_1d075ee64_GenericDecl> &_1a98b2395_g = *it;
						{
							if (_1a98b1b03_p.get()._field_ident == _1a98b2395_g.get()._field_ident) {
								_120254_ok=false;
								_1a75d488e_push_err(&(*_self_), _1a98b1b03_p.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_1a98b1b03_p.get()._field_ident)}));
								_1a75d4bad_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								goto _iter_next_1a98b186c;
							}
						}
						_iter_next_1a98b2296:;
						++it;
						goto _iter_begin_1a98b2296;
					}
					_iter_end_1a98b2296:;
				}
				_julec_label_params_lookup:;
				{
					auto &expr = _120244_f.get()._field_params;
					auto it = expr.begin();
					_iter_begin_1a98b4089:;
					if (it != expr.end()) {
						jule::I64 _1a98b24b6_j = it - expr.begin();
						jule::Ptr<_1a6425208_Param> &_1a98b41aa_jp = *it;
						{
							{
								
								if (_1a98b24b6_j >= _1a98b196b_i) {
									_case_begin_1a98b481a:;
									{
										goto _iter_end_1a98b4089;
									}
								}
								else if (_1d074a47c_is_anon_ident(_1a98b1b03_p.get()._field_ident) || _1d074a47c_is_anon_ident(_1a98b41aa_jp.get()._field_ident)) {
									_case_begin_1a98b4892:;
									{
										goto _iter_end_1a98b4089;
									}
								}
								else if (_1a98b1b03_p.get()._field_ident == _1a98b41aa_jp.get()._field_ident) {
									_case_begin_1a98b4919:;
									{
										_120254_ok=false;
										_1a75d488e_push_err(&(*_self_), _1a98b1b03_p.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_1a98b1b03_p.get()._field_ident)}));
										_1a75d4bad_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_next_1a98b186c;
									}
								}
								_match_end_1a98b46e9:;
							}
						}
						_iter_next_1a98b4089:;
						++it;
						_1a98b24b6_j++;
						goto _iter_begin_1a98b4089;
					}
					_iter_end_1a98b4089:;
				}
			}
			_iter_next_1a98b186c:;
			++it;
			_1a98b196b_i++;
			goto _iter_begin_1a98b186c;
		}
		_iter_end_1a98b186c:;
	}
	return _120254_ok;
}



inline jule::Bool _1a75ddd0a_check_fn_decl_result_dup(_1a75d1e74_Sema* _self_,jule::Ptr<_1a6426a45_Fn>& _123644_f) {
	jule::Bool _123654_ok = jule::Bool();
	_123654_ok=true;
	if (_1a6426e96_is_void(_123644_f.ptr())) {
		return _123654_ok;
	}
	{
		auto &expr = _123644_f.get()._field_result.get()._field_idents;
		auto it = expr.begin();
		_iter_begin_1a98b8357:;
		if (it != expr.end()) {
			jule::I64 _1a98b839b_i = it - expr.begin();
			jule::Ptr<_1d0747985_Token> &_1a98b85bb_v = *it;
			{
				if (_1d074a1d5_is_ignore_ident(_1a98b85bb_v.get()._field_kind) || _1d074a47c_is_anon_ident(_1a98b85bb_v.get()._field_kind)) {
					goto _iter_next_1a98b8357;
				}
				{
					auto &expr = _123644_f.get()._field_generics;
					auto it = expr.begin();
					_iter_begin_1a98b9600:;
					if (it != expr.end()) {
						jule::Ptr<_1d075ee64_GenericDecl> &_1a98b96ee_g = *it;
						{
							if (_1a98b85bb_v.get()._field_kind == _1a98b96ee_g.get()._field_ident) {
								goto _julec_label_exist;
							}
						}
						_iter_next_1a98b9600:;
						++it;
						goto _iter_begin_1a98b9600;
					}
					_iter_end_1a98b9600:;
				}
				{
					auto &expr = _123644_f.get()._field_params;
					auto it = expr.begin();
					_iter_begin_1a98ba1a0:;
					if (it != expr.end()) {
						jule::Ptr<_1a6425208_Param> &_1a98ba678_p = *it;
						{
							if (_1a98b85bb_v.get()._field_kind == _1a98ba678_p.get()._field_ident) {
								goto _julec_label_exist;
							}
						}
						_iter_next_1a98ba1a0:;
						++it;
						goto _iter_begin_1a98ba1a0;
					}
					_iter_end_1a98ba1a0:;
				}
				_julec_label_itself_lookup:;
				{
					auto &expr = _123644_f.get()._field_result.get()._field_idents;
					auto it = expr.begin();
					_iter_begin_1a98bb7cd:;
					if (it != expr.end()) {
						jule::I64 _1a98bb877_j = it - expr.begin();
						jule::Ptr<_1d0747985_Token> &_1a98bba75_jv = *it;
						{
							{
								
								if (_1a98bb877_j >= _1a98b839b_i) {
									_case_begin_1a98bc207:;
									{
										goto _iter_end_1a98bb7cd;
									}
								}
								else if (_1a98bba75_jv.get()._field_kind == _1a98b85bb_v.get()._field_kind) {
									_case_begin_1a98bc27e:;
									{
										goto _julec_label_exist;
									}
								}
								_match_end_1a98bc0e7:;
							}
						}
						_iter_next_1a98bb7cd:;
						++it;
						_1a98bb877_j++;
						goto _iter_begin_1a98bb7cd;
					}
					_iter_end_1a98bb7cd:;
				}
				goto _iter_next_1a98b8357;
				_julec_label_exist:;
				_1a75d488e_push_err(&(*_self_), _1a98b85bb_v,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_1a98b85bb_v.get()._field_kind)}));
				_1a75d4bad_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
				_123654_ok=false;
			}
			_iter_next_1a98b8357:;
			++it;
			_1a98b839b_i++;
			goto _iter_begin_1a98b8357;
		}
		_iter_end_1a98b8357:;
	}
	return _123654_ok;
}



inline void _1a75de06e_check_fn_decl_types(jule::Ptr<_1a75d1e74_Sema> _self_,jule::Ptr<_1a6426a45_Fn>& _128144_f) {
	jule::Slice<jule::Ptr<_1d075ee64_GenericDecl>> _128217_generics = _128144_f.get()._field_generics;
	if ((_128144_f.get()._field_owner != nullptr) && (_128144_f.get()._field_owner.get()._field_generics.len() != 0LL)) {
		_128217_generics=jule::append(_128217_generics,_128144_f.get()._field_owner.get()._field_generics);
	}
	{
		auto &expr = _128144_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1a98c166d:;
		if (it != expr.end()) {
			jule::Ptr<_1a6425208_Param> _1a98c16e5_p = *it;
			{
				if ((!(_1a6425835_is_self(_1a98c16e5_p.ptr())))) {
					jule::Ptr<_1a7672da0_TypeKind> _128925_kind = _1a75da477_build_non_generic_type_kind(_self_, _1a98c16e5_p.get()._field_kind.get()._field_decl,_128217_generics);
					_1a98c16e5_p.get()._field_kind.get()._field_kind=_128925_kind;
				}
			}
			_iter_next_1a98c166d:;
			++it;
			goto _iter_begin_1a98c166d;
		}
		_iter_end_1a98c166d:;
	}
	if ((!(_1a6426e96_is_void(_128144_f.ptr())))) {
		jule::Ptr<_1a7672da0_TypeKind> _129521_kind = _1a75da477_build_non_generic_type_kind(_self_, _128144_f.get()._field_result.get()._field_kind.get()._field_decl,_128217_generics);
		_128144_f.get()._field_result.get()._field_kind.get()._field_kind=_129521_kind;
	}
}



inline void _1a75de338_check_fn_decl_prototype(jule::Ptr<_1a75d1e74_Sema> _self_,jule::Ptr<_1a6426a45_Fn>& _130248_f) {
	if (_130248_f.get()._field_exceptional && _130248_f.get()._field_cpp_linked) {
		_1a75d488e_push_err(_self_.ptr(), _130248_f.get()._field_token,jule::Str("cpp-linked defines cannot be exceptional", 40),jule::Slice<jule::Any>());
		return;
	}
	if (_130248_f.get()._field_exceptional) {
		if (_1a642746e_is_entry_point(_130248_f.ptr())) {
			_1a75d488e_push_err(_self_.ptr(), _130248_f.get()._field_token,jule::Str("entry point cannot be exceptional", 33),jule::Slice<jule::Any>());
		} else if (_1a64276d3_is_init(_130248_f.ptr())) {
			_1a75d488e_push_err(_self_.ptr(), _130248_f.get()._field_token,jule::Str("initializer function cannot be exceptional", 42),jule::Slice<jule::Any>());
		}
	}
	{
		
		if ((!(_1a75dd667_check_decl_generics(_self_.ptr(), _130248_f.get()._field_generics)))) {
			_case_begin_1a98c54a7:;
		}
		else if ((!(_1a75dd9b9_check_fn_decl_params_dup(_self_.ptr(), _130248_f)))) {
			_case_begin_1a98c552e:;
		}
		else if ((!(_1a75ddd0a_check_fn_decl_result_dup(_self_.ptr(), _130248_f)))) {
			_case_begin_1a98c6b90:;
		}
		_match_end_1a98c53b9:;
	}
	_1a75de06e_check_fn_decl_types(_self_, _130248_f);
}



inline void _1a75de5e1_check_trait_decl_method(jule::Ptr<_1a75d1e74_Sema> _self_,jule::Ptr<_1a6426a45_Fn>& _132548_f) {
	if (_1d074a1d5_is_ignore_ident(_132548_f.get()._field_ident)) {
		_1a75d488e_push_err(_self_.ptr(), _132548_f.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	}
	_1a75de338_check_fn_decl_prototype(_self_, _132548_f);
	_132548_f.get()._field_sema=_self_;
}



inline void _1a75de899_check_trait_decl_methods(jule::Ptr<_1a75d1e74_Sema> _self_,jule::Ptr<_1a7465bd7_Trait>& _133449_t) {
	{
		auto &expr = _133449_t.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1a98caa2e:;
		if (it != expr.end()) {
			jule::I64 _1a98cab2d_i = it - expr.begin();
			jule::Ptr<_1a6426a45_Fn> _1a98cacb5_f = *it;
			{
				_1a75de5e1_check_trait_decl_method(_self_, _1a98cacb5_f);
				_133449_t.get()._field_mutable=_133449_t.get()._field_mutable || _1a98cacb5_f.get()._field_params[0LL].get()._field_mutable;
				if ((_self_.get()._field_errors.len() > 0LL)) {
					return;
				}
				_julec_label_duplicate_lookup:;
				{
					auto &expr = _133449_t.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1a98cc58b:;
					if (it != expr.end()) {
						jule::I64 _1a98cc9ba_j = it - expr.begin();
						jule::Ptr<_1a6426a45_Fn> _1a98ccb30_jf = *it;
						{
							{
								
								if (_1a98cc9ba_j >= _1a98cab2d_i) {
									_case_begin_1a98cd2b2:;
									{
										goto _iter_end_1a98cc58b;
									}
								}
								else if (_1a98cacb5_f.get()._field_ident == _1a98ccb30_jf.get()._field_ident) {
									_case_begin_1a98cd339:;
									{
										_1a75d488e_push_err(_self_.ptr(), _1a98cacb5_f.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_1a98cacb5_f.get()._field_ident)}));
										_1a75d4bad_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_end_1a98cc58b;
									}
								}
								_match_end_1a98cd1a2:;
							}
						}
						_iter_next_1a98cc58b:;
						++it;
						_1a98cc9ba_j++;
						goto _iter_begin_1a98cc58b;
					}
					_iter_end_1a98cc58b:;
				}
			}
			_iter_next_1a98caa2e:;
			++it;
			_1a98cab2d_i++;
			goto _iter_begin_1a98caa2e;
		}
		_iter_end_1a98caa2e:;
	}
}



inline void _1a75deb0d_check_trait_decl(jule::Ptr<_1a75d1e74_Sema> _self_,jule::Ptr<_1a7465bd7_Trait>& _136541_t) {
	if (_1d074a1d5_is_ignore_ident(_136541_t.get()._field_ident)) {
		_1a75d488e_push_err(_self_.ptr(), _136541_t.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1a75d54b6_is_duplicated_ident(_self_.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_136541_t)),_136541_t.get()._field_ident,false)) {
		_1a75d488e_push_err(_self_.ptr(), _136541_t.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_136541_t.get()._field_ident)}));
		_1a75d4bad_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	_1a75de899_check_trait_decl_methods(_self_, _136541_t);
}



inline jule::Bool _1a75ded72_check_trait_decls(jule::Ptr<_1a75d1e74_Sema> _self_) {
	jule::Bool _137739_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_traits;
		auto it = expr.begin();
		_iter_begin_1a98d3b69:;
		if (it != expr.end()) {
			jule::Ptr<_1a7465bd7_Trait> _1a98d3c46_t = *it;
			{
				_1a75deb0d_check_trait_decl(_self_, _1a98d3c46_t);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_137739_ok = false;
					return _137739_ok;
				}
			}
			_iter_next_1a98d3b69:;
			++it;
			goto _iter_begin_1a98d3b69;
		}
		_iter_end_1a98d3b69:;
	}
	_137739_ok = true;
	return _137739_ok;
}



inline jule::Bool _1a75e026d_check_trait_impl_methods(_1a75d1e74_Sema* _self_,jule::Ptr<_1a7465bd7_Trait>& _138948_base,jule::Ptr<_1a746936c_Impl>& _138963_ipl) {
	jule::Bool _138977_ok = jule::Bool();
	_138977_ok=true;
	{
		auto &expr = _138963_ipl.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1a98d5b9e:;
		if (it != expr.end()) {
			jule::Ptr<_1a6426a45_Fn> &_1a98d5e13_f = *it;
			{
				if ((_1a7466a62_find_method(_138948_base.ptr(), _1a98d5e13_f.get()._field_ident) == nullptr)) {
					_1a75d488e_push_err(&(*_self_), _1a98d5e13_f.get()._field_token,jule::Str("undefined identifier: trait @ has no define @", 45),jule::Slice<jule::Any>({jule::Any(_138948_base.get()._field_ident),jule::Any(_1a98d5e13_f.get()._field_ident)}));
					_138977_ok=false;
				}
			}
			_iter_next_1a98d5b9e:;
			++it;
			goto _iter_begin_1a98d5b9e;
		}
		_iter_end_1a98d5b9e:;
	}
	return _138977_ok;
}



inline jule::Bool _1a75e0614_impl_to_struct(jule::Ptr<_1a75d1e74_Sema> _self_,jule::Ptr<_1a64147be_Struct>& _140039_dest,jule::Ptr<_1a746936c_Impl>& _140059_ipl) {
	jule::Bool _140073_ok = jule::Bool();
	_140073_ok=true;
	{
		auto &expr = _140059_ipl.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1a98d87b7:;
		if (it != expr.end()) {
			jule::Ptr<_1a6426a45_Fn> _1a98d8a2b_f = *it;
			{
				if ((_1a64153b3_find_method(_140039_dest.ptr(), _1a98d8a2b_f.get()._field_ident,_1a98d8a2b_f.get()._field_statically) != nullptr) || (_1a64159ce_find_field(_140039_dest.ptr(), _1a98d8a2b_f.get()._field_ident) != nullptr)) {
					_1a75d488e_push_err(_self_.ptr(), _1a98d8a2b_f.get()._field_token,jule::Str("identifier duplication: struct @ already have define @", 54),jule::Slice<jule::Any>({jule::Any(_140039_dest.get()._field_ident),jule::Any(_1a98d8a2b_f.get()._field_ident)}));
					_140073_ok=false;
					goto _iter_next_1a98d87b7;
				}
				if ((_140039_dest.get()._field_generics.len() > 0LL) && (_1a98d8a2b_f.get()._field_generics.len() > 0LL)) {
					{
						auto &expr = _1a98d8a2b_f.get()._field_generics;
						auto it = expr.begin();
						_iter_begin_1a98db435:;
						if (it != expr.end()) {
							jule::Ptr<_1d075ee64_GenericDecl> _1a98db523_fg = *it;
							{
								{
									auto &expr = _140039_dest.get()._field_generics;
									auto it = expr.begin();
									_iter_begin_1a98dbb2d:;
									if (it != expr.end()) {
										jule::Ptr<_1d075ee64_GenericDecl> _1a98dbc2c_dg = *it;
										{
											if (_1a98db523_fg.get()._field_ident == _1a98dbc2c_dg.get()._field_ident) {
												_1a75d488e_push_err(_self_.ptr(), _1a98db523_fg.get()._field_token,jule::Str("methods cannot have same generic identifier with owner same time", 64),jule::Slice<jule::Any>());
												_140073_ok=false;
											}
										}
										_iter_next_1a98dbb2d:;
										++it;
										goto _iter_begin_1a98dbb2d;
									}
									_iter_end_1a98dbb2d:;
								}
							}
							_iter_next_1a98db435:;
							++it;
							goto _iter_begin_1a98db435;
						}
						_iter_end_1a98db435:;
					}
				}
				_1a75d57d5_check_directives(_self_, _1a98d8a2b_f.get()._field_directives,jule::Any(_1a98d8a2b_f));
				_1a98d8a2b_f.get()._field_sema=_self_;
				_1a98d8a2b_f.get()._field_owner=_140039_dest;
				_140039_dest.get()._field_methods = jule::alloc_for_append(_140039_dest.get()._field_methods,1);_140039_dest.get()._field_methods.__push(_1a98d8a2b_f);
			}
			_iter_next_1a98d87b7:;
			++it;
			goto _iter_begin_1a98d87b7;
		}
		_iter_end_1a98d87b7:;
	}
	{
		auto &expr = _140059_ipl.get()._field_statics;
		auto it = expr.begin();
		_iter_begin_1a98de625:;
		if (it != expr.end()) {
			jule::Ptr<_1a75ec478_Var> _1a98d8b4c_v = *it;
			{
				
				if ((_1a64153b3_find_method(_140039_dest.ptr(), _1a98d8b4c_v.get()._field_ident,true) != nullptr) || (_1a64156c1_find_static(_140039_dest.ptr(), _1a98d8b4c_v.get()._field_ident) != nullptr)) {
					_1a75d488e_push_err(_self_.ptr(), _1a98d8b4c_v.get()._field_token,jule::Str("identifier duplication: struct @ already have define @", 54),jule::Slice<jule::Any>({jule::Any(_140039_dest.get()._field_ident),jule::Any(_1a98d8b4c_v.get()._field_ident)}));
					_140073_ok=false;
					goto _iter_next_1a98de625;
				}
				_1a75e11a3_check_var_decl(_self_, _1a98d8b4c_v,jule::Trait<_1a768b25e_Lookup>(_self_, 3));
				_1a75e53e9_check_type_var(_self_, _1a98d8b4c_v,jule::Trait<_1a768b25e_Lookup>(_self_, 3));
				_140039_dest.get()._field_statics = jule::alloc_for_append(_140039_dest.get()._field_statics,1);_140039_dest.get()._field_statics.__push(_1a98d8b4c_v);
			}
			_iter_next_1a98de625:;
			++it;
			goto _iter_begin_1a98de625;
		}
		_iter_end_1a98de625:;
	}
	return _140073_ok;
}



inline void _1a75e0889_impl_trait(jule::Ptr<_1a75d1e74_Sema> _self_,jule::Ptr<_1a746936c_Impl>& _144535_decl) {
	jule::Ptr<_1a7672da0_TypeKind> _144617_base_t = _1a75d89d6_select_type(_self_, _144535_decl.get()._field_base);
	if ((_144617_base_t == nullptr)) {
		return;
	}
	jule::Ptr<_1a7465bd7_Trait> _145017_base = _1a76763ae_trt(_144617_base_t.ptr());
	if ((_145017_base == nullptr)) {
		_1a75d488e_push_err(_self_.ptr(), _144535_decl.get()._field_base.get()._field_token,jule::Str("invalid base type for impl: @", 29),jule::Slice<jule::Any>({jule::Any(_1a7673257_to_str(_144617_base_t.ptr()))}));
		_1a75d4bad_push_suggestion(_self_.ptr(), jule::Str("expected trait, use a trait", 27),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_1a7672da0_TypeKind> _145717_dest_t = _1a75d89d6_select_type(_self_, _144535_decl.get()._field_dest);
	if ((_145717_dest_t == nullptr)) {
		return;
	}
	jule::Ptr<_1a641744d_StructIns> _146117_dest_s = _1a767614a_strct(_145717_dest_t.ptr());
	if ((_146117_dest_s == nullptr)) {
		_1a75d488e_push_err(_self_.ptr(), _144535_decl.get()._field_dest.get()._field_token,jule::Str("invalid destination type for impl: @", 36),jule::Slice<jule::Any>({jule::Any(_1a7673257_to_str(_145717_dest_t.ptr()))}));
		_1a75d4bad_push_suggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_1a64147be_Struct> _146817_dest = _146117_dest_s.get()._field_decl;
	if (_1d074d76b_dir(_146817_dest.get()._field_token.get()._field_file.ptr()) != _1d074d76b_dir(_self_.get()._field_file.get()._field_file.ptr())) {
		_1a75d488e_push_err(_self_.ptr(), _144535_decl.get()._field_dest.get()._field_token,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;
	}
	_145017_base.get()._field_implemented = jule::alloc_for_append(_145017_base.get()._field_implemented,1);_145017_base.get()._field_implemented.__push(_146817_dest);
	_146817_dest.get()._field_implements = jule::alloc_for_append(_146817_dest.get()._field_implements,1);_146817_dest.get()._field_implements.__push(_145017_base);
	if ((_144535_decl.get()._field_statics.len() > 0LL)) {
		_1a75d488e_push_err(_self_.ptr(), _144535_decl.get()._field_statics[0LL].get()._field_token,jule::Str("trait implementations cannot implement static field", 51),jule::Slice<jule::Any>());
	}
	{
		
		if ((!(_1a75e026d_check_trait_impl_methods(_self_.ptr(), _145017_base,_144535_decl)))) {
			_case_begin_1a98ea08c:;
			{
				return;
			}
		}
		else if ((!(_1a75e0614_impl_to_struct(_self_, _146817_dest,_144535_decl)))) {
			_case_begin_1a98ea334:;
			{
				return;
			}
		}
		_match_end_1a98e8167:;
	}
}



inline void _1a75e0b0e_impl_struct(jule::Ptr<_1a75d1e74_Sema> _self_,jule::Ptr<_1a746936c_Impl>& _149036_decl) {
	jule::Ptr<_1a7672da0_TypeKind> _149117_dest_t = _1a75d89d6_select_type(_self_, _149036_decl.get()._field_dest);
	if ((_149117_dest_t == nullptr)) {
		return;
	}
	jule::Ptr<_1a641744d_StructIns> _149517_dest_s = _1a767614a_strct(_149117_dest_t.ptr());
	if ((_149517_dest_s == nullptr)) {
		_1a75d488e_push_err(_self_.ptr(), _149036_decl.get()._field_dest.get()._field_token,jule::Str("invalid destination type for impl: @", 36),jule::Slice<jule::Any>({jule::Any(_1a7673257_to_str(_149117_dest_t.ptr()))}));
		_1a75d4bad_push_suggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_1a64147be_Struct> _150217_dest = _149517_dest_s.get()._field_decl;
	if (_1d074d76b_dir(_150217_dest.get()._field_token.get()._field_file.ptr()) != _1d074d76b_dir(_self_.get()._field_file.get()._field_file.ptr())) {
		_1a75d488e_push_err(_self_.ptr(), _149036_decl.get()._field_dest.get()._field_token,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;
	}
	{
		
		if ((!(_1a75e0614_impl_to_struct(_self_, _150217_dest,_149036_decl)))) {
			_case_begin_1a990069c:;
			{
				return;
			}
		}
		_match_end_1a98eee60:;
	}
}



inline void _1a75e0d84_impl_impl(jule::Ptr<_1a75d1e74_Sema> _self_,jule::Ptr<_1a746936c_Impl>& _151534_decl) {
	{
		
		if (_1a7469768_is_trait_impl(_151534_decl.ptr())) {
			_case_begin_1a99015c1:;
			{
				_1a75e0889_impl_trait(_self_, _151534_decl);
			}
		}
		else if (_1a74699cc_is_struct_impl(_151534_decl.ptr())) {
			_case_begin_1a9901648:;
			{
				_1a75e0b0e_impl_struct(_self_, _151534_decl);
			}
		}
		_match_end_1a99014b1:;
	}
}



inline void _1a75e11a3_check_var_decl(jule::Ptr<_1a75d1e74_Sema> _self_,jule::Ptr<_1a75ec478_Var>& _152639_decl,jule::Trait<_1a768b25e_Lookup> _152655_l) {
	if (_1d074a1d5_is_ignore_ident(_152639_decl.get()._field_ident)) {
		_1a75d488e_push_err(_self_.ptr(), _152639_decl.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	}
	if (_1a75eca94_is_type_inferred(_152639_decl.ptr())) {
		if ((!(_1a75ec830_is_initialized(_152639_decl.ptr())))) {
			_1a75d488e_push_err(_self_.ptr(), _152639_decl.get()._field_token,jule::Str("type inferred declarations should have a initializer expression", 63),jule::Slice<jule::Any>());
		}
	} else {
		_1a75d7ed0_check_type(_self_, _152639_decl.get()._field_kind,_152655_l);
	}
	if (_152639_decl.get()._field_constant && _152639_decl.get()._field_reference) {
		_1a75d488e_push_err(_self_.ptr(), _152639_decl.get()._field_token,jule::Str("references cannot be constant", 29),jule::Slice<jule::Any>());
	}
	if ((!(_1a75ec830_is_initialized(_152639_decl.ptr())))) {
		if (_152639_decl.get()._field_constant) {
			_1a75d488e_push_err(_self_.ptr(), _152639_decl.get()._field_token,jule::Str("missing expression for constant variable initialization", 55),jule::Slice<jule::Any>());
		}
		if (_152639_decl.get()._field_statically) {
			_1a75d488e_push_err(_self_.ptr(), _152639_decl.get()._field_token,jule::Str("static variables must be have initialize expression", 51),jule::Slice<jule::Any>());
		}
		if (_152639_decl.get()._field_reference) {
			_1a75d488e_push_err(_self_.ptr(), _152639_decl.get()._field_token,jule::Str("reference variables must be have lvalue initialize expression", 61),jule::Slice<jule::Any>());
		}
	}
}



inline void _1a75e1428_check_global_var_decl(jule::Ptr<_1a75d1e74_Sema> _self_,jule::Ptr<_1a75ec478_Var>& _156046_decl) {
	if (_1a75d54b6_is_duplicated_ident(_self_.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_156046_decl)),_156046_decl.get()._field_ident,_156046_decl.get()._field_cpp_linked)) {
		_1a75d488e_push_err(_self_.ptr(), _156046_decl.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_156046_decl.get()._field_ident)}));
		_1a75d4bad_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	if (_156046_decl.get()._field_cpp_linked && _156046_decl.get()._field_constant) {
		_1a75d488e_push_err(_self_.ptr(), _156046_decl.get()._field_token,jule::Str("cpp linked variables cannot be constant", 39),jule::Slice<jule::Any>());
	}
	if (((!(_156046_decl.get()._field_cpp_linked)) && (!(_156046_decl.get()._field_constant))) && (!(_156046_decl.get()._field_statically))) {
		_1a75d488e_push_err(_self_.ptr(), _156046_decl.get()._field_token,jule::Str("global variables must be static", 31),jule::Slice<jule::Any>());
		_1a75d4bad_push_suggestion(_self_.ptr(), jule::Str("use \"static\" keyword to define", 30),jule::Slice<jule::Any>());
	}
	_1a75d57d5_check_directives(_self_, _156046_decl.get()._field_directives,jule::Any(_156046_decl));
	_1a75e11a3_check_var_decl(_self_, _156046_decl,jule::Trait<_1a768b25e_Lookup>(_self_, 3));
}



inline jule::Bool _1a75e168c_check_global_decls(jule::Ptr<_1a75d1e74_Sema> _self_) {
	jule::Bool _157940_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1a990dec4:;
		if (it != expr.end()) {
			jule::Ptr<_1a75ec478_Var> _1a990e0a1_decl = *it;
			{
				_1a75e1428_check_global_var_decl(_self_, _1a990e0a1_decl);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_157940_ok = false;
					return _157940_ok;
				}
			}
			_iter_next_1a990dec4:;
			++it;
			goto _iter_begin_1a990dec4;
		}
		_iter_end_1a990dec4:;
	}
	_157940_ok = true;
	return _157940_ok;
}



inline jule::Bool _1a75e1a88_check_struct_trait_impl(jule::Ptr<_1a75d1e74_Sema> _self_,jule::Ptr<_1a64147be_Struct>& _159148_strct,jule::Ptr<_1a7465bd7_Trait>& _159169_trt) {
	jule::Bool _159184_ok = jule::Bool();
	{
		auto &expr = _159169_trt.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1a991114c:;
		if (it != expr.end()) {
			jule::Ptr<_1a6426a45_Fn> _1a991124b_tf = *it;
			{
				jule::Bool _159321_exist = false;
				jule::Ptr<_1a6426a45_Fn> _159421_sf = _1a64153b3_find_method(_159148_strct.ptr(), _1a991124b_tf.get()._field_ident,_1a991124b_tf.get()._field_statically);
				jule::Ptr<_1a6429be1_FnIns> _159517_tf_k = _1a75daa71_get_trait_check_fn_kind(_self_, _1a991124b_tf);
				if ((_159421_sf != nullptr)) {
					jule::Ptr<_1a6429be1_FnIns> _159725_sf_k = _1a75daa71_get_trait_check_fn_kind(_self_, _159421_sf);
					_159321_exist=((_159517_tf_k.get()._field_decl.get()._field_public == _159725_sf_k.get()._field_decl.get()._field_public) && (_159517_tf_k.get()._field_decl.get()._field_ident == _159725_sf_k.get()._field_decl.get()._field_ident)) && _1a642a362_equals(_159517_tf_k, jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_159725_sf_k, 1))));
				}
				if (_159321_exist) {
					jule::Ptr<_1d06c9ecd_Directive> _160321_d = _1a766cb36_find_directive(_159421_sf.get()._field_directives,jule::Str("deprecated", 10));
					if ((_160321_d != nullptr)) {
						_1a75d488e_push_err(_self_.ptr(), _160321_d.get()._field_tag,jule::Str("trait implementations cannot have deprecated code", 49),jule::Slice<jule::Any>());
					}
					_159184_ok=false;
				} else {
					
					jule::Str _161025_s = _1a642b2ec_get_kind_str(_159517_tf_k.ptr(), true);
					if (_1a991124b_tf.get()._field_public) {
						(_161025_s).buffer.insert(0, (jule::Str("pub ", 4)));
					}
					_1a75d488e_push_err(_self_.ptr(), _159148_strct.get()._field_token,jule::Str("trait @ derived but not implemented define @", 44),jule::Slice<jule::Any>({jule::Any(_159169_trt.get()._field_ident),jule::Any(_161025_s)}));
					_159184_ok=false;
				}
			}
			_iter_next_1a991114c:;
			++it;
			goto _iter_begin_1a991114c;
		}
		_iter_end_1a991114c:;
	}
	return _159184_ok;
}



inline jule::Bool _1a75e1d85_check_struct_impls(jule::Ptr<_1a75d1e74_Sema> _self_,jule::Ptr<_1a64147be_Struct>& _162143_s) {
	jule::Bool _162157_ok = jule::Bool();
	_162157_ok=true;
	{
		auto &expr = _162143_s.get()._field_implements;
		auto it = expr.begin();
		_iter_begin_1a9918264:;
		if (it != expr.end()) {
			jule::Ptr<_1a7465bd7_Trait> _1a99184c8_trt = *it;
			{
				_162157_ok=_1a75e1a88_check_struct_trait_impl(_self_, _162143_s,_1a99184c8_trt) && _162157_ok;
			}
			_iter_next_1a9918264:;
			++it;
			goto _iter_begin_1a9918264;
		}
		_iter_end_1a9918264:;
	}
	return _162157_ok;
}



inline jule::Bool _1a75e2193_check_struct_fields(jule::Ptr<_1a75d1e74_Sema> _self_,jule::Ptr<_1a64147be_Struct>& _162944_st) {
	jule::Bool _162959_ok = jule::Bool();
	_162959_ok=true;
	jule::Ptr<_1a7682497_TypeChecker> _163217_tc = jule::new_ptr<_1a7682497_TypeChecker>(_1a7682497_TypeChecker(_self_,jule::Trait<_1a768b25e_Lookup>(_self_, 3),jule::new_ptr<_1a768181a_Referencer>(_1a768181a_Referencer(_162944_st.get()._field_ident,jule::Any(jule::Any(_162944_st)),nullptr)),jule::Ptr<_1d0747985_Token>(),_162944_st.get()._field_generics,jule::Slice<jule::Ptr<_1a7672168_TypeAlias>>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a7672168_TypeAlias>(),jule::Slice<jule::Ptr<_1a7672168_TypeAlias>>(),jule::Bool()));
	jule::I64 _164213_n = _162944_st.get()._field_instances.len();
	{
		auto &expr = _162944_st.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1a9919d04:;
		if (it != expr.end()) {
			jule::Ptr<_1a6363e9e_Field> _1a991aee2_f = *it;
			{
				_1a991aee2_f.get()._field_owner=_162944_st;
				_1a991aee2_f.get()._field_kind.get()._field_kind=_1a7688aa8_check_decl(_163217_tc.ptr(), _1a991aee2_f.get()._field_kind.get()._field_decl);
				_162959_ok=(_1a991aee2_f.get()._field_kind.get()._field_kind != nullptr) && _162959_ok;
				{
					auto &expr = _162944_st.get()._field_fields;
					auto it = expr.begin();
					_iter_begin_1a991c686:;
					if (it != expr.end()) {
						jule::Ptr<_1a6363e9e_Field> _1a991c70d_cf = *it;
						{
							if (_1a991aee2_f == _1a991c70d_cf) {
								goto _iter_end_1a991c686;
							} else if (_1a991aee2_f.get()._field_ident == _1a991c70d_cf.get()._field_ident) {
								_1a75d488e_push_err(_self_.ptr(), _1a991aee2_f.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_1a991aee2_f.get()._field_ident)}));
								_1a75d4bad_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								_162959_ok=false;
							}
						}
						_iter_next_1a991c686:;
						++it;
						goto _iter_begin_1a991c686;
					}
					_iter_end_1a991c686:;
				}
			}
			_iter_next_1a9919d04:;
			++it;
			goto _iter_begin_1a9919d04;
		}
		_iter_end_1a9919d04:;
	}
	if (_162959_ok && (_164213_n != static_cast<jule::I64>(static_cast<jule::I64>(_162944_st.get()._field_instances.len())))) {
		_163217_tc.get()._field_referencer=nullptr;
		_162944_st.get()._field_instances=_162944_st.get()._field_instances.slice(0LL,_164213_n);
		{
			auto &expr = _162944_st.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1a991e776:;
			if (it != expr.end()) {
				jule::Ptr<_1a6363e9e_Field> _1a991eb0b_f = *it;
				{
					_1a991eb0b_f.get()._field_kind.get()._field_kind=_1a7688aa8_check_decl(_163217_tc.ptr(), _1a991eb0b_f.get()._field_kind.get()._field_decl);
				}
				_iter_next_1a991e776:;
				++it;
				goto _iter_begin_1a991e776;
			}
			_iter_end_1a991e776:;
		}
	}
	return _162959_ok;
}



inline jule::Bool _1a75e24e5_check_struct_decl_methods(jule::Ptr<_1a75d1e74_Sema> _self_,jule::Ptr<_1a64147be_Struct>& _167150_s) {
	jule::Bool _167164_ok = jule::Bool();
	{
		auto &expr = _167150_s.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1a99217cd:;
		if (it != expr.end()) {
			jule::Ptr<_1a6426a45_Fn> _1a99218cc_m = *it;
			{
				_1a75de06e_check_fn_decl_types(_self_, _1a99218cc_m);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_167164_ok = false;
					return _167164_ok;
				}
			}
			_iter_next_1a99217cd:;
			++it;
			goto _iter_begin_1a99217cd;
		}
		_iter_end_1a99217cd:;
	}
	_167164_ok = true;
	return _167164_ok;
}



inline void _1a75e2759_check_struct_decl(jule::Ptr<_1a75d1e74_Sema> _self_,jule::Ptr<_1a64147be_Struct>& _168142_s) {
	if (_1d074a1d5_is_ignore_ident(_168142_s.get()._field_ident)) {
		_1a75d488e_push_err(_self_.ptr(), _168142_s.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1a75d54b6_is_duplicated_ident(_self_.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_168142_s)),_168142_s.get()._field_ident,_168142_s.get()._field_cpp_linked)) {
		_1a75d488e_push_err(_self_.ptr(), _168142_s.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_168142_s.get()._field_ident)}));
		_1a75d4bad_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	_1a75d57d5_check_directives(_self_, _168142_s.get()._field_directives,jule::Any(_168142_s));
	_168142_s.get()._field_sema=_self_;
	{
		
		if ((!(_1a75dd667_check_decl_generics(_self_.ptr(), _168142_s.get()._field_generics)))) {
			_case_begin_1a992acb0:;
		}
		else if ((!(_1a75e2193_check_struct_fields(_self_, _168142_s)))) {
			_case_begin_1a992ad26:;
		}
		else if ((!(_1a75e24e5_check_struct_decl_methods(_self_, _168142_s)))) {
			_case_begin_1a992ad8c:;
		}
		else if ((!(_1a75e1d85_check_struct_impls(_self_, _168142_s)))) {
			_case_begin_1a992ae03:;
		}
		_match_end_1a992aba0:;
	}
}



inline jule::Bool _1a75e29bd_check_struct_decls(jule::Ptr<_1a75d1e74_Sema> _self_) {
	jule::Bool _170140_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_1a992d09d:;
		if (it != expr.end()) {
			jule::Ptr<_1a64147be_Struct> _1a992d17a_s = *it;
			{
				_1a75e2759_check_struct_decl(_self_, _1a992d17a_s);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_170140_ok = false;
					return _170140_ok;
				}
			}
			_iter_next_1a992d09d:;
			++it;
			goto _iter_begin_1a992d09d;
		}
		_iter_end_1a992d09d:;
	}
	_170140_ok = true;
	return _170140_ok;
}



inline void _1a75e2c43_check_fn_decl(jule::Ptr<_1a75d1e74_Sema> _self_,jule::Ptr<_1a6426a45_Fn>& _171438_f) {
	if (_1d074a1d5_is_ignore_ident(_171438_f.get()._field_ident)) {
		_1a75d488e_push_err(_self_.ptr(), _171438_f.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	}
	_1a75d57d5_check_directives(_self_, _171438_f.get()._field_directives,jule::Any(_171438_f));
	_171438_f.get()._field_sema=_self_;
	_1a75de338_check_fn_decl_prototype(_self_, _171438_f);
	if (_1a75d54b6_is_duplicated_ident(_self_.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_171438_f)),_171438_f.get()._field_ident,_171438_f.get()._field_cpp_linked)) {
		if ((_171438_f.get()._field_ident == jule::Str("init", 4))) {
			jule::Ptr<_1a6426a45_Fn> _172621_init = _1a75d375b_find_fn(_self_.ptr(), jule::Str("init", 4),false);
			if ((_172621_init != nullptr)) {
				return;
			}
		}
		_1a75d488e_push_err(_self_.ptr(), _171438_f.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_171438_f.get()._field_ident)}));
		_1a75d4bad_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
}



inline jule::Bool _1a75e2ea7_check_fn_decls(jule::Ptr<_1a75d1e74_Sema> _self_) {
	jule::Bool _173736_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_funcs;
		auto it = expr.begin();
		_iter_begin_1a993459e:;
		if (it != expr.end()) {
			jule::Ptr<_1a6426a45_Fn> _1a993467b_f = *it;
			{
				_1a75e2c43_check_fn_decl(_self_, _1a993467b_f);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_173736_ok = false;
					return _173736_ok;
				}
			}
			_iter_next_1a993459e:;
			++it;
			goto _iter_begin_1a993459e;
		}
		_iter_end_1a993459e:;
	}
	_173736_ok = true;
	return _173736_ok;
}



inline void _1a75e3370_push_cycle_error(_1a75d1e74_Sema* _self_,jule::Ptr<_1a64147be_Struct>& _174932_st1,jule::Ptr<_1a64147be_Struct>& _174947_st2,jule::Str& _174966_message) {
	
	jule::Str _175213_refers_to = _1d0019664_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(_174932_st1.get()._field_ident),jule::Any(_174947_st2.get()._field_ident)}));
	(_174966_message).buffer.insert(0, (((_1d0940e58_repeat(jule::Str(" ", 1),4LL) + _175213_refers_to) + jule::Str("\n", 1))));
}



inline jule::Bool _1a75e37c1_check_cross_cycle(_1a75d1e74_Sema* _self_,jule::Ptr<_1a64147be_Struct>& _175633_st1,jule::Ptr<_1a64147be_Struct>& _175648_st2,jule::Str& _175667_message) {
	{
		auto &expr = _175648_st2.get()._field_uses;
		auto it = expr.begin();
		_iter_begin_1a993898d:;
		if (it != expr.end()) {
			jule::Ptr<_1a64147be_Struct> &_1a9938a8c_u = *it;
			{
				if (_1a9938a8c_u == _175633_st1) {
					_1a75e3370_push_cycle_error(&(*_self_), _175648_st2,_1a9938a8c_u,_175667_message);
					return false;
				}
				if ((!(_1a75e37c1_check_cross_cycle(&(*_self_), _175633_st1,_1a9938a8c_u,_175667_message)))) {
					_1a75e3370_push_cycle_error(&(*_self_), _175648_st2,_1a9938a8c_u,_175667_message);
					return false;
				}
			}
			_iter_next_1a993898d:;
			++it;
			goto _iter_begin_1a993898d;
		}
		_iter_end_1a993898d:;
	}
	return true;
}



inline jule::Bool _1a75e3c88_check_struct_derive_illegal_cycles(_1a75d1e74_Sema* _self_,jule::Str _177253_derive,jule::Ptr<_1a64147be_Struct>& _177267_st1,jule::Ptr<_1a7672da0_TypeKind>& _177286_k) {
	jule::Bool _1772102_ok = jule::Bool();
	jule::Ptr<_1a64147be_Struct> _177317_st2 = _1a76811aa_get_struct_from_kind(_177286_k);
	if ((_177317_st2 == nullptr)) {
		_1772102_ok = true;
		return _1772102_ok;
	}
	if (_177267_st1 == _177317_st2) {
		_1a75d488e_push_err(&(*_self_), _177267_st1.get()._field_token,jule::Str("illegal cycle for derive @, struct @ refers to itself", 53),jule::Slice<jule::Any>({jule::Any(_177253_derive),jule::Any(_177267_st1.get()._field_ident)}));
		_1772102_ok = false;
		return _1772102_ok;
	}
	jule::Str _178517_message = jule::Str();
	if ((!(_1a75e37c1_check_cross_cycle(&(*_self_), _177267_st1,_177317_st2,_178517_message)))) {
		jule::Str _178821_err_msg = _178517_message;
		_178517_message=jule::Str();
		_1a75e3370_push_cycle_error(&(*_self_), _177267_st1,_177317_st2,_178517_message);
		_178821_err_msg=_178821_err_msg + _178517_message;
		_1a75d488e_push_err(&(*_self_), _177267_st1.get()._field_token,jule::Str("illegal cross cycle for derive @;\n@", 35),jule::Slice<jule::Any>({jule::Any(_177253_derive),jule::Any(_178821_err_msg)}));
		_1772102_ok = false;
		return _1772102_ok;
	}
	_1772102_ok = true;
	return _1772102_ok;
}



inline jule::Bool _1a75e40a7_check_struct_ins_derive_clone(_1a75d1e74_Sema* _self_,jule::Ptr<_1a641744d_StructIns> _179952_st) {
	jule::Bool _179970_ok = jule::Bool();
	if ((!(_1a64160ea_is_derives(_179952_st.get()._field_decl.ptr(), jule::Str("Clone", 5))))) {
		_179970_ok = true;
		return _179970_ok;
	}
	{
		auto &expr = _179952_st.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1a9941435:;
		if (it != expr.end()) {
			jule::Ptr<_1a6416ae0_FieldIns> _1a9941633_f = *it;
			{
				if ((_1a9941633_f.get()._field_kind == nullptr)) {
					goto _iter_next_1a9941435;
				}
				if ((!(_1a7674984_supports_cloning(_1a9941633_f.get()._field_kind.ptr())))) {
					_1a75d488e_push_err(&(*_self_), _179952_st.get()._field_decl.get()._field_token,jule::Str("type @ is not compatible to derive @", 36),jule::Slice<jule::Any>({jule::Any(_1a7673257_to_str(_1a9941633_f.get()._field_kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					_179970_ok = false;
					return _179970_ok;
				}
				if ((!(_1a75e3c88_check_struct_derive_illegal_cycles(&(*_self_), jule::Str("Clone", 5),_179952_st.get()._field_decl,_1a9941633_f.get()._field_kind)))) {
					_179970_ok = false;
					return _179970_ok;
				}
			}
			_iter_next_1a9941435:;
			++it;
			goto _iter_begin_1a9941435;
		}
		_iter_end_1a9941435:;
	}
	_179970_ok = true;
	return _179970_ok;
}



inline jule::Bool _1a75e43e8_check_struct_derive_clone(_1a75d1e74_Sema* _self_,jule::Ptr<_1a64147be_Struct>& _182249_st) {
	return _1a75e40a7_check_struct_ins_derive_clone(&(*_self_), _1a6414bed_instance(_182249_st));
}



inline jule::Bool _1a75e464b_check_file_derives(_1a75d1e74_Sema* _self_) {
	jule::Bool _182639_ok = jule::Bool();
	{
		auto &expr = (*_self_)._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_1a9945abb:;
		if (it != expr.end()) {
			jule::Ptr<_1a64147be_Struct> _1a9945b98_st = *it;
			{
				_182639_ok=_1a75e43e8_check_struct_derive_clone(&(*_self_), _1a9945b98_st);
				if ((!(_182639_ok))) {
					goto _iter_end_1a9945abb;
				}
			}
			_iter_next_1a9945abb:;
			++it;
			goto _iter_begin_1a9945abb;
		}
		_iter_end_1a9945abb:;
	}
	return _182639_ok;
}



inline void _1a75e4827_check_package_derives(_1a75d1e74_Sema* _self_) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_1a9946b22:;
		if (it != expr.end()) {
			jule::Ptr<_1a76439db_SymbolTable> _1a9946d31_f = *it;
			{
				_1a75d44c6_set_current_file(&(*_self_), _1a9946d31_f);
				jule::Bool _184117_ok = _1a75e464b_check_file_derives(&(*_self_));
				if ((!(_184117_ok))) {
					return;
				}
			}
			_iter_next_1a9946b22:;
			++it;
			goto _iter_begin_1a9946b22;
		}
		_iter_end_1a9946b22:;
	}
}



inline void _1a75e4a03_check_package_decls(jule::Ptr<_1a75d1e74_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1a9948393:;
		if (it != expr.end()) {
			jule::Ptr<_1a76439db_SymbolTable> _1a99485a2_f = *it;
			{
				_1a75d44c6_set_current_file(_self_.ptr(), _1a99485a2_f);
				if ((!(_1a75dc600_check_type_alias_decls(_self_)))) {
					return;
				}
			}
			_iter_next_1a9948393:;
			++it;
			goto _iter_begin_1a9948393;
		}
		_iter_end_1a9948393:;
	}
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1a994877d:;
		if (it != expr.end()) {
			jule::Ptr<_1a76439db_SymbolTable> _1a994887c_f = *it;
			{
				_1a75d44c6_set_current_file(_self_.ptr(), _1a994887c_f);
				if ((!(_1a75ded72_check_trait_decls(_self_)))) {
					return;
				}
			}
			_iter_next_1a994877d:;
			++it;
			goto _iter_begin_1a994877d;
		}
		_iter_end_1a994877d:;
	}
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1a994966e:;
		if (it != expr.end()) {
			jule::Ptr<_1a76439db_SymbolTable> _1a994974b_f = *it;
			{
				_1a75d44c6_set_current_file(_self_.ptr(), _1a994974b_f);
				if ((!(_1a75e168c_check_global_decls(_self_)))) {
					return;
				}
			}
			_iter_next_1a994966e:;
			++it;
			goto _iter_begin_1a994966e;
		}
		_iter_end_1a994966e:;
	}
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1a994a40b:;
		if (it != expr.end()) {
			jule::Ptr<_1a76439db_SymbolTable> _1a994a54e_f = *it;
			{
				_1a75d44c6_set_current_file(_self_.ptr(), _1a994a54e_f);
				if ((!(_1a75e2ea7_check_fn_decls(_self_)))) {
					return;
				}
			}
			_iter_next_1a994a40b:;
			++it;
			goto _iter_begin_1a994a40b;
		}
		_iter_end_1a994a40b:;
	}
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1a994b297:;
		if (it != expr.end()) {
			jule::Ptr<_1a76439db_SymbolTable> _1a994b374_f = *it;
			{
				_1a75d44c6_set_current_file(_self_.ptr(), _1a994b374_f);
				if ((!(_1a75e29bd_check_struct_decls(_self_)))) {
					return;
				}
			}
			_iter_next_1a994b297:;
			++it;
			goto _iter_begin_1a994b297;
		}
		_iter_end_1a994b297:;
	}
	_1a75e4827_check_package_derives(_self_.ptr());
}



inline void _1a75e4d66_check_data_for_type_inference(_1a75d1e74_Sema* _self_,jule::Ptr<_1a7648b67_Data>& _188949_d,jule::Ptr<_1d0747985_Token>& _188960_err_token) {
	{
		
		if (_1a7649052_is_nil(_188949_d.ptr())) {
			_case_begin_1a994db6d:;
			{
				_1a75d488e_push_err(&(*_self_), _188960_err_token,jule::Str("nil is cannot use with type inferred definitions", 48),jule::Slice<jule::Any>());
			}
		}
		else if (_1a76492b6_is_void(_188949_d.ptr())) {
			_case_begin_1a994dbe5:;
			{
				_1a75d488e_push_err(&(*_self_), _188960_err_token,jule::Str("void data is cannot use for type inferred definitions", 53),jule::Slice<jule::Any>());
			}
		}
		else if (_188949_d.get()._field_kind.get()._field_variadic) {
			_case_begin_1a994dc6c:;
			{
				_1a75d488e_push_err(&(*_self_), _188960_err_token,jule::Str("invalid expression for type inference", 37),jule::Slice<jule::Any>());
			}
		}
		_match_end_1a994da6e:;
	}
}



inline void _1a75e50ca_check_var(jule::Ptr<_1a75d1e74_Sema> _self_,jule::Ptr<_1a75ec478_Var>& _190034_v) {
	if (_190034_v.get()._field_cpp_linked) {
		return;
	}
	if (_1a75eca94_is_type_inferred(_190034_v.ptr())) {
		_190034_v.get()._field_kind=jule::new_ptr<_1a7676c3e_TypeSymbol>(_1a7676c3e_TypeSymbol(jule::Ptr<_1d0759c1c_TypeDecl>(),_190034_v.get()._field_value.get()._field_data.get()._field_kind));
		_1a75e4d66_check_data_for_type_inference(_self_.ptr(), _190034_v.get()._field_value.get()._field_data,_190034_v.get()._field_value.get()._field_expr.get()._field_token);
	} else {
		jule::Ptr<_1a767d718_Arr> _191121_arr = _1a767590d_arr(_190034_v.get()._field_kind.get()._field_kind.ptr());
		if ((_191121_arr != nullptr)) {
			if (_191121_arr.get()._field_auto) {
				jule::Ptr<_1a767d718_Arr> _191425_data_arr = _1a767590d_arr(_190034_v.get()._field_value.get()._field_data.get()._field_kind.ptr());
				if ((_191425_data_arr != nullptr)) {
					_191121_arr.get()._field_n=_191425_data_arr.get()._field_n;
				}
			}
		}
		_1a75d9ae7_check_assign_type(_self_, _190034_v.get()._field_reference,_190034_v.get()._field_kind.get()._field_kind,_190034_v.get()._field_value.get()._field_data,_190034_v.get()._field_value.get()._field_expr.get()._field_token);
	}
	if (_190034_v.get()._field_reference && (!(_1a768052d_is_valid_for_ref(_190034_v.get()._field_kind.get()._field_kind)))) {
		_1a75d488e_push_err(_self_.ptr(), _190034_v.get()._field_token,jule::Str("references cannot points to type @", 34),jule::Slice<jule::Any>({jule::Any(_1a7673257_to_str(_190034_v.get()._field_kind.get()._field_kind.ptr()))}));
	}
	_1a75db91d_check_validity_for_init_expr(_self_, _190034_v.get()._field_mutable,_190034_v.get()._field_reference,_190034_v.get()._field_kind.get()._field_kind,_190034_v.get()._field_value.get()._field_data,_190034_v.get()._field_value.get()._field_expr.get()._field_token);
	if (_190034_v.get()._field_constant) {
		if ((!(_1a764952a_is_const(_190034_v.get()._field_value.get()._field_data.ptr())))) {
			_1a75d488e_push_err(_self_.ptr(), _190034_v.get()._field_value.get()._field_expr.get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		}
	} else {
		_190034_v.get()._field_value.get()._field_data.get()._field_constant=nullptr;
	}
	if ((_1a7676887_tup(_190034_v.get()._field_kind.get()._field_kind.ptr()) != nullptr)) {
		_190034_v.get()._field_kind.get()._field_kind=nullptr;
	}
}



inline void _1a75e53e9_check_type_var(jule::Ptr<_1a75d1e74_Sema> _self_,jule::Ptr<_1a75ec478_Var>& _194939_decl,jule::Trait<_1a768b25e_Lookup> _194955_l) {
	if (_194939_decl.get()._field_cpp_linked || (!(_1a75ec830_is_initialized(_194939_decl.ptr())))) {
		return;
	}
	jule::Ptr<_1a764a6d5_Eval> _195417_eval = nullptr;
	if ((_194939_decl.get()._field_kind != nullptr)) {
		_195417_eval=_1a75d8e37_evalpd(_self_, _194955_l,_194939_decl.get()._field_kind.get()._field_kind,_194939_decl);
	} else {
		_195417_eval=_1a75d8e37_evalpd(_self_, _194955_l,nullptr,_194939_decl);
	}
	_195417_eval.get()._field_immutable=(!(_194939_decl.get()._field_mutable));
	_194939_decl.get()._field_value.get()._field_data=_1a7664d92_eval_expr(_195417_eval, _194939_decl.get()._field_value.get()._field_expr);
	if ((_194939_decl.get()._field_value.get()._field_data == nullptr)) {
		return;
	}
	_1a75e50ca_check_var(_self_, _194939_decl);
}



inline void _1a75e55c5_check_global_types(jule::Ptr<_1a75d1e74_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1a995e2bb:;
		if (it != expr.end()) {
			jule::Ptr<_1a75ec478_Var> _1a995e398_decl = *it;
			{
				if ((_1a75ec830_is_initialized(_1a995e398_decl.ptr()) && (_1a995e398_decl.get()._field_value.get()._field_data == nullptr)) || (_1a75eca94_is_type_inferred(_1a995e398_decl.ptr()) && (_1a995e398_decl.get()._field_kind.get()._field_kind == nullptr))) {
					_1a75e53e9_check_type_var(_self_, _1a995e398_decl,jule::Trait<_1a768b25e_Lookup>(_self_, 3));
				}
			}
			_iter_next_1a995e2bb:;
			++it;
			goto _iter_begin_1a995e2bb;
		}
		_iter_end_1a995e2bb:;
	}
}



inline jule::Ptr<_1a6429be1_FnIns> _1a75e597c_ready_to_check_fn(jule::Ptr<_1a75d1e74_Sema> _self_,jule::Ptr<_1a641744d_StructIns>& _198142_s,jule::Ptr<_1a6426a45_Fn>& _198162_f) {
	jule::Ptr<_1a6429be1_FnIns> _198217_ins = _1a6428690_instance(_198162_f);
	if ((_198162_f.get()._field_instances.len() != 0LL)) {
		return _198217_ins;
	}
	_198217_ins.get()._field_owner=_198142_s;
	_1a642899d_append_instance(_198162_f.ptr(), _198217_ins);
	_1a75dad6d_reload_fn_ins_types(_self_, _198217_ins);
	_198217_ins.get()._field_reloaded=true;
	return _198217_ins;
}



inline void _1a75e5c9b_check_type_method(jule::Ptr<_1a75d1e74_Sema> _self_,jule::Ptr<_1a641744d_StructIns>& _199342_s,jule::Ptr<_1a6426a45_Fn>& _199362_f) {
	if (_199362_f.get()._field_cpp_linked) {
		return;
	}
	if ((_199362_f.get()._field_generics.len() > 0LL)) {
		return;
	}
	_1a75e597c_ready_to_check_fn(_self_, _199342_s,_199362_f);
	{
		auto &expr = _199362_f.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1a99651b2:;
		if (it != expr.end()) {
			jule::Ptr<_1a6429be1_FnIns> _1a9965206_ins = *it;
			{
				if ((_1a9965206_ins.get()._field_scope.get()._field_stmts.len() > 0LL)) {
					goto _iter_next_1a99651b2;
				}
				_1a75e8001_check_fn_ins(_self_, _1a9965206_ins);
			}
			_iter_next_1a99651b2:;
			++it;
			goto _iter_begin_1a99651b2;
		}
		_iter_end_1a99651b2:;
	}
}



inline void _1a75e6021_check_field_defaults(jule::Ptr<_1a75d1e74_Sema> _self_,jule::Ptr<_1a641744d_StructIns>& _201345_ins) {
	jule::Ptr<_1a764a6d5_Eval> _201417_eval = _1a75d95ec_eval(_self_, jule::Trait<_1a768b25e_Lookup>(_self_, 3));
	{
		auto &expr = _201345_ins.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1a9967538:;
		if (it != expr.end()) {
			jule::Ptr<_1a6416ae0_FieldIns> _1a9967736_f = *it;
			{
				if ((_1a9967736_f.get()._field_decl.get()._field_default == nullptr)) {
					goto _iter_next_1a9967538;
				}
				_201417_eval.get()._field_prefix=_1a9967736_f.get()._field_kind;
				_201417_eval.get()._field_field=_1a9967736_f;
				_1a9967736_f.get()._field_default=_1a7664d92_eval_expr(_201417_eval, _1a9967736_f.get()._field_decl.get()._field_default);
				if ((_1a9967736_f.get()._field_default == nullptr)) {
					goto _iter_next_1a9967538;
				}
				
				_1a75d9ae7_check_assign_type(_self_, false,_1a9967736_f.get()._field_kind,_1a9967736_f.get()._field_default,_1a9967736_f.get()._field_decl.get()._field_default.get()._field_token);
			}
			_iter_next_1a9967538:;
			++it;
			goto _iter_begin_1a9967538;
		}
		_iter_end_1a9967538:;
	}
}



inline jule::Ptr<_1a6429be1_FnIns> _1a75e6472_check_struct_ins_op(jule::Ptr<_1a75d1e74_Sema> _self_,jule::Ptr<_1a641744d_StructIns>& _203544_s,jule::Ptr<_1a6426a45_Fn>& _203564_f,jule::Fn<jule::Bool(jule::Ptr<_1a6426a45_Fn>)> _203572_p) {
	if ((_203564_f == nullptr) || (_203564_f.get()._field_generics.len() > 0LL)) {
		return nullptr;
	}
	jule::Ptr<_1a6429be1_FnIns> _203917_ins = _1a75e597c_ready_to_check_fn(_self_, _203544_s,_203564_f);
	if (_203572_p(_203564_f)) {
		return _203917_ins;
	}
	return nullptr;
}



inline void _1a75e66e7_check_struct_ins(jule::Ptr<_1a75d1e74_Sema> _self_,jule::Ptr<_1a641744d_StructIns>& _204641_s) {
	_1a75e6021_check_field_defaults(_self_, _204641_s);
	{
		auto &expr = _204641_s.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1a996dce2:;
		if (it != expr.end()) {
			jule::Ptr<_1a6426a45_Fn> _1a996dde1_f = *it;
			{
				_1a75e5c9b_check_type_method(_self_, _204641_s,_1a996dde1_f);
			}
			_iter_next_1a996dce2:;
			++it;
			goto _iter_begin_1a996dce2;
		}
		_iter_end_1a996dce2:;
	}
}



inline void _1a75e696c_check_type_struct(jule::Ptr<_1a75d1e74_Sema> _self_,jule::Ptr<_1a64147be_Struct>& _205342_s) {
	if (_205342_s.get()._field_cpp_linked) {
		return;
	}
	if ((_205342_s.get()._field_generics.len() > 0LL)) {
		return;
	}
	if ((_205342_s.get()._field_instances.len() == 0LL)) {
		jule::Ptr<_1a641744d_StructIns> _206421_ins = _1a6414bed_instance(_205342_s);
		_206421_ins.get()._field_checked=true;
		_1a641500b_append_instance(_205342_s.ptr(), _206421_ins);
	}
	{
		auto &expr = _205342_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1a9971c4b:;
		if (it != expr.end()) {
			jule::Ptr<_1a641744d_StructIns> _1a9970b4b_ins = *it;
			{
				_1a75e66e7_check_struct_ins(_self_, _1a9970b4b_ins);
			}
			_iter_next_1a9971c4b:;
			++it;
			goto _iter_begin_1a9971c4b;
		}
		_iter_end_1a9971c4b:;
	}
}



inline void _1a75e6b48_check_struct_types(jule::Ptr<_1a75d1e74_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_1a9972c19:;
		if (it != expr.end()) {
			jule::Ptr<_1a64147be_Struct> _1a9972ce6_s = *it;
			{
				_1a75e696c_check_type_struct(_self_, _1a9972ce6_s);
			}
			_iter_next_1a9972c19:;
			++it;
			goto _iter_begin_1a9972c19;
		}
		_iter_end_1a9972c19:;
	}
}



inline void _1a75e6e12_check_struct_ins_operators(jule::Ptr<_1a75d1e74_Sema> _self_,jule::Ptr<_1a641744d_StructIns> _208050_s) {
	{
		auto &expr = _208050_s.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1a997405b:;
		if (it != expr.end()) {
			jule::Ptr<_1a6426a45_Fn> _1a997415a_m = *it;
			{
				{
					auto &_match_expr{ _1a997415a_m.get()._field_ident };
					
					if (_match_expr == jule::Str("eq", 2)) {
						_case_begin_1a9974534:;
						{
							_208050_s.get()._field_operators._field_eq=_1a75e6472_check_struct_ins_op(_self_, _208050_s,_1a997415a_m,jule::Fn<jule::Bool(jule::Ptr<_1a6426a45_Fn>)>([=](jule::Ptr<_1a6426a45_Fn> _208468_f) mutable -> jule::Bool {
								return static__1a75ede80_eq(_208468_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("gt", 2)) {
						_case_begin_1a9974a73:;
						{
							_208050_s.get()._field_operators._field_gt=_1a75e6472_check_struct_ins_op(_self_, _208050_s,_1a997415a_m,jule::Fn<jule::Bool(jule::Ptr<_1a6426a45_Fn>)>([=](jule::Ptr<_1a6426a45_Fn> _208668_f) mutable -> jule::Bool {
								return static__1a75ee227_gt(_208668_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("gt_eq", 5)) {
						_case_begin_1a9974ad9:;
						{
							_208050_s.get()._field_operators._field_gt_eq=_1a75e6472_check_struct_ins_op(_self_, _208050_s,_1a997415a_m,jule::Fn<jule::Bool(jule::Ptr<_1a6426a45_Fn>)>([=](jule::Ptr<_1a6426a45_Fn> _208871_f) mutable -> jule::Bool {
								return static__1a75ee4be_gt_eq(_208871_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("lt", 2)) {
						_case_begin_1a9974b61:;
						{
							_208050_s.get()._field_operators._field_lt=_1a75e6472_check_struct_ins_op(_self_, _208050_s,_1a997415a_m,jule::Fn<jule::Bool(jule::Ptr<_1a6426a45_Fn>)>([=](jule::Ptr<_1a6426a45_Fn> _209068_f) mutable -> jule::Bool {
								return static__1a75ee766_lt(_209068_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("lt_eq", 5)) {
						_case_begin_1a9974bd8:;
						{
							_208050_s.get()._field_operators._field_lt_eq=_1a75e6472_check_struct_ins_op(_self_, _208050_s,_1a997415a_m,jule::Fn<jule::Bool(jule::Ptr<_1a6426a45_Fn>)>([=](jule::Ptr<_1a6426a45_Fn> _209271_f) mutable -> jule::Bool {
								return static__1a75eea0d_lt_eq(_209271_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("shl", 3)) {
						_case_begin_1a9974c60:;
						{
							_208050_s.get()._field_operators._field_shl=_1a75e6472_check_struct_ins_op(_self_, _208050_s,_1a997415a_m,jule::Fn<jule::Bool(jule::Ptr<_1a6426a45_Fn>)>([=](jule::Ptr<_1a6426a45_Fn> _209469_f) mutable -> jule::Bool {
								return static__1a76000e6_shl(_209469_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("shr", 3)) {
						_case_begin_1a9974cd7:;
						{
							_208050_s.get()._field_operators._field_shr=_1a75e6472_check_struct_ins_op(_self_, _208050_s,_1a997415a_m,jule::Fn<jule::Bool(jule::Ptr<_1a6426a45_Fn>)>([=](jule::Ptr<_1a6426a45_Fn> _209669_f) mutable -> jule::Bool {
								return static__1a760038d_shr(_209669_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("add", 3)) {
						_case_begin_1a9974d5e:;
						{
							_208050_s.get()._field_operators._field_add=_1a75e6472_check_struct_ins_op(_self_, _208050_s,_1a997415a_m,jule::Fn<jule::Bool(jule::Ptr<_1a6426a45_Fn>)>([=](jule::Ptr<_1a6426a45_Fn> _209869_f) mutable -> jule::Bool {
								return static__1a7600635_add(_209869_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("sub", 3)) {
						_case_begin_1a9974dd6:;
						{
							_208050_s.get()._field_operators._field_sub=_1a75e6472_check_struct_ins_op(_self_, _208050_s,_1a997415a_m,jule::Fn<jule::Bool(jule::Ptr<_1a6426a45_Fn>)>([=](jule::Ptr<_1a6426a45_Fn> _210069_f) mutable -> jule::Bool {
								return static__1a76008cc_sub(_210069_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("div", 3)) {
						_case_begin_1a9974e5d:;
						{
							_208050_s.get()._field_operators._field_div=_1a75e6472_check_struct_ins_op(_self_, _208050_s,_1a997415a_m,jule::Fn<jule::Bool(jule::Ptr<_1a6426a45_Fn>)>([=](jule::Ptr<_1a6426a45_Fn> _210269_f) mutable -> jule::Bool {
								return static__1a7600b74_div(_210269_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("mul", 3)) {
						_case_begin_1a9974ed5:;
						{
							_208050_s.get()._field_operators._field_mul=_1a75e6472_check_struct_ins_op(_self_, _208050_s,_1a997415a_m,jule::Fn<jule::Bool(jule::Ptr<_1a6426a45_Fn>)>([=](jule::Ptr<_1a6426a45_Fn> _210469_f) mutable -> jule::Bool {
								return static__1a7600e1b_mul(_210469_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("mod", 3)) {
						_case_begin_1a997505c:;
						{
							_208050_s.get()._field_operators._field_mod=_1a75e6472_check_struct_ins_op(_self_, _208050_s,_1a997415a_m,jule::Fn<jule::Bool(jule::Ptr<_1a6426a45_Fn>)>([=](jule::Ptr<_1a6426a45_Fn> _210669_f) mutable -> jule::Bool {
								return static__1a76011b3_mod(_210669_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_and", 7)) {
						_case_begin_1a99750d4:;
						{
							_208050_s.get()._field_operators._field_bit_and=_1a75e6472_check_struct_ins_op(_self_, _208050_s,_1a997415a_m,jule::Fn<jule::Bool(jule::Ptr<_1a6426a45_Fn>)>([=](jule::Ptr<_1a6426a45_Fn> _210873_f) mutable -> jule::Bool {
								return static__1a760145a_bit_and(_210873_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_or", 6)) {
						_case_begin_1a997515b:;
						{
							_208050_s.get()._field_operators._field_bit_or=_1a75e6472_check_struct_ins_op(_self_, _208050_s,_1a997415a_m,jule::Fn<jule::Bool(jule::Ptr<_1a6426a45_Fn>)>([=](jule::Ptr<_1a6426a45_Fn> _211072_f) mutable -> jule::Bool {
								return static__1a7601702_bit_or(_211072_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_xor", 7)) {
						_case_begin_1a99751d3:;
						{
							_208050_s.get()._field_operators._field_bit_xor=_1a75e6472_check_struct_ins_op(_self_, _208050_s,_1a997415a_m,jule::Fn<jule::Bool(jule::Ptr<_1a6426a45_Fn>)>([=](jule::Ptr<_1a6426a45_Fn> _211273_f) mutable -> jule::Bool {
								return static__1a7601999_bit_xor(_211273_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("neg", 3)) {
						_case_begin_1a997525a:;
						{
							_208050_s.get()._field_operators._field_neg=_1a75e6472_check_struct_ins_op(_self_, _208050_s,_1a997415a_m,jule::Fn<jule::Bool(jule::Ptr<_1a6426a45_Fn>)>([=](jule::Ptr<_1a6426a45_Fn> _211469_f) mutable -> jule::Bool {
								return static__1a7602082_neg(_211469_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("pos", 3)) {
						_case_begin_1a99752d2:;
						{
							_208050_s.get()._field_operators._field_pos=_1a75e6472_check_struct_ins_op(_self_, _208050_s,_1a997415a_m,jule::Fn<jule::Bool(jule::Ptr<_1a6426a45_Fn>)>([=](jule::Ptr<_1a6426a45_Fn> _211669_f) mutable -> jule::Bool {
								return static__1a7602329_pos(_211669_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_not", 7)) {
						_case_begin_1a9975359:;
						{
							_208050_s.get()._field_operators._field_bit_not=_1a75e6472_check_struct_ins_op(_self_, _208050_s,_1a997415a_m,jule::Fn<jule::Bool(jule::Ptr<_1a6426a45_Fn>)>([=](jule::Ptr<_1a6426a45_Fn> _211873_f) mutable -> jule::Bool {
								return static__1a76025c1_bit_not(_211873_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("add_assign", 10)) {
						_case_begin_1a99753d1:;
						{
							_208050_s.get()._field_operators._field_add_assign=_1a75e6472_check_struct_ins_op(_self_, _208050_s,_1a997415a_m,jule::Fn<jule::Bool(jule::Ptr<_1a6426a45_Fn>)>([=](jule::Ptr<_1a6426a45_Fn> _212076_f) mutable -> jule::Bool {
								return static__1a7602ba9_add_assign(_212076_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("sub_assign", 10)) {
						_case_begin_1a9975458:;
						{
							_208050_s.get()._field_operators._field_sub_assign=_1a75e6472_check_struct_ins_op(_self_, _208050_s,_1a997415a_m,jule::Fn<jule::Bool(jule::Ptr<_1a6426a45_Fn>)>([=](jule::Ptr<_1a6426a45_Fn> _212276_f) mutable -> jule::Bool {
								return static__1a7607cad_sub_assign(_212276_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("div_assign", 10)) {
						_case_begin_1a99754d0:;
						{
							_208050_s.get()._field_operators._field_div_assign=_1a75e6472_check_struct_ins_op(_self_, _208050_s,_1a997415a_m,jule::Fn<jule::Bool(jule::Ptr<_1a6426a45_Fn>)>([=](jule::Ptr<_1a6426a45_Fn> _212476_f) mutable -> jule::Bool {
								return static__1a7608055_div_assign(_212476_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("mul_assign", 10)) {
						_case_begin_1a9975557:;
						{
							_208050_s.get()._field_operators._field_mul_assign=_1a75e6472_check_struct_ins_op(_self_, _208050_s,_1a997415a_m,jule::Fn<jule::Bool(jule::Ptr<_1a6426a45_Fn>)>([=](jule::Ptr<_1a6426a45_Fn> _212676_f) mutable -> jule::Bool {
								return static__1a76082ec_mul_assign(_212676_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("mod_assign", 10)) {
						_case_begin_1a99755ce:;
						{
							_208050_s.get()._field_operators._field_mod_assign=_1a75e6472_check_struct_ins_op(_self_, _208050_s,_1a997415a_m,jule::Fn<jule::Bool(jule::Ptr<_1a6426a45_Fn>)>([=](jule::Ptr<_1a6426a45_Fn> _212876_f) mutable -> jule::Bool {
								return static__1a7608594_mod_assign(_212876_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("shl_assign", 10)) {
						_case_begin_1a9975656:;
						{
							_208050_s.get()._field_operators._field_shl_assign=_1a75e6472_check_struct_ins_op(_self_, _208050_s,_1a997415a_m,jule::Fn<jule::Bool(jule::Ptr<_1a6426a45_Fn>)>([=](jule::Ptr<_1a6426a45_Fn> _213076_f) mutable -> jule::Bool {
								return static__1a760883b_shl_assign(_213076_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("shr_assign", 10)) {
						_case_begin_1a99756cd:;
						{
							_208050_s.get()._field_operators._field_shr_assign=_1a75e6472_check_struct_ins_op(_self_, _208050_s,_1a997415a_m,jule::Fn<jule::Bool(jule::Ptr<_1a6426a45_Fn>)>([=](jule::Ptr<_1a6426a45_Fn> _213276_f) mutable -> jule::Bool {
								return static__1a7608ad3_shr_assign(_213276_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_or_assign", 13)) {
						_case_begin_1a9975755:;
						{
							_208050_s.get()._field_operators._field_bit_or_assign=_1a75e6472_check_struct_ins_op(_self_, _208050_s,_1a997415a_m,jule::Fn<jule::Bool(jule::Ptr<_1a6426a45_Fn>)>([=](jule::Ptr<_1a6426a45_Fn> _213479_f) mutable -> jule::Bool {
								return static__1a7608d7a_bit_or_assign(_213479_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_and_assign", 14)) {
						_case_begin_1a99757cc:;
						{
							_208050_s.get()._field_operators._field_bit_and_assign=_1a75e6472_check_struct_ins_op(_self_, _208050_s,_1a997415a_m,jule::Fn<jule::Bool(jule::Ptr<_1a6426a45_Fn>)>([=](jule::Ptr<_1a6426a45_Fn> _213680_f) mutable -> jule::Bool {
								return static__1a7609122_bit_and_assign(_213680_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_xor_assign", 14)) {
						_case_begin_1a9975854:;
						{
							_208050_s.get()._field_operators._field_bit_xor_assign=_1a75e6472_check_struct_ins_op(_self_, _208050_s,_1a997415a_m,jule::Fn<jule::Bool(jule::Ptr<_1a6426a45_Fn>)>([=](jule::Ptr<_1a6426a45_Fn> _213880_f) mutable -> jule::Bool {
								return static__1a76093b9_bit_xor_assign(_213880_f);
							}));
						}
					}
					_match_end_1a99747dc:;
				}
			}
			_iter_next_1a997405b:;
			++it;
			goto _iter_begin_1a997405b;
		}
		_iter_end_1a997405b:;
	}
}



inline void _1a75e71ba_check_type_struct_operators(jule::Ptr<_1a75d1e74_Sema> _self_,jule::Ptr<_1a64147be_Struct>& _214352_s) {
	if (_214352_s.get()._field_cpp_linked) {
		return;
	}
	if ((_214352_s.get()._field_generics.len() > 0LL)) {
		return;
	}
	if ((_214352_s.get()._field_instances.len() == 0LL)) {
		jule::Ptr<_1a641744d_StructIns> _215421_ins = _1a6414bed_instance(_214352_s);
		_215421_ins.get()._field_checked=true;
		_1a641500b_append_instance(_214352_s.ptr(), _215421_ins);
	}
	_1a75e6e12_check_struct_ins_operators(_self_, _214352_s.get()._field_instances[0LL]);
}



inline void _1a75e73c9_check_struct_types_operators(jule::Ptr<_1a75d1e74_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_1a99a319a:;
		if (it != expr.end()) {
			jule::Ptr<_1a64147be_Struct> _1a99a3277_s = *it;
			{
				_1a75e71ba_check_type_struct_operators(_self_, _1a99a3277_s);
			}
			_iter_next_1a99a319a:;
			++it;
			goto _iter_begin_1a99a319a;
		}
		_iter_end_1a99a319a:;
	}
}



inline void _1a75e763d_check_rets(_1a75d1e74_Sema* _self_,jule::Ptr<_1a6429be1_FnIns>& _216834_f) {
	if (_1a6426e96_is_void(_216834_f.get()._field_decl.ptr())) {
		return;
	}
	_1a75e97d8_MissingRetChecker _217213_mrc = static__1a75e9ba1_new();
	jule::Bool _217313_ok = _1a75eabb3_check(&_217213_mrc, _216834_f.get()._field_scope);
	if ((!(_217313_ok))) {
		_1a75d488e_push_err(&(*_self_), _216834_f.get()._field_decl.get()._field_token,jule::Str("missing return at end of function", 33),jule::Slice<jule::Any>());
	}
}



inline void _1a75e795c_check_fn_ins_sc(_1a75d1e74_Sema* _self_,jule::Ptr<_1a6429be1_FnIns>& _217939_f,jule::Ptr<_1a75b3b8c_ScopeChecker>& _217955_sc) {
	if (_217939_f.get()._field_decl.get()._field_cpp_linked) {
		return;
	}
	_1a75d0c20_append_ret_vars(_217955_sc.get()._field_table.get()._field_vars,_217939_f);
	_1a75d0ec8_append_param_vars(_217955_sc.get()._field_table.get()._field_vars,_217939_f);
	_1a75d12c5_append_generic_type_aliases(_217955_sc.get()._field_table.get()._field_type_aliases,_217939_f);
	_1a75c2a8b_check(_217955_sc, _217939_f.get()._field_decl.get()._field_scope,_217939_f.get()._field_scope);
	if ((!(_1a75b5809_stopped(_217955_sc.ptr())))) {
		_1a75e763d_check_rets(&(*_self_), _217939_f);
	}
}



inline void _1a75e7c7b_check_fn_ins_caller(jule::Ptr<_1a75d1e74_Sema> _self_,jule::Ptr<_1a6429be1_FnIns>& _219644_f,jule::Ptr<_1d0747985_Token> _219659_caller) {
	if (_219644_f.get()._field_decl.get()._field_cpp_linked) {
		return;
	}
	jule::Ptr<_1a76439db_SymbolTable> _220117_old = _219644_f.get()._field_decl.get()._field_sema.get()._field_file;
	__JULE_DEFER({
		_1a75d44c6_set_current_file(_219644_f.get()._field_decl.get()._field_sema.ptr(), _220117_old);
	});
	jule::Ptr<_1a76439db_SymbolTable> _220317_file = _1a75d1605_find_file(_219644_f.get()._field_decl.get()._field_sema.get()._field_files,_219644_f.get()._field_decl.get()._field_token.get()._field_file);
	if ((_220317_file != nullptr)) {
		_1a75d44c6_set_current_file(_219644_f.get()._field_decl.get()._field_sema.ptr(), _220317_file);
	}
	jule::Ptr<_1a75b3b8c_ScopeChecker> _220817_sc = _1a754d4a6_new_scope_checker(_219644_f.get()._field_decl.get()._field_sema,_219644_f);
	_220817_sc.get()._field_called_from=_219659_caller;
	_1a75e795c_check_fn_ins_sc(_self_.ptr(), _219644_f,_220817_sc);
	if (_219644_f.get()._field_decl.get()._field_sema != _self_) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_219644_f.get()._field_decl.get()._field_sema.get()._field_errors);
		_219644_f.get()._field_decl.get()._field_sema.get()._field_errors=nullptr;
	}
}



inline void _1a75e8001_check_fn_ins(jule::Ptr<_1a75d1e74_Sema> _self_,jule::Ptr<_1a6429be1_FnIns>& _221837_f) {
	_1a75e7c7b_check_fn_ins_caller(_self_, _221837_f,nullptr);
}



inline void _1a75e8276_check_type_fn(jule::Ptr<_1a75d1e74_Sema> _self_,jule::Ptr<_1a6426a45_Fn>& _222238_f) {
	if (_222238_f.get()._field_cpp_linked) {
		return;
	}
	if ((_222238_f.get()._field_generics.len() > 0LL)) {
		return;
	}
	{
		auto &expr = _222238_f.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1a99b1d02:;
		if (it != expr.end()) {
			jule::Ptr<_1a6429be1_FnIns> _1a99b198e_ins = *it;
			{
				_1a75e8001_check_fn_ins(_self_, _1a99b198e_ins);
			}
			_iter_next_1a99b1d02:;
			++it;
			goto _iter_begin_1a99b1d02;
		}
		_iter_end_1a99b1d02:;
	}
}



inline void _1a75e84eb_check_test_fn(_1a75d1e74_Sema* _self_,jule::Ptr<_1a6429be1_FnIns>& _223737_f) {
	if (_223737_f.get()._field_decl.get()._field_public) {
		_1a75d488e_push_err(&(*_self_), _223737_f.get()._field_decl.get()._field_token,jule::Str("test function cannot be public", 30),jule::Slice<jule::Any>());
		_1a75d4bad_push_suggestion(&(*_self_), jule::Str("remove \"pub\" modifier", 21),jule::Slice<jule::Any>());
		return;
	}
	if ((_223737_f.get()._field_params.len() != 1LL) || (_223737_f.get()._field_result != nullptr)) {
		_1a75d488e_push_err(&(*_self_), _223737_f.get()._field_decl.get()._field_token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1a75d4bad_push_suggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_1a767ab11_Sptr> _225017_sptr = _1a76751c1_sptr(_223737_f.get()._field_params[0LL].get()._field_kind.ptr());
	if ((_225017_sptr == nullptr)) {
		_1a75d488e_push_err(&(*_self_), _223737_f.get()._field_decl.get()._field_token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1a75d4bad_push_suggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_1a641744d_StructIns> _225713_s = _1a767614a_strct(_225017_sptr.get()._field_elem.ptr());
	if ((_225713_s == nullptr) || (!(_1a75ce207_is_std_package(_225713_s.get()._field_decl.get()._field_token.get()._field_file.get()._field_path,jule::Str("testing", 7))))) {
		_1a75d488e_push_err(&(*_self_), _223737_f.get()._field_decl.get()._field_token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1a75d4bad_push_suggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;
	}
}



inline void _1a75e8771_precheck_type_fn(jule::Ptr<_1a75d1e74_Sema> _self_,jule::Ptr<_1a6426a45_Fn>& _226541_f) {
	if (_226541_f.get()._field_cpp_linked) {
		return;
	}
	if ((_226541_f.get()._field_generics.len() > 0LL)) {
		return;
	}
	if ((_226541_f.get()._field_instances.len() == 0LL)) {
		jule::Ptr<_1a6429be1_FnIns> _227621_ins = _1a6428690_instance(_226541_f);
		_226541_f.get()._field_instances = jule::alloc_for_append(_226541_f.get()._field_instances,1);_226541_f.get()._field_instances.__push(_227621_ins);
		_1a75dad6d_reload_fn_ins_types(_self_, _227621_ins);
		_227621_ins.get()._field_reloaded=true;
		if (_1a76716d9_has_directive(_226541_f.get()._field_directives,jule::Str("test", 4))) {
			_1a75e84eb_check_test_fn(_self_.ptr(), _227621_ins);
		}
	}
}



inline void _1a75e894c_precheck_fn_types(jule::Ptr<_1a75d1e74_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_traits;
		auto it = expr.begin();
		_iter_begin_1a99bd58e:;
		if (it != expr.end()) {
			jule::Ptr<_1a7465bd7_Trait> _1a99bd66b_decl = *it;
			{
				{
					auto &expr = _1a99bd66b_decl.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1a99bdb33:;
					if (it != expr.end()) {
						jule::Ptr<_1a6426a45_Fn> _1a99bdda8_m = *it;
						{
							_1a75e8771_precheck_type_fn(_self_, _1a99bdda8_m);
						}
						_iter_next_1a99bdb33:;
						++it;
						goto _iter_begin_1a99bdb33;
					}
					_iter_end_1a99bdb33:;
				}
			}
			_iter_next_1a99bd58e:;
			++it;
			goto _iter_begin_1a99bd58e;
		}
		_iter_end_1a99bd58e:;
	}
	{
		auto &expr = _self_.get()._field_file.get()._field_funcs;
		auto it = expr.begin();
		_iter_begin_1a99bd759:;
		if (it != expr.end()) {
			jule::Ptr<_1a6426a45_Fn> _1a99bd8e1_decl = *it;
			{
				_1a75e8771_precheck_type_fn(_self_, _1a99bd8e1_decl);
			}
			_iter_next_1a99bd759:;
			++it;
			goto _iter_begin_1a99bd759;
		}
		_iter_end_1a99bd759:;
	}
}



inline void _1a75e8b28_check_fn_types(jule::Ptr<_1a75d1e74_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_funcs;
		auto it = expr.begin();
		_iter_begin_1a99c04d6:;
		if (it != expr.end()) {
			jule::Ptr<_1a6426a45_Fn> _1a99c05b3_decl = *it;
			{
				_1a75e8276_check_type_fn(_self_, _1a99c05b3_decl);
			}
			_iter_next_1a99c04d6:;
			++it;
			goto _iter_begin_1a99c04d6;
		}
		_iter_end_1a99c04d6:;
	}
}



inline void _1a75e8d04_check_package_types(jule::Ptr<_1a75d1e74_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1a99c1361:;
		if (it != expr.end()) {
			jule::Ptr<_1a76439db_SymbolTable> _1a99c1570_f = *it;
			{
				_1a75d44c6_set_current_file(_self_.ptr(), _1a99c1570_f);
				_1a75e55c5_check_global_types(_self_);
			}
			_iter_next_1a99c1361:;
			++it;
			goto _iter_begin_1a99c1361;
		}
		_iter_end_1a99c1361:;
	}
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1a99c1707:;
		if (it != expr.end()) {
			jule::Ptr<_1a76439db_SymbolTable> _1a99c17a1_f = *it;
			{
				_1a75d44c6_set_current_file(_self_.ptr(), _1a99c17a1_f);
				_1a75e894c_precheck_fn_types(_self_);
			}
			_iter_next_1a99c1707:;
			++it;
			goto _iter_begin_1a99c1707;
		}
		_iter_end_1a99c1707:;
	}
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1a99c24a5:;
		if (it != expr.end()) {
			jule::Ptr<_1a76439db_SymbolTable> _1a99c2582_f = *it;
			{
				_1a75d44c6_set_current_file(_self_.ptr(), _1a99c2582_f);
				_1a75e73c9_check_struct_types_operators(_self_);
			}
			_iter_next_1a99c24a5:;
			++it;
			goto _iter_begin_1a99c24a5;
		}
		_iter_end_1a99c24a5:;
	}
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1a99c3594:;
		if (it != expr.end()) {
			jule::Ptr<_1a76439db_SymbolTable> _1a99c320e_f = *it;
			{
				_1a75d44c6_set_current_file(_self_.ptr(), _1a99c320e_f);
				_1a75e6b48_check_struct_types(_self_);
			}
			_iter_next_1a99c3594:;
			++it;
			goto _iter_begin_1a99c3594;
		}
		_iter_end_1a99c3594:;
	}
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1a99c3c9d:;
		if (it != expr.end()) {
			jule::Ptr<_1a76439db_SymbolTable> _1a99c3d7a_f = *it;
			{
				_1a75d44c6_set_current_file(_self_.ptr(), _1a99c3d7a_f);
				_1a75e8b28_check_fn_types(_self_);
			}
			_iter_next_1a99c3c9d:;
			++it;
			goto _iter_begin_1a99c3c9d;
		}
		_iter_end_1a99c3c9d:;
	}
}



inline void _1a75e8ed0_set_file_sema_fields(jule::Ptr<_1a75d1e74_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_funcs;
		auto it = expr.begin();
		_iter_begin_1a99c59a3:;
		if (it != expr.end()) {
			jule::Ptr<_1a6426a45_Fn> _1a99c5a80_f = *it;
			{
				_1a99c5a80_f.get()._field_sema=_self_;
			}
			_iter_next_1a99c59a3:;
			++it;
			goto _iter_begin_1a99c59a3;
		}
		_iter_end_1a99c59a3:;
	}
	{
		auto &expr = _self_.get()._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_1a99c6410:;
		if (it != expr.end()) {
			jule::Ptr<_1a64147be_Struct> _1a99c5c28_st = *it;
			{
				_1a99c5c28_st.get()._field_sema=_self_;
			}
			_iter_next_1a99c6410:;
			++it;
			goto _iter_begin_1a99c6410;
		}
		_iter_end_1a99c6410:;
	}
}



inline void _1a75e91ab_set_sema_fields(jule::Ptr<_1a75d1e74_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1a99c6ce5:;
		if (it != expr.end()) {
			jule::Ptr<_1a76439db_SymbolTable> _1a99c7004_file = *it;
			{
				_1a75d44c6_set_current_file(_self_.ptr(), _1a99c7004_file);
				_1a75e8ed0_set_file_sema_fields(_self_);
			}
			_iter_next_1a99c6ce5:;
			++it;
			goto _iter_begin_1a99c6ce5;
		}
		_iter_end_1a99c6ce5:;
	}
}



inline void _1a75e9431_check(jule::Ptr<_1a75d1e74_Sema> _self_,jule::Slice<jule::Ptr<_1a76439db_SymbolTable>>& _235330_files) {
	_self_.get()._field_files=_235330_files;
	_1a75d7144_check_imports(_self_.ptr());
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;
	}
	_1a75d76c7_check_enums(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;
	}
	_1a75e91ab_set_sema_fields(_self_);
	_1a75d74eb_impl_impls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;
	}
	_1a75e4a03_check_package_decls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;
	}
	_1a75e8d04_check_package_types(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1a75d1e74_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline _1a75e97d8_MissingRetChecker static__1a75e9ba1_new(void) {
	return _1a75e97d8_MissingRetChecker(jule::Slice<jule::U64>::alloc(16LL),jule::Bool());
}



inline jule::Bool _1a75e9e7b_check_conditional(_1a75e97d8_MissingRetChecker* _self_,jule::Ptr<_1a7550c6c_Conditional> _239936_c) {
	{
		auto &expr = _239936_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1a99cbe4e:;
		if (it != expr.end()) {
			jule::Ptr<_1a75a6003_If> _1a99cc04d_elif = *it;
			{
				if ((_1a99cc04d_elif == nullptr)) {
					return false;
				}
				if ((!(_1a75ea8a5_check_scope(&(*_self_), _1a99cc04d_elif.get()._field_scope)))) {
					return false;
				}
			}
			_iter_next_1a99cbe4e:;
			++it;
			goto _iter_begin_1a99cbe4e;
		}
		_iter_end_1a99cbe4e:;
	}
	return (_239936_c.get()._field_default != nullptr) && _1a75ea8a5_check_scope(&(*_self_), _239936_c.get()._field_default.get()._field_scope);
}



inline jule::Bool _1a75ea289_check_match(_1a75e97d8_MissingRetChecker* _self_,jule::Ptr<_1a75b2cce_Match> _241130_m) {
	{
		auto &expr = _241130_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1a99ce715:;
		if (it != expr.end()) {
			jule::Ptr<_1a75b31ec_Case> _1a99ce814_c = *it;
			{
				if ((_1a99ce814_c == nullptr)) {
					return false;
				}
				jule::I64 _241617_n = (*_self_)._field_breaked.len();
				jule::Bool _241717_ok = _1a75ea8a5_check_scope(&(*_self_), _1a99ce814_c.get()._field_scope);
				{
					
					if (_241617_n != static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_breaked.len()))) {
						_case_begin_1a99d0e31:;
						{
							return false;
						}
					}
					else if ((!(_241717_ok))) {
						_case_begin_1a99d0ea8:;
						{
							if ((!((*_self_)._field_falled))) {
								return false;
							}
							goto _case_begin_1a99d1030;
						}
					}
					else if ((*_self_)._field_falled) {
						_case_begin_1a99d1030:;
						{
							(*_self_)._field_falled=false;
							if ((_1a99ce814_c.get()._field_next == nullptr)) {
								return false;
							}
							goto _iter_next_1a99ce715;
						}
					}
					_match_end_1a99d0d87:;
				}
			}
			_iter_next_1a99ce715:;
			++it;
			goto _iter_begin_1a99ce715;
		}
		_iter_end_1a99ce715:;
	}
	return (_241130_m.get()._field_default != nullptr) && _1a75ea8a5_check_scope(&(*_self_), _241130_m.get()._field_default.get()._field_scope);
}



inline jule::Bool _1a75ea597_check_inf_iter(_1a75e97d8_MissingRetChecker* _self_,jule::Ptr<_1a7561893_InfIter> _243733_it) {
	jule::I64 _243813_n = (*_self_)._field_breaked.len();
	if (_1a75ea8a5_check_scope(&(*_self_), _243733_it.get()._field_scope)) {
		(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_243813_n);
		return true;
	}
	if (_243813_n != static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_breaked.len()))) {
		jule::U64 _244417_itaddr = static_cast<jule::U64>(_243733_it);
		{
			auto expr = (*_self_)._field_breaked.slice(_243813_n);
			auto it = expr.begin();
			_iter_begin_1a99d5441:;
			if (it != expr.end()) {
				jule::U64 _1a99d54da_addr = *it;
				{
					if (_244417_itaddr == _1a99d54da_addr) {
						(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_243813_n);
						return false;
					}
				}
				_iter_next_1a99d5441:;
				++it;
				goto _iter_begin_1a99d5441;
			}
			_iter_end_1a99d5441:;
		}
		(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_243813_n);
	}
	return true;
}



inline jule::Bool _1a75ea8a5_check_scope(_1a75e97d8_MissingRetChecker* _self_,jule::Ptr<_1a759e606_Scope> _245630_s) {
	if ((_245630_s == nullptr)) {
		return false;
	}
	{
		auto &expr = _245630_s.get()._field_stmts;
		auto it = expr.begin();
		_iter_begin_1a99d6d7c:;
		if (it != expr.end()) {
			jule::Any _1a99d69b4_st = *it;
			{
				{
					auto &_match_expr{ _1a99d69b4_st };
					
					if (_match_expr.type_is<jule::Ptr<_1a75b33d9_FallSt>>()) {
						_case_begin_1a99d76eb:;
						{
							(*_self_)._field_falled=true;
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a758eb13_BreakSt>>()) {
						_case_begin_1a99d7762:;
						{
							jule::U64 _246621_addr = _1a99d69b4_st.operator jule::Ptr<_1a758eb13_BreakSt>().get()._field_it;
							if ((_246621_addr != 0LLU)) {
								(*_self_)._field_breaked = jule::alloc_for_append((*_self_)._field_breaked,1);(*_self_)._field_breaked.__push(_246621_addr);
							}
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a758e926_ContSt>>()) {
						_case_begin_1a99d77c8:;
						{
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a7561893_InfIter>>()) {
						_case_begin_1a99d783e:;
						{
							if (_1a75ea597_check_inf_iter(&(*_self_), _1a99d69b4_st.operator jule::Ptr<_1a7561893_InfIter>())) {
								return true;
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a75b35c6_RetSt>>()) {
						_case_begin_1a99d78a5:;
						{
							return true;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a759e606_Scope>>()) {
						_case_begin_1a99d791b:;
						{
							if (_1a75ea8a5_check_scope(&(*_self_), _1a99d69b4_st.operator jule::Ptr<_1a759e606_Scope>())) {
								return true;
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a7648b67_Data>>()) {
						_case_begin_1a99d7982:;
						{
							{
								auto &_match_expr{ _1a99d69b4_st.operator jule::Ptr<_1a7648b67_Data>().get()._field_model };
								
								if (_match_expr.type_is<jule::Ptr<_1a64214e0_BuiltinPanicCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1a6422722_BuiltinErrorCallExprModel>>()) {
									_case_begin_1a99db58a:;
									{
										return true;
									}
								}
								_match_end_1a99db535:;
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a7550c6c_Conditional>>()) {
						_case_begin_1a99d79e8:;
						{
							if (_1a75e9e7b_check_conditional(&(*_self_), _1a99d69b4_st.operator jule::Ptr<_1a7550c6c_Conditional>())) {
								return true;
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a75b2cce_Match>>()) {
						_case_begin_1a99d7a5e:;
						{
							if (_1a75ea289_check_match(&(*_self_), _1a99d69b4_st.operator jule::Ptr<_1a75b2cce_Match>())) {
								return true;
							}
						}
					}
					_match_end_1a99d7586:;
				}
			}
			_iter_next_1a99d6d7c:;
			++it;
			goto _iter_begin_1a99d6d7c;
		}
		_iter_end_1a99d6d7c:;
	}
	return false;
}



inline jule::Bool _1a75eabb3_check(_1a75e97d8_MissingRetChecker* _self_,jule::Ptr<_1a759e606_Scope> _250224_s) {
	return _1a75ea8a5_check_scope(&(*_self_), _250224_s);
}







std::ostream &operator<<(std::ostream &_Stream, _1a75e97d8_MissingRetChecker _Src) {
	_Stream << "MissingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a75eb4aa_IterRelation _Src) {
	_Stream << "IterRelation{";
	_Stream << "range:" << _Src._field_range;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a75ec830_is_initialized(_1a75ec478_Var* _self_) {
	return ((*_self_)._field_value != nullptr);
}



inline jule::Bool _1a75eca94_is_type_inferred(_1a75ec478_Var* _self_) {
	return ((*_self_)._field_kind == nullptr) || ((*_self_)._field_kind.get()._field_decl == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1a75ec478_Var _Src) {
	_Stream << "Var{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "constant:" << _Src._field_constant << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "value:" << _Src._field_value << ", ";
	_Stream << "references:" << _Src._field_references << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "iter_relation:" << _Src._field_iter_relation << ", ";
	_Stream << "depends:" << _Src._field_depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1a75ed600_dispose(jule::Ptr<_1a6426a45_Fn> _1027_f) {
	return ((((((((((_1027_f != nullptr) && (_1027_f.get()._field_owner != nullptr)) && (_1027_f.get()._field_ident == jule::Str("dispose", 7))) && (!(_1027_f.get()._field_statically))) && (!(_1027_f.get()._field_unsafety))) && _1027_f.get()._field_public) && _1a6426e96_is_void(_1027_f.ptr())) && (_1027_f.get()._field_generics.len() == 0LL)) && (_1027_f.get()._field_params.len() == 1LL)) && _1027_f.get()._field_params[0LL].get()._field_mutable) && (!(_1a6425a99_is_ref(_1027_f.get()._field_params[0LL].ptr())));
}



inline jule::Bool static__1a75ed897_to_str(jule::Ptr<_1a6426a45_Fn> _2526_f) {
	if (((((((((((_2526_f == nullptr) || (_2526_f.get()._field_owner == nullptr)) || (_2526_f.get()._field_ident != jule::Str("to_str", 6))) || _2526_f.get()._field_statically) || _2526_f.get()._field_unsafety) || (!(_2526_f.get()._field_public))) || _1a6426e96_is_void(_2526_f.ptr())) || (_2526_f.get()._field_generics.len() != 0LL)) || (_2526_f.get()._field_params.len() != 1LL)) || _2526_f.get()._field_params[0LL].get()._field_mutable) || _1a6425a99_is_ref(_2526_f.get()._field_params[0LL].ptr())) {
		return false;
	}
	jule::Ptr<_1a6429be1_FnIns> _4017_ins = _2526_f.get()._field_instances[0LL];
	jule::Ptr<_1a7677602_Prim> _4113_prim = _1a7674e5c_prim(_4017_ins.get()._field_result.ptr());
	if ((_4113_prim == nullptr)) {
		return false;
	}
	return _1a767a5b1_is_str(_4113_prim.ptr());
}



inline jule::Bool static__1a75edbd8_logical(jule::Ptr<_1a6426a45_Fn>& _4824_f,jule::Str _4832_ident) {
	if ((((((((((((((_4824_f == nullptr) || (_4824_f.get()._field_ident != _4832_ident)) || (_4824_f.get()._field_owner == nullptr)) || (_4824_f.get()._field_instances.len() == 0LL)) || _4824_f.get()._field_statically) || _4824_f.get()._field_unsafety) || (!(_4824_f.get()._field_public))) || _1a6426e96_is_void(_4824_f.ptr())) || (_4824_f.get()._field_generics.len() != 0LL)) || (_4824_f.get()._field_params.len() != 2LL)) || _4824_f.get()._field_params[0LL].get()._field_mutable) || _1a6425a99_is_ref(_4824_f.get()._field_params[0LL].ptr())) || _4824_f.get()._field_params[1LL].get()._field_mutable) || _4824_f.get()._field_params[1LL].get()._field_reference) {
		return false;
	}
	jule::Ptr<_1a6429be1_FnIns> _6617_ins = _4824_f.get()._field_instances[0LL];
	jule::Ptr<_1a7677602_Prim> _6713_prim = _1a7674e5c_prim(_6617_ins.get()._field_result.ptr());
	if ((_6713_prim == nullptr) || (!(_1a767a34c_is_bool(_6713_prim.ptr())))) {
		return false;
	}
	return _6617_ins.get()._field_owner == _1a767614a_strct(_6617_ins.get()._field_params[1LL].get()._field_kind.ptr());
}



inline jule::Bool static__1a75ede80_eq(jule::Ptr<_1a6426a45_Fn> _7522_f) {
	return static__1a75edbd8_logical(_7522_f,jule::Str("eq", 2));
}



inline jule::Bool static__1a75ee227_gt(jule::Ptr<_1a6426a45_Fn> _8022_f) {
	return static__1a75edbd8_logical(_8022_f,jule::Str("gt", 2));
}



inline jule::Bool static__1a75ee4be_gt_eq(jule::Ptr<_1a6426a45_Fn> _8525_f) {
	return static__1a75edbd8_logical(_8525_f,jule::Str("gt_eq", 5));
}



inline jule::Bool static__1a75ee766_lt(jule::Ptr<_1a6426a45_Fn> _9022_f) {
	return static__1a75edbd8_logical(_9022_f,jule::Str("lt", 2));
}



inline jule::Bool static__1a75eea0d_lt_eq(jule::Ptr<_1a6426a45_Fn> _9525_f) {
	return static__1a75edbd8_logical(_9525_f,jule::Str("lt_eq", 5));
}



inline jule::Bool static__1a75eed4e_result(jule::Ptr<_1a6426a45_Fn>& _9923_f,jule::Str _9931_ident) {
	if ((((((((((((((_9923_f == nullptr) || (_9923_f.get()._field_ident != _9931_ident)) || (_9923_f.get()._field_owner == nullptr)) || (_9923_f.get()._field_instances.len() == 0LL)) || _9923_f.get()._field_statically) || _9923_f.get()._field_unsafety) || (!(_9923_f.get()._field_public))) || _1a6426e96_is_void(_9923_f.ptr())) || (_9923_f.get()._field_generics.len() != 0LL)) || (_9923_f.get()._field_params.len() != 2LL)) || _9923_f.get()._field_params[0LL].get()._field_mutable) || _1a6425a99_is_ref(_9923_f.get()._field_params[0LL].ptr())) || _9923_f.get()._field_params[1LL].get()._field_mutable) || _9923_f.get()._field_params[1LL].get()._field_reference) {
		return false;
	}
	jule::Ptr<_1a6429be1_FnIns> _11717_ins = _9923_f.get()._field_instances[0LL];
	return _1a767614a_strct(_11717_ins.get()._field_result.ptr()) == _11717_ins.get()._field_owner;
}



inline jule::Bool static__1a76000e6_shl(jule::Ptr<_1a6426a45_Fn> _12223_f) {
	return static__1a75eed4e_result(_12223_f,jule::Str("shl", 3));
}



inline jule::Bool static__1a760038d_shr(jule::Ptr<_1a6426a45_Fn> _12723_f) {
	return static__1a75eed4e_result(_12723_f,jule::Str("shr", 3));
}



inline jule::Bool static__1a7600635_add(jule::Ptr<_1a6426a45_Fn> _13223_f) {
	return static__1a75eed4e_result(_13223_f,jule::Str("add", 3));
}



inline jule::Bool static__1a76008cc_sub(jule::Ptr<_1a6426a45_Fn> _13723_f) {
	return static__1a75eed4e_result(_13723_f,jule::Str("sub", 3));
}



inline jule::Bool static__1a7600b74_div(jule::Ptr<_1a6426a45_Fn> _14223_f) {
	return static__1a75eed4e_result(_14223_f,jule::Str("div", 3));
}



inline jule::Bool static__1a7600e1b_mul(jule::Ptr<_1a6426a45_Fn> _14723_f) {
	return static__1a75eed4e_result(_14723_f,jule::Str("mul", 3));
}



inline jule::Bool static__1a76011b3_mod(jule::Ptr<_1a6426a45_Fn> _15223_f) {
	return static__1a75eed4e_result(_15223_f,jule::Str("mod", 3));
}



inline jule::Bool static__1a760145a_bit_and(jule::Ptr<_1a6426a45_Fn> _15727_f) {
	return static__1a75eed4e_result(_15727_f,jule::Str("bit_and", 7));
}



inline jule::Bool static__1a7601702_bit_or(jule::Ptr<_1a6426a45_Fn> _16226_f) {
	return static__1a75eed4e_result(_16226_f,jule::Str("bit_or", 6));
}



inline jule::Bool static__1a7601999_bit_xor(jule::Ptr<_1a6426a45_Fn> _16727_f) {
	return static__1a75eed4e_result(_16727_f,jule::Str("bit_xor", 7));
}



inline jule::Bool static__1a7601cda_unary(jule::Ptr<_1a6426a45_Fn>& _17122_f,jule::Str _17130_ident) {
	if ((((((((((((_17122_f == nullptr) || (_17122_f.get()._field_ident != _17130_ident)) || (_17122_f.get()._field_owner == nullptr)) || (_17122_f.get()._field_instances.len() == 0LL)) || _17122_f.get()._field_statically) || _17122_f.get()._field_unsafety) || (!(_17122_f.get()._field_public))) || _1a6426e96_is_void(_17122_f.ptr())) || (_17122_f.get()._field_generics.len() != 0LL)) || (_17122_f.get()._field_params.len() != 1LL)) || _17122_f.get()._field_params[0LL].get()._field_mutable) || _1a6425a99_is_ref(_17122_f.get()._field_params[0LL].ptr())) {
		return false;
	}
	jule::Ptr<_1a6429be1_FnIns> _18717_ins = _17122_f.get()._field_instances[0LL];
	return _1a767614a_strct(_18717_ins.get()._field_result.ptr()) == _18717_ins.get()._field_owner;
}



inline jule::Bool static__1a7602082_neg(jule::Ptr<_1a6426a45_Fn> _19223_f) {
	return static__1a7601cda_unary(_19223_f,jule::Str("neg", 3));
}



inline jule::Bool static__1a7602329_pos(jule::Ptr<_1a6426a45_Fn> _19723_f) {
	return static__1a7601cda_unary(_19723_f,jule::Str("pos", 3));
}



inline jule::Bool static__1a76025c1_bit_not(jule::Ptr<_1a6426a45_Fn> _20227_f) {
	return static__1a7601cda_unary(_20227_f,jule::Str("bit_not", 7));
}



inline jule::Bool static__1a7602912_assign(jule::Ptr<_1a6426a45_Fn>& _20623_f,jule::Str _20631_ident) {
	if ((((((((((((((_20623_f == nullptr) || (_20623_f.get()._field_ident != _20631_ident)) || (_20623_f.get()._field_owner == nullptr)) || (_20623_f.get()._field_instances.len() == 0LL)) || _20623_f.get()._field_statically) || _20623_f.get()._field_unsafety) || (!(_20623_f.get()._field_public))) || (!(_1a6426e96_is_void(_20623_f.ptr())))) || (_20623_f.get()._field_generics.len() != 0LL)) || (_20623_f.get()._field_params.len() != 2LL)) || (!(_20623_f.get()._field_params[0LL].get()._field_mutable))) || _1a6425a99_is_ref(_20623_f.get()._field_params[0LL].ptr())) || _20623_f.get()._field_params[1LL].get()._field_mutable) || _20623_f.get()._field_params[1LL].get()._field_reference) {
		return false;
	}
	return true;
}



inline jule::Bool static__1a7602ba9_add_assign(jule::Ptr<_1a6426a45_Fn> _22730_f) {
	return static__1a7602912_assign(_22730_f,jule::Str("add_assign", 10));
}



inline jule::Bool static__1a7607cad_sub_assign(jule::Ptr<_1a6426a45_Fn> _23230_f) {
	return static__1a7602912_assign(_23230_f,jule::Str("sub_assign", 10));
}



inline jule::Bool static__1a7608055_div_assign(jule::Ptr<_1a6426a45_Fn> _23730_f) {
	return static__1a7602912_assign(_23730_f,jule::Str("div_assign", 10));
}



inline jule::Bool static__1a76082ec_mul_assign(jule::Ptr<_1a6426a45_Fn> _24230_f) {
	return static__1a7602912_assign(_24230_f,jule::Str("mul_assign", 10));
}



inline jule::Bool static__1a7608594_mod_assign(jule::Ptr<_1a6426a45_Fn> _24730_f) {
	return static__1a7602912_assign(_24730_f,jule::Str("mod_assign", 10));
}



inline jule::Bool static__1a760883b_shl_assign(jule::Ptr<_1a6426a45_Fn> _25230_f) {
	return static__1a7602912_assign(_25230_f,jule::Str("shl_assign", 10));
}



inline jule::Bool static__1a7608ad3_shr_assign(jule::Ptr<_1a6426a45_Fn> _25730_f) {
	return static__1a7602912_assign(_25730_f,jule::Str("shr_assign", 10));
}



inline jule::Bool static__1a7608d7a_bit_or_assign(jule::Ptr<_1a6426a45_Fn> _26233_f) {
	return static__1a7602912_assign(_26233_f,jule::Str("bit_or_assign", 13));
}



inline jule::Bool static__1a7609122_bit_and_assign(jule::Ptr<_1a6426a45_Fn> _26734_f) {
	return static__1a7602912_assign(_26734_f,jule::Str("bit_and_assign", 14));
}



inline jule::Bool static__1a76093b9_bit_xor_assign(jule::Ptr<_1a6426a45_Fn> _27234_f) {
	return static__1a7602912_assign(_27234_f,jule::Str("bit_xor_assign", 14));
}







std::ostream &operator<<(std::ostream &_Stream, _1a75ece7e_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline void _1a7635082_push_err(_1a7634ceb_TypeCompatibilityChecker* _self_,jule::Str _11727_fmt,jule::Slice<jule::Any> _11740_args) {
	_1a75d488e_push_err((*_self_)._field_s.ptr(), (*_self_)._field_error_token,_11727_fmt,_11740_args);
}



inline jule::Bool _1a76352e6_check_trait(_1a7634ceb_TypeCompatibilityChecker* _self_) {
	jule::Bool _12132_ok = jule::Bool();
	if (_1a7673c6e_is_nil((*_self_)._field_src.ptr())) {
		_12132_ok = true;
		return _12132_ok;
	}
	jule::Ptr<_1a7465bd7_Trait> _12613_trt = _1a76763ae_trt((*_self_)._field_dest.ptr());
	jule::Bool _12717_ref = false;
	{
		
		if ((_1a76751c1_sptr((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1a9a1c687:;
			{
				_12717_ref=true;
				(*_self_)._field_src=_1a76751c1_sptr((*_self_)._field_src.ptr()).get()._field_elem;
				if ((_1a767614a_strct((*_self_)._field_src.ptr()) == nullptr)) {
					_12132_ok = false;
					return _12132_ok;
				}
				goto _case_begin_1a9a1c753;
			}
		}
		else if ((_1a767614a_strct((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1a9a1c753:;
			{
				jule::Ptr<_1a641744d_StructIns> _13717_s = _1a767614a_strct((*_self_)._field_src.ptr());
				if ((!(_1a6415cdc_is_implements(_13717_s.get()._field_decl.ptr(), _12613_trt)))) {
					_12132_ok = false;
					return _12132_ok;
				}
				if ((!(_12717_ref)) && _1a761aac3_trait_has_reference_receiver(_12613_trt)) {
					_1a7635082_push_err(&(*_self_), jule::Str("trait has reference receiver parameter used method, cannot assign non-reference instance", 88),jule::Slice<jule::Any>());
					_12132_ok = false;
					return _12132_ok;
				}
				_12132_ok = true;
				return _12132_ok;
			}
		}
		else if ((_1a76763ae_trt((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1a9a1c7b9:;
			{
				_12132_ok = _12613_trt == _1a76763ae_trt((*_self_)._field_src.ptr());
				return _12132_ok;
			}
		}
		else {
			_case_begin_1a9a1c016:;
			{
				_12132_ok = false;
				return _12132_ok;
			}
		}
		_match_end_1a9a1bea0:;
	}
}



inline jule::Bool _1a763555a_check_ptr(_1a7634ceb_TypeCompatibilityChecker* _self_) {
	jule::Bool _15530_ok = jule::Bool();
	if (_1a7673c6e_is_nil((*_self_)._field_src.ptr())) {
		_15530_ok = true;
		return _15530_ok;
	}
	jule::Ptr<_1a767e175_Ptr> _16017_dest = _1a7675435_ptr((*_self_)._field_dest.ptr());
	if (_1a767eb48_is_unsafe(_16017_dest.ptr())) {
		_15530_ok = true;
		return _15530_ok;
	}
	_15530_ok = _1a7673565_equals((*_self_)._field_dest, (*_self_)._field_src);
	return _15530_ok;
}



inline jule::Bool _1a76357be_check_prim(_1a7634ceb_TypeCompatibilityChecker* _self_) {
	jule::Bool _16931_ok = jule::Bool();
	if ((!((*_self_)._field_dest.get()._field_variadic))) {
		jule::Ptr<_1a7677602_Prim> _17117_prim = _1a7674e5c_prim((*_self_)._field_dest.ptr());
		if ((_17117_prim != nullptr) && _1a767a825_is_any(_17117_prim.ptr())) {
			_16931_ok = true;
			return _16931_ok;
		}
	}
	_16931_ok = _1a7673565_equals((*_self_)._field_dest, (*_self_)._field_src);
	return _16931_ok;
}



inline jule::Bool _1a7635a33_check(_1a7634ceb_TypeCompatibilityChecker* _self_) {
	jule::Bool _17926_ok = jule::Bool();
	if ((_1a7675435_ptr((*_self_)._field_dest.ptr()) != nullptr)) {
		_17926_ok = _1a763555a_check_ptr(&(*_self_));
		return _17926_ok;
	}
	if (_1a76744ab_nil_compatible((*_self_)._field_dest.ptr())) {
		if (_1a7673c6e_is_nil((*_self_)._field_src.ptr())) {
			_17926_ok = true;
			return _17926_ok;
		}
	}
	{
		
		if ((_1a7674e5c_prim((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_1a9a27c8b:;
			{
				_17926_ok = _1a76357be_check_prim(&(*_self_));
				return _17926_ok;
			}
		}
		else if ((_1a76763ae_trt((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_1a9a2795b:;
			{
				_17926_ok = _1a76352e6_check_trait(&(*_self_));
				return _17926_ok;
			}
		}
		else {
			_case_begin_1a9a27373:;
			{
				_17926_ok = _1a7673565_equals((*_self_)._field_dest, (*_self_)._field_src);
				return _17926_ok;
			}
		}
		_match_end_1a9a27296:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, _1a7634ceb_TypeCompatibilityChecker _Src) {
	_Stream << "TypeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "error_token:" << _Src._field_error_token;
	_Stream << "}";
	return _Stream;
}



inline void _1a76364d4_push_err(_1a7636072_AssignTypeChecker* _self_,jule::Str _20927_fmt,jule::Slice<jule::Any> _20940_args) {
	_1a75d488e_push_err((*_self_)._field_s.ptr(), (*_self_)._field_error_token,_20927_fmt,_20940_args);
}



inline jule::Bool _1a7636748_check_validity(_1a7636072_AssignTypeChecker* _self_) {
	jule::Bool _21417_valid = true;
	{
		
		if ((_1a7675dd6_fnc((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a9a2aab3:;
			{
				jule::Ptr<_1a6429be1_FnIns> _21717_f = _1a7675dd6_fnc((*_self_)._field_d.get()._field_kind.ptr());
				{
					
					if (_1a642a96c_is_builtin(_21717_f.ptr())) {
						_case_begin_1a9a2c06a:;
						{
							_1a76364d4_push_err(&(*_self_), jule::Str("builtin define cannot use as anonymous function", 47),jule::Slice<jule::Any>());
							_21417_valid=false;
						}
					}
					else if (_21717_f.get()._field_decl.get()._field_cpp_linked) {
						_case_begin_1a9a2c0e2:;
						{
							_1a76364d4_push_err(&(*_self_), jule::Str("cpp-linked functions cannot use as anonymous function", 53),jule::Slice<jule::Any>());
							_21417_valid=false;
						}
					}
					else if (_1a642720a_is_method(_21717_f.get()._field_decl.ptr())) {
						_case_begin_1a9a2c169:;
						{
							_1a76364d4_push_err(&(*_self_), jule::Str("methods cannot use as anonymous function", 40),jule::Slice<jule::Any>());
							_21417_valid=false;
						}
					}
					else if ((_21717_f.get()._field_decl.get()._field_generics.len() > 0LL)) {
						_case_begin_1a9a2c1e1:;
						{
							_1a76364d4_push_err(&(*_self_), jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
							_21417_valid=false;
						}
					}
					_match_end_1a9a2be7c:;
				}
			}
		}
		else if ((_1a7676887_tup((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a9a2ab3a:;
			{
				_1a76364d4_push_err(&(*_self_), jule::Str("tuples cannot assign to single define in same time", 50),jule::Slice<jule::Any>());
				_21417_valid=false;
			}
		}
		_match_end_1a9a2a9e7:;
	}
	return _21417_valid;
}



inline jule::Bool _1a76369ac_check_const(_1a7636072_AssignTypeChecker* _self_) {
	if ((((!(_1a764952a_is_const((*_self_)._field_d.ptr()))) || (_1a7674e5c_prim((*_self_)._field_dest.ptr()) == nullptr)) || (_1a7674e5c_prim((*_self_)._field_d.get()._field_kind.ptr()) == nullptr)) || (!(_1a75b1e65_is_num(_1a7674e5c_prim((*_self_)._field_d.get()._field_kind.ptr()).get()._field_kind)))) {
		return false;
	}
	if ((*_self_)._field_d.get()._field_model != (*_self_)._field_d.get()._field_constant) {
		return false;
	}
	jule::Str _25313_kind = _1a7674e5c_prim((*_self_)._field_dest.ptr()).get()._field_kind;
	{
		
		if (_1a75b1bbd_is_float(_25313_kind)) {
			_case_begin_1a9a34638:;
			{
				if ((!(_1a7634823_float_assignable(_25313_kind,(*_self_)._field_d)))) {
					_1a76364d4_push_err(&(*_self_), jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;
				}
			}
		}
		else if (_1a75b18d2_is_int(_25313_kind)) {
			_case_begin_1a9a34737:;
			{
				if ((!(_1a7634bb9_int_assignable(_25313_kind,(*_self_)._field_d)))) {
					_1a76364d4_push_err(&(*_self_), jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;
				}
			}
		}
		else {
			_case_begin_1a9a34083:;
			{
				return false;
			}
		}
		_match_end_1a9a3402d:;
	}
	return true;
}



inline jule::Bool _1a7636c21_is_prim(_1a7636072_AssignTypeChecker* _self_) {
	if ((*_self_)._field_dest.get()._field_variadic || (*_self_)._field_d.get()._field_kind.get()._field_variadic) {
		return false;
	}
	if (_1a7673a0a_cpp_linked((*_self_)._field_dest.ptr()) || _1a7673a0a_cpp_linked((*_self_)._field_d.get()._field_kind.ptr())) {
		return false;
	}
	return (_1a7674e5c_prim((*_self_)._field_dest.ptr()) != nullptr) && (_1a7674e5c_prim((*_self_)._field_d.get()._field_kind.ptr()) != nullptr);
}



inline jule::Bool _1a7636e85_check_compatibility(_1a7636072_AssignTypeChecker* _self_) {
	{
		
		if (((*_self_)._field_d == nullptr)) {
			_case_begin_1a9a39693:;
			{
				return false;
			}
		}
		else if ((!(_1a7636748_check_validity(&(*_self_))))) {
			_case_begin_1a9a3971a:;
			{
				return false;
			}
		}
		else if (_1a76369ac_check_const(&(*_self_))) {
			_case_begin_1a9a39792:;
			{
				return true;
			}
		}
		else if ((_1a7675699_enm((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a9a39819:;
			{
				jule::Ptr<_1a7672da0_TypeKind> _29521_dkind = (*_self_)._field_dest;
				if ((_1a7675699_enm((*_self_)._field_dest.ptr()) != nullptr)) {
					_29521_dkind=_1a7675699_enm((*_self_)._field_dest.ptr()).get()._field_kind.get()._field_kind;
				} else if ((_1a7674e5c_prim((*_self_)._field_dest.ptr()) == nullptr)) {
					goto _match_end_1a9a39550;
				}
				if (_1a75ad6ae_types_are_compatible(_1a7674e5c_prim(_1a7675699_enm((*_self_)._field_d.get()._field_kind.ptr()).get()._field_kind.get()._field_kind.ptr()).get()._field_kind,_1a7674e5c_prim(_29521_dkind.ptr()).get()._field_kind)) {
					return true;
				}
			}
		}
		else if (_1a7636c21_is_prim(&(*_self_))) {
			_case_begin_1a9a39891:;
			{
				jule::Ptr<_1a7677602_Prim> _30517_dest = _1a7674e5c_prim((*_self_)._field_dest.ptr());
				if (_1a767a825_is_any(_30517_dest.ptr())) {
					return true;
				}
				jule::Ptr<_1a7677602_Prim> _30921_src = _1a7674e5c_prim((*_self_)._field_d.get()._field_kind.ptr());
				if (_1a75ad6ae_types_are_compatible(_30517_dest.get()._field_kind,_30921_src.get()._field_kind)) {
					return true;
				}
			}
		}
		_match_end_1a9a39550:;
	}
	return _1a75da08c_check_type_compatibility((*_self_)._field_s, (*_self_)._field_dest,(*_self_)._field_d.get()._field_kind,(*_self_)._field_error_token);
}



inline jule::Bool _1a76371e9_check(_1a7636072_AssignTypeChecker* _self_) {
	jule::Bool _31813_ok = _1a7636e85_check_compatibility(&(*_self_));
	if (_31813_ok) {
		_1a7689191_apply_implicit_cast((*_self_)._field_dest,(*_self_)._field_d);
	}
	return _31813_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _1a7636072_AssignTypeChecker _Src) {
	_Stream << "AssignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "error_token:" << _Src._field_error_token;
	_Stream << "}";
	return _Stream;
}



inline void _1a7637e53_push_generic(_1a76378c0_DynamicTypeAnnotation* _self_,jule::Ptr<_1a7672da0_TypeKind>& _33636_k,jule::I64 _33650_i) {
	(*_self_)._field_f.get()._field_generics[_33650_i]=_33636_k;
}



inline jule::Bool _1a763822d_annotate_prim(_1a76378c0_DynamicTypeAnnotation* _self_,jule::Ptr<_1a7672da0_TypeKind>& _34044_k) {
	jule::Bool _34060_ok = jule::Bool();
	jule::Str _34113_kind = _1a7673257_to_str((*((*_self_)._field_k)).ptr());
	{
		auto &expr = (*_self_)._field_f.get()._field_decl.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1a9a44219:;
		if (it != expr.end()) {
			jule::I64 _1a9a44291_i = it - expr.begin();
			jule::Ptr<_1d075ee64_GenericDecl> _1a9a444a0_g = *it;
			{
				if (_34113_kind != _1a9a444a0_g.get()._field_ident) {
					goto _iter_next_1a9a44219;
				}
				jule::Ptr<_1a7672da0_TypeKind> _34717_t = (*_self_)._field_f.get()._field_generics[_1a9a44291_i];
				{
					
					if ((_34717_t == nullptr)) {
						_case_begin_1a9a456c1:;
						{
							_1a7637e53_push_generic(&(*_self_), _34044_k,_1a9a44291_i);
						}
					}
					else if ((!(_1a7673565_equals(_34717_t, _34044_k)))) {
						_case_begin_1a9a45748:;
						{
							_34060_ok = false;
							return _34060_ok;
						}
					}
					_match_end_1a9a455d3:;
				}
				(*((*_self_)._field_k)).get()._field_kind=_34044_k.get()._field_kind;
				_34060_ok = true;
				return _34060_ok;
			}
			_iter_next_1a9a44219:;
			++it;
			_1a9a44291_i++;
			goto _iter_begin_1a9a44219;
		}
		_iter_end_1a9a44219:;
	}
	_34060_ok = false;
	return _34060_ok;
}



inline jule::Bool _1a763853b_annotate_slc(_1a76378c0_DynamicTypeAnnotation* _self_,jule::Ptr<_1a7672da0_TypeKind>& _36343_k) {
	jule::Bool _36359_ok = jule::Bool();
	jule::Ptr<_1a767b56d_Slc> _36417_pslc = _1a7675b72_slc((*((*_self_)._field_k)).ptr());
	if ((_36417_pslc == nullptr)) {
		_36359_ok = false;
		return _36359_ok;
	}
	jule::Ptr<_1a767b56d_Slc> _36917_slc = _1a7675b72_slc(_36343_k.ptr());
	(*_self_)._field_k=(&(_36417_pslc.get()._field_elem));
	_36359_ok = _1a7639c46_annotate_kind(&(*_self_), _36917_slc.get()._field_elem);
	return _36359_ok;
}



inline jule::Bool _1a76388e3_check_map_key(_1a76378c0_DynamicTypeAnnotation* _self_,jule::Ptr<_1a7672da0_TypeKind>* _37443_k,jule::Ptr<_1a7672da0_TypeKind>& _37463_ck) {
	jule::Bool _37480_ok = jule::Bool();
	jule::Ptr<_1a7672da0_TypeKind>* _37517_old = (*_self_)._field_k;
	(*_self_)._field_k=_37443_k;
	_37480_ok=_1a7639c46_annotate_kind(&(*_self_), _37463_ck);
	(*_self_)._field_k=_37517_old;
	return _37480_ok;
}



inline jule::Bool _1a7638c01_annotate_map(_1a76378c0_DynamicTypeAnnotation* _self_,jule::Ptr<_1a7672da0_TypeKind>& _38243_k) {
	jule::Bool _38259_ok = jule::Bool();
	jule::Ptr<_1a767cb24_Map> _38317_pmap = _1a7676623_map((*((*_self_)._field_k)).ptr());
	if ((_38317_pmap == nullptr)) {
		_38259_ok = false;
		return _38259_ok;
	}
	jule::Ptr<_1a767cb24_Map> _38817_m = _1a7676623_map(_38243_k.ptr());
	_38259_ok = _1a76388e3_check_map_key(&(*_self_), (&(_38317_pmap.get()._field_key)),_38817_m.get()._field_key) && _1a76388e3_check_map_key(&(*_self_), (&(_38317_pmap.get()._field_val)),_38817_m.get()._field_val);
	return _38259_ok;
}



inline jule::Bool _1a763900e_annotate_fn(_1a76378c0_DynamicTypeAnnotation* _self_,jule::Ptr<_1a7672da0_TypeKind>& _39442_k) {
	jule::Bool _39458_ok = jule::Bool();
	jule::Ptr<_1a6429be1_FnIns> _39517_pf = _1a7675dd6_fnc((*((*_self_)._field_k)).ptr());
	if ((_39517_pf == nullptr)) {
		_39458_ok = false;
		return _39458_ok;
	}
	jule::Ptr<_1a6429be1_FnIns> _39917_f = _1a7675dd6_fnc(_39442_k.ptr());
	{
		
		if (_39517_pf.get()._field_params.len() != static_cast<jule::I64>(static_cast<jule::I64>(_39917_f.get()._field_params.len()))) {
			_case_begin_1a9a51204:;
			{
				_39458_ok = false;
				return _39458_ok;
			}
		}
		else if (_1a6426e96_is_void(_39517_pf.get()._field_decl.ptr()) != _1a6426e96_is_void(_39917_f.get()._field_decl.ptr())) {
			_case_begin_1a9a5127b:;
			{
				_39458_ok = false;
				return _39458_ok;
			}
		}
		_match_end_1a9a51138:;
	}
	_39458_ok=true;
	jule::Ptr<_1a7672da0_TypeKind>* _40817_old = (*_self_)._field_k;
	{
		auto &expr = _39917_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1a9a52832:;
		if (it != expr.end()) {
			jule::I64 _1a9a53008_i = it - expr.begin();
			jule::Ptr<_1a6428d55_ParamIns> _1a9a5316d_fp = *it;
			{
				(*_self_)._field_k=(&(_39517_pf.get()._field_params[_1a9a53008_i].get()._field_kind));
				_39458_ok=_1a7639c46_annotate_kind(&(*_self_), _1a9a5316d_fp.get()._field_kind) && _39458_ok;
			}
			_iter_next_1a9a52832:;
			++it;
			_1a9a53008_i++;
			goto _iter_begin_1a9a52832;
		}
		_iter_end_1a9a52832:;
	}
	if ((!(_1a6426e96_is_void(_39517_pf.get()._field_decl.ptr())))) {
		(*_self_)._field_k=(&(_39517_pf.get()._field_result));
		_39458_ok=_1a7639c46_annotate_kind(&(*_self_), _39917_f.get()._field_result) && _39458_ok;
	}
	(*_self_)._field_k=_40817_old;
	return _39458_ok;
}



inline jule::Bool _1a763931c_annotate_ptr(_1a76378c0_DynamicTypeAnnotation* _self_,jule::Ptr<_1a7672da0_TypeKind>& _42343_k) {
	jule::Bool _42359_ok = jule::Bool();
	jule::Ptr<_1a767e175_Ptr> _42417_pptr = _1a7675435_ptr((*((*_self_)._field_k)).ptr());
	if ((_42417_pptr == nullptr)) {
		_42359_ok = false;
		return _42359_ok;
	}
	jule::Ptr<_1a767e175_Ptr> _42917_ptr = _1a7675435_ptr(_42343_k.ptr());
	(*_self_)._field_k=(&(_42417_pptr.get()._field_elem));
	_42359_ok = _1a7639c46_annotate_kind(&(*_self_), _42917_ptr.get()._field_elem);
	return _42359_ok;
}



inline jule::Bool _1a763962a_annotate_sptr(_1a76378c0_DynamicTypeAnnotation* _self_,jule::Ptr<_1a7672da0_TypeKind>& _43444_k) {
	jule::Bool _43460_ok = jule::Bool();
	jule::Ptr<_1a767ab11_Sptr> _43517_ssptr = _1a76751c1_sptr((*((*_self_)._field_k)).ptr());
	if ((_43517_ssptr == nullptr)) {
		_43460_ok = false;
		return _43460_ok;
	}
	jule::Ptr<_1a767ab11_Sptr> _44017_sptr = _1a76751c1_sptr(_43444_k.ptr());
	(*_self_)._field_k=(&(_43517_ssptr.get()._field_elem));
	_43460_ok = _1a7639c46_annotate_kind(&(*_self_), _44017_sptr.get()._field_elem);
	return _43460_ok;
}



inline jule::Bool _1a7639938_annotate_any(_1a76378c0_DynamicTypeAnnotation* _self_,jule::Ptr<_1a7672da0_TypeKind>& _44543_k) {
	jule::Bool _44559_ok = jule::Bool();
	jule::Str _44613_kind = _1a7673257_to_str((*((*_self_)._field_k)).ptr());
	{
		auto &expr = (*_self_)._field_f.get()._field_decl.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1a9a5b2ec:;
		if (it != expr.end()) {
			jule::I64 _1a9a5b341_i = it - expr.begin();
			jule::Ptr<_1d075ee64_GenericDecl> _1a9a5b550_g = *it;
			{
				if (_44613_kind != _1a9a5b550_g.get()._field_ident) {
					goto _iter_next_1a9a5b2ec;
				}
				jule::Ptr<_1a7672da0_TypeKind> _45217_t = (*_self_)._field_f.get()._field_generics[_1a9a5b341_i];
				{
					
					if ((_45217_t == nullptr)) {
						_case_begin_1a9a5c771:;
						{
							_1a7637e53_push_generic(&(*_self_), _44543_k,_1a9a5b341_i);
						}
					}
					else if ((!(_1a7673565_equals(_45217_t, _44543_k)))) {
						_case_begin_1a9a5c7e8:;
						{
							_44559_ok = false;
							return _44559_ok;
						}
					}
					_match_end_1a9a5c683:;
				}
				(*((*_self_)._field_k)).get()._field_kind=_44543_k.get()._field_kind;
				_44559_ok = true;
				return _44559_ok;
			}
			_iter_next_1a9a5b2ec:;
			++it;
			_1a9a5b341_i++;
			goto _iter_begin_1a9a5b2ec;
		}
		_iter_end_1a9a5b2ec:;
	}
	_44559_ok = false;
	return _44559_ok;
}



inline jule::Bool _1a7639c46_annotate_kind(_1a76378c0_DynamicTypeAnnotation* _self_,jule::Ptr<_1a7672da0_TypeKind>& _46844_k) {
	jule::Bool _46860_ok = jule::Bool();
	if (((*_self_)._field_k == nullptr) || ((*((*_self_)._field_k)) == nullptr)) {
		return _46860_ok;
	}
	{
		
		if (_1a7639938_annotate_any(&(*_self_), _46844_k)) {
			_case_begin_1a9a605a9:;
			{
				_46860_ok = true;
				return _46860_ok;
			}
		}
		else if ((_1a7674e5c_prim(_46844_k.ptr()) != nullptr)) {
			_case_begin_1a9a60620:;
			{
				_46860_ok = _1a763822d_annotate_prim(&(*_self_), _46844_k);
				return _46860_ok;
			}
		}
		else if ((_1a7675b72_slc(_46844_k.ptr()) != nullptr)) {
			_case_begin_1a9a602ce:;
			{
				_46860_ok = _1a763853b_annotate_slc(&(*_self_), _46844_k);
				return _46860_ok;
			}
		}
		else if ((_1a7676623_map(_46844_k.ptr()) != nullptr)) {
			_case_begin_1a9a60345:;
			{
				_46860_ok = _1a7638c01_annotate_map(&(*_self_), _46844_k);
				return _46860_ok;
			}
		}
		else if ((_1a7675dd6_fnc(_46844_k.ptr()) != nullptr)) {
			_case_begin_1a9a603ab:;
			{
				_46860_ok = _1a763900e_annotate_fn(&(*_self_), _46844_k);
				return _46860_ok;
			}
		}
		else if ((_1a7675435_ptr(_46844_k.ptr()) != nullptr)) {
			_case_begin_1a9a5ee05:;
			{
				_46860_ok = _1a763931c_annotate_ptr(&(*_self_), _46844_k);
				return _46860_ok;
			}
		}
		else if ((_1a76751c1_sptr(_46844_k.ptr()) != nullptr)) {
			_case_begin_1a9a5ee6b:;
			{
				_46860_ok = _1a763962a_annotate_sptr(&(*_self_), _46844_k);
				return _46860_ok;
			}
		}
		else {
			_case_begin_1a9a5ed8e:;
			{
				_46860_ok = false;
				return _46860_ok;
			}
		}
		_match_end_1a9a5ebd5:;
	}
}



inline jule::Bool _1a7639eaa_annotate(_1a76378c0_DynamicTypeAnnotation* _self_) {
	jule::Bool _49336_ok = jule::Bool();
	(*_self_)._field_k=(&((*_self_)._field_p.get()._field_kind));
	_49336_ok = _1a7639c46_annotate_kind(&(*_self_), (*_self_)._field_a.get()._field_kind);
	return _49336_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _1a76378c0_DynamicTypeAnnotation _Src) {
	_Stream << "DynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "k:" << _Src._field_k;
	_Stream << "}";
	return _Stream;
}



inline void _1a763abd1_push_err_token(_1a763a681_FnCallArgChecker* _self_,jule::Ptr<_1d0747985_Token> _50933_token,jule::Str _50948_fmt,jule::Slice<jule::Any> _50961_args) {
	_1a75d488e_push_err((*_self_)._field_e.get()._field_s.ptr(), _50933_token,_50948_fmt,_50961_args);
}



inline void _1a763b000_push_err(_1a763a681_FnCallArgChecker* _self_,jule::Str _51327_fmt,jule::Slice<jule::Any> _51340_args) {
	_1a763abd1_push_err_token(&(*_self_), (*_self_)._field_error_token,_51327_fmt,_51340_args);
}



inline jule::Slice<jule::Ptr<_1a6428d55_ParamIns>> _1a763b264_get_params(_1a763a681_FnCallArgChecker* _self_) {
	if ((((*_self_)._field_f.get()._field_params.len() > 0LL) && ((*_self_)._field_f.get()._field_params[0LL].get()._field_decl != nullptr)) && _1a6425835_is_self((*_self_)._field_f.get()._field_params[0LL].get()._field_decl.ptr())) {
		return (*_self_)._field_f.get()._field_params.slice(1LL);
	}
	return (*_self_)._field_f.get()._field_params;
}



inline jule::Bool _1a763b572_check_counts(_1a763a681_FnCallArgChecker* _self_,jule::Slice<jule::Ptr<_1a6428d55_ParamIns>>& _52632_params) {
	jule::Bool _52655_ok = jule::Bool();
	jule::I64 _52717_n = _52632_params.len();
	if ((_52717_n > 0LL) && _1a6425835_is_self(_52632_params[0LL].get()._field_decl.ptr())) {
		(_52717_n)--;
	}
	jule::I64 _53217_diff = _52717_n - static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_args.len()));
	{
		
		if ((_53217_diff == 0LL)) {
			_case_begin_1a9a6cc48:;
			{
				_52655_ok = true;
				return _52655_ok;
			}
		}
		else if ((_52717_n > 0LL) && _52632_params[(_52717_n - 1LL)].get()._field_decl.get()._field_variadic) {
			_case_begin_1a9a6ccc0:;
			{
				_52655_ok = true;
				return _52655_ok;
			}
		}
		else if ((_53217_diff < 0LL) || (_53217_diff > static_cast<jule::I64>(static_cast<jule::I64>(_52632_params.len())))) {
			_case_begin_1a9a6cd47:;
			{
				_1a763b000_push_err(&(*_self_), jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
				_52655_ok = false;
				return _52655_ok;
			}
		}
		_match_end_1a9a6cb6b:;
	}
	jule::Str _54317_idents = jule::Str();
	for (; (_53217_diff > 0LL); (_53217_diff)--) {
		{
			_54317_idents+=jule::Str(", ", 2) + _52632_params[_52717_n - _53217_diff].get()._field_decl.get()._field_ident;
		}
	_iter_next_1a9a70311:;
	}
	_iter_end_1a9a70311:;
	(_54317_idents).mut_slice(2LL);
	_1a763b000_push_err(&(*_self_), jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(_54317_idents)}));
	_52655_ok = false;
	return _52655_ok;
}



inline jule::Bool _1a763b9c3_check_arg(_1a763a681_FnCallArgChecker* _self_,jule::Ptr<_1a6428d55_ParamIns>& _55333_p,jule::Ptr<_1a7648b67_Data>& _55352_arg,jule::Ptr<_1d0747985_Token>& _55369_error_token) {
	jule::Bool _55392_ok = jule::Bool();
	if ((*_self_)._field_dynamic_annotation && _1a642bac2_parameter_uses_generics(_55333_p.get()._field_decl,(*_self_)._field_f.get()._field_decl.get()._field_generics)) {
		_55392_ok=(!(_55333_p.get()._field_decl.get()._field_variadic));
		if (_55392_ok) {
			_1a76378c0_DynamicTypeAnnotation _55725_dta = _1a76378c0_DynamicTypeAnnotation((*_self_)._field_e,(*_self_)._field_f,_55333_p,_55352_arg,_55369_error_token,nullptr);
			_55392_ok=_1a7639eaa_annotate(&_55725_dta);
		}
		if ((!(_55392_ok))) {
			_1a763abd1_push_err_token(&(*_self_), _55369_error_token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
			_55392_ok = false;
			return _55392_ok;
		}
	}
	if (_1a75db91d_check_validity_for_init_expr((*_self_)._field_e.get()._field_s, _55333_p.get()._field_decl.get()._field_mutable,_55333_p.get()._field_decl.get()._field_reference,_55333_p.get()._field_kind,_55352_arg,_55369_error_token)) {
		_1a75d9ae7_check_assign_type((*_self_)._field_e.get()._field_s, _55333_p.get()._field_decl.get()._field_reference,_55333_p.get()._field_kind,_55352_arg,_55369_error_token);
	}
	_55392_ok = true;
	return _55392_ok;
}



inline jule::Bool _1a763bd7a_push(_1a763a681_FnCallArgChecker* _self_,jule::Ptr<_1a6428d55_ParamIns>& _58028_p,jule::Ptr<_1d075b14c_Expr> _58046_arg) {
	jule::Bool _58060_ok = jule::Bool();
	jule::Ptr<_1a7672da0_TypeKind> _58117_old = (*_self_)._field_e.get()._field_prefix;
	jule::Bool _58213_old_immut = (*_self_)._field_e.get()._field_immutable;
	jule::Ptr<_1a7648b67_Data> _58317_d = nullptr;
	(*_self_)._field_e.get()._field_immutable=(!(_58028_p.get()._field_decl.get()._field_mutable));
	if ((!((*_self_)._field_dynamic_annotation)) && (!(_58028_p.get()._field_decl.get()._field_variadic))) {
		(*_self_)._field_e.get()._field_prefix=_58028_p.get()._field_kind;
	} else {
		(*_self_)._field_e.get()._field_prefix=nullptr;
	}
	_58317_d=_1a7664776_eval_expr_kind((*_self_)._field_e, _58046_arg.get()._field_kind);
	(*_self_)._field_e.get()._field_prefix=_58117_old;
	(*_self_)._field_e.get()._field_immutable=_58213_old_immut;
	if ((_58317_d == nullptr)) {
		_58060_ok = false;
		return _58060_ok;
	}
	(*_self_)._field_arg_models = jule::alloc_for_append((*_self_)._field_arg_models,1);(*_self_)._field_arg_models.__push(jule::Any(_58317_d));
	_58060_ok = _1a763b9c3_check_arg(&(*_self_), _58028_p,_58317_d,_58046_arg.get()._field_token);
	return _58060_ok;
}



inline jule::Bool _1a763c232_push_variadic(_1a763a681_FnCallArgChecker* _self_,jule::Ptr<_1a6428d55_ParamIns>& _60437_p,jule::I64 _60455_i) {
	jule::Bool _60465_ok = jule::Bool();
	_60465_ok=true;
	jule::Bool _60617_variadiced = false;
	jule::Bool _60713_more = (_60455_i + 1LL) < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_args.len()));
	jule::Ptr<_1a641b71b_SliceExprModel> _60817_model = jule::new_ptr<_1a641b71b_SliceExprModel>(_1a641b71b_SliceExprModel(_60437_p.get()._field_kind,jule::Slice<jule::Any>()));
	jule::Ptr<_1a7672da0_TypeKind> _61217_old = (*_self_)._field_e.get()._field_prefix;
	jule::Bool _61713_variadic = _60437_p.get()._field_kind.get()._field_variadic;
	_60437_p.get()._field_kind.get()._field_variadic=false;
	__JULE_DEFER({
		_60437_p.get()._field_kind.get()._field_variadic=_61713_variadic;
	});
	for (; _60455_i < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_args.len())); (_60455_i)++) {
		{
			jule::Ptr<_1d075b14c_Expr> _62421_arg = (*_self_)._field_args[_60455_i];
			{
				auto &_match_expr{ _62421_arg.get()._field_kind };
				
				if (_match_expr.type_is<jule::Ptr<_1d075c3d4_VariadicExpr>>()) {
					_case_begin_1a9a85964:;
					{
						(*_self_)._field_e.get()._field_prefix=jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(jule::new_ptr<_1a767b56d_Slc>(_1a767b56d_Slc(_60437_p.get()._field_kind)), 7)));
					}
				}
				else {
					_case_begin_1a9a85557:;
					{
						(*_self_)._field_e.get()._field_prefix=_60437_p.get()._field_kind;
					}
				}
				_match_end_1a9a854ad:;
			}
			jule::Ptr<_1a7648b67_Data> _63721_d = _1a7664a84_eval((*_self_)._field_e, _62421_arg);
			if ((_63721_d == nullptr)) {
				_60465_ok=false;
				goto _iter_next_1a9a7ed04;
			}
			if (_63721_d.get()._field_kind.get()._field_variadic) {
				_60617_variadiced=true;
				{
					auto &_match_expr{ _63721_d.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1a641b71b_SliceExprModel>>()) {
						_case_begin_1a9a8811a:;
						{
							_60817_model=_63721_d.get()._field_model.operator jule::Ptr<_1a641b71b_SliceExprModel>();
							_60817_model.get()._field_elem_kind=_60437_p.get()._field_kind;
						}
					}
					else {
						_case_begin_1a9a87b20:;
						{
							_60817_model=nullptr;
							(*_self_)._field_arg_models = jule::alloc_for_append((*_self_)._field_arg_models,1);(*_self_)._field_arg_models.__push(jule::Any(_63721_d));
						}
					}
					_match_end_1a9a87aba:;
				}
				_60437_p.get()._field_kind.get()._field_variadic=true;
				_60465_ok=_60465_ok && _1a763b9c3_check_arg(&(*_self_), _60437_p,_63721_d,_62421_arg.get()._field_token);
				(_60455_i)++;
				goto _iter_end_1a9a7ed04;
			}
			_60465_ok=_60465_ok && _1a763b9c3_check_arg(&(*_self_), _60437_p,_63721_d,_62421_arg.get()._field_token);
			_60817_model.get()._field_elems = jule::alloc_for_append(_60817_model.get()._field_elems,1);_60817_model.get()._field_elems.__push(_63721_d.get()._field_model);
		}
	_iter_next_1a9a7ed04:;
	}
	_iter_end_1a9a7ed04:;
	(*_self_)._field_e.get()._field_prefix=_61217_old;
	if (_60617_variadiced && _60713_more) {
		_1a763abd1_push_err_token(&(*_self_), (*_self_)._field_args[_60455_i].get()._field_token,jule::Str("variadic argument can't use with more argument", 46),jule::Slice<jule::Any>());
	}
	if ((_60817_model != nullptr)) {
		(*_self_)._field_arg_models = jule::alloc_for_append((*_self_)._field_arg_models,1);(*_self_)._field_arg_models.__push(jule::Any(_60817_model));
	}
	return _60465_ok;
}



inline jule::Bool _1a763c540_check_args(_1a763a681_FnCallArgChecker* _self_,jule::Slice<jule::Ptr<_1a6428d55_ParamIns>>& _68334_params) {
	jule::Bool _68357_ok = jule::Bool();
	jule::Bool _68413_arg = (*_self_)._field_e.get()._field_arg;
	(*_self_)._field_e.get()._field_arg=true;
	_68357_ok=true;
	jule::I64 _68817_i = 0LL;
	_julec_label_iter:;
	while (_68817_i < static_cast<jule::I64>(static_cast<jule::I64>(_68334_params.len()))) {
		{
			jule::Ptr<_1a6428d55_ParamIns> _69121_p = _68334_params[_68817_i];
			{
				
				if (_1a6425835_is_self(_69121_p.get()._field_decl.ptr())) {
					_case_begin_1a9a90364:;
					{
						goto _match_end_1a9a8e484;
					}
				}
				else if (_69121_p.get()._field_decl.get()._field_variadic) {
					_case_begin_1a9a8e86e:;
					{
						_68357_ok=_1a763c232_push_variadic(&(*_self_), _69121_p,_68817_i) && _68357_ok;
						goto _iter_end_1a9a8da49;
					}
				}
				else if ((*_self_)._field_args.len() <= _68817_i) {
					_case_begin_1a9a8e561:;
					{
						_68357_ok=false;
						goto _iter_end_1a9a8da49;
					}
				}
				else {
					_case_begin_1a9a8e4ea:;
					{
						_68357_ok=_1a763bd7a_push(&(*_self_), _69121_p,(*_self_)._field_args[_68817_i]) && _68357_ok;
					}
				}
				_match_end_1a9a8e484:;
			}
			(_68817_i)++;
		}
	_iter_next_1a9a8da49:;
	}
	_iter_end_1a9a8da49:;
	(*_self_)._field_e.get()._field_arg=_68413_arg;
	return _68357_ok;
}



inline jule::Bool _1a763c7e8_check_dynamic_type_annotation(_1a763a681_FnCallArgChecker* _self_) {
	jule::Bool _71350_ok = jule::Bool();
	{
		auto &expr = (*_self_)._field_f.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1a9a929e8:;
		if (it != expr.end()) {
			jule::Ptr<_1a7672da0_TypeKind> _1a9a92ac5_g = *it;
			{
				if ((_1a9a92ac5_g == nullptr)) {
					_1a763b000_push_err(&(*_self_), jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
					_71350_ok = false;
					return _71350_ok;
				}
			}
			_iter_next_1a9a929e8:;
			++it;
			goto _iter_begin_1a9a929e8;
		}
		_iter_end_1a9a929e8:;
	}
	_71350_ok = true;
	return _71350_ok;
}



inline jule::Bool _1a763ca4b_check(_1a763a681_FnCallArgChecker* _self_) {
	jule::Bool _72326_ok = jule::Bool();
	jule::Slice<jule::Ptr<_1a6428d55_ParamIns>> _72417_params = _1a763b264_get_params(&(*_self_));
	_72326_ok=_1a763b572_check_counts(&(*_self_), _72417_params);
	if ((!(_72326_ok))) {
		_72326_ok = false;
		return _72326_ok;
	}
	_72326_ok=_1a763c540_check_args(&(*_self_), _72417_params);
	if (_72326_ok && (*_self_)._field_dynamic_annotation) {
		_72326_ok=_1a763c7e8_check_dynamic_type_annotation(&(*_self_));
	}
	return _72326_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _1a763a681_FnCallArgChecker _Src) {
	_Stream << "FnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamic_annotation:" << _Src._field_dynamic_annotation << ", ";
	_Stream << "arg_models:" << _Src._field_arg_models;
	_Stream << "}";
	return _Stream;
}



inline void _1a763d596_push_err(_1a763d08a_StructLitChecker* _self_,jule::Ptr<_1d0747985_Token> _74727_token,jule::Str _74742_fmt,jule::Slice<jule::Any> _74755_args) {
	_1a764abad_push_err((*_self_)._field_e.ptr(), _74727_token,_74742_fmt,_74755_args);
}



inline void _1a763d8b5_push_suggestion(_1a763d08a_StructLitChecker* _self_,jule::Str _75234_fmt,jule::Slice<jule::Any> _75247_args) {
	_1a764aecc_push_suggestion((*_self_)._field_e.ptr(), _75234_fmt,_75247_args);
}



inline void _1a763dc7d_push_match(_1a763d08a_StructLitChecker* _self_,jule::Ptr<_1a6416ae0_FieldIns>& _75634_f,jule::Ptr<_1a7648b67_Data>& _75653_d,jule::Ptr<_1d0747985_Token>& _75668_error_token) {
	
	if (_1a75db91d_check_validity_for_init_expr((*_self_)._field_e.get()._field_s, (!((*_self_)._field_e.get()._field_immutable)),false,_75634_f.get()._field_kind,_75653_d,_75668_error_token)) {
		_1a75d9ae7_check_assign_type((*_self_)._field_e.get()._field_s, false,_75634_f.get()._field_kind,_75653_d,_75668_error_token);
	}
	(*_self_)._field_args = jule::alloc_for_append((*_self_)._field_args,1);(*_self_)._field_args.__push(jule::new_ptr<_1a6419d24_StructArgExprModel>(_1a6419d24_StructArgExprModel(_75634_f,_75653_d.get()._field_model)));
}



inline void _1a763e09c_check_pair(_1a763d08a_StructLitChecker* _self_,jule::Ptr<_1d075d193_FieldExprPair>& _76934_pair,jule::Slice<jule::Ptr<_1d075b14c_Expr>>& _76961_exprs) {
	jule::Ptr<_1a6416ae0_FieldIns> _77117_f = _1a64186e6_find_field((*_self_)._field_s.ptr(), _76934_pair.get()._field_field.get()._field_kind);
	if ((_77117_f == nullptr)) {
		_1a763d596_push_err(&(*_self_), _76934_pair.get()._field_field,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>({jule::Any(_76934_pair.get()._field_field.get()._field_kind)}));
		return;
	}
	if ((!(_1a75d5065_is_accessible_define((*_self_)._field_e.get()._field_s.ptr(), _77117_f.get()._field_decl.get()._field_public,_77117_f.get()._field_decl.get()._field_token)))) {
		_1a763d596_push_err(&(*_self_), _76934_pair.get()._field_field,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any(_76934_pair.get()._field_field.get()._field_kind)}));
		_1a763d8b5_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	}
	_julec_label_dup_lookup:;
	{
		auto &expr = _76961_exprs;
		auto it = expr.begin();
		_iter_begin_1a9aa1353:;
		if (it != expr.end()) {
			jule::Ptr<_1d075b14c_Expr> _1a9aa1441_expr = *it;
			{
				{
					auto &_match_expr{ _1a9aa1441_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_1d075d193_FieldExprPair>>()) {
						_case_begin_1a9aa1b4a:;
						{
							jule::Ptr<_1d075d193_FieldExprPair> _78625_dpair = _1a9aa1441_expr.get()._field_kind.operator jule::Ptr<_1d075d193_FieldExprPair>();
							{
								
								if (_76934_pair == _78625_dpair) {
									_case_begin_1a9aa28c6:;
									{
										goto _iter_end_1a9aa1353;
									}
								}
								else if (_76934_pair.get()._field_field.get()._field_kind == _78625_dpair.get()._field_field.get()._field_kind) {
									_case_begin_1a9aa294d:;
									{
										_1a763d596_push_err(&(*_self_), _76934_pair.get()._field_field,jule::Str("@ already has expression", 24),jule::Slice<jule::Any>({jule::Any(_76934_pair.get()._field_field.get()._field_kind)}));
										goto _iter_end_1a9aa1353;
									}
								}
								_match_end_1a9aa280a:;
							}
						}
					}
					_match_end_1a9aa1ac3:;
				}
			}
			_iter_next_1a9aa1353:;
			++it;
			goto _iter_begin_1a9aa1353;
		}
		_iter_end_1a9aa1353:;
	}
	jule::Ptr<_1a7672da0_TypeKind> _79717_prefix = (*_self_)._field_e.get()._field_prefix;
	__JULE_DEFER({
		(*_self_)._field_e.get()._field_prefix=_79717_prefix;
	});
	(*_self_)._field_e.get()._field_prefix=_77117_f.get()._field_kind;
	jule::Ptr<_1a7648b67_Data> _80117_d = _1a7664776_eval_expr_kind((*_self_)._field_e, jule::Any(_76934_pair.get()._field_expr));
	if ((_80117_d == nullptr)) {
		return;
	}
	_1a763dc7d_push_match(&(*_self_), _77117_f,_80117_d,_76934_pair.get()._field_field);
}



inline jule::Bool _1a763e3aa_ready_exprs(_1a763d08a_StructLitChecker* _self_,jule::Slice<jule::Ptr<_1d075b14c_Expr>>& _80835_exprs) {
	jule::Bool _80917_ok = true;
	{
		auto &expr = _80835_exprs;
		auto it = expr.begin();
		_iter_begin_1a9aa6ac8:;
		if (it != expr.end()) {
			jule::I64 _1a9aa6b72_i = it - expr.begin();
			jule::Ptr<_1d075b14c_Expr> _1a9aa6db4_expr = *it;
			{
				{
					auto &_match_expr{ _1a9aa6db4_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_1d075d9bd_KeyValPair>>()) {
						_case_begin_1a9aa7612:;
						{
							jule::Ptr<_1d075d9bd_KeyValPair> _81325_pair = _1a9aa6db4_expr.get()._field_kind.operator jule::Ptr<_1d075d9bd_KeyValPair>();
							{
								auto &_match_expr{ _81325_pair.get()._field_key.get()._field_kind };
								
								if (_match_expr.type_is<jule::Ptr<_1d075c00a_IdentExpr>>()) {
									_case_begin_1a9aa7cb6:;
									{
										goto _match_end_1a9aa8525;
									}
								}
								else {
									_case_begin_1a9aa857a:;
									{
										_1a763d596_push_err(&(*_self_), _81325_pair.get()._field_colon,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
										_80917_ok=false;
										goto _iter_next_1a9aa6ac8;
									}
								}
								_match_end_1a9aa8525:;
							}
							_80835_exprs[_1a9aa6b72_i].get()._field_kind=jule::Any(jule::new_ptr<_1d075d193_FieldExprPair>(_1d075d193_FieldExprPair(_81325_pair.get()._field_key.get()._field_token,_81325_pair.get()._field_val)));
						}
					}
					_match_end_1a9aa758a:;
				}
			}
			_iter_next_1a9aa6ac8:;
			++it;
			_1a9aa6b72_i++;
			goto _iter_begin_1a9aa6ac8;
		}
		_iter_end_1a9aa6ac8:;
	}
	return _80917_ok;
}



inline void _1a763e630_check(_1a763d08a_StructLitChecker* _self_,jule::Slice<jule::Ptr<_1d075b14c_Expr>>& _83229_exprs) {
	if ((_83229_exprs.len() == 0LL)) {
		return;
	}
	if ((!(_1a763e3aa_ready_exprs(&(*_self_), _83229_exprs)))) {
		return;
	}
	jule::Bool _84117_paired = false;
	{
		auto &expr = _83229_exprs;
		auto it = expr.begin();
		_iter_begin_1a9aab03e:;
		if (it != expr.end()) {
			jule::I64 _1a9aab1e8_i = it - expr.begin();
			jule::Ptr<_1d075b14c_Expr> _1a9aab429_expr = *it;
			{
				{
					auto &_match_expr{ _1a9aab429_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_1d075d193_FieldExprPair>>()) {
						_case_begin_1a9ab02eb:;
						{
							jule::Ptr<_1d075d193_FieldExprPair> _84525_pair = _1a9aab429_expr.get()._field_kind.operator jule::Ptr<_1d075d193_FieldExprPair>();
							if ((_1a9aab1e8_i > 0LL) && (!(_84117_paired))) {
								_1a763d596_push_err(&(*_self_), _84525_pair.get()._field_field,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							}
							_84117_paired=true;
							_1a763e09c_check_pair(&(*_self_), _84525_pair,_83229_exprs);
						}
					}
					else {
						_case_begin_1a9aabb77:;
						{
							if (_84117_paired) {
								_1a763d596_push_err(&(*_self_), _1a9aab429_expr.get()._field_token,jule::Str("argument must target to field", 29),jule::Slice<jule::Any>());
							}
							if (_1a9aab1e8_i >= static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_s.get()._field_fields.len()))) {
								_1a763d596_push_err(&(*_self_), _1a9aab429_expr.get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
								goto _iter_next_1a9aab03e;
							}
							jule::Ptr<_1a6416ae0_FieldIns> _86025_field = (*_self_)._field_s.get()._field_fields[_1a9aab1e8_i];
							jule::Ptr<_1a7672da0_TypeKind> _86225_prefix = (*_self_)._field_e.get()._field_prefix;
							__JULE_DEFER({
								(*_self_)._field_e.get()._field_prefix=_86225_prefix;
							});
							(*_self_)._field_e.get()._field_prefix=_86025_field.get()._field_kind;
							jule::Ptr<_1a7648b67_Data> _86625_d = _1a7664776_eval_expr_kind((*_self_)._field_e, _1a9aab429_expr.get()._field_kind);
							if ((_86625_d == nullptr)) {
								goto _iter_next_1a9aab03e;
							}
							_1a763dc7d_push_match(&(*_self_), _86025_field,_86625_d,_1a9aab429_expr.get()._field_token);
						}
					}
					_match_end_1a9aabb00:;
				}
			}
			_iter_next_1a9aab03e:;
			++it;
			_1a9aab1e8_i++;
			goto _iter_begin_1a9aab03e;
		}
		_iter_end_1a9aab03e:;
	}
	if ((!(_84117_paired))) {
		jule::I64 _87717_n = (*_self_)._field_s.get()._field_fields.len();
		jule::I64 _87821_diff = _87717_n - static_cast<jule::I64>(static_cast<jule::I64>(_83229_exprs.len()));
		{
			
			if ((_87821_diff <= 0LL)) {
				_case_begin_1a9ab3596:;
				{
					return;
				}
			}
			_match_end_1a9ab34b9:;
		}
		jule::Str _88421_idents = jule::Str();
		for (; (_87821_diff > 0LL); (_87821_diff)--) {
			{
				_88421_idents+=jule::Str(", ", 2) + (*_self_)._field_s.get()._field_fields[_87717_n - _87821_diff].get()._field_decl.get()._field_ident;
			}
		_iter_next_1a9aab6c1:;
		}
		_iter_end_1a9aab6c1:;
		(_88421_idents).mut_slice(2LL);
		_1a763d596_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(_88421_idents)}));
	}
}







std::ostream &operator<<(std::ostream &_Stream, _1a763d08a_StructLitChecker _Src) {
	_Stream << "StructLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a75ec478_Var> _1a7640114_build_var(_1a763eb6e_RangeChecker* _self_,jule::Ptr<_1d07646d8_VarDecl>& _90329_decl) {
	jule::Ptr<_1a75ec478_Var> _90417_v = _1a6432127_build_var(_90329_decl);
	return _90417_v;
}



inline void _1a76402e0_set_size_key(_1a763eb6e_RangeChecker* _self_) {
	if (((*_self_)._field_rang.get()._field_key_a == nullptr) || _1d074a1d5_is_ignore_ident((*_self_)._field_rang.get()._field_key_a.get()._field_ident)) {
		return;
	}
	(*_self_)._field_kind.get()._field_key_a=_1a7640114_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_a);
	(*_self_)._field_kind.get()._field_key_a.get()._field_kind=jule::new_ptr<_1a7676c3e_TypeSymbol>(_1a7676c3e_TypeSymbol(jule::Ptr<_1d0759c1c_TypeDecl>(),jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("int", 3)), 5)))));
	{
		auto &_match_expr{ (*_self_)._field_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1a75ec478_Var>>()) {
			_case_begin_1a9ab88ba:;
			{
				(*_self_)._field_kind.get()._field_key_a.get()._field_iter_relation=jule::new_ptr<_1a75eb4aa_IterRelation>(_1a75eb4aa_IterRelation((*_self_)._field_d.get()._field_model.operator jule::Ptr<_1a75ec478_Var>()));
			}
		}
		_match_end_1a9ab8843:;
	}
}



inline void _1a76406ec_check_range_expr_validity(_1a763eb6e_RangeChecker* _self_,jule::Ptr<_1a7648b67_Data>& _93449_d,jule::Ptr<_1a75ec478_Var>& _93460_key,jule::Ptr<_1a7672da0_TypeKind>& _93476_k) {
	jule::Bool _93517__mut = _93460_key.get()._field_mutable;
	if (_93517__mut && (!(_1a7674247_mutable(_93476_k.ptr())))) {
		_93517__mut=false;
	}
	_1a75db91d_check_validity_for_init_expr((*_self_)._field_sc.get()._field_s, _93517__mut,_93460_key.get()._field_reference,_93460_key.get()._field_kind.get()._field_kind,_93449_d,(*_self_)._field_rang.get()._field_in_token);
}



inline void _1a76408b7_check_slice(_1a763eb6e_RangeChecker* _self_) {
	_1a76402e0_set_size_key(&(*_self_));
	if (((*_self_)._field_rang.get()._field_key_b == nullptr) || _1d074a1d5_is_ignore_ident((*_self_)._field_rang.get()._field_key_b.get()._field_ident)) {
		return;
	}
	jule::Ptr<_1a767b56d_Slc> _95317_slc = _1a7675b72_slc((*_self_)._field_d.get()._field_kind.ptr());
	(*_self_)._field_kind.get()._field_key_b=_1a7640114_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_b);
	(*_self_)._field_kind.get()._field_key_b.get()._field_kind=jule::new_ptr<_1a7676c3e_TypeSymbol>(_1a7676c3e_TypeSymbol(jule::Ptr<_1d0759c1c_TypeDecl>(),_95317_slc.get()._field_elem));
	_1a76406ec_check_range_expr_validity(&(*_self_), (*_self_)._field_d,(*_self_)._field_kind.get()._field_key_b,_95317_slc.get()._field_elem);
}



inline void _1a7640a93_check_array(_1a763eb6e_RangeChecker* _self_) {
	_1a76402e0_set_size_key(&(*_self_));
	if (((*_self_)._field_rang.get()._field_key_b == nullptr) || _1d074a1d5_is_ignore_ident((*_self_)._field_rang.get()._field_key_b.get()._field_ident)) {
		return;
	}
	jule::Ptr<_1a767d718_Arr> _96617_arr = _1a767590d_arr((*_self_)._field_d.get()._field_kind.ptr());
	(*_self_)._field_kind.get()._field_key_b=_1a7640114_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_b);
	(*_self_)._field_kind.get()._field_key_b.get()._field_kind=jule::new_ptr<_1a7676c3e_TypeSymbol>(_1a7676c3e_TypeSymbol(jule::Ptr<_1d0759c1c_TypeDecl>(),_96617_arr.get()._field_elem));
	_1a76406ec_check_range_expr_validity(&(*_self_), (*_self_)._field_d,(*_self_)._field_kind.get()._field_key_b,_96617_arr.get()._field_elem);
}



inline void _1a7640c6e_check_map_key_a(_1a763eb6e_RangeChecker* _self_) {
	if (((*_self_)._field_rang.get()._field_key_a == nullptr) || _1d074a1d5_is_ignore_ident((*_self_)._field_rang.get()._field_key_a.get()._field_ident)) {
		return;
	}
	jule::Ptr<_1a767cb24_Map> _97817_m = _1a7676623_map((*_self_)._field_d.get()._field_kind.ptr());
	(*_self_)._field_kind.get()._field_key_a=_1a7640114_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_a);
	(*_self_)._field_kind.get()._field_key_a.get()._field_kind=jule::new_ptr<_1a7676c3e_TypeSymbol>(_1a7676c3e_TypeSymbol(jule::Ptr<_1d0759c1c_TypeDecl>(),_97817_m.get()._field_key));
	jule::Ptr<_1a7648b67_Data> _98217_d = jule::new_ptr<_1a7648b67_Data>((*((*_self_)._field_d)));
	_98217_d.get()._field_kind=_97817_m.get()._field_key;
	_1a76406ec_check_range_expr_validity(&(*_self_), _98217_d,(*_self_)._field_kind.get()._field_key_a,_97817_m.get()._field_key);
}



inline void _1a7640e4a_check_map_key_b(_1a763eb6e_RangeChecker* _self_) {
	if (((*_self_)._field_rang.get()._field_key_b == nullptr) || _1d074a1d5_is_ignore_ident((*_self_)._field_rang.get()._field_key_b.get()._field_ident)) {
		return;
	}
	jule::Ptr<_1a767cb24_Map> _99317_m = _1a7676623_map((*_self_)._field_d.get()._field_kind.ptr());
	(*_self_)._field_kind.get()._field_key_b=_1a7640114_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_b);
	(*_self_)._field_kind.get()._field_key_b.get()._field_kind=jule::new_ptr<_1a7676c3e_TypeSymbol>(_1a7676c3e_TypeSymbol(jule::Ptr<_1d0759c1c_TypeDecl>(),_99317_m.get()._field_val));
	jule::Ptr<_1a7648b67_Data> _99717_d = jule::new_ptr<_1a7648b67_Data>((*((*_self_)._field_d)));
	_99717_d.get()._field_kind=_99317_m.get()._field_val;
	_1a76406ec_check_range_expr_validity(&(*_self_), _99717_d,(*_self_)._field_kind.get()._field_key_b,_99317_m.get()._field_val);
}



inline void _1a7641126_check_map(_1a763eb6e_RangeChecker* _self_) {
	_1a7640c6e_check_map_key_a(&(*_self_));
	_1a7640e4a_check_map_key_b(&(*_self_));
}



inline void _1a7641302_check_str(_1a763eb6e_RangeChecker* _self_) {
	_1a76402e0_set_size_key(&(*_self_));
	if (((*_self_)._field_rang.get()._field_key_b == nullptr) || _1d074a1d5_is_ignore_ident((*_self_)._field_rang.get()._field_key_b.get()._field_ident)) {
		return;
	}
	(*_self_)._field_kind.get()._field_key_b=_1a7640114_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_b);
	(*_self_)._field_kind.get()._field_key_b.get()._field_kind=jule::new_ptr<_1a7676c3e_TypeSymbol>(_1a7676c3e_TypeSymbol(jule::Ptr<_1d0759c1c_TypeDecl>(),jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("u8", 2)), 5)))));
}



inline jule::Bool _1a7641566_check(_1a763eb6e_RangeChecker* _self_) {
	{
		
		if ((*_self_)._field_d.get()._field_kind.get()._field_variadic) {
			_case_begin_1a9ad03e8:;
		}
		else if ((_1a7675b72_slc((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a9ace5b2:;
			{
				_1a76408b7_check_slice(&(*_self_));
				return true;
			}
		}
		else if ((_1a767590d_arr((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a9ace628:;
			{
				_1a7640a93_check_array(&(*_self_));
				return true;
			}
		}
		else if ((_1a7676623_map((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a9ace68e:;
			{
				_1a7641126_check_map(&(*_self_));
				return true;
			}
		}
		else {
			_case_begin_1a9ace54b:;
			{
				jule::Ptr<_1a7677602_Prim> _103617_prim = _1a7674e5c_prim((*_self_)._field_d.get()._field_kind.ptr());
				if ((_103617_prim != nullptr) && _1a767a5b1_is_str(_103617_prim.ptr())) {
					_1a7641302_check_str(&(*_self_));
					return true;
				}
			}
		}
		_match_end_1a9ace480:;
	}
	_1a75d488e_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_rang.get()._field_in_token,jule::Str("range iterations must be have enumerable expression", 51),jule::Slice<jule::Any>());
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1a763eb6e_RangeChecker _Src) {
	_Stream << "RangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _1a76422ae_prepare_types(_1a7641d08_RetTypeChecker* _self_) {
	if (((*_self_)._field_f != nullptr)) {
		(*_self_)._field_types=_1a642a708_types((*_self_)._field_f.ptr());
	}
}



inline void _1a7642534_prepare_exprs(_1a7641d08_RetTypeChecker* _self_,jule::Ptr<_1d075b14c_Expr>& _106537_e) {
	if ((_106537_e == nullptr)) {
		return;
	}
	{
		auto &_match_expr{ _106537_e.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d075b526_TupleExpr>>()) {
			_case_begin_1a9ad6058:;
			{
				(*_self_)._field_exprs=_106537_e.get()._field_kind.operator jule::Ptr<_1d075b526_TupleExpr>().get()._field_expr;
			}
		}
		else {
			_case_begin_1a9ad582c:;
			{
				(*_self_)._field_exprs = jule::alloc_for_append((*_self_)._field_exprs,1);(*_self_)._field_exprs.__push(_106537_e);
			}
		}
		_match_end_1a9ad57c7:;
	}
}



inline void _1a7642710_ret_vars(_1a7641d08_RetTypeChecker* _self_) {
	if (((*_self_)._field_f == nullptr) || _1a6426e96_is_void((*_self_)._field_f.get()._field_decl.ptr())) {
		return;
	}
	(*_self_)._field_vars=jule::Slice<jule::Ptr<_1a75ec478_Var>>::alloc(0LL,static_cast<jule::I64>((*_self_)._field_f.get()._field_decl.get()._field_result.get()._field_idents.len()));
	jule::Ptr<_1a75b3b8c_ScopeChecker> _108317_root_scope = _1a75b5cd2_get_root((*_self_)._field_sc);
	jule::I64 _108517_j = 0LL;
	{
		auto &expr = (*_self_)._field_f.get()._field_decl.get()._field_result.get()._field_idents;
		auto it = expr.begin();
		_iter_begin_1a9ad8e18:;
		if (it != expr.end()) {
			jule::I64 _1a9ad937a_i = it - expr.begin();
			jule::Ptr<_1d0747985_Token> _1a9ad9589_ident = *it;
			{
				if ((!(_1d074a1d5_is_ignore_ident(_1a9ad9589_ident.get()._field_kind))) && (!(_1d074a47c_is_anon_ident(_1a9ad9589_ident.get()._field_kind)))) {
					(*_self_)._field_vars = jule::alloc_for_append((*_self_)._field_vars,1);(*_self_)._field_vars.__push(_108317_root_scope.get()._field_table.get()._field_vars[_108517_j]);
					(_108517_j)++;
				} else {
					(*_self_)._field_vars = jule::alloc_for_append((*_self_)._field_vars,1);(*_self_)._field_vars.__push(jule::new_ptr<_1a75ec478_Var>(_1a75ec478_Var(jule::Ptr<_1a759e606_Scope>(),jule::Ptr<_1d0747985_Token>(),jule::Str("_", 1),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::new_ptr<_1a7676c3e_TypeSymbol>(_1a7676c3e_TypeSymbol(jule::Ptr<_1d0759c1c_TypeDecl>(),(*_self_)._field_types[_1a9ad937a_i])),jule::Ptr<_1a7649be0_Value>(),jule::Ptr<_1a642cc9e_ReferenceStack>(),jule::Slice<jule::Ptr<_1d06c9ecd_Directive>>(),jule::Ptr<_1a75eb4aa_IterRelation>(),jule::Slice<jule::Ptr<_1a75ec478_Var>>())));
				}
			}
			_iter_next_1a9ad8e18:;
			++it;
			_1a9ad937a_i++;
			goto _iter_begin_1a9ad8e18;
		}
		_iter_end_1a9ad8e18:;
	}
	if ((_108517_j == 0LL)) {
		(*_self_)._field_vars=nullptr;
	}
}



inline void _1a76428db_check_exprs(_1a7641d08_RetTypeChecker* _self_) {
	if (((*_self_)._field_exprs.len() == 0LL)) {
		return;
	}
	jule::Slice<jule::Ptr<_1a7648b67_Data>> _110917_datas = jule::Slice<jule::Ptr<_1a7648b67_Data>>::alloc(0LL,static_cast<jule::I64>((*_self_)._field_exprs.len()));
	{
		auto &expr = (*_self_)._field_exprs;
		auto it = expr.begin();
		_iter_begin_1a9add25d:;
		if (it != expr.end()) {
			jule::I64 _1a9adcb86_i = it - expr.begin();
			jule::Ptr<_1d075b14c_Expr> _1a9add35c_expr = *it;
			{
				if (_1a9adcb86_i >= static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_types.len()))) {
					goto _iter_end_1a9add25d;
				}
				jule::Ptr<_1a7672da0_TypeKind> _111621_t = (*_self_)._field_types[_1a9adcb86_i];
				jule::Ptr<_1a7648b67_Data> _111821_d = _1a7664d92_eval_expr(_1a75d92de_evalp((*_self_)._field_sc.get()._field_s, jule::Trait<_1a768b25e_Lookup>((*_self_)._field_sc, 0),_111621_t), _1a9add35c_expr);
				if ((_111821_d == nullptr)) {
					goto _iter_next_1a9add25d;
				}
				_110917_datas = jule::alloc_for_append(_110917_datas,1);_110917_datas.__push(_111821_d);
				if ((!(_111821_d.get()._field_mutable)) && _1a7674247_mutable(_111821_d.get()._field_kind.ptr())) {
					_1a75d488e_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("mutable typed return expressions should be mutable", 50),jule::Slice<jule::Any>());
					return;
				}
				_1a7636072_AssignTypeChecker _113021_ac = _1a7636072_AssignTypeChecker((*_self_)._field_sc.get()._field_s,_111621_t,_111821_d,(*_self_)._field_error_token);
				_1a76371e9_check(&_113021_ac);
			}
			_iter_next_1a9add25d:;
			++it;
			_1a9adcb86_i++;
			goto _iter_begin_1a9add25d;
		}
		_iter_end_1a9add25d:;
	}
	if ((_110917_datas.len() > 1LL)) {
		(*_self_)._field_model=jule::Any(jule::new_ptr<_1a6420115_TupleExprModel>(_1a6420115_TupleExprModel(_110917_datas)));
	} else if ((_110917_datas.len() == 1LL)) {
		(*_self_)._field_model=_110917_datas[0LL].get()._field_model;
	}
}



inline jule::Bool _1a7642be9_check(_1a7641d08_RetTypeChecker* _self_,jule::Ptr<_1d075b14c_Expr>& _114929_e) {
	_1a76422ae_prepare_types(&(*_self_));
	_1a7642534_prepare_exprs(&(*_self_), _114929_e);
	_1a7642710_ret_vars(&(*_self_));
	jule::I64 _115413_n = (*_self_)._field_exprs.len();
	if ((_115413_n == 0LL) && ((*_self_)._field_types.len() > 0LL)) {
		if ((!(_1a6427bab_any_var((*_self_)._field_f.get()._field_decl.ptr())))) {
			_1a75d488e_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("return statements of non-void functions should have return expression", 69),jule::Slice<jule::Any>());
			return false;
		}
		return true;
	}
	if (((_115413_n > 0LL) && ((*_self_)._field_f != nullptr)) && _1a6426e96_is_void((*_self_)._field_f.get()._field_decl.ptr())) {
		_1a75d488e_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("void functions is cannot returns any value", 42),jule::Slice<jule::Any>());
		return false;
	}
	if (_115413_n > static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_types.len()))) {
		_1a75d488e_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("overflow return expressions", 27),jule::Slice<jule::Any>());
	} else if (_115413_n < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_types.len()))) {
		_1a75d488e_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("missing return expressions for multi-return", 43),jule::Slice<jule::Any>());
	}
	_1a76428db_check_exprs(&(*_self_));
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1a7641d08_RetTypeChecker _Src) {
	_Stream << "RetTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a75c928a_ImportInfo> _1a7643ee7_find_package(_1a76439db_SymbolTable* _self_,jule::Str _2535_ident) {
	{
		auto &expr = (*_self_)._field_imports;
		auto it = expr.begin();
		_iter_begin_1a9aea3ad:;
		if (it != expr.end()) {
			jule::Ptr<_1a75c928a_ImportInfo> _1a9aea4ac_pkg = *it;
			{
				if (_1a9aea4ac_pkg.get()._field_ident == _2535_ident) {
					return _1a9aea4ac_pkg;
				}
			}
			_iter_next_1a9aea3ad:;
			++it;
			goto _iter_begin_1a9aea3ad;
		}
		_iter_end_1a9aea3ad:;
	}
	return nullptr;
}



inline jule::Ptr<_1a75c928a_ImportInfo> _1a7644305_select_package(_1a76439db_SymbolTable* _self_,jule::Fn<jule::Bool(jule::Ptr<_1a75c928a_ImportInfo>)> _3737_selector) {
	if ((_3737_selector == nullptr)) {
		return nullptr;
	}
	{
		auto &expr = (*_self_)._field_imports;
		auto it = expr.begin();
		_iter_begin_1a9aeb678:;
		if (it != expr.end()) {
			jule::Ptr<_1a75c928a_ImportInfo> _1a9aea655_pkg = *it;
			{
				if (_3737_selector(_1a9aea655_pkg)) {
					return _1a9aea655_pkg;
				}
			}
			_iter_next_1a9aeb678:;
			++it;
			goto _iter_begin_1a9aeb678;
		}
		_iter_end_1a9aeb678:;
	}
	return nullptr;
}



inline jule::Ptr<_1a75ec478_Var> _1a76446ac_find_var(_1a76439db_SymbolTable* _self_,jule::Str _5231_ident,jule::Bool _5243_cpp_linked) {
	return _1a7645e61___find_var(&(*_self_), _5231_ident,_5243_cpp_linked,false);
}



inline jule::Ptr<_1a7672168_TypeAlias> _1a7644a64_find_type_alias(_1a76439db_SymbolTable* _self_,jule::Str _5838_ident,jule::Bool _5850_cpp_linked) {
	return _1a76463b2___find_type_alias(&(*_self_), _5838_ident,_5850_cpp_linked,false);
}



inline jule::Ptr<_1a64147be_Struct> _1a7644e1b_find_struct(_1a76439db_SymbolTable* _self_,jule::Str _6434_ident,jule::Bool _6446_cpp_linked) {
	{
		auto &expr = (*_self_)._field_structs;
		auto it = expr.begin();
		_iter_begin_1a9b0025e:;
		if (it != expr.end()) {
			jule::Ptr<_1a64147be_Struct> _1a9b0035d_s = *it;
			{
				if ((_1a9b0035d_s.get()._field_ident == _6434_ident) && (_1a9b0035d_s.get()._field_cpp_linked == _6446_cpp_linked)) {
					return _1a9b0035d_s;
				}
			}
			_iter_next_1a9b0025e:;
			++it;
			goto _iter_begin_1a9b0025e;
		}
		_iter_end_1a9b0025e:;
	}
	return nullptr;
}



inline jule::Ptr<_1a6426a45_Fn> _1a76452c3_find_fn(_1a76439db_SymbolTable* _self_,jule::Str _7530_ident,jule::Bool _7542_cpp_linked) {
	{
		auto &expr = (*_self_)._field_funcs;
		auto it = expr.begin();
		_iter_begin_1a9b01b89:;
		if (it != expr.end()) {
			jule::Ptr<_1a6426a45_Fn> _1a9b01c88_f = *it;
			{
				if ((_1a9b01c88_f.get()._field_ident == _7530_ident) && (_1a9b01c88_f.get()._field_cpp_linked == _7542_cpp_linked)) {
					return _1a9b01c88_f;
				}
			}
			_iter_next_1a9b01b89:;
			++it;
			goto _iter_begin_1a9b01b89;
		}
		_iter_end_1a9b01b89:;
	}
	return nullptr;
}



inline jule::Ptr<_1a7465bd7_Trait> _1a76455d1_find_trait(_1a76439db_SymbolTable* _self_,jule::Str _8633_ident) {
	{
		auto &expr = (*_self_)._field_traits;
		auto it = expr.begin();
		_iter_begin_1a9b03273:;
		if (it != expr.end()) {
			jule::Ptr<_1a7465bd7_Trait> _1a9b03372_t = *it;
			{
				if (_1a9b03372_t.get()._field_ident == _8633_ident) {
					return _1a9b03372_t;
				}
			}
			_iter_next_1a9b03273:;
			++it;
			goto _iter_begin_1a9b03273;
		}
		_iter_end_1a9b03273:;
	}
	return nullptr;
}



inline jule::Ptr<_1a7467de8_Enum> _1a76458de_find_enum(_1a76439db_SymbolTable* _self_,jule::Str _9732_ident) {
	{
		auto &expr = (*_self_)._field_enums;
		auto it = expr.begin();
		_iter_begin_1a9b04593:;
		if (it != expr.end()) {
			jule::Ptr<_1a7467de8_Enum> _1a9b04692_e = *it;
			{
				if (_1a9b04692_e.get()._field_ident == _9732_ident) {
					return _1a9b04692_e;
				}
			}
			_iter_next_1a9b04593:;
			++it;
			goto _iter_begin_1a9b04593;
		}
		_iter_end_1a9b04593:;
	}
	return nullptr;
}



inline jule::Ptr<_1a75ec478_Var> _1a7645e61___find_var(_1a76439db_SymbolTable* _self_,jule::Str _10829_ident,jule::Bool _10841_cpp_linked,jule::Bool _10859_reverse) {
	if (_10859_reverse) {
		jule::I64 _11021_i = ((*_self_)._field_vars.len() - 1LL);
		for (; (_11021_i >= 0LL); (_11021_i)--) {
			{
				jule::Ptr<_1a75ec478_Var> _11225_v = (*_self_)._field_vars[_11021_i];
				if ((_11225_v.get()._field_ident == _10829_ident) && (_11225_v.get()._field_cpp_linked == _10841_cpp_linked)) {
					return _11225_v;
				}
			}
		_iter_next_1a9b05b49:;
		}
		_iter_end_1a9b05b49:;
	} else {
		{
			auto &expr = (*_self_)._field_vars;
			auto it = expr.begin();
			_iter_begin_1a9b063ca:;
			if (it != expr.end()) {
				jule::Ptr<_1a75ec478_Var> _1a9b075b8_v = *it;
				{
					if ((_1a9b075b8_v.get()._field_ident == _10829_ident) && (_1a9b075b8_v.get()._field_cpp_linked == _10841_cpp_linked)) {
						return _1a9b075b8_v;
					}
				}
				_iter_next_1a9b063ca:;
				++it;
				goto _iter_begin_1a9b063ca;
			}
			_iter_end_1a9b063ca:;
		}
	}
	return nullptr;
}



inline jule::Ptr<_1a7672168_TypeAlias> _1a76463b2___find_type_alias(_1a76439db_SymbolTable* _self_,jule::Str _12736_ident,jule::Bool _12748_cpp_linked,jule::Bool _12766_reverse) {
	if (_12766_reverse) {
		jule::I64 _12921_i = ((*_self_)._field_type_aliases.len() - 1LL);
		for (; (_12921_i >= 0LL); (_12921_i)--) {
			{
				jule::Ptr<_1a7672168_TypeAlias> _13125_ta = (*_self_)._field_type_aliases[_12921_i];
				if ((_13125_ta.get()._field_ident == _12736_ident) && (_13125_ta.get()._field_cpp_linked == _12748_cpp_linked)) {
					return _13125_ta;
				}
			}
		_iter_next_1a9b08a81:;
		}
		_iter_end_1a9b08a81:;
	} else {
		{
			auto &expr = (*_self_)._field_type_aliases;
			auto it = expr.begin();
			_iter_begin_1b6d554a7:;
			if (it != expr.end()) {
				jule::Ptr<_1a7672168_TypeAlias> _1d077d3d3_ta = *it;
				{
					if ((_1d077d3d3_ta.get()._field_ident == _12736_ident) && (_1d077d3d3_ta.get()._field_cpp_linked == _12748_cpp_linked)) {
						return _1d077d3d3_ta;
					}
				}
				_iter_next_1b6d554a7:;
				++it;
				goto _iter_begin_1b6d554a7;
			}
			_iter_end_1b6d554a7:;
		}
	}
	return nullptr;
}



inline jule::Any _1a7646769_def_by_ident(_1a76439db_SymbolTable* _self_,jule::Str _14831_ident,jule::Bool _14843_cpp_linked) {
	{
		auto &expr = (*_self_)._field_vars;
		auto it = expr.begin();
		_iter_begin_1b68d5b09:;
		if (it != expr.end()) {
			jule::Ptr<_1a75ec478_Var> _1b659728d_v = *it;
			{
				if ((_1b659728d_v.get()._field_ident == _14831_ident) && (_1b659728d_v.get()._field_cpp_linked == _14843_cpp_linked)) {
					return jule::Any(_1b659728d_v);
				}
			}
			_iter_next_1b68d5b09:;
			++it;
			goto _iter_begin_1b68d5b09;
		}
		_iter_end_1b68d5b09:;
	}
	{
		auto &expr = (*_self_)._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_1a7790286:;
		if (it != expr.end()) {
			jule::Ptr<_1a7672168_TypeAlias> _1b66c1ac1_ta = *it;
			{
				if ((_1b66c1ac1_ta.get()._field_ident == _14831_ident) && (_1b66c1ac1_ta.get()._field_cpp_linked == _14843_cpp_linked)) {
					return jule::Any(_1b66c1ac1_ta);
				}
			}
			_iter_next_1a7790286:;
			++it;
			goto _iter_begin_1a7790286;
		}
		_iter_end_1a7790286:;
	}
	{
		auto &expr = (*_self_)._field_structs;
		auto it = expr.begin();
		_iter_begin_1a7790693:;
		if (it != expr.end()) {
			jule::Ptr<_1a64147be_Struct> _1b673a255_s = *it;
			{
				if ((_1b673a255_s.get()._field_ident == _14831_ident) && (_1b673a255_s.get()._field_cpp_linked == _14843_cpp_linked)) {
					return jule::Any(_1b673a255_s);
				}
			}
			_iter_next_1a7790693:;
			++it;
			goto _iter_begin_1a7790693;
		}
		_iter_end_1a7790693:;
	}
	{
		auto &expr = (*_self_)._field_funcs;
		auto it = expr.begin();
		_iter_begin_1a77a3321:;
		if (it != expr.end()) {
			jule::Ptr<_1a6426a45_Fn> _1b68d0ecd_f = *it;
			{
				if ((_1b68d0ecd_f.get()._field_ident == _14831_ident) && (_1b68d0ecd_f.get()._field_cpp_linked == _14843_cpp_linked)) {
					return jule::Any(_1b68d0ecd_f);
				}
			}
			_iter_next_1a77a3321:;
			++it;
			goto _iter_begin_1a77a3321;
		}
		_iter_end_1a77a3321:;
	}
	if (_14843_cpp_linked) {
		return jule::Any(nullptr);
	}
	{
		auto &expr = (*_self_)._field_traits;
		auto it = expr.begin();
		_iter_begin_1a77ada79:;
		if (it != expr.end()) {
			jule::Ptr<_1a7465bd7_Trait> _1b69001b7_t = *it;
			{
				if (_1b69001b7_t.get()._field_ident == _14831_ident) {
					return jule::Any(_1b69001b7_t);
				}
			}
			_iter_next_1a77ada79:;
			++it;
			goto _iter_begin_1a77ada79;
		}
		_iter_end_1a77ada79:;
	}
	{
		auto &expr = (*_self_)._field_enums;
		auto it = expr.begin();
		_iter_begin_1a77e94aa:;
		if (it != expr.end()) {
			jule::Ptr<_1a7467de8_Enum> _1b6977ccd_e = *it;
			{
				if (_1b6977ccd_e.get()._field_ident == _14831_ident) {
					return jule::Any(_1b6977ccd_e);
				}
			}
			_iter_next_1a77e94aa:;
			++it;
			goto _iter_begin_1a77e94aa;
		}
		_iter_end_1a77e94aa:;
	}
	return jule::Any(nullptr);
}



inline jule::Bool _1a7646bba_is_duplicated_ident(_1a76439db_SymbolTable* _self_,jule::U64 _19534_itself,jule::Str _19551_ident,jule::Bool _19563_cpp_linked) {
	{
		auto &expr = (*_self_)._field_vars;
		auto it = expr.begin();
		_iter_begin_1a78e74ed:;
		if (it != expr.end()) {
			jule::Ptr<_1a75ec478_Var> &_1a779ad52_v = *it;
			{
				if (((static_cast<jule::U64>(_1a779ad52_v) != _19534_itself) && (_1a779ad52_v.get()._field_ident == _19551_ident)) && (_1a779ad52_v.get()._field_cpp_linked == _19563_cpp_linked)) {
					return true;
				}
			}
			_iter_next_1a78e74ed:;
			++it;
			goto _iter_begin_1a78e74ed;
		}
		_iter_end_1a78e74ed:;
	}
	{
		auto &expr = (*_self_)._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_1a7951612:;
		if (it != expr.end()) {
			jule::Ptr<_1a7672168_TypeAlias> &_1a77a25c8_ta = *it;
			{
				if (((static_cast<jule::U64>(_1a77a25c8_ta) != _19534_itself) && (_1a77a25c8_ta.get()._field_ident == _19551_ident)) && (_1a77a25c8_ta.get()._field_cpp_linked == _19563_cpp_linked)) {
					return true;
				}
			}
			_iter_next_1a7951612:;
			++it;
			goto _iter_begin_1a7951612;
		}
		_iter_end_1a7951612:;
	}
	{
		auto &expr = (*_self_)._field_structs;
		auto it = expr.begin();
		_iter_begin_1a797a0b9:;
		if (it != expr.end()) {
			jule::Ptr<_1a64147be_Struct> &_1a77a3002_s = *it;
			{
				if (((static_cast<jule::U64>(_1a77a3002_s) != _19534_itself) && (_1a77a3002_s.get()._field_ident == _19551_ident)) && (_1a77a3002_s.get()._field_cpp_linked == _19563_cpp_linked)) {
					return true;
				}
			}
			_iter_next_1a797a0b9:;
			++it;
			goto _iter_begin_1a797a0b9;
		}
		_iter_end_1a797a0b9:;
	}
	{
		auto &expr = (*_self_)._field_funcs;
		auto it = expr.begin();
		_iter_begin_1a7997658:;
		if (it != expr.end()) {
			jule::Ptr<_1a6426a45_Fn> &_1a77a43bb_f = *it;
			{
				if (((static_cast<jule::U64>(_1a77a43bb_f) != _19534_itself) && (_1a77a43bb_f.get()._field_ident == _19551_ident)) && (_1a77a43bb_f.get()._field_cpp_linked == _19563_cpp_linked)) {
					return true;
				}
			}
			_iter_next_1a7997658:;
			++it;
			goto _iter_begin_1a7997658;
		}
		_iter_end_1a7997658:;
	}
	if (_19563_cpp_linked) {
		return false;
	}
	{
		auto &expr = (*_self_)._field_traits;
		auto it = expr.begin();
		_iter_begin_1a7a20b65:;
		if (it != expr.end()) {
			jule::Ptr<_1a7465bd7_Trait> &_1a77a471d_t = *it;
			{
				if ((static_cast<jule::U64>(_1a77a471d_t) != _19534_itself) && (_1a77a471d_t.get()._field_ident == _19551_ident)) {
					return true;
				}
			}
			_iter_next_1a7a20b65:;
			++it;
			goto _iter_begin_1a7a20b65;
		}
		_iter_end_1a7a20b65:;
	}
	{
		auto &expr = (*_self_)._field_enums;
		auto it = expr.begin();
		_iter_begin_1a7acc518:;
		if (it != expr.end()) {
			jule::Ptr<_1a7467de8_Enum> &_1a77a7b61_e = *it;
			{
				if ((static_cast<jule::U64>(_1a77a7b61_e) != _19534_itself) && (_1a77a7b61_e.get()._field_ident == _19551_ident)) {
					return true;
				}
			}
			_iter_next_1a7acc518:;
			++it;
			goto _iter_begin_1a7acc518;
		}
		_iter_end_1a7acc518:;
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1a76439db_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "passes:" << _Src._field_passes << ", ";
	_Stream << "imports:" << _Src._field_imports << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "type_aliases:" << _Src._field_type_aliases << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "funcs:" << _Src._field_funcs << ", ";
	_Stream << "traits:" << _Src._field_traits << ", ";
	_Stream << "enums:" << _Src._field_enums << ", ";
	_Stream << "impls:" << _Src._field_impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a7649052_is_nil(_1a7648b67_Data* _self_) {
	return _1a7673c6e_is_nil((*_self_)._field_kind.ptr());
}



inline jule::Bool _1a76492b6_is_void(_1a7648b67_Data* _self_) {
	return _1a7673ed3_void((*_self_)._field_kind.ptr());
}



inline jule::Bool _1a764952a_is_const(_1a7648b67_Data* _self_) {
	return ((*_self_)._field_constant != nullptr);
}



inline jule::Bool _1a7649838_good_operand(_1a7648b67_Data* _self_,jule::Ptr<_1a7648b67_Data>& _9636_other) {
	return (((_1a7674e5c_prim(_9636_other.get()._field_kind.ptr()) == nullptr) || (!(_1a767a825_is_any(_1a7674e5c_prim(_9636_other.get()._field_kind.ptr()).ptr())))) && (_1a76763ae_trt(_9636_other.get()._field_kind.ptr()) == nullptr)) && (!(_1a7673c6e_is_nil((*_self_)._field_kind.ptr())));
}







std::ostream &operator<<(std::ostream &_Stream, _1a7648b67_Data _Src) {
	_Stream << "Data{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "cast_kind:" << _Src._field_cast_kind << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "lvalue:" << _Src._field_lvalue << ", ";
	_Stream << "is_rune:" << _Src._field_is_rune << ", ";
	_Stream << "model:" << _Src._field_model << ", ";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "constant:" << _Src._field_constant;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a7649be0_Value _Src) {
	_Stream << "Value{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline void _1a764abad_push_err(_1a764a6d5_Eval* _self_,jule::Ptr<_1d0747985_Token> _12427_token,jule::Str _12442_fmt,jule::Slice<jule::Any> _12455_args) {
	_1a75d488e_push_err((*_self_)._field_s.ptr(), _12427_token,_12442_fmt,_12455_args);
}



inline void _1a764aecc_push_suggestion(_1a764a6d5_Eval* _self_,jule::Str _12934_fmt,jule::Slice<jule::Any> _12947_args) {
	_1a75d4bad_push_suggestion((*_self_)._field_s.ptr(), _12934_fmt,_12947_args);
}



inline void _1a764b1a8_allow_builtin(_1a764a6d5_Eval* _self_) {
	(*_self_)._field_dis_builtin=false;
}



inline void _1a764b384_disallow_builtin(_1a764a6d5_Eval* _self_) {
	(*_self_)._field_dis_builtin=true;
}



inline jule::Bool _1a764b5e8_is_unsafe(_1a764a6d5_Eval* _self_) {
	return (*_self_)._field_unsafety;
}



inline jule::Bool _1a764b85c_is_global(_1a764a6d5_Eval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1a75d1e74_Sema>>()) {
			_case_begin_1a7c15354:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a7bdaca8:;
			{
				return false;
			}
		}
		_match_end_1a7b9ecd3:;
	}
}



inline jule::Bool _1a764bb6a_apply_numeric_prefix(_1a764a6d5_Eval* _self_,jule::Ptr<_1a7648b67_Data>& _15644_d) {
	if (((((_15644_d == nullptr) || (_15644_d.get()._field_cast_kind != nullptr)) || (!(_1a764952a_is_const(_15644_d.ptr())))) || (_1a7674e5c_prim(_15644_d.get()._field_kind.ptr()) == nullptr)) || ((*_self_)._field_prefix == nullptr)) {
		return false;
	}
	jule::Ptr<_1a7677602_Prim> _16413_prim = _1a7674e5c_prim((*_self_)._field_prefix.ptr());
	if ((_16413_prim == nullptr)) {
		return false;
	}
	{
		
		if (_1a75b1bbd_is_float(_1a7677965_to_str(_16413_prim.ptr()))) {
			_case_begin_1a7da7c33:;
			{
				_15644_d.get()._field_kind=jule::new_ptr<_1a7672da0_TypeKind>((*((*_self_)._field_prefix)));
				_1a752207e_set_f64(_15644_d.get()._field_constant.ptr(), static_cast<jule::F64>(_1a7521314_as_f64(_15644_d.get()._field_constant.ptr())));
			}
		}
		else if (_1a75b134e_is_sig_int(_1a7677965_to_str(_16413_prim.ptr()))) {
			_case_begin_1a7da7da9:;
			{
				if ((!(_1a7634955_sig_assignable(_1a7677965_to_str(_16413_prim.ptr()),_15644_d)))) {
					return false;
				}
				_15644_d.get()._field_kind=jule::new_ptr<_1a7672da0_TypeKind>((*((*_self_)._field_prefix)));
				_1a7521589_set_i64(_15644_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1a7520d3b_as_i64(_15644_d.get()._field_constant.ptr())));
			}
		}
		else if (_1a75b163a_is_unsig_int(_1a7677965_to_str(_16413_prim.ptr()))) {
			_case_begin_1a7da85b3:;
			{
				if ((!(_1a7634a87_unsig_assignable(_1a7677965_to_str(_16413_prim.ptr()),_15644_d)))) {
					return false;
				}
				_15644_d.get()._field_kind=jule::new_ptr<_1a7672da0_TypeKind>((*((*_self_)._field_prefix)));
				_1a752180e_set_u64(_15644_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1a75210a0_as_u64(_15644_d.get()._field_constant.ptr())));
			}
		}
		_match_end_1a7bdda25:;
	}
	return true;
}



inline jule::Ptr<_1a7648b67_Data> _1a764bdce_lit_nil(_1a764a6d5_Eval* _self_) {
	jule::Ptr<_1a751ddb1_Const> _19317_constant = static__1a751ea2c_new_nil();
	return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),nullptr)),jule::Ptr<_1a7672da0_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(jule::Any(_19317_constant)),false,_19317_constant));
}



inline jule::Ptr<_1a7648b67_Data> _1a764c1dc_lit_str(_1a764a6d5_Eval* _self_,jule::Ptr<_1d075b944_LitExpr>& _20423_l) {
	jule::Str _20517_s = _20423_l.get()._field_value.slice(1LL,(_20423_l.get()._field_value.len() - 1LL));
	if (_1d0748cd8_is_raw_str(_20423_l.get()._field_value)) {
		_20517_s=_1a7633921_to_raw_str(static_cast<jule::Slice<jule::U8>>(_20517_s));
	} else {
		_20517_s=_1a7633b96_to_str(static_cast<jule::Slice<jule::U8>>(_20517_s));
	}
	jule::Ptr<_1a751ddb1_Const> _21117_constant = static__1a751e587_new_str(_20517_s);
	return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("str", 3)), 5))),jule::Ptr<_1a7672da0_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(jule::Any(_21117_constant)),false,_21117_constant));
}



inline jule::Ptr<_1a7648b67_Data> _1a764c4ea_lit_bool(_1a764a6d5_Eval* _self_,jule::Ptr<_1d075b944_LitExpr>& _22524_l) {
	jule::Ptr<_1a751ddb1_Const> _22617_constant = static__1a751e2e0_new_bool((_22524_l.get()._field_value == jule::Str("true", 4)));
	return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1a7672da0_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(jule::Any(_22617_constant)),false,_22617_constant));
}



inline jule::Ptr<_1a7648b67_Data> _1a764c808_lit_rune(_1a764a6d5_Eval* _self_,jule::Ptr<_1d075b944_LitExpr>& _23924_l) {
	
	
	jule::Str _24313_lt = _23924_l.get()._field_value.slice(1LL,(_23924_l.get()._field_value.len() - 1LL));
	jule::I32 _24413_r = _1a76337de_to_rune(static_cast<jule::Slice<jule::U8>>(_24313_lt));
	jule::Ptr<_1a7648b67_Data> _24517_data = jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::Ptr<_1a7672da0_TypeKind>(),jule::Ptr<_1a7672da0_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(),false,static__1a751cdb0_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_24413_r)))));
	jule::Bool _25313_is_ascii = _1a7631d1a_is_ascii(_24413_r);
	if (_25313_is_ascii) {
		_24517_data.get()._field_kind=jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("u8", 2)), 5)));
	} else {
		_24517_data.get()._field_kind=jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("i32", 3)), 5)));
	}
	_24517_data.get()._field_model=jule::Any(jule::new_ptr<_1a642335a_RuneExprModel>(_1a642335a_RuneExprModel(_24413_r)));
	_24517_data.get()._field_is_rune=true;
	return _24517_data;
}



inline jule::Ptr<_1a7648b67_Data> _1a764cb16_lit_float(_1a764a6d5_Eval* _self_,jule::Ptr<_1d075b944_LitExpr>& _26925_l) {
	
	jule::F64 _27213_f = ({
		auto except = _1a745e10e_parse_float(_26925_l.get()._field_value,64LL);
		(except.ok()) ? (except.result) : ({
			jule::MAX_F64;
		});
	});
	jule::Ptr<_1a751ddb1_Const> _27317_constant = static__1a751e82e_new_f64(_27213_f);
	return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("f64", 3)), 5))),jule::Ptr<_1a7672da0_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(jule::Any(_27317_constant)),false,_27317_constant));
}



inline jule::Ptr<_1a7648b67_Data> _1a764ce24_lit_int(_1a764a6d5_Eval* _self_,jule::Ptr<_1d075b944_LitExpr>& _28727_l) {
	
	jule::Str _29017_lit = _28727_l.get()._field_value;
	jule::I64 _29117_base = 0LL;
	{
		
		if (_1d095aa22_has_prefix(_29017_lit,jule::Str("0x", 2))) {
			_case_begin_1a7daa032:;
			{
				(_29017_lit).mut_slice(2LL);
				_29117_base=16LL;
			}
		}
		else if (_1d095aa22_has_prefix(_29017_lit,jule::Str("0b", 2))) {
			_case_begin_1a7daa1ca:;
			{
				(_29017_lit).mut_slice(2LL);
				_29117_base=2LL;
			}
		}
		else if (_1d095aa22_has_prefix(_29017_lit,jule::Str("0o", 2))) {
			_case_begin_1a7766d0c:;
			{
				(_29017_lit).mut_slice(2LL);
				_29117_base=8LL;
			}
		}
		else if ((_29017_lit[0LL] == '0') && (_29017_lit.len() > 1LL)) {
			_case_begin_1a7766d73:;
			{
				(_29017_lit).mut_slice(1LL);
				_29117_base=8LL;
			}
		}
		else {
			_case_begin_1a7766c96:;
			{
				_29117_base=10LL;
			}
		}
		_match_end_1a7766c41:;
	}
	jule::Ptr<_1a7648b67_Data> _31117_d = jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::Ptr<_1a7672da0_TypeKind>(),jule::Ptr<_1a7672da0_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(),false,jule::Ptr<_1a751ddb1_Const>()));
	jule::Bool _31717_ok = true;
	jule::I64 _31813_sig = ({
		auto except = _1a745c690_parse_int(_29017_lit,_29117_base,64LL);
		(except.ok()) ? (except.result) : ({
			_31717_ok=false;
			0LL;
		});
	});
	if (_31717_ok) {
		_31117_d.get()._field_constant=static__1a751cdb0_new_i64(_31813_sig);
		_31117_d.get()._field_kind=jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("int", 3)), 5)));
	} else {
		jule::U64 _32817_unsig = ({
			auto except = _1a745c55d_parse_uint(_29017_lit,_29117_base,64LL);
			(except.ok()) ? (except.result) : ({
				_1a764abad_push_err(&(*_self_), _28727_l.get()._field_token,jule::Str("arithmetic value overflow: this value too big", 45),jule::Slice<jule::Any>());
				_1a764aecc_push_suggestion(&(*_self_), jule::Str("floating-point literals may solve your problem", 46),jule::Slice<jule::Any>());
				jule::MAX_U64;
			});
		});
		_31117_d.get()._field_constant=static__1a751e09d_new_u64(_32817_unsig);
		_31117_d.get()._field_kind=jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("uint", 4)), 5)));
	}
	_31117_d.get()._field_model=jule::Any(_31117_d.get()._field_constant);
	if ((!(_1a764bb6a_apply_numeric_prefix(&(*_self_), _31117_d)))) {
		_1a766d1ca_fit_bitsize(_31117_d);
	}
	return _31117_d;
}



inline jule::Ptr<_1a7648b67_Data> _1a764d232_lit_num(_1a764a6d5_Eval* _self_,jule::Ptr<_1d075b944_LitExpr>& _34927_l) {
	{
		
		if (_1d07498ee_is_float(_34927_l.get()._field_value)) {
			_case_begin_1a7dc2027:;
			{
				return _1a764cb16_lit_float(&(*_self_), _34927_l);
			}
		}
		else {
			_case_begin_1a7dc1950:;
			{
				return _1a764ce24_lit_int(&(*_self_), _34927_l);
			}
		}
		_match_end_1a7dc1884:;
	}
}



inline jule::Ptr<_1a7648b67_Data> _1a764d540_eval_lit(_1a764a6d5_Eval* _self_,jule::Ptr<_1d075b944_LitExpr> _35827_lit) {
	{
		
		if (_1d0136891_is_nil(_35827_lit.ptr())) {
			_case_begin_1a7dc3a40:;
			{
				return _1a764bdce_lit_nil(&(*_self_));
			}
		}
		else if (_1d0748a41_is_str(_35827_lit.get()._field_value)) {
			_case_begin_1a7dc3ad9:;
			{
				return _1a764c1dc_lit_str(&(*_self_), _35827_lit);
			}
		}
		else if (_1d0749657_is_bool(_35827_lit.get()._field_value)) {
			_case_begin_1a7dc3b61:;
			{
				return _1a764c4ea_lit_bool(&(*_self_), _35827_lit);
			}
		}
		else if (_1d0749080_is_rune(_35827_lit.get()._field_value)) {
			_case_begin_1a7dc3864:;
			{
				return _1a764c808_lit_rune(&(*_self_), _35827_lit);
			}
		}
		else if (_1d0749b96_is_num(_35827_lit.get()._field_value)) {
			_case_begin_1a7dc38db:;
			{
				return _1a764d232_lit_num(&(*_self_), _35827_lit);
			}
		}
		else {
			_case_begin_1a7dc3402:;
			{
				return nullptr;
			}
		}
		_match_end_1a7dc3336:;
	}
}



inline jule::Any _1a764d84d_find_builtins(_1a764a6d5_Eval* _self_,jule::Str _37532_ident) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1a75c928a_ImportInfo>>()) {
			_case_begin_1a7dc6bca:;
			{
				jule::Any _37821_def = _1a766cebb_find_builtins_import(_37532_ident,(*_self_)._field_lookup.operator jule::Ptr<_1a75c928a_ImportInfo>());
				if (_37821_def != jule::Any(jule::Any(nullptr))) {
					return _37821_def;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a75d1e74_Sema>>()) {
			_case_begin_1a7dc6c41:;
			{
				jule::Any _38321_def = _1a766db59_find_builtins_sema(_37532_ident,(*_self_)._field_lookup.operator jule::Ptr<_1a75d1e74_Sema>());
				if (_38321_def != jule::Any(jule::Any(nullptr))) {
					return _38321_def;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a75b3b8c_ScopeChecker>>()) {
			_case_begin_1a7dc6cb8:;
			{
				jule::Any _38821_def = _1a766db59_find_builtins_sema(_37532_ident,(*_self_)._field_lookup.operator jule::Ptr<_1a75b3b8c_ScopeChecker>().get()._field_s);
				if (_38821_def != jule::Any(jule::Any(nullptr))) {
					return _38821_def;
				}
			}
		}
		_match_end_1a7dc6988:;
	}
	if ((*_self_)._field_dis_builtin) {
		return jule::Any(nullptr);
	}
	return _1a7699855_find_builtin_def(_37532_ident);
}



inline jule::Any _1a764dc05_get_def(_1a764a6d5_Eval* _self_,jule::Str _39926_ident,jule::Bool _39938_cpp_linked) {
	if ((!(_39938_cpp_linked))) {
		jule::Ptr<_1a7467de8_Enum> _40121_enm = _1a768b25e_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1a768b11b_find_enum((*_self_)._field_lookup, _39926_ident);
		if ((_40121_enm != nullptr)) {
			return jule::Any(_40121_enm);
		}
	}
	jule::Ptr<_1a75ec478_Var> _40717_v = _1a768b25e_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1a7689dd9_find_var((*_self_)._field_lookup, _39926_ident,_39938_cpp_linked);
	if ((_40717_v != nullptr)) {
		return jule::Any(_40717_v);
	}
	jule::Ptr<_1a6426a45_Fn> _41217_f = _1a768b25e_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1a768aa00_find_fn((*_self_)._field_lookup, _39926_ident,_39938_cpp_linked);
	if ((_41217_f != nullptr)) {
		return jule::Any(_41217_f);
	}
	jule::Ptr<_1a64147be_Struct> _41717_s = _1a768b25e_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1a768a648_find_struct((*_self_)._field_lookup, _39926_ident,_39938_cpp_linked);
	if ((_41717_s != nullptr)) {
		return jule::Any(_41717_s);
	}
	jule::Ptr<_1a7672168_TypeAlias> _42217_ta = _1a768b25e_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1a768a291_find_type_alias((*_self_)._field_lookup, _39926_ident,_39938_cpp_linked);
	if ((_42217_ta != nullptr)) {
		return jule::Any(_42217_ta);
	}
	return _1a764d84d_find_builtins(&(*_self_), _39926_ident);
}



inline void _1a764de7a_push_reference(_1a764a6d5_Eval* _self_,jule::Ptr<_1a642cc9e_ReferenceStack>& _43038_references) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1a75b3b8c_ScopeChecker>>()) {
			_case_begin_1a7dd1971:;
			{
				jule::Ptr<_1a75b3b8c_ScopeChecker> _43321_sc = _1a75b5cd2_get_root((*_self_)._field_lookup.operator jule::Ptr<_1a75b3b8c_ScopeChecker>());
				if ((!(_1a642dc5b_exist_1(_43038_references.ptr(), _43321_sc.get()._field_owner)))) {
					_1a642d94d_push(_43038_references.ptr(), jule::Any(_43321_sc.get()._field_owner));
				}
			}
		}
		else {
			_case_begin_1a7dd08d7:;
			{
				if (((*_self_)._field_owner != nullptr) && (!(_1a642dc5b_exist_0(_43038_references.ptr(), (*_self_)._field_owner)))) {
					_1a642d94d_push(_43038_references.ptr(), jule::Any((*_self_)._field_owner));
				}
			}
		}
		_match_end_1a7dd06d9:;
	}
}



inline void _1a764e200_push_reference_to_fn(_1a764a6d5_Eval* _self_,jule::Ptr<_1a6429be1_FnIns>& _44444_f) {
	_1a764de7a_push_reference(&(*_self_), _44444_f.get()._field_references);
}



inline void _1a764e475_push_reference_to_var(_1a764a6d5_Eval* _self_,jule::Ptr<_1a75ec478_Var>& _44845_v) {
	if ((_44845_v.get()._field_references != nullptr)) {
		_1a764de7a_push_reference(&(*_self_), _44845_v.get()._field_references);
	}
}



inline void _1a764e73e_push_reference_to_struct(_1a764a6d5_Eval* _self_,jule::Ptr<_1a641744d_StructIns>& _45448_s) {
	_1a764de7a_push_reference(&(*_self_), _45448_s.get()._field_references);
}



inline jule::Ptr<_1a7648b67_Data> _1a764ea3b___eval_enum(_1a764a6d5_Eval* _self_,jule::Ptr<_1a7467de8_Enum> _45830_enm) {
	return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_45830_enm, 3))),jule::Ptr<_1a7672da0_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(),true,nullptr));
}



inline jule::Ptr<_1a7648b67_Data> _1a764ede3_eval_enum(_1a764a6d5_Eval* _self_,jule::Ptr<_1a7467de8_Enum> _47032_enm,jule::Ptr<_1d0747985_Token> _47044_error_token) {
	if ((!(_1a75d5065_is_accessible_define((*_self_)._field_s.ptr(), _47032_enm.get()._field_public,_47032_enm.get()._field_token)))) {
		_1a764abad_push_err(&(*_self_), _47044_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any(_47032_enm.get()._field_ident)}));
		_1a764aecc_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	}
	return _1a764ea3b___eval_enum(&(*_self_), _47032_enm);
}



inline jule::Ptr<_1a7648b67_Data> _1a7650201___eval_struct(_1a764a6d5_Eval* _self_,jule::Ptr<_1a641744d_StructIns> _48032_s) {
	return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_48032_s, 0))),jule::Ptr<_1a7672da0_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(jule::Any(_48032_s)),true,nullptr));
}



inline jule::Ptr<_1a7648b67_Data> _1a76505a8_eval_struct(_1a764a6d5_Eval* _self_,jule::Ptr<_1a641744d_StructIns> _49334_s,jule::Ptr<_1d0747985_Token> _49349_error_token) {
	if ((!(_1a75d5065_is_accessible_define((*_self_)._field_s.ptr(), _49334_s.get()._field_decl.get()._field_public,_49334_s.get()._field_decl.get()._field_token)))) {
		_1a764abad_push_err(&(*_self_), _49349_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any(_49334_s.get()._field_decl.get()._field_ident)}));
		_1a764aecc_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	}
	_1a7650bd5_check_deprecated(&(*_self_), _49334_s.get()._field_decl.get()._field_directives,_49349_error_token);
	return _1a7650201___eval_struct(&(*_self_), _49334_s);
}



inline jule::Ptr<_1a7648b67_Data> _1a76508b6_eval_fn_ins(_1a764a6d5_Eval* _self_,jule::Ptr<_1a6429be1_FnIns> _50530_f) {
	return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_50530_f, 1))),jule::Ptr<_1a7672da0_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(jule::Any(_50530_f)),false,nullptr));
}



inline void _1a7650bd5_check_deprecated(_1a764a6d5_Eval* _self_,jule::Slice<jule::Ptr<_1d06c9ecd_Directive>>& _51840_directives,jule::Ptr<_1d0747985_Token> _51882_tok) {
	if (_1a764b5e8_is_unsafe(&(*_self_))) {
		return;
	}
	jule::Ptr<_1d06c9ecd_Directive> _52313_d = _1a766cb36_find_directive(_51840_directives,jule::Str("deprecated", 10));
	if ((_52313_d != nullptr)) {
		if ((_52313_d.get()._field_args.len() == 0LL)) {
			_1a764abad_push_err(&(*_self_), _51882_tok,jule::Str("deprecated usage: @", 19),jule::Slice<jule::Any>({jule::Any(jule::Str("this code is deprecated", 23))}));
		} else {
			_1a764abad_push_err(&(*_self_), _51882_tok,jule::Str("deprecated usage: @", 19),jule::Slice<jule::Any>({jule::Any(_52313_d.get()._field_args[0LL].get()._field_kind)}));
		}
		_1a764aecc_push_suggestion(&(*_self_), jule::Str("use Unsafe Jule for deprecated codes or replace to successor", 60),jule::Slice<jule::Any>());
	}
}



inline jule::Ptr<_1a7648b67_Data> _1a765108c_eval_fn(_1a764a6d5_Eval* _self_,jule::Ptr<_1a6426a45_Fn> _53430_f,jule::Ptr<_1d0747985_Token> _53438_error_token) {
	if ((!(_1a75d5065_is_accessible_define((*_self_)._field_s.ptr(), _53430_f.get()._field_public,_53430_f.get()._field_token)))) {
		_1a764abad_push_err(&(*_self_), _53438_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any(_53430_f.get()._field_ident)}));
		_1a764aecc_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	}
	_1a7650bd5_check_deprecated(&(*_self_), _53430_f.get()._field_directives,_53438_error_token);
	jule::Ptr<_1a6429be1_FnIns> _54317_ins = _1a6428690_instance(_53430_f);
	_1a764e200_push_reference_to_fn(&(*_self_), _54317_ins);
	return _1a76508b6_eval_fn_ins(&(*_self_), _54317_ins);
}



inline void _1a7651499_push_illegal_cycle_error(_1a764a6d5_Eval* _self_,jule::Ptr<_1a75ec478_Var>& _54844_v1,jule::Ptr<_1a75ec478_Var>& _54855_v2,jule::Str& _54870_message) {
	
	jule::Str _55113_refers_to = _1d0019664_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(_54844_v1.get()._field_ident),jule::Any(_54855_v2.get()._field_ident)}));
	(_54870_message).buffer.insert(0, (((_1d0940e58_repeat(jule::Str(" ", 1),4LL) + _55113_refers_to) + jule::Str("\n", 1))));
}



inline jule::Bool _1a7651840_check_cross_cycle(_1a764a6d5_Eval* _self_,jule::Ptr<_1a75ec478_Var>& _55537_v,jule::Str& _55551_message) {
	{
		auto &expr = _55537_v.get()._field_depends;
		auto it = expr.begin();
		_iter_begin_1a7decd77:;
		if (it != expr.end()) {
			jule::Ptr<_1a75ec478_Var> &_1a7dece76_d = *it;
			{
				if (_1a7dece76_d == (*_self_)._field_owner) {
					_1a7651499_push_illegal_cycle_error(&(*_self_), _55537_v,_1a7dece76_d,_55551_message);
					return false;
				}
				if ((!(_1a7651840_check_cross_cycle(&(*_self_), _1a7dece76_d,_55551_message)))) {
					_1a7651499_push_illegal_cycle_error(&(*_self_), _55537_v,_1a7dece76_d,_55551_message);
					return false;
				}
			}
			_iter_next_1a7decd77:;
			++it;
			goto _iter_begin_1a7decd77;
		}
		_iter_end_1a7decd77:;
	}
	return true;
}



inline jule::Bool _1a7651be7_check_illegal_cycles(_1a764a6d5_Eval* _self_,jule::Ptr<_1a75ec478_Var>& _57444_v,jule::Ptr<_1d0747985_Token> _57453_decl_token) {
	jule::Bool _57475_ok = jule::Bool();
	if (((*_self_)._field_owner == nullptr)) {
		_57475_ok = true;
		return _57475_ok;
	}
	if ((*_self_)._field_owner == _57444_v) {
		_1a764abad_push_err(&(*_self_), (*_self_)._field_owner.get()._field_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>({jule::Any((*_self_)._field_owner.get()._field_ident)}));
		_57475_ok = false;
		return _57475_ok;
	}
	jule::Str _58617_message = jule::Str();
	if ((!(_1a7651840_check_cross_cycle(&(*_self_), _57444_v,_58617_message)))) {
		jule::Str _58921_err_msg = _58617_message;
		_58617_message=jule::Str();
		_1a7651499_push_illegal_cycle_error(&(*_self_), (*_self_)._field_owner,_57444_v,_58617_message);
		_58921_err_msg=_58921_err_msg + _58617_message;
		_1a764abad_push_err(&(*_self_), _57453_decl_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>({jule::Any(_58921_err_msg)}));
		_57475_ok = false;
		return _57475_ok;
	}
	(*_self_)._field_owner.get()._field_depends = jule::alloc_for_append((*_self_)._field_owner.get()._field_depends,1);(*_self_)._field_owner.get()._field_depends.__push(_57444_v);
	_57475_ok = true;
	return _57475_ok;
}



inline jule::Ptr<_1a7648b67_Data> _1a765209e_eval_var(_1a764a6d5_Eval* _self_,jule::Ptr<_1a75ec478_Var> _60131_v,jule::Ptr<_1d0747985_Token> _60140_error_token) {
	if ((!(_1a75d5065_is_accessible_define((*_self_)._field_s.ptr(), _60131_v.get()._field_public,_60131_v.get()._field_token)))) {
		_1a764abad_push_err(&(*_self_), _60140_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any(_60131_v.get()._field_ident)}));
		_1a764aecc_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	}
	_1a7650bd5_check_deprecated(&(*_self_), _60131_v.get()._field_directives,_60140_error_token);
	_60131_v.get()._field_used=true;
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1a75d1e74_Sema>>()) {
			_case_begin_1a7e0759b:;
			{
				jule::Bool _61517_ok = _1a7651be7_check_illegal_cycles(&(*_self_), _60131_v,_60140_error_token);
				if ((!(_61517_ok))) {
					return nullptr;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a75b3b8c_ScopeChecker>>()) {
			_case_begin_1a7e07623:;
			{
				if ((!(_60131_v.get()._field_reference)) || _1a764b5e8_is_unsafe(&(*_self_))) {
					goto _match_end_1a7e07546;
				}
				jule::Ptr<_1a75b3b8c_ScopeChecker> _62321_s = (*_self_)._field_lookup.operator jule::Ptr<_1a75b3b8c_ScopeChecker>();
				while ((_62321_s.get()._field_owner == nullptr) && (_62321_s.get()._field_parent != nullptr)) {
					{
						_62321_s=_62321_s.get()._field_parent;
					}
				_iter_next_1a7e084e2:;
				}
				_iter_end_1a7e084e2:;
				if (((_62321_s.get()._field_owner != nullptr) && _62321_s.get()._field_owner.get()._field_anon) && (_60131_v.get()._field_scope != _62321_s.get()._field_owner.get()._field_scope)) {
					_1a764abad_push_err(&(*_self_), _60140_error_token,jule::Str("anonymous functions cannot access to reference definition @ of parent scope", 75),jule::Slice<jule::Any>({jule::Any(_60131_v.get()._field_ident)}));
				}
			}
		}
		_match_end_1a7e07546:;
	}
	_1a764e475_push_reference_to_var(&(*_self_), _60131_v);
	if ((!(_60131_v.get()._field_cpp_linked)) && ((_60131_v.get()._field_value == nullptr) || (_60131_v.get()._field_value.get()._field_data == nullptr))) {
		if (_60131_v.get()._field_constant) {
			_1a75e53e9_check_type_var((*_self_)._field_s, _60131_v,jule::Trait<_1a768b25e_Lookup>((*_self_)._field_s, 3));
			if ((_60131_v.get()._field_value.get()._field_data == nullptr)) {
				return nullptr;
			}
		}
	}
	if ((_60131_v.get()._field_kind == nullptr) || (_60131_v.get()._field_kind.get()._field_kind == nullptr)) {
		if ((_60131_v.get()._field_scope != nullptr)) {
			return nullptr;
		}
		_1a75e53e9_check_type_var((*_self_)._field_s, _60131_v,(*_self_)._field_lookup);
		if ((_60131_v.get()._field_kind == nullptr) || (_60131_v.get()._field_kind.get()._field_kind == nullptr)) {
			return nullptr;
		}
	}
	jule::Ptr<_1a7648b67_Data> _66317_d = jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(_60131_v.get()._field_kind.get()._field_kind,jule::Ptr<_1a7672da0_TypeKind>(),_60131_v.get()._field_mutable,_60131_v.get()._field_reference,(!(_60131_v.get()._field_constant)),jule::Bool(),jule::Any(jule::Any(_60131_v)),jule::Bool(),jule::Ptr<_1a751ddb1_Const>()));
	if (((!(_60131_v.get()._field_cpp_linked)) && _1a75ec830_is_initialized(_60131_v.ptr())) && (_60131_v.get()._field_value.get()._field_data != nullptr)) {
		_66317_d.get()._field_is_rune=_60131_v.get()._field_value.get()._field_data.get()._field_is_rune;
	}
	if (_60131_v.get()._field_constant && (_60131_v.get()._field_value.get()._field_data.get()._field_constant != nullptr)) {
		_66317_d.get()._field_constant=jule::new_ptr<_1a751ddb1_Const>((*(_60131_v.get()._field_value.get()._field_data.get()._field_constant)));
		_66317_d.get()._field_model=jule::Any(_66317_d.get()._field_constant);
	}
	if (_1a764952a_is_const(_66317_d.ptr())) {
		_1a764bb6a_apply_numeric_prefix(&(*_self_), _66317_d);
	}
	return _66317_d;
}



inline jule::Ptr<_1a7648b67_Data> _1a7652456_eval_type_alias(_1a764a6d5_Eval* _self_,jule::Ptr<_1a7672168_TypeAlias> _68738_ta,jule::Ptr<_1d0747985_Token> _68754_error_token) {
	if ((!(_1a75d5065_is_accessible_define((*_self_)._field_s.ptr(), _68738_ta.get()._field_public,_68738_ta.get()._field_token)))) {
		_1a764abad_push_err(&(*_self_), _68754_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any(_68738_ta.get()._field_ident)}));
		_1a764aecc_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	}
	_68738_ta.get()._field_used=true;
	jule::Trait<_1a7672971_Kind> _69617_kind = _68738_ta.get()._field_kind.get()._field_kind.get()._field_kind;
	jule::Ptr<_1a7648b67_Data> _69717_d = nullptr;
	{
		auto &_match_expr{ _69617_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a641744d_StructIns>>()) {
			_case_begin_1a7e18d82:;
			{
				_69717_d=_1a7650201___eval_struct(&(*_self_), _69617_kind.operator jule::Ptr<_1a641744d_StructIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a7467de8_Enum>>()) {
			_case_begin_1a7e18656:;
			{
				_69717_d=_1a764ea3b___eval_enum(&(*_self_), _69617_kind.operator jule::Ptr<_1a7467de8_Enum>());
			}
		}
		else {
			_case_begin_1a7e170c2:;
			{
				_69717_d=jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_68738_ta.get()._field_kind.get()._field_kind.get()._field_kind)),jule::Ptr<_1a7672da0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),true,jule::Ptr<_1a751ddb1_Const>()));
				if (_68738_ta.get()._field_cpp_linked) {
					_69717_d.get()._field_kind.get()._field_cpp_ident=_68738_ta.get()._field_ident;
				} else {
					_69717_d.get()._field_kind.get()._field_cpp_ident=_68738_ta.get()._field_kind.get()._field_kind.get()._field_cpp_ident;
				}
				_69717_d.get()._field_model=jule::Any(_69717_d.get()._field_kind);
			}
		}
		_match_end_1a7e1706c:;
	}
	_69717_d.get()._field_kind.get()._field_generic=_68738_ta.get()._field_generic;
	return _69717_d;
}



inline jule::Ptr<_1a7648b67_Data> _1a765280d_eval_def(_1a764a6d5_Eval* _self_,jule::Any _72131_def,jule::Ptr<_1d0747985_Token> _72141_ident) {
	{
		auto &_match_expr{ _72131_def };
		
		if (_match_expr.type_is<jule::Ptr<_1a75ec478_Var>>()) {
			_case_begin_1a7e1b071:;
			{
				return _1a765209e_eval_var(&(*_self_), _72131_def.operator jule::Ptr<_1a75ec478_Var>(),_72141_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a7467de8_Enum>>()) {
			_case_begin_1a7e1b0d7:;
			{
				return _1a764ede3_eval_enum(&(*_self_), _72131_def.operator jule::Ptr<_1a7467de8_Enum>(),_72141_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a64147be_Struct>>()) {
			_case_begin_1a7e1b14d:;
			{
				return _1a76505a8_eval_struct(&(*_self_), _1a6414bed_instance(_72131_def.operator jule::Ptr<_1a64147be_Struct>()),_72141_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6426a45_Fn>>()) {
			_case_begin_1a7e1b1b4:;
			{
				jule::Ptr<_1a6426a45_Fn> _73021_f = _72131_def.operator jule::Ptr<_1a6426a45_Fn>();
				if ((_73021_f.get()._field_ident != jule::Str("init", 4))) {
					return _1a765108c_eval_fn(&(*_self_), _73021_f,_72141_ident);
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6429be1_FnIns>>()) {
			_case_begin_1a7e1b22a:;
			{
				return _1a76508b6_eval_fn_ins(&(*_self_), _72131_def.operator jule::Ptr<_1a6429be1_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a7672168_TypeAlias>>()) {
			_case_begin_1a7e1b291:;
			{
				return _1a7652456_eval_type_alias(&(*_self_), _72131_def.operator jule::Ptr<_1a7672168_TypeAlias>(),_72141_ident);
			}
		}
		_match_end_1a7e1ae1c:;
	}
	_1a764abad_push_err(&(*_self_), _72141_ident,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>({jule::Any(_72141_ident.get()._field_kind)}));
	return nullptr;
}



inline jule::Ptr<_1a7648b67_Data> _1a7652b1b_eval_ident(_1a764a6d5_Eval* _self_,jule::Ptr<_1d075c00a_IdentExpr> _74329_ident) {
	jule::Any _74417_def = _1a764dc05_get_def(&(*_self_), _74329_ident.get()._field_ident,_74329_ident.get()._field_cpp_linked);
	return _1a765280d_eval_def(&(*_self_), _74417_def,_74329_ident.get()._field_token);
}



inline jule::Ptr<_1a7648b67_Data> _1a7652e29_eval_unary(jule::Ptr<_1a764a6d5_Eval> _self_,jule::Ptr<_1d075c1e7_UnaryExpr> _74834_u) {
	_1a7665315_UnaryEval _74917_unary = static__1a76657bb_new(_self_);
	return _1a7666a64_eval(&_74917_unary, _74834_u);
}



inline jule::Ptr<_1a7648b67_Data> _1a7653237_eval_variadic(jule::Ptr<_1a764a6d5_Eval> _self_,jule::Ptr<_1d075c3d4_VariadicExpr> _75337_v) {
	if ((_75337_v.get()._field_expr == nullptr)) {
		_1a764abad_push_err(_self_.ptr(), _75337_v.get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1a7672da0_TypeKind> _75917_prefix = _self_.get()._field_prefix;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_75917_prefix;
	});
	jule::Ptr<_1a7648b67_Data> _76317_d = _1a7664776_eval_expr_kind(_self_, jule::Any(_75337_v.get()._field_expr));
	if ((_76317_d == nullptr)) {
		return nullptr;
	}
	if ((!(_1a7674be8_variadicable(_76317_d.get()._field_kind.ptr())))) {
		_1a764abad_push_err(_self_.ptr(), _75337_v.get()._field_token,jule::Str("type @ is not variadicable", 26),jule::Slice<jule::Any>({jule::Any(_1a7673257_to_str(_76317_d.get()._field_kind.ptr()))}));
		return nullptr;
	}
	jule::Ptr<_1a767b56d_Slc> _77313_slc = _1a7675b72_slc(_76317_d.get()._field_kind.ptr());
	_76317_d.get()._field_kind=jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(_77313_slc.get()._field_elem.get()._field_cpp_ident,_77313_slc.get()._field_elem.get()._field_generic,true,_77313_slc.get()._field_elem.get()._field_kind));
	return _76317_d;
}



inline jule::Ptr<_1a7648b67_Data> _1a7653545_eval_unsafe(jule::Ptr<_1a764a6d5_Eval> _self_,jule::Ptr<_1d075bb31_UnsafeExpr> _78335_u) {
	jule::Bool _78413_unsafety = _self_.get()._field_unsafety;
	_self_.get()._field_unsafety=true;
	jule::Ptr<_1a7648b67_Data> _78717_d = _1a7664776_eval_expr_kind(_self_, jule::Any(_78335_u.get()._field_expr));
	_self_.get()._field_unsafety=_78413_unsafety;
	return _78717_d;
}



inline jule::Ptr<_1a7648b67_Data> _1a7653853_eval_arr(jule::Ptr<_1a764a6d5_Eval> _self_,jule::Ptr<_1d075dbaa_SliceExpr> _79432_s) {
	jule::Ptr<_1a767d718_Arr> _79617_pt = _1a767590d_arr(_self_.get()._field_prefix.ptr());
	jule::Ptr<_1a767d718_Arr> _79817_arr = jule::new_ptr<_1a767d718_Arr>(_1a767d718_Arr(false,0LL,_79617_pt.get()._field_elem));
	jule::Bool _80417_filled = false;
	if ((_79432_s.get()._field_exprs.len() == 2LL)) {
		{
			auto &_match_expr{ _79432_s.get()._field_exprs[1LL].get()._field_kind };
			
			if (_match_expr.type_is<jule::Ptr<_1d075c3d4_VariadicExpr>>()) {
				_case_begin_1a7e2d45c:;
				{
					if ((_79432_s.get()._field_exprs[1LL].get()._field_kind.operator jule::Ptr<_1d075c3d4_VariadicExpr>().get()._field_expr != nullptr)) {
						goto _match_end_1a7e2d3d5;
					}
					if (_79617_pt.get()._field_auto) {
						_1a764abad_push_err(_self_.ptr(), _79432_s.get()._field_token,jule::Str("auto-sized arrays cannot filled", 31),jule::Slice<jule::Any>());
						return nullptr;
					}
					_80417_filled=true;
					_79432_s.get()._field_exprs=_79432_s.get()._field_exprs.slice(0LL,1LL);
				}
			}
			_match_end_1a7e2d3d5:;
		}
	}
	_79817_arr.get()._field_n=static_cast<jule::I64>(_79432_s.get()._field_exprs.len());
	if ((!(_79617_pt.get()._field_auto))) {
		if (_79817_arr.get()._field_n > _79617_pt.get()._field_n) {
			_1a764abad_push_err(_self_.ptr(), _79432_s.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else if (_79817_arr.get()._field_n < _79617_pt.get()._field_n) {
			_79817_arr.get()._field_n=_79617_pt.get()._field_n;
		}
	}
	jule::Ptr<_1a641e4bb_ArrayExprModel> _83317_model = jule::new_ptr<_1a641e4bb_ArrayExprModel>(_1a641e4bb_ArrayExprModel(_79817_arr,jule::Slice<jule::Any>()));
	if (_80417_filled) {
		_83317_model.get()._field_elems=jule::Slice<jule::Any>::alloc(0LL,2LL);
	} else {
		_83317_model.get()._field_elems=jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::I64>(_79432_s.get()._field_exprs.len()));
	}
	jule::Ptr<_1a7672da0_TypeKind> _84217_prefix = _self_.get()._field_prefix;
	_self_.get()._field_prefix=_79817_arr.get()._field_elem;
	{
		auto &expr = _79432_s.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1a7e33b05:;
		if (it != expr.end()) {
			jule::Ptr<_1d075b14c_Expr> _1a7e33c37_elem = *it;
			{
				jule::Ptr<_1a7648b67_Data> _84521_d = _1a7664776_eval_expr_kind(_self_, jule::Any(_1a7e33c37_elem));
				if ((_84521_d == nullptr)) {
					goto _iter_next_1a7e33b05;
				}
				_1a75d9ae7_check_assign_type(_self_.get()._field_s, false,_79817_arr.get()._field_elem,_84521_d,_79432_s.get()._field_token);
				_83317_model.get()._field_elems = jule::alloc_for_append(_83317_model.get()._field_elems,1);_83317_model.get()._field_elems.__push(_84521_d.get()._field_model);
			}
			_iter_next_1a7e33b05:;
			++it;
			goto _iter_begin_1a7e33b05;
		}
		_iter_end_1a7e33b05:;
	}
	_self_.get()._field_prefix=_84217_prefix;
	if (_80417_filled) {
		_83317_model.get()._field_elems = jule::alloc_for_append(_83317_model.get()._field_elems,1);_83317_model.get()._field_elems.__push(jule::Any(nullptr));
	}
	return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_79817_arr, 10))),jule::Ptr<_1a7672da0_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_83317_model)),jule::Bool(),jule::Ptr<_1a751ddb1_Const>()));
}



inline jule::Ptr<_1a7648b67_Data> _1a7653c0a_eval_exp_slc(jule::Ptr<_1a764a6d5_Eval> _self_,jule::Ptr<_1d075dbaa_SliceExpr> _86936_s,jule::Ptr<_1a7672da0_TypeKind> _86955_elem_type) {
	jule::Ptr<_1a767b56d_Slc> _87017_slc = jule::new_ptr<_1a767b56d_Slc>(_1a767b56d_Slc(_86955_elem_type));
	jule::Ptr<_1a641b71b_SliceExprModel> _87417_model = jule::new_ptr<_1a641b71b_SliceExprModel>(_1a641b71b_SliceExprModel(_86955_elem_type,jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::I64>(_86936_s.get()._field_exprs.len()))));
	jule::Ptr<_1a7672da0_TypeKind> _87917_prefix = _self_.get()._field_prefix;
	_self_.get()._field_prefix=_87017_slc.get()._field_elem;
	{
		auto &expr = _86936_s.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1a7e38ca3:;
		if (it != expr.end()) {
			jule::Ptr<_1d075b14c_Expr> _1a7e38da2_elem = *it;
			{
				jule::Ptr<_1a7648b67_Data> _88221_d = _1a7664776_eval_expr_kind(_self_, jule::Any(_1a7e38da2_elem));
				if ((_88221_d == nullptr)) {
					goto _iter_next_1a7e38ca3;
				}
				_1a75d9ae7_check_assign_type(_self_.get()._field_s, false,_87017_slc.get()._field_elem,_88221_d,_86936_s.get()._field_token);
				_87417_model.get()._field_elems = jule::alloc_for_append(_87417_model.get()._field_elems,1);_87417_model.get()._field_elems.__push(_88221_d.get()._field_model);
			}
			_iter_next_1a7e38ca3:;
			++it;
			goto _iter_begin_1a7e38ca3;
		}
		_iter_end_1a7e38ca3:;
	}
	_self_.get()._field_prefix=_87917_prefix;
	return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_87017_slc, 7))),jule::Ptr<_1a7672da0_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_87417_model)),jule::Bool(),jule::Ptr<_1a751ddb1_Const>()));
}



inline jule::Ptr<_1a7648b67_Data> _1a7654018_eval_slice_expr(jule::Ptr<_1a764a6d5_Eval> _self_,jule::Ptr<_1d075dbaa_SliceExpr> _90039_s) {
	if ((_self_.get()._field_prefix != nullptr)) {
		{
			
			if ((_1a767590d_arr(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1a7e3c3c2:;
				{
					return _1a7653853_eval_arr(_self_, _90039_s);
				}
			}
			else if ((_1a7675b72_slc(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1a7e3c449:;
				{
					jule::Ptr<_1a767b56d_Slc> _90625_pt = _1a7675b72_slc(_self_.get()._field_prefix.ptr());
					return _1a7653c0a_eval_exp_slc(_self_, _90039_s,_90625_pt.get()._field_elem);
				}
			}
			_match_end_1a7e3c2b2:;
		}
	}
	jule::Ptr<_1a7672da0_TypeKind> _91117_prefix = _self_.get()._field_prefix;
	_self_.get()._field_prefix=nullptr;
	if ((_90039_s.get()._field_exprs.len() == 0LL)) {
		_1a764abad_push_err(_self_.ptr(), _90039_s.get()._field_token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1a7648b67_Data> _91917_first_elem = _1a7664776_eval_expr_kind(_self_, jule::Any(_90039_s.get()._field_exprs[0LL]));
	if ((_91917_first_elem == nullptr)) {
		return nullptr;
	}
	jule::Ptr<_1a7648b67_Data> _92417_d = _1a7653c0a_eval_exp_slc(_self_, _90039_s,_91917_first_elem.get()._field_kind);
	_self_.get()._field_prefix=_91117_prefix;
	return _92417_d;
}



inline void _1a765437b_check_integer_indexing_by_data(_1a764a6d5_Eval* _self_,jule::Ptr<_1a7648b67_Data>& _93054_d,jule::Ptr<_1d0747985_Token> _93064_token) {
	jule::Str _93113_err_key = _1a766ee13_check_data_for_integer_indexing(_93054_d);
	{
		auto &_match_expr{ _93113_err_key };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1a7e432da:;
			{
				return;
			}
		}
		else if (_match_expr == jule::Str("type @ is invalid for indexing", 30)) {
			_case_begin_1a7e430dc:;
			{
				_1a764abad_push_err(&(*_self_), _93064_token,_93113_err_key,jule::Slice<jule::Any>({jule::Any(_1a7673257_to_str(_93054_d.get()._field_kind.ptr()))}));
			}
		}
		else {
			_case_begin_1a7e4299e:;
			{
				_1a764abad_push_err(&(*_self_), _93064_token,_93113_err_key,jule::Slice<jule::Any>());
			}
		}
		_match_end_1a7e42e99:;
	}
}



inline void _1a7654733_indexing_ptr(_1a764a6d5_Eval* _self_,jule::Ptr<_1a7648b67_Data>& _94236_d,jule::Ptr<_1a7648b67_Data>& _94251_index,jule::Ptr<_1d075e4a2_IndexingExpr>& _94266_i) {
	_1a765437b_check_integer_indexing_by_data(&(*_self_), _94251_index,_94266_i.get()._field_token);
	jule::Ptr<_1a767e175_Ptr> _94517_ptr = _1a7675435_ptr(_94236_d.get()._field_kind.ptr());
	{
		
		if (_1a767eb48_is_unsafe(_94517_ptr.ptr())) {
			_case_begin_1a7e462dd:;
			{
				_1a764abad_push_err(&(*_self_), _94266_i.get()._field_token,jule::Str("unsafe pointers are not supports indexing", 41),jule::Slice<jule::Any>());
				return;
			}
		}
		else if ((!(_1a764b5e8_is_unsafe(&(*_self_))))) {
			_case_begin_1a7e46365:;
			{
				_1a764abad_push_err(&(*_self_), _94266_i.get()._field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
			}
		}
		_match_end_1a7e46200:;
	}
	_94236_d.get()._field_kind=_94517_ptr.get()._field_elem;
}



inline void _1a7654aeb_indexing_arr(_1a764a6d5_Eval* _self_,jule::Ptr<_1a7648b67_Data>& _95736_d,jule::Ptr<_1a7648b67_Data>& _95751_index,jule::Ptr<_1d075e4a2_IndexingExpr>& _95766_i) {
	jule::Ptr<_1a767d718_Arr> _95817_arr = _1a767590d_arr(_95736_d.get()._field_kind.ptr());
	_95736_d.get()._field_kind=_95817_arr.get()._field_elem;
	_1a765437b_check_integer_indexing_by_data(&(*_self_), _95751_index,_95766_i.get()._field_token);
	if (_1a764952a_is_const(_95751_index.ptr()) && (_1a7521314_as_f64(_95751_index.get()._field_constant.ptr()) >= static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_95817_arr.get()._field_n))))) {
		_1a764abad_push_err(&(*_self_), _95766_i.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
	}
}



inline void _1a7654eb4_indexing_slc(_1a764a6d5_Eval* _self_,jule::Ptr<_1a7648b67_Data>& _96636_d,jule::Ptr<_1a7648b67_Data>& _96651_index,jule::Ptr<_1d075e4a2_IndexingExpr>& _96666_i) {
	jule::Ptr<_1a767b56d_Slc> _96717_slc = _1a7675b72_slc(_96636_d.get()._field_kind.ptr());
	_96636_d.get()._field_kind=_96717_slc.get()._field_elem;
	_1a765437b_check_integer_indexing_by_data(&(*_self_), _96651_index,_96666_i.get()._field_token);
	if ((!(_1a764952a_is_const(_96651_index.ptr())))) {
		return;
	}
	{
		auto &_match_expr{ _96636_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1a641b71b_SliceExprModel>>()) {
			_case_begin_1a9be75a9:;
			{
				jule::Ptr<_1a641b71b_SliceExprModel> _97721_m = _96636_d.get()._field_model.operator jule::Ptr<_1a641b71b_SliceExprModel>();
				jule::F64 _97817_indx = _1a7521314_as_f64(_96651_index.get()._field_constant.ptr());
				if (_97817_indx >= static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_97721_m.get()._field_elems.len())))) {
					_1a764abad_push_err(&(*_self_), _96666_i.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					_96636_d.get()._field_model=_97721_m.get()._field_elems[static_cast<jule::I64>(static_cast<jule::U64>(_97817_indx))];
					_96636_d.get()._field_decl=true;
				}
			}
		}
		_match_end_1a9be7554:;
	}
}



inline void _1a765537c_indexing_map(_1a764a6d5_Eval* _self_,jule::Ptr<_1a7648b67_Data>& _98836_d,jule::Ptr<_1a7648b67_Data>& _98851_index,jule::Ptr<_1d075e4a2_IndexingExpr>& _98870_i) {
	if ((_98851_index == nullptr)) {
		return;
	}
	jule::Ptr<_1a767cb24_Map> _99317_m = _1a7676623_map(_98836_d.get()._field_kind.ptr());
	_1a7636072_AssignTypeChecker _99417_atc = _1a7636072_AssignTypeChecker((*_self_)._field_s,_99317_m.get()._field_key,_98851_index,_98870_i.get()._field_token);
	_1a76371e9_check(&_99417_atc);
	_98836_d.get()._field_kind=_99317_m.get()._field_val;
}



inline void _1a7655745_indexing_str(_1a764a6d5_Eval* _self_,jule::Ptr<_1a7648b67_Data>& _100536_d,jule::Ptr<_1a7648b67_Data>& _100551_index,jule::Ptr<_1d075e4a2_IndexingExpr>& _100566_i) {
	
	_100536_d.get()._field_kind=jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("u8", 2)), 5)));
	if ((_100551_index == nullptr)) {
		return;
	}
	_1a765437b_check_integer_indexing_by_data(&(*_self_), _100551_index,_100566_i.get()._field_token);
	if ((!(_1a764952a_is_const(_100551_index.ptr())))) {
		_100536_d.get()._field_constant=nullptr;
		return;
	}
	if (_1a764952a_is_const(_100536_d.ptr())) {
		jule::Ptr<_1d0747985_Token> _102117_error_token = _100566_i.get()._field_token;
		jule::I64 _102217_j = _1a7520d3b_as_i64(_100551_index.get()._field_constant.ptr());
		jule::Str _102317_s = _1a7520863_read_str(_100536_d.get()._field_constant.ptr());
		if (static_cast<jule::I64>(_102217_j) >= static_cast<jule::I64>(static_cast<jule::I64>(_102317_s.len()))) {
			_1a764abad_push_err(&(*_self_), _102117_error_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else {
			_1a752180e_set_u64(_100536_d.get()._field_constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_102317_s[_102217_j])));
		}
	}
}



inline void _1a7655b0d_to_indexing(_1a764a6d5_Eval* _self_,jule::Ptr<_1a7648b67_Data>& _103235_d,jule::Ptr<_1a7648b67_Data>& _103250_index,jule::Ptr<_1d075e4a2_IndexingExpr>& _103269_i) {
	{
		
		if ((_1a7675435_ptr(_103235_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a9c03b6a:;
			{
				_1a7654733_indexing_ptr(&(*_self_), _103235_d,_103250_index,_103269_i);
				return;
			}
		}
		else if ((_1a767590d_arr(_103235_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a9c03be2:;
			{
				_1a7654aeb_indexing_arr(&(*_self_), _103235_d,_103250_index,_103269_i);
				return;
			}
		}
		else if ((_1a7675b72_slc(_103235_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a9c03c69:;
			{
				_1a7654eb4_indexing_slc(&(*_self_), _103235_d,_103250_index,_103269_i);
				return;
			}
		}
		else if ((_1a7676623_map(_103235_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a9c03ce1:;
			{
				_1a765537c_indexing_map(&(*_self_), _103235_d,_103250_index,_103269_i);
				return;
			}
		}
		else if ((_1a7674e5c_prim(_103235_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a9c03d68:;
			{
				jule::Ptr<_1a7677602_Prim> _104717_prim = _1a7674e5c_prim(_103235_d.get()._field_kind.ptr());
				{
					
					if (_1a767a5b1_is_str(_104717_prim.ptr())) {
						_case_begin_1a9c08730:;
						{
							_1a7655745_indexing_str(&(*_self_), _103235_d,_103250_index,_103269_i);
							return;
						}
					}
					_match_end_1a9c08675:;
				}
			}
		}
		_match_end_1a9c03a49:;
	}
	_1a764abad_push_err(&(*_self_), _103269_i.get()._field_token,jule::Str("type @ is not support indexing", 30),jule::Slice<jule::Any>({jule::Any(_1a7673257_to_str(_103235_d.get()._field_kind.ptr()))}));
}



inline jule::Bool _1a7656009_push_generics_from_index_data(jule::Ptr<_1a764a6d5_Eval> _self_,jule::Ptr<_1d0759e09_IdentTypeDecl>& _105854_decl,jule::Ptr<_1d075e4a2_IndexingExpr>& _105881_i) {
	{
		auto &_match_expr{ _105881_i.get()._field_index.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d075c1e7_UnaryExpr>>()) {
			_case_begin_1a9c0b8ba:;
			{
				jule::Ptr<_1a7648b67_Data> _106321_d = _1a7652e29_eval_unary(_self_, _105881_i.get()._field_index.get()._field_kind.operator jule::Ptr<_1d075c1e7_UnaryExpr>());
				if ((!(_106321_d.get()._field_decl))) {
					_1a764abad_push_err(_self_.ptr(), _105881_i.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return false;
				}
				_105854_decl.get()._field_generics = jule::alloc_for_append(_105854_decl.get()._field_generics,1);_105854_decl.get()._field_generics.__push(jule::new_ptr<_1d0759c1c_TypeDecl>(_1d0759c1c_TypeDecl(jule::Ptr<_1d0747985_Token>(),jule::Any(jule::Any(_106321_d.get()._field_kind)))));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d0759c1c_TypeDecl>>()) {
			_case_begin_1a9c0b931:;
			{
				_105854_decl.get()._field_generics = jule::alloc_for_append(_105854_decl.get()._field_generics,1);_105854_decl.get()._field_generics.__push(_105881_i.get()._field_index.get()._field_kind.operator jule::Ptr<_1d0759c1c_TypeDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d075c00a_IdentExpr>>()) {
			_case_begin_1a9c0ab94:;
			{
				jule::Ptr<_1d075c00a_IdentExpr> _107421_expr = _105881_i.get()._field_index.get()._field_kind.operator jule::Ptr<_1d075c00a_IdentExpr>();
				_105854_decl.get()._field_generics = jule::alloc_for_append(_105854_decl.get()._field_generics,1);_105854_decl.get()._field_generics.__push(jule::new_ptr<_1d0759c1c_TypeDecl>(_1d0759c1c_TypeDecl(jule::Ptr<_1d0747985_Token>(),jule::Any(jule::Any(jule::new_ptr<_1d0759e09_IdentTypeDecl>(_1d0759e09_IdentTypeDecl(_107421_expr.get()._field_token,_107421_expr.get()._field_ident,jule::Bool(),jule::Slice<jule::Ptr<_1d0759c1c_TypeDecl>>())))))));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d075b526_TupleExpr>>()) {
			_case_begin_1a9c0ac0a:;
			{
				{
					auto &expr = _105881_i.get()._field_index.get()._field_kind.operator jule::Ptr<_1d075b526_TupleExpr>().get()._field_expr;
					auto it = expr.begin();
					_iter_begin_1a9c11095:;
					if (it != expr.end()) {
						jule::Ptr<_1d075b14c_Expr> _1a9c1111c_expr = *it;
						{
							{
								auto &_match_expr{ _1a9c1111c_expr.get()._field_kind };
								
								if (_match_expr.type_is<jule::Ptr<_1d0759c1c_TypeDecl>>()) {
									_case_begin_1a9c1186a:;
									{
										_105854_decl.get()._field_generics = jule::alloc_for_append(_105854_decl.get()._field_generics,1);_105854_decl.get()._field_generics.__push(_1a9c1111c_expr.get()._field_kind.operator jule::Ptr<_1d0759c1c_TypeDecl>());
									}
								}
								else if (_match_expr.type_is<jule::Ptr<_1d075c00a_IdentExpr>>()) {
									_case_begin_1a9c118d1:;
									{
										jule::Ptr<_1d075c00a_IdentExpr> _108729_expr = _1a9c1111c_expr.get()._field_kind.operator jule::Ptr<_1d075c00a_IdentExpr>();
										_105854_decl.get()._field_generics = jule::alloc_for_append(_105854_decl.get()._field_generics,1);_105854_decl.get()._field_generics.__push(jule::new_ptr<_1d0759c1c_TypeDecl>(_1d0759c1c_TypeDecl(jule::Ptr<_1d0747985_Token>(),jule::Any(jule::Any(jule::new_ptr<_1d0759e09_IdentTypeDecl>(_1d0759e09_IdentTypeDecl(_108729_expr.get()._field_token,_108729_expr.get()._field_ident,jule::Bool(),jule::Slice<jule::Ptr<_1d0759c1c_TypeDecl>>())))))));
									}
								}
								_match_end_1a9c117e3:;
							}
						}
						_iter_next_1a9c11095:;
						++it;
						goto _iter_begin_1a9c11095;
					}
					_iter_end_1a9c11095:;
				}
			}
		}
		else {
			_case_begin_1a9c0ab2d:;
			{
				_1a764abad_push_err(_self_.ptr(), _105881_i.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return false;
			}
		}
		_match_end_1a9c0aac8:;
	}
	return true;
}



inline jule::Ptr<_1a7648b67_Data> _1a76563e4_eval_ident_decl_from_indexing(jule::Ptr<_1a764a6d5_Eval> _self_,jule::Ptr<_1a7648b67_Data>& _110354_d,jule::Ptr<_1d075e4a2_IndexingExpr>& _110369_i) {
	jule::Ptr<_1d0759c1c_TypeDecl> _110417_tdecl = jule::new_ptr<_1d0759c1c_TypeDecl>(_1d0759c1c_TypeDecl());
	jule::Ptr<_1d0759e09_IdentTypeDecl> _110517_decl = nullptr;
	{
		auto &_match_expr{ _110369_i.get()._field_expr.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d075c00a_IdentExpr>>()) {
			_case_begin_1a9c1584c:;
			{
				jule::Ptr<_1d075c00a_IdentExpr> _110821_expr = _110369_i.get()._field_expr.get()._field_kind.operator jule::Ptr<_1d075c00a_IdentExpr>();
				_110517_decl=jule::new_ptr<_1d0759e09_IdentTypeDecl>(_1d0759e09_IdentTypeDecl(_110821_expr.get()._field_token,_110821_expr.get()._field_ident,jule::Bool(),jule::Slice<jule::Ptr<_1d0759c1c_TypeDecl>>()));
				_110417_tdecl.get()._field_kind=jule::Any(_110517_decl);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d075c7ad_NsSelectionExpr>>()) {
			_case_begin_1a9c158b3:;
			{
				jule::Ptr<_1d075c7ad_NsSelectionExpr> _111521_expr = _110369_i.get()._field_expr.get()._field_kind.operator jule::Ptr<_1d075c7ad_NsSelectionExpr>();
				_110517_decl=jule::new_ptr<_1d0759e09_IdentTypeDecl>(_1d0759e09_IdentTypeDecl(_111521_expr.get()._field_ident,_111521_expr.get()._field_ident.get()._field_kind,jule::Bool(),jule::Slice<jule::Ptr<_1d0759c1c_TypeDecl>>()));
				_110417_tdecl.get()._field_kind=jule::Any(jule::new_ptr<_1d075a0e6_NamespaceTypeDecl>(_1d075a0e6_NamespaceTypeDecl(_111521_expr.get()._field_ns,_110517_decl)));
			}
		}
		else {
			_case_begin_1a9c14ab0:;
			{
				_1a764abad_push_err(_self_.ptr(), _110369_i.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1a9c14a5a:;
	}
	if ((!(_1a7656009_push_generics_from_index_data(_self_, _110517_decl,_110369_i)))) {
		return nullptr;
	}
	return _1a765b2a6_eval_type(_self_.ptr(), _110417_tdecl);
}



inline jule::Ptr<_1a7648b67_Data> _1a76566e1_eval_indexing(jule::Ptr<_1a764a6d5_Eval> _self_,jule::Ptr<_1d075e4a2_IndexingExpr> _113437_i) {
	jule::Ptr<_1a7672da0_TypeKind> _113517_prefix = _self_.get()._field_prefix;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_113517_prefix;
	});
	jule::Ptr<_1a7648b67_Data> _113917_d = _1a7664776_eval_expr_kind(_self_, jule::Any(_113437_i.get()._field_expr));
	if ((_113917_d == nullptr)) {
		return nullptr;
	}
	if (_113917_d.get()._field_decl) {
		return _1a76563e4_eval_ident_decl_from_indexing(_self_, _113917_d,_113437_i);
	}
	_1a7648b67_Data _114917_old_d = (*(_113917_d));
	jule::Ptr<_1a7648b67_Data> _115117_index = _1a7664776_eval_expr_kind(_self_, jule::Any(_113437_i.get()._field_index));
	if ((_115117_index == nullptr)) {
		return nullptr;
	}
	_113917_d.get()._field_decl=false;
	_1a7655b0d_to_indexing(_self_.ptr(), _113917_d,_115117_index,_113437_i);
	if (_1a764952a_is_const(_113917_d.ptr())) {
		_113917_d.get()._field_decl=false;
		_113917_d.get()._field_model=jule::Any(_113917_d.get()._field_constant);
	} else if (_113917_d.get()._field_decl) {
		_113917_d.get()._field_decl=false;
	} else {
		_113917_d.get()._field_model=jule::Any(jule::new_ptr<_1a641bb8e_IndexingExprModel>(_1a641bb8e_IndexingExprModel(_113437_i.get()._field_token,jule::new_ptr<_1a7648b67_Data>(_114917_old_d),_115117_index)));
	}
	return _113917_d;
}



inline std::tuple<jule::Ptr<_1a7648b67_Data>,jule::Ptr<_1a7648b67_Data>> _1a76569ee_eval_slicing_exprs(jule::Ptr<_1a764a6d5_Eval> _self_,jule::Ptr<_1d075eaac_SlicingExpr>& _118243_s) {
	jule::Ptr<_1a7672da0_TypeKind> _118317_prefix = _self_.get()._field_prefix;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_118317_prefix;
	});
	jule::Ptr<_1a7648b67_Data> _118717_l = nullptr;
	jule::Ptr<_1a7648b67_Data> _118817_r = nullptr;
	if ((_118243_s.get()._field_start != nullptr)) {
		_118717_l=_1a7664776_eval_expr_kind(_self_, jule::Any(_118243_s.get()._field_start));
		if ((_118717_l != nullptr)) {
			_1a765437b_check_integer_indexing_by_data(_self_.ptr(), _118717_l,_118243_s.get()._field_token);
		} else {
			return std::make_tuple(nullptr,nullptr);
		}
	} else {
		_118717_l=jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("int", 3)), 5))),jule::Ptr<_1a7672da0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),static__1a751cdb0_new_i64(0LL)));
		_118717_l.get()._field_model=jule::Any(_118717_l.get()._field_constant);
	}
	if ((_118243_s.get()._field_to != nullptr)) {
		_118817_r=_1a7664776_eval_expr_kind(_self_, jule::Any(_118243_s.get()._field_to));
		if ((_118817_r != nullptr)) {
			_1a765437b_check_integer_indexing_by_data(_self_.ptr(), _118817_r,_118243_s.get()._field_token);
		} else {
			return std::make_tuple(nullptr,nullptr);
		}
	}
	return std::make_tuple(_118717_l,_118817_r);
}



inline void _1a7656c74_slicing_arr(_1a764a6d5_Eval* _self_,jule::Ptr<_1a7648b67_Data>& _121731_d) {
	jule::Ptr<_1a7672da0_TypeKind> _121817_elem_type = _1a767590d_arr(_121731_d.get()._field_kind.ptr()).get()._field_elem;
	_121731_d.get()._field_kind=jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(jule::new_ptr<_1a767b56d_Slc>(_1a767b56d_Slc(_121817_elem_type)), 7)));
	_121731_d.get()._field_lvalue=false;
	_121731_d.get()._field_mutable=_121731_d.get()._field_mutable || (!(_1a7674247_mutable(_121817_elem_type.ptr())));
}



inline void _1a765713c_slicing_str(_1a764a6d5_Eval* _self_,jule::Ptr<_1a7648b67_Data>& _123231_d,jule::Ptr<_1a7648b67_Data>& _123242_l,jule::Ptr<_1a7648b67_Data>& _123253_r) {
	_123231_d.get()._field_lvalue=false;
	_123231_d.get()._field_mutable=true;
	if ((!(_1a764952a_is_const(_123231_d.ptr())))) {
		return;
	}
	if ((_123242_l == nullptr) || (_123253_r == nullptr)) {
		_123231_d.get()._field_constant=nullptr;
		return;
	}
	if (_1a764952a_is_const(_123242_l.ptr()) && _1a764952a_is_const(_123253_r.ptr())) {
		jule::I64 _124517_left = _1a7520d3b_as_i64(_123242_l.get()._field_constant.ptr());
		if ((_124517_left < 0LL)) {
			return;
		}
		jule::Str _125017_s = _1a7520863_read_str(_123231_d.get()._field_constant.ptr());
		jule::I64 _125121_right = 0LL;
		if ((_123253_r == nullptr)) {
			_125121_right=static_cast<jule::I64>(static_cast<jule::I64>(_125017_s.len()));
		} else {
			_125121_right=static_cast<jule::I64>(_1a7520d3b_as_i64(_123253_r.get()._field_constant.ptr()));
		}
		if (_124517_left > _125121_right) {
			return;
		}
		_1a7521d09_set_str(_123231_d.get()._field_constant.ptr(), _125017_s.slice(_124517_left,_125121_right));
		_123231_d.get()._field_decl=true;
	} else {
		_123231_d.get()._field_constant=nullptr;
	}
}



inline void _1a765759e_check_slicing(_1a764a6d5_Eval* _self_,jule::Ptr<_1a7648b67_Data>& _126837_d,jule::Ptr<_1a7648b67_Data>& _126848_l,jule::Ptr<_1a7648b67_Data>& _126859_r,jule::Ptr<_1d075eaac_SlicingExpr>& _126870_s) {
	{
		
		if ((_1a767590d_arr(_126837_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a9c2db84:;
			{
				_1a7656c74_slicing_arr(&(*_self_), _126837_d);
				return;
			}
		}
		else if ((_1a7675b72_slc(_126837_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a9c2dc0b:;
			{
				return;
			}
		}
		else if ((_1a7674e5c_prim(_126837_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a9c2dc83:;
			{
				jule::Ptr<_1a7677602_Prim> _127617_prim = _1a7674e5c_prim(_126837_d.get()._field_kind.ptr());
				{
					
					if (_1a767a5b1_is_str(_127617_prim.ptr())) {
						_case_begin_1a9c311e7:;
						{
							_1a765713c_slicing_str(&(*_self_), _126837_d,_126848_l,_126859_r);
							return;
						}
					}
					_match_end_1a9c3113c:;
				}
			}
		}
		_match_end_1a9c2da85:;
	}
	_1a764abad_push_err(&(*_self_), _126870_s.get()._field_token,jule::Str("type @ is not support slicing", 29),jule::Slice<jule::Any>({jule::Any(_1a7673257_to_str(_126837_d.get()._field_kind.ptr()))}));
}



inline jule::Ptr<_1a7648b67_Data> _1a76578ac_eval_slicing(jule::Ptr<_1a764a6d5_Eval> _self_,jule::Ptr<_1d075eaac_SlicingExpr> _128736_s) {
	jule::Ptr<_1a7648b67_Data> _128817_d = _1a7664776_eval_expr_kind(_self_, jule::Any(_128736_s.get()._field_expr));
	if ((_128817_d == nullptr)) {
		return nullptr;
	}
	jule::Ptr<_1a7648b67_Data> _129318_l;
	jule::Ptr<_1a7648b67_Data> _129325_r;
	std::tie(_129318_l,_129325_r) = _1a76569ee_eval_slicing_exprs(_self_, _128736_s);
	if ((_129318_l == nullptr)) {
		return _128817_d;
	}
	_128817_d.get()._field_decl=false;
	_1a765759e_check_slicing(_self_.ptr(), _128817_d,_129318_l,_129325_r,_128736_s);
	_128817_d.get()._field_cast_kind=nullptr;
	if (_1a764952a_is_const(_128817_d.ptr())) {
		_128817_d.get()._field_decl=false;
		_128817_d.get()._field_model=jule::Any(_128817_d.get()._field_constant);
	} else if (_128817_d.get()._field_decl) {
		_128817_d.get()._field_decl=false;
	} else {
		jule::Ptr<_1a641cdb0_SlicingExprModel> _131221_model = jule::new_ptr<_1a641cdb0_SlicingExprModel>(_1a641cdb0_SlicingExprModel(_128736_s.get()._field_token,_128817_d.get()._field_model,_129318_l.get()._field_model,jule::Any()));
		if ((_129325_r != nullptr)) {
			_131221_model.get()._field_right=_129325_r.get()._field_model;
		}
		_128817_d.get()._field_model=jule::Any(_131221_model);
	}
	return _128817_d;
}



inline void _1a7657c75_cast_ptr(_1a764a6d5_Eval* _self_,jule::Ptr<_1a7672da0_TypeKind> _132531_t,jule::Ptr<_1a7648b67_Data> _132549_d,jule::Ptr<_1d0747985_Token> _132559_error_token) {
	jule::Ptr<_1a767ab11_Sptr> _132613_sptr = _1a76751c1_sptr(_132549_d.get()._field_kind.ptr());
	if ((_132613_sptr != nullptr)) {
		if ((!(_1a7673565_equals(_1a7675435_ptr(_132531_t.ptr()).get()._field_elem, _132613_sptr.get()._field_elem)))) {
			_1a764abad_push_err(&(*_self_), _132559_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_1a7673257_to_str(_132549_d.get()._field_kind.ptr())),jule::Any(_1a7673257_to_str(_132531_t.ptr()))}));
		}
		return;
	}
	if ((!(_1a764b5e8_is_unsafe(&(*_self_))))) {
		_1a764abad_push_err(&(*_self_), _132559_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_1a7677602_Prim> _133913_prim = _1a7674e5c_prim(_132549_d.get()._field_kind.ptr());
	if ((_1a7675435_ptr(_132549_d.get()._field_kind.ptr()) == nullptr) && ((_133913_prim == nullptr) || (!(_1a75b18d2_is_int(_1a7677965_to_str(_133913_prim.ptr())))))) {
		_1a764abad_push_err(&(*_self_), _132559_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_1a7673257_to_str(_132549_d.get()._field_kind.ptr())),jule::Any(_1a7673257_to_str(_132531_t.ptr()))}));
	}
	_132549_d.get()._field_constant=nullptr;
}



inline void _1a765813d_cast_struct(_1a764a6d5_Eval* _self_,jule::Ptr<_1a7672da0_TypeKind> _134734_t,jule::Ptr<_1a7648b67_Data> _134752_d,jule::Ptr<_1d0747985_Token> _134762_error_token) {
	jule::Ptr<_1a7465bd7_Trait> _134817_tr = _1a76763ae_trt(_134752_d.get()._field_kind.ptr());
	if ((_134817_tr == nullptr)) {
		_1a764abad_push_err(&(*_self_), _134762_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_1a7673257_to_str(_134752_d.get()._field_kind.ptr())),jule::Any(_1a7673257_to_str(_134734_t.ptr()))}));
		return;
	}
	jule::Ptr<_1a641744d_StructIns> _135417_s = _1a767614a_strct(_134734_t.ptr());
	_1a764e73e_push_reference_to_struct(&(*_self_), _135417_s);
	if ((!(_1a6415cdc_is_implements(_135417_s.get()._field_decl.ptr(), _134817_tr)))) {
		_1a764abad_push_err(&(*_self_), _134762_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_1a7673257_to_str(_134752_d.get()._field_kind.ptr())),jule::Any(_1a7673257_to_str(_134734_t.ptr()))}));
	}
}



inline void _1a7658506_cast_ref(_1a764a6d5_Eval* _self_,jule::Ptr<_1a7672da0_TypeKind> _136231_t,jule::Ptr<_1a7648b67_Data> _136249_d,jule::Ptr<_1d0747985_Token> _136259_error_token) {
	jule::Ptr<_1a767ab11_Sptr> _136317_sptr = _1a76751c1_sptr(_136231_t.ptr());
	jule::Ptr<_1a767e175_Ptr> _136517_ptr = _1a7675435_ptr(_136249_d.get()._field_kind.ptr());
	if ((_136517_ptr != nullptr) && _1a7673565_equals(_136317_sptr.get()._field_elem, _136517_ptr.get()._field_elem)) {
		if ((!(_1a764b5e8_is_unsafe(&(*_self_))))) {
			_1a764abad_push_err(&(*_self_), _136259_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		}
		return;
	}
	if ((_1a767614a_strct(_136317_sptr.get()._field_elem.ptr()) != nullptr)) {
		_1a765813d_cast_struct(&(*_self_), _136317_sptr.get()._field_elem,_136249_d,_136259_error_token);
		return;
	}
	_1a764abad_push_err(&(*_self_), _136259_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_1a7673257_to_str(_136249_d.get()._field_kind.ptr())),jule::Any(_1a7673257_to_str(_136231_t.ptr()))}));
}



inline void _1a76588be_cast_slc(_1a764a6d5_Eval* _self_,jule::Ptr<_1a7672da0_TypeKind> _138431_t,jule::Ptr<_1a7648b67_Data> _138449_d,jule::Ptr<_1d0747985_Token> _138459_error_token) {
	if ((_1a7675699_enm(_138449_d.get()._field_kind.ptr()) != nullptr)) {
		if ((_1a7674e5c_prim(_1a7675699_enm(_138449_d.get()._field_kind.ptr()).get()._field_kind.get()._field_kind.ptr()) == nullptr) || (!(_1a767a5b1_is_str(_1a7674e5c_prim(_1a7675699_enm(_138449_d.get()._field_kind.ptr()).get()._field_kind.get()._field_kind.ptr()).ptr())))) {
			_1a764abad_push_err(&(*_self_), _138459_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_1a7673257_to_str(_138449_d.get()._field_kind.ptr())),jule::Any(_1a7673257_to_str(_138431_t.ptr()))}));
			return;
		}
	} else if ((_1a7674e5c_prim(_138449_d.get()._field_kind.ptr()) == nullptr) || (!(_1a767a5b1_is_str(_1a7674e5c_prim(_138449_d.get()._field_kind.ptr()).ptr())))) {
		_1a764abad_push_err(&(*_self_), _138459_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_1a7673257_to_str(_138449_d.get()._field_kind.ptr())),jule::Any(_1a7673257_to_str(_138431_t.ptr()))}));
		return;
	}
	_138431_t=_1a7675b72_slc(_138431_t.ptr()).get()._field_elem;
	jule::Ptr<_1a7677602_Prim> _139613_prim = _1a7674e5c_prim(_138431_t.ptr());
	if ((_139613_prim == nullptr) || ((!(_1a7678b86_is_u8(_139613_prim.ptr()))) && (!(_1a76786ad_is_i32(_139613_prim.ptr()))))) {
		_1a764abad_push_err(&(*_self_), _138459_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_1a7673257_to_str(_138449_d.get()._field_kind.ptr())),jule::Any(_1a7673257_to_str(_138431_t.ptr()))}));
	}
}



inline void _1a7658bdd_cast_str(_1a764a6d5_Eval* _self_,jule::Ptr<_1a7648b67_Data> _140231_d,jule::Ptr<_1d0747985_Token> _140241_error_token) {
	if ((_1a7675699_enm(_140231_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1a7467de8_Enum> _140421_e = _1a7675699_enm(_140231_d.get()._field_kind.ptr());
		if ((_1a7674e5c_prim(_140421_e.get()._field_kind.get()._field_kind.ptr()) != nullptr) && _1a767a5b1_is_str(_1a7674e5c_prim(_140421_e.get()._field_kind.get()._field_kind.ptr()).ptr())) {
			return;
		}
	}
	if ((_1a7674e5c_prim(_140231_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1a7677602_Prim> _141117_prim = _1a7674e5c_prim(_140231_d.get()._field_kind.ptr());
		if ((!(_1a7678b86_is_u8(_141117_prim.ptr()))) && (!(_1a76786ad_is_i32(_141117_prim.ptr())))) {
			_1a764abad_push_err(&(*_self_), _140241_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_1a7673257_to_str(_140231_d.get()._field_kind.ptr()))}));
		}
		return;
	}
	if ((_1a7675b72_slc(_140231_d.get()._field_kind.ptr()) == nullptr)) {
		_1a764abad_push_err(&(*_self_), _140241_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_1a7673257_to_str(_140231_d.get()._field_kind.ptr()))}));
		return;
	}
	jule::Ptr<_1a7672da0_TypeKind> _142317_t = _1a7675b72_slc(_140231_d.get()._field_kind.ptr()).get()._field_elem;
	jule::Ptr<_1a7677602_Prim> _142413_prim = _1a7674e5c_prim(_142317_t.ptr());
	if ((_142413_prim == nullptr) || ((!(_1a7678b86_is_u8(_142413_prim.ptr()))) && (!(_1a76786ad_is_i32(_142413_prim.ptr()))))) {
		_1a764abad_push_err(&(*_self_), _140241_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_1a7673257_to_str(_140231_d.get()._field_kind.ptr()))}));
	}
}



inline void _1a76590a6_cast_int(_1a764a6d5_Eval* _self_,jule::Ptr<_1a7672da0_TypeKind> _143031_t,jule::Ptr<_1a7648b67_Data> _143049_d,jule::Ptr<_1d0747985_Token> _143059_error_token) {
	if (_1a764952a_is_const(_143049_d.ptr())) {
		jule::Ptr<_1a7677602_Prim> _143217_prim = _1a7674e5c_prim(_143031_t.ptr());
		{
			
			if (_1a75b134e_is_sig_int(_143217_prim.get()._field_kind)) {
				_case_begin_1a9c58a5a:;
				{
					_1a7521589_set_i64(_143049_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1a7520d3b_as_i64(_143049_d.get()._field_constant.ptr())));
				}
			}
			else if (_1a75b163a_is_unsig_int(_143217_prim.get()._field_kind)) {
				_case_begin_1a9c58ad2:;
				{
					_1a752180e_set_u64(_143049_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1a75210a0_as_u64(_143049_d.get()._field_constant.ptr())));
				}
			}
			_match_end_1a9c5898e:;
		}
	}
	if ((_1a7675699_enm(_143049_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1a7467de8_Enum> _144217_e = _1a7675699_enm(_143049_d.get()._field_kind.ptr());
		if (_1a75b1e65_is_num(_1a7673257_to_str(_144217_e.get()._field_kind.get()._field_kind.ptr()))) {
			return;
		}
	}
	if ((_1a76751c1_sptr(_143049_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1a7677602_Prim> _144917_prim = _1a7674e5c_prim(_143031_t.ptr());
		if ((!(_1a767a0d8_is_uintptr(_144917_prim.ptr())))) {
			_1a764abad_push_err(&(*_self_), _143059_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_1a7673257_to_str(_143049_d.get()._field_kind.ptr())),jule::Any(_1a7673257_to_str(_143031_t.ptr()))}));
		}
		return;
	}
	if ((_1a7675435_ptr(_143049_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1a7677602_Prim> _145617_prim = _1a7674e5c_prim(_143031_t.ptr());
		if (_1a767a0d8_is_uintptr(_145617_prim.ptr())) {
		} else if ((!(_1a764b5e8_is_unsafe(&(*_self_))))) {
			_1a764abad_push_err(&(*_self_), _143059_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		} else if (((((!(_1a76786ad_is_i32(_145617_prim.ptr()))) && (!(_1a7678922_is_i64(_145617_prim.ptr())))) && (!(_1a7678dea_is_u16(_145617_prim.ptr())))) && (!(_1a767915e_is_u32(_145617_prim.ptr())))) && (!(_1a76793c3_is_u64(_145617_prim.ptr())))) {
			_1a764abad_push_err(&(*_self_), _143059_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_1a7673257_to_str(_143049_d.get()._field_kind.ptr())),jule::Any(_1a7673257_to_str(_143031_t.ptr()))}));
		}
		return;
	}
	jule::Ptr<_1a7677602_Prim> _146713_prim = _1a7674e5c_prim(_143049_d.get()._field_kind.ptr());
	if ((_146713_prim != nullptr) && _1a75b1e65_is_num(_1a7677965_to_str(_146713_prim.ptr()))) {
		return;
	}
	_1a764abad_push_err(&(*_self_), _143059_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_1a7673257_to_str(_143049_d.get()._field_kind.ptr())),jule::Any(_1a7673257_to_str(_143031_t.ptr()))}));
}



inline void _1a765946e_cast_num(_1a764a6d5_Eval* _self_,jule::Ptr<_1a7672da0_TypeKind> _147531_t,jule::Ptr<_1a7648b67_Data> _147549_d,jule::Ptr<_1d0747985_Token> _147559_error_token) {
	if (_1a764952a_is_const(_147549_d.ptr())) {
		jule::Ptr<_1a7677602_Prim> _147717_prim = _1a7674e5c_prim(_147531_t.ptr());
		{
			
			if (_1a75b1bbd_is_float(_147717_prim.get()._field_kind)) {
				_case_begin_1a9c6688c:;
				{
					_1a752207e_set_f64(_147549_d.get()._field_constant.ptr(), static_cast<jule::F64>(_1a7521314_as_f64(_147549_d.get()._field_constant.ptr())));
				}
			}
			else if (_1a75b134e_is_sig_int(_147717_prim.get()._field_kind)) {
				_case_begin_1a9c66914:;
				{
					_1a7521589_set_i64(_147549_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1a7520d3b_as_i64(_147549_d.get()._field_constant.ptr())));
				}
			}
			else if (_1a75b163a_is_unsig_int(_147717_prim.get()._field_kind)) {
				_case_begin_1a9c6698b:;
				{
					_1a752180e_set_u64(_147549_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1a75210a0_as_u64(_147549_d.get()._field_constant.ptr())));
				}
			}
			_match_end_1a9c667b0:;
		}
	}
	if ((_1a7675699_enm(_147549_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1a7467de8_Enum> _148917_e = _1a7675699_enm(_147549_d.get()._field_kind.ptr());
		if (_1a75b1e65_is_num(_1a7673257_to_str(_148917_e.get()._field_kind.get()._field_kind.ptr()))) {
			return;
		}
	}
	jule::Ptr<_1a7677602_Prim> _149513_prim = _1a7674e5c_prim(_147549_d.get()._field_kind.ptr());
	if ((_149513_prim != nullptr) && _1a75b1e65_is_num(_1a7677965_to_str(_149513_prim.ptr()))) {
		return;
	}
	_1a764abad_push_err(&(*_self_), _147559_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_1a7673257_to_str(_147549_d.get()._field_kind.ptr())),jule::Any(_1a7673257_to_str(_147531_t.ptr()))}));
}



inline void _1a7659837_cast_prim(_1a764a6d5_Eval* _self_,jule::Ptr<_1a7672da0_TypeKind> _150332_t,jule::Ptr<_1a7648b67_Data> _150350_d,jule::Ptr<_1d0747985_Token> _150360_error_token) {
	jule::Ptr<_1a7677602_Prim> _150413_prim = _1a7674e5c_prim(_150332_t.ptr());
	{
		
		if (_1a767a825_is_any(_150413_prim.ptr())) {
			_case_begin_1a9c6d94e:;
		}
		else if (_1a767a5b1_is_str(_150413_prim.ptr())) {
			_case_begin_1a9c6d641:;
			{
				_1a7658bdd_cast_str(&(*_self_), _150350_d,_150360_error_token);
			}
		}
		else if (_1a75b18d2_is_int(_1a7677965_to_str(_150413_prim.ptr()))) {
			_case_begin_1a9c6d6a7:;
			{
				_1a76590a6_cast_int(&(*_self_), _150332_t,_150350_d,_150360_error_token);
			}
		}
		else if (_1a75b1e65_is_num(_1a7677965_to_str(_150413_prim.ptr()))) {
			_case_begin_1a9c6d71d:;
			{
				_1a765946e_cast_num(&(*_self_), _150332_t,_150350_d,_150360_error_token);
			}
		}
		else {
			_case_begin_1a9c6d5ca:;
			{
				_1a764abad_push_err(&(*_self_), _150360_error_token,jule::Str("type @ not supports casting", 27),jule::Slice<jule::Any>({jule::Any(_1a7673257_to_str(_150332_t.ptr()))}));
			}
		}
		_match_end_1a9c6d564:;
	}
}



inline void _1a7659b56_cast_constant(_1a764a6d5_Eval* _self_,jule::Ptr<_1a7672da0_TypeKind>& _151937_t,jule::Ptr<_1a7648b67_Data>& _151956_d) {
	if ((_151956_d == nullptr) || (!(_1a764952a_is_const(_151956_d.ptr())))) {
		return;
	}
	jule::Ptr<_1a7677602_Prim> _152313_prim = _1a7674e5c_prim(_151937_t.ptr());
	_1a7670496_cast_const_by_type(_152313_prim.get()._field_kind,_151956_d);
	_151956_d.get()._field_model=jule::Any(_151956_d.get()._field_constant);
}



inline jule::Ptr<_1a7648b67_Data> _1a765a0eb_eval_cast_by_type_n_data(_1a764a6d5_Eval* _self_,jule::Ptr<_1a7672da0_TypeKind> _152847_t,jule::Ptr<_1a7648b67_Data> _152865_d,jule::Ptr<_1d0747985_Token> _152879_error_token) {
	if ((_152865_d != nullptr) && _152865_d.get()._field_decl) {
		_1a764abad_push_err(&(*_self_), _152879_error_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	{
		
		if ((_1a7674e5c_prim(_152865_d.get()._field_kind.ptr()) != nullptr) && _1a767a825_is_any(_1a7674e5c_prim(_152865_d.get()._field_kind.ptr()).ptr())) {
			_case_begin_1a9c756ae:;
			{
				if ((_1a7675699_enm(_152847_t.ptr()) != nullptr)) {
					_1a764abad_push_err(&(*_self_), _152879_error_token,jule::Str("enum cannot casted from any type", 32),jule::Slice<jule::Any>());
					_1a764aecc_push_suggestion(&(*_self_), jule::Str("try cast to type of enum fields instead of enum", 47),jule::Slice<jule::Any>());
				}
			}
		}
		else if ((_1a7675435_ptr(_152847_t.ptr()) != nullptr)) {
			_case_begin_1a9c75725:;
			{
				_1a7657c75_cast_ptr(&(*_self_), _152847_t,_152865_d,_152879_error_token);
			}
		}
		else if ((_1a76751c1_sptr(_152847_t.ptr()) != nullptr)) {
			_case_begin_1a9c7578b:;
			{
				_1a7658506_cast_ref(&(*_self_), _152847_t,_152865_d,_152879_error_token);
			}
		}
		else if ((_1a7675b72_slc(_152847_t.ptr()) != nullptr)) {
			_case_begin_1a9c75802:;
			{
				_1a76588be_cast_slc(&(*_self_), _152847_t,_152865_d,_152879_error_token);
			}
		}
		else if ((_1a767614a_strct(_152847_t.ptr()) != nullptr)) {
			_case_begin_1a9c766b0:;
			{
				_1a765813d_cast_struct(&(*_self_), _152847_t,_152865_d,_152879_error_token);
			}
		}
		else if ((_1a7674e5c_prim(_152847_t.ptr()) != nullptr)) {
			_case_begin_1a9c76726:;
			{
				_1a7659837_cast_prim(&(*_self_), _152847_t,_152865_d,_152879_error_token);
				_1a7659b56_cast_constant(&(*_self_), _152847_t,_152865_d);
			}
		}
		else {
			_case_begin_1a9c747ce:;
			{
				_1a764abad_push_err(&(*_self_), _152879_error_token,jule::Str("type @ not supports casting", 27),jule::Slice<jule::Any>({jule::Any(_1a7673257_to_str(_152847_t.ptr()))}));
				_152865_d=nullptr;
			}
		}
		_match_end_1a9c74779:;
	}
	if ((_152865_d == nullptr)) {
		return nullptr;
	}
	_152865_d.get()._field_mutable=_152865_d.get()._field_mutable || ((!(_1a7674247_mutable(_152865_d.get()._field_kind.ptr()))) && _1a7674247_mutable(_152847_t.ptr()));
	_152865_d.get()._field_lvalue=false;
	_152865_d.get()._field_decl=false;
	if ((_1a7675699_enm(_152865_d.get()._field_kind.ptr()) == nullptr) || (!(_1a7673565_equals(_1a7675699_enm(_152865_d.get()._field_kind.ptr()).get()._field_kind.get()._field_kind, _152847_t)))) {
		_152865_d.get()._field_cast_kind=_152847_t;
		_1a766e929_apply_cast_kind(_152865_d);
		_152865_d.get()._field_model.operator jule::Ptr<_1a641aa39_CastingExprModel>().get()._field_token=_152879_error_token;
	} else {
		_152865_d.get()._field_kind=_152847_t;
	}
	return _152865_d;
}



inline jule::Ptr<_1a7648b67_Data> _1a765a3e8_eval_cast(jule::Ptr<_1a764a6d5_Eval> _self_,jule::Ptr<_1d075c5c1_CastExpr> _157833_c) {
	jule::Ptr<_1a7676c3e_TypeSymbol> _157917_t = _1a642e465_build_type(_157833_c.get()._field_kind);
	jule::Bool _158013_ok = _1a75d7ed0_check_type(_self_.get()._field_s, _157917_t,_self_.get()._field_lookup);
	if ((!(_158013_ok))) {
		return nullptr;
	}
	jule::Ptr<_1a7672da0_TypeKind> _158517_prefix = _self_.get()._field_prefix;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_158517_prefix;
	});
	jule::Ptr<_1a7648b67_Data> _158917_d = _1a7664776_eval_expr_kind(_self_, jule::Any(_157833_c.get()._field_expr));
	if ((_158917_d == nullptr)) {
		return nullptr;
	}
	return _1a765a0eb_eval_cast_by_type_n_data(_self_.ptr(), _157917_t.get()._field_kind,_158917_d,_157833_c.get()._field_kind.get()._field_token);
}



inline jule::Ptr<_1a7648b67_Data> _1a765a706_eval_ns_selection(_1a764a6d5_Eval* _self_,jule::Ptr<_1d075c7ad_NsSelectionExpr> _159736_s) {
	jule::Str _159813_path = _1a7680ae4_build_link_path_by_tokens(_159736_s.get()._field_ns);
	jule::Ptr<_1a75c928a_ImportInfo> _159917_imp = _1a768b25e_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1a7689a32_select_package((*_self_)._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1a75c928a_ImportInfo>)>([=](jule::Ptr<_1a75c928a_ImportInfo> _159953_imp) mutable -> jule::Bool {
		if ((_159736_s.get()._field_ns.len() == 1LL) && (_159953_imp.get()._field_alias == _159813_path)) {
			return true;
		}
		return (_159953_imp.get()._field_link_path == _159813_path) && _1a75cbb72_is_accessible_via_selection(_159953_imp.ptr());
	}));
	if ((_159917_imp == nullptr)) {
		_1a764abad_push_err(&(*_self_), _159736_s.get()._field_ident,jule::Str("undefined namespace: @", 22),jule::Slice<jule::Any>({jule::Any(_159813_path)}));
		return nullptr;
	}
	jule::Trait<_1a768b25e_Lookup> _161117_lookup = (*_self_)._field_lookup;
	(*_self_)._field_lookup=jule::Trait<_1a768b25e_Lookup>(_159917_imp, 1);
	
	_1a764b384_disallow_builtin(&(*_self_));
	jule::Any _161617_def = _1a764dc05_get_def(&(*_self_), _159736_s.get()._field_ident.get()._field_kind,false);
	_1a764b1a8_allow_builtin(&(*_self_));
	(*_self_)._field_lookup=_161117_lookup;
	jule::Ptr<_1a7648b67_Data> _162017_d = _1a765280d_eval_def(&(*_self_), _161617_def,_159736_s.get()._field_ident);
	return _162017_d;
}



inline jule::Ptr<_1a7648b67_Data> _1a765ab9b_eval_struct_lit_explicit(jule::Ptr<_1a764a6d5_Eval> _self_,jule::Ptr<_1a641744d_StructIns> _162548_s,jule::Slice<jule::Ptr<_1d075b14c_Expr>> _162613_exprs,jule::Ptr<_1d0747985_Token> _162633_error_token) {
	jule::Bool _162713_ok = _1a75d5c36_check_generic_quantity(_self_.get()._field_s.ptr(), static_cast<jule::I64>(_162548_s.get()._field_decl.get()._field_generics.len()),static_cast<jule::I64>(_162548_s.get()._field_generics.len()),_162633_error_token);
	if ((!(_162713_ok))) {
		return nullptr;
	}
	if ((_self_.get()._field_field != nullptr) && (_self_.get()._field_field.get()._field_decl.get()._field_owner == _162548_s.get()._field_decl)) {
		_1a764abad_push_err(_self_.ptr(), _162633_error_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>({jule::Any(_162548_s.get()._field_decl.get()._field_ident)}));
	}
	_1a764e73e_push_reference_to_struct(_self_.ptr(), _162548_s);
	_1a7650bd5_check_deprecated(_self_.ptr(), _162548_s.get()._field_decl.get()._field_directives,_162633_error_token);
	_1a763d08a_StructLitChecker _164017_slc = _1a763d08a_StructLitChecker(_self_,_162633_error_token,_162548_s,jule::Slice<jule::Ptr<_1a6419d24_StructArgExprModel>>());
	_1a763e630_check(&_164017_slc, _162613_exprs);
	return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_162548_s, 0))),jule::Ptr<_1a7672da0_TypeKind>(),(!(_self_.get()._field_immutable)),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_1a641a1cb_StructLitExprModel>(_1a641a1cb_StructLitExprModel(_162548_s,_164017_slc._field_args)))),jule::Bool(),jule::Ptr<_1a751ddb1_Const>()));
}



inline jule::Ptr<_1a7648b67_Data> _1a765ae98_eval_struct_lit(jule::Ptr<_1a764a6d5_Eval> _self_,jule::Ptr<_1d075d4b2_StructLit> _165939_lit) {
	jule::Ptr<_1a7676c3e_TypeSymbol> _166017_t = _1a642e465_build_type(_165939_lit.get()._field_kind);
	jule::Bool _166113_ok = _1a75d7ed0_check_type(_self_.get()._field_s, _166017_t,_self_.get()._field_lookup);
	if ((!(_166113_ok))) {
		return nullptr;
	}
	jule::Ptr<_1a641744d_StructIns> _166617_s = _1a767614a_strct(_166017_t.get()._field_kind.ptr());
	if ((_166617_s == nullptr)) {
		if ((_1a76751c1_sptr(_166017_t.get()._field_kind.ptr()) != nullptr)) {
			_166617_s=_1a767614a_strct(_1a76751c1_sptr(_166017_t.get()._field_kind.ptr()).get()._field_elem.ptr());
			if ((_166617_s != nullptr)) {
				goto _julec_label_eval;
			}
		}
		_1a764abad_push_err(_self_.ptr(), _165939_lit.get()._field_kind.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	_julec_label_eval:;
	jule::Ptr<_1a7648b67_Data> _167917_d = _1a765ab9b_eval_struct_lit_explicit(_self_, _166617_s,_165939_lit.get()._field_exprs,_165939_lit.get()._field_kind.get()._field_token);
	if ((_1a76751c1_sptr(_166017_t.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1a641a1cb_StructLitExprModel> _168121_model = _167917_d.get()._field_model.operator jule::Ptr<_1a641a1cb_StructLitExprModel>();
		_1a766d4c7_make_struct_lit_alloc(_167917_d,_168121_model);
	}
	return _167917_d;
}



inline jule::Ptr<_1a7648b67_Data> _1a765b2a6_eval_type(_1a764a6d5_Eval* _self_,jule::Ptr<_1d0759c1c_TypeDecl> _168732_t) {
	jule::Ptr<_1a7676c3e_TypeSymbol> _168817_tk = _1a642e465_build_type(_168732_t);
	jule::Bool _168913_ok = _1a75d7ed0_check_type((*_self_)._field_s, _168817_tk,(*_self_)._field_lookup);
	if ((!(_168913_ok))) {
		return nullptr;
	}
	return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(_168817_tk.get()._field_kind,jule::Ptr<_1a7672da0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_168817_tk.get()._field_kind)),true,jule::Ptr<_1a751ddb1_Const>()));
}



inline void _1a765b5c5_call_type_fn(jule::Ptr<_1a764a6d5_Eval> _self_,jule::Ptr<_1d075cd74_FnCallExpr>& _170037_fc,jule::Ptr<_1a7648b67_Data>& _170059_d) {
	if ((_170037_fc.get()._field_generics.len() > 0LL)) {
		_1a764abad_push_err(_self_.ptr(), _170037_fc.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_1a7673257_to_str(_170059_d.get()._field_kind.ptr()))}));
	} else if ((_170037_fc.get()._field_args.len() < 1LL)) {
		_1a764abad_push_err(_self_.ptr(), _170037_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("v", 1))}));
	} else if ((_170037_fc.get()._field_args.len() > 1LL)) {
		_1a764abad_push_err(_self_.ptr(), _170037_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	if ((_170037_fc.get()._field_args.len() > 0LL)) {
		jule::Ptr<_1a7672da0_TypeKind> _171021_prefix = _self_.get()._field_prefix;
		_self_.get()._field_prefix=nullptr;
		jule::Ptr<_1a7648b67_Data> _171221_arg = _1a7664776_eval_expr_kind(_self_, _170037_fc.get()._field_args[0LL].get()._field_kind);
		_self_.get()._field_prefix=_171021_prefix;
		if ((_171221_arg != nullptr)) {
			_170059_d=_1a765a0eb_eval_cast_by_type_n_data(_self_.ptr(), _170059_d.get()._field_kind,_171221_arg,_170037_fc.get()._field_args[0LL].get()._field_token);
		}
	}
	if ((_170059_d != nullptr)) {
		_170059_d.get()._field_decl=false;
	}
}



inline std::tuple<jule::Bool,jule::Bool> _1a765b97c_check_fn_call_generics(_1a764a6d5_Eval* _self_,jule::Ptr<_1a6429be1_FnIns> _172445_f,jule::Ptr<_1d075cd74_FnCallExpr> _172513_fc) {
	jule::Bool _172532_ok = jule::Bool();
	jule::Bool _172542_dynamic_annotation = jule::Bool();
	{
		
		if (((_172445_f.get()._field_decl.get()._field_generics.len() > 0LL) && (_172513_fc.get()._field_generics.len() == 0LL)) && (_172445_f.get()._field_params.len() > 0LL)) {
			_case_begin_1a9ca24ee:;
			{
				_172542_dynamic_annotation=true;
				_172445_f.get()._field_generics=jule::Slice<jule::Ptr<_1a7672da0_TypeKind>>::alloc(static_cast<jule::I64>(_172445_f.get()._field_decl.get()._field_generics.len()));
				_172532_ok = true;
				_172542_dynamic_annotation = true;
				return std::make_tuple(_172532_ok,_172542_dynamic_annotation);
			}
		}
		else if ((!(_1a75d5c36_check_generic_quantity((*_self_)._field_s.ptr(), static_cast<jule::I64>(_172445_f.get()._field_decl.get()._field_generics.len()),static_cast<jule::I64>(_172513_fc.get()._field_generics.len()),_172513_fc.get()._field_token)))) {
			_case_begin_1a9ca2565:;
			{
				_172532_ok = false;
				_172542_dynamic_annotation = false;
				return std::make_tuple(_172532_ok,_172542_dynamic_annotation);
			}
		}
		else {
			_case_begin_1a9ca1b2a:;
			{
				_172445_f.get()._field_generics=jule::Slice<jule::Ptr<_1a7672da0_TypeKind>>::alloc(0LL,static_cast<jule::I64>(_172445_f.get()._field_decl.get()._field_generics.len()));
				{
					auto &expr = _172513_fc.get()._field_generics;
					auto it = expr.begin();
					_iter_begin_1a9ca2147:;
					if (it != expr.end()) {
						jule::Ptr<_1d0759c1c_TypeDecl> _1a9ca2b4d_g = *it;
						{
							jule::Ptr<_1a7676c3e_TypeSymbol> _173825_k = _1a642e465_build_type(_1a9ca2b4d_g);
							_172532_ok=_1a75d7ed0_check_type((*_self_)._field_s, _173825_k,(*_self_)._field_lookup);
							if ((!(_172532_ok))) {
								_172532_ok = false;
								_172542_dynamic_annotation = false;
								return std::make_tuple(_172532_ok,_172542_dynamic_annotation);
							}
							_172445_f.get()._field_generics = jule::alloc_for_append(_172445_f.get()._field_generics,1);_172445_f.get()._field_generics.__push(_173825_k.get()._field_kind);
						}
						_iter_next_1a9ca2147:;
						++it;
						goto _iter_begin_1a9ca2147;
					}
					_iter_end_1a9ca2147:;
				}
				_172532_ok = true;
				_172542_dynamic_annotation = false;
				return std::make_tuple(_172532_ok,_172542_dynamic_annotation);
			}
		}
		_match_end_1a9ca1a81:;
	}
}



inline void _1a765bc9b_call_builtin_fn(jule::Ptr<_1a764a6d5_Eval> _self_,jule::Ptr<_1d075cd74_FnCallExpr>& _175040_fc,jule::Ptr<_1a7648b67_Data>& _175062_d) {
	_175062_d=_1a7675dd6_fnc(_175062_d.get()._field_kind.ptr()).get()._field_caller(_self_,_175040_fc,_175062_d);
	if ((_175062_d == nullptr)) {
		return;
	}
	_175062_d.get()._field_mutable=true;
}



inline void _1a765c10e_check_fn_of_concurrent_call(_1a764a6d5_Eval* _self_,jule::Ptr<_1a6429be1_FnIns>& _175847_f,jule::Ptr<_1d0747985_Token> _175858_error_token) {
	if (_1a764b5e8_is_unsafe(&(*_self_))) {
		return;
	}
	{
		auto &expr = _175847_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1a9be10ca:;
		if (it != expr.end()) {
			jule::Ptr<_1a6428d55_ParamIns> &_1a9caa606_p = *it;
			{
				if (_1a9caa606_p.get()._field_decl.get()._field_reference) {
					_1a764abad_push_err(&(*_self_), _175858_error_token,jule::Str("concurrent calls does not support functions which is has reference parameter(s)", 79),jule::Slice<jule::Any>());
					return;
				}
			}
			_iter_next_1a9be10ca:;
			++it;
			goto _iter_begin_1a9be10ca;
		}
		_iter_end_1a9be10ca:;
	}
}



inline void _1a765c50a_process_exceptional_handler(_1a764a6d5_Eval* _self_,jule::Ptr<_1a6429be1_FnIns>& _177151_f,jule::Ptr<_1d075cd74_FnCallExpr>& _177167_fc,jule::Ptr<_1a7648b67_Data>& _177189_d) {
	jule::Bool _177213_result_needed = (!(_1a6426e96_is_void(_177151_f.get()._field_decl.ptr()))) && ((*_self_)._field_arg || (!((*_self_)._field_ignored)));
	jule::Ptr<_1a75b3b8c_ScopeChecker> _177317_csc = nullptr;
	jule::Ptr<_1a759e606_Scope> _177417_ch = nullptr;
	jule::Ptr<_1a641b364_FnCallExprModel> _177617_model = _177189_d.get()._field_model.operator jule::Ptr<_1a641b364_FnCallExprModel>();
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1a75d1e74_Sema>>()) {
			_case_begin_1a9cadd35:;
			{
				jule::Ptr<_1a75d1e74_Sema> _178021_s = (*_self_)._field_lookup.operator jule::Ptr<_1a75d1e74_Sema>();
				_177317_csc=_1a754d4a6_new_scope_checker(_178021_s,nullptr);
				if (_177213_result_needed) {
					_177317_csc.get()._field_result=_177151_f;
				}
				_177417_ch=jule::new_ptr<_1a759e606_Scope>();
				_177317_csc.get()._field_table.get()._field_vars = jule::alloc_for_append(_177317_csc.get()._field_table.get()._field_vars,1);_177317_csc.get()._field_table.get()._field_vars.__push(_1a766d818_build_error_var(_177417_ch,_177167_fc));
				_1a75c2a8b_check(_177317_csc, _177167_fc.get()._field_exception,_177417_ch);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a75b3b8c_ScopeChecker>>()) {
			_case_begin_1a9cadd9b:;
			{
				jule::Ptr<_1a75b3b8c_ScopeChecker> _178921_sc = (*_self_)._field_lookup.operator jule::Ptr<_1a75b3b8c_ScopeChecker>();
				_177317_csc=_1a75c2d00_new_child_checker(_178921_sc);
				if (_177213_result_needed) {
					_177317_csc.get()._field_result=_177151_f;
				}
				_177417_ch=_1a75b7586_get_child(_178921_sc.ptr());
				_177317_csc.get()._field_table.get()._field_vars = jule::alloc_for_append(_177317_csc.get()._field_table.get()._field_vars,1);_177317_csc.get()._field_table.get()._field_vars.__push(_1a766d818_build_error_var(_177417_ch,_177167_fc));
				_1a75b794e_check_child_ssc(_178921_sc, _177167_fc.get()._field_exception,_177417_ch,_177317_csc);
			}
		}
		_match_end_1a9cadcd0:;
	}
	_177617_model.get()._field_assigned=_177213_result_needed;
	_177617_model.get()._field_except=_177417_ch;
	if (_177213_result_needed && (_177317_csc.get()._field_result != nullptr)) {
		_1a764abad_push_err(&(*_self_), _177167_fc.get()._field_token,jule::Str("assignments requires expression", 31),jule::Slice<jule::Any>());
	}
}



inline void _1a765c818_call_fn(jule::Ptr<_1a764a6d5_Eval> _self_,jule::Ptr<_1d075cd74_FnCallExpr>& _180732_fc,jule::Ptr<_1a7648b67_Data>& _180754_d) {
	jule::Ptr<_1a6429be1_FnIns> _180817_f = _1a7675dd6_fnc(_180754_d.get()._field_kind.ptr());
	if (_1a642a96c_is_builtin(_180817_f.ptr())) {
		_1a765bc9b_call_builtin_fn(_self_, _180732_fc,_180754_d);
		return;
	}
	if ((!(_1a642720a_is_method(_180817_f.get()._field_decl.ptr()))) && _1a76716d9_has_directive(_180817_f.get()._field_decl.get()._field_directives,jule::Str("test", 4))) {
		_1a764abad_push_err(_self_.ptr(), _180732_fc.get()._field_token,jule::Str("you cannot call test functions", 30),jule::Slice<jule::Any>());
		_180754_d=nullptr;
		return;
	}
	if ((((!(_180754_d.get()._field_mutable)) && _1a642720a_is_method(_180817_f.get()._field_decl.ptr())) && (!(_180817_f.get()._field_decl.get()._field_statically))) && _180817_f.get()._field_decl.get()._field_params[0LL].get()._field_mutable) {
		_1a764abad_push_err(_self_.ptr(), _180732_fc.get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	} else if ((!(_1a764b5e8_is_unsafe(_self_.ptr()))) && _180817_f.get()._field_decl.get()._field_unsafety) {
		_1a764abad_push_err(_self_.ptr(), _180732_fc.get()._field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	}
	jule::Bool _182618_ok;
	jule::Bool _182622_dynamic_annotation;
	std::tie(_182618_ok,_182622_dynamic_annotation) = _1a765b97c_check_fn_call_generics(_self_.ptr(), _180817_f,_180732_fc);
	if ((!(_182618_ok))) {
		_180754_d=nullptr;
		return;
	}
	jule::Ptr<_1a75d1e74_Sema> _183217_old = _self_.get()._field_s;
	if ((_180817_f.get()._field_decl.get()._field_owner != nullptr)) {
		_self_.get()._field_s=_180817_f.get()._field_decl.get()._field_owner.get()._field_sema;
	}
	__JULE_DEFER({
		if (_183217_old != _self_.get()._field_s) {
			_183217_old.get()._field_errors=jule::append(_183217_old.get()._field_errors,_self_.get()._field_s.get()._field_errors);
			_self_.get()._field_s.get()._field_errors=nullptr;
		}
		_self_.get()._field_s=_183217_old;
	});
	if ((!(_182622_dynamic_annotation))) {
		if ((!(_180817_f.get()._field_reloaded))) {
			_182618_ok=_1a75dad6d_reload_fn_ins_types(_self_.get()._field_s, _180817_f);
			if ((!(_182618_ok))) {
				_180754_d=nullptr;
				return;
			}
			_180817_f.get()._field_reloaded=true;
		}
	} else {
		_1a75da730_build_fn_non_generic_type_kinds(_self_.get()._field_s, _180817_f);
	}
	_1a763a681_FnCallArgChecker _185817_fcac = _1a763a681_FnCallArgChecker(_self_,_180732_fc.get()._field_args,_180732_fc.get()._field_token,_180817_f,_182622_dynamic_annotation,jule::Slice<jule::Any>());
	if ((_180817_f.get()._field_decl.get()._field_owner != nullptr)) {
		std::tie(_183217_old,_self_.get()._field_s) = std::make_tuple(_self_.get()._field_s,_183217_old);
		_182618_ok=_1a763ca4b_check(&_185817_fcac);
		std::tie(_183217_old,_self_.get()._field_s) = std::make_tuple(_self_.get()._field_s,_183217_old);
	} else {
		_182618_ok=_1a763ca4b_check(&_185817_fcac);
	}
	if ((!(_182618_ok)) && _182622_dynamic_annotation) {
		_180754_d=nullptr;
		return;
	}
	jule::Ptr<_1a6429be1_FnIns> _187817_exist_instance = _1a642899d_append_instance(_180817_f.get()._field_decl.ptr(), _180817_f);
	if ((_187817_exist_instance != nullptr)) {
		_180817_f=_187817_exist_instance;
	}
	jule::Any _188317_call_model = _180754_d.get()._field_model;
	if (_1a6426e96_is_void(_180817_f.get()._field_decl.ptr())) {
		_180754_d=_1a766eb27_build_void_data();
	} else {
		if (_182622_dynamic_annotation) {
			_182618_ok=_1a75dad6d_reload_fn_ins_types(_self_.get()._field_s, _180817_f);
			if ((!(_182618_ok))) {
				_180754_d=nullptr;
				return;
			}
			_180817_f.get()._field_reloaded=true;
		}
		_180754_d.get()._field_kind=_180817_f.get()._field_result;
		_180754_d.get()._field_lvalue=false;
	}
	_180754_d.get()._field_mutable=true;
	_180754_d.get()._field_model=jule::Any(jule::new_ptr<_1a641b364_FnCallExprModel>(_1a641b364_FnCallExprModel(_180732_fc.get()._field_token,_180817_f,jule::Bool(),_188317_call_model,_185817_fcac._field_arg_models,jule::Ptr<_1a759e606_Scope>(),jule::Bool())));
	if (_180817_f.get()._field_decl.get()._field_exceptional) {
		{
			
			if (_1d072adec_unhandled(_180732_fc.ptr())) {
				_case_begin_1a9cc57ec:;
				{
					_1a764abad_push_err(_self_.ptr(), _180732_fc.get()._field_token,jule::Str("exceptionals must be handled", 28),jule::Slice<jule::Any>());
					_1a764aecc_push_suggestion(_self_.ptr(), jule::Str("use \"!\" operator after exceptional to handle it", 47),jule::Slice<jule::Any>());
				}
			}
			else if (_1d075d061_ignored(_180732_fc.ptr())) {
				_case_begin_1a9cc54de:;
				{
					goto _match_end_1a9cc53ac;
				}
			}
			else {
				_case_begin_1a9cc5478:;
				{
					_1a765c50a_process_exceptional_handler(_self_.ptr(), _180817_f,_180732_fc,_180754_d);
				}
			}
			_match_end_1a9cc53ac:;
		}
	} else if ((!(_1d072adec_unhandled(_180732_fc.ptr())))) {
		_1a764abad_push_err(_self_.ptr(), _180732_fc.get()._field_token,jule::Str("non-exceptionals cannot handled like exceptionals", 49),jule::Slice<jule::Any>());
	}
	if ((_180817_f.get()._field_generics.len() > 0LL) && (_187817_exist_instance == nullptr)) {
		_1a75e7c7b_check_fn_ins_caller(_self_.get()._field_s, _180817_f,_180732_fc.get()._field_token);
	}
}



inline jule::Ptr<_1a7648b67_Data> _1a765cb26_eval_fn_call(jule::Ptr<_1a764a6d5_Eval> _self_,jule::Ptr<_1d075cd74_FnCallExpr> _193136_fc) {
	jule::Ptr<_1a7672da0_TypeKind> _193217_prefix = _self_.get()._field_prefix;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_193217_prefix;
	});
	{
		auto &_match_expr{ _193136_fc.get()._field_expr.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d075c00a_IdentExpr>>()) {
			_case_begin_1a9cc9ee9:;
			{
				if ((_193136_fc.get()._field_expr.get()._field_token.get()._field_kind == jule::Str("error", 5))) {
					return _1a76b0c89_builtin_caller_error(_self_,_193136_fc);
				}
			}
		}
		_match_end_1a9cc9e94:;
	}
	jule::Ptr<_1a7648b67_Data> _194517_d = _1a7664776_eval_expr_kind(_self_, _193136_fc.get()._field_expr.get()._field_kind);
	if ((_194517_d == nullptr)) {
		return nullptr;
	}
	if (_194517_d.get()._field_decl) {
		_1a765b5c5_call_type_fn(_self_, _193136_fc,_194517_d);
		return _194517_d;
	}
	if ((_1a7675dd6_fnc(_194517_d.get()._field_kind.ptr()) == nullptr)) {
		_1a764abad_push_err(_self_.ptr(), _193136_fc.get()._field_token,jule::Str("attempting to call a non-function", 33),jule::Slice<jule::Any>());
		return nullptr;
	}
	_1a765c818_call_fn(_self_, _193136_fc,_194517_d);
	return _194517_d;
}



inline jule::Ptr<_1a7648b67_Data> _1a765cecd_eval_enum_static(_1a764a6d5_Eval* _self_,jule::Ptr<_1a7467de8_Enum> _196439_enm,jule::Ptr<_1d0747985_Token> _196451_ident) {
	jule::Ptr<_1a7648b67_Data> _196517_d = jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_196439_enm, 3))),jule::Ptr<_1a7672da0_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(),false,jule::Ptr<_1a751ddb1_Const>()));
	jule::Ptr<_1a7467403_EnumItem> _197417_item = _1a74689a9_find_item(_196439_enm.ptr(), _196451_ident.get()._field_kind);
	if ((_197417_item == nullptr)) {
		_1a764abad_push_err(&(*_self_), _196451_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(_196439_enm.get()._field_ident),jule::Any(_196451_ident.get()._field_kind)}));
	} else {
		_196517_d.get()._field_constant=jule::new_ptr<_1a751ddb1_Const>((*(_197417_item.get()._field_value.get()._field_data.get()._field_constant)));
		_196517_d.get()._field_model=jule::Any(_196517_d.get()._field_constant);
		_1a76701ee_apply_cast_model_by_enum(_196517_d,_196439_enm);
	}
	return _196517_d;
}



inline jule::Ptr<_1a7648b67_Data> _1a765d385_eval_struct_static(_1a764a6d5_Eval* _self_,jule::Ptr<_1a641744d_StructIns> _198641_s,jule::Ptr<_1d0747985_Token> _198656_ident) {
	jule::Ptr<_1a7648b67_Data> _198717_d = jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::Ptr<_1a7672da0_TypeKind>(),jule::Ptr<_1a7672da0_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(),false,jule::Ptr<_1a751ddb1_Const>()));
	
	jule::Ptr<_1a6426a45_Fn> _199517_method = _1a64183d8_find_method(_198641_s.ptr(), _198656_ident.get()._field_kind,true);
	if ((_199517_method != nullptr)) {
		if ((!(_1a75d5065_is_accessible_define((*_self_)._field_s.ptr(), _199517_method.get()._field_public,_199517_method.get()._field_token)))) {
			_1a764abad_push_err(&(*_self_), _198656_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any(_198656_ident.get()._field_kind)}));
			_1a764aecc_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		}
		jule::Ptr<_1a6429be1_FnIns> _200221_ins = _1a6428690_instance(_199517_method);
		_200221_ins.get()._field_owner=_198641_s;
		_1a764e200_push_reference_to_fn(&(*_self_), _200221_ins);
		_198717_d.get()._field_model=jule::Any(jule::new_ptr<_1a641e125_StructStaticIdentExprModel>(_1a641e125_StructStaticIdentExprModel(_198641_s,_198717_d.get()._field_model,_200221_ins)));
		_198717_d.get()._field_kind=jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_200221_ins, 1)));
		return _198717_d;
	}
	jule::Ptr<_1a75ec478_Var> _201617_sttc = _1a64156c1_find_static(_198641_s.get()._field_decl.ptr(), _198656_ident.get()._field_kind);
	if ((_201617_sttc != nullptr)) {
		return _1a765209e_eval_var(&(*_self_), _201617_sttc,_198656_ident);
	}
	_1a764abad_push_err(&(*_self_), _198656_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(_198641_s.get()._field_decl.get()._field_ident),jule::Any(_198656_ident.get()._field_kind)}));
	return nullptr;
}



inline jule::Ptr<_1a7648b67_Data> _1a765d7d6_eval_trait_sub_ident(_1a764a6d5_Eval* _self_,jule::Ptr<_1a7648b67_Data> _202543_d,jule::Ptr<_1a7465bd7_Trait> _202557_trt,jule::Ptr<_1d0747985_Token> _202574_ident) {
	jule::Ptr<_1a6426a45_Fn> _202617_f = _1a7466a62_find_method(_202557_trt.ptr(), _202574_ident.get()._field_kind);
	if ((_202617_f == nullptr)) {
		_1a764abad_push_err(&(*_self_), _202574_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(_202557_trt.get()._field_ident),jule::Any(_202574_ident.get()._field_kind)}));
		return nullptr;
	}
	return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a6428690_instance(_202617_f), 1))),jule::Ptr<_1a7672da0_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_1a641d3ee_TraitSubIdentExprModel>(_1a641d3ee_TraitSubIdentExprModel(_202574_ident,_202543_d.get()._field_model,_202617_f,_202557_trt)))),false,jule::Ptr<_1a751ddb1_Const>()));
}



inline jule::Ptr<_1a7648b67_Data> _1a765dcd1_eval_struct_sub_ident(_1a764a6d5_Eval* _self_,jule::Ptr<_1a7648b67_Data> _204844_d,jule::Ptr<_1a641744d_StructIns> _204858_s,jule::Ptr<_1d075c99a_SubIdentExpr> _204877_si,jule::Bool _204896_ref) {
	jule::Ptr<_1a6416ae0_FieldIns> _204917_f = _1a64186e6_find_field(_204858_s.ptr(), _204877_si.get()._field_ident.get()._field_kind);
	if ((_204917_f != nullptr)) {
		if ((!(_1a75d5065_is_accessible_define((*_self_)._field_s.ptr(), _204917_f.get()._field_decl.get()._field_public,_204917_f.get()._field_decl.get()._field_token)))) {
			_1a764abad_push_err(&(*_self_), _204877_si.get()._field_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any(_204917_f.get()._field_decl.get()._field_ident)}));
			_1a764aecc_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		}
		jule::Ptr<_1a641db6e_StructSubIdentExprModel> _205621_model = jule::new_ptr<_1a641db6e_StructSubIdentExprModel>(_1a641db6e_StructSubIdentExprModel(_204877_si.get()._field_ident,jule::new_ptr<_1a7648b67_Data>((*(_204844_d))),_204844_d.get()._field_kind,jule::Ptr<_1a6429be1_FnIns>(),_204917_f));
		_204844_d.get()._field_model=jule::Any(_205621_model);
		_204844_d.get()._field_kind=_204917_f.get()._field_kind;
		_204844_d.get()._field_lvalue=true;
		if (_204917_f.get()._field_decl.get()._field_mutable && (!(_204844_d.get()._field_mutable))) {
			{
				auto &_match_expr{ (*_self_)._field_lookup };
				
				if (_match_expr.type_is<jule::Ptr<_1a75b3b8c_ScopeChecker>>()) {
					_case_begin_1a9ce2b5a:;
					{
						jule::Ptr<_1a75b3b8c_ScopeChecker> _207025_scope = _1a75b5cd2_get_root((*_self_)._field_lookup.operator jule::Ptr<_1a75b3b8c_ScopeChecker>());
						_204844_d.get()._field_mutable=(_207025_scope.get()._field_owner != nullptr) && (_207025_scope.get()._field_owner.get()._field_owner == _204858_s);
					}
				}
				_match_end_1a9ce2b05:;
			}
		}
		return _204844_d;
	}
	
	jule::Ptr<_1a6426a45_Fn> _207917_m = _1a64183d8_find_method(_204858_s.ptr(), _204877_si.get()._field_ident.get()._field_kind,false);
	if ((_207917_m == nullptr)) {
		_1a764abad_push_err(&(*_self_), _204877_si.get()._field_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(_204858_s.get()._field_decl.get()._field_ident),jule::Any(_204877_si.get()._field_ident.get()._field_kind)}));
		return nullptr;
	}
	if ((!(_1a75d5065_is_accessible_define((*_self_)._field_s.ptr(), _207917_m.get()._field_public,_207917_m.get()._field_token)))) {
		_1a764abad_push_err(&(*_self_), _204877_si.get()._field_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any(_207917_m.get()._field_ident)}));
		_1a764aecc_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	}
	if (_1a6425a99_is_ref(_207917_m.get()._field_params[0LL].ptr()) && (!(_204896_ref))) {
		_1a764abad_push_err(&(*_self_), _204877_si.get()._field_ident,jule::Str("reference method cannot use with non-reference instance", 55),jule::Slice<jule::Any>());
	}
	_1a7650bd5_check_deprecated(&(*_self_), _207917_m.get()._field_directives,_204877_si.get()._field_ident);
	jule::Ptr<_1a6429be1_FnIns> _209517_ins = _1a6428690_instance(_207917_m);
	_209517_ins.get()._field_owner=_204858_s;
	_1a764e200_push_reference_to_fn(&(*_self_), _209517_ins);
	jule::Ptr<_1a7648b67_Data> _209817_model = jule::new_ptr<_1a7648b67_Data>((*(_204844_d)));
	_204844_d.get()._field_model=jule::Any(jule::new_ptr<_1a641db6e_StructSubIdentExprModel>(_1a641db6e_StructSubIdentExprModel(_204877_si.get()._field_ident,_209817_model,_204844_d.get()._field_kind,_209517_ins,jule::Ptr<_1a6416ae0_FieldIns>())));
	_204844_d.get()._field_kind=jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_209517_ins, 1)));
	return _204844_d;
}



inline jule::Ptr<_1a7648b67_Data> _1a765e188_eval_slice_sub_ident(_1a764a6d5_Eval* _self_,jule::Ptr<_1a7648b67_Data> _210943_d,jule::Ptr<_1d0747985_Token> _210957_ident) {
	{
		auto &_match_expr{ _210957_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1a9ceccb9:;
			{
				return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("int", 3)), 5))),jule::Ptr<_1a7672da0_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_1a641ed3a_CommonSubIdentExprModel>(_1a641ed3a_CommonSubIdentExprModel(_210943_d.get()._field_kind,_210943_d.get()._field_model,_210957_ident,jule::Str("len()", 5))))),jule::Bool(),jule::Ptr<_1a751ddb1_Const>()));
			}
		}
		else if (_match_expr == jule::Str("cap", 3)) {
			_case_begin_1a9cebaed:;
			{
				return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("int", 3)), 5))),jule::Ptr<_1a7672da0_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_1a641ed3a_CommonSubIdentExprModel>(_1a641ed3a_CommonSubIdentExprModel(_210943_d.get()._field_kind,_210943_d.get()._field_model,_210957_ident,jule::Str("cap()", 5))))),jule::Bool(),jule::Ptr<_1a751ddb1_Const>()));
			}
		}
		else if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1a9cebb64:;
			{
				return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(jule::new_ptr<_1a6429be1_FnIns>(_1a6429be1_FnIns(jule::Ptr<_1a641744d_StructIns>(),jule::Ptr<_1a6426a45_Fn>(),jule::Slice<jule::Ptr<_1a7672da0_TypeKind>>(),jule::Slice<jule::Ptr<_1a6428d55_ParamIns>>({jule::new_ptr<_1a6428d55_ParamIns>(_1a6428d55_ParamIns(jule::new_ptr<_1a6425208_Param>(_1a6425208_Param(jule::Ptr<_1d0747985_Token>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a7676c3e_TypeSymbol>(),jule::Str("i", 1))),jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("int", 3)), 5))))),jule::new_ptr<_1a6428d55_ParamIns>(_1a6428d55_ParamIns(jule::new_ptr<_1a6425208_Param>(_1a6425208_Param(jule::Ptr<_1d0747985_Token>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a7676c3e_TypeSymbol>(),jule::Str("j", 1))),jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("int", 3)), 5)))))}),jule::Ptr<_1a7672da0_TypeKind>(),jule::Ptr<_1a759e606_Scope>(),jule::Ptr<_1a642cc9e_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a7648b67_Data>(jule::Ptr<_1a764a6d5_Eval>&,jule::Ptr<_1d075cd74_FnCallExpr>&,jule::Ptr<_1a7648b67_Data>&)>(_1a76cd933_builtin_caller_common_mut),jule::Bool())), 1))),jule::Ptr<_1a7672da0_TypeKind>(),_210943_d.get()._field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_1a641ed3a_CommonSubIdentExprModel>(_1a641ed3a_CommonSubIdentExprModel(_210943_d.get()._field_kind,_210943_d.get()._field_model,_210957_ident,jule::Str("swap", 4))))),jule::Bool(),jule::Ptr<_1a751ddb1_Const>()));
			}
		}
		else {
			_case_begin_1a9ceb7bd:;
			{
				_1a764abad_push_err(&(*_self_), _210957_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(_1a7673257_to_str(_210943_d.get()._field_kind.ptr())),jule::Any(_210957_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1a9ceb9ee:;
	}
}



inline jule::Ptr<_1a7648b67_Data> _1a765e540_eval_array_sub_ident(_1a764a6d5_Eval* _self_,jule::Ptr<_1a7648b67_Data> _216843_d,jule::Ptr<_1d0747985_Token> _216857_ident) {
	{
		auto &_match_expr{ _216857_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1a9d04364:;
			{
				jule::Ptr<_1a751ddb1_Const> _217121_c = static__1a751cdb0_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_1a767590d_arr(_216843_d.get()._field_kind.ptr()).get()._field_n)));
				return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("int", 3)), 5))),jule::Ptr<_1a7672da0_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_217121_c)),jule::Bool(),_217121_c));
			}
		}
		else if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1a9d043ca:;
			{
				return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(jule::new_ptr<_1a6429be1_FnIns>(_1a6429be1_FnIns(jule::Ptr<_1a641744d_StructIns>(),jule::Ptr<_1a6426a45_Fn>(),jule::Slice<jule::Ptr<_1a7672da0_TypeKind>>(),jule::Slice<jule::Ptr<_1a6428d55_ParamIns>>({jule::new_ptr<_1a6428d55_ParamIns>(_1a6428d55_ParamIns(jule::new_ptr<_1a6425208_Param>(_1a6425208_Param(jule::Ptr<_1d0747985_Token>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a7676c3e_TypeSymbol>(),jule::Str("i", 1))),jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("int", 3)), 5))))),jule::new_ptr<_1a6428d55_ParamIns>(_1a6428d55_ParamIns(jule::new_ptr<_1a6425208_Param>(_1a6425208_Param(jule::Ptr<_1d0747985_Token>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a7676c3e_TypeSymbol>(),jule::Str("j", 1))),jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("int", 3)), 5)))))}),jule::Ptr<_1a7672da0_TypeKind>(),jule::Ptr<_1a759e606_Scope>(),jule::Ptr<_1a642cc9e_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a7648b67_Data>(jule::Ptr<_1a764a6d5_Eval>&,jule::Ptr<_1d075cd74_FnCallExpr>&,jule::Ptr<_1a7648b67_Data>&)>(_1a76cd933_builtin_caller_common_mut),jule::Bool())), 1))),jule::Ptr<_1a7672da0_TypeKind>(),_216843_d.get()._field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_1a641ed3a_CommonSubIdentExprModel>(_1a641ed3a_CommonSubIdentExprModel(_216843_d.get()._field_kind,_216843_d.get()._field_model,_216857_ident,jule::Str("swap", 4))))),jule::Bool(),jule::Ptr<_1a751ddb1_Const>()));
			}
		}
		else {
			_case_begin_1a9d02818:;
			{
				_1a764abad_push_err(&(*_self_), _216857_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(_1a7673257_to_str(_216843_d.get()._field_kind.ptr())),jule::Any(_216857_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1a9d02a49:;
	}
}



inline jule::Ptr<_1a7648b67_Data> _1a765e8e7_eval_map_sub_ident(_1a764a6d5_Eval* _self_,jule::Ptr<_1a7648b67_Data> _221341_d,jule::Ptr<_1d0747985_Token> _221355_ident) {
	jule::Ptr<_1a767cb24_Map> _221417_map_kind = _1a7676623_map(_221341_d.get()._field_kind.ptr());
	{
		auto &_match_expr{ _221355_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1a9d0a17d:;
			{
				return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("int", 3)), 5))),jule::Ptr<_1a7672da0_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_1a641ed3a_CommonSubIdentExprModel>(_1a641ed3a_CommonSubIdentExprModel(_221341_d.get()._field_kind,_221341_d.get()._field_model,_221355_ident,jule::Str("len()", 5))))),jule::Bool(),jule::Ptr<_1a751ddb1_Const>()));
			}
		}
		else if (_match_expr == jule::Str("clear", 5)) {
			_case_begin_1a9d09e4c:;
			{
				return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(jule::new_ptr<_1a6429be1_FnIns>(_1a6429be1_FnIns(jule::Ptr<_1a641744d_StructIns>(),jule::Ptr<_1a6426a45_Fn>(),jule::Slice<jule::Ptr<_1a7672da0_TypeKind>>(),jule::Slice<jule::Ptr<_1a6428d55_ParamIns>>(),jule::Ptr<_1a7672da0_TypeKind>(),jule::Ptr<_1a759e606_Scope>(),jule::Ptr<_1a642cc9e_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a7648b67_Data>(jule::Ptr<_1a764a6d5_Eval>&,jule::Ptr<_1d075cd74_FnCallExpr>&,jule::Ptr<_1a7648b67_Data>&)>(_1a76cd933_builtin_caller_common_mut),jule::Bool())), 1))),jule::Ptr<_1a7672da0_TypeKind>(),_221341_d.get()._field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_1a641ed3a_CommonSubIdentExprModel>(_1a641ed3a_CommonSubIdentExprModel(_221341_d.get()._field_kind,_221341_d.get()._field_model,_221355_ident,jule::Str("clear", 5))))),jule::Bool(),jule::Ptr<_1a751ddb1_Const>()));
			}
		}
		else if (_match_expr == jule::Str("keys", 4)) {
			_case_begin_1a9d09eb3:;
			{
				return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(jule::new_ptr<_1a6429be1_FnIns>(_1a6429be1_FnIns(jule::Ptr<_1a641744d_StructIns>(),jule::Ptr<_1a6426a45_Fn>(),jule::Slice<jule::Ptr<_1a7672da0_TypeKind>>(),jule::Slice<jule::Ptr<_1a6428d55_ParamIns>>(),jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(jule::new_ptr<_1a767b56d_Slc>(_1a767b56d_Slc(_221417_map_kind.get()._field_key)), 7))),jule::Ptr<_1a759e606_Scope>(),jule::Ptr<_1a642cc9e_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a7648b67_Data>(jule::Ptr<_1a764a6d5_Eval>&,jule::Ptr<_1d075cd74_FnCallExpr>&,jule::Ptr<_1a7648b67_Data>&)>(_1a76cd933_builtin_caller_common_mut),jule::Bool())), 1))),jule::Ptr<_1a7672da0_TypeKind>(),_221341_d.get()._field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_1a641ed3a_CommonSubIdentExprModel>(_1a641ed3a_CommonSubIdentExprModel(_221341_d.get()._field_kind,_221341_d.get()._field_model,_221355_ident,jule::Str("keys", 4))))),jule::Bool(),jule::Ptr<_1a751ddb1_Const>()));
			}
		}
		else if (_match_expr == jule::Str("values", 6)) {
			_case_begin_1a9d0a029:;
			{
				return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(jule::new_ptr<_1a6429be1_FnIns>(_1a6429be1_FnIns(jule::Ptr<_1a641744d_StructIns>(),jule::Ptr<_1a6426a45_Fn>(),jule::Slice<jule::Ptr<_1a7672da0_TypeKind>>(),jule::Slice<jule::Ptr<_1a6428d55_ParamIns>>(),jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(jule::new_ptr<_1a767b56d_Slc>(_1a767b56d_Slc(_221417_map_kind.get()._field_val)), 7))),jule::Ptr<_1a759e606_Scope>(),jule::Ptr<_1a642cc9e_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a7648b67_Data>(jule::Ptr<_1a764a6d5_Eval>&,jule::Ptr<_1d075cd74_FnCallExpr>&,jule::Ptr<_1a7648b67_Data>&)>(_1a76cd933_builtin_caller_common_mut),jule::Bool())), 1))),jule::Ptr<_1a7672da0_TypeKind>(),_221341_d.get()._field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_1a641ed3a_CommonSubIdentExprModel>(_1a641ed3a_CommonSubIdentExprModel(_221341_d.get()._field_kind,_221341_d.get()._field_model,_221355_ident,jule::Str("values", 6))))),jule::Bool(),jule::Ptr<_1a751ddb1_Const>()));
			}
		}
		else if (_match_expr == jule::Str("has", 3)) {
			_case_begin_1a9d08b4e:;
			{
				return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(jule::new_ptr<_1a6429be1_FnIns>(_1a6429be1_FnIns(jule::Ptr<_1a641744d_StructIns>(),jule::Ptr<_1a6426a45_Fn>(),jule::Slice<jule::Ptr<_1a7672da0_TypeKind>>(),jule::Slice<jule::Ptr<_1a6428d55_ParamIns>>({jule::new_ptr<_1a6428d55_ParamIns>(_1a6428d55_ParamIns(jule::new_ptr<_1a6425208_Param>(_1a6425208_Param(jule::Ptr<_1d0747985_Token>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a7676c3e_TypeSymbol>(),jule::Str("key", 3))),_221417_map_kind.get()._field_key))}),jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1a759e606_Scope>(),jule::Ptr<_1a642cc9e_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a7648b67_Data>(jule::Ptr<_1a764a6d5_Eval>&,jule::Ptr<_1d075cd74_FnCallExpr>&,jule::Ptr<_1a7648b67_Data>&)>(_1a769ba00_builtin_caller_common),jule::Bool())), 1))),jule::Ptr<_1a7672da0_TypeKind>(),_221341_d.get()._field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_1a641ed3a_CommonSubIdentExprModel>(_1a641ed3a_CommonSubIdentExprModel(_221341_d.get()._field_kind,_221341_d.get()._field_model,_221355_ident,jule::Str("has", 3))))),jule::Bool(),jule::Ptr<_1a751ddb1_Const>()));
			}
		}
		else if (_match_expr == jule::Str("del", 3)) {
			_case_begin_1a9d08bb5:;
			{
				return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(jule::new_ptr<_1a6429be1_FnIns>(_1a6429be1_FnIns(jule::Ptr<_1a641744d_StructIns>(),jule::Ptr<_1a6426a45_Fn>(),jule::Slice<jule::Ptr<_1a7672da0_TypeKind>>(),jule::Slice<jule::Ptr<_1a6428d55_ParamIns>>({jule::new_ptr<_1a6428d55_ParamIns>(_1a6428d55_ParamIns(jule::new_ptr<_1a6425208_Param>(_1a6425208_Param(jule::Ptr<_1d0747985_Token>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a7676c3e_TypeSymbol>(),jule::Str("key", 3))),_221417_map_kind.get()._field_key))}),jule::Ptr<_1a7672da0_TypeKind>(),jule::Ptr<_1a759e606_Scope>(),jule::Ptr<_1a642cc9e_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a7648b67_Data>(jule::Ptr<_1a764a6d5_Eval>&,jule::Ptr<_1d075cd74_FnCallExpr>&,jule::Ptr<_1a7648b67_Data>&)>(_1a76cd933_builtin_caller_common_mut),jule::Bool())), 1))),jule::Ptr<_1a7672da0_TypeKind>(),_221341_d.get()._field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_1a641ed3a_CommonSubIdentExprModel>(_1a641ed3a_CommonSubIdentExprModel(_221341_d.get()._field_kind,_221341_d.get()._field_model,_221355_ident,jule::Str("del", 3))))),jule::Bool(),jule::Ptr<_1a751ddb1_Const>()));
			}
		}
		else {
			_case_begin_1a9d08456:;
			{
				_1a764abad_push_err(&(*_self_), _221355_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(_1a767ce87_to_str(_221417_map_kind.ptr())),jule::Any(_221355_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1a9d08a50:;
	}
}



inline jule::Ptr<_1a7648b67_Data> _1a765ec9e_eval_str_sub_ident(_1a764a6d5_Eval* _self_,jule::Ptr<_1a7648b67_Data> _233641_d,jule::Ptr<_1d0747985_Token> _233655_ident) {
	jule::Ptr<_1a7672da0_TypeKind> _233717_str_kind = jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("str", 3)), 5)));
	{
		auto &_match_expr{ _233655_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1a9d158c5:;
			{
				jule::Ptr<_1a7648b67_Data> _234021_sd = jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("int", 3)), 5))),jule::Ptr<_1a7672da0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a751ddb1_Const>()));
				if (_1a764952a_is_const(_233641_d.ptr())) {
					_234021_sd.get()._field_constant=static__1a751cdb0_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_1a7520863_read_str(_233641_d.get()._field_constant.ptr()).len())));
					_234021_sd.get()._field_model=jule::Any(_234021_sd.get()._field_constant);
				} else {
					_234021_sd.get()._field_model=jule::Any(jule::new_ptr<_1a641ed3a_CommonSubIdentExprModel>(_1a641ed3a_CommonSubIdentExprModel(_233641_d.get()._field_kind,_233641_d.get()._field_model,_233655_ident,jule::Str("len()", 5))));
				}
				return _234021_sd;
			}
		}
		else {
			_case_begin_1a9d13c9c:;
			{
				_1a764abad_push_err(&(*_self_), _233655_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(_1a7673257_to_str(_233717_str_kind.ptr())),jule::Any(_233655_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1a9d146e8:;
	}
}



inline jule::Ptr<_1a7648b67_Data> _1a76600ac_eval_int_type_static(_1a764a6d5_Eval* _self_,jule::Ptr<_1d0747985_Token> _236139_ident) {
	
	{
		auto &_match_expr{ _236139_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1a9d19ae9:;
			{
				jule::Ptr<_1a751ddb1_Const> _236621_c = static__1a751cdb0_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_1a75ab437_max(jule::Str("int", 3)))));
				return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("int", 3)), 5))),jule::Ptr<_1a7672da0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_236621_c)),jule::Bool(),_236621_c));
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1a9d19b60:;
			{
				jule::Ptr<_1a751ddb1_Const> _237321_c = static__1a751cdb0_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_1a75ab14b_min(jule::Str("int", 3)))));
				return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("int", 3)), 5))),jule::Ptr<_1a7672da0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_237321_c)),jule::Bool(),_237321_c));
			}
		}
		else {
			_case_begin_1a9d18b3c:;
			{
				_1a764abad_push_err(&(*_self_), _236139_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("int", 3)),jule::Any(_236139_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1a9d18ad7:;
	}
}



inline jule::Ptr<_1a7648b67_Data> _1a76603ba_eval_uint_type_static(_1a764a6d5_Eval* _self_,jule::Ptr<_1d0747985_Token> _238540_ident) {
	
	{
		auto &_match_expr{ _238540_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1a9d1dd2e:;
			{
				jule::Ptr<_1a751ddb1_Const> _239021_c = static__1a751e09d_new_u64(static_cast<jule::U64>(static_cast<jule::U64>(_1a75ab437_max(jule::Str("uint", 4)))));
				return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("uint", 4)), 5))),jule::Ptr<_1a7672da0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_239021_c)),jule::Bool(),_239021_c));
			}
		}
		else {
			_case_begin_1a9d1cd72:;
			{
				_1a764abad_push_err(&(*_self_), _238540_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("uint", 4)),jule::Any(_238540_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1a9d1cd1c:;
	}
}



inline jule::Ptr<_1a7648b67_Data> _1a76606c8_eval_i8_type_static(_1a764a6d5_Eval* _self_,jule::Ptr<_1d0747985_Token> _240238_ident) {
	
	
	
	{
		auto &_match_expr{ _240238_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1a9d224e7:;
			{
				jule::Ptr<_1a751ddb1_Const> _240921_c = static__1a751cdb0_new_i64(127LL);
				return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("i8", 2)), 5))),jule::Ptr<_1a7672da0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_240921_c)),jule::Bool(),_240921_c));
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1a9d2255d:;
			{
				jule::Ptr<_1a751ddb1_Const> _241621_c = static__1a751cdb0_new_i64(-128LL);
				return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("i8", 2)), 5))),jule::Ptr<_1a7672da0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_241621_c)),jule::Bool(),_241621_c));
			}
		}
		else {
			_case_begin_1a9d21084:;
			{
				_1a764abad_push_err(&(*_self_), _240238_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("i8", 2)),jule::Any(_240238_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1a9d214a2:;
	}
}



inline jule::Ptr<_1a7648b67_Data> _1a76609d6_eval_i16_type_static(_1a764a6d5_Eval* _self_,jule::Ptr<_1d0747985_Token> _242839_ident) {
	
	
	
	{
		auto &_match_expr{ _242839_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1a9d26809:;
			{
				jule::Ptr<_1a751ddb1_Const> _243521_c = static__1a751cdb0_new_i64(32767LL);
				return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("i16", 3)), 5))),jule::Ptr<_1a7672da0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_243521_c)),jule::Bool(),_243521_c));
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1a9d26870:;
			{
				jule::Ptr<_1a751ddb1_Const> _244221_c = static__1a751cdb0_new_i64(-32768LL);
				return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("i16", 3)), 5))),jule::Ptr<_1a7672da0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_244221_c)),jule::Bool(),_244221_c));
			}
		}
		else {
			_case_begin_1a9d25396:;
			{
				_1a764abad_push_err(&(*_self_), _242839_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("i16", 3)),jule::Any(_242839_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1a9d257b4:;
	}
}



inline jule::Ptr<_1a7648b67_Data> _1a7660ce4_eval_i32_type_static(_1a764a6d5_Eval* _self_,jule::Ptr<_1d0747985_Token> _245439_ident) {
	
	
	
	{
		auto &_match_expr{ _245439_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1a9d2ab1b:;
			{
				jule::Ptr<_1a751ddb1_Const> _246121_c = static__1a751cdb0_new_i64(2147483647LL);
				return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("i32", 3)), 5))),jule::Ptr<_1a7672da0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_246121_c)),jule::Bool(),_246121_c));
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1a9d2ab82:;
			{
				jule::Ptr<_1a751ddb1_Const> _246821_c = static__1a751cdb0_new_i64(-2147483648LL);
				return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("i32", 3)), 5))),jule::Ptr<_1a7672da0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_246821_c)),jule::Bool(),_246821_c));
			}
		}
		else {
			_case_begin_1a9d296a8:;
			{
				_1a764abad_push_err(&(*_self_), _245439_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("i32", 3)),jule::Any(_245439_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1a9d29ac6:;
	}
}



inline jule::Ptr<_1a7648b67_Data> _1a7661102_eval_i64_type_static(_1a764a6d5_Eval* _self_,jule::Ptr<_1d0747985_Token> _248039_ident) {
	
	
	
	{
		auto &_match_expr{ _248039_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1a9d2ecb8:;
			{
				jule::Ptr<_1a751ddb1_Const> _248721_c = static__1a751cdb0_new_i64(jule::MAX_I64);
				return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("i64", 3)), 5))),jule::Ptr<_1a7672da0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_248721_c)),jule::Bool(),_248721_c));
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1a9d2ed2e:;
			{
				jule::Ptr<_1a751ddb1_Const> _249421_c = static__1a751cdb0_new_i64(jule::MIN_I64);
				return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("i64", 3)), 5))),jule::Ptr<_1a7672da0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_249421_c)),jule::Bool(),_249421_c));
			}
		}
		else {
			_case_begin_1a9d2d943:;
			{
				_1a764abad_push_err(&(*_self_), _248039_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("i64", 3)),jule::Any(_248039_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1a9d2dc84:;
	}
}



inline jule::Ptr<_1a7648b67_Data> _1a7661410_eval_u8_type_static(_1a764a6d5_Eval* _self_,jule::Ptr<_1d0747985_Token> _250638_ident) {
	
	
	{
		auto &_match_expr{ _250638_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1a9d33ecb:;
			{
				jule::Ptr<_1a751ddb1_Const> _251221_c = static__1a751e09d_new_u64(255LLU);
				return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("u8", 2)), 5))),jule::Ptr<_1a7672da0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_251221_c)),jule::Bool(),_251221_c));
			}
		}
		else {
			_case_begin_1a9d326c2:;
			{
				_1a764abad_push_err(&(*_self_), _250638_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("u8", 2)),jule::Any(_250638_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1a9d32e20:;
	}
}



inline jule::Ptr<_1a7648b67_Data> _1a766171d_eval_u16_type_static(_1a764a6d5_Eval* _self_,jule::Ptr<_1d0747985_Token> _252439_ident) {
	
	
	{
		auto &_match_expr{ _252439_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1a9d36e9b:;
			{
				jule::Ptr<_1a751ddb1_Const> _253021_c = static__1a751e09d_new_u64(65535LLU);
				return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("u16", 3)), 5))),jule::Ptr<_1a7672da0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_253021_c)),jule::Bool(),_253021_c));
			}
		}
		else {
			_case_begin_1a9d35692:;
			{
				_1a764abad_push_err(&(*_self_), _252439_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("u16", 3)),jule::Any(_252439_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1a9d35de0:;
	}
}



inline jule::Ptr<_1a7648b67_Data> _1a7661a2b_eval_u32_type_static(_1a764a6d5_Eval* _self_,jule::Ptr<_1d0747985_Token> _254239_ident) {
	
	
	{
		auto &_match_expr{ _254239_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1a9d39e6b:;
			{
				jule::Ptr<_1a751ddb1_Const> _254821_c = static__1a751e09d_new_u64(4294967295LLU);
				return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("u32", 3)), 5))),jule::Ptr<_1a7672da0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_254821_c)),jule::Bool(),_254821_c));
			}
		}
		else {
			_case_begin_1a9d38662:;
			{
				_1a764abad_push_err(&(*_self_), _254239_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("u32", 3)),jule::Any(_254239_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1a9d38db0:;
	}
}



inline jule::Ptr<_1a7648b67_Data> _1a7661d39_eval_u64_type_static(_1a764a6d5_Eval* _self_,jule::Ptr<_1d0747985_Token> _256039_ident) {
	
	
	{
		auto &_match_expr{ _256039_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1a9d3cd81:;
			{
				jule::Ptr<_1a751ddb1_Const> _256621_c = static__1a751e09d_new_u64(jule::MAX_U64);
				return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("u64", 3)), 5))),jule::Ptr<_1a7672da0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_256621_c)),jule::Bool(),_256621_c));
			}
		}
		else {
			_case_begin_1a9d3b632:;
			{
				_1a764abad_push_err(&(*_self_), _256039_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("u64", 3)),jule::Any(_256039_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1a9d3bce7:;
	}
}



inline jule::Ptr<_1a7648b67_Data> _1a7662147_eval_f32_type_tatic(_1a764a6d5_Eval* _self_,jule::Ptr<_1d0747985_Token> _257838_ident) {
	
	
	
	
	{
		auto &_match_expr{ _257838_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1a9d4145b:;
			{
				jule::Ptr<_1a751ddb1_Const> _258621_c = static__1a751e82e_new_f64(340282346638528860000000000000000000000.0);
				return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("f32", 3)), 5))),jule::Ptr<_1a7672da0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_258621_c)),jule::Bool(),_258621_c));
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1a9d414c2:;
			{
				jule::Ptr<_1a751ddb1_Const> _259321_c = static__1a751e82e_new_f64(-340282346638528860000000000000000000000.0);
				return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("f32", 3)), 5))),jule::Ptr<_1a7672da0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_259321_c)),jule::Bool(),_259321_c));
			}
		}
		else if (_match_expr == jule::Str("SMALLEST_NON_ZERO", 17)) {
			_case_begin_1a9d412c4:;
			{
				jule::Ptr<_1a751ddb1_Const> _260021_c = static__1a751e82e_new_f64(0.000000000000000000000000000000000000000000001401298464324817);
				return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("f32", 3)), 5))),jule::Ptr<_1a7672da0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_260021_c)),jule::Bool(),_260021_c));
			}
		}
		else {
			_case_begin_1a9d400d6:;
			{
				_1a764abad_push_err(&(*_self_), _257838_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("f32", 3)),jule::Any(_257838_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1a9d403e4:;
	}
}



inline jule::Ptr<_1a7648b67_Data> _1a7662455_eval_f64_type_static(_1a764a6d5_Eval* _self_,jule::Ptr<_1d0747985_Token> _261239_ident) {
	
	
	
	
	{
		auto &_match_expr{ _261239_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1a9d45b58:;
			{
				jule::Ptr<_1a751ddb1_Const> _262021_c = static__1a751e82e_new_f64(jule::MAX_F64);
				return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("f64", 3)), 5))),jule::Ptr<_1a7672da0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_262021_c)),jule::Bool(),_262021_c));
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1a9d4b598:;
			{
				jule::Ptr<_1a751ddb1_Const> _262721_c = static__1a751e82e_new_f64(jule::MIN_F64);
				return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("f64", 3)), 5))),jule::Ptr<_1a7672da0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_262721_c)),jule::Bool(),_262721_c));
			}
		}
		else if (_match_expr == jule::Str("SMALLEST_NON_ZERO", 17)) {
			_case_begin_1a9d4b60e:;
			{
				jule::Ptr<_1a751ddb1_Const> _263421_c = static__1a751e82e_new_f64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);
				return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("f64", 3)), 5))),jule::Ptr<_1a7672da0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_263421_c)),jule::Bool(),_263421_c));
			}
		}
		else {
			_case_begin_1a9d451b8:;
			{
				_1a764abad_push_err(&(*_self_), _261239_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("f64", 3)),jule::Any(_261239_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1a9d457c3:;
	}
}



inline jule::Ptr<_1a7648b67_Data> _1a766280c_eval_prim_static(_1a764a6d5_Eval* _self_,jule::Str _264635_kind,jule::Ptr<_1d0747985_Token> _264646_ident) {
	{
		auto &_match_expr{ _264635_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1a9d502a0:;
			{
				return _1a76600ac_eval_int_type_static(&(*_self_), _264646_ident);
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1a9d50316:;
			{
				return _1a76603ba_eval_uint_type_static(&(*_self_), _264646_ident);
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1a9d5037c:;
			{
				return _1a76606c8_eval_i8_type_static(&(*_self_), _264646_ident);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1a9d503e3:;
			{
				return _1a76609d6_eval_i16_type_static(&(*_self_), _264646_ident);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1a9d50dd8:;
			{
				return _1a7660ce4_eval_i32_type_static(&(*_self_), _264646_ident);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1a9d50e4e:;
			{
				return _1a7661102_eval_i64_type_static(&(*_self_), _264646_ident);
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1a9d50eb5:;
			{
				return _1a7661410_eval_u8_type_static(&(*_self_), _264646_ident);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1a9d5102b:;
			{
				return _1a766171d_eval_u16_type_static(&(*_self_), _264646_ident);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1a9d511c4:;
			{
				return _1a7661a2b_eval_u32_type_static(&(*_self_), _264646_ident);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1a9d5123a:;
			{
				return _1a7661d39_eval_u64_type_static(&(*_self_), _264646_ident);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1a9d512a1:;
			{
				return _1a7662147_eval_f32_type_tatic(&(*_self_), _264646_ident);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1a9d51317:;
			{
				return _1a7662455_eval_f64_type_static(&(*_self_), _264646_ident);
			}
		}
		else {
			_case_begin_1a9d4ee92:;
			{
				_1a764abad_push_err(&(*_self_), _264646_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(_264635_kind),jule::Any(_264646_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1a9d5006e:;
	}
}



inline jule::Ptr<_1a7648b67_Data> _1a7662bb4_eval_type_static(_1a764a6d5_Eval* _self_,jule::Ptr<_1a7648b67_Data> _267839_d,jule::Ptr<_1d075c99a_SubIdentExpr> _267853_si) {
	{
		
		if ((_1a7674e5c_prim(_267839_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a9d57bc0:;
			{
				return _1a766280c_eval_prim_static(&(*_self_), _1a7677965_to_str(_1a7674e5c_prim(_267839_d.get()._field_kind.ptr()).ptr()),_267853_si.get()._field_ident);
			}
		}
		else if ((_1a7675699_enm(_267839_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a9d57c36:;
			{
				return _1a765cecd_eval_enum_static(&(*_self_), _1a7675699_enm(_267839_d.get()._field_kind.ptr()),_267853_si.get()._field_ident);
			}
		}
		else if ((_1a767614a_strct(_267839_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a9d57a38:;
			{
				return _1a765d385_eval_struct_static(&(*_self_), _1a767614a_strct(_267839_d.get()._field_kind.ptr()),_267853_si.get()._field_ident);
			}
		}
		else {
			_case_begin_1a9d5699e:;
			{
				_1a764abad_push_err(&(*_self_), _267853_si.get()._field_ident,jule::Str("type @ is not supports sub-defines", 34),jule::Slice<jule::Any>({jule::Any(_1a7673257_to_str(_267839_d.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1a9d56905:;
	}
}



inline jule::Ptr<_1a7648b67_Data> _1a766306b_eval_obj_sub_ident(_1a764a6d5_Eval* _self_,jule::Ptr<_1a7648b67_Data> _269241_d,jule::Ptr<_1d075c99a_SubIdentExpr> _269255_si) {
	if (_1d074a1d5_is_ignore_ident(_269255_si.get()._field_ident.get()._field_kind)) {
		_1a764abad_push_err(&(*_self_), _269255_si.get()._field_ident,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1a7672da0_TypeKind> _269817_kind = _269241_d.get()._field_kind;
	{
		
		if ((_1a7675435_ptr(_269241_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a9d5c730:;
			{
				jule::Ptr<_1a767e175_Ptr> _270117_ptr = _1a7675435_ptr(_269241_d.get()._field_kind.ptr());
				if (_1a767eb48_is_unsafe(_270117_ptr.ptr())) {
					goto _match_end_1a9d5c653;
				}
				if ((!(_269255_si.get()._field_is_self)) && (!(_1a764b5e8_is_unsafe(&(*_self_))))) {
					_1a764abad_push_err(&(*_self_), _269255_si.get()._field_ident,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
				}
				_269817_kind=_1a7675435_ptr(_269241_d.get()._field_kind.ptr()).get()._field_elem;
			}
		}
		else if ((_1a76751c1_sptr(_269241_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a9d5c7a7:;
			{
				_269817_kind=_1a76751c1_sptr(_269241_d.get()._field_kind.ptr()).get()._field_elem;
			}
		}
		_match_end_1a9d5c653:;
	}
	{
		
		if ((_1a76763ae_trt(_269241_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a9d60436:;
			{
				return _1a765d7d6_eval_trait_sub_ident(&(*_self_), _269241_d,_1a76763ae_trt(_269241_d.get()._field_kind.ptr()),_269255_si.get()._field_ident);
			}
		}
		else if ((_1a767614a_strct(_269817_kind.ptr()) != nullptr)) {
			_case_begin_1a9d6049c:;
			{
				jule::Ptr<_1a641744d_StructIns> _271717_s = _1a767614a_strct(_269817_kind.ptr());
				if (_1a766e231_is_instanced_struct(_271717_s)) {
					jule::Bool _271925_used_reference_elem = (_1a76751c1_sptr(_269241_d.get()._field_kind.ptr()) != nullptr);
					return _1a765dcd1_eval_struct_sub_ident(&(*_self_), _269241_d,_1a767614a_strct(_269817_kind.ptr()),_269255_si,_271925_used_reference_elem);
				}
			}
		}
		else if ((_1a7675b72_slc(_269817_kind.ptr()) != nullptr)) {
			_case_begin_1a9d60513:;
			{
				return _1a765e188_eval_slice_sub_ident(&(*_self_), _269241_d,_269255_si.get()._field_ident);
			}
		}
		else if ((_1a767590d_arr(_269817_kind.ptr()) != nullptr)) {
			_case_begin_1a9d60579:;
			{
				return _1a765e540_eval_array_sub_ident(&(*_self_), _269241_d,_269255_si.get()._field_ident);
			}
		}
		else if ((_1a7676623_map(_269817_kind.ptr()) != nullptr)) {
			_case_begin_1a9d60bc8:;
			{
				return _1a765e8e7_eval_map_sub_ident(&(*_self_), _269241_d,_269255_si.get()._field_ident);
			}
		}
		else if ((_1a7674e5c_prim(_269817_kind.ptr()) != nullptr)) {
			_case_begin_1a9d60c3e:;
			{
				jule::Ptr<_1a7677602_Prim> _272917_p = _1a7674e5c_prim(_269817_kind.ptr());
				{
					auto &_match_expr{ _272917_p.get()._field_kind };
					
					if (_match_expr == jule::Str("str", 3)) {
						_case_begin_1a9d65cee:;
						{
							return _1a765ec9e_eval_str_sub_ident(&(*_self_), _269241_d,_269255_si.get()._field_ident);
						}
					}
					_match_end_1a9d66d00:;
				}
			}
		}
		_match_end_1a9d5c851:;
	}
	_1a764abad_push_err(&(*_self_), _269255_si.get()._field_ident,jule::Str("object @ is not supports sub-defines", 36),jule::Slice<jule::Any>({jule::Any(_1a7673257_to_str(_269241_d.get()._field_kind.ptr()))}));
	return nullptr;
}



inline jule::Ptr<_1a7648b67_Data> _1a7663379_eval_sub_ident(jule::Ptr<_1a764a6d5_Eval> _self_,jule::Ptr<_1d075c99a_SubIdentExpr> _273938_si) {
	jule::Ptr<_1a7672da0_TypeKind> _274017_prefix = _self_.get()._field_prefix;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_274017_prefix;
	});
	jule::Ptr<_1a7648b67_Data> _274417_d = _1a7664776_eval_expr_kind(_self_, jule::Any(_273938_si.get()._field_expr));
	if ((_274417_d == nullptr)) {
		return nullptr;
	}
	if (_274417_d.get()._field_decl) {
		return _1a7662bb4_eval_type_static(_self_.ptr(), _274417_d,_273938_si);
	}
	return _1a766306b_eval_obj_sub_ident(_self_.ptr(), _274417_d,_273938_si);
}



inline jule::Ptr<_1a7648b67_Data> _1a7663687_eval_tuple(jule::Ptr<_1a764a6d5_Eval> _self_,jule::Ptr<_1d075b526_TupleExpr> _275634_tup) {
	jule::Ptr<_1a767c063_Tuple> _275717_tup_t = jule::new_ptr<_1a767c063_Tuple>(_1a767c063_Tuple());
	_275717_tup_t.get()._field_types=jule::Slice<jule::Ptr<_1a7672da0_TypeKind>>::alloc(0LL,static_cast<jule::I64>(_275634_tup.get()._field_expr.len()));
	jule::Ptr<_1a6420115_TupleExprModel> _276017_model = jule::new_ptr<_1a6420115_TupleExprModel>(_1a6420115_TupleExprModel(jule::Slice<jule::Ptr<_1a7648b67_Data>>::alloc(0LL,static_cast<jule::I64>(_275634_tup.get()._field_expr.len()))));
	jule::Bool _276417_ok = true;
	{
		auto &expr = _275634_tup.get()._field_expr;
		auto it = expr.begin();
		_iter_begin_1a9d6d059:;
		if (it != expr.end()) {
			jule::Ptr<_1d075b14c_Expr> _1a9d6d158_expr = *it;
			{
				jule::Ptr<_1a7648b67_Data> _276621_d = _1a7664776_eval_expr_kind(_self_, _1a9d6d158_expr.get()._field_kind);
				if ((_276621_d == nullptr)) {
					_276417_ok=false;
					goto _iter_next_1a9d6d059;
				}
				_275717_tup_t.get()._field_types = jule::alloc_for_append(_275717_tup_t.get()._field_types,1);_275717_tup_t.get()._field_types.__push(_276621_d.get()._field_kind);
				_276017_model.get()._field_datas = jule::alloc_for_append(_276017_model.get()._field_datas,1);_276017_model.get()._field_datas.__push(_276621_d);
			}
			_iter_next_1a9d6d059:;
			++it;
			goto _iter_begin_1a9d6d059;
		}
		_iter_end_1a9d6d059:;
	}
	if ((!(_276417_ok))) {
		return nullptr;
	}
	return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_275717_tup_t, 8))),jule::Ptr<_1a7672da0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_276017_model)),jule::Bool(),jule::Ptr<_1a751ddb1_Const>()));
}



inline jule::Ptr<_1a7648b67_Data> _1a7663a3e_eval_map(jule::Ptr<_1a764a6d5_Eval> _self_,jule::Ptr<_1a767cb24_Map> _278532_m,jule::Ptr<_1d075d69e_BraceLit> _278545_lit) {
	jule::Ptr<_1a641c871_MapExprModel> _278617_model = jule::new_ptr<_1a641c871_MapExprModel>(_1a641c871_MapExprModel(_278532_m.get()._field_key,_278532_m.get()._field_val,jule::Slice<jule::Ptr<_1a641c3ed_KeyValPairExprModel>>()));
	{
		auto &expr = _278545_lit.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1a9d71964:;
		if (it != expr.end()) {
			jule::Ptr<_1d075b14c_Expr> _1a9d71b62_expr = *it;
			{
				{
					auto &_match_expr{ _1a9d71b62_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_1d075d9bd_KeyValPair>>()) {
						_case_begin_1a9d71ee7:;
						{
							goto _match_end_1a9d722a0;
						}
					}
					else {
						_case_begin_1a9d72327:;
						{
							_1a764abad_push_err(_self_.ptr(), _278545_lit.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							return nullptr;
						}
					}
					_match_end_1a9d722a0:;
				}
				jule::Ptr<_1d075d9bd_KeyValPair> _280121_pair = _1a9d71b62_expr.get()._field_kind.operator jule::Ptr<_1d075d9bd_KeyValPair>();
				jule::Ptr<_1a7648b67_Data> _280321_key = _1a7664776_eval_expr_kind(_self_, jule::Any(_280121_pair.get()._field_key));
				if ((_280321_key == nullptr)) {
					return nullptr;
				}
				jule::Ptr<_1a7648b67_Data> _280821_val = _1a7664776_eval_expr_kind(_self_, jule::Any(_280121_pair.get()._field_val));
				if ((_280821_val == nullptr)) {
					return nullptr;
				}
				_1a75d9ae7_check_assign_type(_self_.get()._field_s, false,_278532_m.get()._field_key,_280321_key,_280121_pair.get()._field_colon);
				_1a75d9ae7_check_assign_type(_self_.get()._field_s, false,_278532_m.get()._field_val,_280821_val,_280121_pair.get()._field_colon);
				_278617_model.get()._field_entries = jule::alloc_for_append(_278617_model.get()._field_entries,1);_278617_model.get()._field_entries.__push(jule::new_ptr<_1a641c3ed_KeyValPairExprModel>(_1a641c3ed_KeyValPairExprModel(_280321_key.get()._field_model,_280821_val.get()._field_model)));
			}
			_iter_next_1a9d71964:;
			++it;
			goto _iter_begin_1a9d71964;
		}
		_iter_end_1a9d71964:;
	}
	return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_278532_m, 9))),jule::Ptr<_1a7672da0_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_278617_model)),jule::Bool(),jule::Ptr<_1a751ddb1_Const>()));
}



inline jule::Ptr<_1a7648b67_Data> _1a7663d4c_eval_brace_lit(jule::Ptr<_1a764a6d5_Eval> _self_,jule::Ptr<_1d075d69e_BraceLit> _282938_lit) {
	{
		
		if ((_self_.get()._field_prefix == nullptr)) {
			_case_begin_1a9d78031:;
			{
				_1a764abad_push_err(_self_.ptr(), _282938_lit.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else if ((_1a7676623_map(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1a9d78097:;
			{
				return _1a7663a3e_eval_map(_self_, _1a7676623_map(_self_.get()._field_prefix.ptr()),_282938_lit);
			}
		}
		else if ((_1a767614a_strct(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1a9d77d66:;
			{
				return _1a765ab9b_eval_struct_lit_explicit(_self_, _1a767614a_strct(_self_.get()._field_prefix.ptr()),_282938_lit.get()._field_exprs,_282938_lit.get()._field_token);
			}
		}
		else {
			_case_begin_1a9d771a6:;
			{
				_1a764abad_push_err(_self_.ptr(), _282938_lit.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1a9d770da:;
	}
}



inline jule::Ptr<_1a7648b67_Data> _1a766415a_eval_anon_fn(_1a764a6d5_Eval* _self_,jule::Ptr<_1d0763709_FnDecl> _284435_decl) {
	_1a7682497_TypeChecker _284517_tc = _1a7682497_TypeChecker((*_self_)._field_s,(*_self_)._field_lookup,jule::Ptr<_1a768181a_Referencer>(),jule::Ptr<_1d0747985_Token>(),jule::Slice<jule::Ptr<_1d075ee64_GenericDecl>>(),jule::Slice<jule::Ptr<_1a7672168_TypeAlias>>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a7672168_TypeAlias>(),jule::Slice<jule::Ptr<_1a7672168_TypeAlias>>(),jule::Bool());
	jule::Ptr<_1a6429be1_FnIns> _284917_ins = _1a768817e_build_fn(&_284517_tc, _284435_decl);
	_284917_ins.get()._field_anon=true;
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1a75b3b8c_ScopeChecker>>()) {
			_case_begin_1a9d7b254:;
			{
				jule::Ptr<_1a75b3b8c_ScopeChecker> _285421_sc = (*_self_)._field_lookup.operator jule::Ptr<_1a75b3b8c_ScopeChecker>();
				jule::Ptr<_1a75b3b8c_ScopeChecker> _285521_scc = _1a75c2d00_new_child_checker(_285421_sc);
				_285521_scc.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1a75b37b3_ScopeLabel>>>(nullptr);
				_285521_scc.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1a75b39a0_ScopeGoto>>>(nullptr);
				_285521_scc.get()._field_owner=nullptr;
				_285521_scc.get()._field_child_index=0LL;
				_285521_scc.get()._field_it=0LLU;
				_285521_scc.get()._field_cse=0LLU;
				_285521_scc.get()._field_owner=_284917_ins;
				_1a75e795c_check_fn_ins_sc((*_self_)._field_s.ptr(), _284917_ins,_285521_scc);
			}
		}
		else {
			_case_begin_1a9d7c970:;
			{
				_1a75e8001_check_fn_ins((*_self_)._field_s, _284917_ins);
			}
		}
		_match_end_1a9d7c91a:;
	}
	return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_284917_ins, 1))),jule::Ptr<_1a7672da0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_1a641c046_AnonFnExprModel>(_1a641c046_AnonFnExprModel(_284917_ins,_1a764b85c_is_global(&(*_self_)))))),jule::Bool(),jule::Ptr<_1a751ddb1_Const>()));
}



inline jule::Ptr<_1a7648b67_Data> _1a7664468_eval_binop(jule::Ptr<_1a764a6d5_Eval> _self_,jule::Ptr<_1d075cb87_BinopExpr> _287734_op) {
	_1a76670a3_BinaryEval _287817_bs = static__1a7667658_new_plain(_self_);
	if ((_self_.get()._field_prefix != nullptr)) {
		jule::Ptr<_1a7677602_Prim> _288217_prim = _1a7674e5c_prim(_self_.get()._field_prefix.ptr());
		if ((_288217_prim == nullptr) || (!(_1a75b1e65_is_num(_1a7677965_to_str(_288217_prim.ptr()))))) {
			jule::Ptr<_1a7672da0_TypeKind> _288425_prefix = _self_.get()._field_prefix;
			_self_.get()._field_prefix=nullptr;
			__JULE_DEFER({
				_self_.get()._field_prefix=_288425_prefix;
			});
			return _1a766c73a_eval(&_287817_bs, _287734_op);
		}
	}
	return _1a766c73a_eval(&_287817_bs, _287734_op);
}



inline jule::Ptr<_1a7648b67_Data> _1a7664776_eval_expr_kind(jule::Ptr<_1a764a6d5_Eval> _self_,jule::Any _289438_kind) {
	jule::Ptr<_1a7648b67_Data> _289517_d = nullptr;
	{
		auto &_match_expr{ _289438_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d075b14c_Expr>>()) {
			_case_begin_1a9d8643a:;
			{
				_289517_d=_1a7664776_eval_expr_kind(_self_, _289438_kind.operator jule::Ptr<_1d075b14c_Expr>().get()._field_kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d075b944_LitExpr>>()) {
			_case_begin_1a9d864a1:;
			{
				_289517_d=_1a764d540_eval_lit(_self_.ptr(), _289438_kind.operator jule::Ptr<_1d075b944_LitExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d075c00a_IdentExpr>>()) {
			_case_begin_1a9d86517:;
			{
				_289517_d=_1a7652b1b_eval_ident(_self_.ptr(), _289438_kind.operator jule::Ptr<_1d075c00a_IdentExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d075c1e7_UnaryExpr>>()) {
			_case_begin_1a9d86704:;
			{
				_289517_d=_1a7652e29_eval_unary(_self_, _289438_kind.operator jule::Ptr<_1d075c1e7_UnaryExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d075c3d4_VariadicExpr>>()) {
			_case_begin_1a9d8676a:;
			{
				_289517_d=_1a7653237_eval_variadic(_self_, _289438_kind.operator jule::Ptr<_1d075c3d4_VariadicExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d075bb31_UnsafeExpr>>()) {
			_case_begin_1a9d867d1:;
			{
				_289517_d=_1a7653545_eval_unsafe(_self_, _289438_kind.operator jule::Ptr<_1d075bb31_UnsafeExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d075dbaa_SliceExpr>>()) {
			_case_begin_1a9d86858:;
			{
				_289517_d=_1a7654018_eval_slice_expr(_self_, _289438_kind.operator jule::Ptr<_1d075dbaa_SliceExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d075e4a2_IndexingExpr>>()) {
			_case_begin_1a9d868d0:;
			{
				_289517_d=_1a76566e1_eval_indexing(_self_, _289438_kind.operator jule::Ptr<_1d075e4a2_IndexingExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d075eaac_SlicingExpr>>()) {
			_case_begin_1a9d86957:;
			{
				_289517_d=_1a76578ac_eval_slicing(_self_, _289438_kind.operator jule::Ptr<_1d075eaac_SlicingExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d075c5c1_CastExpr>>()) {
			_case_begin_1a9d869ce:;
			{
				_289517_d=_1a765a3e8_eval_cast(_self_, _289438_kind.operator jule::Ptr<_1d075c5c1_CastExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d075c7ad_NsSelectionExpr>>()) {
			_case_begin_1a9d86a56:;
			{
				_289517_d=_1a765a706_eval_ns_selection(_self_.ptr(), _289438_kind.operator jule::Ptr<_1d075c7ad_NsSelectionExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d075d4b2_StructLit>>()) {
			_case_begin_1a9d86acd:;
			{
				_289517_d=_1a765ae98_eval_struct_lit(_self_, _289438_kind.operator jule::Ptr<_1d075d4b2_StructLit>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d0759c1c_TypeDecl>>()) {
			_case_begin_1a9d86b55:;
			{
				_289517_d=_1a765b2a6_eval_type(_self_.ptr(), _289438_kind.operator jule::Ptr<_1d0759c1c_TypeDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d075cd74_FnCallExpr>>()) {
			_case_begin_1a9d86bcc:;
			{
				_289517_d=_1a765cb26_eval_fn_call(_self_, _289438_kind.operator jule::Ptr<_1d075cd74_FnCallExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d075c99a_SubIdentExpr>>()) {
			_case_begin_1a9d86c54:;
			{
				_289517_d=_1a7663379_eval_sub_ident(_self_, _289438_kind.operator jule::Ptr<_1d075c99a_SubIdentExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d075b526_TupleExpr>>()) {
			_case_begin_1a9d86ccb:;
			{
				_289517_d=_1a7663687_eval_tuple(_self_, _289438_kind.operator jule::Ptr<_1d075b526_TupleExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d075d69e_BraceLit>>()) {
			_case_begin_1a9d86d53:;
			{
				_289517_d=_1a7663d4c_eval_brace_lit(_self_, _289438_kind.operator jule::Ptr<_1d075d69e_BraceLit>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d0763709_FnDecl>>()) {
			_case_begin_1a9d86dca:;
			{
				_289517_d=_1a766415a_eval_anon_fn(_self_.ptr(), _289438_kind.operator jule::Ptr<_1d0763709_FnDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d075cb87_BinopExpr>>()) {
			_case_begin_1a9d86e52:;
			{
				_289517_d=_1a7664468_eval_binop(_self_, _289438_kind.operator jule::Ptr<_1d075cb87_BinopExpr>());
			}
		}
		_match_end_1a9d8636e:;
	}
	if ((_289517_d == nullptr)) {
		return nullptr;
	}
	if ((_289517_d.get()._field_kind == nullptr)) {
		return _289517_d;
	}
	if ((!(_289517_d.get()._field_decl)) && (_self_.get()._field_prefix != nullptr)) {
		if (((((((!(_1a7673a0a_cpp_linked(_289517_d.get()._field_kind.ptr()))) && (_289517_d.get()._field_cast_kind == nullptr)) && (!(_289517_d.get()._field_kind.get()._field_variadic))) && (!(_289517_d.get()._field_lvalue))) && (!(_1a764952a_is_const(_289517_d.ptr())))) && (_1a7674e5c_prim(_289517_d.get()._field_kind.ptr()) != nullptr)) && _1a75b1e65_is_num(_1a7674e5c_prim(_289517_d.get()._field_kind.ptr()).get()._field_kind)) {
			_289517_d.get()._field_cast_kind=_289517_d.get()._field_kind;
		}
		_1a766e929_apply_cast_kind(_289517_d);
		if ((_1a7674e5c_prim(_289517_d.get()._field_kind.ptr()) == nullptr) || (!(_1a767a825_is_any(_1a7674e5c_prim(_289517_d.get()._field_kind.ptr()).ptr())))) {
			if ((_1a7674e5c_prim(_self_.get()._field_prefix.ptr()) != nullptr) && _1a767a825_is_any(_1a7674e5c_prim(_self_.get()._field_prefix.ptr()).ptr())) {
				_289517_d.get()._field_cast_kind=_self_.get()._field_prefix;
				_1a766e71a_apply_cast_kind_model(_289517_d);
				_289517_d.get()._field_cast_kind=nullptr;
			}
		}
	}
	return _289517_d;
}



inline jule::Ptr<_1a7648b67_Data> _1a7664a84_eval(jule::Ptr<_1a764a6d5_Eval> _self_,jule::Ptr<_1d075b14c_Expr> _297128_expr) {
	jule::Ptr<_1a7648b67_Data> _297217_d = _1a7664776_eval_expr_kind(_self_, _297128_expr.get()._field_kind);
	if ((_297217_d == nullptr) || (_297217_d.get()._field_kind == nullptr)) {
		return nullptr;
	}
	{
		
		if ((_1a7675dd6_fnc(_297217_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a9d98c77:;
			{
				jule::Ptr<_1a6429be1_FnIns> _297921_f = _1a7675dd6_fnc(_297217_d.get()._field_kind.ptr());
				if (_1a642a96c_is_builtin(_297921_f.ptr())) {
					goto _match_end_1a9d9876b;
				}
				if (_297921_f.get()._field_generics.len() != static_cast<jule::I64>(static_cast<jule::I64>(_297921_f.get()._field_decl.get()._field_generics.len()))) {
					_1a75d488e_push_err(_self_.get()._field_s.ptr(), _297128_expr.get()._field_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				}
				if (_1a642720a_is_method(_297921_f.get()._field_decl.ptr())) {
					_1a75d488e_push_err(_self_.get()._field_s.ptr(), _297128_expr.get()._field_token,jule::Str("methods should be invoked", 25),jule::Slice<jule::Any>());
				}
			}
		}
		_match_end_1a9d9876b:;
	}
	return _297217_d;
}



inline jule::Ptr<_1a7648b67_Data> _1a7664d92_eval_expr(jule::Ptr<_1a764a6d5_Eval> _self_,jule::Ptr<_1d075b14c_Expr> _299733_expr) {
	jule::Ptr<_1a7648b67_Data> _299817_d = _1a7664a84_eval(_self_, _299733_expr);
	{
		
		if ((_299817_d == nullptr)) {
			_case_begin_1a9d9ce9b:;
			{
				return nullptr;
			}
		}
		else if (_299817_d.get()._field_decl) {
			_case_begin_1a9d9d012:;
			{
				_1a764abad_push_err(_self_.ptr(), _299733_expr.get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else {
			_case_begin_1a9d9c8c4:;
			{
				return _299817_d;
			}
		}
		_match_end_1a9d9c84c:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, _1a764a6d5_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "dis_builtin:" << _Src._field_dis_builtin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}



inline _1a7665315_UnaryEval static__1a76657bb_new(jule::Ptr<_1a764a6d5_Eval> _301823_e) {
	return _1a7665315_UnaryEval(_301823_e,jule::Ptr<_1a7648b67_Data>(),jule::Ptr<_1d075c1e7_UnaryExpr>());
}



inline void _1a7665997_minus(_1a7665315_UnaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_kind == nullptr)) {
			_case_begin_1a9d9ea5d:;
			{
				(*_self_)._field_d=nullptr;
				return;
			}
		}
		else if ((_1a7674e5c_prim((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a9d9eed1:;
			{
				if ((!(_1a75b1e65_is_num(_1a7673257_to_str((*_self_)._field_d.get()._field_kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;
				}
			}
		}
		else if ((_1a767614a_strct((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a9da0047:;
			{
				if ((_1a767614a_strct((*_self_)._field_d.get()._field_kind.ptr()).get()._field_operators._field_neg == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;
				}
			}
		}
		else {
			_case_begin_1a9d9e6d9:;
			{
				(*_self_)._field_d=nullptr;
				return;
			}
		}
		_match_end_1a9d9e61d:;
	}
	if (_1a764952a_is_const((*_self_)._field_d.ptr())) {
		{
			
			if (_1a7522e70_is_f64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1a9da32c0:;
				{
					_1a752207e_set_f64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::F64>((-(static_cast<jule::F64>(static_cast<jule::F64>(_1a7520ac7_read_f64((*_self_)._field_d.get()._field_constant.ptr())))))));
				}
			}
			else if (_1a75224be_is_i64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1a9da3347:;
				{
					_1a7521589_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((-(static_cast<jule::I64>(static_cast<jule::I64>(_1a7520126_read_i64((*_self_)._field_d.get()._field_constant.ptr())))))));
				}
			}
			else if (_1a7522733_is_u64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1a9da33be:;
				{
					_1a7521589_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((-(static_cast<jule::I64>(static_cast<jule::I64>(_1a7520d3b_as_i64((*_self_)._field_d.get()._field_constant.ptr())))))));
				}
			}
			_match_end_1a9da306c:;
		}
	}
	(*_self_)._field_d.get()._field_lvalue=false;
	(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_1a6419928_UnaryExprModel>(_1a6419928_UnaryExprModel(jule::new_ptr<_1a7648b67_Data>((*((*_self_)._field_d))),(*_self_)._field_u.get()._field_op)));
}



inline void _1a7665b73_plus(_1a7665315_UnaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_kind == nullptr)) {
			_case_begin_1a9da832a:;
			{
				(*_self_)._field_d=nullptr;
				return;
			}
		}
		else if ((_1a7674e5c_prim((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a9da879d:;
			{
				if ((!(_1a75b1e65_is_num(_1a7673257_to_str((*_self_)._field_d.get()._field_kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;
				}
			}
		}
		else if ((_1a767614a_strct((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a9da8814:;
			{
				if ((_1a767614a_strct((*_self_)._field_d.get()._field_kind.ptr()).get()._field_operators._field_pos == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;
				}
			}
		}
		else {
			_case_begin_1a9da7ea6:;
			{
				(*_self_)._field_d=nullptr;
				return;
			}
		}
		_match_end_1a9da7dda:;
	}
	if (_1a764952a_is_const((*_self_)._field_d.ptr())) {
		{
			
			if (_1a7522e70_is_f64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1a9daba8c:;
				{
					_1a752207e_set_f64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::F64>((+(static_cast<jule::F64>(static_cast<jule::F64>(_1a7520ac7_read_f64((*_self_)._field_d.get()._field_constant.ptr())))))));
				}
			}
			else if (_1a75224be_is_i64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1a9dabb14:;
				{
					_1a7521589_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((+(static_cast<jule::I64>(static_cast<jule::I64>(_1a7520126_read_i64((*_self_)._field_d.get()._field_constant.ptr())))))));
				}
			}
			else if (_1a7522733_is_u64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1a9dabb8b:;
				{
					_1a7521589_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((+(static_cast<jule::I64>(static_cast<jule::I64>(_1a7520d3b_as_i64((*_self_)._field_d.get()._field_constant.ptr())))))));
				}
			}
			_match_end_1a9dab839:;
		}
	}
	(*_self_)._field_d.get()._field_lvalue=false;
	(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_1a6419928_UnaryExprModel>(_1a6419928_UnaryExprModel(jule::new_ptr<_1a7648b67_Data>((*((*_self_)._field_d))),(*_self_)._field_u.get()._field_op)));
}



inline void _1a7665d4e_caret(_1a7665315_UnaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_kind == nullptr)) {
			_case_begin_1a9db1cc3:;
			{
				(*_self_)._field_d=nullptr;
				return;
			}
		}
		else if ((_1a7674e5c_prim((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a9db2246:;
			{
				if ((!(_1a75b18d2_is_int(_1a7673257_to_str((*_self_)._field_d.get()._field_kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;
				}
			}
		}
		else if ((_1a767614a_strct((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a9db22ac:;
			{
				if ((_1a767614a_strct((*_self_)._field_d.get()._field_kind.ptr()).get()._field_operators._field_bit_not == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;
				}
			}
		}
		else {
			_case_begin_1a9db194e:;
			{
				(*_self_)._field_d=nullptr;
				return;
			}
		}
		_match_end_1a9db1883:;
	}
	if (_1a764952a_is_const((*_self_)._field_d.ptr())) {
		{
			
			if (_1a75224be_is_i64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1a9db5535:;
				{
					_1a7521589_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((~(static_cast<jule::I64>(static_cast<jule::I64>(_1a7520126_read_i64((*_self_)._field_d.get()._field_constant.ptr())))))));
				}
			}
			else if (_1a7522733_is_u64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1a9db559b:;
				{
					_1a752180e_set_u64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::U64>((~(static_cast<jule::U64>(static_cast<jule::U64>(_1a752038a_read_u64((*_self_)._field_d.get()._field_constant.ptr())))))));
				}
			}
			_match_end_1a9db52d2:;
		}
	}
	(*_self_)._field_d.get()._field_lvalue=false;
	(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_1a6419928_UnaryExprModel>(_1a6419928_UnaryExprModel(jule::new_ptr<_1a7648b67_Data>((*((*_self_)._field_d))),(*_self_)._field_u.get()._field_op)));
}



inline void _1a766602a_excl(_1a7665315_UnaryEval* _self_) {
	jule::Ptr<_1a7677602_Prim> _313713_t = _1a7674e5c_prim((*_self_)._field_d.get()._field_kind.ptr());
	if ((_313713_t == nullptr) || (!(_1a767a34c_is_bool(_313713_t.ptr())))) {
		(*_self_)._field_d=nullptr;
		return;
	}
	if (_1a764952a_is_const((*_self_)._field_d.ptr())) {
		{
			
			if (_1a7522997_is_bool((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1a9dbab9a:;
				{
					_1a7521a84_set_bool((*_self_)._field_d.get()._field_constant.ptr(), (!(_1a75205ee_read_bool((*_self_)._field_d.get()._field_constant.ptr()))));
				}
			}
			_match_end_1a9dbaa9b:;
		}
	}
	(*_self_)._field_d.get()._field_lvalue=false;
	(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_1a6419928_UnaryExprModel>(_1a6419928_UnaryExprModel(jule::new_ptr<_1a7648b67_Data>((*((*_self_)._field_d))),(*_self_)._field_u.get()._field_op)));
}



inline void _1a7666206_star(_1a7665315_UnaryEval* _self_) {
	(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_1a6419928_UnaryExprModel>(_1a6419928_UnaryExprModel(jule::new_ptr<_1a7648b67_Data>((*((*_self_)._field_d))),(*_self_)._field_u.get()._field_op)));
	{
		
		if ((_1a7675435_ptr((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a9dbe1ba:;
			{
				if ((!(_1a764b5e8_is_unsafe((*_self_)._field_e.ptr())))) {
					_1a764abad_push_err((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_op,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
				}
				jule::Ptr<_1a767e175_Ptr> _316921_t = _1a7675435_ptr((*_self_)._field_d.get()._field_kind.ptr());
				if (_1a767eb48_is_unsafe(_316921_t.ptr())) {
					(*_self_)._field_d=nullptr;
					return;
				}
				(*_self_)._field_d.get()._field_kind=_316921_t.get()._field_elem;
			}
		}
		else if ((_1a76751c1_sptr((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a9dbe63d:;
			{
				(*_self_)._field_d.get()._field_kind=_1a76751c1_sptr((*_self_)._field_d.get()._field_kind.ptr()).get()._field_elem;
			}
		}
		else {
			_case_begin_1a9dbdd68:;
			{
				(*_self_)._field_d=nullptr;
				return;
			}
		}
		_match_end_1a9dbdd13:;
	}
	(*_self_)._field_d.get()._field_constant=nullptr;
	(*_self_)._field_d.get()._field_lvalue=true;
}



inline void _1a76663d2_amper(_1a7665315_UnaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1a641a1cb_StructLitExprModel>>()) {
			_case_begin_1a9dc5798:;
			{
				jule::Ptr<_1a641a1cb_StructLitExprModel> _318921_lit = (*_self_)._field_d.get()._field_model.operator jule::Ptr<_1a641a1cb_StructLitExprModel>();
				_1a766d4c7_make_struct_lit_alloc((*_self_)._field_d,_318921_lit);
			}
		}
		else {
			_case_begin_1a9dc3a82:;
			{
				{
					
					if (_1a767ee9a_can_get_ptr((*_self_)._field_d)) {
						_case_begin_1a9dc4423:;
						{
							(*_self_)._field_d.get()._field_kind=jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(jule::new_ptr<_1a767e175_Ptr>(_1a767e175_Ptr((*_self_)._field_d.get()._field_kind)), 11)));
							(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_1a6419928_UnaryExprModel>(_1a6419928_UnaryExprModel(jule::new_ptr<_1a7648b67_Data>((*((*_self_)._field_d))),(*_self_)._field_u.get()._field_op)));
						}
					}
					else {
						_case_begin_1a9dc409e:;
						{
							(*_self_)._field_d=nullptr;
						}
					}
					_match_end_1a9dc4005:;
				}
			}
		}
		_match_end_1a9dc3a2c:;
	}
	if (((*_self_)._field_d != nullptr)) {
		(*_self_)._field_d.get()._field_constant=nullptr;
		(*_self_)._field_d.get()._field_lvalue=false;
	}
}



inline void _1a76665ad_type_decl(_1a7665315_UnaryEval* _self_) {
	_1a7682497_TypeChecker _321317_tc = _1a7682497_TypeChecker((*_self_)._field_e.get()._field_s,(*_self_)._field_e.get()._field_lookup,jule::Ptr<_1a768181a_Referencer>(),(*_self_)._field_u.get()._field_op,jule::Slice<jule::Ptr<_1d075ee64_GenericDecl>>(),jule::Slice<jule::Ptr<_1a7672168_TypeAlias>>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a7672168_TypeAlias>(),jule::Slice<jule::Ptr<_1a7672168_TypeAlias>>(),jule::Bool());
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1a9dca58e:;
			{
				(*_self_)._field_d.get()._field_kind=jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7686a1d_build_ptr_from_type(&_321317_tc, (*_self_)._field_d.get()._field_kind), 11)));
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1a9dca605:;
			{
				(*_self_)._field_d.get()._field_kind=jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7686402_build_sptr_from_type(&_321317_tc, (*_self_)._field_d.get()._field_kind), 6)));
			}
		}
		else {
			_case_begin_1a9dc7c2e:;
			{
				_1a764abad_push_err((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_op,jule::Str("unary operator @ is not defined for type @", 42),jule::Slice<jule::Any>({jule::Any((*_self_)._field_u.get()._field_op.get()._field_kind),jule::Any(_1a7673257_to_str((*_self_)._field_d.get()._field_kind.ptr()))}));
				(*_self_)._field_d=nullptr;
				return;
			}
		}
		_match_end_1a9dc8bec:;
	}
	(*_self_)._field_d.get()._field_decl=true;
}



inline void _1a7666789_eval_data(_1a7665315_UnaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1a9dcda04:;
			{
				jule::Ptr<_1a7672da0_TypeKind> _323521_prefix = (*_self_)._field_e.get()._field_prefix;
				(*_self_)._field_e.get()._field_prefix=nullptr;
				(*_self_)._field_d=_1a7664776_eval_expr_kind((*_self_)._field_e, jule::Any((*_self_)._field_u.get()._field_expr));
				(*_self_)._field_e.get()._field_prefix=_323521_prefix;
			}
		}
		else {
			_case_begin_1a9dcd273:;
			{
				(*_self_)._field_d=_1a7664776_eval_expr_kind((*_self_)._field_e, jule::Any((*_self_)._field_u.get()._field_expr));
			}
		}
		_match_end_1a9dcd680:;
	}
}



inline jule::Ptr<_1a7648b67_Data> _1a7666a64_eval(_1a7665315_UnaryEval* _self_,jule::Ptr<_1d075c1e7_UnaryExpr> _324427_u) {
	(*_self_)._field_u=_324427_u;
	_1a7666789_eval_data(&(*_self_));
	if (((*_self_)._field_d == nullptr)) {
		return nullptr;
	}
	if ((*_self_)._field_d.get()._field_decl) {
		_1a76665ad_type_decl(&(*_self_));
		return (*_self_)._field_d;
	}
	jule::Ptr<_1a7672da0_TypeKind> _325517_cast_kind = (*_self_)._field_d.get()._field_cast_kind;
	jule::Ptr<_1a7672da0_TypeKind> _325613_kind = (*_self_)._field_d.get()._field_kind;
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1a9dd2ec0:;
			{
				_1a7665997_minus(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1a9dd3036:;
			{
				_1a7665b73_plus(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1a9dd309c:;
			{
				_1a7665d4e_caret(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("!", 1)) {
			_case_begin_1a9dd3113:;
			{
				_1a766602a_excl(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1a9dd3652:;
			{
				_1a7666206_star(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1a9dd36b8:;
			{
				_1a76663d2_amper(&(*_self_));
			}
		}
		else {
			_case_begin_1a9dd109a:;
			{
				(*_self_)._field_d=nullptr;
			}
		}
		_match_end_1a9dd2d27:;
	}
	{
		
		if (((*_self_)._field_d == nullptr)) {
			_case_begin_1a9dd570e:;
			{
				_1a764abad_push_err((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_op,jule::Str("unary operator @ is not defined for type @", 42),jule::Slice<jule::Any>({jule::Any((*_self_)._field_u.get()._field_op.get()._field_kind),jule::Any(_1a7673257_to_str(_325613_kind.ptr()))}));
				return nullptr;
			}
		}
		else if (_1a764952a_is_const((*_self_)._field_d.ptr())) {
			_case_begin_1a9dd5775:;
			{
				(*_self_)._field_d.get()._field_model=jule::Any((*_self_)._field_d.get()._field_constant);
			}
		}
		else if ((_325517_cast_kind != nullptr)) {
			_case_begin_1a9dd57db:;
			{
				(*_self_)._field_d.get()._field_cast_kind=_325517_cast_kind;
				_1a766e929_apply_cast_kind((*_self_)._field_d);
			}
		}
		_match_end_1a9dd51e2:;
	}
	(*_self_)._field_d.get()._field_mutable=true;
	return (*_self_)._field_d;
}







std::ostream &operator<<(std::ostream &_Stream, _1a7665315_UnaryEval _Src) {
	_Stream << "UnaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline _1a76670a3_BinaryEval static__1a7667658_new_plain(jule::Ptr<_1a764a6d5_Eval> _329729_e) {
	return _1a76670a3_BinaryEval(_329729_e,jule::Ptr<_1a7648b67_Data>(),jule::Ptr<_1a7648b67_Data>(),jule::Ptr<_1d0747985_Token>());
}



inline _1a76670a3_BinaryEval static__1a7667999_new(jule::Ptr<_1a764a6d5_Eval> _330323_e,jule::Ptr<_1d0747985_Token> _330337_op) {
	return _1a76670a3_BinaryEval(_330323_e,jule::Ptr<_1a7648b67_Data>(),jule::Ptr<_1a7648b67_Data>(),_330337_op);
}



inline jule::Bool _1a7667c52_check_type_compatibility(_1a76670a3_BinaryEval* _self_) {
	return _1a75da08c_check_type_compatibility((*_self_)._field_e.get()._field_s, (*_self_)._field_l.get()._field_kind,(*_self_)._field_r.get()._field_kind,(*_self_)._field_op);
}



inline jule::Bool _1a766801b_check_struct_common_operator_compatibility(_1a76670a3_BinaryEval* _self_) {
	jule::Ptr<_1a6429be1_FnIns> _331717_overload = nullptr;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1a9ddbd31:;
			{
				_331717_overload=_1a767614a_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_shl;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_1a9ddba23:;
			{
				_331717_overload=_1a767614a_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_shr;
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1a9ddcb67:;
			{
				_331717_overload=_1a767614a_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_add;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1a9ddcbcd:;
			{
				_331717_overload=_1a767614a_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_sub;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1a9ddcc44:;
			{
				_331717_overload=_1a767614a_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_div;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1a9ddb76a:;
			{
				_331717_overload=_1a767614a_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_mul;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1a9ddb7d1:;
			{
				_331717_overload=_1a767614a_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_mod;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1a9ddb847:;
			{
				_331717_overload=_1a767614a_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_bit_and;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1a9ddb8ad:;
			{
				_331717_overload=_1a767614a_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_bit_or;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1a9ddce20:;
			{
				_331717_overload=_1a767614a_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_bit_xor;
			}
		}
		else {
			_case_begin_1a9ddb704:;
			{
				_1a764abad_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1a7673257_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return false;
			}
		}
		_match_end_1a9ddb69e:;
	}
	if ((_331717_overload == nullptr)) {
		_1a764abad_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1a7673257_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
		return false;
	}
	jule::Ptr<_1a6428d55_ParamIns> _334917_p = _331717_overload.get()._field_params[1LL];
	return _1a75d9ae7_check_assign_type((*_self_)._field_e.get()._field_s, _334917_p.get()._field_decl.get()._field_reference,_334917_p.get()._field_kind,(*_self_)._field_r,(*_self_)._field_op);
}



inline jule::Ptr<_1a7648b67_Data> _1a7668280_eval_nil(_1a76670a3_BinaryEval* _self_) {
	if ((!(_1a76744ab_nil_compatible((*_self_)._field_r.get()._field_kind.ptr())))) {
		_1a764abad_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(jule::Str("nil", 3)),jule::Any(_1a7673257_to_str((*_self_)._field_r.get()._field_kind.ptr()))}));
		return nullptr;
	}
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a9de90b3:;
			{
				return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1a7672da0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a751ddb1_Const>()));
			}
		}
		else {
			_case_begin_1a9de7d2b:;
			{
				_1a764abad_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(jule::Str("nil", 3))}));
				return nullptr;
			}
		}
		_match_end_1a9de7cc6:;
	}
}



inline jule::Ptr<_1a7648b67_Data> _1a76684e4_eval_enum(_1a76670a3_BinaryEval* _self_) {
	jule::Ptr<_1a7467de8_Enum> _337417_enm = _1a7675699_enm((*_self_)._field_l.get()._field_kind.ptr());
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a9de9d3e:;
			{
				jule::Ptr<_1a7672da0_TypeKind> _337821_rkind = (*_self_)._field_r.get()._field_kind;
				if ((_1a7675699_enm((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
					_337821_rkind=_1a7675699_enm((*_self_)._field_r.get()._field_kind.ptr()).get()._field_kind.get()._field_kind;
				}
				if ((!(_1a75da08c_check_type_compatibility((*_self_)._field_e.get()._field_s, _337417_enm.get()._field_kind.get()._field_kind,_337821_rkind,(*_self_)._field_op)))) {
					return nullptr;
				}
				return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1a7672da0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a751ddb1_Const>()));
			}
		}
		_match_end_1a9dea5ae:;
	}
	if ((_1a7675699_enm((*_self_)._field_r.get()._field_kind.ptr()) == nullptr) || (_337417_enm != _1a7675699_enm((*_self_)._field_r.get()._field_kind.ptr()))) {
		_1a764abad_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_337417_enm.get()._field_ident),jule::Any(_1a7673257_to_str((*_self_)._field_r.get()._field_kind.ptr()))}));
		return nullptr;
	}
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1a9e01395:;
			{
				if ((!(_1a75b1e65_is_num(_1a7673257_to_str(_337417_enm.get()._field_kind.get()._field_kind.ptr()))))) {
					_1a764abad_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_337417_enm.get()._field_ident)}));
					return nullptr;
				}
				return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1a7672da0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a751ddb1_Const>()));
			}
		}
		else if (_match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1a9e0140b:;
			{
				if ((_1a7674e5c_prim(_337417_enm.get()._field_kind.get()._field_kind.ptr()) == nullptr) || (!(_1a75b18d2_is_int(_1a7677965_to_str(_1a7674e5c_prim(_337417_enm.get()._field_kind.get()._field_kind.ptr()).ptr()))))) {
					_1a764abad_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_337417_enm.get()._field_ident)}));
				}
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1a9dee56e:;
			{
				_1a764abad_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_337417_enm.get()._field_ident)}));
				return nullptr;
			}
		}
		_match_end_1a9e00075:;
	}
}



inline jule::Ptr<_1a7648b67_Data> _1a7668758_eval_sptr(_1a76670a3_BinaryEval* _self_) {
	if ((!(_1a7667c52_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	}
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a9e06c19:;
			{
				return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1a7672da0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a751ddb1_Const>()));
			}
		}
		else {
			_case_begin_1a9e06356:;
			{
				_1a764abad_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1a7673257_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1a9e06642:;
	}
}



inline jule::Ptr<_1a7648b67_Data> _1a76689bc_eval_ptr(_1a76670a3_BinaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1a9e0925a:;
			{
				if ((!(_1a7667c52_check_type_compatibility(&(*_self_))))) {
					return nullptr;
				}
				return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1a7672da0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a751ddb1_Const>()));
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1)) {
			_case_begin_1a9e08b72:;
			{
				if ((_1a7675435_ptr((*_self_)._field_l.get()._field_kind.ptr()) == nullptr)) {
					std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				}
				if (_1a767eb48_is_unsafe(_1a7675435_ptr((*_self_)._field_l.get()._field_kind.ptr()).ptr())) {
					_1a764abad_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1a7673257_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				}
				if ((!(_1a766e53e_is_ptr_arithmetic_compatible_int((*_self_)._field_r)))) {
					_1a764abad_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("type @ is incompatible to use for pointer arithmetic", 52),jule::Slice<jule::Any>({jule::Any(_1a7673257_to_str((*_self_)._field_r.get()._field_kind.ptr()))}));
					return nullptr;
				}
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1a9e07bd7:;
			{
				_1a764abad_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1a7673257_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1a9e08aa6:;
	}
}



inline jule::Ptr<_1a7648b67_Data> _1a7668c31_eval_arr(_1a76670a3_BinaryEval* _self_) {
	if ((!(_1a7667c52_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	}
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a9e126d6:;
			{
				return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1a7672da0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a751ddb1_Const>()));
			}
		}
		else {
			_case_begin_1a9e10daa:;
			{
				_1a764abad_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1a7673257_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1a9e11196:;
	}
}



inline jule::Ptr<_1a7648b67_Data> _1a7668e95_eval_slc(_1a76670a3_BinaryEval* _self_) {
	if ((!(_1a7667c52_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	}
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a9e151cd:;
			{
				return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1a7672da0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a751ddb1_Const>()));
			}
		}
		else {
			_case_begin_1a9e138e6:;
			{
				_1a764abad_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1a7673257_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1a9e13b8d:;
	}
}



inline jule::Ptr<_1a7648b67_Data> _1a7669209_eval_fn(_1a76670a3_BinaryEval* _self_) {
	if ((!(_1a7667c52_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	}
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a9e17bc5:;
			{
				return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1a7672da0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a751ddb1_Const>()));
			}
		}
		else {
			_case_begin_1a9e163dd:;
			{
				_1a764abad_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1a7673257_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1a9e16685:;
	}
}



inline jule::Ptr<_1a7648b67_Data> _1a766946d_eval_struct(_1a76670a3_BinaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str(">", 1)) {
			_case_begin_1a9e18b93:;
			{
				if ((_1a767614a_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_gt == nullptr)) {
					_1a764abad_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1a7673257_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
					return nullptr;
				}
				return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1a7672da0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a751ddb1_Const>()));
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_1a9e18c09:;
			{
				if ((_1a767614a_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_gt_eq == nullptr)) {
					_1a764abad_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1a7673257_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
					return nullptr;
				}
				return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1a7672da0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a751ddb1_Const>()));
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_1a9e18c70:;
			{
				if ((_1a767614a_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_lt == nullptr)) {
					_1a764abad_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1a7673257_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
					return nullptr;
				}
				return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1a7672da0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a751ddb1_Const>()));
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_1a9e18cd6:;
			{
				if ((_1a767614a_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_lt_eq == nullptr)) {
					_1a764abad_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1a7673257_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
					return nullptr;
				}
				return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1a7672da0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a751ddb1_Const>()));
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a9e18d4c:;
			{
				if ((!(_1a7667c52_check_type_compatibility(&(*_self_))))) {
					return nullptr;
				}
				return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1a7672da0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a751ddb1_Const>()));
			}
		}
		_match_end_1a9e18ac7:;
	}
	if ((!(_1a766801b_check_struct_common_operator_compatibility(&(*_self_))))) {
		return nullptr;
	}
	return (*_self_)._field_l;
}



inline jule::Ptr<_1a7648b67_Data> _1a76696d2_eval_trait(_1a76670a3_BinaryEval* _self_) {
	if ((!(_1a7667c52_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	}
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a9e24e35:;
			{
				return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1a7672da0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a751ddb1_Const>()));
			}
		}
		else {
			_case_begin_1a9e24550:;
			{
				_1a764abad_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1a7673257_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1a9e241dc:;
	}
}



inline jule::Ptr<_1a7648b67_Data> _1a7669946_eval_any(_1a76670a3_BinaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a9e28136:;
			{
				return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1a7672da0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a751ddb1_Const>()));
			}
		}
		else {
			_case_begin_1a9e25e03:;
			{
				_1a764abad_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(jule::Str("any", 3))}));
				return nullptr;
			}
		}
		_match_end_1a9e26cc2:;
	}
}



inline jule::Ptr<_1a7648b67_Data> _1a7669baa_eval_bool(_1a76670a3_BinaryEval* _self_) {
	if ((!(_1a7667c52_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	}
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("&&", 2) || _match_expr == jule::Str("||", 2)) {
			_case_begin_1a9e2ab2d:;
			{
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1a9e29346:;
			{
				_1a764abad_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1a7673257_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1a9e295dd:;
	}
}



inline jule::Ptr<_1a7648b67_Data> _1a7669e1e_eval_str(_1a76670a3_BinaryEval* _self_) {
	jule::Str _364717_rk = _1a7673257_to_str((*_self_)._field_r.get()._field_kind.ptr());
	if ((_364717_rk != jule::Str("str", 3))) {
		_1a764abad_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_364717_rk)}));
		return nullptr;
	}
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1a9e2e219:;
			{
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1a9e2e280:;
			{
				return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1a7672da0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a751ddb1_Const>()));
			}
		}
		else {
			_case_begin_1a9e2be5e:;
			{
				_1a764abad_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(jule::Str("str", 3))}));
				return nullptr;
			}
		}
		_match_end_1a9e2be09:;
	}
}



inline void _1a766a0ea_set_type_to_greater(_1a76670a3_BinaryEval* _self_) {
	if (_1a764952a_is_const((*_self_)._field_l.ptr())) {
		if ((!(_1a764952a_is_const((*_self_)._field_r.ptr())))) {
			(*_self_)._field_l.get()._field_kind=(*_self_)._field_r.get()._field_kind;
			return;
		}
		goto _julec_label_set;
	}
	if (_1a764952a_is_const((*_self_)._field_r.ptr())) {
		return;
	}
	_julec_label_set:;
	if (_1a75b022c_is_greater(_1a7674e5c_prim((*_self_)._field_r.get()._field_kind.ptr()).get()._field_kind,_1a7674e5c_prim((*_self_)._field_l.get()._field_kind.ptr()).get()._field_kind)) {
		(*_self_)._field_l.get()._field_kind=(*_self_)._field_r.get()._field_kind;
	}
}



inline void _1a766a33c_check_mod_data(_1a76670a3_BinaryEval* _self_,jule::Ptr<_1a7648b67_Data>& _369038_d) {
	if ((!(_1a764952a_is_const(_369038_d.ptr())))) {
		if ((_1a7674e5c_prim(_369038_d.get()._field_kind.ptr()) == nullptr) || (!(_1a75b18d2_is_int(_1a7674e5c_prim(_369038_d.get()._field_kind.ptr()).get()._field_kind)))) {
			_1a764abad_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
		}
		return;
	}
	{
		
		if (_1a7634955_sig_assignable(jule::Str("i64", 3),_369038_d)) {
			_case_begin_1a9e36067:;
			{
				_1a7521589_set_i64(_369038_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1a7520d3b_as_i64(_369038_d.get()._field_constant.ptr())));
			}
		}
		else if (_1a7634a87_unsig_assignable(jule::Str("u64", 3),_369038_d)) {
			_case_begin_1a9e35c8c:;
			{
				_1a752180e_set_u64(_369038_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1a75210a0_as_u64(_369038_d.get()._field_constant.ptr())));
			}
		}
		else {
			_case_begin_1a9e35c26:;
			{
				_1a764abad_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
			}
		}
		_match_end_1a9e34263:;
	}
}



inline void _1a766a518_mod(_1a76670a3_BinaryEval* _self_) {
	_1a766a33c_check_mod_data(&(*_self_), (*_self_)._field_l);
	_1a766a33c_check_mod_data(&(*_self_), (*_self_)._field_r);
}



inline jule::Bool _1a766a914_numbers_are_compatibile(_1a76670a3_BinaryEval* _self_,jule::Str& _371239_lk,jule::Str& _371249_rk) {
	if ((!(_1a75b1e65_is_num(_371249_rk)))) {
		return false;
	}
	if (_1a764952a_is_const((*_self_)._field_l.ptr())) {
		return true;
	}
	if ((_371239_lk == jule::Str("f32", 3))) {
		if (_1a764952a_is_const((*_self_)._field_r.ptr())) {
			return true;
		}
		return (_371249_rk == jule::Str("f32", 3));
	}
	if ((_371239_lk == jule::Str("f64", 3))) {
		if (_1a764952a_is_const((*_self_)._field_r.ptr())) {
			return true;
		}
		return (_371249_rk == jule::Str("f64", 3));
	}
	if (_1a764952a_is_const((*_self_)._field_r.ptr())) {
		return true;
	}
	return _371239_lk == _371249_rk;
}



inline jule::Ptr<_1a7648b67_Data> _1a766ab67_eval_float(_1a76670a3_BinaryEval* _self_) {
	jule::Str _374213_lk = _1a7674e5c_prim((*_self_)._field_l.get()._field_kind.ptr()).get()._field_kind;
	jule::Str _374313_rk = _1a7674e5c_prim((*_self_)._field_r.get()._field_kind.ptr()).get()._field_kind;
	if ((!(_1a766a914_numbers_are_compatibile(&(*_self_), _374213_lk,_374313_rk)))) {
		_1a764abad_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_374213_lk),jule::Any(_374313_rk)}));
		return nullptr;
	}
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_1a9e3d7de:;
			{
				if ((!(_1a764952a_is_const((*_self_)._field_l.ptr()))) || (!(_1a7634bb9_int_assignable(jule::Str("i64", 3),(*_self_)._field_l)))) {
					_1a764abad_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_374213_lk),jule::Any(_374313_rk)}));
					return nullptr;
				}
				if ((!(_1a764952a_is_const((*_self_)._field_r.ptr()))) || (!(_1a7634bb9_int_assignable(jule::Str("u64", 3),(*_self_)._field_r)))) {
					_1a764abad_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_374213_lk),jule::Any(_374313_rk)}));
					return nullptr;
				}
				_1a7521589_set_i64((*_self_)._field_l.get()._field_constant.ptr(), static_cast<jule::I64>(_1a7520d3b_as_i64((*_self_)._field_l.get()._field_constant.ptr())));
				_1a752180e_set_u64((*_self_)._field_r.get()._field_constant.ptr(), static_cast<jule::U64>(_1a75210a0_as_u64((*_self_)._field_r.get()._field_constant.ptr())));
				if ((!(_1a766de01_is_ok_for_shifting((*_self_)._field_r)))) {
					_1a764abad_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;
				}
				return (*_self_)._field_l;
			}
		}
		_match_end_1a9e3eb86:;
	}
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1a9e4575d:;
			{
				return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1a7672da0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a751ddb1_Const>()));
			}
		}
		_match_end_1a9e45708:;
	}
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1)) {
			_case_begin_1a9e477c6:;
			{
				_1a766a0ea_set_type_to_greater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1a9e4783c:;
			{
				if ((!(_1a75b18d2_is_int(_374313_rk)))) {
					_1a764abad_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_374213_lk),jule::Any(_374313_rk)}));
					return nullptr;
				}
				_1a766a518_mod(&(*_self_));
				return (*_self_)._field_r;
			}
		}
		else {
			_case_begin_1a9e4012b:;
			{
				_1a764abad_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for floating-point type(s)", 52),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1a9e45dac:;
	}
}



inline jule::Ptr<_1a7648b67_Data> _1a766adcb_eval_int(_1a76670a3_BinaryEval* _self_) {
	jule::Str _380613_lk = _1a7674e5c_prim((*_self_)._field_l.get()._field_kind.ptr()).get()._field_kind;
	jule::Str _380713_rk = _1a7674e5c_prim((*_self_)._field_r.get()._field_kind.ptr()).get()._field_kind;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_1a9e4a532:;
			{
				if ((!(_1a75b18d2_is_int(_380613_lk))) || (!(_1a75b18d2_is_int(_380713_rk)))) {
					_1a764abad_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_380613_lk),jule::Any(_380713_rk)}));
					return nullptr;
				}
				if ((!(_1a766de01_is_ok_for_shifting((*_self_)._field_r)))) {
					_1a764abad_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;
				}
				return (*_self_)._field_l;
			}
		}
		_match_end_1a9e4ae17:;
	}
	if ((!(_1a766a914_numbers_are_compatibile(&(*_self_), _380613_lk,_380713_rk)))) {
		_1a764abad_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_380613_lk),jule::Any(_380713_rk)}));
		return nullptr;
	}
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1a9e4b489:;
			{
				return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1a7672da0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a751ddb1_Const>()));
			}
		}
		_match_end_1a9e4e8cc:;
	}
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1a9e51d30:;
			{
				_1a766a0ea_set_type_to_greater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1a9e51d96:;
			{
				_1a766a518_mod(&(*_self_));
				_1a766a0ea_set_type_to_greater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1a9e4ea31:;
			{
				_1a764abad_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for integer type(s)", 45),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1a9e50427:;
	}
}



inline jule::Ptr<_1a7648b67_Data> _1a766b140_eval_prim(_1a76670a3_BinaryEval* _self_) {
	jule::Ptr<_1a7677602_Prim> _386513_prim = _1a7674e5c_prim((*_self_)._field_l.get()._field_kind.ptr());
	{
		
		if (_1a767a34c_is_bool(_386513_prim.ptr())) {
			_case_begin_1a9e54250:;
			{
				return _1a7669baa_eval_bool(&(*_self_));
			}
		}
		else if (_1a767a5b1_is_str(_386513_prim.ptr())) {
			_case_begin_1a9e542c7:;
			{
				return _1a7669e1e_eval_str(&(*_self_));
			}
		}
		_match_end_1a9e54184:;
	}
	if ((_1a7674e5c_prim((*_self_)._field_r.get()._field_kind.ptr()) == nullptr)) {
		_1a764abad_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_1a7677965_to_str(_386513_prim.ptr())),jule::Any(_1a7673257_to_str((*_self_)._field_r.get()._field_kind.ptr()))}));
		return nullptr;
	}
	{
		
		if (_1a75b1bbd_is_float(_386513_prim.get()._field_kind)) {
			_case_begin_1a9e56ede:;
			{
				return _1a766ab67_eval_float(&(*_self_));
			}
		}
		else if (_1a75b18d2_is_int(_386513_prim.get()._field_kind)) {
			_case_begin_1a9e570aa:;
			{
				return _1a766adcb_eval_int(&(*_self_));
			}
		}
		else {
			_case_begin_1a9e56791:;
			{
				return nullptr;
			}
		}
		_match_end_1a9e5672a:;
	}
}



inline jule::Ptr<_1a7648b67_Data> _1a766b3a4_eval_op(_1a76670a3_BinaryEval* _self_) {
	{
		
		if (_1a7673ed3_void((*_self_)._field_l.get()._field_kind.ptr())) {
			_case_begin_1a9e58ab2:;
			{
				_1a764abad_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(jule::Str("void", 4))}));
				return nullptr;
			}
		}
		else if ((_1a7674e5c_prim((*_self_)._field_r.get()._field_kind.ptr()) != nullptr) && _1a767a825_is_any(_1a7674e5c_prim((*_self_)._field_r.get()._field_kind.ptr()).ptr())) {
			_case_begin_1a9e58b28:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1a9e58bc2;
			}
		}
		else if ((_1a7674e5c_prim((*_self_)._field_l.get()._field_kind.ptr()) != nullptr) && _1a767a825_is_any(_1a7674e5c_prim((*_self_)._field_l.get()._field_kind.ptr()).ptr())) {
			_case_begin_1a9e58bc2:;
			{
				return _1a7669946_eval_any(&(*_self_));
			}
		}
		else if (_1a7673c6e_is_nil((*_self_)._field_l.get()._field_kind.ptr())) {
			_case_begin_1a9e58c49:;
			{
				return _1a7668280_eval_nil(&(*_self_));
			}
		}
		else if ((_1a7675699_enm((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a9e58551:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1a9e585c8;
			}
		}
		else if ((_1a7675699_enm((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a9e585c8:;
			{
				return _1a76684e4_eval_enum(&(*_self_));
			}
		}
		else if ((_1a76751c1_sptr((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a9e58650:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1a9e58cc1;
			}
		}
		else if ((_1a76751c1_sptr((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a9e58cc1:;
			{
				return _1a7668758_eval_sptr(&(*_self_));
			}
		}
		else if ((_1a7675435_ptr((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a9e58d37:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1a9e58d9d;
			}
		}
		else if ((_1a7675435_ptr((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a9e58d9d:;
			{
				return _1a76689bc_eval_ptr(&(*_self_));
			}
		}
		else if ((_1a767590d_arr((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a9e58e14:;
			{
				return _1a7668c31_eval_arr(&(*_self_));
			}
		}
		else if ((_1a7675b72_slc((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a9e58e7a:;
			{
				return _1a7668e95_eval_slc(&(*_self_));
			}
		}
		else if ((_1a7675dd6_fnc((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a9e58ee1:;
			{
				return _1a7669209_eval_fn(&(*_self_));
			}
		}
		else if ((_1a76763ae_trt((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a9e59068:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1a9e590e0;
			}
		}
		else if ((_1a76763ae_trt((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a9e590e0:;
			{
				return _1a76696d2_eval_trait(&(*_self_));
			}
		}
		else if ((_1a767614a_strct((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a9e59167:;
			{
				return _1a766946d_eval_struct(&(*_self_));
			}
		}
		else if ((_1a7674e5c_prim((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a9e591de:;
			{
				return _1a766b140_eval_prim(&(*_self_));
			}
		}
		else {
			_case_begin_1a9e584da:;
			{
				return nullptr;
			}
		}
		_match_end_1a9e5841e:;
	}
}



inline void _1a766b629_eval_const(_1a76670a3_BinaryEval* _self_,jule::Ptr<_1a7648b67_Data>& _393534_d) {
	{
		
		if ((_393534_d == nullptr)) {
			_case_begin_1a9e68396:;
			{
				return;
			}
		}
		else if ((!(_1a764952a_is_const((*_self_)._field_l.ptr()))) || (!(_1a764952a_is_const((*_self_)._field_r.ptr())))) {
			_case_begin_1a9e6841d:;
			{
				_393534_d.get()._field_constant=nullptr;
				return;
			}
		}
		_match_end_1a9e68286:;
	}
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1a9e69463:;
			{
				_393534_d.get()._field_constant=static__1a751e2e0_new_bool((*((*_self_)._field_l.get()._field_constant)) == (*((*_self_)._field_r.get()._field_constant)));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1a9e6952e:;
			{
				_393534_d.get()._field_constant=static__1a751e2e0_new_bool((*((*_self_)._field_l.get()._field_constant)) != (*((*_self_)._field_r.get()._field_constant)));
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1a9e69a5c:;
			{
				_393534_d.get()._field_constant=static__1a751e2e0_new_bool(_1a7523b0d_or((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1a9e69ac3:;
			{
				_393534_d.get()._field_constant=static__1a751e2e0_new_bool(_1a7523800_and((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str(">", 1)) {
			_case_begin_1a9e69b39:;
			{
				_393534_d.get()._field_constant=static__1a751e2e0_new_bool((*((*_self_)._field_l.get()._field_constant)) > (*((*_self_)._field_r.get()._field_constant)));
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_1a9e69bb1:;
			{
				_393534_d.get()._field_constant=static__1a751e2e0_new_bool((*((*_self_)._field_l.get()._field_constant)) < (*((*_self_)._field_r.get()._field_constant)));
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_1a9e69c38:;
			{
				_393534_d.get()._field_constant=static__1a751e2e0_new_bool((*((*_self_)._field_l.get()._field_constant)) >= (*((*_self_)._field_r.get()._field_constant)));
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_1a9e69cb0:;
			{
				_393534_d.get()._field_constant=static__1a751e2e0_new_bool((*((*_self_)._field_l.get()._field_constant)) <= (*((*_self_)._field_r.get()._field_constant)));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1a9e69d37:;
			{
				_1a7524e61_add((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_393534_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1a9e69dae:;
			{
				_1a752526e_sub((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_393534_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1a9e69e36:;
			{
				_1a752557c_mul((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_393534_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1a9e69ead:;
			{
				jule::Bool _397217_ok = _1a752588a_div((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				if ((!(_397217_ok)) && (_1a7521314_as_f64((*_self_)._field_r.get()._field_constant.ptr()) == 0LL)) {
					_1a764abad_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				}
				_393534_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
				jule::Ptr<_1a7677602_Prim> _397721_prim = _1a7674e5c_prim(_393534_d.get()._field_kind.ptr());
				{
					
					if (_1a75b134e_is_sig_int(_397721_prim.get()._field_kind)) {
						_case_begin_1a9e77bd0:;
						{
							_1a7521589_set_i64(_393534_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1a7520d3b_as_i64(_393534_d.get()._field_constant.ptr())));
						}
					}
					else if (_1a75b163a_is_unsig_int(_397721_prim.get()._field_kind)) {
						_case_begin_1a9e77c57:;
						{
							_1a752180e_set_u64(_393534_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1a75210a0_as_u64(_393534_d.get()._field_constant.ptr())));
						}
					}
					_match_end_1a9e77b14:;
				}
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1a9e6a035:;
			{
				jule::Bool _398517_ok = _1a7525b98_mod((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				if ((!(_398517_ok)) && (_1a7521314_as_f64((*_self_)._field_r.get()._field_constant.ptr()) == 0LL)) {
					_1a764abad_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				}
				_393534_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1a9e6a0ac:;
			{
				_1a75262b4_bitwise_or((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_393534_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1a9e6a134:;
			{
				_1a7525ea6_bitwise_and((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_393534_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1a9e6a1ab:;
			{
				_1a75265c2_xor((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_393534_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1a9e6a233:;
			{
				_1a75268d0_lshift((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_393534_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_1a9e6a2aa:;
			{
				_1a7526bdd_rshift((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_393534_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		_match_end_1a9e692a9:;
	}
	_1a76701ee_apply_cast_model_by_enum(_393534_d,_1a7675699_enm(_393534_d.get()._field_kind.ptr()));
	jule::Ptr<_1a7677602_Prim> _400917_prim = _1a7674e5c_prim(_393534_d.get()._field_kind.ptr());
	if ((_400917_prim == nullptr) || (!(_1a75b1e65_is_num(_1a7677965_to_str(_400917_prim.ptr()))))) {
		_393534_d.get()._field_model=jule::Any(_393534_d.get()._field_constant);
		return;
	}
	if (((*_self_)._field_op.get()._field_kind != jule::Str("<<", 2)) && ((*_self_)._field_op.get()._field_kind != jule::Str(">>", 2))) {
		if (((*_self_)._field_l.get()._field_model == (*_self_)._field_l.get()._field_constant) && ((*_self_)._field_r.get()._field_model != (*_self_)._field_r.get()._field_constant)) {
			_393534_d.get()._field_kind=(*_self_)._field_r.get()._field_kind;
			_400917_prim=_1a7674e5c_prim(_393534_d.get()._field_kind.ptr());
		}
	}
	_1a766d1ca_fit_bitsize(_393534_d);
	_1a7670496_cast_const_by_type(_400917_prim.get()._field_kind,_393534_d);
}



inline void _1a766b89e_check_data(_1a76670a3_BinaryEval* _self_,jule::Ptr<_1a7648b67_Data>& _402534_d) {
	jule::Ptr<_1a6429be1_FnIns> _402613_f = _1a7675dd6_fnc(_402534_d.get()._field_kind.ptr());
	if (((_402613_f != nullptr) && (_402613_f.get()._field_decl != nullptr)) && _1a642720a_is_method(_402613_f.get()._field_decl.ptr())) {
		_1a764abad_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("invalid expression used for binary operation", 44),jule::Slice<jule::Any>());
	}
}



inline void _1a766ba7a_check_datas(_1a76670a3_BinaryEval* _self_) {
	_1a766b89e_check_data(&(*_self_), (*_self_)._field_l);
	_1a766b89e_check_data(&(*_self_), (*_self_)._field_r);
}



inline void _1a766bd00_set_model(_1a76670a3_BinaryEval* _self_,jule::Ptr<_1a7648b67_Data>& _403733_d) {
	if (_1a764952a_is_const(_403733_d.ptr())) {
		if (((*_self_)._field_l.get()._field_model == (*_self_)._field_l.get()._field_constant) && ((*_self_)._field_r.get()._field_model == (*_self_)._field_r.get()._field_constant)) {
			return;
		}
	}
	jule::Ptr<_1a7648b67_Data> _404518_l = (*_self_)._field_l;
	jule::Ptr<_1a7648b67_Data> _404525_r = (*_self_)._field_r;
	std::tie(_404518_l,_404525_r) = std::make_tuple((*_self_)._field_l,(*_self_)._field_r);
	if ((!(_1a7649838_good_operand(_404518_l.ptr(), _404525_r)))) {
		std::tie(_404518_l,_404525_r) = std::make_tuple(_404525_r,_404518_l);
	}
	_403733_d.get()._field_model=jule::Any(jule::new_ptr<_1a6419571_BinopExprModel>(_1a6419571_BinopExprModel(jule::new_ptr<_1a64190a9_OperandExprModel>(_1a64190a9_OperandExprModel(_404518_l.get()._field_kind,_404518_l.get()._field_model)),jule::new_ptr<_1a64190a9_OperandExprModel>(_1a64190a9_OperandExprModel(_404525_r.get()._field_kind,_404525_r.get()._field_model)),(*_self_)._field_op)));
}



inline void _1a766c075_post_eval(_1a76670a3_BinaryEval* _self_,jule::Ptr<_1a7648b67_Data>& _406333_d) {
	_406333_d.get()._field_lvalue=false;
	_1a766bd00_set_model(&(*_self_), _406333_d);
}



inline jule::Ptr<_1a7648b67_Data> _1a766c42c_solve_explicit(_1a76670a3_BinaryEval* _self_,jule::Ptr<_1a7648b67_Data>& _406838_l,jule::Ptr<_1a7648b67_Data>& _406853_r) {
	std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple(_406838_l,_406853_r);
	_1a766ba7a_check_datas(&(*_self_));
	jule::Ptr<_1a7648b67_Data> _407317_d = _1a766b3a4_eval_op(&(*_self_));
	std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple(_406838_l,_406853_r);
	_1a766b629_eval_const(&(*_self_), _407317_d);
	if ((_407317_d != nullptr)) {
		_407317_d.get()._field_mutable=true;
		_1a766c075_post_eval(&(*_self_), _407317_d);
	}
	return _407317_d;
}



inline jule::Ptr<_1a7648b67_Data> _1a766c73a_eval(_1a76670a3_BinaryEval* _self_,jule::Ptr<_1d075cb87_BinopExpr>& _408828_op) {
	if ((_408828_op.get()._field_op.get()._field_kind == jule::Str("=", 1))) {
		_1a764abad_push_err((*_self_)._field_e.ptr(), _408828_op.get()._field_op,jule::Str("assignments not available for expressions", 41),jule::Slice<jule::Any>());
		_1a764aecc_push_suggestion((*_self_)._field_e.ptr(), jule::Str("use clear imperative approach, comes relevant assignment statement before the expression", 88),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1a7648b67_Data> _409517_l = _1a7664776_eval_expr_kind((*_self_)._field_e, jule::Any(_408828_op.get()._field_left));
	if ((_409517_l == nullptr) || (_409517_l.get()._field_kind == nullptr)) {
		return nullptr;
	}
	jule::Ptr<_1a7672da0_TypeKind> _410017_prefix = (*_self_)._field_e.get()._field_prefix;
	(*_self_)._field_e.get()._field_prefix=_409517_l.get()._field_kind;
	__JULE_DEFER({
		(*_self_)._field_e.get()._field_prefix=_410017_prefix;
	});
	jule::Ptr<_1a7648b67_Data> _410317_r = _1a7664776_eval_expr_kind((*_self_)._field_e, jule::Any(_408828_op.get()._field_right));
	if ((_410317_r == nullptr) || (_410317_r.get()._field_kind == nullptr)) {
		return nullptr;
	}
	(*_self_)._field_op=_408828_op.get()._field_op;
	jule::Ptr<_1a7648b67_Data> _411017_d = _1a766c42c_solve_explicit(&(*_self_), _409517_l,_410317_r);
	if (((_411017_d != nullptr) && _409517_l.get()._field_is_rune) && _410317_r.get()._field_is_rune) {
		_411017_d.get()._field_is_rune=true;
	}
	return _411017_d;
}







std::ostream &operator<<(std::ostream &_Stream, _1a76670a3_BinaryEval _Src) {
	_Stream << "BinaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a7672168_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "generic:" << _Src._field_generic << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a7673257_to_str(_1a7672da0_TypeKind* _self_) {
	if (_1a7673c6e_is_nil(&(*_self_))) {
		return jule::Str("nil", 3);
	}
	jule::Str _7717_kind = jule::Str();
	if ((*_self_)._field_variadic) {
		_7717_kind+=jule::Str("...", 3);
	}
	if (_1a7673a0a_cpp_linked(&(*_self_))) {
		_7717_kind+=jule::Str("cpp.", 4);
		_7717_kind+=(*_self_)._field_cpp_ident;
	} else {
		_7717_kind+=_1a7672971_Kind_mptr_data[((*_self_)._field_kind).type_offset]._1a7672520_to_str((*_self_)._field_kind);
	}
	return _7717_kind;
}



inline jule::Bool _1a7673565_equals(jule::Ptr<_1a7672da0_TypeKind> _self_,jule::Ptr<_1a7672da0_TypeKind> _9326_other) {
	if (_1a7673c6e_is_nil(_self_.ptr())) {
		return _1a7673c6e_is_nil(_9326_other.ptr());
	}
	if (_1a7673a0a_cpp_linked(_self_.ptr())) {
		return _1a7673a0a_cpp_linked(_9326_other.ptr()) && (_self_.get()._field_cpp_ident == _9326_other.get()._field_cpp_ident);
	}
	return _1a7672971_Kind_mptr_data[(_self_.get()._field_kind).type_offset]._1a767282d_equals(_self_.get()._field_kind, _9326_other);
}



inline jule::Bool _1a7673a0a_cpp_linked(_1a7672da0_TypeKind* _self_) {
	return ((*_self_)._field_cpp_ident.len() != 0LL);
}



inline jule::Bool _1a7673c6e_is_nil(_1a7672da0_TypeKind* _self_) {
	return ((*_self_)._field_kind == nullptr);
}



inline jule::Bool _1a7673ed3_void(_1a7672da0_TypeKind* _self_) {
	jule::Ptr<_1a7677602_Prim> _11613_prim = _1a7674e5c_prim(&(*_self_));
	return (_11613_prim != nullptr) && (_11613_prim.get()._field_kind == jule::Str("void", 4));
}



inline jule::Bool _1a7674247_mutable(_1a7672da0_TypeKind* _self_) {
	{
		_1a7672da0_TypeKind* _12321__self = (&((*_self_)));
		if ((_1a767614a_strct(_12321__self) != nullptr)) {
			return _1a767614a_strct(_12321__self).get()._field_mutable;
		}
		if ((_1a76763ae_trt(_12321__self) != nullptr)) {
			return _1a76763ae_trt(_12321__self).get()._field_mutable;
		}
		if ((_1a7674e5c_prim(_12321__self) != nullptr)) {
			jule::Ptr<_1a7677602_Prim> _13221_p = _1a7674e5c_prim(_12321__self);
			return _1a767a825_is_any(_13221_p.ptr());
		}
		if ((_1a767590d_arr(_12321__self) != nullptr)) {
			return _1a7674247_mutable(_1a767590d_arr(_12321__self).get()._field_elem.ptr());
		}
		return ((_1a7675b72_slc(_12321__self) != nullptr) || (_1a7675435_ptr(_12321__self) != nullptr)) || (_1a76751c1_sptr(_12321__self) != nullptr);
	}
}



inline jule::Bool _1a76744ab_nil_compatible(_1a7672da0_TypeKind* _self_) {
	{
		_1a7672da0_TypeKind* _14721__self = (&((*_self_)));
		jule::Ptr<_1a7677602_Prim> _14917_prim = _1a7674e5c_prim(_14721__self);
		if ((_14917_prim != nullptr) && _1a767a825_is_any(_14917_prim.ptr())) {
			return true;
		}
		return (((((_1a7673c6e_is_nil(_14721__self) || (_1a7675dd6_fnc(_14721__self) != nullptr)) || (_1a76751c1_sptr(_14721__self) != nullptr)) || (_1a7675435_ptr(_14721__self) != nullptr)) || (_1a76763ae_trt(_14721__self) != nullptr)) || (_1a7675b72_slc(_14721__self) != nullptr)) || (_1a7676623_map(_14721__self) != nullptr);
	}
}



inline jule::Bool _1a7674720_performs_rc(_1a7672da0_TypeKind* _self_) {
	{
		_1a7672da0_TypeKind* _16721__self = (&((*_self_)));
		return ((_1a76751c1_sptr(_16721__self) != nullptr) || (_1a7675b72_slc(_16721__self) != nullptr)) || (_1a76763ae_trt(_16721__self) != nullptr);
	}
}



inline jule::Bool _1a7674984_supports_cloning(_1a7672da0_TypeKind* _self_) {
	{
		_1a7672da0_TypeKind* _17521__self = (&((*_self_)));
		{
			
			if ((_1a7674e5c_prim(_17521__self) != nullptr)) {
				_case_begin_1a9eabb15:;
				{
					return (!(_1a767a825_is_any(_1a7674e5c_prim(_17521__self).ptr())));
				}
			}
			else if ((_1a7675699_enm(_17521__self) != nullptr)) {
				_case_begin_1a9eabb7b:;
				{
					return true;
				}
			}
			else if ((_1a7675dd6_fnc(_17521__self) != nullptr)) {
				_case_begin_1a9eab86d:;
				{
					return true;
				}
			}
			else if ((_1a7675435_ptr(_17521__self) != nullptr)) {
				_case_begin_1a9eab8d4:;
				{
					return true;
				}
			}
			else if ((_1a7675b72_slc(_17521__self) != nullptr)) {
				_case_begin_1a9eab94a:;
				{
					return _1a7674984_supports_cloning(_1a7675b72_slc(_17521__self).get()._field_elem.ptr());
				}
			}
			else if ((_1a7676623_map(_17521__self) != nullptr)) {
				_case_begin_1a9eab472:;
				{
					jule::Ptr<_1a767cb24_Map> _18821_m = _1a7676623_map(_17521__self);
					return _1a7674984_supports_cloning(_18821_m.get()._field_key.ptr()) && _1a7674984_supports_cloning(_18821_m.get()._field_val.ptr());
				}
			}
			else if ((_1a767590d_arr(_17521__self) != nullptr)) {
				_case_begin_1a9eab4d8:;
				{
					return _1a7674984_supports_cloning(_1a767590d_arr(_17521__self).get()._field_elem.ptr());
				}
			}
			else if ((_1a76751c1_sptr(_17521__self) != nullptr)) {
				_case_begin_1a9eab54e:;
				{
					return _1a7674984_supports_cloning(_1a76751c1_sptr(_17521__self).get()._field_elem.ptr());
				}
			}
			else if ((_1a767614a_strct(_17521__self) != nullptr)) {
				_case_begin_1a9eab5b5:;
				{
					jule::Ptr<_1a641744d_StructIns> _19525_s = _1a767614a_strct(_17521__self);
					return ((_19525_s.get()._field_decl != nullptr) && (!(_19525_s.get()._field_decl.get()._field_cpp_linked))) && _1a64160ea_is_derives(_19525_s.get()._field_decl.ptr(), jule::Str("Clone", 5));
				}
			}
			else {
				_case_begin_1a9eab40b:;
				{
					return false;
				}
			}
			_match_end_1a9eab384:;
		}
	}
}



inline jule::Bool _1a7674be8_variadicable(_1a7672da0_TypeKind* _self_) {
	{
		_1a7672da0_TypeKind* _20821__self = (&((*_self_)));
		return (_1a7675b72_slc(_20821__self) != nullptr);
	}
}



inline jule::Ptr<_1a7677602_Prim> _1a7674e5c_prim(_1a7672da0_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a7677602_Prim>>()) {
			_case_begin_1a9eb469a:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1a7677602_Prim>();
			}
		}
		else {
			_case_begin_1a9ea942b:;
			{
				return nullptr;
			}
		}
		_match_end_1a9ea93c6:;
	}
}



inline jule::Ptr<_1a767ab11_Sptr> _1a76751c1_sptr(_1a7672da0_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a767ab11_Sptr>>()) {
			_case_begin_1a9eb4315:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1a767ab11_Sptr>();
			}
		}
		else {
			_case_begin_1a9eb4997:;
			{
				return nullptr;
			}
		}
		_match_end_1a9eb4942:;
	}
}



inline jule::Ptr<_1a767e175_Ptr> _1a7675435_ptr(_1a7672da0_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a767e175_Ptr>>()) {
			_case_begin_1a9eb50c4:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1a767e175_Ptr>();
			}
		}
		else {
			_case_begin_1a9eb52e4:;
			{
				return nullptr;
			}
		}
		_match_end_1a9eb528e:;
	}
}



inline jule::Ptr<_1a7467de8_Enum> _1a7675699_enm(_1a7672da0_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a7467de8_Enum>>()) {
			_case_begin_1a9eb5d72:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1a7467de8_Enum>();
			}
		}
		else {
			_case_begin_1a9eb604d:;
			{
				return nullptr;
			}
		}
		_match_end_1a9eb5ee8:;
	}
}



inline jule::Ptr<_1a767d718_Arr> _1a767590d_arr(_1a7672da0_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a767d718_Arr>>()) {
			_case_begin_1a9eb6acb:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1a767d718_Arr>();
			}
		}
		else {
			_case_begin_1a9eb6ca7:;
			{
				return nullptr;
			}
		}
		_match_end_1a9eb6c52:;
	}
}



inline jule::Ptr<_1a767b56d_Slc> _1a7675b72_slc(_1a7672da0_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a767b56d_Slc>>()) {
			_case_begin_1a9eb7835:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1a767b56d_Slc>();
			}
		}
		else {
			_case_begin_1a9eb7a11:;
			{
				return nullptr;
			}
		}
		_match_end_1a9eb79ab:;
	}
}



inline jule::Ptr<_1a6429be1_FnIns> _1a7675dd6_fnc(_1a7672da0_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a6429be1_FnIns>>()) {
			_case_begin_1a9eb858e:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1a6429be1_FnIns>();
			}
		}
		else {
			_case_begin_1a9eb876a:;
			{
				return nullptr;
			}
		}
		_match_end_1a9eb8715:;
	}
}



inline jule::Ptr<_1a641744d_StructIns> _1a767614a_strct(_1a7672da0_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a641744d_StructIns>>()) {
			_case_begin_1a9eb92e8:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1a641744d_StructIns>();
			}
		}
		else {
			_case_begin_1a9eb94c4:;
			{
				return nullptr;
			}
		}
		_match_end_1a9eb946e:;
	}
}



inline jule::Ptr<_1a7465bd7_Trait> _1a76763ae_trt(_1a7672da0_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a7465bd7_Trait>>()) {
			_case_begin_1a9eba5a2:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1a7465bd7_Trait>();
			}
		}
		else {
			_case_begin_1a9eba283:;
			{
				return nullptr;
			}
		}
		_match_end_1a9eba22d:;
	}
}



inline jule::Ptr<_1a767cb24_Map> _1a7676623_map(_1a7672da0_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a767cb24_Map>>()) {
			_case_begin_1a9ebb51a:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1a767cb24_Map>();
			}
		}
		else {
			_case_begin_1a9ebac12:;
			{
				return nullptr;
			}
		}
		_match_end_1a9ebb4a4:;
	}
}



inline jule::Ptr<_1a767c063_Tuple> _1a7676887_tup(_1a7672da0_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a767c063_Tuple>>()) {
			_case_begin_1a9ebbaae:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1a767c063_Tuple>();
			}
		}
		else {
			_case_begin_1a9ebbcce:;
			{
				return nullptr;
			}
		}
		_match_end_1a9ebbc79:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, _1a7672da0_TypeKind _Src) {
	_Stream << _1a7673257_to_str(&_Src);
	return _Stream;
}



inline jule::Bool _1a767713a_checked(_1a7676c3e_TypeSymbol* _self_) {
	return ((*_self_)._field_kind != nullptr);
}



inline void _1a7677316_remove_kind(_1a7676c3e_TypeSymbol* _self_) {
	(*_self_)._field_kind=nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1a7676c3e_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a7677965_to_str(_1a7677602_Prim* _self_) {
	return (*_self_)._field_kind;
}



inline jule::Bool _1a7677c73_equals(jule::Ptr<_1a7677602_Prim> _self_,jule::Ptr<_1a7672da0_TypeKind> _35126_other) {
	jule::Ptr<_1a7677602_Prim> _35213_prim = _1a7674e5c_prim(_35126_other.ptr());
	if ((_35213_prim == nullptr)) {
		return false;
	}
	return _self_.get()._field_kind == _35213_prim.get()._field_kind;
}



inline jule::Bool _1a76781d5_is_i8(_1a7677602_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("i8", 2));
}



inline jule::Bool _1a7678449_is_i16(_1a7677602_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("i16", 3));
}



inline jule::Bool _1a76786ad_is_i32(_1a7677602_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("i32", 3));
}



inline jule::Bool _1a7678922_is_i64(_1a7677602_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("i64", 3));
}



inline jule::Bool _1a7678b86_is_u8(_1a7677602_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("u8", 2));
}



inline jule::Bool _1a7678dea_is_u16(_1a7677602_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("u16", 3));
}



inline jule::Bool _1a767915e_is_u32(_1a7677602_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("u32", 3));
}



inline jule::Bool _1a76793c3_is_u64(_1a7677602_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("u64", 3));
}



inline jule::Bool _1a7679637_is_f32(_1a7677602_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("f32", 3));
}



inline jule::Bool _1a767989b_is_f64(_1a7677602_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("f64", 3));
}



inline jule::Bool _1a7679b10_is_int(_1a7677602_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("int", 3));
}



inline jule::Bool _1a7679d74_is_uint(_1a7677602_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("uint", 4));
}



inline jule::Bool _1a767a0d8_is_uintptr(_1a7677602_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("uintptr", 7));
}



inline jule::Bool _1a767a34c_is_bool(_1a7677602_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("bool", 4));
}



inline jule::Bool _1a767a5b1_is_str(_1a7677602_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("str", 3));
}



inline jule::Bool _1a767a825_is_any(_1a7677602_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("any", 3));
}







std::ostream &operator<<(std::ostream &_Stream, _1a7677602_Prim _Src) {
	_Stream << _1a7677965_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1a767ae74_to_str(_1a767ab11_Sptr* _self_) {
	return jule::Str("&", 1) + _1a7673257_to_str((*_self_)._field_elem.ptr());
}



inline jule::Bool _1a767b282_equals(jule::Ptr<_1a767ab11_Sptr> _self_,jule::Ptr<_1a7672da0_TypeKind> _42026_other) {
	jule::Ptr<_1a767ab11_Sptr> _42113_sptr = _1a76751c1_sptr(_42026_other.ptr());
	if ((_42113_sptr == nullptr)) {
		return false;
	}
	return _1a7673565_equals(_self_.get()._field_elem, _42113_sptr.get()._field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, _1a767ab11_Sptr _Src) {
	_Stream << _1a767ae74_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1a767b9e1_to_str(_1a767b56d_Slc* _self_) {
	return jule::Str("[]", 2) + _1a7673257_to_str((*_self_)._field_elem.ptr());
}



inline jule::Bool _1a767bcee_equals(jule::Ptr<_1a767b56d_Slc> _self_,jule::Ptr<_1a7672da0_TypeKind> _43926_other) {
	jule::Ptr<_1a767b56d_Slc> _44013_slc = _1a7675b72_slc(_43926_other.ptr());
	if ((_44013_slc == nullptr)) {
		return false;
	}
	return _1a7673565_equals(_self_.get()._field_elem, _44013_slc.get()._field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, _1a767b56d_Slc _Src) {
	_Stream << _1a767b9e1_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1a767c45e_to_str(_1a767c063_Tuple* _self_) {
	jule::Str _45617_s = jule::Str("(", 1);
	_45617_s+=_1a7673257_to_str((*_self_)._field_types[0LL].ptr());
	{
		auto expr = (*_self_)._field_types.slice(1LL);
		auto it = expr.begin();
		_iter_begin_1a9ece1dc:;
		if (it != expr.end()) {
			jule::Ptr<_1a7672da0_TypeKind> &_1a9ece363_t = *it;
			{
				_45617_s+=jule::Str(",", 1);
				_45617_s+=_1a7673257_to_str(_1a9ece363_t.ptr());
			}
			_iter_next_1a9ece1dc:;
			++it;
			goto _iter_begin_1a9ece1dc;
		}
		_iter_end_1a9ece1dc:;
	}
	_45617_s+=jule::Str(")", 1);
	return _45617_s;
}



inline jule::Bool _1a767c76c_equals(jule::Ptr<_1a767c063_Tuple> _self_,jule::Ptr<_1a7672da0_TypeKind> _46726_other) {
	jule::Ptr<_1a767c063_Tuple> _46813_tup = _1a7676887_tup(_46726_other.ptr());
	if ((_46813_tup == nullptr)) {
		return false;
	}
	if (_self_.get()._field_types.len() != static_cast<jule::I64>(static_cast<jule::I64>(_46813_tup.get()._field_types.len()))) {
		return false;
	}
	jule::I64 _47717_i = 0LL;
	for (; _47717_i < static_cast<jule::I64>(static_cast<jule::I64>(_self_.get()._field_types.len())); (_47717_i)++) {
		{
			if ((!(_1a7673565_equals(_self_.get()._field_types[_47717_i], _46813_tup.get()._field_types[_47717_i])))) {
				return false;
			}
		}
	_iter_next_1a9ed2102:;
	}
	_iter_end_1a9ed2102:;
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1a767c063_Tuple _Src) {
	_Stream << _1a767c45e_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1a767ce87_to_str(_1a767cb24_Map* _self_) {
	jule::Str _49717_s = jule::Str("[", 1);
	_49717_s+=_1a7673257_to_str((*_self_)._field_key.ptr());
	_49717_s+=jule::Str(":", 1);
	_49717_s+=_1a7673257_to_str((*_self_)._field_val.ptr());
	_49717_s+=jule::Str("]", 1);
	return _49717_s;
}



inline jule::Bool _1a767d295_equals(jule::Ptr<_1a767cb24_Map> _self_,jule::Ptr<_1a7672da0_TypeKind> _50626_other) {
	jule::Ptr<_1a767cb24_Map> _50713_map = _1a7676623_map(_50626_other.ptr());
	if ((_50713_map == nullptr)) {
		return false;
	}
	return _1a7673565_equals(_self_.get()._field_key, _50713_map.get()._field_key) && _1a7673565_equals(_self_.get()._field_val, _50713_map.get()._field_val);
}







std::ostream &operator<<(std::ostream &_Stream, _1a767cb24_Map _Src) {
	_Stream << _1a767ce87_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1a767da7b_to_str(_1a767d718_Arr* _self_) {
	jule::Str _52517_s = jule::Str("[", 1);
	_52517_s+=_1a74648a6_itoa((*_self_)._field_n);
	_52517_s+=jule::Str("]", 1);
	_52517_s+=_1a7673257_to_str((*_self_)._field_elem.ptr());
	return _52517_s;
}



inline jule::Bool _1a767dd89_equals(jule::Ptr<_1a767d718_Arr> _self_,jule::Ptr<_1a7672da0_TypeKind> _53326_other) {
	jule::Ptr<_1a767d718_Arr> _53413_arr = _1a767590d_arr(_53326_other.ptr());
	if ((_53413_arr == nullptr)) {
		return false;
	}
	return (_self_.get()._field_n == _53413_arr.get()._field_n) && _1a7673565_equals(_self_.get()._field_elem, _53413_arr.get()._field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, _1a767d718_Arr _Src) {
	_Stream << _1a767da7b_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1a767e4d8_to_str(_1a767e175_Ptr* _self_) {
	if (_1a767eb48_is_unsafe(&(*_self_))) {
		return jule::Str("*unsafe", 7);
	}
	return jule::Str("*", 1) + _1a7673257_to_str((*_self_)._field_elem.ptr());
}



inline jule::Bool _1a767e7e6_equals(jule::Ptr<_1a767e175_Ptr> _self_,jule::Ptr<_1a7672da0_TypeKind> _55726_other) {
	jule::Ptr<_1a767e175_Ptr> _55813_ptr = _1a7675435_ptr(_55726_other.ptr());
	if ((_55813_ptr == nullptr)) {
		return false;
	}
	return _1a7673565_equals(_self_.get()._field_elem, _55813_ptr.get()._field_elem);
}



inline jule::Bool _1a767eb48_is_unsafe(_1a767e175_Ptr* _self_) {
	return ((*_self_)._field_elem == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1a767e175_Ptr _Src) {
	_Stream << _1a767e4d8_to_str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a768181a_Referencer _Src) {
	_Stream << "Referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _1a7682b5c_push_err(_1a7682497_TypeChecker* _self_,jule::Ptr<_1d0747985_Token> _71927_token,jule::Str _71942_fmt,jule::Slice<jule::Any> _71955_args) {
	_1a75d488e_push_err((*_self_)._field_s.ptr(), _71927_token,_71942_fmt,_71955_args);
}



inline void _1a7682d38_allow_builtin(_1a7682497_TypeChecker* _self_) {
	(*_self_)._field_dis_builtin=false;
}



inline void _1a7683014_disallow_builtin(_1a7682497_TypeChecker* _self_) {
	(*_self_)._field_dis_builtin=true;
}



inline jule::Ptr<_1a7677602_Prim> _1a7683322_build_prim(_1a7682497_TypeChecker* _self_,jule::Ptr<_1d0759e09_IdentTypeDecl>& _73130_decl) {
	if ((!(_1a7681452_is_prim(_73130_decl.get()._field_ident)))) {
		_1a7682b5c_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;
	}
	if ((_73130_decl.get()._field_generics.len() > 0LL)) {
		_1a7682b5c_push_err(&(*_self_), _73130_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_73130_decl.get()._field_ident)}));
		return nullptr;
	}
	return _1a7680d7a_build_prim_type(_73130_decl.get()._field_ident);
}



inline void _1a76836da_push_cycle_error(_1a7682497_TypeChecker* _self_,jule::Any _74531_def1,jule::Any _74542_def2,jule::Str& _74558_message) {
	
	jule::Fn<jule::Str(jule::Any&)> _74813_get_ident = jule::Fn<jule::Str(jule::Any&)>([=](jule::Any& _74829_def) mutable -> jule::Str {
		{
			auto &_match_expr{ _74829_def };
			
			if (_match_expr.type_is<jule::Ptr<_1a7672168_TypeAlias>>()) {
				_case_begin_1a9ee506b:;
				{
					return _74829_def.operator jule::Ptr<_1a7672168_TypeAlias>().get()._field_ident;
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1a64147be_Struct>>()) {
				_case_begin_1a9ee5896:;
				{
					return _74829_def.operator jule::Ptr<_1a64147be_Struct>().get()._field_ident;
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1a7467de8_Enum>>()) {
				_case_begin_1a9ee590c:;
				{
					return _74829_def.operator jule::Ptr<_1a7467de8_Enum>().get()._field_ident;
				}
			}
			else {
				_case_begin_1a9ee5225:;
				{
					return jule::Str();
				}
			}
			_match_end_1a9ee5104:;
		}
	});
	jule::Str _76113_def1_ident = _74813_get_ident(_74531_def1);
	jule::Str _76213_def2_ident = _74813_get_ident(_74542_def2);
	jule::Str _76313_refers_to = _1d0019664_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(_76113_def1_ident),jule::Any(_76213_def2_ident)}));
	(_74558_message).buffer.insert(0, (((_1d0940e58_repeat(jule::Str(" ", 1),4LL) + _76313_refers_to) + jule::Str("\n", 1))));
}



inline jule::Bool _1a7683a92_check_cross_cycle(_1a7682497_TypeChecker* _self_,jule::Any _76732_decl,jule::Str& _76748_message) {
	{
		auto &_match_expr{ _76732_decl };
		
		if (_match_expr.type_is<jule::Ptr<_1a7672168_TypeAlias>>()) {
			_case_begin_1a9ee8910:;
			{
				jule::Ptr<_1a7672168_TypeAlias> _77017_ta = _76732_decl.operator jule::Ptr<_1a7672168_TypeAlias>();
				{
					auto &expr = _77017_ta.get()._field_refers;
					auto it = expr.begin();
					_iter_begin_1a9ee94c1:;
					if (it != expr.end()) {
						jule::Any &_1a9ee9779_d = *it;
						{
							{
								
								if (_1a9ee9779_d == (*_self_)._field_referencer.get()._field_owner) {
									_case_begin_1a9ee9d95:;
									{
										_1a76836da_push_cycle_error(&(*_self_), jule::Any(_77017_ta),_1a9ee9779_d,_76748_message);
										return false;
									}
								}
								else if ((!(_1a7683a92_check_cross_cycle(&(*_self_), _1a9ee9779_d,_76748_message)))) {
									_case_begin_1a9ee9e1c:;
									{
										_1a76836da_push_cycle_error(&(*_self_), jule::Any(_77017_ta),_1a9ee9779_d,_76748_message);
										return false;
									}
								}
								_match_end_1a9ee9c85:;
							}
						}
						_iter_next_1a9ee94c1:;
						++it;
						goto _iter_begin_1a9ee94c1;
					}
					_iter_end_1a9ee94c1:;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a64147be_Struct>>()) {
			_case_begin_1a9ee8976:;
			{
				jule::Ptr<_1a64147be_Struct> _78217_s = _76732_decl.operator jule::Ptr<_1a64147be_Struct>();
				{
					auto &expr = _78217_s.get()._field_depends;
					auto it = expr.begin();
					_iter_begin_1a9ee99ee:;
					if (it != expr.end()) {
						jule::Ptr<_1a64147be_Struct> &_1a9ee9a54_d = *it;
						{
							{
								
								if ((*_self_)._field_referencer.get()._field_owner == jule::Any(jule::Any(_1a9ee9a54_d))) {
									_case_begin_1a9eec5e5:;
									{
										_1a76836da_push_cycle_error(&(*_self_), jule::Any(_78217_s),jule::Any(_1a9ee9a54_d),_76748_message);
										return false;
									}
								}
								else if ((!(_1a7683a92_check_cross_cycle(&(*_self_), jule::Any(_1a9ee9a54_d),_76748_message)))) {
									_case_begin_1a9eec66c:;
									{
										_1a76836da_push_cycle_error(&(*_self_), jule::Any(_78217_s),jule::Any(_1a9ee9a54_d),_76748_message);
										return false;
									}
								}
								_match_end_1a9eec4d5:;
							}
						}
						_iter_next_1a9ee99ee:;
						++it;
						goto _iter_begin_1a9ee99ee;
					}
					_iter_end_1a9ee99ee:;
				}
			}
		}
		_match_end_1a9ee8833:;
	}
	return true;
}



inline jule::Bool _1a7683e49_check_illegal_cycles(_1a7682497_TypeChecker* _self_,jule::Ptr<_1d0759e09_IdentTypeDecl>& _80140_ident,jule::Any _80167_decl) {
	jule::Bool _80180_ok = jule::Bool();
	if (((*_self_)._field_referencer == nullptr)) {
		_80180_ok = true;
		return _80180_ok;
	}
	{
		auto &_match_expr{ _80167_decl };
		
		if (_match_expr.type_is<jule::Ptr<_1a64147be_Struct>>()) {
			_case_begin_1a9eeea9d:;
			{
				if ((*_self_)._field_not_plain || _80167_decl.operator jule::Ptr<_1a64147be_Struct>().get()._field_cpp_linked) {
					_80180_ok = true;
					return _80180_ok;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a7672168_TypeAlias>>()) {
			_case_begin_1a9eeeb14:;
			{
				if (_80167_decl.operator jule::Ptr<_1a7672168_TypeAlias>().get()._field_cpp_linked) {
					_80180_ok = true;
					return _80180_ok;
				}
			}
		}
		_match_end_1a9eeec68:;
	}
	if (_80167_decl == (*_self_)._field_referencer.get()._field_owner) {
		_1a7682b5c_push_err(&(*_self_), _80140_ident.get()._field_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>({jule::Any((*_self_)._field_referencer.get()._field_ident)}));
		_80180_ok = false;
		return _80180_ok;
	}
	jule::Str _82417_message = jule::Str();
	if ((!(_1a7683a92_check_cross_cycle(&(*_self_), _80167_decl,_82417_message)))) {
		jule::Str _82721_err_msg = _82417_message;
		_82417_message=jule::Str();
		_1a76836da_push_cycle_error(&(*_self_), (*_self_)._field_referencer.get()._field_owner,_80167_decl,_82417_message);
		_82721_err_msg=_82721_err_msg + _82417_message;
		_1a7682b5c_push_err(&(*_self_), _80140_ident.get()._field_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>({jule::Any(_82721_err_msg)}));
		_80180_ok = false;
		return _80180_ok;
	}
	{
		auto &_match_expr{ (*_self_)._field_referencer.get()._field_owner };
		
		if (_match_expr.type_is<jule::Ptr<_1a7672168_TypeAlias>>()) {
			_case_begin_1aa0048a5:;
			{
				{
					(*((*_self_)._field_referencer.get()._field_refs))=jule::append((*((*_self_)._field_referencer.get()._field_refs)),jule::Slice<jule::Any>({_80167_decl}));
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a64147be_Struct>>()) {
			_case_begin_1aa00491b:;
			{
				{
					auto &_match_expr{ _80167_decl };
					
					if (_match_expr.type_is<jule::Ptr<_1a64147be_Struct>>()) {
						_case_begin_1aa0050e2:;
						{
							jule::Ptr<_1a64147be_Struct> _84325_s = (*_self_)._field_referencer.get()._field_owner.operator jule::Ptr<_1a64147be_Struct>();
							_84325_s.get()._field_depends = jule::alloc_for_append(_84325_s.get()._field_depends,1);_84325_s.get()._field_depends.__push(_80167_decl.operator jule::Ptr<_1a64147be_Struct>());
						}
					}
					_match_end_1aa005026:;
				}
			}
		}
		_match_end_1aa004850:;
	}
	_80180_ok = true;
	return _80180_ok;
}



inline jule::Trait<_1a7672971_Kind> _1a7684301_from_type_alias(_1a7682497_TypeChecker* _self_,jule::Ptr<_1d0759e09_IdentTypeDecl>& _85135_decl,jule::Ptr<_1a7672168_TypeAlias>& _85162_ta) {
	if ((!(_1a75d5065_is_accessible_define((*_self_)._field_s.ptr(), _85162_ta.get()._field_public,_85162_ta.get()._field_token)))) {
		_1a7682b5c_push_err(&(*_self_), _85135_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>({jule::Any(_85135_decl.get()._field_ident)}));
		return nullptr;
	}
	_85162_ta.get()._field_used=true;
	if ((_85135_decl.get()._field_generics.len() > 0LL)) {
		_1a7682b5c_push_err(&(*_self_), _85135_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_85135_decl.get()._field_ident)}));
		return nullptr;
	}
	if ((!((*_self_)._field_inscatch)) && ((*_self_)._field_banned_generics != nullptr)) {
		(*_self_)._field_inscatch=true;
		{
			auto &expr = (*_self_)._field_banned_generics;
			auto it = expr.begin();
			_iter_begin_1aa00a1b3:;
			if (it != expr.end()) {
				jule::Ptr<_1a7672168_TypeAlias> _1aa00a5d1_bg = *it;
				{
					if ((_1aa00a5d1_bg == _85162_ta) || ((_85162_ta.get()._field_kind.get()._field_kind != nullptr) && _1a7673565_equals(_85162_ta.get()._field_kind.get()._field_kind, _1aa00a5d1_bg.get()._field_kind.get()._field_kind))) {
						(*_self_)._field_inscatch=false;
						goto _iter_end_1aa00a1b3;
					}
				}
				_iter_next_1aa00a1b3:;
				++it;
				goto _iter_begin_1aa00a1b3;
			}
			_iter_end_1aa00a1b3:;
		}
	}
	if ((*_self_)._field_inscatch) {
		{
			auto &expr = (*_self_)._field_banned_generics;
			auto it = expr.begin();
			_iter_begin_1aa00c35d:;
			if (it != expr.end()) {
				jule::Ptr<_1a7672168_TypeAlias> _1aa00c4c3_bg = *it;
				{
					if (_1aa00c4c3_bg == _85162_ta) {
						_1a7682b5c_push_err(&(*_self_), _85135_decl.get()._field_token,jule::Str("type declaration causes initiation cycle", 40),jule::Slice<jule::Any>({jule::Any(_85135_decl.get()._field_ident)}));
						return nullptr;
					}
					{
						auto &expr = _85162_ta.get()._field_generics;
						auto it = expr.begin();
						_iter_begin_1aa00dabd:;
						if (it != expr.end()) {
							jule::Ptr<_1a7672168_TypeAlias> _1aa00ca67_dg = *it;
							{
								if (_1aa00c4c3_bg == _1aa00ca67_dg) {
									_1a7682b5c_push_err(&(*_self_), _85135_decl.get()._field_token,jule::Str("type declaration causes initiation cycle", 40),jule::Slice<jule::Any>({jule::Any(_85135_decl.get()._field_ident)}));
									return nullptr;
								}
							}
							_iter_next_1aa00dabd:;
							++it;
							goto _iter_begin_1aa00dabd;
						}
						_iter_end_1aa00dabd:;
					}
				}
				_iter_next_1aa00c35d:;
				++it;
				goto _iter_begin_1aa00c35d;
			}
			_iter_end_1aa00c35d:;
		}
	}
	jule::Bool _89317_ok = _1a7683e49_check_illegal_cycles(&(*_self_), _85135_decl,jule::Any(_85162_ta));
	if ((!(_89317_ok))) {
		return nullptr;
	}
	_89317_ok=_1a75dbcc5_check_type_alias_decl_kind((*_self_)._field_s, _85162_ta,(*_self_)._field_lookup);
	if ((!(_89317_ok))) {
		return nullptr;
	}
	if (_85162_ta.get()._field_generic && ((*_self_)._field_owner_alias != nullptr)) {
		(*_self_)._field_owner_alias.get()._field_generics = jule::alloc_for_append((*_self_)._field_owner_alias.get()._field_generics,1);(*_self_)._field_owner_alias.get()._field_generics.__push(_85162_ta);
	}
	jule::Ptr<_1a7672da0_TypeKind> _91017_tk = jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),_85162_ta.get()._field_generic,jule::Bool(),_85162_ta.get()._field_kind.get()._field_kind.get()._field_kind));
	if (_85162_ta.get()._field_cpp_linked) {
		_91017_tk.get()._field_cpp_ident=_85162_ta.get()._field_ident;
	} else {
		_91017_tk.get()._field_cpp_ident=_85162_ta.get()._field_kind.get()._field_kind.get()._field_cpp_ident;
	}
	return jule::Trait<_1a7672971_Kind>(_91017_tk, 4);
}



inline jule::Ptr<_1a7467de8_Enum> _1a76846a8_from_enum(_1a7682497_TypeChecker* _self_,jule::Ptr<_1d0759e09_IdentTypeDecl>& _92229_decl,jule::Ptr<_1a7467de8_Enum>& _92256_e) {
	if ((!(_1a75d5065_is_accessible_define((*_self_)._field_s.ptr(), _92256_e.get()._field_public,_92256_e.get()._field_token)))) {
		_1a7682b5c_push_err(&(*_self_), _92229_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>({jule::Any(_92229_decl.get()._field_ident)}));
		return nullptr;
	}
	if ((_92229_decl.get()._field_generics.len() > 0LL)) {
		_1a7682b5c_push_err(&(*_self_), _92229_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_92229_decl.get()._field_ident)}));
		return nullptr;
	}
	return _92256_e;
}



inline jule::Ptr<_1a7465bd7_Trait> _1a7684a60_from_trait(_1a7682497_TypeChecker* _self_,jule::Ptr<_1d0759e09_IdentTypeDecl>& _93430_decl,jule::Ptr<_1a7465bd7_Trait>& _93457_t) {
	if ((!(_1a75d5065_is_accessible_define((*_self_)._field_s.ptr(), _93457_t.get()._field_public,_93457_t.get()._field_token)))) {
		_1a7682b5c_push_err(&(*_self_), _93430_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>({jule::Any(_93430_decl.get()._field_ident)}));
		return nullptr;
	}
	if ((_93430_decl.get()._field_generics.len() > 0LL)) {
		_1a7682b5c_push_err(&(*_self_), _93430_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_93430_decl.get()._field_ident)}));
		return nullptr;
	}
	return _93457_t;
}



inline jule::Bool _1a7684e17_check_struct_ins(_1a7682497_TypeChecker* _self_,jule::Ptr<_1a641744d_StructIns>& _94640_ins,jule::Ptr<_1d0747985_Token>& _94658_error_token) {
	jule::Bool _94681_ok = jule::Bool();
	if (_94640_ins.get()._field_checked) {
		_94681_ok = true;
		return _94681_ok;
	}
	_94640_ins.get()._field_checked=true;
	if (((*_self_)._field_referencer != nullptr) && ((*_self_)._field_referencer.get()._field_owner == jule::Any(jule::Any(_94640_ins.get()._field_decl)))) {
		_94681_ok = true;
		return _94681_ok;
	}
	jule::Ptr<_1a76439db_SymbolTable> _95717_old_file = (*_self_)._field_s.get()._field_file;
	__JULE_DEFER({
		_1a75d44c6_set_current_file((*_self_)._field_s.ptr(), _95717_old_file);
	});
	jule::Ptr<_1a76439db_SymbolTable> _96017_file = _1a75d1605_find_file((*_self_)._field_s.get()._field_files,_94640_ins.get()._field_decl.get()._field_token.get()._field_file);
	if ((_96017_file != nullptr)) {
		_1a75d44c6_set_current_file((*_self_)._field_s.ptr(), _96017_file);
	}
	jule::Ptr<_1a768181a_Referencer> _96517_referencer = jule::new_ptr<_1a768181a_Referencer>(_1a768181a_Referencer(_94640_ins.get()._field_decl.get()._field_ident,jule::Any(jule::Any(_94640_ins.get()._field_decl)),nullptr));
	jule::Slice<jule::Ptr<_1a7672168_TypeAlias>> _97017_generics = jule::Slice<jule::Ptr<_1a7672168_TypeAlias>>::alloc(0LL,static_cast<jule::I64>(_94640_ins.get()._field_generics.len()));
	{
		auto &expr = _94640_ins.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1aa01dc10:;
		if (it != expr.end()) {
			jule::I64 _1aa01d6b0_i = it - expr.begin();
			jule::Ptr<_1a7672da0_TypeKind> _1aa01dd64_g = *it;
			{
				_97017_generics = jule::alloc_for_append(_97017_generics,1);_97017_generics.__push(jule::new_ptr<_1a7672168_TypeAlias>(_1a7672168_TypeAlias(jule::Ptr<_1d0761c13_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1d0747985_Token>(),_94640_ins.get()._field_decl.get()._field_generics[_1aa01d6b0_i].get()._field_ident,jule::new_ptr<_1a7676c3e_TypeSymbol>(_1a7676c3e_TypeSymbol(jule::Ptr<_1d0759c1c_TypeDecl>(),_1aa01dd64_g)),jule::Slice<jule::Any>(),jule::Slice<jule::Ptr<_1a7672168_TypeAlias>>())));
			}
			_iter_next_1aa01dc10:;
			++it;
			_1aa01d6b0_i++;
			goto _iter_begin_1aa01dc10;
		}
		_iter_end_1aa01dc10:;
	}
	jule::Ptr<_1a76439db_SymbolTable> _98017_old_sema_file = _94640_ins.get()._field_decl.get()._field_sema.get()._field_file;
	__JULE_DEFER({
		_1a75d44c6_set_current_file(_94640_ins.get()._field_decl.get()._field_sema.ptr(), _98017_old_sema_file);
	});
	_1a7682497_TypeChecker _98517_tc = _1a7682497_TypeChecker(_94640_ins.get()._field_decl.get()._field_sema,jule::Trait<_1a768b25e_Lookup>(_94640_ins.get()._field_decl.get()._field_sema, 3),_96517_referencer,jule::Ptr<_1d0747985_Token>(),jule::Slice<jule::Ptr<_1d075ee64_GenericDecl>>(),_97017_generics,jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a7672168_TypeAlias>(),jule::Slice<jule::Ptr<_1a7672168_TypeAlias>>(),jule::Bool());
	{
		auto &expr = _94640_ins.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1aa020ad0:;
		if (it != expr.end()) {
			jule::Ptr<_1a6416ae0_FieldIns> _1aa0213a5_field = *it;
			{
				jule::Ptr<_1a7672da0_TypeKind> _99421_kind = _1a7688aa8_check_decl(&_98517_tc, _1aa0213a5_field.get()._field_decl.get()._field_kind.get()._field_decl);
				_94681_ok=(_99421_kind != nullptr);
				if (((_94640_ins.get()._field_decl.get()._field_sema != nullptr) && ((*_self_)._field_s != _94640_ins.get()._field_decl.get()._field_sema)) && (_94640_ins.get()._field_decl.get()._field_sema.get()._field_errors.len() > 0LL)) {
					(*_self_)._field_s.get()._field_errors=jule::append((*_self_)._field_s.get()._field_errors,_94640_ins.get()._field_decl.get()._field_sema.get()._field_errors);
					_94640_ins.get()._field_decl.get()._field_sema.get()._field_errors=nullptr;
				}
				if (_94681_ok) {
					_1aa0213a5_field.get()._field_kind=_99421_kind;
					_94640_ins.get()._field_mutable=_94640_ins.get()._field_mutable || ((!(_1aa0213a5_field.get()._field_decl.get()._field_mutable)) && _1a7674247_mutable(_1aa0213a5_field.get()._field_kind.ptr()));
					_1a75e40a7_check_struct_ins_derive_clone((*_self_)._field_s.ptr(), _94640_ins);
				}
			}
			_iter_next_1aa020ad0:;
			++it;
			goto _iter_begin_1aa020ad0;
		}
		_iter_end_1aa020ad0:;
	}
	if ((_94640_ins.get()._field_generics.len() > 0LL)) {
		_1a75e6e12_check_struct_ins_operators((*_self_)._field_s, _94640_ins);
		_1a75e66e7_check_struct_ins((*_self_)._field_s, _94640_ins);
	}
	_94681_ok = true;
	return _94681_ok;
}



inline void _1a76851d1_append_used_struct_reference(_1a7682497_TypeChecker* _self_,jule::Ptr<_1a64147be_Struct>& _101652_s) {
	if (((*_self_)._field_referencer == nullptr)) {
		return;
	}
	{
		auto &_match_expr{ (*_self_)._field_referencer.get()._field_owner };
		
		if (_match_expr.type_is<jule::Ptr<_1a64147be_Struct>>()) {
			_case_begin_1aa027686:;
			{
				jule::Ptr<_1a64147be_Struct> _102321_ref_s = (*_self_)._field_referencer.get()._field_owner.operator jule::Ptr<_1a64147be_Struct>();
				if ((!(_1a6416408_is_uses(_102321_ref_s.ptr(), _101652_s)))) {
					_102321_ref_s.get()._field_uses = jule::alloc_for_append(_102321_ref_s.get()._field_uses,1);_102321_ref_s.get()._field_uses.__push(_101652_s);
				}
			}
		}
		_match_end_1aa027631:;
	}
}



inline jule::Ptr<_1a641744d_StructIns> _1a7685577_build_struct_instance(_1a7682497_TypeChecker* _self_,jule::Ptr<_1d0759e09_IdentTypeDecl>& _103045_decl,jule::Ptr<_1a64147be_Struct>& _103072_s) {
	jule::Ptr<_1a768181a_Referencer> _103217_referencer = (*_self_)._field_referencer;
	(*_self_)._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1a7672168_TypeAlias>> _103417_banned_generics = (*_self_)._field_banned_generics;
	if (((*_self_)._field_banned_generics == nullptr)) {
		{
			auto &_match_expr{ (*_self_)._field_lookup };
			
			if (_match_expr.type_is<jule::Ptr<_1a75b3b8c_ScopeChecker>>()) {
				_case_begin_1aa02a7dd:;
				{
					jule::Ptr<_1a75b3b8c_ScopeChecker> _104125_sc = (*_self_)._field_lookup.operator jule::Ptr<_1a75b3b8c_ScopeChecker>();
					jule::Ptr<_1a75b3b8c_ScopeChecker> _104225_hard = _1a75b6046_get_hard_root(_104125_sc);
					if ((_104225_hard.get()._field_owner.get()._field_owner == nullptr) || (_104225_hard.get()._field_owner.get()._field_owner.get()._field_decl != _103072_s)) {
						goto _match_end_1aa02a788;
					}
					jule::I64 _104621_n = _104225_hard.get()._field_owner.get()._field_generics.len() + static_cast<jule::I64>(static_cast<jule::I64>(_104225_hard.get()._field_owner.get()._field_owner.get()._field_generics.len()));
					(*_self_)._field_banned_generics=_104225_hard.get()._field_table.get()._field_type_aliases.slice(0LL,_104621_n);
				}
			}
			_match_end_1aa02a788:;
		}
	} else {
		(*_self_)._field_inscatch=true;
	}
	jule::Ptr<_1a641744d_StructIns> _105617_ins = _1a6414bed_instance(_103072_s);
	_105617_ins.get()._field_generics=jule::Slice<jule::Ptr<_1a7672da0_TypeKind>>::alloc(0LL,static_cast<jule::I64>(_103045_decl.get()._field_generics.len()));
	{
		auto &expr = _103045_decl.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1aa02e36e:;
		if (it != expr.end()) {
			jule::Ptr<_1d0759c1c_TypeDecl> _1aa02ddda_g = *it;
			{
				jule::Ptr<_1a7672da0_TypeKind> _105921_kind = _1a768879a_build(&(*_self_), _1aa02ddda_g.get()._field_kind);
				if ((_105921_kind == nullptr)) {
					return nullptr;
				}
				_105617_ins.get()._field_generics = jule::alloc_for_append(_105617_ins.get()._field_generics,1);_105617_ins.get()._field_generics.__push(_105921_kind);
			}
			_iter_next_1aa02e36e:;
			++it;
			goto _iter_begin_1aa02e36e;
		}
		_iter_end_1aa02e36e:;
	}
	(*_self_)._field_banned_generics=_103417_banned_generics;
	(*_self_)._field_referencer=_103217_referencer;
	return _105617_ins;
}



inline jule::Ptr<_1a641744d_StructIns> _1a768592e_from_struct(_1a7682497_TypeChecker* _self_,jule::Ptr<_1d0759e09_IdentTypeDecl>& _107335_decl,jule::Ptr<_1a64147be_Struct>& _107362_s) {
	if ((!(_1a75d5065_is_accessible_define((*_self_)._field_s.ptr(), _107362_s.get()._field_public,_107362_s.get()._field_token)))) {
		_1a7682b5c_push_err(&(*_self_), _107335_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>({jule::Any(_107335_decl.get()._field_ident)}));
		return nullptr;
	}
	if ((*_self_)._field_selection) {
		if ((_107335_decl.get()._field_generics.len() > 0LL)) {
			_1a7682b5c_push_err(&(*_self_), _107335_decl.get()._field_token,jule::Str("generics are not allowed in this scope", 38),jule::Slice<jule::Any>());
			return nullptr;
		}
		return jule::new_ptr<_1a641744d_StructIns>(_1a641744d_StructIns(jule::Bool(),_107362_s,jule::Slice<jule::Ptr<_1a7672da0_TypeKind>>(),jule::Slice<jule::Ptr<_1a6416ae0_FieldIns>>(),jule::Slice<jule::Ptr<_1a6426a45_Fn>>(),jule::Bool(),jule::Ptr<_1a642cc9e_ReferenceStack>(),_1a64139aa_Operators()));
	}
	if ((_107362_s.get()._field_generics.len() > 0LL) && ((*_self_)._field_ignore_generics.len() > 0LL)) {
		return nullptr;
	}
	jule::Bool _109617_ok = (*_self_)._field_not_plain || _1a7683e49_check_illegal_cycles(&(*_self_), _107335_decl,jule::Any(_107362_s));
	if ((!(_109617_ok))) {
		return nullptr;
	}
	_1a76851d1_append_used_struct_reference(&(*_self_), _107362_s);
	jule::Ptr<_1a641744d_StructIns> _110217_ins = _1a7685577_build_struct_instance(&(*_self_), _107335_decl,_107362_s);
	if ((_110217_ins == nullptr)) {
		return nullptr;
	}
	_109617_ok=_1a75d5c36_check_generic_quantity((*_self_)._field_s.ptr(), static_cast<jule::I64>(_110217_ins.get()._field_decl.get()._field_generics.len()),static_cast<jule::I64>(_110217_ins.get()._field_generics.len()),_107335_decl.get()._field_token);
	if ((!(_109617_ok))) {
		return nullptr;
	}
	jule::Ptr<_1a641744d_StructIns> _111217_exist_instance = _1a641500b_append_instance(_107362_s.ptr(), _110217_ins);
	if ((_111217_exist_instance != nullptr)) {
		return _111217_exist_instance;
	}
	_109617_ok=_1a7684e17_check_struct_ins(&(*_self_), _110217_ins,_107335_decl.get()._field_token);
	if ((!(_109617_ok))) {
		return nullptr;
	}
	return _110217_ins;
}



inline jule::Trait<_1a7672971_Kind> _1a7685cd6_get_def(_1a7682497_TypeChecker* _self_,jule::Trait<_1a768b25e_Lookup> _113426_l,jule::Ptr<_1d0759e09_IdentTypeDecl>& _113442_decl) {
	{
		auto &expr = (*_self_)._field_ignore_generics;
		auto it = expr.begin();
		_iter_begin_1aa039d19:;
		if (it != expr.end()) {
			jule::Ptr<_1d075ee64_GenericDecl> _1aa039db3_g = *it;
			{
				if (_1aa039db3_g.get()._field_ident == _113442_decl.get()._field_ident) {
					return jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(_1aa039db3_g.get()._field_ident), 5);
				}
			}
			_iter_next_1aa039d19:;
			++it;
			goto _iter_begin_1aa039d19;
		}
		_iter_end_1aa039d19:;
	}
	{
		auto &expr = (*_self_)._field_use_generics;
		auto it = expr.begin();
		_iter_begin_1aa03a49b:;
		if (it != expr.end()) {
			jule::Ptr<_1a7672168_TypeAlias> _1aa03a006_g = *it;
			{
				if (_1aa03a006_g.get()._field_ident == _113442_decl.get()._field_ident) {
					jule::Ptr<_1a641744d_StructIns> _114325_st = _1a767614a_strct(_1aa03a006_g.get()._field_kind.get()._field_kind.ptr());
					if ((_114325_st != nullptr)) {
						jule::Bool _114525_ok = _1a7683e49_check_illegal_cycles(&(*_self_), _113442_decl,jule::Any(_114325_st.get()._field_decl));
						if ((!(_114525_ok))) {
							return nullptr;
						}
					}
					return _1aa03a006_g.get()._field_kind.get()._field_kind.get()._field_kind;
				}
			}
			_iter_next_1aa03a49b:;
			++it;
			goto _iter_begin_1aa03a49b;
		}
		_iter_end_1aa03a49b:;
	}
	if ((!(_113442_decl.get()._field_cpp_linked))) {
		jule::Ptr<_1a7467de8_Enum> _115521_e = _1a768b25e_Lookup_mptr_data[(_113426_l).type_offset]._1a768b11b_find_enum(_113426_l, _113442_decl.get()._field_ident);
		if ((_115521_e != nullptr)) {
			return jule::Trait<_1a7672971_Kind>(_1a76846a8_from_enum(&(*_self_), _113442_decl,_115521_e), 3);
		}
		jule::Ptr<_1a7465bd7_Trait> _116021_t = _1a768b25e_Lookup_mptr_data[(_113426_l).type_offset]._1a768ad0d_find_trait(_113426_l, _113442_decl.get()._field_ident);
		if ((_116021_t == nullptr) && (!((*_self_)._field_dis_builtin))) {
			_116021_t=_1a7698e09_find_builtin_trait(_113442_decl.get()._field_ident);
		}
		if ((_116021_t != nullptr)) {
			return jule::Trait<_1a7672971_Kind>(_1a7684a60_from_trait(&(*_self_), _113442_decl,_116021_t), 2);
		}
	} else if ((*_self_)._field_selection) {
		_1a7682b5c_push_err(&(*_self_), _113442_decl.get()._field_token,jule::Str("cpp-linked definitions are not allowed in this scope", 52),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1a64147be_Struct> _117217_s = _1a768b25e_Lookup_mptr_data[(_113426_l).type_offset]._1a768a648_find_struct(_113426_l, _113442_decl.get()._field_ident,_113442_decl.get()._field_cpp_linked);
	if ((_117217_s != nullptr)) {
		return jule::Trait<_1a7672971_Kind>(_1a768592e_from_struct(&(*_self_), _113442_decl,_117217_s), 0);
	}
	jule::Ptr<_1a7672168_TypeAlias> _117717_ta = _1a768b25e_Lookup_mptr_data[(_113426_l).type_offset]._1a768a291_find_type_alias(_113426_l, _113442_decl.get()._field_ident,_113442_decl.get()._field_cpp_linked);
	if ((_117717_ta == nullptr) && (!((*_self_)._field_dis_builtin))) {
		_117717_ta=_1a76983c0_find_builtin_type_alias(_113442_decl.get()._field_ident);
	}
	if ((_117717_ta != nullptr)) {
		return _1a7684301_from_type_alias(&(*_self_), _113442_decl,_117717_ta);
	}
	_1a7682b5c_push_err(&(*_self_), _113442_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>({jule::Any(_113442_decl.get()._field_ident)}));
	return nullptr;
}



inline jule::Trait<_1a7672971_Kind> _1a76860e4_build_ident(_1a7682497_TypeChecker* _self_,jule::Ptr<_1d0759e09_IdentTypeDecl> _118934_decl) {
	{
		
		if (_1a7681452_is_prim(_118934_decl.get()._field_ident)) {
			_case_begin_1aa045c26:;
			{
				return jule::Trait<_1a7672971_Kind>(_1a7683322_build_prim(&(*_self_), _118934_decl), 5);
			}
		}
		else {
			_case_begin_1aa044e9a:;
			{
				return _1a7685cd6_get_def(&(*_self_), (*_self_)._field_lookup,_118934_decl);
			}
		}
		_match_end_1aa044dce:;
	}
}



inline jule::Ptr<_1a767ab11_Sptr> _1a7686402_build_sptr_from_type(_1a7682497_TypeChecker* _self_,jule::Ptr<_1a7672da0_TypeKind>& _119844_elem) {
	{
		
		if ((_119844_elem == nullptr)) {
			_case_begin_1aa04660b:;
			{
				return nullptr;
			}
		}
		else if ((_1a767614a_strct(_119844_elem.ptr()) != nullptr)) {
			_case_begin_1aa046683:;
			{
				jule::Ptr<_1a641744d_StructIns> _120417_s = _1a767614a_strct(_119844_elem.ptr());
				if ((_120417_s.get()._field_decl != nullptr) && _120417_s.get()._field_decl.get()._field_cpp_linked) {
					_1a7682b5c_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
					return nullptr;
				}
			}
		}
		else if ((_1a767590d_arr(_119844_elem.ptr()) != nullptr) && _1a767590d_arr(_119844_elem.ptr()).get()._field_auto) {
			_case_begin_1aa04670a:;
			{
				_1a7682b5c_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1aa0460cd:;
	}
	return jule::new_ptr<_1a767ab11_Sptr>(_1a767ab11_Sptr(_119844_elem));
}



inline jule::Ptr<_1a767ab11_Sptr> _1a7686710_build_sptr(_1a7682497_TypeChecker* _self_,jule::Ptr<_1d075a2d3_SptrTypeDecl> _121833_decl) {
	jule::Bool _121913_not_plain = (*_self_)._field_not_plain;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_121913_not_plain;
	});
	jule::Ptr<_1a7672da0_TypeKind> _122317_elem = _1a7688aa8_check_decl(&(*_self_), _121833_decl.get()._field_elem);
	return _1a7686402_build_sptr_from_type(&(*_self_), _122317_elem);
}



inline jule::Ptr<_1a767e175_Ptr> _1a7686a1d_build_ptr_from_type(_1a7682497_TypeChecker* _self_,jule::Ptr<_1a7672da0_TypeKind>& _122743_elem) {
	{
		
		if ((_122743_elem == nullptr)) {
			_case_begin_1aa04bde7:;
			{
				return nullptr;
			}
		}
		else if ((_1a767590d_arr(_122743_elem.ptr()) != nullptr) && _1a767590d_arr(_122743_elem.ptr()).get()._field_auto) {
			_case_begin_1aa04be6e:;
			{
				_1a7682b5c_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return jule::new_ptr<_1a767e175_Ptr>();
			}
		}
		_match_end_1aa04bcd7:;
	}
	return jule::new_ptr<_1a767e175_Ptr>(_1a767e175_Ptr(_122743_elem));
}



inline jule::Ptr<_1a767e175_Ptr> _1a7686d2b_build_ptr(_1a7682497_TypeChecker* _self_,jule::Ptr<_1d075a899_PtrTypeDecl> _124232_decl) {
	jule::Bool _124313_not_plain = (*_self_)._field_not_plain;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_124313_not_plain;
	});
	jule::Ptr<_1a7672da0_TypeKind> _124717_elem = nullptr;
	if ((!(_1d072dc68_is_unsafe(_124232_decl.ptr())))) {
		_124717_elem=_1a7688aa8_check_decl(&(*_self_), _124232_decl.get()._field_elem);
		return _1a7686a1d_build_ptr_from_type(&(*_self_), _124717_elem);
	}
	return jule::new_ptr<_1a767e175_Ptr>(_1a767e175_Ptr(_124717_elem));
}



inline jule::Ptr<_1a767b56d_Slc> _1a7687139_build_slc(_1a7682497_TypeChecker* _self_,jule::Ptr<_1d075a4c0_SlcTypeDecl> _125932_decl) {
	jule::Bool _126013_not_plain = (*_self_)._field_not_plain;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_126013_not_plain;
	});
	jule::Ptr<_1a7672da0_TypeKind> _126417_elem = _1a7688aa8_check_decl(&(*_self_), _125932_decl.get()._field_elem);
	{
		
		if ((_126417_elem == nullptr)) {
			_case_begin_1aa052caa:;
			{
				return nullptr;
			}
		}
		else if ((_1a767590d_arr(_126417_elem.ptr()) != nullptr) && _1a767590d_arr(_126417_elem.ptr()).get()._field_auto) {
			_case_begin_1aa052d32:;
			{
				_1a7682b5c_push_err(&(*_self_), _125932_decl.get()._field_elem.get()._field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1aa052bde:;
	}
	return jule::new_ptr<_1a767b56d_Slc>(_1a767b56d_Slc(_126417_elem));
}



inline jule::Ptr<_1a767d718_Arr> _1a7687447_build_arr(_1a7682497_TypeChecker* _self_,jule::Ptr<_1d075aa86_ArrTypeDecl> _128032_decl) {
	jule::Bool _128113_not_plain = (*_self_)._field_not_plain;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_128113_not_plain;
	});
	jule::I64 _128517_n = 0LL;
	if ((!(_1d0730880_auto_sized(_128032_decl.ptr())))) {
		jule::Ptr<_1a7648b67_Data> _128821_size = _1a7664d92_eval_expr(_1a75d95ec_eval((*_self_)._field_s, (*_self_)._field_lookup), _128032_decl.get()._field_size);
		if ((_128821_size == nullptr)) {
			return nullptr;
		}
		if ((!(_1a764952a_is_const(_128821_size.ptr())))) {
			_1a7682b5c_push_err(&(*_self_), _128032_decl.get()._field_size.get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
			return nullptr;
		} else if ((_1a7674e5c_prim(_128821_size.get()._field_kind.ptr()) == nullptr) || (!(_1a75b18d2_is_int(_1a7674e5c_prim(_128821_size.get()._field_kind.ptr()).get()._field_kind)))) {
			_1a7682b5c_push_err(&(*_self_), _128032_decl.get()._field_size.get()._field_token,jule::Str("array size must be integer", 26),jule::Slice<jule::Any>());
			return nullptr;
		}
		_128517_n=static_cast<jule::I64>(static_cast<jule::I64>(_1a7520d3b_as_i64(_128821_size.get()._field_constant.ptr())));
		if ((_128517_n < 0LL)) {
			_1a7682b5c_push_err(&(*_self_), _128032_decl.get()._field_elem.get()._field_token,jule::Str("array size must be positive integer", 35),jule::Slice<jule::Any>());
			return nullptr;
		} else if ((_1a75a6432_BIT_SIZE != 64LL) && (static_cast<jule::F64>(_128517_n) > static_cast<jule::F64>(static_cast<jule::F64>(_1a75ab437_max(jule::Str("int", 3)))))) {
			_1a7682b5c_push_err(&(*_self_), _128032_decl.get()._field_size.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
			return nullptr;
		}
	}
	jule::Ptr<_1a7672da0_TypeKind> _131117_elem = _1a7688aa8_check_decl(&(*_self_), _128032_decl.get()._field_elem);
	{
		
		if ((_131117_elem == nullptr)) {
			_case_begin_1aa05c655:;
			{
				return nullptr;
			}
		}
		else if ((_1a767590d_arr(_131117_elem.ptr()) != nullptr) && _1a767590d_arr(_131117_elem.ptr()).get()._field_auto) {
			_case_begin_1aa05c6bb:;
			{
				_1a7682b5c_push_err(&(*_self_), _128032_decl.get()._field_elem.get()._field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1aa05c479:;
	}
	return jule::new_ptr<_1a767d718_Arr>(_1a767d718_Arr(_1d0730880_auto_sized(_128032_decl.ptr()),_128517_n,_131117_elem));
}



inline jule::Ptr<_1a767cb24_Map> _1a7687755_build_map(_1a7682497_TypeChecker* _self_,jule::Ptr<_1d075ac73_MapTypeDecl> _132932_decl) {
	jule::Bool _133013_not_plain = (*_self_)._field_not_plain;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_133013_not_plain;
	});
	jule::Ptr<_1a7672da0_TypeKind> _133417_key = _1a7688aa8_check_decl(&(*_self_), _132932_decl.get()._field_key);
	if ((_133417_key == nullptr)) {
		return nullptr;
	}
	jule::Ptr<_1a7672da0_TypeKind> _133917_val = _1a7688aa8_check_decl(&(*_self_), _132932_decl.get()._field_val);
	if ((_133917_val == nullptr)) {
		return nullptr;
	}
	if ((_1a7675699_enm(_133917_val.ptr()) != nullptr)) {
		_1a7682b5c_push_err(&(*_self_), _132932_decl.get()._field_val.get()._field_token,jule::Str("maps do not support enums as map key type", 41),jule::Slice<jule::Any>());
	}
	return jule::new_ptr<_1a767cb24_Map>(_1a767cb24_Map(_133417_key,_133917_val));
}



inline jule::Ptr<_1a767c063_Tuple> _1a7687a63_build_tuple(_1a7682497_TypeChecker* _self_,jule::Ptr<_1d075a6ac_TupleTypeDecl> _135334_decl) {
	jule::Slice<jule::Ptr<_1a7672da0_TypeKind>> _135417_types = jule::Slice<jule::Ptr<_1a7672da0_TypeKind>>::alloc(0LL,static_cast<jule::I64>(_135334_decl.get()._field_types.len()));
	{
		auto &expr = _135334_decl.get()._field_types;
		auto it = expr.begin();
		_iter_begin_1aa06410c:;
		if (it != expr.end()) {
			jule::Ptr<_1d0759c1c_TypeDecl> _1aa063a57_t = *it;
			{
				jule::Ptr<_1a7672da0_TypeKind> _135621_kind = _1a7688aa8_check_decl(&(*_self_), _1aa063a57_t);
				if ((_135621_kind == nullptr)) {
					return nullptr;
				}
				_135417_types = jule::alloc_for_append(_135417_types,1);_135417_types.__push(_135621_kind);
			}
			_iter_next_1aa06410c:;
			++it;
			goto _iter_begin_1aa06410c;
		}
		_iter_end_1aa06410c:;
	}
	return jule::new_ptr<_1a767c063_Tuple>(_1a767c063_Tuple(_135417_types));
}



inline jule::Bool _1a7687d71_check_fn_types(_1a7682497_TypeChecker* _self_,jule::Ptr<_1a6429be1_FnIns>& _136638_f) {
	jule::Bool _136651_ok = jule::Bool();
	{
		auto &expr = _136638_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1aa065e88:;
		if (it != expr.end()) {
			jule::Ptr<_1a6428d55_ParamIns> _1aa066087_p = *it;
			{
				_1aa066087_p.get()._field_kind=_1a768879a_build(&(*_self_), _1aa066087_p.get()._field_decl.get()._field_kind.get()._field_decl.get()._field_kind);
				_136651_ok=(_1aa066087_p.get()._field_kind != nullptr);
				if ((!(_136651_ok))) {
					_136651_ok = false;
					return _136651_ok;
				}
			}
			_iter_next_1aa065e88:;
			++it;
			goto _iter_begin_1aa065e88;
		}
		_iter_end_1aa065e88:;
	}
	if ((!(_1a6426e96_is_void(_136638_f.get()._field_decl.ptr())))) {
		_136638_f.get()._field_result=_1a768879a_build(&(*_self_), _136638_f.get()._field_decl.get()._field_result.get()._field_kind.get()._field_decl.get()._field_kind);
		_136651_ok = (_136638_f.get()._field_result != nullptr);
		return _136651_ok;
	}
	_136651_ok = true;
	return _136651_ok;
}



inline jule::Ptr<_1a6429be1_FnIns> _1a768817e_build_fn(_1a7682497_TypeChecker* _self_,jule::Ptr<_1d0763709_FnDecl> _138331_decl) {
	if ((_138331_decl.get()._field_generics.len() > 0LL)) {
		_1a7682b5c_push_err(&(*_self_), _138331_decl.get()._field_token,jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1a6426a45_Fn> _138917_f = _1a6430e39_build_fn(_138331_decl);
	jule::Ptr<_1a6429be1_FnIns> _139017_ins = _1a642842b_instance_force(_138917_f);
	_139017_ins.get()._field_anon=true;
	jule::Bool _139313_ok = _1a7687d71_check_fn_types(&(*_self_), _139017_ins);
	if ((!(_139313_ok))) {
		return nullptr;
	}
	return _139017_ins;
}



inline jule::Trait<_1a7672971_Kind> _1a768848c_build_by_namespace(_1a7682497_TypeChecker* _self_,jule::Ptr<_1d075a0e6_NamespaceTypeDecl> _140141_decl) {
	jule::Str _140213_path = _1a7680ae4_build_link_path_by_tokens(_140141_decl.get()._field_idents);
	jule::Ptr<_1a75c928a_ImportInfo> _140317_imp = _1a768b25e_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1a7689a32_select_package((*_self_)._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1a75c928a_ImportInfo>)>([=](jule::Ptr<_1a75c928a_ImportInfo> _140353_imp) mutable -> jule::Bool {
		if ((_140141_decl.get()._field_idents.len() == 1LL) && (_140353_imp.get()._field_alias == _140213_path)) {
			return true;
		}
		return (_140353_imp.get()._field_link_path == _140213_path) && _1a75cbb72_is_accessible_via_selection(_140353_imp.ptr());
	}));
	if ((_140317_imp == nullptr) || (!(_1a75cb5ab_is_lookupable(_140317_imp.ptr(), jule::Str("self", 4))))) {
		_1a7682b5c_push_err(&(*_self_), _140141_decl.get()._field_idents[0LL],jule::Str("undefined namespace: @", 22),jule::Slice<jule::Any>({jule::Any(_140213_path)}));
		return nullptr;
	}
	_1a7683014_disallow_builtin(&(*_self_));
	jule::Trait<_1a7672971_Kind> _141617_kind = _1a7685cd6_get_def(&(*_self_), jule::Trait<_1a768b25e_Lookup>(_140317_imp, 1),_140141_decl.get()._field_kind);
	_1a7682d38_allow_builtin(&(*_self_));
	return _141617_kind;
}



inline jule::Ptr<_1a7672da0_TypeKind> _1a768879a_build(_1a7682497_TypeChecker* _self_,jule::Any& _142229_decl_kind) {
	jule::Trait<_1a7672971_Kind> _142317_kind = nullptr;
	{
		auto &_match_expr{ _142229_decl_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a7672da0_TypeKind>>()) {
			_case_begin_1aa072109:;
			{
				_142317_kind=jule::Trait<_1a7672971_Kind>(_142229_decl_kind.operator jule::Ptr<_1a7672da0_TypeKind>(), 4);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d0759e09_IdentTypeDecl>>()) {
			_case_begin_1aa072170:;
			{
				jule::Trait<_1a7672971_Kind> _142821_t = _1a76860e4_build_ident(&(*_self_), _142229_decl_kind.operator jule::Ptr<_1d0759e09_IdentTypeDecl>());
				if ((_142821_t != nullptr)) {
					_142317_kind=_142821_t;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d075a2d3_SptrTypeDecl>>()) {
			_case_begin_1aa0721d6:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1a767ab11_Sptr> _143421_t = _1a7686710_build_sptr(&(*_self_), _142229_decl_kind.operator jule::Ptr<_1d075a2d3_SptrTypeDecl>());
				if ((_143421_t != nullptr)) {
					_142317_kind=jule::Trait<_1a7672971_Kind>(_143421_t, 6);
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d075a899_PtrTypeDecl>>()) {
			_case_begin_1aa07224c:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1a767e175_Ptr> _144021_t = _1a7686d2b_build_ptr(&(*_self_), _142229_decl_kind.operator jule::Ptr<_1d075a899_PtrTypeDecl>());
				if ((_144021_t != nullptr)) {
					_142317_kind=jule::Trait<_1a7672971_Kind>(_144021_t, 11);
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d075a4c0_SlcTypeDecl>>()) {
			_case_begin_1aa072b87:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1a767b56d_Slc> _144621_t = _1a7687139_build_slc(&(*_self_), _142229_decl_kind.operator jule::Ptr<_1d075a4c0_SlcTypeDecl>());
				if ((_144621_t != nullptr)) {
					_142317_kind=jule::Trait<_1a7672971_Kind>(_144621_t, 7);
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d075aa86_ArrTypeDecl>>()) {
			_case_begin_1aa072bed:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1a767d718_Arr> _145221_t = _1a7687447_build_arr(&(*_self_), _142229_decl_kind.operator jule::Ptr<_1d075aa86_ArrTypeDecl>());
				if ((_145221_t != nullptr)) {
					_142317_kind=jule::Trait<_1a7672971_Kind>(_145221_t, 10);
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d075ac73_MapTypeDecl>>()) {
			_case_begin_1aa072c64:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1a767cb24_Map> _145821_t = _1a7687755_build_map(&(*_self_), _142229_decl_kind.operator jule::Ptr<_1d075ac73_MapTypeDecl>());
				if ((_145821_t != nullptr)) {
					_142317_kind=jule::Trait<_1a7672971_Kind>(_145821_t, 9);
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d075a6ac_TupleTypeDecl>>()) {
			_case_begin_1aa072cca:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1a767c063_Tuple> _146421_t = _1a7687a63_build_tuple(&(*_self_), _142229_decl_kind.operator jule::Ptr<_1d075a6ac_TupleTypeDecl>());
				if ((_146421_t != nullptr)) {
					_142317_kind=jule::Trait<_1a7672971_Kind>(_146421_t, 8);
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d0763709_FnDecl>>()) {
			_case_begin_1aa072e73:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1a6429be1_FnIns> _147021_t = _1a768817e_build_fn(&(*_self_), _142229_decl_kind.operator jule::Ptr<_1d0763709_FnDecl>());
				if ((_147021_t != nullptr)) {
					_142317_kind=jule::Trait<_1a7672971_Kind>(_147021_t, 1);
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d075a0e6_NamespaceTypeDecl>>()) {
			_case_begin_1aa072ed9:;
			{
				(*_self_)._field_inscatch=true;
				jule::Trait<_1a7672971_Kind> _147621_t = _1a768848c_build_by_namespace(&(*_self_), _142229_decl_kind.operator jule::Ptr<_1d075a0e6_NamespaceTypeDecl>());
				if ((_147621_t != nullptr)) {
					_142317_kind=_147621_t;
				}
			}
		}
		else {
			_case_begin_1aa071ea5:;
			{
				_1a7682b5c_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1aa071dd9:;
	}
	if ((_142317_kind == nullptr)) {
		return nullptr;
	}
	{
		auto &_match_expr{ _142317_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a7672da0_TypeKind>>()) {
			_case_begin_1aa07d742:;
			{
				return _142317_kind.operator jule::Ptr<_1a7672da0_TypeKind>();
			}
		}
		else {
			_case_begin_1aa07d3ac:;
			{
				return jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_142317_kind));
			}
		}
		_match_end_1aa07d357:;
	}
}



inline jule::Ptr<_1a7672da0_TypeKind> _1a7688aa8_check_decl(_1a7682497_TypeChecker* _self_,jule::Ptr<_1d0759c1c_TypeDecl>& _149734_decl) {
	jule::Ptr<_1d0747985_Token> _149917_error_token = (*_self_)._field_error_token;
	(*_self_)._field_error_token=_149734_decl.get()._field_token;
	jule::Ptr<_1a7672da0_TypeKind> _150217_kind = _1a768879a_build(&(*_self_), _149734_decl.get()._field_kind);
	(*_self_)._field_error_token=_149917_error_token;
	return _150217_kind;
}



inline void _1a7688d2d_check(_1a7682497_TypeChecker* _self_,jule::Ptr<_1a7676c3e_TypeSymbol>& _150829_t) {
	if ((_150829_t.get()._field_decl == nullptr)) {
		return;
	}
	jule::Ptr<_1a7672da0_TypeKind> _151217_kind = _1a7688aa8_check_decl(&(*_self_), _150829_t.get()._field_decl);
	if ((_151217_kind == nullptr)) {
		_1a7677316_remove_kind(_150829_t.ptr());
		return;
	}
	_150829_t.get()._field_kind=_151217_kind;
}







std::ostream &operator<<(std::ostream &_Stream, _1a7682497_TypeChecker _Src) {
	_Stream << "TypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "ignore_generics:" << _Src._field_ignore_generics << ", ";
	_Stream << "use_generics:" << _Src._field_use_generics << ", ";
	_Stream << "not_plain:" << _Src._field_not_plain << ", ";
	_Stream << "dis_builtin:" << _Src._field_dis_builtin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "owner_alias:" << _Src._field_owner_alias << ", ";
	_Stream << "banned_generics:" << _Src._field_banned_generics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0b69d74_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "prod:" << _Src._field_prod << ", ";
	_Stream << "test:" << _Src._field_test << ", ";
	_Stream << "compiler:" << _Src._field_compiler << ", ";
	_Stream << "cpp_std:" << _Src._field_cpp_std;
	_Stream << "}";
	return _Stream;
}



inline void _1d076d945_push_err(_1d076d3e5_DirectiveEval* _self_,jule::Ptr<_1d0747985_Token> _2127_t,jule::Str _2138_fmt,jule::Slice<jule::Any> _2151_args) {
	(*_self_)._field_logs = jule::alloc_for_append((*_self_)._field_logs,1);(*_self_)._field_logs.__push(_1d0019224_Log(static_cast<jule::I64>(1LL),_2127_t.get()._field_row,_2127_t.get()._field_column,_2127_t.get()._field_file.get()._field_path,_1d0019664_logf(_2138_fmt,_2151_args),jule::Str(),jule::Str()));
}



inline jule::Slice<jule::Slice<jule::Ptr<_1d0747985_Token>>> _1d076dcec_split_operans(_1d076d3e5_DirectiveEval* _self_,jule::Str _3332_op,jule::Slice<jule::Ptr<_1d0747985_Token>>& _3352_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1d0747985_Token>>> _3417_parts = jule::Slice<jule::Slice<jule::Ptr<_1d0747985_Token>>>::alloc(0LL,10LL);
	jule::I64 _3617_i = 0LL;
	jule::I64 _3717_range_n = 0LL;
	jule::I64 _3817_last = 0LL;
	for (; _3617_i < static_cast<jule::I64>(static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(_3352_tokens.len())) - 1LL))); (_3617_i)++) {
		{
			jule::Ptr<_1d0747985_Token> _4017_b = _3352_tokens[_3617_i];
			if (_4017_b.get()._field_id == static_cast<jule::U64>(3LLU)) {
				{
					auto &_match_expr{ _4017_b.get()._field_kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1aa1e0464:;
						{
							(_3717_range_n)++;
							goto _iter_next_1aa1de7a4;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1aa1e07b6:;
						{
							(_3717_range_n)--;
						}
					}
					_match_end_1aa1e06ea:;
				}
			}
			if ((_3717_range_n > 0LL) || (_4017_b.get()._field_id != static_cast<jule::U64>(7LLU))) {
				goto _iter_next_1aa1de7a4;
			}
			if (_4017_b.get()._field_kind == _3332_op) {
				_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push(_3352_tokens.slice(_3817_last,_3617_i));
				_3817_last=static_cast<jule::I64>((_3617_i + 1LL));
			}
		}
	_iter_next_1aa1de7a4:;
	}
	_iter_end_1aa1de7a4:;
	if (_3817_last < static_cast<jule::I64>(static_cast<jule::I64>(_3352_tokens.len()))) {
		_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push(_3352_tokens.slice(_3817_last));
	} else {
		_1d076d945_push_err(&(*_self_), _3352_tokens[(_3817_last - 1LL)],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	return _3417_parts;
}



inline jule::Bool _1d076e10a_eval_directive_ident(_1d076d3e5_DirectiveEval* _self_,jule::Str _7335_ident) {
	if (_7335_ident.empty()) {
		return false;
	}
	{
		auto &expr = (*_self_)._field_vars;
		auto it = expr.begin();
		_iter_begin_1aa1e4a62:;
		if (it != expr.end()) {
			jule::Str &_1aa1e4457_var = *it;
			{
				if (_1aa1e4457_var == _7335_ident) {
					return true;
				}
			}
			_iter_next_1aa1e4a62:;
			++it;
			goto _iter_begin_1aa1e4a62;
		}
		_iter_end_1aa1e4a62:;
	}
	return false;
}



inline jule::Bool _1d076e418_eval_directive_part(_1d076d3e5_DirectiveEval* _self_,jule::Slice<jule::Ptr<_1d0747985_Token>> _8742_part) {
	jule::Bool _8813_logical_not = (_8742_part[0LL].get()._field_id == static_cast<jule::U64>(7LLU)) && (_8742_part[0LL].get()._field_kind == jule::Str("!", 1));
	if (_8813_logical_not) {
		_8742_part=_8742_part.slice(1LL);
	}
	if ((_8742_part.len() > 1LL)) {
		_1d076d945_push_err(&(*_self_), _8742_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return false;
	}
	jule::Bool _9817_result = _1d076e10a_eval_directive_ident(&(*_self_), _8742_part[0LL].get()._field_kind);
	if (_8813_logical_not) {
		_9817_result=(!(_9817_result));
	}
	return _9817_result;
}



inline jule::Bool _1d076e67c_eval(_1d076d3e5_DirectiveEval* _self_) {
	if (((*_self_)._field_d.get()._field_args.len() == 0LL)) {
		_1d076d945_push_err(&(*_self_), (*_self_)._field_d.get()._field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return false;
	}
	jule::Bool _11117_result = false;
	jule::Slice<jule::Slice<jule::Ptr<_1d0747985_Token>>> _11317_logical_or_parts = _1d076dcec_split_operans(&(*_self_), jule::Str("||", 2),(*_self_)._field_d.get()._field_args);
	if ((_11317_logical_or_parts == nullptr)) {
		return false;
	}
	{
		auto &expr = _11317_logical_or_parts;
		auto it = expr.begin();
		_iter_begin_1aa1eb030:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1d0747985_Token>> _1aa1ead21_part = *it;
			{
				jule::Bool _11921_and = true;
				jule::Slice<jule::Slice<jule::Ptr<_1d0747985_Token>>> _12021_logical_and_parts = _1d076dcec_split_operans(&(*_self_), jule::Str("&&", 2),_1aa1ead21_part);
				if ((_12021_logical_and_parts == nullptr)) {
					return false;
				}
				{
					auto &expr = _12021_logical_and_parts;
					auto it = expr.begin();
					_iter_begin_1aa1ec581:;
					if (it != expr.end()) {
						jule::Slice<jule::Ptr<_1d0747985_Token>> _1aa1ec372_and_part = *it;
						{
							jule::Ptr<_1d0747985_Token> _12621_first = _1aa1ec372_and_part[0LL];
							if ((_12621_first.get()._field_id == static_cast<jule::U64>(3LLU)) && (_12621_first.get()._field_kind == jule::Str("(", 1))) {
								jule::Ptr<_1d0747985_Token> _12825_end = _1aa1ec372_and_part[(_1aa1ec372_and_part.len() - 1LL)];
								if ((_12825_end.get()._field_id != static_cast<jule::U64>(3LLU)) || (_12825_end.get()._field_kind != jule::Str(")", 1))) {
									_1d076d945_push_err(&(*_self_), _12621_first,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
									return false;
								}
								_1aa1ec372_and_part=_1aa1ec372_and_part.slice(1LL,(_1aa1ec372_and_part.len() - 1LL));
							}
							_11921_and=_11921_and && _1d076e418_eval_directive_part(&(*_self_), _1aa1ec372_and_part);
						}
						_iter_next_1aa1ec581:;
						++it;
						goto _iter_begin_1aa1ec581;
					}
					_iter_end_1aa1ec581:;
				}
				_11117_result=_11117_result || _11921_and;
			}
			_iter_next_1aa1eb030:;
			++it;
			goto _iter_begin_1aa1eb030;
		}
		_iter_end_1aa1eb030:;
	}
	return _11117_result;
}







std::ostream &operator<<(std::ostream &_Stream, _1d076d3e5_DirectiveEval _Src) {
	_Stream << "DirectiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b65b7544_JuleImporter> static__1b65b4002_new(_1d0b69d74_CompileInfo _5823_info) {
	jule::Ptr<_1b65b7544_JuleImporter> _5917_imp = jule::new_ptr<_1b65b7544_JuleImporter>(_1b65b7544_JuleImporter(jule::Slice<jule::Str>({_1d002c897_PATH_STDLIB}),jule::Str(),jule::Slice<jule::Ptr<_1a75c928a_ImportInfo>>(),jule::Slice<jule::Str>()));
	_1d0b6a68d_init_vars(_5917_imp.get()._field_vars,_5823_info);
	return _5917_imp;
}



inline jule::Slice<jule::Ptr<_1a75c928a_ImportInfo>> _1b65b5dc2_all_packages(_1b65b7544_JuleImporter* _self_) {
	return (*_self_)._field_pkgs;
}



inline void _1b65b6d18_set_mod_path(_1b65b7544_JuleImporter* _self_,jule::Str _7535_path) {
	(*_self_)._field_mod=_7535_path;
}



inline jule::Str _1b65b92d2_get_mod_path(_1b65b7544_JuleImporter* _self_) {
	return (*_self_)._field_mod;
}



inline jule::Str _1b65b9c83_mod_by_id(_1b65b7544_JuleImporter* _self_,jule::I64 _8328_id) {
	return (*_self_)._field_mods[_8328_id];
}



inline jule::Ptr<_1a75c928a_ImportInfo> _1b65bb3a0_get_import(_1b65b7544_JuleImporter* _self_,jule::Str _8733_path) {
	{
		auto &expr = (*_self_)._field_pkgs;
		auto it = expr.begin();
		_iter_begin_1aa2050a0:;
		if (it != expr.end()) {
			jule::Ptr<_1a75c928a_ImportInfo> _1aa20519e_p = *it;
			{
				if (_1aa20519e_p.get()._field_path == _8733_path) {
					return _1aa20519e_p;
				}
			}
			_iter_next_1aa2050a0:;
			++it;
			goto _iter_begin_1aa2050a0;
		}
		_iter_end_1aa2050a0:;
	}
	return nullptr;
}



inline std::tuple<jule::Slice<jule::Ptr<_1d06e7b66_Ast>>,jule::Slice<_1d0019224_Log>> _1b65b7cd6_import_package(_1b65b7544_JuleImporter* _self_,jule::Str _9637_path,jule::Bool _9648_update_mod) {
	jule::Slice<jule::Ptr<_1e9da8494_DirEntry>> _9717_dirents = ({
		auto except = static__1d09a7255_read(_9637_path);
		(except.ok()) ? (except.result) : ({{
			return std::make_tuple(nullptr,jule::Slice<_1d0019224_Log>({_1b659ea6a_flat_compiler_err(jule::Str("connot read package directory: ", 31) + _9637_path)}));
			return std::make_tuple(nullptr,jule::Slice<_1d0019224_Log>({_1b659ea6a_flat_compiler_err(jule::Str("connot read package directory: ", 31) + _9637_path)}));
		} jule::Slice<jule::Ptr<_1e9da8494_DirEntry>>();});
	});
	if (_9648_update_mod) {
		jule::Str _10217_new_mod = _1d077db53_find_module_file_deep(_9637_path);
		if (_10217_new_mod != (*_self_)._field_mod) {
			(*_self_)._field_mod=_10217_new_mod;
			jule::Slice<_1d0019224_Log> _10525_errs = _1d077ddea_check_module_file((*_self_)._field_mod);
			if ((_10525_errs.len() != 0LL)) {
				return std::make_tuple(nullptr,_10525_errs);
			}
		}
	}
	jule::Slice<jule::Ptr<_1d06e7b66_Ast>> _11217_asts = jule::Slice<jule::Ptr<_1d06e7b66_Ast>>::alloc(0LL,static_cast<jule::I64>(_9717_dirents.len()));
	{
		auto &expr = _9717_dirents;
		auto it = expr.begin();
		_iter_begin_1aa20a270:;
		if (it != expr.end()) {
			jule::Ptr<_1e9da8494_DirEntry> _1aa206ce9_dirent = *it;
			{
				if (_1e9dab9b4_is_dir(_1aa206ce9_dirent.get()._field_stat.ptr()) || (!(_1d0941a08_has_suffix(_1aa206ce9_dirent.get()._field_name,jule::Str(".jule", 5))))) {
					goto _iter_next_1aa20a270;
				}
				jule::Str _11917__path = _1d09a5c6a_join(jule::Slice<jule::Str>({_9637_path,_1aa206ce9_dirent.get()._field_name}));
				jule::Ptr<_1d074cd75_File> _12021_file = _1d074e3a4_new_file_set(_11917__path);
				_1d074d507_fill(_12021_file.ptr(), _1b658acdc_read_buff(_12021_file.get()._field_path));
				jule::Slice<_1d0019224_Log> _12221_errors = _1d0759a63_lex(_12021_file,static_cast<jule::I64>(0LL));
				if ((_12221_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_12221_errors);
				}
				jule::Ptr<_1b6506593_FileInfo> _12721_finfo = _1b650696c_parse_file(_12021_file);
				if ((_12721_finfo.get()._field_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_12721_finfo.get()._field_errors);
				}
				if ((!(_1d0b68ee9_is_pass_file_annotation(_1aa206ce9_dirent.get()._field_name)))) {
					goto _iter_next_1aa20a270;
				}
				jule::Bool _13718_r;
				jule::Slice<_1d0019224_Log> _13725_logs;
				std::tie(_13718_r,_13725_logs) = _1b65bdeda_is_pass_build_directives(&(*_self_), _12721_finfo.get()._field_ast);
				if ((_13725_logs.len() > 0LL)) {
					return std::make_tuple(nullptr,_13725_logs);
				}
				if ((!(_13718_r))) {
					goto _iter_next_1aa20a270;
				}
				_11217_asts = jule::alloc_for_append(_11217_asts,1);_11217_asts.__push(_12721_finfo.get()._field_ast);
			}
			_iter_next_1aa20a270:;
			++it;
			goto _iter_begin_1aa20a270;
		}
		_iter_end_1aa20a270:;
	}
	return std::make_tuple(_11217_asts,nullptr);
}



inline void _1b65b7e7e_imported(_1b65b7544_JuleImporter* _self_,jule::Ptr<_1a75c928a_ImportInfo> _15335_imp) {
	{
		auto &expr = (*_self_)._field_pkgs;
		auto it = expr.begin();
		_iter_begin_1aa211ee1:;
		if (it != expr.end()) {
			jule::Ptr<_1a75c928a_ImportInfo> _1aa2120e0_p = *it;
			{
				if ((_1aa2120e0_p.get()._field_cpp_linked == _15335_imp.get()._field_cpp_linked) && (_1aa2120e0_p.get()._field_link_path == _15335_imp.get()._field_link_path)) {
					return;
				}
			}
			_iter_next_1aa211ee1:;
			++it;
			goto _iter_begin_1aa211ee1;
		}
		_iter_end_1aa211ee1:;
	}
	if (((*_self_)._field_mod.len() != 0LL)) {
		{
			auto &expr = (*_self_)._field_mods;
			auto it = expr.begin();
			_iter_begin_1aa213278:;
			if (it != expr.end()) {
				jule::I64 _1aa213366_i = it - expr.begin();
				jule::Str _1aa213553_mod = *it;
				{
					if ((*_self_)._field_mod == _1aa213553_mod) {
						_15335_imp.get()._field_mod_id=_1aa213366_i;
						goto _julec_label_setted;
					}
				}
				_iter_next_1aa213278:;
				++it;
				_1aa213366_i++;
				goto _iter_begin_1aa213278;
			}
			_iter_end_1aa213278:;
		}
		_15335_imp.get()._field_mod_id=static_cast<jule::I64>((*_self_)._field_mods.len());
		(*_self_)._field_mods = jule::alloc_for_append((*_self_)._field_mods,1);(*_self_)._field_mods.__push((*_self_)._field_mod);
		_julec_label_setted:;
	}
	(*_self_)._field_pkgs = jule::alloc_for_append((*_self_)._field_pkgs,1);(*_self_)._field_pkgs.__push(_15335_imp);
}



inline std::tuple<jule::Bool,jule::Slice<_1d0019224_Log>> _1b65bdeda_is_pass_build_directives(_1b65b7544_JuleImporter* _self_,jule::Ptr<_1d06e7b66_Ast>& _17948_file) {
	{
		auto &expr = _17948_file.get()._field_top_directives;
		auto it = expr.begin();
		_iter_begin_1aa216358:;
		if (it != expr.end()) {
			jule::Ptr<_1d06c9ecd_Directive> _1aa2164ac_td = *it;
			{
				if ((_1aa2164ac_td.get()._field_tag.get()._field_kind != jule::Str("build", 5))) {
					goto _iter_next_1aa216358;
				}
				_1d076d3e5_DirectiveEval _18421_de = _1d076d3e5_DirectiveEval(jule::Slice<_1d0019224_Log>(),_1aa2164ac_td,(*_self_)._field_vars);
				jule::Bool _18817_result = _1d076e67c_eval(&_18421_de);
				if ((_18421_de._field_logs.len() > 0LL)) {
					return std::make_tuple(false,_18421_de._field_logs);
				}
				if ((!(_18817_result))) {
					return std::make_tuple(false,nullptr);
				}
			}
			_iter_next_1aa216358:;
			++it;
			goto _iter_begin_1aa216358;
		}
		_iter_end_1aa216358:;
	}
	return std::make_tuple(true,nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1b65b7544_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b65924db_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "structs:" << _Src._field_structs;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1b66b3794_is_common_ordered_0(jule::Slice<jule::Ptr<_1a64147be_Struct>>& _1737_s,jule::Ptr<_1a64147be_Struct> _1746_t) {
	jule::Ptr<_1a64147be_Struct>* _1817_p = (&(_1746_t.get()._field_depends[0LL]));
	jule::Ptr<_1a64147be_Struct>* _1913_end = _1817_p + static_cast<jule::I64>(static_cast<jule::I64>(_1746_t.get()._field_depends.len()));
	{
		auto &expr = _1737_s;
		auto it = expr.begin();
		_iter_begin_1aa2440cd:;
		if (it != expr.end()) {
			jule::Ptr<_1a64147be_Struct> &_1aa244254_tt = *it;
			{
				{
					if (_1aa244254_tt == _1746_t) {
						goto _iter_end_1aa2440cd;
					}
					if (((*(_1817_p)).get()._field_cpp_linked || ((*(_1817_p)).get()._field_depends.len() == 0LL)) || (_1aa244254_tt == (*(_1817_p)))) {
						(_1817_p)++;
						if (_1817_p == _1913_end) {
							return true;
						}
					}
				}
			}
			_iter_next_1aa2440cd:;
			++it;
			goto _iter_begin_1aa2440cd;
		}
		_iter_end_1aa2440cd:;
	}
	return false;
}



inline void static__1b66b7105_order_common_0(jule::Slice<jule::Ptr<_1a64147be_Struct>>& _3840_s) {
	jule::I64 _3917_i = 0LL;
	{
		auto &expr = _3840_s;
		auto it = expr.begin();
		_iter_begin_1aa23db33:;
		if (it != expr.end()) {
			jule::I64 _1aa23dbcc_j = it - expr.begin();
			jule::Ptr<_1a64147be_Struct> _1aa23de1e_t = *it;
			{
				if (_1aa23de1e_t.get()._field_cpp_linked || (_1aa23de1e_t.get()._field_depends.len() == 0LL)) {
					_3840_s.swap(_3917_i,_1aa23dbcc_j);
					(_3917_i)++;
				}
			}
			_iter_next_1aa23db33:;
			++it;
			_1aa23dbcc_j++;
			goto _iter_begin_1aa23db33;
		}
		_iter_end_1aa23db33:;
	}
	jule::I64 _4717_j = _3917_i;
	for (; _4717_j < static_cast<jule::I64>(static_cast<jule::I64>(_3840_s.len())); (_4717_j)++) {
		{
			jule::I64 _4921_k = _3917_i;
			for (; _4921_k < static_cast<jule::I64>(static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(_3840_s.len())) - 1LL))); (_4921_k)++) {
				{
					if ((!(static__1b66b3794_is_common_ordered_0(_3840_s,_3840_s[_4921_k])))) {
						_3840_s.swap(_4921_k,static_cast<jule::I64>((_4921_k + 1LL)));
					}
				}
			_iter_next_1aa2409e2:;
			}
			_iter_end_1aa2409e2:;
		}
	_iter_next_1aa23d506:;
	}
	_iter_end_1aa23d506:;
}



inline void static__1b66bdabd_order_structures(jule::Slice<jule::Ptr<_1a64147be_Struct>>& _6041_structs) {
	static__1b66b7105_order_common_0(_6041_structs);
}







std::ostream &operator<<(std::ostream &_Stream, _1b662c6ec_DefineOrderer _Src) {
	_Stream << "DefineOrderer{";
	_Stream << "}";
	return _Stream;
}



inline void _1b68b1585_optimize_child(jule::Ptr<_1b689822b_ScopeDeadCode> _self_,jule::Ptr<_1a759e606_Scope>& _2639_s) {
	jule::Ptr<_1b689822b_ScopeDeadCode> _2717_sdc = jule::new_ptr<_1b689822b_ScopeDeadCode>(_1b689822b_ScopeDeadCode(_self_,_2639_s,(&(_2639_s.get()._field_stmts)),jule::I64()));
	{
		_1b68be906_optimize_stmts(_2717_sdc);
	}
}



inline void _1b68b6601_eliminate_followed(_1b689822b_ScopeDeadCode* _self_) {
	(*((*_self_)._field_stmts))=(*((*_self_)._field_stmts)).slice(0LL,((*_self_)._field_i + 1LL));
	jule::Ptr<_1b689822b_ScopeDeadCode> _3717_parent = (*_self_)._field_parent;
	while ((_3717_parent != nullptr)) {
		{
			(*(_3717_parent.get()._field_stmts))=(*(_3717_parent.get()._field_stmts)).slice(0LL,(_3717_parent.get()._field_i + 1LL));
			_3717_parent=_3717_parent.get()._field_parent;
		}
	_iter_next_1aa25939b:;
	}
	_iter_end_1aa25939b:;
}



inline void _1b68bc21c_optimize_stmt(jule::Ptr<_1b689822b_ScopeDeadCode> _self_,jule::Any _4444_st) {
	{
		auto &_match_expr{ _4444_st };
		
		if (_match_expr.type_is<jule::Ptr<_1a759e606_Scope>>()) {
			_case_begin_1aa25b799:;
			{
				jule::Ptr<_1a759e606_Scope> _4721_scope = _4444_st.operator jule::Ptr<_1a759e606_Scope>();
				if (_4721_scope.get()._field_deferred) {
					_1b68cd272_eliminate_dead_code_of_scope(_4721_scope);
				} else {
					_1b68b1585_optimize_child(_self_, _4721_scope);
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a7648b67_Data>>()) {
			_case_begin_1aa25b821:;
			{
				{
					auto &_match_expr{ _4444_st.operator jule::Ptr<_1a7648b67_Data>().get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1a6422722_BuiltinErrorCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1a64214e0_BuiltinPanicCallExprModel>>()) {
						_case_begin_1aa25d548:;
						{
							_1b68b6601_eliminate_followed(_self_.ptr());
						}
					}
					_match_end_1aa25d4e3:;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a75b35c6_RetSt>>()) {
			_case_begin_1aa25b898:;
			{
				_1b68b6601_eliminate_followed(_self_.ptr());
			}
		}
		_match_end_1aa25b656:;
	}
}



inline void _1b68be906_optimize_stmts(jule::Ptr<_1b689822b_ScopeDeadCode> _self_) {
	_self_.get()._field_i=0LL;
	for (; _self_.get()._field_i < static_cast<jule::I64>(static_cast<jule::I64>(_self_.get()._field_stmts->len())); (_self_.get()._field_i)++) {
		{
			_1b68bc21c_optimize_stmt(_self_, (*(_self_.get()._field_stmts))[_self_.get()._field_i]);
		}
	_iter_next_1aa25881d:;
	}
	_iter_end_1aa25881d:;
}







std::ostream &operator<<(std::ostream &_Stream, _1b689822b_ScopeDeadCode _Src) {
	_Stream << "ScopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void static__1b694277b_reset(void) {
	jule::out(jule::Str("\033[0m", 4));
}



inline void static__1b6975b22_print(jule::Str _1925_escape,jule::Str _1938_text) {
	jule::out(_1925_escape);
	jule::out(_1938_text);
	static__1b694277b_reset();
}







std::ostream &operator<<(std::ostream &_Stream, _1b6a2100d_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void static__1b69773d7_log_flat(_1d0019224_Log& _1429_l) {
	jule::outln(_1429_l._field_text);
}



inline void static__1b6987a35_log_error(_1d0019224_Log& _1930_l) {
	jule::out(jule::Str("\033[31m", 5));
	jule::out(jule::Str("error: ", 7));
	jule::out(_1930_l._field_text);
	static__1b694277b_reset();
	if ((_1930_l._field_path.len() != 0LL)) {
		jule::out(jule::Str("\n  --> ", 7));
		jule::out(_1930_l._field_path);
	}
	if ((_1930_l._field_row != 0LL) && (_1930_l._field_column != 0LL)) {
		jule::out(jule::Str(":", 1));
		jule::out(_1a74648a6_itoa(_1930_l._field_row));
		jule::out(jule::Str(":", 1));
		jule::out(_1a74648a6_itoa(_1930_l._field_column));
	}
	if ((_1930_l._field_line.len() != 0LL)) {
		jule::Str _3621_line = _1d09a4ab0_trim_left(_1930_l._field_line,jule::Str("\r\n\v\b ", 5));
		jule::I64 _3721_offset = ((_1930_l._field_line.len() - static_cast<jule::I64>(static_cast<jule::I64>(_3621_line.len()))) + 1LL);
		jule::I64 _3821_old_len = _3621_line.len();
		_3621_line=_1d09a4ab0_trim_left(_3621_line,jule::Str("\t", 1));
		if (_3821_old_len != static_cast<jule::I64>(static_cast<jule::I64>(_3621_line.len()))) {
			_3721_offset+=static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_3821_old_len - static_cast<jule::I64>(static_cast<jule::I64>(_3621_line.len()))))) << 3LLU);
		}
		jule::out(jule::Str("\n  ", 3));
		jule::Str _4417_row = _1a74648a6_itoa(_1930_l._field_row);
		jule::out(_4417_row);
		jule::out(jule::Str(" | ", 3));
		jule::out(_3621_line);
		jule::out(jule::Str("\n  ", 3));
		jule::out(_1d0940e58_repeat(jule::Str(" ", 1),static_cast<jule::I64>(_4417_row.len())));
		jule::out(jule::Str(" | ", 3));
		jule::out(_1d0940e58_repeat(jule::Str(" ", 1),static_cast<jule::I64>(_1930_l._field_column - _3721_offset)));
		jule::out(jule::Str("^", 1));
		if ((_1930_l._field_suggestion.len() != 0LL)) {
			jule::out(jule::Str("\n  ", 3));
			jule::out(_1d0940e58_repeat(jule::Str(" ", 1),static_cast<jule::I64>(_4417_row.len())));
			jule::out(jule::Str(" | ", 3));
			static__1b6975b22_print(jule::Str("\033[95m", 5),jule::Str("suggestion: ", 12));
			jule::out(_1930_l._field_suggestion);
		}
	}
	jule::outln(jule::Str("\n", 1));
}



inline void static__1b6989262_log(_1d0019224_Log& _6524_l) {
	{
		auto &_match_expr{ _6524_l._field_kind };
		
		if (_match_expr == static_cast<jule::I64>(0LL)) {
			_case_begin_1aa297d24:;
			{
				static__1b69773d7_log_flat(_6524_l);
			}
		}
		else if (_match_expr == static_cast<jule::I64>(1LL)) {
			_case_begin_1aa2a3e84:;
			{
				static__1b6987a35_log_error(_6524_l);
			}
		}
		_match_end_1aa2a3dda:;
	}
}



inline void static__1b698ced0_print_logs(jule::Slice<_1d0019224_Log>& _7531_logs) {
	{
		auto &expr = _7531_logs;
		auto it = expr.begin();
		_iter_begin_1aa2a4418:;
		if (it != expr.end()) {
			_1d0019224_Log &_1aa2a53e7_l = *it;
			{
				static__1b6989262_log(_1aa2a53e7_l);
			}
			_iter_next_1aa2a4418:;
			++it;
			goto _iter_begin_1aa2a4418;
		}
		_iter_end_1aa2a4418:;
	}
	jule::out(jule::Str("=== ", 4));
	jule::out(_1a74648a6_itoa(static_cast<jule::I64>(_7531_logs.len())));
	jule::outln(jule::Str(" error generated ===", 20));
}







std::ostream &operator<<(std::ostream &_Stream, _1b6a4b720_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a7d52c99_UnsafeBinopExprModel _Src) {
	_Stream << "UnsafeBinopExprModel{";
	_Stream << "node:" << _Src._field_node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a7d538d2_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "node:" << _Src._field_node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a7d60889_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a7d60e0b_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a7d61307_StrInsertBeginExprModel _Src) {
	_Stream << "StrInsertBeginExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a7d626b0_ScopeOptimizer> static__1a7d62b88_new(jule::Ptr<_1a759e606_Scope> _4527_scope) {
	return jule::new_ptr<_1a7d626b0_ScopeOptimizer>(_1a7d626b0_ScopeOptimizer(jule::I64(),_4527_scope));
}



inline void _1a7d62e0d_set_current_stmt(_1a7d626b0_ScopeOptimizer* _self_,jule::Any _5139_stmt) {
	(*_self_)._field_scope.get()._field_stmts[(*_self_)._field_i]=_5139_stmt;
}



inline void _1a7d63183_optimize_data(_1a7d626b0_ScopeOptimizer* _self_,jule::Ptr<_1a7648b67_Data> _5536_d) {
	{
		auto &_match_expr{ _5536_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1a641b364_FnCallExprModel>>()) {
			_case_begin_1aa2b4c42:;
			{
				jule::Ptr<_1a641b364_FnCallExprModel> _5821_m = _5536_d.get()._field_model.operator jule::Ptr<_1a641b364_FnCallExprModel>();
				if (_1e829b746_PRODUCTION) {
					if ((!(_1a642a96c_is_builtin(_5821_m.get()._field_func.ptr()))) && _1a7d66065_is_std_package(_5821_m.get()._field_func.get()._field_decl.get()._field_token.get()._field_file.get()._field_path,jule::Str("debug", 5))) {
						_1a7d62e0d_set_current_stmt(&(*_self_), jule::Any(nullptr));
						return;
					}
				}
			}
		}
		_match_end_1aa2b4ba9:;
	}
	static__1a7d68793_optimize(_5536_d.get()._field_model);
}



inline void _1a7d63408_optimize_var(_1a7d626b0_ScopeOptimizer* _self_,jule::Ptr<_1a75ec478_Var> _7035_v) {
	if ((_7035_v.get()._field_value != nullptr)) {
		static__1a7d68793_optimize(_7035_v.get()._field_value.get()._field_data.get()._field_model);
	}
}



inline void _1a7d6367d_optimize_conditional(_1a7d626b0_ScopeOptimizer* _self_,jule::Ptr<_1a7550c6c_Conditional> _7643_c) {
	{
		auto &expr = _7643_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1aa2b8ecc:;
		if (it != expr.end()) {
			jule::Ptr<_1a75a6003_If> _1aa2b9131_elif = *it;
			{
				static__1a7d68793_optimize(_1aa2b9131_elif.get()._field_expr);
				_1a7d6598d_optimize_child(&(*_self_), _1aa2b9131_elif.get()._field_scope);
			}
			_iter_next_1aa2b8ecc:;
			++it;
			goto _iter_begin_1aa2b8ecc;
		}
		_iter_end_1aa2b8ecc:;
	}
	if ((_7643_c.get()._field_default != nullptr)) {
		_1a7d6598d_optimize_child(&(*_self_), _7643_c.get()._field_default.get()._field_scope);
	}
	if ((!(_1e829c4c2_OPT_COND))) {
		return;
	}
	jule::Bool _8917_const_case = false;
	{
		auto &expr = _7643_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1aa2bb441:;
		if (it != expr.end()) {
			jule::I64 _1aa2bb496_i = it - expr.begin();
			jule::Ptr<_1a75a6003_If> _1aa2bb6b6_elif = *it;
			{
				if ((!(_1a7d663b7_is_constant_valid_conditional_case(_1aa2bb6b6_elif)))) {
					goto _iter_next_1aa2bb441;
				}
				_8917_const_case=true;
				_7643_c.get()._field_elifs=_7643_c.get()._field_elifs.slice(0LL,_1aa2bb496_i);
				_7643_c.get()._field_default=jule::new_ptr<_1a7550a80_Else>(_1a7550a80_Else(_1aa2bb6b6_elif.get()._field_scope));
				goto _iter_end_1aa2bb441;
			}
			_iter_next_1aa2bb441:;
			++it;
			_1aa2bb496_i++;
			goto _iter_begin_1aa2bb441;
		}
		_iter_end_1aa2bb441:;
	}
	if ((_7643_c.get()._field_elifs.len() == 0LL)) {
		return;
	}
	jule::Ptr<_1a75a6003_If>* _10917_i = (&(_7643_c.get()._field_elifs[0LL]));
	jule::Ptr<_1a75a6003_If>* _11013_end = (&(_7643_c.get()._field_elifs[(_7643_c.get()._field_elifs.len() - 1LL)]));
	for (; _10917_i <= _11013_end; (_10917_i)++) {
		{
			{
				if (_1a7d66c36_is_unreachable_conditional_case((*(_10917_i)))) {
					(*(_10917_i))=nullptr;
				}
			}
		}
	_iter_next_1aa2be246:;
	}
	_iter_end_1aa2be246:;
	if ((_7643_c.get()._field_elifs.len() == 0LL)) {
		return;
	}
	if ((!(_8917_const_case))) {
		return;
	}
	jule::I64 _12817_only = -1LL;
	{
		auto &expr = _7643_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1aa2c0a94:;
		if (it != expr.end()) {
			jule::I64 _1aa2c0b2c_j = it - expr.begin();
			jule::Ptr<_1a75a6003_If> _1aa2c0d4c_elif = *it;
			{
				if ((_1aa2c0d4c_elif != nullptr)) {
					if ((_12817_only != -1LL)) {
						return;
					}
					_12817_only=_1aa2c0b2c_j;
				}
			}
			_iter_next_1aa2c0a94:;
			++it;
			_1aa2c0b2c_j++;
			goto _iter_begin_1aa2c0a94;
		}
		_iter_end_1aa2c0a94:;
	}
	if ((_12817_only != -1LL)) {
		_1a7d62e0d_set_current_stmt(&(*_self_), jule::Any(_7643_c.get()._field_elifs[_12817_only].get()._field_scope));
	}
}



inline void _1a7d63a8a_build_default_constat_true_case(_1a7d626b0_ScopeOptimizer* _self_,jule::Ptr<_1a75b31ec_Case> _14554_case,jule::I64& _14572_i,jule::Ptr<_1a75b2cce_Match>& _14585_m) {
	_14554_case.get()._field_exprs=nullptr;
	jule::I64 _14713_start = _14572_i;
	_julec_label_loop:;
	for (;;) {
		{
			if ((_14554_case.get()._field_scope.get()._field_stmts.len() == 0LL)) {
				goto _iter_end_1aa2c3679;
			}
			jule::Any &_15322_stmt = _14554_case.get()._field_scope.get()._field_stmts[(_14554_case.get()._field_scope.get()._field_stmts.len() - 1LL)];
			{
				auto &_match_expr{ _15322_stmt };
				
				if (_match_expr.type_is<jule::Ptr<_1a75b33d9_FallSt>>()) {
					_case_begin_1aa2c3d3e:;
					{
						(_14572_i)++;
						if (_14572_i >= static_cast<jule::I64>(static_cast<jule::I64>(_14585_m.get()._field_cases.len()))) {
							_15322_stmt=jule::Any(_14585_m.get()._field_default.get()._field_scope);
							goto _iter_end_1aa2c3679;
						}
						_14554_case=_14585_m.get()._field_cases[_14572_i];
						_15322_stmt=jule::Any(_14554_case.get()._field_scope);
					}
				}
				else {
					_case_begin_1aa2c5318:;
					{
						goto _iter_end_1aa2c3679;
					}
				}
				_match_end_1aa2c52b3:;
			}
		}
	_iter_next_1aa2c3679:;
	}
	_iter_end_1aa2c3679:;
	_14585_m.get()._field_default=_14585_m.get()._field_cases[_14713_start];
	_14585_m.get()._field_cases=_14585_m.get()._field_cases.slice(0LL,_14713_start);
}



inline void _1a7d63cee_optimize_match(_1a7d626b0_ScopeOptimizer* _self_,jule::Ptr<_1a75b2cce_Match> _17137_m) {
	{
		auto &expr = _17137_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1aa2c7abd:;
		if (it != expr.end()) {
			jule::Ptr<_1a75b31ec_Case> _1aa2c7c22_case = *it;
			{
				{
					auto &expr = _1aa2c7c22_case.get()._field_exprs;
					auto it = expr.begin();
					_iter_begin_1aa2c8360:;
					if (it != expr.end()) {
						jule::Ptr<_1a7648b67_Data> _1aa2c842b_expr = *it;
						{
							static__1a7d68793_optimize(_1aa2c842b_expr.get()._field_model);
						}
						_iter_next_1aa2c8360:;
						++it;
						goto _iter_begin_1aa2c8360;
					}
					_iter_end_1aa2c8360:;
				}
				_1a7d6598d_optimize_child(&(*_self_), _1aa2c7c22_case.get()._field_scope);
			}
			_iter_next_1aa2c7abd:;
			++it;
			goto _iter_begin_1aa2c7abd;
		}
		_iter_end_1aa2c7abd:;
	}
	if ((_17137_m.get()._field_default != nullptr)) {
		_1a7d6598d_optimize_child(&(*_self_), _17137_m.get()._field_default.get()._field_scope);
	}
	if ((!(_1e829c4c2_OPT_COND))) {
		return;
	}
	jule::Bool _18617_const_case = false;
	{
		auto &expr = _17137_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1aa2ca054:;
		if (it != expr.end()) {
			jule::I64 _1aa2ca0a9_i = it - expr.begin();
			jule::Ptr<_1a75b31ec_Case> _1aa2ca2c9_case = *it;
			{
				if ((!(_1a7d6695b_is_constant_valid_match_case(_1aa2ca2c9_case)))) {
					goto _iter_next_1aa2ca054;
				}
				_18617_const_case=true;
				_1a7d63a8a_build_default_constat_true_case(&(*_self_), _1aa2ca2c9_case,_1aa2ca0a9_i,_17137_m);
				goto _iter_end_1aa2ca054;
			}
			_iter_next_1aa2ca054:;
			++it;
			_1aa2ca0a9_i++;
			goto _iter_begin_1aa2ca054;
		}
		_iter_end_1aa2ca054:;
	}
	if ((_17137_m.get()._field_cases.len() == 0LL)) {
		return;
	}
	jule::Ptr<_1a75b31ec_Case>* _20317_i = (&(_17137_m.get()._field_cases[0LL]));
	jule::Ptr<_1a75b31ec_Case>* _20413_end = (&(_17137_m.get()._field_cases[(_17137_m.get()._field_cases.len() - 1LL)]));
	for (; _20317_i <= _20413_end; (_20317_i)++) {
		{
			{
				if (_1a7d67011_is_unreachable_match_case((*(_20317_i)))) {
					(*(_20317_i))=nullptr;
				}
			}
		}
	_iter_next_1aa2cca5c:;
	}
	_iter_end_1aa2cca5c:;
	if ((!(_18617_const_case))) {
		return;
	}
	jule::I64 _21817_only = -1LL;
	{
		auto &expr = _17137_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1aa2cdd16:;
		if (it != expr.end()) {
			jule::I64 _1aa2cdd9e_j = it - expr.begin();
			jule::Ptr<_1a75b31ec_Case> _1aa2ce0be_case = *it;
			{
				if ((_1aa2ce0be_case != nullptr)) {
					if ((_21817_only != -1LL)) {
						return;
					}
					_21817_only=_1aa2cdd9e_j;
				}
			}
			_iter_next_1aa2cdd16:;
			++it;
			_1aa2cdd9e_j++;
			goto _iter_begin_1aa2cdd16;
		}
		_iter_end_1aa2cdd16:;
	}
	if ((_21817_only != -1LL)) {
		_1a7d62e0d_set_current_stmt(&(*_self_), jule::Any(_17137_m.get()._field_cases[_21817_only].get()._field_scope));
	}
}



inline void _1a7d64074_optimize_range_iter(_1a7d626b0_ScopeOptimizer* _self_,jule::Ptr<_1a7561c6c_RangeIter> _23542_it) {
	static__1a7d68793_optimize(_23542_it.get()._field_expr.get()._field_model);
	_1a7d6598d_optimize_child(&(*_self_), _23542_it.get()._field_scope);
}



inline void _1a7d642e9_optimize_while_iter(_1a7d626b0_ScopeOptimizer* _self_,jule::Ptr<_1a7561a80_WhileIter> _24042_it) {
	static__1a7d68793_optimize(_24042_it.get()._field_expr);
	_1a7d65718_optimize_stmt(&(*_self_), _24042_it.get()._field_next);
	_1a7d6598d_optimize_child(&(*_self_), _24042_it.get()._field_scope);
}



inline jule::Bool _1a7d64607_substr(_1a7d626b0_ScopeOptimizer* _self_,jule::Ptr<_1a75b2905_Assign> _24629_a) {
	{
		auto &_match_expr{ _24629_a.get()._field_r.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1a641cdb0_SlicingExprModel>>()) {
			_case_begin_1aa2d4338:;
			{
				jule::Ptr<_1a641cdb0_SlicingExprModel> _24921_sem = _24629_a.get()._field_r.get()._field_model.operator jule::Ptr<_1a641cdb0_SlicingExprModel>();
				if (_24921_sem.get()._field_expr == _24629_a.get()._field_l.get()._field_model) {
					_1a7d62e0d_set_current_stmt(&(*_self_), jule::Any(jule::new_ptr<_1a7d60e0b_MutSlicingExprModel>(_1a7d60e0b_MutSlicingExprModel(_24921_sem.get()._field_token,_24921_sem.get()._field_expr,_24921_sem.get()._field_left,_24921_sem.get()._field_right))));
					return true;
				}
			}
		}
		_match_end_1aa2d42a0:;
	}
	return false;
}



inline jule::Bool _1a7d64915_str_insert(_1a7d626b0_ScopeOptimizer* _self_,jule::Ptr<_1a75b2905_Assign> _26333_a) {
	{
		auto &_match_expr{ _26333_a.get()._field_r.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1a6419571_BinopExprModel>>()) {
			_case_begin_1aa2d6c86:;
			{
				jule::Ptr<_1a6419571_BinopExprModel> _26621_m = _26333_a.get()._field_r.get()._field_model.operator jule::Ptr<_1a6419571_BinopExprModel>();
				if (_26621_m.get()._field_right.get()._field_model == _26333_a.get()._field_l.get()._field_model) {
					_1a7d62e0d_set_current_stmt(&(*_self_), jule::Any(jule::new_ptr<_1a7d61307_StrInsertBeginExprModel>(_1a7d61307_StrInsertBeginExprModel(_26333_a.get()._field_l.get()._field_model,_26621_m.get()._field_left.get()._field_model))));
					return true;
				}
			}
		}
		_match_end_1aa2d6bed:;
	}
	return false;
}



inline jule::Bool _1a7d64c23_str_assign(_1a7d626b0_ScopeOptimizer* _self_,jule::Ptr<_1a75b2905_Assign> _27833_a) {
	if ((_27833_a.get()._field_op.get()._field_kind != jule::Str("=", 1))) {
		return false;
	}
	jule::Ptr<_1a7677602_Prim> _28213_lp = _1a7674e5c_prim(_27833_a.get()._field_l.get()._field_kind.ptr());
	if ((_28213_lp == nullptr) || (!(_1a767a5b1_is_str(_28213_lp.ptr())))) {
		return false;
	}
	{
		
		if (_1a7d64607_substr(&(*_self_), _27833_a) || _1a7d64915_str_insert(&(*_self_), _27833_a)) {
			_case_begin_1aa2daae2:;
			{
				return true;
			}
		}
		_match_end_1aa2daa8c:;
	}
	return false;
}



inline void _1a7d64e98_optimize_assign(_1a7d626b0_ScopeOptimizer* _self_,jule::Ptr<_1a75b2905_Assign> _29438_assign) {
	if (_1e829b878_OPT_COPY && _1a7d64c23_str_assign(&(*_self_), _29438_assign)) {
		return;
	}
	static__1a7d68793_optimize(_29438_assign.get()._field_l.get()._field_model);
	static__1a7d68793_optimize(_29438_assign.get()._field_r.get()._field_model);
	{
		auto &_match_expr{ _29438_assign.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("/=", 2) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1aa2dc3a7:;
			{
				if (_1e829bd40_OPT_MATH && (_1a767614a_strct(_29438_assign.get()._field_l.get()._field_kind.ptr()) == nullptr)) {
					_29438_assign.get()._field_op.get()._field_kind=_29438_assign.get()._field_op.get()._field_kind.slice(0LL,(_29438_assign.get()._field_op.get()._field_kind.len() - 1LL));
					jule::Any _30725_model = jule::Any(jule::new_ptr<_1a6419571_BinopExprModel>(_1a6419571_BinopExprModel(_29438_assign.get()._field_l,_29438_assign.get()._field_r,_29438_assign.get()._field_op)));
					static__1a7d68793_optimize(_30725_model);
					{
						auto &_match_expr{ _30725_model };
						
						if (_match_expr.type_is<jule::Ptr<_1a6419571_BinopExprModel>>()) {
							_case_begin_1aa2e0a5e:;
							{
								_29438_assign.get()._field_r=jule::new_ptr<_1a64190a9_OperandExprModel>((*(_29438_assign.get()._field_r)));
								_29438_assign.get()._field_op.get()._field_kind=jule::Str("=", 1);
								_29438_assign.get()._field_r.get()._field_model=_30725_model;
								return;
							}
						}
						_match_end_1aa2e0a09:;
					}
					_29438_assign.get()._field_op.get()._field_kind+=jule::Str("=", 1);
					return;
				}
			}
		}
		_match_end_1aa2dd41e:;
	}
	if (_1e829bbb9_OPT_APPEND) {
		{
			auto &_match_expr{ _29438_assign.get()._field_r.get()._field_model };
			
			if (_match_expr.type_is<jule::Ptr<_1a6422337_BuiltinAppendCallExprModel>>()) {
				_case_begin_1aa2e2621:;
				{
					jule::Ptr<_1a6422337_BuiltinAppendCallExprModel> _32825_m = _29438_assign.get()._field_r.get()._field_model.operator jule::Ptr<_1a6422337_BuiltinAppendCallExprModel>();
					{
						auto &_match_expr{ _32825_m.get()._field_elements };
						
						if (_match_expr.type_is<jule::Ptr<_1a641b71b_SliceExprModel>>()) {
							_case_begin_1aa2e3567:;
							{
								{
									auto &_match_expr{ _32825_m.get()._field_dest };
									
									if (_match_expr.type_is<jule::Ptr<_1a75ec478_Var>>() || _match_expr.type_is<jule::Ptr<_1a641db6e_StructSubIdentExprModel>>()) {
										_case_begin_1aa2e3d70:;
										{
											_1a7d62e0d_set_current_stmt(&(*_self_), jule::Any(jule::new_ptr<_1a7d60889_PushToSliceExprModel>(_1a7d60889_PushToSliceExprModel(_32825_m.get()._field_dest,_32825_m.get()._field_elements.operator jule::Ptr<_1a641b71b_SliceExprModel>()))));
										}
									}
									_match_end_1aa2e3cd7:;
								}
							}
						}
						_match_end_1aa2e3512:;
					}
				}
			}
			_match_end_1aa2e25aa:;
		}
	}
}



inline void _1a7d6521d_optimize_multi_assign(_1a7d626b0_ScopeOptimizer* _self_,jule::Ptr<_1a75b2ae2_MultiAssign> _34444_assign) {
	{
		auto &expr = _34444_assign.get()._field_l;
		auto it = expr.begin();
		_iter_begin_1aa2e4546:;
		if (it != expr.end()) {
			jule::I64 _1aa2e290c_i = it - expr.begin();
			jule::Any _1aa2e525b_l = *it;
			{
				static__1a7d68793_optimize(_1aa2e525b_l);
				_34444_assign.get()._field_l[_1aa2e290c_i]=_1aa2e525b_l;
			}
			_iter_next_1aa2e4546:;
			++it;
			_1aa2e290c_i++;
			goto _iter_begin_1aa2e4546;
		}
		_iter_end_1aa2e4546:;
	}
	static__1a7d68793_optimize(_34444_assign.get()._field_r);
}



inline void _1a7d65493_optimize_ret(_1a7d626b0_ScopeOptimizer* _self_,jule::Ptr<_1a75b35c6_RetSt> _35235_r) {
	static__1a7d68793_optimize(_35235_r.get()._field_expr);
}



inline void _1a7d65718_optimize_stmt(_1a7d626b0_ScopeOptimizer* _self_,jule::Any _35636_stmt) {
	{
		auto &_match_expr{ _35636_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_1a759e606_Scope>>()) {
			_case_begin_1aa2e6e3e:;
			{
				_1a7d6598d_optimize_child(&(*_self_), _35636_stmt.operator jule::Ptr<_1a759e606_Scope>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a7648b67_Data>>()) {
			_case_begin_1aa2e6ed8:;
			{
				_1a7d63183_optimize_data(&(*_self_), _35636_stmt.operator jule::Ptr<_1a7648b67_Data>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a75ec478_Var>>()) {
			_case_begin_1aa2e704e:;
			{
				_1a7d63408_optimize_var(&(*_self_), _35636_stmt.operator jule::Ptr<_1a75ec478_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a7550c6c_Conditional>>()) {
			_case_begin_1aa2e70b5:;
			{
				_1a7d6367d_optimize_conditional(&(*_self_), _35636_stmt.operator jule::Ptr<_1a7550c6c_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a7561c6c_RangeIter>>()) {
			_case_begin_1aa2e712b:;
			{
				_1a7d64074_optimize_range_iter(&(*_self_), _35636_stmt.operator jule::Ptr<_1a7561c6c_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a7561a80_WhileIter>>()) {
			_case_begin_1aa2e7192:;
			{
				_1a7d642e9_optimize_while_iter(&(*_self_), _35636_stmt.operator jule::Ptr<_1a7561a80_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a7561893_InfIter>>()) {
			_case_begin_1aa2e7208:;
			{
				_1a7d6598d_optimize_child(&(*_self_), _35636_stmt.operator jule::Ptr<_1a7561893_InfIter>().get()._field_scope);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a75b2905_Assign>>()) {
			_case_begin_1aa2e7280:;
			{
				_1a7d64e98_optimize_assign(&(*_self_), _35636_stmt.operator jule::Ptr<_1a75b2905_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a75b2ae2_MultiAssign>>()) {
			_case_begin_1aa2e7307:;
			{
				_1a7d6521d_optimize_multi_assign(&(*_self_), _35636_stmt.operator jule::Ptr<_1a75b2ae2_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a75b2cce_Match>>()) {
			_case_begin_1aa2e737e:;
			{
				_1a7d63cee_optimize_match(&(*_self_), _35636_stmt.operator jule::Ptr<_1a75b2cce_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a75b35c6_RetSt>>()) {
			_case_begin_1aa2e7406:;
			{
				_1a7d65493_optimize_ret(&(*_self_), _35636_stmt.operator jule::Ptr<_1a75b35c6_RetSt>());
			}
		}
		_match_end_1aa2e6d0c:;
	}
}



inline void _1a7d6598d_optimize_child(_1a7d626b0_ScopeOptimizer* _self_,jule::Ptr<_1a759e606_Scope> _38337_child) {
	jule::Ptr<_1a7d626b0_ScopeOptimizer> _38417_so = static__1a7d62b88_new(_38337_child);
	_1a7d65b69_optimize(_38417_so.ptr());
}



inline void _1a7d65b69_optimize(_1a7d626b0_ScopeOptimizer* _self_) {
	{
		auto &expr = (*_self_)._field_scope.get()._field_stmts;
		auto it = expr.begin();
		_iter_begin_1aa2ee5d9:;
		if (it != expr.end()) {
			jule::I64 _1aa2ee6c7_i = it - expr.begin();
			jule::Any _1aa2ee82b_stmt = *it;
			{
				(*_self_)._field_i=_1aa2ee6c7_i;
				_1a7d65718_optimize_stmt(&(*_self_), _1aa2ee82b_stmt);
			}
			_iter_next_1aa2ee5d9:;
			++it;
			_1aa2ee6c7_i++;
			goto _iter_begin_1aa2ee5d9;
		}
		_iter_end_1aa2ee5d9:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, _1a7d626b0_ScopeOptimizer _Src) {
	_Stream << "ScopeOptimizer{";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline void static__1a7d68793_optimize(jule::Any& _5333_model) {
	{
		
		if (_1e829c34b_OPT_PTR || _1e829bd40_OPT_MATH || _1e829beb6_OPT_ACCESS || _1e829c4c2_OPT_COND) {
			_case_begin_1aa2eeba0:;
			{
				jule::Ptr<_1a7d67d69_ExprOptimizer> _6021_exop = jule::new_ptr<_1a7d67d69_ExprOptimizer>(_1a7d67d69_ExprOptimizer(((jule::Ptr<jule::Any>)((&(_5333_model))))));
				_1a7d6dc2c_do(_6021_exop.ptr());
			}
		}
		_match_end_1aa2eeac3:;
	}
}



inline jule::Bool _1a7d68aa1_str_cond(_1a7d67d69_ExprOptimizer* _self_,jule::Ptr<_1a6419571_BinopExprModel> _6727_m) {
	jule::Ptr<_1a7677602_Prim> _6813_lp = _1a7674e5c_prim(_6727_m.get()._field_left.get()._field_kind.ptr());
	if ((_6813_lp == nullptr) || (!(_1a767a5b1_is_str(_6813_lp.ptr())))) {
		return false;
	}
	if ((_6727_m.get()._field_op.get()._field_kind != jule::Str("==", 2)) && (_6727_m.get()._field_op.get()._field_kind != jule::Str("!=", 2))) {
		return false;
	}
	{
		auto &_match_expr{ _6727_m.get()._field_left.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1a751ddb1_Const>>()) {
			_case_begin_1aa3043be:;
			{
				std::tie(_6727_m.get()._field_left,_6727_m.get()._field_right) = std::make_tuple(_6727_m.get()._field_right,_6727_m.get()._field_left);
				goto _julec_label_opt;
			}
		}
		_match_end_1aa304369:;
	}
	{
		auto &_match_expr{ _6727_m.get()._field_right.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1a751ddb1_Const>>()) {
			_case_begin_1aa305a85:;
			{
				goto _match_end_1aa3053c0;
			}
		}
		else {
			_case_begin_1aa305436:;
			{
				return true;
			}
		}
		_match_end_1aa3053c0:;
	}
	_julec_label_opt:;
	jule::Ptr<_1a751ddb1_Const> _8713_c = _6727_m.get()._field_right.get()._field_model.operator jule::Ptr<_1a751ddb1_Const>();
	if ((!(_1a7520863_read_str(_8713_c.ptr()).empty()))) {
		return false;
	}
	{
		auto &_match_expr{ _6727_m.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1aa3066bd:;
			{
				(*((*_self_)._field_model))=jule::Any(jule::new_ptr<_1a641ed3a_CommonSubIdentExprModel>(_1a641ed3a_CommonSubIdentExprModel(_6727_m.get()._field_left.get()._field_kind,_6727_m.get()._field_left.get()._field_model,jule::Ptr<_1d0747985_Token>(),jule::Str("empty()", 7))));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1aa306aec:;
			{
				jule::Ptr<_1d0747985_Token> _9921_op = _6727_m.get()._field_op;
				_9921_op.get()._field_kind=jule::Str("!", 1);
				(*((*_self_)._field_model))=jule::Any(jule::new_ptr<_1a6419928_UnaryExprModel>(_1a6419928_UnaryExprModel(jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::Ptr<_1a7672da0_TypeKind>(),jule::Ptr<_1a7672da0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_1a641ed3a_CommonSubIdentExprModel>(_1a641ed3a_CommonSubIdentExprModel(_6727_m.get()._field_left.get()._field_kind,_6727_m.get()._field_left.get()._field_model,jule::Ptr<_1d0747985_Token>(),jule::Str("empty()", 7))))),jule::Bool(),jule::Ptr<_1a751ddb1_Const>())),_9921_op)));
			}
		}
		_match_end_1aa306a31:;
	}
	return true;
}



inline void _1a7d68d26_binary(_1a7d67d69_ExprOptimizer* _self_,jule::Ptr<_1a6419571_BinopExprModel> _11525_m) {
	static__1a7d68793_optimize(_11525_m.get()._field_left.get()._field_model);
	static__1a7d68793_optimize(_11525_m.get()._field_right.get()._field_model);
	{
		auto &_match_expr{ _11525_m.get()._field_right.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1a751ddb1_Const>>()) {
			_case_begin_1aa309e1e:;
			{
				goto _match_end_1aa30ac88;
			}
		}
		else {
			_case_begin_1aa30acee:;
			{
				return;
			}
		}
		_match_end_1aa30ac88:;
	}
	if (_1e829c4c2_OPT_COND && _1a7d68aa1_str_cond(&(*_self_), _11525_m)) {
		return;
	}
	if ((!(_1e829bd40_OPT_MATH))) {
		return;
	}
	{
		auto &_match_expr{ _11525_m.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1aa30beba:;
			{
				jule::Bool _13518_ok;
				jule::U64 _13522_x;
				std::tie(_13518_ok,_13522_x) = _1a7d6e16c_check_for_bit_shift_opt(_11525_m.get()._field_left,_11525_m.get()._field_right);
				if (_13518_ok) {
					_11525_m.get()._field_op.get()._field_kind=jule::Str("<<", 2);
					jule::Ptr<_1a751ddb1_Const> _13825_c = _11525_m.get()._field_right.get()._field_model.operator jule::Ptr<_1a751ddb1_Const>();
					_1a752180e_set_u64(_13825_c.ptr(), _13522_x);
					return;
				}
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1aa30c031:;
			{
				jule::Bool _14318_ok;
				jule::U64 _14322_x;
				std::tie(_14318_ok,_14322_x) = _1a7d6e16c_check_for_bit_shift_opt(_11525_m.get()._field_left,_11525_m.get()._field_right);
				if (_14318_ok) {
					_11525_m.get()._field_op.get()._field_kind=jule::Str(">>", 2);
					jule::Ptr<_1a751ddb1_Const> _14625_c = _11525_m.get()._field_right.get()._field_model.operator jule::Ptr<_1a751ddb1_Const>();
					_1a752180e_set_u64(_14625_c.ptr(), _14322_x);
					return;
				}
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1aa30c097:;
			{
				jule::Ptr<_1a751ddb1_Const> _15121_c = _11525_m.get()._field_right.get()._field_model.operator jule::Ptr<_1a751ddb1_Const>();
				jule::F64 _15217_d = _1a7521314_as_f64(_15121_c.ptr());
				if ((_15217_d == 2LL)) {
					_11525_m.get()._field_op.get()._field_kind=jule::Str("&", 1);
					_1a7521589_set_i64(_15121_c.ptr(), 1LL);
				}
			}
		}
		_match_end_1aa30bd33:;
	}
	(*((*_self_)._field_model))=jule::Any(jule::new_ptr<_1a7d52c99_UnsafeBinopExprModel>(_1a7d52c99_UnsafeBinopExprModel(_11525_m)));
}



inline void _1a7d6909b_unary(_1a7d67d69_ExprOptimizer* _self_,jule::Ptr<_1a6419928_UnaryExprModel> _16324_m) {
	static__1a7d68793_optimize(_16324_m.get()._field_expr.get()._field_model);
	if (_1e829c34b_OPT_PTR && (_16324_m.get()._field_op.get()._field_kind == jule::Str("*", 1))) {
		{
			auto &_match_expr{ _16324_m.get()._field_expr.get()._field_model };
			
			if (_match_expr.type_is<jule::Ptr<_1a6419928_UnaryExprModel>>()) {
				_case_begin_1aa313ed3:;
				{
					jule::Ptr<_1a6419928_UnaryExprModel> _16825_um = _16324_m.get()._field_expr.get()._field_model.operator jule::Ptr<_1a6419928_UnaryExprModel>();
					if ((_16825_um.get()._field_op.get()._field_kind == jule::Str("&", 1))) {
						(*((*_self_)._field_model))=_16825_um.get()._field_expr.get()._field_model;
					}
				}
			}
			_match_end_1aa313e4a:;
		}
	}
}



inline void _1a7d69321_structure_lit(_1a7d67d69_ExprOptimizer* _self_,jule::Ptr<_1a641a1cb_StructLitExprModel> _17632_m) {
	{
		auto &expr = _17632_m.get()._field_args;
		auto it = expr.begin();
		_iter_begin_1aa316139:;
		if (it != expr.end()) {
			jule::Ptr<_1a6419d24_StructArgExprModel> _1aa31628d_arg = *it;
			{
				static__1a7d68793_optimize(_1aa31628d_arg.get()._field_expr);
			}
			_iter_next_1aa316139:;
			++it;
			goto _iter_begin_1aa316139;
		}
		_iter_end_1aa316139:;
	}
}



inline void _1a7d69596_alloc_structure(_1a7d67d69_ExprOptimizer* _self_,jule::Ptr<_1a641a50b_AllocStructLitExprModel> _18234_m) {
	_1a7d69321_structure_lit(&(*_self_), _18234_m.get()._field_lit);
}



inline void _1a7d6981b_casting(_1a7d67d69_ExprOptimizer* _self_,jule::Ptr<_1a641aa39_CastingExprModel> _18626_m) {
	static__1a7d68793_optimize(_18626_m.get()._field_expr);
}



inline void _1a7d69a91_args(_1a7d67d69_ExprOptimizer* _self_,jule::Slice<jule::Any> _19023_args) {
	{
		auto &expr = _19023_args;
		auto it = expr.begin();
		_iter_begin_1aa318856:;
		if (it != expr.end()) {
			jule::I64 _1aa318977_i = it - expr.begin();
			jule::Any _1aa318bb9_arg = *it;
			{
				static__1a7d68793_optimize(_1aa318bb9_arg);
				_19023_args[_1aa318977_i]=_1aa318bb9_arg;
			}
			_iter_next_1aa318856:;
			++it;
			_1aa318977_i++;
			goto _iter_begin_1aa318856;
		}
		_iter_end_1aa318856:;
	}
}



inline void _1a7d69d16_scope(_1a7d67d69_ExprOptimizer* _self_,jule::Ptr<_1a759e606_Scope>& _19725_s) {
	jule::Ptr<_1a7d626b0_ScopeOptimizer> _19817_scopt = static__1a7d62b88_new(_19725_s);
	_1a7d65b69_optimize(_19817_scopt.ptr());
}



inline void _1a7d6a08b_func_call(_1a7d67d69_ExprOptimizer* _self_,jule::Ptr<_1a641b364_FnCallExprModel> _20228_m) {
	static__1a7d68793_optimize(_20228_m.get()._field_expr);
	_1a7d69a91_args(&(*_self_), _20228_m.get()._field_args);
	if ((_20228_m.get()._field_except != nullptr)) {
		_1a7d69d16_scope(&(*_self_), _20228_m.get()._field_except);
	}
}



inline void _1a7d6a311_slice(_1a7d67d69_ExprOptimizer* _self_,jule::Ptr<_1a641b71b_SliceExprModel> _21024_m) {
	_1a7d69a91_args(&(*_self_), _21024_m.get()._field_elems);
}



inline void _1a7d6a586_array(_1a7d67d69_ExprOptimizer* _self_,jule::Ptr<_1a641e4bb_ArrayExprModel> _21424_m) {
	if ((_21424_m.get()._field_elems.len() == 2LL) && (_21424_m.get()._field_elems[1LL] == jule::Any(jule::Any(nullptr)))) {
		jule::Any _21621_elem = _21424_m.get()._field_elems[0LL];
		static__1a7d68793_optimize(_21621_elem);
		_21424_m.get()._field_elems[0LL]=_21621_elem;
	}
	_1a7d69a91_args(&(*_self_), _21424_m.get()._field_elems);
}



inline void _1a7d6a80b_indexing(_1a7d67d69_ExprOptimizer* _self_,jule::Ptr<_1a641bb8e_IndexingExprModel> _22327_m) {
	static__1a7d68793_optimize(_22327_m.get()._field_expr.get()._field_model);
	static__1a7d68793_optimize(_22327_m.get()._field_index.get()._field_model);
	if ((!(_1e829beb6_OPT_ACCESS))) {
		return;
	}
	jule::Bool _22913_array = (_1a767590d_arr(_22327_m.get()._field_expr.get()._field_kind.ptr()) != nullptr);
	if (_22913_array && _1a764952a_is_const(_22327_m.get()._field_index.ptr())) {
		(*((*_self_)._field_model))=jule::Any(jule::new_ptr<_1a7d538d2_UnsafeIndexingExprModel>(_1a7d538d2_UnsafeIndexingExprModel(_22327_m)));
		return;
	}
	{
		auto &_match_expr{ _22327_m.get()._field_index.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1a75ec478_Var>>()) {
			_case_begin_1aa32371d:;
			{
				jule::Ptr<_1a75ec478_Var> _23917_i = _22327_m.get()._field_index.get()._field_model.operator jule::Ptr<_1a75ec478_Var>();
				if (_23917_i.get()._field_mutable || (_23917_i.get()._field_iter_relation == nullptr)) {
					goto _match_end_1aa323652;
				}
				{
					auto &_match_expr{ _22327_m.get()._field_expr.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1a75ec478_Var>>()) {
						_case_begin_1aa324e06:;
						{
							jule::Ptr<_1a75ec478_Var> _24521_r = _22327_m.get()._field_expr.get()._field_model.operator jule::Ptr<_1a75ec478_Var>();
							if (_23917_i.get()._field_iter_relation.get()._field_range == _24521_r) {
								(*((*_self_)._field_model))=jule::Any(jule::new_ptr<_1a7d538d2_UnsafeIndexingExprModel>(_1a7d538d2_UnsafeIndexingExprModel(_22327_m)));
							}
						}
					}
					_match_end_1aa324da1:;
				}
			}
		}
		_match_end_1aa323652:;
	}
}



inline void _1a7d6aa81_anon_func(_1a7d67d69_ExprOptimizer* _self_,jule::Ptr<_1a641c046_AnonFnExprModel> _25628_m) {
	_1a7d69d16_scope(&(*_self_), _25628_m.get()._field_func.get()._field_scope);
}



inline void _1a7d6ad06_map(_1a7d67d69_ExprOptimizer* _self_,jule::Ptr<_1a641c871_MapExprModel> _26022_m) {
	{
		auto &expr = _26022_m.get()._field_entries;
		auto it = expr.begin();
		_iter_begin_1aa327733:;
		if (it != expr.end()) {
			jule::Ptr<_1a641c3ed_KeyValPairExprModel> _1aa327887_pair = *it;
			{
				static__1a7d68793_optimize(_1aa327887_pair.get()._field_key);
				static__1a7d68793_optimize(_1aa327887_pair.get()._field_val);
			}
			_iter_next_1aa327733:;
			++it;
			goto _iter_begin_1aa327733;
		}
		_iter_end_1aa327733:;
	}
}



inline void _1a7d6b07b_slicing(_1a7d67d69_ExprOptimizer* _self_,jule::Ptr<_1a641cdb0_SlicingExprModel> _26726_m) {
	static__1a7d68793_optimize(_26726_m.get()._field_expr);
	static__1a7d68793_optimize(_26726_m.get()._field_left);
	if (_26726_m.get()._field_right != jule::Any(jule::Any(nullptr))) {
		static__1a7d68793_optimize(_26726_m.get()._field_right);
	}
}



inline void _1a7d6b301_trait_sub(_1a7d67d69_ExprOptimizer* _self_,jule::Ptr<_1a641d3ee_TraitSubIdentExprModel> _27528_m) {
	static__1a7d68793_optimize(_27528_m.get()._field_expr);
}



inline void _1a7d6b576_structure_sub(_1a7d67d69_ExprOptimizer* _self_,jule::Ptr<_1a641db6e_StructSubIdentExprModel> _27932_m) {
	static__1a7d68793_optimize(_27932_m.get()._field_expr.get()._field_model);
}



inline void _1a7d6b7eb_common_sub(_1a7d67d69_ExprOptimizer* _self_,jule::Ptr<_1a641ed3a_CommonSubIdentExprModel> _28329_m) {
	static__1a7d68793_optimize(_28329_m.get()._field_expr);
}



inline void _1a7d6ba71_tuple(_1a7d67d69_ExprOptimizer* _self_,jule::Ptr<_1a6420115_TupleExprModel> _28724_m) {
	{
		auto &expr = _28724_m.get()._field_datas;
		auto it = expr.begin();
		_iter_begin_1aa32c606:;
		if (it != expr.end()) {
			jule::Ptr<_1a7648b67_Data> _1aa32c75a_d = *it;
			{
				static__1a7d68793_optimize(_1aa32c75a_d.get()._field_model);
			}
			_iter_next_1aa32c606:;
			++it;
			goto _iter_begin_1aa32c606;
		}
		_iter_end_1aa32c606:;
	}
}



inline void _1a7d6bce6_new_call(_1a7d67d69_ExprOptimizer* _self_,jule::Ptr<_1a6421105_BuiltinNewCallExprModel> _29327_m) {
	if (_29327_m.get()._field_init != jule::Any(jule::Any(nullptr))) {
		static__1a7d68793_optimize(_29327_m.get()._field_init);
	}
}



inline void _1a7d6c06b_out_call(_1a7d67d69_ExprOptimizer* _self_,jule::Ptr<_1a6420511_BuiltinOutCallExprModel> _29927_m) {
	static__1a7d68793_optimize(_29927_m.get()._field_expr);
}



inline void _1a7d6c2e1_outln_call(_1a7d67d69_ExprOptimizer* _self_,jule::Ptr<_1a64208eb_BuiltinOutlnCallExprModel> _30329_m) {
	static__1a7d68793_optimize(_30329_m.get()._field_expr);
}



inline void _1a7d6c566_panic_call(_1a7d67d69_ExprOptimizer* _self_,jule::Ptr<_1a64214e0_BuiltinPanicCallExprModel> _30729_m) {
	static__1a7d68793_optimize(_30729_m.get()._field_expr);
}



inline void _1a7d6c7db_assert_call(_1a7d67d69_ExprOptimizer* _self_,jule::Ptr<_1a6421996_BuiltinAssertCallExprModel> _31130_m) {
	static__1a7d68793_optimize(_31130_m.get()._field_expr);
}



inline void _1a7d6ca61_error_call(_1a7d67d69_ExprOptimizer* _self_,jule::Ptr<_1a6422722_BuiltinErrorCallExprModel> _31529_m) {
	static__1a7d68793_optimize(_31529_m.get()._field_err);
}



inline void _1a7d6ccd6_make_call(_1a7d67d69_ExprOptimizer* _self_,jule::Ptr<_1a6421e4c_BuiltinMakeCallExprModel> _31928_m) {
	if (_31928_m.get()._field_len != jule::Any(jule::Any(nullptr))) {
		static__1a7d68793_optimize(_31928_m.get()._field_len);
	}
	if (_31928_m.get()._field_cap != jule::Any(jule::Any(nullptr))) {
		static__1a7d68793_optimize(_31928_m.get()._field_cap);
	}
}



inline void _1a7d6d05b_append_call(_1a7d67d69_ExprOptimizer* _self_,jule::Ptr<_1a6422337_BuiltinAppendCallExprModel> _32830_m) {
	static__1a7d68793_optimize(_32830_m.get()._field_dest);
	static__1a7d68793_optimize(_32830_m.get()._field_elements);
}



inline void _1a7d6d2d1_clone_call(_1a7d67d69_ExprOptimizer* _self_,jule::Ptr<_1a6420c1a_BuiltinCloneCallExprModel> _33329_m) {
	static__1a7d68793_optimize(_33329_m.get()._field_expr);
}



inline void _1a7d6d556_sizeof(_1a7d67d69_ExprOptimizer* _self_,jule::Ptr<_1a64229ec_SizeofExprModel> _33725_m) {
	static__1a7d68793_optimize(_33725_m.get()._field_expr);
}



inline void _1a7d6d7cb_alignof(_1a7d67d69_ExprOptimizer* _self_,jule::Ptr<_1a642316d_AlignofExprModel> _34126_m) {
	static__1a7d68793_optimize(_34126_m.get()._field_expr);
}



inline void _1a7d6da51_integrated_to_str(_1a7d67d69_ExprOptimizer* _self_,jule::Ptr<_1a6423646_IntegratedToStrExprModel> _34536_m) {
	static__1a7d68793_optimize(_34536_m.get()._field_expr);
}



inline void _1a7d6dc2c_do(_1a7d67d69_ExprOptimizer* _self_) {
	{
		auto &_match_expr{ (*((*_self_)._field_model)) };
		
		if (_match_expr.type_is<jule::Ptr<_1a7648b67_Data>>()) {
			_case_begin_1aa337e5d:;
			{
				(*((*_self_)._field_model))=(*((*_self_)._field_model)).operator jule::Ptr<_1a7648b67_Data>().get()._field_model;
				_1a7d6dc2c_do(&(*_self_));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6419571_BinopExprModel>>()) {
			_case_begin_1aa338249:;
			{
				_1a7d68d26_binary(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a6419571_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6419928_UnaryExprModel>>()) {
			_case_begin_1aa3382b0:;
			{
				_1a7d6909b_unary(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a6419928_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a641a1cb_StructLitExprModel>>()) {
			_case_begin_1aa338326:;
			{
				_1a7d69321_structure_lit(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a641a1cb_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a641a50b_AllocStructLitExprModel>>()) {
			_case_begin_1aa33838c:;
			{
				_1a7d69596_alloc_structure(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a641a50b_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a641aa39_CastingExprModel>>()) {
			_case_begin_1aa338403:;
			{
				_1a7d6981b_casting(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a641aa39_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a641b364_FnCallExprModel>>()) {
			_case_begin_1aa338469:;
			{
				_1a7d6a08b_func_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a641b364_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a641b71b_SliceExprModel>>()) {
			_case_begin_1aa3384d0:;
			{
				_1a7d6a311_slice(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a641b71b_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a641e4bb_ArrayExprModel>>()) {
			_case_begin_1aa338546:;
			{
				_1a7d6a586_array(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a641e4bb_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a641bb8e_IndexingExprModel>>()) {
			_case_begin_1aa3385ac:;
			{
				_1a7d6a80b_indexing(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a641bb8e_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a641c046_AnonFnExprModel>>()) {
			_case_begin_1aa338634:;
			{
				_1a7d6aa81_anon_func(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a641c046_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a641c871_MapExprModel>>()) {
			_case_begin_1aa3386ab:;
			{
				_1a7d6ad06_map(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a641c871_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a641cdb0_SlicingExprModel>>()) {
			_case_begin_1aa338733:;
			{
				_1a7d6b07b_slicing(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a641cdb0_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a641d3ee_TraitSubIdentExprModel>>()) {
			_case_begin_1aa3387aa:;
			{
				_1a7d6b301_trait_sub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a641d3ee_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a641db6e_StructSubIdentExprModel>>()) {
			_case_begin_1aa338832:;
			{
				_1a7d6b576_structure_sub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a641db6e_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a641ed3a_CommonSubIdentExprModel>>()) {
			_case_begin_1aa3388a9:;
			{
				_1a7d6b7eb_common_sub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a641ed3a_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6420115_TupleExprModel>>()) {
			_case_begin_1aa338931:;
			{
				_1a7d6ba71_tuple(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a6420115_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6420511_BuiltinOutCallExprModel>>()) {
			_case_begin_1aa3389a8:;
			{
				_1a7d6c06b_out_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a6420511_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a64208eb_BuiltinOutlnCallExprModel>>()) {
			_case_begin_1aa338a30:;
			{
				_1a7d6c2e1_outln_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a64208eb_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6421105_BuiltinNewCallExprModel>>()) {
			_case_begin_1aa338aa7:;
			{
				_1a7d6bce6_new_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a6421105_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a64214e0_BuiltinPanicCallExprModel>>()) {
			_case_begin_1aa338b2e:;
			{
				_1a7d6c566_panic_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a64214e0_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6421996_BuiltinAssertCallExprModel>>()) {
			_case_begin_1aa338ba6:;
			{
				_1a7d6c7db_assert_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a6421996_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6422722_BuiltinErrorCallExprModel>>()) {
			_case_begin_1aa338c2d:;
			{
				_1a7d6ca61_error_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a6422722_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6421e4c_BuiltinMakeCallExprModel>>()) {
			_case_begin_1aa338ca5:;
			{
				_1a7d6ccd6_make_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a6421e4c_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6422337_BuiltinAppendCallExprModel>>()) {
			_case_begin_1aa338d2c:;
			{
				_1a7d6d05b_append_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a6422337_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6420c1a_BuiltinCloneCallExprModel>>()) {
			_case_begin_1aa338da4:;
			{
				_1a7d6d2d1_clone_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a6420c1a_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a64229ec_SizeofExprModel>>()) {
			_case_begin_1aa338e2b:;
			{
				_1a7d6d556_sizeof(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a64229ec_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a642316d_AlignofExprModel>>()) {
			_case_begin_1aa338ea3:;
			{
				_1a7d6d7cb_alignof(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a642316d_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6423646_IntegratedToStrExprModel>>()) {
			_case_begin_1aa33902a:;
			{
				_1a7d6da51_integrated_to_str(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a6423646_IntegratedToStrExprModel>());
			}
		}
		_match_end_1aa337e08:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, _1a7d67d69_ExprOptimizer _Src) {
	_Stream << "ExprOptimizer{";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a7d6eb84_Optimizer> static__1a7d700a2_new(jule::Ptr<_1b737ec89_IR>& _2128_ir) {
	return jule::new_ptr<_1a7d6eb84_Optimizer>(_1a7d6eb84_Optimizer(_2128_ir));
}



inline void _1a7d70327_optimize_global(_1a7d6eb84_Optimizer* _self_,jule::Ptr<_1a75ec478_Var>& _2739_v) {
	if ((!(_2739_v.get()._field_cpp_linked))) {
		static__1a7d68793_optimize(_2739_v.get()._field_value.get()._field_data.get()._field_model);
	}
}



inline void _1a7d7059c_optimize_function(_1a7d6eb84_Optimizer* _self_,jule::Ptr<_1a6426a45_Fn>& _3341_func) {
	if (_3341_func.get()._field_cpp_linked) {
		return;
	}
	{
		auto &expr = _3341_func.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1aa350096:;
		if (it != expr.end()) {
			jule::Ptr<_1a6429be1_FnIns> _1aa3503a4_ins = *it;
			{
				jule::Ptr<_1a7d626b0_ScopeOptimizer> _3821_so = static__1a7d62b88_new(_1aa3503a4_ins.get()._field_scope);
				_1a7d65b69_optimize(_3821_so.ptr());
			}
			_iter_next_1aa350096:;
			++it;
			goto _iter_begin_1aa350096;
		}
		_iter_end_1aa350096:;
	}
}



inline void _1a7d70822_optimize_struct(_1a7d6eb84_Optimizer* _self_,jule::Ptr<_1a64147be_Struct>& _4339_s) {
	if (_4339_s.get()._field_cpp_linked) {
		return;
	}
	{
		auto &expr = _4339_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1aa351828:;
		if (it != expr.end()) {
			jule::Ptr<_1a641744d_StructIns> _1aa351b36_ins = *it;
			{
				{
					auto &expr = _1aa351b36_ins.get()._field_fields;
					auto it = expr.begin();
					_iter_begin_1aa3522eb:;
					if (it != expr.end()) {
						jule::Ptr<_1a6416ae0_FieldIns> _1aa3523b7_f = *it;
						{
							if ((_1aa3523b7_f.get()._field_default != nullptr)) {
								static__1a7d68793_optimize(_1aa3523b7_f.get()._field_default.get()._field_model);
							}
						}
						_iter_next_1aa3522eb:;
						++it;
						goto _iter_begin_1aa3522eb;
					}
					_iter_end_1aa3522eb:;
				}
				{
					auto &expr = _1aa351b36_ins.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1aa352a6b:;
					if (it != expr.end()) {
						jule::Ptr<_1a6426a45_Fn> _1aa3524a5_m = *it;
						{
							_1a7d7059c_optimize_function(&(*_self_), _1aa3524a5_m);
						}
						_iter_next_1aa352a6b:;
						++it;
						goto _iter_begin_1aa352a6b;
					}
					_iter_end_1aa352a6b:;
				}
			}
			_iter_next_1aa351828:;
			++it;
			goto _iter_begin_1aa351828;
		}
		_iter_end_1aa351828:;
	}
}



inline void _1a7d70a97_optimize_globals(_1a7d6eb84_Optimizer* _self_,jule::Ptr<_1a75cbe4c_Package>& _5940_p) {
	{
		auto &expr = _5940_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1aa354001:;
		if (it != expr.end()) {
			jule::Ptr<_1a76439db_SymbolTable> _1aa354155_f = *it;
			{
				{
					auto &expr = _1aa354155_f.get()._field_vars;
					auto it = expr.begin();
					_iter_begin_1aa354793:;
					if (it != expr.end()) {
						jule::Ptr<_1a75ec478_Var> _1aa35485e_v = *it;
						{
							_1a7d70327_optimize_global(&(*_self_), _1aa35485e_v);
						}
						_iter_next_1aa354793:;
						++it;
						goto _iter_begin_1aa354793;
					}
					_iter_end_1aa354793:;
				}
			}
			_iter_next_1aa354001:;
			++it;
			goto _iter_begin_1aa354001;
		}
		_iter_end_1aa354001:;
	}
}



inline void _1a7d70d1c_optimize_functions(_1a7d6eb84_Optimizer* _self_,jule::Ptr<_1a75cbe4c_Package>& _6742_p) {
	{
		auto &expr = _6742_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1aa355662:;
		if (it != expr.end()) {
			jule::Ptr<_1a76439db_SymbolTable> _1aa3557b6_f = *it;
			{
				{
					auto &expr = _1aa3557b6_f.get()._field_funcs;
					auto it = expr.begin();
					_iter_begin_1aa355e04:;
					if (it != expr.end()) {
						jule::Ptr<_1a6426a45_Fn> _1aa355ec0_func = *it;
						{
							_1a7d7059c_optimize_function(&(*_self_), _1aa355ec0_func);
						}
						_iter_next_1aa355e04:;
						++it;
						goto _iter_begin_1aa355e04;
					}
					_iter_end_1aa355e04:;
				}
			}
			_iter_next_1aa355662:;
			++it;
			goto _iter_begin_1aa355662;
		}
		_iter_end_1aa355662:;
	}
}



inline void _1a7d71092_optimize_structs(_1a7d6eb84_Optimizer* _self_,jule::Ptr<_1a75cbe4c_Package>& _7540_p) {
	{
		auto &expr = _7540_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1aa356c90:;
		if (it != expr.end()) {
			jule::Ptr<_1a76439db_SymbolTable> _1aa356db1_f = *it;
			{
				{
					auto &expr = _1aa356db1_f.get()._field_structs;
					auto it = expr.begin();
					_iter_begin_1aa3574ee:;
					if (it != expr.end()) {
						jule::Ptr<_1a64147be_Struct> _1aa3575ba_s = *it;
						{
							_1a7d70822_optimize_struct(&(*_self_), _1aa3575ba_s);
						}
						_iter_next_1aa3574ee:;
						++it;
						goto _iter_begin_1aa3574ee;
					}
					_iter_end_1aa3574ee:;
				}
			}
			_iter_next_1aa356c90:;
			++it;
			goto _iter_begin_1aa356c90;
		}
		_iter_end_1aa356c90:;
	}
}



inline void _1a7d71317_optimize_package(_1a7d6eb84_Optimizer* _self_,jule::Ptr<_1a75cbe4c_Package>& _8340_p) {
	_1a7d70a97_optimize_globals(&(*_self_), _8340_p);
	_1a7d70d1c_optimize_functions(&(*_self_), _8340_p);
	_1a7d71092_optimize_structs(&(*_self_), _8340_p);
}



inline void _1a7d714e3_optimize(_1a7d6eb84_Optimizer* _self_) {
	{
		
		if (_1e829c4c2_OPT_COND || _1e829bbb9_OPT_APPEND || _1e829b878_OPT_COPY) {
			_case_begin_1aa359ba5:;
			{
				goto _match_end_1aa359655;
			}
		}
		else {
			_case_begin_1aa359721:;
			{
				return;
			}
		}
		_match_end_1aa359655:;
	}
	{
		auto &expr = (*_self_)._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1aa35a090:;
		if (it != expr.end()) {
			jule::Ptr<_1a75c928a_ImportInfo> _1aa35a2e3_u = *it;
			{
				if ((!(_1aa35a2e3_u.get()._field_cpp_linked))) {
					_1a7d71317_optimize_package(&(*_self_), _1aa35a2e3_u.get()._field_package);
				}
			}
			_iter_next_1aa35a090:;
			++it;
			goto _iter_begin_1aa35a090;
		}
		_iter_end_1aa35a090:;
	}
	_1a7d71317_optimize_package(&(*_self_), (*_self_)._field_ir.get()._field_main);
}







std::ostream &operator<<(std::ostream &_Stream, _1a7d6eb84_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline jule::U64 _1d0a3da28_unix(_1d0a3d63d_AbsTime* _self_) {
	jule::Bool _5617_leap = false;
	jule::U64 _5717_y = ((*_self_)._field_year - 1900LLU);
	jule::U64 _5817_m = ((*_self_)._field_month - 1LLU);
	if ((_5817_m >= 12LLU) || (_5817_m < 0LLU)) {
		jule::U64 _6021_adj = (_5817_m / 12LLU);
		_5817_m%=12LL;
		if ((_5817_m < 0LLU)) {
			(_6021_adj)--;
			_5817_m+=12LLU;
		}
		_5717_y+=_6021_adj;
	}
	jule::U64 _6817_t = _1d0a431d1_unix_year_to_seconds(_5717_y,_5617_leap);
	_6817_t+=static_cast<jule::U64>(_1d0a43566_unix_month_to_seconds(_5817_m,_5617_leap));
	_6817_t+=static_cast<jule::U64>(86400LLU * static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(((*_self_)._field_day - 1LLU)))));
	_6817_t+=static_cast<jule::U64>(3600LLU * (*_self_)._field_hour);
	_6817_t+=static_cast<jule::U64>(60LLU * (*_self_)._field_minute);
	_6817_t+=(*_self_)._field_second;
	return _6817_t;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0a3d63d_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "day:" << _Src._field_day << ", ";
	_Stream << "week_day:" << _Src._field_week_day << ", ";
	_Stream << "year_day:" << _Src._field_year_day << ", ";
	_Stream << "month:" << _Src._field_month << ", ";
	_Stream << "year:" << _Src._field_year << ", ";
	_Stream << "second:" << _Src._field_second << ", ";
	_Stream << "minute:" << _Src._field_minute << ", ";
	_Stream << "hour:" << _Src._field_hour;
	_Stream << "}";
	return _Stream;
}



inline _1d0a3dd14_Time static__1d0a3e1aa_unix(jule::U64 _9124_sec) {
	return _1d0a3dd14_Time(_9124_sec);
}



inline _1d0a3dd14_Time static__1d0a3e3a8_now(void) {
	return static__1d0a3e1aa_unix(static_cast<jule::U64>(_1d0a42d90_unix()));
}



inline jule::U64 _1d0a3e809_unix(_1d0a3dd14_Time* _self_) {
	return (*_self_)._field_sec;
}



inline jule::U64 _1d0a3ea6d_day(_1d0a3dd14_Time* _self_) {
	return _1d0a409e7_abs(&(*_self_))._field_day;
}



inline jule::U64 _1d0a3ecd2_month(_1d0a3dd14_Time* _self_) {
	return _1d0a409e7_abs(&(*_self_))._field_month;
}



inline jule::U64 _1d0a40046_year(_1d0a3dd14_Time* _self_) {
	return _1d0a409e7_abs(&(*_self_))._field_year;
}



inline jule::U64 _1d0a402aa_second(_1d0a3dd14_Time* _self_) {
	return _1d0a409e7_abs(&(*_self_))._field_second;
}



inline jule::U64 _1d0a4051e_minute(_1d0a3dd14_Time* _self_) {
	return _1d0a409e7_abs(&(*_self_))._field_minute;
}



inline jule::U64 _1d0a40783_hour(_1d0a3dd14_Time* _self_) {
	return _1d0a409e7_abs(&(*_self_))._field_hour;
}



inline _1d0a3d63d_AbsTime _1d0a409e7_abs(_1d0a3dd14_Time* _self_) {
	jule::U64 _12713_secs = ((*_self_)._field_sec - 951868800LLU);
	jule::U64 _12817_days = (_12713_secs / 86400LLU);
	jule::U64 _12917_rem_secs = (_12713_secs % 86400LL);
	if ((_12917_rem_secs < 0LLU)) {
		_12917_rem_secs+=86400LLU;
		(_12817_days)--;
	}
	jule::U64 _13517_qc_cycles = (_12817_days / 146097LLU);
	jule::U64 _13617_rem_days = (_12817_days % 146097LL);
	if ((_13617_rem_days < 0LLU)) {
		_13617_rem_days+=146097LLU;
		(_13517_qc_cycles)--;
	}
	jule::U64 _14217_c_cycles = (_13617_rem_days / 36524LLU);
	if ((_14217_c_cycles == 4LLU)) {
		(_14217_c_cycles)--;
	}
	_13617_rem_days-=static_cast<jule::U64>((_14217_c_cycles * 36524LLU));
	jule::U64 _14817_q_cycles = (_13617_rem_days / 1461LLU);
	if ((_14817_q_cycles == 25LLU)) {
		(_14817_q_cycles)--;
	}
	_13617_rem_days-=static_cast<jule::U64>((_14817_q_cycles * 1461LLU));
	jule::U64 _15417_rem_years = (_13617_rem_days / 365LLU);
	if ((_15417_rem_years == 4LLU)) {
		(_15417_rem_years)--;
	}
	_13617_rem_days-=static_cast<jule::U64>((_15417_rem_years * 365LLU));
	jule::U64 _16017_leap = static_cast<jule::U64>(0LLU);
	if ((_15417_rem_years == 0LLU) && ((_14817_q_cycles > 0LLU) || (_14217_c_cycles == 0LLU))) {
		_16017_leap=1LLU;
	}
	jule::U64 _16417_y_day = ((_13617_rem_days + 31LLU) + 28LLU) + _16017_leap;
	if (_16417_y_day >= static_cast<jule::U64>(static_cast<jule::U64>(365LLU + _16017_leap))) {
		_16417_y_day-=static_cast<jule::U64>(365LLU + _16017_leap);
	}
	jule::U64 _16917_months = 0LLU;
	for (; _1d0a3cb8c_MDAYS[static_cast<jule::I64>(_16917_months)] <= _13617_rem_days; (_16917_months)++) {
		{
			_13617_rem_days-=_1d0a3cb8c_MDAYS[static_cast<jule::I64>(_16917_months)];
		}
	_iter_next_1aa3810c7:;
	}
	_iter_end_1aa3810c7:;
	_1d0a3d63d_AbsTime _17417_t = _1d0a3d63d_AbsTime();
	_17417_t._field_year=static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_15417_rem_years + static_cast<jule::U64>(static_cast<jule::U64>(4LLU * _14817_q_cycles)))) + static_cast<jule::U64>(static_cast<jule::U64>(100LLU * _14217_c_cycles)))) + static_cast<jule::U64>(static_cast<jule::U64>(400LLU * _13517_qc_cycles)))) + 100LLU));
	_17417_t._field_month=static_cast<jule::U64>((_16917_months + 2LLU));
	if ((_17417_t._field_month >= 12LLU)) {
		_17417_t._field_month-=12LLU;
		(_17417_t._field_year)++;
	}
	_17417_t._field_month+=1LLU;
	_17417_t._field_year+=1900LLU;
	_17417_t._field_day=static_cast<jule::U64>((_13617_rem_days + 1LLU));
	_17417_t._field_week_day=static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(3LLU + _12817_days))) % 7LL));
	if ((_17417_t._field_week_day < 0LLU)) {
		_17417_t._field_week_day+=7LLU;
	}
	_17417_t._field_year_day=_16417_y_day;
	_17417_t._field_hour=static_cast<jule::U64>((_12917_rem_secs / 3600LLU));
	_17417_t._field_minute=static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>((_12917_rem_secs / 60LLU))) % 60LL));
	_17417_t._field_second=static_cast<jule::U64>((_12917_rem_secs % 60LL));
	return _17417_t;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0a3dd14_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::I64 static__1d0a41212_nanoseconds(jule::I64 _22731_d) {
	return static_cast<jule::I64>((_22731_d * 1LL));
}



inline jule::I64 static__1d0a414a9_microseconds(jule::I64 _23232_d) {
	return static_cast<jule::I64>((_23232_d * 1000LL));
}



inline jule::I64 static__1d0a41751_milliseconds(jule::I64 _23732_d) {
	return static_cast<jule::I64>((_23732_d * 1000000LL));
}



inline jule::I64 static__1d0a419e8_seconds(jule::I64 _24227_d) {
	return static_cast<jule::I64>((_24227_d * 1000000000LL));
}



inline jule::I64 static__1d0a41c90_minutes(jule::I64 _24727_d) {
	return static_cast<jule::I64>((_24727_d * 60000000000LL));
}



inline jule::I64 static__1d0a42037_hours(jule::I64 _25225_d) {
	return static_cast<jule::I64>((_25225_d * 3600000000000LL));
}







std::ostream &operator<<(std::ostream &_Stream, _1d0a40cd3_Duration _Src) {
	_Stream << "Duration{";
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a7bdc5a1_TestCoder> static__1a7bdc78d_new(jule::Ptr<_1d0a43aa5_ObjectCoder>& _2828_oc) {
	return jule::new_ptr<_1a7bdc5a1_TestCoder>(_1a7bdc5a1_TestCoder(jule::Ptr<_1a641744d_StructIns>(),jule::Ptr<_1a6426a45_Fn>(),jule::Ptr<_1a6426a45_Fn>(),jule::Ptr<_1a6426a45_Fn>(),_2828_oc));
}



inline jule::Ptr<_1a75c928a_ImportInfo> _1a7bdc8c0_find_testing_package(_1a7bdc5a1_TestCoder* _self_) {
	{
		auto &expr = (*_self_)._field_oc.get()._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1aa3bd5cb:;
		if (it != expr.end()) {
			jule::Ptr<_1a75c928a_ImportInfo> _1aa3bd730_imp = *it;
			{
				if ((_1aa3bd730_imp.get()._field_link_path == jule::Str("std::testing", 12))) {
					return _1aa3bd730_imp;
				}
			}
			_iter_next_1aa3bd5cb:;
			++it;
			goto _iter_begin_1aa3bd5cb;
		}
		_iter_end_1aa3bd5cb:;
	}
	return nullptr;
}



inline void _1a7bdcabd_append_test(_1a7bdc5a1_TestCoder* _self_,jule::Str& _4335_obj,jule::Ptr<_1a6429be1_FnIns> _4349_f) {
	_4335_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
	_4335_obj+=_1a7c20095_call_tm_reset(&(*_self_));
	_4335_obj+=jule::Str(";\n", 2);
	_4335_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
	_4335_obj+=jule::Str("std::cout << \">>> TEST RUNNING: \";\n", 35);
	_4335_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
	_4335_obj+=jule::Str("jule::outln(", 12);
	_4335_obj+=_1a7d7a5c9_cstr_lit(static_cast<jule::Slice<jule::U8>>(_4349_f.get()._field_decl.get()._field_ident));
	_4335_obj+=jule::Str(");\n", 3);
	_4335_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
	_4335_obj+=static__1a7d7e710_func_ins(_4349_f);
	_4335_obj+=jule::Str("(_t);\n", 6);
	_4335_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
	_4335_obj+=jule::Str("post_test();\n", 13);
}



inline void _1a7c1eb22_append_package_tests(_1a7bdc5a1_TestCoder* _self_,jule::Str& _6044_obj,jule::Ptr<_1a75cbe4c_Package>& _6059_p) {
	{
		auto &expr = _6059_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1aa3c424c:;
		if (it != expr.end()) {
			jule::Ptr<_1a76439db_SymbolTable> _1aa3c9285_file = *it;
			{
				{
					auto &expr = _1aa3c9285_file.get()._field_funcs;
					auto it = expr.begin();
					_iter_begin_1aa3c98b2:;
					if (it != expr.end()) {
						jule::Ptr<_1a6426a45_Fn> _1aa3c997d_f = *it;
						{
							if (_1d0a4ee02_has_directive(_1aa3c997d_f.get()._field_directives,jule::Str("test", 4))) {
								_1a7bdcabd_append_test(&(*_self_), _6044_obj,_1aa3c997d_f.get()._field_instances[0LL]);
							}
						}
						_iter_next_1aa3c98b2:;
						++it;
						goto _iter_begin_1aa3c98b2;
					}
					_iter_end_1aa3c98b2:;
				}
			}
			_iter_next_1aa3c424c:;
			++it;
			goto _iter_begin_1aa3c424c;
		}
		_iter_end_1aa3c424c:;
	}
}



inline jule::Bool _1a7c1ed31_ready_testing_package(_1a7bdc5a1_TestCoder* _self_) {
	jule::Ptr<_1a75c928a_ImportInfo> _7117_p = _1a7bdc8c0_find_testing_package(&(*_self_));
	if ((_7117_p == nullptr)) {
		return false;
	}
	(*_self_)._field_t=_1a75ca6ba_find_struct(_7117_p.ptr(), jule::Str("T", 1),false).get()._field_instances[0LL];
	(*_self_)._field_tm_reset=_1a64183d8_find_method((*_self_)._field_t.ptr(), jule::Str("reset", 5),false);
	(*_self_)._field_tm_failed=_1a64183d8_find_method((*_self_)._field_t.ptr(), jule::Str("failed", 6),false);
	(*_self_)._field_tm_skipped=_1a64183d8_find_method((*_self_)._field_t.ptr(), jule::Str("skipped", 7),false);
	return true;
}



inline jule::Str _1a7c20095_call_tm_reset(_1a7bdc5a1_TestCoder* _self_) {
	jule::Str _8717_obj = static__1a7d7e468_func((*_self_)._field_tm_reset);
	_8717_obj+=jule::Str("(_t)", 4);
	return _8717_obj;
}



inline jule::Str _1a7c20309_call_tm_failed(_1a7bdc5a1_TestCoder* _self_) {
	jule::Str _9317_obj = static__1a7d7e468_func((*_self_)._field_tm_failed);
	_9317_obj+=jule::Str("(_t)", 4);
	return _9317_obj;
}



inline jule::Str _1a7c2056d_call_tm_skipped(_1a7bdc5a1_TestCoder* _self_) {
	jule::Str _9917_obj = static__1a7d7e468_func((*_self_)._field_tm_skipped);
	_9917_obj+=jule::Str("(_t)", 4);
	return _9917_obj;
}



inline void _1a7c207e3_serialize(_1a7bdc5a1_TestCoder* _self_,jule::Str& _10637_obj) {
	_10637_obj+=jule::Str("\nvoid test_point(void) {\n", 25);
	_1d09aee72_add_indent((*_self_)._field_oc.ptr());
	_10637_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
	if ((!(_1a7c1ed31_ready_testing_package(&(*_self_))))) {
		_10637_obj+=jule::Str("}", 1);
		_1d0a4416b_done_indent((*_self_)._field_oc.ptr());
		return;
	}
	_10637_obj+=static__1d0a51860_as_sptr(static__1d0a53752_structure_ins((*_self_)._field_t));
	_10637_obj+=jule::Str(" _t = jule::new_ptr<", 20);
	_10637_obj+=static__1d0a53752_structure_ins((*_self_)._field_t);
	_10637_obj+=jule::Str(">(); _t.ref = nullptr;\n", 23);
	_10637_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
	_10637_obj+=jule::Str("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47);
	_10637_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
	_10637_obj+=jule::Str("auto post_test = [&](void) {\n", 29);
	_1d09aee72_add_indent((*_self_)._field_oc.ptr());
	_10637_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
	_10637_obj+=jule::Str("++total;\n", 9);
	_10637_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
	_10637_obj+=jule::Str("if (", 4);
	_10637_obj+=_1a7c20309_call_tm_failed(&(*_self_));
	_10637_obj+=jule::Str(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60);
	_10637_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
	_10637_obj+=jule::Str("else if (", 9);
	_10637_obj+=_1a7c2056d_call_tm_skipped(&(*_self_));
	_10637_obj+=jule::Str(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62);
	_10637_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
	_10637_obj+=jule::Str("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53);
	_1d0a4416b_done_indent((*_self_)._field_oc.ptr());
	_10637_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
	_10637_obj+=jule::Str("};\n", 3);
	_1a7c1eb22_append_package_tests(&(*_self_), _10637_obj,(*_self_)._field_oc.get()._field_ir.get()._field_main);
	_10637_obj+=jule::Str("\n\n", 2);
	_10637_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
	_10637_obj+=jule::Str("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154);
	_10637_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
	_10637_obj+=jule::Str("if (failed != 0) std::exit(1);\n", 31);
	_1d0a4416b_done_indent((*_self_)._field_oc.ptr());
	_10637_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
	_10637_obj+=jule::Str("}\n", 2);
}







std::ostream &operator<<(std::ostream &_Stream, _1a7bdc5a1_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tm_reset:" << _Src._field_tm_reset << ", ";
	_Stream << "tm_failed:" << _Src._field_tm_failed << ", ";
	_Stream << "tm_skipped:" << _Src._field_tm_skipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a7c5c962_ScopeCoder> static__1a7c644e6_new(jule::Ptr<_1d0a43aa5_ObjectCoder>& _4724_oc) {
	return jule::new_ptr<_1a7c5c962_ScopeCoder>(_1a7c5c962_ScopeCoder(_4724_oc));
}



inline jule::Str _1a7c7ec92_range_index_iter(_1a7c5c962_ScopeCoder* _self_,jule::Ptr<_1a7561c6c_RangeIter>& _5340_it) {
	jule::Str _5413_begin = static__1a7d80a74_iter_begin(static_cast<jule::U64>(static_cast<jule::U64>(_5340_it)));
	jule::Str _5513_next = static__1a7d810b3_iter_next(static_cast<jule::U64>(static_cast<jule::U64>(_5340_it)));
	jule::Str _5717_obj = jule::Str("{\n", 2);
	_1d09aee72_add_indent((*_self_)._field_oc.ptr());
	_5717_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
	_5717_obj+=jule::Str("auto ", 5);
	if (_1e829b878_OPT_COPY && _1a7d5c644_is_copy_optimizable(_5340_it.get()._field_expr)) {
		_5717_obj+=jule::Str("&", 1);
	}
	_5717_obj+=jule::Str("expr = ", 7);
	_5717_obj+=_1a7d78c37_model((*_self_)._field_oc.get()._field_ec.ptr(), _5340_it.get()._field_expr.get()._field_model);
	_5717_obj+=jule::Str(";\n", 2);
	_5717_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
	_5717_obj+=jule::Str("auto it = expr.begin();\n", 24);
	_5717_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
	_5717_obj+=_5413_begin;
	_5717_obj+=jule::Str(":;\n", 3);
	_5717_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
	_5717_obj+=jule::Str("if (it != expr.end()) {\n", 24);
	_1d09aee72_add_indent((*_self_)._field_oc.ptr());
	_5717_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
	if ((_5340_it.get()._field_key_a != nullptr)) {
		_5717_obj+=_1d0a46c2e_var_init_expr((*_self_)._field_oc.ptr(), _5340_it.get()._field_key_a,jule::Str("it - expr.begin()", 17));
		_5717_obj+=jule::Str("\n", 1);
		_5717_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
	}
	if ((_5340_it.get()._field_key_b != nullptr)) {
		if (_1e829b878_OPT_COPY) {
			_5340_it.get()._field_key_b.get()._field_reference=_1a7d5c776_is_iter_copy_optimizable(_5340_it.get()._field_expr,_5340_it.get()._field_key_b);
		}
		_5717_obj+=_1d0a46c2e_var_init_expr((*_self_)._field_oc.ptr(), _5340_it.get()._field_key_b,jule::Str("*it", 3));
		_5717_obj+=jule::Str("\n", 1);
		_5717_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
	}
	_5717_obj+=_1a7ca1379_scope(&(*_self_), _5340_it.get()._field_scope);
	_5717_obj+=jule::Str("\n", 1);
	_5717_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
	_5717_obj+=_5513_next;
	_5717_obj+=jule::Str(":;\n", 3);
	_5717_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
	_5717_obj+=jule::Str("++it;\n", 6);
	_5717_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
	if ((_5340_it.get()._field_key_a != nullptr)) {
		_5717_obj+=static__1a7d807cc_var(_5340_it.get()._field_key_a);
		_5717_obj+=jule::Str("++;\n", 4);
		_5717_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
	}
	_5717_obj+=jule::Str("goto ", 5);
	_5717_obj+=_5413_begin;
	_5717_obj+=jule::Str(";\n", 2);
	_1d0a4416b_done_indent((*_self_)._field_oc.ptr());
	_5717_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
	_5717_obj+=jule::Str("}\n", 2);
	_5717_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
	_5717_obj+=static__1a7d80d1b_iter_end(static_cast<jule::U64>(static_cast<jule::U64>(_5340_it)));
	_5717_obj+=jule::Str(":;\n", 3);
	_1d0a4416b_done_indent((*_self_)._field_oc.ptr());
	_5717_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
	_5717_obj+=jule::Str("}", 1);
	return _5717_obj;
}



inline jule::Str _1a7c823e3_range_hashmap_iter(_1a7c5c962_ScopeCoder* _self_,jule::Ptr<_1a7561c6c_RangeIter>& _12342_it) {
	jule::Str _12413_begin = static__1a7d80a74_iter_begin(static_cast<jule::U64>(static_cast<jule::U64>(_12342_it)));
	jule::Str _12513_next = static__1a7d810b3_iter_next(static_cast<jule::U64>(static_cast<jule::U64>(_12342_it)));
	jule::Str _12717_obj = jule::Str("{\n", 2);
	_1d09aee72_add_indent((*_self_)._field_oc.ptr());
	_12717_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
	_12717_obj+=jule::Str("auto ", 5);
	if (_1e829b878_OPT_COPY && _1a7d5c644_is_copy_optimizable(_12342_it.get()._field_expr)) {
		_12717_obj+=jule::Str("&", 1);
	}
	_12717_obj+=jule::Str("expr = ", 7);
	_12717_obj+=_1a7d78c37_model((*_self_)._field_oc.get()._field_ec.ptr(), _12342_it.get()._field_expr.get()._field_model);
	_12717_obj+=jule::Str(";\n", 2);
	_12717_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
	_12717_obj+=jule::Str("auto it = expr.begin();\n", 24);
	_12717_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
	_12717_obj+=_12413_begin;
	_12717_obj+=jule::Str(":;\n", 3);
	_12717_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
	_12717_obj+=jule::Str("if (it != expr.end()) {\n", 24);
	_1d09aee72_add_indent((*_self_)._field_oc.ptr());
	_12717_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
	if ((_12342_it.get()._field_key_a != nullptr)) {
		if (_1e829b878_OPT_COPY) {
			_12342_it.get()._field_key_a.get()._field_reference=_1a7d5c776_is_iter_copy_optimizable(_12342_it.get()._field_expr,_12342_it.get()._field_key_a);
		}
		_12717_obj+=_1d0a46c2e_var_init_expr((*_self_)._field_oc.ptr(), _12342_it.get()._field_key_a,jule::Str("it->first", 9));
		_12717_obj+=jule::Str("\n", 1);
		_12717_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
	}
	if ((_12342_it.get()._field_key_b != nullptr)) {
		if (_1e829b878_OPT_COPY) {
			_12342_it.get()._field_key_b.get()._field_reference=_1a7d5c776_is_iter_copy_optimizable(_12342_it.get()._field_expr,_12342_it.get()._field_key_b);
		}
		_12717_obj+=_1d0a46c2e_var_init_expr((*_self_)._field_oc.ptr(), _12342_it.get()._field_key_b,jule::Str("it->second", 10));
		_12717_obj+=jule::Str("\n", 1);
		_12717_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
	}
	_12717_obj+=_1a7ca1379_scope(&(*_self_), _12342_it.get()._field_scope);
	_12717_obj+=jule::Str("\n", 1);
	_12717_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
	_12717_obj+=_12513_next;
	_12717_obj+=jule::Str(":;\n", 3);
	_12717_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
	_12717_obj+=jule::Str("++it;\n", 6);
	_12717_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
	_12717_obj+=jule::Str("goto ", 5);
	_12717_obj+=_12413_begin;
	_12717_obj+=jule::Str(";\n", 2);
	_1d0a4416b_done_indent((*_self_)._field_oc.ptr());
	_12717_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
	_12717_obj+=jule::Str("}\n", 2);
	_12717_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
	_12717_obj+=static__1a7d80d1b_iter_end(static_cast<jule::U64>(static_cast<jule::U64>(_12342_it)));
	_12717_obj+=jule::Str(":;\n", 3);
	_1d0a4416b_done_indent((*_self_)._field_oc.ptr());
	_12717_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
	_12717_obj+=jule::Str("}", 1);
	return _12717_obj;
}



inline jule::Str _1a7c9019d_if_case(_1a7c5c962_ScopeCoder* _self_,jule::Ptr<_1a75a6003_If> _19130_i) {
	jule::Str _19217_obj = jule::Str();
	if (_19130_i.get()._field_expr != jule::Any(jule::Any(nullptr))) {
		_19217_obj+=jule::Str("if (", 4);
		_19217_obj+=_1a7d79045_expr((*_self_)._field_oc.get()._field_ec.ptr(), _19130_i.get()._field_expr);
		_19217_obj+=jule::Str(") ", 2);
	}
	_19217_obj+=_1a7ca1379_scope(&(*_self_), _19130_i.get()._field_scope);
	return _19217_obj;
}



inline jule::Str _1a7c97947_conditional(_1a7c5c962_ScopeCoder* _self_,jule::Ptr<_1a7550c6c_Conditional> _20234_c) {
	jule::Str _20317_obj = jule::Str();
	{
		auto &expr = _20234_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1aa40cac1:;
		if (it != expr.end()) {
			jule::Ptr<_1a75a6003_If> _1aa40ccbe_elif = *it;
			{
				if ((_1aa40ccbe_elif == nullptr)) {
					goto _iter_next_1aa40cac1;
				}
				if ((_20317_obj.len() != 0LL)) {
					_20317_obj+=jule::Str(" else ", 6);
				}
				_20317_obj+=_1a7c9019d_if_case(&(*_self_), _1aa40ccbe_elif);
			}
			_iter_next_1aa40cac1:;
			++it;
			goto _iter_begin_1aa40cac1;
		}
		_iter_end_1aa40cac1:;
	}
	if ((_20234_c.get()._field_default != nullptr)) {
		if ((_20317_obj.len() != 0LL)) {
			_20317_obj+=jule::Str(" else ", 6);
		}
		_20317_obj+=_1a7ca1379_scope(&(*_self_), _20234_c.get()._field_default.get()._field_scope);
	}
	return _20317_obj;
}



inline jule::Str _1a7d0e393_inf_iter(_1a7c5c962_ScopeCoder* _self_,jule::Ptr<_1a7561893_InfIter> _22231_it) {
	jule::Str _22317_obj = jule::Str("for (;;) {\n", 11);
	_1d09aee72_add_indent((*_self_)._field_oc.ptr());
	_22317_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
	_22317_obj+=_1a7ca1379_scope(&(*_self_), _22231_it.get()._field_scope);
	_1d0a4416b_done_indent((*_self_)._field_oc.ptr());
	_22317_obj+=jule::Str("\n", 1);
	_22317_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
	_22317_obj+=static__1a7d810b3_iter_next(static_cast<jule::U64>(static_cast<jule::U64>(_22231_it)));
	_22317_obj+=jule::Str(":;\n", 3);
	_22317_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
	_22317_obj+=jule::Str("}\n", 2);
	_22317_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
	_22317_obj+=static__1a7d80d1b_iter_end(static_cast<jule::U64>(static_cast<jule::U64>(_22231_it)));
	_22317_obj+=jule::Str(":;", 2);
	return _22317_obj;
}



inline jule::Str _1a7d0ec45_while_iter(_1a7c5c962_ScopeCoder* _self_,jule::Ptr<_1a7561a80_WhileIter> _24333_it) {
	jule::Str _24417_obj = jule::Str();
	if ((_24333_it.get()._field_expr != jule::Any(jule::Any(nullptr))) && (_24333_it.get()._field_next == jule::Any(jule::Any(nullptr)))) {
		_24417_obj+=jule::Str("while (", 7);
		_24417_obj+=_1a7d79045_expr((*_self_)._field_oc.get()._field_ec.ptr(), _24333_it.get()._field_expr);
		_24417_obj+=jule::Str(") {\n", 4);
	} else {
		_24417_obj+=jule::Str("for (; ", 7);
		if (_24333_it.get()._field_expr != jule::Any(jule::Any(nullptr))) {
			_24417_obj+=_1a7d79045_expr((*_self_)._field_oc.get()._field_ec.ptr(), _24333_it.get()._field_expr);
		}
		_24417_obj+=jule::Str("; ", 2);
		if (_24333_it.get()._field_next != jule::Any(jule::Any(nullptr))) {
			jule::Str _25621_st = _1a7c5d699_st(&(*_self_), _24333_it.get()._field_next);
			_24417_obj+=_25621_st.slice(0LL,(_25621_st.len() - 1LL));
		}
		_24417_obj+=jule::Str(") {\n", 4);
	}
	_1d09aee72_add_indent((*_self_)._field_oc.ptr());
	_24417_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
	_24417_obj+=_1a7ca1379_scope(&(*_self_), _24333_it.get()._field_scope);
	_24417_obj+=jule::Str("\n", 1);
	_1d0a4416b_done_indent((*_self_)._field_oc.ptr());
	_24417_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
	_24417_obj+=static__1a7d810b3_iter_next(static_cast<jule::U64>(static_cast<jule::U64>(_24333_it)));
	_24417_obj+=jule::Str(":;\n", 3);
	_24417_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
	_24417_obj+=jule::Str("}\n", 2);
	_24417_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
	_24417_obj+=static__1a7d80d1b_iter_end(static_cast<jule::U64>(static_cast<jule::U64>(_24333_it)));
	_24417_obj+=jule::Str(":;", 2);
	return _24417_obj;
}



inline jule::Str _1a7d14156_range_iter(_1a7c5c962_ScopeCoder* _self_,jule::Ptr<_1a7561c6c_RangeIter> _27933_it) {
	{
		
		if ((_1a7675b72_slc(_27933_it.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa41c8a0:;
			{
				return _1a7c7ec92_range_index_iter(&(*_self_), _27933_it);
			}
		}
		else if ((_1a767590d_arr(_27933_it.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa41c916:;
			{
				return _1a7c7ec92_range_index_iter(&(*_self_), _27933_it);
			}
		}
		else if ((_1a7676623_map(_27933_it.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa41cd89:;
			{
				return _1a7c823e3_range_hashmap_iter(&(*_self_), _27933_it);
			}
		}
		else {
			_case_begin_1aa41c2c8:;
			{
				return _1a7c7ec92_range_index_iter(&(*_self_), _27933_it);
			}
		}
		_match_end_1aa41c20c:;
	}
}



inline jule::Str _1a7d1bc1e_cont(_1a7c5c962_ScopeCoder* _self_,jule::Ptr<_1a758e926_ContSt> _29219_c) {
	jule::Str _29317_obj = jule::Str("goto ", 5);
	_29317_obj+=static__1a7d810b3_iter_next(_29219_c.get()._field_it);
	_29317_obj+=jule::Str(";", 1);
	return _29317_obj;
}



inline jule::Str _1a7d207d3_label(_1a7c5c962_ScopeCoder* _self_,jule::Ptr<_1a75b233e_Label> _29920_l) {
	return (static__1a7d8135a_label(_29920_l.get()._field_ident) + jule::Str(":;", 2));
}



inline jule::Str _1a7d20b35_goto_st(_1a7c5c962_ScopeCoder* _self_,jule::Ptr<_1a75b252b_GotoSt> _30322_gt) {
	jule::Str _30417_obj = jule::Str("goto ", 5);
	_30417_obj+=static__1a7d8135a_label(_30322_gt.get()._field_ident);
	_30417_obj+=jule::Str(";", 1);
	return _30417_obj;
}



inline jule::Str _1a7d215c5_postfix(_1a7c5c962_ScopeCoder* _self_,jule::Ptr<_1a75b2718_Postfix> _31030_p) {
	jule::Str _31117_obj = jule::Str("(", 1);
	_31117_obj+=_1a7d79045_expr((*_self_)._field_oc.get()._field_ec.ptr(), _31030_p.get()._field_expr);
	_31117_obj+=jule::Str(")", 1);
	_31117_obj+=_31030_p.get()._field_op;
	_31117_obj+=jule::Str(";", 1);
	return _31117_obj;
}



inline jule::Str _1a7d23b38_assign(_1a7c5c962_ScopeCoder* _self_,jule::Ptr<_1a75b2905_Assign> _31929_a) {
	jule::Str _32017_obj = _1a7d79045_expr((*_self_)._field_oc.get()._field_ec.ptr(), _31929_a.get()._field_l.get()._field_model);
	_32017_obj+=_31929_a.get()._field_op.get()._field_kind;
	_32017_obj+=_1a7d79045_expr((*_self_)._field_oc.get()._field_ec.ptr(), _31929_a.get()._field_r.get()._field_model);
	_32017_obj+=jule::Str(";", 1);
	return _32017_obj;
}



inline jule::Str _1a7d2451d_multi_assign(_1a7c5c962_ScopeCoder* _self_,jule::Ptr<_1a75b2ae2_MultiAssign> _32735_a) {
	jule::Str _32817_obj = jule::Str("std::tie(", 9);
	{
		auto &expr = _32735_a.get()._field_l;
		auto it = expr.begin();
		_iter_begin_1aa427b52:;
		if (it != expr.end()) {
			jule::Any _1aa427d50_l = *it;
			{
				if (_1aa427d50_l == jule::Any(jule::Any(nullptr))) {
					_32817_obj+=jule::Str("std::ignore", 11);
				} else {
					_32817_obj+=_1a7d79045_expr((*_self_)._field_oc.get()._field_ec.ptr(), _1aa427d50_l);
				}
				_32817_obj+=jule::Str(",", 1);
			}
			_iter_next_1aa427b52:;
			++it;
			goto _iter_begin_1aa427b52;
		}
		_iter_end_1aa427b52:;
	}
	(_32817_obj).mut_slice(0LL,_32817_obj.len() - 1LL);
	_32817_obj+=jule::Str(") = ", 4);
	_32817_obj+=_1a7d79045_expr((*_self_)._field_oc.get()._field_ec.ptr(), _32735_a.get()._field_r);
	_32817_obj+=jule::Str(";", 1);
	return _32817_obj;
}



inline jule::Str _1a7d24e03_match_expr(_1a7c5c962_ScopeCoder* _self_,jule::Ptr<_1a75b2cce_Match>& _34634_m) {
	if ((!(_1a764952a_is_const(_34634_m.get()._field_expr.ptr())))) {
		return jule::Str("_match_expr", 11);
	}
	if ((!(_1a7522997_is_bool(_34634_m.get()._field_expr.get()._field_constant.ptr()))) || (!(_1a75205ee_read_bool(_34634_m.get()._field_expr.get()._field_constant.ptr())))) {
		return _1a7d78c37_model((*_self_)._field_oc.get()._field_ec.ptr(), _34634_m.get()._field_expr.get()._field_model);
	}
	return jule::Str();
}



inline jule::Str _1a7d257d8_case(_1a7c5c962_ScopeCoder* _self_,jule::Ptr<_1a75b2cce_Match> _35627_m,jule::Ptr<_1a75b31ec_Case> _35642_c) {
	jule::Str _35717_obj = jule::Str();
	if ((_35642_c.get()._field_exprs.len() != 0LL) && (!(_1a758ed00_is_generic_type_match(_35627_m.ptr())))) {
		if ((_35627_m.get()._field_cases.len() > 0LL) && (_35627_m.get()._field_cases[0LL] == _35642_c)) {
			_35717_obj+=jule::Str("if (", 4);
		} else {
			_35717_obj+=jule::Str("else if (", 9);
		}
		{
			auto &expr = _35642_c.get()._field_exprs;
			auto it = expr.begin();
			_iter_begin_1aa42e1ec:;
			if (it != expr.end()) {
				jule::I64 _1aa42e83a_i = it - expr.begin();
				jule::Ptr<_1a7648b67_Data> _1aa42ee56_expr = *it;
				{
					{
						
						if ((!(_35627_m.get()._field_type_match))) {
							_case_begin_1aa43161c:;
							{
								jule::Str _36825_case_expr = _1a7d24e03_match_expr(&(*_self_), _35627_m);
								if (_1a7649838_good_operand(_35627_m.get()._field_expr.ptr(), _1aa42ee56_expr)) {
									if ((_36825_case_expr.len() != 0LL)) {
										_35717_obj+=_36825_case_expr;
										_35717_obj+=jule::Str(" == ", 4);
									}
									_35717_obj+=_1a7d79045_expr((*_self_)._field_oc.get()._field_ec.ptr(), _1aa42ee56_expr.get()._field_model);
								} else {
									_35717_obj+=_1a7d79045_expr((*_self_)._field_oc.get()._field_ec.ptr(), _1aa42ee56_expr.get()._field_model);
									if ((_36825_case_expr.len() != 0LL)) {
										_35717_obj+=jule::Str(" == ", 4);
										_35717_obj+=_36825_case_expr;
									}
								}
							}
						}
						else {
							_case_begin_1aa4304ea:;
							{
								_35717_obj+=jule::Str("_match_expr", 11);
								_35717_obj+=jule::Str(".type_is<", 9);
								_35717_obj+=_1a7d79045_expr((*_self_)._field_oc.get()._field_ec.ptr(), _1aa42ee56_expr.get()._field_model);
								_35717_obj+=jule::Str(">()", 3);
							}
						}
						_match_end_1aa43042e:;
					}
					if ((_1aa42e83a_i + 1LL) < static_cast<jule::I64>(static_cast<jule::I64>(_35642_c.get()._field_exprs.len()))) {
						_35717_obj+=jule::Str(" || ", 4);
					}
				}
				_iter_next_1aa42e1ec:;
				++it;
				_1aa42e83a_i++;
				goto _iter_begin_1aa42e1ec;
			}
			_iter_end_1aa42e1ec:;
		}
		_35717_obj+=jule::Str(") ", 2);
	} else if ((_35627_m.get()._field_default == _35642_c) && (_35627_m.get()._field_cases.len() != 0LL)) {
		_35717_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
		_35717_obj+=jule::Str("else ", 5);
	}
	_1d09aee72_add_indent((*_self_)._field_oc.ptr());
	_35717_obj+=jule::Str("{\n", 2);
	_35717_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
	_35717_obj+=static__1a7d81899_case_begin(static_cast<jule::U64>(static_cast<jule::U64>(_35642_c)));
	_35717_obj+=jule::Str(":;\n", 3);
	if ((_35642_c.get()._field_scope.get()._field_stmts.len() > 0LL)) {
		_35717_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
		_35717_obj+=_1a7ca1379_scope(&(*_self_), _35642_c.get()._field_scope);
		_35717_obj+=jule::Str("\n", 1);
	}
	_1d0a4416b_done_indent((*_self_)._field_oc.ptr());
	_35717_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
	_35717_obj+=jule::Str("}", 1);
	return _35717_obj;
}



inline jule::Str _1a7d261bd_match_st(_1a7c5c962_ScopeCoder* _self_,jule::Ptr<_1a75b2cce_Match> _41831_m) {
	if ((_41831_m.get()._field_cases.len() == 0LL) && (_41831_m.get()._field_default == nullptr)) {
		return jule::Str();
	}
	jule::Bool _42313_generic_type_match = _1a758ed00_is_generic_type_match(_41831_m.ptr());
	if (_42313_generic_type_match && ((_41831_m.get()._field_default == nullptr) || (_41831_m.get()._field_default.get()._field_scope.get()._field_stmts.len() == 0LL))) {
		return jule::Str();
	}
	jule::Str _42817_obj = jule::Str("{\n", 2);
	_1d09aee72_add_indent((*_self_)._field_oc.ptr());
	_42817_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
	if ((!(_42313_generic_type_match)) && (!(_1a764952a_is_const(_41831_m.get()._field_expr.ptr())))) {
		if (_1e829b878_OPT_COPY && _1a7d5c644_is_copy_optimizable(_41831_m.get()._field_expr)) {
			_42817_obj+=jule::Str("auto &_match_expr{ ", 19);
		} else {
			_42817_obj+=jule::Str("auto _match_expr{ ", 18);
		}
		_42817_obj+=_1a7d79045_expr((*_self_)._field_oc.get()._field_ec.ptr(), _41831_m.get()._field_expr.get()._field_model);
		_42817_obj+=jule::Str(" };\n", 4);
		_42817_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
	}
	if ((_41831_m.get()._field_cases.len() > 0LL)) {
		{
			auto &expr = _41831_m.get()._field_cases;
			auto it = expr.begin();
			_iter_begin_1aa43e84a:;
			if (it != expr.end()) {
				jule::Ptr<_1a75b31ec_Case> _1aa43ea48_c = *it;
				{
					if ((_1aa43ea48_c == nullptr)) {
						goto _iter_next_1aa43e84a;
					}
					_42817_obj+=jule::Str("\n", 1);
					_42817_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
					_42817_obj+=_1a7d257d8_case(&(*_self_), _41831_m,_1aa43ea48_c);
				}
				_iter_next_1aa43e84a:;
				++it;
				goto _iter_begin_1aa43e84a;
			}
			_iter_end_1aa43e84a:;
		}
	}
	if ((_41831_m.get()._field_default != nullptr)) {
		_42817_obj+=jule::Str("\n", 1);
		_42817_obj+=_1a7d257d8_case(&(*_self_), _41831_m,_41831_m.get()._field_default);
	}
	_42817_obj+=jule::Str("\n", 1);
	_42817_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
	_42817_obj+=static__1a7d81602_match_end(static_cast<jule::U64>(static_cast<jule::U64>(_41831_m)));
	_42817_obj+=jule::Str(":;", 2);
	_42817_obj+=jule::Str("\n", 1);
	_1d0a4416b_done_indent((*_self_)._field_oc.ptr());
	_42817_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
	_42817_obj+=jule::Str("}", 1);
	return _42817_obj;
}



inline jule::Str _1a7d282be_fall_st(_1a7c5c962_ScopeCoder* _self_,jule::Ptr<_1a75b33d9_FallSt> _47622_f) {
	jule::Str _47717_obj = jule::Str("goto ", 5);
	_47717_obj+=static__1a7d81899_case_begin(_47622_f.get()._field_dest_case);
	_47717_obj+=jule::Str(";", 1);
	return _47717_obj;
}



inline jule::Str _1a7d290e4_break_st(_1a7c5c962_ScopeCoder* _self_,jule::Ptr<_1a758eb13_BreakSt> _48323_b) {
	jule::Str _48417_obj = jule::Str("goto ", 5);
	if ((_48323_b.get()._field_it != 0LLU)) {
		_48417_obj+=static__1a7d80d1b_iter_end(_48323_b.get()._field_it);
	} else {
		_48417_obj+=static__1a7d81602_match_end(_48323_b.get()._field_mtch);
	}
	_48417_obj+=jule::Str(";", 1);
	return _48417_obj;
}



inline jule::Str _1a7d29996_ret_with_vars(_1a7c5c962_ScopeCoder* _self_,jule::Ptr<_1a75b35c6_RetSt> _49436_r) {
	jule::Str _49517_obj = jule::Str();
	{
		auto &expr = _49436_r.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1aa44717c:;
		if (it != expr.end()) {
			jule::Ptr<_1a75ec478_Var> _1aa44737a_v = *it;
			{
				if (_1d074a1d5_is_ignore_ident(_1aa44737a_v.get()._field_ident)) {
					_49517_obj+=_1a7d79661_init_expr((*_self_)._field_oc.get()._field_ec.ptr(), _1aa44737a_v.get()._field_kind.get()._field_kind);
				} else {
					_49517_obj+=static__1a7d807cc_var(_1aa44737a_v);
				}
				_49517_obj+=jule::Str(",", 1);
			}
			_iter_next_1aa44717c:;
			++it;
			goto _iter_begin_1aa44717c;
		}
		_iter_end_1aa44717c:;
	}
	(_49517_obj).mut_slice(0LL,_49517_obj.len() - 1LL);
	jule::Str _50717_oobj = jule::Str("return ", 7);
	if (_49436_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_50717_oobj+=jule::Str("jule::Exceptional<", 18);
		_50717_oobj+=static__1d0a54d5d_kind(_49436_r.get()._field_func.get()._field_result);
		_50717_oobj+=jule::Str(">(jule::Any(), ", 15);
	}
	if ((_49436_r.get()._field_vars.len() > 1LL)) {
		_50717_oobj+=jule::Str("std::make_tuple(", 16);
		_50717_oobj+=_49517_obj;
		_50717_oobj+=jule::Str(")", 1);
	} else {
		_50717_oobj+=_49517_obj;
	}
	if (_49436_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_50717_oobj+=jule::Str(")", 1);
	}
	_50717_oobj+=jule::Str(";", 1);
	return _50717_oobj;
}



inline jule::Str _1a7d2a348_ret_tuple(_1a7c5c962_ScopeCoder* _self_,jule::Ptr<_1a75b35c6_RetSt> _53132_r) {
	jule::Slice<jule::Ptr<_1a7648b67_Data>> _53217_datas = _53132_r.get()._field_expr.operator jule::Ptr<_1a6420115_TupleExprModel>().get()._field_datas;
	jule::Str _53317_obj = jule::Str();
	{
		auto &expr = _53132_r.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1aa44d3a3:;
		if (it != expr.end()) {
			jule::I64 _1aa44d4a2_i = it - expr.begin();
			jule::Ptr<_1a75ec478_Var> _1aa44d639_v = *it;
			{
				if (_1d074a1d5_is_ignore_ident(_1aa44d639_v.get()._field_ident)) {
					goto _iter_next_1aa44d3a3;
				}
				jule::Any _53921_model = _53217_datas[_1aa44d4a2_i].get()._field_model;
				if (_53921_model == jule::Any(jule::Any(_1aa44d639_v))) {
					goto _iter_next_1aa44d3a3;
				}
				jule::Str _54417_ident = static__1a7d807cc_var(_1aa44d639_v);
				_53317_obj+=_54417_ident;
				_53317_obj+=jule::Str(" = ", 3);
				_53317_obj+=_1a7d79045_expr((*_self_)._field_oc.get()._field_ec.ptr(), _53921_model);
				_53317_obj+=jule::Str(";\n", 2);
				_53317_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
			}
			_iter_next_1aa44d3a3:;
			++it;
			_1aa44d4a2_i++;
			goto _iter_begin_1aa44d3a3;
		}
		_iter_end_1aa44d3a3:;
	}
	jule::Str _55217_oobj = jule::Str("std::make_tuple(", 16);
	{
		auto &expr = _53217_datas;
		auto it = expr.begin();
		_iter_begin_1aa44d89d:;
		if (it != expr.end()) {
			jule::I64 _1aa44d925_i = it - expr.begin();
			jule::Ptr<_1a7648b67_Data> _1aa451351_d = *it;
			{
				jule::Ptr<_1a75ec478_Var> _55421_v = _53132_r.get()._field_vars[_1aa44d925_i];
				if (_1d074a1d5_is_ignore_ident(_55421_v.get()._field_ident)) {
					_55217_oobj+=_1a7d79045_expr((*_self_)._field_oc.get()._field_ec.ptr(), _1aa451351_d.get()._field_model);
				} else {
					_55217_oobj+=static__1a7d807cc_var(_55421_v);
				}
				_55217_oobj+=jule::Str(",", 1);
			}
			_iter_next_1aa44d89d:;
			++it;
			_1aa44d925_i++;
			goto _iter_begin_1aa44d89d;
		}
		_iter_end_1aa44d89d:;
	}
	(_55217_oobj).mut_slice(0LL,_55217_oobj.len() - 1LL);
	_55217_oobj+=jule::Str(")", 1);
	if (_53132_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_53317_obj+=jule::Str("return jule::Exceptional<", 25);
		_53317_obj+=static__1d0a54d5d_kind(_53132_r.get()._field_func.get()._field_result);
		_53317_obj+=jule::Str(">(jule::Any(),", 14);
		_53317_obj+=_55217_oobj;
		_53317_obj+=jule::Str(")", 1);
	} else {
		_53317_obj+=jule::Str("return ", 7);
		_53317_obj+=_55217_oobj;
	}
	_53317_obj+=jule::Str(";", 1);
	return _53317_obj;
}



inline jule::Str _1a7d2ae70_ret_with_exprs(_1a7c5c962_ScopeCoder* _self_,jule::Ptr<_1a75b35c6_RetSt> _58137_r) {
	if ((_58137_r.get()._field_vars.len() > 1LL)) {
		return _1a7d2a348_ret_tuple(&(*_self_), _58137_r);
	}
	if ((_58137_r.get()._field_vars.len() > 0LL)) {
		jule::Ptr<_1a75ec478_Var> _58821_v = _58137_r.get()._field_vars[0LL];
		if ((!(_1d074a1d5_is_ignore_ident(_58821_v.get()._field_ident))) && (_58137_r.get()._field_expr != jule::Any(jule::Any(_58821_v)))) {
			jule::Str _59021_ident = static__1a7d807cc_var(_58821_v);
			jule::Str _59125_obj = _59021_ident;
			_59125_obj+=jule::Str(" = ", 3);
			_59125_obj+=_1a7d79045_expr((*_self_)._field_oc.get()._field_ec.ptr(), _58137_r.get()._field_expr);
			_59125_obj+=jule::Str(";\n", 2);
			_59125_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
			if (_58137_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
				_59125_obj+=jule::Str("return jule::Exceptional<", 25);
				_59125_obj+=static__1d0a54d5d_kind(_58137_r.get()._field_func.get()._field_result);
				_59125_obj+=jule::Str(">(jule::Any(),", 14);
				_59125_obj+=_59021_ident;
				_59125_obj+=jule::Str(")", 1);
			} else {
				_59125_obj+=jule::Str("return ", 7);
				_59125_obj+=_59021_ident;
			}
			_59125_obj+=jule::Str(";", 1);
			return _59125_obj;
		}
	}
	if (_58137_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		jule::Str _61221_obj = jule::Str("return jule::Exceptional<", 25);
		_61221_obj+=static__1d0a54d5d_kind(_58137_r.get()._field_func.get()._field_result);
		_61221_obj+=jule::Str(">(jule::Any(),", 14);
		_61221_obj+=_1a7d79045_expr((*_self_)._field_oc.get()._field_ec.ptr(), _58137_r.get()._field_expr);
		_61221_obj+=jule::Str(")", 1);
		_61221_obj+=jule::Str(";", 1);
		return _61221_obj;
	}
	jule::Str _62117_obj = jule::Str("return ", 7);
	_62117_obj+=_1a7d79045_expr((*_self_)._field_oc.get()._field_ec.ptr(), _58137_r.get()._field_expr);
	_62117_obj+=jule::Str(";", 1);
	return _62117_obj;
}



inline jule::Str _1a7c249e5_ret_st(_1a7c5c962_ScopeCoder* _self_,jule::Ptr<_1a75b35c6_RetSt> _62729_r) {
	if ((_62729_r.get()._field_expr == jule::Any(jule::Any(nullptr))) && (_62729_r.get()._field_vars.len() == 0LL)) {
		if (_62729_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
			return jule::Str("return jule::VoidExceptional();", 31);
		}
		return jule::Str("return;", 7);
	}
	if (_62729_r.get()._field_expr == jule::Any(jule::Any(nullptr))) {
		return _1a7d29996_ret_with_vars(&(*_self_), _62729_r);
	}
	return _1a7d2ae70_ret_with_exprs(&(*_self_), _62729_r);
}



inline jule::Str _1a7c63ddb_ret_with_defaults(_1a7c5c962_ScopeCoder* _self_,jule::Ptr<_1a7672da0_TypeKind> _64240_result) {
	jule::Str _64317_obj = jule::Str("return ", 7);
	if ((_1a7676887_tup(_64240_result.ptr()) != nullptr)) {
		_64317_obj+=jule::Str("std::make_tuple(", 16);
		{
			auto &expr = _1a7676887_tup(_64240_result.ptr()).get()._field_types;
			auto it = expr.begin();
			_iter_begin_1aa461a8c:;
			if (it != expr.end()) {
				jule::Ptr<_1a7672da0_TypeKind> _1aa461bbe_t = *it;
				{
					_64317_obj+=_1a7d79661_init_expr((*_self_)._field_oc.get()._field_ec.ptr(), _1aa461bbe_t);
					_64317_obj+=jule::Str(",", 1);
				}
				_iter_next_1aa461a8c:;
				++it;
				goto _iter_begin_1aa461a8c;
			}
			_iter_end_1aa461a8c:;
		}
		(_64317_obj).mut_slice(0LL,_64317_obj.len() - 1LL);
		_64317_obj+=jule::Str(")", 1);
	} else {
		_64317_obj+=_1a7d79661_init_expr((*_self_)._field_oc.get()._field_ec.ptr(), _64240_result);
	}
	_64317_obj+=jule::Str(";", 1);
	return _64317_obj;
}



inline jule::Str _1a7d555e8_var(_1a7c5c962_ScopeCoder* _self_,jule::Ptr<_1a75ec478_Var> _65926_v) {
	if (_65926_v.get()._field_constant) {
		return jule::Str();
	}
	return _1d0a4703c_var((*_self_)._field_oc.ptr(), _65926_v);
}



inline jule::Str _1a7c5d699_st(_1a7c5c962_ScopeCoder* _self_,jule::Any _66725_st) {
	if (_66725_st == jule::Any(jule::Any(nullptr))) {
		return jule::Str();
	}
	{
		auto &_match_expr{ _66725_st };
		
		if (_match_expr.type_is<jule::Ptr<_1a759e606_Scope>>()) {
			_case_begin_1aa46581b:;
			{
				return _1a7ca1379_scope(&(*_self_), _66725_st.operator jule::Ptr<_1a759e606_Scope>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a75ec478_Var>>()) {
			_case_begin_1aa466003:;
			{
				return _1a7d555e8_var(&(*_self_), _66725_st.operator jule::Ptr<_1a75ec478_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a7648b67_Data>>()) {
			_case_begin_1aa466069:;
			{
				return (_1a7d79045_expr((*_self_)._field_oc.get()._field_ec.ptr(), jule::Any(_66725_st.operator jule::Ptr<_1a7648b67_Data>())) + jule::Str(";", 1));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a7550c6c_Conditional>>()) {
			_case_begin_1aa465cb1:;
			{
				return _1a7c97947_conditional(&(*_self_), _66725_st.operator jule::Ptr<_1a7550c6c_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a7561893_InfIter>>()) {
			_case_begin_1aa465d27:;
			{
				return _1a7d0e393_inf_iter(&(*_self_), _66725_st.operator jule::Ptr<_1a7561893_InfIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a7561a80_WhileIter>>()) {
			_case_begin_1aa465d8d:;
			{
				return _1a7d0ec45_while_iter(&(*_self_), _66725_st.operator jule::Ptr<_1a7561a80_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a7561c6c_RangeIter>>()) {
			_case_begin_1aa465e04:;
			{
				return _1a7d14156_range_iter(&(*_self_), _66725_st.operator jule::Ptr<_1a7561c6c_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a758e926_ContSt>>()) {
			_case_begin_1aa466102:;
			{
				return _1a7d1bc1e_cont(&(*_self_), _66725_st.operator jule::Ptr<_1a758e926_ContSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a75b233e_Label>>()) {
			_case_begin_1aa466168:;
			{
				return _1a7d207d3_label(&(*_self_), _66725_st.operator jule::Ptr<_1a75b233e_Label>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a75b252b_GotoSt>>()) {
			_case_begin_1aa4661ce:;
			{
				return _1a7d20b35_goto_st(&(*_self_), _66725_st.operator jule::Ptr<_1a75b252b_GotoSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a75b2718_Postfix>>()) {
			_case_begin_1aa466245:;
			{
				return _1a7d215c5_postfix(&(*_self_), _66725_st.operator jule::Ptr<_1a75b2718_Postfix>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a75b2905_Assign>>()) {
			_case_begin_1aa4662ab:;
			{
				return _1a7d23b38_assign(&(*_self_), _66725_st.operator jule::Ptr<_1a75b2905_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a75b2ae2_MultiAssign>>()) {
			_case_begin_1aa466322:;
			{
				return _1a7d2451d_multi_assign(&(*_self_), _66725_st.operator jule::Ptr<_1a75b2ae2_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a75b2cce_Match>>()) {
			_case_begin_1aa466399:;
			{
				return _1a7d261bd_match_st(&(*_self_), _66725_st.operator jule::Ptr<_1a75b2cce_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a75b33d9_FallSt>>()) {
			_case_begin_1aa466421:;
			{
				return _1a7d282be_fall_st(&(*_self_), _66725_st.operator jule::Ptr<_1a75b33d9_FallSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a758eb13_BreakSt>>()) {
			_case_begin_1aa466498:;
			{
				return _1a7d290e4_break_st(&(*_self_), _66725_st.operator jule::Ptr<_1a758eb13_BreakSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a75b35c6_RetSt>>()) {
			_case_begin_1aa466520:;
			{
				return _1a7c249e5_ret_st(&(*_self_), _66725_st.operator jule::Ptr<_1a75b35c6_RetSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a7d60889_PushToSliceExprModel>>()) {
			_case_begin_1aa466597:;
			{
				return _1a7d76581_push_to_slice((*_self_)._field_oc.get()._field_ec.ptr(), _66725_st.operator jule::Ptr<_1a7d60889_PushToSliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a7d60e0b_MutSlicingExprModel>>()) {
			_case_begin_1aa46661e:;
			{
				return _1a7d7861b_mut_slicing((*_self_)._field_oc.get()._field_ec.ptr(), _66725_st.operator jule::Ptr<_1a7d60e0b_MutSlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a7d61307_StrInsertBeginExprModel>>()) {
			_case_begin_1aa466696:;
			{
				return _1a7d78929_str_insert_begin((*_self_)._field_oc.get()._field_ec.ptr(), _66725_st.operator jule::Ptr<_1a7d61307_StrInsertBeginExprModel>());
			}
		}
		else {
			_case_begin_1aa4652bb:;
			{
				return jule::Str("<unimplemented_stmt>", 20);
			}
		}
		_match_end_1aa4659c5:;
	}
}



inline void _1a7c99a9d_scope_end(_1a7c5c962_ScopeCoder* _self_,jule::Str& _71733_obj,jule::Ptr<_1a759e606_Scope>& _71748_s) {
	{
		auto &expr = _71748_s.get()._field_stmts;
		auto it = expr.begin();
		_iter_begin_1aa47398e:;
		if (it != expr.end()) {
			jule::Any _1aa473a8d_st = *it;
			{
				_71733_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
				_71733_obj+=_1a7c5d699_st(&(*_self_), _1aa473a8d_st);
				_71733_obj+=jule::Str("\n", 1);
			}
			_iter_next_1aa47398e:;
			++it;
			goto _iter_begin_1aa47398e;
		}
		_iter_end_1aa47398e:;
	}
	_1d0a4416b_done_indent((*_self_)._field_oc.ptr());
	_71733_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
	_71733_obj+=jule::Str("}", 1);
	if (_71748_s.get()._field_deferred) {
		_71733_obj=((jule::Str("__JULE_DEFER(", 13) + _71733_obj) + jule::Str(");", 2));
	}
}



inline jule::Str _1a7ca1379_scope(_1a7c5c962_ScopeCoder* _self_,jule::Ptr<_1a759e606_Scope> _73428_s) {
	_1d09aee72_add_indent((*_self_)._field_oc.ptr());
	jule::Str _73617_obj = jule::Str("{\n", 2);
	_1a7c99a9d_scope_end(&(*_self_), _73617_obj,_73428_s);
	return _73617_obj;
}



inline jule::Str _1a7ce61b0_func_scope(_1a7c5c962_ScopeCoder* _self_,jule::Ptr<_1a6429be1_FnIns> _74233_f) {
	if ((_74233_f.get()._field_scope == nullptr)) {
		return jule::Str();
	}
	jule::Str _74617_obj = jule::Str("{\n", 2);
	_1d09aee72_add_indent((*_self_)._field_oc.ptr());
	if ((!(_1a6426e96_is_void(_74233_f.get()._field_decl.ptr())))) {
		jule::Slice<jule::Ptr<_1a7672da0_TypeKind>> _74921_types = _1a642a708_types(_74233_f.ptr());
		{
			auto &expr = _74233_f.get()._field_decl.get()._field_result.get()._field_idents;
			auto it = expr.begin();
			_iter_begin_1aa478c91:;
			if (it != expr.end()) {
				jule::I64 _1aa478dd4_i = it - expr.begin();
				jule::Ptr<_1d0747985_Token> _1aa479104_ident = *it;
				{
					if (_1d074a1d5_is_ignore_ident(_1aa479104_ident.get()._field_kind) || _1d074a47c_is_anon_ident(_1aa479104_ident.get()._field_kind)) {
						goto _iter_next_1aa478c91;
					}
					_74617_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
					_74617_obj+=static__1d0a54d5d_kind(_74921_types[_1aa478dd4_i]);
					_74617_obj+=jule::Str(" ", 1);
					_74617_obj+=static__1a7d7e1c1_to_local(_1aa479104_ident.get()._field_row,_1aa479104_ident.get()._field_column,_1aa479104_ident.get()._field_kind);
					_74617_obj+=jule::Str(" = ", 3);
					_74617_obj+=_1a7d79661_init_expr((*_self_)._field_oc.get()._field_ec.ptr(), _74921_types[_1aa478dd4_i]);
					_74617_obj+=jule::Str(";\n", 2);
				}
				_iter_next_1aa478c91:;
				++it;
				_1aa478dd4_i++;
				goto _iter_begin_1aa478c91;
			}
			_iter_end_1aa478c91:;
		}
	}
	_1a7c99a9d_scope_end(&(*_self_), _74617_obj,_74233_f.get()._field_scope);
	if (_74233_f.get()._field_decl.get()._field_exceptional && _1a6426e96_is_void(_74233_f.get()._field_decl.ptr())) {
		_74617_obj=(_74617_obj.slice(0LL,(_74617_obj.len() - 2LL)) + jule::Str(" return jule::VoidExceptional(); }", 34));
	}
	return _74617_obj;
}







std::ostream &operator<<(std::ostream &_Stream, _1a7c5c962_ScopeCoder _Src) {
	_Stream << "ScopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a7c244d9_ExprCoder> static__1a7c5d0d3_new(jule::Ptr<_1d0a43aa5_ObjectCoder>& _8924_oc) {
	return jule::new_ptr<_1a7c244d9_ExprCoder>(_1a7c244d9_ExprCoder(_8924_oc));
}



inline jule::Str _1a7d53063_string(_1a7c244d9_ExprCoder* _self_,jule::Ptr<_1a751ddb1_Const>& _9522_c) {
	jule::Str _9613_content = _1a7520863_read_str(_9522_c.ptr());
	if ((_9613_content.len() == 0LL)) {
		return jule::Str("jule::Str()", 11);
	}
	jule::Slice<jule::U8> _10013_bytes = static_cast<jule::Slice<jule::U8>>(_9613_content);
	jule::Str _10113_len = _1a746460e_fmt_int(static_cast<jule::I64>(static_cast<jule::I64>(_10013_bytes.len())),10LL);
	jule::Str _10213_lit = _1a7d7a5c9_cstr_lit(_10013_bytes);
	return ((((jule::Str("jule::Str(", 10) + _10213_lit) + jule::Str(", ", 2)) + _10113_len) + jule::Str(")", 1));
}



inline jule::Str _1a7d53195_boolean(_1a7c244d9_ExprCoder* _self_,jule::Ptr<_1a751ddb1_Const>& _10623_c) {
	if (_1a75205ee_read_bool(_10623_c.ptr())) {
		return jule::Str("true", 4);
	}
	return jule::Str("false", 5);
}



inline jule::Str _1a7ce66aa_nil_lit(_1a7c244d9_ExprCoder* _self_) {
	return jule::Str("nullptr", 7);
}



inline jule::Str _1a7ce67dc_ftoa_special_cases(_1a7c244d9_ExprCoder* _self_,jule::F64& _11734_x) {
	{
		
		if (_1a73c96a6_is_nan(_11734_x)) {
			_case_begin_1aa484373:;
			{
				return jule::Str("NAN", 3);
			}
		}
		else if (_1a73a4d8a_is_inf(_11734_x,1LL)) {
			_case_begin_1aa4844d8:;
			{
				return jule::Str("INFINITY", 8);
			}
		}
		else if (_1a73a4d8a_is_inf(_11734_x,-1LL)) {
			_case_begin_1aa48454e:;
			{
				return jule::Str("-INFINITY", 9);
			}
		}
		else {
			_case_begin_1aa483c9b:;
			{
				return jule::Str();
			}
		}
		_match_end_1aa483bd0:;
	}
}



inline jule::Str _1a7ce691e_float32(_1a7c244d9_ExprCoder* _self_,jule::Ptr<_1a751ddb1_Const>& _13023_c) {
	jule::F64 _13113_x = _1a7521314_as_f64(_13023_c.ptr());
	jule::Str _13413_f = _1a7ce67dc_ftoa_special_cases(&(*_self_), _13113_x);
	if ((!(_13413_f.empty()))) {
		return _13413_f;
	}
	{
		
		if ((_13113_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1aa487574:;
			{
				return jule::Str("jule::MAX_F32", 13);
			}
		}
		else if ((_13113_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1aa486e9c:;
			{
				return jule::Str("jule::MIN_F32", 13);
			}
		}
		else {
			_case_begin_1aa4868c5:;
			{
				return (_1a7d7a91a_ftoa(_13113_x,32LL) + jule::Str("f", 1));
			}
		}
		_match_end_1aa486ac3:;
	}
}



inline jule::Str _1a7d716d0_float64(_1a7c244d9_ExprCoder* _self_,jule::Ptr<_1a751ddb1_Const>& _14923_c) {
	jule::F64 _15013_x = _1a7521314_as_f64(_14923_c.ptr());
	jule::Str _15313_f = _1a7ce67dc_ftoa_special_cases(&(*_self_), _15013_x);
	if ((!(_15313_f.empty()))) {
		return _15313_f;
	}
	{
		
		if ((_15013_x == jule::MAX_F64)) {
			_case_begin_1aa489ce6:;
			{
				return jule::Str("jule::MAX_F64", 13);
			}
		}
		else if ((_15013_x == jule::MIN_F64)) {
			_case_begin_1aa489b3c:;
			{
				return jule::Str("jule::MIN_F64", 13);
			}
		}
		else {
			_case_begin_1aa489565:;
			{
				return _1a7d7a91a_ftoa(_15013_x,64LL);
			}
		}
		_match_end_1aa489763:;
	}
}



inline jule::Str _1a7d71812_constant(_1a7c244d9_ExprCoder* _self_,jule::Ptr<_1a751ddb1_Const> _16927_c,jule::Bool _16938_fx32) {
	{
		
		if (_1a7522c0b_is_str(_16927_c.ptr())) {
			_case_begin_1aa48b985:;
			{
				return _1a7d53063_string(&(*_self_), _16927_c);
			}
		}
		else if (_1a7522997_is_bool(_16927_c.ptr())) {
			_case_begin_1aa48b9eb:;
			{
				return _1a7d53195_boolean(&(*_self_), _16927_c);
			}
		}
		else if (_1a7522e70_is_f64(_16927_c.ptr())) {
			_case_begin_1aa48ba73:;
			{
				{
					
					if (_16938_fx32) {
						_case_begin_1aa48d844:;
						{
							return _1a7ce691e_float32(&(*_self_), _16927_c);
						}
					}
					else {
						_case_begin_1aa48d26c:;
						{
							return _1a7d716d0_float64(&(*_self_), _16927_c);
						}
					}
					_match_end_1aa48d1a1:;
				}
			}
		}
		else if (_1a75224be_is_i64(_16927_c.ptr())) {
			_case_begin_1aa48b59a:;
			{
				return _1a7d7abb2_itoa(static_cast<jule::I64>(_1a7520126_read_i64(_16927_c.ptr())));
			}
		}
		else if (_1a7522733_is_u64(_16927_c.ptr())) {
			_case_begin_1aa48b622:;
			{
				return _1a7d7aee2_utoa(static_cast<jule::U64>(_1a752038a_read_u64(_16927_c.ptr())));
			}
		}
		else if (_1a75231d4_is_nil(_16927_c.ptr())) {
			_case_begin_1aa48b699:;
			{
				return _1a7ce66aa_nil_lit(&(*_self_));
			}
		}
		else {
			_case_begin_1aa48b523:;
			{
				return jule::Str("<unimplemented_constant_expression>", 35);
			}
		}
		_match_end_1aa48b479:;
	}
}



inline jule::Str _1a7d71944_div_by_zero_binary(_1a7c244d9_ExprCoder* _self_,jule::Ptr<_1d0747985_Token>& _19338_op,jule::Ptr<_1a64190a9_OperandExprModel>& _19355_l,jule::Ptr<_1a64190a9_OperandExprModel>& _19382_r) {
	jule::Str _19417_op_func = jule::Str();
	{
		auto &_match_expr{ _19338_op.get()._field_kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("/=", 2)) {
			_case_begin_1aa491ade:;
			{
				_19417_op_func=jule::Str("div", 3);
			}
		}
		else if (_match_expr == jule::Str("%", 1) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1aa491b88:;
			{
				_19417_op_func=jule::Str("mod", 3);
			}
		}
		_match_end_1aa491a89:;
	}
	jule::Str _20417_obj = jule::Str("jule::", 6);
	_20417_obj+=_19417_op_func;
	_20417_obj+=jule::Str("(", 1);
	if ((!(_1e829b746_PRODUCTION))) {
		_20417_obj+=jule::Str("\"", 1);
		_20417_obj+=_1d0a44512_loc_info((*_self_)._field_oc.ptr(), _19338_op);
		_20417_obj+=jule::Str("\",", 2);
	}
	_20417_obj+=_1a7d79045_expr(&(*_self_), _19355_l.get()._field_model);
	_20417_obj+=jule::Str(",", 1);
	_20417_obj+=_1a7d79045_expr(&(*_self_), _19382_r.get()._field_model);
	_20417_obj+=jule::Str(")", 1);
	return _20417_obj;
}



inline jule::Str _1a7d71a76_unsafe_binary(_1a7c244d9_ExprCoder* _self_,jule::Ptr<_1a6419571_BinopExprModel> _21936_m) {
	jule::Str _22017_obj = jule::Str("(", 1);
	_22017_obj+=_1a7d78c37_model(&(*_self_), _21936_m.get()._field_left.get()._field_model);
	_22017_obj+=jule::Str(" ", 1);
	_22017_obj+=_21936_m.get()._field_op.get()._field_kind;
	_22017_obj+=jule::Str(" ", 1);
	_22017_obj+=_1a7d78c37_model(&(*_self_), _21936_m.get()._field_right.get()._field_model);
	_22017_obj+=jule::Str(")", 1);
	return _22017_obj;
}



inline jule::Str _1a7d71ba8_binary(_1a7c244d9_ExprCoder* _self_,jule::Ptr<_1a6419571_BinopExprModel> _23029_m) {
	{
		auto &_match_expr{ _23029_m.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("%", 1)) {
			_case_begin_1aa497e14:;
			{
				if ((_1a767614a_strct(_23029_m.get()._field_left.get()._field_kind.ptr()) == nullptr)) {
					return _1a7d71944_div_by_zero_binary(&(*_self_), _23029_m.get()._field_op,_23029_m.get()._field_left,_23029_m.get()._field_right);
				}
			}
		}
		_match_end_1aa497dae:;
	}
	return _1a7d71a76_unsafe_binary(&(*_self_), _23029_m);
}



inline jule::Str _1a7d71cda_var(_1a7c244d9_ExprCoder* _self_,jule::Ptr<_1a75ec478_Var> _24122_m) {
	if (_24122_m.get()._field_cpp_linked) {
		jule::Ptr<_1d06c9ecd_Directive> _24317_d = _1d0a4ea6c_find_directive(_24122_m.get()._field_directives,jule::Str("namespace", 9));
		if ((_24317_d != nullptr)) {
			jule::Str _24525_obj = _1a7d799b3_concat_all_parts(_24317_d.get()._field_args);
			_24525_obj+=jule::Str("::", 2);
			_24525_obj+=static__1a7d807cc_var(_24122_m);
			return _24525_obj;
		}
	}
	return static__1a7d807cc_var(_24122_m);
}



inline jule::Str _1a7d71e1c_structure(_1a7c244d9_ExprCoder* _self_,jule::Ptr<_1a64147be_Struct> _25424_m) {
	return static__1d0a534aa_structure(_25424_m);
}



inline jule::Str _1a7d7204e_structure_ins(_1a7c244d9_ExprCoder* _self_,jule::Ptr<_1a641744d_StructIns> _25832_m) {
	return static__1d0a53752_structure_ins(_25832_m);
}



inline jule::Str _1a7d72181_unary(_1a7c244d9_ExprCoder* _self_,jule::Ptr<_1a6419928_UnaryExprModel> _26228_m) {
	{
		auto &_match_expr{ _26228_m.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1aa49de81:;
			{
				jule::Str _26521_obj = jule::Str("(~(", 3);
				_26521_obj+=_1a7d79045_expr(&(*_self_), _26228_m.get()._field_expr.get()._field_model);
				_26521_obj+=jule::Str("))", 2);
				return _26521_obj;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1aa49dee7:;
			{
				if (_1e829b746_PRODUCTION || (_1a76751c1_sptr(_26228_m.get()._field_expr.get()._field_kind.ptr()) == nullptr)) {
					goto _match_end_1aa49de2b;
				}
				jule::Str _27321_obj = _1a7d79045_expr(&(*_self_), _26228_m.get()._field_expr.get()._field_model);
				_27321_obj+=jule::Str(".get(\"", 6);
				_27321_obj+=_1d0a44512_loc_info((*_self_)._field_oc.ptr(), _26228_m.get()._field_op);
				_27321_obj+=jule::Str("\")", 2);
				return _27321_obj;
			}
		}
		_match_end_1aa49de2b:;
	}
	jule::Str _28017_obj = jule::Str("(", 1);
	_28017_obj+=_26228_m.get()._field_op.get()._field_kind;
	_28017_obj+=jule::Str("(", 1);
	_28017_obj+=_1a7d79045_expr(&(*_self_), _26228_m.get()._field_expr.get()._field_model);
	_28017_obj+=jule::Str("))", 2);
	return _28017_obj;
}



inline jule::Str _1a7d722b3_cpp_structure_lit(_1a7c244d9_ExprCoder* _self_,jule::Ptr<_1a641a1cb_StructLitExprModel> _28840_m) {
	jule::Str _28917_obj = jule::Str("(", 1) + static__1d0a53752_structure_ins(_28840_m.get()._field_strct);
	_28917_obj+=jule::Str("){", 2);
	if ((_28840_m.get()._field_args.len() > 0LL)) {
		_julec_label_iter:;
		{
			auto &expr = _28840_m.get()._field_strct.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1aa4a4a03:;
			if (it != expr.end()) {
				jule::Ptr<_1a6416ae0_FieldIns> _1aa4a4a7a_f = *it;
				{
					if (_28840_m.get()._field_strct.get()._field_decl.get()._field_cpp_linked) {
						{
							auto &expr = _28840_m.get()._field_args;
							auto it = expr.begin();
							_iter_begin_1aa4a55d6:;
							if (it != expr.end()) {
								jule::Ptr<_1a6419d24_StructArgExprModel> _1aa4a56d5_arg = *it;
								{
									if (_1aa4a56d5_arg.get()._field_field == _1aa4a4a7a_f) {
										_28917_obj+=jule::Str(".", 1);
										_28917_obj+=static__1a7d80535_field(_1aa4a4a7a_f.get()._field_decl);
										_28917_obj+=jule::Str("=", 1);
										_28917_obj+=_1a7d79045_expr(&(*_self_), _1aa4a56d5_arg.get()._field_expr);
										_28917_obj+=jule::Str(",", 1);
										goto _iter_next_1aa4a4a03;
									}
								}
								_iter_next_1aa4a55d6:;
								++it;
								goto _iter_begin_1aa4a55d6;
							}
							_iter_end_1aa4a55d6:;
						}
						goto _iter_next_1aa4a4a03;
					}
					_28917_obj+=static__1a7d80535_field(_1aa4a4a7a_f.get()._field_decl);
					_28917_obj+=jule::Str(": ", 2);
					{
						auto &expr = _28840_m.get()._field_args;
						auto it = expr.begin();
						_iter_begin_1aa4a795c:;
						if (it != expr.end()) {
							jule::Ptr<_1a6419d24_StructArgExprModel> _1aa4a79d4_arg = *it;
							{
								if (_1aa4a79d4_arg.get()._field_field == _1aa4a4a7a_f) {
									_28917_obj+=_1a7d79045_expr(&(*_self_), _1aa4a79d4_arg.get()._field_expr);
									_28917_obj+=jule::Str(",", 1);
									goto _iter_next_1aa4a4a03;
								}
							}
							_iter_next_1aa4a795c:;
							++it;
							goto _iter_begin_1aa4a795c;
						}
						_iter_end_1aa4a795c:;
					}
					_28917_obj+=_1a7d79661_init_expr(&(*_self_), _1aa4a4a7a_f.get()._field_kind);
					_28917_obj+=jule::Str(",", 1);
				}
				_iter_next_1aa4a4a03:;
				++it;
				goto _iter_begin_1aa4a4a03;
			}
			_iter_end_1aa4a4a03:;
		}
		(_28917_obj).mut_slice(0LL,_28917_obj.len() - 1LL);
	}
	_28917_obj+=jule::Str("}", 1);
	return _28917_obj;
}



inline jule::Str _1a7d723e5_structure_lit(_1a7c244d9_ExprCoder* _self_,jule::Ptr<_1a641a1cb_StructLitExprModel> _32536_m) {
	if (_32536_m.get()._field_strct.get()._field_decl.get()._field_cpp_linked) {
		return _1a7d722b3_cpp_structure_lit(&(*_self_), _32536_m);
	}
	jule::Str _33017_obj = static__1a7d8028d_structure_ins(_32536_m.get()._field_strct);
	_33017_obj+=jule::Str("(", 1);
	if ((_32536_m.get()._field_args.len() > 0LL)) {
		_julec_label_iter:;
		{
			auto &expr = _32536_m.get()._field_strct.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1aa4ac16a:;
			if (it != expr.end()) {
				jule::Ptr<_1a6416ae0_FieldIns> _1aa4ac1e2_f = *it;
				{
					{
						auto &expr = _32536_m.get()._field_args;
						auto it = expr.begin();
						_iter_begin_1aa4ac841:;
						if (it != expr.end()) {
							jule::Ptr<_1a6419d24_StructArgExprModel> _1aa4ac940_arg = *it;
							{
								if (_1aa4ac940_arg.get()._field_field == _1aa4ac1e2_f) {
									_33017_obj+=_1a7d79045_expr(&(*_self_), _1aa4ac940_arg.get()._field_expr);
									_33017_obj+=jule::Str(",", 1);
									goto _iter_next_1aa4ac16a;
								}
							}
							_iter_next_1aa4ac841:;
							++it;
							goto _iter_begin_1aa4ac841;
						}
						_iter_end_1aa4ac841:;
					}
					_33017_obj+=_1a7d79661_init_expr(&(*_self_), _1aa4ac1e2_f.get()._field_kind);
					_33017_obj+=jule::Str(",", 1);
				}
				_iter_next_1aa4ac16a:;
				++it;
				goto _iter_begin_1aa4ac16a;
			}
			_iter_end_1aa4ac16a:;
		}
		(_33017_obj).mut_slice(0LL,_33017_obj.len() - 1LL);
	}
	_33017_obj+=jule::Str(")", 1);
	return _33017_obj;
}



inline jule::Str _1a7d72527_alloc_structure(_1a7c244d9_ExprCoder* _self_,jule::Ptr<_1a641a50b_AllocStructLitExprModel> _35138_m) {
	jule::Str _35217_obj = jule::Str("jule::new_ptr<", 14);
	_35217_obj+=static__1a7d8028d_structure_ins(_35138_m.get()._field_lit.get()._field_strct);
	_35217_obj+=jule::Str(">(", 2);
	_35217_obj+=_1a7d723e5_structure_lit(&(*_self_), _35138_m.get()._field_lit);
	_35217_obj+=jule::Str(")", 1);
	return _35217_obj;
}



inline jule::Str _1a7d72659_casting(_1a7c244d9_ExprCoder* _self_,jule::Ptr<_1a641aa39_CastingExprModel> _36030_m) {
	jule::Str _36117_obj = jule::Str();
	{
		
		if ((_1a7674e5c_prim(_36030_m.get()._field_kind.ptr()) != nullptr) && _1a767a825_is_any(_1a7674e5c_prim(_36030_m.get()._field_kind.ptr()).ptr())) {
			_case_begin_1aa4b28bd:;
			{
				_36117_obj+=static__1d0a54d5d_kind(_36030_m.get()._field_kind);
				_36117_obj+=jule::Str("(", 1);
				_36117_obj+=_1a7d78c37_model(&(*_self_), _36030_m.get()._field_expr);
				_36117_obj+=jule::Str(")", 1);
			}
		}
		else if ((_1a7675435_ptr(_36030_m.get()._field_expr_kind.ptr()) != nullptr) || (_1a7675435_ptr(_36030_m.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa4b3b55:;
			{
				_36117_obj+=jule::Str("((", 2);
				_36117_obj+=static__1d0a54d5d_kind(_36030_m.get()._field_kind);
				_36117_obj+=jule::Str(")(", 2);
				_36117_obj+=_1a7d79045_expr(&(*_self_), _36030_m.get()._field_expr);
				_36117_obj+=jule::Str("))", 2);
			}
		}
		else if ((_1a76763ae_trt(_36030_m.get()._field_expr_kind.ptr()) != nullptr) || (_1a7674e5c_prim(_36030_m.get()._field_expr_kind.ptr()) != nullptr) && _1a767a825_is_any(_1a7674e5c_prim(_36030_m.get()._field_expr_kind.ptr()).ptr())) {
			_case_begin_1aa4b3bbb:;
			{
				_36117_obj+=_1a7d78c37_model(&(*_self_), _36030_m.get()._field_expr);
				_36117_obj+=jule::Str(".", 1);
				if (_1e829b746_PRODUCTION) {
					_36117_obj+=jule::Str("operator ", 9);
					_36117_obj+=static__1d0a54d5d_kind(_36030_m.get()._field_kind);
					_36117_obj+=jule::Str("()", 2);
				} else {
					if ((_1a76763ae_trt(_36030_m.get()._field_expr_kind.ptr()) != nullptr) && (_1a76751c1_sptr(_36030_m.get()._field_kind.ptr()) != nullptr)) {
						_36117_obj+=jule::Str("cast_ptr<", 9);
						_36117_obj+=static__1d0a54d5d_kind(_1a76751c1_sptr(_36030_m.get()._field_kind.ptr()).get()._field_elem);
					} else {
						_36117_obj+=jule::Str("cast<", 5);
						_36117_obj+=static__1d0a54d5d_kind(_36030_m.get()._field_kind);
					}
					_36117_obj+=jule::Str(">(\"", 3);
					_36117_obj+=_1d0a44512_loc_info((*_self_)._field_oc.ptr(), _36030_m.get()._field_token);
					_36117_obj+=jule::Str("\")", 2);
				}
			}
		}
		else if ((_1a76763ae_trt(_36030_m.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa4b25b0:;
			{
				_36117_obj+=static__1d0a54d5d_kind(_36030_m.get()._field_kind);
				_36117_obj+=jule::Str("(", 1);
				_36117_obj+=_1a7d79045_expr(&(*_self_), _36030_m.get()._field_expr);
				_36117_obj+=jule::Str(", ", 2);
				_36117_obj+=_1a74648a6_itoa(static_cast<jule::I64>(_1d0a443d0_find_type_offset((*_self_)._field_oc.ptr(), _1a76763ae_trt(_36030_m.get()._field_kind.ptr()),_36030_m.get()._field_expr_kind)));
				_36117_obj+=jule::Str(")", 1);
			}
		}
		else {
			_case_begin_1aa4b2549:;
			{
				_36117_obj+=jule::Str("static_cast<", 12);
				_36117_obj+=static__1d0a54d5d_kind(_36030_m.get()._field_kind);
				_36117_obj+=jule::Str(">(", 2);
				_36117_obj+=_1a7d79045_expr(&(*_self_), _36030_m.get()._field_expr);
				_36117_obj+=jule::Str(")", 1);
			}
		}
		_match_end_1aa4b24c2:;
	}
	return _36117_obj;
}



inline jule::Str _1a7d7278b_args(_1a7c244d9_ExprCoder* _self_,jule::Slice<jule::Any> _41227_args) {
	if ((_41227_args.len() == 0LL)) {
		return jule::Str();
	}
	jule::Str _41617_obj = jule::Str();
	{
		auto &expr = _41227_args;
		auto it = expr.begin();
		_iter_begin_1aa4b81a9:;
		if (it != expr.end()) {
			jule::Any _1aa4c0337_a = *it;
			{
				_41617_obj+=_1a7d79045_expr(&(*_self_), _1aa4c0337_a);
				_41617_obj+=jule::Str(",", 1);
			}
			_iter_next_1aa4b81a9:;
			++it;
			goto _iter_begin_1aa4b81a9;
		}
		_iter_end_1aa4b81a9:;
	}
	(_41617_obj).mut_slice(0LL,_41617_obj.len() - 1LL);
	return _41617_obj;
}



inline jule::Str _1a7d728bd_model_for_call(_1a7c244d9_ExprCoder* _self_,jule::Any _42537_expr) {
	{
		auto &_match_expr{ _42537_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1a6429be1_FnIns>>()) {
			_case_begin_1aa4c1a86:;
			{
				return _1a7d74804_func_ins(&(*_self_), _42537_expr.operator jule::Ptr<_1a6429be1_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a641db6e_StructSubIdentExprModel>>()) {
			_case_begin_1aa4c1b0d:;
			{
				jule::Ptr<_1a641db6e_StructSubIdentExprModel> _43021_ssie = _42537_expr.operator jule::Ptr<_1a641db6e_StructSubIdentExprModel>();
				if ((_43021_ssie.get()._field_method != nullptr)) {
					return _1a7d74804_func_ins(&(*_self_), _43021_ssie.get()._field_method);
				}
			}
		}
		_match_end_1aa4c1954:;
	}
	return _1a7d78c37_model(&(*_self_), _42537_expr);
}



inline void _1a7d72a00_push_call_inf(_1a7c244d9_ExprCoder* _self_,jule::Str& _43837_obj,jule::Ptr<_1a641b364_FnCallExprModel>& _43848_m) {
	if (_1e829b746_PRODUCTION || ((!(_43848_m.get()._field_func.get()._field_anon)) && (!(_1a7d7b575_is_builtin_call_has_debuginf(_43848_m))))) {
		_43837_obj+=jule::Str("(", 1);
		return;
	}
	if (_43848_m.get()._field_func.get()._field_anon) {
		{
			auto &_match_expr{ _43848_m.get()._field_expr };
			
			if (_match_expr.type_is<jule::Ptr<_1a641db6e_StructSubIdentExprModel>>()) {
				_case_begin_1aa4c5edb:;
				{
					if (_43848_m.get()._field_expr.operator jule::Ptr<_1a641db6e_StructSubIdentExprModel>().get()._field_field.get()._field_decl.get()._field_owner.get()._field_cpp_linked) {
						_43837_obj+=jule::Str("(", 1);
						return;
					}
					goto _case_begin_1aa4c59be;
				}
			}
			else {
				_case_begin_1aa4c59be:;
				{
					_43837_obj+=jule::Str(".call", 5);
				}
			}
			_match_end_1aa4c5969:;
		}
	}
	_43837_obj+=jule::Str("(\"", 2);
	_43837_obj+=_1d0a44512_loc_info((*_self_)._field_oc.ptr(), _43848_m.get()._field_token);
	_43837_obj+=jule::Str("\"", 1);
	if ((_43848_m.get()._field_args.len() != 0LL)) {
		_43837_obj+=jule::Str(",", 1);
	}
}



inline jule::Str _1a7d72b32_pure_func_call(_1a7c244d9_ExprCoder* _self_,jule::Ptr<_1a641b364_FnCallExprModel>& _46338_m) {
	jule::Str _46417_obj = _1a7d728bd_model_for_call(&(*_self_), _46338_m.get()._field_expr);
	if ((!(_1a642a96c_is_builtin(_46338_m.get()._field_func.ptr())))) {
		if (_46338_m.get()._field_func.get()._field_decl.get()._field_cpp_linked && (_46338_m.get()._field_func.get()._field_generics.len() > 0LL)) {
			if ((!(_1d0a4ee02_has_directive(_46338_m.get()._field_func.get()._field_decl.get()._field_directives,jule::Str("cdef", 4))))) {
				_46417_obj+=jule::Str("<", 1);
				{
					auto &expr = _46338_m.get()._field_func.get()._field_generics;
					auto it = expr.begin();
					_iter_begin_1aa4c9c9d:;
					if (it != expr.end()) {
						jule::Ptr<_1a7672da0_TypeKind> _1aa4c9e9b_g = *it;
						{
							_46417_obj+=static__1d0a54d5d_kind(_1aa4c9e9b_g);
							_46417_obj+=jule::Str(",", 1);
						}
						_iter_next_1aa4c9c9d:;
						++it;
						goto _iter_begin_1aa4c9c9d;
					}
					_iter_end_1aa4c9c9d:;
				}
				(_46417_obj).mut_slice(0LL,_46417_obj.len() - 1LL);
				_46417_obj+=jule::Str(">", 1);
			}
		}
	}
	_1a7d72a00_push_call_inf(&(*_self_), _46417_obj,_46338_m);
	jule::Bool _47917_locinfo = false;
	jule::Str _48017_wrap_receiver = jule::Str();
	if (((!(_1a642a96c_is_builtin(_46338_m.get()._field_func.ptr()))) && (_46338_m.get()._field_func.get()._field_decl.get()._field_params.len() > 0LL)) && _1a6425835_is_self(_46338_m.get()._field_func.get()._field_decl.get()._field_params[0LL].ptr())) {
		{
			auto &_match_expr{ _46338_m.get()._field_expr };
			
			if (_match_expr.type_is<jule::Ptr<_1a641db6e_StructSubIdentExprModel>>()) {
				_case_begin_1aa4ccb5d:;
				{
					jule::Ptr<_1a641db6e_StructSubIdentExprModel> _48425_ssie = _46338_m.get()._field_expr.operator jule::Ptr<_1a641db6e_StructSubIdentExprModel>();
					{
						
						if (_1a6425a99_is_ref(_46338_m.get()._field_func.get()._field_decl.get()._field_params[0LL].ptr())) {
							_case_begin_1aa4ce1c0:;
							{
								_46417_obj+=_1a7d78c37_model(&(*_self_), jule::Any(_48425_ssie.get()._field_expr));
							}
						}
						else if ((_1a76751c1_sptr(_48425_ssie.get()._field_expr_kind.ptr()) != nullptr)) {
							_case_begin_1aa4d11c2:;
							{
								_46417_obj+=_1a7d78c37_model(&(*_self_), jule::Any(_48425_ssie.get()._field_expr));
								_46417_obj+=jule::Str(".ptr(", 5);
								if ((!(_1e829b746_PRODUCTION))) {
									_46417_obj+=jule::Str("\"", 1);
									_46417_obj+=_1d0a44512_loc_info((*_self_)._field_oc.ptr(), _46338_m.get()._field_token);
									_46417_obj+=jule::Str("\"", 1);
								}
								_46417_obj+=jule::Str(")", 1);
							}
						}
						else {
							_case_begin_1aa4cd93e:;
							{
								if ((_1a767614a_strct(_48425_ssie.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
									_46417_obj+=jule::Str("&", 1);
									if ((!(_48425_ssie.get()._field_expr.get()._field_lvalue))) {
										_48017_wrap_receiver=_1a7d78c37_model(&(*_self_), jule::Any(_48425_ssie.get()._field_expr));
									}
								}
								if ((!(_48017_wrap_receiver.empty()))) {
									_46417_obj+=jule::Str("_wrap_copy", 10);
								} else {
									_46417_obj+=_1a7d78c37_model(&(*_self_), jule::Any(_48425_ssie.get()._field_expr));
								}
							}
						}
						_match_end_1aa4cd8b7:;
					}
					if ((_46338_m.get()._field_args.len() > 0LL)) {
						_46417_obj+=jule::Str(", ", 2);
					}
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1a641d3ee_TraitSubIdentExprModel>>()) {
				_case_begin_1aa4ccbc4:;
				{
					_46417_obj+=_1a7d78c37_model(&(*_self_), _46338_m.get()._field_expr.operator jule::Ptr<_1a641d3ee_TraitSubIdentExprModel>().get()._field_expr);
					if ((!(_1e829b746_PRODUCTION))) {
						_47917_locinfo=true;
					}
					if ((_46338_m.get()._field_args.len() > 0LL)) {
						_46417_obj+=jule::Str(", ", 2);
					}
				}
			}
			_match_end_1aa4ccac5:;
		}
	}
	_46417_obj+=_1a7d7278b_args(&(*_self_), _46338_m.get()._field_args);
	if (_47917_locinfo) {
		_46417_obj+=jule::Str(", \"", 3);
		_46417_obj+=_1d0a44512_loc_info((*_self_)._field_oc.ptr(), _46338_m.get()._field_token);
		_46417_obj+=jule::Str("\"", 1);
	}
	_46417_obj+=jule::Str(")", 1);
	if ((!(_48017_wrap_receiver.empty()))) {
		(_46417_obj).buffer.insert(0, (((jule::Str("({ auto _wrap_copy = ", 21) + _48017_wrap_receiver) + jule::Str("; ", 2))));
		_46417_obj+=jule::Str("; })", 4);
	}
	if (_46338_m.get()._field_is_co) {
		(_46417_obj).buffer.insert(0, (jule::Str("__JULE_CO(", 10)));
		_46417_obj+=jule::Str(")", 1);
	}
	return _46417_obj;
}



inline jule::Str _1a7d72c64_func_call(_1a7c244d9_ExprCoder* _self_,jule::Ptr<_1a641b364_FnCallExprModel> _54532_m) {
	if ((_1a642a96c_is_builtin(_54532_m.get()._field_func.ptr()) || (!(_54532_m.get()._field_func.get()._field_decl.get()._field_exceptional))) || ((_54532_m.get()._field_except != nullptr) && (_54532_m.get()._field_except.get()._field_stmts.len() == 0LL))) {
		return _1a7d72b32_pure_func_call(&(*_self_), _54532_m);
	}
	jule::Str _55317_obj = jule::Str("({\n", 3);
	_1d09aee72_add_indent((*_self_)._field_oc.ptr());
	_55317_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
	_55317_obj+=jule::Str("auto except = ", 14);
	_55317_obj+=_1a7d72b32_pure_func_call(&(*_self_), _54532_m);
	_55317_obj+=jule::Str(";\n", 2);
	_55317_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
	if ((_54532_m.get()._field_except != nullptr)) {
		if ((_54532_m.get()._field_func.get()._field_result == nullptr) || (!(_54532_m.get()._field_assigned))) {
			_55317_obj+=jule::Str("if (!except.ok()) ", 18);
			_55317_obj+=_1a7ca1379_scope((*_self_)._field_oc.get()._field_sc.ptr(), _54532_m.get()._field_except);
			_55317_obj+=jule::Str("\n", 1);
		} else {
			jule::Bool _56621_forwarded = _1a7d7b289_is_forwarded(_54532_m.get()._field_except);
			_55317_obj+=jule::Str("(except.ok()) ? (except.result) : (", 35);
			if (_56621_forwarded) {
				_55317_obj+=jule::Str("{", 1);
			}
			_55317_obj+=_1a7ca1379_scope((*_self_)._field_oc.get()._field_sc.ptr(), _54532_m.get()._field_except);
			if (_56621_forwarded) {
				_55317_obj+=jule::Str(" ", 1);
				_55317_obj+=_1a7d79661_init_expr(&(*_self_), _54532_m.get()._field_func.get()._field_result);
				_55317_obj+=jule::Str(";}", 2);
			}
			_55317_obj+=jule::Str(");\n", 3);
		}
		_1d0a4416b_done_indent((*_self_)._field_oc.ptr());
	} else {
		_55317_obj+=jule::Str("if (!except.ok()) jule::panic(jule::Str(\"", 41);
		_55317_obj+=jule::Str("unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 98);
		_55317_obj+=_1d0a44512_loc_info((*_self_)._field_oc.ptr(), _54532_m.get()._field_token);
		_55317_obj+=jule::Str("\"));\n", 5);
		if ((!(_1a6426e96_is_void(_54532_m.get()._field_func.get()._field_decl.ptr())))) {
			_55317_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
			_55317_obj+=jule::Str("(except.result);\n", 17);
		}
		_1d0a4416b_done_indent((*_self_)._field_oc.ptr());
	}
	_55317_obj+=_1d0a4429d_indent((*_self_)._field_oc.ptr());
	_55317_obj+=jule::Str("})", 2);
	return _55317_obj;
}



inline jule::Str _1a7d72d96_slice(_1a7c244d9_ExprCoder* _self_,jule::Ptr<_1a641b71b_SliceExprModel> _59728_m) {
	if ((_59728_m.get()._field_elems.len() == 0LL)) {
		return (static__1d0a52685_as_slice(_59728_m.get()._field_elem_kind) + jule::Str("()", 2));
	}
	jule::Str _60117_obj = static__1d0a52685_as_slice(_59728_m.get()._field_elem_kind);
	_60117_obj+=jule::Str("({", 2);
	_60117_obj+=_1a7d7278b_args(&(*_self_), _59728_m.get()._field_elems);
	_60117_obj+=jule::Str("})", 2);
	return _60117_obj;
}



inline jule::Str _1a7d72ec8_indexing(_1a7c244d9_ExprCoder* _self_,jule::Ptr<_1a641bb8e_IndexingExprModel> _60831_m) {
	jule::Str _60917_obj = _1a7d78c37_model(&(*_self_), _60831_m.get()._field_expr.get()._field_model);
	{
		
		if (_1e829b746_PRODUCTION || (_1a7675435_ptr(_60831_m.get()._field_expr.get()._field_kind.ptr()) != nullptr) || (_1a7676623_map(_60831_m.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa4e7b89:;
			{
				_60917_obj+=jule::Str("[", 1);
				_60917_obj+=_1a7d79045_expr(&(*_self_), _60831_m.get()._field_index.get()._field_model);
				_60917_obj+=jule::Str("]", 1);
			}
		}
		else {
			_case_begin_1aa4e6c54:;
			{
				_60917_obj+=jule::Str(".at(\"", 5);
				_60917_obj+=_1d0a44512_loc_info((*_self_)._field_oc.ptr(), _60831_m.get()._field_token);
				_60917_obj+=jule::Str("\",", 2);
				_60917_obj+=_1a7d79045_expr(&(*_self_), _60831_m.get()._field_index.get()._field_model);
				_60917_obj+=jule::Str(")", 1);
			}
		}
		_match_end_1aa4e6bee:;
	}
	return _60917_obj;
}



inline jule::Str _1a7d7310a_unsafe_indexing(_1a7c244d9_ExprCoder* _self_,jule::Ptr<_1a7d538d2_UnsafeIndexingExprModel> _62838_m) {
	jule::Str _62917_obj = _1a7d78c37_model(&(*_self_), _62838_m.get()._field_node.get()._field_expr.get()._field_model);
	{
		
		if (_1e829b746_PRODUCTION || (_1a7675435_ptr(_62838_m.get()._field_node.get()._field_expr.get()._field_kind.ptr()) != nullptr) || (_1a7676623_map(_62838_m.get()._field_node.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa4ebdad:;
			{
				_62917_obj+=jule::Str("[", 1);
				_62917_obj+=_1a7d79045_expr(&(*_self_), _62838_m.get()._field_node.get()._field_index.get()._field_model);
				_62917_obj+=jule::Str("]", 1);
			}
		}
		else {
			_case_begin_1aa4eae34:;
			{
				_62917_obj+=jule::Str(".__at(", 6);
				_62917_obj+=_1a7d79045_expr(&(*_self_), _62838_m.get()._field_node.get()._field_index.get()._field_model);
				_62917_obj+=jule::Str(")", 1);
			}
		}
		_match_end_1aa4eadce:;
	}
	return _62917_obj;
}



inline jule::Str _1a7d7323c_anon_func(_1a7c244d9_ExprCoder* _self_,jule::Ptr<_1a641c046_AnonFnExprModel> _64632_m) {
	jule::Str _64717_obj = static__1d0a54ab6_func(_64632_m.get()._field_func);
	_64717_obj+=jule::Str("([=]", 4);
	_64717_obj+=_1d0a45326_params_ins((*_self_)._field_oc.ptr(), _64632_m.get()._field_func.get()._field_params);
	_64717_obj+=jule::Str(" mutable -> ", 12);
	_64717_obj+=static__1d0a54577_func_ins_result(_64632_m.get()._field_func);
	_64717_obj+=jule::Str(" ", 1);
	_64717_obj+=_1a7ce61b0_func_scope((*_self_)._field_oc.get()._field_sc.ptr(), _64632_m.get()._field_func);
	_64717_obj+=jule::Str(")", 1);
	return _64717_obj;
}



inline jule::Str _1a7d7336e_map(_1a7c244d9_ExprCoder* _self_,jule::Ptr<_1a641c871_MapExprModel> _65826_m) {
	jule::Str _65917_obj = jule::Str("jule::Map<", 10);
	_65917_obj+=static__1d0a54d5d_kind(_65826_m.get()._field_key_kind);
	_65917_obj+=jule::Str(",", 1);
	_65917_obj+=static__1d0a54d5d_kind(_65826_m.get()._field_val_kind);
	_65917_obj+=jule::Str(">({", 3);
	if ((_65826_m.get()._field_entries.len() > 0LL)) {
		{
			auto &expr = _65826_m.get()._field_entries;
			auto it = expr.begin();
			_iter_begin_1aa50438d:;
			if (it != expr.end()) {
				jule::Ptr<_1a641c3ed_KeyValPairExprModel> _1aa50448c_pair = *it;
				{
					jule::Str _66625_pair_obj = jule::Str("{", 1);
					_66625_pair_obj+=_1a7d79045_expr(&(*_self_), _1aa50448c_pair.get()._field_key);
					_66625_pair_obj+=jule::Str(",", 1);
					_66625_pair_obj+=_1a7d79045_expr(&(*_self_), _1aa50448c_pair.get()._field_val);
					_66625_pair_obj+=jule::Str("}", 1);
					_65917_obj+=_66625_pair_obj;
					_65917_obj+=jule::Str(",", 1);
				}
				_iter_next_1aa50438d:;
				++it;
				goto _iter_begin_1aa50438d;
			}
			_iter_end_1aa50438d:;
		}
		(_65917_obj).mut_slice(0LL,_65917_obj.len() - 1LL);
	}
	_65917_obj+=jule::Str("})", 2);
	return _65917_obj;
}



inline jule::Str _1a7d734a1_slicing(_1a7c244d9_ExprCoder* _self_,jule::Ptr<_1a641cdb0_SlicingExprModel> _68030_m) {
	jule::Str _68117_obj = _1a7d78c37_model(&(*_self_), _68030_m.get()._field_expr);
	_68117_obj+=jule::Str(".slice(", 7);
	if ((!(_1e829b746_PRODUCTION))) {
		_68117_obj+=jule::Str("\"", 1);
		_68117_obj+=_1d0a44512_loc_info((*_self_)._field_oc.ptr(), _68030_m.get()._field_token);
		_68117_obj+=jule::Str("\",", 2);
	}
	_68117_obj+=_1a7d79045_expr(&(*_self_), _68030_m.get()._field_left);
	if (_68030_m.get()._field_right != jule::Any(jule::Any(nullptr))) {
		_68117_obj+=jule::Str(",", 1);
		_68117_obj+=_1a7d79045_expr(&(*_self_), _68030_m.get()._field_right);
	}
	_68117_obj+=jule::Str(")", 1);
	return _68117_obj;
}



inline jule::Str _1a7d735d3_trait_sub(_1a7c244d9_ExprCoder* _self_,jule::Ptr<_1a641d3ee_TraitSubIdentExprModel> _69732_m) {
	jule::Str _69817_obj = static__1a7d7e9a7_trait_decl(_69732_m.get()._field_trt);
	_69817_obj+=jule::Str("_mptr_data", 10);
	_69817_obj+=jule::Str("[(", 2);
	_69817_obj+=_1a7d78c37_model(&(*_self_), _69732_m.get()._field_expr);
	_69817_obj+=jule::Str(").type_offset].", 15);
	_69817_obj+=static__1a7d7e468_func(_69732_m.get()._field_method);
	return _69817_obj;
}



inline jule::Str _1a7d737ae_structure_sub(_1a7c244d9_ExprCoder* _self_,jule::Ptr<_1a641db6e_StructSubIdentExprModel> _70736_m) {
	jule::Str _70817_obj = _1a7d78c37_model(&(*_self_), jule::Any(_70736_m.get()._field_expr));
	if ((_70736_m.get()._field_field != nullptr)) {
		if ((_1a7675435_ptr(_70736_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_70817_obj+=jule::Str("->", 2);
		} else if ((_1a76751c1_sptr(_70736_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_70817_obj+=jule::Str(".get(", 5);
			if ((!(_1e829b746_PRODUCTION))) {
				_70817_obj+=jule::Str("\"", 1);
				_70817_obj+=_1d0a44512_loc_info((*_self_)._field_oc.ptr(), _70736_m.get()._field_token);
				_70817_obj+=jule::Str("\"", 1);
			}
			_70817_obj+=jule::Str(").", 2);
		} else {
			_70817_obj+=jule::Str(".", 1);
		}
		_70817_obj+=static__1a7d80535_field(_70736_m.get()._field_field.get()._field_decl);
	}
	return _70817_obj;
}



inline jule::Str _1a7d73abc_common_ident(_1a7c244d9_ExprCoder* _self_,jule::Ptr<_1a641e7a7_CommonIdentExprModel> _72827_m) {
	return _72827_m.get()._field_ident;
}



inline jule::Str _1a7d73dca_common_sub(_1a7c244d9_ExprCoder* _self_,jule::Ptr<_1a641ed3a_CommonSubIdentExprModel> _73233_m) {
	jule::Str _73317_obj = _1a7d78c37_model(&(*_self_), _73233_m.get()._field_expr);
	{
		
		if ((_1a7675435_ptr(_73233_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_case_begin_1aa51280d:;
			{
				_73317_obj+=jule::Str("->", 2);
			}
		}
		else if ((_1a76751c1_sptr(_73233_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_case_begin_1aa512555:;
			{
				_73317_obj+=jule::Str(".get(", 5);
				if ((!(_1e829b746_PRODUCTION))) {
					_73317_obj+=jule::Str("\n", 1);
					_73317_obj+=_1d0a44512_loc_info((*_self_)._field_oc.ptr(), _73233_m.get()._field_token);
					_73317_obj+=jule::Str("\n", 1);
				}
				_73317_obj+=jule::Str(").", 2);
			}
		}
		else {
			_case_begin_1aa5121e2:;
			{
				_73317_obj+=jule::Str(".", 1);
			}
		}
		_match_end_1aa51218c:;
	}
	_73317_obj+=_73233_m.get()._field_ident;
	return _73317_obj;
}



inline jule::Str _1a7d741d8_array(_1a7c244d9_ExprCoder* _self_,jule::Ptr<_1a641e4bb_ArrayExprModel> _75228_m) {
	jule::Str _75317_obj = static__1d0a539e9_array(_75228_m.get()._field_kind);
	if ((_75228_m.get()._field_elems.len() == 0LL)) {
		_75317_obj+=jule::Str("()", 2);
		return _75317_obj;
	}
	if ((_75228_m.get()._field_elems.len() == 2LL) && (_75228_m.get()._field_elems[1LL] == jule::Any(jule::Any(nullptr)))) {
		_75317_obj+=jule::Str("(", 1);
		_75317_obj+=_1a7d79045_expr(&(*_self_), _75228_m.get()._field_elems[0LL]);
		_75317_obj+=jule::Str(")", 1);
		return _75317_obj;
	}
	_75317_obj+=jule::Str("({", 2);
	_75317_obj+=_1a7d7278b_args(&(*_self_), _75228_m.get()._field_elems);
	_75317_obj+=jule::Str("})", 2);
	return _75317_obj;
}



inline jule::Str _1a7d744e6_func_ins_common(_1a7c244d9_ExprCoder* _self_,jule::Ptr<_1a6429be1_FnIns> _77534_m) {
	jule::Str _77617_obj = static__1d0a54ab6_func(_77534_m);
	_77617_obj+=jule::Str("(", 1);
	_77617_obj+=_1a7d74804_func_ins(&(*_self_), _77534_m);
	_77617_obj+=jule::Str(")", 1);
	return _77617_obj;
}



inline jule::Str _1a7d74804_func_ins(_1a7c244d9_ExprCoder* _self_,jule::Ptr<_1a6429be1_FnIns> _78427_m) {
	if ((_78427_m.get()._field_decl != nullptr) && _78427_m.get()._field_decl.get()._field_cpp_linked) {
		jule::Ptr<_1d06c9ecd_Directive> _78617_d = _1d0a4ea6c_find_directive(_78427_m.get()._field_decl.get()._field_directives,jule::Str("namespace", 9));
		if ((_78617_d != nullptr)) {
			jule::Str _78825_obj = _1a7d799b3_concat_all_parts(_78617_d.get()._field_args);
			_78825_obj+=jule::Str("::", 2);
			_78825_obj+=static__1a7d7e710_func_ins(_78427_m);
			return _78825_obj;
		}
	}
	return static__1a7d7e710_func_ins(_78427_m);
}



inline jule::Str _1a7d74b12_tuple(_1a7c244d9_ExprCoder* _self_,jule::Ptr<_1a6420115_TupleExprModel> _79728_m) {
	jule::Str _79817_obj = jule::Str("std::make_tuple(", 16);
	{
		auto &expr = _79728_m.get()._field_datas;
		auto it = expr.begin();
		_iter_begin_1aa51d297:;
		if (it != expr.end()) {
			jule::Ptr<_1a7648b67_Data> _1aa51d495_d = *it;
			{
				_79817_obj+=_1a7d79045_expr(&(*_self_), _1aa51d495_d.get()._field_model);
				_79817_obj+=jule::Str(",", 1);
			}
			_iter_next_1aa51d297:;
			++it;
			goto _iter_begin_1aa51d297;
		}
		_iter_end_1aa51d297:;
	}
	(_79817_obj).mut_slice(0LL,_79817_obj.len() - 1LL);
	_79817_obj+=jule::Str(")", 1);
	return _79817_obj;
}



inline jule::Str _1a7d74e20_new_call(_1a7c244d9_ExprCoder* _self_,jule::Ptr<_1a6421105_BuiltinNewCallExprModel> _80831_m) {
	jule::Str _80917_obj = jule::Str("jule::new_ptr<", 14);
	_80917_obj+=static__1d0a54d5d_kind(_80831_m.get()._field_kind);
	_80917_obj+=jule::Str(">(", 2);
	if (_80831_m.get()._field_init != jule::Any(jule::Any(nullptr))) {
		_80917_obj+=_1a7d79045_expr(&(*_self_), _80831_m.get()._field_init);
	}
	_80917_obj+=jule::Str(")", 1);
	return _80917_obj;
}



inline jule::Str _1a7d7522d_out_call(_1a7c244d9_ExprCoder* _self_,jule::Ptr<_1a6420511_BuiltinOutCallExprModel> _81931_m) {
	if (_81931_m.get()._field_debug && _1e829b746_PRODUCTION) {
		return jule::Str();
	}
	jule::Str _82317_obj = jule::Str("jule::out(", 10);
	_82317_obj+=_1a7d79045_expr(&(*_self_), _81931_m.get()._field_expr);
	_82317_obj+=jule::Str(")", 1);
	return _82317_obj;
}



inline jule::Str _1a7d7553b_outln_call(_1a7c244d9_ExprCoder* _self_,jule::Ptr<_1a64208eb_BuiltinOutlnCallExprModel> _82933_m) {
	if (_82933_m.get()._field_debug && _1e829b746_PRODUCTION) {
		return jule::Str();
	}
	jule::Str _83317_obj = jule::Str("jule::outln(", 12);
	_83317_obj+=_1a7d79045_expr(&(*_self_), _82933_m.get()._field_expr);
	_83317_obj+=jule::Str(")", 1);
	return _83317_obj;
}



inline jule::Str _1a7d75849_panic_call(_1a7c244d9_ExprCoder* _self_,jule::Ptr<_1a64214e0_BuiltinPanicCallExprModel> _83933_m) {
	jule::Str _84017_obj = jule::Str("jule::panic(", 12);
	_84017_obj+=_1a7d79045_expr(&(*_self_), _83933_m.get()._field_expr);
	_84017_obj+=jule::Str(" + jule::Str(\"\\nlocation: ", 26);
	_84017_obj+=_1d0a44512_loc_info((*_self_)._field_oc.ptr(), _83933_m.get()._field_token);
	_84017_obj+=jule::Str("\"));", 4);
	return _84017_obj;
}



inline jule::Str _1a7d75b57_assert_call(_1a7c244d9_ExprCoder* _self_,jule::Ptr<_1a6421996_BuiltinAssertCallExprModel> _84834_m) {
	if (_1e829b746_PRODUCTION) {
		return jule::Str();
	}
	jule::Str _85217_obj = jule::Str("if (!(", 6);
	_85217_obj+=_1a7d79045_expr(&(*_self_), _84834_m.get()._field_expr);
	_85217_obj+=jule::Str(")) jule::panic(jule::Str(", 25);
	_85217_obj+=_1a7d7a5c9_cstr_lit(static_cast<jule::Slice<jule::U8>>(_84834_m.get()._field_log));
	_85217_obj+=jule::Str(") + jule::Str(\"\\nlocation: ", 27);
	_85217_obj+=_1d0a44512_loc_info((*_self_)._field_oc.ptr(), _84834_m.get()._field_token);
	_85217_obj+=jule::Str("\"));", 4);
	return _85217_obj;
}



inline jule::Str _1a7d75e65_error_call(_1a7c244d9_ExprCoder* _self_,jule::Ptr<_1a6422722_BuiltinErrorCallExprModel> _86233_m) {
	jule::Str _86317_obj = jule::Str("return ", 7);
	if (_1a6426e96_is_void(_86233_m.get()._field_func.get()._field_decl.ptr())) {
		_86317_obj+=jule::Str("jule::VoidExceptional(", 22);
	} else {
		_86317_obj+=jule::Str("jule::Exceptional<", 18);
		_86317_obj+=static__1d0a54d5d_kind(_86233_m.get()._field_func.get()._field_result);
		_86317_obj+=jule::Str(">(", 2);
	}
	_86317_obj+=_1a7d79045_expr(&(*_self_), _86233_m.get()._field_err);
	_86317_obj+=jule::Str(")", 1);
	return _86317_obj;
}



inline jule::Str _1a7d76273_make_call(_1a7c244d9_ExprCoder* _self_,jule::Ptr<_1a6421e4c_BuiltinMakeCallExprModel> _87632_m) {
	jule::Str _87717_obj = jule::Str();
	if (_87632_m.get()._field_len != jule::Any(jule::Any(nullptr))) {
		_87717_obj+=_1a7d79045_expr(&(*_self_), _87632_m.get()._field_len);
	} else {
		_87717_obj+=jule::Str("0", 1);
	}
	if (_87632_m.get()._field_cap != jule::Any(jule::Any(nullptr))) {
		_87717_obj+=jule::Str(",", 1) + _1a7d79045_expr(&(*_self_), _87632_m.get()._field_cap);
	}
	if ((_1a7675699_enm(_1a7675b72_slc(_87632_m.get()._field_kind.ptr()).get()._field_elem.ptr()) != nullptr)) {
		_87717_obj+=jule::Str(",", 1);
		_87717_obj+=_1a7d79661_init_expr(&(*_self_), _1a7675b72_slc(_87632_m.get()._field_kind.ptr()).get()._field_elem);
		if (_87632_m.get()._field_cap != jule::Any(jule::Any(nullptr))) {
			(_87717_obj).buffer.insert(0, ((static__1d0a54d5d_kind(_87632_m.get()._field_kind) + jule::Str("::alloc(", 8))));
		} else {
			(_87717_obj).buffer.insert(0, ((static__1d0a54d5d_kind(_87632_m.get()._field_kind) + jule::Str("::alloc_def(", 12))));
		}
	} else {
		(_87717_obj).buffer.insert(0, ((static__1d0a54d5d_kind(_87632_m.get()._field_kind) + jule::Str("::alloc(", 8))));
	}
	_87717_obj+=jule::Str(")", 1);
	return _87717_obj;
}



inline jule::Str _1a7d76581_push_to_slice(_1a7c244d9_ExprCoder* _self_,jule::Ptr<_1a7d60889_PushToSliceExprModel> _90336_m) {
	jule::Str _90413_dest = _1a7d78c37_model(&(*_self_), _90336_m.get()._field_dest);
	jule::Str _90517_obj = _90413_dest;
	_90517_obj+=jule::Str(" = jule::alloc_for_append(", 26);
	_90517_obj+=_90413_dest;
	_90517_obj+=jule::Str(",", 1);
	_90517_obj+=_1a74648a6_itoa(static_cast<jule::I64>(_90336_m.get()._field_elems.get()._field_elems.len()));
	_90517_obj+=jule::Str(");", 2);
	{
		auto &expr = _90336_m.get()._field_elems.get()._field_elems;
		auto it = expr.begin();
		_iter_begin_1aa538b20:;
		if (it != expr.end()) {
			jule::Any _1aa538bb9_e = *it;
			{
				_90517_obj+=_90413_dest;
				_90517_obj+=jule::Str(".__push(", 8);
				_90517_obj+=_1a7d78c37_model(&(*_self_), _1aa538bb9_e);
				_90517_obj+=jule::Str(");", 2);
			}
			_iter_next_1aa538b20:;
			++it;
			goto _iter_begin_1aa538b20;
		}
		_iter_end_1aa538b20:;
	}
	return _90517_obj;
}



inline jule::Str _1a7d7688e_append_call(_1a7c244d9_ExprCoder* _self_,jule::Ptr<_1a6422337_BuiltinAppendCallExprModel> _92134_m) {
	jule::Str _92217_obj = jule::Str("jule::append(", 13);
	_92217_obj+=_1a7d78c37_model(&(*_self_), _92134_m.get()._field_dest);
	_92217_obj+=jule::Str(",", 1);
	_92217_obj+=_1a7d78c37_model(&(*_self_), _92134_m.get()._field_elements);
	_92217_obj+=jule::Str(")", 1);
	return _92217_obj;
}



inline jule::Str _1a7d76b9c_clone_call(_1a7c244d9_ExprCoder* _self_,jule::Ptr<_1a6420c1a_BuiltinCloneCallExprModel> _93033_m) {
	jule::Str _93117_obj = jule::Str("jule::clone(", 12);
	_93117_obj+=_1a7d78c37_model(&(*_self_), _93033_m.get()._field_expr);
	_93117_obj+=jule::Str(")", 1);
	return _93117_obj;
}



inline jule::Str _1a7d76eaa_sizeof(_1a7c244d9_ExprCoder* _self_,jule::Ptr<_1a64229ec_SizeofExprModel> _93729_m) {
	jule::Str _93817_obj = jule::Str("sizeof(", 7);
	_93817_obj+=_1a7d79045_expr(&(*_self_), _93729_m.get()._field_expr);
	_93817_obj+=jule::Str(")", 1);
	return _93817_obj;
}



inline jule::Str _1a7d772b8_alignof(_1a7c244d9_ExprCoder* _self_,jule::Ptr<_1a642316d_AlignofExprModel> _94430_m) {
	jule::Str _94517_obj = jule::Str("alignof(", 8);
	_94517_obj+=_1a7d79045_expr(&(*_self_), _94430_m.get()._field_expr);
	_94517_obj+=jule::Str(")", 1);
	return _94517_obj;
}



inline jule::Str _1a7d775c6_rune_lit(_1a7c244d9_ExprCoder* _self_,jule::Ptr<_1a642335a_RuneExprModel> _95123_m) {
	if ((_95123_m.get()._field_code <= 127LL)) {
		jule::Str _95321_b = _1a7d7a046_sbtoa(static_cast<jule::U8>(static_cast<jule::U8>(_95123_m.get()._field_code)));
		if ((_95321_b == jule::Str("'", 1))) {
			_95321_b=jule::Str("\\'", 2);
		}
		return ((jule::Str("'", 1) + _95321_b) + jule::Str("'", 1));
	}
	return _1a7d7abb2_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_95123_m.get()._field_code)));
}



inline jule::Str _1a7d778d4_structure_static(_1a7c244d9_ExprCoder* _self_,jule::Ptr<_1a641e125_StructStaticIdentExprModel> _96235_m) {
	return static__1a7d7e710_func_ins(_96235_m.get()._field_method);
}



inline jule::Str _1a7d77be2_integrated_to_str(_1a7c244d9_ExprCoder* _self_,jule::Ptr<_1a6423646_IntegratedToStrExprModel> _96640_m) {
	jule::Str _96717_obj = jule::Str("jule::to_str(", 13);
	_96717_obj+=_1a7d78c37_model(&(*_self_), _96640_m.get()._field_expr);
	_96717_obj+=jule::Str(")", 1);
	return _96717_obj;
}



inline jule::Str _1a7d78000_backend_emit(_1a7c244d9_ExprCoder* _self_,jule::Ptr<_1a64239dc_BackendEmitExprModel> _97335_m) {
	if ((_97335_m.get()._field_exprs.len() == 0LL)) {
		return _97335_m.get()._field_code;
	}
	{
		auto &expr = _97335_m.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1aa5457a8:;
		if (it != expr.end()) {
			jule::I64 _1aa545b71_i = it - expr.begin();
			jule::Any _1aa545d6e_expr = *it;
			{
				_97335_m.get()._field_exprs[_1aa545b71_i]=jule::Any(_1a7d79045_expr(&(*_self_), _1aa545d6e_expr));
			}
			_iter_next_1aa5457a8:;
			++it;
			_1aa545b71_i++;
			goto _iter_begin_1aa5457a8;
		}
		_iter_end_1aa5457a8:;
	}
	return _1a76e124d_format(_97335_m.get()._field_code,_97335_m.get()._field_exprs);
}



inline jule::Str _1a7d7830d_free(_1a7c244d9_ExprCoder* _self_,jule::Ptr<_1a6423cc8_FreeExprModel> _98327_m) {
	if (_1e829d539_RC) {
		return (_1a7d79045_expr(&(*_self_), _98327_m.get()._field_expr) + jule::Str(".dealloc()", 10));
	}
	return (_1a7d79045_expr(&(*_self_), _98327_m.get()._field_expr) + jule::Str(".__free()", 9));
}



inline jule::Str _1a7d7861b_mut_slicing(_1a7c244d9_ExprCoder* _self_,jule::Ptr<_1a7d60e0b_MutSlicingExprModel> _99034_m) {
	jule::Str _99117_obj = jule::Str("(", 1);
	_99117_obj+=_1a7d78c37_model(&(*_self_), _99034_m.get()._field_expr);
	_99117_obj+=jule::Str(").mut_slice(", 12);
	if ((!(_1e829b746_PRODUCTION))) {
		_99117_obj+=jule::Str("\"", 1);
		_99117_obj+=_1d0a44512_loc_info((*_self_)._field_oc.ptr(), _99034_m.get()._field_token);
		_99117_obj+=jule::Str("\",", 2);
	}
	_99117_obj+=_1a7d79045_expr(&(*_self_), _99034_m.get()._field_left);
	if (_99034_m.get()._field_right != jule::Any(jule::Any(nullptr))) {
		_99117_obj+=jule::Str(",", 1);
		_99117_obj+=_1a7d79045_expr(&(*_self_), _99034_m.get()._field_right);
	}
	_99117_obj+=jule::Str(");", 2);
	return _99117_obj;
}



inline jule::Str _1a7d78929_str_insert_begin(_1a7c244d9_ExprCoder* _self_,jule::Ptr<_1a7d61307_StrInsertBeginExprModel> _100839_m) {
	jule::Str _100917_obj = jule::Str("(", 1);
	_100917_obj+=_1a7d78c37_model(&(*_self_), _100839_m.get()._field_dest);
	_100917_obj+=jule::Str(").buffer.insert(0, (", 20);
	_100917_obj+=_1a7d78c37_model(&(*_self_), _100839_m.get()._field_expr);
	_100917_obj+=jule::Str("));", 3);
	return _100917_obj;
}



inline jule::Str _1a7d78c37_model(_1a7c244d9_ExprCoder* _self_,jule::Any _101728_m) {
	{
		auto &_match_expr{ _101728_m };
		
		if (_match_expr.type_is<jule::Ptr<_1a7648b67_Data>>()) {
			_case_begin_1aa54ceec:;
			{
				return _1a7d78c37_model(&(*_self_), _101728_m.operator jule::Ptr<_1a7648b67_Data>().get()._field_model);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a7672da0_TypeKind>>()) {
			_case_begin_1aa54d937:;
			{
				return static__1d0a54d5d_kind(_101728_m.operator jule::Ptr<_1a7672da0_TypeKind>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a751ddb1_Const>>()) {
			_case_begin_1aa54d30a:;
			{
				return _1a7d71812_constant(&(*_self_), _101728_m.operator jule::Ptr<_1a751ddb1_Const>(),false);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a75ec478_Var>>()) {
			_case_begin_1aa54d371:;
			{
				return _1a7d71cda_var(&(*_self_), _101728_m.operator jule::Ptr<_1a75ec478_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a7465bd7_Trait>>()) {
			_case_begin_1aa54d3d7:;
			{
				return static__1a7d7e9a7_trait_decl(_101728_m.operator jule::Ptr<_1a7465bd7_Trait>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a64147be_Struct>>()) {
			_case_begin_1aa54d44d:;
			{
				return _1a7d71e1c_structure(&(*_self_), _101728_m.operator jule::Ptr<_1a64147be_Struct>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a641744d_StructIns>>()) {
			_case_begin_1aa54d5d5:;
			{
				return _1a7d7204e_structure_ins(&(*_self_), _101728_m.operator jule::Ptr<_1a641744d_StructIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6429be1_FnIns>>()) {
			_case_begin_1aa54d64b:;
			{
				return _1a7d744e6_func_ins_common(&(*_self_), _101728_m.operator jule::Ptr<_1a6429be1_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a7d52c99_UnsafeBinopExprModel>>()) {
			_case_begin_1aa54d6b2:;
			{
				return _1a7d71a76_unsafe_binary(&(*_self_), _101728_m.operator jule::Ptr<_1a7d52c99_UnsafeBinopExprModel>().get()._field_node);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6419571_BinopExprModel>>()) {
			_case_begin_1aa54d739:;
			{
				return _1a7d71ba8_binary(&(*_self_), _101728_m.operator jule::Ptr<_1a6419571_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6419928_UnaryExprModel>>()) {
			_case_begin_1aa54d7b1:;
			{
				return _1a7d72181_unary(&(*_self_), _101728_m.operator jule::Ptr<_1a6419928_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a641a1cb_StructLitExprModel>>()) {
			_case_begin_1aa54dd11:;
			{
				return _1a7d723e5_structure_lit(&(*_self_), _101728_m.operator jule::Ptr<_1a641a1cb_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a641a50b_AllocStructLitExprModel>>()) {
			_case_begin_1aa54dd77:;
			{
				return _1a7d72527_alloc_structure(&(*_self_), _101728_m.operator jule::Ptr<_1a641a50b_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a641aa39_CastingExprModel>>()) {
			_case_begin_1aa54dddd:;
			{
				return _1a7d72659_casting(&(*_self_), _101728_m.operator jule::Ptr<_1a641aa39_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a641b364_FnCallExprModel>>()) {
			_case_begin_1aa54de54:;
			{
				return _1a7d72c64_func_call(&(*_self_), _101728_m.operator jule::Ptr<_1a641b364_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a641b71b_SliceExprModel>>()) {
			_case_begin_1aa54deba:;
			{
				return _1a7d72d96_slice(&(*_self_), _101728_m.operator jule::Ptr<_1a641b71b_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a641e4bb_ArrayExprModel>>()) {
			_case_begin_1aa54e042:;
			{
				return _1a7d741d8_array(&(*_self_), _101728_m.operator jule::Ptr<_1a641e4bb_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a7d538d2_UnsafeIndexingExprModel>>()) {
			_case_begin_1aa54e0b9:;
			{
				return _1a7d7310a_unsafe_indexing(&(*_self_), _101728_m.operator jule::Ptr<_1a7d538d2_UnsafeIndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a641bb8e_IndexingExprModel>>()) {
			_case_begin_1aa54e141:;
			{
				return _1a7d72ec8_indexing(&(*_self_), _101728_m.operator jule::Ptr<_1a641bb8e_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a641c046_AnonFnExprModel>>()) {
			_case_begin_1aa54e1b8:;
			{
				return _1a7d7323c_anon_func(&(*_self_), _101728_m.operator jule::Ptr<_1a641c046_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a641c871_MapExprModel>>()) {
			_case_begin_1aa54e240:;
			{
				return _1a7d7336e_map(&(*_self_), _101728_m.operator jule::Ptr<_1a641c871_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a641cdb0_SlicingExprModel>>()) {
			_case_begin_1aa54e2b7:;
			{
				return _1a7d734a1_slicing(&(*_self_), _101728_m.operator jule::Ptr<_1a641cdb0_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a641d3ee_TraitSubIdentExprModel>>()) {
			_case_begin_1aa54e33e:;
			{
				return _1a7d735d3_trait_sub(&(*_self_), _101728_m.operator jule::Ptr<_1a641d3ee_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a641db6e_StructSubIdentExprModel>>()) {
			_case_begin_1aa54e3b6:;
			{
				return _1a7d737ae_structure_sub(&(*_self_), _101728_m.operator jule::Ptr<_1a641db6e_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a641e7a7_CommonIdentExprModel>>()) {
			_case_begin_1aa54e43d:;
			{
				return _1a7d73abc_common_ident(&(*_self_), _101728_m.operator jule::Ptr<_1a641e7a7_CommonIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a641ed3a_CommonSubIdentExprModel>>()) {
			_case_begin_1aa54e4b5:;
			{
				return _1a7d73dca_common_sub(&(*_self_), _101728_m.operator jule::Ptr<_1a641ed3a_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6420115_TupleExprModel>>()) {
			_case_begin_1aa54e53c:;
			{
				return _1a7d74b12_tuple(&(*_self_), _101728_m.operator jule::Ptr<_1a6420115_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6420511_BuiltinOutCallExprModel>>()) {
			_case_begin_1aa54e5b4:;
			{
				return _1a7d7522d_out_call(&(*_self_), _101728_m.operator jule::Ptr<_1a6420511_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a64208eb_BuiltinOutlnCallExprModel>>()) {
			_case_begin_1aa54e63b:;
			{
				return _1a7d7553b_outln_call(&(*_self_), _101728_m.operator jule::Ptr<_1a64208eb_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6421105_BuiltinNewCallExprModel>>()) {
			_case_begin_1aa54e6b3:;
			{
				return _1a7d74e20_new_call(&(*_self_), _101728_m.operator jule::Ptr<_1a6421105_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a64214e0_BuiltinPanicCallExprModel>>()) {
			_case_begin_1aa54e73a:;
			{
				return _1a7d75849_panic_call(&(*_self_), _101728_m.operator jule::Ptr<_1a64214e0_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6421996_BuiltinAssertCallExprModel>>()) {
			_case_begin_1aa54e7b2:;
			{
				return _1a7d75b57_assert_call(&(*_self_), _101728_m.operator jule::Ptr<_1a6421996_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6422722_BuiltinErrorCallExprModel>>()) {
			_case_begin_1aa54e839:;
			{
				return _1a7d75e65_error_call(&(*_self_), _101728_m.operator jule::Ptr<_1a6422722_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6421e4c_BuiltinMakeCallExprModel>>()) {
			_case_begin_1aa54e8b1:;
			{
				return _1a7d76273_make_call(&(*_self_), _101728_m.operator jule::Ptr<_1a6421e4c_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6422337_BuiltinAppendCallExprModel>>()) {
			_case_begin_1aa54e938:;
			{
				return _1a7d7688e_append_call(&(*_self_), _101728_m.operator jule::Ptr<_1a6422337_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6420c1a_BuiltinCloneCallExprModel>>()) {
			_case_begin_1aa54e9b0:;
			{
				return _1a7d76b9c_clone_call(&(*_self_), _101728_m.operator jule::Ptr<_1a6420c1a_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a64229ec_SizeofExprModel>>()) {
			_case_begin_1aa54ea37:;
			{
				return _1a7d76eaa_sizeof(&(*_self_), _101728_m.operator jule::Ptr<_1a64229ec_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a642316d_AlignofExprModel>>()) {
			_case_begin_1aa54eaae:;
			{
				return _1a7d772b8_alignof(&(*_self_), _101728_m.operator jule::Ptr<_1a642316d_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a642335a_RuneExprModel>>()) {
			_case_begin_1aa54eb36:;
			{
				return _1a7d775c6_rune_lit(&(*_self_), _101728_m.operator jule::Ptr<_1a642335a_RuneExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a641e125_StructStaticIdentExprModel>>()) {
			_case_begin_1aa54ebad:;
			{
				return _1a7d778d4_structure_static(&(*_self_), _101728_m.operator jule::Ptr<_1a641e125_StructStaticIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6423646_IntegratedToStrExprModel>>()) {
			_case_begin_1aa54ec35:;
			{
				return _1a7d77be2_integrated_to_str(&(*_self_), _101728_m.operator jule::Ptr<_1a6423646_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a64239dc_BackendEmitExprModel>>()) {
			_case_begin_1aa54ecac:;
			{
				return _1a7d78000_backend_emit(&(*_self_), _101728_m.operator jule::Ptr<_1a64239dc_BackendEmitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6423cc8_FreeExprModel>>()) {
			_case_begin_1aa54ed34:;
			{
				return _1a7d7830d_free(&(*_self_), _101728_m.operator jule::Ptr<_1a6423cc8_FreeExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a7d60e0b_MutSlicingExprModel>>()) {
			_case_begin_1aa54edab:;
			{
				return _1a7d7861b_mut_slicing(&(*_self_), _101728_m.operator jule::Ptr<_1a7d60e0b_MutSlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a7d61307_StrInsertBeginExprModel>>()) {
			_case_begin_1aa54ee33:;
			{
				return _1a7d78929_str_insert_begin(&(*_self_), _101728_m.operator jule::Ptr<_1a7d61307_StrInsertBeginExprModel>());
			}
		}
		else {
			_case_begin_1aa54d1a6:;
			{
				return jule::Str("<unimplemented_expression_model>", 32);
			}
		}
		_match_end_1aa54d085:;
	}
}



inline jule::Str _1a7d79045_expr(_1a7c244d9_ExprCoder* _self_,jule::Any _111427_e) {
	jule::Str _111517_obj = _1a7d78c37_model(&(*_self_), _111427_e);
	if ((_111517_obj.len() == 0LL) || (_111517_obj[0LL] != '(')) {
		return _111517_obj;
	}
	{
		auto &_match_expr{ _111427_e };
		
		if (_match_expr.type_is<jule::Ptr<_1a6419571_BinopExprModel>>()) {
			_case_begin_1aa568633:;
			{
				(_111517_obj).mut_slice(1LL,_111517_obj.len() - 1LL);
			}
		}
		_match_end_1aa56848a:;
	}
	return _111517_obj;
}



inline jule::Str _1a7d79353_val(_1a7c244d9_ExprCoder* _self_,jule::Ptr<_1a7649be0_Value> _112626_v) {
	if (_1a764952a_is_const(_112626_v.get()._field_data.ptr())) {
		return _1a7d71812_constant(&(*_self_), _112626_v.get()._field_data.get()._field_constant,(_112626_v.get()._field_data.get()._field_kind != nullptr) && _1a7679637_is_f32(_1a7674e5c_prim(_112626_v.get()._field_data.get()._field_kind.ptr()).ptr()));
	}
	return _1a7d79045_expr(&(*_self_), _112626_v.get()._field_data.get()._field_model);
}



inline jule::Str _1a7d79661_init_expr(_1a7c244d9_ExprCoder* _self_,jule::Ptr<_1a7672da0_TypeKind> _113332_t) {
	if ((_1a7675435_ptr(_113332_t.ptr()) != nullptr)) {
		return jule::Str("nullptr", 7);
	}
	jule::Ptr<_1a7467de8_Enum> _113717_enm = _1a7675699_enm(_113332_t.ptr());
	if ((_113717_enm != nullptr)) {
		return _1a7d79353_val(&(*_self_), _113717_enm.get()._field_items[0LL].get()._field_value);
	}
	return (static__1d0a54d5d_kind(_113332_t) + jule::Str("()", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1a7c244d9_ExprCoder _Src) {
	_Stream << "ExprCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__1a7d7bed2_clone_func_decl(jule::Ptr<_1a64147be_Struct>& _1032_s) {
	jule::Str _1117_obj = static__1d0a534aa_structure(_1032_s);
	_1117_obj+=jule::Str(" clone(void) const ", 19);
	return _1117_obj;
}



inline jule::Str static__1a7d7c279_clone_func_def(jule::Ptr<_1a64147be_Struct>& _1631_s) {
	jule::Str _1717_obj = static__1d0a534aa_structure(_1631_s);
	_1717_obj+=jule::Str(" ", 1) + _1717_obj;
	_1717_obj+=jule::Str("::clone(void) const ", 20);
	return _1717_obj;
}







std::ostream &operator<<(std::ostream &_Stream, _1a7d7bba2_DeriveCoder _Src) {
	_Stream << "DeriveCoder{";
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__1a7d7d6ed_to_ident(jule::Str _3024_ident) {
	return jule::Str("_", 1) + _3024_ident;
}



inline jule::Str static__1a7d7d995_addr(jule::U64 _3520_addr) {
	return jule::Str("_", 1) + _1a7464279_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_3520_addr)),15LL);
}



inline jule::Str static__1a7d7dcd6_to_out(jule::Str _4422_ident,jule::U64 _4434_addr) {
	if ((_4434_addr != 0LLU)) {
		jule::Str _4621_obj = static__1a7d7d995_addr(_4434_addr);
		_4621_obj+=jule::Str("_", 1);
		_4621_obj+=_4422_ident;
		return _4621_obj;
	}
	return static__1a7d7d6ed_to_ident(_4422_ident);
}



inline jule::Str static__1a7d7e1c1_to_local(jule::I64 _6024_row,jule::I64 _6034_col,jule::Str _6044_ident) {
	jule::Str _6117_obj = _1a74648a6_itoa(_6024_row);
	_6117_obj+=_1a74648a6_itoa(_6034_col);
	_6117_obj+=jule::Str("_", 1);
	_6117_obj+=_6044_ident;
	return static__1a7d7d6ed_to_ident(_6117_obj);
}



inline jule::Str static__1a7d7e468_func(jule::Ptr<_1a6426a45_Fn>& _6921_f) {
	{
		
		if (_6921_f.get()._field_cpp_linked) {
			_case_begin_1aa575640:;
			{
				return _6921_f.get()._field_ident;
			}
		}
		else if ((_6921_f.get()._field_ident == jule::Str("main", 4))) {
			_case_begin_1aa575112:;
			{
				return jule::Str("entry_point", 11);
			}
		}
		else if (_1a642720a_is_method(_6921_f.ptr())) {
			_case_begin_1aa575178:;
			{
				jule::Str _7621_obj = static__1a7d7dcd6_to_out(_6921_f.get()._field_ident,static_cast<jule::U64>(static_cast<jule::U64>(_6921_f)));
				if (_6921_f.get()._field_statically) {
					(_7621_obj).buffer.insert(0, (jule::Str("static_", 7)));
					return _7621_obj;
				}
				return _7621_obj;
			}
		}
		else {
			_case_begin_1aa574397:;
			{
				return static__1a7d7dcd6_to_out(_6921_f.get()._field_ident,static_cast<jule::U64>(static_cast<jule::U64>(_6921_f)));
			}
		}
		_match_end_1aa574320:;
	}
}



inline jule::Str static__1a7d7e710_func_ins(jule::Ptr<_1a6429be1_FnIns>& _8829_f) {
	if (_1a642a96c_is_builtin(_8829_f.ptr())) {
		return jule::Str("jule::", 6) + _8829_f.get()._field_decl.get()._field_ident;
	}
	if (_8829_f.get()._field_decl.get()._field_cpp_linked || (_8829_f.get()._field_generics.len() == 0LL)) {
		return static__1a7d7e468_func(_8829_f.get()._field_decl);
	}
	{
		auto &expr = _8829_f.get()._field_decl.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1aa578852:;
		if (it != expr.end()) {
			jule::I64 _1aa5788eb_i = it - expr.begin();
			jule::Ptr<_1a6429be1_FnIns> _1aa578ae9_ins = *it;
			{
				if (_1a642aede_same(_1aa578ae9_ins.ptr(), _8829_f)) {
					jule::Str _9725_obj = static__1a7d7e468_func(_8829_f.get()._field_decl);
					_9725_obj+=jule::Str("_", 1);
					_9725_obj+=_1a74648a6_itoa(_1aa5788eb_i);
					return _9725_obj;
				}
			}
			_iter_next_1aa578852:;
			++it;
			_1aa5788eb_i++;
			goto _iter_begin_1aa578852;
		}
		_iter_end_1aa578852:;
	}
	return jule::Str("__?__", 5);
}



inline jule::Str static__1a7d7e9a7_trait_decl(jule::Ptr<_1a7465bd7_Trait> _10726_t) {
	if (_1a7466754_is_builtin(_10726_t.ptr())) {
		return jule::Str("jule::", 6) + _10726_t.get()._field_ident;
	}
	return static__1a7d7dcd6_to_out(_10726_t.get()._field_ident,static_cast<jule::U64>(static_cast<jule::U64>(_10726_t)));
}



inline jule::Str static__1a7d7ec4e_param(jule::Ptr<_1a6425208_Param>& _11522_p) {
	if (_1d074a47c_is_anon_ident(_11522_p.get()._field_ident) || _1d074a1d5_is_ignore_ident(_11522_p.get()._field_ident)) {
		return jule::Str();
	}
	if (_1a6425835_is_self(_11522_p.ptr())) {
		return jule::Str("_self_", 6);
	}
	if ((_11522_p.get()._field_token == nullptr)) {
		return static__1a7d7e1c1_to_local(0LL,0LL,_11522_p.get()._field_ident);
	}
	return static__1a7d7e1c1_to_local(_11522_p.get()._field_token.get()._field_row,_11522_p.get()._field_token.get()._field_column,_11522_p.get()._field_ident);
}



inline jule::Str static__1a7d7eee6_structure(jule::Ptr<_1a64147be_Struct>& _12926_s) {
	if (_12926_s.get()._field_cpp_linked) {
		if (_1d0a4ee02_has_directive(_12926_s.get()._field_directives,jule::Str("typedef", 7))) {
			return _12926_s.get()._field_ident;
		}
		return jule::Str("struct ", 7) + _12926_s.get()._field_ident;
	}
	return static__1a7d7dcd6_to_out(_12926_s.get()._field_ident,static_cast<jule::U64>(static_cast<jule::U64>(_12926_s)));
}



inline jule::Str static__1a7d8028d_structure_ins(jule::Ptr<_1a641744d_StructIns>& _14034_s) {
	if (_14034_s.get()._field_decl.get()._field_cpp_linked || (_14034_s.get()._field_generics.len() == 0LL)) {
		return static__1a7d7eee6_structure(_14034_s.get()._field_decl);
	}
	{
		auto &expr = _14034_s.get()._field_decl.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1aa581470:;
		if (it != expr.end()) {
			jule::I64 _1aa581519_i = it - expr.begin();
			jule::Ptr<_1a641744d_StructIns> _1aa581717_ins = *it;
			{
				if (_1a6418031_same(_1aa581717_ins.ptr(), _14034_s)) {
					jule::Str _14625_obj = static__1a7d7eee6_structure(_14034_s.get()._field_decl);
					_14625_obj+=jule::Str("_", 1);
					_14625_obj+=_1a74648a6_itoa(_1aa581519_i);
					return _14625_obj;
				}
			}
			_iter_next_1aa581470:;
			++it;
			_1aa581519_i++;
			goto _iter_begin_1aa581470;
		}
		_iter_end_1aa581470:;
	}
	return jule::Str("__?__", 5);
}



inline jule::Str static__1a7d80535_field(jule::Ptr<_1a6363e9e_Field>& _15622_f) {
	if (_15622_f.get()._field_owner.get()._field_cpp_linked) {
		return _15622_f.get()._field_ident;
	}
	return jule::Str("_field_", 7) + _15622_f.get()._field_ident;
}



inline jule::Str static__1a7d807cc_var(jule::Ptr<_1a75ec478_Var> _16423_v) {
	{
		
		if (_16423_v.get()._field_cpp_linked) {
			_case_begin_1aa58475e:;
			{
				return _16423_v.get()._field_ident;
			}
		}
		else if ((_16423_v.get()._field_ident == jule::Str("error", 5))) {
			_case_begin_1aa5839e4:;
			{
				return jule::Str("except.error", 12);
			}
		}
		else if ((_16423_v.get()._field_ident == jule::Str("self", 4))) {
			_case_begin_1aa583a5a:;
			{
				if ((_1a76751c1_sptr(_16423_v.get()._field_kind.get()._field_kind.ptr()) == nullptr)) {
					return jule::Str("(*_self_)", 9);
				}
				return jule::Str("_self_", 6);
			}
		}
		else if ((_16423_v.get()._field_scope != nullptr)) {
			_case_begin_1aa583ac1:;
			{
				return static__1a7d7e1c1_to_local(_16423_v.get()._field_token.get()._field_row,_16423_v.get()._field_token.get()._field_column,_16423_v.get()._field_ident);
			}
		}
		else {
			_case_begin_1aa58397d:;
			{
				return static__1a7d7dcd6_to_out(_16423_v.get()._field_ident,static_cast<jule::U64>(static_cast<jule::U64>(_16423_v)));
			}
		}
		_match_end_1aa583928:;
	}
}



inline jule::Str static__1a7d80a74_iter_begin(jule::U64 _18326_it) {
	return jule::Str("_iter_begin_", 12) + _1a7464279_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_18326_it)),15LL);
}



inline jule::Str static__1a7d80d1b_iter_end(jule::U64 _18824_it) {
	return jule::Str("_iter_end_", 10) + _1a7464279_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_18824_it)),15LL);
}



inline jule::Str static__1a7d810b3_iter_next(jule::U64 _19325_it) {
	return jule::Str("_iter_next_", 11) + _1a7464279_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_19325_it)),15LL);
}



inline jule::Str static__1a7d8135a_label(jule::Str _19821_ident) {
	return jule::Str("_julec_label_", 13) + _19821_ident;
}



inline jule::Str static__1a7d81602_match_end(jule::U64 _20325_m) {
	return jule::Str("_match_end_", 11) + _1a7464279_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_20325_m)),15LL);
}



inline jule::Str static__1a7d81899_case_begin(jule::U64 _20826_c) {
	return jule::Str("_case_begin_", 12) + _1a7464279_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_20826_c)),15LL);
}







std::ostream &operator<<(std::ostream &_Stream, _1a7d7d28b_IdentCoder _Src) {
	_Stream << "IdentCoder{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0a436cb_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "compiler:" << _Src._field_compiler << ", ";
	_Stream << "compiler_command:" << _Src._field_compiler_command;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0a438b8_TraitHash _Src) {
	_Stream << "TraitHash{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1d0a5052e_to_str(_1d0a50133_CustomType* _self_) {
	return (*_self_)._field_kind;
}



inline jule::Bool _1d0a5083c_equals(jule::Ptr<_1d0a50133_CustomType> _self_,jule::Ptr<_1a7672da0_TypeKind> _5326_k) {
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0a50133_CustomType _Src) {
	_Stream << _1d0a5052e_to_str(&_Src);
	return _Stream;
}



inline jule::Str static__1d0a51079_to_type(jule::Str _7327_id) {
	_7327_id=_1a75a6a81_real_kind_of(_7327_id);
	if ((97LL <= _7327_id[0LL]) && (_7327_id[0LL] <= 122LLU)) {
		_7327_id[0LL]-=32LLU;
	}
	return jule::Str("jule::", 6) + _7327_id;
}



inline jule::Str static__1d0a51321_prim(jule::Ptr<_1a7677602_Prim> _8220_p) {
	return static__1d0a51079_to_type(_1a7677965_to_str(_8220_p.ptr()));
}



inline jule::Str static__1d0a515b8_tuple(jule::Ptr<_1a767c063_Tuple> _8725_t) {
	jule::Str _8817_obj = jule::Str("std::tuple<", 11);
	{
		auto &expr = _8725_t.get()._field_types;
		auto it = expr.begin();
		_iter_begin_1aa6653cd:;
		if (it != expr.end()) {
			jule::Ptr<_1a7672da0_TypeKind> _1aa6654cc_tk = *it;
			{
				_8817_obj+=static__1d0a54d5d_kind(_1aa6654cc_tk);
				_8817_obj+=jule::Str(",", 1);
			}
			_iter_next_1aa6653cd:;
			++it;
			goto _iter_begin_1aa6653cd;
		}
		_iter_end_1aa6653cd:;
	}
	(_8817_obj).mut_slice(0LL,_8817_obj.len() - 1LL);
	_8817_obj+=jule::Str(">", 1);
	return _8817_obj;
}



inline jule::Str static__1d0a51860_as_sptr(jule::Str _9923_elem) {
	jule::Str _10017_obj = jule::Str("jule::Ptr<", 10);
	_10017_obj+=_9923_elem;
	_10017_obj+=jule::Str(">", 1);
	return _10017_obj;
}



inline jule::Str static__1d0a51b07_as_ptr(jule::Str _10722_elem) {
	return (_10722_elem + jule::Str("*", 1));
}



inline jule::Str static__1d0a51d9e_sptr(jule::Ptr<_1a767ab11_Sptr> _11224_sptr) {
	return static__1d0a51860_as_sptr(static__1d0a54d5d_kind(_11224_sptr.get()._field_elem));
}



inline jule::Str static__1d0a52146_ptr(jule::Ptr<_1a767e175_Ptr> _11723_p) {
	
	if (_1a767eb48_is_unsafe(_11723_p.ptr())) {
		return jule::Str("void*", 5);
	}
	jule::Str _12217_elem = static__1d0a54d5d_kind(_11723_p.get()._field_elem);
	_12217_elem+=jule::Str("*", 1);
	return _12217_elem;
}



inline jule::Str static__1d0a523dd_enum_decl(jule::Ptr<_1a7467de8_Enum> _12829_e) {
	return static__1d0a54d5d_kind(_12829_e.get()._field_kind.get()._field_kind);
}



inline jule::Str static__1d0a52685_as_slice(jule::Ptr<_1a7672da0_TypeKind> _13228_elem) {
	jule::Str _13317_obj = jule::Str("jule::Slice<", 12);
	_13317_obj+=static__1d0a54d5d_kind(_13228_elem);
	_13317_obj+=jule::Str(">", 1);
	return _13317_obj;
}



inline jule::Str static__1d0a5292c_slice(jule::Ptr<_1a767b56d_Slc> _14025_s) {
	return static__1d0a52685_as_slice(_14025_s.get()._field_elem);
}



inline jule::Str static__1d0a52bc4_map(jule::Ptr<_1a767cb24_Map> _14523_m) {
	jule::Str _14617_obj = jule::Str("jule::Map<", 10);
	_14617_obj+=static__1d0a54d5d_kind(_14523_m.get()._field_key);
	_14617_obj+=jule::Str(",", 1);
	_14617_obj+=static__1d0a54d5d_kind(_14523_m.get()._field_val);
	_14617_obj+=jule::Str(">", 1);
	return _14617_obj;
}



inline jule::Str static__1d0a52e6b_trait_ident(jule::Str _15427_ident) {
	jule::Str _15517_obj = jule::Str("jule::Trait<", 12);
	_15517_obj+=_15427_ident;
	_15517_obj+=jule::Str(">", 1);
	return _15517_obj;
}



inline jule::Str static__1d0a53213_trait_decl(jule::Ptr<_1a7465bd7_Trait> _16226_t) {
	return static__1d0a52e6b_trait_ident(static__1a7d7e9a7_trait_decl(_16226_t));
}



inline jule::Str static__1d0a534aa_structure(jule::Ptr<_1a64147be_Struct> _16725_s) {
	jule::Str _16817_rep = jule::Str();
	if (_16725_s.get()._field_cpp_linked && (!(_1d0a4ee02_has_directive(_16725_s.get()._field_directives,jule::Str("typedef", 7))))) {
		_16817_rep+=jule::Str("struct ", 7);
	}
	_16817_rep+=static__1a7d7eee6_structure(_16725_s);
	return _16817_rep;
}



inline jule::Str static__1d0a53752_structure_ins(jule::Ptr<_1a641744d_StructIns> _17733_s) {
	if (_17733_s.get()._field_decl.get()._field_cpp_linked) {
		jule::Str _17921_ident = static__1a7d8028d_structure_ins(_17733_s);
		if ((_17733_s.get()._field_generics.len() > 0LL)) {
			_17921_ident+=jule::Str("<", 1);
			{
				auto &expr = _17733_s.get()._field_generics;
				auto it = expr.begin();
				_iter_begin_1aa671a8d:;
				if (it != expr.end()) {
					jule::Ptr<_1a7672da0_TypeKind> _1aa671e34_g = *it;
					{
						_17921_ident+=static__1d0a54d5d_kind(_1aa671e34_g);
						_17921_ident+=jule::Str(",", 1);
					}
					_iter_next_1aa671a8d:;
					++it;
					goto _iter_begin_1aa671a8d;
				}
				_iter_end_1aa671a8d:;
			}
			(_17921_ident).mut_slice(0LL,_17921_ident.len() - 1LL);
			_17921_ident+=jule::Str(">", 1);
		}
		jule::Ptr<_1d06c9ecd_Directive> _18917_d = _1d0a4ea6c_find_directive(_17733_s.get()._field_decl.get()._field_directives,jule::Str("namespace", 9));
		if ((_18917_d != nullptr)) {
			(_17921_ident).buffer.insert(0, ((_1a7d799b3_concat_all_parts(_18917_d.get()._field_args) + jule::Str("::", 2))));
		}
		return _17921_ident;
	}
	return static__1a7d8028d_structure_ins(_17733_s);
}



inline jule::Str static__1d0a539e9_array(jule::Ptr<_1a767d718_Arr> _19925_a) {
	jule::Str _20017_obj = jule::Str("jule::Array<", 12);
	_20017_obj+=static__1d0a54d5d_kind(_19925_a.get()._field_elem);
	_20017_obj+=jule::Str(",", 1);
	_20017_obj+=_1a74648a6_itoa(_19925_a.get()._field_n);
	_20017_obj+=jule::Str(">", 1);
	return _20017_obj;
}



inline jule::Str static__1d0a53c91_param(jule::Ptr<_1a6425208_Param>& _20926_p) {
	jule::Str _21017_obj = jule::Str();
	if (_20926_p.get()._field_variadic) {
		_21017_obj+=jule::Str("jule::Slice<", 12);
		_21017_obj+=static__1d0a54d5d_kind(_20926_p.get()._field_kind.get()._field_kind);
		_21017_obj+=jule::Str(">", 1);
	} else {
		_21017_obj+=static__1d0a54d5d_kind(_20926_p.get()._field_kind.get()._field_kind);
	}
	if (_20926_p.get()._field_reference) {
		_21017_obj+=jule::Str("&", 1);
	}
	return _21017_obj;
}



inline jule::Str static__1d0a54038_param_ins(jule::Ptr<_1a6428d55_ParamIns>& _22530_p) {
	jule::Str _22617_obj = jule::Str();
	if (_22530_p.get()._field_decl.get()._field_variadic) {
		_22617_obj+=jule::Str("jule::Slice<", 12);
		_22617_obj+=static__1d0a54d5d_kind(_22530_p.get()._field_kind);
		_22617_obj+=jule::Str(">", 1);
	} else {
		_22617_obj+=static__1d0a54d5d_kind(_22530_p.get()._field_kind);
	}
	if (_22530_p.get()._field_decl.get()._field_reference) {
		_22617_obj+=jule::Str("&", 1);
	}
	return _22617_obj;
}



inline jule::Str static__1d0a542d0_func_result(jule::Ptr<_1a6426a45_Fn>& _24132_f) {
	if (_1a6426e96_is_void(_24132_f.ptr())) {
		if (_24132_f.get()._field_exceptional) {
			return jule::Str("jule::VoidExceptional", 21);
		}
		return jule::Str("void", 4);
	}
	if (_24132_f.get()._field_exceptional) {
		return ((jule::Str("jule::Exceptional<", 18) + static__1d0a54d5d_kind(_24132_f.get()._field_result.get()._field_kind.get()._field_kind)) + jule::Str(">", 1));
	}
	return static__1d0a54d5d_kind(_24132_f.get()._field_result.get()._field_kind.get()._field_kind);
}



inline jule::Str static__1d0a54577_func_ins_result(jule::Ptr<_1a6429be1_FnIns>& _25536_f) {
	if (_1a6426e96_is_void(_25536_f.get()._field_decl.ptr())) {
		if (_25536_f.get()._field_decl.get()._field_exceptional) {
			return jule::Str("jule::VoidExceptional", 21);
		}
		return jule::Str("void", 4);
	}
	if (_25536_f.get()._field_decl.get()._field_exceptional) {
		return ((jule::Str("jule::Exceptional<", 18) + static__1d0a54d5d_kind(_25536_f.get()._field_result)) + jule::Str(">", 1));
	}
	return static__1d0a54d5d_kind(_25536_f.get()._field_result);
}



inline jule::Str static__1d0a5481e_anon_func(jule::Ptr<_1a6429be1_FnIns> _26829_f) {
	jule::Str _26917_decl = static__1d0a54577_func_ins_result(_26829_f);
	_26917_decl+=jule::Str("(", 1);
	if ((_26829_f.get()._field_params.len() > 0LL)) {
		{
			auto &expr = _26829_f.get()._field_params;
			auto it = expr.begin();
			_iter_begin_1aa67de52:;
			if (it != expr.end()) {
				jule::Ptr<_1a6428d55_ParamIns> _1aa67e051_param = *it;
				{
					if (_1a6425835_is_self(_1aa67e051_param.get()._field_decl.ptr())) {
						goto _iter_next_1aa67de52;
					}
					_26917_decl+=static__1d0a54038_param_ins(_1aa67e051_param);
					_26917_decl+=jule::Str(",", 1);
				}
				_iter_next_1aa67de52:;
				++it;
				goto _iter_begin_1aa67de52;
			}
			_iter_end_1aa67de52:;
		}
		(_26917_decl).mut_slice(0LL,_26917_decl.len() - 1LL);
	} else {
		_26917_decl+=jule::Str("void", 4);
	}
	_26917_decl+=jule::Str(")", 1);
	return _26917_decl;
}



inline jule::Str static__1d0a54ab6_func(jule::Ptr<_1a6429be1_FnIns> _28824_f) {
	jule::Str _28917_obj = jule::Str("jule::Fn<", 9);
	_28917_obj+=static__1d0a5481e_anon_func(_28824_f);
	_28917_obj+=jule::Str(">", 1);
	return _28917_obj;
}



inline jule::Str static__1d0a54d5d_kind(jule::Ptr<_1a7672da0_TypeKind> _29624_k) {
	{
		
		if (_1a7673a0a_cpp_linked(_29624_k.ptr())) {
			_case_begin_1aa6819c1:;
			{
				return _29624_k.get()._field_cpp_ident;
			}
		}
		else if ((_1a7674e5c_prim(_29624_k.ptr()) != nullptr)) {
			_case_begin_1aa681b47:;
			{
				return static__1d0a51321_prim(_1a7674e5c_prim(_29624_k.ptr()));
			}
		}
		else if ((_1a7676887_tup(_29624_k.ptr()) != nullptr)) {
			_case_begin_1aa681bad:;
			{
				return static__1d0a515b8_tuple(_1a7676887_tup(_29624_k.ptr()));
			}
		}
		else if ((_1a76751c1_sptr(_29624_k.ptr()) != nullptr)) {
			_case_begin_1aa681c35:;
			{
				return static__1d0a51d9e_sptr(_1a76751c1_sptr(_29624_k.ptr()));
			}
		}
		else if ((_1a7675435_ptr(_29624_k.ptr()) != nullptr)) {
			_case_begin_1aa681cac:;
			{
				return static__1d0a52146_ptr(_1a7675435_ptr(_29624_k.ptr()));
			}
		}
		else if ((_1a7675699_enm(_29624_k.ptr()) != nullptr)) {
			_case_begin_1aa681d34:;
			{
				return static__1d0a523dd_enum_decl(_1a7675699_enm(_29624_k.ptr()));
			}
		}
		else if ((_1a7675b72_slc(_29624_k.ptr()) != nullptr)) {
			_case_begin_1aa681dab:;
			{
				return static__1d0a5292c_slice(_1a7675b72_slc(_29624_k.ptr()));
			}
		}
		else if ((_1a7676623_map(_29624_k.ptr()) != nullptr)) {
			_case_begin_1aa681e33:;
			{
				return static__1d0a52bc4_map(_1a7676623_map(_29624_k.ptr()));
			}
		}
		else if ((_1a76763ae_trt(_29624_k.ptr()) != nullptr)) {
			_case_begin_1aa681eaa:;
			{
				return static__1d0a53213_trait_decl(_1a76763ae_trt(_29624_k.ptr()));
			}
		}
		else if ((_1a767614a_strct(_29624_k.ptr()) != nullptr)) {
			_case_begin_1aa682032:;
			{
				return static__1d0a53752_structure_ins(_1a767614a_strct(_29624_k.ptr()));
			}
		}
		else if ((_1a767590d_arr(_29624_k.ptr()) != nullptr)) {
			_case_begin_1aa6820a9:;
			{
				return static__1d0a539e9_array(_1a767590d_arr(_29624_k.ptr()));
			}
		}
		else if ((_1a7675dd6_fnc(_29624_k.ptr()) != nullptr)) {
			_case_begin_1aa682131:;
			{
				return static__1d0a54ab6_func(_1a7675dd6_fnc(_29624_k.ptr()));
			}
		}
		_match_end_1aa6818e4:;
	}
	{
		auto &_match_expr{ _29624_k.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d0a50133_CustomType>>()) {
			_case_begin_1aa689c2c:;
			{
				return _29624_k.get()._field_kind.operator jule::Ptr<_1d0a50133_CustomType>().get()._field_kind;
			}
		}
		else {
			_case_begin_1aa688ee5:;
			{
				return jule::Str("[<unimplemented_type_kind>]", 27);
			}
		}
		_match_end_1aa688e90:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, _1d0a50a5c_TypeCoder _Src) {
	_Stream << "TypeCoder{";
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1aa6a781b_name(_1a7e8ebc7_Flag_0* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1aa6a794d_what(_1a7e8ebc7_Flag_0* _self_) {
	return (*_self_)._field__what;
}



inline void _1aa6a7a80_reset(_1a7e8ebc7_Flag_0* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1aa6a7bb2_short(_1a7e8ebc7_Flag_0* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1a7e8ebc7_Flag_0 _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1aa6aa610_name(_1a7e8ebc7_Flag_1* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1aa6aa81e_what(_1a7e8ebc7_Flag_1* _self_) {
	return (*_self_)._field__what;
}



inline void _1aa6a7d27_reset(_1a7e8ebc7_Flag_1* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1aa6aa368_short(_1a7e8ebc7_Flag_1* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1a7e8ebc7_Flag_1 _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1aa6ad7de_name(_1a7e8ebc7_Flag_2* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1aa6ad9ed_what(_1a7e8ebc7_Flag_2* _self_) {
	return (*_self_)._field__what;
}



inline void _1aa6ad547_reset(_1a7e8ebc7_Flag_2* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1aa6ae26d_short(_1a7e8ebc7_Flag_2* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1a7e8ebc7_Flag_2 _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1aa6b1a12_name(_1a7e8ebc7_Flag_3* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1aa6b1c21_what(_1a7e8ebc7_Flag_3* _self_) {
	return (*_self_)._field__what;
}



inline void _1aa6b176a_reset(_1a7e8ebc7_Flag_3* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1aa6b2491_short(_1a7e8ebc7_Flag_3* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1a7e8ebc7_Flag_3 _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1aa6b4be1_name(_1a7e8ebc7_Flag_4* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1aa6b4e00_what(_1a7e8ebc7_Flag_4* _self_) {
	return (*_self_)._field__what;
}



inline void _1aa6b4949_reset(_1a7e8ebc7_Flag_4* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1aa6b5670_short(_1a7e8ebc7_Flag_4* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1a7e8ebc7_Flag_4 _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a7e91118_FlagSet> static__1a7e91404_new(void) {
	return jule::new_ptr<_1a7e91118_FlagSet>(_1a7e91118_FlagSet(jule::Slice<jule::Trait<_1a7e5e14c_CommonFlag>>::alloc(0LL,20LL)));
}



inline jule::Trait<_1a7e5e14c_CommonFlag> _1a7e918bb_find_flag(_1a7e91118_FlagSet* _self_,jule::Str _7132_name) {
	{
		auto &expr = (*_self_)._field__flags;
		auto it = expr.begin();
		_iter_begin_1aa6bd788:;
		if (it != expr.end()) {
			jule::Trait<_1a7e5e14c_CommonFlag> _1aa6bd942_flag = *it;
			{
				if (_1a7e5e14c_CommonFlag_mptr_data[(_1aa6bd942_flag).type_offset]._1a7e5dc62_name(_1aa6bd942_flag) == _7132_name) {
					return _1aa6bd942_flag;
				}
			}
			_iter_next_1aa6bd788:;
			++it;
			goto _iter_begin_1aa6bd788;
		}
		_iter_end_1aa6bd788:;
	}
	return nullptr;
}



inline jule::Trait<_1a7e5e14c_CommonFlag> _1a7e91bc9_find_flag_short(_1a7e91118_FlagSet* _self_,jule::I32 _8138_name) {
	{
		auto &expr = (*_self_)._field__flags;
		auto it = expr.begin();
		_iter_begin_1aa6bea42:;
		if (it != expr.end()) {
			jule::Trait<_1a7e5e14c_CommonFlag> _1aa6bebeb_flag = *it;
			{
				if (_1a7e5e14c_CommonFlag_mptr_data[(_1aa6bebeb_flag).type_offset]._1a7e5dd94_short(_1aa6bebeb_flag) == _8138_name) {
					return _1aa6bebeb_flag;
				}
			}
			_iter_next_1aa6bea42:;
			++it;
			goto _iter_begin_1aa6bea42;
		}
		_iter_end_1aa6bea42:;
	}
	return nullptr;
}



inline jule::Slice<jule::Trait<_1a7e5e14c_CommonFlag>> _1a7e91e3d_flags(_1a7e91118_FlagSet* _self_) {
	return (*_self_)._field__flags;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1a7e9224b_parse(_1a7e91118_FlagSet* _self_,jule::Slice<jule::Str> _11528_args) {
	_1a7e93824_ArgParser _11617_ap = _1a7e93824_ArgParser((*_self_),_11528_args,jule::Slice<jule::Str>(),jule::I64());
	({
		auto except = _1a7e94c10_parse(&_11617_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>(except.error);
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>(jule::Any(),_11617_ap._field_content);
}



inline void _1a7e92427_reset(_1a7e91118_FlagSet* _self_) {
	{
		auto &expr = (*_self_)._field__flags;
		auto it = expr.begin();
		_iter_begin_1aa6c322c:;
		if (it != expr.end()) {
			jule::Trait<_1a7e5e14c_CommonFlag> _1aa6c33d6_f = *it;
			{
				_1a7e5e14c_CommonFlag_mptr_data[(_1aa6c33d6_f).type_offset]._1a7e8e644_reset(_1aa6c33d6_f);
			}
			_iter_next_1aa6c322c:;
			++it;
			goto _iter_begin_1aa6c322c;
		}
		_iter_end_1aa6c322c:;
	}
}



inline jule::Ptr<_1a7e8ebc7_Flag_4> _1a7e92878_add_flag_common_0(_1a7e91118_FlagSet* _self_,jule::Str _13141_name,jule::I32 _13152_short,jule::Str _13165_what) {
	{
		
{
			_case_begin_1aa741c29:;
			{
				goto _match_end_1aa741b6e;
			}
		}
		_match_end_1aa741b6e:;
	}
	if ((_1a7e918bb_find_flag(&(*_self_), _13141_name) != nullptr)) {
		jule::panic(jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this name: ", 63) + _13141_name + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	}
	if ((_13152_short != 0LL) && (_1a7e91bc9_find_flag_short(&(*_self_), _13152_short) != nullptr)) {
		jule::panic(jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13152_short) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	}
	jule::Ptr<_1a7e8ebc7_Flag_4> _14817_flag = jule::new_ptr<_1a7e8ebc7_Flag_4>(_1a7e8ebc7_Flag_4(_13141_name,_13152_short,jule::Str(),_13165_what,jule::Ptr<jule::Str>()));
	(*_self_)._field__flags = jule::alloc_for_append((*_self_)._field__flags,1);(*_self_)._field__flags.__push(jule::Trait<_1a7e5e14c_CommonFlag>(_14817_flag, 4));
	return _14817_flag;
}

inline jule::Ptr<_1a7e8ebc7_Flag_3> _1a7e92878_add_flag_common_1(_1a7e91118_FlagSet* _self_,jule::Str _13141_name,jule::I32 _13152_short,jule::Str _13165_what) {
	{
		
{
			_case_begin_1aa74aded:;
			{
				goto _match_end_1aa74ad43;
			}
		}
		_match_end_1aa74ad43:;
	}
	if ((_1a7e918bb_find_flag(&(*_self_), _13141_name) != nullptr)) {
		jule::panic(jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this name: ", 63) + _13141_name + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	}
	if ((_13152_short != 0LL) && (_1a7e91bc9_find_flag_short(&(*_self_), _13152_short) != nullptr)) {
		jule::panic(jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13152_short) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	}
	jule::Ptr<_1a7e8ebc7_Flag_3> _14817_flag = jule::new_ptr<_1a7e8ebc7_Flag_3>(_1a7e8ebc7_Flag_3(_13141_name,_13152_short,jule::Bool(),_13165_what,jule::Ptr<jule::Bool>()));
	(*_self_)._field__flags = jule::alloc_for_append((*_self_)._field__flags,1);(*_self_)._field__flags.__push(jule::Trait<_1a7e5e14c_CommonFlag>(_14817_flag, 3));
	return _14817_flag;
}





inline void _1a7e932d5_add_var_0(_1a7e91118_FlagSet* _self_,jule::Ptr<jule::Str> _17537_var,jule::Str _17546_name,jule::I32 _17557_short,jule::Str _17570_what) {
	jule::Ptr<_1a7e8ebc7_Flag_4> _17617_flag = _1a7e92878_add_flag_common_0(&(*_self_), _17546_name,_17557_short,_17570_what);
	_17617_flag.get()._field__default=(*(_17537_var));
	_17617_flag.get()._field__data=_17537_var;
}

inline void _1a7e932d5_add_var_1(_1a7e91118_FlagSet* _self_,jule::Ptr<jule::Bool> _17537_var,jule::Str _17546_name,jule::I32 _17557_short,jule::Str _17570_what) {
	jule::Ptr<_1a7e8ebc7_Flag_3> _17617_flag = _1a7e92878_add_flag_common_1(&(*_self_), _17546_name,_17557_short,_17570_what);
	_17617_flag.get()._field__default=(*(_17537_var));
	_17617_flag.get()._field__data=_17537_var;
}







std::ostream &operator<<(std::ostream &_Stream, _1a7e91118_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "_flags:" << _Src._field__flags;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a6417805_to_str(_1a641744d_StructIns* _self_) {
	jule::Str _24417_kind = jule::Str();
	_24417_kind+=(*_self_)._field_decl.get()._field_ident;
	if (((*_self_)._field_generics.len() > 0LL)) {
		_24417_kind+=jule::Str("[", 1);
		{
			auto &expr = (*_self_)._field_generics;
			auto it = expr.begin();
			_iter_begin_1a957d605:;
			if (it != expr.end()) {
				jule::Ptr<_1a7672da0_TypeKind> &_1a957d68d_g = *it;
				{
					_24417_kind+=_1a7673257_to_str(_1a957d68d_g.ptr());
					_24417_kind+=jule::Str(",", 1);
				}
				_iter_next_1a957d605:;
				++it;
				goto _iter_begin_1a957d605;
			}
			_iter_end_1a957d605:;
		}
		(_24417_kind).mut_slice(0LL,_24417_kind.len() - 1LL);
		_24417_kind+=jule::Str("]", 1);
	}
	return _24417_kind;
}



inline jule::Bool _1a6417b13_equals(jule::Ptr<_1a641744d_StructIns> _self_,jule::Ptr<_1a7672da0_TypeKind> _25926_other) {
	jule::Ptr<_1a641744d_StructIns> _26013_s = _1a767614a_strct(_25926_other.ptr());
	if ((_26013_s == nullptr)) {
		return false;
	}
	if (_self_.get()._field_decl != _26013_s.get()._field_decl) {
		return false;
	}
	if (_self_.get()._field_generics.len() != static_cast<jule::I64>(static_cast<jule::I64>(_26013_s.get()._field_generics.len()))) {
		return false;
	}
	jule::I64 _27317_i = 0LL;
	for (; _27317_i < static_cast<jule::I64>(static_cast<jule::I64>(_self_.get()._field_generics.len())); (_27317_i)++) {
		{
			if ((!(_1a7673565_equals(_self_.get()._field_generics[_27317_i], _26013_s.get()._field_generics[_27317_i])))) {
				return false;
			}
		}
	_iter_next_1a9582708:;
	}
	_iter_end_1a9582708:;
	return true;
}



inline jule::Bool _1a6418031_same(_1a641744d_StructIns* _self_,jule::Ptr<_1a641744d_StructIns> _28723_s) {
	if (((*_self_)._field_decl != _28723_s.get()._field_decl) || (_28723_s.get()._field_generics.len() != static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_generics.len())))) {
		return false;
	}
	{
		auto &expr = (*_self_)._field_generics;
		auto it = expr.begin();
		_iter_begin_1a9585398:;
		if (it != expr.end()) {
			jule::I64 _1a95854a8_i = it - expr.begin();
			jule::Ptr<_1a7672da0_TypeKind> &_1a958560c_g = *it;
			{
				if ((!(_1a7673565_equals(_1a958560c_g, _28723_s.get()._field_generics[_1a95854a8_i])))) {
					return false;
				}
			}
			_iter_next_1a9585398:;
			++it;
			_1a95854a8_i++;
			goto _iter_begin_1a9585398;
		}
		_iter_end_1a9585398:;
	}
	return true;
}



inline jule::Ptr<_1a6426a45_Fn> _1a64183d8_find_method(_1a641744d_StructIns* _self_,jule::Str _30234_ident,jule::Bool _30246_statically) {
	{
		auto &expr = (*_self_)._field_methods;
		auto it = expr.begin();
		_iter_begin_1a9587158:;
		if (it != expr.end()) {
			jule::Ptr<_1a6426a45_Fn> _1a9587257_f = *it;
			{
				if ((_1a9587257_f.get()._field_statically == _30246_statically) && (_1a9587257_f.get()._field_ident == _30234_ident)) {
					return _1a9587257_f;
				}
			}
			_iter_next_1a9587158:;
			++it;
			goto _iter_begin_1a9587158;
		}
		_iter_end_1a9587158:;
	}
	return nullptr;
}



inline jule::Ptr<_1a6416ae0_FieldIns> _1a64186e6_find_field(_1a641744d_StructIns* _self_,jule::Str _31333_ident) {
	{
		auto &expr = (*_self_)._field_fields;
		auto it = expr.begin();
		_iter_begin_1a9588742:;
		if (it != expr.end()) {
			jule::Ptr<_1a6416ae0_FieldIns> _1a9588841_f = *it;
			{
				if (_1a9588841_f.get()._field_decl.get()._field_ident == _31333_ident) {
					return _1a9588841_f;
				}
			}
			_iter_next_1a9588742:;
			++it;
			goto _iter_begin_1a9588742;
		}
		_iter_end_1a9588742:;
	}
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1a641744d_StructIns _Src) {
	_Stream << _1a6417805_to_str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1d0a43aa5_ObjectCoder> static__1d09a8861_new(jule::Ptr<_1b737ec89_IR>& _7528_ir,_1d0a436cb_SerializationInfo _7537_info) {
	jule::Ptr<_1d0a43aa5_ObjectCoder> _7617_oc = jule::new_ptr<_1d0a43aa5_ObjectCoder>(_1d0a43aa5_ObjectCoder(_7528_ir,_7537_info,jule::Str(),jule::Str(),jule::Str(),jule::Str(),jule::Str(),jule::Slice<jule::Ptr<_1d0a438b8_TraitHash>>(),jule::Ptr<_1a7c244d9_ExprCoder>(),jule::Ptr<_1a7c5c962_ScopeCoder>()));
	_7617_oc.get()._field_ec=static__1a7c5d0d3_new(_7617_oc);
	_7617_oc.get()._field_sc=static__1a7c644e6_new(_7617_oc);
	return _7617_oc;
}



inline void _1d09aee72_add_indent(_1d0a43aa5_ObjectCoder* _self_) {
	
	(*_self_)._field_indent_buffer+=jule::Str("\t", 1);
}



inline void _1d0a4416b_done_indent(_1d0a43aa5_ObjectCoder* _self_) {
	(*_self_)._field_indent_buffer=(*_self_)._field_indent_buffer.slice(0LL,((*_self_)._field_indent_buffer.len() - 1LL));
}



inline jule::Str _1d0a4429d_indent(_1d0a43aa5_ObjectCoder* _self_) {
	return (*_self_)._field_indent_buffer;
}



inline jule::I64 _1d0a443d0_find_type_offset(_1d0a43aa5_ObjectCoder* _self_,jule::Ptr<_1a7465bd7_Trait> _10131_t,jule::Ptr<_1a7672da0_TypeKind> _10146_k) {
	jule::Ptr<_1a641744d_StructIns> _10217_s = nullptr;
	if ((_1a76751c1_sptr(_10146_k.ptr()) != nullptr)) {
		_10146_k=_1a76751c1_sptr(_10146_k.ptr()).get()._field_elem;
	}
	if ((_1a767614a_strct(_10146_k.ptr()) == nullptr)) {
		return -1LL;
	}
	_10217_s=_1a767614a_strct(_10146_k.ptr());
	{
		auto &expr = (*_self_)._field_trait_map;
		auto it = expr.begin();
		_iter_begin_1aa58ed52:;
		if (it != expr.end()) {
			jule::Ptr<_1d0a438b8_TraitHash> &_1aa58edda_hash = *it;
			{
				if ((_1aa58edda_hash.get()._field_t == _10131_t) && (_1aa58edda_hash.get()._field_s == _10217_s)) {
					return _1aa58edda_hash.get()._field_i;
				}
			}
			_iter_next_1aa58ed52:;
			++it;
			goto _iter_begin_1aa58ed52;
		}
		_iter_end_1aa58ed52:;
	}
	return -1LL;
}



inline jule::Str _1d0a44512_loc_info(_1d0a43aa5_ObjectCoder* _self_,jule::Ptr<_1d0747985_Token>& _11924_t) {
	jule::Str _12017_loc = _11924_t.get()._field_file.get()._field_path;
	if (_1e829b746_PRODUCTION) {
		{
			
			if (_1d095aa22_has_prefix(_12017_loc,_1d002c897_PATH_STDLIB)) {
				_case_begin_1aa5919d0:;
				{
					(_12017_loc).mut_slice(_1d09a6881_dir(_1d002c897_PATH_STDLIB).len() + 1LL);
				}
			}
			else if (_1d095aa22_has_prefix(_12017_loc,(*_self_)._field_ir.get()._field_root)) {
				_case_begin_1aa591a57:;
				{
					(_12017_loc).mut_slice(_1d09a6881_dir((*_self_)._field_ir.get()._field_root).len() + 1LL);
				}
			}
			_match_end_1aa5918c0:;
		}
	}
	_12017_loc+=jule::Str(":", 1);
	_12017_loc+=_1a74648a6_itoa(_11924_t.get()._field_row);
	_12017_loc+=jule::Str(":", 1);
	_12017_loc+=_1a74648a6_itoa(_11924_t.get()._field_column);
	return _1a7d7a332_cstr_bytes(static_cast<jule::Slice<jule::U8>>(_12017_loc));
}



inline jule::Str _1d0a44644_links(_1d0a43aa5_ObjectCoder* _self_) {
	jule::Str _14417_obj = jule::Str();
	{
		auto &expr = (*_self_)._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1aa594d79:;
		if (it != expr.end()) {
			jule::Ptr<_1a75c928a_ImportInfo> _1aa594e56_pkg = *it;
			{
				{
					
					if ((!(_1aa594e56_pkg.get()._field_cpp_linked))) {
						_case_begin_1aa595594:;
						{
							goto _iter_next_1aa594d79;
						}
					}
					else if (_1e9ea40a6_is_std_header_path(_1aa594e56_pkg.get()._field_path)) {
						_case_begin_1aa59561b:;
						{
							_14417_obj+=jule::Str("#include ", 9);
							_14417_obj+=_1aa594e56_pkg.get()._field_path;
							_14417_obj+=jule::Str("\n", 1);
						}
					}
					_match_end_1aa595484:;
				}
			}
			_iter_next_1aa594d79:;
			++it;
			goto _iter_begin_1aa594d79;
		}
		_iter_end_1aa594d79:;
	}
	{
		auto &expr = (*_self_)._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1aa595099:;
		if (it != expr.end()) {
			jule::Ptr<_1a75c928a_ImportInfo> _1aa5950dd_pkg = *it;
			{
				{
					
					if ((!(_1aa5950dd_pkg.get()._field_cpp_linked))) {
						_case_begin_1aa596cb0:;
						{
							goto _iter_next_1aa595099;
						}
					}
					else if (_1d0a4da6b_is_cpp_header_file(_1aa5950dd_pkg.get()._field_path)) {
						_case_begin_1aa596d37:;
						{
							_14417_obj+=jule::Str("#include \"", 10);
							_14417_obj+=_1aa5950dd_pkg.get()._field_path;
							_14417_obj+=jule::Str("\"\n", 2);
						}
					}
					_match_end_1aa596ba0:;
				}
			}
			_iter_next_1aa595099:;
			++it;
			goto _iter_begin_1aa595099;
		}
		_iter_end_1aa595099:;
	}
	return _14417_obj;
}



inline jule::Str _1d0a448ec_param_ins(_1d0a43aa5_ObjectCoder* _self_,jule::Ptr<_1a6428d55_ParamIns>& _17029_p) {
	jule::Str _17117_obj = static__1d0a54038_param_ins(_17029_p);
	_17117_obj+=jule::Str(" ", 1);
	_17117_obj+=static__1a7d7ec4e_param(_17029_p.get()._field_decl);
	return _17117_obj;
}



inline jule::Str _1d0a44c0a_param(_1d0a43aa5_ObjectCoder* _self_,jule::Ptr<_1a6425208_Param>& _17829_p) {
	jule::Str _17917_obj = static__1d0a53c91_param(_17829_p);
	if (((!(_17829_p.get()._field_ident.empty())) && (!(_1d074a1d5_is_ignore_ident(_17829_p.get()._field_ident)))) && (!(_1d074a47c_is_anon_ident(_17829_p.get()._field_ident)))) {
		_17917_obj+=jule::Str(" ", 1);
		_17917_obj+=static__1a7d7ec4e_param(_17829_p);
	}
	return _17917_obj;
}



inline jule::Str _1d0a45018_params(_1d0a43aa5_ObjectCoder* _self_,jule::Slice<jule::Ptr<_1a6425208_Param>>& _18830_params) {
	if ((_18830_params.len() == 0LL)) {
		return jule::Str("(void)", 6);
	}
	jule::Str _19217_obj = jule::Str("(", 1);
	{
		auto &expr = _18830_params;
		auto it = expr.begin();
		_iter_begin_1aa59be91:;
		if (it != expr.end()) {
			jule::Ptr<_1a6425208_Param> _1aa59cc61_p = *it;
			{
				if (_1a6425835_is_self(_1aa59cc61_p.ptr())) {
					if (_1a6425a99_is_ref(_1aa59cc61_p.ptr())) {
						_19217_obj+=_1d0a44c0a_param(&(*_self_), _1aa59cc61_p);
					}
				} else {
					_19217_obj+=_1d0a44c0a_param(&(*_self_), _1aa59cc61_p);
				}
				_19217_obj+=jule::Str(",", 1);
			}
			_iter_next_1aa59be91:;
			++it;
			goto _iter_begin_1aa59be91;
		}
		_iter_end_1aa59be91:;
	}
	(_19217_obj).mut_slice(0LL,_19217_obj.len() - 1LL);
	return (_19217_obj + jule::Str(")", 1));
}



inline jule::Str _1d0a45326_params_ins(_1d0a43aa5_ObjectCoder* _self_,jule::Slice<jule::Ptr<_1a6428d55_ParamIns>>& _20934_params) {
	{
		
		if ((_20934_params.len() == 0LL)) {
			_case_begin_1aa5a0219:;
			{
				return jule::Str("(void)", 6);
			}
		}
		_match_end_1aa5a014d:;
	}
	jule::Str _21517_obj = jule::Str("(", 1);
	{
		auto &expr = _20934_params;
		auto it = expr.begin();
		_iter_begin_1aa5a0c31:;
		if (it != expr.end()) {
			jule::Ptr<_1a6428d55_ParamIns> _1aa5a088a_p = *it;
			{
				_21517_obj+=_1d0a448ec_param_ins(&(*_self_), _1aa5a088a_p);
				_21517_obj+=jule::Str(",", 1);
			}
			_iter_next_1aa5a0c31:;
			++it;
			goto _iter_begin_1aa5a0c31;
		}
		_iter_end_1aa5a0c31:;
	}
	(_21517_obj).mut_slice(0LL,_21517_obj.len() - 1LL);
	return (_21517_obj + jule::Str(")", 1));
}



inline jule::Str _1d0a45634_params_decls(_1d0a43aa5_ObjectCoder* _self_,jule::Slice<jule::Ptr<_1a6428d55_ParamIns>>& _22736_params) {
	if ((_22736_params.len() == 0LL)) {
		return jule::Str("(void)", 6);
	}
	jule::Str _23217_obj = jule::Str("(", 1);
	{
		auto &expr = _22736_params;
		auto it = expr.begin();
		_iter_begin_1aa5a224e:;
		if (it != expr.end()) {
			jule::Ptr<_1a6428d55_ParamIns> _1aa5a32b6_p = *it;
			{
				_23217_obj+=static__1d0a54038_param_ins(_1aa5a32b6_p);
				_23217_obj+=jule::Str(",", 1);
			}
			_iter_next_1aa5a224e:;
			++it;
			goto _iter_begin_1aa5a224e;
		}
		_iter_end_1aa5a224e:;
	}
	(_23217_obj).mut_slice(0LL,_23217_obj.len() - 1LL);
	return (_23217_obj + jule::Str(")", 1));
}



inline void _1d0a458a9_prepare_structure(_1d0a43aa5_ObjectCoder* _self_,jule::Ptr<_1a64147be_Struct>& _24341_s) {
	{
		auto &expr = _24341_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1aa5a4938:;
		if (it != expr.end()) {
			jule::Ptr<_1a641744d_StructIns> _1aa5a4a8c_ins = *it;
			{
				{
					auto &expr = _1aa5a4a8c_ins.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1aa5a51ca:;
					if (it != expr.end()) {
						jule::Ptr<_1a6426a45_Fn> _1aa5a5296_m = *it;
						{
							if (_1aa5a5296_m.get()._field_statically) {
								goto _iter_next_1aa5a51ca;
							}
							{
								auto &expr = _1aa5a5296_m.get()._field_instances;
								auto it = expr.begin();
								_iter_begin_1aa5a59d3:;
								if (it != expr.end()) {
									jule::Ptr<_1a6429be1_FnIns> _1aa5a5c8b_ins = *it;
									{
										jule::Ptr<_1a6428d55_ParamIns> _25029_p = _1aa5a5c8b_ins.get()._field_params[0LL];
										if ((!(_1a6425a99_is_ref(_25029_p.get()._field_decl.ptr())))) {
											_25029_p.get()._field_kind=jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(jule::new_ptr<_1d0a50133_CustomType>(_1d0a50133_CustomType(static__1d0a51b07_as_ptr(static__1d0a54d5d_kind(_25029_p.get()._field_kind)))), 12)));
										} else {
											_25029_p.get()._field_kind=jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(jule::new_ptr<_1d0a50133_CustomType>(_1d0a50133_CustomType(static__1d0a54d5d_kind(_25029_p.get()._field_kind))), 12)));
										}
									}
									_iter_next_1aa5a59d3:;
									++it;
									goto _iter_begin_1aa5a59d3;
								}
								_iter_end_1aa5a59d3:;
							}
						}
						_iter_next_1aa5a51ca:;
						++it;
						goto _iter_begin_1aa5a51ca;
					}
					_iter_end_1aa5a51ca:;
				}
			}
			_iter_next_1aa5a4938:;
			++it;
			goto _iter_begin_1aa5a4938;
		}
		_iter_end_1aa5a4938:;
	}
}



inline void _1d0a45a85_prepare_structures(_1d0a43aa5_ObjectCoder* _self_) {
	{
		auto &expr = (*_self_)._field_ir.get()._field_ordered._field_structs;
		auto it = expr.begin();
		_iter_begin_1aa5a55b5:;
		if (it != expr.end()) {
			jule::Ptr<_1a64147be_Struct> _1aa5a5dac_s = *it;
			{
				if ((!(_1aa5a5dac_s.get()._field_cpp_linked)) && (_1aa5a5dac_s.get()._field_token != nullptr)) {
					_1d0a458a9_prepare_structure(&(*_self_), _1aa5a5dac_s);
				}
			}
			_iter_next_1aa5a55b5:;
			++it;
			goto _iter_begin_1aa5a55b5;
		}
		_iter_end_1aa5a55b5:;
	}
}



inline void _1d0a45d0a_build_trait_wrapper(_1d0a43aa5_ObjectCoder* _self_,jule::Ptr<_1d0a438b8_TraitHash>& _27743_hash) {
	{
		auto &expr = _27743_hash.get()._field_t.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1aa5aa158:;
		if (it != expr.end()) {
			jule::Ptr<_1a6426a45_Fn> _1aa5aa235_m = *it;
			{
				jule::Str _27917_ident = _1aa5aa235_m.get()._field_ident;
				_1aa5aa235_m.get()._field_instances[0LL].get()._field_scope=nullptr;
				jule::Bool _28117_ptr = (!(_1a6425a99_is_ref(_1aa5aa235_m.get()._field_params[0LL].ptr())));
				jule::Ptr<_1a6426a45_Fn> _28321_sm = _1a64183d8_find_method(_27743_hash.get()._field_s.ptr(), _1aa5aa235_m.get()._field_ident,false);
				if ((_28321_sm == nullptr) || (_28321_sm.get()._field_instances.len() == 0LL)) {
					goto _iter_next_1aa5aa158;
				}
				_1aa5aa235_m.get()._field_ident=(_27917_ident + jule::Str("_", 1)) + _1a74648a6_itoa(_27743_hash.get()._field_i);
				(*_self_)._field_trait_wrappers+=_1d0a4b2c7_func(&(*_self_), _1aa5aa235_m);
				_1aa5aa235_m.get()._field_ident=_27917_ident;
				_1d09aee72_add_indent(&(*_self_));
				(*_self_)._field_trait_wrappers+=jule::Str("{\n", 2);
				(*_self_)._field_trait_wrappers+=_1d0a4429d_indent(&(*_self_));
				if ((!(_1a6426e96_is_void(_28321_sm.ptr())))) {
					(*_self_)._field_trait_wrappers+=jule::Str("return ", 7);
				}
				(*_self_)._field_trait_wrappers+=static__1a7d7e468_func(_28321_sm);
				(*_self_)._field_trait_wrappers+=jule::Str("(", 1);
				if (_28117_ptr) {
					(*_self_)._field_trait_wrappers+=jule::Str("_self_.safe_ptr<", 16);
					(*_self_)._field_trait_wrappers+=static__1d0a53752_structure_ins(_27743_hash.get()._field_s);
					(*_self_)._field_trait_wrappers+=jule::Str(">(", 2);
					if ((!(_1e829b746_PRODUCTION))) {
						(*_self_)._field_trait_wrappers+=jule::Str("_00___file", 10);
					}
					(*_self_)._field_trait_wrappers+=jule::Str(")", 1);
				} else {
					(*_self_)._field_trait_wrappers+=jule::Str("_self_.data.as<", 15);
					(*_self_)._field_trait_wrappers+=static__1d0a534aa_structure(_28321_sm.get()._field_owner);
					(*_self_)._field_trait_wrappers+=jule::Str(">()", 3);
				}
				{
					auto expr = _1aa5aa235_m.get()._field_params.slice(1LL);
					auto it = expr.begin();
					_iter_begin_1aa5b3051:;
					if (it != expr.end()) {
						jule::Ptr<_1a6425208_Param> _1aa5b0db7_mp = *it;
						{
							(*_self_)._field_trait_wrappers+=jule::Str(", ", 2);
							(*_self_)._field_trait_wrappers+=static__1a7d7ec4e_param(_1aa5b0db7_mp);
						}
						_iter_next_1aa5b3051:;
						++it;
						goto _iter_begin_1aa5b3051;
					}
					_iter_end_1aa5b3051:;
				}
				(*_self_)._field_trait_wrappers+=jule::Str(");\n}\n", 5);
				_1d0a4416b_done_indent(&(*_self_));
			}
			_iter_next_1aa5aa158:;
			++it;
			goto _iter_begin_1aa5aa158;
		}
		_iter_end_1aa5aa158:;
	}
}



inline void _1d0a46080_trait_decl(_1d0a43aa5_ObjectCoder* _self_,jule::Ptr<_1a7465bd7_Trait>& _32134_t) {
	jule::Str _32213_ident = static__1a7d7e9a7_trait_decl(_32134_t);
	jule::Str _32413_type_data = (_32213_ident + jule::Str("MptrData", 8));
	(*_self_)._field_trait_data_t+=jule::Str("struct ", 7);
	(*_self_)._field_trait_data_t+=_32413_type_data;
	(*_self_)._field_trait_data_t+=jule::Str(" {\n", 3);
	{
		auto &expr = _32134_t.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1aa5b585b:;
		if (it != expr.end()) {
			jule::Ptr<_1a6426a45_Fn> _1aa5b595a_m = *it;
			{
				jule::Ptr<_1a6429be1_FnIns> _33021_ins = _1aa5b595a_m.get()._field_instances[0LL];
				jule::Ptr<_1a6428d55_ParamIns> _33121_p = _33021_ins.get()._field_params[0LL];
				_33121_p.get()._field_kind=jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_32134_t, 2)));
				{
					auto expr = _33021_ins.get()._field_params.slice(1LL);
					auto it = expr.begin();
					_iter_begin_1aa5b7231:;
					if (it != expr.end()) {
						jule::I64 _1aa5b73eb_i = it - expr.begin();
						jule::Ptr<_1a6428d55_ParamIns> _1aa5b753e_ip = *it;
						{
							if (_1d074a47c_is_anon_ident(_1aa5b753e_ip.get()._field_decl.get()._field_ident)) {
								_1aa5b753e_ip.get()._field_decl.get()._field_ident=jule::Str("_", 1) + _1a74648a6_itoa(_1aa5b73eb_i);
							}
						}
						_iter_next_1aa5b7231:;
						++it;
						_1aa5b73eb_i++;
						goto _iter_begin_1aa5b7231;
					}
					_iter_end_1aa5b7231:;
				}
				if ((!(_1e829b746_PRODUCTION))) {
					_33021_ins.get()._field_params = jule::alloc_for_append(_33021_ins.get()._field_params,1);_33021_ins.get()._field_params.__push(jule::new_ptr<_1a6428d55_ParamIns>(_1a6428d55_ParamIns(jule::new_ptr<_1a6425208_Param>(_1a6425208_Param(jule::Ptr<_1d0747985_Token>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a7676c3e_TypeSymbol>(),jule::Str("__file", 6))),jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(jule::new_ptr<_1d0a50133_CustomType>(_1d0a50133_CustomType(jule::Str("const char*", 11))), 12))))));
				}
				_1d09aee72_add_indent(&(*_self_));
				(*_self_)._field_trait_data_t+=_1d0a49dca_func_decl(&(*_self_), _1aa5b595a_m,true);
				_1d0a4416b_done_indent(&(*_self_));
			}
			_iter_next_1aa5b585b:;
			++it;
			goto _iter_begin_1aa5b585b;
		}
		_iter_end_1aa5b585b:;
	}
	(*_self_)._field_trait_data_t+=_1d0a4429d_indent(&(*_self_));
	(*_self_)._field_trait_data_t+=jule::Str("};", 2);
	(*_self_)._field_trait_data_t+=jule::Str("\n\n", 2);
	jule::I64 _36113_n = (*_self_)._field_trait_map.len();
	jule::I64 _36217_i = 0LL;
	{
		auto &expr = _32134_t.get()._field_implemented;
		auto it = expr.begin();
		_iter_begin_1aa5bb7da:;
		if (it != expr.end()) {
			jule::Ptr<_1a64147be_Struct> _1aa5bb93e_s = *it;
			{
				{
					auto &expr = _1aa5bb93e_s.get()._field_instances;
					auto it = expr.begin();
					_iter_begin_1aa5bc038:;
					if (it != expr.end()) {
						jule::Ptr<_1a641744d_StructIns> _1aa5bc104_ins = *it;
						{
							jule::Ptr<_1d0a438b8_TraitHash> _36525_hash = jule::new_ptr<_1d0a438b8_TraitHash>(_1d0a438b8_TraitHash(_32134_t,_1aa5bc104_ins,_36217_i));
							(_36217_i)++;
							_1d0a45d0a_build_trait_wrapper(&(*_self_), _36525_hash);
							(*_self_)._field_trait_map = jule::alloc_for_append((*_self_)._field_trait_map,1);(*_self_)._field_trait_map.__push(_36525_hash);
						}
						_iter_next_1aa5bc038:;
						++it;
						goto _iter_begin_1aa5bc038;
					}
					_iter_end_1aa5bc038:;
				}
			}
			_iter_next_1aa5bb7da:;
			++it;
			goto _iter_begin_1aa5bb7da;
		}
		_iter_end_1aa5bb7da:;
	}
	(*_self_)._field_trait_declarations+=jule::Str("struct ", 7);
	(*_self_)._field_trait_declarations+=_32213_ident;
	(*_self_)._field_trait_declarations+=jule::Str(" {};\n", 5);
	_1d09aee72_add_indent(&(*_self_));
	(*_self_)._field_trait_data+=jule::Str("static ", 7);
	(*_self_)._field_trait_data+=_32413_type_data;
	(*_self_)._field_trait_data+=jule::Str(" ", 1);
	(*_self_)._field_trait_data+=_32213_ident;
	(*_self_)._field_trait_data+=jule::Str("_mptr_data[] = {\n", 17);
	{
		auto expr = (*_self_)._field_trait_map.slice(_36113_n);
		auto it = expr.begin();
		_iter_begin_1aa5beb2e:;
		if (it != expr.end()) {
			jule::Ptr<_1d0a438b8_TraitHash> _1aa5bec1c_hash = *it;
			{
				(*_self_)._field_trait_data+=_1d0a4429d_indent(&(*_self_));
				(*_self_)._field_trait_data+=jule::Str("{\n", 2);
				_1d09aee72_add_indent(&(*_self_));
				{
					auto &expr = _1aa5bec1c_hash.get()._field_t.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1aa5c0e82:;
					if (it != expr.end()) {
						jule::Ptr<_1a6426a45_Fn> _1aa5c1070_m = *it;
						{
							jule::Str _39221_m_ident = static__1a7d7e468_func(_1aa5c1070_m);
							(*_self_)._field_trait_data+=_1d0a4429d_indent(&(*_self_));
							(*_self_)._field_trait_data+=jule::Str(".", 1);
							(*_self_)._field_trait_data+=_39221_m_ident;
							(*_self_)._field_trait_data+=jule::Str("=", 1);
							(*_self_)._field_trait_data+=_39221_m_ident;
							(*_self_)._field_trait_data+=jule::Str("_", 1);
							(*_self_)._field_trait_data+=_1a74648a6_itoa(_1aa5bec1c_hash.get()._field_i);
							(*_self_)._field_trait_data+=jule::Str(",\n", 2);
						}
						_iter_next_1aa5c0e82:;
						++it;
						goto _iter_begin_1aa5c0e82;
					}
					_iter_end_1aa5c0e82:;
				}
				_1d0a4416b_done_indent(&(*_self_));
				(*_self_)._field_trait_data+=_1d0a4429d_indent(&(*_self_));
				(*_self_)._field_trait_data+=jule::Str("},\n", 3);
			}
			_iter_next_1aa5beb2e:;
			++it;
			goto _iter_begin_1aa5beb2e;
		}
		_iter_end_1aa5beb2e:;
	}
	_1d0a4416b_done_indent(&(*_self_));
	(*_self_)._field_trait_data+=_1d0a4429d_indent(&(*_self_));
	(*_self_)._field_trait_data+=jule::Str("};", 2);
}



inline void _1d0a46305_trait_decls(_1d0a43aa5_ObjectCoder* _self_,jule::Ptr<_1a75cbe4c_Package>& _41235_p) {
	{
		auto &expr = _41235_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1aa5c4a9b:;
		if (it != expr.end()) {
			jule::Ptr<_1a76439db_SymbolTable> _1aa5c4c00_f = *it;
			{
				{
					auto &expr = _1aa5c4c00_f.get()._field_traits;
					auto it = expr.begin();
					_iter_begin_1aa5c533d:;
					if (it != expr.end()) {
						jule::Ptr<_1a7465bd7_Trait> _1aa5c5409_t = *it;
						{
							if ((_1aa5c5409_t.get()._field_token != nullptr)) {
								_1d0a46080_trait_decl(&(*_self_), _1aa5c5409_t);
							}
						}
						_iter_next_1aa5c533d:;
						++it;
						goto _iter_begin_1aa5c533d;
					}
					_iter_end_1aa5c533d:;
				}
			}
			_iter_next_1aa5c4a9b:;
			++it;
			goto _iter_begin_1aa5c4a9b;
		}
		_iter_end_1aa5c4a9b:;
	}
}



inline jule::Str _1d0a46613_structure_plain_decl(_1d0a43aa5_ObjectCoder* _self_,jule::Ptr<_1a64147be_Struct>& _42344_s) {
	jule::Str _42417_obj = jule::Str();
	{
		auto &expr = _42344_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1aa5c6a8c:;
		if (it != expr.end()) {
			jule::Ptr<_1a641744d_StructIns> _1aa5c6bad_ins = *it;
			{
				_42417_obj+=jule::Str("\nstruct ", 8);
				_42417_obj+=static__1a7d8028d_structure_ins(_1aa5c6bad_ins);
				_42417_obj+=jule::Str(";\n", 2);
			}
			_iter_next_1aa5c6a8c:;
			++it;
			goto _iter_begin_1aa5c6a8c;
		}
		_iter_end_1aa5c6a8c:;
	}
	return _42417_obj;
}



inline jule::Str _1d0a46877_structure_plain_decls(_1d0a43aa5_ObjectCoder* _self_) {
	jule::Str _43517_obj = jule::Str();
	{
		auto &expr = (*_self_)._field_ir.get()._field_ordered._field_structs;
		auto it = expr.begin();
		_iter_begin_1aa5c8198:;
		if (it != expr.end()) {
			jule::Ptr<_1a64147be_Struct> _1aa5c8220_s = *it;
			{
				if ((!(_1aa5c8220_s.get()._field_cpp_linked)) && (_1aa5c8220_s.get()._field_token != nullptr)) {
					_43517_obj+=_1d0a46613_structure_plain_decl(&(*_self_), _1aa5c8220_s);
					_43517_obj+=jule::Str("\n", 1);
				}
			}
			_iter_next_1aa5c8198:;
			++it;
			goto _iter_begin_1aa5c8198;
		}
		_iter_end_1aa5c8198:;
	}
	return _43517_obj;
}



inline jule::Str _1d0a46c2e_var_init_expr(_1d0a43aa5_ObjectCoder* _self_,jule::Ptr<_1a75ec478_Var>& _44637_v,jule::Str _44646_init) {
	jule::Str _44717_obj = jule::Str();
	if (_44637_v.get()._field_statically) {
		_44717_obj+=jule::Str("static ", 7);
	}
	_44717_obj+=static__1d0a54d5d_kind(_44637_v.get()._field_kind.get()._field_kind);
	_44717_obj+=jule::Str(" ", 1);
	if (_44637_v.get()._field_reference) {
		_44717_obj+=jule::Str("&", 1);
	}
	_44717_obj+=static__1a7d807cc_var(_44637_v);
	if ((!(_44646_init.empty()))) {
		_44717_obj+=jule::Str(" = ", 3);
		_44717_obj+=_44646_init;
	}
	_44717_obj+=jule::Str(";", 1);
	return _44717_obj;
}



inline jule::Str _1d0a4703c_var(_1d0a43aa5_ObjectCoder* _self_,jule::Ptr<_1a75ec478_Var> _46726_v) {
	if (_1d074a1d5_is_ignore_ident(_46726_v.get()._field_ident)) {
		return jule::Str();
	}
	if ((_46726_v.get()._field_value != nullptr) && (_46726_v.get()._field_value.get()._field_expr != nullptr)) {
		if (_46726_v.get()._field_value.get()._field_data.get()._field_model != jule::Any(jule::Any(nullptr))) {
			return _1d0a46c2e_var_init_expr(&(*_self_), _46726_v,_1a7d79353_val((*_self_)._field_ec.ptr(), _46726_v.get()._field_value));
		}
		return _1d0a46c2e_var_init_expr(&(*_self_), _46726_v,jule::Str());
	}
	return _1d0a46c2e_var_init_expr(&(*_self_), _46726_v,_1a7d79661_init_expr((*_self_)._field_ec.ptr(), _46726_v.get()._field_kind.get()._field_kind));
}



inline jule::Str _1d0a4734a_field_decl(_1d0a43aa5_ObjectCoder* _self_,jule::Ptr<_1a6416ae0_FieldIns>& _48134_f) {
	jule::Str _48217_obj = static__1d0a54d5d_kind(_48134_f.get()._field_kind);
	_48217_obj+=jule::Str(" ", 1);
	_48217_obj+=static__1a7d80535_field(_48134_f.get()._field_decl);
	_48217_obj+=jule::Str(" = ", 3);
	if ((_48134_f.get()._field_default == nullptr)) {
		_48217_obj+=_1a7d79661_init_expr((*_self_)._field_ec.ptr(), _48134_f.get()._field_kind);
	} else {
		_48217_obj+=_1a7d79045_expr((*_self_)._field_ec.ptr(), _48134_f.get()._field_default.get()._field_model);
	}
	_48217_obj+=jule::Str(";", 1);
	return _48217_obj;
}



inline jule::Str _1d0a47658_structure_constructor(_1d0a43aa5_ObjectCoder* _self_,jule::Ptr<_1a641744d_StructIns>& _49745_s) {
	jule::Str _49817_obj = static__1a7d8028d_structure_ins(_49745_s);
	_49817_obj+=jule::Str("(", 1);
	if ((_49745_s.get()._field_fields.len() > 0LL)) {
		{
			auto &expr = _49745_s.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1aa5d4094:;
			if (it != expr.end()) {
				jule::Ptr<_1a6416ae0_FieldIns> _1aa5d41c6_f = *it;
				{
					_49817_obj+=static__1d0a54d5d_kind(_1aa5d41c6_f.get()._field_kind);
					_49817_obj+=jule::Str(" __param_", 9);
					_49817_obj+=_1aa5d41c6_f.get()._field_decl.get()._field_ident;
					_49817_obj+=jule::Str(", ", 2);
				}
				_iter_next_1aa5d4094:;
				++it;
				goto _iter_begin_1aa5d4094;
			}
			_iter_end_1aa5d4094:;
		}
		(_49817_obj).mut_slice(0LL,_49817_obj.len() - 2LL);
	} else {
		_49817_obj+=jule::Str("void", 4);
	}
	_49817_obj+=jule::Str(")", 1);
	if ((_49745_s.get()._field_fields.len() > 0LL)) {
		_49817_obj+=jule::Str(": ", 2);
		{
			auto &expr = _49745_s.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1aa5d6151:;
			if (it != expr.end()) {
				jule::Ptr<_1a6416ae0_FieldIns> _1aa5d61d9_f = *it;
				{
					_49817_obj+=static__1a7d80535_field(_1aa5d61d9_f.get()._field_decl);
					_49817_obj+=jule::Str("(", 1);
					_49817_obj+=jule::Str("__param_", 8);
					_49817_obj+=_1aa5d61d9_f.get()._field_decl.get()._field_ident;
					_49817_obj+=jule::Str("), ", 3);
				}
				_iter_next_1aa5d6151:;
				++it;
				goto _iter_begin_1aa5d6151;
			}
			_iter_end_1aa5d6151:;
		}
		(_49817_obj).mut_slice(0LL,_49817_obj.len() - 2LL);
	}
	_49817_obj+=jule::Str(" {}", 3);
	return _49817_obj;
}



inline jule::Str _1d0a47966_structure_destructor(_1d0a43aa5_ObjectCoder* _self_,jule::Ptr<_1a641744d_StructIns>& _53044_s) {
	
	jule::Ptr<_1a6426a45_Fn> _53213_dispose_method = _1a64183d8_find_method(_53044_s.ptr(), jule::Str("dispose", 7),false);
	jule::Bool _53317_disposed = static__1a75ed600_dispose(_53213_dispose_method);
	if ((!(_53317_disposed))) {
		return jule::Str();
	}
	jule::Str _53817_obj = jule::Str("~", 1);
	_53817_obj+=static__1a7d8028d_structure_ins(_53044_s);
	_53817_obj+=jule::Str("(void) { ", 9);
	_53817_obj+=static__1a7d7e468_func(_53213_dispose_method);
	_53817_obj+=jule::Str("(this); }", 9);
	return _53817_obj;
}



inline void _1d0a47d2e_structure_operator_eq(_1d0a43aa5_ObjectCoder* _self_,jule::Str& _54645_obj,jule::Str& _54656_ident,jule::Ptr<_1a641744d_StructIns>& _54673_s) {
	if ((_54673_s.get()._field_operators._field_eq != nullptr)) {
		_1d0a4868c_structure_operator(&(*_self_), _54645_obj,_54656_ident,_54673_s.get()._field_operators._field_eq,jule::Str("==", 2));
		return;
	}
	_54645_obj+=_1d0a4429d_indent(&(*_self_));
	if (_1e829c13c_OPT_INLINE) {
		_54645_obj+=jule::Str("inline ", 7);
	}
	_54645_obj+=jule::Str("bool operator==(", 16);
	_54645_obj+=_54656_ident;
	_54645_obj+=jule::Str(" _other) {", 10);
	if ((_54673_s.get()._field_fields.len() > 0LL)) {
		_1d09aee72_add_indent(&(*_self_));
		_54645_obj+=jule::Str("\n", 1);
		_54645_obj+=_1d0a4429d_indent(&(*_self_));
		_54645_obj+=jule::Str("return ", 7);
		_1d09aee72_add_indent(&(*_self_));
		jule::I64 _56621_n = 0LL;
		{
			auto &expr = _54673_s.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1aa5deac7:;
			if (it != expr.end()) {
				jule::Ptr<_1a6416ae0_FieldIns> _1aa5dec2b_f = *it;
				{
					jule::Ptr<_1a641744d_StructIns> _56921_strct = _1a767614a_strct(_1aa5dec2b_f.get()._field_kind.ptr());
					if (((_56921_strct != nullptr) && (_56921_strct.get()._field_decl != nullptr)) && _56921_strct.get()._field_decl.get()._field_cpp_linked) {
						goto _iter_next_1aa5deac7;
					}
					(_56621_n)++;
					_54645_obj+=jule::Str("\n", 1);
					_54645_obj+=_1d0a4429d_indent(&(*_self_));
					_54645_obj+=jule::Str("this->", 6);
					jule::Str _57821_f_ident = static__1a7d80535_field(_1aa5dec2b_f.get()._field_decl);
					_54645_obj+=_57821_f_ident;
					_54645_obj+=jule::Str(" == _other.", 11);
					_54645_obj+=_57821_f_ident;
					_54645_obj+=jule::Str(" &&", 3);
				}
				_iter_next_1aa5deac7:;
				++it;
				goto _iter_begin_1aa5deac7;
			}
			_iter_end_1aa5deac7:;
		}
		_1d0a4416b_done_indent(&(*_self_));
		if ((_56621_n > 0LL)) {
			(_54645_obj).mut_slice(0LL,_54645_obj.len() - 3LL);
		} else {
			_54645_obj+=jule::Str("true", 4);
		}
		_54645_obj+=jule::Str(";\n", 2);
		_1d0a4416b_done_indent(&(*_self_));
		_54645_obj+=_1d0a4429d_indent(&(*_self_));
		_54645_obj+=jule::Str("}", 1);
	} else {
		_54645_obj+=jule::Str(" return true; }", 15);
	}
	_54645_obj+=jule::Str("\n\n", 2);
}



inline void _1d0a4823b_structure_operator_not_eq(_1d0a43aa5_ObjectCoder* _self_,jule::Str& _60049_obj,jule::Str& _60060_ident,jule::Ptr<_1a641744d_StructIns>& _60077_s) {
	_60049_obj+=_1d0a4429d_indent(&(*_self_));
	if (_1e829c13c_OPT_INLINE) {
		_60049_obj+=jule::Str("inline ", 7);
	}
	_60049_obj+=jule::Str("bool operator!=(", 16);
	_60049_obj+=_60060_ident;
	_60049_obj+=jule::Str(" _other) { return !this->operator==(_other); }\n\n", 48);
}



inline void _1d0a4868c_structure_operator(_1d0a43aa5_ObjectCoder* _self_,jule::Str& _61142_obj,jule::Str& _61153_ident,jule::Ptr<_1a6429be1_FnIns>& _61170_f,jule::Str _61181_op) {
	if ((_61170_f == nullptr)) {
		return;
	}
	jule::Bool _61613_unary = (_61170_f.get()._field_params.len() == 1LL);
	jule::Bool _61713_assignment = _1a6426e96_is_void(_61170_f.get()._field_decl.ptr());
	_61142_obj+=_1d0a4429d_indent(&(*_self_));
	if (_1e829c13c_OPT_INLINE) {
		_61142_obj+=jule::Str("inline ", 7);
	}
	if (_61713_assignment) {
		_61142_obj+=_61153_ident;
		_61142_obj+=jule::Str("&", 1);
	} else {
		if ((_1a7674e5c_prim(_61170_f.get()._field_result.ptr()) == nullptr)) {
			_61142_obj+=_61153_ident;
		} else {
			_61142_obj+=jule::Str("jule::Bool", 10);
		}
	}
	_61142_obj+=jule::Str(" operator", 9);
	_61142_obj+=_61181_op;
	_61142_obj+=jule::Str("(", 1);
	if ((!(_61613_unary))) {
		jule::Ptr<_1a6428d55_ParamIns> _63921_p = _61170_f.get()._field_params[1LL];
		_61142_obj+=static__1d0a54038_param_ins(_63921_p);
		_61142_obj+=jule::Str(" _other", 7);
	}
	_61142_obj+=jule::Str(") { ", 4);
	if ((!(_61713_assignment))) {
		_61142_obj+=jule::Str("return ", 7);
	}
	_61142_obj+=static__1a7d7e710_func_ins(_61170_f);
	if ((!(_61613_unary))) {
		_61142_obj+=jule::Str("(this, _other); ", 16);
		if (_61713_assignment) {
			_61142_obj+=jule::Str("return *this; ", 14);
		}
		_61142_obj+=jule::Str("}", 1);
	} else {
		_61142_obj+=jule::Str("(this); }", 9);
	}
	_61142_obj+=jule::Str("\n\n", 2);
}



inline jule::Str _1d0a4899a_structure_operators(_1d0a43aa5_ObjectCoder* _self_,jule::Ptr<_1a641744d_StructIns>& _66043_s) {
	jule::Str _66113_ident = static__1a7d8028d_structure_ins(_66043_s);
	jule::Str _66217_obj = jule::Str();
	_1d0a47d2e_structure_operator_eq(&(*_self_), _66217_obj,_66113_ident,_66043_s);
	_1d0a4823b_structure_operator_not_eq(&(*_self_), _66217_obj,_66113_ident,_66043_s);
	_1d0a4868c_structure_operator(&(*_self_), _66217_obj,_66113_ident,_66043_s.get()._field_operators._field_gt,jule::Str(">", 1));
	_1d0a4868c_structure_operator(&(*_self_), _66217_obj,_66113_ident,_66043_s.get()._field_operators._field_gt_eq,jule::Str(">=", 2));
	_1d0a4868c_structure_operator(&(*_self_), _66217_obj,_66113_ident,_66043_s.get()._field_operators._field_lt,jule::Str("<", 1));
	_1d0a4868c_structure_operator(&(*_self_), _66217_obj,_66113_ident,_66043_s.get()._field_operators._field_lt_eq,jule::Str("<=", 2));
	_1d0a4868c_structure_operator(&(*_self_), _66217_obj,_66113_ident,_66043_s.get()._field_operators._field_shl,jule::Str("<<", 2));
	_1d0a4868c_structure_operator(&(*_self_), _66217_obj,_66113_ident,_66043_s.get()._field_operators._field_shr,jule::Str(">>", 2));
	_1d0a4868c_structure_operator(&(*_self_), _66217_obj,_66113_ident,_66043_s.get()._field_operators._field_add,jule::Str("+", 1));
	_1d0a4868c_structure_operator(&(*_self_), _66217_obj,_66113_ident,_66043_s.get()._field_operators._field_sub,jule::Str("-", 1));
	_1d0a4868c_structure_operator(&(*_self_), _66217_obj,_66113_ident,_66043_s.get()._field_operators._field_div,jule::Str("/", 1));
	_1d0a4868c_structure_operator(&(*_self_), _66217_obj,_66113_ident,_66043_s.get()._field_operators._field_mul,jule::Str("*", 1));
	_1d0a4868c_structure_operator(&(*_self_), _66217_obj,_66113_ident,_66043_s.get()._field_operators._field_mod,jule::Str("%", 1));
	_1d0a4868c_structure_operator(&(*_self_), _66217_obj,_66113_ident,_66043_s.get()._field_operators._field_bit_and,jule::Str("&", 1));
	_1d0a4868c_structure_operator(&(*_self_), _66217_obj,_66113_ident,_66043_s.get()._field_operators._field_bit_or,jule::Str("|", 1));
	_1d0a4868c_structure_operator(&(*_self_), _66217_obj,_66113_ident,_66043_s.get()._field_operators._field_bit_xor,jule::Str("^", 1));
	_1d0a4868c_structure_operator(&(*_self_), _66217_obj,_66113_ident,_66043_s.get()._field_operators._field_neg,jule::Str("-", 1));
	_1d0a4868c_structure_operator(&(*_self_), _66217_obj,_66113_ident,_66043_s.get()._field_operators._field_pos,jule::Str("+", 1));
	_1d0a4868c_structure_operator(&(*_self_), _66217_obj,_66113_ident,_66043_s.get()._field_operators._field_bit_not,jule::Str("~", 1));
	_1d0a4868c_structure_operator(&(*_self_), _66217_obj,_66113_ident,_66043_s.get()._field_operators._field_add_assign,jule::Str("+=", 2));
	_1d0a4868c_structure_operator(&(*_self_), _66217_obj,_66113_ident,_66043_s.get()._field_operators._field_sub_assign,jule::Str("-=", 2));
	_1d0a4868c_structure_operator(&(*_self_), _66217_obj,_66113_ident,_66043_s.get()._field_operators._field_div_assign,jule::Str("/=", 2));
	_1d0a4868c_structure_operator(&(*_self_), _66217_obj,_66113_ident,_66043_s.get()._field_operators._field_mul_assign,jule::Str("*=", 2));
	_1d0a4868c_structure_operator(&(*_self_), _66217_obj,_66113_ident,_66043_s.get()._field_operators._field_mod_assign,jule::Str("%=", 2));
	_1d0a4868c_structure_operator(&(*_self_), _66217_obj,_66113_ident,_66043_s.get()._field_operators._field_shl_assign,jule::Str("<<=", 3));
	_1d0a4868c_structure_operator(&(*_self_), _66217_obj,_66113_ident,_66043_s.get()._field_operators._field_shr_assign,jule::Str(">>=", 3));
	_1d0a4868c_structure_operator(&(*_self_), _66217_obj,_66113_ident,_66043_s.get()._field_operators._field_bit_or_assign,jule::Str("|=", 2));
	_1d0a4868c_structure_operator(&(*_self_), _66217_obj,_66113_ident,_66043_s.get()._field_operators._field_bit_and_assign,jule::Str("&=", 2));
	_1d0a4868c_structure_operator(&(*_self_), _66217_obj,_66113_ident,_66043_s.get()._field_operators._field_bit_xor_assign,jule::Str("^=", 2));
	return _66217_obj;
}



inline jule::Str _1d0a48cec_structure_derive_defs_decls(_1d0a43aa5_ObjectCoder* _self_,jule::Ptr<_1a641744d_StructIns>& _70147_s) {
	jule::Str _70217_obj = jule::Str();
	if (_1a64160ea_is_derives(_70147_s.get()._field_decl.ptr(), jule::Str("Clone", 5))) {
		_70217_obj+=_1d0a4429d_indent(&(*_self_));
		_70217_obj+=static__1a7d7bed2_clone_func_decl(_70147_s.get()._field_decl);
		_70217_obj+=jule::Str(";\n\n", 3);
	}
	return _70217_obj;
}



inline jule::Str _1d0a490e9_structure_ins_decl(_1d0a43aa5_ObjectCoder* _self_,jule::Ptr<_1a641744d_StructIns>& _71142_s) {
	jule::Str _71217_obj = jule::Str();
	if ((_71142_s.get()._field_methods.len() > 0LL)) {
		{
			auto &expr = _71142_s.get()._field_methods;
			auto it = expr.begin();
			_iter_begin_1aa612237:;
			if (it != expr.end()) {
				jule::Ptr<_1a6426a45_Fn> _1aa61238b_m = *it;
				{
					_71217_obj+=_1d0a49dca_func_decl(&(*_self_), _1aa61238b_m,false);
				}
				_iter_next_1aa612237:;
				++it;
				goto _iter_begin_1aa612237;
			}
			_iter_end_1aa612237:;
		}
	}
	_71217_obj+=jule::Str("struct ", 7);
	jule::Str _72113_out_ident = static__1a7d8028d_structure_ins(_71142_s);
	_71217_obj+=_72113_out_ident;
	_71217_obj+=jule::Str(" {\n", 3);
	_1d09aee72_add_indent(&(*_self_));
	if ((_71142_s.get()._field_fields.len() > 0LL)) {
		{
			auto &expr = _71142_s.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1aa6140a2:;
			if (it != expr.end()) {
				jule::Ptr<_1a6416ae0_FieldIns> _1aa6141c3_f = *it;
				{
					_71217_obj+=_1d0a4429d_indent(&(*_self_));
					_71217_obj+=_1d0a4734a_field_decl(&(*_self_), _1aa6141c3_f);
					_71217_obj+=jule::Str("\n", 1);
				}
				_iter_next_1aa6140a2:;
				++it;
				goto _iter_begin_1aa6140a2;
			}
			_iter_end_1aa6140a2:;
		}
		_71217_obj+=jule::Str("\n\n", 2);
		_71217_obj+=_1d0a4429d_indent(&(*_self_));
		_71217_obj+=_1d0a47658_structure_constructor(&(*_self_), _71142_s);
		_71217_obj+=jule::Str("\n\n", 2);
	}
	_71217_obj+=_1d0a4429d_indent(&(*_self_));
	_71217_obj+=_1d0a47966_structure_destructor(&(*_self_), _71142_s);
	_71217_obj+=jule::Str("\n\n", 2);
	_71217_obj+=_1d0a4429d_indent(&(*_self_));
	_71217_obj+=_72113_out_ident;
	_71217_obj+=jule::Str("(void) = default;\n\n", 19);
	_71217_obj+=_1d0a48cec_structure_derive_defs_decls(&(*_self_), _71142_s);
	_71217_obj+=_1d0a4899a_structure_operators(&(*_self_), _71142_s);
	_71217_obj+=jule::Str("\n", 1);
	_1d0a4416b_done_indent(&(*_self_));
	_71217_obj+=(_1d0a4429d_indent(&(*_self_)) + jule::Str("};", 2));
	return _71217_obj;
}



inline jule::Str _1d0a49407_structure_decl(_1d0a43aa5_ObjectCoder* _self_,jule::Ptr<_1a64147be_Struct>& _76038_s) {
	jule::Str _76117_obj = jule::Str();
	{
		auto &expr = _76038_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1aa618a24:;
		if (it != expr.end()) {
			jule::Ptr<_1a641744d_StructIns> _1aa618b45_ins = *it;
			{
				_76117_obj+=_1d0a490e9_structure_ins_decl(&(*_self_), _1aa618b45_ins);
			}
			_iter_next_1aa618a24:;
			++it;
			goto _iter_begin_1aa618a24;
		}
		_iter_end_1aa618a24:;
	}
	return _76117_obj;
}



inline jule::Str _1d0a4966b_structure_decls(_1d0a43aa5_ObjectCoder* _self_) {
	jule::Str _77017_obj = jule::Str();
	{
		auto &expr = (*_self_)._field_ir.get()._field_ordered._field_structs;
		auto it = expr.begin();
		_iter_begin_1aa61a042:;
		if (it != expr.end()) {
			jule::Ptr<_1a64147be_Struct> _1aa61a0b9_s = *it;
			{
				if ((!(_1aa61a0b9_s.get()._field_cpp_linked)) && (_1aa61a0b9_s.get()._field_token != nullptr)) {
					_77017_obj+=_1d0a49407_structure_decl(&(*_self_), _1aa61a0b9_s);
					_77017_obj+=jule::Str("\n", 1);
				}
			}
			_iter_next_1aa61a042:;
			++it;
			goto _iter_begin_1aa61a042;
		}
		_iter_end_1aa61a042:;
	}
	return _77017_obj;
}



inline jule::Str _1d0a49a23_func_head(_1d0a43aa5_ObjectCoder* _self_,jule::Ptr<_1a6429be1_FnIns>& _78033_f,jule::Bool _78044_ptr) {
	jule::Str _78117_obj = jule::Str();
	if (((!(_78044_ptr)) && _1e829c13c_OPT_INLINE) && (!(_1a642746e_is_entry_point(_78033_f.get()._field_decl.ptr())))) {
		_78117_obj+=jule::Str("inline ", 7);
	}
	_78117_obj+=static__1d0a54577_func_ins_result(_78033_f);
	if (_78044_ptr) {
		_78117_obj+=jule::Str("(*", 2);
		_78117_obj+=static__1a7d7e710_func_ins(_78033_f);
		_78117_obj+=jule::Str(")", 1);
	} else {
		_78117_obj+=jule::Str(" ", 1);
		_78117_obj+=static__1a7d7e710_func_ins(_78033_f);
	}
	return _78117_obj;
}



inline jule::Str _1d0a49dca_func_decl(_1d0a43aa5_ObjectCoder* _self_,jule::Ptr<_1a6426a45_Fn>& _79833_f,jule::Bool _79841_ptr) {
	jule::Str _79917_obj = jule::Str();
	{
		auto &expr = _79833_f.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1aa61e83d:;
		if (it != expr.end()) {
			jule::Ptr<_1a6429be1_FnIns> _1aa61e992_c = *it;
			{
				_79917_obj+=_1d0a4429d_indent(&(*_self_));
				_79917_obj+=_1d0a49a23_func_head(&(*_self_), _1aa61e992_c,_79841_ptr);
				_79917_obj+=_1d0a45634_params_decls(&(*_self_), _1aa61e992_c.get()._field_params);
				_79917_obj+=jule::Str(";\n", 2);
			}
			_iter_next_1aa61e83d:;
			++it;
			goto _iter_begin_1aa61e83d;
		}
		_iter_end_1aa61e83d:;
	}
	return _79917_obj;
}



inline jule::Str _1d0a4a1d8_func_decls(_1d0a43aa5_ObjectCoder* _self_,jule::Ptr<_1a75cbe4c_Package>& _81034_pkg) {
	jule::Str _81117_obj = jule::Str();
	{
		auto &expr = _81034_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1aa621a71:;
		if (it != expr.end()) {
			jule::Ptr<_1a76439db_SymbolTable> _1aa621b92_file = *it;
			{
				{
					auto &expr = _1aa621b92_file.get()._field_funcs;
					auto it = expr.begin();
					_iter_begin_1aa62228b:;
					if (it != expr.end()) {
						jule::Ptr<_1a6426a45_Fn> _1aa622357_f = *it;
						{
							if ((!(_1aa622357_f.get()._field_cpp_linked)) && (_1aa622357_f.get()._field_token != nullptr)) {
								_81117_obj+=_1d0a49dca_func_decl(&(*_self_), _1aa622357_f,false);
							}
						}
						_iter_next_1aa62228b:;
						++it;
						goto _iter_begin_1aa62228b;
					}
					_iter_end_1aa62228b:;
				}
			}
			_iter_next_1aa621a71:;
			++it;
			goto _iter_begin_1aa621a71;
		}
		_iter_end_1aa621a71:;
	}
	return _81117_obj;
}



inline void _1d0a4a3b4_build_trait_map(_1d0a43aa5_ObjectCoder* _self_) {
	{
		auto &expr = (*_self_)._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1aa623842:;
		if (it != expr.end()) {
			jule::Ptr<_1a75c928a_ImportInfo> _1aa6238ec_u = *it;
			{
				if ((!(_1aa6238ec_u.get()._field_cpp_linked))) {
					_1d0a46305_trait_decls(&(*_self_), _1aa6238ec_u.get()._field_package);
				}
			}
			_iter_next_1aa623842:;
			++it;
			goto _iter_begin_1aa623842;
		}
		_iter_end_1aa623842:;
	}
	_1d0a46305_trait_decls(&(*_self_), (*_self_)._field_ir.get()._field_main);
}



inline void _1d0a4a590_process_traits(_1d0a43aa5_ObjectCoder* _self_) {
	_1d0a4a3b4_build_trait_map(&(*_self_));
}



inline jule::Str _1d0a4a804_decls(_1d0a43aa5_ObjectCoder* _self_) {
	jule::Str _83717_obj = jule::Str();
	_83717_obj+=(*_self_)._field_trait_declarations;
	_83717_obj+=_1d0a46877_structure_plain_decls(&(*_self_));
	_83717_obj+=_1d0a4966b_structure_decls(&(*_self_));
	{
		auto &expr = (*_self_)._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1aa626922:;
		if (it != expr.end()) {
			jule::Ptr<_1a75c928a_ImportInfo> _1aa626a10_u = *it;
			{
				if ((!(_1aa626a10_u.get()._field_cpp_linked))) {
					_83717_obj+=_1d0a4a1d8_func_decls(&(*_self_), _1aa626a10_u.get()._field_package);
				}
			}
			_iter_next_1aa626922:;
			++it;
			goto _iter_begin_1aa626922;
		}
		_iter_end_1aa626922:;
	}
	_83717_obj+=_1d0a4a1d8_func_decls(&(*_self_), (*_self_)._field_ir.get()._field_main);
	if (((*_self_)._field_trait_map.len() > 0LL)) {
		_83717_obj+=jule::Str("\n\n", 2);
		_83717_obj+=(*_self_)._field_trait_data_t;
		_83717_obj+=jule::Str("\n\n", 2);
		_83717_obj+=(*_self_)._field_trait_wrappers;
		_83717_obj+=jule::Str("\n\n", 2);
		_83717_obj+=(*_self_)._field_trait_data;
	}
	return _83717_obj;
}



inline jule::Str _1d0a4abab_pkg_globals(_1d0a43aa5_ObjectCoder* _self_,jule::Ptr<_1a75cbe4c_Package>& _86335_p,jule::Str& _86353_global_initializers) {
	jule::Str _86417_obj = jule::Str();
	{
		auto &expr = _86335_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1aa629eca:;
		if (it != expr.end()) {
			jule::Ptr<_1a76439db_SymbolTable> _1aa62a12e_f = *it;
			{
				{
					auto &expr = _1aa62a12e_f.get()._field_vars;
					auto it = expr.begin();
					_iter_begin_1aa62a728:;
					if (it != expr.end()) {
						jule::Ptr<_1a75ec478_Var> _1aa62a7e4_v = *it;
						{
							if (((_1aa62a7e4_v.get()._field_token != nullptr) && (!(_1aa62a7e4_v.get()._field_cpp_linked))) && (!(_1aa62a7e4_v.get()._field_constant))) {
								_86417_obj+=static__1d0a54d5d_kind(_1aa62a7e4_v.get()._field_kind.get()._field_kind);
								_86417_obj+=jule::Str(" ", 1);
								if (_1aa62a7e4_v.get()._field_reference) {
									_86417_obj+=jule::Str("&", 1);
								}
								_86417_obj+=static__1a7d807cc_var(_1aa62a7e4_v);
								_86417_obj+=jule::Str(";\n", 2);
								_86353_global_initializers+=_1d0a4429d_indent(&(*_self_));
								_86353_global_initializers+=static__1a7d807cc_var(_1aa62a7e4_v);
								if ((_1aa62a7e4_v.get()._field_value != nullptr) && (_1aa62a7e4_v.get()._field_value.get()._field_expr != nullptr)) {
									if (_1aa62a7e4_v.get()._field_value.get()._field_data.get()._field_model != jule::Any(jule::Any(nullptr))) {
										_86353_global_initializers+=jule::Str(" = ", 3);
										_86353_global_initializers+=_1a7d79353_val((*_self_)._field_ec.ptr(), _1aa62a7e4_v.get()._field_value);
									}
								} else {
									_86353_global_initializers+=jule::Str(" = ", 3);
									_86353_global_initializers+=_1a7d79661_init_expr((*_self_)._field_ec.ptr(), _1aa62a7e4_v.get()._field_kind.get()._field_kind);
								}
								_86353_global_initializers+=jule::Str(";\n", 2);
							}
						}
						_iter_next_1aa62a728:;
						++it;
						goto _iter_begin_1aa62a728;
					}
					_iter_end_1aa62a728:;
				}
			}
			_iter_next_1aa629eca:;
			++it;
			goto _iter_begin_1aa629eca;
		}
		_iter_end_1aa629eca:;
	}
	return _86417_obj;
}



inline jule::Str _1d0a4aeb9_globals(_1d0a43aa5_ObjectCoder* _self_,jule::Str& _89531_global_initializers) {
	jule::Str _89617_obj = jule::Str();
	_1d09aee72_add_indent(&(*_self_));
	{
		auto &expr = (*_self_)._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1aa631355:;
		if (it != expr.end()) {
			jule::Ptr<_1a75c928a_ImportInfo> _1aa631454_u = *it;
			{
				if ((!(_1aa631454_u.get()._field_cpp_linked))) {
					_89617_obj+=_1d0a4abab_pkg_globals(&(*_self_), _1aa631454_u.get()._field_package,_89531_global_initializers);
				}
			}
			_iter_next_1aa631355:;
			++it;
			goto _iter_begin_1aa631355;
		}
		_iter_end_1aa631355:;
	}
	_89617_obj+=_1d0a4abab_pkg_globals(&(*_self_), (*_self_)._field_ir.get()._field_main,_89531_global_initializers);
	_1d0a4416b_done_indent(&(*_self_));
	return _89617_obj;
}



inline jule::Str _1d0a4b2c7_func(_1d0a43aa5_ObjectCoder* _self_,jule::Ptr<_1a6426a45_Fn>& _90928_f) {
	jule::Str _91017_obj = jule::Str();
	{
		auto &expr = _90928_f.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1aa633379:;
		if (it != expr.end()) {
			jule::Ptr<_1a6429be1_FnIns> _1aa63349a_ins = *it;
			{
				_91017_obj+=_1d0a49a23_func_head(&(*_self_), _1aa63349a_ins,false);
				_91017_obj+=_1d0a45326_params_ins(&(*_self_), _1aa63349a_ins.get()._field_params);
				_91017_obj+=jule::Str(" ", 1);
				_91017_obj+=_1a7ce61b0_func_scope((*_self_)._field_sc.ptr(), _1aa63349a_ins);
				if ((_1aa63349a_ins.get()._field_scope != nullptr)) {
					_91017_obj+=jule::Str("\n\n", 2);
				}
			}
			_iter_next_1aa633379:;
			++it;
			goto _iter_begin_1aa633379;
		}
		_iter_end_1aa633379:;
	}
	return _91017_obj;
}



inline jule::Str _1d0a4b5d5_pkg_funcs(_1d0a43aa5_ObjectCoder* _self_,jule::Ptr<_1a75cbe4c_Package>& _92433_p) {
	jule::Str _92517_obj = jule::Str();
	{
		auto &expr = _92433_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1aa635d0a:;
		if (it != expr.end()) {
			jule::Ptr<_1a76439db_SymbolTable> _1aa635e2b_f = *it;
			{
				{
					auto &expr = _1aa635e2b_f.get()._field_funcs;
					auto it = expr.begin();
					_iter_begin_1aa636525:;
					if (it != expr.end()) {
						jule::Ptr<_1a6426a45_Fn> _1aa6365e1_f = *it;
						{
							if ((!(_1e829d3b3_TEST)) && _1d0a4ee02_has_directive(_1aa6365e1_f.get()._field_directives,jule::Str("test", 4))) {
								goto _iter_next_1aa636525;
							}
							if ((!(_1aa6365e1_f.get()._field_cpp_linked)) && (_1aa6365e1_f.get()._field_token != nullptr)) {
								_92517_obj+=_1d0a4b2c7_func(&(*_self_), _1aa6365e1_f);
								_92517_obj+=jule::Str("\n\n", 2);
							}
						}
						_iter_next_1aa636525:;
						++it;
						goto _iter_begin_1aa636525;
					}
					_iter_end_1aa636525:;
				}
			}
			_iter_next_1aa635d0a:;
			++it;
			goto _iter_begin_1aa635d0a;
		}
		_iter_end_1aa635d0a:;
	}
	return _92517_obj;
}



inline jule::Str _1d0a4b8e3_structure_methods(_1d0a43aa5_ObjectCoder* _self_,jule::Ptr<_1a641744d_StructIns>& _94141_s) {
	jule::Str _94217_obj = jule::Str();
	{
		auto &expr = _94141_s.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1aa638a33:;
		if (it != expr.end()) {
			jule::Ptr<_1a6426a45_Fn> _1aa638b54_f = *it;
			{
				_94217_obj+=_1d0a4429d_indent(&(*_self_));
				_94217_obj+=_1d0a4b2c7_func(&(*_self_), _1aa638b54_f);
				_94217_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_1aa638a33:;
			++it;
			goto _iter_begin_1aa638a33;
		}
		_iter_end_1aa638a33:;
	}
	return _94217_obj;
}



inline jule::Str _1d0a4bc01_structure_ostream(_1d0a43aa5_ObjectCoder* _self_,jule::Ptr<_1a641744d_StructIns>& _95241_s) {
	jule::Str _95317_obj = jule::Str();
	_95317_obj+=_1d0a4429d_indent(&(*_self_));
	_95317_obj+=jule::Str("std::ostream &operator<<(std::ostream &_Stream, ", 48);
	_95317_obj+=static__1a7d8028d_structure_ins(_95241_s);
	_95317_obj+=jule::Str(" _Src) {\n", 9);
	_1d09aee72_add_indent(&(*_self_));
	_95317_obj+=_1d0a4429d_indent(&(*_self_));
	jule::Ptr<_1a6426a45_Fn> _96117_fts = _1a64183d8_find_method(_95241_s.ptr(), jule::Str("to_str", 6),false);
	if (static__1a75ed897_to_str(_96117_fts)) {
		_95317_obj+=jule::Str("_Stream << ", 11);
		_95317_obj+=static__1a7d7e468_func(_96117_fts);
		_95317_obj+=jule::Str("(&_Src);\n", 9);
	} else {
		_95317_obj+=jule::Str("_Stream << \"", 12);
		_95317_obj+=_95241_s.get()._field_decl.get()._field_ident;
		_95317_obj+=jule::Str("{\";\n", 4);
		{
			auto &expr = _95241_s.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1aa63d65e:;
			if (it != expr.end()) {
				jule::I64 _1aa63d6a3_i = it - expr.begin();
				jule::Ptr<_1a6416ae0_FieldIns> _1aa63d8b2_f = *it;
				{
					_95317_obj+=_1d0a4429d_indent(&(*_self_));
					_95317_obj+=jule::Str("_Stream << \"", 12);
					_95317_obj+=_1aa63d8b2_f.get()._field_decl.get()._field_ident;
					_95317_obj+=jule::Str(":", 1);
					jule::Ptr<_1a641744d_StructIns> _97821_strct = _1a767614a_strct(_1aa63d8b2_f.get()._field_kind.ptr());
					if (((_97821_strct != nullptr) && (_97821_strct.get()._field_decl != nullptr)) && _97821_strct.get()._field_decl.get()._field_cpp_linked) {
						_95317_obj+=jule::Str(" cpp.", 5);
						_95317_obj+=static__1a7d80535_field(_1aa63d8b2_f.get()._field_decl);
						_95317_obj+=jule::Str("\"", 1);
					} else {
						_95317_obj+=jule::Str("\" << _Src.", 10);
						_95317_obj+=static__1a7d80535_field(_1aa63d8b2_f.get()._field_decl);
					}
					if ((_1aa63d6a3_i + 1LL) < static_cast<jule::I64>(static_cast<jule::I64>(_95241_s.get()._field_fields.len()))) {
						_95317_obj+=jule::Str(" << \", \"", 8);
					}
					_95317_obj+=jule::Str(";\n", 2);
				}
				_iter_next_1aa63d65e:;
				++it;
				_1aa63d6a3_i++;
				goto _iter_begin_1aa63d65e;
			}
			_iter_end_1aa63d65e:;
		}
		_95317_obj+=_1d0a4429d_indent(&(*_self_));
		_95317_obj+=jule::Str("_Stream << \"}\";\n", 16);
	}
	_95317_obj+=_1d0a4429d_indent(&(*_self_));
	_95317_obj+=jule::Str("return _Stream;\n", 16);
	_1d0a4416b_done_indent(&(*_self_));
	_95317_obj+=_1d0a4429d_indent(&(*_self_));
	_95317_obj+=jule::Str("}", 1);
	return _95317_obj;
}



inline jule::Str _1d0a4c00e_structure_derive_defs(_1d0a43aa5_ObjectCoder* _self_,jule::Ptr<_1a641744d_StructIns>& _100645_s) {
	jule::Str _100717_obj = jule::Str();
	if (_1a64160ea_is_derives(_100645_s.get()._field_decl.ptr(), jule::Str("Clone", 5))) {
		_100717_obj+=_1d0a4429d_indent(&(*_self_));
		_100717_obj+=static__1a7d7c279_clone_func_def(_100645_s.get()._field_decl);
		_100717_obj+=jule::Str("{\n", 2);
		_1d09aee72_add_indent(&(*_self_));
		_100717_obj+=_1d0a4429d_indent(&(*_self_));
		_100717_obj+=static__1d0a53752_structure_ins(_100645_s);
		_100717_obj+=jule::Str(" clone;\n", 8);
		{
			auto &expr = _100645_s.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1aa645aea:;
			if (it != expr.end()) {
				jule::Ptr<_1a6416ae0_FieldIns> _1aa645b72_f = *it;
				{
					jule::Str _101721_ident = static__1a7d80535_field(_1aa645b72_f.get()._field_decl);
					_100717_obj+=_1d0a4429d_indent(&(*_self_));
					_100717_obj+=jule::Str("clone.", 6);
					_100717_obj+=_101721_ident;
					_100717_obj+=jule::Str(" = jule::clone(this->", 21);
					_100717_obj+=_101721_ident;
					_100717_obj+=jule::Str(");\n", 3);
				}
				_iter_next_1aa645aea:;
				++it;
				goto _iter_begin_1aa645aea;
			}
			_iter_end_1aa645aea:;
		}
		_100717_obj+=_1d0a4429d_indent(&(*_self_));
		_100717_obj+=jule::Str("return clone;\n", 14);
		_1d0a4416b_done_indent(&(*_self_));
		_100717_obj+=_1d0a4429d_indent(&(*_self_));
		_100717_obj+=jule::Str("}", 1);
	}
	return _100717_obj;
}



inline jule::Str _1d0a4c31c_structure_ins(_1d0a43aa5_ObjectCoder* _self_,jule::Ptr<_1a641744d_StructIns>& _103537_s) {
	jule::Str _103617_obj = _1d0a4b8e3_structure_methods(&(*_self_), _103537_s);
	_103617_obj+=jule::Str("\n\n", 2);
	_103617_obj+=_1d0a4c00e_structure_derive_defs(&(*_self_), _103537_s);
	_103617_obj+=jule::Str("\n\n", 2);
	_103617_obj+=_1d0a4bc01_structure_ostream(&(*_self_), _103537_s);
	return _103617_obj;
}



inline jule::Str _1d0a4c62a_structure(_1d0a43aa5_ObjectCoder* _self_,jule::Ptr<_1a64147be_Struct>& _104533_s) {
	jule::Str _104617_obj = jule::Str();
	{
		auto &expr = _104533_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1aa64aacd:;
		if (it != expr.end()) {
			jule::Ptr<_1a641744d_StructIns> _1aa64abee_ins = *it;
			{
				_104617_obj+=_1d0a4c31c_structure_ins(&(*_self_), _1aa64abee_ins);
				_104617_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_1aa64aacd:;
			++it;
			goto _iter_begin_1aa64aacd;
		}
		_iter_end_1aa64aacd:;
	}
	return _104617_obj;
}



inline jule::Str _1d0a4c88e_structures(_1d0a43aa5_ObjectCoder* _self_) {
	jule::Str _105617_obj = jule::Str();
	{
		auto &expr = (*_self_)._field_ir.get()._field_ordered._field_structs;
		auto it = expr.begin();
		_iter_begin_1aa64c2c7:;
		if (it != expr.end()) {
			jule::Ptr<_1a64147be_Struct> _1aa64c34e_s = *it;
			{
				if ((!(_1aa64c34e_s.get()._field_cpp_linked)) && (_1aa64c34e_s.get()._field_token != nullptr)) {
					_105617_obj+=_1d0a4c62a_structure(&(*_self_), _1aa64c34e_s);
					_105617_obj+=jule::Str("\n\n", 2);
				}
			}
			_iter_next_1aa64c2c7:;
			++it;
			goto _iter_begin_1aa64c2c7;
		}
		_iter_end_1aa64c2c7:;
	}
	return _105617_obj;
}



inline jule::Str _1d0a4cb03_funcs(_1d0a43aa5_ObjectCoder* _self_) {
	jule::Str _106817_obj = jule::Str();
	{
		auto &expr = (*_self_)._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1aa64e142:;
		if (it != expr.end()) {
			jule::Ptr<_1a75c928a_ImportInfo> _1aa64e21e_u = *it;
			{
				if ((!(_1aa64e21e_u.get()._field_cpp_linked))) {
					_106817_obj+=_1d0a4b5d5_pkg_funcs(&(*_self_), _1aa64e21e_u.get()._field_package);
				}
			}
			_iter_next_1aa64e142:;
			++it;
			goto _iter_begin_1aa64e142;
		}
		_iter_end_1aa64e142:;
	}
	_106817_obj+=_1d0a4b5d5_pkg_funcs(&(*_self_), (*_self_)._field_ir.get()._field_main);
	return _106817_obj;
}



inline void _1d0a4ce22_push_init(_1d0a43aa5_ObjectCoder* _self_,jule::Ptr<_1a75cbe4c_Package>& _107829_pkg,jule::Str& _107849_obj) {
	
	{
		auto &expr = _107829_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1aa6514da:;
		if (it != expr.end()) {
			jule::Ptr<_1a76439db_SymbolTable> _1aa65163e_file = *it;
			{
				{
					auto &expr = _1aa65163e_file.get()._field_funcs;
					auto it = expr.begin();
					_iter_begin_1aa651c38:;
					if (it != expr.end()) {
						jule::Ptr<_1a6426a45_Fn> &_1aa651d04_f = *it;
						{
							if ((_1aa651d04_f.get()._field_ident == jule::Str("init", 4))) {
								_107849_obj+=jule::Str("\n\t", 2);
								_107849_obj+=static__1a7d7e468_func(_1aa651d04_f);
								_107849_obj+=jule::Str("();", 3);
							}
						}
						_iter_next_1aa651c38:;
						++it;
						goto _iter_begin_1aa651c38;
					}
					_iter_end_1aa651c38:;
				}
			}
			_iter_next_1aa6514da:;
			++it;
			goto _iter_begin_1aa6514da;
		}
		_iter_end_1aa6514da:;
	}
}



inline jule::Str _1d0a4d230_init_caller(_1d0a43aa5_ObjectCoder* _self_,jule::Str& _109231_global_initializers) {
	jule::Str _109317_obj = jule::Str("void ", 5);
	_109317_obj+=jule::Str("__jule_call_initializers", 24);
	_109317_obj+=jule::Str("(void) {\n", 9);
	_109317_obj+=_109231_global_initializers;
	{
		auto &expr = (*_self_)._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1aa653a4d:;
		if (it != expr.end()) {
			jule::Ptr<_1a75c928a_ImportInfo> _1aa653b2a_u = *it;
			{
				if ((!(_1aa653b2a_u.get()._field_cpp_linked))) {
					_1d0a4ce22_push_init(&(*_self_), _1aa653b2a_u.get()._field_package,_109317_obj);
				}
			}
			_iter_next_1aa653a4d:;
			++it;
			goto _iter_begin_1aa653a4d;
		}
		_iter_end_1aa653a4d:;
	}
	_1d0a4ce22_push_init(&(*_self_), (*_self_)._field_ir.get()._field_main,_109317_obj);
	_109317_obj+=jule::Str("\n}", 2);
	return _109317_obj;
}



inline void _1d0a4d4a5_append_standard(_1d0a43aa5_ObjectCoder* _self_,jule::Str& _111139_obj_code) {
	_1d0a3dd14_Time _111213_time = static__1d0a3e3a8_now();
	_1d0a3d63d_AbsTime _111313_abs = _1d0a409e7_abs(&_111213_time);
	jule::Str _111517_time_str = jule::Str();
	_111517_time_str+=_1a7464279_fmt_uint(_111313_abs._field_day,10LL);
	_111517_time_str+=jule::Str("/", 1);
	_111517_time_str+=_1a7464279_fmt_uint(_111313_abs._field_month,10LL);
	_111517_time_str+=jule::Str("/", 1);
	_111517_time_str+=_1a7464279_fmt_uint(_111313_abs._field_year,10LL);
	_111517_time_str+=jule::Str(" ", 1);
	_111517_time_str+=_1a7464279_fmt_uint(_111313_abs._field_hour,10LL);
	_111517_time_str+=jule::Str(".", 1);
	_111517_time_str+=_1a7464279_fmt_uint(_111313_abs._field_minute,10LL);
	_111517_time_str+=jule::Str(" (DD/MM/YYYY) (HH.MM) UTC", 25);
	jule::Str _112717_s = jule::Str();
	_112717_s+=jule::Str("// Auto generated by JuleC.\n", 28);
	_112717_s+=jule::Str("// JuleC version: ", 18);
	_112717_s+=jule::Str("jule0.0.10", 10);
	_112717_s+=jule::Str("\n", 1);
	_112717_s+=jule::Str("// Date: ", 9);
	_112717_s+=_111517_time_str;
	_112717_s+=jule::Str("\n//\n// Recommended Compile Command;\n// ", 39);
	_112717_s+=(*_self_)._field_info._field_compiler;
	_112717_s+=jule::Str(" ", 1);
	_112717_s+=(*_self_)._field_info._field_compiler_command;
	_112717_s+=jule::Str("\n\n", 2);
	if (_1e829b746_PRODUCTION) {
		_112717_s+=jule::Str("#define __JULE_ENABLE__PRODUCTION\n", 34);
	}
	if ((!(_1e829d539_RC))) {
		_112717_s+=jule::Str("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43);
	}
	if ((!(_1e829d748_SAFETY))) {
		_112717_s+=jule::Str("#define __JULE_DISABLE__SAFETY\n", 31);
	}
	_112717_s+=jule::Str("\n\n#include \"", 12);
	_112717_s+=_1d003abc4_PATH_API;
	_112717_s+=jule::Str("\"\n\n", 3);
	_112717_s+=_111139_obj_code;
	_112717_s+=jule::Str("\nint main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 149);
	if (_1e829d3b3_TEST) {
		_112717_s+=jule::Str("test_point();", 13);
	} else {
		_112717_s+=jule::Str("entry_point();", 14);
	}
	_112717_s+=jule::Str("\n\n    return EXIT_SUCCESS;\n}", 28);
	_111139_obj_code=_112717_s;
}



inline jule::Str _1d0a4d719_serialize(_1d0a43aa5_ObjectCoder* _self_) {
	_1d0a45a85_prepare_structures(&(*_self_));
	_1d0a4a590_process_traits(&(*_self_));
	jule::Str _118217_global_initializers = jule::Str();
	jule::Str _118317_obj = jule::Str();
	_118317_obj+=_1d0a44644_links(&(*_self_));
	_118317_obj+=jule::Str("\n", 1);
	_118317_obj+=_1d0a4a804_decls(&(*_self_));
	_118317_obj+=jule::Str("\n\n", 2);
	_118317_obj+=_1d0a4aeb9_globals(&(*_self_), _118217_global_initializers);
	_118317_obj+=jule::Str("\n", 1);
	_118317_obj+=_1d0a4c88e_structures(&(*_self_));
	_118317_obj+=_1d0a4cb03_funcs(&(*_self_));
	_118317_obj+=jule::Str("\n", 1);
	_118317_obj+=_1d0a4d230_init_caller(&(*_self_), _118217_global_initializers);
	_118317_obj+=jule::Str("\n", 1);
	return _118317_obj;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0a43aa5_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "indent_buffer:" << _Src._field_indent_buffer << ", ";
	_Stream << "trait_declarations:" << _Src._field_trait_declarations << ", ";
	_Stream << "trait_wrappers:" << _Src._field_trait_wrappers << ", ";
	_Stream << "trait_data:" << _Src._field_trait_data << ", ";
	_Stream << "trait_data_t:" << _Src._field_trait_data_t << ", ";
	_Stream << "trait_map:" << _Src._field_trait_map << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::Ptr<_1b737ec89_IR>,jule::Slice<_1d0019224_Log>> static__1b6607056_build(jule::Str _2825_path,jule::I64 _2836_flags) {
	jule::Ptr<_1b65b7544_JuleImporter> _2917_importer = static__1b65b4002_new(_1b66b32dd_build_compile_info());
	jule::Slice<jule::Ptr<_1d06e7b66_Ast>> _3018_files;
	jule::Slice<_1d0019224_Log> _3029_logs;
	std::tie(_3018_files,_3029_logs) = _1b65b7cd6_import_package(_2917_importer.ptr(), _2825_path,true);
	if ((_3029_logs.len() > 0LL)) {
		return std::make_tuple(nullptr,_3029_logs);
	}
	jule::Str _3413_root = _2825_path;
	if ((_3018_files.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	}
	jule::Ptr<_1a75cbe4c_Package> _4018_pkg;
	std::tie(_4018_pkg,_3029_logs) = _1a768c64a_analyze_package(_3018_files,jule::Trait<_1a75c6e25_Importer>(_2917_importer, 0),_2836_flags);
	if ((_3029_logs.len() > 0LL)) {
		return std::make_tuple(nullptr,_3029_logs);
	}
	jule::Ptr<_1b737ec89_IR> _4517_ir = jule::new_ptr<_1b737ec89_IR>(_1b737ec89_IR(_3413_root,jule::Slice<jule::Str>(),_4018_pkg,_1b65b5dc2_all_packages(_2917_importer.ptr()),_1b65924db_OrderedDefines()));
	_4517_ir.get()._field_passes=_1b66b0917_get_all_unique_passes(_4517_ir.get()._field_main,_4517_ir.get()._field_used);
	return std::make_tuple(_4517_ir,nullptr);
}



inline void _1b662b2cd_append_structs(_1b737ec89_IR* _self_,jule::Ptr<_1a75cbe4c_Package>& _5734_p,jule::Slice<jule::Ptr<_1a64147be_Struct>>& _5758_buffer) {
	{
		auto &expr = _5734_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1aa238402:;
		if (it != expr.end()) {
			jule::Ptr<_1a76439db_SymbolTable> _1aa238501_f = *it;
			{
				{
					auto &expr = _1aa238501_f.get()._field_structs;
					auto it = expr.begin();
					_iter_begin_1aa238952:;
					if (it != expr.end()) {
						jule::Ptr<_1a64147be_Struct> _1aa238bc7_s = *it;
						{
							if ((!(_1aa238bc7_s.get()._field_cpp_linked))) {
								_5758_buffer = jule::alloc_for_append(_5758_buffer,1);_5758_buffer.__push(_1aa238bc7_s);
							}
						}
						_iter_next_1aa238952:;
						++it;
						goto _iter_begin_1aa238952;
					}
					_iter_end_1aa238952:;
				}
			}
			_iter_next_1aa238402:;
			++it;
			goto _iter_begin_1aa238402;
		}
		_iter_end_1aa238402:;
	}
}



inline jule::Slice<jule::Ptr<_1a64147be_Struct>> _1b66a8338_get_all_structures(_1b737ec89_IR* _self_) {
	jule::Slice<jule::Ptr<_1a64147be_Struct>> _7017_buffer = nullptr;
	_1b662b2cd_append_structs(&(*_self_), (*_self_)._field_main,_7017_buffer);
	{
		auto &expr = (*_self_)._field_used;
		auto it = expr.begin();
		_iter_begin_1aa23a349:;
		if (it != expr.end()) {
			jule::Ptr<_1a75c928a_ImportInfo> _1aa23a49d_u = *it;
			{
				if ((!(_1aa23a49d_u.get()._field_cpp_linked))) {
					_1b662b2cd_append_structs(&(*_self_), _1aa23a49d_u.get()._field_package,_7017_buffer);
				}
			}
			_iter_next_1aa23a349:;
			++it;
			goto _iter_begin_1aa23a349;
		}
		_iter_end_1aa23a349:;
	}
	return _7017_buffer;
}



inline void _1b66ad3b5_order(_1b737ec89_IR* _self_) {
	(*_self_)._field_ordered._field_structs=_1b66a8338_get_all_structures(&(*_self_));
	static__1b66bdabd_order_structures((*_self_)._field_ordered._field_structs);
}







std::ostream &operator<<(std::ostream &_Stream, _1b737ec89_IR _Src) {
	_Stream << "IR{";
	_Stream << "root:" << _Src._field_root << ", ";
	_Stream << "passes:" << _Src._field_passes << ", ";
	_Stream << "main:" << _Src._field_main << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "ordered:" << _Src._field_ordered;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::I64,jule::Bool> _1a7e93d74_parse_integer_0(_1a7e93824_ArgParser* _self_,jule::Str& _19032_s,jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)> _19040_parser) {
	jule::I64 _19084_x = jule::I64();
	jule::Bool _19090_ok = jule::Bool();
	{
		
		if (_19032_s.empty()) {
			_case_begin_1aa6cd0e4:;
			{
				_19084_x = 0LL;
				_19090_ok = false;
				return std::make_tuple(_19084_x,_19090_ok);
			}
		}
		else if (_1d095aa22_has_prefix(_19032_s,jule::Str("0x", 2))) {
			_case_begin_1aa6cd15a:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),16LL);
			}
		}
		else if (_1d095aa22_has_prefix(_19032_s,jule::Str("0b", 2))) {
			_case_begin_1aa6cc81e:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),2LL);
			}
		}
		else if (_1d095aa22_has_prefix(_19032_s,jule::Str("0o", 2))) {
			_case_begin_1aa6cc885:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),8LL);
			}
		}
		else if (_19032_s[0LL] == '0') {
			_case_begin_1aa6cc8eb:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(1LL),8LL);
			}
		}
		else {
			_case_begin_1aa6cc7a8:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s,10LL);
			}
		}
		_match_end_1aa6cc6dc:;
	}
	return std::make_tuple(_19084_x,_19090_ok);
}

inline std::tuple<jule::U64,jule::Bool> _1a7e93d74_parse_integer_1(_1a7e93824_ArgParser* _self_,jule::Str& _19032_s,jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)> _19040_parser) {
	jule::U64 _19084_x = jule::U64();
	jule::Bool _19090_ok = jule::Bool();
	{
		
		if (_19032_s.empty()) {
			_case_begin_1aa6d6c13:;
			{
				_19084_x = 0LLU;
				_19090_ok = false;
				return std::make_tuple(_19084_x,_19090_ok);
			}
		}
		else if (_1d095aa22_has_prefix(_19032_s,jule::Str("0x", 2))) {
			_case_begin_1aa6d6c79:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),16LL);
			}
		}
		else if (_1d095aa22_has_prefix(_19032_s,jule::Str("0b", 2))) {
			_case_begin_1aa6d643d:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),2LL);
			}
		}
		else if (_1d095aa22_has_prefix(_19032_s,jule::Str("0o", 2))) {
			_case_begin_1aa6d64a4:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),8LL);
			}
		}
		else if (_19032_s[0LL] == '0') {
			_case_begin_1aa6d651a:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(1LL),8LL);
			}
		}
		else {
			_case_begin_1aa6d63c7:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s,10LL);
			}
		}
		_match_end_1aa6d630b:;
	}
	return std::make_tuple(_19084_x,_19090_ok);
}



inline jule::Str _1a7e940d8_get_data(_1a7e93824_ArgParser* _self_) {
	if (((*_self_)._field_i + 1LL) >= static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_args.len()))) {
		return jule::Str();
	}
	((*_self_)._field_i)++;
	return (*_self_)._field_args[(*_self_)._field_i];
}



inline jule::VoidExceptional _1a7e9435d_process_flag(_1a7e93824_ArgParser* _self_,jule::Trait<_1a7e5e14c_CommonFlag>& _21736_flag) {
	{
		auto &_match_expr{ _21736_flag };
		
		if (_match_expr.type_is<jule::Ptr<_1a7e8ebc7_Flag_3>>()) {
			_case_begin_1aa6c576d:;
			{
				jule::Ptr<_1a7e8ebc7_Flag_3> _22021_bf = _21736_flag.operator jule::Ptr<_1a7e8ebc7_Flag_3>();
				(*(_22021_bf.get()._field__data))=(!(_22021_bf.get()._field__default));
				return jule::VoidExceptional();
			}
		}
		_match_end_1aa6c562a:;
	}
	jule::Str _22513_data = _1a7e940d8_get_data(&(*_self_));
	if (_22513_data.empty()) {
		return jule::VoidExceptional(((jule::Str("--", 2) + _1a7e5e14c_CommonFlag_mptr_data[(_21736_flag).type_offset]._1a7e5dc62_name(_21736_flag)) + jule::Str(": expression missing", 20)));
	}
	{
		auto &_match_expr{ _21736_flag };
		
		if (_match_expr.type_is<jule::Ptr<_1a7e8ebc7_Flag_0>>()) {
			_case_begin_1aa6c75d8:;
			{
				jule::Ptr<_1a7e8ebc7_Flag_0> _23221_intf = _21736_flag.operator jule::Ptr<_1a7e8ebc7_Flag_0>();
				jule::Bool _23333_ok;
				std::tie((*(_23221_intf.get()._field__data)),_23333_ok) = _1a7e93d74_parse_integer_0(&(*_self_), _22513_data,jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)>([=](jule::Str _23372_s,jule::I64 _23380_base) mutable -> std::tuple<jule::I64,jule::Bool> {
					return std::make_tuple(static_cast<jule::I64>(({
						auto except = _1a745c690_parse_int(_23372_s,_23380_base,64LL);
						(except.ok()) ? (except.result) : ({{
							return std::make_tuple(0LL,false);
							return std::make_tuple(0LL,false);
						} jule::I64();});
					})),true);
				}));
				if ((!(_23333_ok))) {
					return jule::VoidExceptional(((jule::Str("--", 2) + _1a7e5e14c_CommonFlag_mptr_data[(_21736_flag).type_offset]._1a7e5dc62_name(_21736_flag)) + jule::Str(": expression must be valid signed integer", 41)));
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a7e8ebc7_Flag_1>>()) {
			_case_begin_1aa6c764e:;
			{
				jule::Ptr<_1a7e8ebc7_Flag_1> _24021_uintf = _21736_flag.operator jule::Ptr<_1a7e8ebc7_Flag_1>();
				jule::Bool _24134_ok;
				std::tie((*(_24021_uintf.get()._field__data)),_24134_ok) = _1a7e93d74_parse_integer_1(&(*_self_), _22513_data,jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)>([=](jule::Str _24173_s,jule::I64 _24181_base) mutable -> std::tuple<jule::U64,jule::Bool> {
					return std::make_tuple(static_cast<jule::U64>(({
						auto except = _1a745c55d_parse_uint(_24173_s,_24181_base,64LL);
						(except.ok()) ? (except.result) : ({{
							return std::make_tuple(0LLU,false);
							return std::make_tuple(0LLU,false);
						} jule::U64();});
					})),true);
				}));
				if ((!(_24134_ok))) {
					return jule::VoidExceptional(((jule::Str("--", 2) + _1a7e5e14c_CommonFlag_mptr_data[(_21736_flag).type_offset]._1a7e5dc62_name(_21736_flag)) + jule::Str(": expression must be valid unsigned integer", 43)));
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a7e8ebc7_Flag_2>>()) {
			_case_begin_1aa6c76b5:;
			{
				jule::Ptr<_1a7e8ebc7_Flag_2> _24821_ff = _21736_flag.operator jule::Ptr<_1a7e8ebc7_Flag_2>();
				(*(_24821_ff.get()._field__data))=static_cast<jule::F64>(({
					auto except = _1a745e10e_parse_float(_22513_data,64LL);
					(except.ok()) ? (except.result) : ({{
						return jule::VoidExceptional(((jule::Str("--", 2) + _1a7e5e14c_CommonFlag_mptr_data[(_21736_flag).type_offset]._1a7e5dc62_name(_21736_flag)) + jule::Str(": expression must be valid floating-point", 41)));
						return jule::VoidExceptional(((jule::Str("--", 2) + _1a7e5e14c_CommonFlag_mptr_data[(_21736_flag).type_offset]._1a7e5dc62_name(_21736_flag)) + jule::Str(": expression must be valid floating-point", 41)));
					} jule::F64();});
				}));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a7e8ebc7_Flag_4>>()) {
			_case_begin_1aa6c772b:;
			{
				(*(_21736_flag.operator jule::Ptr<_1a7e8ebc7_Flag_4>().get()._field__data))=_22513_data;
			}
		}
		_match_end_1aa6c6b6a:;
	} return jule::VoidExceptional(); }



inline jule::VoidExceptional _1a7e945d3_single_dash(_1a7e93824_ArgParser* _self_,jule::Str& _25731_arg) {
	jule::Slice<jule::I32> _25813_rarg = static_cast<jule::Slice<jule::I32>>(_25731_arg).slice(1LL);
	{
		auto &expr = _25813_rarg;
		auto it = expr.begin();
		_iter_begin_1aa6dd016:;
		if (it != expr.end()) {
			jule::I32 &_1aa6dd104_r = *it;
			{
				jule::Trait<_1a7e5e14c_CommonFlag> _26021_flag = _1a7e91bc9_find_flag_short(&(*_self_)._field_set, _1aa6dd104_r);
				if ((_26021_flag == nullptr)) {
					return jule::VoidExceptional((_25731_arg + jule::Str(": flag is not exist: ", 21)) + static_cast<jule::Str>(_1aa6dd104_r));
				}
				({
					auto except = _1a7e9435d_process_flag(&(*_self_), _26021_flag);
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
			}
			_iter_next_1aa6dd016:;
			++it;
			goto _iter_begin_1aa6dd016;
		}
		_iter_end_1aa6dd016:;
	} return jule::VoidExceptional(); }



inline jule::VoidExceptional _1a7e94858_double_dash(_1a7e93824_ArgParser* _self_,jule::Str& _26931_arg) {
	jule::Trait<_1a7e5e14c_CommonFlag> _27017_flag = _1a7e918bb_find_flag(&(*_self_)._field_set, _26931_arg.slice(2LL));
	if ((_27017_flag == nullptr)) {
		return jule::VoidExceptional((_26931_arg + jule::Str(": flag is not exist", 19)));
	}
	({
		auto except = _1a7e9435d_process_flag(&(*_self_), _27017_flag);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	}); return jule::VoidExceptional(); }



inline jule::VoidExceptional _1a7e94a34_try_arg(_1a7e93824_ArgParser* _self_) {
	jule::Str _27913_arg = (*_self_)._field_args[(*_self_)._field_i];
	if (((*_self_)._field_args.len() == 0LL)) {
		return jule::VoidExceptional();
	}
	if (_27913_arg[0LL] == '-') {
		if (((*_self_)._field_args.len() > 1LL) && (_27913_arg[1LL] == '-')) {
			({
				auto except = _1a7e94858_double_dash(&(*_self_), _27913_arg);
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
			return jule::VoidExceptional();
		}
		({
			auto except = _1a7e945d3_single_dash(&(*_self_), _27913_arg);
			if (!except.ok()) {
				return jule::VoidExceptional(except.error);
			}
		});
		return jule::VoidExceptional();
	}
	(*_self_)._field_content = jule::alloc_for_append((*_self_)._field_content,1);(*_self_)._field_content.__push(_27913_arg); return jule::VoidExceptional(); }



inline jule::VoidExceptional _1a7e94c10_parse(_1a7e93824_ArgParser* _self_) {
	for (; (*_self_)._field_i < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_args.len())); ((*_self_)._field_i)++) {
		{
			({
				auto except = _1a7e94a34_try_arg(&(*_self_));
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
		}
	_iter_next_1aa6e50ea:;
	}
	_iter_end_1aa6e50ea:; return jule::VoidExceptional(); }







std::ostream &operator<<(std::ostream &_Stream, _1a7e93824_ArgParser _Src) {
	_Stream << "ArgParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _1e829c68c_push_opt_level(jule::I64 _3323_level) {
	_1e829b878_OPT_COPY=_3323_level >= static_cast<jule::I64>(1LL);
	_1e829b9ee_OPT_DEADCODE=_3323_level >= static_cast<jule::I64>(1LL);
	_1e829bbb9_OPT_APPEND=_3323_level >= static_cast<jule::I64>(1LL);
	_1e829bd40_OPT_MATH=_3323_level >= static_cast<jule::I64>(1LL);
	_1e829beb6_OPT_ACCESS=_3323_level >= static_cast<jule::I64>(1LL);
	_1e829c13c_OPT_INLINE=_3323_level >= static_cast<jule::I64>(1LL);
	_1e829c34b_OPT_PTR=_3323_level >= static_cast<jule::I64>(1LL);
	_1e829c4c2_OPT_COND=_3323_level >= static_cast<jule::I64>(1LL);
}



inline jule::I32 _1e84a914b_decode_rune(jule::I32 _6820_r1,jule::I32 _6830_r2) {
	if ((((55296LL <= _6820_r1) && (_6820_r1 < 56320LL)) && (56320LL <= _6830_r2)) && (_6830_r2 < 57344LL)) {
		return static_cast<jule::I32>((static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((_6820_r1 - 55296LL)))) << 10LL))) | static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((_6830_r2 - 56320LL)))))) + 65536LL));
	}
	return 65533LL;
}



inline std::tuple<jule::I32,jule::I32> _1e84a93e3_encode_rune(jule::I32 _7824_r) {
	jule::I32 _7835_r1 = jule::I32();
	jule::I32 _7845_r2 = jule::I32();
	if ((_7824_r < 65536LL) || (_7824_r > 1114111LL)) {
		_7835_r1 = 65533LL;
		_7845_r2 = 65533LL;
		return std::make_tuple(_7835_r1,_7845_r2);
	}
	_7824_r-=65536LL;
	_7835_r1 = static_cast<jule::I32>(55296LL + static_cast<jule::I32>(static_cast<jule::I32>((static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((_7824_r >> 10LL)))) & 1023LL))));
	_7845_r2 = static_cast<jule::I32>(56320LL + static_cast<jule::I32>(static_cast<jule::I32>((_7824_r & 1023LL))));
	return std::make_tuple(_7835_r1,_7845_r2);
}



inline jule::Slice<jule::I32> _1e84a9976_decode(jule::Slice<jule::U16> _11915_s) {
	jule::Slice<jule::I32> _12013_a = jule::Slice<jule::I32>::alloc(static_cast<jule::I64>(_11915_s.len()));
	jule::I64 _12113_n = 0LL;
	jule::I64 _12213_i = 0LL;
	for (; _12213_i < static_cast<jule::I64>(static_cast<jule::I64>(_11915_s.len())); (_12213_i)++) {
		{
			jule::U16 _12413_r = _11915_s[_12213_i];
			{
				
				if ((_12413_r < 55296LLU) || 57344LL <= _12413_r) {
					_case_begin_1a7ea92eb:;
					{
						_12013_a[_12113_n]=static_cast<jule::I32>(static_cast<jule::I32>(_12413_r));
					}
				}
				else if ((((_12413_r < 56320LLU) && ((_12213_i + 1LL) < static_cast<jule::I64>(static_cast<jule::I64>(_11915_s.len())))) && (56320LL <= _11915_s[(_12213_i + 1LL)])) && (_11915_s[(_12213_i + 1LL)] < 57344LLU)) {
					_case_begin_1a7ea8e55:;
					{
						_12013_a[_12113_n]=static_cast<jule::I32>(_1e84a914b_decode_rune(static_cast<jule::I32>(static_cast<jule::I32>(_12413_r)),static_cast<jule::I32>(static_cast<jule::I32>(_11915_s[(_12213_i + 1LL)]))));
						(_12213_i)++;
					}
				}
				else {
					_case_begin_1a7ea8ad1:;
					{
						_12013_a[_12113_n]=65533LL;
					}
				}
				_match_end_1a7ea8a6a:;
			}
			(_12113_n)++;
		}
	_iter_next_1a7ea3cb8:;
	}
	_iter_end_1a7ea3cb8:;
	return _12013_a.slice(0LL,_12113_n);
}



inline jule::Slice<jule::U16> _1e84a9cb7_append_rune(jule::Slice<jule::U16> _14924_a,jule::I32 _14934_r) {
	{
		
		if ((0LL <= _14934_r) && (_14934_r < 55296LL) || (57344LL <= _14934_r) && (_14934_r < 65536LL)) {
			_case_begin_1a7eac6b7:;
			{
				return jule::append(_14924_a,jule::Slice<jule::U16>({static_cast<jule::U16>(static_cast<jule::U16>(_14934_r))}));
			}
		}
		else if ((65536LL <= _14934_r) && (_14934_r <= 1114111LL)) {
			_case_begin_1a7eac72d:;
			{
				jule::I32 _15614_r1;
				jule::I32 _15618_r2;
				std::tie(_15614_r1,_15618_r2) = _1e84a93e3_encode_rune(_14934_r);
				return jule::append(_14924_a,jule::Slice<jule::U16>({static_cast<jule::U16>(static_cast<jule::U16>(_15614_r1)),static_cast<jule::U16>(static_cast<jule::U16>(_15618_r2))}));
			}
		}
		_match_end_1a7ea832d:;
	}
	return jule::append(_14924_a,jule::Slice<jule::U16>({65533LLU}));
}



inline jule::Slice<jule::U16> _1e8493e16_utf16_from_str(jule::Str _1423_s) {
	
	jule::Slice<jule::I32> _209_runes = static_cast<jule::Slice<jule::I32>>(_1423_s);
	jule::Slice<jule::U16> _2113_buff = jule::Slice<jule::U16>::alloc(0LL,static_cast<jule::I64>(_209_runes.len()));
	{
		auto &expr = _209_runes;
		auto it = expr.begin();
		_iter_begin_1a7ebabc0:;
		if (it != expr.end()) {
			jule::I32 &_1a7eba719_r = *it;
			{
				if ((_1a7eba719_r == 0LL)) {
					goto _iter_end_1a7ebabc0;
				}
				_2113_buff=_1e84a9cb7_append_rune(_2113_buff,_1a7eba719_r);
			}
			_iter_next_1a7ebabc0:;
			++it;
			goto _iter_begin_1a7ebabc0;
		}
		_iter_end_1a7ebabc0:;
	}
	return _1e84a9cb7_append_rune(_2113_buff,0LL);
}



inline jule::Str _1e849ed23_utf16_to_str(jule::Slice<jule::U16> _3421_s) {
	if ((_3421_s == nullptr)) {
		return jule::Str();
	}
	jule::Slice<jule::U16> _3813_code_page = _3421_s;
	{
		auto &expr = _3421_s;
		auto it = expr.begin();
		_iter_begin_1a7ebc386:;
		if (it != expr.end()) {
			jule::I64 _1a7ebc496_i = it - expr.begin();
			jule::U16 &_1a7ebc6d8_v = *it;
			{
				if ((_1a7ebc6d8_v == 0LLU)) {
					_3813_code_page=_3813_code_page.slice(0LL,_1a7ebc496_i);
					goto _iter_end_1a7ebc386;
				}
			}
			_iter_next_1a7ebc386:;
			++it;
			_1a7ebc496_i++;
			goto _iter_begin_1a7ebc386;
		}
		_iter_end_1a7ebc386:;
	}
	return static_cast<jule::Str>(_1e84a9976_decode(_3813_code_page));
}



inline jule::Str _1e8498b0d_u16_ptr_to_str(jule::U16* _5030_s) {
	if ((_5030_s == nullptr)) {
		return jule::Str();
	}
	jule::Slice<jule::U16> _5513_code_page = nullptr;
	jule::I64 _5613_i = 0LL;
	for (; ; (_5613_i)++) {
		{
			jule::U16 _5813_r = _5030_s[_5613_i];
			if ((_5813_r == 0LLU)) {
				return static_cast<jule::Str>(_1e84a9976_decode(_5513_code_page));
			}
			_5513_code_page = jule::alloc_for_append(_5513_code_page,1);_5513_code_page.__push(_5813_r);
		}
	_iter_next_1a7ebc96e:;
	}
	_iter_end_1a7ebc96e:;
	return jule::Str();
}



inline jule::I64 _1e844a96c_get_last_errno(void) {
	return errno;
}



inline jule::U64 _1e9d9909a_get_std_handle(jule::U64 _5423_stdh) {
	return static_cast<jule::U64>(((jule::U64)(GetStdHandle(_5423_stdh))));
}



inline jule::I64 _1e9d99683_wstat(jule::U16* _5821_path,struct stat* _5837_stat) {
	return static_cast<jule::I64>(wstat(((wchar_t*)(_5821_path)),_5837_stat));
}



inline jule::I64 _1e9d99a6d__wopen(jule::U16* _6322_path,jule::I64 _6334_flag,jule::I64 _6345_mode) {
	return static_cast<jule::I64>(_wopen(((wchar_t*)((&(_6322_path[0LL])))),_6334_flag,_6345_mode));
}



inline jule::U32 _1e9d99c6b_get_last_error(void) {
	return static_cast<jule::U32>(GetLastError());
}



inline jule::U32 _1e9d9a0ac_get_current_directory(jule::U32 _7237_bufflen,jule::U16* _7255_buff) {
	return static_cast<jule::U32>(GetCurrentDirectoryW(_7237_bufflen,((wchar_t*)(_7255_buff))));
}



inline jule::Bool _1e9d9a5eb_delete_file(jule::U16* _8327_path) {
	return DeleteFileW(((wchar_t*)(_8327_path)));
}



inline jule::Bool _1e9d9a893_create_directory(jule::U16* _8832_path) {
	return CreateDirectoryW(((wchar_t*)(_8832_path)),nullptr);
}



inline jule::Bool _1e9d9ab3a_remove_directory(jule::U16* _9332_path) {
	return RemoveDirectoryW(((wchar_t*)(_9332_path)));
}



inline _WDIR* _1e9d9add2__wopendir(jule::U16* _9825_path) {
	return _wopendir(((wchar_t*)(_9825_path)));
}



inline struct _wdirent* _1e9d9b179__wreaddir(_WDIR* _10129_dir) {
	return _wreaddir(_10129_dir);
}



inline jule::I64 _1e9d9b421__wclosedir(_WDIR* _10430_dir) {
	return static_cast<jule::I64>(_wclosedir(_10430_dir));
}



inline jule::U32 _1e9d9bae7_get_full_path_name(jule::U16* _10734_path,jule::U32 _10746_bufflen,jule::U16* _1085_buff,jule::U16** _10817_fname) {
	return static_cast<jule::U32>(GetFullPathNameW(((wchar_t*)(_10734_path)),_10746_bufflen,((wchar_t*)(_1085_buff)),((wchar_t**)(_10817_fname))));
}



inline jule::Bool _1e9d9be38_get_console_mode(jule::U64 _11325_handle,jule::I64& _11346_mode) {
	return GetConsoleMode(((HANDLE)(_11325_handle)),((DWORD*)((&(_11346_mode)))));
}



inline jule::Bool _1e9d9c279_set_console_mode(jule::U64 _11825_handle,jule::I64 _11841_mode) {
	return SetConsoleMode(((HANDLE)(_11825_handle)),static_cast<DWORD>(_11841_mode));
}



inline jule::Bool _1e9d9c7a7_write_console(jule::U64 _12329_handle,jule::U16* _12345_buffer,jule::I64 _12359_to_write,jule::I64& _12410_written,void* _12424_reserved) {
	return WriteConsoleW(((HANDLE)(_12329_handle)),((void*)(_12345_buffer)),static_cast<DWORD>(_12359_to_write),((DWORD*)(_12410_written)),_12424_reserved);
}



inline jule::Bool _1e9d9ccd5_read_console(jule::U64 _13028_handle,jule::U16* _13048_buffer,jule::I64 _13062_to_read,jule::I64& _13110_readed,void* _13123_input_control) {
	return ReadConsoleW(((HANDLE)(_13028_handle)),((void*)(_13048_buffer)),static_cast<DWORD>(_13062_to_read),((DWORD*)((&(_13110_readed)))),_13123_input_control);
}



inline jule::I64 _1e9da028d_seek(jule::I64 _2613_handle,jule::I64 _2626_offset,jule::I64 _2639_origin) {
	return static_cast<jule::I64>(lseek(_2613_handle,_2626_offset,_2639_origin));
}



inline jule::I64 _1e9da0678_read(jule::I64 _3120_handle,void* _3137_buff,jule::U64 _3152_n) {
	return static_cast<jule::I64>(read(_3120_handle,_3137_buff,_3152_n));
}



inline jule::I64 _1e9da09a8_close(jule::I64 _3614_handle) {
	return static_cast<jule::I64>(close(_3614_handle));
}



inline jule::I64 _1e9da0d93_write(jule::I64 _3921_handle,void* _3934_buff,jule::U64 _3949_n) {
	return static_cast<jule::I64>(write(_3921_handle,_3934_buff,_3949_n));
}



inline void _1e9da10a2_exit(jule::I64 _4413_code) {
	exit(_4413_code);
}



inline std::tuple<jule::I32,jule::I64> _1e9e904b0_decode_rune(jule::Slice<jule::U8> _18220_p) {
	jule::I32 _18233_r = jule::I32();
	jule::I64 _18242_size = jule::I64();
	if ((_18220_p.len() < 1LL)) {
		_18233_r = 65533LL;
		_18242_size = 0LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _1869_p0 = _18220_p[0LL];
	jule::U8 _1879_x = _1e9e8e3d2_FIRST[static_cast<jule::I64>(_1869_p0)];
	if ((_1879_x >= 240LLU)) {
		jule::I32 _19213_mask = static_cast<jule::U8>((static_cast<jule::U8>(static_cast<jule::U8>((_1879_x << 31LLU))) >> 31LLU));
		_18233_r = static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(_18220_p[0LL]))) & static_cast<jule::I32>(static_cast<jule::I32>((~(_19213_mask)))))) | static_cast<jule::I32>(static_cast<jule::I32>(65533LL & _19213_mask)));
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::I64 _1959_sz = static_cast<jule::I64>((_1879_x & 7LLU));
	_1e9e8e954_accept_range _1969_accept = _1e9e8ebc9_ACCEPT_RANGES[static_cast<jule::I64>((_1879_x >> 4LLU))];
	if (_18220_p.len() < _1959_sz) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _2009_b1 = _18220_p[1LL];
	if ((_2009_b1 < _1969_accept._field_lo) || (_1969_accept._field_hi < _2009_b1)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	if ((_1959_sz <= 2LL)) {
		_18233_r = static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((_1869_p0 & 31LLU)))) << 6LL))) | static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((_2009_b1 & 63LLU)))));
		_18242_size = 2LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _2079_b2 = _18220_p[2LL];
	if ((_2079_b2 < 128LLU) || (191LL < _2079_b2)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	if ((_1959_sz <= 3LL)) {
		_18233_r = static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((_1869_p0 & 15LLU)))) << 12LL))) | static_cast<jule::I32>(static_cast<jule::I32>((static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((_2009_b1 & 63LLU)))) << 6LL))))) | static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((_2079_b2 & 63LLU)))));
		_18242_size = 3LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _2149_b3 = _18220_p[3LL];
	if ((_2149_b3 < 128LLU) || (191LL < _2149_b3)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	_18233_r = static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((_1869_p0 & 7LLU)))) << 18LL))) | static_cast<jule::I32>(static_cast<jule::I32>((static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((_2009_b1 & 63LLU)))) << 12LL))))) | static_cast<jule::I32>(static_cast<jule::I32>((static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((_2079_b2 & 63LLU)))) << 6LL))))) | static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((_2149_b3 & 63LLU)))));
	_18242_size = 4LL;
	return std::make_tuple(_18233_r,_18242_size);
}



inline std::tuple<jule::I32,jule::I64> _1e9e90a43_decode_last_rune(jule::Slice<jule::U8> _27625_p) {
	jule::I32 _27638_r = jule::I32();
	jule::I64 _27647_size = jule::I64();
	if ((_27625_p.len() == 0LL)) {
		_27638_r = 65533LL;
		_27647_size = 0LL;
		return std::make_tuple(_27638_r,_27647_size);
	}
	jule::I64 _2809_end = _27625_p.len();
	jule::I64 _28113_start = (_2809_end - 1LL);
	_27638_r=static_cast<jule::I32>(static_cast<jule::I32>(_27625_p[_28113_start]));
	if ((_27638_r < 128LL)) {
		_27647_size = 1LL;
		return std::make_tuple(_27638_r,_27647_size);
	}
	jule::I64 _28913_lim = (_2809_end - 4LL);
	if ((_28913_lim < 0LL)) {
		_28913_lim=0LL;
	}
	(_28113_start)--;
	for (; _28113_start >= _28913_lim; (_28113_start)--) {
		{
			if (_1e9e923c4_rune_start(_27625_p[_28113_start])) {
				goto _iter_end_1a8044331;
			}
		}
	_iter_next_1a8044331:;
	}
	_iter_end_1a8044331:;
	if ((_28113_start < 0LL)) {
		_28113_start=0LL;
	}
	std::tie(_27638_r,_27647_size) = _1e9e904b0_decode_rune(_27625_p.slice(_28113_start,_2809_end));
	if ((_28113_start + _27647_size) != _2809_end) {
		_27638_r = 65533LL;
		_27647_size = 1LL;
		return std::make_tuple(_27638_r,_27647_size);
	}
	return std::make_tuple(_27638_r,_27647_size);
}



inline jule::I64 _1e9e91082_rune_len(jule::I32 _35217_r) {
	{
		
		if ((_35217_r < 0LL)) {
			_case_begin_1a804b4d1:;
			{
				return -1LL;
			}
		}
		else if ((_35217_r <= 127LL)) {
			_case_begin_1a804b129:;
			{
				return 1LL;
			}
		}
		else if ((_35217_r <= 2047LL)) {
			_case_begin_1a804b1a1:;
			{
				return 2LL;
			}
		}
		else if ((55296LL <= _35217_r) && (_35217_r <= 57343LL)) {
			_case_begin_1a804b28e:;
			{
				return -1LL;
			}
		}
		else if ((_35217_r <= 65535LL)) {
			_case_begin_1a804b305:;
			{
				return 3LL;
			}
		}
		else if ((_35217_r <= 1114111LL)) {
			_case_begin_1a804b36b:;
			{
				return 4LL;
			}
		}
		else {
			_case_begin_1a804abb7:;
			{
				return -1LL;
			}
		}
		_match_end_1a804ab1d:;
	}
}



inline jule::I64 _1e9e9145b_encode_rune(jule::Slice<jule::U8> _37424_p,jule::I32 _37439_r) {
	jule::U32 _3769_i = static_cast<jule::U32>(_37439_r);
	{
		
		if ((_3769_i <= 127LLU)) {
			_case_begin_1a804e094:;
			{
				_37424_p[0LL]=static_cast<jule::U8>(static_cast<jule::U8>(_37439_r));
				return 1LL;
			}
		}
		else if ((_3769_i <= 2047LLU)) {
			_case_begin_1a8051c56:;
			{
				_37424_p[0LL]=static_cast<jule::U8>(192LLU | static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_37439_r >> 6LL)))));
				_37424_p[1LL]=static_cast<jule::U8>(128LLU | static_cast<jule::U8>(static_cast<jule::U8>((static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_37439_r))) & 63LLU))));
				return 2LL;
			}
		}
		else if ((_3769_i > 1114111LLU) || (55296LL <= _3769_i) && (_3769_i <= 57343LLU)) {
			_case_begin_1a8051cbc:;
			{
				_37439_r=65533LL;
				goto _case_begin_1a804dcb9;
			}
		}
		else if ((_3769_i <= 65535LLU)) {
			_case_begin_1a804dcb9:;
			{
				_37424_p[0LL]=static_cast<jule::U8>(224LLU | static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_37439_r >> 12LL)))));
				_37424_p[1LL]=static_cast<jule::U8>(128LLU | static_cast<jule::U8>(static_cast<jule::U8>((static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_37439_r >> 6LL)))) & 63LLU))));
				_37424_p[2LL]=static_cast<jule::U8>(128LLU | static_cast<jule::U8>(static_cast<jule::U8>((static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_37439_r))) & 63LLU))));
				return 3LL;
			}
		}
		else {
			_case_begin_1a804dc53:;
			{
				_37424_p[0LL]=static_cast<jule::U8>(240LLU | static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_37439_r >> 18LL)))));
				_37424_p[1LL]=static_cast<jule::U8>(128LLU | static_cast<jule::U8>(static_cast<jule::U8>((static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_37439_r >> 12LL)))) & 63LLU))));
				_37424_p[2LL]=static_cast<jule::U8>(128LLU | static_cast<jule::U8>(static_cast<jule::U8>((static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_37439_r >> 6LL)))) & 63LLU))));
				_37424_p[3LL]=static_cast<jule::U8>(128LLU | static_cast<jule::U8>(static_cast<jule::U8>((static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_37439_r))) & 63LLU))));
				return 4LL;
			}
		}
		_match_end_1a804db76:;
	}
}



inline jule::Slice<jule::U8> _1e9e9179c_append_rune(jule::Slice<jule::U8> _40524_p,jule::I32 _40535_r) {
	if ((_40535_r <= 127LL)) {
		return jule::append(_40524_p,jule::Slice<jule::U8>({static_cast<jule::U8>(static_cast<jule::U8>(_40535_r))}));
	}
	return _1e9e91add_append_rune_non_ascii(_40524_p,_40535_r);
}



inline jule::Slice<jule::U8> _1e9e91add_append_rune_non_ascii(jule::Slice<jule::U8> _41230_p,jule::I32 _41245_r) {
	jule::U32 _4149_i = static_cast<jule::U32>(_41245_r);
	{
		
		if ((_4149_i <= 2047LLU)) {
			_case_begin_1a805a8a8:;
			{
				return jule::append(_41230_p,jule::Slice<jule::U8>({static_cast<jule::U8>(192LLU | static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_41245_r >> 6LL))))),static_cast<jule::U8>(128LLU | static_cast<jule::U8>(static_cast<jule::U8>((static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_41245_r))) & 63LLU))))}));
			}
		}
		else if ((_4149_i > 1114111LLU) || (55296LL <= _4149_i) && (_4149_i <= 57343LLU)) {
			_case_begin_1a805809d:;
			{
				_41245_r=65533LL;
				goto _case_begin_1a8058114;
			}
		}
		else if ((_4149_i <= 65535LLU)) {
			_case_begin_1a8058114:;
			{
				return jule::append(_41230_p,jule::Slice<jule::U8>({static_cast<jule::U8>(224LLU | static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_41245_r >> 12LL))))),static_cast<jule::U8>(128LLU | static_cast<jule::U8>(static_cast<jule::U8>((static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_41245_r >> 6LL)))) & 63LLU)))),static_cast<jule::U8>(128LLU | static_cast<jule::U8>(static_cast<jule::U8>((static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_41245_r))) & 63LLU))))}));
			}
		}
		else {
			_case_begin_1a8058037:;
			{
				return jule::append(_41230_p,jule::Slice<jule::U8>({static_cast<jule::U8>(240LLU | static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_41245_r >> 18LL))))),static_cast<jule::U8>(128LLU | static_cast<jule::U8>(static_cast<jule::U8>((static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_41245_r >> 12LL)))) & 63LLU)))),static_cast<jule::U8>(128LLU | static_cast<jule::U8>(static_cast<jule::U8>((static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_41245_r >> 6LL)))) & 63LLU)))),static_cast<jule::U8>(128LLU | static_cast<jule::U8>(static_cast<jule::U8>((static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_41245_r))) & 63LLU))))}));
			}
		}
		_match_end_1a8057e7c:;
	}
}



inline jule::I64 _1e9e9212c_rune_count_str(jule::Str _47323_s) {
	jule::I64 _47333_n = jule::I64();
	jule::I64 _47413_i = 0LL;
	for (; _47413_i < static_cast<jule::I64>(static_cast<jule::I64>(_47323_s.len())); (_47333_n)++) {
		{
			jule::U8 _47617_c = _47323_s[_47413_i];
			if ((_47617_c < 128LLU)) {
				(_47413_i)++;
				goto _iter_next_1a8065033;
			}
			jule::U8 _48213_x = _1e9e8e3d2_FIRST[static_cast<jule::I64>(_47617_c)];
			if ((_48213_x == 241LLU)) {
				(_47413_i)++;
				goto _iter_next_1a8065033;
			}
			jule::I64 _48717_size = static_cast<jule::I64>((_48213_x & 7LLU));
			if ((_47413_i + _48717_size) > static_cast<jule::I64>(static_cast<jule::I64>(_47323_s.len()))) {
				(_47413_i)++;
				goto _iter_next_1a8065033;
			}
			_1e9e8e954_accept_range _49213_accept = _1e9e8ebc9_ACCEPT_RANGES[static_cast<jule::I64>((_48213_x >> 4LLU))];
			_47617_c=_47323_s[(_47413_i + 1LL)];
			if ((_47617_c < _49213_accept._field_lo) || (_49213_accept._field_hi < _47617_c)) {
				_48717_size=1LL;
			} else if ((_48717_size == 2LL)) {
			} else {
				_47617_c=_47323_s[(_47413_i + 2LL)];
				if ((_47617_c < 128LLU) || (191LL < _47617_c)) {
					_48717_size=1LL;
				} else if ((_48717_size == 3LL)) {
				} else {
					_47617_c=_47323_s[(_47413_i + 3LL)];
					if ((_47617_c < 128LLU) || (191LL < _47617_c)) {
						_48717_size=1LL;
					}
				}
			}
			_47413_i+=_48717_size;
		}
	_iter_next_1a8065033:;
	}
	_iter_end_1a8065033:;
	return _47333_n;
}



inline jule::Bool _1e9e923c4_rune_start(jule::U8 _51719_b) {
	return ((_51719_b & 192LLU) != 128LLU);
}



inline jule::I64 _1ce928d87_get_last_os_error_windows(void) {
	jule::U32 _169_err = _1e9d99c6b_get_last_error();
	{
		auto &_match_expr{ _169_err };
		
		if (_match_expr == 5LL) {
			_case_begin_1a808a4cb:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1a808a542:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1a8089ee2:;
			{
				return static_cast<jule::I64>(7LL);
			}
		}
		else if (_match_expr == 123LL) {
			_case_begin_1a808a058:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else {
			_case_begin_1a8087b9e:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		_match_end_1a8086e01:;
	}
}



inline jule::Slice<jule::Str> _1ce92cad3_args(void) {
	return jule::args();
}



inline jule::Exceptional<jule::Str> _1ce92d023_working_dir(void) {
	return jule::Exceptional<jule::Str>(jule::Any(),({
		auto except = _1ce92dce3___getwd();
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Str>(except.error);
			return jule::Exceptional<jule::Str>(except.error);
		} jule::Str();});
	}));
}



inline jule::Exceptional<jule::Str> _1ce92dce3___getwd(void) {
	jule::Array<jule::U16,261> _1513_buff = jule::Array<jule::U16,261>();
	jule::U32 _169_n = _1e9d9a0ac_get_current_directory(261LLU,(&(_1513_buff[0LL])));
	if ((_169_n == 0LLU)) {
		return jule::Exceptional<jule::Str>(_1ce928d87_get_last_os_error_windows());
	}
	return jule::Exceptional<jule::Str>(jule::Any(),_1e8498b0d_u16_ptr_to_str((&(_1513_buff[0LL]))));
}



inline jule::Slice<jule::U8> _1ce9b099b_stobs(jule::Str& _915_s) {
	{
		jule::Slice<jule::U8> slice;;
		slice.data.alloc = _915_s.begin();;
		slice.data.ref = nullptr;;
		slice._slice = slice.data.alloc;;
		slice._len = slice._cap = _915_s.len();;
		return slice;
	}
}



inline jule::Bool _1d0966e29_is_letter(jule::I32 _7618_r) {
	if ((static_cast<jule::U32>(_7618_r) <= 255LLU)) {
		return ((_1d099ae3b__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_7618_r))] & 96LLU) != 0LLU);
	}
	return _1d09a222d_is_excluding_latin(_1d096c528_LETTER,_7618_r);
}



inline jule::Bool _1d09a16c2_is16(jule::Slice<_1d099ea88_Range16> _1919_ranges,jule::U16 _19128_r) {
	if ((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU)) {
		{
			auto &expr = _1919_ranges;
			auto it = expr.begin();
			_iter_begin_1a85dd435:;
			if (it != expr.end()) {
				jule::I64 _1a85dd655_i = it - expr.begin();
				{
					_1d099ea88_Range16* _19417_range = (&(_1919_ranges[_1a85dd655_i]));
					{
						if (_19128_r < _19417_range->_field_lo) {
							return false;
						}
						if (_19128_r <= _19417_range->_field_hi) {
							return (_19417_range->_field_stride == 1LLU) || (jule::mod(_19128_r - _19417_range->_field_lo,_19417_range->_field_stride) == 0LLU);
						}
					}
				}
				_iter_next_1a85dd435:;
				++it;
				_1a85dd655_i++;
				goto _iter_begin_1a85dd435;
			}
			_iter_end_1a85dd435:;
		}
		return false;
	}
	jule::I64 _20813_lo = 0LL;
	jule::I64 _20913_hi = _1919_ranges.len();
	while (_20813_lo < _20913_hi) {
		{
			jule::I64 _21113_m = _20813_lo + static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_20913_hi - _20813_lo))) >> 1LLU));
			_1d099ea88_Range16* _21213_range = (&(_1919_ranges[_21113_m]));
			{
				if ((_21213_range->_field_lo <= _19128_r) && (_19128_r <= _21213_range->_field_hi)) {
					return (_21213_range->_field_stride == 1LLU) || (jule::mod(_19128_r - _21213_range->_field_lo,_21213_range->_field_stride) == 0LLU);
				}
				if (_19128_r < _21213_range->_field_lo) {
					_20913_hi=_21113_m;
				} else {
					_20813_lo=static_cast<jule::I64>((_21113_m + 1LL));
				}
			}
		}
	_iter_next_1a85dba4e:;
	}
	_iter_end_1a85dba4e:;
	return false;
}



inline jule::Bool _1d09a1a13_is32(jule::Slice<_1d09a0050_Range32> _2289_ranges,jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto &expr = _2289_ranges;
			auto it = expr.begin();
			_iter_begin_1a85e464a:;
			if (it != expr.end()) {
				jule::I64 _1a85e476b_i = it - expr.begin();
				{
					_1d09a0050_Range32* _23117_range = (&(_2289_ranges[_1a85e476b_i]));
					{
						if (_22828_r < _23117_range->_field_lo) {
							return false;
						}
						if (_22828_r <= _23117_range->_field_hi) {
							return (_23117_range->_field_stride == 1LLU) || (jule::mod(_22828_r - _23117_range->_field_lo,_23117_range->_field_stride) == 0LLU);
						}
					}
				}
				_iter_next_1a85e464a:;
				++it;
				_1a85e476b_i++;
				goto _iter_begin_1a85e464a;
			}
			_iter_end_1a85e464a:;
		}
		return false;
	}
	jule::I64 _24513_lo = 0LL;
	jule::I64 _24613_hi = _2289_ranges.len();
	while (_24513_lo < _24613_hi) {
		{
			jule::I64 _24813_m = _24513_lo + static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_24613_hi - _24513_lo))) >> 1LLU));
			_1d09a0050_Range32* _24913_range = (&(_2289_ranges[_24813_m]));
			{
				if ((_24913_range->_field_lo <= _22828_r) && (_22828_r <= _24913_range->_field_hi)) {
					return (_24913_range->_field_stride == 1LLU) || (jule::mod(_22828_r - _24913_range->_field_lo,_24913_range->_field_stride) == 0LLU);
				}
				if (_22828_r < _24913_range->_field_lo) {
					_24613_hi=_24813_m;
				} else {
					_24513_lo=static_cast<jule::I64>((_24813_m + 1LL));
				}
			}
		}
	_iter_next_1a85e23a1:;
	}
	_iter_end_1a85e23a1:;
	return false;
}



inline jule::Bool _1d09a222d_is_excluding_latin(jule::Ptr<_1d09a04c3_RangeTable> _27823_range_tab,jule::I32 _27847_r) {
	{
		jule::Slice<_1d099ea88_Range16> &_28014_r16 = _27823_range_tab.get()._field_r16;
		jule::I64 _28213_off = _27823_range_tab.get()._field_latin_offset;
		if ((_28014_r16.len() > _28213_off) && (static_cast<jule::U32>(_27847_r) <= static_cast<jule::U32>(static_cast<jule::U32>(static_cast<jule::U32>(_28014_r16[(_28014_r16.len() - 1LL)]._field_hi))))) {
			return _1d09a16c2_is16(_28014_r16.slice(_28213_off),static_cast<jule::U16>(static_cast<jule::U16>(_27847_r)));
		}
	}
	jule::Slice<_1d09a0050_Range32> &_28710_r32 = _27823_range_tab.get()._field_r32;
	if ((_28710_r32.len() > 0LL) && (_27847_r >= static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(_28710_r32[0LL]._field_lo))))) {
		return _1d09a1a13_is32(_28710_r32,static_cast<jule::U32>(static_cast<jule::U32>(_27847_r)));
	}
	return false;
}



inline jule::Str _1d0940e58_repeat(jule::Str _1415_s,jule::I64 _1427_n) {
	if ((_1427_n <= 0LL)) {
		return jule::Str();
	}
	jule::Str _1913_ss = _1415_s;
	for (; (_1427_n > 1LL); (_1427_n)--) {
		{
			_1913_ss+=_1415_s;
		}
	_iter_next_1a8619560:;
	}
	_iter_end_1a8619560:;
	return _1913_ss;
}



inline jule::Bool _1d095e32d__has_prefix(jule::Str& _2617_s,jule::Str& _2626_sub,jule::I64 _2640_start) {
	if ((_2626_sub.len() == 0LL) || ((_2617_s.len() - _2640_start) < static_cast<jule::I64>(static_cast<jule::I64>(_2626_sub.len())))) {
		return false;
	}
	jule::I64 _3113_i = 0LL;
	for (; _3113_i < static_cast<jule::I64>(static_cast<jule::I64>(_2626_sub.len())); std::tie(_3113_i,_2640_start) = std::make_tuple(static_cast<jule::I64>((_3113_i + 1LL)),static_cast<jule::I64>((_2640_start + 1LL)))) {
		{
			if (_2617_s[_2640_start] != _2626_sub[_3113_i]) {
				return false;
			}
		}
	_iter_next_1a861ba5c:;
	}
	_iter_end_1a861ba5c:;
	return true;
}



inline jule::Bool _1d095aa22_has_prefix(jule::Str _4119_s,jule::Str _4127_sub) {
	return _1d095e32d__has_prefix(_4119_s,_4127_sub,0LL);
}



inline jule::Bool _1d09414ca__has_suffix(jule::Str& _4517_s,jule::Str& _4526_sub,jule::I64 _4540_start) {
	if ((_4526_sub.len() == 0LL) || ((_4517_s.len() - _4540_start) < static_cast<jule::I64>(static_cast<jule::I64>(_4526_sub.len())))) {
		return false;
	}
	_4540_start=static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_4517_s.len())) - _4540_start);
	jule::I64 _5113_i = 0LL;
	for (; _5113_i < static_cast<jule::I64>(static_cast<jule::I64>(_4526_sub.len())); (_5113_i)++) {
		{
			if (_4517_s[((_4540_start - _5113_i) - 1LL)] != _4526_sub[((_4526_sub.len() - _5113_i) - 1LL)]) {
				return false;
			}
		}
	_iter_next_1a861d7ea:;
	}
	_iter_end_1a861d7ea:;
	return true;
}



inline jule::Bool _1d0941a08_has_suffix(jule::Str _6119_s,jule::Str _6127_sub) {
	return _1d09414ca__has_suffix(_6119_s,_6127_sub,0LL);
}



inline jule::I64 _1d0942883_find_at(jule::Str _6916_s,jule::Str _6924_sub,jule::I64 _6938_i) {
	if (((_6938_i < 0LL) || (_6916_s.len() < static_cast<jule::I64>(static_cast<jule::I64>(_6924_sub.len())))) || (_6924_sub.len() == 0LL)) {
		return -1LL;
	}
	for (; _6938_i < static_cast<jule::I64>(static_cast<jule::I64>(_6916_s.len())); (_6938_i)++) {
		{
			if (_1d095e32d__has_prefix(_6916_s,_6924_sub,_6938_i)) {
				return _6938_i;
			}
		}
	_iter_next_1a862328e:;
	}
	_iter_end_1a862328e:;
	return -1LL;
}



inline jule::I64 _1d0942168_find_last_at(jule::Str _9221_s,jule::Str _9229_sub,jule::I64 _9239_i) {
	jule::I64 _9313_j = ((_9239_i - static_cast<jule::I64>(static_cast<jule::I64>(_9229_sub.len()))) + 1LL);
	if ((((_9229_sub.len() == 0LL) || (_9239_i < 0LL)) || (_9239_i >= static_cast<jule::I64>(static_cast<jule::I64>(_9221_s.len())))) || (_9313_j < 0LL)) {
		return -1LL;
	}
	_julec_label_loop:;
	for (; (_9313_j >= 0LL); (_9313_j)--) {
		{
			jule::I64 _9917_k = _9313_j;
			jule::I64 _10017_z = 0LL;
			for (; _10017_z < static_cast<jule::I64>(static_cast<jule::I64>(_9229_sub.len())); std::tie(_9917_k,_10017_z) = std::make_tuple(static_cast<jule::I64>((_9917_k + 1LL)),static_cast<jule::I64>((_10017_z + 1LL)))) {
				{
					if (_9221_s[_9917_k] != _9229_sub[_10017_z]) {
						goto _iter_next_1a862537e;
					}
				}
			_iter_next_1a862734d:;
			}
			_iter_end_1a862734d:;
			return _9313_j;
		}
	_iter_next_1a862537e:;
	}
	_iter_end_1a862537e:;
	return -1LL;
}



inline jule::I64 _1d094229a_find_last(jule::Str _11418_s,jule::Str _11426_sub) {
	return static_cast<jule::I64>(_1d0942168_find_last_at(_11418_s,_11426_sub,static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(_11418_s.len())) - 1LL))));
}



inline jule::I64 _1d09a2c45__find_rune(jule::Slice<jule::U8>& _17016_s,jule::I32 _17027_r) {
	jule::I64 _17113_i = 0LL;
	while (_17113_i < static_cast<jule::I64>(static_cast<jule::I64>(_17016_s.len()))) {
		{
			jule::I32 _17314_br;
			jule::I64 _17318_n;
			std::tie(_17314_br,_17318_n) = _1e9e904b0_decode_rune(_17016_s.slice(_17113_i));
			if (_17027_r == _17314_br) {
				return _17113_i;
			}
			_17113_i+=_17318_n;
		}
	_iter_next_1a8635b0e:;
	}
	_iter_end_1a8635b0e:;
	return -1LL;
}



inline jule::I64 _1d09a31da_find_last_byte(jule::Str _19723_s,jule::U8 _19731_b) {
	jule::I64 _19813_i = (_19723_s.len() - 1LL);
	for (; (_19813_i >= 0LL); (_19813_i)--) {
		{
			if (_19723_s[_19813_i] == _19731_b) {
				return _19813_i;
			}
		}
	_iter_next_1a8637814:;
	}
	_iter_end_1a8637814:;
	return -1LL;
}



inline jule::I64 _1d09a36b3_find_any(jule::Str _23817_s,jule::Str _23825_runes) {
	jule::Slice<jule::U8> _2399_sb = _1ce9b099b_stobs(_23817_s);
	jule::Slice<jule::U8> _24013_rb = _1ce9b099b_stobs(_23825_runes);
	jule::I64 _24113_i = 0LL;
	while (_24113_i < static_cast<jule::I64>(static_cast<jule::I64>(_2399_sb.len()))) {
		{
			jule::I32 _24314_r;
			jule::I64 _24317_n;
			std::tie(_24314_r,_24317_n) = _1e9e904b0_decode_rune(_2399_sb.slice(_24113_i));
			if ((_1d09a2c45__find_rune(_24013_rb,_24314_r) != -1LL)) {
				return _24113_i;
			}
			_24113_i+=_24317_n;
		}
	_iter_next_1a863c84c:;
	}
	_iter_end_1a863c84c:;
	return -1LL;
}



inline jule::Slice<jule::Str> _1d09a3927_split(jule::Str _27214_s,jule::Str _27222_sub,jule::I64 _27236_n) {
	jule::I64 _27313_cap = _27236_n;
	if ((_27236_n < 0LL)) {
		_27313_cap=16LL;
	}
	jule::Slice<jule::Str> _27713_parts = jule::Slice<jule::Str>::alloc(0LL,_27313_cap);
	if ((_27236_n == 0LL)) {
		return _27713_parts;
	}
	if ((_27236_n < 0LL)) {
		_27236_n=static_cast<jule::I64>(_27214_s.len());
	}
	jule::I64 _28413_i = 0LL;
	for (; (_27236_n > 0LL); (_27236_n)--) {
		{
			jule::I64 _28613_j = _1d0942883_find_at(_27214_s,_27222_sub,_28413_i);
			if ((_28613_j == -1LL)) {
				goto _iter_end_1a8644216;
			}
			_27713_parts = jule::alloc_for_append(_27713_parts,1);_27713_parts.__push(_27214_s.slice(_28413_i,_28613_j));
			_28413_i=static_cast<jule::I64>(_28613_j + static_cast<jule::I64>(static_cast<jule::I64>(_27222_sub.len())));
		}
	_iter_next_1a8644216:;
	}
	_iter_end_1a8644216:;
	if ((_27236_n > 0LL) && (_28413_i < static_cast<jule::I64>(static_cast<jule::I64>(_27214_s.len())))) {
		_27713_parts = jule::alloc_for_append(_27713_parts,1);_27713_parts.__push(_27214_s.slice(_28413_i));
	}
	return _27713_parts;
}



inline jule::Bool _1d09a3a59_contains(jule::Str _30017_s,jule::Str _30025_sub) {
	return (_1d0942883_find_at(_30017_s,_30025_sub,0LL) != -1LL);
}



inline jule::Bool _1d09a3e00_contains_any(jule::Str _31621_s,jule::Str _31629_runes) {
	return (_1d09a36b3_find_any(_31621_s,_31629_runes) != -1LL);
}



inline jule::Str _1d09a4164_replace(jule::Str _34216_s,jule::Str _34224_sub,jule::Str _34234_new,jule::I64 _34248_n) {
	if ((_34248_n == 0LL) || (_34224_sub == _34234_new)) {
		return _34216_s;
	}
	if ((_34248_n < 0LL)) {
		_34248_n=static_cast<jule::I64>(_34216_s.len());
	}
	jule::Str _35113_ss = jule::Str();
	jule::I64 _35213_i = 0LL;
	for (; (_34248_n > 0LL); (_34248_n)--) {
		{
			jule::I64 _35413_j = _1d0942883_find_at(_34216_s,_34224_sub,_35213_i);
			if ((_35413_j == -1LL)) {
				goto _iter_end_1a864ce01;
			}
			_35113_ss+=_34216_s.slice(_35213_i,_35413_j);
			_35113_ss+=_34234_new;
			_35213_i=static_cast<jule::I64>(_35413_j + static_cast<jule::I64>(static_cast<jule::I64>(_34224_sub.len())));
		}
	_iter_next_1a864ce01:;
	}
	_iter_end_1a864ce01:;
	_35113_ss+=_34216_s.slice(_35213_i);
	return _35113_ss;
}



inline void _1d09a2ea9__trim_left(jule::Slice<jule::U8>& _39420_s,jule::Slice<jule::U8>& _39432_cutset) {
	jule::I64 _39513_i = 0LL;
	while (_39513_i < static_cast<jule::I64>(static_cast<jule::I64>(_39420_s.len()))) {
		{
			jule::I32 _39714_r;
			jule::I64 _39717_n;
			std::tie(_39714_r,_39717_n) = _1e9e904b0_decode_rune(_39420_s.slice(_39513_i));
			if ((_1d09a2c45__find_rune(_39432_cutset,_39714_r) == -1LL)) {
				_39420_s=_39420_s.slice(_39513_i);
				return;
			}
			_39513_i+=_39717_n;
		}
	_iter_next_1a8653126:;
	}
	_iter_end_1a8653126:;
	_39420_s=nullptr;
}



inline jule::Str _1d09a4ab0_trim_left(jule::Str _40918_s,jule::Str _40926_cutset) {
	jule::Slice<jule::U8> _41013_bytes = _1ce9b099b_stobs(_40918_s);
	jule::Slice<jule::U8> _4119_bcutset = _1ce9b099b_stobs(_40926_cutset);
	_1d09a2ea9__trim_left(_41013_bytes,_4119_bcutset);
	return static_cast<jule::Str>(_41013_bytes);
}



inline void _1d09a4be2__trim_right(jule::Slice<jule::U8>& _41621_s,jule::Slice<jule::U8>& _41633_cutset) {
	jule::I64 _41713_i = _41621_s.len();
	while ((_41713_i > 0LL)) {
		{
			jule::I32 _41914_r;
			jule::I64 _41917_n;
			std::tie(_41914_r,_41917_n) = _1e9e90a43_decode_last_rune(_41621_s.slice(0LL,_41713_i));
			if ((_1d09a2c45__find_rune(_41633_cutset,_41914_r) == -1LL)) {
				_41621_s=_41621_s.slice(0LL,_41713_i);
				return;
			}
			_41713_i-=_41917_n;
		}
	_iter_next_1a8656190:;
	}
	_iter_end_1a8656190:;
	_41621_s=nullptr;
}



inline jule::Str _1d09a4e56_trim(jule::Str _44013_s,jule::Str _44021_cutset) {
	jule::Slice<jule::U8> _44113_bytes = _1ce9b099b_stobs(_44013_s);
	jule::Slice<jule::U8> _4429_bcutset = _1ce9b099b_stobs(_44021_cutset);
	_1d09a2ea9__trim_left(_44113_bytes,_4429_bcutset);
	_1d09a4be2__trim_right(_44113_bytes,_4429_bcutset);
	return static_cast<jule::Str>(_44113_bytes);
}



inline jule::Bool _1ce907ad0_is_path_sep(jule::U8 _4820_c) {
	return (_4820_c == 92LLU) || (_4820_c == '/');
}



inline jule::Bool _1ce905c32_is_slash(jule::U8 _5213_c) {
	return (_5213_c == '\\') || (_5213_c == '/');
}



inline jule::U8 _1ce905d64_to_upper(jule::U8 _5413_c) {
	if (('a' <= _5413_c) && (_5413_c <= 'z')) {
		return static_cast<jule::U8>(_5413_c - ('a' - 'A'));
	}
	return _5413_c;
}



inline jule::I64 _1ce905a12_volume_name_len(jule::Str _8220_path) {
	if ((_8220_path.len() < 2LL)) {
		return 0LL;
	}
	jule::U8 _879_c = _8220_path[0LL];
	if ((_8220_path[1LL] == ':') && ((('a' <= _879_c) && (_879_c <= 'z')) || (('A' <= _879_c) && (_879_c <= 'Z')))) {
		return 2LL;
	}
	if ((!(_1ce905c32_is_slash(_8220_path[0LL]))) || (!(_1ce905c32_is_slash(_8220_path[1LL])))) {
		return 0LL;
	}
	jule::Str _9510_p1;
	jule::Str _9518_rest;
	std::tie(_9510_p1,_9518_rest,std::ignore) = _1ce9037e0_cut_path(_8220_path.slice(2LL));
	jule::Str _9613_p2 = jule::Str();
	jule::Bool _9713_ok = false;
	std::tie(_9613_p2,_9518_rest,_9713_ok) = _1ce9037e0_cut_path(_9518_rest);
	if ((!(_9713_ok))) {
		return static_cast<jule::I64>(_8220_path.len());
	}
	if ((_9510_p1 != jule::Str(".", 1)) && (_9510_p1 != jule::Str("?", 1))) {
		return static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_8220_path.len())) - static_cast<jule::I64>(static_cast<jule::I64>(_9518_rest.len())))) - 1LL));
	}
	if ((((_9613_p2.len() == 3LL) && (_1ce905d64_to_upper(_9613_p2[0LL]) == 'U')) && (_1ce905d64_to_upper(_9613_p2[1LL]) == 'N')) && (_1ce905d64_to_upper(_9613_p2[2LL]) == 'C')) {
		std::tie(std::ignore,_9518_rest,std::ignore) = _1ce9037e0_cut_path(_9518_rest);
		std::tie(std::ignore,_9518_rest,_9713_ok) = _1ce9037e0_cut_path(_9518_rest);
		if ((!(_9713_ok))) {
			return static_cast<jule::I64>(_8220_path.len());
		}
	}
	return static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_8220_path.len())) - static_cast<jule::I64>(static_cast<jule::I64>(_9518_rest.len())))) - 1LL));
}



inline std::tuple<jule::Str,jule::Str,jule::Bool> _1ce9037e0_cut_path(jule::Str _11913_path) {
	jule::Str _11926_before = jule::Str();
	jule::Str _11939_after = jule::Str();
	jule::Bool _11951_found = jule::Bool();
	{
		auto &expr = _11913_path;
		auto it = expr.begin();
		_iter_begin_1a867914c:;
		if (it != expr.end()) {
			jule::I64 _1a867923a_i = it - expr.begin();
			{
				if (_1ce905c32_is_slash(_11913_path[_1a867923a_i])) {
					_11926_before = _11913_path.slice(0LL,_1a867923a_i);
					_11939_after = _11913_path.slice((_1a867923a_i + 1LL));
					_11951_found = true;
					return std::make_tuple(_11926_before,_11939_after,_11951_found);
				}
			}
			_iter_next_1a867914c:;
			++it;
			_1a867923a_i++;
			goto _iter_begin_1a867914c;
		}
		_iter_end_1a867914c:;
	}
	_11926_before = _11913_path;
	_11939_after = jule::Str();
	_11951_found = false;
	return std::make_tuple(_11926_before,_11939_after,_11951_found);
}



inline std::tuple<jule::Str,jule::Bool> _1ce903a87_full_path(jule::Str _12814_name) {
	jule::Str _12827_path = jule::Str();
	jule::Bool _12838_ok = jule::Bool();
	jule::Slice<jule::U16> _1299_utf16_name = _1e8493e16_utf16_from_str(_12814_name);
	jule::U16* _1309_p = (&(_1299_utf16_name[0LL]));
	jule::U32 _13113_n = 100LLU;
	for (;;) {
		{
			jule::Slice<jule::U16> _13317_buff = jule::Slice<jule::U16>::alloc(static_cast<jule::I64>(_13113_n));
			_13113_n=static_cast<jule::U32>(static_cast<jule::U32>(static_cast<jule::U32>(_1e9d9bae7_get_full_path_name(_1309_p,static_cast<jule::U32>(static_cast<jule::U32>(_13317_buff.len())),(&(_13317_buff[0LL])),nullptr))));
			if ((_13113_n == 0LLU)) {
				_12827_path = jule::Str();
				_12838_ok = false;
				return std::make_tuple(_12827_path,_12838_ok);
			}
			if (_13113_n <= static_cast<jule::U32>(static_cast<jule::U32>(static_cast<jule::U32>(_13317_buff.len())))) {
				_12827_path = _1e849ed23_utf16_to_str(_13317_buff.slice(0LL,static_cast<jule::I64>(_13113_n)));
				_12838_ok = true;
				return std::make_tuple(_12827_path,_12838_ok);
			}
		}
	_iter_next_1a867b814:;
	}
	_iter_end_1a867b814:;
	_12827_path = jule::Str();
	_12838_ok = false;
	return std::make_tuple(_12827_path,_12838_ok);
}



inline std::tuple<jule::Str,jule::Bool> _1ce903db7___abs(jule::Str _14514_path) {
	jule::Bool _14532_ok = jule::Bool();
	if (_14514_path.empty()) {
		_14514_path=jule::Str(".", 1);
	}
	std::tie(_14514_path,_14532_ok) = _1ce903a87_full_path(_14514_path);
	if ((!(_14532_ok))) {
		_14532_ok = false;
		return std::make_tuple(jule::Str(),_14532_ok);
	}
	_14532_ok = true;
	return std::make_tuple(_1d09a574d_clean(_14514_path),_14532_ok);
}



inline jule::Str _1ce90415e___join(jule::Slice<jule::Str> _15915_elem) {
	jule::Str _16013_s = jule::Str();
	jule::U8 _16113_last_char = 0LLU;
	{
		auto &expr = _15915_elem;
		auto it = expr.begin();
		_iter_begin_1a8682364:;
		if (it != expr.end()) {
			jule::Str _1a86823a8_e = *it;
			{
				{
					
					if ((_16013_s.len() == 0LL)) {
						_case_begin_1a8682dae:;
					}
					else if (_1ce905c32_is_slash(_16113_last_char)) {
						_case_begin_1a8682aa1:;
						{
							while ((_1a86823a8_e.len() > 0LL) && _1ce905c32_is_slash(_1a86823a8_e[0LL])) {
								{
									(_1a86823a8_e).mut_slice(1LL);
								}
							_iter_next_1a8683a5d:;
							}
							_iter_end_1a8683a5d:;
						}
					}
					else if (_16113_last_char == ':') {
						_case_begin_1a8682b17:;
					}
					else {
						_case_begin_1a8682a3a:;
						{
							_16013_s+=jule::Str("\\", 1);
							_16113_last_char='\\';
						}
					}
					_match_end_1a868296e:;
				}
				if ((_1a86823a8_e.len() > 0LL)) {
					_16013_s+=_1a86823a8_e;
					_16113_last_char=_1a86823a8_e[(_1a86823a8_e.len() - 1LL)];
				}
			}
			_iter_next_1a8682364:;
			++it;
			goto _iter_begin_1a8682364;
		}
		_iter_end_1a8682364:;
	}
	if ((_16013_s.len() == 0LL)) {
		return jule::Str();
	}
	return _1d09a574d_clean(_16013_s);
}



inline jule::Str _1d09a574d_clean(jule::Str _10818_path) {
	jule::Str _1099_original_path = _10818_path;
	jule::I64 _1109_vol_len = _1ce905a12_volume_name_len(_10818_path);
	(_10818_path).mut_slice(_1109_vol_len);
	if (_10818_path.empty()) {
		if (((_1109_vol_len > 1LL) && _1ce907ad0_is_path_sep(_1099_original_path[0LL])) && _1ce907ad0_is_path_sep(_1099_original_path[1LL])) {
			return _1d09a59b2_from_slash(_1099_original_path);
		}
		return (_1099_original_path + jule::Str(".", 1));
	}
	jule::Bool _1199_rooted = _1ce907ad0_is_path_sep(_10818_path[0LL]);
	jule::I64 _1269_n = _10818_path.len();
	_1d09a51ba_LazyBuff _12713_out = _1d09a51ba_LazyBuff(_10818_path,jule::Slice<jule::U8>(),jule::I64(),_1099_original_path,_1109_vol_len);
	jule::I64 _13214_r = 0LL;
	jule::I64 _13221_dotdot = 0LL;
	std::tie(_13214_r,_13221_dotdot) = std::make_tuple(0LL,0LL);
	if (_1199_rooted) {
		_1d09a54d9_append(&_12713_out, 92LLU);
		std::tie(_13214_r,_13221_dotdot) = std::make_tuple(1LL,1LL);
	}
	while (_13214_r < _1269_n) {
		{
			{
				
				if (_1ce907ad0_is_path_sep(_10818_path[_13214_r])) {
					_case_begin_1a868eb46:;
					{
						(_13214_r)++;
					}
				}
				else if ((_10818_path[_13214_r] == '.') && (((_13214_r + 1LL) == _1269_n) || _1ce907ad0_is_path_sep(_10818_path[(_13214_r + 1LL)]))) {
					_case_begin_1a8690729:;
					{
						(_13214_r)++;
					}
				}
				else if (((_10818_path[_13214_r] == '.') && (_10818_path[(_13214_r + 1LL)] == '.')) && (((_13214_r + 2LL) == _1269_n) || _1ce907ad0_is_path_sep(_10818_path[(_13214_r + 2LL)]))) {
					_case_begin_1a8690790:;
					{
						_13214_r+=2LL;
						{
							
							if (_12713_out._field_w > _13221_dotdot) {
								_case_begin_1a86936c7:;
								{
									(_12713_out._field_w)--;
									while ((_12713_out._field_w > _13221_dotdot) && (!(_1ce907ad0_is_path_sep(static_cast<jule::U8>(_1d09a53a7_index(&_12713_out, _12713_out._field_w)))))) {
										{
											(_12713_out._field_w)--;
										}
									_iter_next_1a86943ed:;
									}
									_iter_end_1a86943ed:;
								}
							}
							else if ((!(_1199_rooted))) {
								_case_begin_1a8693a4b:;
								{
									if ((_12713_out._field_w > 0LL)) {
										_1d09a54d9_append(&_12713_out, 92LLU);
									}
									_1d09a54d9_append(&_12713_out, '.');
									_1d09a54d9_append(&_12713_out, '.');
									_13221_dotdot=_12713_out._field_w;
								}
							}
							_match_end_1a869360b:;
						}
					}
				}
				else {
					_case_begin_1a868a801:;
					{
						if ((_1199_rooted && (_12713_out._field_w != 1LL)) || ((!(_1199_rooted)) && (_12713_out._field_w != 0LL))) {
							_1d09a54d9_append(&_12713_out, 92LLU);
						}
						if (((true && (_12713_out._field_w == 0LL)) && (_12713_out._field_vol_len == 0LL)) && (_13214_r != 0LL)) {
							jule::I64 _17525_i = _13214_r;
							for (; (_17525_i < _1269_n) && (!(_1ce907ad0_is_path_sep(_10818_path[_17525_i]))); (_17525_i)++) {
								{
									if (_10818_path[_17525_i] == ':') {
										_1d09a54d9_append(&_12713_out, '.');
										_1d09a54d9_append(&_12713_out, 92LLU);
										goto _iter_end_1a868c270;
									}
								}
							_iter_next_1a868c270:;
							}
							_iter_end_1a868c270:;
						}
						for (; (_13214_r < _1269_n) && (!(_1ce907ad0_is_path_sep(_10818_path[_13214_r]))); (_13214_r)++) {
							{
								_1d09a54d9_append(&_12713_out, _10818_path[_13214_r]);
							}
						_iter_next_1a868e7a0:;
						}
						_iter_end_1a868e7a0:;
					}
				}
				_match_end_1a868a757:;
			}
		}
	_iter_next_1a868a35b:;
	}
	_iter_end_1a868a35b:;
	if ((_12713_out._field_w == 0LL)) {
		_1d09a54d9_append(&_12713_out, '.');
	}
	return _1d09a59b2_from_slash(_1d09a561b_string(&_12713_out));
}



inline jule::Str _1d09a59b2_from_slash(jule::Str _21119_path) {
	if (92LL == '/') {
		return _21119_path;
	}
	return _1d09a4164_replace(_21119_path,jule::Str("/", 1),static_cast<jule::Str>(92LL),-1LL);
}



inline jule::Str _1d09a5c6a_join(jule::Slice<jule::Str> _22513_elem) {
	return _1ce90415e___join(_22513_elem);
}



inline jule::Str _1d09a6012_ext(jule::Str _23012_path) {
	jule::I64 _23113_i = (_23012_path.len() - 1LL);
	for (; (_23113_i >= 0LL) && (!(_1ce907ad0_is_path_sep(_23012_path[_23113_i]))); (_23113_i)--) {
		{
			if (_23012_path[_23113_i] == '.') {
				return _23012_path.slice(_23113_i);
			}
		}
	_iter_next_1a8699249:;
	}
	_iter_end_1a8699249:;
	return jule::Str();
}



inline std::tuple<jule::Str,jule::Bool> _1d09a62a9_abs(jule::Str _24512_path) {
	jule::Str _24610_abs_path;
	jule::Bool _24620_ok;
	std::tie(_24610_abs_path,_24620_ok) = _1ce903db7___abs(_24512_path);
	return std::make_tuple(_24610_abs_path,_24620_ok);
}



inline jule::Str _1d09a6551_base(jule::Str _25417_path) {
	if (_25417_path.empty()) {
		return jule::Str(".", 1);
	}
	while ((_25417_path.len() > 0LL) && _1ce907ad0_is_path_sep(_25417_path[(_25417_path.len() - 1LL)])) {
		{
			(_25417_path).mut_slice(0LL,_25417_path.len() - 1LL);
		}
	_iter_next_1a869be1c:;
	}
	_iter_end_1a869be1c:;
	(_25417_path).mut_slice(_1d09a6b28_volume_name(_25417_path).len());
	jule::I64 _26513_i = (_25417_path.len() - 1LL);
	while ((_26513_i >= 0LL) && (!(_1ce907ad0_is_path_sep(_25417_path[_26513_i])))) {
		{
			(_26513_i)--;
		}
	_iter_next_1a869bee9:;
	}
	_iter_end_1a869bee9:;
	if ((_26513_i >= 0LL)) {
		(_25417_path).mut_slice(_26513_i + 1LL);
	}
	if (_25417_path.empty()) {
		return static_cast<jule::Str>(92LL);
	}
	return _25417_path;
}



inline jule::Str _1d09a6881_dir(jule::Str _28512_path) {
	jule::Str _2869_vol = _1d09a6b28_volume_name(_28512_path);
	jule::I64 _28713_i = (_28512_path.len() - 1LL);
	while ((_28713_i >= static_cast<jule::I64>(static_cast<jule::I64>(_2869_vol.len()))) && (!(_1ce907ad0_is_path_sep(_28512_path[_28713_i])))) {
		{
			(_28713_i)--;
		}
	_iter_next_1a869b801:;
	}
	_iter_end_1a869b801:;
	jule::Str _2919_dir = _1d09a574d_clean(_28512_path.slice(_2869_vol.len(),(_28713_i + 1LL)));
	if ((_2919_dir == jule::Str(".", 1)) && (_2869_vol.len() > 2LL)) {
		return _2869_vol;
	}
	return _2869_vol + _2919_dir;
}



inline jule::Str _1d09a6b28_volume_name(jule::Str _30320_path) {
	return _1d09a59b2_from_slash(_30320_path.slice(0LL,_1ce905a12_volume_name_len(_30320_path)));
}



inline jule::I64 _1e9da7d9a_get_last_fs_error(void) {
	jule::I64 _729_err = _1e844a96c_get_last_errno();
	{
		auto &_match_expr{ _729_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1a86d2480:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1a86d24e6:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		else if (_match_expr == 114LL) {
			_case_begin_1a86d1dca:;
			{
				return static_cast<jule::I64>(2LL);
			}
		}
		else if (_match_expr == 38LL) {
			_case_begin_1a86d1e41:;
			{
				return static_cast<jule::I64>(3LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1a86d1ea7:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1a86d201d:;
			{
				return static_cast<jule::I64>(5LL);
			}
		}
		else if (_match_expr == 132LL) {
			_case_begin_1a86d26d3:;
			{
				return static_cast<jule::I64>(6LL);
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1a86d2749:;
			{
				return static_cast<jule::I64>(7LL);
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1a86d27b0:;
			{
				return static_cast<jule::I64>(8LL);
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1a86d2826:;
			{
				return static_cast<jule::I64>(9LL);
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1a86d288c:;
			{
				return static_cast<jule::I64>(10LL);
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1a86d2903:;
			{
				return static_cast<jule::I64>(11LL);
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1a86d2969:;
			{
				return static_cast<jule::I64>(12LL);
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1a86d29d0:;
			{
				return static_cast<jule::I64>(13LL);
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1a86d2a46:;
			{
				return static_cast<jule::I64>(14LL);
			}
		}
		else if (_match_expr == 124LL) {
			_case_begin_1a86d2abd:;
			{
				return static_cast<jule::I64>(15LL);
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1a86d2b45:;
			{
				return static_cast<jule::I64>(16LL);
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1a86d2bbc:;
			{
				return static_cast<jule::I64>(17LL);
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1a86d2c44:;
			{
				return static_cast<jule::I64>(18LL);
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1a86d2cbb:;
			{
				return static_cast<jule::I64>(19LL);
			}
		}
		else if (_match_expr == 139LL || _match_expr == 16LL) {
			_case_begin_1a86d2d43:;
			{
				return static_cast<jule::I64>(20LL);
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1a86d2dba:;
			{
				return static_cast<jule::I64>(21LL);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1a86d2e42:;
			{
				return static_cast<jule::I64>(22LL);
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1a86d2eb9:;
			{
				return static_cast<jule::I64>(23LL);
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1a86d3041:;
			{
				return static_cast<jule::I64>(24LL);
			}
		}
		else if (_match_expr == 119LL) {
			_case_begin_1a86d30b8:;
			{
				return static_cast<jule::I64>(25LL);
			}
		}
		else if (_match_expr == 104LL) {
			_case_begin_1a86d3140:;
			{
				return static_cast<jule::I64>(26LL);
			}
		}
		else if (_match_expr == 41LL) {
			_case_begin_1a86d31b7:;
			{
				return static_cast<jule::I64>(27LL);
			}
		}
		else {
			_case_begin_1a86d1d64:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		_match_end_1a86d1d0e:;
	}
}



inline jule::Bool _1e9e92e41_is_console_handle(jule::U64 _11622_handle) {
	return ((_11622_handle == _1e9d98a06_STDIN) || (_11622_handle == _1e9d98b7c_STDOUT)) || (_11622_handle == _1e9d98d47_STDERR);
}



inline jule::I64 _1d0059440_get_last_process_error(void) {
	jule::I64 _429_err = _1e844a96c_get_last_errno();
	{
		auto &_match_expr{ _429_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1a86e7682:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 114LL) {
			_case_begin_1a86e76e8:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		else if (_match_expr == 38LL) {
			_case_begin_1a86e70ee:;
			{
				return static_cast<jule::I64>(2LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1a86e7165:;
			{
				return static_cast<jule::I64>(3LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1a86e71cb:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1a86e7242:;
			{
				return static_cast<jule::I64>(5LL);
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1a86e73eb:;
			{
				return static_cast<jule::I64>(6LL);
			}
		}
		else if (_match_expr == 139LL || _match_expr == 16LL) {
			_case_begin_1a86e7462:;
			{
				return static_cast<jule::I64>(7LL);
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_1a86e74c8:;
			{
				return static_cast<jule::I64>(9LL);
			}
		}
		else if (_match_expr == 121LL) {
			_case_begin_1a86e753e:;
			{
				return static_cast<jule::I64>(10LL);
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_1a86e75a5:;
			{
				return static_cast<jule::I64>(11LL);
			}
		}
		else {
			_case_begin_1a86e7088:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		_match_end_1a86e7033:;
	}
}



inline jule::Slice<wchar_t*> _1d0069164_ustr_slice_to_wcstr_slice(jule::Slice<jule::Slice<jule::U16>> _1730_us) {
	jule::Slice<wchar_t*> _1813_wcs = jule::Slice<wchar_t*>::alloc(0LL,static_cast<jule::I64>((_1730_us.len() + 1LL)));
	{
		auto &expr = _1730_us;
		auto it = expr.begin();
		_iter_begin_1a86eade4:;
		if (it != expr.end()) {
			jule::I64 _1a86eaa3c_i = it - expr.begin();
			{
				_1813_wcs = jule::alloc_for_append(_1813_wcs,1);_1813_wcs.__push(((wchar_t*)((&(_1730_us[_1a86eaa3c_i][0LL])))));
			}
			_iter_next_1a86eade4:;
			++it;
			_1a86eaa3c_i++;
			goto _iter_begin_1a86eade4;
		}
		_iter_end_1a86eade4:;
	}
	_1813_wcs = jule::alloc_for_append(_1813_wcs,1);_1813_wcs.__push(nullptr);
	return _1813_wcs;
}



inline jule::Slice<jule::Slice<jule::U16>> _1d006943e_str_slice_to_ustr_slice(jule::Slice<jule::Str> _2628_s) {
	jule::Slice<jule::Slice<jule::U16>> _2713_us = jule::Slice<jule::Slice<jule::U16>>::alloc(0LL,static_cast<jule::I64>(_2628_s.len()));
	{
		auto &expr = _2628_s;
		auto it = expr.begin();
		_iter_begin_1a86eb1e1:;
		if (it != expr.end()) {
			jule::Str &_1a86ec643_p = *it;
			{
				_2713_us = jule::alloc_for_append(_2713_us,1);_2713_us.__push(_1e8493e16_utf16_from_str(_1a86ec643_p));
			}
			_iter_next_1a86eb1e1:;
			++it;
			goto _iter_begin_1a86eb1e1;
		}
		_iter_end_1a86eb1e1:;
	}
	return _2713_us;
}



inline jule::I64 _1d006976e_execvp(jule::Str _3411_file,jule::Slice<jule::Str> _3422_argv) {
	jule::Slice<jule::U16> _359_utf16_file = _1e8493e16_utf16_from_str(_3411_file);
	jule::Slice<jule::Slice<jule::U16>> _369_ucargv = _1d006943e_str_slice_to_ustr_slice(_3422_argv);
	jule::Slice<wchar_t*> _379_cargv = _1d0069164_ustr_slice_to_wcstr_slice(_369_ucargv);
	return static_cast<jule::I64>(_wspawnvp(P_NOWAIT,((wchar_t*)((&(_359_utf16_file[0LL])))),(&(_379_cargv[0LL]))));
}



inline jule::I64 _1d0069b59_execve(jule::Str _4111_file,jule::Slice<jule::Str> _4122_argv,jule::Slice<jule::Str> _4135_env) {
	jule::Slice<jule::Slice<jule::U16>> _429_ucargv = _1d006943e_str_slice_to_ustr_slice(_4122_argv);
	jule::Slice<wchar_t*> _439_cargv = _1d0069164_ustr_slice_to_wcstr_slice(_429_ucargv);
	jule::Slice<jule::Slice<jule::U16>> _449_ucenv = _1d006943e_str_slice_to_ustr_slice(_4135_env);
	jule::Slice<wchar_t*> _459_cenv = _1d0069164_ustr_slice_to_wcstr_slice(_449_ucenv);
	jule::Slice<jule::U16> _469_utf16_file = _1e8493e16_utf16_from_str(_4111_file);
	return static_cast<jule::I64>(_wspawnvpe(P_NOWAIT,((wchar_t*)((&(_469_utf16_file[0LL])))),(&(_439_cargv[0LL])),(&(_459_cenv[0LL]))));
}



inline void _1d006a85d_exit(jule::I64 _1213_code) {
	_1e9da10a2_exit(_1213_code);
}



inline jule::Str _1d006aa5b_executable(void) {
	return jule::executable();
}



inline jule::Bool _1e9ea40a6_is_std_header_path(jule::Str _2627_p) {
	return (_2627_p[0LL] == '<') && (_2627_p[(_2627_p.len() - 1LL)] == '>');
}



inline jule::Bool _1e9ea55c4_is_valid_header_ext(jule::Str _3128_ext) {
	{
		auto &expr = _1e9eb4eb8_CPP_HEADER_EXTS;
		auto it = expr.begin();
		_iter_begin_1a8730b2c:;
		if (it != expr.end()) {
			jule::Str &_1a8731b0b_valid_ext = *it;
			{
				if (_3128_ext == _1a8731b0b_valid_ext) {
					return true;
				}
			}
			_iter_next_1a8730b2c:;
			++it;
			goto _iter_begin_1a8730b2c;
		}
		_iter_end_1a8730b2c:;
	}
	return false;
}



inline jule::Bool _1e9eb469e_is_valid_cpp_ext(jule::Str _4225_ext) {
	if ((_4225_ext == jule::Str(".c", 2))) {
		return true;
	}
	{
		auto &expr = _1e9eb9033_CPP_EXTS;
		auto it = expr.begin();
		_iter_begin_1a87329a8:;
		if (it != expr.end()) {
			jule::Str &_1a8731d4d_e = *it;
			{
				if (_4225_ext == _1a8731d4d_e) {
					return true;
				}
			}
			_iter_next_1a87329a8:;
			++it;
			goto _iter_begin_1a87329a8;
		}
		_iter_end_1a87329a8:;
	}
	{
		auto &expr = _1e9ee0e8e_OBJECTIVE_CPP_EXTS;
		auto it = expr.begin();
		_iter_begin_1a87335e1:;
		if (it != expr.end()) {
			jule::Str &_1a87330c4_e = *it;
			{
				if (_4225_ext == _1a87330c4_e) {
					return true;
				}
			}
			_iter_next_1a87335e1:;
			++it;
			goto _iter_begin_1a87335e1;
		}
		_iter_end_1a87335e1:;
	}
	return false;
}



inline jule::Str _1d0019664_logf(jule::Str _28713_fmt,jule::Slice<jule::Any> _28726_args) {
	return _1d001a07c_apply_fmt(_28713_fmt,_28726_args);
}



inline jule::Str _1d0019950_arg_to_str(jule::Any _29115_arg) {
	{
		auto &_match_expr{ _29115_arg };
		
		if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1a87341c4:;
			{
				return _29115_arg.operator jule::Str();
			}
		}
		else if (_match_expr.type_is<jule::U8>()) {
			_case_begin_1a8734bb9:;
			{
				return static_cast<jule::Str>(_29115_arg.operator jule::U8());
			}
		}
		else if (_match_expr.type_is<jule::I32>()) {
			_case_begin_1a8734c30:;
			{
				return static_cast<jule::Str>(_29115_arg.operator jule::I32());
			}
		}
		else {
			_case_begin_1a8734559:;
			{
				return jule::Str("<fmt?>", 6);
			}
		}
		_match_end_1a8732e3c:;
	}
}



inline jule::I64 _1d0019be7_find_next_fmt(jule::Str _30418_fmt) {
	{
		auto &expr = _30418_fmt;
		auto it = expr.begin();
		_iter_begin_1a8735a44:;
		if (it != expr.end()) {
			jule::I64 _1a8730379_i = it - expr.begin();
			jule::U8 &_1a8735c53_b = *it;
			{
				if (_1a8735c53_b == '@') {
					return _1a8730379_i;
				}
			}
			_iter_next_1a8735a44:;
			++it;
			_1a8730379_i++;
			goto _iter_begin_1a8735a44;
		}
		_iter_end_1a8735a44:;
	}
	return -1LL;
}



inline jule::Str _1d001a07c_apply_fmt(jule::Str _31318_fmt,jule::Slice<jule::Any> _31328_args) {
	jule::Str _31413_s = jule::Str();
	{
		auto &expr = _31328_args;
		auto it = expr.begin();
		_iter_begin_1a8736db9:;
		if (it != expr.end()) {
			jule::Any &_1a8736e63_arg = *it;
			{
				jule::I64 _31713_i = _1d0019be7_find_next_fmt(_31318_fmt);
				if ((_31713_i == -1LL)) {
					goto _iter_end_1a8736db9;
				}
				_31413_s+=_31318_fmt.slice(0LL,_31713_i);
				_31413_s+=_1d0019950_arg_to_str(_1a8736e63_arg);
				(_31318_fmt).mut_slice(_31713_i + 1LL);
			}
			_iter_next_1a8736db9:;
			++it;
			goto _iter_begin_1a8736db9;
		}
		_iter_end_1a8736db9:;
	}
	_31413_s+=_31318_fmt;
	return _31413_s;
}



inline jule::Bool _1d001ae90_is_top_directive(jule::Str _2825_directive) {
	return (_2825_directive == jule::Str("pass", 4)) || (_2825_directive == jule::Str("build", 5));
}



inline jule::Bool _1d001c722_is_windows(jule::Str _5119_os) {
	return (_5119_os == jule::Str("windows", 7));
}



inline jule::Bool _1d001ca0d_is_darwin(jule::Str _5418_os) {
	return (_5418_os == jule::Str("darwin", 6));
}



inline jule::Bool _1d001cca5_is_linux(jule::Str _5717_os) {
	return (_5717_os == jule::Str("linux", 5));
}



inline jule::Bool _1d001d091_is_i386(jule::Str _6016_arch) {
	return (_6016_arch == jule::Str("i386", 4));
}



inline jule::Bool _1d001d338_is_amd64(jule::Str _6317_arch) {
	return (_6317_arch == jule::Str("amd64", 5));
}



inline jule::Bool _1d001d5d0_is_arm64(jule::Str _6617_arch) {
	return (_6617_arch == jule::Str("arm64", 5));
}



inline jule::Bool _1d001d877_is_unix(jule::Str _6916_os) {
	return _1d001ca0d_is_darwin(_6916_os) || _1d001cca5_is_linux(_6916_os);
}



inline jule::Bool _1d001dba7_is_32bit(jule::Str _7217_arch) {
	return _1d001d091_is_i386(_7217_arch);
}



inline jule::Bool _1d001de4e_is_64bit(jule::Str _7517_arch) {
	return _1d001d338_is_amd64(_7517_arch) || _1d001d5d0_is_arm64(_7517_arch);
}



inline void _1d0057e66_init(void) {
	jule::Str _2513_path = _1d006aa5b_executable();
	if (_2513_path.empty()) {
		jule::panic(jule::Str("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:9"));;
	}
	jule::Str _309_pwd = ({
		auto except = _1ce92d023_working_dir();
		(except.ok()) ? (except.result) : ({{
			jule::panic(jule::Str("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:31:9"));;
			return;
			return;
		} jule::Str();});
	});
	jule::Str _359_path_exec = _1d09a6881_dir(_2513_path);
	_2513_path=_1d09a5c6a_join(jule::Slice<jule::Str>({_359_path_exec,jule::Str("..", 2)}));
	{
		_1d002bc3c_PATH_WD=_309_pwd;
		_1d002a92d_PATH_EXEC=_359_path_exec;
		_1d002c897_PATH_STDLIB=_1d09a5c6a_join(jule::Slice<jule::Str>({_2513_path,jule::Str("std", 3)}));
		_1d003abc4_PATH_API=_1d09a5c6a_join(jule::Slice<jule::Str>({_1d002a92d_PATH_EXEC,jule::Str("..", 2)}));
		_1d003abc4_PATH_API=_1d09a5c6a_join(jule::Slice<jule::Str>({_1d003abc4_PATH_API,jule::Str("api", 3)}));
		_1d003abc4_PATH_API=_1d09a5c6a_join(jule::Slice<jule::Str>({_1d003abc4_PATH_API,jule::Str("jule.hpp", 8)}));
	}
}



inline jule::Bool _1d07481c2_is_unary_op(jule::Str _31320_kind) {
	{
		auto &expr = _1d0742320_UNARY_OPS;
		auto it = expr.begin();
		_iter_begin_1a87c4709:;
		if (it != expr.end()) {
			jule::Str &_1a87c4781_op = *it;
			{
				if (_31320_kind == _1a87c4781_op) {
					return true;
				}
			}
			_iter_next_1a87c4709:;
			++it;
			goto _iter_begin_1a87c4709;
		}
		_iter_end_1a87c4709:;
	}
	return false;
}



inline jule::Bool _1d07484ad_is_bin_op(jule::Str _32418_kind) {
	{
		auto &expr = _1d074240d_BIN_OPS;
		auto it = expr.begin();
		_iter_begin_1a87d3482:;
		if (it != expr.end()) {
			jule::Str &_1a87d2d66_op = *it;
			{
				if (_32418_kind == _1a87d2d66_op) {
					return true;
				}
			}
			_iter_next_1a87d3482:;
			++it;
			goto _iter_begin_1a87d3482;
		}
		_iter_end_1a87d3482:;
	}
	return false;
}



inline jule::Bool _1d0748a41_is_str(jule::Str _34615_k) {
	return (!(_34615_k.empty())) && ((_34615_k[0LL] == '\"') || _1d0748cd8_is_raw_str(_34615_k));
}



inline jule::Bool _1d0748cd8_is_raw_str(jule::Str _34919_k) {
	return (!(_34919_k.empty())) && (_34919_k[0LL] == '`');
}



inline jule::Bool _1d0749080_is_rune(jule::Str _35316_k) {
	return (!(_35316_k.empty())) && (_35316_k[0LL] == '\'');
}



inline jule::Bool _1d0749657_is_bool(jule::Str _35916_k) {
	return (_35916_k == jule::Str("true", 4)) || (_35916_k == jule::Str("false", 5));
}



inline jule::Bool _1d07498ee_is_float(jule::Str _36217_k) {
	if (_1d095aa22_has_prefix(_36217_k,jule::Str("0x", 2))) {
		return _1d09a3e00_contains_any(_36217_k,jule::Str(".pP", 3));
	}
	return _1d09a3e00_contains_any(_36217_k,jule::Str(".eE", 3));
}



inline jule::Bool _1d0749b96_is_num(jule::Str _37015_k) {
	if (_37015_k.empty()) {
		return false;
	}
	jule::U8 _3759_b = _37015_k[0LL];
	return (_3759_b == '.') || (('0' <= _3759_b) && (_3759_b <= '9'));
}



inline jule::Bool _1d074a1d5_is_ignore_ident(jule::Str _38524_ident) {
	return (_38524_ident == jule::Str("_", 1));
}



inline jule::Bool _1d074a47c_is_anon_ident(jule::Str _38822_ident) {
	return (_38822_ident == jule::Str("<anonymous>", 11));
}



inline jule::Bool _1d074a9bb_is_space(jule::I32 _40217_r) {
	{
		auto &expr = _1d0742232_SPACES;
		auto it = expr.begin();
		_iter_begin_1a87dc832:;
		if (it != expr.end()) {
			jule::I32 &_1a87dc2b0_cr = *it;
			{
				if (_40217_r == _1a87dc2b0_cr) {
					return true;
				}
			}
			_iter_next_1a87dc832:;
			++it;
			goto _iter_begin_1a87dc832;
		}
		_iter_end_1a87dc832:;
	}
	return false;
}



inline jule::Bool _1d074ad84_is_letter(jule::I32 _41318_r) {
	return _1d0966e29_is_letter(_41318_r);
}



inline jule::Bool _1d074b3c3_is_decimal(jule::U8 _43519_b) {
	return ('0' <= _43519_b) && (_43519_b <= '9');
}



inline jule::Bool _1d074b66a_is_binary(jule::U8 _43818_b) {
	return (_43818_b == '0') || (_43818_b == '1');
}



inline jule::Bool _1d074b912_is_octal(jule::U8 _44117_b) {
	return ('0' <= _44117_b) && (_44117_b <= '7');
}



inline jule::Bool _1d074bba9_is_hex(jule::U8 _44415_b) {
	{
		
		if (('0' <= _44415_b) && (_44415_b <= '9')) {
			_case_begin_1a87e23b4:;
			{
				return true;
			}
		}
		else if (('a' <= _44415_b) && (_44415_b <= 'f')) {
			_case_begin_1a87e24a2:;
			{
				return true;
			}
		}
		else if (('A' <= _44415_b) && (_44415_b <= 'F')) {
			_case_begin_1a87e2518:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a87e1ca9:;
			{
				return false;
			}
		}
		_match_end_1a87de955:;
	}
}



inline jule::Bool _1d074be51_is_assign(jule::U64 _45918_id) {
	return ((((((_45918_id == static_cast<jule::U64>(2LLU)) || (_45918_id == static_cast<jule::U64>(31LLU))) || (_45918_id == static_cast<jule::U64>(34LLU))) || (_45918_id == static_cast<jule::U64>(20LLU))) || (_45918_id == static_cast<jule::U64>(28LLU))) || (_45918_id == static_cast<jule::U64>(3LLU))) || (_45918_id == static_cast<jule::U64>(7LLU));
}



inline jule::Bool _1d074c1e8_is_postfix_op(jule::Str _47022_kind) {
	{
		auto &expr = _1d07425d9_POSTFIX_OPS;
		auto it = expr.begin();
		_iter_begin_1a87e58a1:;
		if (it != expr.end()) {
			jule::Str &_1a87e58e5_op = *it;
			{
				if (_47022_kind == _1a87e58e5_op) {
					return true;
				}
			}
			_iter_next_1a87e58a1:;
			++it;
			goto _iter_begin_1a87e58a1;
		}
		_iter_end_1a87e58a1:;
	}
	return false;
}



inline jule::Bool _1d074c490_is_assign_op(jule::Str _48121_kind) {
	if (_1d074c1e8_is_postfix_op(_48121_kind)) {
		return true;
	}
	{
		auto &expr = _1d07426c7_ASSING_OPS;
		auto it = expr.begin();
		_iter_begin_1a87e5a6b:;
		if (it != expr.end()) {
			jule::Str &_1a87e5ae3_op = *it;
			{
				if (_48121_kind == _1a87e5ae3_op) {
					return true;
				}
			}
			_iter_next_1a87e5a6b:;
			++it;
			goto _iter_begin_1a87e5a6b;
		}
		_iter_end_1a87e5a6b:;
	}
	return false;
}



inline jule::Ptr<_1d074cd75_File> _1d074e3a4_new_file_set(jule::Str _6321_path) {
	return jule::new_ptr<_1d074cd75_File>(_1d074cd75_File(_6321_path,jule::Slice<jule::U8>(),jule::Slice<jule::Ptr<_1d0747985_Token>>()));
}



inline _1d0019224_Log _1d0750927_make_err(jule::I64 _11113_row,jule::I64 _11123_col,jule::Ptr<_1d074cd75_File>& _11134_f,jule::Str _11144_fmt,jule::Slice<jule::Any> _11157_args) {
	return _1d0019224_Log(static_cast<jule::I64>(1LL),_11113_row,_11123_col,_11134_f.get()._field_path,_1d0019664_logf(_11144_fmt,_11157_args),jule::Str(),jule::Str());
}



inline jule::Bool _1d0750cac_bytes_has_prefix(jule::Slice<jule::U8>& _12122_bytes,jule::Str _12137_prefix) {
	if (_12122_bytes.len() < static_cast<jule::I64>(static_cast<jule::I64>(_12137_prefix.len()))) {
		return false;
	}
	{
		auto &expr = _12137_prefix;
		auto it = expr.begin();
		_iter_begin_1a87e9454:;
		if (it != expr.end()) {
			jule::I64 _1a87e9531_i = it - expr.begin();
			{
				if (_12122_bytes[_1a87e9531_i] != _12137_prefix[_1a87e9531_i]) {
					return false;
				}
			}
			_iter_next_1a87e9454:;
			++it;
			_1a87e9531_i++;
			goto _iter_begin_1a87e9454;
		}
		_iter_end_1a87e9454:;
	}
	return true;
}



inline jule::Str _1d07510ed_float_fmt_e(jule::Slice<jule::U8>& _13317_txt,jule::I64 _13334_i) {
	jule::Str _13344_lit = jule::Str();
	(_13334_i)++;
	if (_13334_i >= static_cast<jule::I64>(static_cast<jule::I64>(_13317_txt.len()))) {
		return _13344_lit;
	}
	jule::U8 _13913_b = _13317_txt[_13334_i];
	if (_13913_b == '_') {
		return _13344_lit;
	}
	if ((_13913_b == '+') || (_13913_b == '-')) {
		(_13334_i)++;
		if (_13334_i >= static_cast<jule::I64>(static_cast<jule::I64>(_13317_txt.len()))) {
			return _13344_lit;
		}
		if (_13317_txt[_13334_i] == '_') {
			return _13344_lit;
		}
	}
	jule::I64 _1539_first = _13334_i;
	for (; _13334_i < static_cast<jule::I64>(static_cast<jule::I64>(_13317_txt.len())); (_13334_i)++) {
		{
			_13913_b=_13317_txt[_13334_i];
			if ((_13913_b != '_') && (!(_1d074b3c3_is_decimal(_13913_b)))) {
				goto _iter_end_1a87ec3be;
			}
		}
	_iter_next_1a87ec3be:;
	}
	_iter_end_1a87ec3be:;
	if (_13334_i == _1539_first) {
		_13344_lit = jule::Str();
		return _13344_lit;
	}
	_13344_lit = static_cast<jule::Str>(_13317_txt.slice(0LL,_13334_i));
	return _13344_lit;
}



inline jule::Str _1d0751483_float_fmt_p(jule::Slice<jule::U8>& _16717_txt,jule::I64 _16730_i) {
	return _1d07510ed_float_fmt_e(_16717_txt,_16730_i);
}



inline jule::Str _1d07517c4_float_fmt_dotnp(jule::Slice<jule::U8>& _17121_txt,jule::I64 _17138_i) {
	if (_17121_txt[_17138_i] != '.') {
		return jule::Str();
	}
	(_17138_i)++;
	_julec_label_loop:;
	for (; _17138_i < static_cast<jule::I64>(static_cast<jule::I64>(_17121_txt.len())); (_17138_i)++) {
		{
			jule::U8 _17913_b = _17121_txt[_17138_i];
			{
				
				if (_17913_b == '_' || _1d074b3c3_is_decimal(_17913_b)) {
					_case_begin_1a8800ceb:;
					{
						goto _iter_next_1a8800218;
					}
				}
				else if (_1d0753001_is_float_fmt_p(_17913_b,_17138_i)) {
					_case_begin_1a8800d73:;
					{
						return _1d0751483_float_fmt_p(_17121_txt,_17138_i);
					}
				}
				else {
					_case_begin_1a8800c52:;
					{
						goto _iter_end_1a8800218;
					}
				}
				_match_end_1a8800bdb:;
			}
		}
	_iter_next_1a8800218:;
	}
	_iter_end_1a8800218:;
	return jule::Str();
}



inline jule::Str _1d0751b15_float_fmt_dotfp(jule::Slice<jule::U8>& _19221_txt,jule::I64 _19238_i) {
	_19238_i+=2LL;
	return _1d07510ed_float_fmt_e(_19221_txt,_19238_i);
}



inline jule::Str _1d0751e56_float_fmt_dotp(jule::Slice<jule::U8>& _19720_txt,jule::I64 _19737_i) {
	(_19737_i)++;
	return _1d07510ed_float_fmt_e(_19720_txt,_19737_i);
}



inline jule::Str _1d0752330_float_num(jule::Slice<jule::U8>& _20215_txt,jule::I64 _20232_i) {
	jule::Str _20242_lit = jule::Str();
	(_20232_i)++;
	if (_20232_i >= static_cast<jule::I64>(static_cast<jule::I64>(_20215_txt.len()))) {
		_20242_lit = static_cast<jule::Str>(_20215_txt);
		return _20242_lit;
	}
	if (_20215_txt[_20232_i] == '_') {
		(_20232_i)--;
		_20242_lit = static_cast<jule::Str>(_20215_txt.slice(0LL,_20232_i));
		return _20242_lit;
	}
	for (; _20232_i < static_cast<jule::I64>(static_cast<jule::I64>(_20215_txt.len())); (_20232_i)++) {
		{
			jule::U8 _21213_b = _20215_txt[_20232_i];
			if ((_20232_i > 1LL) && ((_21213_b == 'e') || (_21213_b == 'E'))) {
				_20242_lit = _1d07510ed_float_fmt_e(_20215_txt,_20232_i);
				return _20242_lit;
			}
			if ((_21213_b != '_') && (!(_1d074b3c3_is_decimal(_21213_b)))) {
				goto _iter_end_1a8803c22;
			}
		}
	_iter_next_1a8803c22:;
	}
	_iter_end_1a8803c22:;
	if ((_20232_i == 1LL)) {
		return _20242_lit;
	}
	_20242_lit = static_cast<jule::Str>(_20215_txt.slice(0LL,_20232_i));
	return _20242_lit;
}



inline jule::Str _1d07525c7_common_num(jule::Slice<jule::U8>& _22716_txt) {
	jule::Str _22731_lit = jule::Str();
	jule::I64 _22813_i = 0LL;
	_julec_label_loop:;
	for (; _22813_i < static_cast<jule::I64>(static_cast<jule::I64>(_22716_txt.len())); (_22813_i)++) {
		{
			jule::U8 _23113_b = _22716_txt[_22813_i];
			{
				
				if (_23113_b == '.') {
					_case_begin_1a8808397:;
					{
						_22731_lit = _1d0752330_float_num(_22716_txt,_22813_i);
						return _22731_lit;
					}
				}
				else if (_23113_b == '_') {
					_case_begin_1a880841e:;
					{
						goto _iter_next_1a880784c;
					}
				}
				else if (_1d0752bb0_is_float_fmt_e(_23113_b,_22813_i)) {
					_case_begin_1a8808496:;
					{
						_22731_lit = _1d07510ed_float_fmt_e(_22716_txt,_22813_i);
						return _22731_lit;
					}
				}
				else if ((!(_1d074b3c3_is_decimal(_23113_b)))) {
					_case_begin_1a880851d:;
					{
						goto _iter_end_1a880784c;
					}
				}
				_match_end_1a88082ba:;
			}
		}
	_iter_next_1a880784c:;
	}
	_iter_end_1a880784c:;
	if ((_22813_i == 0LL)) {
		return _22731_lit;
	}
	_22731_lit = static_cast<jule::Str>(_22716_txt.slice(0LL,_22813_i));
	return _22731_lit;
}



inline jule::Str _1d075286e_binary_num(jule::Slice<jule::U8>& _25016_txt) {
	jule::Str _25031_lit = jule::Str();
	if ((!(_1d0750cac_bytes_has_prefix(_25016_txt,jule::Str("0b", 2))))) {
		_25031_lit = jule::Str();
		return _25031_lit;
	}
	if ((_25016_txt.len() < 2LL)) {
		return _25031_lit;
	}
	
	jule::I64 _25913_i = 2LL;
	for (; _25913_i < static_cast<jule::I64>(static_cast<jule::I64>(_25016_txt.len())); (_25913_i)++) {
		{
			if ((_25016_txt[_25913_i] != '_') && (!(_1d074b66a_is_binary(_25016_txt[_25913_i])))) {
				goto _iter_end_1a880be17;
			}
		}
	_iter_next_1a880be17:;
	}
	_iter_end_1a880be17:;
	if ((_25913_i == 2LL)) {
		return _25031_lit;
	}
	_25031_lit = static_cast<jule::Str>(_25016_txt.slice(0LL,_25913_i));
	return _25031_lit;
}



inline jule::Bool _1d0752bb0_is_float_fmt_e(jule::U8 _27219_b,jule::I64 _27228_i) {
	return (_27228_i > 0LL) && ((_27219_b == 'e') || (_27219_b == 'E'));
}



inline jule::Bool _1d0753001_is_float_fmt_p(jule::U8 _27619_b,jule::I64 _27628_i) {
	return (_27628_i > 0LL) && ((_27619_b == 'p') || (_27619_b == 'P'));
}



inline jule::Bool _1d0753342_is_float_fmt_dotnp(jule::Slice<jule::U8>& _28024_txt,jule::I64 _28041_i) {
	if (_28024_txt[_28041_i] != '.') {
		return false;
	}
	(_28041_i)++;
	_julec_label_loop:;
	for (; _28041_i < static_cast<jule::I64>(static_cast<jule::I64>(_28024_txt.len())); (_28041_i)++) {
		{
			jule::U8 _28713_b = _28024_txt[_28041_i];
			{
				
				if (_28713_b == '_' || _1d074b3c3_is_decimal(_28713_b)) {
					_case_begin_1a881189a:;
					{
						goto _iter_next_1a8810cc8;
					}
				}
				else if (_1d0753001_is_float_fmt_p(_28713_b,_28041_i)) {
					_case_begin_1a8811922:;
					{
						return true;
					}
				}
				else {
					_case_begin_1a8811801:;
					{
						goto _iter_end_1a8810cc8;
					}
				}
				_match_end_1a881178a:;
			}
		}
	_iter_next_1a8810cc8:;
	}
	_iter_end_1a8810cc8:;
	return false;
}



inline jule::Bool _1d0753683_is_float_fmt_dotp(jule::Slice<jule::U8>& _30123_txt,jule::I64 _30136_i) {
	{
		
		if ((_30123_txt.len() < 3LL)) {
			_case_begin_1a88137e2:;
			{
				goto _case_begin_1a88138d0;
			}
		}
		else if (_30123_txt[_30136_i] != '.') {
			_case_begin_1a88138d0:;
			{
				goto _case_begin_1a8813946;
			}
		}
		else if ((_30123_txt[(_30136_i + 1LL)] != 'p') && (_30123_txt[(_30136_i + 1LL)] != 'P')) {
			_case_begin_1a8813946:;
			{
				return false;
			}
		}
		else {
			_case_begin_1a88131c6:;
			{
				return true;
			}
		}
		_match_end_1a881310a:;
	}
}



inline jule::Bool _1d07539c4_is_float_fmt_dotfp(jule::Slice<jule::U8>& _31424_txt,jule::I64 _31437_i) {
	{
		
		if ((_31424_txt.len() < 4LL)) {
			_case_begin_1a8815a9c:;
			{
				goto _case_begin_1a8815b79;
			}
		}
		else if (_31424_txt[_31437_i] != '.') {
			_case_begin_1a8815b79:;
			{
				goto _case_begin_1a8815be0;
			}
		}
		else if ((_31424_txt[(_31437_i + 1LL)] != 'f') && (_31424_txt[(_31437_i + 1LL)] != 'F')) {
			_case_begin_1a8815be0:;
			{
				goto _case_begin_1a88158d2;
			}
		}
		else if ((_31424_txt[(_31437_i + 2LL)] != 'p') && (_31424_txt[(_31437_i + 1LL)] != 'P')) {
			_case_begin_1a88158d2:;
			{
				return false;
			}
		}
		else {
			_case_begin_1a88150a7:;
			{
				return true;
			}
		}
		_match_end_1a8814edb:;
	}
}



inline jule::Str _1d0753d8c_octal_num(jule::Slice<jule::U8>& _32915_txt) {
	jule::Str _32930_lit = jule::Str();
	if (_32915_txt[0LL] != '0') {
		_32930_lit = jule::Str();
		return _32930_lit;
	}
	if ((_32915_txt.len() < 2LL)) {
		return _32930_lit;
	}
	jule::I64 _33713_octal_start = 1LL;
	jule::Bool _33913_o = false;
	if (_32915_txt[1LL] == 'o') {
		if ((_32915_txt.len() < 3LL)) {
			return _32930_lit;
		}
		(_33713_octal_start)++;
		_33913_o=true;
	}
	jule::I64 _34813_i = _33713_octal_start;
	for (; _34813_i < static_cast<jule::I64>(static_cast<jule::I64>(_32915_txt.len())); (_34813_i)++) {
		{
			jule::U8 _35013_b = _32915_txt[_34813_i];
			if (_35013_b == '.') {
				if (_33913_o) {
					_32930_lit = jule::Str();
					return _32930_lit;
				}
				_32930_lit = _1d0752330_float_num(_32915_txt,_34813_i);
				return _32930_lit;
			}
			if (_1d0752bb0_is_float_fmt_e(_35013_b,_34813_i)) {
				_32930_lit = _1d07510ed_float_fmt_e(_32915_txt,_34813_i);
				return _32930_lit;
			}
			if ((_35013_b != '_') && (!(_1d074b912_is_octal(_35013_b)))) {
				goto _iter_end_1a881a013;
			}
		}
	_iter_next_1a881a013:;
	}
	_iter_end_1a881a013:;
	if (_34813_i == _33713_octal_start) {
		return _32930_lit;
	}
	_32930_lit = static_cast<jule::Str>(_32915_txt.slice(0LL,_34813_i));
	return _32930_lit;
}



inline jule::Str _1d0754134_hex_num(jule::Slice<jule::U8>& _37113_txt) {
	jule::Str _37128_lit = jule::Str();
	if ((_37113_txt.len() < 3LL)) {
		return _37128_lit;
	}
	if ((_37113_txt[0LL] != '0') || ((_37113_txt[1LL] != 'x') && (_37113_txt[1LL] != 'X'))) {
		return _37128_lit;
	}
	
	jule::I64 _38013_i = 2LL;
	_julec_label_loop:;
	for (; _38013_i < static_cast<jule::I64>(static_cast<jule::I64>(_37113_txt.len())); (_38013_i)++) {
		{
			jule::U8 _38313_b = _37113_txt[_38013_i];
			{
				
				if (_1d0753683_is_float_fmt_dotp(_37113_txt,_38013_i)) {
					_case_begin_1a8820e3c:;
					{
						_37128_lit = _1d0751e56_float_fmt_dotp(_37113_txt,_38013_i);
						return _37128_lit;
					}
				}
				else if (_1d07539c4_is_float_fmt_dotfp(_37113_txt,_38013_i)) {
					_case_begin_1a8820eb4:;
					{
						_37128_lit = _1d0751b15_float_fmt_dotfp(_37113_txt,_38013_i);
						return _37128_lit;
					}
				}
				else if (_1d0753001_is_float_fmt_p(_38313_b,_38013_i)) {
					_case_begin_1a882103b:;
					{
						_37128_lit = _1d0751483_float_fmt_p(_37113_txt,_38013_i);
						return _37128_lit;
					}
				}
				else if (_1d0753342_is_float_fmt_dotnp(_37113_txt,_38013_i)) {
					_case_begin_1a88210b3:;
					{
						_37128_lit = _1d07517c4_float_fmt_dotnp(_37113_txt,_38013_i);
						return _37128_lit;
					}
				}
				else if ((_38313_b != '_') && (!(_1d074bba9_is_hex(_38313_b)))) {
					_case_begin_1a882113a:;
					{
						goto _iter_end_1a8820414;
					}
				}
				_match_end_1a8820d4e:;
			}
		}
	_iter_next_1a8820414:;
	}
	_iter_end_1a8820414:;
	if ((_38013_i == 2LL)) {
		return _37128_lit;
	}
	_37128_lit = static_cast<jule::Str>(_37113_txt.slice(0LL,_38013_i));
	return _37128_lit;
}



inline jule::Str _1d0754475_hex_escape(jule::Slice<jule::U8>& _40416_txt,jule::I64 _40429_n) {
	jule::Str _40439_seq = jule::Str();
	if (_40416_txt.len() < _40429_n) {
		return _40439_seq;
	}
	
	jule::I64 _41013_i = 2LL;
	for (; _41013_i < _40429_n; (_41013_i)++) {
		{
			if ((!(_1d074bba9_is_hex(_40416_txt[_41013_i])))) {
				return _40439_seq;
			}
		}
	_iter_next_1a88239bc:;
	}
	_iter_end_1a88239bc:;
	_40439_seq=static_cast<jule::Str>(_40416_txt.slice(0LL,_40429_n));
	return _40439_seq;
}



inline jule::Str _1d0754761_big_unicode_point_escape(jule::Slice<jule::U8>& _42230_txt) {
	return _1d0754475_hex_escape(_42230_txt,10LL);
}



inline jule::Str _1d0754a3b_little_unicode_point_escape(jule::Slice<jule::U8>& _42733_txt) {
	return _1d0754475_hex_escape(_42733_txt,6LL);
}



inline jule::Str _1d0754cc2_hex_byte_escape(jule::Slice<jule::U8>& _43221_txt) {
	return _1d0754475_hex_escape(_43221_txt,4LL);
}



inline jule::Str _1d0755069_byte_escape(jule::Slice<jule::U8>& _43717_txt) {
	jule::Str _43732_seq = jule::Str();
	if ((_43717_txt.len() < 4LL)) {
		return _43732_seq;
	}
	if (((!(_1d074b912_is_octal(_43717_txt[1LL]))) || (!(_1d074b912_is_octal(_43717_txt[2LL])))) || (!(_1d074b912_is_octal(_43717_txt[3LL])))) {
		return _43732_seq;
	}
	_43732_seq = static_cast<jule::Str>(_43717_txt.slice(0LL,4LL));
	return _43732_seq;
}



inline jule::Slice<_1d0019224_Log> _1d0759a63_lex(jule::Ptr<_1d074cd75_File> _83216_f,jule::I64 _83226_mode) {
	if ((_83216_f == nullptr)) {
		return nullptr;
	}
	_1d0755751_Lex _83713_lex = _1d0755751_Lex(_83226_mode,jule::Slice<jule::Ptr<_1d0747985_Token>>(),_83216_f,0LL,jule::I64(),-1LL,jule::Slice<_1d0019224_Log>());
	_1d07582e2_new_line(&_83713_lex);
	_1d07562e0_lex(&_83713_lex);
	if ((_83713_lex._field_errors.len() > 0LL)) {
		return _83713_lex._field_errors;
	}
	_83216_f.get()._field_tokens=_83713_lex._field_tokens;
	return nullptr;
}



inline jule::Bool _1d077d9aa_find_module_file(jule::Slice<jule::Ptr<_1e9da8494_DirEntry>>& _1226_dirents) {
	{
		auto &expr = _1226_dirents;
		auto it = expr.begin();
		_iter_begin_1a886c21e:;
		if (it != expr.end()) {
			jule::Ptr<_1e9da8494_DirEntry> &_1a886c340_d = *it;
			{
				if ((!(_1e9dab9b4_is_dir(_1a886c340_d.get()._field_stat.ptr()))) && (_1a886c340_d.get()._field_name == jule::Str("jule.mod", 8))) {
					return true;
				}
			}
			_iter_next_1a886c21e:;
			++it;
			goto _iter_begin_1a886c21e;
		}
		_iter_end_1a886c21e:;
	}
	return false;
}



inline jule::Str _1d077db53_find_module_file_deep(jule::Str _2434_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_1e9da8494_DirEntry>> _2617_dirents = ({
				auto except = static__1d09a7255_read(_2434_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1a886ce23;
					goto _iter_end_1a886ce23;
				} jule::Slice<jule::Ptr<_1e9da8494_DirEntry>>();});
			});
			jule::Bool _3013_exist = _1d077d9aa_find_module_file(_2617_dirents);
			if (_3013_exist) {
				return _2434_path;
			}
			jule::I64 _3513_n = _2434_path.len();
			_2434_path=_1d09a6881_dir(_2434_path);
			if (_2434_path.len() == _3513_n) {
				goto _iter_end_1a886ce23;
			}
		}
	_iter_next_1a886ce23:;
	}
	_iter_end_1a886ce23:;
	return jule::Str();
}



inline jule::Slice<_1d0019224_Log> _1d077ddea_check_module_file(jule::Str _4626_path) {
	jule::Slice<jule::U8> _479_bytes = ({
		auto except = static__1e9daa320_read(_1d09a5c6a_join(jule::Slice<jule::Str>({_4626_path,jule::Str("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_1d0019224_Log>({_1d0019224_Log(static_cast<jule::I64>(0LL),jule::I64(),jule::I64(),jule::Str(),jule::Str("module file could not checked because of a problem", 50),jule::Str(),jule::Str())});
			return jule::Slice<_1d0019224_Log>({_1d0019224_Log(static_cast<jule::I64>(0LL),jule::I64(),jule::I64(),jule::Str(),jule::Str("module file could not checked because of a problem", 50),jule::Str(),jule::Str())});
		} jule::Slice<jule::U8>();});
	});
	jule::Str _549_s = _1d09a4e56_trim(static_cast<jule::Str>(_479_bytes),jule::Str(" \n\r\t\v", 5));
	if ((_549_s.len() != 0LL)) {
		return jule::Slice<_1d0019224_Log>({_1d0019224_Log(static_cast<jule::I64>(0LL),jule::I64(),jule::I64(),jule::Str(),jule::Str("module file has syntax error(s)", 31),jule::Str(),jule::Str())});
	}
	return nullptr;
}



inline jule::Ptr<_1b6506593_FileInfo> _1b650696c_parse_file(jule::Ptr<_1d074cd75_File> _2323_f) {
	if ((_2323_f == nullptr)) {
		return nullptr;
	}
	jule::Ptr<_1b6506593_FileInfo> _2813_finf = jule::new_ptr<_1b6506593_FileInfo>(_1b6506593_FileInfo());
	std::tie(_2813_finf.get()._field_ast,_2813_finf.get()._field_errors) = _1b654b572_parse_fileset(_2323_f);
	if ((_2813_finf.get()._field_errors.len() > 0LL)) {
		_2813_finf.get()._field_ast=nullptr;
	}
	return _2813_finf;
}



inline std::tuple<jule::Ptr<_1d06e7b66_Ast>,jule::Slice<_1d0019224_Log>> _1b654b572_parse_fileset(jule::Ptr<_1d074cd75_File> _6022_f) {
	jule::Ptr<_1b656a382_Parser> _6113_p = jule::new_ptr<_1b656a382_Parser>(_1b656a382_Parser());
	_1b65794e5_parse(_6113_p, _6022_f);
	return std::make_tuple(_6113_p.get()._field_ast,_6113_p.get()._field_errors);
}



inline jule::Ptr<_1d0761c13_ScopeTree> _1b654c276_new_scope(void) {
	return jule::new_ptr<_1d0761c13_ScopeTree>();
}



inline std::tuple<jule::Bool,jule::Bool> _1b654c584_is_st(jule::Ptr<_1d0747985_Token> _4710_current,jule::Ptr<_1d0747985_Token> _4727_prev) {
	jule::Bool _4743_ok = jule::Bool();
	jule::Bool _4753_terminated = jule::Bool();
	_4743_ok=(_4710_current.get()._field_id == static_cast<jule::U64>(5LLU)) || (_4727_prev.get()._field_row < _4710_current.get()._field_row);
	_4753_terminated=_4710_current.get()._field_id == static_cast<jule::U64>(5LLU);
	return std::make_tuple(_4743_ok,_4753_terminated);
}



inline jule::Bool _1b654c919_prev_is_incomplete_expr(jule::Slice<jule::Ptr<_1d0747985_Token>>& _5329_tokens,jule::I64& _5348_i) {
	if ((_5348_i > 1LL) && (_5329_tokens[(_5348_i - 2LL)].get()._field_id == static_cast<jule::U64>(23LLU))) {
		return false;
	}
	{
		jule::Ptr<_1d0747985_Token> _5913_prev = _5329_tokens[(_5348_i - 1LL)];
		return (_5913_prev.get()._field_id == static_cast<jule::U64>(20LLU)) || (((_5913_prev.get()._field_id == static_cast<jule::U64>(7LLU)) && _1d07484ad_is_bin_op(_5913_prev.get()._field_kind)) && (_5913_prev.get()._field_row < _5329_tokens[_5348_i].get()._field_row));
	}
}



inline std::tuple<jule::I64,jule::Bool> _1b654cc8d_next_st_pos(jule::Slice<jule::Ptr<_1d0747985_Token>>& _6817_tokens,jule::I64 _6835_start) {
	jule::I64 _6913_brace_n = 0LL;
	jule::I64 _7013_i = _6835_start;
	for (; _7013_i < static_cast<jule::I64>(static_cast<jule::I64>(_6817_tokens.len())); (_7013_i)++) {
		{
			jule::Bool _7217_ok = false;
			jule::Bool _7317_terminated = false;
			jule::Ptr<_1d0747985_Token> _7413_tok = _6817_tokens[_7013_i];
			{
				auto &_match_expr{ _7413_tok.get()._field_id };
				
				if (_match_expr == static_cast<jule::U64>(3LLU)) {
					_case_begin_1a8c27233:;
					{
						{
							auto &_match_expr{ _7413_tok.get()._field_kind };
							
							if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
								_case_begin_1a8c293de:;
								{
									if ((_6913_brace_n == 0LL) && (_7013_i > _6835_start)) {
										if ((!(_1b654c919_prev_is_incomplete_expr(_6817_tokens,_7013_i)))) {
											std::tie(_7217_ok,_7317_terminated) = _1b654c584_is_st(_7413_tok,_6817_tokens[(_7013_i - 1LL)]);
											if (_7217_ok) {
												goto _julec_label_return;
											}
										}
									}
									(_6913_brace_n)++;
								}
							}
							else {
								_case_begin_1a8c27d05:;
								{
									(_6913_brace_n)--;
									if ((_6913_brace_n == 0LL) && ((_7013_i + 1LL) < static_cast<jule::I64>(static_cast<jule::I64>(_6817_tokens.len())))) {
										std::tie(_7217_ok,_7317_terminated) = _1b654c584_is_st(_6817_tokens[(_7013_i + 1LL)],_7413_tok);
										if (_7217_ok) {
											(_7013_i)++;
											goto _julec_label_return;
										}
									}
								}
							}
							_match_end_1a8c27c4a:;
						}
						goto _iter_next_1a8c2609a;
					}
				}
				_match_end_1a8c27453:;
			}
			if ((_6913_brace_n != 0LL)) {
				goto _iter_next_1a8c2609a;
			}
			if (_7013_i > _6835_start) {
				if (_1b654c919_prev_is_incomplete_expr(_6817_tokens,_7013_i)) {
					goto _iter_next_1a8c2609a;
				}
				std::tie(_7217_ok,_7317_terminated) = _1b654c584_is_st(_7413_tok,_6817_tokens[(_7013_i - 1LL)]);
			} else {
				std::tie(_7217_ok,_7317_terminated) = _1b654c584_is_st(_7413_tok,_7413_tok);
			}
			if ((!(_7217_ok))) {
				goto _iter_next_1a8c2609a;
			}
			_julec_label_return:;
			if (_7317_terminated) {
				(_7013_i)++;
			}
			return std::make_tuple(_7013_i,_7317_terminated);
		}
	_iter_next_1a8c2609a:;
	}
	_iter_end_1a8c2609a:;
	return std::make_tuple(_7013_i,false);
}



inline std::tuple<jule::Slice<jule::Ptr<_1d0747985_Token>>,jule::Bool> _1b654d0ce_skip_st(jule::I64& _13017_i,jule::Slice<jule::Ptr<_1d0747985_Token>> _13029_tokens) {
	jule::I64 _1319_start = _13017_i;
	jule::Bool _13213_terminated = false;
	std::tie(_13017_i,_13213_terminated) = _1b654cc8d_next_st_pos(_13029_tokens,_1319_start);
	jule::Slice<jule::Ptr<_1d0747985_Token>> _13413_st_tokens = _13029_tokens.slice(_1319_start,_13017_i);
	if (_13213_terminated) {
		if ((_13413_st_tokens.len() == 1LL)) {
			std::tie(_13413_st_tokens,_13213_terminated) = _1b654d0ce_skip_st(_13017_i,_13029_tokens);
			return std::make_tuple(_13413_st_tokens,_13213_terminated);
		}
		_13413_st_tokens=_13413_st_tokens.slice(0LL,(_13413_st_tokens.len() - 1LL));
	}
	return std::make_tuple(_13413_st_tokens,_13213_terminated);
}



inline jule::Slice<jule::Ptr<_1b654d3cb_Stmt>> _1b654d772_split_stmts(jule::Slice<jule::Ptr<_1d0747985_Token>>& _15221_tokens) {
	jule::Slice<jule::Ptr<_1b654d3cb_Stmt>> _15313_stmts = nullptr;
	jule::I64 _15413_pos = 0LL;
	while (_15413_pos < static_cast<jule::I64>(static_cast<jule::I64>(_15221_tokens.len()))) {
		{
			jule::Slice<jule::Ptr<_1d0747985_Token>> _15618_stmt;
			jule::Bool _15624_terminated;
			std::tie(_15618_stmt,_15624_terminated) = _1b654d0ce_skip_st(_15413_pos,_15221_tokens);
			_15313_stmts = jule::alloc_for_append(_15313_stmts,1);_15313_stmts.__push(jule::new_ptr<_1b654d3cb_Stmt>(_1b654d3cb_Stmt(_15618_stmt,_15624_terminated)));
		}
	_iter_next_1a8c319ac:;
	}
	_iter_end_1a8c319ac:;
	return _15313_stmts;
}



inline jule::Ptr<_1b655a5c5_CallData> _1b655a938_get_call_data(jule::Slice<jule::Ptr<_1d0747985_Token>>& _4423_tokens) {
	jule::Ptr<_1b655a5c5_CallData> _4513_data = jule::new_ptr<_1b655a5c5_CallData>();
	std::tie(_4513_data.get()._field_expr_tokens,_4513_data.get()._field_args_tokens) = _1b6568c43_range_last(_4423_tokens);
	if ((_4513_data.get()._field_expr_tokens.len() == 0LL)) {
		return _4513_data;
	}
	jule::Ptr<_1d0747985_Token> _529_token = _4513_data.get()._field_expr_tokens[(_4513_data.get()._field_expr_tokens.len() - 1LL)];
	if ((_529_token.get()._field_id == static_cast<jule::U64>(3LLU)) && (_529_token.get()._field_kind == jule::Str("]", 1))) {
		std::tie(_4513_data.get()._field_expr_tokens,_4513_data.get()._field_generics_tokens) = _1b6568c43_range_last(_4513_data.get()._field_expr_tokens);
	}
	return _4513_data;
}



inline jule::Slice<jule::Ptr<_1d0747985_Token>> _1b655ac24_get_block_expr(jule::Slice<jule::Ptr<_1d0747985_Token>>& _6024_tokens) {
	jule::I64 _6113_brace_n = 0LL;
	jule::I64 _6213_skip_to_next_brace_close = 0LL;
	{
		auto &expr = _6024_tokens;
		auto it = expr.begin();
		_iter_begin_1a8c3630d:;
		if (it != expr.end()) {
			jule::I64 _1a8c370bc_i = it - expr.begin();
			jule::Ptr<_1d0747985_Token> _1a8c3730e_tok = *it;
			{
				{
					auto &_match_expr{ _1a8c3730e_tok.get()._field_id };
					
					if (_match_expr == static_cast<jule::U64>(16LLU) || _match_expr == static_cast<jule::U64>(17LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
						_case_begin_1a8c37aa1:;
						{
							(_6213_skip_to_next_brace_close)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(3LLU)) {
						_case_begin_1a8c37b17:;
						{
							{
								auto &_match_expr{ _1a8c3730e_tok.get()._field_kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_1a8c38e15:;
									{
										if ((_6113_brace_n > 0LL) || (_6213_skip_to_next_brace_close > 0LL)) {
											if ((_6213_skip_to_next_brace_close > 0LL)) {
												(_6213_skip_to_next_brace_close)--;
											}
											(_6113_brace_n)++;
											goto _match_end_1a8c38a91;
										}
										return _6024_tokens.slice(0LL,_1a8c370bc_i);
									}
								}
								else if (_match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_1a8c39168:;
									{
										(_6113_brace_n)++;
									}
								}
								else {
									_case_begin_1a8c38b18:;
									{
										(_6113_brace_n)--;
									}
								}
								_match_end_1a8c38a91:;
							}
						}
					}
					_match_end_1a8c37a29:;
				}
			}
			_iter_next_1a8c3630d:;
			++it;
			_1a8c370bc_i++;
			goto _iter_begin_1a8c3630d;
		}
		_iter_end_1a8c3630d:;
	}
	return nullptr;
}



inline std::tuple<jule::Slice<jule::Ptr<_1d0747985_Token>>,jule::Slice<jule::Ptr<_1d0747985_Token>>> _1b655aebb_split_colon(jule::Slice<jule::Ptr<_1d0747985_Token>>& _9121_tokens) {
	jule::I64 _9213_range_n = 0LL;
	{
		auto &expr = _9121_tokens;
		auto it = expr.begin();
		_iter_begin_1a8c38893:;
		if (it != expr.end()) {
			jule::I64 _1a8c374eb_i = it - expr.begin();
			jule::Ptr<_1d0747985_Token> _1a8c39234_token = *it;
			{
				{
					auto &_match_expr{ _1a8c39234_token.get()._field_id };
					
					if (_match_expr == static_cast<jule::U64>(3LLU)) {
						_case_begin_1a8c3acd5:;
						{
							{
								auto &_match_expr{ _1a8c39234_token.get()._field_kind };
								
								if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_1a8c3b9c8:;
									{
										(_9213_range_n)++;
										goto _iter_next_1a8c38893;
									}
								}
								else {
									_case_begin_1a8c3b6cb:;
									{
										(_9213_range_n)--;
									}
								}
								_match_end_1a8c3b621:;
							}
						}
					}
					else if (_match_expr == static_cast<jule::U64>(11LLU)) {
						_case_begin_1a8c3ad4b:;
						{
							if ((_9213_range_n < 1LL)) {
								jule::Slice<jule::Ptr<_1d0747985_Token>> _10725_l = _9121_tokens.slice(0LL,_1a8c374eb_i);
								jule::Slice<jule::Ptr<_1d0747985_Token>> _10825_r = _9121_tokens.slice((_1a8c374eb_i + 1LL));
								return std::make_tuple(_10725_l,_10825_r);
							}
						}
					}
					_match_end_1a8c3ac5d:;
				}
			}
			_iter_next_1a8c38893:;
			++it;
			_1a8c374eb_i++;
			goto _iter_begin_1a8c38893;
		}
		_iter_end_1a8c38893:;
	}
	return std::make_tuple(nullptr,nullptr);
}



inline jule::I64 _1b655b2a7_find_lowest_prec_op(jule::Slice<jule::Ptr<_1d0747985_Token>>& _11825_tokens) {
	jule::U8 _12313_prec = 255LLU;
	jule::I64 _12413_prec_pos = -1LL;
	jule::I64 _12613_brace_n = 0LL;
	jule::Bool _12713_skip_to_next_brace_open = false;
	{
		auto &expr = _11825_tokens;
		auto it = expr.begin();
		_iter_begin_1a8c3ddb5:;
		if (it != expr.end()) {
			jule::I64 _1a8c3dee7_i = it - expr.begin();
			jule::Ptr<_1d0747985_Token> &_1a8c3e228_token = *it;
			{
				{
					
					if (_1a8c3e228_token.get()._field_id == static_cast<jule::U64>(3LLU)) {
						_case_begin_1a8c3e8ee:;
						{
							{
								auto &_match_expr{ _1a8c3e228_token.get()._field_kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_1a8c40b31:;
									{
										_12713_skip_to_next_brace_open=false;
										goto _case_begin_1a8c40d62;
									}
								}
								else if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("[", 1)) {
									_case_begin_1a8c40d62:;
									{
										(_12613_brace_n)++;
									}
								}
								else {
									_case_begin_1a8c40614:;
									{
										(_12613_brace_n)--;
									}
								}
								_match_end_1a8c407ac:;
							}
							goto _iter_next_1a8c3ddb5;
						}
					}
					else if (_12713_skip_to_next_brace_open) {
						_case_begin_1a8c3e976:;
						{
							goto _iter_next_1a8c3ddb5;
						}
					}
					else if (_1a8c3e228_token.get()._field_id == static_cast<jule::U64>(16LLU)) {
						_case_begin_1a8c3e9ed:;
						{
							_12713_skip_to_next_brace_open=true;
							goto _iter_next_1a8c3ddb5;
						}
					}
					else if ((_1a8c3dee7_i == 0LL)) {
						_case_begin_1a8c3ea75:;
						{
							goto _iter_next_1a8c3ddb5;
						}
					}
					else if (_1a8c3e228_token.get()._field_id != static_cast<jule::U64>(7LLU)) {
						_case_begin_1a8c3eaec:;
						{
							goto _iter_next_1a8c3ddb5;
						}
					}
					else if ((_12613_brace_n > 0LL)) {
						_case_begin_1a8c3eb74:;
						{
							goto _iter_next_1a8c3ddb5;
						}
					}
					_match_end_1a8c3e79a:;
				}
				jule::Ptr<_1d0747985_Token> _15513_left = _11825_tokens[(_1a8c3dee7_i - 1LL)];
				if ((_15513_left.get()._field_id == static_cast<jule::U64>(7LLU)) || (_15513_left.get()._field_id == static_cast<jule::U64>(11LLU))) {
					goto _iter_next_1a8c3ddb5;
				}
				if (((_1a8c3dee7_i > 1LL) && (_15513_left.get()._field_id == static_cast<jule::U64>(3LLU))) && (_15513_left.get()._field_kind == jule::Str("]", 1))) {
					jule::Ptr<_1d0747985_Token> _16317_lleft = _11825_tokens[(_1a8c3dee7_i - 2LL)];
					if ((_16317_lleft.get()._field_id == static_cast<jule::U64>(3LLU)) && (_16317_lleft.get()._field_kind == jule::Str("[", 1))) {
						if ((_1a8c3e228_token.get()._field_kind == jule::Str("&", 1)) || (_1a8c3e228_token.get()._field_kind == jule::Str("*", 1))) {
							goto _iter_next_1a8c3ddb5;
						}
					}
				}
				jule::U8 _17213_p = _1d0747d70_prec(_1a8c3e228_token.ptr());
				if ((_17213_p != 0LLU) && (_17213_p <= _12313_prec)) {
					_12313_prec=_17213_p;
					_12413_prec_pos=_1a8c3dee7_i;
				}
			}
			_iter_next_1a8c3ddb5:;
			++it;
			_1a8c3dee7_i++;
			goto _iter_begin_1a8c3ddb5;
		}
		_iter_end_1a8c3ddb5:;
	}
	return _12413_prec_pos;
}



inline jule::Ptr<_1d075c00a_IdentExpr> _1b655b54e_build_ident_expr(jule::Ptr<_1d0747985_Token>& _18226_token) {
	return jule::new_ptr<_1d075c00a_IdentExpr>(_1d075c00a_IdentExpr(_18226_token,_18226_token.get()._field_kind,false));
}



inline std::tuple<jule::Slice<jule::Ptr<_1d0747985_Token>>,jule::I64> _1b655b7e6_get_range_expr_tokens(jule::Slice<jule::Ptr<_1d0747985_Token>>& _19031_tokens) {
	jule::I64 _19113_range_n = 0LL;
	jule::I64 _19213_i = (_19031_tokens.len() - 1LL);
	for (; (_19213_i >= 0LL); (_19213_i)--) {
		{
			jule::Ptr<_1d0747985_Token> _19413_tok = _19031_tokens[_19213_i];
			if (_19413_tok.get()._field_id == static_cast<jule::U64>(3LLU)) {
				{
					auto &_match_expr{ _19413_tok.get()._field_kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1a8c48cb0:;
						{
							(_19113_range_n)++;
						}
					}
					else {
						_case_begin_1a8c486a5:;
						{
							(_19113_range_n)--;
						}
					}
					_match_end_1a8c4895d:;
				}
			}
			if ((_19113_range_n == 0LL)) {
				return std::make_tuple(_19031_tokens.slice(0LL,_19213_i),_19113_range_n);
			}
		}
	_iter_next_1a8c42d31:;
	}
	_iter_end_1a8c42d31:;
	return std::make_tuple(nullptr,_19113_range_n);
}



inline jule::Bool _1b65671e7_check_assign_tokens(jule::Slice<jule::Ptr<_1d0747985_Token>>& _1625_tokens) {
	if ((_1625_tokens.len() == 0LL) || (!(_1d074be51_is_assign(_1625_tokens[0LL].get()._field_id)))) {
		return false;
	}
	jule::I64 _2013_brace_n = 0LL;
	{
		auto &expr = _1625_tokens;
		auto it = expr.begin();
		_iter_begin_1a8c4ad06:;
		if (it != expr.end()) {
			jule::Ptr<_1d0747985_Token> &_1a8c4ae38_t = *it;
			{
				if (_1a8c4ae38_t.get()._field_id == static_cast<jule::U64>(3LLU)) {
					{
						auto &_match_expr{ _1a8c4ae38_t.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1a8c4bda1:;
							{
								(_2013_brace_n)++;
							}
						}
						else {
							_case_begin_1a8c4b796:;
							{
								(_2013_brace_n)--;
							}
						}
						_match_end_1a8c4ba4e:;
					}
				}
				if ((_2013_brace_n < 0LL)) {
					return false;
				} else if ((_2013_brace_n > 0LL)) {
					goto _iter_next_1a8c4ad06;
				} else if ((_1a8c4ae38_t.get()._field_id == static_cast<jule::U64>(7LLU)) && _1d074c490_is_assign_op(_1a8c4ae38_t.get()._field_kind)) {
					return true;
				}
			}
			_iter_next_1a8c4ad06:;
			++it;
			goto _iter_begin_1a8c4ad06;
		}
		_iter_end_1a8c4ad06:;
	}
	return false;
}



inline _1d0019224_Log _1b6568506_make_err(jule::I64 _4913_row,jule::I64 _4923_col,jule::Ptr<_1d074cd75_File>& _4934_f,jule::Str _4944_fmt,jule::Slice<jule::Any> _4957_args) {
	return _1d0019224_Log(static_cast<jule::I64>(1LL),_4913_row,_4923_col,_4934_f.get()._field_path,_1d0019664_logf(_4944_fmt,_4957_args),jule::Str(),jule::Str());
}



inline jule::Slice<jule::Ptr<_1d0747985_Token>> _1b656899b_range(jule::I64& _6815_i,jule::Str _6823_open,jule::Str _6840_close,jule::Slice<jule::Ptr<_1d0747985_Token>>& _6863_tokens) {
	if (_6815_i >= static_cast<jule::I64>(static_cast<jule::I64>(_6863_tokens.len()))) {
		return nullptr;
	}
	jule::Ptr<_1d0747985_Token> _739_tok = _6863_tokens[_6815_i];
	if ((_739_tok.get()._field_id != static_cast<jule::U64>(3LLU)) || (_739_tok.get()._field_kind != _6823_open)) {
		return nullptr;
	}
	(_6815_i)++;
	jule::I64 _7913_range_n = 1LL;
	jule::I64 _809_start = _6815_i;
	for (; (_7913_range_n != 0LL) && (_6815_i < static_cast<jule::I64>(static_cast<jule::I64>(_6863_tokens.len()))); (_6815_i)++) {
		{
			jule::Ptr<_1d0747985_Token> _8213_token = _6863_tokens[_6815_i];
			if (_8213_token.get()._field_id == static_cast<jule::U64>(3LLU)) {
				{
					auto &_match_expr{ _8213_token.get()._field_kind };
					
					if (_match_expr == _6823_open) {
						_case_begin_1a8c52769:;
						{
							(_7913_range_n)++;
						}
					}
					else if (_match_expr == _6840_close) {
						_case_begin_1a8c527d0:;
						{
							(_7913_range_n)--;
						}
					}
					_match_end_1a8c526e2:;
				}
			}
		}
	_iter_next_1a8c518cd:;
	}
	_iter_end_1a8c518cd:;
	return _6863_tokens.slice(_809_start,(_6815_i - 1LL));
}



inline std::tuple<jule::Slice<jule::Ptr<_1d0747985_Token>>,jule::Slice<jule::Ptr<_1d0747985_Token>>> _1b6568c43_range_last(jule::Slice<jule::Ptr<_1d0747985_Token>>& _10320_tokens) {
	jule::Slice<jule::Ptr<_1d0747985_Token>> _10340_cutted = jule::Slice<jule::Ptr<_1d0747985_Token>>();
	jule::Slice<jule::Ptr<_1d0747985_Token>> _10358_cut = jule::Slice<jule::Ptr<_1d0747985_Token>>();
	if ((_10320_tokens.len() == 0LL)) {
		_10340_cutted = _10320_tokens;
		_10358_cut = nullptr;
		return std::make_tuple(_10340_cutted,_10358_cut);
	} else if (_10320_tokens[(_10320_tokens.len() - 1LL)].get()._field_id != static_cast<jule::U64>(3LLU)) {
		_10340_cutted = _10320_tokens;
		_10358_cut = nullptr;
		return std::make_tuple(_10340_cutted,_10358_cut);
	}
	jule::I64 _11013_brace_n = 0LL;
	jule::I64 _11113_i = (_10320_tokens.len() - 1LL);
	for (; (_11113_i >= 0LL); (_11113_i)--) {
		{
			jule::Ptr<_1d0747985_Token> _11313_token = _10320_tokens[_11113_i];
			if (_11313_token.get()._field_id == static_cast<jule::U64>(3LLU)) {
				{
					auto &_match_expr{ _11313_token.get()._field_kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1a8c5687d:;
						{
							(_11013_brace_n)++;
							goto _iter_next_1a8c535d3;
						}
					}
					else {
						_case_begin_1a8c56273:;
						{
							(_11013_brace_n)--;
						}
					}
					_match_end_1a8c5652b:;
				}
			}
			if ((_11013_brace_n == 0LL)) {
				_10340_cutted = _10320_tokens.slice(0LL,_11113_i);
				_10358_cut = _10320_tokens.slice(_11113_i);
				return std::make_tuple(_10340_cutted,_10358_cut);
			}
		}
	_iter_next_1a8c535d3:;
	}
	_iter_end_1a8c535d3:;
	_10340_cutted = _10320_tokens;
	_10358_cut = nullptr;
	return std::make_tuple(_10340_cutted,_10358_cut);
}



inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_1d0747985_Token>>>,jule::Slice<_1d0019224_Log>> _1b6569172_parts(jule::Slice<jule::Ptr<_1d0747985_Token>>& _14015_tokens,jule::U64 _14033_id,jule::Bool _14046_expr_must) {
	if ((_14015_tokens.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	}
	jule::Slice<jule::Slice<jule::Ptr<_1d0747985_Token>>> _14513_parts = nullptr;
	jule::Slice<_1d0019224_Log> _14613_errors = nullptr;
	jule::I64 _14813_range_n = 0LL;
	jule::I64 _14913_last = 0LL;
	{
		auto &expr = _14015_tokens;
		auto it = expr.begin();
		_iter_begin_1a8c59672:;
		if (it != expr.end()) {
			jule::I64 _1a8c5982b_i = it - expr.begin();
			jule::Ptr<_1d0747985_Token> _1a8c59a6d_token = *it;
			{
				if (_1a8c59a6d_token.get()._field_id == static_cast<jule::U64>(3LLU)) {
					{
						auto &_match_expr{ _1a8c59a6d_token.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1a8c5a9a3:;
							{
								(_14813_range_n)++;
								goto _iter_next_1a8c59672;
							}
						}
						else {
							_case_begin_1a8c5a398:;
							{
								(_14813_range_n)--;
							}
						}
						_match_end_1a8c5a651:;
					}
				}
				if ((_14813_range_n > 0LL)) {
					goto _iter_next_1a8c59672;
				}
				if (_1a8c59a6d_token.get()._field_id == _14033_id) {
					if (_14046_expr_must && ((_1a8c5982b_i - _14913_last) <= 0LL)) {
						_1d0019224_Log _16921_err = _1b6568506_make_err(_1a8c59a6d_token.get()._field_row,_1a8c59a6d_token.get()._field_column,_1a8c59a6d_token.get()._field_file,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
						_14613_errors = jule::alloc_for_append(_14613_errors,1);_14613_errors.__push(_16921_err);
					}
					_14513_parts = jule::alloc_for_append(_14513_parts,1);_14513_parts.__push(_14015_tokens.slice(_14913_last,_1a8c5982b_i));
					_14913_last=static_cast<jule::I64>((_1a8c5982b_i + 1LL));
				}
			}
			_iter_next_1a8c59672:;
			++it;
			_1a8c5982b_i++;
			goto _iter_begin_1a8c59672;
		}
		_iter_end_1a8c59672:;
	}
	if (_14913_last < static_cast<jule::I64>(static_cast<jule::I64>(_14015_tokens.len()))) {
		_14513_parts = jule::alloc_for_append(_14513_parts,1);_14513_parts.__push(_14015_tokens.slice(_14913_last));
	} else if ((!(_14046_expr_must))) {
		_14513_parts = jule::alloc_for_append(_14513_parts,1);_14513_parts.__push(jule::Slice<jule::Ptr<_1d0747985_Token>>());
	}
	return std::make_tuple(_14513_parts,_14613_errors);
}



inline jule::Str _1b656945d_get_close_kind_of_brace(jule::Str _18628_left) {
	{
		auto &_match_expr{ _18628_left };
		
		if (_match_expr == jule::Str(")", 1)) {
			_case_begin_1a8c5e743:;
			{
				return jule::Str("(", 1);
			}
		}
		else if (_match_expr == jule::Str("}", 1)) {
			_case_begin_1a8c5e7a9:;
			{
				return jule::Str("{", 1);
			}
		}
		else if (_match_expr == jule::Str("]", 1)) {
			_case_begin_1a8c5e8a8:;
			{
				return jule::Str("[", 1);
			}
		}
		else {
			_case_begin_1a8c596b6:;
			{
				return jule::Str();
			}
		}
		_match_end_1a8c5e38b:;
	}
}



inline _1d0019224_Log _1b6569837_compiler_err(jule::Ptr<_1d0747985_Token>& _19918_token,jule::Str& _19934_fmt,jule::Slice<jule::Any> _19947_args) {
	return _1d0019224_Log(static_cast<jule::I64>(1LL),_19918_token.get()._field_row,_19918_token.get()._field_column,_19918_token.get()._field_file.get()._field_path,_1d0019664_logf(_19934_fmt,_19947_args),_1d074e052_get_row(_19918_token.get()._field_file.ptr(), _19918_token.get()._field_row),jule::Str());
}



inline void _1b6569b89_push_suggestion(_1d0019224_Log* _21031_log,jule::Str _21042_fmt,jule::Slice<jule::Any> _21055_args) {
	_21031_log->_field_suggestion=_1d0019664_logf(_21042_fmt,_21055_args);
}



inline jule::Str _1b6569eb9_tokstoa(jule::Slice<jule::Ptr<_1d0747985_Token>>& _21413_tokens) {
	jule::Str _21513_s = jule::Str();
	{
		auto &expr = _21413_tokens;
		auto it = expr.begin();
		_iter_begin_1a8c62955:;
		if (it != expr.end()) {
			jule::Ptr<_1d0747985_Token> &_1a8c629ee_token = *it;
			{
				_21513_s+=_1a8c629ee_token.get()._field_kind;
			}
			_iter_next_1a8c62955:;
			++it;
			goto _iter_begin_1a8c62955;
		}
		_iter_end_1a8c62955:;
	}
	return _21513_s;
}



inline jule::Ptr<_1d0759c1c_TypeDecl> _1b657a0d9_build_void_type(void) {
	return jule::new_ptr<_1d0759c1c_TypeDecl>();
}



inline jule::Ptr<_1d0759c1c_TypeDecl> _1b657a35e_build_prim_type(jule::Ptr<_1d0747985_Token> _2224_t) {
	return jule::new_ptr<_1d0759c1c_TypeDecl>(_1d0759c1c_TypeDecl(_2224_t,jule::Any(jule::Any(jule::new_ptr<_1d0759e09_IdentTypeDecl>(_1d0759e09_IdentTypeDecl(_2224_t,_2224_t.get()._field_kind,jule::Bool(),jule::Slice<jule::Ptr<_1d0759c1c_TypeDecl>>()))))));
}



inline std::tuple<jule::Slice<jule::Ptr<_1d0747985_Token>>,jule::I64> _1b657a6a0_split_map_range(jule::Slice<jule::Ptr<_1d0747985_Token>>& _3525_tokens,jule::I64& _3548_i) {
	jule::Slice<jule::Ptr<_1d0747985_Token>> _3558_range_tokens = jule::Slice<jule::Ptr<_1d0747985_Token>>();
	jule::I64 _3582_colon = jule::I64();
	_3582_colon=-1LL;
	jule::I64 _3713_range_n = 0LL;
	jule::I64 _389_start = _3548_i;
	for (; _3548_i < static_cast<jule::I64>(static_cast<jule::I64>(_3525_tokens.len())); (_3548_i)++) {
		{
			jule::Ptr<_1d0747985_Token> _4013_token = _3525_tokens[_3548_i];
			if (_4013_token.get()._field_id == static_cast<jule::U64>(3LLU)) {
				{
					auto &_match_expr{ _4013_token.get()._field_kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1a8c65c77:;
						{
							(_3713_range_n)++;
							goto _iter_next_1a8c644b2;
						}
					}
					else {
						_case_begin_1a8c656a0:;
						{
							(_3713_range_n)--;
						}
					}
					_match_end_1a8c65925:;
				}
			}
			if ((_3713_range_n == 0LL)) {
				if ((_389_start + 1LL) > _3548_i) {
					return std::make_tuple(_3558_range_tokens,_3582_colon);
				}
				_3558_range_tokens=_3525_tokens.slice((_389_start + 1LL),_3548_i);
				goto _iter_end_1a8c644b2;
			} else if ((_3713_range_n != 1LL)) {
				goto _iter_next_1a8c644b2;
			}
			if ((_3582_colon == -1LL) && (_4013_token.get()._field_id == static_cast<jule::U64>(11LLU))) {
				_3582_colon=static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(_3548_i - _389_start)) - 1LL));
			}
		}
	_iter_next_1a8c644b2:;
	}
	_iter_end_1a8c644b2:;
	return std::make_tuple(_3558_range_tokens,_3582_colon);
}



inline jule::I64 _1a7432687_leading_zeros64(jule::U64 _6124_x) {
	return static_cast<jule::I64>(64LL - static_cast<jule::I64>(static_cast<jule::I64>(_1a7438eb8_len64(_6124_x))));
}



inline jule::I64 _1a74330d3_trailing_zeros(jule::U64 _8323_x) {
	
	return static_cast<jule::I64>(_1a7433be9_trailing_zeros64(static_cast<jule::U64>(static_cast<jule::U64>(_8323_x))));
}



inline jule::I64 _1a7433952_trailing_zeros32(jule::U32 _10525_x) {
	if ((_10525_x == 0LLU)) {
		return 32LL;
	}
	return static_cast<jule::I64>(static_cast<jule::I64>(_1a7432a50_DE_BRUIJN32_TAB[static_cast<jule::I64>((((_10525_x & static_cast<jule::U32>(static_cast<jule::U32>((-(_10525_x))))) * 125613361LLU) >> 27LLU))]));
}



inline jule::I64 _1a7433be9_trailing_zeros64(jule::U64 _11425_x) {
	if ((_11425_x == 0LLU)) {
		return 64LL;
	}
	return static_cast<jule::I64>(static_cast<jule::I64>(_1a7432d80_DE_BRUIJN64_TAB[static_cast<jule::I64>((((_11425_x & static_cast<jule::U64>(static_cast<jule::U64>((-(_11425_x))))) * 285870213051353865LLU) >> 58LLU))]));
}



inline jule::I64 _1a7438c21_len32(jule::U32 _35218_x) {
	jule::I64 _35228_n = jule::I64();
	if ((_35218_x >= 65536LLU)) {
		_35218_x>>=16LLU;
		_35228_n=16LL;
	}
	if ((_35218_x >= 256LLU)) {
		_35218_x>>=8LLU;
		_35228_n+=8LL;
	}
	_35228_n = static_cast<jule::I64>(_35228_n + static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_35218_x)]))));
	return _35228_n;
}



inline jule::I64 _1a7438eb8_len64(jule::U64 _36618_x) {
	jule::I64 _36628_n = jule::I64();
	if ((_36618_x >= 4294967296LLU)) {
		_36618_x>>=32LLU;
		_36628_n=32LL;
	}
	if ((_36618_x >= 65536LLU)) {
		_36618_x>>=16LLU;
		_36628_n+=16LL;
	}
	if ((_36618_x >= 256LLU)) {
		_36618_x>>=8LLU;
		_36628_n+=8LL;
	}
	_36628_n = static_cast<jule::I64>(_36628_n + static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_36618_x)]))));
	return _36628_n;
}



inline std::tuple<jule::U64,jule::U64> _1a7439b78_add64(jule::U64 _41514_x,jule::U64 _41522_y,jule::U64 _41530_carry) {
	jule::U64 _41544_sum = jule::U64();
	jule::U64 _41554_carryout = jule::U64();
	_41544_sum=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_41514_x + _41522_y)) + _41530_carry);
	_41554_carryout=static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_41514_x & _41522_y))) | static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_41514_x | _41522_y))) & static_cast<jule::U64>(static_cast<jule::U64>((~(_41544_sum)))))))))) >> 63LLU));
	return std::make_tuple(_41544_sum,_41554_carryout);
}



inline std::tuple<jule::U64,jule::U64> _1a743b30b_mul64(jule::U64 _49914_x,jule::U64 _49922_y) {
	jule::U64 _49932_hi = jule::U64();
	jule::U64 _49941_lo = jule::U64();
	
	jule::U64 _5019_x0 = (_49914_x & 4294967295LLU);
	jule::U64 _5029_x1 = (_49914_x >> 32LLU);
	jule::U64 _5039_y0 = (_49922_y & 4294967295LLU);
	jule::U64 _5049_y1 = (_49922_y >> 32LLU);
	jule::U64 _5059_w0 = _5019_x0 * _5039_y0;
	jule::U64 _5069_t = (_5029_x1 * _5039_y0) + static_cast<jule::U64>(static_cast<jule::U64>((_5059_w0 >> 32LLU)));
	jule::U64 _50713_w1 = (_5069_t & 4294967295LLU);
	jule::U64 _5089_w2 = (_5069_t >> 32LLU);
	_50713_w1+=static_cast<jule::U64>(_5019_x0 * _5049_y1);
	_49932_hi=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_5029_x1 * _5049_y1)) + _5089_w2)) + static_cast<jule::U64>(static_cast<jule::U64>((_50713_w1 >> 32LLU))));
	_49941_lo=static_cast<jule::U64>(_49914_x * _49922_y);
	return std::make_tuple(_49932_hi,_49941_lo);
}



inline jule::U32 _1a7355225_f32_bits(jule::F32 _4117_f) {
	return (*(((jule::U32*)((&(_4117_f))))));
}



inline jule::F32 _1a7355511_f32_from_bits(jule::U32 _4722_b) {
	return (*(((jule::F32*)((&(_4722_b))))));
}



inline jule::U64 _1a73557a8_f64_bits(jule::F64 _5217_f) {
	return (*(((jule::U64*)((&(_5217_f))))));
}



inline jule::F64 _1a7355a94_f64_from_bits(jule::U64 _5822_b) {
	return (*(((jule::F64*)((&(_5822_b))))));
}



inline std::tuple<jule::F64,jule::I64> _1a7357a0d_frexp(jule::F64 _4718_f) {
	jule::F64 _4728_frac = jule::F64();
	jule::I64 _4739_exp = jule::I64();
	{
		
		if ((_4718_f == 0LL)) {
			_case_begin_1a8d6bce5:;
			{
				_4728_frac = _4718_f;
				_4739_exp = 0LL;
				return std::make_tuple(_4728_frac,_4739_exp);
			}
		}
		else if (_1a73a4d8a_is_inf(_4718_f,0LL) || _1a73c96a6_is_nan(_4718_f)) {
			_case_begin_1a8d6bd6c:;
			{
				_4728_frac = _4718_f;
				_4739_exp = 0LL;
				return std::make_tuple(_4728_frac,_4739_exp);
			}
		}
		_match_end_1a8d6bc07:;
	}
	std::tie(_4718_f,_4739_exp) = _1a73bb28b_normalize(_4718_f);
	jule::U64 _5613_x = _1a73557a8_f64_bits(_4718_f);
	_4739_exp+=static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(((_5613_x >> 52LLU) & 2047LLU)))) - 1023LL))) + 1LL));
	_5613_x=static_cast<jule::U64>((_5613_x & 9227875636482146303LLU));
	_5613_x|=4602678819172646912LLU;
	_4728_frac=static_cast<jule::F64>(_1a7355a94_f64_from_bits(_5613_x));
	return std::make_tuple(_4728_frac,_4739_exp);
}



inline jule::F64 _1a74001d2_nan(void) {
	return static_cast<jule::F64>(_1a7355a94_f64_from_bits(9221120237041090561LLU));
}



inline jule::Bool _1a73c96a6_is_nan(jule::F64 _5215_f) {
	return _5215_f != _5215_f;
}



inline jule::F64 _1a73a3dab_inf(jule::I64 _6112_sign) {
	if ((_6112_sign >= 0LL)) {
		return static_cast<jule::F64>(_1a7355a94_f64_from_bits(9218868437227405312LLU));
	}
	return static_cast<jule::F64>(_1a7355a94_f64_from_bits(18442240474082181120LLU));
}



inline jule::Bool _1a73a4d8a_is_inf(jule::F64 _7215_f,jule::I64 _7223_sign) {
	return ((_7223_sign >= 0LL) && (_7215_f > jule::MAX_F64)) || ((_7223_sign <= 0LL) && (_7215_f < jule::MIN_F64));
}



inline std::tuple<jule::F64,jule::I64> _1a73bb28b_normalize(jule::F64 _8214_x) {
	jule::F64 _8224_y = jule::F64();
	jule::I64 _8232_exp = jule::I64();
	
	if ((_1a74403ba_abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		_8224_y = static_cast<jule::F64>((_8214_x * 4503599627370496LL));
		_8232_exp = -52LL;
		return std::make_tuple(_8224_y,_8232_exp);
	}
	_8224_y = _8214_x;
	_8232_exp = 0LL;
	return std::make_tuple(_8224_y,_8232_exp);
}



inline jule::F64 _1a743ece3_log(jule::F64 _11112_x) {
	
	
	
	
	
	
	
	
	
	{
		
		if (_1a73c96a6_is_nan(_11112_x) || _1a73a4d8a_is_inf(_11112_x,1LL)) {
			_case_begin_1a8db5b0d:;
			{
				return _11112_x;
			}
		}
		else if ((_11112_x < 0LL)) {
			_case_begin_1a8db5b85:;
			{
				return static_cast<jule::F64>(_1a74001d2_nan());
			}
		}
		else if ((_11112_x == 0LL)) {
			_case_begin_1a8db5c0c:;
			{
				return static_cast<jule::F64>(_1a73a3dab_inf(-1LL));
			}
		}
		_match_end_1a8db5a31:;
	}
	jule::F64 _13314_f1;
	jule::I64 _13322_ki;
	std::tie(_13314_f1,_13322_ki) = _1a7357a0d_frexp(_11112_x);
	if ((_13314_f1 < 0.7071067811865476)) {
		_13314_f1*=2LL;
		(_13322_ki)--;
	}
	jule::F64 _1389_f = (_13314_f1 - 1LL);
	jule::F64 _1399_k = static_cast<jule::F64>(_13322_ki);
	jule::F64 _1429_s = jule::div(_1389_f,static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(2LL + _1389_f))));
	jule::F64 _1439_s2 = _1429_s * _1429_s;
	jule::F64 _1449_s4 = _1439_s2 * _1439_s2;
	jule::F64 _1459_t1 = _1439_s2 * static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(0.6666666666666735 + static_cast<jule::F64>(static_cast<jule::F64>(_1449_s4 * static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(0.2857142874366239 + static_cast<jule::F64>(static_cast<jule::F64>(_1449_s4 * static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(0.1818357216161805 + static_cast<jule::F64>(static_cast<jule::F64>((_1449_s4 * 0.14798198605116586))))))))))))))));
	jule::F64 _1469_t2 = _1449_s4 * static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(0.3999999999940942 + static_cast<jule::F64>(static_cast<jule::F64>(_1449_s4 * static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(0.22222198432149784 + static_cast<jule::F64>(static_cast<jule::F64>((_1449_s4 * 0.15313837699209373)))))))))));
	jule::F64 _1479_R = _1459_t1 + _1469_t2;
	jule::F64 _1489_hfsq = (0.5 * _1389_f) * _1389_f;
	return static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>((_1399_k * 0.6931471803691238))) - static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_1489_hfsq - static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_1429_s * static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_1489_hfsq + _1479_R))))) + static_cast<jule::F64>(static_cast<jule::F64>((_1399_k * 0.00000000019082149292705877))))))))) - _1389_f))));
}



inline jule::F64 _1a74403ba_abs(jule::F64 _4312_x) {
	return static_cast<jule::F64>(_1a7355a94_f64_from_bits(static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(_1a73557a8_f64_bits(_4312_x))) & 9223372036854775807LLU))));
}



inline std::tuple<jule::F64,jule::F64> _1a7441bc4_modf(jule::F64 _4413_f) {
	jule::F64 _4423_integer = jule::F64();
	jule::F64 _4437_frac = jule::F64();
	
	jule::F64 _469_abs_f = _1a74403ba_abs(_4413_f);
	jule::F64 _4713_i = 0LL;
	if ((_469_abs_f > 4503599627370496LL)) {
		_4713_i=_4413_f;
	} else {
		_4713_i=static_cast<jule::F64>((_469_abs_f + 4503599627370496LL));
		_4713_i-=4503599627370496LL;
		while (_4713_i > _469_abs_f) {
			{
				(_4713_i)--;
			}
		_iter_next_1a8e3bb84:;
		}
		_iter_end_1a8e3bb84:;
		if ((_4413_f < 0LL)) {
			_4713_i=static_cast<jule::F64>((-(_4713_i)));
		}
	}
	_4423_integer = _4713_i;
	_4437_frac = static_cast<jule::F64>(_4413_f - _4713_i);
	return std::make_tuple(_4423_integer,_4437_frac);
}



inline jule::F64 _1a74420e2_log2(jule::F64 _4413_x) {
	jule::F64 _4510_frac;
	jule::I64 _4516_exp;
	std::tie(_4510_frac,_4516_exp) = _1a7357a0d_frexp(_4413_x);
	if ((_4510_frac == 0.5)) {
		return static_cast<jule::F64>(static_cast<jule::F64>((_4516_exp - 1LL)));
	}
	return static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>((static_cast<jule::F64>(static_cast<jule::F64>(_1a743ece3_log(_4510_frac))) * 1.4426950408889634))) + static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_4516_exp))));
}



inline jule::Str _1b774e312_fmt_float(jule::F64 _7818_f,jule::U8 _7826_fmt,jule::I64 _7837_prec,jule::I64 _7848_bit_size) {
	return static_cast<jule::Str>(_1a70d7b9a_generic_ftoa(jule::Slice<jule::U8>::alloc(0LL,static_cast<jule::I64>(_1a7238713_max(static_cast<jule::I64>((_7837_prec + 4LL)),24LL))),_7818_f,_7826_fmt,_7837_prec,_7848_bit_size));
}



inline jule::Slice<jule::U8> _1a70d7b9a_generic_ftoa(jule::Slice<jule::U8> _8221_dst,jule::F64 _8234_val,jule::U8 _8244_fmt,jule::I64 _8259_prec,jule::I64 _8270_bit_size) {
	jule::U64 _8313_bits = 0LLU;
	jule::Ptr<_1a71e9c9b_FloatInfo> _8413_flt = nullptr;
	{
		auto &_match_expr{ _8270_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_1a91a4605:;
			{
				_8313_bits=static_cast<jule::U64>(static_cast<jule::U64>(_1a7355225_f32_bits(static_cast<jule::F32>(static_cast<jule::F32>(_8234_val)))));
				_8413_flt=((jule::Ptr<_1a71e9c9b_FloatInfo>)((&(_1b774e796_F32_INFO))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1a91a44b2:;
			{
				_8313_bits=static_cast<jule::U64>(_1a73557a8_f64_bits(_8234_val));
				_8413_flt=((jule::Ptr<_1a71e9c9b_FloatInfo>)((&(_1a70906be_F64_INFO))));
			}
		}
		else {
			_case_begin_1a91a3cb9:;
			{
				jule::panic(jule::Str("std::conv: illegal bit_size", 27) + jule::Str("\nlocation: std/conv/ftoa.jule:93:9"));;
			}
		}
		_match_end_1a91a323b:;
	}
	jule::Bool _969_neg = ((_8313_bits >> static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_8413_flt.get()._field_expbits + _8413_flt.get()._field_mantbits)))) != 0LLU);
	jule::I64 _9713_exp = static_cast<jule::I64>(_8313_bits >> _8413_flt.get()._field_mantbits) & static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL))));
	jule::U64 _9813_mant = _8313_bits & static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits)) - 1LLU))));
	{
		auto &_match_expr{ _9713_exp };
		
		if (_match_expr == static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL))) {
			_case_begin_1a91a57e3:;
			{
				{
					
					if ((_9813_mant != 0LLU)) {
						_case_begin_1a91aa6d8:;
						{
							return jule::append(_8221_dst,jule::Slice<jule::U8>({'n','a','n'}));
						}
					}
					else if (_969_neg) {
						_case_begin_1a91aa782:;
						{
							return jule::append(_8221_dst,jule::Slice<jule::U8>({'-','i','n','f'}));
						}
					}
					else {
						_case_begin_1a91a950b:;
						{
							return jule::append(_8221_dst,jule::Slice<jule::U8>({'+','i','n','f'}));
						}
					}
					_match_end_1a91a9440:;
				}
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1a91a8b59:;
			{
				(_9713_exp)++;
			}
		}
		else {
			_case_begin_1a91a414e:;
			{
				_9813_mant|=static_cast<jule::U64>(static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits);
			}
		}
		_match_end_1a91a8076:;
	}
	_9713_exp+=_8413_flt.get()._field_bias;
	if (_8244_fmt == 'b') {
		return _1a7333786_fmt_b(_8221_dst,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	if ((_8244_fmt == 'x') || (_8244_fmt == 'X')) {
		return _1a7114974_fmt_x(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	
	_1a708e723_DecimalSlice _13213_digs = _1a708e723_DecimalSlice();
	jule::Bool _13313_ok = false;
	jule::Bool _1359_shortest = (_8259_prec < 0LL);
	if (_1359_shortest) {
		_13213_digs._field_d=jule::Slice<jule::U8>::alloc(32LL);
		_1a745e8a1_ryu_ftoa_shortest(_13213_digs,_9813_mant,static_cast<jule::I64>(_9713_exp - static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_8413_flt.get()._field_mantbits)))),(*(_8413_flt)));
		_13313_ok=true;
		{
			auto &_match_expr{ _8244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1a91adcd5:;
				{
					_8259_prec=static_cast<jule::I64>(_1a7238713_max(static_cast<jule::I64>((_13213_digs._field_nd - 1LL)),0LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1a91b007d:;
				{
					_8259_prec=static_cast<jule::I64>(_1a7238713_max(static_cast<jule::I64>(_13213_digs._field_nd - _13213_digs._field_dp),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1a91b0149:;
				{
					_8259_prec=_13213_digs._field_nd;
				}
			}
			_match_end_1a91b0028:;
		}
	} else if (_8244_fmt != 'f') {
		jule::I64 _15217_digits = _8259_prec;
		{
			auto &_match_expr{ _8244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1a91b279a:;
				{
					(_15217_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1a91b2448:;
				{
					if ((_8259_prec == 0LL)) {
						_8259_prec=1LL;
					}
					_15217_digits=_8259_prec;
				}
			}
			else {
				_case_begin_1a91b01b0:;
				{
					_15217_digits=1LL;
				}
			}
			_match_end_1a91b06cc:;
		}
		if ((_8270_bit_size == 32LL) && (_15217_digits <= 9LL)) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL);
			_1a745e50a_ryu_ftoa_fixed32(_13213_digs,static_cast<jule::U32>(static_cast<jule::U32>(_9813_mant)),static_cast<jule::I64>(_9713_exp - static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_8413_flt.get()._field_mantbits)))),_15217_digits);
			_13313_ok=true;
		} else if ((_15217_digits <= 18LL)) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL);
			_1a745e63c_ryu_ftoa_fixed64(_13213_digs,_9813_mant,static_cast<jule::I64>(_9713_exp - static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_8413_flt.get()._field_mantbits)))),_15217_digits);
			_13313_ok=true;
		}
	}
	if ((!(_13313_ok))) {
		return _1a71b234b_big_ftoa(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	return _1a71eb74d_fmt_digits(_8221_dst,_1359_shortest,_969_neg,_13213_digs,_8259_prec,_8244_fmt);
}



inline jule::Slice<jule::U8> _1a71b234b_big_ftoa(jule::Slice<jule::U8> _18217_dst,jule::I64 _18234_prec,jule::U8 _18245_fmt,jule::Bool _18256_neg,jule::U64 _1835_mant,jule::I64 _18316_exp,_1a71e9c9b_FloatInfo& _18327_flt) {
	_1a7460ce2_Decimal _18413_d = _1a7460ce2_Decimal();
	_1a74611ee_assign(&_18413_d, _1835_mant);
	_1a7461474_shift(&_18413_d, static_cast<jule::I64>(_18316_exp - static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_18327_flt._field_mantbits)))));
	_1a708e723_DecimalSlice _18713_digs = _1a708e723_DecimalSlice();
	jule::Bool _1889_shortest = (_18234_prec < 0LL);
	if (_1889_shortest) {
		_1a723b815_round_shortest(_18413_d,_1835_mant,_18316_exp,_18327_flt);
		_18713_digs=_1a708e723_DecimalSlice(_18413_d._field_d.slice(0LL),_18413_d._field_nd,_18413_d._field_dp,jule::Bool());
		{
			auto &_match_expr{ _18245_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1a91baac2:;
				{
					_18234_prec=static_cast<jule::I64>((_18713_digs._field_nd - 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1a91bab38:;
				{
					_18234_prec=static_cast<jule::I64>(_1a7238713_max(static_cast<jule::I64>(_18713_digs._field_nd - _18713_digs._field_dp),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1a91bab9e:;
				{
					_18234_prec=_18713_digs._field_nd;
				}
			}
			_match_end_1a91ba9e5:;
		}
	} else {
		{
			auto &_match_expr{ _18245_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1a91b994a:;
				{
					_1a7461be4_round(&_18413_d, static_cast<jule::I64>((_18234_prec + 1LL)));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1a91b99b1:;
				{
					_1a7461be4_round(&_18413_d, static_cast<jule::I64>(_18413_d._field_dp + _18234_prec));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1a91b9a27:;
				{
					if ((_18234_prec == 0LL)) {
						_18234_prec=1LL;
					}
					_1a7461be4_round(&_18413_d, _18234_prec);
				}
			}
			_match_end_1a91bc684:;
		}
		_18713_digs=_1a708e723_DecimalSlice(_18413_d._field_d.slice(0LL),_18413_d._field_nd,_18413_d._field_dp,jule::Bool());
	}
	return _1a71eb74d_fmt_digits(_18217_dst,_1889_shortest,_18256_neg,_18713_digs,_18234_prec,_18245_fmt);
}



inline jule::Slice<jule::U8> _1a71eb74d_fmt_digits(jule::Slice<jule::U8> _21919_dst,jule::Bool _21932_shortest,jule::Bool _21948_neg,_1a708e723_DecimalSlice _2205_digs,jule::I64 _22029_prec,jule::U8 _22040_fmt) {
	{
		auto &_match_expr{ _22040_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1a91c11e3:;
			{
				return _1a723bb56_fmt_e(_21919_dst,_21948_neg,_2205_digs,_22029_prec,_22040_fmt);
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1a91c1259:;
			{
				return _1a732219d_fmt_f(_21919_dst,_21948_neg,_2205_digs,_22029_prec);
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1a91c12c0:;
			{
				jule::I64 _22817_eprec = _22029_prec;
				if ((_22817_eprec > _2205_digs._field_nd) && (_2205_digs._field_nd >= _2205_digs._field_dp)) {
					_22817_eprec=_2205_digs._field_nd;
				}
				if (_21932_shortest) {
					_22817_eprec=6LL;
				}
				jule::I64 _23813_exp = (_2205_digs._field_dp - 1LL);
				if ((_23813_exp < -4LL) || (_23813_exp >= _22817_eprec)) {
					if (_22029_prec > _2205_digs._field_nd) {
						_22029_prec=_2205_digs._field_nd;
					}
					return _1a723bb56_fmt_e(_21919_dst,_21948_neg,_2205_digs,static_cast<jule::I64>((_22029_prec - 1LL)),static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_22040_fmt + 'e')) - 'g'));
				}
				if (_22029_prec > _2205_digs._field_dp) {
					_22029_prec=_2205_digs._field_nd;
				}
				return _1a732219d_fmt_f(_21919_dst,_21948_neg,_2205_digs,static_cast<jule::I64>(_1a7238713_max(static_cast<jule::I64>(_22029_prec - _2205_digs._field_dp),0LL)));
			}
		}
		_match_end_1a91c10d3:;
	}
	return jule::append(_21919_dst,jule::Slice<jule::U8>({'%',_22040_fmt}));
}



inline void _1a723b815_round_shortest(_1a7460ce2_Decimal& _25724_d,jule::U64 _25736_mant,jule::I64 _25747_exp,_1a71e9c9b_FloatInfo& _25758_flt) {
	if ((_25736_mant == 0LLU)) {
		_25724_d._field_nd=0LL;
		return;
	}
	jule::I64 _2789_minexp = (_25758_flt._field_bias + 1LL);
	if ((_25747_exp > _2789_minexp) && ((332LL * static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_25724_d._field_dp - _25724_d._field_nd)))) >= static_cast<jule::I64>(static_cast<jule::I64>(100LL * static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_25747_exp - static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_25758_flt._field_mantbits)))))))))) {
		return;
	}
	_1a7460ce2_Decimal _28713_upper = _1a7460ce2_Decimal();
	_1a74611ee_assign(&_28713_upper, static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(_25736_mant << 1LLU)) + 1LLU)));
	_1a7461474_shift(&_28713_upper, static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(_25747_exp - static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_25758_flt._field_mantbits))))) - 1LL)));
	jule::U64 _29713_mantlo = 0LLU;
	jule::I64 _29813_explo = 0LL;
	if ((_25736_mant > static_cast<jule::U64>(static_cast<jule::U64>(1LLU << _25758_flt._field_mantbits))) || (_25747_exp == _2789_minexp)) {
		_29713_mantlo=static_cast<jule::U64>((_25736_mant - 1LLU));
		_29813_explo=_25747_exp;
	} else {
		_29713_mantlo=static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(_25736_mant << 1LLU)) - 1LLU));
		_29813_explo=static_cast<jule::I64>((_25747_exp - 1LL));
	}
	_1a7460ce2_Decimal _30613_lower = _1a7460ce2_Decimal();
	_1a74611ee_assign(&_30613_lower, static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(_29713_mantlo << 1LLU)) + 1LLU)));
	_1a7461474_shift(&_30613_lower, static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(_29813_explo - static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_25758_flt._field_mantbits))))) - 1LL)));
	jule::Bool _3139_inclusive = ((_25736_mant & 1LL) == 0LLU);
	jule::U8 _32613_upperdelta = 0LLU;
	jule::I64 _33013_ui = 0LL;
	for (; ; (_33013_ui)++) {
		{
			jule::I64 _33513_mi = (_33013_ui - _28713_upper._field_dp) + _25724_d._field_dp;
			if (_33513_mi >= _25724_d._field_nd) {
				goto _iter_end_1a91cac25;
			}
			jule::I64 _33913_li = (_33013_ui - _28713_upper._field_dp) + _30613_lower._field_dp;
			jule::U8 _34017_l = static_cast<jule::U8>(48LLU);
			if ((_33913_li >= 0LL) && (_33913_li < _30613_lower._field_nd)) {
				_34017_l=_30613_lower._field_d[_33913_li];
			}
			jule::U8 _34417_m = static_cast<jule::U8>(48LLU);
			if ((_33513_mi >= 0LL)) {
				_34417_m=_25724_d._field_d[_33513_mi];
			}
			jule::U8 _34817_u = static_cast<jule::U8>(48LLU);
			if (_33013_ui < _28713_upper._field_nd) {
				_34817_u=_28713_upper._field_d[_33013_ui];
			}
			jule::Bool _35613_okdown = (_34017_l != _34417_m) || (_3139_inclusive && ((_33913_li + 1LL) == _30613_lower._field_nd));
			{
				
				if ((_32613_upperdelta == 0LLU) && ((_34417_m + 1LLU) < _34817_u)) {
					_case_begin_1a91d4811:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				else if ((_32613_upperdelta == 0LLU) && (_34417_m != _34817_u)) {
					_case_begin_1a91d4888:;
					{
						_32613_upperdelta=1LLU;
					}
				}
				else if ((_32613_upperdelta == 1LLU) && ((_34417_m != '9') || (_34817_u != '0'))) {
					_case_begin_1a91d4910:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				_match_end_1a91d4734:;
			}
			jule::Bool _37713_okup = (_32613_upperdelta > 0LLU) && ((_3139_inclusive || (_32613_upperdelta > 1LLU)) || ((_33013_ui + 1LL) < _28713_upper._field_nd));
			{
				
				if (_35613_okdown && _37713_okup) {
					_case_begin_1a91d7847:;
					{
						_1a7461be4_round(&_25724_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;
					}
				}
				else if (_35613_okdown) {
					_case_begin_1a91d78be:;
					{
						_1a74616e9_round_down(&_25724_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;
					}
				}
				else if (_37713_okup) {
					_case_begin_1a91d7946:;
					{
						_1a746196e_round_up(&_25724_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;
					}
				}
				_match_end_1a91d689b:;
			}
		}
	_iter_next_1a91cac25:;
	}
	_iter_end_1a91cac25:;
}



inline jule::Slice<jule::U8> _1a723bb56_fmt_e(jule::Slice<jule::U8> _39614_dst,jule::Bool _39627_neg,_1a708e723_DecimalSlice _39638_d,jule::I64 _39655_prec,jule::U8 _39666_fmt) {
	if (_39627_neg) {
		_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push('-');
	}
	jule::U8 _40313_ch = '0';
	if ((_39638_d._field_nd != 0LL)) {
		_40313_ch=_39638_d._field_d[0LL];
	}
	_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push(_40313_ch);
	if ((_39655_prec > 0LL)) {
		_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push('.');
		jule::I64 _41217_i = 1LL;
		jule::I64 _41313_m = _1a7114d4d_min(_39638_d._field_nd,static_cast<jule::I64>((_39655_prec + 1LL)));
		if (_41217_i < _41313_m) {
			_39614_dst=jule::append(_39614_dst,_39638_d._field_d.slice(_41217_i,_41313_m));
			_41217_i=_41313_m;
		}
		for (; _41217_i <= _39655_prec; (_41217_i)++) {
			{
				_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push('0');
			}
		_iter_next_1a91dd166:;
		}
		_iter_end_1a91dd166:;
	}
	_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push(_39666_fmt);
	jule::I64 _42513_exp = (_39638_d._field_dp - 1LL);
	if ((_39638_d._field_nd == 0LL)) {
		_42513_exp=0LL;
	}
	if ((_42513_exp < 0LL)) {
		_40313_ch='-';
		_42513_exp=static_cast<jule::I64>((-(_42513_exp)));
	} else {
		_40313_ch='+';
	}
	_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push(_40313_ch);
	{
		
		if ((_42513_exp < 10LL)) {
			_case_begin_1a91e1be7:;
			{
				_39614_dst = jule::alloc_for_append(_39614_dst,2);_39614_dst.__push('0');_39614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_42513_exp))) + '0'));
			}
		}
		else if ((_42513_exp < 100LL)) {
			_case_begin_1a91e0454:;
			{
				_39614_dst = jule::alloc_for_append(_39614_dst,2);_39614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_42513_exp / 10LL)))) + '0'));_39614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_42513_exp % 10LL)))) + '0'));
			}
		}
		else {
			_case_begin_1a91dee6a:;
			{
				_39614_dst = jule::alloc_for_append(_39614_dst,3);_39614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_42513_exp / 100LL)))) + '0'));_39614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_42513_exp / 10LL)))) % 10LL))) + '0'));_39614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_42513_exp % 10LL)))) + '0'));
			}
		}
		_match_end_1a91dee15:;
	}
	return _39614_dst;
}



inline jule::Slice<jule::U8> _1a732219d_fmt_f(jule::Slice<jule::U8> _45114_dst,jule::Bool _45127_neg,_1a708e723_DecimalSlice _45138_d,jule::I64 _45155_prec) {
	if (_45127_neg) {
		_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push('-');
	}
	if ((_45138_d._field_dp > 0LL)) {
		jule::I64 _45917_m = _1a7114d4d_min(_45138_d._field_nd,_45138_d._field_dp);
		_45114_dst=jule::append(_45114_dst,_45138_d._field_d.slice(0LL,_45917_m));
		for (; _45917_m < _45138_d._field_dp; (_45917_m)++) {
			{
				_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push('0');
			}
		_iter_next_1a91e5327:;
		}
		_iter_end_1a91e5327:;
	} else {
		_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push('0');
	}
	if ((_45155_prec > 0LL)) {
		_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push('.');
		jule::I64 _47017_i = 0LL;
		for (; _47017_i < _45155_prec; (_47017_i)++) {
			{
				jule::U8 _47221_ch = static_cast<jule::U8>(48LLU);
				jule::I64 _47317_j = _45138_d._field_dp + _47017_i;
				if ((0LL <= _47317_j) && (_47317_j < _45138_d._field_nd)) {
					_47221_ch=_45138_d._field_d[_47317_j];
				}
				_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push(_47221_ch);
			}
		_iter_next_1a91e3aea:;
		}
		_iter_end_1a91e3aea:;
	}
	return _45114_dst;
}



inline jule::Slice<jule::U8> _1a7333786_fmt_b(jule::Slice<jule::U8> _48414_dst,jule::Bool _48427_neg,jule::U64 _48438_mant,jule::I64 _48453_exp,_1a71e9c9b_FloatInfo& _48464_flt) {
	if (_48427_neg) {
		_48414_dst = jule::alloc_for_append(_48414_dst,1);_48414_dst.__push('-');
	}
	std::tie(_48414_dst,std::ignore) = _1a7465467_fmt_bits(_48414_dst,_48438_mant,10LL,false,true);
	_48414_dst = jule::alloc_for_append(_48414_dst,1);_48414_dst.__push('p');
	_48453_exp-=static_cast<jule::I64>(static_cast<jule::I64>(_48464_flt._field_mantbits));
	if ((_48453_exp >= 0LL)) {
		_48414_dst = jule::alloc_for_append(_48414_dst,1);_48414_dst.__push('+');
	}
	std::tie(_48414_dst,std::ignore) = _1a7465467_fmt_bits(_48414_dst,static_cast<jule::U64>(static_cast<jule::U64>(_48453_exp)),10LL,(_48453_exp < 0LL),true);
	return _48414_dst;
}



inline jule::Slice<jule::U8> _1a7114974_fmt_x(jule::Slice<jule::U8> _50614_dst,jule::I64 _50627_prec,jule::U8 _50638_fmt,jule::Bool _50649_neg,jule::U64 _5079_mant,jule::I64 _50724_exp,_1a71e9c9b_FloatInfo& _50735_flt) {
	if ((_5079_mant == 0LLU)) {
		_50724_exp=0LL;
	}
	_5079_mant<<=static_cast<jule::U64>(60LLU - _50735_flt._field_mantbits);
	while ((_5079_mant != 0LLU) && ((_5079_mant & 1152921504606846976LLU) == 0LLU)) {
		{
			_5079_mant<<=1LLU;
			(_50724_exp)--;
		}
	_iter_next_1a91ec142:;
	}
	_iter_end_1a91ec142:;
	if ((_50627_prec >= 0LL) && (_50627_prec < 15LL)) {
		jule::U64 _52113_shift = static_cast<jule::U64>(_50627_prec << 2LLU);
		jule::U64 _52213_extra = ((_5079_mant << _52113_shift) & 1152921504606846975LLU);
		_5079_mant>>=static_cast<jule::U64>(60LLU - _52113_shift);
		if (((_52213_extra | static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_5079_mant & 1LLU))))) > 576460752303423488LLU)) {
			(_5079_mant)++;
		}
		_5079_mant<<=static_cast<jule::U64>(60LLU - _52113_shift);
		if (((_5079_mant & 2305843009213693952LLU) != 0LLU)) {
			_5079_mant>>=1LLU;
			(_50724_exp)++;
		}
	}
	jule::Str _53513_hex = jule::Str();
	if (_50638_fmt == 'X') {
		_53513_hex=jule::Str("0123456789ABCDEF", 16);
	} else {
		_53513_hex=jule::Str("0123456789abcdef", 16);
	}
	if (_50649_neg) {
		_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push('-');
	}
	_50614_dst = jule::alloc_for_append(_50614_dst,3);_50614_dst.__push('0');_50614_dst.__push(_50638_fmt);_50614_dst.__push(static_cast<jule::U8>('0' + static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(((_5079_mant >> 60LLU) & 1LLU))))));
	_5079_mant<<=4LLU;
	if ((_50627_prec < 0LL) && (_5079_mant != 0LLU)) {
		_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push('.');
		while ((_5079_mant != 0LLU)) {
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]);
				_5079_mant<<=4LLU;
			}
		_iter_next_1a92025cb:;
		}
		_iter_end_1a92025cb:;
	} else if ((_50627_prec > 0LL)) {
		_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push('.');
		jule::I64 _55817_i = 0LL;
		for (; _55817_i < _50627_prec; (_55817_i)++) {
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]);
				_5079_mant<<=4LLU;
			}
		_iter_next_1a9202eb1:;
		}
		_iter_end_1a9202eb1:;
	}
	jule::U8 _56613_ch = static_cast<jule::U8>(80LLU);
	if (_50638_fmt == static_cast<jule::U8>(static_cast<jule::U8>(_1a708aee4_lower(_50638_fmt)))) {
		_56613_ch='p';
	}
	_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push(_56613_ch);
	if ((_50724_exp < 0LL)) {
		_56613_ch='-';
		_50724_exp=static_cast<jule::I64>((-(_50724_exp)));
	} else {
		_56613_ch='+';
	}
	_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push(_56613_ch);
	{
		
		if ((_50724_exp < 100LL)) {
			_case_begin_1a920932a:;
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,2);_50614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_50724_exp / 10LL)))) + '0'));_50614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_50724_exp % 10LL)))) + '0'));
			}
		}
		else if ((_50724_exp < 1000LL)) {
			_case_begin_1a9206a31:;
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,3);_50614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_50724_exp / 100LL)))) + '0'));_50614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)))) + '0'));_50614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_50724_exp % 10LL)))) + '0'));
			}
		}
		else {
			_case_begin_1a9206d0b:;
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,4);_50614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_50724_exp / 1000LL)))) + '0'));_50614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_50724_exp / 100LL)))) % 10LL))) + '0'));_50614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)))) + '0'));_50614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_50724_exp % 10LL)))) + '0'));
			}
		}
		_match_end_1a9206ca6:;
	}
	return _50614_dst;
}



inline jule::I64 _1a7114d4d_min(jule::I64 _5918_a,jule::I64 _59116_b) {
	if (_5918_a < _59116_b) {
		return _5918_a;
	}
	return _59116_b;
}



inline jule::I64 _1a7238713_max(jule::I64 _5988_a,jule::I64 _59816_b) {
	if (_5988_a > _59816_b) {
		return _5988_a;
	}
	return _59816_b;
}



inline jule::U8 _1a708aee4_lower(jule::U8 _4710_c) {
	return static_cast<jule::U8>(_4710_c | ('x' - 'X'));
}



inline std::tuple<jule::U64,jule::I64> _1a745c42b___parse_uint(jule::Str _5121_s,jule::I64 _5133_base,jule::I64 _5148_bit_size) {
	if (_5121_s.empty()) {
		return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
	}
	{
		
		if ((2LL <= _5133_base) && (_5133_base <= 36LL)) {
			_case_begin_1a920e363:;
		}
		else if ((_5133_base == 0LL)) {
			_case_begin_1a920e231:;
			{
				_5133_base=10LL;
				if (_5121_s[0LL] == '0') {
					{
						
						if ((_5121_s.len() >= 3LL) && (_1a708aee4_lower(_5121_s[1LL]) == 'b')) {
							_case_begin_1a9211211:;
							{
								_5133_base=2LL;
								(_5121_s).mut_slice(2LL);
							}
						}
						else if ((_5121_s.len() >= 3LL) && (_1a708aee4_lower(_5121_s[1LL]) == 'o')) {
							_case_begin_1a9211310:;
							{
								_5133_base=8LL;
								(_5121_s).mut_slice(2LL);
							}
						}
						else if ((_5121_s.len() >= 3LL) && (_1a708aee4_lower(_5121_s[1LL]) == 'x')) {
							_case_begin_1a9210d48:;
							{
								_5133_base=16LL;
								(_5121_s).mut_slice(2LL);
							}
						}
						else {
							_case_begin_1a92109c4:;
							{
								_5133_base=8LL;
								(_5121_s).mut_slice(1LL);
							}
						}
						_match_end_1a9210908:;
					}
				}
			}
		}
		else {
			_case_begin_1a920d4a5:;
			{
				return std::make_tuple(0LLU,static_cast<jule::I64>(3LL));
			}
		}
		_match_end_1a920d450:;
	}
	if ((_5148_bit_size == 0LL)) {
		_5148_bit_size=64LL;
	} else if ((_5148_bit_size < 0LL) || (_5148_bit_size > 64LL)) {
		return std::make_tuple(0LLU,static_cast<jule::I64>(4LL));
	}
	jule::U64 _9013_cutoff = 0LLU;
	{
		auto &_match_expr{ _5133_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1a9215d09:;
			{
				_9013_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1a9215952:;
			{
				_9013_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1a920ebb0:;
			{
				_9013_cutoff=static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(jule::div(jule::MAX_U64,static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_5133_base)))))) + 1LLU));
			}
		}
		_match_end_1a92155de:;
	}
	jule::U64 _10013_max_val = 0LLU;
	{
		auto &_match_expr{ _5148_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_1a9215754:;
			{
				_10013_max_val=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1a9215644:;
			{
				_10013_max_val=jule::MAX_U64;
			}
		}
		_match_end_1a9216557:;
	}
	jule::U64 _10813_n = 0LLU;
	{
		auto &expr = _5121_s;
		auto it = expr.begin();
		_iter_begin_1a9217305:;
		if (it != expr.end()) {
			jule::U8 _1a9217dd8_c = *it;
			{
				jule::U8 _11017_d = 0LLU;
				{
					
					if (('0' <= _1a9217dd8_c) && (_1a9217dd8_c <= '9')) {
						_case_begin_1a9218db7:;
						{
							_11017_d=static_cast<jule::U8>(_1a9217dd8_c - '0');
						}
					}
					else if (('a' <= static_cast<jule::U8>(static_cast<jule::U8>(_1a708aee4_lower(_1a9217dd8_c)))) && (_1a708aee4_lower(_1a9217dd8_c) <= 'z')) {
						_case_begin_1a9218c85:;
						{
							_11017_d=static_cast<jule::U8>((static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_1a708aee4_lower(_1a9217dd8_c))) - 'a')) + 10LLU));
						}
					}
					else if (_1a9217dd8_c == '_') {
						_case_begin_1a9218ceb:;
						{
							goto _iter_next_1a9217305;
						}
					}
					else {
						_case_begin_1a9218823:;
						{
							return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
						}
					}
					_match_end_1a921879b:;
				}
				if (_11017_d >= static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_5133_base)))) {
					return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
				}
				if (_10813_n >= _9013_cutoff) {
					return std::make_tuple(_10013_max_val,static_cast<jule::I64>(1LL));
				}
				_10813_n*=static_cast<jule::U64>(static_cast<jule::U64>(_5133_base));
				jule::U64 _13213_n1 = _10813_n + static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_11017_d)));
				if ((_13213_n1 < _10813_n) || (_13213_n1 > _10013_max_val)) {
					return std::make_tuple(_10013_max_val,static_cast<jule::I64>(1LL));
				}
				_10813_n=_13213_n1;
			}
			_iter_next_1a9217305:;
			++it;
			goto _iter_begin_1a9217305;
		}
		_iter_end_1a9217305:;
	}
	return std::make_tuple(_10813_n,static_cast<jule::I64>(0LL));
}



inline jule::Exceptional<jule::U64> _1a745c55d_parse_uint(jule::Str _14623_s,jule::I64 _14635_base,jule::I64 _14650_bit_size) {
	jule::U64 _14710_un;
	jule::I64 _14714_err;
	std::tie(_14710_un,_14714_err) = _1a745c42b___parse_uint(_14623_s,_14635_base,_14650_bit_size);
	if (_14714_err != static_cast<jule::I64>(0LL)) {
		return jule::Exceptional<jule::U64>(_14714_err);
	}
	return jule::Exceptional<jule::U64>(jule::Any(),_14710_un);
}



inline jule::Exceptional<jule::I64> _1a745c690_parse_int(jule::Str _17222_s,jule::I64 _17230_base,jule::I64 _17245_bit_size) {
	if (_17222_s.empty()) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(2LL));
	}
	jule::Bool _17813_neg = false;
	if (_17222_s[0LL] == '+') {
		(_17222_s).mut_slice(1LL);
	} else if (_17222_s[0LL] == '-') {
		_17813_neg=true;
		(_17222_s).mut_slice(1LL);
	}
	jule::U64 _18714_un;
	jule::I64 _18718_err;
	std::tie(_18714_un,_18718_err) = _1a745c42b___parse_uint(_17222_s,_17230_base,_17245_bit_size);
	if ((_18718_err != static_cast<jule::I64>(0LL)) && (_18718_err != static_cast<jule::I64>(1LL))) {
		return jule::Exceptional<jule::I64>(_18718_err);
	}
	if ((_17245_bit_size == 0LL)) {
		_17245_bit_size=64LL;
	}
	jule::U64 _1969_cutoff = static_cast<jule::U64>(1LL << static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_17245_bit_size - 1LL)))));
	if ((!(_17813_neg)) && (_18714_un >= _1969_cutoff)) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(1LL));
	}
	if (_17813_neg && (_18714_un > _1969_cutoff)) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(1LL));
	}
	jule::I64 _20313_n = static_cast<jule::I64>(_18714_un);
	if (_17813_neg) {
		_20313_n=static_cast<jule::I64>((-(_20313_n)));
	}
	return jule::Exceptional<jule::I64>(jule::Any(),_20313_n);
}



inline std::tuple<jule::F64,jule::Bool> _1a745caad_eisel_lemire64(jule::U64 _4123_man,jule::I64 _4133_exp10,jule::Bool _4145_neg) {
	jule::F64 _4158_f = jule::F64();
	jule::Bool _4166_ok = jule::Bool();
	if ((_4123_man == 0LLU)) {
		if (_4145_neg) {
			_4158_f=static_cast<jule::F64>(_1a7355a94_f64_from_bits(9223372036854775808LLU));
		}
		_4166_ok = true;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	if ((_4133_exp10 < -348LL) || (347LL < _4133_exp10)) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	jule::I64 _579_clz = _1a7432687_leading_zeros64(_4123_man);
	_4123_man<<=static_cast<jule::U64>(static_cast<jule::U64>(_579_clz));
	
	jule::U64 _6013_ret_exp2 = static_cast<jule::U64>(((((217706LL * _4133_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_579_clz)));
	jule::U64 _6314_x_hi;
	jule::U64 _6324_x_lo;
	std::tie(_6314_x_hi,_6324_x_lo) = _1a743b30b_mul64(_4123_man,_1a716d0d7_DETAILED_POWS_OF_TEN[(_4133_exp10 - -348LL)][1LL]);
	if (((_6314_x_hi & 511LLU) == 511LLU) && ((_6324_x_lo + _4123_man) < _4123_man)) {
		jule::U64 _6714_y_hi;
		jule::U64 _6720_y_lo;
		std::tie(_6714_y_hi,_6720_y_lo) = _1a743b30b_mul64(_4123_man,_1a716d0d7_DETAILED_POWS_OF_TEN[(_4133_exp10 - -348LL)][0LL]);
		jule::U64 _6818_merged_hi = _6314_x_hi;
		jule::U64 _6829_merged_lo = _6324_x_lo + _6714_y_hi;
		std::tie(_6818_merged_hi,_6829_merged_lo) = std::make_tuple(_6314_x_hi,_6324_x_lo + _6714_y_hi);
		if (_6829_merged_lo < _6324_x_lo) {
			(_6818_merged_hi)++;
		}
		if ((((_6818_merged_hi & 511LLU) == 511LLU) && ((_6829_merged_lo + 1LLU) == 0LLU)) && ((_6720_y_lo + _4123_man) < _4123_man)) {
			_4158_f = 0LL;
			_4166_ok = false;
			return std::make_tuple(_4158_f,_4166_ok);
		}
		std::tie(_6314_x_hi,_6324_x_lo) = std::make_tuple(_6818_merged_hi,_6829_merged_lo);
	}
	jule::U64 _799_msb = (_6314_x_hi >> 63LLU);
	jule::U64 _8013_ret_mantissa = _6314_x_hi >> static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_799_msb + 9LLU))));
	_6013_ret_exp2-=static_cast<jule::U64>(1LLU ^ _799_msb);
	if (((_6324_x_lo == 0LLU) && ((_6314_x_hi & 511LLU) == 0LLU)) && ((_8013_ret_mantissa & 3LLU) == 1LLU)) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	_8013_ret_mantissa+=static_cast<jule::U64>((_8013_ret_mantissa & 1LLU));
	_8013_ret_mantissa>>=1LLU;
	if (((_8013_ret_mantissa >> 53LLU) > 0LLU)) {
		_8013_ret_mantissa>>=1LLU;
		_6013_ret_exp2+=1LLU;
	}
	if (((_6013_ret_exp2 - 1LLU) >= 2046LLU)) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	jule::U64 _10313_ret_bits = (_6013_ret_exp2 << 52LLU) | static_cast<jule::U64>(static_cast<jule::U64>((_8013_ret_mantissa & 4503599627370495LLU)));
	if (_4145_neg) {
		_10313_ret_bits|=9223372036854775808LLU;
	}
	_4158_f = static_cast<jule::F64>(_1a7355a94_f64_from_bits(_10313_ret_bits));
	_4166_ok = true;
	return std::make_tuple(_4158_f,_4166_ok);
}



inline std::tuple<jule::F32,jule::Bool> _1a745cbe0_eisel_lemire32(jule::U64 _11023_man,jule::I64 _11033_exp10,jule::Bool _11045_neg) {
	jule::F32 _11058_f = jule::F32();
	jule::Bool _11066_ok = jule::Bool();
	if ((_11023_man == 0LLU)) {
		if (_11045_neg) {
			_11058_f=static_cast<jule::F32>(_1a7355511_f32_from_bits(2147483648LLU));
		}
		_11066_ok = true;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	if ((_11033_exp10 < -348LL) || (347LL < _11033_exp10)) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	jule::I64 _1329_clz = _1a7432687_leading_zeros64(_11023_man);
	_11023_man<<=static_cast<jule::U64>(static_cast<jule::U64>(_1329_clz));
	
	jule::U64 _13513_ret_exp2 = static_cast<jule::U64>(((((217706LL * _11033_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_1329_clz)));
	jule::U64 _13814_x_hi;
	jule::U64 _13824_x_lo;
	std::tie(_13814_x_hi,_13824_x_lo) = _1a743b30b_mul64(_11023_man,_1a716d0d7_DETAILED_POWS_OF_TEN[(_11033_exp10 - -348LL)][1LL]);
	if (((_13814_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13824_x_lo + _11023_man) < _11023_man)) {
		jule::U64 _14214_y_hi;
		jule::U64 _14220_y_lo;
		std::tie(_14214_y_hi,_14220_y_lo) = _1a743b30b_mul64(_11023_man,_1a716d0d7_DETAILED_POWS_OF_TEN[(_11033_exp10 - -348LL)][0LL]);
		jule::U64 _14318_merged_hi = _13814_x_hi;
		jule::U64 _14329_merged_lo = _13824_x_lo + _14214_y_hi;
		std::tie(_14318_merged_hi,_14329_merged_lo) = std::make_tuple(_13814_x_hi,_13824_x_lo + _14214_y_hi);
		if (_14329_merged_lo < _13824_x_lo) {
			(_14318_merged_hi)++;
		}
		if ((((_14318_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14329_merged_lo + 1LLU) == 0LLU)) && ((_14220_y_lo + _11023_man) < _11023_man)) {
			_11058_f = 0LL;
			_11066_ok = false;
			return std::make_tuple(_11058_f,_11066_ok);
		}
		std::tie(_13814_x_hi,_13824_x_lo) = std::make_tuple(_14318_merged_hi,_14329_merged_lo);
	}
	jule::U64 _1549_msb = (_13814_x_hi >> 63LLU);
	jule::U64 _15513_ret_mantissa = _13814_x_hi >> static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_1549_msb + 38LLU))));
	_13513_ret_exp2-=static_cast<jule::U64>(1LLU ^ _1549_msb);
	if (((_13824_x_lo == 0LLU) && ((_13814_x_hi & 274877906943LLU) == 0LLU)) && ((_15513_ret_mantissa & 3LLU) == 1LLU)) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	_15513_ret_mantissa+=static_cast<jule::U64>((_15513_ret_mantissa & 1LLU));
	_15513_ret_mantissa>>=1LLU;
	if (((_15513_ret_mantissa >> 24LLU) > 0LLU)) {
		_15513_ret_mantissa>>=1LLU;
		_13513_ret_exp2+=1LLU;
	}
	if (((_13513_ret_exp2 - 1LLU) >= 254LLU)) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	jule::U64 _17813_ret_bits = (_13513_ret_exp2 << 23LLU) | static_cast<jule::U64>(static_cast<jule::U64>((_15513_ret_mantissa & 8388607LLU)));
	if (_11045_neg) {
		_17813_ret_bits|=2147483648LLU;
	}
	_11058_f = static_cast<jule::F32>(_1a7355511_f32_from_bits(static_cast<jule::U32>(static_cast<jule::U32>(_17813_ret_bits))));
	_11066_ok = true;
	return std::make_tuple(_11058_f,_11066_ok);
}



inline jule::I64 _1a745d185_common_prefix_len_ignore_case(jule::Str _4534_s,jule::Str _4542_prefix) {
	jule::I64 _4613_n = _4542_prefix.len();
	if (_4613_n > static_cast<jule::I64>(static_cast<jule::I64>(_4534_s.len()))) {
		_4613_n=static_cast<jule::I64>(_4534_s.len());
	}
	jule::I64 _5013_i = 0LL;
	for (; _5013_i < _4613_n; (_5013_i)++) {
		{
			jule::U8 _5217_c = _4534_s[_5013_i];
			if (('A' <= _5217_c) && (_5217_c <= 'Z')) {
				_5217_c+='a' - 'A';
			}
			if (_5217_c != _4542_prefix[_5013_i]) {
				return _5013_i;
			}
		}
	_iter_next_1a9245872:;
	}
	_iter_end_1a9245872:;
	return _4613_n;
}



inline std::tuple<jule::F64,jule::I64,jule::Bool> _1a745d2b7_special(jule::Str _6816_s) {
	jule::F64 _6826_f = jule::F64();
	jule::I64 _6834_n = jule::I64();
	jule::Bool _6842_ok = jule::Bool();
	if (_6816_s.empty()) {
		_6826_f = 0LL;
		_6834_n = 0LL;
		_6842_ok = false;
		return std::make_tuple(_6826_f,_6834_n,_6842_ok);
	}
	jule::I64 _7213_sign = 1LL;
	jule::I64 _7313_nsign = 0LL;
	{
		auto &_match_expr{ _6816_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1a924a3e3:;
			{
				if (_6816_s[0LL] == '-') {
					_7213_sign=-1LL;
				}
				_7313_nsign=1LL;
				(_6816_s).mut_slice(1LL);
				goto _case_begin_1a924a459;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1a924a459:;
			{
				jule::I64 _8317_case_n = _1a745d185_common_prefix_len_ignore_case(_6816_s,jule::Str("infinity", 8));
				if ((3LL < _8317_case_n) && (_8317_case_n < 8LL)) {
					_8317_case_n=3LL;
				}
				if ((_8317_case_n == 3LL) || (_8317_case_n == 8LL)) {
					_6826_f = static_cast<jule::F64>(_1a73a3dab_inf(_7213_sign));
					_6834_n = static_cast<jule::I64>(_7313_nsign + _6834_n);
					_6842_ok = true;
					return std::make_tuple(_6826_f,_6834_n,_6842_ok);
				}
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1a924a4c0:;
			{
				if ((_1a745d185_common_prefix_len_ignore_case(_6816_s,jule::Str("nan", 3)) == 3LL)) {
					_6826_f = static_cast<jule::F64>(_1a74001d2_nan());
					_6834_n = 3LL;
					_6842_ok = true;
					return std::make_tuple(_6826_f,_6834_n,_6842_ok);
				}
			}
		}
		_match_end_1a924a38d:;
	}
	_6826_f = 0LL;
	_6834_n = 0LL;
	_6842_ok = false;
	return std::make_tuple(_6826_f,_6834_n,_6842_ok);
}



inline std::tuple<jule::U64,jule::I64,jule::Bool,jule::Bool,jule::Bool,jule::I64,jule::Bool> _1a745d3e9_read_float(jule::Str _10315_s) {
	jule::U64 _10325_mantissa = jule::U64();
	jule::I64 _10340_exp = jule::I64();
	jule::Bool _10350_neg = jule::Bool();
	jule::Bool _10361_trunc = jule::Bool();
	jule::Bool _10374_hex = jule::Bool();
	jule::I64 _10385_i = jule::I64();
	jule::Bool _10393_ok = jule::Bool();
	if (_10385_i >= static_cast<jule::I64>(static_cast<jule::I64>(_10315_s.len()))) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
	}
	{
		
		if (_10315_s[_10385_i] == '+') {
			_case_begin_1a9251718:;
			{
				(_10385_i)++;
			}
		}
		else if (_10315_s[_10385_i] == '-') {
			_case_begin_1a92518c2:;
			{
				_10350_neg=true;
				(_10385_i)++;
			}
		}
		_match_end_1a92514e8:;
	}
	jule::U64 _11713_base = 10LLU;
	jule::I64 _11813_max_mant_digits = 19LL;
	jule::U8 _11913_exp_char = 'e';
	if ((((_10385_i + 2LL) < static_cast<jule::I64>(static_cast<jule::I64>(_10315_s.len()))) && (_10315_s[_10385_i] == '0')) && (_1a708aee4_lower(_10315_s[(_10385_i + 1LL)]) == 'x')) {
		_11713_base=16LLU;
		_11813_max_mant_digits=16LL;
		_10385_i+=2LL;
		_11913_exp_char='p';
		_10374_hex=true;
	}
	jule::Bool _12713_sawdot = false;
	jule::Bool _12813_sawdigits = false;
	jule::I64 _12913_nd = 0LL;
	jule::I64 _13013_nd_mant = 0LL;
	jule::I64 _13113_dp = 0LL;
	for (; _10385_i < static_cast<jule::I64>(static_cast<jule::I64>(_10315_s.len())); (_10385_i)++) {
		{
			jule::U8 _13313_c = _10315_s[_10385_i];
			{
				
				if (_13313_c == '_') {
					_case_begin_1a9257004:;
					{
						goto _iter_next_1a925650e;
					}
				}
				else if (_13313_c == '.') {
					_case_begin_1a925707b:;
					{
						if (_12713_sawdot) {
							goto _julec_label_loop_end;
						}
						_12713_sawdot=true;
						_13113_dp=_12913_nd;
						goto _iter_next_1a925650e;
					}
				}
				else if (('0' <= _13313_c) && (_13313_c <= '9')) {
					_case_begin_1a9257103:;
					{
						_12813_sawdigits=true;
						if ((_13313_c == '0') && (_12913_nd == 0LL)) {
							(_13113_dp)--;
							goto _iter_next_1a925650e;
						}
						(_12913_nd)++;
						if (_13013_nd_mant < _11813_max_mant_digits) {
							_10325_mantissa*=_11713_base;
							_10325_mantissa+=static_cast<jule::U64>(static_cast<jule::U64>(_13313_c - '0'));
							(_13013_nd_mant)++;
						} else if (_13313_c != '0') {
							_10361_trunc=true;
						}
						goto _iter_next_1a925650e;
					}
				}
				else if (((_11713_base == 16LLU) && ('a' <= static_cast<jule::U8>(static_cast<jule::U8>(_1a708aee4_lower(_13313_c))))) && (_1a708aee4_lower(_13313_c) <= 'f')) {
					_case_begin_1a925717a:;
					{
						_12813_sawdigits=true;
						(_12913_nd)++;
						if (_13013_nd_mant < _11813_max_mant_digits) {
							_10325_mantissa*=16LLU;
							_10325_mantissa+=static_cast<jule::U64>(static_cast<jule::U64>(((_1a708aee4_lower(_13313_c) - 'a') + 10LLU)));
							(_13013_nd_mant)++;
						} else {
							_10361_trunc=true;
						}
						goto _iter_next_1a925650e;
					}
				}
				_match_end_1a9256e16:;
			}
			goto _iter_end_1a925650e;
		}
	_iter_next_1a925650e:;
	}
	_iter_end_1a925650e:;
	_julec_label_loop_end:;
	if ((!(_12813_sawdigits))) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
	}
	if ((!(_12713_sawdot))) {
		_13113_dp=_12913_nd;
	}
	if ((_11713_base == 16LLU)) {
		_13113_dp*=4LL;
		_13013_nd_mant*=4LL;
	}
	if ((_10385_i < static_cast<jule::I64>(static_cast<jule::I64>(_10315_s.len()))) && (_1a708aee4_lower(_10315_s[_10385_i]) == _11913_exp_char)) {
		(_10385_i)++;
		if (_10385_i >= static_cast<jule::I64>(static_cast<jule::I64>(_10315_s.len()))) {
			return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
		}
		jule::I64 _19617_esign = 1LL;
		if (_10315_s[_10385_i] == '+') {
			(_10385_i)++;
		} else if (_10315_s[_10385_i] == '-') {
			(_10385_i)++;
			_19617_esign=-1LL;
		}
		if (((_10385_i >= static_cast<jule::I64>(static_cast<jule::I64>(_10315_s.len()))) || (_10315_s[_10385_i] < '0')) || (_10315_s[_10385_i] > '9')) {
			return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
		}
		jule::I64 _20617_e = 0LL;
		for (; (_10385_i < static_cast<jule::I64>(static_cast<jule::I64>(_10315_s.len()))) && ((('0' <= _10315_s[_10385_i]) && (_10315_s[_10385_i] <= '9')) || (_10315_s[_10385_i] == '_')); (_10385_i)++) {
			{
				if (_10315_s[_10385_i] == '_') {
					goto _iter_next_1a9261cab;
				}
				if ((_20617_e < 10000LL)) {
					_20617_e=static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>((_20617_e * 10LL))) + static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_10315_s[_10385_i]))))) - '0');
				}
			}
		_iter_next_1a9261cab:;
		}
		_iter_end_1a9261cab:;
		_13113_dp+=static_cast<jule::I64>(_20617_e * _19617_esign);
	} else if ((_11713_base == 16LLU)) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
	}
	if ((_10325_mantissa != 0LLU)) {
		_10340_exp=static_cast<jule::I64>(_13113_dp - _13013_nd_mant);
	}
	_10393_ok=true;
	return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
}



inline std::tuple<jule::F64,jule::Bool> _1a745d8c2_atof64exact(jule::U64 _48116_mantissa,jule::I64 _48135_exp,jule::Bool _48145_neg) {
	jule::F64 _48158_f = jule::F64();
	jule::Bool _48166_ok = jule::Bool();
	if (((_48116_mantissa >> _1a70906be_F64_INFO._field_mantbits) != 0LLU)) {
		return std::make_tuple(_48158_f,_48166_ok);
	}
	_48158_f=static_cast<jule::F64>(static_cast<jule::F64>(_48116_mantissa));
	if (_48145_neg) {
		_48158_f=static_cast<jule::F64>((-(_48158_f)));
	}
	{
		
		if ((_48135_exp == 0LL)) {
			_case_begin_1a926c789:;
			{
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		else if ((_48135_exp > 0LL) && (_48135_exp <= 37LL)) {
			_case_begin_1a926c811:;
			{
				if ((_48135_exp > 22LL)) {
					_48158_f*=_1a727e517_F64_POW10[(_48135_exp - 22LL)];
					_48135_exp=22LL;
				}
				if ((_48158_f > 1000000000000000LL) || (_48158_f < -1000000000000000LL)) {
					return std::make_tuple(_48158_f,_48166_ok);
				}
				_48158_f = static_cast<jule::F64>(_48158_f * _1a727e517_F64_POW10[_48135_exp]);
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		else if ((_48135_exp < 0LL) && (_48135_exp >= -22LL)) {
			_case_begin_1a926c888:;
			{
				_48158_f = static_cast<jule::F64>(jule::div(_48158_f,_1a727e517_F64_POW10[(-(_48135_exp))]));
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		_match_end_1a926c6e0:;
	}
	return std::make_tuple(_48158_f,_48166_ok);
}



inline std::tuple<jule::F32,jule::Bool> _1a745da04_atof32exact(jule::U64 _51516_mantissa,jule::I64 _51535_exp,jule::Bool _51549_neg) {
	jule::F32 _51562_f = jule::F32();
	jule::Bool _51570_ok = jule::Bool();
	if (((_51516_mantissa >> _1b774e796_F32_INFO._field_mantbits) != 0LLU)) {
		return std::make_tuple(_51562_f,_51570_ok);
	}
	_51562_f=static_cast<jule::F32>(static_cast<jule::F32>(_51516_mantissa));
	if (_51549_neg) {
		_51562_f=static_cast<jule::F32>((-(_51562_f)));
	}
	{
		
		if ((_51535_exp == 0LL)) {
			_case_begin_1a9272739:;
			{
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		else if ((_51535_exp > 0LL) && (_51535_exp <= 17LL)) {
			_case_begin_1a92727b1:;
			{
				if ((_51535_exp > 10LL)) {
					_51562_f*=_1a729c9a8_F32_POW10[(_51535_exp - 10LL)];
					_51535_exp=10LL;
				}
				if ((_51562_f > 10000000LL) || (_51562_f < -10000000LL)) {
					return std::make_tuple(_51562_f,_51570_ok);
				}
				_51562_f = static_cast<jule::F32>(_51562_f * _1a729c9a8_F32_POW10[_51535_exp]);
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		else if ((_51535_exp < 0LL) && (_51535_exp >= -10LL)) {
			_case_begin_1a9272838:;
			{
				_51562_f = static_cast<jule::F32>(jule::div(_51562_f,_1a729c9a8_F32_POW10[(-(_51535_exp))]));
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		_match_end_1a9272690:;
	}
	return std::make_tuple(_51562_f,_51570_ok);
}



inline std::tuple<jule::F64,jule::I64> _1a745db36_atof_hex(jule::Str _55113_s,_1a71e9c9b_FloatInfo& _55122_flt,jule::U64 _55142_mantissa,jule::I64 _55161_exp,jule::Bool _55171_neg,jule::Bool _55182_trunc) {
	jule::I64 _5529_max_exp = ((static_cast<jule::I64>(1LL << _55122_flt._field_expbits) + _55122_flt._field_bias) - 2LL);
	jule::I64 _5539_min_exp = (_55122_flt._field_bias + 1LL);
	_55161_exp+=static_cast<jule::I64>(static_cast<jule::I64>(_55122_flt._field_mantbits));
	while ((_55142_mantissa != 0LLU) && ((_55142_mantissa >> static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_55122_flt._field_mantbits + 2LLU))))) == 0LLU)) {
		{
			_55142_mantissa<<=1LLU;
			(_55161_exp)--;
		}
	_iter_next_1a9277c06:;
	}
	_iter_end_1a9277c06:;
	if (_55182_trunc) {
		_55142_mantissa|=1LLU;
	}
	while (((_55142_mantissa >> static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(1LLU + _55122_flt._field_mantbits)) + 2LLU))))) != 0LLU)) {
		{
			_55142_mantissa=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_55142_mantissa >> 1LLU))) | static_cast<jule::U64>(static_cast<jule::U64>((_55142_mantissa & 1LLU))));
			(_55161_exp)++;
		}
	_iter_next_1a92793bc:;
	}
	_iter_end_1a92793bc:;
	while ((_55142_mantissa > 1LLU) && (_55161_exp < static_cast<jule::I64>(static_cast<jule::I64>((_5539_min_exp - 2LL))))) {
		{
			_55142_mantissa=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_55142_mantissa >> 1LLU))) | static_cast<jule::U64>(static_cast<jule::U64>((_55142_mantissa & 1LLU))));
			(_55161_exp)++;
		}
	_iter_next_1a92797b8:;
	}
	_iter_end_1a92797b8:;
	jule::U64 _58313_round = (_55142_mantissa & 3LLU);
	_55142_mantissa>>=2LLU;
	_58313_round|=static_cast<jule::U64>((_55142_mantissa & 1LLU));
	_55161_exp+=2LL;
	if ((_58313_round == 3LLU)) {
		(_55142_mantissa)++;
		if (_55142_mantissa == static_cast<jule::U64>(static_cast<jule::U64>(1LLU << static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(1LLU + _55122_flt._field_mantbits)))))) {
			_55142_mantissa>>=1LLU;
			(_55161_exp)++;
		}
	}
	if (((_55142_mantissa >> _55122_flt._field_mantbits) == 0LLU)) {
		_55161_exp=_55122_flt._field_bias;
	}
	jule::I64 _59813_err = static_cast<jule::I64>(0LL);
	if (_55161_exp > _5529_max_exp) {
		_55142_mantissa=static_cast<jule::U64>(static_cast<jule::U64>(1LL << _55122_flt._field_mantbits));
		_55161_exp=static_cast<jule::I64>((_5529_max_exp + 1LL));
		_59813_err=static_cast<jule::I64>(1LL);
	}
	jule::U64 _60513_bits = _55142_mantissa & static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(1LLU << _55122_flt._field_mantbits)) - 1LLU))));
	_60513_bits|=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_55161_exp - _55122_flt._field_bias) & static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(((1LL << _55122_flt._field_expbits) - 1LL))))))) << _55122_flt._field_mantbits);
	if (_55171_neg) {
		_60513_bits|=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(1LLU << _55122_flt._field_mantbits)) << _55122_flt._field_expbits);
	}
	if (_55122_flt == _1b774e796_F32_INFO) {
		return std::make_tuple(static_cast<jule::F64>(static_cast<jule::F64>(_1a7355511_f32_from_bits(static_cast<jule::U32>(static_cast<jule::U32>(_60513_bits))))),_59813_err);
	}
	return std::make_tuple(static_cast<jule::F64>(_1a7355a94_f64_from_bits(_60513_bits)),_59813_err);
}



inline std::tuple<jule::F32,jule::I64,jule::I64> _1a745dc68_atof32(jule::Str _61611_s) {
	jule::F32 _61621_f = jule::F32();
	jule::I64 _61629_n = jule::I64();
	jule::I64 _61637_err = 0LL;
	{
		jule::F64 _61814_val;
		jule::I64 _61819__n;
		jule::Bool _61823_ok;
		std::tie(_61814_val,_61819__n,_61823_ok) = _1a745d2b7_special(_61611_s);
		if (_61823_ok) {
			_61621_f = static_cast<jule::F32>(static_cast<jule::F32>(_61814_val));
			_61629_n = _61819__n;
			_61637_err = static_cast<jule::I64>(0LL);
			return std::make_tuple(_61621_f,_61629_n,_61637_err);
		}
	}
	jule::U64 _62410_mantissa;
	jule::I64 _62420_exp;
	jule::Bool _62425_neg;
	jule::Bool _62430_trunc;
	jule::Bool _62437_hex;
	jule::I64 _62442__n;
	jule::Bool _62450_ok;
	std::tie(_62410_mantissa,_62420_exp,_62425_neg,_62430_trunc,_62437_hex,_62442__n,_62450_ok) = _1a745d3e9_read_float(_61611_s);
	_61629_n=_62442__n;
	if ((!(_62450_ok))) {
		_61621_f = 0LL;
		_61637_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	}
	if (_62437_hex) {
		jule::F64 _63117_ff = 0LL;
		std::tie(_63117_ff,_61637_err) = _1a745db36_atof_hex(_61611_s.slice(0LL,_61629_n),_1b774e796_F32_INFO,_62410_mantissa,_62420_exp,_62425_neg,_62430_trunc);
		_61621_f = static_cast<jule::F32>(static_cast<jule::F32>(_63117_ff));
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	}
	{
		if ((!(_62430_trunc))) {
			std::tie(_61621_f,_62450_ok) = _1a745da04_atof32exact(_62410_mantissa,_62420_exp,_62425_neg);
			if (_62450_ok) {
				_61637_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			}
		}
		std::tie(_61621_f,_62450_ok) = _1a745cbe0_eisel_lemire32(_62410_mantissa,_62420_exp,_62425_neg);
		if (_62450_ok) {
			if ((!(_62430_trunc))) {
				_61637_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			}
			jule::F32 _65321_f_up = 0LL;
			std::tie(_65321_f_up,_62450_ok) = _1a745cbe0_eisel_lemire32(static_cast<jule::U64>((_62410_mantissa + 1LLU)),_62420_exp,_62425_neg);
			if (_62450_ok && (_61621_f == _65321_f_up)) {
				_61637_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			}
		}
	}
	_1a7460ce2_Decimal _66213_d = _1a7460ce2_Decimal();
	if ((!(_1a745d52b_set(&_66213_d, _61611_s.slice(0LL,_61629_n))))) {
		_61621_f = 0LL;
		_61637_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	}
	jule::U64 _66610_b;
	jule::Bool _66613_ovf;
	std::tie(_66610_b,_66613_ovf) = _1a745d65d_float_bits(&_66213_d, _1b774e796_F32_INFO);
	_61621_f=static_cast<jule::F32>(_1a7355511_f32_from_bits(static_cast<jule::U32>(static_cast<jule::U32>(_66610_b))));
	if (_66613_ovf) {
		_61637_err=static_cast<jule::I64>(1LL);
	}
	return std::make_tuple(_61621_f,_61629_n,_61637_err);
}



inline std::tuple<jule::F64,jule::I64,jule::I64> _1a745dd9a_atof64(jule::Str _67411_s) {
	jule::F64 _67421_f = jule::F64();
	jule::I64 _67429_n = jule::I64();
	jule::I64 _67437_err = 0LL;
	{
		jule::F64 _67614_val;
		jule::I64 _67619__n;
		jule::Bool _67623_ok;
		std::tie(_67614_val,_67619__n,_67623_ok) = _1a745d2b7_special(_67411_s);
		if (_67623_ok) {
			_67421_f = _67614_val;
			_67429_n = _67619__n;
			_67437_err = static_cast<jule::I64>(0LL);
			return std::make_tuple(_67421_f,_67429_n,_67437_err);
		}
	}
	jule::U64 _68210_mantissa;
	jule::I64 _68220_exp;
	jule::Bool _68225_neg;
	jule::Bool _68230_trunc;
	jule::Bool _68237_hex;
	jule::I64 _68242__n;
	jule::Bool _68250_ok;
	std::tie(_68210_mantissa,_68220_exp,_68225_neg,_68230_trunc,_68237_hex,_68242__n,_68250_ok) = _1a745d3e9_read_float(_67411_s);
	_67429_n=_68242__n;
	if ((!(_68250_ok))) {
		_67421_f = 0LL;
		_67437_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	}
	if (_68237_hex) {
		std::tie(_67421_f,_67437_err) = _1a745db36_atof_hex(_67411_s.slice(0LL,_67429_n),_1a70906be_F64_INFO,_68210_mantissa,_68220_exp,_68225_neg,_68230_trunc);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	}
	{
		if ((!(_68230_trunc))) {
			std::tie(_67421_f,_68250_ok) = _1a745d8c2_atof64exact(_68210_mantissa,_68220_exp,_68225_neg);
			if (_68250_ok) {
				_67437_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			}
		}
		std::tie(_67421_f,_68250_ok) = _1a745caad_eisel_lemire64(_68210_mantissa,_68220_exp,_68225_neg);
		if (_68250_ok) {
			if ((!(_68230_trunc))) {
				_67437_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			}
			jule::F64 _71021_f_up = 0LL;
			std::tie(_71021_f_up,_68250_ok) = _1a745caad_eisel_lemire64(static_cast<jule::U64>((_68210_mantissa + 1LLU)),_68220_exp,_68225_neg);
			if (_68250_ok && (_67421_f == _71021_f_up)) {
				_67437_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			}
		}
	}
	_1a7460ce2_Decimal _71913_d = _1a7460ce2_Decimal();
	if ((!(_1a745d52b_set(&_71913_d, _67411_s.slice(0LL,_67429_n))))) {
		_67421_f = 0LL;
		_67437_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	}
	jule::U64 _72310_b;
	jule::Bool _72313_ovf;
	std::tie(_72310_b,_72313_ovf) = _1a745d65d_float_bits(&_71913_d, _1a70906be_F64_INFO);
	_67421_f=static_cast<jule::F64>(_1a7355a94_f64_from_bits(_72310_b));
	if (_72313_ovf) {
		_67437_err=static_cast<jule::I64>(1LL);
	}
	return std::make_tuple(_67421_f,_67429_n,_67437_err);
}



inline std::tuple<jule::F64,jule::I64,jule::I64> _1a745decc_parse_float_prefix(jule::Str _73123_s,jule::I64 _73131_bit_size) {
	if ((_73131_bit_size == 32LL)) {
		jule::F32 _73314_f;
		jule::I64 _73317_n;
		jule::I64 _73320_err;
		std::tie(_73314_f,_73317_n,_73320_err) = _1a745dc68_atof32(_73123_s);
		return std::make_tuple(static_cast<jule::F64>(static_cast<jule::F64>(_73314_f)),_73317_n,_73320_err);
	}
	jule::F64 _73710_f;
	jule::I64 _73713_n;
	jule::I64 _73716_err;
	std::tie(_73710_f,_73713_n,_73716_err) = _1a745dd9a_atof64(_73123_s);
	return std::make_tuple(_73710_f,_73713_n,_73716_err);
}



inline jule::Exceptional<jule::F64> _1a745e10e_parse_float(jule::Str _76520_s,jule::I64 _76528_bit_size) {
	jule::F64 _76610_f;
	jule::I64 _76613_n;
	jule::I64 _76616_err;
	std::tie(_76610_f,_76613_n,_76616_err) = _1a745decc_parse_float_prefix(_76520_s,_76528_bit_size);
	if ((_76613_n != static_cast<jule::I64>(static_cast<jule::I64>(_76520_s.len()))) && ((_76616_err == static_cast<jule::I64>(0LL)) || (_76616_err != static_cast<jule::I64>(2LL)))) {
		return jule::Exceptional<jule::F64>(static_cast<jule::I64>(2LL));
	}
	if (_76616_err != static_cast<jule::I64>(0LL)) {
		return jule::Exceptional<jule::F64>(_76616_err);
	}
	return jule::Exceptional<jule::F64>(jule::Any(),_76610_f);
}



inline void _1a745e50a_ryu_ftoa_fixed32(_1a708e723_DecimalSlice& _4926_d,jule::U32 _4947_mant,jule::I64 _4958_exp,jule::I64 _4968_prec) {
	if ((_4968_prec < 0LL)) {
		jule::panic(jule::Str("ryu_ftoa_fixed32 called with negative prec", 42) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:9"));;
	}
	if ((_4968_prec > 9LL)) {
		jule::panic(jule::Str("ryu_ftoa_fixed32 called with prec > 9", 37) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:9"));;
	}
	if ((_4947_mant == 0LLU)) {
		std::tie(_4926_d._field_nd,_4926_d._field_dp) = std::make_tuple(0LL,0LL);
		return;
	}
	jule::I64 _6213_e2 = _4958_exp;
	jule::I64 _639_b = _1a7438c21_len32(_4947_mant);
	if ((_639_b < 25LL)) {
		_4947_mant<<=static_cast<jule::U64>(static_cast<jule::U64>(25LL - _639_b));
		_6213_e2+=static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_639_b))) - 25LL));
	}
	jule::I64 _749_q = (((-(_1a745e9d3_mul_by_log2_log10(static_cast<jule::I64>((_6213_e2 + 24LL))))) + _4968_prec) - 1LL);
	jule::Bool _7913_exact = (_749_q <= 27LL) && (_749_q >= 0LL);
	jule::U32 _8114_di;
	jule::I64 _8118_dexp2;
	jule::Bool _8129_d0;
	std::tie(_8114_di,_8118_dexp2,_8129_d0) = _1a74601ed_mult64bit_pow10(_4947_mant,_6213_e2,_749_q);
	if ((_8118_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult64bit_pow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:9"));;
	}
	if (((_749_q < 0LL) && (_749_q >= -10LL)) && _1a7460462_divisible_by_pow5(static_cast<jule::U64>(static_cast<jule::U64>(_4947_mant)),static_cast<jule::I64>((-(_749_q))))) {
		_7913_exact=true;
		_8129_d0=true;
	}
	jule::U64 _949_extra = static_cast<jule::U64>((-(_8118_dexp2)));
	jule::U32 _959_extra_mask = static_cast<jule::U32>(((1LL << _949_extra) - 1LL));
	jule::U32 _9713_dfrac = 0LLU;
	std::tie(_8114_di,_9713_dfrac) = std::make_tuple(static_cast<jule::U32>(_8114_di >> _949_extra),static_cast<jule::U32>(_8114_di & _959_extra_mask));
	jule::Bool _9913_round_up = false;
	if (_7913_exact) {
		_9913_round_up=((_9713_dfrac > static_cast<jule::U32>(static_cast<jule::U32>(1LLU << static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_949_extra - 1LLU))))))) || ((_9713_dfrac == static_cast<jule::U32>(static_cast<jule::U32>(1LLU << static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_949_extra - 1LLU))))))) && (!(_8129_d0)))) || (((_9713_dfrac == static_cast<jule::U32>(static_cast<jule::U32>(1LLU << static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_949_extra - 1LLU))))))) && _8129_d0) && ((_8114_di & 1LLU) == 1LLU));
	} else {
		_9913_round_up=((_9713_dfrac >> static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_949_extra - 1LLU))))) == 1LLU);
	}
	if ((_9713_dfrac != 0LLU)) {
		_8129_d0=false;
	}
	_1a745e76e_format_decimal(_4926_d,static_cast<jule::U64>(static_cast<jule::U64>(_8114_di)),(!(_8129_d0)),_9913_round_up,_4968_prec);
	_4926_d._field_dp-=_749_q;
}



inline void _1a745e63c_ryu_ftoa_fixed64(_1a708e723_DecimalSlice& _12126_d,jule::U64 _12147_mant,jule::I64 _12158_exp,jule::I64 _12168_prec) {
	if ((_12168_prec > 18LL)) {
		jule::panic(jule::Str("ryu_ftoa_fixed64 called with prec > 18", 38) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:9"));;
	}
	if ((_12147_mant == 0LLU)) {
		std::tie(_12126_d._field_nd,_12126_d._field_dp) = std::make_tuple(0LL,0LL);
		return;
	}
	jule::I64 _13113_e2 = _12158_exp;
	jule::I64 _1329_b = _1a7438eb8_len64(_12147_mant);
	if ((_1329_b < 55LL)) {
		_12147_mant=static_cast<jule::U64>(_12147_mant << static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(55LL - _1329_b))));
		_13113_e2+=static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_1329_b))) - 55LL));
	}
	jule::I64 _1469_q = (((-(_1a745e9d3_mul_by_log2_log10(static_cast<jule::I64>((_13113_e2 + 54LL))))) + _12168_prec) - 1LL);
	jule::Bool _15113_exact = (_1469_q <= 55LL) && (_1469_q >= 0LL);
	jule::U64 _15314_di;
	jule::I64 _15318_dexp2;
	jule::Bool _15329_d0;
	std::tie(_15314_di,_15318_dexp2,_15329_d0) = _1a7460330_mult128bit_pow10(_12147_mant,_13113_e2,_1469_q);
	if ((_15318_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bit_pow10", 50) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:9"));;
	}
	if (((_1469_q < 0LL) && (_1469_q >= -22LL)) && _1a7460462_divisible_by_pow5(_12147_mant,static_cast<jule::I64>((-(_1469_q))))) {
		_15113_exact=true;
		_15329_d0=true;
	}
	jule::U64 _1669_extra = static_cast<jule::U64>((-(_15318_dexp2)));
	jule::U64 _1679_extra_mask = static_cast<jule::U64>(((1LL << _1669_extra) - 1LL));
	jule::U64 _16913_dfrac = 0LLU;
	std::tie(_15314_di,_16913_dfrac) = std::make_tuple(static_cast<jule::U64>(_15314_di >> _1669_extra),static_cast<jule::U64>(_15314_di & _1679_extra_mask));
	jule::Bool _17113_round_up = false;
	if (_15113_exact) {
		_17113_round_up=((_16913_dfrac > static_cast<jule::U64>(static_cast<jule::U64>(1LLU << static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_1669_extra - 1LLU))))))) || ((_16913_dfrac == static_cast<jule::U64>(static_cast<jule::U64>(1LLU << static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_1669_extra - 1LLU))))))) && (!(_15329_d0)))) || (((_16913_dfrac == static_cast<jule::U64>(static_cast<jule::U64>(1LLU << static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_1669_extra - 1LLU))))))) && _15329_d0) && ((_15314_di & 1LLU) == 1LLU));
	} else {
		_17113_round_up=((_16913_dfrac >> static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_1669_extra - 1LLU))))) == 1LLU);
	}
	if ((_16913_dfrac != 0LLU)) {
		_15329_d0=false;
	}
	_1a745e76e_format_decimal(_12126_d,_15314_di,(!(_15329_d0)),_17113_round_up,_12168_prec);
	_12126_d._field_dp-=_1469_q;
}



inline void _1a745e76e_format_decimal(_1a708e723_DecimalSlice& _20024_d,jule::U64 _20045_m,jule::Bool _20057_trunc,jule::Bool _20074_round_up,jule::I64 _20090_prec) {
	jule::U64 _2019_max = _1a730a5a4_U64_POW10[_20090_prec];
	jule::I64 _20213_trimmed = 0LL;
	while (_20045_m >= _2019_max) {
		{
			jule::U64 _20414_a = (_20045_m / 10LLU);
			jule::U64 _20417_b = (_20045_m % 10LL);
			std::tie(_20414_a,_20417_b) = std::make_tuple((_20045_m / 10LLU),(_20045_m % 10LL));
			_20045_m=_20414_a;
			(_20213_trimmed)++;
			if ((_20417_b > 5LLU)) {
				_20074_round_up=true;
			} else if ((_20417_b < 5LLU)) {
				_20074_round_up=false;
			} else {
				_20074_round_up=_20057_trunc || ((_20045_m & 1LLU) == 1LLU);
			}
			if ((_20417_b != 0LLU)) {
				_20057_trunc=true;
			}
		}
	_iter_next_1a92b4a89:;
	}
	_iter_end_1a92b4a89:;
	if (_20074_round_up) {
		(_20045_m)++;
	}
	if (_20045_m >= _2019_max) {
		_20045_m/=10LLU;
		(_20213_trimmed)++;
	}
	jule::U64 _22913_n = static_cast<jule::U64>(_20090_prec);
	_20024_d._field_nd=static_cast<jule::I64>(static_cast<jule::I64>(_20090_prec));
	jule::U64 _23113_v = _20045_m;
	while ((_23113_v >= 100LLU)) {
		{
			jule::U64 _23317_v1 = 0LLU;
			jule::U64 _23417_v2 = 0LLU;
			if (((_23113_v >> 32LLU) == 0LLU)) {
				std::tie(_23317_v1,_23417_v2) = std::make_tuple(static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) / 100LLU))),static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) % 100LL))));
			} else {
				std::tie(_23317_v1,_23417_v2) = std::make_tuple(static_cast<jule::U64>((_23113_v / 100LLU)),static_cast<jule::U64>((_23113_v % 100LL)));
			}
			_22913_n-=2LLU;
			_20024_d._field_d[static_cast<jule::I64>((_22913_n + 1LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 1LLU))]);
			_20024_d._field_d[static_cast<jule::I64>((_22913_n + 0LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 0LLU))]);
			_23113_v=_23317_v1;
		}
	_iter_next_1a92b740a:;
	}
	_iter_end_1a92b740a:;
	if ((_23113_v > 0LLU)) {
		(_22913_n)--;
		_20024_d._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23113_v) + 1LLU))]);
	}
	if ((_23113_v >= 10LLU)) {
		(_22913_n)--;
		_20024_d._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(2LL * _23113_v)]);
	}
	while (_20024_d._field_d[(_20024_d._field_nd - 1LL)] == '0') {
		{
			(_20024_d._field_nd)--;
			(_20213_trimmed)++;
		}
	_iter_next_1a92bd60e:;
	}
	_iter_end_1a92bd60e:;
	_20024_d._field_dp=static_cast<jule::I64>(_20024_d._field_nd + _20213_trimmed);
}



inline void _1a745e8a1_ryu_ftoa_shortest(_1a708e723_DecimalSlice& _26127_d,jule::U64 _26148_mant,jule::I64 _26159_exp,_1a71e9c9b_FloatInfo& _26170_flt) {
	if ((_26148_mant == 0LLU)) {
		std::tie(_26127_d._field_nd,_26127_d._field_dp) = std::make_tuple(0LL,0LL);
		return;
	}
	if ((_26159_exp <= 0LL) && (_1a7433be9_trailing_zeros64(_26148_mant) >= static_cast<jule::I64>(static_cast<jule::I64>((-(_26159_exp)))))) {
		_26148_mant>>=static_cast<jule::U64>(static_cast<jule::U64>((-(_26159_exp))));
		_1a745ee89_ryu_digits(_26127_d,_26148_mant,_26148_mant,_26148_mant,true,false);
		return;
	}
	jule::U64 _27310_ml;
	jule::U64 _27314_mc;
	jule::U64 _27318_mu;
	jule::I64 _27326_e2;
	std::tie(_27310_ml,_27314_mc,_27318_mu,_27326_e2) = _1a745ec47_compute_bounds(_26148_mant,_26159_exp,_26170_flt);
	if ((_27326_e2 == 0LL)) {
		_1a745ee89_ryu_digits(_26127_d,_27310_ml,_27314_mc,_27318_mu,true,false);
		return;
	}
	jule::I64 _2799_q = (_1a745e9d3_mul_by_log2_log10(static_cast<jule::I64>((-(_27326_e2)))) + 1LL);
	jule::U64 _28313_dl = 0LLU;
	jule::U64 _28413_dc = 0LLU;
	jule::U64 _28513_du = 0LLU;
	jule::Bool _28613_dl0 = false;
	jule::Bool _28713_dc0 = false;
	jule::Bool _28813_du0 = false;
	if (_26170_flt == _1b774e796_F32_INFO) {
		jule::U32 _29017_dl32 = 0LLU;
		jule::U32 _29117_dc32 = 0LLU;
		jule::U32 _29217_du32 = 0LLU;
		std::tie(_29017_dl32,std::ignore,_28613_dl0) = _1a74601ed_mult64bit_pow10(static_cast<jule::U32>(static_cast<jule::U32>(_27310_ml)),_27326_e2,_2799_q);
		std::tie(_29117_dc32,std::ignore,_28713_dc0) = _1a74601ed_mult64bit_pow10(static_cast<jule::U32>(static_cast<jule::U32>(_27314_mc)),_27326_e2,_2799_q);
		std::tie(_29217_du32,_27326_e2,_28813_du0) = _1a74601ed_mult64bit_pow10(static_cast<jule::U32>(static_cast<jule::U32>(_27318_mu)),_27326_e2,_2799_q);
		std::tie(_28313_dl,_28413_dc,_28513_du) = std::make_tuple(static_cast<jule::U64>(static_cast<jule::U64>(_29017_dl32)),static_cast<jule::U64>(static_cast<jule::U64>(_29117_dc32)),static_cast<jule::U64>(static_cast<jule::U64>(_29217_du32)));
	} else {
		std::tie(_28313_dl,std::ignore,_28613_dl0) = _1a7460330_mult128bit_pow10(_27310_ml,_27326_e2,_2799_q);
		std::tie(_28413_dc,std::ignore,_28713_dc0) = _1a7460330_mult128bit_pow10(_27314_mc,_27326_e2,_2799_q);
		std::tie(_28513_du,_27326_e2,_28813_du0) = _1a7460330_mult128bit_pow10(_27318_mu,_27326_e2,_2799_q);
	}
	if ((_27326_e2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bit_pow10", 50) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:9"));;
	}
	if ((_2799_q > 55LL)) {
		std::tie(_28613_dl0,_28713_dc0,_28813_du0) = std::make_tuple(false,false,false);
	}
	if ((_2799_q < 0LL) && (_2799_q >= -24LL)) {
		if (_1a7460462_divisible_by_pow5(_27310_ml,static_cast<jule::I64>((-(_2799_q))))) {
			_28613_dl0=true;
		}
		if (_1a7460462_divisible_by_pow5(_27314_mc,static_cast<jule::I64>((-(_2799_q))))) {
			_28713_dc0=true;
		}
		if (_1a7460462_divisible_by_pow5(_27318_mu,static_cast<jule::I64>((-(_2799_q))))) {
			_28813_du0=true;
		}
	}
	jule::U64 _3259_extra = static_cast<jule::U64>((-(_27326_e2)));
	jule::U64 _3269_extra_mask = static_cast<jule::U64>(((1LL << _3259_extra) - 1LL));
	jule::U64 _32813_fracl = 0LLU;
	std::tie(_28313_dl,_32813_fracl) = std::make_tuple(static_cast<jule::U64>(_28313_dl >> _3259_extra),static_cast<jule::U64>(_28313_dl & _3269_extra_mask));
	jule::U64 _33013_fracc = 0LLU;
	std::tie(_28413_dc,_33013_fracc) = std::make_tuple(static_cast<jule::U64>(_28413_dc >> _3259_extra),static_cast<jule::U64>(_28413_dc & _3269_extra_mask));
	jule::U64 _33213_fracu = 0LLU;
	std::tie(_28513_du,_33213_fracu) = std::make_tuple(static_cast<jule::U64>(_28513_du >> _3259_extra),static_cast<jule::U64>(_28513_du & _3269_extra_mask));
	jule::Bool _33813_uok = (!(_28813_du0)) || (_33213_fracu > 0LLU);
	if (_28813_du0 && (_33213_fracu == 0LLU)) {
		_33813_uok=((_26148_mant & 1LLU) == 0LLU);
	}
	if ((!(_33813_uok))) {
		(_28513_du)--;
	}
	jule::Bool _34713_cup = false;
	if (_28713_dc0) {
		_34713_cup=(_33013_fracc > static_cast<jule::U64>(static_cast<jule::U64>(1LLU << static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_3259_extra - 1LLU))))))) || ((_33013_fracc == static_cast<jule::U64>(static_cast<jule::U64>(1LLU << static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_3259_extra - 1LLU))))))) && ((_28413_dc & 1LLU) == 1LLU));
	} else {
		_34713_cup=((_33013_fracc >> static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_3259_extra - 1LLU))))) == 1LLU);
	}
	jule::Bool _3619_lok = (_28613_dl0 && (_32813_fracl == 0LLU)) && ((_26148_mant & 1LLU) == 0LLU);
	if ((!(_3619_lok))) {
		(_28313_dl)++;
	}
	jule::Bool _3669_c0 = _28713_dc0 && (_33013_fracc == 0LLU);
	_1a745ee89_ryu_digits(_26127_d,_28313_dl,_28413_dc,_28513_du,_3669_c0,_34713_cup);
	_26127_d._field_dp-=_2799_q;
}



inline jule::I64 _1a745e9d3_mul_by_log2_log10(jule::I64 _37722_x) {
	return static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>((_37722_x * 78913LL)))) >> 18LL));
}



inline jule::I64 _1a745eb15_mul_by_log10_log2(jule::I64 _38722_x) {
	return static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>((_38722_x * 108853LL)))) >> 15LL));
}



inline std::tuple<jule::U64,jule::U64,jule::U64,jule::I64> _1a745ec47_compute_bounds(jule::U64 _39519_mant,jule::I64 _39530_exp,_1a71e9c9b_FloatInfo& _3966_flt) {
	jule::U64 _39624_lower = jule::U64();
	jule::U64 _39636_central = jule::U64();
	jule::U64 _39650_upper = jule::U64();
	jule::I64 _39662_e2 = jule::I64();
	if ((_39519_mant != static_cast<jule::U64>(static_cast<jule::U64>(1LLU << _3966_flt._field_mantbits))) || (_39530_exp == static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>((_3966_flt._field_bias + 1LL))) - static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_3966_flt._field_mantbits))))))) {
		std::tie(_39624_lower,_39636_central,_39650_upper) = std::make_tuple(static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(2LLU * _39519_mant)) - 1LLU)),static_cast<jule::U64>(2LLU * _39519_mant),static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(2LLU * _39519_mant)) + 1LLU)));
		_39662_e2=static_cast<jule::I64>((_39530_exp - 1LL));
	} else {
		std::tie(_39624_lower,_39636_central,_39650_upper) = std::make_tuple(static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(4LLU * _39519_mant)) - 1LLU)),static_cast<jule::U64>(4LLU * _39519_mant),static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(4LLU * _39519_mant)) + 2LLU)));
		_39662_e2=static_cast<jule::I64>((_39530_exp - 2LL));
	}
	return std::make_tuple(_39624_lower,_39636_central,_39650_upper,_39662_e2);
}



inline void _1a745ee89_ryu_digits(_1a708e723_DecimalSlice& _40920_d,jule::U64 _40937_lower,jule::U64 _40949_central,jule::U64 _40963_upper,jule::Bool _40979_c0,jule::Bool _40993_cup) {
	jule::U32 _41014_lhi;
	jule::U32 _41019_llo;
	std::tie(_41014_lhi,_41019_llo) = _1a7460594_divmod1e9(_40937_lower);
	jule::U32 _41110_chi;
	jule::U32 _41115_clo;
	std::tie(_41110_chi,_41115_clo) = _1a7460594_divmod1e9(_40949_central);
	jule::U32 _41210_uhi;
	jule::U32 _41215_ulo;
	std::tie(_41210_uhi,_41215_ulo) = _1a7460594_divmod1e9(_40963_upper);
	if ((_41210_uhi == 0LLU)) {
		_1a74600bb_ryu_digits32(_40920_d,_41019_llo,_41115_clo,_41215_ulo,_40979_c0,_40993_cup,8LL);
	} else if (_41014_lhi < _41210_uhi) {
		if ((_41019_llo != 0LLU)) {
			(_41014_lhi)++;
		}
		_40979_c0=_40979_c0 && (_41115_clo == 0LLU);
		_40993_cup=(_41115_clo > 500000000LL) || ((_41115_clo == 500000000LL) && _40993_cup);
		_1a74600bb_ryu_digits32(_40920_d,_41014_lhi,_41110_chi,_41210_uhi,_40979_c0,_40993_cup,8LL);
		_40920_d._field_dp+=9LL;
	} else {
		_40920_d._field_nd=0LL;
		jule::U64 _42817_n = static_cast<jule::U64>(9LLU);
		jule::U32 _42917_v = _41110_chi;
		while ((_42917_v > 0LLU)) {
			{
				jule::U32 _43118_v1 = (_42917_v / 10LLU);
				jule::U32 _43122_v2 = (_42917_v % 10LL);
				std::tie(_43118_v1,_43122_v2) = std::make_tuple((_42917_v / 10LLU),(_42917_v % 10LL));
				_42917_v=_43118_v1;
				(_42817_n)--;
				_40920_d._field_d[static_cast<jule::I64>(_42817_n)]=static_cast<jule::U8>(static_cast<jule::U8>(_43122_v2 + '0'));
			}
		_iter_next_1a92e0994:;
		}
		_iter_end_1a92e0994:;
		_40920_d._field_d=_40920_d._field_d.slice(static_cast<jule::I64>(_42817_n));
		_40920_d._field_nd=static_cast<jule::I64>(static_cast<jule::I64>(9LL - _42817_n));
		_1a74600bb_ryu_digits32(_40920_d,_41019_llo,_41115_clo,_41215_ulo,_40979_c0,_40993_cup,static_cast<jule::I64>((_40920_d._field_nd + 8LL)));
	}
	while ((_40920_d._field_nd > 0LL) && (_40920_d._field_d[(_40920_d._field_nd - 1LL)] == '0')) {
		{
			(_40920_d._field_nd)--;
		}
	_iter_next_1a92e0bb4:;
	}
	_iter_end_1a92e0bb4:;
	while ((_40920_d._field_nd > 0LL) && (_40920_d._field_d[0LL] == '0')) {
		{
			(_40920_d._field_nd)--;
			(_40920_d._field_dp)--;
			_40920_d._field_d=_40920_d._field_d.slice(1LL);
		}
	_iter_next_1a92e3de8:;
	}
	_iter_end_1a92e3de8:;
}



inline void _1a74600bb_ryu_digits32(_1a708e723_DecimalSlice& _45422_d,jule::U32 _45443_lower,jule::U32 _45459_central,jule::U32 _4559_upper,jule::Bool _45525_c0,jule::Bool _45539_cup,jule::I64 _45554_endindex) {
	if ((_4559_upper == 0LLU)) {
		_45422_d._field_dp=static_cast<jule::I64>((_45554_endindex + 1LL));
		return;
	}
	jule::I64 _46013_trimmed = 0LL;
	jule::I64 _46313_c_next_digit = 0LL;
	while ((_4559_upper > 0LLU)) {
		{
			jule::U32 _47013_l = ((_45443_lower + 9LLU) / 10LLU);
			jule::U32 _47118_c = (_45459_central / 10LLU);
			jule::U32 _47125_cdigit = (_45459_central % 10LL);
			std::tie(_47118_c,_47125_cdigit) = std::make_tuple((_45459_central / 10LLU),(_45459_central % 10LL));
			jule::U32 _47213_u = (_4559_upper / 10LLU);
			if (_47013_l > _47213_u) {
				goto _iter_end_1a92e74a1;
			}
			if ((_47013_l == static_cast<jule::U32>(static_cast<jule::U32>((_47118_c + 1LLU)))) && (_47118_c < _47213_u)) {
				(_47118_c)++;
				_47125_cdigit=0LLU;
				_45539_cup=false;
			}
			(_46013_trimmed)++;
			_45525_c0=_45525_c0 && (_46313_c_next_digit == 0LL);
			_46313_c_next_digit=static_cast<jule::I64>(static_cast<jule::I64>(_47125_cdigit));
			std::tie(_45443_lower,_45459_central,_4559_upper) = std::make_tuple(_47013_l,_47118_c,_47213_u);
		}
	_iter_next_1a92e74a1:;
	}
	_iter_end_1a92e74a1:;
	if ((_46013_trimmed > 0LL)) {
		_45539_cup=((_46313_c_next_digit > 5LL) || ((_46313_c_next_digit == 5LL) && (!(_45525_c0)))) || (((_46313_c_next_digit == 5LL) && _45525_c0) && ((_45459_central & 1LLU) == 1LLU));
	}
	if ((_45459_central < _4559_upper) && _45539_cup) {
		(_45459_central)++;
	}
	_45554_endindex-=_46013_trimmed;
	jule::U32 _50913_v = _45459_central;
	jule::I64 _51013_n = _45554_endindex;
	while (_51013_n > _45422_d._field_nd) {
		{
			jule::U32 _51214_v1 = (_50913_v / 100LLU);
			jule::U32 _51218_v2 = (_50913_v % 100LL);
			std::tie(_51214_v1,_51218_v2) = std::make_tuple((_50913_v / 100LLU),(_50913_v % 100LL));
			_45422_d._field_d[_51013_n]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 1LLU))]);
			_45422_d._field_d[(_51013_n - 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 0LLU))]);
			_51013_n-=2LL;
			_50913_v=_51214_v1;
		}
	_iter_next_1a92ec561:;
	}
	_iter_end_1a92ec561:;
	if (_51013_n == _45422_d._field_nd) {
		_45422_d._field_d[_51013_n]=static_cast<jule::U8>(static_cast<jule::U8>(_50913_v + '0'));
	}
	_45422_d._field_nd=static_cast<jule::I64>((_45554_endindex + 1LL));
	_45422_d._field_dp=static_cast<jule::I64>(_45422_d._field_nd + _46013_trimmed);
}



inline std::tuple<jule::U32,jule::I64,jule::Bool> _1a74601ed_mult64bit_pow10(jule::U32 _53420_m,jule::I64 _53432_e2,jule::I64 _53441_q) {
	jule::U32 _53451_resM = jule::U32();
	jule::I64 _53462_resE = jule::I64();
	jule::Bool _53473_exact = jule::Bool();
	if ((_53441_q == 0LL)) {
		_53451_resM = static_cast<jule::U32>((_53420_m << 6LLU));
		_53462_resE = static_cast<jule::I64>((_53432_e2 - 6LL));
		_53473_exact = true;
		return std::make_tuple(_53451_resM,_53462_resE,_53473_exact);
	}
	if ((_53441_q < -348LL) || (347LL < _53441_q)) {
		jule::panic(jule::Str("mult64bit_pow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:9"));;
	}
	jule::U64 _54313_pow = _1a716d0d7_DETAILED_POWS_OF_TEN[(_53441_q - -348LL)][1LL];
	if ((_53441_q < 0LL)) {
		_54313_pow+=1LLU;
	}
	jule::U64 _54810_hi;
	jule::U64 _54814_lo;
	std::tie(_54810_hi,_54814_lo) = _1a743b30b_mul64(static_cast<jule::U64>(static_cast<jule::U64>(_53420_m)),_54313_pow);
	_53432_e2+=static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(_1a745eb15_mul_by_log10_log2(_53441_q))) - 63LL))) + 57LL));
	_53451_resM = static_cast<jule::U32>(static_cast<jule::U32>((_54810_hi << 7LLU) | static_cast<jule::U64>(static_cast<jule::U64>((_54814_lo >> 57LLU)))));
	_53462_resE = _53432_e2;
	_53473_exact = ((_54814_lo << 7LLU) == 0LLU);
	return std::make_tuple(_53451_resM,_53462_resE,_53473_exact);
}



inline std::tuple<jule::U64,jule::I64,jule::Bool> _1a7460330_mult128bit_pow10(jule::U64 _56221_m,jule::I64 _56233_e2,jule::I64 _56242_q) {
	jule::U64 _56252_resM = jule::U64();
	jule::I64 _56263_resE = jule::I64();
	jule::Bool _56274_exact = jule::Bool();
	if ((_56242_q == 0LL)) {
		_56252_resM = static_cast<jule::U64>((_56221_m << 8LLU));
		_56263_resE = static_cast<jule::I64>((_56233_e2 - 8LL));
		_56274_exact = true;
		return std::make_tuple(_56252_resM,_56263_resE,_56274_exact);
	}
	if ((_56242_q < -348LL) || (347LL < _56242_q)) {
		jule::panic(jule::Str("mult128bit_pow10: power of 10 is out of range", 45) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:9"));;
	}
	jule::Array<jule::U64,2> _57113_pow = _1a716d0d7_DETAILED_POWS_OF_TEN[(_56242_q - -348LL)];
	if ((_56242_q < 0LL)) {
		_57113_pow[0LL]+=1LLU;
	}
	_56233_e2+=static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(_1a745eb15_mul_by_log10_log2(_56242_q))) - 127LL))) + 119LL));
	jule::U64 _57910_l1;
	jule::U64 _57914_l0;
	std::tie(_57910_l1,_57914_l0) = _1a743b30b_mul64(_56221_m,_57113_pow[0LL]);
	jule::U64 _58014_h1;
	jule::U64 _58018_h0;
	std::tie(_58014_h1,_58018_h0) = _1a743b30b_mul64(_56221_m,_57113_pow[1LL]);
	jule::U64 _58110_mid;
	jule::U64 _58115_carry;
	std::tie(_58110_mid,_58115_carry) = _1a7439b78_add64(_57910_l1,_58018_h0,0LLU);
	_58014_h1+=_58115_carry;
	_56252_resM = static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_58014_h1 << 9LLU))) | static_cast<jule::U64>(static_cast<jule::U64>((_58110_mid >> 55LLU))));
	_56263_resE = _56233_e2;
	_56274_exact = ((_58110_mid << 9LLU) == 0LLU) && (_57914_l0 == 0LLU);
	return std::make_tuple(_56252_resM,_56263_resE,_56274_exact);
}



inline jule::Bool _1a7460462_divisible_by_pow5(jule::U64 _58626_m,jule::I64 _58634_k) {
	if ((_58626_m == 0LLU)) {
		return true;
	}
	jule::I64 _59013_i = 0LL;
	for (; _59013_i < _58634_k; (_59013_i)++) {
		{
			if (((_58626_m % 5LL) != 0LLU)) {
				return false;
			}
			_58626_m/=5LLU;
		}
	_iter_next_1a930a151:;
	}
	_iter_end_1a930a151:;
	return true;
}



inline std::tuple<jule::U32,jule::U32> _1a7460594_divmod1e9(jule::U64 _60214_x) {
	{
		return std::make_tuple(static_cast<jule::U32>(static_cast<jule::U32>((_60214_x / 1000000000LL))),static_cast<jule::U32>(static_cast<jule::U32>((_60214_x % 1000000000LL))));
	}
	jule::U64 _60710_hi;
	std::tie(_60710_hi,std::ignore) = _1a743b30b_mul64(static_cast<jule::U64>((_60214_x >> 1LLU)),9903520314283042200LLU);
	jule::U64 _6089_q = (_60710_hi >> 28LLU);
	return std::make_tuple(static_cast<jule::U32>(static_cast<jule::U32>(_6089_q)),static_cast<jule::U32>(static_cast<jule::U32>(_60214_x - static_cast<jule::U64>(static_cast<jule::U64>((_6089_q * 1000000000LL))))));
}



inline void _1a746250d_trim(_1a7460ce2_Decimal& _33314_a) {
	while ((_33314_a._field_nd > 0LL) && (_33314_a._field_d[(_33314_a._field_nd - 1LL)] == '0')) {
		{
			(_33314_a._field_nd)--;
		}
	_iter_next_1a9311696:;
	}
	_iter_end_1a9311696:;
	if ((_33314_a._field_nd == 0LL)) {
		_33314_a._field_dp=0LL;
	}
}



inline void _1a74627b6_right_shift(_1a7460ce2_Decimal& _34321_a,jule::U64 _34333_k) {
	jule::I64 _34413_r = 0LL;
	jule::I64 _34513_w = 0LL;
	jule::U64 _34813_n = 0LLU;
	for (; ((_34813_n >> _34333_k) == 0LLU); (_34413_r)++) {
		{
			if (_34413_r >= _34321_a._field_nd) {
				if ((_34813_n == 0LLU)) {
					_34321_a._field_nd=0LL;
					return;
				}
				while (((_34813_n >> _34333_k) == 0LLU)) {
					{
						_34813_n=static_cast<jule::U64>((_34813_n * 10LLU));
						(_34413_r)++;
					}
				_iter_next_1a9314c2c:;
				}
				_iter_end_1a9314c2c:;
				goto _iter_end_1a9312e6c;
			}
			jule::U64 _36213_c = static_cast<jule::U64>(_34321_a._field_d[_34413_r]);
			_34813_n=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_34813_n * 10LLU))) + _36213_c)) - '0');
		}
	_iter_next_1a9312e6c:;
	}
	_iter_end_1a9312e6c:;
	_34321_a._field_dp-=static_cast<jule::I64>((_34413_r - 1LL));
	jule::U64 _3679_mask = static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(1LL << _34333_k))) - 1LLU));
	for (; _34413_r < _34321_a._field_nd; (_34413_r)++) {
		{
			jule::U64 _37113_c = static_cast<jule::U64>(_34321_a._field_d[_34413_r]);
			jule::U64 _37213_dig = _34813_n >> _34333_k;
			_34813_n&=_3679_mask;
			_34321_a._field_d[_34513_w]=static_cast<jule::U8>(static_cast<jule::U8>(_37213_dig + '0'));
			(_34513_w)++;
			_34813_n=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_34813_n * 10LLU))) + _37113_c)) - '0');
		}
	_iter_next_1a93172d4:;
	}
	_iter_end_1a93172d4:;
	while ((_34813_n > 0LLU)) {
		{
			jule::U64 _38113_dig = _34813_n >> _34333_k;
			_34813_n&=_3679_mask;
			if ((_34513_w < 800LL)) {
				_34321_a._field_d[_34513_w]=static_cast<jule::U8>(static_cast<jule::U8>(_38113_dig + '0'));
				(_34513_w)++;
			} else if ((_38113_dig > 0LLU)) {
				_34321_a._field_trunc=true;
			}
			_34813_n=static_cast<jule::U64>((_34813_n * 10LLU));
		}
	_iter_next_1a9318cb9:;
	}
	_iter_end_1a9318cb9:;
	_34321_a._field_nd=_34513_w;
	_1a746250d_trim(_34321_a);
}



inline jule::Bool _1a7462be5_prefix_is_less_than(jule::Array<jule::U8,800> _39724_b,jule::I64 _39738_end,jule::Str _39748_s) {
	jule::I64 _39813_i = 0LL;
	for (; _39813_i < static_cast<jule::I64>(static_cast<jule::I64>(_39748_s.len())); (_39813_i)++) {
		{
			if (_39813_i >= _39738_end) {
				return true;
			}
			if (_39724_b[_39813_i] != _39748_s[_39813_i]) {
				return _39724_b[_39813_i] < _39748_s[_39813_i];
			}
		}
	_iter_next_1a931b9ae:;
	}
	_iter_end_1a931b9ae:;
	return false;
}



inline void _1a7462e9d_left_shift(_1a7460ce2_Decimal& _41120_a,jule::U64 _41132_k) {
	jule::I64 _41213_delta = _1a729c3e2_LEFTCHEATS[static_cast<jule::I64>(_41132_k)]._field_delta;
	if (_1a7462be5_prefix_is_less_than(_41120_a._field_d,_41120_a._field_nd,_1a729c3e2_LEFTCHEATS[static_cast<jule::I64>(_41132_k)]._field_cutoff)) {
		(_41213_delta)--;
	}
	jule::I64 _41713_r = _41120_a._field_nd;
	jule::I64 _41813_w = _41120_a._field_nd + _41213_delta;
	jule::U64 _42113_n = 0LLU;
	(_41713_r)--;
	for (; (_41713_r >= 0LL); (_41713_r)--) {
		{
			_42113_n+=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_41120_a._field_d[_41713_r]))) - '0'))) << _41132_k);
			jule::U64 _42513_quo = (_42113_n / 10LLU);
			jule::U64 _42613_rem = _42113_n - static_cast<jule::U64>(static_cast<jule::U64>(10LLU * _42513_quo));
			(_41813_w)--;
			if ((_41813_w < 800LL)) {
				_41120_a._field_d[_41813_w]=static_cast<jule::U8>(static_cast<jule::U8>(_42613_rem + '0'));
			} else if ((_42613_rem != 0LLU)) {
				_41120_a._field_trunc=true;
			}
			_42113_n=_42513_quo;
		}
	_iter_next_1a9320210:;
	}
	_iter_end_1a9320210:;
	while ((_42113_n > 0LLU)) {
		{
			jule::U64 _43813_quo = (_42113_n / 10LLU);
			jule::U64 _43913_rem = _42113_n - static_cast<jule::U64>(static_cast<jule::U64>(10LLU * _43813_quo));
			(_41813_w)--;
			if ((_41813_w < 800LL)) {
				_41120_a._field_d[_41813_w]=static_cast<jule::U8>(static_cast<jule::U8>(_43913_rem + '0'));
			} else if ((_43913_rem != 0LLU)) {
				_41120_a._field_trunc=true;
			}
			_42113_n=_43813_quo;
		}
	_iter_next_1a9322a81:;
	}
	_iter_end_1a9322a81:;
	_41120_a._field_nd+=_41213_delta;
	if ((_41120_a._field_nd >= 800LL)) {
		_41120_a._field_nd=800LL;
	}
	_41120_a._field_dp+=_41213_delta;
	_1a746250d_trim(_41120_a);
}



inline jule::Bool _1a74632de_should_round_up(_1a7460ce2_Decimal& _45821_a,jule::I64 _45833_nd) {
	if ((_45833_nd < 0LL) || (_45833_nd >= _45821_a._field_nd)) {
		return false;
	}
	if ((_45821_a._field_d[_45833_nd] == '5') && ((_45833_nd + 1LL) == _45821_a._field_nd)) {
		if (_45821_a._field_trunc) {
			return true;
		}
		return (_45833_nd > 0LL) && (((_45821_a._field_d[(_45833_nd - 1LL)] - '0') & 1LL) != 0LLU);
	}
	return _45821_a._field_d[_45833_nd] >= '5';
}



inline jule::Str _1a7464279_fmt_uint(jule::U64 _6017_i,jule::I64 _6025_base) {
	if ((true && (_6017_i < 100LLU)) && (_6025_base == 10LL)) {
		return _1a7464b92_small(static_cast<jule::I64>(static_cast<jule::I64>(_6017_i)));
	}
	jule::Str _6413_s;
	std::tie(std::ignore,_6413_s) = _1a7465467_fmt_bits(nullptr,_6017_i,_6025_base,false,false);
	return _6413_s;
}



inline jule::Str _1a746460e_fmt_int(jule::I64 _7116_i,jule::I64 _7124_base) {
	if (((true && (0LL <= _7116_i)) && (_7116_i < 100LL)) && (_7124_base == 10LL)) {
		return _1a7464b92_small(static_cast<jule::I64>(static_cast<jule::I64>(_7116_i)));
	}
	jule::Str _7513_s;
	std::tie(std::ignore,_7513_s) = _1a7465467_fmt_bits(nullptr,static_cast<jule::U64>(static_cast<jule::U64>(_7116_i)),_7124_base,(_7116_i < 0LL),false);
	return _7513_s;
}



inline jule::Str _1a74648a6_itoa(jule::I64 _8013_i) {
	return _1a746460e_fmt_int(static_cast<jule::I64>(static_cast<jule::I64>(_8013_i)),10LL);
}



inline jule::Str _1a7464b92_small(jule::I64 _8510_i) {
	if ((_8510_i < 10LL)) {
		return jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(_8510_i,(_8510_i + 1LL));
	}
	return jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice(_8510_i << 1LLU,((_8510_i << 1LLU) + 2LL));
}



inline jule::Bool _1a7464e39_is_power_of_two(jule::I64 _9220_x) {
	return ((_9220_x & static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>((_9220_x - 1LL))))) == 0LL);
}



inline std::tuple<jule::Slice<jule::U8>,jule::Str> _1a7465467_fmt_bits(jule::Slice<jule::U8> _10117_dst,jule::U64 _10134_u,jule::I64 _10142_base,jule::Bool _10153_neg,jule::Bool _10164_append_) {
	jule::Slice<jule::U8> _10181_d = jule::Slice<jule::U8>();
	jule::Str _10192_s = jule::Str();
	if ((_10142_base < 2LL) || (_10142_base > 36LL)) {
		jule::panic(jule::Str("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:103:9"));;
	}
	jule::Slice<jule::U8> _10713_a = jule::Slice<jule::U8>::alloc(65LL);
	jule::I64 _10813_i = _10713_a.len();
	if (_10153_neg) {
		_10134_u=static_cast<jule::U64>((-(_10134_u)));
	}
	if ((_10142_base == 10LL)) {
		
		jule::U64 _14917_us = static_cast<jule::U64>(_10134_u);
		while ((_14917_us >= 100LLU)) {
			{
				jule::U64 _15117_is = (_14917_us % 100LL) << 1LLU;
				_14917_us/=100LLU;
				_10813_i-=2LL;
				_10713_a[(_10813_i + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 1LLU))]);
				_10713_a[(_10813_i + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 0LLU))]);
			}
		_iter_next_1a9332123:;
		}
		_iter_end_1a9332123:;
		jule::U64 _15913_is = _14917_us << 1LLU;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15913_is + 1LLU))]);
		if ((_14917_us >= 10LLU)) {
			(_10813_i)--;
			_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(_15913_is)]);
		}
	} else if (_1a7464e39_is_power_of_two(_10142_base)) {
		jule::U64 _17413_shift = (static_cast<jule::U64>(_1a74330d3_trailing_zeros(static_cast<jule::U64>(static_cast<jule::U64>(_10142_base)))) & 7LLU);
		jule::U64 _17513_b = static_cast<jule::U64>(_10142_base);
		jule::U64 _17613_m = (static_cast<jule::U64>(_10142_base) - 1LLU);
		while (_10134_u >= _17513_b) {
			{
				(_10813_i)--;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10134_u) & _17613_m)]);
				_10134_u>>=_17413_shift;
			}
		_iter_next_1a933a8e0:;
		}
		_iter_end_1a933a8e0:;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10134_u))]);
	} else {
		jule::U64 _18713_b = static_cast<jule::U64>(_10142_base);
		while (_10134_u >= _18713_b) {
			{
				(_10813_i)--;
				jule::U64 _19317_q = jule::div(_10134_u,_18713_b);
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10134_u - static_cast<jule::U64>(static_cast<jule::U64>(_19317_q * _18713_b))))]);
				_10134_u=_19317_q;
			}
		_iter_next_1a933d283:;
		}
		_iter_end_1a933d283:;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10134_u))]);
	}
	if (_10153_neg) {
		(_10813_i)--;
		_10713_a[_10813_i]='-';
	}
	if (_10164_append_) {
		_10181_d=jule::append(_10117_dst,_10713_a.slice(_10813_i));
		return std::make_tuple(_10181_d,_10192_s);
	}
	_10192_s=static_cast<jule::Str>(_10713_a.slice(_10813_i));
	return std::make_tuple(_10181_d,_10192_s);
}



inline void _1a7527051_lshift_unsig(_1a751ddb1_Const& _58722_c,_1a751ddb1_Const& _58733_x) {
	jule::U64 _5889_l = _1a75210a0_as_u64(&_58722_c);
	jule::U64 _5899_r = _1a75210a0_as_u64(&_58733_x);
	_1a752180e_set_u64(&_58722_c, static_cast<jule::U64>(_5889_l << _5899_r));
}



inline void _1a752734d_rshift_unsig(_1a751ddb1_Const& _59322_c,_1a751ddb1_Const& _59333_x) {
	jule::U64 _5949_l = _1a75210a0_as_u64(&_59322_c);
	jule::U64 _5959_r = _1a75210a0_as_u64(&_59333_x);
	_1a752180e_set_u64(&_59322_c, static_cast<jule::U64>(_5949_l >> _5959_r));
}



inline jule::Str _1a75a6a81_real_kind_of(jule::Str _4521_kind) {
	{
		auto &_match_expr{ _4521_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1a93c52c6:;
			{
				return _1a75a6520_SYS_INT;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1a93c533c:;
			{
				return _1a75a660d_SYS_UINT;
			}
		}
		else {
			_case_begin_1a93c0920:;
			{
				return _4521_kind;
			}
		}
		_match_end_1a93c0c1c:;
	}
}



inline jule::I64 _1a75a6d28_bitsize_of(jule::Str _5919_k) {
	{
		auto &_match_expr{ _5919_k };
		
		if (_match_expr == jule::Str("i8", 2) || _match_expr == jule::Str("u8", 2)) {
			_case_begin_1a93c6481:;
			{
				return 8LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3) || _match_expr == jule::Str("u16", 3)) {
			_case_begin_1a93c60da:;
			{
				return 16LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3) || _match_expr == jule::Str("u32", 3) || _match_expr == jule::Str("f32", 3)) {
			_case_begin_1a93c6151:;
			{
				return 32LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3) || _match_expr == jule::Str("u64", 3) || _match_expr == jule::Str("f64", 3)) {
			_case_begin_1a93c61b7:;
			{
				return 64LL;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("int", 3)) {
			_case_begin_1a93c6250:;
			{
				return _1a75a6432_BIT_SIZE;
			}
		}
		else {
			_case_begin_1a93c5e31:;
			{
				return -1LL;
			}
		}
		_match_end_1a93c5529:;
	}
}



inline jule::Str _1a75a7114_int_from_bits(jule::I64 _8622_bits) {
	{
		auto &_match_expr{ _8622_bits };
		
		if (_match_expr == 8LL) {
			_case_begin_1a93c840b:;
			{
				return jule::Str("i8", 2);
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1a93c851b:;
			{
				return jule::Str("i16", 3);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1a93c8582:;
			{
				return jule::Str("i32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1a93c8241:;
			{
				return jule::Str("i64", 3);
			}
		}
		else {
			_case_begin_1a93c8087:;
			{
				return jule::Str();
			}
		}
		_match_end_1a93c65a2:;
	}
}



inline jule::Str _1a75a73ab_uint_from_bits(jule::I64 _10423_bits) {
	{
		auto &_match_expr{ _10423_bits };
		
		if (_match_expr == 8LL) {
			_case_begin_1a93c98c4:;
			{
				return jule::Str("u8", 2);
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1a93c99d4:;
			{
				return jule::Str("u16", 3);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1a93c9a4a:;
			{
				return jule::Str("u32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1a93c9709:;
			{
				return jule::Str("u64", 3);
			}
		}
		else {
			_case_begin_1a93c9253:;
			{
				return jule::Str();
			}
		}
		_match_end_1a93c9330:;
	}
}



inline jule::Str _1a75a7653_float_from_bits(jule::I64 _12224_bits) {
	{
		auto &_match_expr{ _12224_bits };
		
		if (_match_expr == 32LL) {
			_case_begin_1a93cad37:;
			{
				return jule::Str("f32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1a93cad9d:;
			{
				return jule::Str("f64", 3);
			}
		}
		else {
			_case_begin_1a93ca71b:;
			{
				return jule::Str();
			}
		}
		_match_end_1a93ca7e8:;
	}
}



inline jule::Bool _1a75a81ae_check_bit_float(jule::Str _15024_val,jule::I64 _15034_bit) {
	({
		auto except = _1a745e10e_parse_float(_15024_val,_15034_bit);
		(except.ok()) ? (except.result) : ({{
			return false;
			return false;
		} jule::F64();});
	});
	return true;
}



inline jule::I64 _1a75a8456_bitsize_of_float(jule::F64 _16025_x) {
	{
		
		if ((-340282346638528860000000000000000000000.0 <= _16025_x) && (_16025_x <= 340282346638528860000000000000000000000.0)) {
			_case_begin_1a93d1612:;
			{
				return 32LL;
			}
		}
		else {
			_case_begin_1a93d05cd:;
			{
				return 64LL;
			}
		}
		_match_end_1a93d1546:;
	}
}



inline jule::I64 _1a75a86ed_bitsize_of_int(jule::I64 _17623_x) {
	{
		
		if ((-128LL <= _17623_x) && (_17623_x <= 127LL)) {
			_case_begin_1a93d2558:;
			{
				return 8LL;
			}
		}
		else if ((-32768LL <= _17623_x) && (_17623_x <= 32767LL)) {
			_case_begin_1a93d25be:;
			{
				return 16LL;
			}
		}
		else if ((-2147483648LL <= _17623_x) && (_17623_x <= 2147483647LL)) {
			_case_begin_1a93d2679:;
			{
				return 32LL;
			}
		}
		else {
			_case_begin_1a93d2349:;
			{
				return 64LL;
			}
		}
		_match_end_1a93d224a:;
	}
}



inline jule::I64 _1a75a8995_bitsize_of_uint(jule::U64 _19624_x) {
	{
		
		if ((_19624_x <= 255LLU)) {
			_case_begin_1a93d45c1:;
			{
				return 8LL;
			}
		}
		else if ((_19624_x <= 65535LLU)) {
			_case_begin_1a93d4637:;
			{
				return 16LL;
			}
		}
		else if ((_19624_x <= 4294967295LLU)) {
			_case_begin_1a93d46d1:;
			{
				return 32LL;
			}
		}
		else {
			_case_begin_1a93d3da6:;
			{
				return 64LL;
			}
		}
		_match_end_1a93d3ceb:;
	}
}



inline void _1a75a8b0a_update_target(void) {
	{
		{
			auto &_match_expr{ _1d003d127_ARCH };
			
			if (_match_expr == jule::Str("arm64", 5) || _match_expr == jule::Str("amd64", 5)) {
				_case_begin_1a93d5b33:;
				{
					_1a75a6432_BIT_SIZE=64LL;
					_1a75a6520_SYS_INT=jule::Str("i64", 3);
					_1a75a660d_SYS_UINT=jule::Str("u64", 3);
				}
			}
			else if (_match_expr == jule::Str("i386", 4)) {
				_case_begin_1a93d5b99:;
				{
					_1a75a6432_BIT_SIZE=32LL;
					_1a75a6520_SYS_INT=jule::Str("i32", 3);
					_1a75a660d_SYS_UINT=jule::Str("u32", 3);
				}
			}
			_match_end_1a93d5a9a:;
		}
	}
}



inline void _1a75a8c70_init(void) {
	_1a75a8b0a_update_target();
}



inline jule::F64 _1a75ab14b_min(jule::Str _6116_k) {
	_6116_k=_1a75a6a81_real_kind_of(_6116_k);
	{
		auto &_match_expr{ _6116_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1a93d877e:;
			{
				return -128LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1a93d83e9:;
			{
				return -32768LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1a93d8460:;
			{
				return -2147483648LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1a93d84c6:;
			{
				return jule::MIN_I64;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1a93d855e:;
			{
				return -340282346638528860000000000000000000000.0;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1a93d85d6:;
			{
				return jule::MIN_F64;
			}
		}
		else {
			_case_begin_1a93d5d53:;
			{
				return 0LL;
			}
		}
		_match_end_1a93d5e52:;
	}
}



inline jule::F64 _1a75ab437_max(jule::Str _8316_k) {
	_8316_k=_1a75a6a81_real_kind_of(_8316_k);
	{
		auto &_match_expr{ _8316_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1a93da330:;
			{
				return 127LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1a93da396:;
			{
				return 32767LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1a93da40c:;
			{
				return 2147483647LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1a93da495:;
			{
				return jule::MAX_I64;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1a93da50b:;
			{
				return 255LL;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1a93da572:;
			{
				return 65535LL;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1a93d9e89:;
			{
				return 4294967295LL;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1a93da000:;
			{
				return jule::MAX_U64;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1a93da066:;
			{
				return 340282346638528860000000000000000000000.0;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1a93da73c:;
			{
				return jule::MAX_F64;
			}
		}
		else {
			_case_begin_1a93d88d3:;
			{
				return 0LL;
			}
		}
		_match_end_1a93d9b6a:;
	}
}



inline jule::Bool _1a75ab899_is_i8_compatible(jule::Str _629_k) {
	return (_629_k == jule::Str("i8", 2));
}



inline jule::Bool _1a75abb85_is_i16_compatible(jule::Str _1130_k) {
	return (_1130_k == jule::Str("i8", 2)) || (_1130_k == jule::Str("i16", 3));
}



inline jule::Bool _1a75abe2c_is_i32_compatible(jule::Str _1730_k) {
	return (((_1730_k == jule::Str("i8", 2)) || (_1730_k == jule::Str("i16", 3))) || (_1730_k == jule::Str("i32", 3))) || (_1730_k == jule::Str("u8", 2));
}



inline jule::Bool _1a75ac218_is_i64_compatible(jule::Str _2530_k) {
	return (((_2530_k == jule::Str("i8", 2)) || (_2530_k == jule::Str("i16", 3))) || (_2530_k == jule::Str("i32", 3))) || (_2530_k == jule::Str("i64", 3));
}



inline jule::Bool _1a75ac4b0_is_u8_compatible(jule::Str _3329_k) {
	return (_3329_k == jule::Str("u8", 2));
}



inline jule::Bool _1a75ac757_is_u16_compatible(jule::Str _3830_k) {
	return (_3830_k == jule::Str("u8", 2)) || (_3830_k == jule::Str("u16", 3));
}



inline jule::Bool _1a75ac9ee_is_u32_compatible(jule::Str _4330_k) {
	return ((_4330_k == jule::Str("u8", 2)) || (_4330_k == jule::Str("u16", 3))) || (_4330_k == jule::Str("u32", 3));
}



inline jule::Bool _1a75acd2e_is_u64_compatible(jule::Str _5030_k) {
	return (((_5030_k == jule::Str("u8", 2)) || (_5030_k == jule::Str("u16", 3))) || (_5030_k == jule::Str("u32", 3))) || (_5030_k == jule::Str("u64", 3));
}



inline jule::Bool _1a75ad0c6_is_f32_compatible(jule::Str _5830_k) {
	return (_5830_k == jule::Str("f32", 3));
}



inline jule::Bool _1a75ad36d_is_f64_compatible(jule::Str _6330_k) {
	return (_6330_k == jule::Str("f64", 3));
}



inline jule::Bool _1a75ad6ae_types_are_compatible(jule::Str _7033_k1,jule::Str _7042_k2) {
	{
		auto &_match_expr{ _7033_k1 };
		
		if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1a93e3d94:;
			{
				return true;
			}
		}
		else if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1a93e3e0a:;
			{
				return (_7042_k2 == jule::Str("int", 3));
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1a93e3ec6:;
			{
				return (_7042_k2 == jule::Str("uintptr", 7));
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1a93e403c:;
			{
				return (_7042_k2 == jule::Str("uint", 4));
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1a93e39ba:;
			{
				return _1a75ab899_is_i8_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1a93e3a31:;
			{
				return _1a75abb85_is_i16_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1a93e3a97:;
			{
				return _1a75abe2c_is_i32_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1a93e3b0d:;
			{
				return _1a75ac218_is_i64_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1a93e40e7:;
			{
				return _1a75ac4b0_is_u8_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1a93e415d:;
			{
				return _1a75ac757_is_u16_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1a93e41c4:;
			{
				return _1a75ac9ee_is_u32_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1a93e424b:;
			{
				return _1a75acd2e_is_u64_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1a93e42c3:;
			{
				return _1a75ad0c6_is_f32_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1a93e434a:;
			{
				return _1a75ad36d_is_f64_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("bool", 4)) {
			_case_begin_1a93e43c2:;
			{
				return (_7042_k2 == jule::Str("bool", 4));
			}
		}
		else if (_match_expr == jule::Str("str", 3)) {
			_case_begin_1a93e4449:;
			{
				return (_7042_k2 == jule::Str("str", 3));
			}
		}
		else {
			_case_begin_1a93e2dc6:;
			{
				return false;
			}
		}
		_match_end_1a93e3789:;
	}
}



inline jule::Bool _1a75ad956_is_i16_greater(jule::Str _11027_k) {
	return (_11027_k == jule::Str("i8", 2));
}



inline jule::Bool _1a75adbed_is_i32_greater(jule::Str _11527_k) {
	return (_11527_k == jule::Str("i8", 2)) || (_11527_k == jule::Str("i16", 3));
}



inline jule::Bool _1a75ade95_is_i64_greater(jule::Str _12027_k) {
	return ((_12027_k == jule::Str("i8", 2)) || (_12027_k == jule::Str("i16", 3))) || (_12027_k == jule::Str("i32", 3));
}



inline jule::Bool _1a75ae23c_is_u16_greater(jule::Str _12727_k) {
	return (_12727_k == jule::Str("u8", 2));
}



inline jule::Bool _1a75ae605_is_u32_greater(jule::Str _13227_k) {
	return (_13227_k == jule::Str("u8", 2)) || (_13227_k == jule::Str("u16", 3));
}



inline jule::Bool _1a75ae89c_is_u64_greater(jule::Str _13827_k) {
	return ((_13827_k == jule::Str("u8", 2)) || (_13827_k == jule::Str("u16", 3))) || (_13827_k == jule::Str("u32", 3));
}



inline jule::Bool _1a75aeb44_is_f32_greater(jule::Str _14523_k) {
	return (_14523_k != jule::Str("f64", 3));
}



inline jule::Bool _1a75aeddb_is_f64_greater(jule::Str _15023_k) {
	return true;
}



inline jule::Bool _1a75b022c_is_greater(jule::Str _15523_k1,jule::Str _15532_k2) {
	{
		auto &_match_expr{ _15523_k1 };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1a93ed387:;
			{
				return _1a75b134e_is_sig_int(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1a93ed3ed:;
			{
				return _1a75b163a_is_unsig_int(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1a93ed0e0:;
			{
				return _1a75b163a_is_unsig_int(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1a93ed156:;
			{
				return _1a75ad956_is_i16_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1a93ed1bc:;
			{
				return _1a75adbed_is_i32_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1a93ecd37:;
			{
				return _1a75ade95_is_i64_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1a93ecd9d:;
			{
				return _1a75ae23c_is_u16_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1a93ece14:;
			{
				return _1a75ae605_is_u32_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1a93ece8b:;
			{
				return _1a75ae89c_is_u64_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1a93ed4b9:;
			{
				return _1a75aeb44_is_f32_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1a93ed541:;
			{
				return _1a75aeddb_is_f64_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1a93ed5b8:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a93e8ddd:;
			{
				return false;
			}
		}
		_match_end_1a93ecbe4:;
	}
}



inline jule::Bool _1a75b134e_is_sig_int(jule::Str _2723_k) {
	return ((((_2723_k == jule::Str("i8", 2)) || (_2723_k == jule::Str("i16", 3))) || (_2723_k == jule::Str("i32", 3))) || (_2723_k == jule::Str("i64", 3))) || (_2723_k == jule::Str("int", 3));
}



inline jule::Bool _1a75b163a_is_unsig_int(jule::Str _3625_k) {
	return (((((_3625_k == jule::Str("u8", 2)) || (_3625_k == jule::Str("u16", 3))) || (_3625_k == jule::Str("u32", 3))) || (_3625_k == jule::Str("u64", 3))) || (_3625_k == jule::Str("uint", 4))) || (_3625_k == jule::Str("uintptr", 7));
}



inline jule::Bool _1a75b18d2_is_int(jule::Str _4615_k) {
	return _1a75b134e_is_sig_int(_4615_k) || _1a75b163a_is_unsig_int(_4615_k);
}



inline jule::Bool _1a75b1bbd_is_float(jule::Str _5117_k) {
	return (_5117_k == jule::Str("f32", 3)) || (_5117_k == jule::Str("f64", 3));
}



inline jule::Bool _1a75b1e65_is_num(jule::Str _5615_k) {
	return _1a75b18d2_is_int(_5615_k) || _1a75b1bbd_is_float(_5615_k);
}



inline jule::Bool _1a7631d1a_is_ascii(jule::I32 _1017_r) {
	
	return (_1017_r <= 127LL);
}



inline jule::I32 _1a76337de_to_rune(jule::Slice<jule::U8> _1816_bytes) {
	if ((_1816_bytes.len() == 0LL)) {
		return 0LL;
	}
	jule::I32 _2313_r = 0LL;
	if ((_1816_bytes[0LL] == '\\') && (_1816_bytes.len() > 1LL)) {
		jule::I64 _2517_i = 0LL;
		_2313_r=static_cast<jule::I32>(_1a763427e_rune_from_esq_seq(_1816_bytes,_2517_i));
	} else {
		std::tie(_2313_r,std::ignore) = _1e9e904b0_decode_rune(_1816_bytes);
	}
	return _2313_r;
}



inline jule::Str _1a7633921_to_raw_str(jule::Slice<jule::U8> _3719_bytes) {
	return static_cast<jule::Str>(_3719_bytes);
}



inline jule::Str _1a7633b96_to_str(jule::Slice<jule::U8> _4215_bytes) {
	if ((_4215_bytes.len() == 0LL)) {
		return jule::Str();
	}
	jule::Slice<jule::U8> _4713_s = jule::Slice<jule::U8>::alloc(0LL,static_cast<jule::I64>(_4215_bytes.len()));
	jule::I64 _4813_i = 0LL;
	while (_4813_i < static_cast<jule::I64>(static_cast<jule::I64>(_4215_bytes.len()))) {
		{
			jule::U8 _5013_b = _4215_bytes[_4813_i];
			if (_5013_b == '\\') {
				_4713_s=jule::append(_4713_s,_1a76345c0_str_esq_seq(_4215_bytes,_4813_i));
			} else {
				jule::I32 _5418_r;
				jule::I64 _5421_size;
				std::tie(_5418_r,_5421_size) = _1e9e904b0_decode_rune(_4215_bytes.slice(_4813_i));
				_4813_i+=_5421_size;
				_4713_s=_1e9e9179c_append_rune(_4713_s,_5418_r);
			}
		}
	_iter_next_1a940c132:;
	}
	_iter_end_1a940c132:;
	return static_cast<jule::Str>(_4713_s);
}



inline std::tuple<jule::U8,jule::Bool> _1a7633e3d_try_btoa_common_esq(jule::Slice<jule::U8> _6224_bytes) {
	jule::U8 _6241_seq = jule::U8();
	jule::Bool _6252_ok = jule::Bool();
	if ((_6224_bytes.len() < 2LL) || (_6224_bytes[0LL] != '\\')) {
		return std::make_tuple(_6241_seq,_6252_ok);
	}
	{
		auto &_match_expr{ _6224_bytes[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1a941182e:;
			{
				_6241_seq='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1a9411e39:;
			{
				_6241_seq='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1a9411ea0:;
			{
				_6241_seq='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1a9412016:;
			{
				_6241_seq='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1a941207c:;
			{
				_6241_seq='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1a9412104:;
			{
				_6241_seq='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1a941217b:;
			{
				_6241_seq='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1a9412203:;
			{
				_6241_seq='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1a941227a:;
			{
				_6241_seq='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1a9412302:;
			{
				_6241_seq='\v';
			}
		}
		_match_end_1a9411cd5:;
	}
	_6252_ok=(_6241_seq != 0LLU);
	return std::make_tuple(_6241_seq,_6252_ok);
}



inline jule::I32 _1a763427e_rune_from_esq_seq(jule::Slice<jule::U8> _9422_bytes,jule::I64& _9442_i) {
	jule::U8 _9510_b;
	jule::Bool _9513_ok;
	std::tie(_9510_b,_9513_ok) = _1a7633e3d_try_btoa_common_esq(_9422_bytes.slice(_9442_i));
	(_9442_i)++;
	if (_9513_ok) {
		(_9442_i)++;
		return static_cast<jule::I32>(static_cast<jule::I32>(_9510_b));
	}
	{
		auto &_match_expr{ _9422_bytes[_9442_i] };
		
		if (_match_expr == 'u') {
			_case_begin_1a941701b:;
			{
				
				jule::I32 _10513_r = static_cast<jule::I32>(({
					auto except = _1a745c55d_parse_uint(static_cast<jule::Str>(_9422_bytes.slice((_9442_i + 1LL),(_9442_i + 5LL))),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:105:22"));
					(except.result);
				}));
				_9442_i+=5LL;
				return _10513_r;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1a941799a:;
			{
				
				jule::I32 _11013_r = static_cast<jule::I32>(({
					auto except = _1a745c55d_parse_uint(static_cast<jule::Str>(_9422_bytes.slice((_9442_i + 1LL),(_9442_i + 9LL))),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:110:22"));
					(except.result);
				}));
				_9442_i+=9LL;
				return _11013_r;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1a94176c0:;
			{
				
				jule::Slice<jule::U8> _11513_seq = _9422_bytes.slice((_9442_i + 1LL),(_9442_i + 3LL));
				_9442_i+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1a745c55d_parse_uint(static_cast<jule::Str>(_11513_seq),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:117:18"));
					(except.result);
				})));
			}
		}
		else {
			_case_begin_1a941634a:;
			{
				
				jule::Slice<jule::U8> _12013_seq = _9422_bytes.slice(_9442_i,(_9442_i + 3LL));
				_9442_i+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1a745c55d_parse_uint(static_cast<jule::Str>(_12013_seq.slice(1LL)),8LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:122:18"));
					(except.result);
				})));
			}
		}
		_match_end_1a9416a76:;
	}
}



inline jule::Slice<jule::U8> _1a76345c0_str_esq_seq(jule::Slice<jule::U8> _12616_bytes,jule::I64& _12636_i) {
	jule::I32 _1279_r = _1a763427e_rune_from_esq_seq(_12616_bytes,_12636_i);
	if ((_1279_r <= 255LL)) {
		return jule::Slice<jule::U8>({static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_1279_r)))});
	}
	return static_cast<jule::Slice<jule::U8>>(static_cast<jule::Str>(_1279_r));
}



inline jule::I64 _1a7701cca_find_format_prefix(jule::Slice<jule::U8>& _924_bytes,jule::I64& _940_start) {
	jule::I64 _1013_i = _940_start;
	while (_1013_i < static_cast<jule::I64>(static_cast<jule::I64>(_924_bytes.len()))) {
		{
			jule::I32 _1214_r;
			jule::I64 _1217_size;
			std::tie(_1214_r,_1217_size) = _1e9e904b0_decode_rune(_924_bytes.slice(_1013_i));
			if (_1214_r == '{') {
				return _1013_i;
			}
			_1013_i+=_1217_size;
		}
	_iter_next_1a944716c:;
	}
	_iter_end_1a944716c:;
	return -1LL;
}



inline jule::Slice<jule::U8> _1a76e0934_get_format_range(jule::I64& _2630_i,jule::Slice<jule::U8>& _2643_bytes) {
	jule::I64 _279_start = _2630_i;
	jule::I64 _2813_braces = 0LL;
	while (_2630_i < static_cast<jule::I64>(static_cast<jule::I64>(_2643_bytes.len()))) {
		{
			jule::I32 _3014_r;
			jule::I64 _3017_size;
			std::tie(_3014_r,_3017_size) = _1e9e904b0_decode_rune(_2643_bytes.slice(_2630_i));
			_2630_i+=_3017_size;
			{
				auto &_match_expr{ _3014_r };
				
				if (_match_expr == '{') {
					_case_begin_1a94499dd:;
					{
						(_2813_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1a9449ba8:;
					{
						(_2813_braces)--;
						if ((_2813_braces == 0LL)) {
							return _2643_bytes.slice(_279_start,_2630_i);
						}
					}
				}
				_match_end_1a9449b53:;
			}
		}
	_iter_next_1a9448cc8:;
	}
	_iter_end_1a9448cc8:;
	return nullptr;
}



inline jule::Slice<jule::U8> _1a76e0a66_fmt_by_default(jule::Any& _4520_arg) {
	if (_4520_arg == jule::Any(jule::Any(nullptr))) {
		return jule::Slice<jule::U8>({'n','i','l'});
	}
	{
		auto &_match_expr{ _4520_arg };
		
		if (_match_expr.type_is<jule::F32>()) {
			_case_begin_1a944b281:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1b774e312_fmt_float(static_cast<jule::F64>(static_cast<jule::F64>(_4520_arg.operator jule::F32())),'g',-1LL,32LL));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1a944b99b:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1b774e312_fmt_float(static_cast<jule::F64>(_4520_arg.operator jule::F64()),'g',-1LL,64LL));
			}
		}
		else if (_match_expr.type_is<jule::I8>()) {
			_case_begin_1a944bd64:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1a746460e_fmt_int(static_cast<jule::I8>(_4520_arg.operator jule::I8()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I16>()) {
			_case_begin_1a944aaaa:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1a746460e_fmt_int(static_cast<jule::I16>(_4520_arg.operator jule::I16()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I32>()) {
			_case_begin_1a944bbee:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1a746460e_fmt_int(static_cast<jule::I32>(_4520_arg.operator jule::I32()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1a944bc65:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1a746460e_fmt_int(static_cast<jule::I64>(_4520_arg.operator jule::I64()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U8>()) {
			_case_begin_1a944b67c:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1a7464279_fmt_uint(static_cast<jule::U8>(_4520_arg.operator jule::U8()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U16>()) {
			_case_begin_1a944b6e3:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1a7464279_fmt_uint(static_cast<jule::U16>(_4520_arg.operator jule::U16()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U32>()) {
			_case_begin_1a944b759:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1a7464279_fmt_uint(static_cast<jule::U32>(_4520_arg.operator jule::U32()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1a944b7c0:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1a7464279_fmt_uint(static_cast<jule::U64>(_4520_arg.operator jule::U64()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1a944be0d:;
			{
				return static_cast<jule::Slice<jule::U8>>(_4520_arg.operator jule::Str());
			}
		}
		else if (_match_expr.type_is<jule::Bool>()) {
			_case_begin_1a944be74:;
			{
				if (_4520_arg.operator jule::Bool()) {
					return jule::Slice<jule::U8>({'t','r','u','e'});
				}
				return jule::Slice<jule::U8>({'f','a','l','s','e'});
			}
		}
		else {
			_case_begin_1a944a093:;
			{
				return static_cast<jule::Slice<jule::U8>>(jule::to_str(_4520_arg));
			}
		}
		_match_end_1a9448ee8:;
	}
}



inline jule::Slice<jule::U8> _1a76e023b_apply_fmt_by_default(jule::I64& _8330_j,jule::Slice<jule::Any>& _8339_args) {
	jule::Any _849_arg = _8339_args[_8330_j];
	(_8330_j)++;
	return _1a76e0a66_fmt_by_default(_849_arg);
}



inline jule::Slice<jule::U8> _1a76e036d_apply_fmt(jule::Slice<jule::U8>& _9119_fmt,jule::I64& _9137_j,jule::Slice<jule::Any>& _9146_args) {
	if ((_9119_fmt.len() == 2LL)) {
		return _1a76e023b_apply_fmt_by_default(_9137_j,_9146_args);
	}
	if ((_9119_fmt.len() == 4LL) && (_9119_fmt == jule::Slice<jule::U8>({'{','{','}','}'}))) {
		return jule::Slice<jule::U8>({'{','}'});
	}
	return _9119_fmt;
}



inline jule::Slice<jule::U8> _1a76e111b_format_bytes(jule::Str _10517_fmt,jule::Slice<jule::Any> _10527_args) {
	jule::Slice<jule::U8> _10613_fmt_bytes = static_cast<jule::Slice<jule::U8>>(_10517_fmt);
	if ((_10527_args.len() == 0LL)) {
		return _10613_fmt_bytes;
	}
	jule::Slice<jule::U8> _11213_bytes = jule::Slice<jule::U8>::alloc(0LL,static_cast<jule::I64>(_10517_fmt.len()));
	jule::I64 _11413_j = 0LL;
	jule::I64 _11513_last = 0LL;
	jule::I64 _11613_i = _1a7701cca_find_format_prefix(_10613_fmt_bytes,_11513_last);
	for (; (_11613_i != -1LL); _11613_i=static_cast<jule::I64>(_1a7701cca_find_format_prefix(_10613_fmt_bytes,_11613_i))) {
		{
			_11213_bytes=jule::append(_11213_bytes,_10613_fmt_bytes.slice(_11513_last,_11613_i));
			jule::Slice<jule::U8> _11917_format = _1a76e0934_get_format_range(_11613_i,_10613_fmt_bytes);
			if ((_11917_format == nullptr)) {
				goto _iter_next_1a9458678;
			}
			_11213_bytes=jule::append(_11213_bytes,_1a76e036d_apply_fmt(_11917_format,_11413_j,_10527_args));
			if (_11413_j >= static_cast<jule::I64>(static_cast<jule::I64>(_10527_args.len()))) {
				_11213_bytes=jule::append(_11213_bytes,_10613_fmt_bytes.slice(_11613_i));
				_11513_last=static_cast<jule::I64>(_10613_fmt_bytes.len());
				goto _iter_end_1a9458678;
			}
			_11513_last=_11613_i;
		}
	_iter_next_1a9458678:;
	}
	_iter_end_1a9458678:;
	if (_11513_last < static_cast<jule::I64>(static_cast<jule::I64>(_10613_fmt_bytes.len()))) {
		_11213_bytes=jule::append(_11213_bytes,_10613_fmt_bytes.slice(_11513_last));
	}
	return _11213_bytes;
}



inline jule::Str _1a76e124d_format(jule::Str _16515_fmt,jule::Slice<jule::Any> _16525_args) {
	return static_cast<jule::Str>(_1a76e111b_format_bytes(_16515_fmt,_16525_args));
}



inline jule::Bool _1a642b6e8_kind_uses_generics(jule::Ptr<_1a7672da0_TypeKind> _42023_k,jule::Slice<jule::Ptr<_1d075ee64_GenericDecl>>& _42038_generics) {
	jule::Str _4219_pk = _1a7673257_to_str(_42023_k.ptr());
	{
		auto &expr = _42038_generics;
		auto it = expr.begin();
		_iter_begin_1aa0826be:;
		if (it != expr.end()) {
			jule::Ptr<_1d075ee64_GenericDecl> &_1aa082768_g = *it;
			{
				if (_1d09a3a59_contains(_4219_pk,_1aa082768_g.get()._field_ident)) {
					return true;
				}
			}
			_iter_next_1aa0826be:;
			++it;
			goto _iter_begin_1aa0826be;
		}
		_iter_end_1aa0826be:;
	}
	return false;
}



inline jule::Bool _1a642bac2_parameter_uses_generics(jule::Ptr<_1a6425208_Param>& _43029_p,jule::Slice<jule::Ptr<_1d075ee64_GenericDecl>>& _43041_generics) {
	if (_1a6425835_is_self(_43029_p.ptr())) {
		return false;
	}
	return _1a642b6e8_kind_uses_generics(_43029_p.get()._field_kind.get()._field_kind,_43041_generics);
}



inline jule::Ptr<_1a7676c3e_TypeSymbol> _1a642e465_build_type(jule::Ptr<_1d0759c1c_TypeDecl> _8419_t) {
	if ((_8419_t == nullptr)) {
		return nullptr;
	}
	return jule::new_ptr<_1a7676c3e_TypeSymbol>(_1a7676c3e_TypeSymbol(_8419_t,jule::Ptr<_1a7672da0_TypeKind>()));
}



inline jule::Ptr<_1a7649be0_Value> _1a642e751_build_expr(jule::Ptr<_1d075b14c_Expr> _9319_expr) {
	if ((_9319_expr == nullptr)) {
		return nullptr;
	}
	return jule::new_ptr<_1a7649be0_Value>(_1a7649be0_Value(_9319_expr,jule::Ptr<_1a7648b67_Data>()));
}



inline jule::Ptr<_1a7672168_TypeAlias> _1a642e9e8_build_type_alias(jule::Ptr<_1d0767e5b_TypeAliasDecl> _10225_decl) {
	return jule::new_ptr<_1a7672168_TypeAlias>(_1a7672168_TypeAlias(_10225_decl.get()._field_scope,_10225_decl.get()._field_public,_10225_decl.get()._field_cpp_linked,jule::Bool(),jule::Bool(),_10225_decl.get()._field_token,_10225_decl.get()._field_ident,_1a642e465_build_type(_10225_decl.get()._field_kind),jule::Slice<jule::Any>(),jule::Slice<jule::Ptr<_1a7672168_TypeAlias>>()));
}



inline jule::Ptr<_1a6363e9e_Field> _1a642ecd4_build_field(jule::Ptr<_1d076ae3c_FieldDecl> _11320_decl) {
	return jule::new_ptr<_1a6363e9e_Field>(_1a6363e9e_Field(jule::Ptr<_1a64147be_Struct>(),_11320_decl.get()._field_token,_11320_decl.get()._field_public,_11320_decl.get()._field_mutable,_11320_decl.get()._field_ident,_1a642e465_build_type(_11320_decl.get()._field_kind),_11320_decl.get()._field_default));
}



inline jule::Slice<jule::Ptr<_1a6363e9e_Field>> _1a643007b_build_fields(jule::Slice<jule::Ptr<_1d076ae3c_FieldDecl>>& _12422_decls) {
	jule::Slice<jule::Ptr<_1a6363e9e_Field>> _12513_fields = jule::Slice<jule::Ptr<_1a6363e9e_Field>>::alloc(0LL,static_cast<jule::I64>(_12422_decls.len()));
	{
		auto &expr = _12422_decls;
		auto it = expr.begin();
		_iter_begin_1aa087361:;
		if (it != expr.end()) {
			jule::Ptr<_1d076ae3c_FieldDecl> _1aa087251_decl = *it;
			{
				_12513_fields = jule::alloc_for_append(_12513_fields,1);_12513_fields.__push(_1a642ecd4_build_field(_1aa087251_decl));
			}
			_iter_next_1aa087361:;
			++it;
			goto _iter_begin_1aa087361;
		}
		_iter_end_1aa087361:;
	}
	return _12513_fields;
}



inline jule::Ptr<_1a64147be_Struct> _1a6430323_build_struct(jule::Ptr<_1d076b79a_StructDecl> _13221_decl) {
	return jule::new_ptr<_1a64147be_Struct>(_1a64147be_Struct(jule::Ptr<_1a75d1e74_Sema>(),jule::Slice<jule::Ptr<_1a64147be_Struct>>(),jule::Slice<jule::Ptr<_1a64147be_Struct>>(),_13221_decl.get()._field_token,_13221_decl.get()._field_ident,_1a643007b_build_fields(_13221_decl.get()._field_fields),jule::Slice<jule::Ptr<_1a6426a45_Fn>>(),jule::Slice<jule::Ptr<_1a75ec478_Var>>(),_13221_decl.get()._field_public,_13221_decl.get()._field_cpp_linked,_13221_decl.get()._field_directives,_13221_decl.get()._field_generics,jule::Slice<jule::Ptr<_1a7465bd7_Trait>>(),jule::Slice<jule::Ptr<_1a641744d_StructIns>>()));
}



inline jule::Ptr<_1a6425208_Param> _1a64305ba_build_param(jule::Ptr<_1d07623d9_ParamDecl> _14420_decl) {
	return jule::new_ptr<_1a6425208_Param>(_1a6425208_Param(_14420_decl.get()._field_token,_14420_decl.get()._field_mutable,_14420_decl.get()._field_variadic,_14420_decl.get()._field_reference,_1a642e465_build_type(_14420_decl.get()._field_kind),_14420_decl.get()._field_ident));
}



inline jule::Slice<jule::Ptr<_1a6425208_Param>> _1a64308ea_build_params(jule::Slice<jule::Ptr<_1d07623d9_ParamDecl>>& _15522_decls) {
	jule::Slice<jule::Ptr<_1a6425208_Param>> _15613_params = jule::Slice<jule::Ptr<_1a6425208_Param>>::alloc(0LL,static_cast<jule::I64>(_15522_decls.len()));
	{
		auto &expr = _15522_decls;
		auto it = expr.begin();
		_iter_begin_1a9c97abb:;
		if (it != expr.end()) {
			jule::Ptr<_1d07623d9_ParamDecl> _1aa08a30e_decl = *it;
			{
				_15613_params = jule::alloc_for_append(_15613_params,1);_15613_params.__push(_1a64305ba_build_param(_1aa08a30e_decl));
			}
			_iter_next_1a9c97abb:;
			++it;
			goto _iter_begin_1a9c97abb;
		}
		_iter_end_1a9c97abb:;
	}
	return _15613_params;
}



inline jule::Ptr<_1a6424a32_RetType> _1a6430b92_build_ret_type(jule::Ptr<_1d075ae60_RetTypeDecl> _16323_decl) {
	if ((_16323_decl.get()._field_idents == nullptr) && (_16323_decl.get()._field_kind == nullptr)) {
		return nullptr;
	}
	return jule::new_ptr<_1a6424a32_RetType>(_1a6424a32_RetType(_1a642e465_build_type(_16323_decl.get()._field_kind),_16323_decl.get()._field_idents));
}



inline jule::Ptr<_1a6426a45_Fn> _1a6430e39_build_fn(jule::Ptr<_1d0763709_FnDecl> _17317_decl) {
	return jule::new_ptr<_1a6426a45_Fn>(_1a6426a45_Fn(jule::Ptr<_1a75d1e74_Sema>(),_17317_decl.get()._field_token,_17317_decl.get()._field_global,_17317_decl.get()._field_unsafety,_17317_decl.get()._field_public,_17317_decl.get()._field_cpp_linked,_17317_decl.get()._field_statically,_17317_decl.get()._field_exceptional,_17317_decl.get()._field_ident,_17317_decl.get()._field_directives,_17317_decl.get()._field_scope,_17317_decl.get()._field_generics,_1a6430b92_build_ret_type(_17317_decl.get()._field_result),_1a64308ea_build_params(_17317_decl.get()._field_params),jule::Ptr<_1a64147be_Struct>(),jule::Slice<jule::Ptr<_1a6429be1_FnIns>>()));
}



inline jule::Slice<jule::Ptr<_1a6426a45_Fn>> _1a64311d1_build_methods(jule::Slice<jule::Ptr<_1d0763709_FnDecl>>& _19123_decls) {
	jule::Slice<jule::Ptr<_1a6426a45_Fn>> _19213_methods = jule::Slice<jule::Ptr<_1a6426a45_Fn>>::alloc(0LL,static_cast<jule::I64>(_19123_decls.len()));
	{
		auto &expr = _19123_decls;
		auto it = expr.begin();
		_iter_begin_1aa08e599:;
		if (it != expr.end()) {
			jule::Ptr<_1d0763709_FnDecl> _1aa08e214_decl = *it;
			{
				_19213_methods = jule::alloc_for_append(_19213_methods,1);_19213_methods.__push(_1a6430e39_build_fn(_1aa08e214_decl));
			}
			_iter_next_1aa08e599:;
			++it;
			goto _iter_begin_1aa08e599;
		}
		_iter_end_1aa08e599:;
	}
	return _19213_methods;
}



inline jule::Ptr<_1a7465bd7_Trait> _1a6431478_build_trait(jule::Ptr<_1d076bda5_TraitDecl> _19920_decl) {
	return jule::new_ptr<_1a7465bd7_Trait>(_1a7465bd7_Trait(_19920_decl.get()._field_token,_19920_decl.get()._field_ident,_19920_decl.get()._field_public,jule::Bool(),_1a64311d1_build_methods(_19920_decl.get()._field_methods),jule::Slice<jule::Ptr<_1a64147be_Struct>>()));
}



inline jule::Ptr<_1a7467403_EnumItem> _1a6431720_build_enum_item(jule::Ptr<_1d07697ba_EnumItemDecl> _20824_decl) {
	return jule::new_ptr<_1a7467403_EnumItem>(_1a7467403_EnumItem(_20824_decl.get()._field_token,_20824_decl.get()._field_ident,_1a642e751_build_expr(_20824_decl.get()._field_expr)));
}



inline jule::Slice<jule::Ptr<_1a7467403_EnumItem>> _1a64319b7_build_enum_items(jule::Slice<jule::Ptr<_1d07697ba_EnumItemDecl>>& _21626_decls) {
	jule::Slice<jule::Ptr<_1a7467403_EnumItem>> _21713_items = jule::Slice<jule::Ptr<_1a7467403_EnumItem>>::alloc(0LL,static_cast<jule::I64>(_21626_decls.len()));
	{
		auto &expr = _21626_decls;
		auto it = expr.begin();
		_iter_begin_1aa091ee7:;
		if (it != expr.end()) {
			jule::Ptr<_1d07697ba_EnumItemDecl> _1aa091a63_decl = *it;
			{
				_21713_items = jule::alloc_for_append(_21713_items,1);_21713_items.__push(_1a6431720_build_enum_item(_1aa091a63_decl));
			}
			_iter_next_1aa091ee7:;
			++it;
			goto _iter_begin_1aa091ee7;
		}
		_iter_end_1aa091ee7:;
	}
	return _21713_items;
}



inline jule::Ptr<_1a7467de8_Enum> _1a6431c5e_build_enum(jule::Ptr<_1d076a414_EnumDecl> _22419_decl) {
	return jule::new_ptr<_1a7467de8_Enum>(_1a7467de8_Enum(_22419_decl.get()._field_token,_22419_decl.get()._field_public,_22419_decl.get()._field_ident,_1a642e465_build_type(_22419_decl.get()._field_kind),_1a64319b7_build_enum_items(_22419_decl.get()._field_items)));
}



inline jule::Ptr<_1a75ec478_Var> _1a6432127_build_var(jule::Ptr<_1d07646d8_VarDecl> _23418_decl) {
	return jule::new_ptr<_1a75ec478_Var>(_1a75ec478_Var(jule::Ptr<_1a759e606_Scope>(),_23418_decl.get()._field_token,_23418_decl.get()._field_ident,_23418_decl.get()._field_cpp_linked,_23418_decl.get()._field_constant,_23418_decl.get()._field_mutable,_23418_decl.get()._field_public,jule::Bool(),_23418_decl.get()._field_statically,_23418_decl.get()._field_reference,_1a642e465_build_type(_23418_decl.get()._field_kind),_1a642e751_build_expr(_23418_decl.get()._field_expr),static__1a642d035_new(),_23418_decl.get()._field_directives,jule::Ptr<_1a75eb4aa_IterRelation>(),jule::Slice<jule::Ptr<_1a75ec478_Var>>()));
}



inline jule::Slice<jule::Ptr<_1a75ec478_Var>> _1a64323be_build_vars(jule::Slice<jule::Ptr<_1d07646d8_VarDecl>> _25119_decls) {
	jule::Slice<jule::Ptr<_1a75ec478_Var>> _25213_vars = jule::Slice<jule::Ptr<_1a75ec478_Var>>::alloc(0LL,static_cast<jule::I64>(_25119_decls.len()));
	{
		auto &expr = _25119_decls;
		auto it = expr.begin();
		_iter_begin_1aa095902:;
		if (it != expr.end()) {
			jule::Ptr<_1d07646d8_VarDecl> _1aa09555b_decl = *it;
			{
				_25213_vars = jule::alloc_for_append(_25213_vars,1);_25213_vars.__push(_1a6432127_build_var(_1aa09555b_decl));
			}
			_iter_next_1aa095902:;
			++it;
			goto _iter_begin_1aa095902;
		}
		_iter_end_1aa095902:;
	}
	return _25213_vars;
}



inline jule::Ptr<_1a746936c_Impl> _1a6432666_build_impl(jule::Ptr<_1d076c4b0_Impl> _25919_decl) {
	return jule::new_ptr<_1a746936c_Impl>(_1a746936c_Impl(_25919_decl.get()._field_base,_25919_decl.get()._field_dest,_1a64311d1_build_methods(_25919_decl.get()._field_methods),_1a64323be_build_vars(_25919_decl.get()._field_statics)));
}



inline jule::Ptr<_1a75b3b8c_ScopeChecker> _1a7537c76_new_scope_checker_base(jule::Ptr<_1a75d1e74_Sema>& _4032_s,jule::Ptr<_1a6429be1_FnIns> _4046_owner) {
	return jule::new_ptr<_1a75b3b8c_ScopeChecker>(_1a75b3b8c_ScopeChecker(jule::Ptr<_1d0747985_Token>(),_4032_s,_4046_owner,jule::Ptr<_1a75b3b8c_ScopeChecker>(),jule::I64(),jule::new_ptr<_1a76439db_SymbolTable>(_1a76439db_SymbolTable()),jule::Ptr<_1a759e606_Scope>(),jule::Ptr<_1d0761c13_ScopeTree>(),jule::Ptr<_1a6429be1_FnIns>(),jule::U64(),jule::U64(),jule::Ptr<jule::Slice<jule::Ptr<_1a75b37b3_ScopeLabel>>>(),jule::Ptr<jule::Slice<jule::Ptr<_1a75b39a0_ScopeGoto>>>(),jule::I64()));
}



inline jule::Ptr<_1a75b3b8c_ScopeChecker> _1a754d4a6_new_scope_checker(jule::Ptr<_1a75d1e74_Sema>& _4827_s,jule::Ptr<_1a6429be1_FnIns> _4841_owner) {
	jule::Ptr<_1a75b3b8c_ScopeChecker> _4913_base = _1a7537c76_new_scope_checker_base(_4827_s,_4841_owner);
	_4913_base.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1a75b37b3_ScopeLabel>>>(nullptr);
	_4913_base.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1a75b39a0_ScopeGoto>>>(nullptr);
	return _4913_base;
}



inline jule::Ptr<_1a75b37b3_ScopeLabel> _1a7562058_find_label_parent(jule::Str _5822_ident,jule::Ptr<_1a75b3b8c_ScopeChecker> _5838_scope) {
	jule::Ptr<_1a75b37b3_ScopeLabel> _5913_label = _1a75b6662_find_label_scope(_5838_scope, _5822_ident);
	while ((_5913_label == nullptr)) {
		{
			if ((_5838_scope.get()._field_parent == nullptr) || (_5838_scope.get()._field_owner != nullptr)) {
				return nullptr;
			}
			_5838_scope=_5838_scope.get()._field_parent;
			_5913_label=_1a75b6662_find_label_scope(_5838_scope, _5822_ident);
		}
	_iter_next_1aa099252:;
	}
	_iter_end_1aa099252:;
	return _5913_label;
}



inline jule::Bool _1a757ccaa_stmt_is_goto_scope(jule::Any& _7224_stmt,jule::Ptr<_1a759e606_Scope>& _7236_sc) {
	{
		auto &_match_expr{ _7224_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_1a759e606_Scope>>()) {
			_case_begin_1aa09b397:;
			{
				return _7224_stmt.operator jule::Ptr<_1a759e606_Scope>() == _7236_sc;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a7561893_InfIter>>()) {
			_case_begin_1aa09b40d:;
			{
				return _7224_stmt.operator jule::Ptr<_1a7561893_InfIter>().get()._field_scope == _7236_sc;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a7561c6c_RangeIter>>()) {
			_case_begin_1aa09adad:;
			{
				return _7224_stmt.operator jule::Ptr<_1a7561c6c_RangeIter>().get()._field_scope == _7236_sc;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a7561a80_WhileIter>>()) {
			_case_begin_1aa09ae24:;
			{
				return _7224_stmt.operator jule::Ptr<_1a7561a80_WhileIter>().get()._field_scope == _7236_sc;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a75b2cce_Match>>()) {
			_case_begin_1aa09ae8a:;
			{
				jule::Ptr<_1a75b2cce_Match> _8313_m = _7224_stmt.operator jule::Ptr<_1a75b2cce_Match>();
				{
					auto &expr = _8313_m.get()._field_cases;
					auto it = expr.begin();
					_iter_begin_1aa09d696:;
					if (it != expr.end()) {
						jule::Ptr<_1a75b31ec_Case> &_1aa09d94e_c = *it;
						{
							if (_1aa09d94e_c.get()._field_scope == _7236_sc) {
								return true;
							}
						}
						_iter_next_1aa09d696:;
						++it;
						goto _iter_begin_1aa09d696;
					}
					_iter_end_1aa09d696:;
				}
				return (_8313_m.get()._field_default != nullptr) && (_8313_m.get()._field_default.get()._field_scope == _7236_sc);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a7550c6c_Conditional>>()) {
			_case_begin_1aa09b001:;
			{
				jule::Ptr<_1a7550c6c_Conditional> _9113_c = _7224_stmt.operator jule::Ptr<_1a7550c6c_Conditional>();
				{
					auto &expr = _9113_c.get()._field_elifs;
					auto it = expr.begin();
					_iter_begin_1aa09eea0:;
					if (it != expr.end()) {
						jule::Ptr<_1a75a6003_If> &_1aa0a0258_elif = *it;
						{
							if (_1aa0a0258_elif.get()._field_scope == _7236_sc) {
								return true;
							}
						}
						_iter_next_1aa09eea0:;
						++it;
						goto _iter_begin_1aa09eea0;
					}
					_iter_end_1aa09eea0:;
				}
				return (_9113_c.get()._field_default != nullptr) && (_9113_c.get()._field_default.get()._field_scope == _7236_sc);
			}
		}
		else {
			_case_begin_1aa09ac59:;
			{
				return false;
			}
		}
		_match_end_1aa09ab38:;
	}
}



inline jule::I64 _1a75804c7_count_match_type(jule::Ptr<_1a75b2cce_Match>& _10322_m,jule::Ptr<_1a7672da0_TypeKind>& _10334_t) {
	jule::I64 _10413_n = 0LL;
	jule::Str _1059_kind = _1a7673257_to_str(_10334_t.ptr());
	_julec_label_loop:;
	{
		auto &expr = _10322_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1aa0a1c3d:;
		if (it != expr.end()) {
			jule::Ptr<_1a75b31ec_Case> &_1aa0a1d3c_c = *it;
			{
				if ((_1aa0a1d3c_c == nullptr)) {
					goto _iter_next_1aa0a1c3d;
				}
				{
					auto &expr = _1aa0a1d3c_c.get()._field_exprs;
					auto it = expr.begin();
					_iter_begin_1aa0a2304:;
					if (it != expr.end()) {
						jule::Ptr<_1a7648b67_Data> &_1aa0a2854_expr = *it;
						{
							if ((_1aa0a2854_expr == nullptr)) {
								goto _iter_end_1aa0a1c3d;
							}
							if (_1059_kind == _1a7673257_to_str(_1aa0a2854_expr.get()._field_model.operator jule::Ptr<_1a7672da0_TypeKind>().ptr())) {
								(_10413_n)++;
							}
						}
						_iter_next_1aa0a2304:;
						++it;
						goto _iter_begin_1aa0a2304;
					}
					_iter_end_1aa0a2304:;
				}
			}
			_iter_next_1aa0a1c3d:;
			++it;
			goto _iter_begin_1aa0a1c3d;
		}
		_iter_end_1aa0a1c3d:;
	}
	return _10413_n;
}



inline jule::Slice<jule::Ptr<_1a7648b67_Data>> _1a7580c58_get_datas_from_tuple_data(jule::Ptr<_1a7648b67_Data>& _12735_d) {
	if ((_1a7676887_tup(_12735_d.get()._field_kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ _12735_d.get()._field_model };
			
			if (_match_expr.type_is<jule::Ptr<_1a6420115_TupleExprModel>>()) {
				_case_begin_1aa0a5802:;
				{
					return _12735_d.get()._field_model.operator jule::Ptr<_1a6420115_TupleExprModel>().get()._field_datas;
				}
			}
			else {
				_case_begin_1aa0a403c:;
				{
					jule::Ptr<_1a767c063_Tuple> _13321_t = _1a7676887_tup(_12735_d.get()._field_kind.ptr());
					jule::Slice<jule::Ptr<_1a7648b67_Data>> _13421_r = jule::Slice<jule::Ptr<_1a7648b67_Data>>::alloc(0LL,static_cast<jule::I64>(_13321_t.get()._field_types.len()));
					{
						auto &expr = _13321_t.get()._field_types;
						auto it = expr.begin();
						_iter_begin_1aa0a545b:;
						if (it != expr.end()) {
							jule::Ptr<_1a7672da0_TypeKind> _1aa0a4db7_kind = *it;
							{
								_13421_r = jule::alloc_for_append(_13421_r,1);_13421_r.__push(jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(_1aa0a4db7_kind,jule::Ptr<_1a7672da0_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a751ddb1_Const>())));
							}
							_iter_next_1aa0a545b:;
							++it;
							goto _iter_begin_1aa0a545b;
						}
						_iter_end_1aa0a545b:;
					}
					return _13421_r;
				}
			}
			_match_end_1aa0a3ed7:;
		}
	} else {
		return jule::Slice<jule::Ptr<_1a7648b67_Data>>({_12735_d});
	}
}



inline jule::Slice<jule::Any> _1a7581891_get_expr_models(jule::Any& _14825_m) {
	{
		auto &_match_expr{ _14825_m };
		
		if (_match_expr.type_is<jule::Ptr<_1d075b526_TupleExpr>>()) {
			_case_begin_1aa0a41b3:;
			{
				jule::Ptr<_1d075b526_TupleExpr> _15117_tup = _14825_m.operator jule::Ptr<_1d075b526_TupleExpr>();
				jule::Slice<jule::Any> _15217_models = jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::I64>(_15117_tup.get()._field_expr.len()));
				{
					auto &expr = _15117_tup.get()._field_expr;
					auto it = expr.begin();
					_iter_begin_1aa0a79d0:;
					if (it != expr.end()) {
						jule::Ptr<_1d075b14c_Expr> _1aa0a787b_expr = *it;
						{
							_15217_models = jule::alloc_for_append(_15217_models,1);_15217_models.__push(_1aa0a787b_expr.get()._field_kind);
						}
						_iter_next_1aa0a79d0:;
						++it;
						goto _iter_begin_1aa0a79d0;
					}
					_iter_end_1aa0a79d0:;
				}
				return _15217_models;
			}
		}
		else {
			_case_begin_1aa0a2ab8:;
			{
				return jule::Slice<jule::Any>({_14825_m});
			}
		}
		_match_end_1aa0a66d2:;
	}
}



inline jule::Bool _1a7583cb1_check_mut(jule::Ptr<_1a75d1e74_Sema>& _16219_s,jule::Ptr<_1a7648b67_Data>& _16230_left,jule::Ptr<_1a7648b67_Data> _16247_right,jule::Ptr<_1d0747985_Token> _16261_op) {
	jule::Bool _16275_ok = jule::Bool();
	{
		
		if ((!(_16230_left.get()._field_mutable))) {
			_case_begin_1aa0a944e:;
			{
				_1a75d488e_push_err(_16219_s.ptr(), _16261_op,jule::Str("cannot assign to immutable storage", 34),jule::Slice<jule::Any>());
				_16275_ok = false;
				return _16275_ok;
			}
		}
		else if (((_16247_right != nullptr) && (!(_16247_right.get()._field_mutable))) && _1a7674247_mutable(_16247_right.get()._field_kind.ptr())) {
			_case_begin_1aa0a952b:;
			{
				if ((_16261_op.get()._field_kind != jule::Str("=", 1)) && (_1a767614a_strct(_16247_right.get()._field_kind.ptr()) != nullptr)) {
					_16275_ok = true;
					return _16275_ok;
				}
				_1a75d488e_push_err(_16219_s.ptr(), _16261_op,jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82),jule::Slice<jule::Any>({jule::Any(_1a7673257_to_str(_16247_right.get()._field_kind.ptr()))}));
				_16275_ok = false;
				return _16275_ok;
			}
		}
		else {
			_case_begin_1aa0a8d22:;
			{
				_16275_ok = true;
				return _16275_ok;
			}
		}
		_match_end_1aa0a87d3:;
	}
}



inline jule::Bool _1a7584542_check_assign(jule::Ptr<_1a75d1e74_Sema>& _18122_s,jule::Ptr<_1a7648b67_Data>& _18137_left,jule::Ptr<_1a7648b67_Data> _18154_right,jule::Ptr<_1d0747985_Token> _18168_op) {
	jule::Bool _18182_ok = jule::Bool();
	jule::Ptr<_1a6429be1_FnIns> _1829_f = _1a7675dd6_fnc(_18137_left.get()._field_kind.ptr());
	if (((_1829_f != nullptr) && (_1829_f.get()._field_decl != nullptr)) && _1829_f.get()._field_decl.get()._field_global) {
		_1a75d488e_push_err(_18122_s.ptr(), _18168_op,jule::Str("type is not support assignment", 30),jule::Slice<jule::Any>());
		_18182_ok = false;
		return _18182_ok;
	}
	{
		
		if (_1a764952a_is_const(_18137_left.ptr())) {
			_case_begin_1aa0ae83e:;
			{
				_1a75d488e_push_err(_18122_s.ptr(), _18168_op,jule::Str("constants is can't assign", 25),jule::Slice<jule::Any>());
				_1a75d4bad_push_suggestion(_18122_s.ptr(), jule::Str("remove constant qualifer if you need to assign", 46),jule::Slice<jule::Any>());
				_18182_ok = false;
				return _18182_ok;
			}
		}
		else if ((!(_18137_left.get()._field_lvalue))) {
			_case_begin_1aa0ae90a:;
			{
				_1a75d488e_push_err(_18122_s.ptr(), _18168_op,jule::Str("invalid expression: expected lvalue for assignment", 50),jule::Slice<jule::Any>());
				_18182_ok = false;
				return _18182_ok;
			}
		}
		else if ((!(_1a7583cb1_check_mut(_18122_s,_18137_left,_18154_right,_18168_op)))) {
			_case_begin_1aa0ae971:;
			{
				_18182_ok = false;
				return _18182_ok;
			}
		}
		else {
			_case_begin_1aa0ae234:;
			{
				_18182_ok = true;
				return _18182_ok;
			}
		}
		_match_end_1aa0ae157:;
	}
}



inline jule::Bool _1a7584cd4_is_valid_ast_st_for_next_st(jule::Any& _20337_n) {
	{
		auto &_match_expr{ _20337_n };
		
		if (_match_expr.type_is<jule::Ptr<_1d0761608_AssignSt>>()) {
			_case_begin_1aa0b2501:;
			{
				return (!(_20337_n.operator jule::Ptr<_1d0761608_AssignSt>().get()._field_declarative));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d075cd74_FnCallExpr>>() || _match_expr.type_is<jule::Ptr<_1d075b14c_Expr>>()) {
			_case_begin_1aa0b2567:;
			{
				return true;
			}
		}
		else {
			_case_begin_1aa0b1b71:;
			{
				return false;
			}
		}
		_match_end_1aa0b2028:;
	}
}



inline jule::Bool _1a758bd63_is_valid_st_for_next_st(jule::Any& _21529_st) {
	{
		auto &_match_expr{ _21529_st };
		
		if (_match_expr.type_is<jule::Ptr<_1a641b364_FnCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1a75b2718_Postfix>>() || _match_expr.type_is<jule::Ptr<_1a75b2905_Assign>>() || _match_expr.type_is<jule::Ptr<_1a75b2ae2_MultiAssign>>()) {
			_case_begin_1aa0b3722:;
			{
				return true;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a7648b67_Data>>()) {
			_case_begin_1aa0b3788:;
			{
				{
					auto &_match_expr{ _21529_st.operator jule::Ptr<_1a7648b67_Data>().get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1a641b364_FnCallExprModel>>()) {
						_case_begin_1aa0b3ea3:;
						{
							return true;
						}
					}
					else {
						_case_begin_1aa0b469b:;
						{
							return false;
						}
					}
					_match_end_1aa0b4602:;
				}
			}
		}
		else {
			_case_begin_1aa0b3348:;
			{
				return false;
			}
		}
		_match_end_1aa0b2e5d:;
	}
}



inline jule::Bool _1a758c5a0_st_is_def(jule::Any& _23415_st) {
	{
		auto &_match_expr{ _23415_st };
		
		if (_match_expr.type_is<jule::Ptr<_1a75ec478_Var>>()) {
			_case_begin_1aa0b5328:;
			{
				return true;
			}
		}
		else {
			_case_begin_1aa0b4778:;
			{
				return false;
			}
		}
		_match_end_1aa0b512a:;
	}
}



inline jule::Ptr<_1a75ec478_Var> _1a75c72aa_find_var_in_package(jule::Slice<jule::Ptr<_1a76439db_SymbolTable>>& _4629_files,jule::Str _4652_ident,jule::Bool _4664_cpp_linked) {
	{
		auto &expr = _4629_files;
		auto it = expr.begin();
		_iter_begin_1aa0b5955:;
		if (it != expr.end()) {
			jule::Ptr<_1a76439db_SymbolTable> _1aa0b59ee_f = *it;
			{
				jule::Ptr<_1a75ec478_Var> _4817_v = _1a76446ac_find_var(_1aa0b59ee_f.ptr(), _4652_ident,_4664_cpp_linked);
				if ((_4817_v != nullptr)) {
					return _4817_v;
				}
			}
			_iter_next_1aa0b5955:;
			++it;
			goto _iter_begin_1aa0b5955;
		}
		_iter_end_1aa0b5955:;
	}
	return nullptr;
}



inline jule::Ptr<_1a7672168_TypeAlias> _1a75c772d_find_type_alias_in_package(jule::Slice<jule::Ptr<_1a76439db_SymbolTable>>& _5836_files,jule::Str _5859_ident,jule::Bool _5871_cpp_linked) {
	{
		auto &expr = _5836_files;
		auto it = expr.begin();
		_iter_begin_1aa0b5cc9:;
		if (it != expr.end()) {
			jule::Ptr<_1a76439db_SymbolTable> _1aa0b6e95_f = *it;
			{
				jule::Ptr<_1a7672168_TypeAlias> _6017_ta = _1a7644a64_find_type_alias(_1aa0b6e95_f.ptr(), _5859_ident,_5871_cpp_linked);
				if ((_6017_ta != nullptr)) {
					return _6017_ta;
				}
			}
			_iter_next_1aa0b5cc9:;
			++it;
			goto _iter_begin_1aa0b5cc9;
		}
		_iter_end_1aa0b5cc9:;
	}
	return nullptr;
}



inline jule::Ptr<_1a64147be_Struct> _1a75c7b07_find_struct_in_package(jule::Slice<jule::Ptr<_1a76439db_SymbolTable>>& _7032_files,jule::Str _7055_ident,jule::Bool _7067_cpp_linked) {
	{
		auto &expr = _7032_files;
		auto it = expr.begin();
		_iter_begin_1aa0b8062:;
		if (it != expr.end()) {
			jule::Ptr<_1a76439db_SymbolTable> _1aa0b8491_f = *it;
			{
				jule::Ptr<_1a64147be_Struct> _7217_s = _1a7644e1b_find_struct(_1aa0b8491_f.ptr(), _7055_ident,_7067_cpp_linked);
				if ((_7217_s != nullptr)) {
					return _7217_s;
				}
			}
			_iter_next_1aa0b8062:;
			++it;
			goto _iter_begin_1aa0b8062;
		}
		_iter_end_1aa0b8062:;
	}
	return nullptr;
}



inline jule::Ptr<_1a6426a45_Fn> _1a75c8036_find_fn_in_package(jule::Slice<jule::Ptr<_1a76439db_SymbolTable>>& _8228_files,jule::Str _8251_ident,jule::Bool _8263_cpp_linked) {
	{
		auto &expr = _8228_files;
		auto it = expr.begin();
		_iter_begin_1aa0b9519:;
		if (it != expr.end()) {
			jule::Ptr<_1a76439db_SymbolTable> _1aa0b9948_file = *it;
			{
				jule::Ptr<_1a6426a45_Fn> _8417_f = _1a76452c3_find_fn(_1aa0b9948_file.ptr(), _8251_ident,_8263_cpp_linked);
				if ((_8417_f != nullptr)) {
					return _8417_f;
				}
			}
			_iter_next_1aa0b9519:;
			++it;
			goto _iter_begin_1aa0b9519;
		}
		_iter_end_1aa0b9519:;
	}
	return nullptr;
}



inline jule::Ptr<_1a7465bd7_Trait> _1a75c8377_find_trait_in_package(jule::Slice<jule::Ptr<_1a76439db_SymbolTable>>& _9431_files,jule::Str _9454_ident) {
	{
		auto &expr = _9431_files;
		auto it = expr.begin();
		_iter_begin_1aa0ba828:;
		if (it != expr.end()) {
			jule::Ptr<_1a76439db_SymbolTable> _1aa0b9b13_f = *it;
			{
				jule::Ptr<_1a7465bd7_Trait> _9617_t = _1a76455d1_find_trait(_1aa0b9b13_f.ptr(), _9454_ident);
				if ((_9617_t != nullptr)) {
					return _9617_t;
				}
			}
			_iter_next_1aa0ba828:;
			++it;
			goto _iter_begin_1aa0ba828;
		}
		_iter_end_1aa0ba828:;
	}
	return nullptr;
}



inline jule::Ptr<_1a7467de8_Enum> _1a75c86b8_find_enum_in_package(jule::Slice<jule::Ptr<_1a76439db_SymbolTable>>& _10630_files,jule::Str _10653_ident) {
	{
		auto &expr = _10630_files;
		auto it = expr.begin();
		_iter_begin_1aa0baedd:;
		if (it != expr.end()) {
			jule::Ptr<_1a76439db_SymbolTable> _1aa0bb87e_f = *it;
			{
				jule::Ptr<_1a7467de8_Enum> _10817_e = _1a76458de_find_enum(_1aa0bb87e_f.ptr(), _10653_ident);
				if ((_10817_e != nullptr)) {
					return _10817_e;
				}
			}
			_iter_next_1aa0baedd:;
			++it;
			goto _iter_begin_1aa0baedd;
		}
		_iter_end_1aa0baedd:;
	}
	return nullptr;
}



inline jule::Bool _1a75ce207_is_std_package(jule::Str _32719_f,jule::Str _32727_p) {
	return _1d095aa22_has_prefix(_32719_f,_1d09a5c6a_join(jule::Slice<jule::Str>({_1d002c897_PATH_STDLIB,_32727_p})));
}



inline jule::Bool _1a75d0192_is_valid_model_for_ref(jule::Any& _1232_m) {
	{
		auto &_match_expr{ _1232_m };
		
		if (_match_expr.type_is<jule::Ptr<_1a75ec478_Var>>()) {
			_case_begin_1aa0be0ce:;
			{
				return true;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a641db6e_StructSubIdentExprModel>>()) {
			_case_begin_1aa0be145:;
			{
				jule::Ptr<_1a641db6e_StructSubIdentExprModel> _1717_model = _1232_m.operator jule::Ptr<_1a641db6e_StructSubIdentExprModel>();
				return _1a75d0192_is_valid_model_for_ref(_1717_model.get()._field_expr.get()._field_model);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a641d3ee_TraitSubIdentExprModel>>()) {
			_case_begin_1aa0bdb4a:;
			{
				jule::Ptr<_1a641d3ee_TraitSubIdentExprModel> _2017_model = _1232_m.operator jule::Ptr<_1a641d3ee_TraitSubIdentExprModel>();
				return _1a75d0192_is_valid_model_for_ref(_2017_model.get()._field_expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6419928_UnaryExprModel>>()) {
			_case_begin_1aa0bdbb1:;
			{
				jule::Ptr<_1a6419928_UnaryExprModel> _2317_unary = _1232_m.operator jule::Ptr<_1a6419928_UnaryExprModel>();
				if ((_2317_unary.get()._field_op.get()._field_kind != jule::Str("*", 1))) {
					return false;
				}
				if ((_1a7675435_ptr(_2317_unary.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
					return true;
				}
				if ((_1a76751c1_sptr(_2317_unary.get()._field_expr.get()._field_kind.ptr()) == nullptr)) {
					return false;
				}
				return _1a75d0192_is_valid_model_for_ref(_2317_unary.get()._field_expr.get()._field_model);
			}
		}
		else {
			_case_begin_1aa0bcb5a:;
			{
				return false;
			}
		}
		_match_end_1aa0bc20e:;
	}
}



inline _1d0019224_Log _1a75d05d2_compiler_err(jule::Ptr<_1d0747985_Token>& _4118_token,jule::Bool _4133_line,jule::Str _4145_fmt,jule::Slice<jule::Any> _4158_args) {
	_1d0019224_Log _4213_log = _1d0019224_Log(static_cast<jule::I64>(1LL),_4118_token.get()._field_row,_4118_token.get()._field_column,_4118_token.get()._field_file.get()._field_path,_1d0019664_logf(_4145_fmt,_4158_args),jule::Str(),jule::Str());
	if (_4133_line) {
		_4213_log._field_line=_1d074e052_get_row(_4118_token.get()._field_file.ptr(), _4118_token.get()._field_row);
	}
	return _4213_log;
}



inline jule::Bool _1a75d0923_imp_is_lookupable(jule::Ptr<_1a75c928a_ImportInfo>& _5523_i,jule::Str _5539_ident) {
	if (_5523_i.get()._field_cpp_linked) {
		return false;
	}
	if ((!(_5523_i.get()._field_import_all))) {
		if ((_5523_i.get()._field_selected.len() > 0LL)) {
			return _1a75cb8b9_exist_ident(_5523_i.ptr(), _5539_ident);
		}
	}
	return _5523_i.get()._field_import_all;
}



inline void _1a75d0c20_append_ret_vars(jule::Slice<jule::Ptr<_1a75ec478_Var>>& _6825_dest,jule::Ptr<_1a6429be1_FnIns>& _6844_f) {
	if (_1a6426e96_is_void(_6844_f.get()._field_decl.ptr()) || (_6844_f.get()._field_result == nullptr)) {
		return;
	}
	jule::Slice<jule::Ptr<_1a7672da0_TypeKind>> _7313_types = _1a642a708_types(_6844_f.ptr());
	{
		auto &expr = _6844_f.get()._field_decl.get()._field_result.get()._field_idents;
		auto it = expr.begin();
		_iter_begin_1aa0c74b1:;
		if (it != expr.end()) {
			jule::I64 _1aa0c7615_i = it - expr.begin();
			jule::Ptr<_1d0747985_Token> _1aa0c7824_ident = *it;
			{
				if (_1d074a1d5_is_ignore_ident(_1aa0c7824_ident.get()._field_kind) || _1d074a47c_is_anon_ident(_1aa0c7824_ident.get()._field_kind)) {
					goto _iter_next_1aa0c74b1;
				}
				_6825_dest = jule::alloc_for_append(_6825_dest,1);_6825_dest.__push(jule::new_ptr<_1a75ec478_Var>(_1a75ec478_Var(_6844_f.get()._field_scope,_1aa0c7824_ident,_1aa0c7824_ident.get()._field_kind,jule::Bool(),jule::Bool(),true,jule::Bool(),true,jule::Bool(),jule::Bool(),jule::new_ptr<_1a7676c3e_TypeSymbol>(_1a7676c3e_TypeSymbol(jule::Ptr<_1d0759c1c_TypeDecl>(),_7313_types[_1aa0c7615_i])),jule::new_ptr<_1a7649be0_Value>(_1a7649be0_Value(jule::Ptr<_1d075b14c_Expr>(),jule::new_ptr<_1a7648b67_Data>())),jule::Ptr<_1a642cc9e_ReferenceStack>(),jule::Slice<jule::Ptr<_1d06c9ecd_Directive>>(),jule::Ptr<_1a75eb4aa_IterRelation>(),jule::Slice<jule::Ptr<_1a75ec478_Var>>())));
			}
			_iter_next_1aa0c74b1:;
			++it;
			_1aa0c7615_i++;
			goto _iter_begin_1aa0c74b1;
		}
		_iter_end_1aa0c74b1:;
	}
}



inline void _1a75d0ec8_append_param_vars(jule::Slice<jule::Ptr<_1a75ec478_Var>>& _9427_dest,jule::Ptr<_1a6429be1_FnIns>& _9446_f) {
	if ((_9446_f.get()._field_params.len() == 0LL)) {
		return;
	}
	{
		auto &expr = _9446_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1aa0c9da9:;
		if (it != expr.end()) {
			jule::Ptr<_1a6428d55_ParamIns> _1aa0c9eec_p = *it;
			{
				if (_1d074a1d5_is_ignore_ident(_1aa0c9eec_p.get()._field_decl.get()._field_ident) || _1d074a47c_is_anon_ident(_1aa0c9eec_p.get()._field_decl.get()._field_ident)) {
					goto _iter_next_1aa0c9da9;
				}
				jule::Ptr<_1a75ec478_Var> _10417_v = jule::new_ptr<_1a75ec478_Var>(_1a75ec478_Var(_9446_f.get()._field_scope,_1aa0c9eec_p.get()._field_decl.get()._field_token,_1aa0c9eec_p.get()._field_decl.get()._field_ident,jule::Bool(),jule::Bool(),_1aa0c9eec_p.get()._field_decl.get()._field_mutable,jule::Bool(),true,jule::Bool(),_1aa0c9eec_p.get()._field_decl.get()._field_reference,jule::new_ptr<_1a7676c3e_TypeSymbol>(),jule::new_ptr<_1a7649be0_Value>(_1a7649be0_Value(jule::Ptr<_1d075b14c_Expr>(),jule::new_ptr<_1a7648b67_Data>())),jule::Ptr<_1a642cc9e_ReferenceStack>(),jule::Slice<jule::Ptr<_1d06c9ecd_Directive>>(),jule::Ptr<_1a75eb4aa_IterRelation>(),jule::Slice<jule::Ptr<_1a75ec478_Var>>()));
				{
					
					if (_1a6425835_is_self(_1aa0c9eec_p.get()._field_decl.ptr())) {
						_case_begin_1aa0ccc03:;
						{
							_10417_v.get()._field_kind.get()._field_kind=jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),false,jule::Trait<_1a7672971_Kind>(_9446_f.get()._field_owner, 0)));
							_10417_v.get()._field_reference=(!(_1a6425a99_is_ref(_1aa0c9eec_p.get()._field_decl.ptr())));
							if (_1a6425a99_is_ref(_1aa0c9eec_p.get()._field_decl.ptr())) {
								_10417_v.get()._field_ident=_10417_v.get()._field_ident.slice(1LL);
								_10417_v.get()._field_kind.get()._field_kind.get()._field_kind=jule::Trait<_1a7672971_Kind>(jule::new_ptr<_1a767ab11_Sptr>(_1a767ab11_Sptr(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(_10417_v.get()._field_kind.get()._field_kind.get()._field_cpp_ident,jule::Bool(),jule::Bool(),_10417_v.get()._field_kind.get()._field_kind.get()._field_kind)))), 6);
							}
						}
					}
					else if (_1aa0c9eec_p.get()._field_decl.get()._field_variadic) {
						_case_begin_1aa0cc829:;
						{
							_10417_v.get()._field_kind.get()._field_kind=jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),false,jule::Trait<_1a7672971_Kind>(jule::new_ptr<_1a767b56d_Slc>(_1a767b56d_Slc(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(_1aa0c9eec_p.get()._field_kind.get()._field_cpp_ident,jule::Bool(),jule::Bool(),_1aa0c9eec_p.get()._field_kind.get()._field_kind)))), 7)));
						}
					}
					else {
						_case_begin_1aa0cc4d8:;
						{
							_10417_v.get()._field_kind.get()._field_kind=_1aa0c9eec_p.get()._field_kind;
						}
					}
					_match_end_1aa0cc3c8:;
				}
				_9427_dest = jule::alloc_for_append(_9427_dest,1);_9427_dest.__push(_10417_v);
			}
			_iter_next_1aa0c9da9:;
			++it;
			goto _iter_begin_1aa0c9da9;
		}
		_iter_end_1aa0c9da9:;
	}
}



inline void _1a75d12c5_append_generic_type_aliases(jule::Slice<jule::Ptr<_1a7672168_TypeAlias>>& _15437_dest,jule::Ptr<_1a6429be1_FnIns>& _15462_f) {
	jule::I64 _15513_size = _15462_f.get()._field_generics.len();
	if ((_15462_f.get()._field_decl.get()._field_owner != nullptr)) {
		_15513_size+=static_cast<jule::I64>(_15462_f.get()._field_decl.get()._field_owner.get()._field_generics.len());
	}
	if ((_15513_size == 0LL)) {
		return;
	}
	{
		auto &expr = _15462_f.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1aa0d2ec2:;
		if (it != expr.end()) {
			jule::I64 _1aa0d30c1_i = it - expr.begin();
			jule::Ptr<_1a7672da0_TypeKind> _1aa0d31e2_g = *it;
			{
				jule::Ptr<_1d075ee64_GenericDecl> _16517_decl = _15462_f.get()._field_decl.get()._field_generics[_1aa0d30c1_i];
				_15437_dest = jule::alloc_for_append(_15437_dest,1);_15437_dest.__push(jule::new_ptr<_1a7672168_TypeAlias>(_1a7672168_TypeAlias(_15462_f.get()._field_decl.get()._field_scope,jule::Bool(),jule::Bool(),true,true,_16517_decl.get()._field_token,_16517_decl.get()._field_ident,jule::new_ptr<_1a7676c3e_TypeSymbol>(_1a7676c3e_TypeSymbol(jule::Ptr<_1d0759c1c_TypeDecl>(),_1aa0d31e2_g)),jule::Slice<jule::Any>(),jule::Slice<jule::Ptr<_1a7672168_TypeAlias>>())));
			}
			_iter_next_1aa0d2ec2:;
			++it;
			_1aa0d30c1_i++;
			goto _iter_begin_1aa0d2ec2;
		}
		_iter_end_1aa0d2ec2:;
	}
	if ((_15462_f.get()._field_decl.get()._field_owner != nullptr)) {
		jule::Ptr<_1a641744d_StructIns> _17917_owner = _15462_f.get()._field_owner;
		{
			auto &expr = _17917_owner.get()._field_generics;
			auto it = expr.begin();
			_iter_begin_1aa0d4149:;
			if (it != expr.end()) {
				jule::I64 _1aa0d5106_i = it - expr.begin();
				jule::Ptr<_1a7672da0_TypeKind> _1aa0d52e3_g = *it;
				{
					jule::Ptr<_1d075ee64_GenericDecl> _18121_decl = _17917_owner.get()._field_decl.get()._field_generics[_1aa0d5106_i];
					_15437_dest = jule::alloc_for_append(_15437_dest,1);_15437_dest.__push(jule::new_ptr<_1a7672168_TypeAlias>(_1a7672168_TypeAlias(_15462_f.get()._field_decl.get()._field_scope,jule::Bool(),jule::Bool(),true,true,_18121_decl.get()._field_token,_18121_decl.get()._field_ident,jule::new_ptr<_1a7676c3e_TypeSymbol>(_1a7676c3e_TypeSymbol(jule::Ptr<_1d0759c1c_TypeDecl>(),_1aa0d52e3_g)),jule::Slice<jule::Any>(),jule::Slice<jule::Ptr<_1a7672168_TypeAlias>>())));
				}
				_iter_next_1aa0d4149:;
				++it;
				_1aa0d5106_i++;
				goto _iter_begin_1aa0d4149;
			}
			_iter_end_1aa0d4149:;
		}
	}
}



inline jule::Ptr<_1a76439db_SymbolTable> _1a75d1605_find_file(jule::Slice<jule::Ptr<_1a76439db_SymbolTable>>& _19619_files,jule::Ptr<_1d074cd75_File>& _19643_handler) {
	{
		auto &expr = _19619_files;
		auto it = expr.begin();
		_iter_begin_1aa0d7119:;
		if (it != expr.end()) {
			jule::Ptr<_1a76439db_SymbolTable> _1aa0d5ed6_fl = *it;
			{
				if (_1aa0d5ed6_fl.get()._field_file == _19643_handler) {
					return _1aa0d5ed6_fl;
				}
			}
			_iter_next_1aa0d7119:;
			++it;
			goto _iter_begin_1aa0d7119;
		}
		_iter_end_1aa0d7119:;
	}
	return nullptr;
}



inline void _1a75d19e0_push_suggestion(_1d0019224_Log* _20531_log,jule::Str _20542_fmt,jule::Slice<jule::Any> _20555_args) {
	_20531_log->_field_suggestion=_1d0019664_logf(_20542_fmt,_20555_args);
}



inline jule::Bool _1a761aac3_trait_has_reference_receiver(jule::Ptr<_1a7465bd7_Trait>& _2634_t) {
	{
		auto &expr = _2634_t.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1aa0d7aba:;
		if (it != expr.end()) {
			jule::Ptr<_1a6426a45_Fn> &_1aa0d84e4_f = *it;
			{
				if (_1aa0d84e4_f.get()._field_statically) {
					goto _iter_next_1aa0d7aba;
				}
				jule::Ptr<_1a6425208_Param> _3313_p = _1aa0d84e4_f.get()._field_params[0LL];
				if (_1a6425a99_is_ref(_3313_p.ptr()) && _1a6425835_is_self(_3313_p.ptr())) {
					return true;
				}
			}
			_iter_next_1aa0d7aba:;
			++it;
			goto _iter_begin_1aa0d7aba;
		}
		_iter_end_1aa0d7aba:;
	}
	return false;
}



inline jule::Bool _1a7634823_float_assignable(jule::Str _4121_kind,jule::Ptr<_1a7648b67_Data>& _4133_d) {
	jule::Str _429_value = _1b774e312_fmt_float(static_cast<jule::F64>(_1a7521314_as_f64(_4133_d.get()._field_constant.ptr())),'g',-1LL,64LL);
	return _1a75a81ae_check_bit_float(_429_value,static_cast<jule::I64>(_1a75a6d28_bitsize_of(_4121_kind)));
}



inline jule::Bool _1a7634955_sig_assignable(jule::Str _4619_kind,jule::Ptr<_1a7648b67_Data>& _4631_d) {
	jule::F64 _479_min = _1a75ab14b_min(_4619_kind);
	jule::F64 _489_max = _1a75ab437_max(_4619_kind);
	{
		
		if (_1a7522e70_is_f64(_4631_d.get()._field_constant.ptr())) {
			_case_begin_1aa0dbd77:;
			{
				jule::F64 _5113_x = _1a7520ac7_read_f64(_4631_d.get()._field_constant.ptr());
				jule::F64 _5214_i;
				jule::F64 _5217_frac;
				std::tie(_5214_i,_5217_frac) = _1a7441bc4_modf(_5113_x);
				if ((_5217_frac != 0LL)) {
					return false;
				}
				return (_5214_i >= _479_min) && (_5214_i <= _489_max);
			}
		}
		else if (_1a7522733_is_u64(_4631_d.get()._field_constant.ptr())) {
			_case_begin_1aa0dbddd:;
			{
				jule::F64 _5813_x = _1a7521314_as_f64(_4631_d.get()._field_constant.ptr());
				if (_5813_x <= _489_max) {
					return true;
				}
			}
		}
		else if (_1a75224be_is_i64(_4631_d.get()._field_constant.ptr())) {
			_case_begin_1aa0dbe54:;
			{
				jule::F64 _6313_x = _1a7521314_as_f64(_4631_d.get()._field_constant.ptr());
				return (_479_min <= _6313_x) && (_6313_x <= _489_max);
			}
		}
		_match_end_1aa0dbc23:;
	}
	return false;
}



inline jule::Bool _1a7634a87_unsig_assignable(jule::Str _6921_kind,jule::Ptr<_1a7648b67_Data>& _6933_d) {
	jule::F64 _709_max = _1a75ab437_max(_6921_kind);
	if (_6933_d.get()._field_is_rune && (_6921_kind == jule::Str("u8", 2))) {
		return _1a7631d1a_is_ascii(static_cast<jule::I32>(static_cast<jule::I32>(_1a7520126_read_i64(_6933_d.get()._field_constant.ptr()))));
	}
	{
		
		if (_1a7522e70_is_f64(_6933_d.get()._field_constant.ptr())) {
			_case_begin_1aa0e1dc1:;
			{
				jule::F64 _7713_x = _1a7520ac7_read_f64(_6933_d.get()._field_constant.ptr());
				if ((_7713_x < 0LL)) {
					return false;
				}
				jule::F64 _8114_i;
				jule::F64 _8117_frac;
				std::tie(_8114_i,_8117_frac) = _1a7441bc4_modf(_7713_x);
				if ((_8117_frac != 0LL)) {
					return false;
				}
				return _8114_i <= _709_max;
			}
		}
		else if (_1a7522733_is_u64(_6933_d.get()._field_constant.ptr())) {
			_case_begin_1aa0e1e37:;
			{
				jule::F64 _8713_x = _1a7521314_as_f64(_6933_d.get()._field_constant.ptr());
				if (_8713_x <= _709_max) {
					return true;
				}
			}
		}
		else if (_1a75224be_is_i64(_6933_d.get()._field_constant.ptr())) {
			_case_begin_1aa0e1e9d:;
			{
				jule::F64 _9213_x = _1a7521314_as_f64(_6933_d.get()._field_constant.ptr());
				return (0LL <= _9213_x) && (_9213_x <= _709_max);
			}
		}
		_match_end_1aa0e16b7:;
	}
	return false;
}



inline jule::Bool _1a7634bb9_int_assignable(jule::Str _9819_kind,jule::Ptr<_1a7648b67_Data>& _9831_d) {
	{
		
		if (_1a75b134e_is_sig_int(_9819_kind)) {
			_case_begin_1aa0e69db:;
			{
				return _1a7634955_sig_assignable(_9819_kind,_9831_d);
			}
		}
		else if (_1a75b163a_is_unsig_int(_9819_kind)) {
			_case_begin_1aa0e6ada:;
			{
				return _1a7634a87_unsig_assignable(_9819_kind,_9831_d);
			}
		}
		else {
			_case_begin_1aa0e292c:;
			{
				return false;
			}
		}
		_match_end_1aa0e2861:;
	}
}



inline jule::Ptr<_1d06c9ecd_Directive> _1a766cb36_find_directive(jule::Slice<jule::Ptr<_1d06c9ecd_Directive>>& _412224_directives,jule::Str _412266_d) {
	{
		auto &expr = _412224_directives;
		auto it = expr.begin();
		_iter_begin_1aa0e6e81:;
		if (it != expr.end()) {
			jule::Ptr<_1d06c9ecd_Directive> _1aa0e6c0b_dr = *it;
			{
				if (_1aa0e6c0b_dr.get()._field_tag.get()._field_kind == _412266_d) {
					return _1aa0e6c0b_dr;
				}
			}
			_iter_next_1aa0e6e81:;
			++it;
			goto _iter_begin_1aa0e6e81;
		}
		_iter_end_1aa0e6e81:;
	}
	return nullptr;
}



inline jule::Any _1a766cebb_find_builtins_import(jule::Str _413125_ident,jule::Ptr<_1a75c928a_ImportInfo> _413137_imp) {
	return _1a76e1380_find_package_builtin_def(_413137_imp.get()._field_link_path,_413125_ident);
}



inline void _1a766d1ca_fit_bitsize(jule::Ptr<_1a7648b67_Data>& _413821_d) {
	jule::Ptr<_1a7677602_Prim> _413913_prim = _1a7674e5c_prim(_413821_d.get()._field_kind.ptr());
	jule::I64 _41409_z = _1a75a6d28_bitsize_of(_1a7677965_to_str(_413913_prim.ptr()));
	if ((_41409_z == 64LL)) {
		return;
	}
	jule::I64 _414513_k = 0LL;
	{
		
		if (_1a75224be_is_i64(_413821_d.get()._field_constant.ptr())) {
			_case_begin_1aa0ea2b4:;
			{
				_414513_k=static_cast<jule::I64>(_1a75a86ed_bitsize_of_int(static_cast<jule::I64>(_1a7520126_read_i64(_413821_d.get()._field_constant.ptr()))));
				if (_414513_k > _41409_z) {
					_413913_prim.get()._field_kind=_1a75a7114_int_from_bits(_414513_k);
				}
			}
		}
		else if (_1a7522733_is_u64(_413821_d.get()._field_constant.ptr())) {
			_case_begin_1aa0ea33b:;
			{
				_414513_k=static_cast<jule::I64>(_1a75a8995_bitsize_of_uint(static_cast<jule::U64>(_1a752038a_read_u64(_413821_d.get()._field_constant.ptr()))));
				if (_414513_k > _41409_z) {
					_413913_prim.get()._field_kind=_1a75a73ab_uint_from_bits(_414513_k);
				}
			}
		}
		else if (_1a7522e70_is_f64(_413821_d.get()._field_constant.ptr())) {
			_case_begin_1aa0ea3b3:;
			{
				_414513_k=static_cast<jule::I64>(_1a75a8456_bitsize_of_float(static_cast<jule::F64>(_1a7520ac7_read_f64(_413821_d.get()._field_constant.ptr()))));
				if (_414513_k > _41409_z) {
					_413913_prim.get()._field_kind=_1a75a7653_float_from_bits(_414513_k);
				}
			}
		}
		_match_end_1aa0ea1d7:;
	}
}



inline void _1a766d4c7_make_struct_lit_alloc(jule::Ptr<_1a7648b67_Data>& _416531_d,jule::Ptr<_1a641a1cb_StructLitExprModel>& _416546_lit) {
	_416531_d.get()._field_kind=jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(jule::new_ptr<_1a767ab11_Sptr>(_1a767ab11_Sptr(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_416546_lit.get()._field_strct, 0))))), 6)));
	_416531_d.get()._field_model=jule::Any(jule::new_ptr<_1a641a50b_AllocStructLitExprModel>(_1a641a50b_AllocStructLitExprModel(_416546_lit)));
}



inline jule::Ptr<_1a75ec478_Var> _1a766d818_build_error_var(jule::Ptr<_1a759e606_Scope>& _417625_s,jule::Ptr<_1d075cd74_FnCallExpr>& _417641_fc) {
	return jule::new_ptr<_1a75ec478_Var>(_1a75ec478_Var(_417625_s,_417641_fc.get()._field_token,jule::Str("error", 5),jule::Bool(),jule::Bool(),true,jule::Bool(),true,jule::Bool(),false,jule::new_ptr<_1a7676c3e_TypeSymbol>(_1a7676c3e_TypeSymbol(jule::Ptr<_1d0759c1c_TypeDecl>(),jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("any", 3)), 5))))),jule::new_ptr<_1a7649be0_Value>(_1a7649be0_Value(jule::Ptr<_1d075b14c_Expr>(),jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data()))),jule::Ptr<_1a642cc9e_ReferenceStack>(),jule::Slice<jule::Ptr<_1d06c9ecd_Directive>>(),jule::Ptr<_1a75eb4aa_IterRelation>(),jule::Slice<jule::Ptr<_1a75ec478_Var>>()));
}



inline jule::Any _1a766db59_find_builtins_sema(jule::Str _419523_ident,jule::Ptr<_1a75d1e74_Sema> _419539_s) {
	{
		auto &expr = _419539_s.get()._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1aa101870:;
		if (it != expr.end()) {
			jule::Ptr<_1a75c928a_ImportInfo> _1aa101b7d_imp = *it;
			{
				if (_1aa101b7d_imp.get()._field_import_all || _1a75cb8b9_exist_ident(_1aa101b7d_imp.ptr(), _419523_ident)) {
					jule::Any _419821_def = _1a766cebb_find_builtins_import(_419523_ident,_1aa101b7d_imp);
					if (_419821_def != jule::Any(jule::Any(nullptr))) {
						return _419821_def;
					}
				}
			}
			_iter_next_1aa101870:;
			++it;
			goto _iter_begin_1aa101870;
		}
		_iter_end_1aa101870:;
	}
	jule::Str _420613_ppath = _1d074d76b_dir(_419539_s.get()._field_file.get()._field_file.ptr());
	if (_1d095aa22_has_prefix(_420613_ppath,_1d002c897_PATH_STDLIB)) {
		(_420613_ppath).mut_slice(_1d002c897_PATH_STDLIB.len());
		_420613_ppath=jule::Str("std", 3) + _1d09a4164_replace(_420613_ppath,static_cast<jule::Str>(92LL),jule::Str("::", 2),-1LL);
		return _1a76e1380_find_package_builtin_def(_420613_ppath,_419523_ident);
	}
	return jule::Any(nullptr);
}



inline jule::Bool _1a766de01_is_ok_for_shifting(jule::Ptr<_1a7648b67_Data>& _422028_d) {
	if (_1a764952a_is_const(_422028_d.ptr())) {
		{
			
			if (_1a75224be_is_i64(_422028_d.get()._field_constant.ptr())) {
				_case_begin_1aa105973:;
				{
					return (_1a7520126_read_i64(_422028_d.get()._field_constant.ptr()) >= 0LL);
				}
			}
			else if (_1a7522733_is_u64(_422028_d.get()._field_constant.ptr())) {
				_case_begin_1aa105a61:;
				{
					return true;
				}
			}
			else if (_1a7522e70_is_f64(_422028_d.get()._field_constant.ptr())) {
				_case_begin_1aa105ac7:;
				{
					return (_1a7520ac7_read_f64(_422028_d.get()._field_constant.ptr()) >= 0LL);
				}
			}
			else {
				_case_begin_1aa105357:;
				{
					return false;
				}
			}
			_match_end_1aa10528b:;
		}
	}
	jule::Ptr<_1a7677602_Prim> _42339_prim = _1a7674e5c_prim(_422028_d.get()._field_kind.ptr());
	return (_42339_prim != nullptr) && _1a75b18d2_is_int(_1a7677965_to_str(_42339_prim.ptr()));
}



inline jule::Bool _1a766e231_is_instanced_struct(jule::Ptr<_1a641744d_StructIns> _423724_s) {
	return _423724_s.get()._field_decl.get()._field_generics.len() == static_cast<jule::I64>(static_cast<jule::I64>(_423724_s.get()._field_generics.len()));
}



inline jule::Bool _1a766e53e_is_ptr_arithmetic_compatible_int(jule::Ptr<_1a7648b67_Data>& _424142_d) {
	if (_1a764952a_is_const(_424142_d.ptr())) {
		return _1a7634bb9_int_assignable(jule::Str("int", 3),_424142_d);
	}
	_1a7634ceb_TypeCompatibilityChecker _424513_tcc = _1a7634ceb_TypeCompatibilityChecker(jule::Ptr<_1a75d1e74_Sema>(),jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("int", 3)), 5))),_424142_d.get()._field_kind,jule::Ptr<_1d0747985_Token>());
	return _1a7635a33_check(&_424513_tcc);
}



inline void _1a766e71a_apply_cast_kind_model(jule::Ptr<_1a7648b67_Data>& _425431_d) {
	_425431_d.get()._field_model=jule::Any(jule::new_ptr<_1a641aa39_CastingExprModel>(_1a641aa39_CastingExprModel(jule::Ptr<_1d0747985_Token>(),_425431_d.get()._field_model,_425431_d.get()._field_cast_kind,_425431_d.get()._field_kind)));
}



inline void _1a766e929_apply_cast_kind(jule::Ptr<_1a7648b67_Data>& _426225_d) {
	if ((_426225_d.get()._field_cast_kind == nullptr)) {
		return;
	}
	_1a766e71a_apply_cast_kind_model(_426225_d);
	_426225_d.get()._field_kind=_426225_d.get()._field_cast_kind;
	_426225_d.get()._field_cast_kind=nullptr;
}



inline jule::Ptr<_1a7648b67_Data> _1a766eb27_build_void_data(void) {
	return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("void", 4)), 5))),jule::Ptr<_1a7672da0_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(),false,jule::Ptr<_1a751ddb1_Const>()));
}



inline jule::Str _1a766ee13_check_data_for_integer_indexing(jule::Ptr<_1a7648b67_Data>& _428341_d) {
	jule::Str _428353_err_fmt = jule::Str();
	if ((_428341_d == nullptr)) {
		_428353_err_fmt = jule::Str();
		return _428353_err_fmt;
	}
	{
		
		if ((_1a7674e5c_prim(_428341_d.get()._field_kind.ptr()) == nullptr)) {
			_case_begin_1aa112c16:;
			{
				_428353_err_fmt = jule::Str("type @ is invalid for indexing", 30);
				return _428353_err_fmt;
			}
		}
		else if ((!(_1a75b18d2_is_int(_1a7677965_to_str(_1a7674e5c_prim(_428341_d.get()._field_kind.ptr()).ptr()))))) {
			_case_begin_1aa10c848:;
			{
				_428353_err_fmt = jule::Str("type @ is invalid for indexing", 30);
				return _428353_err_fmt;
			}
		}
		else if (_1a764952a_is_const(_428341_d.ptr())) {
			_case_begin_1aa10c8c0:;
			{
				if ((_1a7521314_as_f64(_428341_d.get()._field_constant.ptr()) < 0LL)) {
					_428353_err_fmt = jule::Str("overflow the limit of data-type", 31);
					return _428353_err_fmt;
				}
			}
		}
		else if ((_1a7674e5c_prim(_428341_d.get()._field_kind.ptr()) == nullptr) || _1a764952a_is_const(_428341_d.ptr()) || _1a75a6a81_real_kind_of(_1a7677965_to_str(_1a7674e5c_prim(_428341_d.get()._field_kind.ptr()).ptr())) != _1a75a6a81_real_kind_of(jule::Str("int", 3))) {
			_case_begin_1aa10c947:;
			{
				_428341_d.get()._field_cast_kind=jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("int", 3)), 5)));
				_1a766e929_apply_cast_kind(_428341_d);
			}
		}
		_match_end_1aa112d04:;
	}
	_428353_err_fmt = jule::Str();
	return _428353_err_fmt;
}



inline void _1a76701ee_apply_cast_model_by_enum(jule::Ptr<_1a7648b67_Data>& _430934_d,jule::Ptr<_1a7467de8_Enum> _430948_e) {
	if ((_430948_e == nullptr)) {
		return;
	}
	jule::Ptr<_1a7677602_Prim> _43139_p = _1a7674e5c_prim(_430948_e.get()._field_kind.get()._field_kind.ptr());
	if (_1a767a5b1_is_str(_43139_p.ptr())) {
		return;
	}
	_430934_d.get()._field_cast_kind=_430948_e.get()._field_kind.get()._field_kind;
	_1a766e71a_apply_cast_kind_model(_430934_d);
	_430934_d.get()._field_cast_kind=nullptr;
}



inline void _1a7670496_cast_const_by_type(jule::Str& _432224_t,jule::Ptr<_1a7648b67_Data>& _432237_d) {
	{
		
		if (_1a75b134e_is_sig_int(_432224_t)) {
			_case_begin_1aa118ea3:;
			{
				{
					auto _match_expr{ _1a75a6d28_bitsize_of(_1a75a6a81_real_kind_of(_432224_t)) };
					
					if (_match_expr == 64LL) {
						_case_begin_1aa119cea:;
						{
							_1a7521589_set_i64(_432237_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1a7520d3b_as_i64(_432237_d.get()._field_constant.ptr())));
						}
					}
					else if (_match_expr == 32LL) {
						_case_begin_1aa119d61:;
						{
							_1a7521589_set_i64(_432237_d.get()._field_constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I32>(_1a7520d3b_as_i64(_432237_d.get()._field_constant.ptr())))));
						}
					}
					else if (_match_expr == 16LL) {
						_case_begin_1aa119dc7:;
						{
							_1a7521589_set_i64(_432237_d.get()._field_constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I16>(_1a7520d3b_as_i64(_432237_d.get()._field_constant.ptr())))));
						}
					}
					else if (_match_expr == 8LL) {
						_case_begin_1aa119e3d:;
						{
							_1a7521589_set_i64(_432237_d.get()._field_constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I8>(_1a7520d3b_as_i64(_432237_d.get()._field_constant.ptr())))));
						}
					}
					_match_end_1aa119921:;
				}
			}
		}
		else if (_1a75b163a_is_unsig_int(_432224_t)) {
			_case_begin_1aa11902a:;
			{
				{
					auto _match_expr{ _1a75a6d28_bitsize_of(_1a75a6a81_real_kind_of(_432224_t)) };
					
					if (_match_expr == 64LL) {
						_case_begin_1aa119657:;
						{
							_1a752180e_set_u64(_432237_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1a75210a0_as_u64(_432237_d.get()._field_constant.ptr())));
						}
					}
					else if (_match_expr == 32LL) {
						_case_begin_1aa11d86a:;
						{
							_1a752180e_set_u64(_432237_d.get()._field_constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U32>(_1a75210a0_as_u64(_432237_d.get()._field_constant.ptr())))));
						}
					}
					else if (_match_expr == 16LL) {
						_case_begin_1aa11d8d1:;
						{
							_1a752180e_set_u64(_432237_d.get()._field_constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U16>(_1a75210a0_as_u64(_432237_d.get()._field_constant.ptr())))));
						}
					}
					else if (_match_expr == 8LL) {
						_case_begin_1aa11d958:;
						{
							_1a752180e_set_u64(_432237_d.get()._field_constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U8>(_1a75210a0_as_u64(_432237_d.get()._field_constant.ptr())))));
						}
					}
					_match_end_1aa119712:;
				}
			}
		}
		else if (_1a75b1bbd_is_float(_432224_t)) {
			_case_begin_1aa1190a2:;
			{
				{
					auto _match_expr{ _1a75a6d28_bitsize_of(_1a75a6a81_real_kind_of(_432224_t)) };
					
					if (_match_expr == 64LL) {
						_case_begin_1aa11dc99:;
						{
							_1a752207e_set_f64(_432237_d.get()._field_constant.ptr(), static_cast<jule::F64>(_1a7521314_as_f64(_432237_d.get()._field_constant.ptr())));
						}
					}
					else if (_match_expr == 32LL) {
						_case_begin_1aa1223b8:;
						{
							_1a752207e_set_f64(_432237_d.get()._field_constant.ptr(), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F32>(_1a7521314_as_f64(_432237_d.get()._field_constant.ptr())))));
						}
					}
					_match_end_1aa11dd54:;
				}
			}
		}
		_match_end_1aa118d82:;
	}
}



inline jule::Bool _1a76716d9_has_directive(jule::Slice<jule::Ptr<_1d06c9ecd_Directive>>& _3323_directives,jule::Str _3354_tag) {
	{
		auto &expr = _3323_directives;
		auto it = expr.begin();
		_iter_begin_1aa11a339:;
		if (it != expr.end()) {
			jule::Ptr<_1d06c9ecd_Directive> _1aa1226c6_dr = *it;
			{
				if (_1aa1226c6_dr.get()._field_tag.get()._field_kind == _3354_tag) {
					return true;
				}
			}
			_iter_next_1aa11a339:;
			++it;
			goto _iter_begin_1aa11a339;
		}
		_iter_end_1aa11a339:;
	}
	return false;
}



inline jule::Bool _1a767ee9a_can_get_ptr(jule::Ptr<_1a7648b67_Data>& _57121_d) {
	if ((!(_57121_d.get()._field_lvalue)) || _1a764952a_is_const(_57121_d.ptr())) {
		return false;
	}
	{
		
		if ((_1a7675dd6_fnc(_57121_d.get()._field_kind.ptr()) != nullptr) || (_1a7675699_enm(_57121_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa12571d:;
			{
				return false;
			}
		}
		else {
			_case_begin_1aa12518a:;
			{
				return true;
			}
		}
		_match_end_1aa125135:;
	}
}



inline jule::Bool _1a7680242_is_valid_for_sptr_type(jule::Ptr<_1a7672da0_TypeKind>& _58532_t) {
	jule::Ptr<_1a641744d_StructIns> _58613_s = _1a767614a_strct(_58532_t.ptr());
	if (((_58613_s != nullptr) && (_58613_s.get()._field_decl != nullptr)) && _58613_s.get()._field_decl.get()._field_cpp_linked) {
		return false;
	}
	return true;
}



inline jule::Bool _1a768052d_is_valid_for_ref(jule::Ptr<_1a7672da0_TypeKind>& _59426_t) {
	return (_1a7675dd6_fnc(_59426_t.ptr()) == nullptr);
}



inline jule::Bool _1a7680819_is_builtin_str_convertable(jule::Ptr<_1a7672da0_TypeKind>& _59736_t) {
	return ((!(_1a7673ed3_void(_59736_t.ptr()))) && (_1a7675dd6_fnc(_59736_t.ptr()) == nullptr)) && (_1a7676887_tup(_59736_t.ptr()) == nullptr);
}



inline jule::Str _1a7680ae4_build_link_path_by_tokens(jule::Slice<jule::Ptr<_1d0747985_Token>>& _60131_tokens) {
	jule::Str _60213_s = _60131_tokens[0LL].get()._field_kind;
	{
		auto expr = _60131_tokens.slice(1LL);
		auto it = expr.begin();
		_iter_begin_1aa1294be:;
		if (it != expr.end()) {
			jule::Ptr<_1d0747985_Token> &_1aa1296cd_token = *it;
			{
				_60213_s+=jule::Str("::", 2);
				_60213_s+=_1aa1296cd_token.get()._field_kind;
			}
			_iter_next_1aa1294be:;
			++it;
			goto _iter_begin_1aa1294be;
		}
		_iter_end_1aa1294be:;
	}
	return _60213_s;
}



inline jule::Ptr<_1a7677602_Prim> _1a7680d7a_build_prim_type(jule::Str _61020_kind) {
	return jule::new_ptr<_1a7677602_Prim>(_1a7677602_Prim(_61020_kind));
}



inline jule::Ptr<_1a64147be_Struct> _1a76811aa_get_struct_from_kind(jule::Ptr<_1a7672da0_TypeKind> _61629_k) {
	{
		
		if ((_61629_k == nullptr)) {
			_case_begin_1aa12ac40:;
			{
				return nullptr;
			}
		}
		else if ((_1a767614a_strct(_61629_k.ptr()) != nullptr)) {
			_case_begin_1aa12aca6:;
			{
				return _1a767614a_strct(_61629_k.ptr()).get()._field_decl;
			}
		}
		else if ((_1a76751c1_sptr(_61629_k.ptr()) != nullptr)) {
			_case_begin_1aa12a9cb:;
			{
				return _1a76811aa_get_struct_from_kind(_1a76751c1_sptr(_61629_k.ptr()).get()._field_elem);
			}
		}
		else if ((_1a7675b72_slc(_61629_k.ptr()) != nullptr)) {
			_case_begin_1aa12aa42:;
			{
				return _1a76811aa_get_struct_from_kind(_1a7675b72_slc(_61629_k.ptr()).get()._field_elem);
			}
		}
		else if ((_1a767590d_arr(_61629_k.ptr()) != nullptr)) {
			_case_begin_1aa12aaa8:;
			{
				return _1a76811aa_get_struct_from_kind(_1a767590d_arr(_61629_k.ptr()).get()._field_elem);
			}
		}
		else if ((_1a7675435_ptr(_61629_k.ptr()) != nullptr)) {
			_case_begin_1aa12a5e1:;
			{
				return nullptr;
			}
		}
		else {
			_case_begin_1aa129a63:;
			{
				return nullptr;
			}
		}
		_match_end_1aa1299ca:;
	}
}



inline jule::Bool _1a7681452_is_prim(jule::Str _63912_kind) {
	return (((((((((((((((_63912_kind == jule::Str("i8", 2)) || (_63912_kind == jule::Str("i16", 3))) || (_63912_kind == jule::Str("i32", 3))) || (_63912_kind == jule::Str("i64", 3))) || (_63912_kind == jule::Str("u8", 2))) || (_63912_kind == jule::Str("u16", 3))) || (_63912_kind == jule::Str("u32", 3))) || (_63912_kind == jule::Str("u64", 3))) || (_63912_kind == jule::Str("f32", 3))) || (_63912_kind == jule::Str("f64", 3))) || (_63912_kind == jule::Str("int", 3))) || (_63912_kind == jule::Str("uint", 4))) || (_63912_kind == jule::Str("uintptr", 7))) || (_63912_kind == jule::Str("bool", 4))) || (_63912_kind == jule::Str("str", 3))) || (_63912_kind == jule::Str("any", 3));
}



inline void _1a7689191_apply_implicit_cast(jule::Ptr<_1a7672da0_TypeKind>& _152129_dest,jule::Ptr<_1a7648b67_Data>& _152151_d) {
	if (_1a7673c6e_is_nil(_152151_d.get()._field_kind.ptr())) {
		return;
	}
	if ((_1a76763ae_trt(_152129_dest.ptr()) != nullptr) && (_1a76763ae_trt(_152151_d.get()._field_kind.ptr()) == nullptr)) {
		_152151_d.get()._field_cast_kind=_152129_dest;
		_1a766e71a_apply_cast_kind_model(_152151_d);
		_152151_d.get()._field_cast_kind=nullptr;
	}
}



inline std::tuple<jule::Ptr<_1a76439db_SymbolTable>,jule::Slice<_1d0019224_Log>> _1a768bd31_build_symbols(jule::Ptr<_1d06e7b66_Ast>& _1523_ast,jule::Trait<_1a75c6e25_Importer>& _1539_importer,jule::Ptr<_1a6432bb6_SymbolBuilder> _1563_owner) {
	jule::Ptr<_1a6432bb6_SymbolBuilder> _1613_sb = jule::new_ptr<_1a6432bb6_SymbolBuilder>(_1a6432bb6_SymbolBuilder(_1563_owner,_1539_importer,jule::Slice<_1d0019224_Log>(),_1523_ast,jule::Ptr<_1a76439db_SymbolTable>()));
	_1a6437d20_build(_1613_sb);
	if ((_1613_sb.get()._field_errors.len() == 0LL)) {
		return std::make_tuple(_1613_sb.get()._field_table,nullptr);
	}
	return std::make_tuple(nullptr,_1613_sb.get()._field_errors);
}



inline std::tuple<jule::Ptr<_1a75cbe4c_Package>,jule::Slice<_1d0019224_Log>> _1a768c260___analyze_package(jule::Slice<jule::Ptr<_1d06e7b66_Ast>>& _2927_files,jule::Trait<_1a75c6e25_Importer>& _2947_importer,jule::I64& _2968_flags) {
	jule::Slice<jule::Ptr<_1a76439db_SymbolTable>> _3113_tables = jule::Slice<jule::Ptr<_1a76439db_SymbolTable>>::alloc(0LL,static_cast<jule::I64>(_2927_files.len()));
	{
		auto &expr = _2927_files;
		auto it = expr.begin();
		_iter_begin_1aa136d8e:;
		if (it != expr.end()) {
			jule::Ptr<_1d06e7b66_Ast> _1aa1369e8_f = *it;
			{
				jule::Ptr<_1a76439db_SymbolTable> _3318_table;
				jule::Slice<_1d0019224_Log> _3329_errors;
				std::tie(_3318_table,_3329_errors) = _1a768bd31_build_symbols(_1aa1369e8_f,_2947_importer,nullptr);
				if ((_3329_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_3329_errors);
				}
				_3113_tables = jule::alloc_for_append(_3113_tables,1);_3113_tables.__push(_3318_table);
			}
			_iter_next_1aa136d8e:;
			++it;
			goto _iter_begin_1aa136d8e;
		}
		_iter_end_1aa136d8e:;
	}
	jule::Ptr<_1a75d1e74_Sema> _4013_sema = jule::new_ptr<_1a75d1e74_Sema>(_1a75d1e74_Sema(jule::Slice<_1d0019224_Log>(),jule::Slice<jule::Ptr<_1a76439db_SymbolTable>>(),jule::Ptr<_1a76439db_SymbolTable>(),_2968_flags));
	_1a75e9431_check(_4013_sema, _3113_tables);
	if ((_4013_sema.get()._field_errors.len() > 0LL)) {
		return std::make_tuple(nullptr,_4013_sema.get()._field_errors);
	}
	jule::Ptr<_1a75cbe4c_Package> _4813_pkg = jule::new_ptr<_1a75cbe4c_Package>(_1a75cbe4c_Package(_4013_sema.get()._field_files));
	return std::make_tuple(_4813_pkg,nullptr);
}



inline std::tuple<jule::Ptr<_1a75cbe4c_Package>,jule::Slice<_1d0019224_Log>> _1a768c64a_analyze_package(jule::Slice<jule::Ptr<_1d06e7b66_Ast>> _7228_files,jule::Trait<_1a75c6e25_Importer> _7247_importer,jule::I64 _7267_flags) {
	if ((_7228_files.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	}
	jule::Ptr<_1a75cbe4c_Package> _7714_package;
	jule::Slice<_1d0019224_Log> _7727_logs;
	std::tie(_7714_package,_7727_logs) = _1a768c260___analyze_package(_7228_files,_7247_importer,_7267_flags);
	return std::make_tuple(_7714_package,_7727_logs);
}



inline jule::Ptr<_1a6429be1_FnIns> _1a7696313_find_builtin_fn(jule::Str _2120_ident) {
	{
		auto &_match_expr{ _2120_ident };
		
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_1aa13ea45:;
			{
				static jule::Ptr<_1a6429be1_FnIns> _2420_f = jule::new_ptr<_1a6429be1_FnIns>(_1a6429be1_FnIns(jule::Ptr<_1a641744d_StructIns>(),jule::Ptr<_1a6426a45_Fn>(),jule::Slice<jule::Ptr<_1a7672da0_TypeKind>>(),jule::Slice<jule::Ptr<_1a6428d55_ParamIns>>(),jule::Ptr<_1a7672da0_TypeKind>(),jule::Ptr<_1a759e606_Scope>(),jule::Ptr<_1a642cc9e_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a7648b67_Data>(jule::Ptr<_1a764a6d5_Eval>&,jule::Ptr<_1d075cd74_FnCallExpr>&,jule::Ptr<_1a7648b67_Data>&)>(_1a76b0dbb_builtin_caller_out),jule::Bool()));
				return _2420_f;
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_1aa13eaab:;
			{
				static jule::Ptr<_1a6429be1_FnIns> _2720_f = jule::new_ptr<_1a6429be1_FnIns>(_1a6429be1_FnIns(jule::Ptr<_1a641744d_StructIns>(),jule::Ptr<_1a6426a45_Fn>(),jule::Slice<jule::Ptr<_1a7672da0_TypeKind>>(),jule::Slice<jule::Ptr<_1a6428d55_ParamIns>>(),jule::Ptr<_1a7672da0_TypeKind>(),jule::Ptr<_1a759e606_Scope>(),jule::Ptr<_1a642cc9e_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a7648b67_Data>(jule::Ptr<_1a764a6d5_Eval>&,jule::Ptr<_1d075cd74_FnCallExpr>&,jule::Ptr<_1a7648b67_Data>&)>(_1a7719342_builtin_caller_outln),jule::Bool()));
				return _2720_f;
			}
		}
		else if (_match_expr == jule::Str("new", 3)) {
			_case_begin_1aa13e7d1:;
			{
				static jule::Ptr<_1a6429be1_FnIns> _3020_f = jule::new_ptr<_1a6429be1_FnIns>(_1a6429be1_FnIns(jule::Ptr<_1a641744d_StructIns>(),jule::Ptr<_1a6426a45_Fn>(),jule::Slice<jule::Ptr<_1a7672da0_TypeKind>>(),jule::Slice<jule::Ptr<_1a6428d55_ParamIns>>(),jule::Ptr<_1a7672da0_TypeKind>(),jule::Ptr<_1a759e606_Scope>(),jule::Ptr<_1a642cc9e_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a7648b67_Data>(jule::Ptr<_1a764a6d5_Eval>&,jule::Ptr<_1d075cd74_FnCallExpr>&,jule::Ptr<_1a7648b67_Data>&)>(_1a7719474_builtin_caller_new),jule::Bool()));
				return _3020_f;
			}
		}
		else if (_match_expr == jule::Str("panic", 5)) {
			_case_begin_1aa13e847:;
			{
				static jule::Ptr<_1a6429be1_FnIns> _3320_f = jule::new_ptr<_1a6429be1_FnIns>(_1a6429be1_FnIns(jule::Ptr<_1a641744d_StructIns>(),jule::Ptr<_1a6426a45_Fn>(),jule::Slice<jule::Ptr<_1a7672da0_TypeKind>>(),jule::Slice<jule::Ptr<_1a6428d55_ParamIns>>(),jule::Ptr<_1a7672da0_TypeKind>(),jule::Ptr<_1a759e606_Scope>(),jule::Ptr<_1a642cc9e_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a7648b67_Data>(jule::Ptr<_1a764a6d5_Eval>&,jule::Ptr<_1d075cd74_FnCallExpr>&,jule::Ptr<_1a7648b67_Data>&)>(_1a77197d7_builtin_caller_panic),jule::Bool()));
				return _3320_f;
			}
		}
		else if (_match_expr == jule::Str("make", 4)) {
			_case_begin_1aa13e8ad:;
			{
				static jule::Ptr<_1a6429be1_FnIns> _3620_f = jule::new_ptr<_1a6429be1_FnIns>(_1a6429be1_FnIns(jule::Ptr<_1a641744d_StructIns>(),jule::Ptr<_1a6426a45_Fn>(),jule::Slice<jule::Ptr<_1a7672da0_TypeKind>>(),jule::Slice<jule::Ptr<_1a6428d55_ParamIns>>(),jule::Ptr<_1a7672da0_TypeKind>(),jule::Ptr<_1a759e606_Scope>(),jule::Ptr<_1a642cc9e_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a7648b67_Data>(jule::Ptr<_1a764a6d5_Eval>&,jule::Ptr<_1d075cd74_FnCallExpr>&,jule::Ptr<_1a7648b67_Data>&)>(_1a7719919_builtin_caller_make),jule::Bool()));
				return _3620_f;
			}
		}
		else if (_match_expr == jule::Str("append", 6)) {
			_case_begin_1aa13e539:;
			{
				static jule::Ptr<_1a6429be1_FnIns> _3920_f = jule::new_ptr<_1a6429be1_FnIns>(_1a6429be1_FnIns(jule::Ptr<_1a641744d_StructIns>(),jule::Ptr<_1a6426a45_Fn>(),jule::Slice<jule::Ptr<_1a7672da0_TypeKind>>(),jule::Slice<jule::Ptr<_1a6428d55_ParamIns>>(),jule::Ptr<_1a7672da0_TypeKind>(),jule::Ptr<_1a759e606_Scope>(),jule::Ptr<_1a642cc9e_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a7648b67_Data>(jule::Ptr<_1a764a6d5_Eval>&,jule::Ptr<_1d075cd74_FnCallExpr>&,jule::Ptr<_1a7648b67_Data>&)>(_1a7719a4b_builtin_caller_append),jule::Bool()));
				return _3920_f;
			}
		}
		else if (_match_expr == jule::Str("copy", 4)) {
			_case_begin_1aa13e5a0:;
			{
				static jule::Ptr<_1a6429be1_FnIns> _4220_f = jule::new_ptr<_1a6429be1_FnIns>(_1a6429be1_FnIns(jule::Ptr<_1a641744d_StructIns>(),jule::Ptr<_1a6426a45_Fn>(),jule::Slice<jule::Ptr<_1a7672da0_TypeKind>>(),jule::Slice<jule::Ptr<_1a6428d55_ParamIns>>(),jule::Ptr<_1a7672da0_TypeKind>(),jule::Ptr<_1a759e606_Scope>(),jule::Ptr<_1a642cc9e_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a7648b67_Data>(jule::Ptr<_1a764a6d5_Eval>&,jule::Ptr<_1d075cd74_FnCallExpr>&,jule::Ptr<_1a7648b67_Data>&)>(_1a7719b7d_builtin_caller_copy),jule::Bool()));
				return _4220_f;
			}
		}
		else if (_match_expr == jule::Str("clone", 5)) {
			_case_begin_1aa13e616:;
			{
				static jule::Ptr<_1a6429be1_FnIns> _4520_f = jule::new_ptr<_1a6429be1_FnIns>(_1a6429be1_FnIns(jule::Ptr<_1a641744d_StructIns>(),jule::Ptr<_1a6426a45_Fn>(),jule::Slice<jule::Ptr<_1a7672da0_TypeKind>>(),jule::Slice<jule::Ptr<_1a6428d55_ParamIns>>(),jule::Ptr<_1a7672da0_TypeKind>(),jule::Ptr<_1a759e606_Scope>(),jule::Ptr<_1a642cc9e_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a7648b67_Data>(jule::Ptr<_1a764a6d5_Eval>&,jule::Ptr<_1d075cd74_FnCallExpr>&,jule::Ptr<_1a7648b67_Data>&)>(_1a7719cb0_builtin_caller_clone),jule::Bool()));
				return _4520_f;
			}
		}
		else if (_match_expr == jule::Str("assert", 6)) {
			_case_begin_1aa13e68d:;
			{
				static jule::Ptr<_1a6429be1_FnIns> _4820_f = jule::new_ptr<_1a6429be1_FnIns>(_1a6429be1_FnIns(jule::Ptr<_1a641744d_StructIns>(),jule::Ptr<_1a6426a45_Fn>(),jule::Slice<jule::Ptr<_1a7672da0_TypeKind>>(),jule::Slice<jule::Ptr<_1a6428d55_ParamIns>>(),jule::Ptr<_1a7672da0_TypeKind>(),jule::Ptr<_1a759e606_Scope>(),jule::Ptr<_1a642cc9e_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a7648b67_Data>(jule::Ptr<_1a764a6d5_Eval>&,jule::Ptr<_1d075cd74_FnCallExpr>&,jule::Ptr<_1a7648b67_Data>&)>(_1a7719de2_builtin_caller_assert),jule::Bool()));
				return _4820_f;
			}
		}
		else {
			_case_begin_1aa13e00b:;
			{
				return nullptr;
			}
		}
		_match_end_1aa13e33b:;
	}
}



inline jule::Ptr<_1a7672168_TypeAlias> _1a76983c0_find_builtin_type_alias(jule::Str _5528_ident) {
	{
		auto &_match_expr{ _5528_ident };
		
		if (_match_expr == jule::Str("byte", 4)) {
			_case_begin_1aa1450cd:;
			{
				static jule::Ptr<_1a7672168_TypeAlias> _5820_t = jule::new_ptr<_1a7672168_TypeAlias>(_1a7672168_TypeAlias(jule::Ptr<_1d0761c13_ScopeTree>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1d0747985_Token>(),jule::Str(),jule::new_ptr<_1a7676c3e_TypeSymbol>(_1a7676c3e_TypeSymbol(jule::Ptr<_1d0759c1c_TypeDecl>(),jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("u8", 2)), 5))))),jule::Slice<jule::Any>(),jule::Slice<jule::Ptr<_1a7672168_TypeAlias>>()));
				return _5820_t;
			}
		}
		else if (_match_expr == jule::Str("rune", 4)) {
			_case_begin_1aa145199:;
			{
				static jule::Ptr<_1a7672168_TypeAlias> _6820_t = jule::new_ptr<_1a7672168_TypeAlias>(_1a7672168_TypeAlias(jule::Ptr<_1d0761c13_ScopeTree>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1d0747985_Token>(),jule::Str(),jule::new_ptr<_1a7676c3e_TypeSymbol>(_1a7676c3e_TypeSymbol(jule::Ptr<_1d0759c1c_TypeDecl>(),jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("i32", 3)), 5))))),jule::Slice<jule::Any>(),jule::Slice<jule::Ptr<_1a7672168_TypeAlias>>()));
				return _6820_t;
			}
		}
		else {
			_case_begin_1aa144a17:;
			{
				return nullptr;
			}
		}
		_match_end_1aa144d14:;
	}
}



inline jule::Ptr<_1a7465bd7_Trait> _1a7698e09_find_builtin_trait(jule::Str _8223_ident) {
	return nullptr;
}



inline jule::Any _1a7699855_find_builtin_def(jule::Str _8621_ident) {
	jule::Ptr<_1a6429be1_FnIns> _8713_f = _1a7696313_find_builtin_fn(_8621_ident);
	if ((_8713_f != nullptr)) {
		return jule::Any(_8713_f);
	}
	jule::Ptr<_1a7672168_TypeAlias> _9213_ta = _1a76983c0_find_builtin_type_alias(_8621_ident);
	if ((_9213_ta != nullptr)) {
		return jule::Any(_9213_ta);
	}
	jule::Ptr<_1a7465bd7_Trait> _9713_t = _1a7698e09_find_builtin_trait(_8621_ident);
	if ((_9713_t != nullptr)) {
		return jule::Any(_9713_t);
	}
	return jule::Any(nullptr);
}



inline jule::Any _1a76c3373_find_builtin_def_std_debug(jule::Str _10531_ident) {
	{
		auto &_match_expr{ _10531_ident };
		
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_1aa149544:;
			{
				static jule::Ptr<_1a6429be1_FnIns> _10820_f = jule::new_ptr<_1a6429be1_FnIns>(_1a6429be1_FnIns(jule::Ptr<_1a641744d_StructIns>(),jule::Ptr<_1a6426a45_Fn>(),jule::Slice<jule::Ptr<_1a7672da0_TypeKind>>(),jule::Slice<jule::Ptr<_1a6428d55_ParamIns>>(),jule::Ptr<_1a7672da0_TypeKind>(),jule::Ptr<_1a759e606_Scope>(),jule::Ptr<_1a642cc9e_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a7648b67_Data>(jule::Ptr<_1a764a6d5_Eval>&,jule::Ptr<_1d075cd74_FnCallExpr>&,jule::Ptr<_1a7648b67_Data>&)>(_1a771aed1_builtin_caller_std_debug_out),jule::Bool()));
				return jule::Any(_10820_f);
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_1aa14939b:;
			{
				static jule::Ptr<_1a6429be1_FnIns> _11120_f = jule::new_ptr<_1a6429be1_FnIns>(_1a6429be1_FnIns(jule::Ptr<_1a641744d_StructIns>(),jule::Ptr<_1a6426a45_Fn>(),jule::Slice<jule::Ptr<_1a7672da0_TypeKind>>(),jule::Slice<jule::Ptr<_1a6428d55_ParamIns>>(),jule::Ptr<_1a7672da0_TypeKind>(),jule::Ptr<_1a759e606_Scope>(),jule::Ptr<_1a642cc9e_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a7648b67_Data>(jule::Ptr<_1a764a6d5_Eval>&,jule::Ptr<_1d075cd74_FnCallExpr>&,jule::Ptr<_1a7648b67_Data>&)>(_1a771b3ee_builtin_caller_std_debug_outln),jule::Bool()));
				return jule::Any(_11120_f);
			}
		}
		else {
			_case_begin_1aa1475ec:;
			{
				return jule::Any(nullptr);
			}
		}
		_match_end_1aa148d3a:;
	}
}



inline jule::Any _1a76c44c8_find_builtin_def_std_mem(jule::Str _11829_ident) {
	{
		auto &_match_expr{ _11829_ident };
		
		if (_match_expr == jule::Str("size_of", 7)) {
			_case_begin_1aa14ad09:;
			{
				static jule::Ptr<_1a6429be1_FnIns> _12120_f = jule::new_ptr<_1a6429be1_FnIns>(_1a6429be1_FnIns(jule::Ptr<_1a641744d_StructIns>(),jule::Ptr<_1a6426a45_Fn>(),jule::Slice<jule::Ptr<_1a7672da0_TypeKind>>(),jule::Slice<jule::Ptr<_1a6428d55_ParamIns>>(),jule::Ptr<_1a7672da0_TypeKind>(),jule::Ptr<_1a759e606_Scope>(),jule::Ptr<_1a642cc9e_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a7648b67_Data>(jule::Ptr<_1a764a6d5_Eval>&,jule::Ptr<_1d075cd74_FnCallExpr>&,jule::Ptr<_1a7648b67_Data>&)>(_1a771a024_builtin_caller_std_mem_size_of),jule::Bool()));
				return jule::Any(_12120_f);
			}
		}
		else if (_match_expr == jule::Str("align_of", 8)) {
			_case_begin_1aa14ad70:;
			{
				static jule::Ptr<_1a6429be1_FnIns> _12420_f = jule::new_ptr<_1a6429be1_FnIns>(_1a6429be1_FnIns(jule::Ptr<_1a641744d_StructIns>(),jule::Ptr<_1a6426a45_Fn>(),jule::Slice<jule::Ptr<_1a7672da0_TypeKind>>(),jule::Slice<jule::Ptr<_1a6428d55_ParamIns>>(),jule::Ptr<_1a7672da0_TypeKind>(),jule::Ptr<_1a759e606_Scope>(),jule::Ptr<_1a642cc9e_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a7648b67_Data>(jule::Ptr<_1a764a6d5_Eval>&,jule::Ptr<_1d075cd74_FnCallExpr>&,jule::Ptr<_1a7648b67_Data>&)>(_1a771a156_builtin_caller_std_mem_align_of),jule::Bool()));
				return jule::Any(_12420_f);
			}
		}
		else if (_match_expr == jule::Str("free", 4)) {
			_case_begin_1aa14ab94:;
			{
				static jule::Ptr<_1a6429be1_FnIns> _12720_f = jule::new_ptr<_1a6429be1_FnIns>(_1a6429be1_FnIns(jule::Ptr<_1a641744d_StructIns>(),jule::Ptr<_1a6426a45_Fn>(),jule::Slice<jule::Ptr<_1a7672da0_TypeKind>>(),jule::Slice<jule::Ptr<_1a6428d55_ParamIns>>(),jule::Ptr<_1a7672da0_TypeKind>(),jule::Ptr<_1a759e606_Scope>(),jule::Ptr<_1a642cc9e_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a7648b67_Data>(jule::Ptr<_1a764a6d5_Eval>&,jule::Ptr<_1d075cd74_FnCallExpr>&,jule::Ptr<_1a7648b67_Data>&)>(_1a771a288_builtin_caller_std_mem_free),jule::Bool()));
				return jule::Any(_12720_f);
			}
		}
		else {
			_case_begin_1aa149236:;
			{
				return jule::Any(nullptr);
			}
		}
		_match_end_1aa14ab3e:;
	}
}



inline jule::Any _1a76b152b_find_builtin_def_std_jule_integrated(jule::Str _13441_ident) {
	{
		auto &_match_expr{ _13441_ident };
		
		if (_match_expr == jule::Str("to_str", 6)) {
			_case_begin_1aa14d25c:;
			{
				static jule::Ptr<_1a6429be1_FnIns> _13720_f = jule::new_ptr<_1a6429be1_FnIns>(_1a6429be1_FnIns(jule::Ptr<_1a641744d_StructIns>(),jule::Ptr<_1a6426a45_Fn>(),jule::Slice<jule::Ptr<_1a7672da0_TypeKind>>(),jule::Slice<jule::Ptr<_1a6428d55_ParamIns>>(),jule::Ptr<_1a7672da0_TypeKind>(),jule::Ptr<_1a759e606_Scope>(),jule::Ptr<_1a642cc9e_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a7648b67_Data>(jule::Ptr<_1a764a6d5_Eval>&,jule::Ptr<_1d075cd74_FnCallExpr>&,jule::Ptr<_1a7648b67_Data>&)>(_1a771a6b7_builtin_caller_std_jule_integrated_to_str),jule::Bool()));
				return jule::Any(_13720_f);
			}
		}
		else if (_match_expr == jule::Str("emit", 4)) {
			_case_begin_1aa14d0b4:;
			{
				static jule::Ptr<_1a6429be1_FnIns> _14020_f = jule::new_ptr<_1a6429be1_FnIns>(_1a6429be1_FnIns(jule::Ptr<_1a641744d_StructIns>(),jule::Ptr<_1a6426a45_Fn>(),jule::Slice<jule::Ptr<_1a7672da0_TypeKind>>(),jule::Slice<jule::Ptr<_1a6428d55_ParamIns>>(),jule::Ptr<_1a7672da0_TypeKind>(),jule::Ptr<_1a759e606_Scope>(),jule::Ptr<_1a642cc9e_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a7648b67_Data>(jule::Ptr<_1a764a6d5_Eval>&,jule::Ptr<_1d075cd74_FnCallExpr>&,jule::Ptr<_1a7648b67_Data>&)>(_1a771aad5_builtin_caller_std_jule_integrated_emit),jule::Bool()));
				return jule::Any(_14020_f);
			}
		}
		else {
			_case_begin_1aa14ac0a:;
			{
				return jule::Any(nullptr);
			}
		}
		_match_end_1aa14c2b1:;
	}
}



inline jule::Any _1a76e1380_find_package_builtin_def(jule::Str _14729_link_path,jule::Str _14745_ident) {
	{
		auto &_match_expr{ _14729_link_path };
		
		if (_match_expr == jule::Str("std::debug", 10)) {
			_case_begin_1aa14eb65:;
			{
				return _1a76c3373_find_builtin_def_std_debug(_14745_ident);
			}
		}
		else if (_match_expr == jule::Str("std::mem", 8)) {
			_case_begin_1aa14ebcb:;
			{
				return _1a76c44c8_find_builtin_def_std_mem(_14745_ident);
			}
		}
		else if (_match_expr == jule::Str("std::jule::integrated", 21)) {
			_case_begin_1aa14ea00:;
			{
				return _1a76b152b_find_builtin_def_std_jule_integrated(_14745_ident);
			}
		}
		else {
			_case_begin_1aa14ddd9:;
			{
				return jule::Any(nullptr);
			}
		}
		_match_end_1aa14e3b2:;
	}
}



inline jule::Ptr<_1a7648b67_Data> _1a76948a5_builtin_caller_common_plain(jule::Ptr<_1a764a6d5_Eval>& _16037_e,jule::Ptr<_1d075cd74_FnCallExpr>& _16052_fc,jule::Ptr<_1a7648b67_Data>& _16074_d) {
	jule::Ptr<_1a6429be1_FnIns> _16113_f = _1a7675dd6_fnc(_16074_d.get()._field_kind.ptr());
	_1a763a681_FnCallArgChecker _16313_fcac = _1a763a681_FnCallArgChecker(_16037_e,_16052_fc.get()._field_args,_16052_fc.get()._field_token,_16113_f,false,jule::Slice<jule::Any>());
	if ((!(_1a763ca4b_check(&_16313_fcac)))) {
		return nullptr;
	}
	jule::Ptr<_1a641b364_FnCallExprModel> _17413_model = jule::new_ptr<_1a641b364_FnCallExprModel>(_1a641b364_FnCallExprModel(_16052_fc.get()._field_token,_16113_f,jule::Bool(),_16074_d.get()._field_model,_16313_fcac._field_arg_models,jule::Ptr<_1a759e606_Scope>(),jule::Bool()));
	if ((_16113_f.get()._field_result == nullptr)) {
		_16074_d=_1a766eb27_build_void_data();
	} else {
		_16074_d=jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(_16113_f.get()._field_result,jule::Ptr<_1a7672da0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a751ddb1_Const>()));
	}
	_16074_d.get()._field_model=jule::Any(_17413_model);
	return _16074_d;
}



inline jule::Ptr<_1a7648b67_Data> _1a769ba00_builtin_caller_common(jule::Ptr<_1a764a6d5_Eval>& _19331_e,jule::Ptr<_1d075cd74_FnCallExpr>& _19346_fc,jule::Ptr<_1a7648b67_Data>& _19368_d) {
	if ((_19346_fc.get()._field_generics.len() > 0LL)) {
		_1a764abad_push_err(_19331_e.ptr(), _19346_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	return _1a76948a5_builtin_caller_common_plain(_19331_e,_19346_fc,_19368_d);
}



inline jule::Ptr<_1a7648b67_Data> _1a76cd933_builtin_caller_common_mut(jule::Ptr<_1a764a6d5_Eval>& _20135_e,jule::Ptr<_1d075cd74_FnCallExpr>& _20150_fc,jule::Ptr<_1a7648b67_Data>& _20172_d) {
	if ((!(_20172_d.get()._field_mutable))) {
		_1a764abad_push_err(_20135_e.ptr(), _20150_fc.get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	}
	return _1a769ba00_builtin_caller_common(_20135_e,_20150_fc,_20172_d);
}



inline jule::Ptr<_1a7648b67_Data> _1a76b0c89_builtin_caller_error(jule::Ptr<_1a764a6d5_Eval>& _20830_e,jule::Ptr<_1d075cd74_FnCallExpr>& _20845_fc) {
	if ((_20845_fc.get()._field_generics.len() > 0LL)) {
		_1a764abad_push_err(_20830_e.ptr(), _20845_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((_20845_fc.get()._field_args.len() < 1LL)) {
		_1a764abad_push_err(_20830_e.ptr(), _20845_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("err", 3))}));
		return nullptr;
	}
	if ((_20845_fc.get()._field_args.len() > 1LL)) {
		_1a764abad_push_err(_20830_e.ptr(), _20845_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a7648b67_Data> _21913_expr = _1a7664d92_eval_expr(_20830_e, _20845_fc.get()._field_args[0LL]);
	if ((_21913_expr == nullptr)) {
		return nullptr;
	}
	if (_1a7649052_is_nil(_21913_expr.ptr())) {
		_1a764abad_push_err(_20830_e.ptr(), _20845_fc.get()._field_args[0LL].get()._field_token,jule::Str("you cannot call error function with nil", 39),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a7648b67_Data> _22813_d = _1a766eb27_build_void_data();
	_22813_d.get()._field_model=jule::Any(jule::new_ptr<_1a6422722_BuiltinErrorCallExprModel>(_1a6422722_BuiltinErrorCallExprModel(jule::Ptr<_1a6429be1_FnIns>(),_21913_expr.get()._field_model)));
	return _22813_d;
}



inline jule::Ptr<_1a7648b67_Data> _1a76b0dbb_builtin_caller_out(jule::Ptr<_1a764a6d5_Eval>& _23628_e,jule::Ptr<_1d075cd74_FnCallExpr>& _23643_fc,jule::Ptr<_1a7648b67_Data>& ) {
	if ((_23643_fc.get()._field_generics.len() > 0LL)) {
		_1a764abad_push_err(_23628_e.ptr(), _23643_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((_23643_fc.get()._field_args.len() < 1LL)) {
		_1a764abad_push_err(_23628_e.ptr(), _23643_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("v", 1))}));
		return nullptr;
	}
	if ((_23643_fc.get()._field_args.len() > 1LL)) {
		_1a764abad_push_err(_23628_e.ptr(), _23643_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a7648b67_Data> _24813_expr = _1a7664d92_eval_expr(_23628_e, _23643_fc.get()._field_args[0LL]);
	if ((_24813_expr == nullptr)) {
		return nullptr;
	}
	if ((!(_1a7680819_is_builtin_str_convertable(_24813_expr.get()._field_kind)))) {
		_1a764abad_push_err(_23628_e.ptr(), _23643_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1a7648b67_Data> _25813_d = _1a766eb27_build_void_data();
	_25813_d.get()._field_model=jule::Any(jule::new_ptr<_1a6420511_BuiltinOutCallExprModel>(_1a6420511_BuiltinOutCallExprModel(_24813_expr.get()._field_model,jule::Bool())));
	return _25813_d;
}



inline jule::Ptr<_1a7648b67_Data> _1a7719342_builtin_caller_outln(jule::Ptr<_1a764a6d5_Eval>& _26330_e,jule::Ptr<_1d075cd74_FnCallExpr>& _26345_fc,jule::Ptr<_1a7648b67_Data>& _26367_d) {
	_26367_d=_1a76b0dbb_builtin_caller_out(_26330_e,_26345_fc,_26367_d);
	if ((_26367_d == nullptr)) {
		return nullptr;
	}
	_26367_d.get()._field_model=jule::Any(jule::new_ptr<_1a64208eb_BuiltinOutlnCallExprModel>(_1a64208eb_BuiltinOutlnCallExprModel(_26367_d.get()._field_model.operator jule::Ptr<_1a6420511_BuiltinOutCallExprModel>().get()._field_expr,jule::Bool())));
	return _26367_d;
}



inline jule::Ptr<_1a7648b67_Data> _1a7719474_builtin_caller_new(jule::Ptr<_1a764a6d5_Eval>& _27528_e,jule::Ptr<_1d075cd74_FnCallExpr>& _27543_fc,jule::Ptr<_1a7648b67_Data>& _27565_d) {
	if ((_27543_fc.get()._field_generics.len() > 0LL)) {
		_1a764abad_push_err(_27528_e.ptr(), _27543_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((_27543_fc.get()._field_args.len() < 1LL)) {
		_1a764abad_push_err(_27528_e.ptr(), _27543_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type", 4))}));
		return nullptr;
	}
	if ((_27543_fc.get()._field_args.len() > 2LL)) {
		_1a764abad_push_err(_27528_e.ptr(), _27543_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a7648b67_Data> _28713_t = _1a7664776_eval_expr_kind(_27528_e, _27543_fc.get()._field_args[0LL].get()._field_kind);
	if ((_28713_t == nullptr)) {
		return nullptr;
	}
	if ((!(_28713_t.get()._field_decl))) {
		_1a764abad_push_err(_27528_e.ptr(), _27543_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;
	}
	if ((!(_1a7680242_is_valid_for_sptr_type(_28713_t.get()._field_kind)))) {
		jule::Ptr<_1a641744d_StructIns> _29817_s = _1a767614a_strct(_28713_t.get()._field_kind.ptr());
		if (((_29817_s != nullptr) && (_29817_s.get()._field_decl != nullptr)) && _29817_s.get()._field_decl.get()._field_cpp_linked) {
			_1a764abad_push_err(_27528_e.ptr(), _27543_fc.get()._field_args[0LL].get()._field_token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
		}
		return nullptr;
	}
	_27565_d.get()._field_kind=jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(jule::new_ptr<_1a767ab11_Sptr>(_1a767ab11_Sptr(_28713_t.get()._field_kind)), 6)));
	if ((_27543_fc.get()._field_args.len() == 2LL)) {
		jule::Ptr<_1a7672da0_TypeKind> _31217_old = _27528_e.get()._field_prefix;
		_27528_e.get()._field_prefix=_28713_t.get()._field_kind;
		jule::Ptr<_1a7648b67_Data> _31517_init = _1a7664d92_eval_expr(_27528_e, _27543_fc.get()._field_args[1LL]);
		_27528_e.get()._field_prefix=_31217_old;
		if ((_31517_init != nullptr)) {
			jule::Ptr<_1d0747985_Token> _32021_token = _27543_fc.get()._field_args[1LL].get()._field_token;
			
			_1a75db91d_check_validity_for_init_expr(_27528_e.get()._field_s, (!(_27528_e.get()._field_immutable)),false,_28713_t.get()._field_kind,_31517_init,_32021_token);
			_1a75d9ae7_check_assign_type(_27528_e.get()._field_s, false,_28713_t.get()._field_kind,_31517_init,_32021_token);
			_27565_d.get()._field_model=jule::Any(jule::new_ptr<_1a6421105_BuiltinNewCallExprModel>(_1a6421105_BuiltinNewCallExprModel(_28713_t.get()._field_kind,_31517_init.get()._field_model)));
		}
	} else {
		_27565_d.get()._field_model=jule::Any(jule::new_ptr<_1a6421105_BuiltinNewCallExprModel>(_1a6421105_BuiltinNewCallExprModel(_28713_t.get()._field_kind,jule::Any())));
	}
	return _27565_d;
}



inline jule::Ptr<_1a7648b67_Data> _1a77197d7_builtin_caller_panic(jule::Ptr<_1a764a6d5_Eval>& _34030_e,jule::Ptr<_1d075cd74_FnCallExpr>& _34045_fc,jule::Ptr<_1a7648b67_Data>& ) {
	if ((_34045_fc.get()._field_generics.len() > 0LL)) {
		_1a764abad_push_err(_34030_e.ptr(), _34045_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((_34045_fc.get()._field_args.len() < 1LL)) {
		_1a764abad_push_err(_34030_e.ptr(), _34045_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("message", 7))}));
		return nullptr;
	}
	if ((_34045_fc.get()._field_args.len() > 1LL)) {
		_1a764abad_push_err(_34030_e.ptr(), _34045_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a7648b67_Data> _35213_expr = _1a7664d92_eval_expr(_34030_e, _34045_fc.get()._field_args[0LL]);
	if ((_35213_expr == nullptr)) {
		return nullptr;
	}
	if ((_1a7674e5c_prim(_35213_expr.get()._field_kind.ptr()) == nullptr) || (!(_1a767a5b1_is_str(_1a7674e5c_prim(_35213_expr.get()._field_kind.ptr()).ptr())))) {
		_1a764abad_push_err(_34030_e.ptr(), _34045_fc.get()._field_token,jule::Str("panic function only accepts strings", 35),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a7648b67_Data> _36113_d = _1a766eb27_build_void_data();
	_36113_d.get()._field_model=jule::Any(jule::new_ptr<_1a64214e0_BuiltinPanicCallExprModel>(_1a64214e0_BuiltinPanicCallExprModel(_34045_fc.get()._field_token,_35213_expr.get()._field_model)));
	return _36113_d;
}



inline jule::Ptr<_1a7648b67_Data> _1a7719919_builtin_caller_make(jule::Ptr<_1a764a6d5_Eval>& _36929_e,jule::Ptr<_1d075cd74_FnCallExpr>& _36944_fc,jule::Ptr<_1a7648b67_Data>& _36966_d) {
	if ((_36944_fc.get()._field_generics.len() > 0LL)) {
		_1a764abad_push_err(_36929_e.ptr(), _36944_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((_36944_fc.get()._field_args.len() < 2LL)) {
		if ((_36944_fc.get()._field_args.len() == 1LL)) {
			_1a764abad_push_err(_36929_e.ptr(), _36944_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("size", 4))}));
			return nullptr;
		}
		_1a764abad_push_err(_36929_e.ptr(), _36944_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type, size", 10))}));
		return nullptr;
	}
	if ((_36944_fc.get()._field_args.len() > 3LL)) {
		_1a764abad_push_err(_36929_e.ptr(), _36944_fc.get()._field_args[3LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a7648b67_Data> _38513_t = _1a7664776_eval_expr_kind(_36929_e, _36944_fc.get()._field_args[0LL].get()._field_kind);
	if ((_38513_t == nullptr)) {
		return nullptr;
	}
	if ((!(_38513_t.get()._field_decl)) || (_1a7675b72_slc(_38513_t.get()._field_kind.ptr()) == nullptr)) {
		_1a764abad_push_err(_36929_e.ptr(), _36944_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;
	}
	_36966_d.get()._field_kind=_38513_t.get()._field_kind;
	jule::Ptr<_1a7648b67_Data> _39713_len = _1a7664d92_eval_expr(_1a75d92de_evalp(_36929_e.get()._field_s, _36929_e.get()._field_lookup,_38513_t.get()._field_kind), _36944_fc.get()._field_args[1LL]);
	if ((_39713_len == nullptr)) {
		return _36966_d;
	}
	_1a765437b_check_integer_indexing_by_data(_36929_e.ptr(), _39713_len,_36944_fc.get()._field_args[1LL].get()._field_token);
	if ((_36944_fc.get()._field_args.len() == 3LL)) {
		jule::Ptr<_1a7648b67_Data> _40517_cap = _1a7664d92_eval_expr(_1a75d92de_evalp(_36929_e.get()._field_s, _36929_e.get()._field_lookup,_38513_t.get()._field_kind), _36944_fc.get()._field_args[2LL]);
		if ((_40517_cap == nullptr)) {
			return _36966_d;
		}
		_1a765437b_check_integer_indexing_by_data(_36929_e.ptr(), _40517_cap,_36944_fc.get()._field_args[2LL].get()._field_token);
		_36966_d.get()._field_model=jule::Any(jule::new_ptr<_1a6421e4c_BuiltinMakeCallExprModel>(_1a6421e4c_BuiltinMakeCallExprModel(_38513_t.get()._field_kind,_39713_len.get()._field_model,_40517_cap.get()._field_model)));
	} else {
		_36966_d.get()._field_model=jule::Any(jule::new_ptr<_1a6421e4c_BuiltinMakeCallExprModel>(_1a6421e4c_BuiltinMakeCallExprModel(_38513_t.get()._field_kind,_39713_len.get()._field_model,jule::Any())));
	}
	return _36966_d;
}



inline jule::Ptr<_1a7648b67_Data> _1a7719a4b_builtin_caller_append(jule::Ptr<_1a764a6d5_Eval>& _42631_e,jule::Ptr<_1d075cd74_FnCallExpr>& _42646_fc,jule::Ptr<_1a7648b67_Data>& _42668_d) {
	if ((_42646_fc.get()._field_generics.len() > 0LL)) {
		_1a764abad_push_err(_42631_e.ptr(), _42646_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((_42646_fc.get()._field_args.len() < 2LL)) {
		if ((_42646_fc.get()._field_args.len() == 1LL)) {
			_1a764abad_push_err(_42631_e.ptr(), _42646_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src", 3))}));
			return nullptr;
		}
		_1a764abad_push_err(_42631_e.ptr(), _42646_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src, values", 11))}));
		return nullptr;
	}
	jule::Ptr<_1a7648b67_Data> _43913_t = _1a7664d92_eval_expr(_42631_e, _42646_fc.get()._field_args[0LL]);
	if ((_43913_t == nullptr)) {
		return nullptr;
	}
	if ((_1a7675b72_slc(_43913_t.get()._field_kind.ptr()) == nullptr)) {
		_1a764abad_push_err(_42631_e.ptr(), _42646_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1a6429be1_FnIns> _44913_f = jule::new_ptr<_1a6429be1_FnIns>(_1a6429be1_FnIns(jule::Ptr<_1a641744d_StructIns>(),jule::Ptr<_1a6426a45_Fn>(),jule::Slice<jule::Ptr<_1a7672da0_TypeKind>>(),jule::Slice<jule::Ptr<_1a6428d55_ParamIns>>({jule::new_ptr<_1a6428d55_ParamIns>(_1a6428d55_ParamIns(jule::new_ptr<_1a6425208_Param>(_1a6425208_Param(jule::Ptr<_1d0747985_Token>(),true,jule::Bool(),jule::Bool(),jule::Ptr<_1a7676c3e_TypeSymbol>(),jule::Str())),_43913_t.get()._field_kind)),jule::new_ptr<_1a6428d55_ParamIns>(_1a6428d55_ParamIns(jule::new_ptr<_1a6425208_Param>(_1a6425208_Param(jule::Ptr<_1d0747985_Token>(),true,true,jule::Bool(),jule::Ptr<_1a7676c3e_TypeSymbol>(),jule::Str())),_1a7675b72_slc(_43913_t.get()._field_kind.ptr()).get()._field_elem))}),_43913_t.get()._field_kind,jule::Ptr<_1a759e606_Scope>(),jule::Ptr<_1a642cc9e_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a7648b67_Data>(jule::Ptr<_1a764a6d5_Eval>&,jule::Ptr<_1d075cd74_FnCallExpr>&,jule::Ptr<_1a7648b67_Data>&)>(_1a76948a5_builtin_caller_common_plain),jule::Bool()));
	_42668_d.get()._field_kind=jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_44913_f, 1)));
	_42668_d.get()._field_model=jule::Any(jule::new_ptr<_1a641e7a7_CommonIdentExprModel>(_1a641e7a7_CommonIdentExprModel(jule::Str("append", 6))));
	_42668_d=_1a76948a5_builtin_caller_common_plain(_42631_e,_42646_fc,_42668_d);
	if ((_42668_d != nullptr)) {
		jule::Ptr<_1a641b364_FnCallExprModel> _47717_model = _42668_d.get()._field_model.operator jule::Ptr<_1a641b364_FnCallExprModel>();
		_42668_d.get()._field_model=jule::Any(jule::new_ptr<_1a6422337_BuiltinAppendCallExprModel>(_1a6422337_BuiltinAppendCallExprModel(_47717_model.get()._field_args[0LL],_47717_model.get()._field_args[1LL])));
	}
	return _42668_d;
}



inline jule::Ptr<_1a7648b67_Data> _1a7719b7d_builtin_caller_copy(jule::Ptr<_1a764a6d5_Eval>& _48629_e,jule::Ptr<_1d075cd74_FnCallExpr>& _48644_fc,jule::Ptr<_1a7648b67_Data>& _48666_d) {
	if ((_48644_fc.get()._field_generics.len() > 0LL)) {
		_1a764abad_push_err(_48629_e.ptr(), _48644_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((_48644_fc.get()._field_args.len() < 2LL)) {
		if ((_48644_fc.get()._field_args.len() == 1LL)) {
			_1a764abad_push_err(_48629_e.ptr(), _48644_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src", 3))}));
			return nullptr;
		}
		_1a764abad_push_err(_48629_e.ptr(), _48644_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src, values", 11))}));
		return nullptr;
	}
	if ((_48644_fc.get()._field_args.len() > 2LL)) {
		_1a764abad_push_err(_48629_e.ptr(), _48644_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a7648b67_Data> _50213_dest = _1a7664d92_eval_expr(_48629_e, _48644_fc.get()._field_args[0LL]);
	if ((_50213_dest == nullptr)) {
		return nullptr;
	}
	if ((_1a7675b72_slc(_50213_dest.get()._field_kind.ptr()) == nullptr)) {
		_1a764abad_push_err(_48629_e.ptr(), _48644_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	if ((!(_50213_dest.get()._field_mutable))) {
		_1a764abad_push_err(_48629_e.ptr(), _48644_fc.get()._field_args[0LL].get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a6425208_Param> _51413_empty_param = jule::new_ptr<_1a6425208_Param>();
	jule::Ptr<_1a6429be1_FnIns> _51513_f = jule::new_ptr<_1a6429be1_FnIns>(_1a6429be1_FnIns(jule::Ptr<_1a641744d_StructIns>(),jule::Ptr<_1a6426a45_Fn>(),jule::Slice<jule::Ptr<_1a7672da0_TypeKind>>(),jule::Slice<jule::Ptr<_1a6428d55_ParamIns>>({jule::new_ptr<_1a6428d55_ParamIns>(_1a6428d55_ParamIns(_51413_empty_param,_50213_dest.get()._field_kind)),jule::new_ptr<_1a6428d55_ParamIns>(_1a6428d55_ParamIns(_51413_empty_param,_50213_dest.get()._field_kind))}),jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("int", 3)), 5))),jule::Ptr<_1a759e606_Scope>(),jule::Ptr<_1a642cc9e_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a7648b67_Data>(jule::Ptr<_1a764a6d5_Eval>&,jule::Ptr<_1d075cd74_FnCallExpr>&,jule::Ptr<_1a7648b67_Data>&)>(_1a76948a5_builtin_caller_common_plain),jule::Bool()));
	_48666_d.get()._field_kind=jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_51513_f, 1)));
	_48666_d.get()._field_model=jule::Any(jule::new_ptr<_1a641e7a7_CommonIdentExprModel>(_1a641e7a7_CommonIdentExprModel(jule::Str("copy", 4))));
	_48666_d=_1a76948a5_builtin_caller_common_plain(_48629_e,_48644_fc,_48666_d);
	if ((_48666_d != nullptr)) {
		jule::Ptr<_1a7648b67_Data> _54017_src = _48666_d.get()._field_model.operator jule::Ptr<_1a641b364_FnCallExprModel>().get()._field_args[1LL].operator jule::Ptr<_1a7648b67_Data>();
		jule::Ptr<_1a767b56d_Slc> _54117_slc = _1a7675b72_slc(_54017_src.get()._field_kind.ptr());
		if ((!(_54017_src.get()._field_mutable)) && _1a7674247_mutable(_54117_slc.get()._field_elem.ptr())) {
			_1a764abad_push_err(_48629_e.ptr(), _48644_fc.get()._field_args[1LL].get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
		}
	}
	return _48666_d;
}



inline jule::Ptr<_1a7648b67_Data> _1a7719cb0_builtin_caller_clone(jule::Ptr<_1a764a6d5_Eval>& _54930_e,jule::Ptr<_1d075cd74_FnCallExpr>& _54945_fc,jule::Ptr<_1a7648b67_Data>& ) {
	if ((_54945_fc.get()._field_generics.len() > 0LL)) {
		_1a764abad_push_err(_54930_e.ptr(), _54945_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((_54945_fc.get()._field_args.len() < 1LL)) {
		_1a764abad_push_err(_54930_e.ptr(), _54945_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	}
	if ((_54945_fc.get()._field_args.len() > 1LL)) {
		_1a764abad_push_err(_54930_e.ptr(), _54945_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a7648b67_Data> _56213_d = _1a7664776_eval_expr_kind(_54930_e, _54945_fc.get()._field_args[0LL].get()._field_kind);
	if ((_56213_d == nullptr)) {
		return nullptr;
	}
	if ((!(_1a7674984_supports_cloning(_56213_d.get()._field_kind.ptr())))) {
		{
			
			if ((_1a7675b72_slc(_56213_d.get()._field_kind.ptr()) != nullptr) || (_1a7676623_map(_56213_d.get()._field_kind.ptr()) != nullptr) || (_1a767590d_arr(_56213_d.get()._field_kind.ptr()) != nullptr) || (_1a76751c1_sptr(_56213_d.get()._field_kind.ptr()) != nullptr)) {
				_case_begin_1aa19cdd3:;
				{
					{
						_1a764abad_push_err(_54930_e.ptr(), _54945_fc.get()._field_args[0LL].get()._field_token,jule::Str("type @ has internally types which is not supports cloning", 57),jule::Slice<jule::Any>({jule::Any(_1a7673257_to_str(_56213_d.get()._field_kind.ptr()))}));
					}
				}
			}
			else if ((_1a767614a_strct(_56213_d.get()._field_kind.ptr()) != nullptr)) {
				_case_begin_1aa19c773:;
				{
					{
						_1a764abad_push_err(_54930_e.ptr(), _54945_fc.get()._field_args[0LL].get()._field_token,jule::Str("type @ is not derives @", 23),jule::Slice<jule::Any>({jule::Any(_1a7673257_to_str(_56213_d.get()._field_kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					}
				}
			}
			else {
				_case_begin_1aa19c70c:;
				{
					{
						_1a764abad_push_err(_54930_e.ptr(), _54945_fc.get()._field_args[0LL].get()._field_token,jule::Str("type @ is not support cloning", 29),jule::Slice<jule::Any>({jule::Any(_1a7673257_to_str(_56213_d.get()._field_kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					}
				}
			}
			_match_end_1aa19c08b:;
		}
	}
	_56213_d.get()._field_mutable=true;
	_56213_d.get()._field_model=jule::Any(jule::new_ptr<_1a6420c1a_BuiltinCloneCallExprModel>(_1a6420c1a_BuiltinCloneCallExprModel(_56213_d.get()._field_model)));
	return _56213_d;
}



inline jule::Ptr<_1a7648b67_Data> _1a7719de2_builtin_caller_assert(jule::Ptr<_1a764a6d5_Eval>& _59531_e,jule::Ptr<_1d075cd74_FnCallExpr>& _59546_fc,jule::Ptr<_1a7648b67_Data>& ) {
	if ((_59546_fc.get()._field_generics.len() > 0LL)) {
		_1a764abad_push_err(_59531_e.ptr(), _59546_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((_59546_fc.get()._field_args.len() < 1LL)) {
		_1a764abad_push_err(_59531_e.ptr(), _59546_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	}
	if ((_59546_fc.get()._field_args.len() > 2LL)) {
		_1a764abad_push_err(_59531_e.ptr(), _59546_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a7648b67_Data> _60713_expr = _1a7664d92_eval_expr(_59531_e, _59546_fc.get()._field_args[0LL]);
	if ((_60713_expr == nullptr)) {
		return nullptr;
	}
	if ((_1a7674e5c_prim(_60713_expr.get()._field_kind.ptr()) == nullptr) || (!(_1a767a34c_is_bool(_1a7674e5c_prim(_60713_expr.get()._field_kind.ptr()).ptr())))) {
		_1a764abad_push_err(_59531_e.ptr(), _59546_fc.get()._field_token,jule::Str("assertion requires boolean expression", 37),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a6421996_BuiltinAssertCallExprModel> _61613_model = jule::new_ptr<_1a6421996_BuiltinAssertCallExprModel>(_1a6421996_BuiltinAssertCallExprModel(_59546_fc.get()._field_token,_60713_expr.get()._field_model,jule::Str("assertion failed", 16)));
	if ((_59546_fc.get()._field_args.len() == 2LL)) {
		jule::Ptr<_1a7648b67_Data> _62417_log = _1a7664d92_eval_expr(_59531_e, _59546_fc.get()._field_args[1LL]);
		if ((_62417_log == nullptr)) {
			return nullptr;
		}
		if (((!(_1a764952a_is_const(_62417_log.ptr()))) || (_1a7674e5c_prim(_62417_log.get()._field_kind.ptr()) == nullptr)) || (!(_1a767a5b1_is_str(_1a7674e5c_prim(_62417_log.get()._field_kind.ptr()).ptr())))) {
			_1a764abad_push_err(_59531_e.ptr(), _59546_fc.get()._field_args[1LL].get()._field_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(jule::Str("const str", 9)),jule::Any(_1a7673257_to_str(_62417_log.get()._field_kind.ptr()))}));
			return nullptr;
		}
		_61613_model.get()._field_log=_1a7520863_read_str(_62417_log.get()._field_constant.ptr());
	}
	jule::Ptr<_1a7648b67_Data> _63713_d = _1a766eb27_build_void_data();
	_63713_d.get()._field_model=jule::Any(_61613_model);
	return _63713_d;
}



inline jule::Ptr<_1a7648b67_Data> _1a771a024_builtin_caller_std_mem_size_of(jule::Ptr<_1a764a6d5_Eval>& _64240_e,jule::Ptr<_1d075cd74_FnCallExpr>& _64255_fc,jule::Ptr<_1a7648b67_Data>& ) {
	if ((_64255_fc.get()._field_generics.len() > 0LL)) {
		_1a764abad_push_err(_64240_e.ptr(), _64255_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a7648b67_Data> _64613_result = jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("uint", 4)), 5))),jule::Ptr<_1a7672da0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a751ddb1_Const>()));
	if ((_64255_fc.get()._field_args.len() < 1LL)) {
		_1a764abad_push_err(_64240_e.ptr(), _64255_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type|expr", 9))}));
		return _64613_result;
	}
	if ((_64255_fc.get()._field_args.len() > 1LL)) {
		_1a764abad_push_err(_64240_e.ptr(), _64255_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a7648b67_Data> _65813_d = _1a7664776_eval_expr_kind(_64240_e, _64255_fc.get()._field_args[0LL].get()._field_kind);
	if ((_65813_d == nullptr)) {
		return _64613_result;
	}
	_64613_result.get()._field_model=jule::Any(jule::new_ptr<_1a64229ec_SizeofExprModel>(_1a64229ec_SizeofExprModel(_65813_d.get()._field_model)));
	return _64613_result;
}



inline jule::Ptr<_1a7648b67_Data> _1a771a156_builtin_caller_std_mem_align_of(jule::Ptr<_1a764a6d5_Eval>& _66741_e,jule::Ptr<_1d075cd74_FnCallExpr>& _66756_fc,jule::Ptr<_1a7648b67_Data>& ) {
	if ((_66756_fc.get()._field_generics.len() > 0LL)) {
		_1a764abad_push_err(_66741_e.ptr(), _66756_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a7648b67_Data> _67113_result = jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("uint", 4)), 5))),jule::Ptr<_1a7672da0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a751ddb1_Const>()));
	if ((_66756_fc.get()._field_args.len() < 1LL)) {
		_1a764abad_push_err(_66741_e.ptr(), _66756_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type|expr", 9))}));
		return _67113_result;
	}
	if ((_66756_fc.get()._field_args.len() > 1LL)) {
		_1a764abad_push_err(_66741_e.ptr(), _66756_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a7648b67_Data> _68313_d = _1a7664776_eval_expr_kind(_66741_e, _66756_fc.get()._field_args[0LL].get()._field_kind);
	if ((_68313_d == nullptr)) {
		return _67113_result;
	}
	_67113_result.get()._field_model=jule::Any(jule::new_ptr<_1a642316d_AlignofExprModel>(_1a642316d_AlignofExprModel(_68313_d.get()._field_model)));
	return _67113_result;
}



inline jule::Ptr<_1a7648b67_Data> _1a771a288_builtin_caller_std_mem_free(jule::Ptr<_1a764a6d5_Eval>& _69237_e,jule::Ptr<_1d075cd74_FnCallExpr>& _69252_fc,jule::Ptr<_1a7648b67_Data>& ) {
	if ((_69252_fc.get()._field_generics.len() > 0LL)) {
		_1a764abad_push_err(_69237_e.ptr(), _69252_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((_69252_fc.get()._field_args.len() < 1LL)) {
		_1a764abad_push_err(_69237_e.ptr(), _69252_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("h", 1))}));
		return nullptr;
	}
	if ((_69252_fc.get()._field_args.len() > 1LL)) {
		_1a764abad_push_err(_69237_e.ptr(), _69252_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a7648b67_Data> _70513_d = _1a7664776_eval_expr_kind(_69237_e, _69252_fc.get()._field_args[0LL].get()._field_kind);
	if ((_70513_d == nullptr)) {
		return nullptr;
	}
	if ((!(_1a7674720_performs_rc(_70513_d.get()._field_kind.ptr())))) {
		_1a764abad_push_err(_69237_e.ptr(), _69252_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a7648b67_Data> _71413_result = _1a766eb27_build_void_data();
	_71413_result.get()._field_model=jule::Any(jule::new_ptr<_1a6423cc8_FreeExprModel>(_1a6423cc8_FreeExprModel(_70513_d.get()._field_model)));
	return _71413_result;
}



inline jule::Ptr<_1a7648b67_Data> _1a771a6b7_builtin_caller_std_jule_integrated_to_str(jule::Ptr<_1a764a6d5_Eval>& _71951_e,jule::Ptr<_1d075cd74_FnCallExpr>& _71966_fc,jule::Ptr<_1a7648b67_Data>& ) {
	if ((_71966_fc.get()._field_generics.len() > 0LL)) {
		_1a764abad_push_err(_71951_e.ptr(), _71966_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((_71966_fc.get()._field_args.len() < 1LL)) {
		_1a764abad_push_err(_71951_e.ptr(), _71966_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	}
	if ((_71966_fc.get()._field_args.len() > 1LL)) {
		_1a764abad_push_err(_71951_e.ptr(), _71966_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a7648b67_Data> _73213_d = _1a7664776_eval_expr_kind(_71951_e, _71966_fc.get()._field_args[0LL].get()._field_kind);
	if ((_73213_d == nullptr)) {
		return nullptr;
	}
	if ((!(_1a7680819_is_builtin_str_convertable(_73213_d.get()._field_kind)))) {
		_1a764abad_push_err(_71951_e.ptr(), _71966_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_ptr<_1a7648b67_Data>(_1a7648b67_Data(jule::new_ptr<_1a7672da0_TypeKind>(_1a7672da0_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a7672971_Kind>(_1a7680d7a_build_prim_type(jule::Str("str", 3)), 5))),jule::Ptr<_1a7672da0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_1a6423646_IntegratedToStrExprModel>(_1a6423646_IntegratedToStrExprModel(_73213_d.get()._field_model)))),jule::Bool(),jule::Ptr<_1a751ddb1_Const>()));
}



inline jule::Ptr<_1a7648b67_Data> _1a771aad5_builtin_caller_std_jule_integrated_emit(jule::Ptr<_1a764a6d5_Eval>& _75049_e,jule::Ptr<_1d075cd74_FnCallExpr>& _75064_fc,jule::Ptr<_1a7648b67_Data>& ) {
	if ((!(_1a764b5e8_is_unsafe(_75049_e.ptr())))) {
		_1a764abad_push_err(_75049_e.ptr(), _75064_fc.get()._field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	}
	if ((_75064_fc.get()._field_args.len() < 1LL)) {
		_1a764abad_push_err(_75049_e.ptr(), _75064_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("code", 4))}));
		return nullptr;
	}
	jule::Ptr<_1a7648b67_Data> _76013_d = _1a7664d92_eval_expr(_75049_e, _75064_fc.get()._field_args[0LL]);
	if ((_76013_d == nullptr)) {
		return nullptr;
	}
	if ((_1a7674e5c_prim(_76013_d.get()._field_kind.ptr()) == nullptr) || (!(_1a767a5b1_is_str(_1a7674e5c_prim(_76013_d.get()._field_kind.ptr()).ptr())))) {
		_1a764abad_push_err(_75049_e.ptr(), _75064_fc.get()._field_args[0LL].get()._field_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_1a7673257_to_str(_76013_d.get()._field_kind.ptr()))}));
		return nullptr;
	}
	if ((!(_1a764952a_is_const(_76013_d.ptr()))) || (!(_1a7522c0b_is_str(_76013_d.get()._field_constant.ptr())))) {
		_1a764abad_push_err(_75049_e.ptr(), _75064_fc.get()._field_args[0LL].get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1a7648b67_Data> _77513_r = _1a766eb27_build_void_data();
	if ((_75064_fc.get()._field_generics.len() != 0LL)) {
		if ((!(_1a75d5c36_check_generic_quantity(_75049_e.get()._field_s.ptr(), 1LL,static_cast<jule::I64>(_75064_fc.get()._field_generics.len()),_75064_fc.get()._field_token)))) {
			return nullptr;
		}
		jule::Ptr<_1a7676c3e_TypeSymbol> _78117_k = _1a642e465_build_type(_75064_fc.get()._field_generics[0LL]);
		if ((!(_1a75d7ed0_check_type(_75049_e.get()._field_s, _78117_k,_75049_e.get()._field_lookup)))) {
			return nullptr;
		}
		_77513_r.get()._field_kind=_78117_k.get()._field_kind;
	}
	jule::Ptr<_1a64239dc_BackendEmitExprModel> _78813_model = jule::new_ptr<_1a64239dc_BackendEmitExprModel>(_1a64239dc_BackendEmitExprModel(_1a7520863_read_str(_76013_d.get()._field_constant.ptr()),jule::Slice<jule::Any>()));
	if ((_75064_fc.get()._field_args.len() > 1LL)) {
		_78813_model.get()._field_exprs=jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::I64>((_75064_fc.get()._field_args.len() - 1LL)));
		{
			auto expr = _75064_fc.get()._field_args.slice(1LL);
			auto it = expr.begin();
			_iter_begin_1aa1cd52e:;
			if (it != expr.end()) {
				jule::Ptr<_1d075b14c_Expr> _1aa1cdcc1_arg = *it;
				{
					jule::Ptr<_1a7648b67_Data> _79521_argd = _1a7664776_eval_expr_kind(_75049_e, _1aa1cdcc1_arg.get()._field_kind);
					if ((_79521_argd == nullptr)) {
						return nullptr;
					}
					_78813_model.get()._field_exprs = jule::alloc_for_append(_78813_model.get()._field_exprs,1);_78813_model.get()._field_exprs.__push(_79521_argd.get()._field_model);
				}
				_iter_next_1aa1cd52e:;
				++it;
				goto _iter_begin_1aa1cd52e;
			}
			_iter_end_1aa1cd52e:;
		}
	}
	_77513_r.get()._field_model=jule::Any(_78813_model);
	return _77513_r;
}



inline jule::Ptr<_1a7648b67_Data> _1a771aed1_builtin_caller_std_debug_out(jule::Ptr<_1a764a6d5_Eval>& _80738_e,jule::Ptr<_1d075cd74_FnCallExpr>& _80753_fc,jule::Ptr<_1a7648b67_Data>& _80775_d) {
	_80775_d=_1a76b0dbb_builtin_caller_out(_80738_e,_80753_fc,_80775_d);
	if ((_80775_d == nullptr)) {
		return nullptr;
	}
	_80775_d.get()._field_model.operator jule::Ptr<_1a6420511_BuiltinOutCallExprModel>().get()._field_debug=true;
	return _80775_d;
}



inline jule::Ptr<_1a7648b67_Data> _1a771b3ee_builtin_caller_std_debug_outln(jule::Ptr<_1a764a6d5_Eval>& _81740_e,jule::Ptr<_1d075cd74_FnCallExpr>& _81755_fc,jule::Ptr<_1a7648b67_Data>& _81777_d) {
	_81777_d=_1a7719342_builtin_caller_outln(_81740_e,_81755_fc,_81777_d);
	if ((_81777_d == nullptr)) {
		return nullptr;
	}
	_81777_d.get()._field_model.operator jule::Ptr<_1a64208eb_BuiltinOutlnCallExprModel>().get()._field_debug=true;
	return _81777_d;
}



inline std::tuple<jule::Bool,jule::Bool> _1d0b4e8d6_check_os(jule::Str _913_arg) {
	jule::Bool _925_ok = jule::Bool();
	jule::Bool _935_exist = jule::Bool();
	_925_ok=false;
	_935_exist=true;
	{
		auto &_match_expr{ _913_arg };
		
		if (_match_expr == jule::Str("windows", 7)) {
			_case_begin_1aa219e0b:;
			{
				_925_ok=_1d001c722_is_windows(_1d003c28b_OS);
			}
		}
		else if (_match_expr == jule::Str("darwin", 6)) {
			_case_begin_1aa219a54:;
			{
				_925_ok=_1d001ca0d_is_darwin(_1d003c28b_OS);
			}
		}
		else if (_match_expr == jule::Str("linux", 5)) {
			_case_begin_1aa219845:;
			{
				_925_ok=_1d001cca5_is_linux(_1d003c28b_OS);
			}
		}
		else if (_match_expr == jule::Str("unix", 4)) {
			_case_begin_1aa2198ab:;
			{
				_925_ok=_1d001d877_is_unix(_1d003c28b_OS);
			}
		}
		else {
			_case_begin_1aa21913b:;
			{
				_925_ok=true;
				_935_exist=false;
			}
		}
		_match_end_1aa21967a:;
	}
	return std::make_tuple(_925_ok,_935_exist);
}



inline std::tuple<jule::Bool,jule::Bool> _1d0b4ea18_check_arch(jule::Str _3015_arg) {
	jule::Bool _3027_ok = jule::Bool();
	jule::Bool _3037_exist = jule::Bool();
	_3027_ok=false;
	_3037_exist=true;
	{
		auto &_match_expr{ _3015_arg };
		
		if (_match_expr == jule::Str("i386", 4)) {
			_case_begin_1aa21c78d:;
			{
				_3027_ok=_1d001d091_is_i386(_1d003d127_ARCH);
			}
		}
		else if (_match_expr == jule::Str("amd64", 5)) {
			_case_begin_1aa21c3d6:;
			{
				_3027_ok=_1d001d338_is_amd64(_1d003d127_ARCH);
			}
		}
		else if (_match_expr == jule::Str("arm64", 5)) {
			_case_begin_1aa21c1c7:;
			{
				_3027_ok=_1d001d5d0_is_arm64(_1d003d127_ARCH);
			}
		}
		else if (_match_expr == jule::Str("x64", 3)) {
			_case_begin_1aa21c23d:;
			{
				_3027_ok=_1d001de4e_is_64bit(_1d003d127_ARCH);
			}
		}
		else if (_match_expr == jule::Str("x32", 3)) {
			_case_begin_1aa21c2a4:;
			{
				_3027_ok=_1d001dba7_is_32bit(_1d003d127_ARCH);
			}
		}
		else {
			_case_begin_1aa21b9bd:;
			{
				_3027_ok=true;
				_3037_exist=false;
			}
		}
		_match_end_1aa21c00c:;
	}
	return std::make_tuple(_3027_ok,_3037_exist);
}



inline jule::Bool _1d0b68ee9_is_pass_file_annotation(jule::Str _5432_p) {
	_5432_p=_1d09a6551_base(_5432_p);
	jule::I64 _569_n = _5432_p.len();
	(_5432_p).mut_slice(0LL,_569_n - static_cast<jule::I64>(static_cast<jule::I64>(_1d09a6012_ext(_5432_p).len())));
	jule::Str _6213_a1 = jule::Str();
	jule::Str _6513_a2 = jule::Str();
	jule::I64 _6813_i = _1d09a31da_find_last_byte(_5432_p,'_');
	if ((_6813_i == -1LL)) {
		jule::Bool _7118_ok;
		jule::Bool _7126_exist;
		std::tie(_7118_ok,_7126_exist) = _1d0b4e8d6_check_os(_5432_p);
		if (_7126_exist) {
			return _7118_ok;
		}
		std::tie(_7118_ok,_7126_exist) = _1d0b4ea18_check_arch(_5432_p);
		return (!(_7126_exist)) || _7118_ok;
	}
	if ((_6813_i + 1LL) >= _569_n) {
		return true;
	}
	_6213_a1=_5432_p.slice((_6813_i + 1LL));
	(_5432_p).mut_slice(0LL,_6813_i);
	_6813_i=static_cast<jule::I64>(_1d09a31da_find_last_byte(_5432_p,'_'));
	if ((_6813_i != -1LL)) {
		_6513_a2=_5432_p.slice((_6813_i + 1LL));
	}
	if (_6513_a2.empty()) {
		jule::Bool _9218_ok;
		jule::Bool _9226_exist;
		std::tie(_9218_ok,_9226_exist) = _1d0b4e8d6_check_os(_6213_a1);
		if (_9226_exist) {
			return _9218_ok;
		}
		std::tie(_9218_ok,_9226_exist) = _1d0b4ea18_check_arch(_6213_a1);
		return (!(_9226_exist)) || _9218_ok;
	}
	jule::Bool _10014_ok;
	jule::Bool _10022_exist;
	std::tie(_10014_ok,_10022_exist) = _1d0b4ea18_check_arch(_6213_a1);
	if (_10022_exist) {
		if ((!(_10014_ok))) {
			return false;
		}
		std::tie(_10014_ok,_10022_exist) = _1d0b4e8d6_check_os(_6513_a2);
		return (!(_10022_exist)) || _10014_ok;
	}
	std::tie(_10014_ok,_10022_exist) = _1d0b4e8d6_check_os(_6213_a1);
	return (!(_10022_exist)) || _10014_ok;
}



inline void _1d0b6a182_set_os_vars(jule::Slice<jule::Str>& _3621_vars) {
	_3621_vars = jule::alloc_for_append(_3621_vars,1);_3621_vars.__push(_1d003c28b_OS);
	if (_1d001d877_is_unix(_1d003c28b_OS)) {
		_3621_vars = jule::alloc_for_append(_3621_vars,1);_3621_vars.__push(jule::Str("unix", 4));
	}
}



inline void _1d0b6a3d5_set_arch_vars(jule::Slice<jule::Str>& _4423_vars) {
	_4423_vars = jule::alloc_for_append(_4423_vars,1);_4423_vars.__push(_1d003d127_ARCH);
	if (_1d001de4e_is_64bit(_1d003d127_ARCH)) {
		_4423_vars = jule::alloc_for_append(_4423_vars,1);_4423_vars.__push(jule::Str("x64", 3));
	}
	if (_1d001dba7_is_32bit(_1d003d127_ARCH)) {
		_4423_vars = jule::alloc_for_append(_4423_vars,1);_4423_vars.__push(jule::Str("x32", 3));
	}
}



inline void _1d0b6a68d_init_vars(jule::Slice<jule::Str>& _5519_vars,_1d0b69d74_CompileInfo& _5533_info) {
	_1d0b6a182_set_os_vars(_5519_vars);
	_1d0b6a3d5_set_arch_vars(_5519_vars);
	if (_5533_info._field_prod) {
		_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("production", 10));
	}
	if (_5533_info._field_test) {
		_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("test", 4));
	}
	{
		auto &_match_expr{ _5533_info._field_compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1aa22914b:;
			{
				_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("clang", 5));
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1aa229dc7:;
			{
				_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("gcc", 3));
			}
		}
		_match_end_1aa2290e6:;
	}
	{
		auto &_match_expr{ _5533_info._field_cpp_std };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1aa2299a9:;
			{
				_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("cpp14", 5));
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1aa22a0a3:;
			{
				_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("cpp17", 5));
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1aa22a119:;
			{
				_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("cpp20", 5));
			}
		}
		_match_end_1aa22a04d:;
	}
}



inline jule::Slice<jule::U8> _1b658acdc_read_buff(jule::Str _3014_path) {
	return ({
		auto except = static__1e9daa320_read(_3014_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str("error: file cannot read", 23));
			
			_1d006a85d_exit(1LL);
			return nullptr;
			return nullptr;
		} jule::Slice<jule::U8>();});
	});
}



inline _1d0019224_Log _1b659ea6a_flat_compiler_err(jule::Str _4122_text) {
	return _1d0019224_Log(static_cast<jule::I64>(1LL),jule::I64(),jule::I64(),jule::Str(),_4122_text,jule::Str(),jule::Str());
}



inline void _1b66ad86b_push_passes(jule::Ptr<_1a75cbe4c_Package>& _9021_p,jule::Slice<jule::Str>& _9045_passes) {
	{
		auto &expr = _9021_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1aa23d65a:;
		if (it != expr.end()) {
			jule::Ptr<_1a76439db_SymbolTable> _1aa23d1d7_f = *it;
			{
				_julec_label_push:;
				{
					auto &expr = _1aa23d1d7_f.get()._field_passes;
					auto it = expr.begin();
					_iter_begin_1aa242a6b:;
					if (it != expr.end()) {
						_1a642e113_Pass _1aa246256_pass = *it;
						{
							if (_1aa246256_pass._field_text.empty()) {
								goto _iter_next_1aa242a6b;
							}
							{
								auto &expr = _9045_passes;
								auto it = expr.begin();
								_iter_begin_1aa246de4:;
								if (it != expr.end()) {
									jule::Str _1aa246b80_cpass = *it;
									{
										if (_1aa246b80_cpass == _1aa246256_pass._field_text) {
											goto _iter_next_1aa242a6b;
										}
									}
									_iter_next_1aa246de4:;
									++it;
									goto _iter_begin_1aa246de4;
								}
								_iter_end_1aa246de4:;
							}
							_9045_passes = jule::alloc_for_append(_9045_passes,1);_9045_passes.__push(_1aa246256_pass._field_text);
						}
						_iter_next_1aa242a6b:;
						++it;
						goto _iter_begin_1aa242a6b;
					}
					_iter_end_1aa242a6b:;
				}
			}
			_iter_next_1aa23d65a:;
			++it;
			goto _iter_begin_1aa23d65a;
		}
		_iter_end_1aa23d65a:;
	}
}



inline jule::Slice<jule::Str> _1b66b0917_get_all_unique_passes(jule::Ptr<_1a75cbe4c_Package>& _10731_pkg,jule::Slice<jule::Ptr<_1a75c928a_ImportInfo>> _10756_uses) {
	jule::Slice<jule::Str> _10813_passes = nullptr;
	_1b66ad86b_push_passes(_10731_pkg,_10813_passes);
	{
		auto &expr = _10756_uses;
		auto it = expr.begin();
		_iter_begin_1aa248225:;
		if (it != expr.end()) {
			jule::Ptr<_1a75c928a_ImportInfo> _1aa2486cb_u = *it;
			{
				if ((!(_1aa2486cb_u.get()._field_cpp_linked))) {
					_1b66ad86b_push_passes(_1aa2486cb_u.get()._field_package,_10813_passes);
				}
			}
			_iter_next_1aa248225:;
			++it;
			goto _iter_begin_1aa248225;
		}
		_iter_end_1aa248225:;
	}
	return _10813_passes;
}



inline _1d0b69d74_CompileInfo _1b66b32dd_build_compile_info(void) {
	_1d0b69d74_CompileInfo _12113_info = _1d0b69d74_CompileInfo(_1e829b746_PRODUCTION,_1e829d3b3_TEST,jule::Str("clang", 5),jule::Str("cpp14", 5));
	{
		auto &_match_expr{ _1e829caaa_COMPILER };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1aa2498a8:;
			{
				_12113_info._field_compiler=jule::Str("clang", 5);
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1aa24991e:;
			{
				_12113_info._field_compiler=jule::Str("gcc", 3);
			}
		}
		_match_end_1aa249853:;
	}
	{
		auto &_match_expr{ _1e829cdeb_CPP_STD };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1aa249985:;
			{
				_12113_info._field_compiler=jule::Str("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1aa24a425:;
			{
				_12113_info._field_compiler=jule::Str("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1aa24a48b:;
			{
				_12113_info._field_compiler=jule::Str("cpp20", 5);
			}
		}
		_match_end_1aa249c71:;
	}
	return _12113_info;
}



inline jule::Ptr<_1d06c9ecd_Directive> _1b66c2396_find_directive(jule::Slice<jule::Ptr<_1d06c9ecd_Directive>>& _3224_directives,jule::Str _3255_tag) {
	{
		auto &expr = _3224_directives;
		auto it = expr.begin();
		_iter_begin_1aa260a67:;
		if (it != expr.end()) {
			jule::Ptr<_1d06c9ecd_Directive> _1aa260b88_dr = *it;
			{
				if (_1aa260b88_dr.get()._field_tag.get()._field_kind == _3255_tag) {
					return _1aa260b88_dr;
				}
			}
			_iter_next_1aa260a67:;
			++it;
			goto _iter_begin_1aa260a67;
		}
		_iter_end_1aa260a67:;
	}
	return nullptr;
}



inline jule::Bool _1b66c48a4_has_directive(jule::Slice<jule::Ptr<_1d06c9ecd_Directive>>& _4219_directives,jule::Str _4250_tag) {
	return (_1b66c2396_find_directive(_4219_directives,_4250_tag) != nullptr);
}



inline jule::Bool _1b66c9d0a_is_exist(jule::Slice<jule::Any> _4713_arr,jule::Any _4725_t) {
	{
		auto &expr = _4713_arr;
		auto it = expr.begin();
		_iter_begin_1aa26100c:;
		if (it != expr.end()) {
			jule::Any &_1aa262519_ref = *it;
			{
				if (_4725_t == _1aa262519_ref) {
					return true;
				}
			}
			_iter_next_1aa26100c:;
			++it;
			goto _iter_begin_1aa26100c;
		}
		_iter_end_1aa26100c:;
	}
	return false;
}



inline jule::Bool _1b66d6872_is_dead(jule::Any _5716_ref) {
	jule::Bool _5728_dead = jule::Bool();
	if (_1b66c9d0a_is_exist(_1d0786386_deads,_5716_ref)) {
		_5728_dead = true;
		return _5728_dead;
	}
	{
		auto &_match_expr{ _5716_ref };
		
		if (_match_expr.type_is<jule::Ptr<_1a6429be1_FnIns>>()) {
			_case_begin_1aa2648d4:;
			{
				if (_1a64276d3_is_init(_5716_ref.operator jule::Ptr<_1a6429be1_FnIns>().get()._field_decl.ptr())) {
					goto _match_end_1aa263383;
				}
				goto _case_begin_1aa26388e;
			}
		}
		else {
			_case_begin_1aa26388e:;
			{
				if ((_1b6587415_current == _5716_ref) || (_1b658d482_main_current == _5716_ref)) {
					_5728_dead = true;
					return _5728_dead;
				}
				if (_1b66c9d0a_is_exist(_1b6508919_checking,_5716_ref)) {
					_5728_dead = true;
					return _5728_dead;
				}
			}
		}
		_match_end_1aa263383:;
	}
	jule::Any _7813_old = _1b6587415_current;
	_1b6587415_current=_5716_ref;
	jule::I64 _809_len = _1b6508919_checking.len();
	_1b6508919_checking = jule::alloc_for_append(_1b6508919_checking,1);_1b6508919_checking.__push(_5716_ref);
	__JULE_DEFER({
		_1b6587415_current=_7813_old;
		_1b66ddd52_drop_ref(_1b6508919_checking,_809_len);
	});
	{
		auto &_match_expr{ _5716_ref };
		
		if (_match_expr.type_is<jule::Ptr<_1a6429be1_FnIns>>()) {
			_case_begin_1aa26672c:;
			{
				_5728_dead = _1b66eb06d_is_fn_dead(_5716_ref.operator jule::Ptr<_1a6429be1_FnIns>());
				return _5728_dead;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a75ec478_Var>>()) {
			_case_begin_1aa266793:;
			{
				_5728_dead = _1b67026b2_is_var_dead(_5716_ref.operator jule::Ptr<_1a75ec478_Var>());
				return _5728_dead;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a641744d_StructIns>>()) {
			_case_begin_1aa26685e:;
			{
				_5728_dead = _1b6708db1_is_struct_dead(_5716_ref.operator jule::Ptr<_1a641744d_StructIns>());
				return _5728_dead;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a7465bd7_Trait>>()) {
			_case_begin_1aa2668c5:;
			{
				_5728_dead = _1b6729de3_is_trait_dead(_5716_ref.operator jule::Ptr<_1a7465bd7_Trait>());
				return _5728_dead;
			}
		}
		else {
			_case_begin_1aa2639c1:;
			{
				_5728_dead = false;
				return _5728_dead;
			}
		}
		_match_end_1aa266221:;
	}
}



inline void _1b66ddd52_drop_ref(jule::Slice<jule::Any>& _10518_refs,jule::I64 _10531_pos) {
	_10518_refs=_10518_refs.slice(0LL,_10531_pos);
}



inline jule::Bool _1b66e871e_is_all_references_are_dead(jule::Ptr<_1a642cc9e_ReferenceStack> _11335_references) {
	jule::I64 _11413_i = 0LL;
	for (; _11413_i < static_cast<jule::I64>(static_cast<jule::I64>(_1a642d3ba_len(_11335_references.ptr()))); (_11413_i)++) {
		{
			jule::Any _11617_ref = _1a642d6c8_at(_11335_references.ptr(), _11413_i);
			if (_11617_ref == _1b6587415_current) {
				goto _iter_next_1aa266980;
			}
			if (_11617_ref == _1b658d482_main_current) {
				goto _iter_next_1aa266980;
			}
			if ((!(_1b66d6872_is_dead(_11617_ref)))) {
				return false;
			}
		}
	_iter_next_1aa266980:;
	}
	_iter_end_1aa266980:;
	return true;
}



inline jule::Bool _1b66eb06d_is_fn_dead(jule::Ptr<_1a6429be1_FnIns> _13019_f) {
	if (_13019_f.get()._field_decl.get()._field_cpp_linked || _13019_f.get()._field_anon) {
		return false;
	}
	if (_1a642746e_is_entry_point(_13019_f.get()._field_decl.ptr()) || _1a64276d3_is_init(_13019_f.get()._field_decl.ptr())) {
		return (!(_13019_f.get()._field_decl.get()._field_statically));
	}
	if (_1e829d3b3_TEST && _1b66c48a4_has_directive(_13019_f.get()._field_decl.get()._field_directives,jule::Str("test", 4))) {
		return false;
	}
	if ((_13019_f.get()._field_owner != nullptr)) {
		if (_1b66c9d0a_is_exist(_1b6508919_checking,jule::Any(_13019_f.get()._field_owner))) {
			return true;
		}
		return _1b66d6872_is_dead(jule::Any(_13019_f.get()._field_owner));
	}
	return _1b66e871e_is_all_references_are_dead(_13019_f.get()._field_references);
}



inline jule::Bool _1b67026b2_is_var_dead(jule::Ptr<_1a75ec478_Var> _16020_v) {
	if (_16020_v.get()._field_constant) {
		return true;
	}
	if (_16020_v.get()._field_cpp_linked) {
		return false;
	}
	return _1b66e871e_is_all_references_are_dead(_16020_v.get()._field_references);
}



inline jule::Bool _1b6708db1_is_struct_dead(jule::Ptr<_1a641744d_StructIns> _20523_s) {
	return false;
}



inline jule::Bool _1b6729de3_is_trait_dead(jule::Ptr<_1a7465bd7_Trait> _22222_t) {
	return false;
}



inline void _1b6893336_eliminate_dead_functions(jule::Slice<jule::Ptr<_1a6426a45_Fn>>& _23934_funcs) {
	jule::I64 _24013_i = 0LL;
	while (_24013_i < static_cast<jule::I64>(static_cast<jule::I64>(_23934_funcs.len()))) {
		{
			jule::Ptr<_1a6426a45_Fn> _24217_f = _23934_funcs[_24013_i];
			jule::I64 _24317_j = 0LL;
			while (_24317_j < static_cast<jule::I64>(static_cast<jule::I64>(_24217_f.get()._field_instances.len()))) {
				{
					jule::Ptr<_1a6429be1_FnIns> _24521_ins = _24217_f.get()._field_instances[_24317_j];
					_1b658d482_main_current=jule::Any(_24521_ins);
					if (_1b66eb06d_is_fn_dead(_24521_ins)) {
						_1d0786386_deads = jule::alloc_for_append(_1d0786386_deads,1);_1d0786386_deads.__push(jule::Any(_24521_ins));
						_24217_f.get()._field_instances=jule::append(_24217_f.get()._field_instances.slice(0LL,_24317_j),_24217_f.get()._field_instances.slice((_24317_j + 1LL)));
					} else {
						(_24317_j)++;
					}
				}
			_iter_next_1aa27da1e:;
			}
			_iter_end_1aa27da1e:;
			if ((_24217_f.get()._field_instances.len() == 0LL)) {
				_23934_funcs=jule::append(_23934_funcs.slice(0LL,_24013_i),_23934_funcs.slice((_24013_i + 1LL)));
				goto _iter_next_1aa27b566;
			}
			(_24013_i)++;
		}
	_iter_next_1aa27b566:;
	}
	_iter_end_1aa27b566:;
}



inline void _1b6897857_eliminate_dead_globals(jule::Ptr<_1a75cbe4c_Package>& _26432_pkg) {
	{
		auto &expr = _26432_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1aa27d0c3:;
		if (it != expr.end()) {
			jule::Ptr<_1a76439db_SymbolTable> _1aa28124c_f = *it;
			{
				jule::I64 _26617_i = 0LL;
				while (_26617_i < static_cast<jule::I64>(static_cast<jule::I64>(_1aa28124c_f.get()._field_vars.len()))) {
					{
						jule::Ptr<_1a75ec478_Var> _26821_v = _1aa28124c_f.get()._field_vars[_26617_i];
						_1b658d482_main_current=jule::Any(_26821_v);
						if (_1b67026b2_is_var_dead(_26821_v)) {
							_1d0786386_deads = jule::alloc_for_append(_1d0786386_deads,1);_1d0786386_deads.__push(jule::Any(_26821_v));
							_1aa28124c_f.get()._field_vars=jule::append(_1aa28124c_f.get()._field_vars.slice(0LL,_26617_i),_1aa28124c_f.get()._field_vars.slice((_26617_i + 1LL)));
						} else {
							(_26617_i)++;
						}
					}
				_iter_next_1aa281e51:;
				}
				_iter_end_1aa281e51:;
			}
			_iter_next_1aa27d0c3:;
			++it;
			goto _iter_begin_1aa27d0c3;
		}
		_iter_end_1aa27d0c3:;
	}
}



inline void _1b6898a89_eliminate_dead_functions_package(jule::Ptr<_1a75cbe4c_Package>& _28042_pkg) {
	{
		auto &expr = _28042_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1aa282418:;
		if (it != expr.end()) {
			jule::Ptr<_1a76439db_SymbolTable> _1aa2819cd_f = *it;
			{
				_1b6893336_eliminate_dead_functions(_1aa2819cd_f.get()._field_funcs);
			}
			_iter_next_1aa282418:;
			++it;
			goto _iter_begin_1aa282418;
		}
		_iter_end_1aa282418:;
	}
}



inline void _1b689d42e_keep_alive_init(jule::Ptr<_1a75cbe4c_Package>& _32825_pkg) {
	
	
	jule::Ptr<_1a6426a45_Fn> _33113_f = _1a75cd6e0_find_fn(_32825_pkg.ptr(), jule::Str("init", 4),false);
	if ((_33113_f != nullptr)) {
		_33113_f.get()._field_statically=true;
	}
}



inline void _1b68a867b_eliminate_package(jule::Ptr<_1a75cbe4c_Package>& _33727_pkg) {
	_1d0786386_deads=jule::Slice<jule::Any>::alloc(0LL,1024LL);
	_1b689d42e_keep_alive_init(_33727_pkg);
	_1b6897857_eliminate_dead_globals(_33727_pkg);
	_1b6898a89_eliminate_dead_functions_package(_33727_pkg);
}



inline void _1b68b08b4_eliminate_defines(jule::Ptr<_1b737ec89_IR>& _34931_ir) {
	jule::I64 _35013_i = (_34931_ir.get()._field_used.len() - 1LL);
	for (; (_35013_i >= 0LL); (_35013_i)--) {
		{
			jule::Ptr<_1a75c928a_ImportInfo> _35217_u = _34931_ir.get()._field_used[_35013_i];
			if ((!(_35217_u.get()._field_cpp_linked))) {
				_1b68a867b_eliminate_package(_35217_u.get()._field_package);
			}
		}
	_iter_next_1aa28c841:;
	}
	_iter_end_1aa28c841:;
	_1b68a867b_eliminate_package(_34931_ir.get()._field_main);
	_1d0786386_deads=nullptr;
	_1b6508919_checking=nullptr;
	_1b6587415_current=jule::Any(nullptr);
}



inline void _1b68cd272_eliminate_dead_code_of_scope(jule::Ptr<_1a759e606_Scope> _7637_s) {
	jule::Ptr<_1b689822b_ScopeDeadCode> _7713_sdc = jule::new_ptr<_1b689822b_ScopeDeadCode>(_1b689822b_ScopeDeadCode(jule::Ptr<_1b689822b_ScopeDeadCode>(),_7637_s,(&(_7637_s.get()._field_stmts)),jule::I64()));
	{
		_1b68be906_optimize_stmts(_7713_sdc);
	}
}



inline void _1b68cecbd_eliminate_scope_functions(jule::Slice<jule::Ptr<_1a6426a45_Fn>>& _8535_funcs) {
	{
		auto &expr = _8535_funcs;
		auto it = expr.begin();
		_iter_begin_1aa291ba8:;
		if (it != expr.end()) {
			jule::Ptr<_1a6426a45_Fn> _1aa29213c_func = *it;
			{
				{
					auto &expr = _1aa29213c_func.get()._field_instances;
					auto it = expr.begin();
					_iter_begin_1aa2927be:;
					if (it != expr.end()) {
						jule::Ptr<_1a6429be1_FnIns> _1aa29288a_ins = *it;
						{
							_1b68cd272_eliminate_dead_code_of_scope(_1aa29288a_ins.get()._field_scope);
						}
						_iter_next_1aa2927be:;
						++it;
						goto _iter_begin_1aa2927be;
					}
					_iter_end_1aa2927be:;
				}
			}
			_iter_next_1aa291ba8:;
			++it;
			goto _iter_begin_1aa291ba8;
		}
		_iter_end_1aa291ba8:;
	}
}



inline void _1b69155a6_eliminate_functions_scope_package(jule::Ptr<_1a75cbe4c_Package>& _9343_pkg) {
	{
		auto &expr = _9343_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1aa292439:;
		if (it != expr.end()) {
			jule::Ptr<_1a76439db_SymbolTable> _1aa292978_f = *it;
			{
				_1b68cecbd_eliminate_scope_functions(_1aa292978_f.get()._field_funcs);
			}
			_iter_next_1aa292439:;
			++it;
			goto _iter_begin_1aa292439;
		}
		_iter_end_1aa292439:;
	}
}



inline void _1b692cd82_eliminate_scope_package(jule::Ptr<_1a75cbe4c_Package>& _9933_pkg) {
	_1b69155a6_eliminate_functions_scope_package(_9933_pkg);
}



inline void _1b6938b4b_eliminate_scopes(jule::Ptr<_1b737ec89_IR>& _10430_ir) {
	jule::I64 _10513_i = (_10430_ir.get()._field_used.len() - 1LL);
	for (; (_10513_i >= 0LL); (_10513_i)--) {
		{
			jule::Ptr<_1a75c928a_ImportInfo> _10717_u = _10430_ir.get()._field_used[_10513_i];
			if ((!(_10717_u.get()._field_cpp_linked))) {
				_1b692cd82_eliminate_scope_package(_10717_u.get()._field_package);
			}
		}
	_iter_next_1aa294062:;
	}
	_iter_end_1aa294062:;
	_1b692cd82_eliminate_scope_package(_10430_ir.get()._field_main);
}



inline void _1b69d7ed6_throw(jule::Str _914_msg) {
	jule::outln(_914_msg);
	_1d006a85d_exit(1LL);
}



inline jule::Bool _1a7d66065_is_std_package(jule::Str _39719_f,jule::Str _39727_p) {
	return _1d095aa22_has_prefix(_39719_f,_1d09a5c6a_join(jule::Slice<jule::Str>({_1d002c897_PATH_STDLIB,_39727_p})));
}



inline jule::Bool _1a7d663b7_is_constant_valid_conditional_case(jule::Ptr<_1a75a6003_If>& _40140_i) {
	{
		auto &_match_expr{ _40140_i.get()._field_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1a751ddb1_Const>>()) {
			_case_begin_1aa35b910:;
			{
				jule::Ptr<_1a751ddb1_Const> _40413_c = _40140_i.get()._field_expr.operator jule::Ptr<_1a751ddb1_Const>();
				return _1a7522997_is_bool(_40413_c.ptr()) && _1a75205ee_read_bool(_40413_c.ptr());
			}
		}
		_match_end_1aa35b8aa:;
	}
	return false;
}



inline jule::Bool _1a7d6662b_is_unreachable_expr(jule::Any& _41025_expr) {
	{
		auto &_match_expr{ _41025_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1a751ddb1_Const>>()) {
			_case_begin_1aa35c59d:;
			{
				jule::Ptr<_1a751ddb1_Const> _41313_c = _41025_expr.operator jule::Ptr<_1a751ddb1_Const>();
				return _1a7522997_is_bool(_41313_c.ptr()) && (!(_1a75205ee_read_bool(_41313_c.ptr())));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6419571_BinopExprModel>>()) {
			_case_begin_1aa35c614:;
			{
				jule::Ptr<_1a6419571_BinopExprModel> _41613_m = _41025_expr.operator jule::Ptr<_1a6419571_BinopExprModel>();
				if ((_41613_m.get()._field_op.get()._field_kind == jule::Str("&&", 2))) {
					return _1a7d6662b_is_unreachable_expr(_41613_m.get()._field_left.get()._field_model) || _1a7d6662b_is_unreachable_expr(_41613_m.get()._field_right.get()._field_model);
				}
			}
		}
		_match_end_1aa35c548:;
	}
	return false;
}



inline jule::Bool _1a7d6695b_is_constant_valid_match_case(jule::Ptr<_1a75b31ec_Case>& _42434_case) {
	{
		auto &expr = _42434_case.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1aa35da11:;
		if (it != expr.end()) {
			jule::Ptr<_1a7648b67_Data> &_1aa35da88_expr = *it;
			{
				if ((_1a764952a_is_const(_1aa35da88_expr.ptr()) && _1a7522997_is_bool(_1aa35da88_expr.get()._field_constant.ptr())) && _1a75205ee_read_bool(_1aa35da88_expr.get()._field_constant.ptr())) {
					return true;
				}
			}
			_iter_next_1aa35da11:;
			++it;
			goto _iter_begin_1aa35da11;
		}
		_iter_end_1aa35da11:;
	}
	return false;
}



inline jule::Bool _1a7d66c36_is_unreachable_conditional_case(jule::Ptr<_1a75a6003_If>& _43337_i) {
	return _1a7d6662b_is_unreachable_expr(_43337_i.get()._field_expr);
}



inline jule::Bool _1a7d67011_is_unreachable_match_case(jule::Ptr<_1a75b31ec_Case>& _43731_case) {
	{
		auto &expr = _43731_case.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1aa362350:;
		if (it != expr.end()) {
			jule::Ptr<_1a7648b67_Data> &_1aa3629c1_expr = *it;
			{
				if ((!(_1a7d6662b_is_unreachable_expr(_1aa3629c1_expr.get()._field_model)))) {
					return false;
				}
			}
			_iter_next_1aa362350:;
			++it;
			goto _iter_begin_1aa362350;
		}
		_iter_end_1aa362350:;
	}
	return true;
}



inline std::tuple<jule::Bool,jule::U64> _1a7d6e16c_check_for_bit_shift_opt(jule::Ptr<_1a64190a9_OperandExprModel>& _42329_l,jule::Ptr<_1a64190a9_OperandExprModel>& _42352_r) {
	jule::Bool _42376_ok = jule::Bool();
	jule::U64 _42386_x = jule::U64();
	if ((!(_1a75b18d2_is_int(_1a7673257_to_str(_42329_l.get()._field_kind.ptr())))) || (!(_1a75b18d2_is_int(_1a7673257_to_str(_42352_r.get()._field_kind.ptr()))))) {
		_42376_ok = false;
		_42386_x = 0LLU;
		return std::make_tuple(_42376_ok,_42386_x);
	}
	{
		auto &_match_expr{ _42352_r.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1a751ddb1_Const>>()) {
			_case_begin_1aa3655a6:;
			{
				goto _match_end_1aa365045;
			}
		}
		else {
			_case_begin_1aa36509a:;
			{
				_42376_ok = false;
				_42386_x = 0LLU;
				return std::make_tuple(_42376_ok,_42386_x);
			}
		}
		_match_end_1aa365045:;
	}
	_42386_x=static_cast<jule::U64>(_1a75210a0_as_u64(_42352_r.get()._field_model.operator jule::Ptr<_1a751ddb1_Const>().ptr()));
	if ((_42386_x == 0LLU) || ((_42386_x & 1LL) != 0LLU)) {
		_42376_ok = false;
		_42386_x = 0LLU;
		return std::make_tuple(_42376_ok,_42386_x);
	}
	jule::F64 _4379_j = _1a74420e2_log2(static_cast<jule::F64>(static_cast<jule::F64>(_42386_x)));
	jule::U64 _4389_z = static_cast<jule::U64>(_4379_j);
	if (static_cast<jule::F64>(_4389_z) != _4379_j) {
		_42376_ok = false;
		_42386_x = 0LLU;
		return std::make_tuple(_42376_ok,_42386_x);
	}
	_42376_ok = true;
	_42386_x = _4389_z;
	return std::make_tuple(_42376_ok,_42386_x);
}



inline jule::U64 _1d0a42d90_unix(void) {
	return static_cast<jule::U64>(static_cast<jule::U64>(time(nullptr)));
}



inline jule::U64 _1d0a431d1_unix_year_to_seconds(jule::U64 _26225_y,jule::Bool& _26243_leap) {
	if (((_26225_y - 2LLU) <= 136LLU)) {
		jule::U64 _26417_leaps = ((_26225_y - 68LLU) >> 2LLU);
		_26243_leap=(((_26225_y - 68LLU) & 3LLU) == 0LLU);
		if (_26243_leap) {
			(_26417_leaps)--;
		}
		return static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(31536000LLU * static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_26225_y - 70LLU)))))) + static_cast<jule::U64>(static_cast<jule::U64>(86400LLU * _26417_leaps)));
	}
	jule::U64 _27213_leaps = 0LLU;
	jule::U64 _27313_centuries = 0LLU;
	jule::U64 _27413_cycles = ((_26225_y - 100LLU) / 400LLU);
	jule::U64 _27513_rem = ((_26225_y - 100LLU) % 400LL);
	if ((_27513_rem < 0LLU)) {
		(_27413_cycles)--;
		_27513_rem+=400LLU;
	}
	if ((_27513_rem == 0LLU)) {
		_26243_leap=true;
		_27313_centuries=0LLU;
		_27213_leaps=0LLU;
	} else {
		if ((_27513_rem >= 200LLU)) {
			if ((_27513_rem >= 300LLU)) {
				_27313_centuries=3LLU;
				_27513_rem-=300LLU;
			} else {
				_27313_centuries=2LLU;
				_27513_rem-=200LLU;
			}
		} else {
			if ((_27513_rem >= 100LLU)) {
				_27313_centuries=1LLU;
				_27513_rem-=100LLU;
			} else {
				_27313_centuries=0LLU;
			}
		}
		if ((_27513_rem == 0LLU)) {
			_26243_leap=false;
			_27213_leaps=0LLU;
		} else {
			_27213_leaps=static_cast<jule::U64>(_27513_rem >> 2LLU);
			_27513_rem%=4LL;
			_26243_leap=(_27513_rem == 0LLU);
		}
	}
	_27213_leaps+=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(97LLU * _27413_cycles)) + static_cast<jule::U64>(static_cast<jule::U64>(24LLU * _27313_centuries)));
	if (_26243_leap) {
		(_27213_leaps)++;
	}
	return static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_26225_y - 100LLU)))) * 31536000LLU))) + static_cast<jule::U64>(static_cast<jule::U64>((_27213_leaps * 86400LLU))))) + 946684800LLU))) + 86400LLU));
}



inline jule::U64 _1d0a43566_unix_month_to_seconds(jule::U64 _31926_m,jule::Bool _31939_leap) {
	jule::U64 _32113_t = 0LLU;
	{
		auto &_match_expr{ _31926_m };
		
		if (_match_expr == 1LL) {
			_case_begin_1aa3937e3:;
			{
				_32113_t=2678400LLU;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1aa393c11:;
			{
				_32113_t=5097600LLU;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1aa393c77:;
			{
				_32113_t=7776000LLU;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1aa393cdd:;
			{
				_32113_t=10368000LLU;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1aa393d54:;
			{
				_32113_t=13046400LLU;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1aa393dba:;
			{
				_32113_t=15638400LLU;
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_1aa393e42:;
			{
				_32113_t=18316800LLU;
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_1aa393eb9:;
			{
				_32113_t=20995200LLU;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1aa394041:;
			{
				_32113_t=23587200LLU;
			}
		}
		else if (_match_expr == 10LL) {
			_case_begin_1aa3940b8:;
			{
				_32113_t=26265600LLU;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1aa394140:;
			{
				_32113_t=28857600LLU;
			}
		}
		_match_end_1aa393a68:;
	}
	if (_31939_leap && (_31926_m >= 2LLU)) {
		_32113_t+=86400LLU;
	}
	return _32113_t;
}



inline jule::Bool _1a7d5c644_is_copy_optimizable(jule::Ptr<_1a7648b67_Data>& _77525_expr) {
	if ((!(_77525_expr.get()._field_lvalue))) {
		return false;
	}
	{
		auto &_match_expr{ _77525_expr.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1a641cdb0_SlicingExprModel>>()) {
			_case_begin_1aa689985:;
			{
				return false;
			}
		}
		_match_end_1aa689930:;
	}
	return true;
}



inline jule::Bool _1a7d5c776_is_iter_copy_optimizable(jule::Ptr<_1a7648b67_Data>& _78630_expr,jule::Ptr<_1a75ec478_Var>& _78644_v) {
	if ((!(_78630_expr.get()._field_lvalue)) && (!(_1a7674247_mutable(_78630_expr.get()._field_kind.ptr())))) {
		return true;
	}
	return (!(_78644_v.get()._field_mutable)) && (!(_78630_expr.get()._field_mutable));
}



inline jule::Str _1a7d799b3_concat_all_parts(jule::Slice<jule::Ptr<_1d0747985_Token>> _114621_parts) {
	jule::Str _114713_s = jule::Str();
	{
		auto &expr = _114621_parts;
		auto it = expr.begin();
		_iter_begin_1aa69241b:;
		if (it != expr.end()) {
			jule::Ptr<_1d0747985_Token> &_1aa6924b5_p = *it;
			{
				_114713_s+=_1aa6924b5_p.get()._field_kind;
			}
			_iter_next_1aa69241b:;
			++it;
			goto _iter_begin_1aa69241b;
		}
		_iter_end_1aa69241b:;
	}
	return _114713_s;
}



inline jule::Str _1a7d79c9e_decompose_common_esq(jule::U8 _115425_b) {
	{
		auto &_match_expr{ _115425_b };
		
		if (_match_expr == '\\') {
			_case_begin_1aa6934d8:;
			{
				return jule::Str("\\\\", 2);
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1aa69354e:;
			{
				return jule::Str("'", 1);
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1aa69320d:;
			{
				return jule::Str("\\\"", 2);
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1aa693274:;
			{
				return jule::Str("\\a", 2);
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1aa6932da:;
			{
				return jule::Str("\\b", 2);
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1aa692e77:;
			{
				return jule::Str("\\f", 2);
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1aa692edd:;
			{
				return jule::Str("\\n", 2);
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1aa693054:;
			{
				return jule::Str("\\r", 2);
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1aa6930ba:;
			{
				return jule::Str("\\t", 2);
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1aa6935d7:;
			{
				return jule::Str("\\v", 2);
			}
		}
		else {
			_case_begin_1aa6926d5:;
			{
				return jule::Str();
			}
		}
		_match_end_1aa692817:;
	}
}



inline jule::Str _1a7d7a046_sbtoa(jule::U8 _118110_b) {
	if ((_118110_b == 0LLU)) {
		return jule::Str("\\x00", 4);
	}
	if ((_118110_b < 128LLU)) {
		jule::Str _118613_seq = _1a7d79c9e_decompose_common_esq(_118110_b);
		if ((!(_118613_seq.empty()))) {
			return _118613_seq;
		}
		if ((32LL <= _118110_b) && (_118110_b <= 126LLU)) {
			return static_cast<jule::Str>(_118110_b);
		}
	}
	jule::Str _11949_seq = _1a7464279_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_118110_b)),8LL);
	if ((_11949_seq.len() == 2LL)) {
		return jule::Str("\\0", 2) + _11949_seq;
	}
	return jule::Str("\\", 1) + _11949_seq;
}



inline jule::Str _1a7d7a332_cstr_bytes(jule::Slice<jule::U8> _120115_bytes) {
	jule::Str _120213_lit = jule::Str();
	{
		auto &expr = _120115_bytes;
		auto it = expr.begin();
		_iter_begin_1aa698d29:;
		if (it != expr.end()) {
			jule::U8 &_1aa698dc3_b = *it;
			{
				_120213_lit+=_1a7d7a046_sbtoa(_1aa698dc3_b);
			}
			_iter_next_1aa698d29:;
			++it;
			goto _iter_begin_1aa698d29;
		}
		_iter_end_1aa698d29:;
	}
	return _120213_lit;
}



inline jule::Str _1a7d7a5c9_cstr_lit(jule::Slice<jule::U8> _120913_bytes) {
	return ((jule::Str("\"", 1) + _1a7d7a332_cstr_bytes(_120913_bytes)) + jule::Str("\"", 1));
}



inline jule::Str _1a7d7a91a_ftoa(jule::F64 _12139_f,jule::I64 _121317_bitsize) {
	if ((_121317_bitsize != 32LL)) {
		if (_12139_f == static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::I64>(_12139_f))))) {
			return _1a7d7abb2_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_12139_f)));
		}
		if (_12139_f == static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::U64>(_12139_f))))) {
			return _1a7d7aee2_utoa(static_cast<jule::U64>(static_cast<jule::U64>(_12139_f)));
		}
	}
	jule::Str _122213_m = _1b774e312_fmt_float(_12139_f,'f',-1LL,_121317_bitsize);
	if ((!(_1d09a3a59_contains(_122213_m,jule::Str(".", 1))))) {
		_122213_m+=jule::Str(".0", 2);
	}
	return _122213_m;
}



inline jule::Str _1a7d7abb2_itoa(jule::I64 _12299_x) {
	{
		
		if ((_12299_x == jule::MAX_I64)) {
			_case_begin_1aa69ce3d:;
			{
				return jule::Str("jule::MAX_I64", 13);
			}
		}
		else if ((_12299_x == jule::MIN_I64)) {
			_case_begin_1aa69ced7:;
			{
				return jule::Str("jule::MIN_I64", 13);
			}
		}
		_match_end_1aa69cd2d:;
	}
	jule::Str _12379_fmt = _1a746460e_fmt_int(_12299_x,10LL);
	if (_1d001de4e_is_64bit(jule::Str("amd64", 5))) {
		return (_12379_fmt + jule::Str("LL", 2));
	}
	return (_12379_fmt + jule::Str("L", 1));
}



inline jule::Str _1a7d7aee2_utoa(jule::U64 _12449_x) {
	{
		
		if ((_12449_x == jule::MAX_U64)) {
			_case_begin_1aa69edc9:;
			{
				return jule::Str("jule::MAX_U64", 13);
			}
		}
		_match_end_1aa69e390:;
	}
	jule::Str _12509_fmt = _1a7464279_fmt_uint(_12449_x,10LL);
	if (_1d001de4e_is_64bit(jule::Str("amd64", 5))) {
		return (_12509_fmt + jule::Str("LLU", 3));
	}
	return (_12509_fmt + jule::Str("LU", 2));
}



inline jule::Bool _1a7d7b289_is_forwarded(jule::Ptr<_1a759e606_Scope>& _125718_s) {
	jule::Any _12589_last = _125718_s.get()._field_stmts[(_125718_s.get()._field_stmts.len() - 1LL)];
	{
		auto &_match_expr{ _12589_last };
		
		if (_match_expr.type_is<jule::Ptr<_1a7648b67_Data>>()) {
			_case_begin_1aa6a277d:;
			{
				{
					auto &_match_expr{ _12589_last.operator jule::Ptr<_1a7648b67_Data>().get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1a6422722_BuiltinErrorCallExprModel>>()) {
						_case_begin_1aa6a33d8:;
						{
							return true;
						}
					}
					else {
						_case_begin_1aa6a2cab:;
						{
							return false;
						}
					}
					_match_end_1aa6a2c56:;
				}
			}
		}
		else {
			_case_begin_1aa6a2162:;
			{
				return true;
			}
		}
		_match_end_1aa6a210c:;
	}
}



inline jule::Bool _1a7d7b575_is_builtin_call_has_debuginf(jule::Ptr<_1a641b364_FnCallExprModel>& _127234_m) {
	if ((!(_1a642a96c_is_builtin(_127234_m.get()._field_func.ptr())))) {
		return false;
	}
	{
		auto &_match_expr{ _127234_m.get()._field_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1a641ed3a_CommonSubIdentExprModel>>()) {
			_case_begin_1aa6a4153:;
			{
				jule::Ptr<_1a641ed3a_CommonSubIdentExprModel> _127813_csie = _127234_m.get()._field_expr.operator jule::Ptr<_1a641ed3a_CommonSubIdentExprModel>();
				return (_127813_csie.get()._field_ident == jule::Str("swap", 4));
			}
		}
		else {
			_case_begin_1aa6a3a15:;
			{
				return false;
			}
		}
		_match_end_1aa6a34a4:;
	}
}



inline jule::Bool _1d0a4da6b_is_cpp_header_file(jule::Str _119923_path) {
	jule::I64 _12009_offset = _1d09a31da_find_last_byte(_119923_path,'.');
	if ((_12009_offset == -1LL)) {
		return false;
	}
	return _1e9ea55c4_is_valid_header_ext(_119923_path.slice(_12009_offset));
}



inline jule::Ptr<_1d06c9ecd_Directive> _1d0a4ea6c_find_directive(jule::Slice<jule::Ptr<_1d06c9ecd_Directive>>& _3024_directives,jule::Str _3055_tag) {
	{
		auto &expr = _3024_directives;
		auto it = expr.begin();
		_iter_begin_1aa6a5c8c:;
		if (it != expr.end()) {
			jule::Ptr<_1d06c9ecd_Directive> _1aa6a5ce2_dr = *it;
			{
				if (_1aa6a5ce2_dr.get()._field_tag.get()._field_kind == _3055_tag) {
					return _1aa6a5ce2_dr;
				}
			}
			_iter_next_1aa6a5c8c:;
			++it;
			goto _iter_begin_1aa6a5c8c;
		}
		_iter_end_1aa6a5c8c:;
	}
	return nullptr;
}



inline jule::Bool _1d0a4ee02_has_directive(jule::Slice<jule::Ptr<_1d06c9ecd_Directive>>& _4019_directives,jule::Str _4050_tag) {
	return (_1d0a4ea6c_find_directive(_4019_directives,_4050_tag) != nullptr);
}



inline void _1d00241da_print_error_message(jule::Str _3024_msg) {
	jule::outln(_3024_msg);
}



inline void _1d002431c_help(jule::Slice<jule::Str>& _3510_args) {
	if ((_3510_args.len() > 2LL)) {
		_1d00241da_print_error_message(jule::Str("invalid command: ", 17) + _3510_args[2LL]);
		return;
	}
	jule::I64 _4113_max = _1d00240ec_HELP_MAP[0LL][0LL].len();
	{
		auto &expr = _1d00240ec_HELP_MAP;
		auto it = expr.begin();
		_iter_begin_1aa7047be:;
		if (it != expr.end()) {
			jule::Array<jule::Str,2> &_1aa704e1d_k = *it;
			{
				jule::I64 _4313_n = _1aa704e1d_k[0LL].len();
				if (_4313_n > _4113_max) {
					_4113_max=_4313_n;
				}
			}
			_iter_next_1aa7047be:;
			++it;
			goto _iter_begin_1aa7047be;
		}
		_iter_end_1aa7047be:;
	}
	jule::Str _4913_s = jule::Str();
	
	{
		auto &expr = _1d00240ec_HELP_MAP;
		auto it = expr.begin();
		_iter_begin_1aa7062a4:;
		if (it != expr.end()) {
			jule::I64 _1aa7063c5_i = it - expr.begin();
			jule::Array<jule::Str,2> &_1aa706617_part = *it;
			{
				_4913_s+=_1aa706617_part[0LL];
				_4913_s+=_1d0940e58_repeat(jule::Str(" ", 1),static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_4113_max - static_cast<jule::I64>(static_cast<jule::I64>(_1aa706617_part[0LL].len()))))) + 5LL)));
				_4913_s+=_1aa706617_part[1LL];
				if (((_1aa7063c5_i + 1LL) < 5LL)) {
					_4913_s+=jule::Str("\n", 1);
				}
			}
			_iter_next_1aa7062a4:;
			++it;
			_1aa7063c5_i++;
			goto _iter_begin_1aa7062a4;
		}
		_iter_end_1aa7062a4:;
	}
	jule::outln(_4913_s);
}



inline void _1d002444e_version(jule::Slice<jule::Str>& _6313_args) {
	if ((_6313_args.len() > 2LL)) {
		_1d00241da_print_error_message(jule::Str("invalid command: ", 17) + _6313_args[2LL]);
		return;
	}
	jule::outln(jule::Str("jule0.0.10", 10));
}



inline void _1d0024581_tool_distos(void) {
	jule::out(jule::Str("supported operating systems:\n ", 30));
	{
		auto &expr = _1d001c2c1_DISTOS;
		auto it = expr.begin();
		_iter_begin_1aa70962b:;
		if (it != expr.end()) {
			jule::Str &_1aa709b48_os = *it;
			{
				jule::out(_1aa709b48_os);
				jule::out(jule::Str(" ", 1));
			}
			_iter_next_1aa70962b:;
			++it;
			goto _iter_begin_1aa70962b;
		}
		_iter_end_1aa70962b:;
	}
	jule::outln(jule::Str());
}



inline void _1d00246b3_tool_distarch(void) {
	jule::out(jule::Str("supported architects:\n ", 23));
	{
		auto &expr = _1d001c4be_DISTARCH;
		auto it = expr.begin();
		_iter_begin_1aa709e89:;
		if (it != expr.end()) {
			jule::Str &_1aa70a770_arch = *it;
			{
				jule::out(_1aa70a770_arch);
				jule::out(jule::Str(" ", 1));
			}
			_iter_next_1aa709e89:;
			++it;
			goto _iter_begin_1aa709e89;
		}
		_iter_end_1aa709e89:;
	}
	jule::outln(jule::Str());
}



inline void _1d00247e5_tool(jule::Slice<jule::Str>& _9210_args) {
	if ((_9210_args.len() == 2LL)) {
		jule::outln(jule::Str("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;
	} else if ((_9210_args.len() > 3LL)) {
		_1d00241da_print_error_message(jule::Str("invalid command: ", 17) + _9210_args[3LL]);
		return;
	}
	jule::Str _1039_cmd = _9210_args[2LL];
	{
		auto &_match_expr{ _1039_cmd };
		
		if (_match_expr == jule::Str("distos", 6)) {
			_case_begin_1aa70ce6a:;
			{
				_1d0024581_tool_distos();
			}
		}
		else if (_match_expr == jule::Str("distarch", 8)) {
			_case_begin_1aa70cb90:;
			{
				_1d00246b3_tool_distarch();
			}
		}
		else {
			_case_begin_1aa70bd48:;
			{
				_1d00241da_print_error_message(jule::Str("undefined command: ", 19) + _1039_cmd);
			}
		}
		_match_end_1aa70cab3:;
	}
}



inline void _1d0024927_julenv(jule::Slice<jule::Str>& _11512_args) {
	if ((_11512_args.len() > 2LL)) {
		_1d00241da_print_error_message(jule::Str("invalid command: ", 17) + _11512_args[2LL]);
		return;
	}
	jule::outln(jule::Str("julec version: jule0.0.10", 25));
	jule::outln(jule::Str("architecture: amd64", 19));
	jule::outln(jule::Str("operating system: windows", 25));
	jule::outln(jule::Str("default compiler: ", 18) + _1e829caaa_COMPILER);
	jule::outln(jule::Str("default C++ standard: ", 22) + _1e829cdeb_CPP_STD);
}



inline void _1d006ac26_mod(jule::Slice<jule::Str>& _1289_args) {
	if ((_1289_args.len() == 2LL)) {
		jule::outln(jule::Str("command is not given, try julec mod init", 40));
		return;
	}
	if ((_1289_args.len() > 3LL)) {
		_1d00241da_print_error_message(jule::Str("invalid command: ", 17) + _1289_args[3LL]);
		return;
	}
	{
		auto &_match_expr{ _1289_args[2LL] };
		
		if (_match_expr == jule::Str("init", 4)) {
			_case_begin_1aa7127ee:;
			{
				({
					auto except = static__1e9daa672_write(jule::Str("jule.mod", 8),jule::Slice<jule::U8>(),432LL);
					if (!except.ok()) {
						_1d00241da_print_error_message(jule::Str("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1aa711017:;
			{
				_1d00241da_print_error_message(jule::Str("invalid command: ", 17) + _1289_args[2LL]);
			}
		}
		_match_end_1aa712304:;
	}
}



inline jule::Bool _1d006ad58_process_command(jule::Slice<jule::Str>& _15121_args) {
	{
		auto &_match_expr{ _15121_args[1LL] };
		
		if (_match_expr == jule::Str("help", 4)) {
			_case_begin_1aa71478a:;
			{
				_1d002431c_help(_15121_args);
			}
		}
		else if (_match_expr == jule::Str("version", 7)) {
			_case_begin_1aa7140b4:;
			{
				_1d002444e_version(_15121_args);
			}
		}
		else if (_match_expr == jule::Str("tool", 4)) {
			_case_begin_1aa71412a:;
			{
				_1d00247e5_tool(_15121_args);
			}
		}
		else if (_match_expr == jule::Str("julenv", 6)) {
			_case_begin_1aa714856:;
			{
				_1d0024927_julenv(_15121_args);
			}
		}
		else if (_match_expr == jule::Str("mod", 3)) {
			_case_begin_1aa7148bc:;
			{
				_1d006ac26_mod(_15121_args);
			}
		}
		else {
			_case_begin_1aa7126ab:;
			{
				return false;
			}
		}
		_match_end_1aa713b41:;
	}
	return true;
}



inline void _1d006ae8a_show_info(void) {
	jule::outln(jule::Str("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help,\n    version       Show version,\n    tool          Tools for effective Jule,\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 310));
}



void entry_point(void) {
	jule::Slice<jule::Str> _18713_args = _1ce92cad3_args();
	if ((_18713_args.len() < 2LL)) {
		_1d006ae8a_show_info();
		return;
	}
	if (_1d006ad58_process_command(_18713_args)) {
		return;
	}
	_1a7e95d76_compile_command(_18713_args);
}



inline void _1d006b573_enable_vtp(void) {
	jule::U64 _199_h_out = _1e9d9909a_get_std_handle(static_cast<jule::U64>(18446744073709551605LLU));
	if ((_199_h_out == jule::MAX_U64)) {
		return;
	}
	jule::I64 _2413_dw_mode = 0LL;
	if ((!(_1e9d9be38_get_console_mode(_199_h_out,_2413_dw_mode)))) {
		return;
	}
	_2413_dw_mode|=4LL;
	_1e9d9c279_set_console_mode(_199_h_out,_2413_dw_mode);
}



inline void _1d006b6a5_init(void) {
	_1d006b573_enable_vtp();
}



inline void _1a7e6243b_write_output(jule::Str _4917_path,jule::Str _4928_content) {
	jule::Str _509_dir = _1d09a6881_dir(_4917_path);
	({
		auto except = static__1d09a8058_of(_509_dir);
		if (!except.ok()) {
			({
				auto except = static__1d09a7464_create(_509_dir);
				if (!except.ok()) {
					_1b69d7ed6_throw(jule::Str("a problem occurs when code generation", 37));
				}
			});
		}
	});
	({
		auto except = static__1e9daa672_write(_4917_path,static_cast<jule::Slice<jule::U8>>(_4928_content),432LL);
		if (!except.ok()) {
			_1b69d7ed6_throw(jule::Str("a problem occurs when code generation", 37));
		}
	});
}



inline void _1a7e66110_clear_objects(void) {
	({
		auto except = static__1e9e73691_remove(_1a7e678a3_get_compile_path());
		if (!except.ok()) {
			jule::outln(jule::Str("a problem occurs when object cleaning", 37));
			return;
		}
	});
	static__1d09a7673_remove(_1a7e69ae7_OUT_DIR);
}



inline void _1a7e78b28_compile_ir(jule::Str _7715_compiler,jule::Str _7730_compiler_cmd) {
	jule::Ptr<_1d0059b9e_Cmd> _7813_cmd = static__1d005a0cd_new(_7715_compiler);
	_7813_cmd.get()._field_args=jule::Slice<jule::Str>({_7715_compiler});
	_7813_cmd.get()._field_args=jule::append(_7813_cmd.get()._field_args,_1d09a3927_split(_7730_compiler_cmd,jule::Str(" ", 1),-1LL));
	jule::I64 _819_status = ({
		auto except = _1d005e544_spawn(_7813_cmd.ptr());
		(except.ok()) ? (except.result) : ({
			{
				auto &_match_expr{ except.error };
				
				if (_match_expr == static_cast<jule::I64>(12LL)) {
					_case_begin_1aa72006a:;
					{
						static__1b6975b22_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of fork problem", 56));
					}
				}
				else if (_match_expr == static_cast<jule::I64>(3LL)) {
					_case_begin_1aa7200d1:;
					{
						static__1b6975b22_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (_match_expr == static_cast<jule::I64>(9LL)) {
					_case_begin_1aa720147:;
					{
						static__1b6975b22_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of compiler path is not in the proper format", 85));
					}
				}
				else if (_match_expr == static_cast<jule::I64>(0LL)) {
					_case_begin_1aa7201ad:;
					{
						static__1b6975b22_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1aa71ecb2:;
					{
						static__1b6975b22_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of unkown problem", 58));
					}
				}
				_match_end_1aa71ed4a:;
			}
			_1b69d7ed6_throw(jule::Str());
			0LL;
		});
	});
	if ((_819_status != 0LL)) {
		jule::Str _9813_error_message = ((jule::Str("\n>>> your backend compiler (", 28) + _1e829caaa_COMPILER) + jule::Str(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));
		static__1b6975b22_print(jule::Str("\033[31m", 5),_9813_error_message);
		_1b69d7ed6_throw(jule::Str());
	}
	_1a7e66110_clear_objects();
}



inline void _1a7e5e4b0_do_spell(jule::Str _11013_obj,jule::Str _11023_compiler,jule::Str _11038_compiler_cmd) {
	jule::Str _1119_path = _1a7e678a3_get_compile_path();
	_1a7e6243b_write_output(_1119_path,_11013_obj);
	if ((!(_1e829d23c_TRANSPILATION))) {
		_1a7e78b28_compile_ir(_11023_compiler,_11038_compiler_cmd);
	}
}



inline jule::Bool _1a7e63ad0_is_cpp_source_file(jule::Str _11823_path) {
	jule::I64 _1199_offset = _1d09a31da_find_last_byte(_11823_path,'.');
	if ((_1199_offset == -1LL)) {
		return false;
	}
	return _1e9eb469e_is_valid_cpp_ext(_11823_path.slice(_1199_offset));
}



inline void _1a7e70e83_push_comp_cmd_clang(jule::Str& _12629_cmd) {
	_12629_cmd+=jule::Str("-Wno-everything ", 16);
	_12629_cmd+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _1e829cdeb_CPP_STD };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1aa726945:;
			{
				_12629_cmd+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1aa726ed9:;
			{
				_12629_cmd+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1aa727050:;
			{
				_12629_cmd+=jule::Str("c++20", 5);
			}
		}
		_match_end_1aa726d96:;
	}
	_12629_cmd+=jule::Str(" ", 1);
	if (_1e829b746_PRODUCTION) {
		_12629_cmd+=jule::Str("-O3 ", 4);
		_12629_cmd+=jule::Str("-flto ", 6);
		_12629_cmd+=jule::Str("-DNDEBUG ", 9);
		_12629_cmd+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		_12629_cmd+=jule::Str("-O0 ", 4);
	}
}



inline void _1a7e5e1e6_push_comp_cmd_gcc(jule::Str& _15227_cmd) {
	_15227_cmd+=jule::Str("-w ", 3);
	_15227_cmd+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _1e829cdeb_CPP_STD };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1aa7270b6:;
			{
				_15227_cmd+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1aa7294d6:;
			{
				_15227_cmd+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1aa72954c:;
			{
				_15227_cmd+=jule::Str("c++20", 5);
			}
		}
		_match_end_1aa7293b5:;
	}
	_15227_cmd+=jule::Str(" ", 1);
	if (_1e829b746_PRODUCTION) {
		_15227_cmd+=jule::Str("-O3 ", 4);
		_15227_cmd+=jule::Str("-DNDEBUG ", 9);
		_15227_cmd+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		_15227_cmd+=jule::Str("-O0 ", 4);
	}
}



inline std::tuple<jule::Str,jule::Str> _1a7e60060_gen_compile_cmd(jule::Str _17820_source_path,jule::Ptr<_1b737ec89_IR>& _17839_ir) {
	jule::Str &_17910_compiler = _1e829cc75_COMPILER_PATH;
	jule::Str _18013_cmd = jule::Str();
	{
		auto &_match_expr{ _1e829caaa_COMPILER };
		
		if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1aa72b85c:;
			{
				_1a7e5e1e6_push_comp_cmd_gcc(_18013_cmd);
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1aa72bc47:;
			{
				_1a7e70e83_push_comp_cmd_clang(_18013_cmd);
			}
		}
		_match_end_1aa72bb6a:;
	}
	{
		auto &expr = _17839_ir.get()._field_passes;
		auto it = expr.begin();
		_iter_begin_1aa72c8e6:;
		if (it != expr.end()) {
			jule::Str &_1aa72c022_pass = *it;
			{
				_18013_cmd+=_1aa72c022_pass;
				_18013_cmd+=jule::Str(" ", 1);
			}
			_iter_next_1aa72c8e6:;
			++it;
			goto _iter_begin_1aa72c8e6;
		}
		_iter_end_1aa72c8e6:;
	}
	{
		auto &expr = _17839_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1aa72d595:;
		if (it != expr.end()) {
			jule::Ptr<_1a75c928a_ImportInfo> &_1aa72cdbe_u = *it;
			{
				if (_1aa72cdbe_u.get()._field_cpp_linked && _1a7e63ad0_is_cpp_source_file(_1aa72cdbe_u.get()._field_path)) {
					_18013_cmd+=_1aa72cdbe_u.get()._field_path;
					_18013_cmd+=jule::Str(" ", 1);
				}
			}
			_iter_next_1aa72d595:;
			++it;
			goto _iter_begin_1aa72d595;
		}
		_iter_end_1aa72d595:;
	}
	if ((!(_1a7e79ee2_OUT.empty()))) {
		_18013_cmd+=jule::Str("-o ", 3);
		_18013_cmd+=_1a7e79ee2_OUT;
		_18013_cmd+=jule::Str(" ", 1);
	}
	_18013_cmd+=_17820_source_path;
	return std::make_tuple(_17910_compiler,_18013_cmd);
}



inline jule::Str _1a7e678a3_get_compile_path(void) {
	return _1d09a5c6a_join(jule::Slice<jule::Str>({_1a7e69ae7_OUT_DIR,_1a7e6eb74_OUT_NAME}));
}



inline void _1a7e94e30_apply_target_independent_optimizations(jule::Ptr<_1b737ec89_IR>& _22348_ir) {
	if (_1e829b9ee_OPT_DEADCODE) {
		_1b68b08b4_eliminate_defines(_22348_ir);
	}
	jule::Ptr<_1a7d6eb84_Optimizer> _23013_opt = static__1a7d700a2_new(_22348_ir);
	_1a7d714e3_optimize(_23013_opt.ptr());
	if (_1e829b9ee_OPT_DEADCODE) {
		_1b6938b4b_eliminate_scopes(_22348_ir);
	}
}



inline void _1a7e95062_check_compiler_flag(void) {
	{
		auto &_match_expr{ _1e829caaa_COMPILER };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1aa731b2b:;
			{
				_1b69d7ed6_throw(jule::Str("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1aa7313bc:;
			{
				if (_1e829cc75_COMPILER_PATH.empty()) {
					_1e829cc75_COMPILER_PATH=jule::Str("clang++", 7);
				}
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1aa731433:;
			{
				if (_1e829cc75_COMPILER_PATH.empty()) {
					_1e829cc75_COMPILER_PATH=jule::Str("g++", 3);
				}
			}
		}
		else {
			_case_begin_1aa731301:;
			{
				_1b69d7ed6_throw(jule::Str("invalid option value for --compiler: ", 37) + _1e829caaa_COMPILER);
			}
		}
		_match_end_1aa731675:;
	}
}



inline void _1a7e95194_check_target_arch(jule::Str _25622_arch) {
	{
		auto &expr = _1d001c4be_DISTARCH;
		auto it = expr.begin();
		_iter_begin_1aa732d5d:;
		if (it != expr.end()) {
			jule::Str &_1aa732368_distarch = *it;
			{
				if (_25622_arch == _1aa732368_distarch) {
					return;
				}
			}
			_iter_next_1aa732d5d:;
			++it;
			goto _iter_begin_1aa732d5d;
		}
		_iter_end_1aa732d5d:;
	}
	_1b69d7ed6_throw(jule::Str("--target: unsupported/undefined architecture: ", 46) + _25622_arch);
}



inline void _1a7e952c6_check_target_os(jule::Str _26520_os) {
	{
		auto &expr = _1d001c2c1_DISTOS;
		auto it = expr.begin();
		_iter_begin_1aa734898:;
		if (it != expr.end()) {
			jule::Str &_1aa734920_distos = *it;
			{
				if (_26520_os == _1aa734920_distos) {
					return;
				}
			}
			_iter_next_1aa734898:;
			++it;
			goto _iter_begin_1aa734898;
		}
		_iter_end_1aa734898:;
	}
	_1b69d7ed6_throw(jule::Str("--target: unsupported/undefined operating system: ", 50) + _26520_os);
}



inline void _1a7e95408_check_target_flag(jule::Str& _27423_target) {
	if (_27423_target.empty()) {
		_1b69d7ed6_throw(jule::Str("missing option value: --target", 30));
	}
	jule::Slice<jule::Str> _2799_parts = _1d09a3927_split(_27423_target,jule::Str("-", 1),-1LL);
	if ((_2799_parts.len() != 2LL)) {
		_1b69d7ed6_throw(jule::Str("--target: undefined platform target format: ", 44) + _27423_target);
	}
	jule::Str _28410_os = _2799_parts[0LL];
	jule::Str _28414_arch = _2799_parts[1LL];
	std::tie(_28410_os,_28414_arch) = std::make_tuple(_2799_parts[0LL],_2799_parts[1LL]);
	if ((_28410_os != jule::Str("native", 6))) {
		_1a7e952c6_check_target_os(_28410_os);
		_1d003c28b_OS=_28410_os;
	}
	if ((_28414_arch != jule::Str("native", 6))) {
		_1a7e95194_check_target_arch(_28414_arch);
		_1d003d127_ARCH=_28414_arch;
	}
	_1a75a8b0a_update_target();
}



inline void _1a7e9576b_check_opt_flag(jule::Str& _29720_opt) {
	if (_29720_opt.empty()) {
		_1b69d7ed6_throw(jule::Str("missing option value: --opt", 27));
	}
	{
		auto &_match_expr{ _29720_opt };
		
		if (_match_expr == jule::Str("L0", 2)) {
			_case_begin_1aa739d21:;
		}
		else if (_match_expr == jule::Str("L1", 2)) {
			_case_begin_1aa739c77:;
			{
				_1e829c68c_push_opt_level(static_cast<jule::I64>(1LL));
			}
		}
		else {
			_case_begin_1aa73935e:;
			{
				_1b69d7ed6_throw(jule::Str("--opt: invalid optimization level: ", 35) + _29720_opt);
			}
		}
		_match_end_1aa73913e:;
	}
}



inline void _1a7e9589d_check_cpp_std_flag(void) {
	{
		auto &_match_expr{ _1e829cdeb_CPP_STD };
		
		if (_match_expr == jule::Str("cpp14", 5) || _match_expr == jule::Str("cpp17", 5) || _match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1aa73b0a8:;
			{
				goto _match_end_1aa73a53b;
			}
		}
		else {
			_case_begin_1aa73a591:;
			{
				_1b69d7ed6_throw(jule::Str("--cppstd: invalid optimization level: ", 38) + _1e829cdeb_CPP_STD);
			}
		}
		_match_end_1aa73a53b:;
	}
}



inline jule::Slice<jule::Str> _1a7e959d0_check_flags(jule::Slice<jule::Str>& _32217_args) {
	jule::Str _32313_opt = jule::Str("L0", 2);
	jule::Str _32413_target = jule::Str("native-native", 13);
	jule::Ptr<_1a7e91118_FlagSet> _32613_fs = static__1a7e91404_new();
	_1a7e932d5_add_var_0(_32613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_32313_opt)))),jule::Str("opt", 3),0LL,jule::Str("Optimization level", 18));
	_1a7e932d5_add_var_0(_32613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_32413_target)))),jule::Str("target", 6),0LL,jule::Str("Target system", 13));
	_1a7e932d5_add_var_0(_32613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1a7e79ee2_OUT)))),jule::Str("out", 3),'o',jule::Str("Output identifier", 17));
	_1a7e932d5_add_var_1(_32613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e829d0b6_SHADOWING)))),jule::Str("shadowing", 9),0LL,jule::Str("Allow shadowing", 15));
	_1a7e932d5_add_var_1(_32613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e829d23c_TRANSPILATION)))),jule::Str("transpile", 9),'t',jule::Str("Transpile code", 14));
	_1a7e932d5_add_var_0(_32613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1e829caaa_COMPILER)))),jule::Str("compiler", 8),0LL,jule::Str("Backend compiler", 16));
	_1a7e932d5_add_var_0(_32613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1e829cc75_COMPILER_PATH)))),jule::Str("compiler-path", 13),0LL,jule::Str("Path of backend compiler", 24));
	_1a7e932d5_add_var_1(_32613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e829b746_PRODUCTION)))),jule::Str("production", 10),'p',jule::Str("Compile for production", 22));
	_1a7e932d5_add_var_1(_32613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e829d539_RC)))),jule::Str("disable-rc", 10),0LL,jule::Str("Disable reference counting", 26));
	_1a7e932d5_add_var_1(_32613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e829d748_SAFETY)))),jule::Str("disable-safety", 14),0LL,jule::Str("Disable safety", 14));
	_1a7e932d5_add_var_0(_32613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1e829cdeb_CPP_STD)))),jule::Str("cppstd", 6),0LL,jule::Str("C++ standard", 12));
	_1a7e932d5_add_var_1(_32613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e829b878_OPT_COPY)))),jule::Str("opt-copy", 8),0LL,jule::Str("Copy optimization", 17));
	_1a7e932d5_add_var_1(_32613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e829b9ee_OPT_DEADCODE)))),jule::Str("opt-deadcode", 12),0LL,jule::Str("Deadcode optimization", 21));
	_1a7e932d5_add_var_1(_32613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e829bbb9_OPT_APPEND)))),jule::Str("opt-append", 10),0LL,jule::Str("Append optimization", 19));
	_1a7e932d5_add_var_1(_32613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e829bd40_OPT_MATH)))),jule::Str("opt-math", 8),0LL,jule::Str("Math optimization", 17));
	_1a7e932d5_add_var_1(_32613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e829beb6_OPT_ACCESS)))),jule::Str("opt-access", 10),0LL,jule::Str("Access optimization", 19));
	_1a7e932d5_add_var_1(_32613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e829c13c_OPT_INLINE)))),jule::Str("opt-inline", 10),0LL,jule::Str("Inline optimization", 19));
	_1a7e932d5_add_var_1(_32613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e829c34b_OPT_PTR)))),jule::Str("opt-ptr", 7),0LL,jule::Str("Pointer optimizations", 21));
	_1a7e932d5_add_var_1(_32613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e829c4c2_OPT_COND)))),jule::Str("opt-cond", 8),0LL,jule::Str("Conditional optimizations", 25));
	jule::Slice<jule::Str> _34813_content = ({
		auto except = _1a7e9224b_parse(_32613_fs.ptr(), _32217_args);
		(except.ok()) ? (except.result) : ({
			_1b69d7ed6_throw(except.error.operator jule::Str());
			nullptr;
		});
	});
	_1a7e95062_check_compiler_flag();
	_1a7e9589d_check_cpp_std_flag();
	_1a7e95408_check_target_flag(_32413_target);
	_1a7e9576b_check_opt_flag(_32313_opt);
	return _34813_content;
}



inline void _1a7e95b12_setup_sema_flags(jule::I64& _36126_flags) {
	if (_1e829d0b6_SHADOWING) {
		_36126_flags|=static_cast<jule::I64>(1LL);
	}
}



inline jule::Ptr<_1b737ec89_IR> _1a7e95c44_build_ir(jule::Slice<jule::Str>& _36714_args) {
	jule::Slice<jule::Str> _3689_content = _1a7e959d0_check_flags(_36714_args);
	jule::I64 _37013_sema_flags = static_cast<jule::I64>(0LL);
	_1a7e95b12_setup_sema_flags(_37013_sema_flags);
	if ((_3689_content.len() == 0LL)) {
		_1b69d7ed6_throw(_1d0019664_logf(jule::Str("missing compile path", 20),jule::Slice<jule::Any>()));
	} else if ((_3689_content.len() > 1LL)) {
		_1b69d7ed6_throw(jule::Str("undefined content: ", 19) + _3689_content[1LL]);
	}
	jule::Str _37814_path;
	jule::Bool _37820_ok;
	std::tie(_37814_path,_37820_ok) = _1d09a62a9_abs(_3689_content[0LL]);
	if ((!(_37820_ok))) {
		_1b69d7ed6_throw(jule::Str("compile path could not processed because of a problem", 53));
	}
	jule::Ptr<_1e9dab5b8_Status> _3849_inf = ({
		auto except = static__1d09a8058_of(_1d002c897_PATH_STDLIB);
		(except.ok()) ? (except.result) : ({{
			_1b69d7ed6_throw(_1d0019664_logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
			return nullptr;
			return nullptr;
		} jule::Ptr<_1e9dab5b8_Status>();});
	});
	if ((!(_1e9dab9b4_is_dir(_3849_inf.ptr())))) {
		_1b69d7ed6_throw(_1d0019664_logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
	}
	jule::Ptr<_1b737ec89_IR> _39214_ir;
	jule::Slice<_1d0019224_Log> _39218_logs;
	std::tie(_39214_ir,_39218_logs) = static__1b6607056_build(_37814_path,_37013_sema_flags);
	if ((_39214_ir == nullptr) && (_39218_logs == nullptr)) {
		_1b69d7ed6_throw(_1d0019664_logf(jule::Str("there is no Jule source code in package: @", 42),jule::Slice<jule::Any>({jule::Any(_37814_path)})));
	}
	if ((_39218_logs != nullptr)) {
		static__1b698ced0_print_logs(_39218_logs);
		_1b69d7ed6_throw(jule::Str());
	}
	return _39214_ir;
}



inline void _1a7e95d76_compile_command(jule::Slice<jule::Str>& _40725_args) {
	_40725_args=_40725_args.slice(1LL);
	if ((_40725_args[0LL] == jule::Str("test", 4))) {
		_1e829d3b3_TEST=true;
		_40725_args=_40725_args.slice(1LL);
	}
	jule::Ptr<_1b737ec89_IR> _41313_ir = _1a7e95c44_build_ir(_40725_args);
	
	if ((!(_1e829d3b3_TEST))) {
		jule::Ptr<_1a6426a45_Fn> _41817_f = _1a75cd6e0_find_fn(_41313_ir.get()._field_main.ptr(), jule::Str("main", 4),false);
		if ((_41817_f == nullptr)) {
			_1b69d7ed6_throw(_1d0019664_logf(jule::Str("missing entry point: entry point (main) function is not defined", 63),jule::Slice<jule::Any>()));
		}
		_41817_f.get()._field_statically=true;
	}
	jule::Ptr<_1a6426a45_Fn> _42413_f = _1a75cd6e0_find_fn(_41313_ir.get()._field_main.ptr(), jule::Str("init", 4),false);
	if ((_42413_f != nullptr)) {
		_42413_f.get()._field_statically=true;
	}
	_1a7e94e30_apply_target_independent_optimizations(_41313_ir);
	_1b66ad3b5_order(_41313_ir.ptr());
	jule::Str _43410_compiler;
	jule::Str _43420_compiler_cmd;
	std::tie(_43410_compiler,_43420_compiler_cmd) = _1a7e60060_gen_compile_cmd(_1a7e678a3_get_compile_path(),_41313_ir);
	jule::Ptr<_1d0a43aa5_ObjectCoder> _43613_oc = static__1d09a8861_new(_41313_ir,_1d0a436cb_SerializationInfo(_43410_compiler,_43420_compiler_cmd));
	jule::Str _44013_obj = _1d0a4d719_serialize(_43613_oc.ptr());
	if (_1e829d3b3_TEST) {
		jule::Ptr<_1a7bdc5a1_TestCoder> _44317_tc = static__1a7bdc78d_new(_43613_oc);
		_1a7c207e3_serialize(_44317_tc.ptr(), _44013_obj);
	}
	_1d0a4d4a5_append_standard(_43613_oc.ptr(), _44013_obj);
	_1a7e5e4b0_do_spell(_44013_obj,_43410_compiler,_43420_compiler_cmd);
}




void __jule_call_initializers(void) {
	_1e829b746_PRODUCTION = false;
	_1e829b878_OPT_COPY = false;
	_1e829b9ee_OPT_DEADCODE = false;
	_1e829bbb9_OPT_APPEND = false;
	_1e829bd40_OPT_MATH = false;
	_1e829beb6_OPT_ACCESS = false;
	_1e829c13c_OPT_INLINE = false;
	_1e829c34b_OPT_PTR = false;
	_1e829c4c2_OPT_COND = false;
	_1e829caaa_COMPILER = jule::Str();
	_1e829cc75_COMPILER_PATH = jule::Str();
	_1e829cdeb_CPP_STD = jule::Str("cpp17", 5);
	_1e829d0b6_SHADOWING = false;
	_1e829d23c_TRANSPILATION = false;
	_1e829d3b3_TEST = false;
	_1e829d539_RC = true;
	_1e829d748_SAFETY = true;
	_1e9d98a06_STDIN = _1e9d9909a_get_std_handle(static_cast<jule::U64>(18446744073709551606LLU));
	_1e9d98b7c_STDOUT = _1e9d9909a_get_std_handle(static_cast<jule::U64>(18446744073709551605LLU));
	_1e9d98d47_STDERR = _1e9d9909a_get_std_handle(static_cast<jule::U64>(18446744073709551604LLU));
	_1e9e8e3d2_FIRST = jule::Array<jule::U8,256>({});
	_1e9e8ebc9_ACCEPT_RANGES = jule::Array<_1e9e8e954_accept_range,16>({_1e9e8e954_accept_range(128LLU,191LLU),_1e9e8e954_accept_range(160LLU,191LLU),_1e9e8e954_accept_range(128LLU,159LLU),_1e9e8e954_accept_range(144LLU,191LLU),_1e9e8e954_accept_range(128LLU,143LLU)});
	_1d09685e0__L = jule::new_ptr<_1d09a04c3_RangeTable>(_1d09a04c3_RangeTable(jule::Slice<_1d099ea88_Range16>({_1d099ea88_Range16(65LLU,90LLU,1LLU),_1d099ea88_Range16(97LLU,122LLU,1LLU),_1d099ea88_Range16(170LLU,181LLU,11LLU),_1d099ea88_Range16(186LLU,192LLU,6LLU),_1d099ea88_Range16(193LLU,214LLU,1LLU),_1d099ea88_Range16(216LLU,246LLU,1LLU),_1d099ea88_Range16(248LLU,705LLU,1LLU),_1d099ea88_Range16(710LLU,721LLU,1LLU),_1d099ea88_Range16(736LLU,740LLU,1LLU),_1d099ea88_Range16(748LLU,750LLU,2LLU),_1d099ea88_Range16(880LLU,884LLU,1LLU),_1d099ea88_Range16(886LLU,887LLU,1LLU),_1d099ea88_Range16(890LLU,893LLU,1LLU),_1d099ea88_Range16(895LLU,902LLU,7LLU),_1d099ea88_Range16(904LLU,906LLU,1LLU),_1d099ea88_Range16(908LLU,910LLU,2LLU),_1d099ea88_Range16(911LLU,929LLU,1LLU),_1d099ea88_Range16(931LLU,1013LLU,1LLU),_1d099ea88_Range16(1015LLU,1153LLU,1LLU),_1d099ea88_Range16(1162LLU,1327LLU,1LLU),_1d099ea88_Range16(1329LLU,1366LLU,1LLU),_1d099ea88_Range16(1369LLU,1376LLU,7LLU),_1d099ea88_Range16(1377LLU,1416LLU,1LLU),_1d099ea88_Range16(1488LLU,1514LLU,1LLU),_1d099ea88_Range16(1519LLU,1522LLU,1LLU),_1d099ea88_Range16(1568LLU,1610LLU,1LLU),_1d099ea88_Range16(1646LLU,1647LLU,1LLU),_1d099ea88_Range16(1649LLU,1747LLU,1LLU),_1d099ea88_Range16(1749LLU,1765LLU,16LLU),_1d099ea88_Range16(1766LLU,1774LLU,8LLU),_1d099ea88_Range16(1775LLU,1786LLU,11LLU),_1d099ea88_Range16(1787LLU,1788LLU,1LLU),_1d099ea88_Range16(1791LLU,1808LLU,17LLU),_1d099ea88_Range16(1810LLU,1839LLU,1LLU),_1d099ea88_Range16(1869LLU,1957LLU,1LLU),_1d099ea88_Range16(1969LLU,1994LLU,25LLU),_1d099ea88_Range16(1995LLU,2026LLU,1LLU),_1d099ea88_Range16(2036LLU,2037LLU,1LLU),_1d099ea88_Range16(2042LLU,2048LLU,6LLU),_1d099ea88_Range16(2049LLU,2069LLU,1LLU),_1d099ea88_Range16(2074LLU,2084LLU,10LLU),_1d099ea88_Range16(2088LLU,2112LLU,24LLU),_1d099ea88_Range16(2113LLU,2136LLU,1LLU),_1d099ea88_Range16(2144LLU,2154LLU,1LLU),_1d099ea88_Range16(2160LLU,2183LLU,1LLU),_1d099ea88_Range16(2185LLU,2190LLU,1LLU),_1d099ea88_Range16(2208LLU,2249LLU,1LLU),_1d099ea88_Range16(2308LLU,2361LLU,1LLU),_1d099ea88_Range16(2365LLU,2384LLU,19LLU),_1d099ea88_Range16(2392LLU,2401LLU,1LLU),_1d099ea88_Range16(2417LLU,2432LLU,1LLU),_1d099ea88_Range16(2437LLU,2444LLU,1LLU),_1d099ea88_Range16(2447LLU,2448LLU,1LLU),_1d099ea88_Range16(2451LLU,2472LLU,1LLU),_1d099ea88_Range16(2474LLU,2480LLU,1LLU),_1d099ea88_Range16(2482LLU,2486LLU,4LLU),_1d099ea88_Range16(2487LLU,2489LLU,1LLU),_1d099ea88_Range16(2493LLU,2510LLU,17LLU),_1d099ea88_Range16(2524LLU,2525LLU,1LLU),_1d099ea88_Range16(2527LLU,2529LLU,1LLU),_1d099ea88_Range16(2544LLU,2545LLU,1LLU),_1d099ea88_Range16(2556LLU,2565LLU,9LLU),_1d099ea88_Range16(2566LLU,2570LLU,1LLU),_1d099ea88_Range16(2575LLU,2576LLU,1LLU),_1d099ea88_Range16(2579LLU,2600LLU,1LLU),_1d099ea88_Range16(2602LLU,2608LLU,1LLU),_1d099ea88_Range16(2610LLU,2611LLU,1LLU),_1d099ea88_Range16(2613LLU,2614LLU,1LLU),_1d099ea88_Range16(2616LLU,2617LLU,1LLU),_1d099ea88_Range16(2649LLU,2652LLU,1LLU),_1d099ea88_Range16(2654LLU,2674LLU,20LLU),_1d099ea88_Range16(2675LLU,2676LLU,1LLU),_1d099ea88_Range16(2693LLU,2701LLU,1LLU),_1d099ea88_Range16(2703LLU,2705LLU,1LLU),_1d099ea88_Range16(2707LLU,2728LLU,1LLU),_1d099ea88_Range16(2730LLU,2736LLU,1LLU),_1d099ea88_Range16(2738LLU,2739LLU,1LLU),_1d099ea88_Range16(2741LLU,2745LLU,1LLU),_1d099ea88_Range16(2749LLU,2768LLU,19LLU),_1d099ea88_Range16(2784LLU,2785LLU,1LLU),_1d099ea88_Range16(2809LLU,2821LLU,12LLU),_1d099ea88_Range16(2822LLU,2828LLU,1LLU),_1d099ea88_Range16(2831LLU,2832LLU,1LLU),_1d099ea88_Range16(2835LLU,2856LLU,1LLU),_1d099ea88_Range16(2858LLU,2864LLU,1LLU),_1d099ea88_Range16(2866LLU,2867LLU,1LLU),_1d099ea88_Range16(2869LLU,2873LLU,1LLU),_1d099ea88_Range16(2877LLU,2908LLU,31LLU),_1d099ea88_Range16(2909LLU,2911LLU,2LLU),_1d099ea88_Range16(2912LLU,2913LLU,1LLU),_1d099ea88_Range16(2929LLU,2947LLU,18LLU),_1d099ea88_Range16(2949LLU,2954LLU,1LLU),_1d099ea88_Range16(2958LLU,2960LLU,1LLU),_1d099ea88_Range16(2962LLU,2965LLU,1LLU),_1d099ea88_Range16(2969LLU,2970LLU,1LLU),_1d099ea88_Range16(2972LLU,2974LLU,2LLU),_1d099ea88_Range16(2975LLU,2979LLU,4LLU),_1d099ea88_Range16(2980LLU,2984LLU,4LLU),_1d099ea88_Range16(2985LLU,2986LLU,1LLU),_1d099ea88_Range16(2990LLU,3001LLU,1LLU),_1d099ea88_Range16(3024LLU,3077LLU,53LLU),_1d099ea88_Range16(3078LLU,3084LLU,1LLU),_1d099ea88_Range16(3086LLU,3088LLU,1LLU),_1d099ea88_Range16(3090LLU,3112LLU,1LLU),_1d099ea88_Range16(3114LLU,3129LLU,1LLU),_1d099ea88_Range16(3133LLU,3160LLU,27LLU),_1d099ea88_Range16(3161LLU,3162LLU,1LLU),_1d099ea88_Range16(3165LLU,3168LLU,3LLU),_1d099ea88_Range16(3169LLU,3200LLU,31LLU),_1d099ea88_Range16(3205LLU,3212LLU,1LLU),_1d099ea88_Range16(3214LLU,3216LLU,1LLU),_1d099ea88_Range16(3218LLU,3240LLU,1LLU),_1d099ea88_Range16(3242LLU,3251LLU,1LLU),_1d099ea88_Range16(3253LLU,3257LLU,1LLU),_1d099ea88_Range16(3261LLU,3293LLU,32LLU),_1d099ea88_Range16(3294LLU,3296LLU,2LLU),_1d099ea88_Range16(3297LLU,3313LLU,16LLU),_1d099ea88_Range16(3314LLU,3332LLU,18LLU),_1d099ea88_Range16(3333LLU,3340LLU,1LLU),_1d099ea88_Range16(3342LLU,3344LLU,1LLU),_1d099ea88_Range16(3346LLU,3386LLU,1LLU),_1d099ea88_Range16(3389LLU,3406LLU,17LLU),_1d099ea88_Range16(3412LLU,3414LLU,1LLU),_1d099ea88_Range16(3423LLU,3425LLU,1LLU),_1d099ea88_Range16(3450LLU,3455LLU,1LLU),_1d099ea88_Range16(3461LLU,3478LLU,1LLU),_1d099ea88_Range16(3482LLU,3505LLU,1LLU),_1d099ea88_Range16(3507LLU,3515LLU,1LLU),_1d099ea88_Range16(3517LLU,3520LLU,3LLU),_1d099ea88_Range16(3521LLU,3526LLU,1LLU),_1d099ea88_Range16(3585LLU,3632LLU,1LLU),_1d099ea88_Range16(3634LLU,3635LLU,1LLU),_1d099ea88_Range16(3648LLU,3654LLU,1LLU),_1d099ea88_Range16(3713LLU,3714LLU,1LLU),_1d099ea88_Range16(3716LLU,3718LLU,2LLU),_1d099ea88_Range16(3719LLU,3722LLU,1LLU),_1d099ea88_Range16(3724LLU,3747LLU,1LLU),_1d099ea88_Range16(3749LLU,3751LLU,2LLU),_1d099ea88_Range16(3752LLU,3760LLU,1LLU),_1d099ea88_Range16(3762LLU,3763LLU,1LLU),_1d099ea88_Range16(3773LLU,3776LLU,3LLU),_1d099ea88_Range16(3777LLU,3780LLU,1LLU),_1d099ea88_Range16(3782LLU,3804LLU,22LLU),_1d099ea88_Range16(3805LLU,3807LLU,1LLU),_1d099ea88_Range16(3840LLU,3904LLU,64LLU),_1d099ea88_Range16(3905LLU,3911LLU,1LLU),_1d099ea88_Range16(3913LLU,3948LLU,1LLU),_1d099ea88_Range16(3976LLU,3980LLU,1LLU),_1d099ea88_Range16(4096LLU,4138LLU,1LLU),_1d099ea88_Range16(4159LLU,4176LLU,17LLU),_1d099ea88_Range16(4177LLU,4181LLU,1LLU),_1d099ea88_Range16(4186LLU,4189LLU,1LLU),_1d099ea88_Range16(4193LLU,4197LLU,4LLU),_1d099ea88_Range16(4198LLU,4206LLU,8LLU),_1d099ea88_Range16(4207LLU,4208LLU,1LLU),_1d099ea88_Range16(4213LLU,4225LLU,1LLU),_1d099ea88_Range16(4238LLU,4256LLU,18LLU),_1d099ea88_Range16(4257LLU,4293LLU,1LLU),_1d099ea88_Range16(4295LLU,4301LLU,6LLU),_1d099ea88_Range16(4304LLU,4346LLU,1LLU),_1d099ea88_Range16(4348LLU,4680LLU,1LLU),_1d099ea88_Range16(4682LLU,4685LLU,1LLU),_1d099ea88_Range16(4688LLU,4694LLU,1LLU),_1d099ea88_Range16(4696LLU,4698LLU,2LLU),_1d099ea88_Range16(4699LLU,4701LLU,1LLU),_1d099ea88_Range16(4704LLU,4744LLU,1LLU),_1d099ea88_Range16(4746LLU,4749LLU,1LLU),_1d099ea88_Range16(4752LLU,4784LLU,1LLU),_1d099ea88_Range16(4786LLU,4789LLU,1LLU),_1d099ea88_Range16(4792LLU,4798LLU,1LLU),_1d099ea88_Range16(4800LLU,4802LLU,2LLU),_1d099ea88_Range16(4803LLU,4805LLU,1LLU),_1d099ea88_Range16(4808LLU,4822LLU,1LLU),_1d099ea88_Range16(4824LLU,4880LLU,1LLU),_1d099ea88_Range16(4882LLU,4885LLU,1LLU),_1d099ea88_Range16(4888LLU,4954LLU,1LLU),_1d099ea88_Range16(4992LLU,5007LLU,1LLU),_1d099ea88_Range16(5024LLU,5109LLU,1LLU),_1d099ea88_Range16(5112LLU,5117LLU,1LLU),_1d099ea88_Range16(5121LLU,5740LLU,1LLU),_1d099ea88_Range16(5743LLU,5759LLU,1LLU),_1d099ea88_Range16(5761LLU,5786LLU,1LLU),_1d099ea88_Range16(5792LLU,5866LLU,1LLU),_1d099ea88_Range16(5873LLU,5880LLU,1LLU),_1d099ea88_Range16(5888LLU,5905LLU,1LLU),_1d099ea88_Range16(5919LLU,5937LLU,1LLU),_1d099ea88_Range16(5952LLU,5969LLU,1LLU),_1d099ea88_Range16(5984LLU,5996LLU,1LLU),_1d099ea88_Range16(5998LLU,6000LLU,1LLU),_1d099ea88_Range16(6016LLU,6067LLU,1LLU),_1d099ea88_Range16(6103LLU,6108LLU,5LLU),_1d099ea88_Range16(6176LLU,6264LLU,1LLU),_1d099ea88_Range16(6272LLU,6276LLU,1LLU),_1d099ea88_Range16(6279LLU,6312LLU,1LLU),_1d099ea88_Range16(6314LLU,6320LLU,6LLU),_1d099ea88_Range16(6321LLU,6389LLU,1LLU),_1d099ea88_Range16(6400LLU,6430LLU,1LLU),_1d099ea88_Range16(6480LLU,6509LLU,1LLU),_1d099ea88_Range16(6512LLU,6516LLU,1LLU),_1d099ea88_Range16(6528LLU,6571LLU,1LLU),_1d099ea88_Range16(6576LLU,6601LLU,1LLU),_1d099ea88_Range16(6656LLU,6678LLU,1LLU),_1d099ea88_Range16(6688LLU,6740LLU,1LLU),_1d099ea88_Range16(6823LLU,6917LLU,94LLU),_1d099ea88_Range16(6918LLU,6963LLU,1LLU),_1d099ea88_Range16(6981LLU,6988LLU,1LLU),_1d099ea88_Range16(7043LLU,7072LLU,1LLU),_1d099ea88_Range16(7086LLU,7087LLU,1LLU),_1d099ea88_Range16(7098LLU,7141LLU,1LLU),_1d099ea88_Range16(7168LLU,7203LLU,1LLU),_1d099ea88_Range16(7245LLU,7247LLU,1LLU),_1d099ea88_Range16(7258LLU,7293LLU,1LLU),_1d099ea88_Range16(7296LLU,7304LLU,1LLU),_1d099ea88_Range16(7312LLU,7354LLU,1LLU),_1d099ea88_Range16(7357LLU,7359LLU,1LLU),_1d099ea88_Range16(7401LLU,7404LLU,1LLU),_1d099ea88_Range16(7406LLU,7411LLU,1LLU),_1d099ea88_Range16(7413LLU,7414LLU,1LLU),_1d099ea88_Range16(7418LLU,7424LLU,6LLU),_1d099ea88_Range16(7425LLU,7615LLU,1LLU),_1d099ea88_Range16(7680LLU,7957LLU,1LLU),_1d099ea88_Range16(7960LLU,7965LLU,1LLU),_1d099ea88_Range16(7968LLU,8005LLU,1LLU),_1d099ea88_Range16(8008LLU,8013LLU,1LLU),_1d099ea88_Range16(8016LLU,8023LLU,1LLU),_1d099ea88_Range16(8025LLU,8031LLU,2LLU),_1d099ea88_Range16(8032LLU,8061LLU,1LLU),_1d099ea88_Range16(8064LLU,8116LLU,1LLU),_1d099ea88_Range16(8118LLU,8124LLU,1LLU),_1d099ea88_Range16(8126LLU,8130LLU,4LLU),_1d099ea88_Range16(8131LLU,8132LLU,1LLU),_1d099ea88_Range16(8134LLU,8140LLU,1LLU),_1d099ea88_Range16(8144LLU,8147LLU,1LLU),_1d099ea88_Range16(8150LLU,8155LLU,1LLU),_1d099ea88_Range16(8160LLU,8172LLU,1LLU),_1d099ea88_Range16(8178LLU,8180LLU,1LLU),_1d099ea88_Range16(8182LLU,8188LLU,1LLU),_1d099ea88_Range16(8305LLU,8319LLU,14LLU),_1d099ea88_Range16(8336LLU,8348LLU,1LLU),_1d099ea88_Range16(8450LLU,8455LLU,5LLU),_1d099ea88_Range16(8458LLU,8467LLU,1LLU),_1d099ea88_Range16(8469LLU,8473LLU,4LLU),_1d099ea88_Range16(8474LLU,8477LLU,1LLU),_1d099ea88_Range16(8484LLU,8490LLU,2LLU),_1d099ea88_Range16(8491LLU,8493LLU,1LLU),_1d099ea88_Range16(8495LLU,8505LLU,1LLU),_1d099ea88_Range16(8508LLU,8511LLU,1LLU),_1d099ea88_Range16(8517LLU,8521LLU,1LLU),_1d099ea88_Range16(8526LLU,8579LLU,53LLU),_1d099ea88_Range16(8580LLU,11264LLU,2684LLU),_1d099ea88_Range16(11265LLU,11492LLU,1LLU),_1d099ea88_Range16(11499LLU,11502LLU,1LLU),_1d099ea88_Range16(11506LLU,11507LLU,1LLU),_1d099ea88_Range16(11520LLU,11557LLU,1LLU),_1d099ea88_Range16(11559LLU,11565LLU,6LLU),_1d099ea88_Range16(11568LLU,11623LLU,1LLU),_1d099ea88_Range16(11631LLU,11648LLU,17LLU),_1d099ea88_Range16(11649LLU,11670LLU,1LLU),_1d099ea88_Range16(11680LLU,11686LLU,1LLU),_1d099ea88_Range16(11688LLU,11694LLU,1LLU),_1d099ea88_Range16(11696LLU,11702LLU,1LLU),_1d099ea88_Range16(11704LLU,11710LLU,1LLU),_1d099ea88_Range16(11712LLU,11718LLU,1LLU),_1d099ea88_Range16(11720LLU,11726LLU,1LLU),_1d099ea88_Range16(11728LLU,11734LLU,1LLU),_1d099ea88_Range16(11736LLU,11742LLU,1LLU),_1d099ea88_Range16(11823LLU,12293LLU,470LLU),_1d099ea88_Range16(12294LLU,12337LLU,43LLU),_1d099ea88_Range16(12338LLU,12341LLU,1LLU),_1d099ea88_Range16(12347LLU,12348LLU,1LLU),_1d099ea88_Range16(12353LLU,12438LLU,1LLU),_1d099ea88_Range16(12445LLU,12447LLU,1LLU),_1d099ea88_Range16(12449LLU,12538LLU,1LLU),_1d099ea88_Range16(12540LLU,12543LLU,1LLU),_1d099ea88_Range16(12549LLU,12591LLU,1LLU),_1d099ea88_Range16(12593LLU,12686LLU,1LLU),_1d099ea88_Range16(12704LLU,12735LLU,1LLU),_1d099ea88_Range16(12784LLU,12799LLU,1LLU),_1d099ea88_Range16(13312LLU,19903LLU,1LLU),_1d099ea88_Range16(19968LLU,42124LLU,1LLU),_1d099ea88_Range16(42192LLU,42237LLU,1LLU),_1d099ea88_Range16(42240LLU,42508LLU,1LLU),_1d099ea88_Range16(42512LLU,42527LLU,1LLU),_1d099ea88_Range16(42538LLU,42539LLU,1LLU),_1d099ea88_Range16(42560LLU,42606LLU,1LLU),_1d099ea88_Range16(42623LLU,42653LLU,1LLU),_1d099ea88_Range16(42656LLU,42725LLU,1LLU),_1d099ea88_Range16(42775LLU,42783LLU,1LLU),_1d099ea88_Range16(42786LLU,42888LLU,1LLU),_1d099ea88_Range16(42891LLU,42954LLU,1LLU),_1d099ea88_Range16(42960LLU,42961LLU,1LLU),_1d099ea88_Range16(42963LLU,42965LLU,2LLU),_1d099ea88_Range16(42966LLU,42969LLU,1LLU),_1d099ea88_Range16(42994LLU,43009LLU,1LLU),_1d099ea88_Range16(43011LLU,43013LLU,1LLU),_1d099ea88_Range16(43015LLU,43018LLU,1LLU),_1d099ea88_Range16(43020LLU,43042LLU,1LLU),_1d099ea88_Range16(43072LLU,43123LLU,1LLU),_1d099ea88_Range16(43138LLU,43187LLU,1LLU),_1d099ea88_Range16(43250LLU,43255LLU,1LLU),_1d099ea88_Range16(43259LLU,43261LLU,2LLU),_1d099ea88_Range16(43262LLU,43274LLU,12LLU),_1d099ea88_Range16(43275LLU,43301LLU,1LLU),_1d099ea88_Range16(43312LLU,43334LLU,1LLU),_1d099ea88_Range16(43360LLU,43388LLU,1LLU),_1d099ea88_Range16(43396LLU,43442LLU,1LLU),_1d099ea88_Range16(43471LLU,43488LLU,17LLU),_1d099ea88_Range16(43489LLU,43492LLU,1LLU),_1d099ea88_Range16(43494LLU,43503LLU,1LLU),_1d099ea88_Range16(43514LLU,43518LLU,1LLU),_1d099ea88_Range16(43520LLU,43560LLU,1LLU),_1d099ea88_Range16(43584LLU,43586LLU,1LLU),_1d099ea88_Range16(43588LLU,43595LLU,1LLU),_1d099ea88_Range16(43616LLU,43638LLU,1LLU),_1d099ea88_Range16(43642LLU,43646LLU,4LLU),_1d099ea88_Range16(43647LLU,43695LLU,1LLU),_1d099ea88_Range16(43697LLU,43701LLU,4LLU),_1d099ea88_Range16(43702LLU,43705LLU,3LLU),_1d099ea88_Range16(43706LLU,43709LLU,1LLU),_1d099ea88_Range16(43712LLU,43714LLU,2LLU),_1d099ea88_Range16(43739LLU,43741LLU,1LLU),_1d099ea88_Range16(43744LLU,43754LLU,1LLU),_1d099ea88_Range16(43762LLU,43764LLU,1LLU),_1d099ea88_Range16(43777LLU,43782LLU,1LLU),_1d099ea88_Range16(43785LLU,43790LLU,1LLU),_1d099ea88_Range16(43793LLU,43798LLU,1LLU),_1d099ea88_Range16(43808LLU,43814LLU,1LLU),_1d099ea88_Range16(43816LLU,43822LLU,1LLU),_1d099ea88_Range16(43824LLU,43866LLU,1LLU),_1d099ea88_Range16(43868LLU,43881LLU,1LLU),_1d099ea88_Range16(43888LLU,44002LLU,1LLU),_1d099ea88_Range16(44032LLU,55203LLU,1LLU),_1d099ea88_Range16(55216LLU,55238LLU,1LLU),_1d099ea88_Range16(55243LLU,55291LLU,1LLU),_1d099ea88_Range16(63744LLU,64109LLU,1LLU),_1d099ea88_Range16(64112LLU,64217LLU,1LLU),_1d099ea88_Range16(64256LLU,64262LLU,1LLU),_1d099ea88_Range16(64275LLU,64279LLU,1LLU),_1d099ea88_Range16(64285LLU,64287LLU,2LLU),_1d099ea88_Range16(64288LLU,64296LLU,1LLU),_1d099ea88_Range16(64298LLU,64310LLU,1LLU),_1d099ea88_Range16(64312LLU,64316LLU,1LLU),_1d099ea88_Range16(64318LLU,64320LLU,2LLU),_1d099ea88_Range16(64321LLU,64323LLU,2LLU),_1d099ea88_Range16(64324LLU,64326LLU,2LLU),_1d099ea88_Range16(64327LLU,64433LLU,1LLU),_1d099ea88_Range16(64467LLU,64829LLU,1LLU),_1d099ea88_Range16(64848LLU,64911LLU,1LLU),_1d099ea88_Range16(64914LLU,64967LLU,1LLU),_1d099ea88_Range16(65008LLU,65019LLU,1LLU),_1d099ea88_Range16(65136LLU,65140LLU,1LLU),_1d099ea88_Range16(65142LLU,65276LLU,1LLU),_1d099ea88_Range16(65313LLU,65338LLU,1LLU),_1d099ea88_Range16(65345LLU,65370LLU,1LLU),_1d099ea88_Range16(65382LLU,65470LLU,1LLU),_1d099ea88_Range16(65474LLU,65479LLU,1LLU),_1d099ea88_Range16(65482LLU,65487LLU,1LLU),_1d099ea88_Range16(65490LLU,65495LLU,1LLU),_1d099ea88_Range16(65498LLU,65500LLU,1LLU)}),jule::Slice<_1d09a0050_Range32>({_1d09a0050_Range32(65536LLU,65547LLU,1LLU),_1d09a0050_Range32(65549LLU,65574LLU,1LLU),_1d09a0050_Range32(65576LLU,65594LLU,1LLU),_1d09a0050_Range32(65596LLU,65597LLU,1LLU),_1d09a0050_Range32(65599LLU,65613LLU,1LLU),_1d09a0050_Range32(65616LLU,65629LLU,1LLU),_1d09a0050_Range32(65664LLU,65786LLU,1LLU),_1d09a0050_Range32(66176LLU,66204LLU,1LLU),_1d09a0050_Range32(66208LLU,66256LLU,1LLU),_1d09a0050_Range32(66304LLU,66335LLU,1LLU),_1d09a0050_Range32(66349LLU,66368LLU,1LLU),_1d09a0050_Range32(66370LLU,66377LLU,1LLU),_1d09a0050_Range32(66384LLU,66421LLU,1LLU),_1d09a0050_Range32(66432LLU,66461LLU,1LLU),_1d09a0050_Range32(66464LLU,66499LLU,1LLU),_1d09a0050_Range32(66504LLU,66511LLU,1LLU),_1d09a0050_Range32(66560LLU,66717LLU,1LLU),_1d09a0050_Range32(66736LLU,66771LLU,1LLU),_1d09a0050_Range32(66776LLU,66811LLU,1LLU),_1d09a0050_Range32(66816LLU,66855LLU,1LLU),_1d09a0050_Range32(66864LLU,66915LLU,1LLU),_1d09a0050_Range32(66928LLU,66938LLU,1LLU),_1d09a0050_Range32(66940LLU,66954LLU,1LLU),_1d09a0050_Range32(66956LLU,66962LLU,1LLU),_1d09a0050_Range32(66964LLU,66965LLU,1LLU),_1d09a0050_Range32(66967LLU,66977LLU,1LLU),_1d09a0050_Range32(66979LLU,66993LLU,1LLU),_1d09a0050_Range32(66995LLU,67001LLU,1LLU),_1d09a0050_Range32(67003LLU,67004LLU,1LLU),_1d09a0050_Range32(67072LLU,67382LLU,1LLU),_1d09a0050_Range32(67392LLU,67413LLU,1LLU),_1d09a0050_Range32(67424LLU,67431LLU,1LLU),_1d09a0050_Range32(67456LLU,67461LLU,1LLU),_1d09a0050_Range32(67463LLU,67504LLU,1LLU),_1d09a0050_Range32(67506LLU,67514LLU,1LLU),_1d09a0050_Range32(67584LLU,67589LLU,1LLU),_1d09a0050_Range32(67592LLU,67594LLU,2LLU),_1d09a0050_Range32(67595LLU,67637LLU,1LLU),_1d09a0050_Range32(67639LLU,67640LLU,1LLU),_1d09a0050_Range32(67644LLU,67647LLU,3LLU),_1d09a0050_Range32(67648LLU,67669LLU,1LLU),_1d09a0050_Range32(67680LLU,67702LLU,1LLU),_1d09a0050_Range32(67712LLU,67742LLU,1LLU),_1d09a0050_Range32(67808LLU,67826LLU,1LLU),_1d09a0050_Range32(67828LLU,67829LLU,1LLU),_1d09a0050_Range32(67840LLU,67861LLU,1LLU),_1d09a0050_Range32(67872LLU,67897LLU,1LLU),_1d09a0050_Range32(67968LLU,68023LLU,1LLU),_1d09a0050_Range32(68030LLU,68031LLU,1LLU),_1d09a0050_Range32(68096LLU,68112LLU,16LLU),_1d09a0050_Range32(68113LLU,68115LLU,1LLU),_1d09a0050_Range32(68117LLU,68119LLU,1LLU),_1d09a0050_Range32(68121LLU,68149LLU,1LLU),_1d09a0050_Range32(68192LLU,68220LLU,1LLU),_1d09a0050_Range32(68224LLU,68252LLU,1LLU),_1d09a0050_Range32(68288LLU,68295LLU,1LLU),_1d09a0050_Range32(68297LLU,68324LLU,1LLU),_1d09a0050_Range32(68352LLU,68405LLU,1LLU),_1d09a0050_Range32(68416LLU,68437LLU,1LLU),_1d09a0050_Range32(68448LLU,68466LLU,1LLU),_1d09a0050_Range32(68480LLU,68497LLU,1LLU),_1d09a0050_Range32(68608LLU,68680LLU,1LLU),_1d09a0050_Range32(68736LLU,68786LLU,1LLU),_1d09a0050_Range32(68800LLU,68850LLU,1LLU),_1d09a0050_Range32(68864LLU,68899LLU,1LLU),_1d09a0050_Range32(69248LLU,69289LLU,1LLU),_1d09a0050_Range32(69296LLU,69297LLU,1LLU),_1d09a0050_Range32(69376LLU,69404LLU,1LLU),_1d09a0050_Range32(69415LLU,69424LLU,9LLU),_1d09a0050_Range32(69425LLU,69445LLU,1LLU),_1d09a0050_Range32(69488LLU,69505LLU,1LLU),_1d09a0050_Range32(69552LLU,69572LLU,1LLU),_1d09a0050_Range32(69600LLU,69622LLU,1LLU),_1d09a0050_Range32(69635LLU,69687LLU,1LLU),_1d09a0050_Range32(69745LLU,69746LLU,1LLU),_1d09a0050_Range32(69749LLU,69763LLU,14LLU),_1d09a0050_Range32(69764LLU,69807LLU,1LLU),_1d09a0050_Range32(69840LLU,69864LLU,1LLU),_1d09a0050_Range32(69891LLU,69926LLU,1LLU),_1d09a0050_Range32(69956LLU,69959LLU,3LLU),_1d09a0050_Range32(69968LLU,70002LLU,1LLU),_1d09a0050_Range32(70006LLU,70019LLU,13LLU),_1d09a0050_Range32(70020LLU,70066LLU,1LLU),_1d09a0050_Range32(70081LLU,70084LLU,1LLU),_1d09a0050_Range32(70106LLU,70108LLU,2LLU),_1d09a0050_Range32(70144LLU,70161LLU,1LLU),_1d09a0050_Range32(70163LLU,70187LLU,1LLU),_1d09a0050_Range32(70207LLU,70208LLU,1LLU),_1d09a0050_Range32(70272LLU,70278LLU,1LLU),_1d09a0050_Range32(70280LLU,70282LLU,2LLU),_1d09a0050_Range32(70283LLU,70285LLU,1LLU),_1d09a0050_Range32(70287LLU,70301LLU,1LLU),_1d09a0050_Range32(70303LLU,70312LLU,1LLU),_1d09a0050_Range32(70320LLU,70366LLU,1LLU),_1d09a0050_Range32(70405LLU,70412LLU,1LLU),_1d09a0050_Range32(70415LLU,70416LLU,1LLU),_1d09a0050_Range32(70419LLU,70440LLU,1LLU),_1d09a0050_Range32(70442LLU,70448LLU,1LLU),_1d09a0050_Range32(70450LLU,70451LLU,1LLU),_1d09a0050_Range32(70453LLU,70457LLU,1LLU),_1d09a0050_Range32(70461LLU,70480LLU,19LLU),_1d09a0050_Range32(70493LLU,70497LLU,1LLU),_1d09a0050_Range32(70656LLU,70708LLU,1LLU),_1d09a0050_Range32(70727LLU,70730LLU,1LLU),_1d09a0050_Range32(70751LLU,70753LLU,1LLU),_1d09a0050_Range32(70784LLU,70831LLU,1LLU),_1d09a0050_Range32(70852LLU,70853LLU,1LLU),_1d09a0050_Range32(70855LLU,71040LLU,185LLU),_1d09a0050_Range32(71041LLU,71086LLU,1LLU),_1d09a0050_Range32(71128LLU,71131LLU,1LLU),_1d09a0050_Range32(71168LLU,71215LLU,1LLU),_1d09a0050_Range32(71236LLU,71296LLU,60LLU),_1d09a0050_Range32(71297LLU,71338LLU,1LLU),_1d09a0050_Range32(71352LLU,71424LLU,72LLU),_1d09a0050_Range32(71425LLU,71450LLU,1LLU),_1d09a0050_Range32(71488LLU,71494LLU,1LLU),_1d09a0050_Range32(71680LLU,71723LLU,1LLU),_1d09a0050_Range32(71840LLU,71903LLU,1LLU),_1d09a0050_Range32(71935LLU,71942LLU,1LLU),_1d09a0050_Range32(71945LLU,71948LLU,3LLU),_1d09a0050_Range32(71949LLU,71955LLU,1LLU),_1d09a0050_Range32(71957LLU,71958LLU,1LLU),_1d09a0050_Range32(71960LLU,71983LLU,1LLU),_1d09a0050_Range32(71999LLU,72001LLU,2LLU),_1d09a0050_Range32(72096LLU,72103LLU,1LLU),_1d09a0050_Range32(72106LLU,72144LLU,1LLU),_1d09a0050_Range32(72161LLU,72163LLU,2LLU),_1d09a0050_Range32(72192LLU,72203LLU,11LLU),_1d09a0050_Range32(72204LLU,72242LLU,1LLU),_1d09a0050_Range32(72250LLU,72272LLU,22LLU),_1d09a0050_Range32(72284LLU,72329LLU,1LLU),_1d09a0050_Range32(72349LLU,72368LLU,19LLU),_1d09a0050_Range32(72369LLU,72440LLU,1LLU),_1d09a0050_Range32(72704LLU,72712LLU,1LLU),_1d09a0050_Range32(72714LLU,72750LLU,1LLU),_1d09a0050_Range32(72768LLU,72818LLU,50LLU),_1d09a0050_Range32(72819LLU,72847LLU,1LLU),_1d09a0050_Range32(72960LLU,72966LLU,1LLU),_1d09a0050_Range32(72968LLU,72969LLU,1LLU),_1d09a0050_Range32(72971LLU,73008LLU,1LLU),_1d09a0050_Range32(73030LLU,73056LLU,26LLU),_1d09a0050_Range32(73057LLU,73061LLU,1LLU),_1d09a0050_Range32(73063LLU,73064LLU,1LLU),_1d09a0050_Range32(73066LLU,73097LLU,1LLU),_1d09a0050_Range32(73112LLU,73440LLU,328LLU),_1d09a0050_Range32(73441LLU,73458LLU,1LLU),_1d09a0050_Range32(73474LLU,73476LLU,2LLU),_1d09a0050_Range32(73477LLU,73488LLU,1LLU),_1d09a0050_Range32(73490LLU,73523LLU,1LLU),_1d09a0050_Range32(73648LLU,73728LLU,80LLU),_1d09a0050_Range32(73729LLU,74649LLU,1LLU),_1d09a0050_Range32(74880LLU,75075LLU,1LLU),_1d09a0050_Range32(77712LLU,77808LLU,1LLU),_1d09a0050_Range32(77824LLU,78895LLU,1LLU),_1d09a0050_Range32(78913LLU,78918LLU,1LLU),_1d09a0050_Range32(82944LLU,83526LLU,1LLU),_1d09a0050_Range32(92160LLU,92728LLU,1LLU),_1d09a0050_Range32(92736LLU,92766LLU,1LLU),_1d09a0050_Range32(92784LLU,92862LLU,1LLU),_1d09a0050_Range32(92880LLU,92909LLU,1LLU),_1d09a0050_Range32(92928LLU,92975LLU,1LLU),_1d09a0050_Range32(92992LLU,92995LLU,1LLU),_1d09a0050_Range32(93027LLU,93047LLU,1LLU),_1d09a0050_Range32(93053LLU,93071LLU,1LLU),_1d09a0050_Range32(93760LLU,93823LLU,1LLU),_1d09a0050_Range32(93952LLU,94026LLU,1LLU),_1d09a0050_Range32(94032LLU,94099LLU,67LLU),_1d09a0050_Range32(94100LLU,94111LLU,1LLU),_1d09a0050_Range32(94176LLU,94177LLU,1LLU),_1d09a0050_Range32(94179LLU,94208LLU,29LLU),_1d09a0050_Range32(94209LLU,100343LLU,1LLU),_1d09a0050_Range32(100352LLU,101589LLU,1LLU),_1d09a0050_Range32(101632LLU,101640LLU,1LLU),_1d09a0050_Range32(110576LLU,110579LLU,1LLU),_1d09a0050_Range32(110581LLU,110587LLU,1LLU),_1d09a0050_Range32(110589LLU,110590LLU,1LLU),_1d09a0050_Range32(110592LLU,110882LLU,1LLU),_1d09a0050_Range32(110898LLU,110928LLU,30LLU),_1d09a0050_Range32(110929LLU,110930LLU,1LLU),_1d09a0050_Range32(110933LLU,110948LLU,15LLU),_1d09a0050_Range32(110949LLU,110951LLU,1LLU),_1d09a0050_Range32(110960LLU,111355LLU,1LLU),_1d09a0050_Range32(113664LLU,113770LLU,1LLU),_1d09a0050_Range32(113776LLU,113788LLU,1LLU),_1d09a0050_Range32(113792LLU,113800LLU,1LLU),_1d09a0050_Range32(113808LLU,113817LLU,1LLU),_1d09a0050_Range32(119808LLU,119892LLU,1LLU),_1d09a0050_Range32(119894LLU,119964LLU,1LLU),_1d09a0050_Range32(119966LLU,119967LLU,1LLU),_1d09a0050_Range32(119970LLU,119973LLU,3LLU),_1d09a0050_Range32(119974LLU,119977LLU,3LLU),_1d09a0050_Range32(119978LLU,119980LLU,1LLU),_1d09a0050_Range32(119982LLU,119993LLU,1LLU),_1d09a0050_Range32(119995LLU,119997LLU,2LLU),_1d09a0050_Range32(119998LLU,120003LLU,1LLU),_1d09a0050_Range32(120005LLU,120069LLU,1LLU),_1d09a0050_Range32(120071LLU,120074LLU,1LLU),_1d09a0050_Range32(120077LLU,120084LLU,1LLU),_1d09a0050_Range32(120086LLU,120092LLU,1LLU),_1d09a0050_Range32(120094LLU,120121LLU,1LLU),_1d09a0050_Range32(120123LLU,120126LLU,1LLU),_1d09a0050_Range32(120128LLU,120132LLU,1LLU),_1d09a0050_Range32(120134LLU,120138LLU,4LLU),_1d09a0050_Range32(120139LLU,120144LLU,1LLU),_1d09a0050_Range32(120146LLU,120485LLU,1LLU),_1d09a0050_Range32(120488LLU,120512LLU,1LLU),_1d09a0050_Range32(120514LLU,120538LLU,1LLU),_1d09a0050_Range32(120540LLU,120570LLU,1LLU),_1d09a0050_Range32(120572LLU,120596LLU,1LLU),_1d09a0050_Range32(120598LLU,120628LLU,1LLU),_1d09a0050_Range32(120630LLU,120654LLU,1LLU),_1d09a0050_Range32(120656LLU,120686LLU,1LLU),_1d09a0050_Range32(120688LLU,120712LLU,1LLU),_1d09a0050_Range32(120714LLU,120744LLU,1LLU),_1d09a0050_Range32(120746LLU,120770LLU,1LLU),_1d09a0050_Range32(120772LLU,120779LLU,1LLU),_1d09a0050_Range32(122624LLU,122654LLU,1LLU),_1d09a0050_Range32(122661LLU,122666LLU,1LLU),_1d09a0050_Range32(122928LLU,122989LLU,1LLU),_1d09a0050_Range32(123136LLU,123180LLU,1LLU),_1d09a0050_Range32(123191LLU,123197LLU,1LLU),_1d09a0050_Range32(123214LLU,123536LLU,322LLU),_1d09a0050_Range32(123537LLU,123565LLU,1LLU),_1d09a0050_Range32(123584LLU,123627LLU,1LLU),_1d09a0050_Range32(124112LLU,124139LLU,1LLU),_1d09a0050_Range32(124896LLU,124902LLU,1LLU),_1d09a0050_Range32(124904LLU,124907LLU,1LLU),_1d09a0050_Range32(124909LLU,124910LLU,1LLU),_1d09a0050_Range32(124912LLU,124926LLU,1LLU),_1d09a0050_Range32(124928LLU,125124LLU,1LLU),_1d09a0050_Range32(125184LLU,125251LLU,1LLU),_1d09a0050_Range32(125259LLU,126464LLU,1205LLU),_1d09a0050_Range32(126465LLU,126467LLU,1LLU),_1d09a0050_Range32(126469LLU,126495LLU,1LLU),_1d09a0050_Range32(126497LLU,126498LLU,1LLU),_1d09a0050_Range32(126500LLU,126503LLU,3LLU),_1d09a0050_Range32(126505LLU,126514LLU,1LLU),_1d09a0050_Range32(126516LLU,126519LLU,1LLU),_1d09a0050_Range32(126521LLU,126523LLU,2LLU),_1d09a0050_Range32(126530LLU,126535LLU,5LLU),_1d09a0050_Range32(126537LLU,126541LLU,2LLU),_1d09a0050_Range32(126542LLU,126543LLU,1LLU),_1d09a0050_Range32(126545LLU,126546LLU,1LLU),_1d09a0050_Range32(126548LLU,126551LLU,3LLU),_1d09a0050_Range32(126553LLU,126561LLU,2LLU),_1d09a0050_Range32(126562LLU,126564LLU,2LLU),_1d09a0050_Range32(126567LLU,126570LLU,1LLU),_1d09a0050_Range32(126572LLU,126578LLU,1LLU),_1d09a0050_Range32(126580LLU,126583LLU,1LLU),_1d09a0050_Range32(126585LLU,126588LLU,1LLU),_1d09a0050_Range32(126590LLU,126592LLU,2LLU),_1d09a0050_Range32(126593LLU,126601LLU,1LLU),_1d09a0050_Range32(126603LLU,126619LLU,1LLU),_1d09a0050_Range32(126625LLU,126627LLU,1LLU),_1d09a0050_Range32(126629LLU,126633LLU,1LLU),_1d09a0050_Range32(126635LLU,126651LLU,1LLU),_1d09a0050_Range32(131072LLU,173791LLU,1LLU),_1d09a0050_Range32(173824LLU,177977LLU,1LLU),_1d09a0050_Range32(177984LLU,178205LLU,1LLU),_1d09a0050_Range32(178208LLU,183969LLU,1LLU),_1d09a0050_Range32(183984LLU,191456LLU,1LLU),_1d09a0050_Range32(194560LLU,195101LLU,1LLU),_1d09a0050_Range32(196608LLU,201546LLU,1LLU),_1d09a0050_Range32(201552LLU,205743LLU,1LLU)}),6LL));
	_1d096c528_LETTER = _1d09685e0__L;
	_1d099ae3b__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});
	_1e9eb4eb8_CPP_HEADER_EXTS = jule::Array<jule::Str,4>({jule::Str(".h", 2),jule::Str(".hpp", 4),jule::Str(".hxx", 4),jule::Str(".hh", 3)});
	_1e9eb9033_CPP_EXTS = jule::Array<jule::Str,3>({jule::Str(".cpp", 4),jule::Str(".cc", 3),jule::Str(".cxx", 4)});
	_1e9ee0e8e_OBJECTIVE_CPP_EXTS = jule::Array<jule::Str,1>({jule::Str(".mm", 3)});
	_1d001c2c1_DISTOS = jule::Array<jule::Str,3>({jule::Str("windows", 7),jule::Str("linux", 5),jule::Str("darwin", 6)});
	_1d001c4be_DISTARCH = jule::Array<jule::Str,3>({jule::Str("arm64", 5),jule::Str("amd64", 5),jule::Str("i386", 4)});
	_1d002c897_PATH_STDLIB = jule::Str();
	_1d002a92d_PATH_EXEC = jule::Str();
	_1d002bc3c_PATH_WD = jule::Str();
	_1d003abc4_PATH_API = jule::Str();
	_1d003c28b_OS = jule::Str("windows", 7);
	_1d003d127_ARCH = jule::Str("amd64", 5);
	_1d0742232_SPACES = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
	_1d0742320_UNARY_OPS = jule::Array<jule::Str,6>({jule::Str("-", 1),jule::Str("+", 1),jule::Str("^", 1),jule::Str("!", 1),jule::Str("*", 1),jule::Str("&", 1)});
	_1d074240d_BIN_OPS = jule::Array<jule::Str,12>({jule::Str("+", 1),jule::Str("-", 1),jule::Str("*", 1),jule::Str("/", 1),jule::Str("%", 1),jule::Str("&", 1),jule::Str("|", 1),jule::Str("^", 1),jule::Str("<", 1),jule::Str(">", 1),jule::Str("&&", 2),jule::Str("||", 2)});
	_1d07425d9_POSTFIX_OPS = jule::Array<jule::Str,2>({jule::Str("++", 2),jule::Str("--", 2)});
	_1d07426c7_ASSING_OPS = jule::Array<jule::Str,11>({jule::Str("=", 1),jule::Str("+=", 2),jule::Str("-=", 2),jule::Str("/=", 2),jule::Str("*=", 2),jule::Str("%=", 2),jule::Str(">>=", 3),jule::Str("<<=", 3),jule::Str("|=", 2),jule::Str("&=", 2),jule::Str("^=", 2)});
	_1d0750240_KEYWORDS = jule::Array<_1d074ee43_KindPair,47>({_1d074ee43_KindPair(jule::Str("i8", 2),static_cast<jule::U64>(1LLU)),_1d074ee43_KindPair(jule::Str("i16", 3),static_cast<jule::U64>(1LLU)),_1d074ee43_KindPair(jule::Str("i32", 3),static_cast<jule::U64>(1LLU)),_1d074ee43_KindPair(jule::Str("i64", 3),static_cast<jule::U64>(1LLU)),_1d074ee43_KindPair(jule::Str("u8", 2),static_cast<jule::U64>(1LLU)),_1d074ee43_KindPair(jule::Str("u16", 3),static_cast<jule::U64>(1LLU)),_1d074ee43_KindPair(jule::Str("u32", 3),static_cast<jule::U64>(1LLU)),_1d074ee43_KindPair(jule::Str("u64", 3),static_cast<jule::U64>(1LLU)),_1d074ee43_KindPair(jule::Str("f32", 3),static_cast<jule::U64>(1LLU)),_1d074ee43_KindPair(jule::Str("f64", 3),static_cast<jule::U64>(1LLU)),_1d074ee43_KindPair(jule::Str("uint", 4),static_cast<jule::U64>(1LLU)),_1d074ee43_KindPair(jule::Str("int", 3),static_cast<jule::U64>(1LLU)),_1d074ee43_KindPair(jule::Str("uintptr", 7),static_cast<jule::U64>(1LLU)),_1d074ee43_KindPair(jule::Str("bool", 4),static_cast<jule::U64>(1LLU)),_1d074ee43_KindPair(jule::Str("str", 3),static_cast<jule::U64>(1LLU)),_1d074ee43_KindPair(jule::Str("any", 3),static_cast<jule::U64>(1LLU)),_1d074ee43_KindPair(jule::Str("true", 4),static_cast<jule::U64>(6LLU)),_1d074ee43_KindPair(jule::Str("false", 5),static_cast<jule::U64>(6LLU)),_1d074ee43_KindPair(jule::Str("nil", 3),static_cast<jule::U64>(6LLU)),_1d074ee43_KindPair(jule::Str("const", 5),static_cast<jule::U64>(9LLU)),_1d074ee43_KindPair(jule::Str("ret", 3),static_cast<jule::U64>(4LLU)),_1d074ee43_KindPair(jule::Str("type", 4),static_cast<jule::U64>(10LLU)),_1d074ee43_KindPair(jule::Str("for", 3),static_cast<jule::U64>(12LLU)),_1d074ee43_KindPair(jule::Str("break", 5),static_cast<jule::U64>(13LLU)),_1d074ee43_KindPair(jule::Str("continue", 8),static_cast<jule::U64>(14LLU)),_1d074ee43_KindPair(jule::Str("in", 2),static_cast<jule::U64>(15LLU)),_1d074ee43_KindPair(jule::Str("if", 2),static_cast<jule::U64>(16LLU)),_1d074ee43_KindPair(jule::Str("else", 4),static_cast<jule::U64>(17LLU)),_1d074ee43_KindPair(jule::Str("use", 3),static_cast<jule::U64>(19LLU)),_1d074ee43_KindPair(jule::Str("pub", 3),static_cast<jule::U64>(21LLU)),_1d074ee43_KindPair(jule::Str("goto", 4),static_cast<jule::U64>(22LLU)),_1d074ee43_KindPair(jule::Str("enum", 4),static_cast<jule::U64>(24LLU)),_1d074ee43_KindPair(jule::Str("struct", 6),static_cast<jule::U64>(25LLU)),_1d074ee43_KindPair(jule::Str("co", 2),static_cast<jule::U64>(26LLU)),_1d074ee43_KindPair(jule::Str("match", 5),static_cast<jule::U64>(27LLU)),_1d074ee43_KindPair(jule::Str("self", 4),static_cast<jule::U64>(28LLU)),_1d074ee43_KindPair(jule::Str("trait", 5),static_cast<jule::U64>(29LLU)),_1d074ee43_KindPair(jule::Str("impl", 4),static_cast<jule::U64>(30LLU)),_1d074ee43_KindPair(jule::Str("cpp", 3),static_cast<jule::U64>(31LLU)),_1d074ee43_KindPair(jule::Str("fall", 4),static_cast<jule::U64>(32LLU)),_1d074ee43_KindPair(jule::Str("fn", 2),static_cast<jule::U64>(33LLU)),_1d074ee43_KindPair(jule::Str("let", 3),static_cast<jule::U64>(34LLU)),_1d074ee43_KindPair(jule::Str("unsafe", 6),static_cast<jule::U64>(35LLU)),_1d074ee43_KindPair(jule::Str("mut", 3),static_cast<jule::U64>(36LLU)),_1d074ee43_KindPair(jule::Str("defer", 5),static_cast<jule::U64>(37LLU)),_1d074ee43_KindPair(jule::Str("static", 6),static_cast<jule::U64>(38LLU)),_1d074ee43_KindPair(jule::Str("error", 5),static_cast<jule::U64>(40LLU))});
	_1d075043d_BASIC_OPS = jule::Array<_1d074ee43_KindPair,39>({_1d074ee43_KindPair(jule::Str("::", 2),static_cast<jule::U64>(23LLU)),_1d074ee43_KindPair(jule::Str(":", 1),static_cast<jule::U64>(11LLU)),_1d074ee43_KindPair(jule::Str(";", 1),static_cast<jule::U64>(5LLU)),_1d074ee43_KindPair(jule::Str(",", 1),static_cast<jule::U64>(8LLU)),_1d074ee43_KindPair(jule::Str("...", 3),static_cast<jule::U64>(7LLU)),_1d074ee43_KindPair(jule::Str(".", 1),static_cast<jule::U64>(20LLU)),_1d074ee43_KindPair(jule::Str("+=", 2),static_cast<jule::U64>(7LLU)),_1d074ee43_KindPair(jule::Str("-=", 2),static_cast<jule::U64>(7LLU)),_1d074ee43_KindPair(jule::Str("*=", 2),static_cast<jule::U64>(7LLU)),_1d074ee43_KindPair(jule::Str("/=", 2),static_cast<jule::U64>(7LLU)),_1d074ee43_KindPair(jule::Str("%=", 2),static_cast<jule::U64>(7LLU)),_1d074ee43_KindPair(jule::Str("<<=", 3),static_cast<jule::U64>(7LLU)),_1d074ee43_KindPair(jule::Str(">>=", 3),static_cast<jule::U64>(7LLU)),_1d074ee43_KindPair(jule::Str("^=", 2),static_cast<jule::U64>(7LLU)),_1d074ee43_KindPair(jule::Str("&=", 2),static_cast<jule::U64>(7LLU)),_1d074ee43_KindPair(jule::Str("|=", 2),static_cast<jule::U64>(7LLU)),_1d074ee43_KindPair(jule::Str("==", 2),static_cast<jule::U64>(7LLU)),_1d074ee43_KindPair(jule::Str("!=", 2),static_cast<jule::U64>(7LLU)),_1d074ee43_KindPair(jule::Str(">=", 2),static_cast<jule::U64>(7LLU)),_1d074ee43_KindPair(jule::Str("<=", 2),static_cast<jule::U64>(7LLU)),_1d074ee43_KindPair(jule::Str("&&", 2),static_cast<jule::U64>(7LLU)),_1d074ee43_KindPair(jule::Str("||", 2),static_cast<jule::U64>(7LLU)),_1d074ee43_KindPair(jule::Str("<<", 2),static_cast<jule::U64>(7LLU)),_1d074ee43_KindPair(jule::Str(">>", 2),static_cast<jule::U64>(7LLU)),_1d074ee43_KindPair(jule::Str("++", 2),static_cast<jule::U64>(7LLU)),_1d074ee43_KindPair(jule::Str("--", 2),static_cast<jule::U64>(7LLU)),_1d074ee43_KindPair(jule::Str("+", 1),static_cast<jule::U64>(7LLU)),_1d074ee43_KindPair(jule::Str("-", 1),static_cast<jule::U64>(7LLU)),_1d074ee43_KindPair(jule::Str("*", 1),static_cast<jule::U64>(7LLU)),_1d074ee43_KindPair(jule::Str("/", 1),static_cast<jule::U64>(7LLU)),_1d074ee43_KindPair(jule::Str("%", 1),static_cast<jule::U64>(7LLU)),_1d074ee43_KindPair(jule::Str("&", 1),static_cast<jule::U64>(7LLU)),_1d074ee43_KindPair(jule::Str("|", 1),static_cast<jule::U64>(7LLU)),_1d074ee43_KindPair(jule::Str("^", 1),static_cast<jule::U64>(7LLU)),_1d074ee43_KindPair(jule::Str("!", 1),static_cast<jule::U64>(7LLU)),_1d074ee43_KindPair(jule::Str("<", 1),static_cast<jule::U64>(7LLU)),_1d074ee43_KindPair(jule::Str(">", 1),static_cast<jule::U64>(7LLU)),_1d074ee43_KindPair(jule::Str("=", 1),static_cast<jule::U64>(7LLU)),_1d074ee43_KindPair(jule::Str("#", 1),static_cast<jule::U64>(39LLU))});
	_1a7432a50_DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
	_1a7432d80_DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
	_1b774e796_F32_INFO = _1a71e9c9b_FloatInfo(23LLU,8LLU,-127LL);
	_1a70906be_F64_INFO = _1a71e9c9b_FloatInfo(52LLU,11LLU,-1023LL);
	_1a716d0d7_DETAILED_POWS_OF_TEN = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
	_1a71ede8c_POWTAB = jule::Slice<jule::I64>({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
	_1a727e517_F64_POW10 = jule::Slice<jule::F64>({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
	_1a729c9a8_F32_POW10 = jule::Slice<jule::F32>({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL});
	_1a730a5a4_U64_POW10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
	_1a729c3e2_LEFTCHEATS = jule::Slice<_1a7460880_LeftCheat>({_1a7460880_LeftCheat(0LL,jule::Str()),_1a7460880_LeftCheat(1LL,jule::Str("5", 1)),_1a7460880_LeftCheat(1LL,jule::Str("25", 2)),_1a7460880_LeftCheat(1LL,jule::Str("125", 3)),_1a7460880_LeftCheat(2LL,jule::Str("625", 3)),_1a7460880_LeftCheat(2LL,jule::Str("3125", 4)),_1a7460880_LeftCheat(2LL,jule::Str("15625", 5)),_1a7460880_LeftCheat(3LL,jule::Str("78125", 5)),_1a7460880_LeftCheat(3LL,jule::Str("390625", 6)),_1a7460880_LeftCheat(3LL,jule::Str("1953125", 7)),_1a7460880_LeftCheat(4LL,jule::Str("9765625", 7)),_1a7460880_LeftCheat(4LL,jule::Str("48828125", 8)),_1a7460880_LeftCheat(4LL,jule::Str("244140625", 9)),_1a7460880_LeftCheat(4LL,jule::Str("1220703125", 10)),_1a7460880_LeftCheat(5LL,jule::Str("6103515625", 10)),_1a7460880_LeftCheat(5LL,jule::Str("30517578125", 11)),_1a7460880_LeftCheat(5LL,jule::Str("152587890625", 12)),_1a7460880_LeftCheat(6LL,jule::Str("762939453125", 12)),_1a7460880_LeftCheat(6LL,jule::Str("3814697265625", 13)),_1a7460880_LeftCheat(6LL,jule::Str("19073486328125", 14)),_1a7460880_LeftCheat(7LL,jule::Str("95367431640625", 14)),_1a7460880_LeftCheat(7LL,jule::Str("476837158203125", 15)),_1a7460880_LeftCheat(7LL,jule::Str("2384185791015625", 16)),_1a7460880_LeftCheat(7LL,jule::Str("11920928955078125", 17)),_1a7460880_LeftCheat(8LL,jule::Str("59604644775390625", 17)),_1a7460880_LeftCheat(8LL,jule::Str("298023223876953125", 18)),_1a7460880_LeftCheat(8LL,jule::Str("1490116119384765625", 19)),_1a7460880_LeftCheat(9LL,jule::Str("7450580596923828125", 19)),_1a7460880_LeftCheat(9LL,jule::Str("37252902984619140625", 20)),_1a7460880_LeftCheat(9LL,jule::Str("186264514923095703125", 21)),_1a7460880_LeftCheat(10LL,jule::Str("931322574615478515625", 21)),_1a7460880_LeftCheat(10LL,jule::Str("4656612873077392578125", 22)),_1a7460880_LeftCheat(10LL,jule::Str("23283064365386962890625", 23)),_1a7460880_LeftCheat(10LL,jule::Str("116415321826934814453125", 24)),_1a7460880_LeftCheat(11LL,jule::Str("582076609134674072265625", 24)),_1a7460880_LeftCheat(11LL,jule::Str("2910383045673370361328125", 25)),_1a7460880_LeftCheat(11LL,jule::Str("14551915228366851806640625", 26)),_1a7460880_LeftCheat(12LL,jule::Str("72759576141834259033203125", 26)),_1a7460880_LeftCheat(12LL,jule::Str("363797880709171295166015625", 27)),_1a7460880_LeftCheat(12LL,jule::Str("1818989403545856475830078125", 28)),_1a7460880_LeftCheat(13LL,jule::Str("9094947017729282379150390625", 28)),_1a7460880_LeftCheat(13LL,jule::Str("45474735088646411895751953125", 29)),_1a7460880_LeftCheat(13LL,jule::Str("227373675443232059478759765625", 30)),_1a7460880_LeftCheat(13LL,jule::Str("1136868377216160297393798828125", 31)),_1a7460880_LeftCheat(14LL,jule::Str("5684341886080801486968994140625", 31)),_1a7460880_LeftCheat(14LL,jule::Str("28421709430404007434844970703125", 32)),_1a7460880_LeftCheat(14LL,jule::Str("142108547152020037174224853515625", 33)),_1a7460880_LeftCheat(15LL,jule::Str("710542735760100185871124267578125", 33)),_1a7460880_LeftCheat(15LL,jule::Str("3552713678800500929355621337890625", 34)),_1a7460880_LeftCheat(15LL,jule::Str("17763568394002504646778106689453125", 35)),_1a7460880_LeftCheat(16LL,jule::Str("88817841970012523233890533447265625", 35)),_1a7460880_LeftCheat(16LL,jule::Str("444089209850062616169452667236328125", 36)),_1a7460880_LeftCheat(16LL,jule::Str("2220446049250313080847263336181640625", 37)),_1a7460880_LeftCheat(16LL,jule::Str("11102230246251565404236316680908203125", 38)),_1a7460880_LeftCheat(17LL,jule::Str("55511151231257827021181583404541015625", 38)),_1a7460880_LeftCheat(17LL,jule::Str("277555756156289135105907917022705078125", 39)),_1a7460880_LeftCheat(17LL,jule::Str("1387778780781445675529539585113525390625", 40)),_1a7460880_LeftCheat(18LL,jule::Str("6938893903907228377647697925567626953125", 40)),_1a7460880_LeftCheat(18LL,jule::Str("34694469519536141888238489627838134765625", 41)),_1a7460880_LeftCheat(18LL,jule::Str("173472347597680709441192448139190673828125", 42)),_1a7460880_LeftCheat(19LL,jule::Str("867361737988403547205962240695953369140625", 42))});
	_1a75a6432_BIT_SIZE = 0LL;
	_1a75a6520_SYS_INT = jule::Str();
	_1a75a660d_SYS_UINT = jule::Str();
	_1d0786386_deads = nullptr;
	_1b6508919_checking = nullptr;
	_1b6587415_current = jule::Any(nullptr);
	_1b658d482_main_current = jule::Any(nullptr);
	_1d0a3cb8c_MDAYS = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
	_1d00240ec_HELP_MAP = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str("help", 4),jule::Str("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str("version", 7),jule::Str("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str("tool", 4),jule::Str("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str("julenv", 6),jule::Str("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str("mod", 3),jule::Str("Module management", 17)})});
	_1a7e69ae7_OUT_DIR = jule::Str("dist", 4);
	_1a7e6eb74_OUT_NAME = jule::Str("ir.cpp", 6);
	_1a7e79ee2_OUT = jule::Str();

	_1d0057e66_init();
	_1a75a8c70_init();
	_1d006b6a5_init();
}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}