// Auto generated by JuleC.
// JuleC version: jule0.0.14 @master
// Date: 25/6/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp -lws2_32 -lshell32 -lshell32

#define __JULE_ENABLE__PRODUCTION
#include "std/jule/integrated/integrated.hpp"                                   
#include <winsock2.h>
#include <ws2ipdef.h>
#include <windows.h>
#include <fcntl.h>
#include <io.h>
#include <cstdio>
#include <sys/stat.h>
#include <chrono>
#include <time.h>


#include "api/jule.hpp"                                   


struct _1aa8a2450_comptimeRangeKind{};
struct _1aa8cd36b_Importer{};
struct _1aa983410_Kind{};
struct _1aa9a0509_Lookup{};
struct _1abca7c3e_CommonFlag{};
struct _203e62d5d_acceptRange;
struct _1d9cbbb37_Range16;
struct _1d9cbc0aa_Range32;
struct _1d9cbc52d_RangeTable;
struct _1d9d0b979_lazyBuff;
struct _203d70793_DirEntry;
struct _203d70a07_Directory;
struct _203d7c4c5_File;
struct _203d7eb15_Status;
struct _1d9e35278_cmdAttrs;
struct _1d9d938bd_Log;
struct _1db944d0d_Token;
struct _1db94a198_File;
struct _1db94c200_kindPair;
struct _1db952c61_lex;
struct _1dc59ac60_floatInfo;
struct _1dc59b887_decimalSlice;
struct _1dc5acca5_leftCheat;
struct _1dc5ad778_decimal;
struct _1c0901b1b_Const;
struct _1aa81e80c_Ast;
struct _1aa820698_Node;
struct _1aa820a94_Directive;
struct _1aa854028_TypeDecl;
struct _1aa8545de_IdentTypeDecl;
struct _1aa854c3d_SubIdentTypeDecl;
struct _1aa8550e5_NamespaceTypeDecl;
struct _1aa8553d1_SptrTypeDecl;
struct _1aa8557cc_SlcTypeDecl;
struct _1aa855ab8_TupleTypeDecl;
struct _1aa855da4_PtrTypeDecl;
struct _1aa856536_ArrTypeDecl;
struct _1aa856c84_MapTypeDecl;
struct _1aa85713b_RetTypeDecl;
struct _1aa858549_Expr;
struct _1aa858835_RangeExpr;
struct _1aa858dda_UseExpr;
struct _1aa8591c6_TupleExpr;
struct _1aa85957d_LitExpr;
struct _1aa859c87_UnsafeExpr;
struct _1aa85a20a_IdentExpr;
struct _1aa85a914_UnaryExpr;
struct _1aa85acbb_VariadicExpr;
struct _1aa85b173_CastExpr;
struct _1aa85b52a_NsSelectionExpr;
struct _1aa85b99d_SubIdentExpr;
struct _1aa85be21_BinopExpr;
struct _1aa85c52b_FnCallExpr;
struct _1aa85ceaa_FieldExprPair;
struct _1aa85d708_StructLit;
struct _1aa85db7b_BraceLit;
struct _1aa85e451_KeyValPair;
struct _1aa85eb38_SliceExpr;
struct _1aa8604a7_IndexingExpr;
struct _1aa860ab2_SlicingExpr;
struct _1aa860d9d_Constraint;
struct _1aa861321_GenericDecl;
struct _1aa8616c8_LabelSt;
struct _1aa861a80_GotoSt;
struct _1aa861d6b_FallSt;
struct _1aa862476_AssignLeft;
struct _1aa8629b5_AssignSt;
struct _1aa8638a6_Stmt;
struct _1aa863eb1_ScopeTree;
struct _1aa864687_ParamDecl;
struct _1aa8659a7_FnDecl;
struct _1aa866986_VarDecl;
struct _1aa866d3d_RetSt;
struct _1aa86749d_Iter;
struct _1aa867c73_WhileKind;
struct _1aa868614_RangeKind;
struct _1aa8689bb_BreakSt;
struct _1aa868d73_ContSt;
struct _1aa8692e6_If;
struct _1aa86969d_Else;
struct _1aa869b21_Conditional;
struct _1aa86a2e7_TypeAliasDecl;
struct _1aa86a76a_Case;
struct _1aa86ae41_MatchCase;
struct _1aa86b6d3_UseDecl;
struct _1aa86bb56_EnumItemDecl;
struct _1aa86c67e_EnumDecl;
struct _1aa86d185_TypeEnumItemDecl;
struct _1aa86d790_TypeEnumDecl;
struct _1aa86d98d_FieldDecl;
struct _1aa86e241_StructDecl;
struct _1aa86e917_TraitDecl;
struct _1aa870022_Impl;
struct _1aa8714eb_Field;
struct _1aa8732ab_Operators;
struct _1aa8740c0_Struct;
struct _1aa8763e1_FieldIns;
struct _1aa87acdb_OperandExprModel;
struct _1aa87b2a3_BinopExprModel;
struct _1aa87b65a_UnaryExprModel;
struct _1aa87ba56_StructArgExprModel;
struct _1aa87be0d_StructLitExprModel;
struct _1aa87c21b_AllocStructLitExprModel;
struct _1aa87c76b_CastingExprModel;
struct _1aa87d11d_FnCallExprModel;
struct _1aa87d4c5_SliceExprModel;
struct _1aa87d948_IndexingExprModel;
struct _1aa87dd00_AnonFnExprModel;
struct _1aa87e1a7_KeyValPairExprModel;
struct _1aa87e62a_MapExprModel;
struct _1aa87eb69_SlicingExprModel;
struct _1aa8801a8_TraitSubIdentExprModel;
struct _1aa88098e_StructSubIdentExprModel;
struct _1aa880d35_StructStaticIdentExprModel;
struct _1aa8811ed_ArrayExprModel;
struct _1aa8814d9_CommonIdentExprModel;
struct _1aa881a4a_CommonSubIdentExprModel;
struct _1aa881d47_TupleExprModel;
struct _1aa882221_BuiltinOutCallExprModel;
struct _1aa88260b_BuiltinOutlnCallExprModel;
struct _1aa88292a_BuiltinCloneCallExprModel;
struct _1aa882d15_BuiltinNewCallExprModel;
struct _1aa883200_BuiltinPanicCallExprModel;
struct _1aa8836a6_BuiltinAssertCallExprModel;
struct _1aa883b5c_BuiltinMakeCallExprModel;
struct _1aa884047_BuiltinAppendCallExprModel;
struct _1aa884366_BuiltinLenCallExprModel;
struct _1aa884685_BuiltinCapCallExprModel;
struct _1aa884d39_BuiltinDeleteCallExprModel;
struct _1aa88519c_BuiltinCopyCallExprModel;
struct _1aa885587_BuiltinErrorCallExprModel;
struct _1aa885884_SizeofExprModel;
struct _1aa885b70_AlignofExprModel;
struct _1aa885e5b_RuneExprModel;
struct _1aa886269_IntegratedToStrExprModel;
struct _1aa886632_BackendEmitExprModel;
struct _1aa88691d_FreeExprModel;
struct _1aa8873d0_RetType;
struct _1aa887ad9_Param;
struct _1aa889426_Fn;
struct _1aa88b208_ParamIns;
struct _1aa88c0c7_FnIns;
struct _1aa890031_ReferenceStack;
struct _1aa891362_Pass;
struct _1aa895aa3_symbolBuilder;
struct _1aa89b647_Trait;
struct _1aa89d3d5_EnumItem;
struct _1aa89ddca_Enum;
struct _1aa89ee0e_TypeEnumItem;
struct _1aa8a04c5_TypeEnum;
struct _1aa8a262b_comptimeRange;
struct _1aa8a3121_comptimeStructField;
struct _1aa8a4243_comptimeStructFields;
struct _1aa8a5750_comptimeType;
struct _1aa8aa69a_constraintChecker;
struct _1aa8ac548_Impl;
struct _1aa8b25a3_Scope;
struct _1aa8b299e_If;
struct _1aa8b2c8a_Else;
struct _1aa8b310e_Conditional;
struct _1aa8b33ea_InfIter;
struct _1aa8b386d_WhileIter;
struct _1aa8b4253_RangeIter;
struct _1aa8b464e_ContSt;
struct _1aa8b4a06_BreakSt;
struct _1aa8b4ce2_Label;
struct _1aa8b50cd_GotoSt;
struct _1aa8b5485_Postfix;
struct _1aa8b5908_Assign;
struct _1aa8b5cb0_MultiAssign;
struct _1aa8b63ba_Match;
struct _1aa8b6e15_Case;
struct _1aa8b74ba_FallSt;
struct _1aa8b783e_RetSt;
struct _1aa8b7e49_scopeLabel;
struct _1aa8b83bc_scopeGoto;
struct _1aa8b91d1_scopeChecker;
struct _1aa8c9e39_directiveChecker;
struct _1aa8d101c_ImportInfo;
struct _1aa8d3b57_Package;
struct _1aa8d87c7_commonSemaMeta;
struct _1aa8d92de_Sema;
struct _1aa905a03_missingRetChecker;
struct _1aa907c14_IterRelation;
struct _1aa908c59_Var;
struct _1aa909a07_FuncPattern;
struct _1aa93bbe3_typeCompatibilityChecker;
struct _1aa93d81b_assignTypeChecker;
struct _1aa940301_dynamicTypeAnnotation;
struct _1aa944bb8_fnCallArgChecker;
struct _1aa9475c2_structLitChecker;
struct _1aa9491a6_rangeChecker;
struct _1aa94b780_retTypeChecker;
struct _1aa94d51d_SymbolTable;
struct _1aa957d85_Data;
struct _1aa958e0d_Value;
struct _1aa959903_Eval;
struct _1aa974bb5_unaryEval;
struct _1aa976953_binaryEval;
struct _1aa9820e0_InsGeneric;
struct _1aa982b29_TypeAlias;
struct _1aa983872_TypeKind;
struct _1aa9889ba_TypeSymbol;
struct _1aa989339_Prim;
struct _1aa98cabd_Sptr;
struct _1aa98d52a_Slc;
struct _1aa98e0a8_Tuple;
struct _1aa98ead1_Map;
struct _1aa9906c5_Arr;
struct _1aa991132_Ptr;
struct _1aa992078_referencer;
struct _1aa992e58_typeChecker;
struct _1aa99a669_identTypeLookup;
struct _1ab0ead63_FileInfo;
struct _1ab1497eb_stmt;
struct _1ab14a126_scopeParser;
struct _1ab15660a_exprBuilder;
struct _1ab162e41_assignInfo;
struct _1ab16683a_parser;
struct _1ab177560_typeBuilder;
struct _1aa39e17d_CompileInfo;
struct _1aa3a04d1_directiveEval;
struct _1ab17b7c8_JuleImporter;
struct _1ab18157a_OrderedDefines;
struct _1ab1817de_defineOrderer;
struct _1ab320340_liveTable;
struct _1ab3560e0_scopeDeadCode;
struct _1ab35a04a_exprDeadCode;
struct _1aa2bb331_StrCompExprModel;
struct _1aa2bb6e9_StrAppendExprModel;
struct _1aa2bb9d5_UnsafeBinopExprModel;
struct _1aa2bbd6a_UnsafeIndexingExprModel;
struct _1aa2bc200_PushToSliceExprModel;
struct _1aa2bc73e_MutSlicingExprModel;
struct _1aa2bcb18_StrInsertBeginExprModel;
struct _1aa2bdd28_scopeOptimizer;
struct _1aa2c4724_exprOptimizer;
struct _1ab361d43_Optimizer;
struct _1ab41da9d_AnsiEscape;
struct _1ab420473_Logger;
struct _1abc275a4_AbsTime;
struct _1abc27c47_Time;
struct _1abb71e38_scopeCoder;
struct _1abb7a381_exprCoder;
struct _1abb89b21_deriveCoder;
struct _1abb8b507_TestCoder;
struct _1abb8da48_identCoder;
struct _1abc30436_SerializationInfo;
struct _1abc308ed_traitHash;
struct _1abc30ca5_traitCast;
struct _1abc3eb0a_customType;
struct _1abc40578_typeCoder;
struct _1abc4ce9d_resultCoder;
struct _1bb402d08_Flag;
struct _1bb406977_Flag;
struct _1bb40a23e_Flag;
struct _1bb40da4a_Flag;
struct _1bb412312_Flag;
struct _1abca969c_FlagSet;
struct _1abcabd75_argParser;
struct _1abc31cc8_ObjectCoder;
struct _1ab320708_ObjectDeadCode;
struct _1ab17e039_IR;
struct _1aa876dd6_StructIns;
struct _1d9e31494_Cmd;
struct __jule_tuple_u64__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1aa957d85_Data__jule_tuple_x_1aa957d85_Data {
	jule::Ptr<_1aa957d85_Data> __jule_result_arg0;
	jule::Ptr<_1aa957d85_Data> __jule_result_arg1;
};
struct __jule_tuple_x_1aa86a76a_Case__jule_tuple_bool {
	jule::Ptr<_1aa86a76a_Case> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1aa86a76a_Case__jule_tuple_x_1aa86969d_Else {
	jule::Slice<jule::Ptr<_1aa86a76a_Case>> __jule_result_arg0;
	jule::Ptr<_1aa86969d_Else> __jule_result_arg1;
};
struct __jule_tuple__1aa863675_StmtData__jule_tuple_bool {
	jule::Any __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1aa8629b5_AssignSt__jule_tuple_bool {
	jule::Ptr<_1aa8629b5_AssignSt> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1aa854028_TypeDecl__jule_tuple_bool {
	jule::Ptr<_1aa854028_TypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1aa85713b_RetTypeDecl__jule_tuple_bool {
	jule::Ptr<_1aa85713b_RetTypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1aa81e80c_Ast__jule_tuple_s_1d9d938bd_Log {
	jule::Slice<jule::Ptr<_1aa81e80c_Ast>> __jule_result_arg0;
	jule::Slice<_1d9d938bd_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_s_1d9d938bd_Log {
	jule::Bool __jule_result_arg0;
	jule::Slice<_1d9d938bd_Log> __jule_result_arg1;
};
struct __jule_tuple_i64__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1ab17e039_IR__jule_tuple_s_1d9d938bd_Log {
	jule::Ptr<_1ab17e039_IR> __jule_result_arg0;
	jule::Slice<_1d9d938bd_Log> __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_i32 {
	jule::I32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_int {
	jule::I32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_u64 {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_f64 {
	jule::F64 __jule_result_arg0;
	jule::F64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple__1dbbeddec_ConvError {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_bool {
	jule::F32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
	jule::Bool __jule_result_arg3;
	jule::Bool __jule_result_arg4;
	jule::I64 __jule_result_arg5;
	jule::Bool __jule_result_arg6;
};
struct __jule_tuple_f64__jule_tuple__1dbbeddec_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_int__jule_tuple__1dbbeddec_ConvError {
	jule::F32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple__1dbbeddec_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
	jule::U64 __jule_result_arg2;
	jule::I64 __jule_result_arg3;
};
struct __jule_tuple_u32__jule_tuple_int__jule_tuple_bool {
	jule::U32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u32__jule_tuple_u32 {
	jule::U32 __jule_result_arg0;
	jule::U32 __jule_result_arg1;
};
struct __jule_tuple_su8__jule_tuple_str {
	jule::Slice<jule::U8> __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple_u8__jule_tuple_bool {
	jule::U8 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1aa94d51d_SymbolTable__jule_tuple_s_1d9d938bd_Log {
	jule::Ptr<_1aa94d51d_SymbolTable> __jule_result_arg0;
	jule::Slice<_1d9d938bd_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1aa8d3b57_Package__jule_tuple_s_1d9d938bd_Log {
	jule::Ptr<_1aa8d3b57_Package> __jule_result_arg0;
	jule::Slice<_1d9d938bd_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1aa81e80c_Ast__jule_tuple_s_1d9d938bd_Log {
	jule::Ptr<_1aa81e80c_Ast> __jule_result_arg0;
	jule::Slice<_1d9d938bd_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_bool {
	jule::Bool __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_int__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1db944d0d_Token__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1db944d0d_Token>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1db944d0d_Token__jule_tuple_sx_1db944d0d_Token {
	jule::Slice<jule::Ptr<_1db944d0d_Token>> __jule_result_arg0;
	jule::Slice<jule::Ptr<_1db944d0d_Token>> __jule_result_arg1;
};
struct __jule_tuple_sx_1db944d0d_Token__jule_tuple_int {
	jule::Slice<jule::Ptr<_1db944d0d_Token>> __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_ssx_1db944d0d_Token__jule_tuple_s_1d9d938bd_Log {
	jule::Slice<jule::Slice<jule::Ptr<_1db944d0d_Token>>> __jule_result_arg0;
	jule::Slice<_1d9d938bd_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_u64 {
	jule::Bool __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct _203e62d5d_acceptRange {
	jule::U8 _field_lo = 0;
	jule::U8 _field_hi = 0;
	

	_203e62d5d_acceptRange(void) = default;

	inline bool operator==(_203e62d5d_acceptRange _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_203e62d5d_acceptRange _other) { return !this->operator==(_other); }


};
struct _1d9cbbb37_Range16 {
	jule::U16 _field_Lo = 0;
	jule::U16 _field_Hi = 0;
	jule::U16 _field_Stride = 0;
	

	_1d9cbbb37_Range16(void) = default;

	inline bool operator==(_1d9cbbb37_Range16 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_1d9cbbb37_Range16 _other) { return !this->operator==(_other); }


};
struct _1d9cbc0aa_Range32 {
	jule::U32 _field_Lo = 0;
	jule::U32 _field_Hi = 0;
	jule::U32 _field_Stride = 0;
	

	_1d9cbc0aa_Range32(void) = default;

	inline bool operator==(_1d9cbc0aa_Range32 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_1d9cbc0aa_Range32 _other) { return !this->operator==(_other); }


};
struct _1d9cbc52d_RangeTable {
	jule::Slice<_1d9cbbb37_Range16> _field_R16;
	jule::Slice<_1d9cbc0aa_Range32> _field_R32;
	jule::I64 _field_LatinOffset = 0;
	

	_1d9cbc52d_RangeTable(void) = default;


};
inline jule::U8 _1d9d0bdec_index(_1d9d0b979_lazyBuff*, jule::I64);
inline void _1d9d0c172_append(_1d9d0b979_lazyBuff*, jule::U8);
inline jule::Str _1d9d0c3d6_string(_1d9d0b979_lazyBuff*);
struct _1d9d0b979_lazyBuff {
	jule::Str _field_path;
	jule::Slice<jule::U8> _field_buff;
	jule::I64 _field_w = 0;
	jule::Str _field_volAndPath;
	jule::I64 _field_volLen = 0;
	

	_1d9d0b979_lazyBuff(void) = default;


};
struct _203d70793_DirEntry {
	jule::Str _field_Name;
	jule::Ptr<_203d7eb15_Status> _field_Stat;
	

	_203d70793_DirEntry(void) = default;

	inline bool operator==(_203d70793_DirEntry _other) {
		return 
			this->_field_Name == _other._field_Name &&
			this->_field_Stat == _other._field_Stat;
	}

	inline bool operator!=(_203d70793_DirEntry _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Slice<jule::Ptr<_203d70793_DirEntry>>> static__1d9d0e43d_Read(jule::Str);
inline jule::VoidExceptional static__1d9d0e64c_Create(jule::Str);
inline jule::VoidExceptional static__1d9d0e85b_Remove(jule::Str);
struct _203d70a07_Directory {
	

	_203d70a07_Directory(void) = default;

	inline bool operator==(_203d70a07_Directory _other) { return true; }

	inline bool operator!=(_203d70a07_Directory _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_203d7c4c5_File> static__203d7c937_New(jule::Uintptr);
inline jule::Exceptional<jule::Ptr<_203d7c4c5_File>> static__203d7cbce_Create(jule::Str);
inline jule::Exceptional<jule::Slice<jule::U8>> static__203d7ce76_Read(jule::Str);
inline jule::VoidExceptional static__203d7d2c8_Write(jule::Str, jule::Slice<jule::U8>, jule::I64);
inline jule::VoidExceptional static__203d7d62a_WriteStr(jule::Str, jule::Str*, jule::I64);
inline jule::Exceptional<jule::I64> _203d7dae2_Seek(_203d7c4c5_File*, jule::I64, jule::I64);
inline jule::Exceptional<jule::I64> _203d7de00_WriteStr(_203d7c4c5_File*, jule::Str*);
inline jule::VoidExceptional _203d7e0cb_Close(_203d7c4c5_File*);
inline jule::Exceptional<jule::Ptr<_203d7c4c5_File>> static__203e66845_Open(jule::Str, jule::I64, jule::I64);
inline jule::VoidExceptional static__203e66a54_Remove(jule::Str);
inline jule::Exceptional<jule::I64> _203e66e61_Write(_203d7c4c5_File*, jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I64> _203e6726e_Read(_203d7c4c5_File*, jule::Slice<jule::U8>);
struct _203d7c4c5_File {
	jule::Uintptr _field_handle = 0;
	

	_203d7c4c5_File(void) = default;

	inline bool operator==(_203d7c4c5_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_203d7c4c5_File _other) { return !this->operator==(_other); }


};
inline jule::Bool _203d80022_IsDir(_203d7eb15_Status*);
inline jule::Bool _203d80286_IsReg(_203d7eb15_Status*);
inline jule::U64 _203d804ea_Size(_203d7eb15_Status*);
inline jule::Exceptional<jule::Ptr<_203d7eb15_Status>> static__1d9d101b9_Of(jule::Str);
struct _203d7eb15_Status {
	jule::I64 _field_mode = 0LL;
	jule::U64 _field_size = 0;
	

	_203d7eb15_Status(void) = default;

	inline bool operator==(_203d7eb15_Status _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_203d7eb15_Status _other) { return !this->operator==(_other); }


};
struct _1d9e35278_cmdAttrs {
	HANDLE _field_hProcess = nullptr;
	HANDLE _field_hThread = nullptr;
	

	_1d9e35278_cmdAttrs(void) = default;

	inline bool operator==(_1d9e35278_cmdAttrs _other) {
		return 
			this->_field_hProcess == _other._field_hProcess &&
			this->_field_hThread == _other._field_hThread;
	}

	inline bool operator!=(_1d9e35278_cmdAttrs _other) { return !this->operator==(_other); }


};
struct _1d9d938bd_Log {
	jule::I64 _field_Kind = 0LL;
	jule::I64 _field_Row = 0;
	jule::I64 _field_Column = 0;
	jule::Str _field_Path;
	jule::Str _field_Text;
	jule::Str _field_Line;
	jule::Str _field_Suggestion;
	

	_1d9d938bd_Log(void) = default;

	inline bool operator==(_1d9d938bd_Log _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Path == _other._field_Path &&
			this->_field_Text == _other._field_Text &&
			this->_field_Line == _other._field_Line &&
			this->_field_Suggestion == _other._field_Suggestion;
	}

	inline bool operator!=(_1d9d938bd_Log _other) { return !this->operator==(_other); }


};
inline jule::U8 _1db9451b5_Prec(_1db944d0d_Token*);
struct _1db944d0d_Token {
	jule::Ptr<_1db94a198_File> _field_File;
	jule::I64 _field_Row = 0;
	jule::I64 _field_Column = 0;
	jule::Str _field_Kind;
	jule::U64 _field_Id = 0LLU;
	

	_1db944d0d_Token(void) = default;

	inline bool operator==(_1db944d0d_Token _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Id == _other._field_Id;
	}

	inline bool operator!=(_1db944d0d_Token _other) { return !this->operator==(_other); }


};
inline jule::Bool _1db94a5a5_IsOk(_1db94a198_File*);
inline void _1db94a82a_Fill(_1db94a198_File*, jule::Slice<jule::U8>);
inline jule::Str _1db94aa8e_Dir(_1db94a198_File*);
inline jule::Str _1db94ad03_Name(_1db94a198_File*);
inline jule::Uintptr _1db94b067_Addr(_1db94a198_File*);
inline jule::Str _1db94b375_GetRow(_1db94a198_File*, jule::I64);
struct _1db94a198_File {
	jule::Str _field_Path;
	jule::Slice<jule::U8> _field_Data;
	jule::Slice<jule::Ptr<_1db944d0d_Token>> _field_Tokens;
	

	_1db94a198_File(void) = default;


};
struct _1db94c200_kindPair {
	jule::Str _field_kind = jule::Str("::", 2);
	jule::U64 _field_id = 0LLU;
	

	_1db94c200_kindPair(void) = default;

	inline bool operator==(_1db94c200_kindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_1db94c200_kindPair _other) { return !this->operator==(_other); }


};
inline void _1db953305_pushErr(_1db952c61_lex*, jule::Str, jule::Slice<jule::Any>);
inline void _1db953624_pushErrTok(_1db952c61_lex*, jule::Ptr<_1db944d0d_Token>*, jule::Str);
inline void _1db953800_lex(_1db952c61_lex*);
inline jule::Str _1db953b0d_id(_1db952c61_lex*, jule::Slice<jule::U8>*);
inline jule::Slice<jule::U8> _1db953d72_resume(_1db952c61_lex*);
inline void _1db9540e7_lexLineComment(_1db952c61_lex*, jule::Ptr<_1db944d0d_Token>*);
inline void _1db95436c_lexRangeComment(_1db952c61_lex*, jule::Ptr<_1db944d0d_Token>*);
inline jule::Str _1db95467a_num(_1db952c61_lex*, jule::Slice<jule::U8>*);
inline jule::Str _1db954988_escapeSeq(_1db952c61_lex*, jule::Slice<jule::U8>*);
inline jule::Str _1db954d40_getRune(_1db952c61_lex*, jule::Slice<jule::U8>*, jule::Bool);
inline jule::Str _1db95514d_lexRune(_1db952c61_lex*, jule::Slice<jule::U8>*);
inline jule::Str _1db9553b2_lexStr(_1db952c61_lex*);
inline jule::Bool _1db955626_isFirstTokenOfLine(_1db952c61_lex*);
inline void _1db955802_newLine(_1db952c61_lex*);
inline jule::Bool _1db955cec_isOp(_1db952c61_lex*, jule::Slice<jule::U8>*, jule::Str, jule::U64, jule::Ptr<_1db944d0d_Token>*);
inline jule::Bool _1db9561a4_lexBasicOps(_1db952c61_lex*, jule::Slice<jule::U8>, jule::Ptr<_1db944d0d_Token>*);
inline jule::Bool _1db95655b_lexId(_1db952c61_lex*, jule::Slice<jule::U8>*, jule::Ptr<_1db944d0d_Token>*);
inline jule::Bool _1db956913_lexNum(_1db952c61_lex*, jule::Slice<jule::U8>*, jule::Ptr<_1db944d0d_Token>*);
inline jule::Ptr<_1db944d0d_Token> _1db956b77_token(_1db952c61_lex*);
struct _1db952c61_lex {
	jule::I64 _field_mode = 0LL;
	jule::Slice<jule::Ptr<_1db944d0d_Token>> _field_tokens;
	jule::Ptr<_1db94a198_File> _field_file;
	jule::I64 _field_pos = 0;
	jule::I64 _field_column = 0;
	jule::I64 _field_row = 0;
	jule::Slice<_1d9d938bd_Log> _field_errors;
	

	_1db952c61_lex(void) = default;


};
struct _1dc59ac60_floatInfo {
	jule::U64 _field_mantbits = 0;
	jule::U64 _field_expbits = 0;
	jule::I64 _field_bias = 0;
	

	_1dc59ac60_floatInfo(void) = default;

	inline bool operator==(_1dc59ac60_floatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_1dc59ac60_floatInfo _other) { return !this->operator==(_other); }


};
struct _1dc59b887_decimalSlice {
	jule::Slice<jule::U8> _field_d;
	jule::I64 _field_nd = 0;
	jule::I64 _field_dp = 0;
	jule::Bool _field_neg = false;
	

	_1dc59b887_decimalSlice(void) = default;


};
struct _1dc5acca5_leftCheat {
	jule::I64 _field_delta = 0;
	jule::Str _field_cutoff;
	

	_1dc5acca5_leftCheat(void) = default;

	inline bool operator==(_1dc5acca5_leftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_1dc5acca5_leftCheat _other) { return !this->operator==(_other); }


};
inline jule::Bool _1dc5a57e7_set(_1dc5ad778_decimal*, jule::Str);
inline __jule_tuple_u64__jule_tuple_bool _1dc5a5b05_floatBits(_1dc5ad778_decimal*, _1dc59ac60_floatInfo*);
inline void _1dc5adb52_assign(_1dc5ad778_decimal*, jule::U64);
inline void _1dc5addc7_shift(_1dc5ad778_decimal*, jule::I64);
inline void _1dc5ae14c_roundDown(_1dc5ad778_decimal*, jule::I64);
inline void _1dc5ae3c2_roundUp(_1dc5ad778_decimal*, jule::I64);
inline void _1dc5ae647_round(_1dc5ad778_decimal*, jule::I64);
inline jule::U64 _1dc5ae8ab_roundedInteger(_1dc5ad778_decimal*);
struct _1dc5ad778_decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>(0);
	jule::I64 _field_nd = 0;
	jule::I64 _field_dp = 0;
	jule::Bool _field_neg = false;
	jule::Bool _field_trunc = false;
	

	_1dc5ad778_decimal(void) = default;

	inline bool operator==(_1dc5ad778_decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_1dc5ad778_decimal _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1c0901b1b_Const> static__1c090208e_NewI64(jule::I64);
inline jule::Ptr<_1c0901b1b_Const> static__1c0902336_NewU64(jule::U64);
inline jule::Ptr<_1c0901b1b_Const> static__1c09025cd_NewBool(jule::Bool);
inline jule::Ptr<_1c0901b1b_Const> static__1c0902875_NewStr(jule::Str);
inline jule::Ptr<_1c0901b1b_Const> static__1c0902b1c_NewF64(jule::F64);
inline jule::Ptr<_1c0901b1b_Const> static__1c0902d1a_NewNil(void);
inline jule::I64 _1c0903414_ReadI64(_1c0901b1b_Const*);
inline jule::U64 _1c0903678_ReadU64(_1c0901b1b_Const*);
inline jule::Bool _1c09038dc_ReadBool(_1c0901b1b_Const*);
inline jule::Str _1c0903b51_ReadStr(_1c0901b1b_Const*);
inline jule::F64 _1c0903db5_ReadF64(_1c0901b1b_Const*);
inline jule::I64 _1c0904129_AsI64(_1c0901b1b_Const*);
inline jule::U64 _1c090438d_AsU64(_1c0901b1b_Const*);
inline jule::F64 _1c0904602_AsF64(_1c0901b1b_Const*);
inline void _1c0904877_SetI64(_1c0901b1b_Const*, jule::I64);
inline void _1c0904aec_SetU64(_1c0901b1b_Const*, jule::U64);
inline void _1c0904d72_SetBool(_1c0901b1b_Const*, jule::Bool);
inline void _1c09050e7_SetStr(_1c0901b1b_Const*, jule::Str);
inline void _1c090536c_SetF64(_1c0901b1b_Const*, jule::F64);
inline void _1c0905548_SetNil(_1c0901b1b_Const*);
inline jule::Bool _1c09057ac_IsI64(_1c0901b1b_Const*);
inline jule::Bool _1c0905a21_IsU64(_1c0901b1b_Const*);
inline jule::Bool _1c0905c85_IsBool(_1c0901b1b_Const*);
inline jule::Bool _1c0905ee9_IsStr(_1c0901b1b_Const*);
inline jule::Bool _1c090625d_IsF64(_1c0901b1b_Const*);
inline jule::Bool _1c09064c2_IsNil(_1c0901b1b_Const*);
inline jule::Bool _1c09067d0_AreSameTypes(_1c0901b1b_Const*, _1c0901b1b_Const);
inline jule::Bool _1c0906add_And(_1c0901b1b_Const*, _1c0901b1b_Const);
inline jule::Bool _1c0906deb_Or(_1c0901b1b_Const*, _1c0901b1b_Const);
inline jule::Bool _1c0907209_Eq(_1c0901b1b_Const*, _1c0901b1b_Const);
inline jule::Bool _1c0907517_Lt(_1c0901b1b_Const*, _1c0901b1b_Const);
inline jule::Bool _1c0907825_LtEq(_1c0901b1b_Const*, _1c0901b1b_Const);
inline jule::Bool _1c0907b33_Gt(_1c0901b1b_Const*, _1c0901b1b_Const);
inline jule::Bool _1c0907e41_GtEq(_1c0901b1b_Const*, _1c0901b1b_Const);
inline jule::Bool _1c090824e_Add(_1c0901b1b_Const*, _1c0901b1b_Const);
inline jule::Bool _1c090855c_Sub(_1c0901b1b_Const*, _1c0901b1b_Const);
inline jule::Bool _1c090886a_Mul(_1c0901b1b_Const*, _1c0901b1b_Const);
inline jule::Bool _1c0908b78_Div(_1c0901b1b_Const*, _1c0901b1b_Const);
inline jule::Bool _1c0908e86_Mod(_1c0901b1b_Const*, _1c0901b1b_Const);
inline jule::Bool _1c0909294_BitwiseAnd(_1c0901b1b_Const*, _1c0901b1b_Const);
inline jule::Bool _1c09095a2_BitwiseOr(_1c0901b1b_Const*, _1c0901b1b_Const);
inline jule::Bool _1c09098b0_Xor(_1c0901b1b_Const*, _1c0901b1b_Const);
inline jule::Bool _1c0909bbd_Lshift(_1c0901b1b_Const*, _1c0901b1b_Const);
inline jule::Bool _1c0909ecb_Rshift(_1c0901b1b_Const*, _1c0901b1b_Const);
struct _1c0901b1b_Const {
	jule::Str _field_Kind;
	jule::Any _field_data;
	

	_1c0901b1b_Const(void) = default;

	inline jule::Bool operator==(_1c0901b1b_Const _other) { return _1c0907209_Eq(this, _other); }

	inline bool operator!=(_1c0901b1b_Const _other) { return !this->operator==(_other); }

	inline jule::Bool operator>(_1c0901b1b_Const _other) { return _1c0907b33_Gt(this, _other); }

	inline jule::Bool operator>=(_1c0901b1b_Const _other) { return _1c0907e41_GtEq(this, _other); }

	inline jule::Bool operator<(_1c0901b1b_Const _other) { return _1c0907517_Lt(this, _other); }

	inline jule::Bool operator<=(_1c0901b1b_Const _other) { return _1c0907825_LtEq(this, _other); }


};
struct _1aa81e80c_Ast {
	jule::Ptr<_1db94a198_File> _field_File;
	jule::Slice<jule::Ptr<_1aa820a94_Directive>> _field_TopDirectives;
	jule::Slice<jule::Ptr<_1aa86b6d3_UseDecl>> _field_UseDecls;
	jule::Slice<_1aa820698_Node> _field_Nodes;
	

	_1aa81e80c_Ast(void) = default;


};
struct _1aa820698_Node {
	jule::Ptr<_1db944d0d_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	_1aa820698_Node(void) = default;

	inline bool operator==(_1aa820698_Node _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1aa820698_Node _other) { return !this->operator==(_other); }


};
struct _1aa820a94_Directive {
	jule::Ptr<_1db944d0d_Token> _field_Tag;
	jule::Slice<jule::Ptr<_1db944d0d_Token>> _field_Args;
	

	_1aa820a94_Directive(void) = default;


};
struct _1aa854028_TypeDecl {
	jule::Ptr<_1db944d0d_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	_1aa854028_TypeDecl(void) = default;

	inline bool operator==(_1aa854028_TypeDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1aa854028_TypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1aa854952_IsPrim(_1aa8545de_IdentTypeDecl*);
struct _1aa8545de_IdentTypeDecl {
	jule::Ptr<_1db944d0d_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_CppLinked = false;
	jule::Slice<jule::Ptr<_1aa854028_TypeDecl>> _field_Generics;
	

	_1aa8545de_IdentTypeDecl(void) = default;


};
struct _1aa854c3d_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_1aa8545de_IdentTypeDecl>> _field_Idents;
	

	_1aa854c3d_SubIdentTypeDecl(void) = default;


};
struct _1aa8550e5_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_1db944d0d_Token>> _field_Idents;
	jule::Ptr<_1aa854028_TypeDecl> _field_Kind;
	

	_1aa8550e5_NamespaceTypeDecl(void) = default;


};
struct _1aa8553d1_SptrTypeDecl {
	jule::Ptr<_1aa854028_TypeDecl> _field_Elem;
	

	_1aa8553d1_SptrTypeDecl(void) = default;

	inline bool operator==(_1aa8553d1_SptrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1aa8553d1_SptrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1aa8557cc_SlcTypeDecl {
	jule::Ptr<_1aa854028_TypeDecl> _field_Elem;
	

	_1aa8557cc_SlcTypeDecl(void) = default;

	inline bool operator==(_1aa8557cc_SlcTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1aa8557cc_SlcTypeDecl _other) { return !this->operator==(_other); }


};
struct _1aa855ab8_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1aa854028_TypeDecl>> _field_Types;
	

	_1aa855ab8_TupleTypeDecl(void) = default;


};
inline jule::Bool _1aa856206_IsUnsafe(_1aa855da4_PtrTypeDecl*);
struct _1aa855da4_PtrTypeDecl {
	jule::Ptr<_1aa854028_TypeDecl> _field_Elem;
	

	_1aa855da4_PtrTypeDecl(void) = default;

	inline bool operator==(_1aa855da4_PtrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1aa855da4_PtrTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1aa856910_AutoSized(_1aa856536_ArrTypeDecl*);
struct _1aa856536_ArrTypeDecl {
	jule::Ptr<_1aa854028_TypeDecl> _field_Elem;
	jule::Ptr<_1aa858549_Expr> _field_Size;
	

	_1aa856536_ArrTypeDecl(void) = default;

	inline bool operator==(_1aa856536_ArrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_1aa856536_ArrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1aa856c84_MapTypeDecl {
	jule::Ptr<_1aa854028_TypeDecl> _field_Key;
	jule::Ptr<_1aa854028_TypeDecl> _field_Val;
	

	_1aa856c84_MapTypeDecl(void) = default;

	inline bool operator==(_1aa856c84_MapTypeDecl _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1aa856c84_MapTypeDecl _other) { return !this->operator==(_other); }


};
struct _1aa85713b_RetTypeDecl {
	jule::Ptr<_1aa854028_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1db944d0d_Token>> _field_Idents;
	

	_1aa85713b_RetTypeDecl(void) = default;


};
struct _1aa858549_Expr {
	jule::Ptr<_1db944d0d_Token> _field_Token;
	jule::Ptr<_1db944d0d_Token> _field_End;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	_1aa858549_Expr(void) = default;

	inline bool operator==(_1aa858549_Expr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1aa858549_Expr _other) { return !this->operator==(_other); }


};
struct _1aa858835_RangeExpr {
	jule::Ptr<_1aa858549_Expr> _field_Expr;
	

	_1aa858835_RangeExpr(void) = default;

	inline bool operator==(_1aa858835_RangeExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1aa858835_RangeExpr _other) { return !this->operator==(_other); }


};
struct _1aa858dda_UseExpr {
	jule::Ptr<_1db944d0d_Token> _field_Token;
	jule::Ptr<_1aa858549_Expr> _field_Expr;
	

	_1aa858dda_UseExpr(void) = default;

	inline bool operator==(_1aa858dda_UseExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1aa858dda_UseExpr _other) { return !this->operator==(_other); }


};
struct _1aa8591c6_TupleExpr {
	jule::Slice<jule::Ptr<_1aa858549_Expr>> _field_Expr;
	

	_1aa8591c6_TupleExpr(void) = default;


};
inline jule::Bool _1aa8598d0_IsNil(_1aa85957d_LitExpr*);
struct _1aa85957d_LitExpr {
	jule::Ptr<_1db944d0d_Token> _field_Token;
	jule::Str _field_Value;
	

	_1aa85957d_LitExpr(void) = default;

	inline bool operator==(_1aa85957d_LitExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1aa85957d_LitExpr _other) { return !this->operator==(_other); }


};
struct _1aa859c87_UnsafeExpr {
	jule::Ptr<_1db944d0d_Token> _field_Token;
	jule::Ptr<_1aa858549_Expr> _field_Expr;
	

	_1aa859c87_UnsafeExpr(void) = default;

	inline bool operator==(_1aa859c87_UnsafeExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1aa859c87_UnsafeExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1aa85a55c_IsSelf(_1aa85a20a_IdentExpr*);
struct _1aa85a20a_IdentExpr {
	jule::Ptr<_1db944d0d_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_CppLinked = false;
	

	_1aa85a20a_IdentExpr(void) = default;

	inline bool operator==(_1aa85a20a_IdentExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_CppLinked == _other._field_CppLinked;
	}

	inline bool operator!=(_1aa85a20a_IdentExpr _other) { return !this->operator==(_other); }


};
struct _1aa85a914_UnaryExpr {
	jule::Ptr<_1db944d0d_Token> _field_Op;
	jule::Ptr<_1aa858549_Expr> _field_Expr;
	

	_1aa85a914_UnaryExpr(void) = default;

	inline bool operator==(_1aa85a914_UnaryExpr _other) {
		return 
			this->_field_Op == _other._field_Op &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1aa85a914_UnaryExpr _other) { return !this->operator==(_other); }


};
struct _1aa85acbb_VariadicExpr {
	jule::Ptr<_1db944d0d_Token> _field_Token;
	jule::Ptr<_1aa858549_Expr> _field_Expr;
	

	_1aa85acbb_VariadicExpr(void) = default;

	inline bool operator==(_1aa85acbb_VariadicExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1aa85acbb_VariadicExpr _other) { return !this->operator==(_other); }


};
struct _1aa85b173_CastExpr {
	jule::Ptr<_1aa854028_TypeDecl> _field_Kind;
	jule::Ptr<_1aa858549_Expr> _field_Expr;
	

	_1aa85b173_CastExpr(void) = default;

	inline bool operator==(_1aa85b173_CastExpr _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1aa85b173_CastExpr _other) { return !this->operator==(_other); }


};
struct _1aa85b52a_NsSelectionExpr {
	jule::Slice<jule::Ptr<_1db944d0d_Token>> _field_Ns;
	jule::Ptr<_1db944d0d_Token> _field_Ident;
	

	_1aa85b52a_NsSelectionExpr(void) = default;


};
struct _1aa85b99d_SubIdentExpr {
	jule::Bool _field_IsSelf = false;
	jule::Ptr<_1aa858549_Expr> _field_Expr;
	jule::Ptr<_1db944d0d_Token> _field_Ident;
	

	_1aa85b99d_SubIdentExpr(void) = default;

	inline bool operator==(_1aa85b99d_SubIdentExpr _other) {
		return 
			this->_field_IsSelf == _other._field_IsSelf &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1aa85b99d_SubIdentExpr _other) { return !this->operator==(_other); }


};
struct _1aa85be21_BinopExpr {
	jule::Ptr<_1aa858549_Expr> _field_Left;
	jule::Ptr<_1aa858549_Expr> _field_Right;
	jule::Ptr<_1db944d0d_Token> _field_Op;
	

	_1aa85be21_BinopExpr(void) = default;

	inline bool operator==(_1aa85be21_BinopExpr _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1aa85be21_BinopExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1aa85c88e_Unhandled(_1aa85c52b_FnCallExpr*);
inline jule::Bool _1aa85cb03_Ignored(_1aa85c52b_FnCallExpr*);
struct _1aa85c52b_FnCallExpr {
	jule::Ptr<_1db944d0d_Token> _field_Token;
	jule::Ptr<_1aa858549_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1aa858549_Expr>> _field_Args;
	jule::Ptr<_1aa863eb1_ScopeTree> _field_Exception;
	jule::Bool _field_IsCo = false;
	

	_1aa85c52b_FnCallExpr(void) = default;


};
inline jule::Bool _1aa85d30c_IsTargeted(_1aa85ceaa_FieldExprPair*);
struct _1aa85ceaa_FieldExprPair {
	jule::Ptr<_1db944d0d_Token> _field_Field;
	jule::Ptr<_1aa858549_Expr> _field_Expr;
	

	_1aa85ceaa_FieldExprPair(void) = default;

	inline bool operator==(_1aa85ceaa_FieldExprPair _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1aa85ceaa_FieldExprPair _other) { return !this->operator==(_other); }


};
struct _1aa85d708_StructLit {
	jule::Ptr<_1db944d0d_Token> _field_End;
	jule::Ptr<_1aa854028_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1aa858549_Expr>> _field_Exprs;
	

	_1aa85d708_StructLit(void) = default;


};
inline jule::Bool _1aa85decd_IsEmpty(_1aa85db7b_BraceLit*);
struct _1aa85db7b_BraceLit {
	jule::Ptr<_1db944d0d_Token> _field_Token;
	jule::Ptr<_1db944d0d_Token> _field_End;
	jule::Slice<jule::Ptr<_1aa858549_Expr>> _field_Exprs;
	

	_1aa85db7b_BraceLit(void) = default;


};
struct _1aa85e451_KeyValPair {
	jule::Ptr<_1aa858549_Expr> _field_Key;
	jule::Ptr<_1aa858549_Expr> _field_Val;
	jule::Ptr<_1db944d0d_Token> _field_Colon;
	

	_1aa85e451_KeyValPair(void) = default;

	inline bool operator==(_1aa85e451_KeyValPair _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val &&
			this->_field_Colon == _other._field_Colon;
	}

	inline bool operator!=(_1aa85e451_KeyValPair _other) { return !this->operator==(_other); }


};
inline jule::Bool _1aa85ee68_IsEmpty(_1aa85eb38_SliceExpr*);
struct _1aa85eb38_SliceExpr {
	jule::Ptr<_1db944d0d_Token> _field_Token;
	jule::Ptr<_1db944d0d_Token> _field_End;
	jule::Slice<jule::Ptr<_1aa858549_Expr>> _field_Exprs;
	

	_1aa85eb38_SliceExpr(void) = default;


};
struct _1aa8604a7_IndexingExpr {
	jule::Ptr<_1db944d0d_Token> _field_Token;
	jule::Ptr<_1db944d0d_Token> _field_End;
	jule::Ptr<_1aa858549_Expr> _field_Expr;
	jule::Ptr<_1aa858549_Expr> _field_Index;
	

	_1aa8604a7_IndexingExpr(void) = default;

	inline bool operator==(_1aa8604a7_IndexingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1aa8604a7_IndexingExpr _other) { return !this->operator==(_other); }


};
struct _1aa860ab2_SlicingExpr {
	jule::Ptr<_1db944d0d_Token> _field_Token;
	jule::Ptr<_1db944d0d_Token> _field_End;
	jule::Ptr<_1aa858549_Expr> _field_Expr;
	jule::Ptr<_1aa858549_Expr> _field_Start;
	jule::Ptr<_1aa858549_Expr> _field_To;
	

	_1aa860ab2_SlicingExpr(void) = default;

	inline bool operator==(_1aa860ab2_SlicingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Start == _other._field_Start &&
			this->_field_To == _other._field_To;
	}

	inline bool operator!=(_1aa860ab2_SlicingExpr _other) { return !this->operator==(_other); }


};
struct _1aa860d9d_Constraint {
	jule::Slice<jule::Ptr<_1aa854028_TypeDecl>> _field_Mask;
	

	_1aa860d9d_Constraint(void) = default;


};
struct _1aa861321_GenericDecl {
	jule::Ptr<_1db944d0d_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1aa860d9d_Constraint> _field_Constraint;
	

	_1aa861321_GenericDecl(void) = default;

	inline bool operator==(_1aa861321_GenericDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Constraint == _other._field_Constraint;
	}

	inline bool operator!=(_1aa861321_GenericDecl _other) { return !this->operator==(_other); }


};
struct _1aa8616c8_LabelSt {
	jule::Ptr<_1db944d0d_Token> _field_Token;
	jule::Str _field_Ident;
	

	_1aa8616c8_LabelSt(void) = default;

	inline bool operator==(_1aa8616c8_LabelSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1aa8616c8_LabelSt _other) { return !this->operator==(_other); }


};
struct _1aa861a80_GotoSt {
	jule::Ptr<_1db944d0d_Token> _field_Token;
	jule::Ptr<_1db944d0d_Token> _field_Label;
	

	_1aa861a80_GotoSt(void) = default;

	inline bool operator==(_1aa861a80_GotoSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1aa861a80_GotoSt _other) { return !this->operator==(_other); }


};
struct _1aa861d6b_FallSt {
	jule::Ptr<_1db944d0d_Token> _field_Token;
	

	_1aa861d6b_FallSt(void) = default;

	inline bool operator==(_1aa861d6b_FallSt _other) {
		return 
			this->_field_Token == _other._field_Token;
	}

	inline bool operator!=(_1aa861d6b_FallSt _other) { return !this->operator==(_other); }


};
struct _1aa862476_AssignLeft {
	jule::Ptr<_1db944d0d_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Str _field_Ident;
	jule::Ptr<_1aa858549_Expr> _field_Expr;
	

	_1aa862476_AssignLeft(void) = default;

	inline bool operator==(_1aa862476_AssignLeft _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1aa862476_AssignLeft _other) { return !this->operator==(_other); }


};
struct _1aa8629b5_AssignSt {
	jule::Bool _field_Declarative = false;
	jule::Ptr<_1db944d0d_Token> _field_Setter;
	jule::Slice<jule::Ptr<_1aa862476_AssignLeft>> _field_Left;
	jule::Ptr<_1aa858549_Expr> _field_Right;
	

	_1aa8629b5_AssignSt(void) = default;


};
struct _1aa8638a6_Stmt {
	jule::Ptr<_1db944d0d_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	_1aa8638a6_Stmt(void) = default;

	inline bool operator==(_1aa8638a6_Stmt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1aa8638a6_Stmt _other) { return !this->operator==(_other); }


};
struct _1aa863eb1_ScopeTree {
	jule::Ptr<_1aa863eb1_ScopeTree> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<_1aa8638a6_Stmt> _field_Stmts;
	jule::Ptr<_1db944d0d_Token> _field_End;
	

	_1aa863eb1_ScopeTree(void) = default;


};
inline jule::Bool _1aa8649ea_IsSelf(_1aa864687_ParamDecl*);
inline jule::Bool _1aa864c5e_IsRef(_1aa864687_ParamDecl*);
struct _1aa864687_ParamDecl {
	jule::Ptr<_1db944d0d_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1aa854028_TypeDecl> _field_Kind;
	jule::Str _field_Ident;
	

	_1aa864687_ParamDecl(void) = default;

	inline bool operator==(_1aa864687_ParamDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1aa864687_ParamDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1aa865d09_IsAnon(_1aa8659a7_FnDecl*);
struct _1aa8659a7_FnDecl {
	jule::Ptr<_1db944d0d_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1aa820a94_Directive>> _field_Directives;
	jule::Ptr<_1aa863eb1_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1aa861321_GenericDecl>> _field_Generics;
	jule::Ptr<_1aa85713b_RetTypeDecl> _field_Result;
	jule::Slice<jule::Ptr<_1aa864687_ParamDecl>> _field_Params;
	

	_1aa8659a7_FnDecl(void) = default;


};
struct _1aa866986_VarDecl {
	jule::Ptr<_1aa863eb1_ScopeTree> _field_Scope;
	jule::Ptr<_1db944d0d_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Slice<jule::Ptr<_1aa820a94_Directive>> _field_Directives;
	jule::Ptr<_1aa854028_TypeDecl> _field_Kind;
	jule::Ptr<_1aa858549_Expr> _field_Expr;
	

	_1aa866986_VarDecl(void) = default;


};
struct _1aa866d3d_RetSt {
	jule::Ptr<_1db944d0d_Token> _field_Token;
	jule::Ptr<_1aa858549_Expr> _field_Expr;
	

	_1aa866d3d_RetSt(void) = default;

	inline bool operator==(_1aa866d3d_RetSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1aa866d3d_RetSt _other) { return !this->operator==(_other); }


};
inline jule::Bool _1aa867800_IsInf(_1aa86749d_Iter*);
struct _1aa86749d_Iter {
	jule::Ptr<_1db944d0d_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	jule::Ptr<_1aa863eb1_ScopeTree> _field_Scope;
	

	_1aa86749d_Iter(void) = default;

	inline bool operator==(_1aa86749d_Iter _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1aa86749d_Iter _other) { return !this->operator==(_other); }


};
inline jule::Bool _1aa8680c5_IsWhileNext(_1aa867c73_WhileKind*);
struct _1aa867c73_WhileKind {
	jule::Ptr<_1aa858549_Expr> _field_Expr;
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_1db944d0d_Token> _field_NextToken;
	

	_1aa867c73_WhileKind(void) = default;

	inline bool operator==(_1aa867c73_WhileKind _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_NextToken == _other._field_NextToken;
	}

	inline bool operator!=(_1aa867c73_WhileKind _other) { return !this->operator==(_other); }


};
struct _1aa868614_RangeKind {
	jule::Ptr<_1db944d0d_Token> _field_InToken;
	jule::Ptr<_1aa858549_Expr> _field_Expr;
	jule::Ptr<_1aa866986_VarDecl> _field_KeyA;
	jule::Ptr<_1aa866986_VarDecl> _field_KeyB;
	

	_1aa868614_RangeKind(void) = default;

	inline bool operator==(_1aa868614_RangeKind _other) {
		return 
			this->_field_InToken == _other._field_InToken &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1aa868614_RangeKind _other) { return !this->operator==(_other); }


};
struct _1aa8689bb_BreakSt {
	jule::Ptr<_1db944d0d_Token> _field_Token;
	jule::Ptr<_1db944d0d_Token> _field_Label;
	

	_1aa8689bb_BreakSt(void) = default;

	inline bool operator==(_1aa8689bb_BreakSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1aa8689bb_BreakSt _other) { return !this->operator==(_other); }


};
struct _1aa868d73_ContSt {
	jule::Ptr<_1db944d0d_Token> _field_Token;
	jule::Ptr<_1db944d0d_Token> _field_Label;
	

	_1aa868d73_ContSt(void) = default;

	inline bool operator==(_1aa868d73_ContSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1aa868d73_ContSt _other) { return !this->operator==(_other); }


};
struct _1aa8692e6_If {
	jule::Ptr<_1db944d0d_Token> _field_Token;
	jule::Ptr<_1aa858549_Expr> _field_Expr;
	jule::Ptr<_1aa863eb1_ScopeTree> _field_Scope;
	

	_1aa8692e6_If(void) = default;

	inline bool operator==(_1aa8692e6_If _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1aa8692e6_If _other) { return !this->operator==(_other); }


};
struct _1aa86969d_Else {
	jule::Ptr<_1db944d0d_Token> _field_Token;
	jule::Ptr<_1aa863eb1_ScopeTree> _field_Scope;
	

	_1aa86969d_Else(void) = default;

	inline bool operator==(_1aa86969d_Else _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1aa86969d_Else _other) { return !this->operator==(_other); }


};
struct _1aa869b21_Conditional {
	jule::Ptr<_1aa8692e6_If> _field_Head;
	jule::Slice<jule::Ptr<_1aa8692e6_If>> _field_Tail;
	jule::Ptr<_1aa86969d_Else> _field_Default;
	

	_1aa869b21_Conditional(void) = default;


};
struct _1aa86a2e7_TypeAliasDecl {
	jule::Ptr<_1aa863eb1_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Ptr<_1db944d0d_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1aa854028_TypeDecl> _field_Kind;
	

	_1aa86a2e7_TypeAliasDecl(void) = default;

	inline bool operator==(_1aa86a2e7_TypeAliasDecl _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1aa86a2e7_TypeAliasDecl _other) { return !this->operator==(_other); }


};
struct _1aa86a76a_Case {
	jule::Ptr<_1db944d0d_Token> _field_Token;
	jule::Ptr<_1aa863eb1_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1aa858549_Expr>> _field_Exprs;
	

	_1aa86a76a_Case(void) = default;


};
struct _1aa86ae41_MatchCase {
	jule::Ptr<_1db944d0d_Token> _field_Token;
	jule::Ptr<_1db944d0d_Token> _field_End;
	jule::Bool _field_TypeMatch = false;
	jule::Ptr<_1aa858549_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1aa86a76a_Case>> _field_Cases;
	jule::Ptr<_1aa86969d_Else> _field_Default;
	

	_1aa86ae41_MatchCase(void) = default;


};
struct _1aa86b6d3_UseDecl {
	jule::Ptr<_1db944d0d_Token> _field_Token;
	jule::Str _field_LinkPath;
	jule::Str _field_Alias;
	jule::Bool _field_Full = false;
	jule::Slice<jule::Ptr<_1db944d0d_Token>> _field_Selected;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Std = false;
	

	_1aa86b6d3_UseDecl(void) = default;


};
inline jule::Bool _1aa86bea8_AutoExpr(_1aa86bb56_EnumItemDecl*);
struct _1aa86bb56_EnumItemDecl {
	jule::Ptr<_1db944d0d_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1aa858549_Expr> _field_Expr;
	

	_1aa86bb56_EnumItemDecl(void) = default;

	inline bool operator==(_1aa86bb56_EnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1aa86bb56_EnumItemDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1aa86cc12_DefaultTyped(_1aa86c67e_EnumDecl*);
struct _1aa86c67e_EnumDecl {
	jule::Ptr<_1db944d0d_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_1aa854028_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1aa86bb56_EnumItemDecl>> _field_Items;
	jule::Ptr<_1db944d0d_Token> _field_End;
	

	_1aa86c67e_EnumDecl(void) = default;


};
struct _1aa86d185_TypeEnumItemDecl {
	jule::Ptr<_1db944d0d_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1aa854028_TypeDecl> _field_Kind;
	

	_1aa86d185_TypeEnumItemDecl(void) = default;

	inline bool operator==(_1aa86d185_TypeEnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1aa86d185_TypeEnumItemDecl _other) { return !this->operator==(_other); }


};
struct _1aa86d790_TypeEnumDecl {
	jule::Ptr<_1db944d0d_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1aa86d185_TypeEnumItemDecl>> _field_Items;
	jule::Ptr<_1db944d0d_Token> _field_End;
	

	_1aa86d790_TypeEnumDecl(void) = default;


};
struct _1aa86d98d_FieldDecl {
	jule::Ptr<_1db944d0d_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_1aa854028_TypeDecl> _field_Kind;
	jule::Ptr<_1aa858549_Expr> _field_Default;
	

	_1aa86d98d_FieldDecl(void) = default;

	inline bool operator==(_1aa86d98d_FieldDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1aa86d98d_FieldDecl _other) { return !this->operator==(_other); }


};
struct _1aa86e241_StructDecl {
	jule::Ptr<_1db944d0d_Token> _field_Token;
	jule::Ptr<_1db944d0d_Token> _field_End;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1aa86d98d_FieldDecl>> _field_Fields;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Slice<jule::Ptr<_1aa820a94_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1aa861321_GenericDecl>> _field_Generics;
	

	_1aa86e241_StructDecl(void) = default;


};
struct _1aa86e917_TraitDecl {
	jule::Ptr<_1db944d0d_Token> _field_Token;
	jule::Ptr<_1db944d0d_Token> _field_End;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Slice<jule::Ptr<_1aa854028_TypeDecl>> _field_Inherits;
	jule::Slice<jule::Ptr<_1aa8659a7_FnDecl>> _field_Methods;
	

	_1aa86e917_TraitDecl(void) = default;


};
inline jule::Bool _1aa870385_IsTraitImpl(_1aa870022_Impl*);
inline jule::Bool _1aa8705e9_IsStructImpl(_1aa870022_Impl*);
struct _1aa870022_Impl {
	jule::Ptr<_1db944d0d_Token> _field_End;
	jule::Ptr<_1aa854028_TypeDecl> _field_Base;
	jule::Ptr<_1aa854028_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1aa8659a7_FnDecl>> _field_Methods;
	jule::Slice<jule::Ptr<_1aa866986_VarDecl>> _field_Statics;
	

	_1aa870022_Impl(void) = default;


};
inline jule::Ptr<_1aa8763e1_FieldIns> _1aa8718a3_instance(jule::Ptr<_1aa8714eb_Field>);
struct _1aa8714eb_Field {
	jule::Ptr<_1aa8740c0_Struct> _field_Owner;
	jule::Ptr<_1db944d0d_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_1aa9889ba_TypeSymbol> _field_Kind;
	jule::Ptr<_1aa858549_Expr> _field_Default;
	

	_1aa8714eb_Field(void) = default;

	inline bool operator==(_1aa8714eb_Field _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1aa8714eb_Field _other) { return !this->operator==(_other); }


};
struct _1aa8732ab_Operators {
	jule::Ptr<_1aa88c0c7_FnIns> _field_Eq;
	jule::Ptr<_1aa88c0c7_FnIns> _field_Gt;
	jule::Ptr<_1aa88c0c7_FnIns> _field_GtEq;
	jule::Ptr<_1aa88c0c7_FnIns> _field_Lt;
	jule::Ptr<_1aa88c0c7_FnIns> _field_LtEq;
	jule::Ptr<_1aa88c0c7_FnIns> _field_Shl;
	jule::Ptr<_1aa88c0c7_FnIns> _field_Shr;
	jule::Ptr<_1aa88c0c7_FnIns> _field_Add;
	jule::Ptr<_1aa88c0c7_FnIns> _field_Sub;
	jule::Ptr<_1aa88c0c7_FnIns> _field_Div;
	jule::Ptr<_1aa88c0c7_FnIns> _field_Mul;
	jule::Ptr<_1aa88c0c7_FnIns> _field_Mod;
	jule::Ptr<_1aa88c0c7_FnIns> _field_BitAnd;
	jule::Ptr<_1aa88c0c7_FnIns> _field_BitOr;
	jule::Ptr<_1aa88c0c7_FnIns> _field_BitXor;
	jule::Ptr<_1aa88c0c7_FnIns> _field_Neg;
	jule::Ptr<_1aa88c0c7_FnIns> _field_Pos;
	jule::Ptr<_1aa88c0c7_FnIns> _field_BitNot;
	jule::Ptr<_1aa88c0c7_FnIns> _field_AddAssign;
	jule::Ptr<_1aa88c0c7_FnIns> _field_SubAssign;
	jule::Ptr<_1aa88c0c7_FnIns> _field_DivAssign;
	jule::Ptr<_1aa88c0c7_FnIns> _field_MulAssign;
	jule::Ptr<_1aa88c0c7_FnIns> _field_ModAssign;
	jule::Ptr<_1aa88c0c7_FnIns> _field_ShlAssign;
	jule::Ptr<_1aa88c0c7_FnIns> _field_ShrAssign;
	jule::Ptr<_1aa88c0c7_FnIns> _field_BitOrAssign;
	jule::Ptr<_1aa88c0c7_FnIns> _field_BitAndAssign;
	jule::Ptr<_1aa88c0c7_FnIns> _field_BitXorAssign;
	

	_1aa8732ab_Operators(void) = default;

	inline bool operator==(_1aa8732ab_Operators _other) {
		return 
			this->_field_Eq == _other._field_Eq &&
			this->_field_Gt == _other._field_Gt &&
			this->_field_GtEq == _other._field_GtEq &&
			this->_field_Lt == _other._field_Lt &&
			this->_field_LtEq == _other._field_LtEq &&
			this->_field_Shl == _other._field_Shl &&
			this->_field_Shr == _other._field_Shr &&
			this->_field_Add == _other._field_Add &&
			this->_field_Sub == _other._field_Sub &&
			this->_field_Div == _other._field_Div &&
			this->_field_Mul == _other._field_Mul &&
			this->_field_Mod == _other._field_Mod &&
			this->_field_BitAnd == _other._field_BitAnd &&
			this->_field_BitOr == _other._field_BitOr &&
			this->_field_BitXor == _other._field_BitXor &&
			this->_field_Neg == _other._field_Neg &&
			this->_field_Pos == _other._field_Pos &&
			this->_field_BitNot == _other._field_BitNot &&
			this->_field_AddAssign == _other._field_AddAssign &&
			this->_field_SubAssign == _other._field_SubAssign &&
			this->_field_DivAssign == _other._field_DivAssign &&
			this->_field_MulAssign == _other._field_MulAssign &&
			this->_field_ModAssign == _other._field_ModAssign &&
			this->_field_ShlAssign == _other._field_ShlAssign &&
			this->_field_ShrAssign == _other._field_ShrAssign &&
			this->_field_BitOrAssign == _other._field_BitOrAssign &&
			this->_field_BitAndAssign == _other._field_BitAndAssign &&
			this->_field_BitXorAssign == _other._field_BitXorAssign;
	}

	inline bool operator!=(_1aa8732ab_Operators _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1aa876dd6_StructIns> _1aa874532_instance(jule::Ptr<_1aa8740c0_Struct>);
inline jule::Ptr<_1aa876dd6_StructIns> _1aa87480c_appendInstance(_1aa8740c0_Struct*, jule::Ptr<_1aa876dd6_StructIns>*);
inline jule::Ptr<_1aa889426_Fn> _1aa874bb4_FindMethod(_1aa8740c0_Struct*, jule::Str, jule::Bool);
inline jule::Ptr<_1aa908c59_Var> _1aa874ec2_FindStatic(_1aa8740c0_Struct*, jule::Str);
inline jule::Ptr<_1aa8714eb_Field> _1aa8752d0_FindField(_1aa8740c0_Struct*, jule::Str);
inline jule::Bool _1aa8755dd_IsImplements(_1aa8740c0_Struct*, jule::Ptr<_1aa89b647_Trait>);
inline jule::Bool _1aa8758eb_IsDerives(_1aa8740c0_Struct*, jule::Str);
inline jule::Bool _1aa875c09_IsUses(_1aa8740c0_Struct*, jule::Ptr<_1aa8740c0_Struct>);
inline jule::Bool _1aa875e6d_HasRefAccessible(_1aa8740c0_Struct*);
struct _1aa8740c0_Struct {
	jule::Ptr<_1aa8d92de_Sema> _field_sema;
	jule::Slice<jule::Ptr<_1aa8740c0_Struct>> _field_Depends;
	jule::Slice<jule::Ptr<_1aa8740c0_Struct>> _field_Uses;
	jule::Ptr<_1db944d0d_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1aa8714eb_Field>> _field_Fields;
	jule::Slice<jule::Ptr<_1aa889426_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1aa908c59_Var>> _field_Statics;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Slice<jule::Ptr<_1aa820a94_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1aa861321_GenericDecl>> _field_Generics;
	jule::Slice<jule::Ptr<_1aa89b647_Trait>> _field_Implements;
	jule::Slice<jule::Ptr<_1aa876dd6_StructIns>> _field_Instances;
	

	_1aa8740c0_Struct(void) = default;


};
struct _1aa8763e1_FieldIns {
	jule::Ptr<_1aa8714eb_Field> _field_Decl;
	jule::Ptr<_1aa983872_TypeKind> _field_Kind;
	jule::Ptr<_1aa957d85_Data> _field_Default;
	

	_1aa8763e1_FieldIns(void) = default;

	inline bool operator==(_1aa8763e1_FieldIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1aa8763e1_FieldIns _other) { return !this->operator==(_other); }


};
struct _1aa87acdb_OperandExprModel {
	jule::Ptr<_1aa983872_TypeKind> _field_Kind;
	jule::Any _field_Model = jule::Any(nullptr);
	

	_1aa87acdb_OperandExprModel(void) = default;

	inline bool operator==(_1aa87acdb_OperandExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Model == _other._field_Model;
	}

	inline bool operator!=(_1aa87acdb_OperandExprModel _other) { return !this->operator==(_other); }


};
struct _1aa87b2a3_BinopExprModel {
	jule::Ptr<_1aa87acdb_OperandExprModel> _field_Left;
	jule::Ptr<_1aa87acdb_OperandExprModel> _field_Right;
	jule::Ptr<_1db944d0d_Token> _field_Op;
	

	_1aa87b2a3_BinopExprModel(void) = default;

	inline bool operator==(_1aa87b2a3_BinopExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1aa87b2a3_BinopExprModel _other) { return !this->operator==(_other); }


};
struct _1aa87b65a_UnaryExprModel {
	jule::Ptr<_1aa957d85_Data> _field_Expr;
	jule::Ptr<_1db944d0d_Token> _field_Op;
	

	_1aa87b65a_UnaryExprModel(void) = default;

	inline bool operator==(_1aa87b65a_UnaryExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1aa87b65a_UnaryExprModel _other) { return !this->operator==(_other); }


};
struct _1aa87ba56_StructArgExprModel {
	jule::Ptr<_1aa8763e1_FieldIns> _field_Field;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1aa87ba56_StructArgExprModel(void) = default;

	inline bool operator==(_1aa87ba56_StructArgExprModel _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1aa87ba56_StructArgExprModel _other) { return !this->operator==(_other); }


};
struct _1aa87be0d_StructLitExprModel {
	jule::Ptr<_1aa876dd6_StructIns> _field_Strct;
	jule::Slice<jule::Ptr<_1aa87ba56_StructArgExprModel>> _field_Args;
	

	_1aa87be0d_StructLitExprModel(void) = default;


};
struct _1aa87c21b_AllocStructLitExprModel {
	jule::Ptr<_1aa87be0d_StructLitExprModel> _field_Lit;
	

	_1aa87c21b_AllocStructLitExprModel(void) = default;

	inline bool operator==(_1aa87c21b_AllocStructLitExprModel _other) {
		return 
			this->_field_Lit == _other._field_Lit;
	}

	inline bool operator!=(_1aa87c21b_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1aa87c76b_CastingExprModel {
	jule::Ptr<_1db944d0d_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1aa983872_TypeKind> _field_Kind;
	jule::Ptr<_1aa983872_TypeKind> _field_ExprKind;
	

	_1aa87c76b_CastingExprModel(void) = default;

	inline bool operator==(_1aa87c76b_CastingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_ExprKind == _other._field_ExprKind;
	}

	inline bool operator!=(_1aa87c76b_CastingExprModel _other) { return !this->operator==(_other); }


};
struct _1aa87d11d_FnCallExprModel {
	jule::Ptr<_1db944d0d_Token> _field_Token;
	jule::Ptr<_1aa88c0c7_FnIns> _field_Func;
	jule::Bool _field_IsCo = false;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Slice<jule::Any> _field_Args;
	jule::Ptr<_1aa8b25a3_Scope> _field_Except;
	jule::Bool _field_Assigned = false;
	

	_1aa87d11d_FnCallExprModel(void) = default;


};
struct _1aa87d4c5_SliceExprModel {
	jule::Ptr<_1aa983872_TypeKind> _field_ElemKind;
	jule::Slice<jule::Any> _field_Elems;
	

	_1aa87d4c5_SliceExprModel(void) = default;


};
struct _1aa87d948_IndexingExprModel {
	jule::Ptr<_1db944d0d_Token> _field_Token;
	jule::Ptr<_1aa957d85_Data> _field_Expr;
	jule::Ptr<_1aa957d85_Data> _field_Index;
	

	_1aa87d948_IndexingExprModel(void) = default;

	inline bool operator==(_1aa87d948_IndexingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1aa87d948_IndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1aa87dd00_AnonFnExprModel {
	jule::Ptr<_1aa88c0c7_FnIns> _field_Func;
	jule::Bool _field_Global = false;
	

	_1aa87dd00_AnonFnExprModel(void) = default;

	inline bool operator==(_1aa87dd00_AnonFnExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Global == _other._field_Global;
	}

	inline bool operator!=(_1aa87dd00_AnonFnExprModel _other) { return !this->operator==(_other); }


};
struct _1aa87e1a7_KeyValPairExprModel {
	jule::Any _field_Key = jule::Any(nullptr);
	jule::Any _field_Val = jule::Any(nullptr);
	

	_1aa87e1a7_KeyValPairExprModel(void) = default;

	inline bool operator==(_1aa87e1a7_KeyValPairExprModel _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1aa87e1a7_KeyValPairExprModel _other) { return !this->operator==(_other); }


};
struct _1aa87e62a_MapExprModel {
	jule::Ptr<_1aa983872_TypeKind> _field_KeyKind;
	jule::Ptr<_1aa983872_TypeKind> _field_ValKind;
	jule::Slice<jule::Ptr<_1aa87e1a7_KeyValPairExprModel>> _field_Entries;
	

	_1aa87e62a_MapExprModel(void) = default;


};
struct _1aa87eb69_SlicingExprModel {
	jule::Ptr<_1db944d0d_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	_1aa87eb69_SlicingExprModel(void) = default;

	inline bool operator==(_1aa87eb69_SlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1aa87eb69_SlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1aa8801a8_TraitSubIdentExprModel {
	jule::Ptr<_1db944d0d_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1aa889426_Fn> _field_Method;
	jule::Ptr<_1aa89b647_Trait> _field_Trt;
	

	_1aa8801a8_TraitSubIdentExprModel(void) = default;

	inline bool operator==(_1aa8801a8_TraitSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Trt == _other._field_Trt;
	}

	inline bool operator!=(_1aa8801a8_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1aa88098e_StructSubIdentExprModel {
	jule::Ptr<_1db944d0d_Token> _field_Token;
	jule::Ptr<_1aa957d85_Data> _field_Expr;
	jule::Ptr<_1aa88c0c7_FnIns> _field_Method;
	jule::Ptr<_1aa8763e1_FieldIns> _field_Field;
	jule::Ptr<_1aa876dd6_StructIns> _field_Owner;
	

	_1aa88098e_StructSubIdentExprModel(void) = default;

	inline bool operator==(_1aa88098e_StructSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Field == _other._field_Field &&
			this->_field_Owner == _other._field_Owner;
	}

	inline bool operator!=(_1aa88098e_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1aa880d35_StructStaticIdentExprModel {
	jule::Ptr<_1aa876dd6_StructIns> _field_Structure;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1aa88c0c7_FnIns> _field_Method;
	

	_1aa880d35_StructStaticIdentExprModel(void) = default;

	inline bool operator==(_1aa880d35_StructStaticIdentExprModel _other) {
		return 
			this->_field_Structure == _other._field_Structure &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method;
	}

	inline bool operator!=(_1aa880d35_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1aa8811ed_ArrayExprModel {
	jule::Ptr<_1aa9906c5_Arr> _field_Kind;
	jule::Slice<jule::Any> _field_Elems;
	

	_1aa8811ed_ArrayExprModel(void) = default;


};
struct _1aa8814d9_CommonIdentExprModel {
	jule::Str _field_Ident;
	

	_1aa8814d9_CommonIdentExprModel(void) = default;

	inline bool operator==(_1aa8814d9_CommonIdentExprModel _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1aa8814d9_CommonIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1aa881a4a_CommonSubIdentExprModel {
	jule::Ptr<_1aa983872_TypeKind> _field_ExprKind;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1db944d0d_Token> _field_Token;
	jule::Str _field_Ident;
	

	_1aa881a4a_CommonSubIdentExprModel(void) = default;

	inline bool operator==(_1aa881a4a_CommonSubIdentExprModel _other) {
		return 
			this->_field_ExprKind == _other._field_ExprKind &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1aa881a4a_CommonSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1aa881d47_TupleExprModel {
	jule::Slice<jule::Ptr<_1aa957d85_Data>> _field_Datas;
	

	_1aa881d47_TupleExprModel(void) = default;


};
struct _1aa882221_BuiltinOutCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	_1aa882221_BuiltinOutCallExprModel(void) = default;

	inline bool operator==(_1aa882221_BuiltinOutCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1aa882221_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};
struct _1aa88260b_BuiltinOutlnCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	_1aa88260b_BuiltinOutlnCallExprModel(void) = default;

	inline bool operator==(_1aa88260b_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1aa88260b_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1aa88292a_BuiltinCloneCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1aa88292a_BuiltinCloneCallExprModel(void) = default;

	inline bool operator==(_1aa88292a_BuiltinCloneCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1aa88292a_BuiltinCloneCallExprModel _other) { return !this->operator==(_other); }


};
struct _1aa882d15_BuiltinNewCallExprModel {
	jule::Ptr<_1aa983872_TypeKind> _field_Kind;
	jule::Any _field_Init = jule::Any(nullptr);
	

	_1aa882d15_BuiltinNewCallExprModel(void) = default;

	inline bool operator==(_1aa882d15_BuiltinNewCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Init == _other._field_Init;
	}

	inline bool operator!=(_1aa882d15_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};
struct _1aa883200_BuiltinPanicCallExprModel {
	jule::Ptr<_1db944d0d_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1aa883200_BuiltinPanicCallExprModel(void) = default;

	inline bool operator==(_1aa883200_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1aa883200_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};
struct _1aa8836a6_BuiltinAssertCallExprModel {
	jule::Ptr<_1db944d0d_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Log;
	

	_1aa8836a6_BuiltinAssertCallExprModel(void) = default;

	inline bool operator==(_1aa8836a6_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Log == _other._field_Log;
	}

	inline bool operator!=(_1aa8836a6_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};
struct _1aa883b5c_BuiltinMakeCallExprModel {
	jule::Ptr<_1aa983872_TypeKind> _field_Kind;
	jule::Any _field_Len = jule::Any(nullptr);
	jule::Any _field_Cap = jule::Any(nullptr);
	

	_1aa883b5c_BuiltinMakeCallExprModel(void) = default;

	inline bool operator==(_1aa883b5c_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Len == _other._field_Len &&
			this->_field_Cap == _other._field_Cap;
	}

	inline bool operator!=(_1aa883b5c_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};
struct _1aa884047_BuiltinAppendCallExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Elements = jule::Any(nullptr);
	

	_1aa884047_BuiltinAppendCallExprModel(void) = default;

	inline bool operator==(_1aa884047_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elements == _other._field_Elements;
	}

	inline bool operator!=(_1aa884047_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};
struct _1aa884366_BuiltinLenCallExprModel {
	jule::Ptr<_1aa957d85_Data> _field_Expr;
	

	_1aa884366_BuiltinLenCallExprModel(void) = default;

	inline bool operator==(_1aa884366_BuiltinLenCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1aa884366_BuiltinLenCallExprModel _other) { return !this->operator==(_other); }


};
struct _1aa884685_BuiltinCapCallExprModel {
	jule::Ptr<_1aa957d85_Data> _field_Expr;
	

	_1aa884685_BuiltinCapCallExprModel(void) = default;

	inline bool operator==(_1aa884685_BuiltinCapCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1aa884685_BuiltinCapCallExprModel _other) { return !this->operator==(_other); }


};
struct _1aa884d39_BuiltinDeleteCallExprModel {
	jule::Ptr<_1aa957d85_Data> _field_Dest;
	jule::Ptr<_1aa957d85_Data> _field_Key;
	

	_1aa884d39_BuiltinDeleteCallExprModel(void) = default;

	inline bool operator==(_1aa884d39_BuiltinDeleteCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Key == _other._field_Key;
	}

	inline bool operator!=(_1aa884d39_BuiltinDeleteCallExprModel _other) { return !this->operator==(_other); }


};
struct _1aa88519c_BuiltinCopyCallExprModel {
	jule::Ptr<_1aa957d85_Data> _field_Dest;
	jule::Ptr<_1aa957d85_Data> _field_Src;
	

	_1aa88519c_BuiltinCopyCallExprModel(void) = default;

	inline bool operator==(_1aa88519c_BuiltinCopyCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Src == _other._field_Src;
	}

	inline bool operator!=(_1aa88519c_BuiltinCopyCallExprModel _other) { return !this->operator==(_other); }


};
struct _1aa885587_BuiltinErrorCallExprModel {
	jule::Ptr<_1aa88c0c7_FnIns> _field_Func;
	jule::Ptr<_1aa957d85_Data> _field_Err;
	

	_1aa885587_BuiltinErrorCallExprModel(void) = default;

	inline bool operator==(_1aa885587_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Err == _other._field_Err;
	}

	inline bool operator!=(_1aa885587_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};
struct _1aa885884_SizeofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1aa885884_SizeofExprModel(void) = default;

	inline bool operator==(_1aa885884_SizeofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1aa885884_SizeofExprModel _other) { return !this->operator==(_other); }


};
struct _1aa885b70_AlignofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1aa885b70_AlignofExprModel(void) = default;

	inline bool operator==(_1aa885b70_AlignofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1aa885b70_AlignofExprModel _other) { return !this->operator==(_other); }


};
struct _1aa885e5b_RuneExprModel {
	jule::I32 _field_Code = 0;
	

	_1aa885e5b_RuneExprModel(void) = default;

	inline bool operator==(_1aa885e5b_RuneExprModel _other) {
		return 
			this->_field_Code == _other._field_Code;
	}

	inline bool operator!=(_1aa885e5b_RuneExprModel _other) { return !this->operator==(_other); }


};
struct _1aa886269_IntegratedToStrExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1aa886269_IntegratedToStrExprModel(void) = default;

	inline bool operator==(_1aa886269_IntegratedToStrExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1aa886269_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};
struct _1aa886632_BackendEmitExprModel {
	jule::Str _field_Code;
	jule::Slice<jule::Any> _field_Exprs;
	

	_1aa886632_BackendEmitExprModel(void) = default;


};
struct _1aa88691d_FreeExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1aa88691d_FreeExprModel(void) = default;

	inline bool operator==(_1aa88691d_FreeExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1aa88691d_FreeExprModel _other) { return !this->operator==(_other); }


};
struct _1aa8873d0_RetType {
	jule::Ptr<_1aa9889ba_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1db944d0d_Token>> _field_Idents;
	

	_1aa8873d0_RetType(void) = default;


};
inline jule::Ptr<_1aa88b208_ParamIns> _1aa887ea2_instance(jule::Ptr<_1aa887ad9_Param>);
inline jule::Bool _1aa888216_IsSelf(_1aa887ad9_Param*);
inline jule::Bool _1aa88847a_IsRef(_1aa887ad9_Param*);
struct _1aa887ad9_Param {
	jule::Ptr<_1db944d0d_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1aa9889ba_TypeSymbol> _field_Kind;
	jule::Str _field_Ident;
	

	_1aa887ad9_Param(void) = default;

	inline bool operator==(_1aa887ad9_Param _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1aa887ad9_Param _other) { return !this->operator==(_other); }


};
inline jule::Bool _1aa889888_IsVoid(_1aa889426_Fn*);
inline jule::Bool _1aa889aec_IsMethod(_1aa889426_Fn*);
inline jule::Bool _1aa889d61_IsEntryPoint(_1aa889426_Fn*);
inline jule::Bool _1aa88a0c5_IsInit(_1aa889426_Fn*);
inline jule::Bool _1aa88a339_IsAnon(_1aa889426_Fn*);
inline jule::Bool _1aa88a59d_AnyVar(_1aa889426_Fn*);
inline jule::Ptr<_1aa88c0c7_FnIns> _1aa88a812_instanceForce(jule::Ptr<_1aa889426_Fn>);
inline jule::Ptr<_1aa88c0c7_FnIns> _1aa88aa76_instance(jule::Ptr<_1aa889426_Fn>);
inline jule::Ptr<_1aa88c0c7_FnIns> _1aa88ad51_appendInstance(_1aa889426_Fn*, jule::Ptr<_1aa88c0c7_FnIns>*);
struct _1aa889426_Fn {
	jule::Ptr<_1aa8d92de_Sema> _field_sema;
	jule::Ptr<_1db944d0d_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1aa820a94_Directive>> _field_Directives;
	jule::Ptr<_1aa863eb1_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1aa861321_GenericDecl>> _field_Generics;
	jule::Ptr<_1aa8873d0_RetType> _field_Result;
	jule::Slice<jule::Ptr<_1aa887ad9_Param>> _field_Params;
	jule::Ptr<_1aa8740c0_Struct> _field_Owner;
	jule::Slice<jule::Ptr<_1aa88c0c7_FnIns>> _field_Instances;
	

	_1aa889426_Fn(void) = default;


};
inline jule::Str _1aa88b5d2_Str(_1aa88b208_ParamIns*);
struct _1aa88b208_ParamIns {
	jule::Ptr<_1aa887ad9_Param> _field_Decl;
	jule::Ptr<_1aa983872_TypeKind> _field_Kind;
	

	_1aa88b208_ParamIns(void) = default;

	inline bool operator==(_1aa88b208_ParamIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1aa88b208_ParamIns _other) { return !this->operator==(_other); }


};
inline jule::Str _1aa88c407_Str(_1aa88c0c7_FnIns*);
inline jule::Bool _1aa88c715_Equal(jule::Ptr<_1aa88c0c7_FnIns>, jule::Ptr<_1aa983872_TypeKind>);
inline jule::Bool _1aa88cb77_EqualFn(jule::Ptr<_1aa88c0c7_FnIns>, jule::Ptr<_1aa88c0c7_FnIns>*);
inline jule::Bool _1aa88ce85_equalTrait(jule::Ptr<_1aa88c0c7_FnIns>, jule::Ptr<_1aa88c0c7_FnIns>*);
inline jule::Slice<jule::Ptr<_1aa983872_TypeKind>> _1aa88d1e9_Types(_1aa88c0c7_FnIns*);
inline jule::Bool _1aa88d45d_IsBuiltin(_1aa88c0c7_FnIns*);
inline jule::Bool _1aa88d6c2_IsAnon(_1aa88c0c7_FnIns*);
inline jule::Bool _1aa88d9d0_Same(_1aa88c0c7_FnIns*, jule::Ptr<_1aa88c0c7_FnIns>);
inline jule::Str _1aa88dcdd_GetKindStr(_1aa88c0c7_FnIns*, jule::Bool);
struct _1aa88c0c7_FnIns {
	jule::Ptr<_1aa876dd6_StructIns> _field_Owner;
	jule::Ptr<_1aa889426_Fn> _field_Decl;
	jule::Slice<jule::Ptr<_1aa9820e0_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1aa88b208_ParamIns>> _field_Params;
	jule::Ptr<_1aa983872_TypeKind> _field_Result;
	jule::Ptr<_1aa8b25a3_Scope> _field_Scope;
	jule::Ptr<_1aa890031_ReferenceStack> _field_Refers;
	jule::Bool _field_Anon = false;
	jule::Fn<jule::Ptr<_1aa957d85_Data>(jule::Ptr<_1aa959903_Eval>*,jule::Ptr<_1aa85c52b_FnCallExpr>*,jule::Ptr<_1aa957d85_Data>*)> _field_caller;
	jule::Bool _field_reloaded = false;
	

	_1aa88c0c7_FnIns(void) = default;


};
inline jule::Ptr<_1aa890031_ReferenceStack> static__1aa890284_new(void);
inline jule::I64 _1aa890619_Len(_1aa890031_ReferenceStack*);
inline jule::Any _1aa890927_At(_1aa890031_ReferenceStack*, jule::I64);
inline void _1aa890b9c_Push(_1aa890031_ReferenceStack*, jule::Any);
inline jule::Bool _1ad7b90ab_Exist(_1aa890031_ReferenceStack*, jule::Ptr<_1aa88c0c7_FnIns>);
inline jule::Bool _1ad7cd5cb_Exist(_1aa890031_ReferenceStack*, jule::Ptr<_1aa908c59_Var>);
inline jule::Bool _1ad67014e_Exist(_1aa890031_ReferenceStack*, jule::Ptr<_1aa876dd6_StructIns>);
inline jule::Bool _1ada29ecb_Exist(_1aa890031_ReferenceStack*, jule::Ptr<_1aa89b647_Trait>);
struct _1aa890031_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer;
	

	_1aa890031_ReferenceStack(void) = default;


};
struct _1aa891362_Pass {
	jule::Ptr<_1db944d0d_Token> _field_Token;
	jule::Str _field_Text;
	

	_1aa891362_Pass(void) = default;

	inline bool operator==(_1aa891362_Pass _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Text == _other._field_Text;
	}

	inline bool operator!=(_1aa891362_Pass _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1aa895aa3_symbolBuilder> _1aa896059_getRoot(jule::Ptr<_1aa895aa3_symbolBuilder>);
inline void _1aa896422_pushErr(_1aa895aa3_symbolBuilder*, jule::Ptr<_1db944d0d_Token>*, jule::Str, jule::Slice<jule::Any>);
inline void _1aa8967da_pushErrText(_1aa895aa3_symbolBuilder*, jule::Ptr<_1db944d0d_Token>*, jule::Str, jule::Slice<jule::Any>);
inline void _1aa896b09_pushSuggestion(_1aa895aa3_symbolBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1aa896eb1_checkCppUseDeclPath(_1aa895aa3_symbolBuilder*, jule::Ptr<_1aa86b6d3_UseDecl>*, jule::Str);
inline jule::Ptr<_1aa8d101c_ImportInfo> _1aa89728b_buildCppHeaderImport(_1aa895aa3_symbolBuilder*, jule::Ptr<_1aa86b6d3_UseDecl>*);
inline jule::Ptr<_1aa8d101c_ImportInfo> _1aa897599_buildStdImport(_1aa895aa3_symbolBuilder*, jule::Ptr<_1aa86b6d3_UseDecl>*);
inline jule::Ptr<_1aa8d101c_ImportInfo> _1aa8978a7_buildIdentImport(jule::Ptr<_1aa895aa3_symbolBuilder>, jule::Ptr<_1aa86b6d3_UseDecl>*);
inline jule::Ptr<_1aa8d101c_ImportInfo> _1aa897bb5_buildImport(jule::Ptr<_1aa895aa3_symbolBuilder>, jule::Ptr<_1aa86b6d3_UseDecl>*);
inline jule::Bool _1aa897ec3_checkDuplicateUseDecl(_1aa895aa3_symbolBuilder*, jule::Ptr<_1aa8d101c_ImportInfo>*);
inline void _1aa8982e2_implImportSelections(_1aa895aa3_symbolBuilder*, jule::Ptr<_1aa8d101c_ImportInfo>*, jule::Ptr<_1aa86b6d3_UseDecl>*);
inline jule::Str _1aa898600_getAsLinkPath(jule::Ptr<_1aa895aa3_symbolBuilder>, jule::Str);
inline void _1aa8989b8_pushCycleError(jule::Ptr<_1aa895aa3_symbolBuilder>, jule::Ptr<_1aa895aa3_symbolBuilder>*, jule::Str, jule::Str*);
inline void _1aa898d81_pushCrossCycleError(jule::Ptr<_1aa895aa3_symbolBuilder>, jule::Ptr<_1aa895aa3_symbolBuilder>*, jule::Ptr<_1aa8d101c_ImportInfo>*, jule::Ptr<_1db944d0d_Token>*);
inline jule::Bool _1aa899238_checkImportCycles(jule::Ptr<_1aa895aa3_symbolBuilder>, jule::Ptr<_1aa8d101c_ImportInfo>, jule::Ptr<_1aa86b6d3_UseDecl>*);
inline void _1aa899623_checkPackageAccessibility(_1aa895aa3_symbolBuilder*, jule::Ptr<_1aa86b6d3_UseDecl>*, jule::Str*, jule::Str*);
inline jule::Bool _1aa8999db_importPackage(jule::Ptr<_1aa895aa3_symbolBuilder>, jule::Ptr<_1aa8d101c_ImportInfo>*, jule::Ptr<_1aa86b6d3_UseDecl>*);
inline jule::Ptr<_1aa8d101c_ImportInfo> _1aa899ce9_importUseDecl(jule::Ptr<_1aa895aa3_symbolBuilder>, jule::Ptr<_1aa86b6d3_UseDecl>*);
inline void _1aa899ec5_importUseDecls(jule::Ptr<_1aa895aa3_symbolBuilder>);
inline void _1aa89a24a_appendNode(_1aa895aa3_symbolBuilder*, _1aa820698_Node*);
inline void _1aa89a426_appendNodes(_1aa895aa3_symbolBuilder*);
inline void _1aa89a69b_pushDirectivePass(_1aa895aa3_symbolBuilder*, jule::Ptr<_1aa820a94_Directive>*);
inline void _1aa89a877_appendTopDirectives(_1aa895aa3_symbolBuilder*);
inline void _1aa89aa53_build(jule::Ptr<_1aa895aa3_symbolBuilder>);
struct _1aa895aa3_symbolBuilder {
	jule::Ptr<_1aa895aa3_symbolBuilder> _field_owner;
	jule::Trait<_1aa8cd36b_Importer> _field_importer;
	jule::Slice<_1d9d938bd_Log> _field_errors;
	jule::Ptr<_1aa81e80c_Ast> _field_ast;
	jule::Ptr<_1aa94d51d_SymbolTable> _field_table;
	

	_1aa895aa3_symbolBuilder(void) = default;


};
inline jule::Str _1aa89ba43_Str(_1aa89b647_Trait*);
inline jule::Bool _1aa89bd51_Equal(jule::Ptr<_1aa89b647_Trait>, jule::Ptr<_1aa983872_TypeKind>);
inline jule::Bool _1aa89c1d6_IsBuiltin(_1aa89b647_Trait*);
inline jule::Ptr<_1aa889426_Fn> _1aa89c4e4_FindMethod(_1aa89b647_Trait*, jule::Str);
inline jule::Bool _1aa89c802_inherits(jule::Ptr<_1aa89b647_Trait>, jule::Ptr<_1aa89b647_Trait>*);
inline jule::Ptr<_1aa889426_Fn> _1aa89cb10_findMethodInherit(_1aa89b647_Trait*, jule::Str*);
struct _1aa89b647_Trait {
	jule::Ptr<_1db944d0d_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Slice<jule::Ptr<_1aa9889ba_TypeSymbol>> _field_Inherits;
	jule::Slice<jule::Ptr<_1aa889426_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1aa8740c0_Struct>> _field_Implemented;
	

	_1aa89b647_Trait(void) = default;


};
inline jule::Bool _1aa89d7c0_AutoExpr(_1aa89d3d5_EnumItem*);
struct _1aa89d3d5_EnumItem {
	jule::Ptr<_1db944d0d_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1aa958e0d_Value> _field_Value;
	

	_1aa89d3d5_EnumItem(void) = default;

	inline bool operator==(_1aa89d3d5_EnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1aa89d3d5_EnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _1aa89e23d_Str(_1aa89ddca_Enum*);
inline jule::Bool _1aa89e54b_Equal(jule::Ptr<_1aa89ddca_Enum>, jule::Ptr<_1aa983872_TypeKind>);
inline jule::Ptr<_1aa89d3d5_EnumItem> _1aa89e98b_FindItem(_1aa89ddca_Enum*, jule::Str);
struct _1aa89ddca_Enum {
	jule::Ptr<_1db944d0d_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_1aa9889ba_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1aa89d3d5_EnumItem>> _field_Items;
	

	_1aa89ddca_Enum(void) = default;


};
struct _1aa89ee0e_TypeEnumItem {
	jule::Ptr<_1db944d0d_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1aa9889ba_TypeSymbol> _field_Kind;
	

	_1aa89ee0e_TypeEnumItem(void) = default;

	inline bool operator==(_1aa89ee0e_TypeEnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1aa89ee0e_TypeEnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _1aa8a0805_Str(_1aa8a04c5_TypeEnum*);
inline jule::Bool _1aa8a0b13_Equal(jule::Ptr<_1aa8a04c5_TypeEnum>, jule::Ptr<_1aa983872_TypeKind>);
inline jule::Ptr<_1aa89ee0e_TypeEnumItem> _1aa8a100e_FindItem(_1aa8a04c5_TypeEnum*, jule::Str);
struct _1aa8a04c5_TypeEnum {
	jule::Ptr<_1db944d0d_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1aa89ee0e_TypeEnumItem>> _field_Items;
	

	_1aa8a04c5_TypeEnum(void) = default;


};
inline jule::Str _1aa8a2a27_Str(_1aa8a262b_comptimeRange*);
inline jule::Bool _1aa8a2d35_Equal(jule::Ptr<_1aa8a262b_comptimeRange>, jule::Ptr<_1aa983872_TypeKind>);
struct _1aa8a262b_comptimeRange {
	jule::Trait<_1aa8a2450_comptimeRangeKind> _field_kind;
	

	_1aa8a262b_comptimeRange(void) = default;

	inline bool operator==(_1aa8a262b_comptimeRange _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1aa8a262b_comptimeRange _other) { return !this->operator==(_other); }


};
inline jule::Str _1aa8a3484_Str(_1aa8a3121_comptimeStructField*);
inline jule::Bool _1aa8a3792_Equal(jule::Ptr<_1aa8a3121_comptimeStructField>, jule::Ptr<_1aa983872_TypeKind>);
inline jule::Ptr<_1aa957d85_Data> _1aa8a3b49__Name(jule::Ptr<_1aa8a3121_comptimeStructField>);
inline jule::Ptr<_1aa957d85_Data> _1aa8a3e57_subIdent(jule::Ptr<_1aa8a3121_comptimeStructField>, jule::Str);
struct _1aa8a3121_comptimeStructField {
	jule::Ptr<_1aa8763e1_FieldIns> _field_field;
	

	_1aa8a3121_comptimeStructField(void) = default;

	inline bool operator==(_1aa8a3121_comptimeStructField _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1aa8a3121_comptimeStructField _other) { return !this->operator==(_other); }


};
inline jule::Str _1aa8a45ea_Str(_1aa8a4243_comptimeStructFields*);
inline jule::Bool _1aa8a4908_Equal(jule::Ptr<_1aa8a4243_comptimeStructFields>, jule::Ptr<_1aa983872_TypeKind>);
inline void _1aa8a4d37_ready(_1aa8a4243_comptimeStructFields*, jule::Ptr<_1aa908c59_Var>, jule::Ptr<_1aa908c59_Var>);
inline void _1aa8a5200_step(_1aa8a4243_comptimeStructFields*, jule::I64, jule::Ptr<_1aa908c59_Var>, jule::Ptr<_1aa908c59_Var>);
inline jule::I64 _1aa8a5464_len(_1aa8a4243_comptimeStructFields*);
struct _1aa8a4243_comptimeStructFields {
	jule::Slice<jule::Ptr<_1aa8763e1_FieldIns>> _field_fields;
	

	_1aa8a4243_comptimeStructFields(void) = default;


};
inline jule::Str _1aa8a5ab3_Str(_1aa8a5750_comptimeType*);
inline jule::Bool _1aa8a5dc1_Equal(jule::Ptr<_1aa8a5750_comptimeType>, jule::Ptr<_1aa983872_TypeKind>);
inline jule::Ptr<_1aa957d85_Data> _1aa8a63bb__Str(jule::Ptr<_1aa8a5750_comptimeType>);
inline jule::Ptr<_1aa957d85_Data> _1aa8a66c9__Kind(jule::Ptr<_1aa8a5750_comptimeType>, jule::Ptr<_1aa959903_Eval>*);
inline jule::Ptr<_1aa957d85_Data> _1aa8a6a81__Bits(jule::Ptr<_1aa8a5750_comptimeType>, jule::Ptr<_1aa959903_Eval>*, jule::Ptr<_1aa85c52b_FnCallExpr>*);
inline jule::Ptr<_1aa957d85_Data> _1aa8a6e38__Elem(jule::Ptr<_1aa8a5750_comptimeType>, jule::Ptr<_1aa959903_Eval>*, jule::Ptr<_1aa85c52b_FnCallExpr>*);
inline jule::Ptr<_1aa957d85_Data> _1aa8a72e0__Size(jule::Ptr<_1aa8a5750_comptimeType>, jule::Ptr<_1aa959903_Eval>*, jule::Ptr<_1aa85c52b_FnCallExpr>*);
inline jule::Ptr<_1aa957d85_Data> _1aa8a7697__Key(jule::Ptr<_1aa8a5750_comptimeType>, jule::Ptr<_1aa959903_Eval>*, jule::Ptr<_1aa85c52b_FnCallExpr>*);
inline jule::Ptr<_1aa957d85_Data> _1aa8a7a4e__Value(jule::Ptr<_1aa8a5750_comptimeType>, jule::Ptr<_1aa959903_Eval>*, jule::Ptr<_1aa85c52b_FnCallExpr>*);
inline jule::Ptr<_1aa957d85_Data> _1aa8a7e06__Fields(jule::Ptr<_1aa8a5750_comptimeType>, jule::Ptr<_1aa959903_Eval>*, jule::Ptr<_1aa85c52b_FnCallExpr>*);
inline jule::Ptr<_1aa957d85_Data> _1aa8a8214_subIdent(jule::Ptr<_1aa8a5750_comptimeType>, jule::Str);
struct _1aa8a5750_comptimeType {
	jule::Ptr<_1aa983872_TypeKind> _field_Base;
	

	_1aa8a5750_comptimeType(void) = default;

	inline bool operator==(_1aa8a5750_comptimeType _other) {
		return 
			this->_field_Base == _other._field_Base;
	}

	inline bool operator!=(_1aa8a5750_comptimeType _other) { return !this->operator==(_other); }


};
inline jule::Fn<jule::Bool(jule::Ptr<_1aa8d92de_Sema>*,jule::Slice<jule::Ptr<_1aa982b29_TypeAlias>>*)> _1aa8aaac9_readyFn(jule::Ptr<_1aa8aa69a_constraintChecker>);
inline jule::Bool _1aa8aad3d_readyFi(jule::Ptr<_1aa8aa69a_constraintChecker>);
inline jule::Bool _1aa8ab0a2_readySi(jule::Ptr<_1aa8aa69a_constraintChecker>);
inline jule::Bool _1aa8ab316_ready(jule::Ptr<_1aa8aa69a_constraintChecker>);
inline jule::Bool _1aa8ab57a_check(jule::Ptr<_1aa8aa69a_constraintChecker>);
struct _1aa8aa69a_constraintChecker {
	jule::Ptr<_1aa8d92de_Sema> _field_s;
	jule::Slice<jule::Ptr<_1aa861321_GenericDecl>> _field_genericsD;
	jule::Slice<jule::Ptr<_1aa9820e0_InsGeneric>> _field_generics;
	jule::Slice<jule::Ptr<_1aa982b29_TypeAlias>> _field_genericsA;
	jule::Ptr<_1aa88c0c7_FnIns> _field_fi;
	jule::Ptr<_1aa876dd6_StructIns> _field_si;
	jule::Ptr<_1db944d0d_Token> _field_et;
	jule::Bool _field_uniq = false;
	

	_1aa8aa69a_constraintChecker(void) = default;


};
inline jule::Bool _1aa8ac944_IsTraitImpl(_1aa8ac548_Impl*);
inline jule::Bool _1aa8acba8_IsStructImpl(_1aa8ac548_Impl*);
struct _1aa8ac548_Impl {
	jule::Ptr<_1aa854028_TypeDecl> _field_Base;
	jule::Ptr<_1aa854028_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1aa889426_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1aa908c59_Var>> _field_Statics;
	

	_1aa8ac548_Impl(void) = default;


};
struct _1aa8b25a3_Scope {
	jule::Ptr<_1aa8b25a3_Scope> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<jule::Any> _field_Stmts;
	

	_1aa8b25a3_Scope(void) = default;


};
struct _1aa8b299e_If {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1aa8b25a3_Scope> _field_Scope;
	

	_1aa8b299e_If(void) = default;

	inline bool operator==(_1aa8b299e_If _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1aa8b299e_If _other) { return !this->operator==(_other); }


};
struct _1aa8b2c8a_Else {
	jule::Ptr<_1aa8b25a3_Scope> _field_Scope;
	

	_1aa8b2c8a_Else(void) = default;

	inline bool operator==(_1aa8b2c8a_Else _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1aa8b2c8a_Else _other) { return !this->operator==(_other); }


};
struct _1aa8b310e_Conditional {
	jule::Slice<jule::Ptr<_1aa8b299e_If>> _field_Elifs;
	jule::Ptr<_1aa8b2c8a_Else> _field_Default;
	

	_1aa8b310e_Conditional(void) = default;


};
struct _1aa8b33ea_InfIter {
	jule::Ptr<_1aa8b25a3_Scope> _field_Scope;
	

	_1aa8b33ea_InfIter(void) = default;

	inline bool operator==(_1aa8b33ea_InfIter _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1aa8b33ea_InfIter _other) { return !this->operator==(_other); }


};
inline jule::Bool _1aa8b3c14_IsWhileNext(_1aa8b386d_WhileIter*);
struct _1aa8b386d_WhileIter {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_1aa8b25a3_Scope> _field_Scope;
	

	_1aa8b386d_WhileIter(void) = default;

	inline bool operator==(_1aa8b386d_WhileIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1aa8b386d_WhileIter _other) { return !this->operator==(_other); }


};
struct _1aa8b4253_RangeIter {
	jule::Ptr<_1aa957d85_Data> _field_Expr;
	jule::Ptr<_1aa8b25a3_Scope> _field_Scope;
	jule::Ptr<_1aa908c59_Var> _field_KeyA;
	jule::Ptr<_1aa908c59_Var> _field_KeyB;
	

	_1aa8b4253_RangeIter(void) = default;

	inline bool operator==(_1aa8b4253_RangeIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1aa8b4253_RangeIter _other) { return !this->operator==(_other); }


};
struct _1aa8b464e_ContSt {
	jule::Uintptr _field_It = 0;
	

	_1aa8b464e_ContSt(void) = default;

	inline bool operator==(_1aa8b464e_ContSt _other) {
		return 
			this->_field_It == _other._field_It;
	}

	inline bool operator!=(_1aa8b464e_ContSt _other) { return !this->operator==(_other); }


};
struct _1aa8b4a06_BreakSt {
	jule::Uintptr _field_It = 0;
	jule::Uintptr _field_Mtch = 0;
	

	_1aa8b4a06_BreakSt(void) = default;

	inline bool operator==(_1aa8b4a06_BreakSt _other) {
		return 
			this->_field_It == _other._field_It &&
			this->_field_Mtch == _other._field_Mtch;
	}

	inline bool operator!=(_1aa8b4a06_BreakSt _other) { return !this->operator==(_other); }


};
struct _1aa8b4ce2_Label {
	jule::Str _field_Ident;
	

	_1aa8b4ce2_Label(void) = default;

	inline bool operator==(_1aa8b4ce2_Label _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1aa8b4ce2_Label _other) { return !this->operator==(_other); }


};
struct _1aa8b50cd_GotoSt {
	jule::Str _field_Ident;
	

	_1aa8b50cd_GotoSt(void) = default;

	inline bool operator==(_1aa8b50cd_GotoSt _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1aa8b50cd_GotoSt _other) { return !this->operator==(_other); }


};
struct _1aa8b5485_Postfix {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Op;
	

	_1aa8b5485_Postfix(void) = default;

	inline bool operator==(_1aa8b5485_Postfix _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1aa8b5485_Postfix _other) { return !this->operator==(_other); }


};
struct _1aa8b5908_Assign {
	jule::Ptr<_1aa87acdb_OperandExprModel> _field_L;
	jule::Ptr<_1aa87acdb_OperandExprModel> _field_R;
	jule::Ptr<_1db944d0d_Token> _field_Op;
	

	_1aa8b5908_Assign(void) = default;

	inline bool operator==(_1aa8b5908_Assign _other) {
		return 
			this->_field_L == _other._field_L &&
			this->_field_R == _other._field_R &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1aa8b5908_Assign _other) { return !this->operator==(_other); }


};
struct _1aa8b5cb0_MultiAssign {
	jule::Slice<jule::Ptr<_1aa957d85_Data>> _field_L;
	jule::Any _field_R = jule::Any(nullptr);
	

	_1aa8b5cb0_MultiAssign(void) = default;


};
inline jule::Bool _1aa8b68c6_IsGenericTypeMatch(_1aa8b63ba_Match*);
struct _1aa8b63ba_Match {
	jule::Ptr<_1aa957d85_Data> _field_Expr;
	jule::Bool _field_TypeMatch = false;
	jule::Bool _field_Comptime = false;
	jule::Slice<jule::Ptr<_1aa8b6e15_Case>> _field_Cases;
	jule::Ptr<_1aa8b6e15_Case> _field_Default;
	

	_1aa8b63ba_Match(void) = default;


};
inline jule::Bool _1aa8b71ce_isDefault(_1aa8b6e15_Case*);
struct _1aa8b6e15_Case {
	jule::Ptr<_1aa8b63ba_Match> _field_Owner;
	jule::Ptr<_1aa8b25a3_Scope> _field_Scope;
	jule::Slice<jule::Ptr<_1aa957d85_Data>> _field_Exprs;
	jule::Ptr<_1aa8b6e15_Case> _field_Next;
	

	_1aa8b6e15_Case(void) = default;


};
struct _1aa8b74ba_FallSt {
	jule::Uintptr _field_DestCase = 0;
	

	_1aa8b74ba_FallSt(void) = default;

	inline bool operator==(_1aa8b74ba_FallSt _other) {
		return 
			this->_field_DestCase == _other._field_DestCase;
	}

	inline bool operator!=(_1aa8b74ba_FallSt _other) { return !this->operator==(_other); }


};
struct _1aa8b783e_RetSt {
	jule::Ptr<_1aa88c0c7_FnIns> _field_Func;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1aa8b783e_RetSt(void) = default;

	inline bool operator==(_1aa8b783e_RetSt _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1aa8b783e_RetSt _other) { return !this->operator==(_other); }


};
struct _1aa8b7e49_scopeLabel {
	jule::Ptr<_1db944d0d_Token> _field_token;
	jule::Ptr<_1aa8b4ce2_Label> _field_label;
	jule::I64 _field_pos = 0;
	jule::Ptr<_1aa8b91d1_scopeChecker> _field_scope;
	jule::Bool _field_used = false;
	

	_1aa8b7e49_scopeLabel(void) = default;

	inline bool operator==(_1aa8b7e49_scopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_1aa8b7e49_scopeLabel _other) { return !this->operator==(_other); }


};
struct _1aa8b83bc_scopeGoto {
	jule::Ptr<_1aa861a80_GotoSt> _field_gt;
	jule::Ptr<_1aa8b91d1_scopeChecker> _field_scope;
	jule::I64 _field_pos = 0;
	

	_1aa8b83bc_scopeGoto(void) = default;

	inline bool operator==(_1aa8b83bc_scopeGoto _other) {
		return 
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1aa8b83bc_scopeGoto _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1aa8d101c_ImportInfo> _1aa8b9654_SelectPackage(_1aa8b91d1_scopeChecker*, jule::Fn<jule::Bool(jule::Ptr<_1aa8d101c_ImportInfo>)>);
inline jule::Ptr<_1aa908c59_Var> _1aa8b9a0b_FindVar(_1aa8b91d1_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1aa982b29_TypeAlias> _1aa8b9db3_FindTypeAlias(_1aa8b91d1_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1aa8740c0_Struct> _1aa8ba26a_FindStruct(_1aa8b91d1_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1aa889426_Fn> _1aa8ba622_FindFn(_1aa8b91d1_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1aa89b647_Trait> _1aa8ba930_FindTrait(_1aa8b91d1_scopeChecker*, jule::Str);
inline jule::Ptr<_1aa89ddca_Enum> _1aa8bac3d_FindEnum(_1aa8b91d1_scopeChecker*, jule::Str);
inline jule::Ptr<_1aa8a04c5_TypeEnum> _1aa8bb04b_FindTypeEnum(_1aa8b91d1_scopeChecker*, jule::Str);
inline jule::Bool _1aa8bb37b_isUnsafe(jule::Ptr<_1aa8b91d1_scopeChecker>);
inline jule::Bool _1aa8bb5e0_isRoot(_1aa8b91d1_scopeChecker*);
inline void _1aa8bb7bb_stop(_1aa8b91d1_scopeChecker*);
inline jule::Bool _1aa8bba30_stopped(_1aa8b91d1_scopeChecker*);
inline jule::Bool _1aa8bbc94_isDeferred(jule::Ptr<_1aa8b91d1_scopeChecker>);
inline jule::Ptr<_1aa8b91d1_scopeChecker> _1aa8bc008_getRoot(jule::Ptr<_1aa8b91d1_scopeChecker>);
inline jule::Ptr<_1aa8b91d1_scopeChecker> _1aa8bc26c_getHardRoot(jule::Ptr<_1aa8b91d1_scopeChecker>);
inline jule::Ptr<_1aa8b4ce2_Label> _1aa8bc57a_findLabel(_1aa8b91d1_scopeChecker*, jule::Str);
inline jule::Ptr<_1aa8b7e49_scopeLabel> _1aa8bc888_findLabelScope(jule::Ptr<_1aa8b91d1_scopeChecker>, jule::Str);
inline jule::Ptr<_1aa8b7e49_scopeLabel> _1aa8bcb96_findLabelAll(_1aa8b91d1_scopeChecker*, jule::Str);
inline jule::Bool _1aa8bd04d_isDuplicatedIdent(_1aa8b91d1_scopeChecker*, jule::Uintptr, jule::Str);
inline void _1aa8bd2c3_checkVarDecl(jule::Ptr<_1aa8b91d1_scopeChecker>, jule::Ptr<_1aa866986_VarDecl>);
inline void _1aa8bd548_checkTypeAliasDecl(jule::Ptr<_1aa8b91d1_scopeChecker>, jule::Ptr<_1aa86a2e7_TypeAliasDecl>);
inline jule::Ptr<_1aa8b25a3_Scope> _1aa8bd7ac_getChild(_1aa8b91d1_scopeChecker*);
inline void _1aa8bdb75_checkChildSsc(jule::Ptr<_1aa8b91d1_scopeChecker>, jule::Ptr<_1aa863eb1_ScopeTree>*, jule::Ptr<_1aa8b25a3_Scope>*, jule::Ptr<_1aa8b91d1_scopeChecker>*);
inline jule::Ptr<_1aa8b25a3_Scope> _1aa8be02c_checkChildSc(jule::Ptr<_1aa8b91d1_scopeChecker>, jule::Ptr<_1aa863eb1_ScopeTree>*, jule::Ptr<_1aa8b91d1_scopeChecker>*);
inline jule::Ptr<_1aa8b25a3_Scope> _1aa8be33a_checkChild(jule::Ptr<_1aa8b91d1_scopeChecker>, jule::Ptr<_1aa863eb1_ScopeTree>*);
inline void _1aa8be5b0_checkAnonScope(jule::Ptr<_1aa8b91d1_scopeChecker>, jule::Ptr<_1aa863eb1_ScopeTree>);
inline void _1aa8be8ce_processErrorCall(jule::Ptr<_1aa8b91d1_scopeChecker>, jule::Ptr<_1aa885587_BuiltinErrorCallExprModel>*, jule::Ptr<_1db944d0d_Token>);
inline void _1aa8beb54_checkExpr(jule::Ptr<_1aa8b91d1_scopeChecker>, jule::Ptr<_1aa858549_Expr>);
inline jule::Ptr<_1aa8b299e_If> _1aa8bee62_checkIf(jule::Ptr<_1aa8b91d1_scopeChecker>, jule::Ptr<_1aa8692e6_If>);
inline jule::Ptr<_1aa8b2c8a_Else> _1aa8c0270_checkElse(jule::Ptr<_1aa8b91d1_scopeChecker>, jule::Ptr<_1aa86969d_Else>);
inline void _1aa8c04e5_checkConditional(jule::Ptr<_1aa8b91d1_scopeChecker>, jule::Ptr<_1aa869b21_Conditional>);
inline void _1aa8c0957_checkIterScopeSsc(jule::Ptr<_1aa8b91d1_scopeChecker>, jule::Uintptr, jule::Ptr<_1aa863eb1_ScopeTree>, jule::Ptr<_1aa8b25a3_Scope>*, jule::Ptr<_1aa8b91d1_scopeChecker>);
inline jule::Ptr<_1aa8b25a3_Scope> _1aa8c0da8_checkIterScopeSc(jule::Ptr<_1aa8b91d1_scopeChecker>, jule::Uintptr, jule::Ptr<_1aa863eb1_ScopeTree>, jule::Ptr<_1aa8b91d1_scopeChecker>);
inline jule::Ptr<_1aa8b25a3_Scope> _1aa8c1260_checkIterScope(jule::Ptr<_1aa8b91d1_scopeChecker>, jule::Uintptr, jule::Ptr<_1aa863eb1_ScopeTree>*);
inline void _1aa8c14d5_checkInfIter(jule::Ptr<_1aa8b91d1_scopeChecker>, jule::Ptr<_1aa86749d_Iter>*);
inline void _1aa8c175a_checkWhileIter(jule::Ptr<_1aa8b91d1_scopeChecker>, jule::Ptr<_1aa86749d_Iter>*);
inline void _1aa8c1b23_checkComptimeRangeIter(jule::Ptr<_1aa8b91d1_scopeChecker>, jule::Ptr<_1aa86749d_Iter>*, jule::Ptr<_1aa8b4253_RangeIter>*, jule::Ptr<_1aa957d85_Data>*);
inline void _1aa8c1d98_checkRangeIter(jule::Ptr<_1aa8b91d1_scopeChecker>, jule::Ptr<_1aa86749d_Iter>*);
inline void _1aa8c211d_checkIter(jule::Ptr<_1aa8b91d1_scopeChecker>, jule::Ptr<_1aa86749d_Iter>);
inline jule::Bool _1aa8c242b_checkValidContLabel(jule::Ptr<_1aa8b91d1_scopeChecker>, jule::Uintptr);
inline jule::Bool _1aa8c2739_checkValidBreakLabel(jule::Ptr<_1aa8b91d1_scopeChecker>, jule::Uintptr);
inline jule::Ptr<_1aa8b464e_ContSt> _1aa8c2a47_checkContValidScope(jule::Ptr<_1aa8b91d1_scopeChecker>, jule::Ptr<_1aa868d73_ContSt>);
inline void _1aa8c2cbc_checkCont(jule::Ptr<_1aa8b91d1_scopeChecker>, jule::Ptr<_1aa868d73_ContSt>);
inline void _1aa8c3042_checkLabel(jule::Ptr<_1aa8b91d1_scopeChecker>, jule::Ptr<_1aa8616c8_LabelSt>);
inline void _1aa8c32b7_pushGoto(jule::Ptr<_1aa8b91d1_scopeChecker>, jule::Ptr<_1aa861a80_GotoSt>);
inline void _1aa8c353c_checkPostfix(jule::Ptr<_1aa8b91d1_scopeChecker>, jule::Ptr<_1aa8629b5_AssignSt>);
inline jule::Bool _1aa8c384a_isNewAssignIdent(_1aa8b91d1_scopeChecker*, jule::Str);
inline jule::Bool _1aa8c3c9b_checkStructureAssignOp(jule::Ptr<_1aa8b91d1_scopeChecker>, jule::Ptr<_1aa876dd6_StructIns>*, jule::Ptr<_1aa8629b5_AssignSt>*, jule::Ptr<_1aa957d85_Data>*);
inline void _1aa8c4021_checkSingleAssign(jule::Ptr<_1aa8b91d1_scopeChecker>, jule::Ptr<_1aa8629b5_AssignSt>*);
inline void _1aa8c454e_processEndPartOfMultiAssign(_1aa8b91d1_scopeChecker*, jule::Ptr<_1aa8b5cb0_MultiAssign>*, jule::Ptr<_1aa8629b5_AssignSt>*, jule::Ptr<_1aa862476_AssignLeft>*, jule::Ptr<_1aa957d85_Data>*, jule::Ptr<_1aa957d85_Data>*);
inline void _1aa8c47d5_checkMultiAssign(jule::Ptr<_1aa8b91d1_scopeChecker>, jule::Ptr<_1aa8629b5_AssignSt>*);
inline void _1aa8c4a5a_checkAssignSt(jule::Ptr<_1aa8b91d1_scopeChecker>, jule::Ptr<_1aa8629b5_AssignSt>);
inline jule::Ptr<_1aa8b25a3_Scope> _1aa8c4e12_checkCaseScope(jule::Ptr<_1aa8b91d1_scopeChecker>, jule::Ptr<_1aa8b6e15_Case>*, jule::Ptr<_1aa863eb1_ScopeTree>*);
inline jule::Ptr<_1aa8b6e15_Case> _1aa8c540c_checkCase(jule::Ptr<_1aa8b91d1_scopeChecker>, jule::Ptr<_1aa8b63ba_Match>, jule::I64, jule::Ptr<_1aa86a76a_Case>, jule::Ptr<_1aa957d85_Data>);
inline void _1aa8c57c5_checkCases(jule::Ptr<_1aa8b91d1_scopeChecker>, jule::Ptr<_1aa86ae41_MatchCase>*, jule::Ptr<_1aa8b63ba_Match>, jule::Ptr<_1aa957d85_Data>);
inline jule::Ptr<_1aa8b6e15_Case> _1aa8c5b7c_checkDefault(jule::Ptr<_1aa8b91d1_scopeChecker>, jule::Ptr<_1aa8b63ba_Match>, jule::Ptr<_1aa86969d_Else>);
inline void _1aa8c5e9b_checkComptimePanic(jule::Ptr<_1aa8b91d1_scopeChecker>, jule::Ptr<_1db944d0d_Token>, jule::Ptr<_1aa8b25a3_Scope>*);
inline void _1aa8c62ba_processConstMatch(jule::Ptr<_1aa8b91d1_scopeChecker>, jule::Ptr<_1aa8b63ba_Match>, jule::Ptr<_1aa86ae41_MatchCase>*);
inline void _1aa8c6540_checkTypeMatch(jule::Ptr<_1aa8b91d1_scopeChecker>, jule::Ptr<_1aa86ae41_MatchCase>*);
inline void _1aa8c67b5_checkCommonMatch(jule::Ptr<_1aa8b91d1_scopeChecker>, jule::Ptr<_1aa86ae41_MatchCase>*);
inline void _1aa8c6a3a_checkMatch(jule::Ptr<_1aa8b91d1_scopeChecker>, jule::Ptr<_1aa86ae41_MatchCase>);
inline void _1aa8c6cb0_checkFall(jule::Ptr<_1aa8b91d1_scopeChecker>, jule::Ptr<_1aa861d6b_FallSt>);
inline jule::Ptr<_1aa8b4a06_BreakSt> _1aa8c70bd_checkBreakWithLabel(jule::Ptr<_1aa8b91d1_scopeChecker>, jule::Ptr<_1aa8689bb_BreakSt>);
inline jule::Ptr<_1aa8b4a06_BreakSt> _1aa8c73cb_checkPlainBreak(jule::Ptr<_1aa8b91d1_scopeChecker>, jule::Ptr<_1aa8689bb_BreakSt>);
inline void _1aa8c7651_checkBreak(jule::Ptr<_1aa8b91d1_scopeChecker>, jule::Ptr<_1aa8689bb_BreakSt>);
inline void _1aa8c78c6_checkRet(jule::Ptr<_1aa8b91d1_scopeChecker>, jule::Ptr<_1aa866d3d_RetSt>);
inline void _1aa8c7b4b_checkUseExpr(jule::Ptr<_1aa8b91d1_scopeChecker>, jule::Ptr<_1aa858dda_UseExpr>);
inline void _1aa8c7dc1_checkNode(jule::Ptr<_1aa8b91d1_scopeChecker>, jule::Any*);
inline void _1aa8c809c_checkResult(jule::Ptr<_1aa8b91d1_scopeChecker>);
inline void _1aa8c8278_checkTree(jule::Ptr<_1aa8b91d1_scopeChecker>);
inline void _1aa8c8597_checkGoto(_1aa8b91d1_scopeChecker*, jule::Ptr<_1aa8b83bc_scopeGoto>*, jule::Ptr<_1aa8b7e49_scopeLabel>*);
inline void _1aa8c8773_checkGotos(_1aa8b91d1_scopeChecker*);
inline void _1aa8c894e_checkLabels(_1aa8b91d1_scopeChecker*);
inline void _1aa8c8b2a_checkVars(_1aa8b91d1_scopeChecker*);
inline void _1aa8c8d06_checkAliases(_1aa8b91d1_scopeChecker*);
inline void _1aa8c9125_check(jule::Ptr<_1aa8b91d1_scopeChecker>, jule::Ptr<_1aa863eb1_ScopeTree>*, jule::Ptr<_1aa8b25a3_Scope>*);
inline jule::Ptr<_1aa8b91d1_scopeChecker> _1aa8c9389_newChildChecker(jule::Ptr<_1aa8b91d1_scopeChecker>);
struct _1aa8b91d1_scopeChecker {
	jule::Ptr<_1db944d0d_Token> _field_calledFrom;
	jule::Ptr<_1aa8d92de_Sema> _field_s;
	jule::Ptr<_1aa88c0c7_FnIns> _field_owner;
	jule::Ptr<_1aa8b91d1_scopeChecker> _field_parent;
	jule::I64 _field_childIndex = 0;
	jule::Ptr<_1aa94d51d_SymbolTable> _field_table;
	jule::Ptr<_1aa8b25a3_Scope> _field_scope;
	jule::Ptr<_1aa863eb1_ScopeTree> _field_tree;
	jule::Ptr<_1aa88c0c7_FnIns> _field_result;
	jule::Uintptr _field_it = 0;
	jule::Uintptr _field_cse = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_1aa8b7e49_scopeLabel>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1aa8b83bc_scopeGoto>>> _field_gotos;
	jule::I64 _field_i = 0;
	

	_1aa8b91d1_scopeChecker(void) = default;

	inline bool operator==(_1aa8b91d1_scopeChecker _other) {
		return 
			this->_field_calledFrom == _other._field_calledFrom &&
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_childIndex == _other._field_childIndex &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1aa8b91d1_scopeChecker _other) { return !this->operator==(_other); }


};
inline void _1aa8ca379_checkCdef(_1aa8c9e39_directiveChecker*, jule::Ptr<_1aa820a94_Directive>*);
inline void _1aa8ca5ee_checkTypedef(_1aa8c9e39_directiveChecker*, jule::Ptr<_1aa820a94_Directive>*);
inline void _1aa8ca874_checkDerive(_1aa8c9e39_directiveChecker*, jule::Ptr<_1aa820a94_Directive>*);
inline void _1aa8caae9_checkNamespace(_1aa8c9e39_directiveChecker*, jule::Ptr<_1aa820a94_Directive>*);
inline void _1aa8cad6e_checkDeprecated(_1aa8c9e39_directiveChecker*, jule::Ptr<_1aa820a94_Directive>*);
inline void _1aa8cb0e4_checkTest(_1aa8c9e39_directiveChecker*, jule::Ptr<_1aa820a94_Directive>*);
inline void _1aa8cb369_checkDirective(_1aa8c9e39_directiveChecker*, jule::Ptr<_1aa820a94_Directive>*);
inline void _1aa8cb545_check(_1aa8c9e39_directiveChecker*);
struct _1aa8c9e39_directiveChecker {
	jule::Ptr<_1aa8d92de_Sema> _field_s;
	jule::Ptr<jule::Slice<jule::Ptr<_1aa820a94_Directive>>> _field_d;
	jule::Any _field_o;
	

	_1aa8c9e39_directiveChecker(void) = default;

	inline bool operator==(_1aa8c9e39_directiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_1aa8c9e39_directiveChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1aa8d101c_ImportInfo> _1aa8d1528_SelectPackage(_1aa8d101c_ImportInfo*, jule::Fn<jule::Bool(jule::Ptr<_1aa8d101c_ImportInfo>)>);
inline jule::Ptr<_1aa908c59_Var> _1aa8d18d0_FindVar(_1aa8d101c_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1aa982b29_TypeAlias> _1aa8d1c87_FindTypeAlias(_1aa8d101c_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1aa8740c0_Struct> _1aa8d213e_FindStruct(_1aa8d101c_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1aa889426_Fn> _1aa8d24e6_FindFn(_1aa8d101c_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1aa89b647_Trait> _1aa8d2804_FindTrait(_1aa8d101c_ImportInfo*, jule::Str);
inline jule::Ptr<_1aa89ddca_Enum> _1aa8d2b12_FindEnum(_1aa8d101c_ImportInfo*, jule::Str);
inline jule::Ptr<_1aa8a04c5_TypeEnum> _1aa8d2e20_FindTypeEnum(_1aa8d101c_ImportInfo*, jule::Str);
inline jule::Bool _1aa8d32b6_isLookupable(_1aa8d101c_ImportInfo*, jule::Str);
inline jule::Bool _1aa8d35c4_existIdent(_1aa8d101c_ImportInfo*, jule::Str);
inline jule::Bool _1aa8d385a_isAccessibleViaSelection(_1aa8d101c_ImportInfo*);
struct _1aa8d101c_ImportInfo {
	jule::Ptr<_1db944d0d_Token> _field_Token;
	jule::Str _field_Path;
	jule::Str _field_LinkPath;
	jule::Str _field_Ident;
	jule::Str _field_Alias;
	jule::Bool _field_Duplicate = false;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Std = false;
	jule::Bool _field_ImportAll = false;
	jule::Slice<jule::Ptr<_1db944d0d_Token>> _field_Selected;
	jule::Ptr<_1aa8d3b57_Package> _field_Package;
	jule::I64 _field_ModId = 0;
	

	_1aa8d101c_ImportInfo(void) = default;


};
inline jule::Ptr<_1aa8d101c_ImportInfo> _1aa8d411e_SelectPackage(_1aa8d3b57_Package*, jule::Fn<jule::Bool(jule::Ptr<_1aa8d101c_ImportInfo>)>);
inline jule::Ptr<_1aa908c59_Var> _1aa8d44c6_FindVar(_1aa8d3b57_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1aa982b29_TypeAlias> _1aa8d487d_FindTypeAlias(_1aa8d3b57_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1aa8740c0_Struct> _1aa8d4c35_FindStruct(_1aa8d3b57_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1aa889426_Fn> _1aa8d50dc_FindFn(_1aa8d3b57_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1aa89b647_Trait> _1aa8d53ea_FindTrait(_1aa8d3b57_Package*, jule::Str);
inline jule::Ptr<_1aa89ddca_Enum> _1aa8d5708_FindEnum(_1aa8d3b57_Package*, jule::Str);
inline jule::Ptr<_1aa8a04c5_TypeEnum> _1aa8d5a16_FindTypeEnum(_1aa8d3b57_Package*, jule::Str);
struct _1aa8d3b57_Package {
	jule::Slice<jule::Ptr<_1aa94d51d_SymbolTable>> _field_Files;
	

	_1aa8d3b57_Package(void) = default;


};
inline jule::Ptr<_1aa8a5750_comptimeType> _1aa8d8c5b_pushComptimeType(_1aa8d87c7_commonSemaMeta*, jule::Ptr<_1aa983872_TypeKind>*);
struct _1aa8d87c7_commonSemaMeta {
	jule::Slice<jule::Ptr<_1aa8a5750_comptimeType>> _field_comptimeTypes;
	

	_1aa8d87c7_commonSemaMeta(void) = default;


};
inline jule::Ptr<_1aa8d101c_ImportInfo> _1aa8d9762_SelectPackage(_1aa8d92de_Sema*, jule::Fn<jule::Bool(jule::Ptr<_1aa8d101c_ImportInfo>)>);
inline jule::Ptr<_1aa908c59_Var> _1aa8d9b19_FindVar(_1aa8d92de_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1aa982b29_TypeAlias> _1aa8d9ec1_FindTypeAlias(_1aa8d92de_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1aa8740c0_Struct> _1aa8da378_FindStruct(_1aa8d92de_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1aa889426_Fn> _1aa8da730_FindFn(_1aa8d92de_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1aa89b647_Trait> _1aa8daa3d_FindTrait(_1aa8d92de_Sema*, jule::Str);
inline jule::Ptr<_1aa89ddca_Enum> _1aa8dad4b_FindEnum(_1aa8d92de_Sema*, jule::Str);
inline jule::Ptr<_1aa8a04c5_TypeEnum> _1aa8db159_FindTypeEnum(_1aa8d92de_Sema*, jule::Str);
inline jule::Bool _1aa8db577_isFlag(_1aa8d92de_Sema*, jule::I64);
inline void _1aa8db7ec_setCurrentFile(_1aa8d92de_Sema*, jule::Ptr<_1aa94d51d_SymbolTable>);
inline void _1aa8dbbb5_pushErr(_1aa8d92de_Sema*, jule::Ptr<_1db944d0d_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1aa8dbed4_pushSuggestion(_1aa8d92de_Sema*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1aa8dc38b_isAccessibleDefine(_1aa8d92de_Sema*, jule::Bool, jule::Ptr<_1db944d0d_Token>);
inline jule::Bool _1aa8dc7dc_isDuplicatedIdent(_1aa8d92de_Sema*, jule::Uintptr, jule::Str, jule::Bool);
inline void _1aa8dcb0b_checkDirectives(jule::Ptr<_1aa8d92de_Sema>, jule::Slice<jule::Ptr<_1aa820a94_Directive>>*, jule::Any);
inline jule::Bool _1aa8dd05c_checkGenericQuantity(_1aa8d92de_Sema*, jule::I64, jule::I64, jule::Ptr<_1db944d0d_Token>);
inline jule::Bool _1aa8dd436_isDuplicatedImportSelection(_1aa8d92de_Sema*, jule::Uintptr, jule::Str);
inline jule::Any _1aa8dd7ee_getImportDef(_1aa8d92de_Sema*, jule::Str, jule::Ptr<_1aa8d101c_ImportInfo>*);
inline jule::Bool _1ad3ac6a5_checkImportSelection(_1aa8d92de_Sema*, jule::Ptr<_1db944d0d_Token>*, jule::Ptr<_1aa908c59_Var>*);
inline jule::Bool _1ad3b15ee_checkImportSelection(_1aa8d92de_Sema*, jule::Ptr<_1db944d0d_Token>*, jule::Ptr<_1aa982b29_TypeAlias>*);
inline jule::Bool _1ad3b53b1_checkImportSelection(_1aa8d92de_Sema*, jule::Ptr<_1db944d0d_Token>*, jule::Ptr<_1aa8740c0_Struct>*);
inline jule::Bool _1acd5e2cd_checkImportSelection(_1aa8d92de_Sema*, jule::Ptr<_1db944d0d_Token>*, jule::Ptr<_1aa89b647_Trait>*);
inline jule::Bool _1acd62de7_checkImportSelection(_1aa8d92de_Sema*, jule::Ptr<_1db944d0d_Token>*, jule::Ptr<_1aa89ddca_Enum>*);
inline jule::Bool _1acd66bba_checkImportSelection(_1aa8d92de_Sema*, jule::Ptr<_1db944d0d_Token>*, jule::Ptr<_1aa8a04c5_TypeEnum>*);
inline jule::Bool _1acd6aaae_checkImportSelection(_1aa8d92de_Sema*, jule::Ptr<_1db944d0d_Token>*, jule::Ptr<_1aa889426_Fn>*);
inline jule::Bool _1aa8dded6_checkImportSelectedSelections(_1aa8d92de_Sema*, jule::Ptr<_1aa8d101c_ImportInfo>*);
inline jule::Bool _1acd706b8_checkImportsAllSelectionsFromCollection(_1aa8d92de_Sema*, jule::Slice<jule::Ptr<_1aa908c59_Var>>*, jule::Ptr<_1db944d0d_Token>*);
inline jule::Bool _1acd73c2c_checkImportsAllSelectionsFromCollection(_1aa8d92de_Sema*, jule::Slice<jule::Ptr<_1aa982b29_TypeAlias>>*, jule::Ptr<_1db944d0d_Token>*);
inline jule::Bool _1acd74304_checkImportsAllSelectionsFromCollection(_1aa8d92de_Sema*, jule::Slice<jule::Ptr<_1aa8740c0_Struct>>*, jule::Ptr<_1db944d0d_Token>*);
inline jule::Bool _1acd7964a_checkImportsAllSelectionsFromCollection(_1aa8d92de_Sema*, jule::Slice<jule::Ptr<_1aa889426_Fn>>*, jule::Ptr<_1db944d0d_Token>*);
inline jule::Bool _1acd79c33_checkImportsAllSelectionsFromCollection(_1aa8d92de_Sema*, jule::Slice<jule::Ptr<_1aa89b647_Trait>>*, jule::Ptr<_1db944d0d_Token>*);
inline jule::Bool _1acd7c8e5_checkImportsAllSelectionsFromCollection(_1aa8d92de_Sema*, jule::Slice<jule::Ptr<_1aa89ddca_Enum>>*, jule::Ptr<_1db944d0d_Token>*);
inline jule::Bool _1acd805a7_checkImportsAllSelectionsFromCollection(_1aa8d92de_Sema*, jule::Slice<jule::Ptr<_1aa8a04c5_TypeEnum>>*, jule::Ptr<_1db944d0d_Token>*);
inline jule::Bool _1aa8de712_checkImportAllSelections(_1aa8d92de_Sema*, jule::Ptr<_1aa8d101c_ImportInfo>*);
inline jule::Bool _1aa8dea31_checkImportSelections(_1aa8d92de_Sema*, jule::Ptr<_1aa8d101c_ImportInfo>*);
inline jule::Bool _1aa8ded3e_isUseAliasDuplication(_1aa8d92de_Sema*, jule::Ptr<_1aa8d101c_ImportInfo>*);
inline jule::Bool _1aa8e014c_checkImport(_1aa8d92de_Sema*, jule::Ptr<_1aa8d101c_ImportInfo>*);
inline void _1aa8e0328_checkImports(_1aa8d92de_Sema*);
inline void _1aa8e0504_implFileImpls(jule::Ptr<_1aa8d92de_Sema>);
inline void _1aa8e06d0_implImpls(jule::Ptr<_1aa8d92de_Sema>);
inline void _1aa8e08ab_checkEnums(jule::Ptr<_1aa8d92de_Sema>);
inline void _1aa8e0a87_checkFileInherits(jule::Ptr<_1aa8d92de_Sema>);
inline void _1aa8e0c63_checkInherits(jule::Ptr<_1aa8d92de_Sema>);
inline _1aa992e58_typeChecker _1aa8e11b4_typeChecker(jule::Ptr<_1aa8d92de_Sema>, jule::Trait<_1aa9a0509_Lookup>, jule::Slice<jule::Ptr<_1aa982b29_TypeAlias>>, jule::Ptr<_1aa992078_referencer>);
inline jule::Ptr<_1aa983872_TypeKind> _1aa8e16ae_buildTypeWithRefers(jule::Ptr<_1aa8d92de_Sema>, jule::Ptr<_1aa854028_TypeDecl>*, jule::Trait<_1aa9a0509_Lookup>, jule::Slice<jule::Ptr<_1aa982b29_TypeAlias>>, jule::Ptr<_1aa992078_referencer>);
inline jule::Bool _1aa8e1ba9_checkTypeWithRefers(jule::Ptr<_1aa8d92de_Sema>, jule::Ptr<_1aa9889ba_TypeSymbol>*, jule::Trait<_1aa9a0509_Lookup>, jule::Slice<jule::Ptr<_1aa982b29_TypeAlias>>, jule::Ptr<_1aa992078_referencer>);
inline jule::Ptr<_1aa8aa69a_constraintChecker> _1aa8e1e1d_constraintChecker(jule::Ptr<_1aa8d92de_Sema>);
inline jule::Bool _1aa8e22c5_checkType(jule::Ptr<_1aa8d92de_Sema>, jule::Ptr<_1aa9889ba_TypeSymbol>*, jule::Trait<_1aa9a0509_Lookup>);
inline jule::Ptr<_1aa983872_TypeKind> _1aa8e2726_buildTypeWithGenerics(jule::Ptr<_1aa8d92de_Sema>, jule::Ptr<_1aa854028_TypeDecl>*, jule::Slice<jule::Ptr<_1aa982b29_TypeAlias>>, jule::Ptr<_1aa890031_ReferenceStack>);
inline jule::Ptr<_1aa983872_TypeKind> _1aa8e2a34_buildType(jule::Ptr<_1aa8d92de_Sema>, jule::Ptr<_1aa854028_TypeDecl>*);
inline jule::Ptr<_1aa983872_TypeKind> _1aa8e2d42_selectType(jule::Ptr<_1aa8d92de_Sema>, jule::Ptr<_1aa854028_TypeDecl>*);
inline jule::Ptr<_1aa959903_Eval> _1aa8e3293_evalpd(jule::Ptr<_1aa8d92de_Sema>, jule::Trait<_1aa9a0509_Lookup>, jule::Ptr<_1aa983872_TypeKind>, jule::Ptr<_1aa908c59_Var>);
inline jule::Ptr<_1aa959903_Eval> _1aa8e364a_evalp(jule::Ptr<_1aa8d92de_Sema>, jule::Trait<_1aa9a0509_Lookup>, jule::Ptr<_1aa983872_TypeKind>);
inline jule::Ptr<_1aa959903_Eval> _1aa8e3958_eval(jule::Ptr<_1aa8d92de_Sema>, jule::Trait<_1aa9a0509_Lookup>);
inline jule::Bool _1aa8e3e53_checkAssignType(jule::Ptr<_1aa8d92de_Sema>, jule::Bool, jule::Ptr<_1aa983872_TypeKind>*, jule::Ptr<_1aa957d85_Data>*, jule::Ptr<_1db944d0d_Token>);
inline jule::Bool _1aa8e43a4_checkTypeCompatibility(jule::Ptr<_1aa8d92de_Sema>, jule::Ptr<_1aa983872_TypeKind>*, jule::Ptr<_1aa983872_TypeKind>*, jule::Ptr<_1db944d0d_Token>*);
inline jule::Ptr<_1aa983872_TypeKind> _1aa8e4827_buildNonGenericTypeKind(jule::Ptr<_1aa8d92de_Sema>, jule::Ptr<_1aa854028_TypeDecl>*, jule::Slice<jule::Ptr<_1aa861321_GenericDecl>>*, jule::Slice<jule::Ptr<_1aa983872_TypeKind>>*);
inline jule::Bool _1aa8e4c12_buildFnNonGenericTypeKinds(jule::Ptr<_1aa8d92de_Sema>, jule::Ptr<_1aa88c0c7_FnIns>*, jule::Slice<jule::Ptr<_1aa983872_TypeKind>>*);
inline jule::Ptr<_1aa88c0c7_FnIns> _1aa8e5031_getTraitCheckFnKind(jule::Ptr<_1aa8d92de_Sema>, jule::Ptr<_1aa889426_Fn>*);
inline jule::Bool _1aa8e5482_checkConstraintsFn(jule::Ptr<_1aa8d92de_Sema>, jule::Ptr<_1aa88c0c7_FnIns>*, jule::Ptr<_1db944d0d_Token>*, jule::Ptr<_1aa88c0c7_FnIns>);
inline jule::Bool _1aa8e58d3_checkConstraintsStruct(jule::Ptr<_1aa8d92de_Sema>, jule::Ptr<_1aa876dd6_StructIns>*, jule::Ptr<_1db944d0d_Token>*, jule::Ptr<_1aa876dd6_StructIns>);
inline jule::Bool _1aa8e5c8a_fnEnvironment(jule::Ptr<_1aa8d92de_Sema>, jule::Ptr<_1aa88c0c7_FnIns>*, jule::Fn<jule::Bool(jule::Ptr<_1aa8d92de_Sema>*,jule::Slice<jule::Ptr<_1aa982b29_TypeAlias>>*)>);
inline void _1aa8e6010_checkFnParamKind(jule::Ptr<_1aa8d92de_Sema>, jule::Ptr<_1aa88b208_ParamIns>*);
inline jule::Bool _1aa8e631d_reloadFnInsTypes(jule::Ptr<_1aa8d92de_Sema>, jule::Ptr<_1aa88c0c7_FnIns>);
inline jule::Bool _1aa8e6791_checkRefValidityForInitExpr(jule::Ptr<_1aa8d92de_Sema>, jule::Bool, jule::Ptr<_1aa957d85_Data>*, jule::Ptr<_1db944d0d_Token>*);
inline jule::Bool _1aa8e6d68_checkValidityForInitExpr(jule::Ptr<_1aa8d92de_Sema>, jule::Bool, jule::Bool, jule::Ptr<_1aa983872_TypeKind>*, jule::Ptr<_1aa957d85_Data>*, jule::Ptr<_1db944d0d_Token>*);
inline jule::Bool _1aa8e7231_checkTypeAliasDeclKind(jule::Ptr<_1aa8d92de_Sema>, jule::Ptr<_1aa982b29_TypeAlias>*, jule::Trait<_1aa9a0509_Lookup>);
inline void _1aa8e7550_checkTypeAliasDecl(jule::Ptr<_1aa8d92de_Sema>, jule::Ptr<_1aa982b29_TypeAlias>*, jule::Trait<_1aa9a0509_Lookup>);
inline void _1aa8e77c5_checkTypeAliasDeclDup(jule::Ptr<_1aa8d92de_Sema>, jule::Ptr<_1aa982b29_TypeAlias>*);
inline jule::Bool _1aa8e7a39_checkTypeAliasDecls(jule::Ptr<_1aa8d92de_Sema>);
inline void _1ad4946e3_checkEnumItemsDup(_1aa8d92de_Sema*, jule::Slice<jule::Ptr<_1aa89d3d5_EnumItem>>);
inline void _1ad49e8a7_checkEnumItemsDup(_1aa8d92de_Sema*, jule::Slice<jule::Ptr<_1aa89ee0e_TypeEnumItem>>);
inline void _1aa8e8034_checkEnumItemsStr(jule::Ptr<_1aa8d92de_Sema>, jule::Ptr<_1aa89ddca_Enum>*);
inline void _1ad479a08_checkEnumItemInt(jule::Ptr<_1aa8d92de_Sema>, jule::Ptr<_1aa959903_Eval>*, jule::Ptr<_1aa89ddca_Enum>*, jule::Ptr<_1aa989339_Prim>*, jule::Ptr<_1aa89d3d5_EnumItem>*, jule::U64*);
inline void _1ad48796c_checkEnumItemInt(jule::Ptr<_1aa8d92de_Sema>, jule::Ptr<_1aa959903_Eval>*, jule::Ptr<_1aa89ddca_Enum>*, jule::Ptr<_1aa989339_Prim>*, jule::Ptr<_1aa89d3d5_EnumItem>*, jule::I64*);
inline void _1ad476098_checkEnumItemsInt1(jule::Ptr<_1aa8d92de_Sema>, jule::Ptr<_1aa989339_Prim>*, jule::Ptr<_1aa89ddca_Enum>*);
inline void _1ad481d51_checkEnumItemsInt1(jule::Ptr<_1aa8d92de_Sema>, jule::Ptr<_1aa989339_Prim>*, jule::Ptr<_1aa89ddca_Enum>*);
inline void _1aa8e8ad4_checkEnumItemsInt(jule::Ptr<_1aa8d92de_Sema>, jule::Ptr<_1aa89ddca_Enum>*);
inline void _1aa8e8d59_checkEnumDecl(jule::Ptr<_1aa8d92de_Sema>, jule::Ptr<_1aa89ddca_Enum>*);
inline void _1aa8e90ce_checkTypeEnumDecl(jule::Ptr<_1aa8d92de_Sema>, jule::Ptr<_1aa8a04c5_TypeEnum>*);
inline jule::Bool _1aa8e9343_checkEnumDecls(jule::Ptr<_1aa8d92de_Sema>);
inline jule::Bool _1aa8e95a7_checkTypeEnumDecls(jule::Ptr<_1aa8d92de_Sema>);
inline jule::Bool _1aa8e98b5_checkDeclGenerics(_1aa8d92de_Sema*, jule::Slice<jule::Ptr<_1aa861321_GenericDecl>>*);
inline jule::Bool _1aa8e9bc3_checkFnDeclParamsDup(_1aa8d92de_Sema*, jule::Ptr<_1aa889426_Fn>*);
inline jule::Bool _1aa8e9ed1_checkFnDeclResultDup(_1aa8d92de_Sema*, jule::Ptr<_1aa889426_Fn>*);
inline void _1aa8ea256_checkFnDeclPrototype(jule::Ptr<_1aa8d92de_Sema>, jule::Ptr<_1aa889426_Fn>*);
inline jule::Bool _1aa8ea6a7_catchTraitInheritCycle(jule::Ptr<_1aa8d92de_Sema>, jule::Ptr<_1aa89b647_Trait>, jule::Ptr<_1aa89b647_Trait>, jule::Str*);
inline jule::Bool _1aa8ea9d7__checkTraitDeclInherits(jule::Ptr<_1aa8d92de_Sema>, jule::Ptr<_1aa89b647_Trait>*);
inline void _1aa8eac6d_checkTraitDeclInherits(jule::Ptr<_1aa8d92de_Sema>, jule::Ptr<_1aa89b647_Trait>*);
inline void _1aa8eaee3_checkTraitDeclMethod(jule::Ptr<_1aa8d92de_Sema>, jule::Ptr<_1aa889426_Fn>*);
inline void _1aa8eb268_checkTraitDeclMethods(jule::Ptr<_1aa8d92de_Sema>, jule::Ptr<_1aa89b647_Trait>*);
inline void _1aa8eb4dd_checkTraitDecl(jule::Ptr<_1aa8d92de_Sema>, jule::Ptr<_1aa89b647_Trait>*);
inline jule::Bool _1aa8eb752_checkTraitDecls(jule::Ptr<_1aa8d92de_Sema>);
inline jule::Bool _1aa8ebb09_checkTraitImplMethods(_1aa8d92de_Sema*, jule::Ptr<_1aa89b647_Trait>*, jule::Ptr<_1aa8ac548_Impl>*);
inline jule::Bool _1aa8ebeb1_implToStruct(jule::Ptr<_1aa8d92de_Sema>, jule::Ptr<_1aa8740c0_Struct>*, jule::Ptr<_1aa8ac548_Impl>*);
inline void _1aa8ec236_implTrait(jule::Ptr<_1aa8d92de_Sema>, jule::Ptr<_1aa8ac548_Impl>*);
inline void _1aa8ec4ab_implStruct(jule::Ptr<_1aa8d92de_Sema>, jule::Ptr<_1aa8ac548_Impl>*);
inline void _1aa8ec731_implImpl(jule::Ptr<_1aa8d92de_Sema>, jule::Ptr<_1aa8ac548_Impl>*);
inline void _1aa8eca50_checkVarDecl(jule::Ptr<_1aa8d92de_Sema>, jule::Ptr<_1aa908c59_Var>*, jule::Trait<_1aa9a0509_Lookup>);
inline void _1aa8eccc5_checkGlobalVarDecl(jule::Ptr<_1aa8d92de_Sema>, jule::Ptr<_1aa908c59_Var>*);
inline jule::Bool _1aa8ed039_checkGlobalDecls(jule::Ptr<_1aa8d92de_Sema>);
inline jule::Bool _1aa8ed3e1_checkStructTraitImpl(jule::Ptr<_1aa8d92de_Sema>, jule::Ptr<_1aa8740c0_Struct>*, jule::Ptr<_1aa89b647_Trait>*);
inline jule::Bool _1aa8ed6ee_checkStructImpls(jule::Ptr<_1aa8d92de_Sema>, jule::Ptr<_1aa8740c0_Struct>*);
inline jule::Bool _1aa8eda0c_checkStructFields(jule::Ptr<_1aa8d92de_Sema>, jule::Ptr<_1aa8740c0_Struct>*);
inline void _1aa8edc82_checkStructDecl(jule::Ptr<_1aa8d92de_Sema>, jule::Ptr<_1aa8740c0_Struct>*);
inline jule::Bool _1aa8edee6_checkStructDecls(jule::Ptr<_1aa8d92de_Sema>);
inline void _1aa8ee26b_checkFnDecl(jule::Ptr<_1aa8d92de_Sema>, jule::Ptr<_1aa889426_Fn>*);
inline jule::Bool _1aa8ee4d0_checkFnDecls(jule::Ptr<_1aa8d92de_Sema>);
inline void _1aa8ee898_pushCycleError(_1aa8d92de_Sema*, jule::Str*, jule::Str*, jule::Str*);
inline jule::Bool _1aa8eece9_checkCrossCycle(_1aa8d92de_Sema*, jule::Ptr<_1aa8740c0_Struct>*, jule::Ptr<_1aa8740c0_Struct>*, jule::Str*);
inline jule::Bool _1aa90026c_checkStructDeriveIllegalCycles(_1aa8d92de_Sema*, jule::Str, jule::Ptr<_1aa8740c0_Struct>*, jule::Ptr<_1aa983872_TypeKind>*);
inline jule::Bool _1aa9005ad_checkStructInsDeriveClone(_1aa8d92de_Sema*, jule::Ptr<_1aa876dd6_StructIns>);
inline void _1aa90079a_checkPackageDecls(jule::Ptr<_1aa8d92de_Sema>);
inline void _1aa900adb_checkDataForTypeInference(_1aa8d92de_Sema*, jule::Ptr<_1aa957d85_Data>*, jule::Ptr<_1db944d0d_Token>*);
inline void _1aa900d72_checkVar(jule::Ptr<_1aa8d92de_Sema>, jule::Ptr<_1aa908c59_Var>*);
inline void _1aa901191_checkTypeVar(jule::Ptr<_1aa8d92de_Sema>, jule::Ptr<_1aa908c59_Var>*, jule::Trait<_1aa9a0509_Lookup>);
inline void _1aa90136c_checkGlobalTypes(jule::Ptr<_1aa8d92de_Sema>);
inline jule::Ptr<_1aa88c0c7_FnIns> _1aa901724_readyToCheckFn(jule::Ptr<_1aa8d92de_Sema>, jule::Ptr<_1aa876dd6_StructIns>*, jule::Ptr<_1aa889426_Fn>*);
inline void _1aa901a43_checkTypeMethod(jule::Ptr<_1aa8d92de_Sema>, jule::Ptr<_1aa876dd6_StructIns>*, jule::Ptr<_1aa889426_Fn>*);
inline jule::Ptr<_1aa88c0c7_FnIns> _1aa901e94_checkStructInsOp(jule::Ptr<_1aa8d92de_Sema>, jule::Ptr<_1aa876dd6_StructIns>*, jule::Ptr<_1aa889426_Fn>*, jule::Fn<jule::Bool(jule::Ptr<_1aa889426_Fn>)>);
inline jule::Bool _1aa90234b_checkStructEnv(jule::Ptr<_1aa8d92de_Sema>, jule::Ptr<_1aa876dd6_StructIns>*, jule::Ptr<_1db944d0d_Token>);
inline jule::Bool _1aa902703_precheckStructIns(jule::Ptr<_1aa8d92de_Sema>, jule::Ptr<_1aa876dd6_StructIns>*, jule::Ptr<_1db944d0d_Token>);
inline void _1aa902978_checkStructIns(jule::Ptr<_1aa8d92de_Sema>, jule::Ptr<_1aa876dd6_StructIns>*);
inline void _1aa902bed_checkTypeStruct(jule::Ptr<_1aa8d92de_Sema>, jule::Ptr<_1aa8740c0_Struct>*);
inline void _1aa902dc9_checkStructTypes(jule::Ptr<_1aa8d92de_Sema>);
inline void _1aa903171_checkStructInsOperators(jule::Ptr<_1aa8d92de_Sema>, jule::Ptr<_1aa876dd6_StructIns>);
inline void _1aa903407_precheckStructType(jule::Ptr<_1aa8d92de_Sema>, jule::Ptr<_1aa8740c0_Struct>*);
inline void _1aa9035d3_precheckStructTypes(jule::Ptr<_1aa8d92de_Sema>);
inline void _1aa903858_checkRets(_1aa8d92de_Sema*, jule::Ptr<_1aa88c0c7_FnIns>*);
inline void _1aa903b77_checkFnInsSc(_1aa8d92de_Sema*, jule::Ptr<_1aa88c0c7_FnIns>*, jule::Ptr<_1aa8b91d1_scopeChecker>*);
inline void _1aa903e96_checkFnInsCaller(jule::Ptr<_1aa8d92de_Sema>, jule::Ptr<_1aa88c0c7_FnIns>*, jule::Ptr<_1db944d0d_Token>);
inline void _1aa90421b_checkFnIns(jule::Ptr<_1aa8d92de_Sema>, jule::Ptr<_1aa88c0c7_FnIns>*);
inline void _1aa904491_checkTypeFn(jule::Ptr<_1aa8d92de_Sema>, jule::Ptr<_1aa889426_Fn>*);
inline void _1aa904716_checkTestFn(_1aa8d92de_Sema*, jule::Ptr<_1aa88c0c7_FnIns>*);
inline void _1aa90498b_precheckTypeFn(jule::Ptr<_1aa8d92de_Sema>, jule::Ptr<_1aa889426_Fn>*);
inline void _1aa904b67_precheckFnTypes(jule::Ptr<_1aa8d92de_Sema>);
inline void _1aa904d43_checkFnTypes(jule::Ptr<_1aa8d92de_Sema>);
inline void _1aa90501e_checkPackageTypes(jule::Ptr<_1aa8d92de_Sema>);
inline void _1aa9051ea_setFileSemaFields(jule::Ptr<_1aa8d92de_Sema>);
inline void _1aa9053c6_setSemaFields(jule::Ptr<_1aa8d92de_Sema>);
inline void _1aa90564b_check(jule::Ptr<_1aa8d92de_Sema>, jule::Slice<jule::Ptr<_1aa94d51d_SymbolTable>>*);
struct _1aa8d92de_Sema {
	jule::Slice<_1d9d938bd_Log> _field_errors;
	jule::Slice<jule::Ptr<_1aa94d51d_SymbolTable>> _field_files;
	jule::Ptr<_1aa94d51d_SymbolTable> _field_file;
	jule::I64 _field_flags = 0LL;
	jule::Ptr<_1aa8d87c7_commonSemaMeta> _field_meta;
	

	_1aa8d92de_Sema(void) = default;


};
inline _1aa905a03_missingRetChecker static__1aa905dbb_new(void);
inline jule::Bool _1aa906196_checkConditional(_1aa905a03_missingRetChecker*, jule::Ptr<_1aa8b310e_Conditional>);
inline jule::Bool _1aa9064a4_checkMatch(_1aa905a03_missingRetChecker*, jule::Ptr<_1aa8b63ba_Match>);
inline jule::Bool _1aa9067b2_checkInfIter(_1aa905a03_missingRetChecker*, jule::Ptr<_1aa8b33ea_InfIter>);
inline jule::Bool _1aa906ac0_checkScope(_1aa905a03_missingRetChecker*, jule::Ptr<_1aa8b25a3_Scope>);
inline jule::Bool _1aa906dcd_check(_1aa905a03_missingRetChecker*, jule::Ptr<_1aa8b25a3_Scope>);
struct _1aa905a03_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked;
	jule::Bool _field_falled = false;
	

	_1aa905a03_missingRetChecker(void) = default;


};
struct _1aa907c14_IterRelation {
	jule::Ptr<_1aa908c59_Var> _field_Range;
	

	_1aa907c14_IterRelation(void) = default;

	inline bool operator==(_1aa907c14_IterRelation _other) {
		return 
			this->_field_Range == _other._field_Range;
	}

	inline bool operator!=(_1aa907c14_IterRelation _other) { return !this->operator==(_other); }


};
inline jule::Bool _1aa909122_IsInitialized(_1aa908c59_Var*);
inline jule::Bool _1aa909386_IsTypeInferred(_1aa908c59_Var*);
inline jule::Bool _1aa9095ea_untypedConstant(_1aa908c59_Var*);
struct _1aa908c59_Var {
	jule::Ptr<_1aa8b25a3_Scope> _field_Scope;
	jule::Ptr<_1db944d0d_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1aa9889ba_TypeSymbol> _field_Kind;
	jule::Ptr<_1aa958e0d_Value> _field_Value;
	jule::Ptr<_1aa890031_ReferenceStack> _field_Refers;
	jule::Slice<jule::Ptr<_1aa820a94_Directive>> _field_Directives;
	jule::Ptr<_1aa907c14_IterRelation> _field_IterRelation;
	jule::I64 _field_RetOrder = -2LL;
	jule::Slice<jule::Ptr<_1aa908c59_Var>> _field_Depends;
	

	_1aa908c59_Var(void) = default;


};
inline jule::Bool static__1aa90a178_Dispose(jule::Ptr<_1aa889426_Fn>);
inline jule::Bool static__1aa90a420_Str(jule::Ptr<_1aa889426_Fn>);
inline jule::Bool static__1aa90a761_logical(jule::Ptr<_1aa889426_Fn>*, jule::Str);
inline jule::Bool static__1aa90aa08_Eq(jule::Ptr<_1aa889426_Fn>);
inline jule::Bool static__1aa90aca0_Gt(jule::Ptr<_1aa889426_Fn>);
inline jule::Bool static__1aa90b047_GtEq(jule::Ptr<_1aa889426_Fn>);
inline jule::Bool static__1aa90b2de_Lt(jule::Ptr<_1aa889426_Fn>);
inline jule::Bool static__1aa90b586_LtEq(jule::Ptr<_1aa889426_Fn>);
inline jule::Bool static__1aa90b8c7_result(jule::Ptr<_1aa889426_Fn>*, jule::Str);
inline jule::Bool static__1aa90bb6e_Shl(jule::Ptr<_1aa889426_Fn>);
inline jule::Bool static__1aa90be16_Shr(jule::Ptr<_1aa889426_Fn>);
inline jule::Bool static__1aa90c1ad_Add(jule::Ptr<_1aa889426_Fn>);
inline jule::Bool static__1aa90c455_Sub(jule::Ptr<_1aa889426_Fn>);
inline jule::Bool static__1aa90c6ec_Div(jule::Ptr<_1aa889426_Fn>);
inline jule::Bool static__1aa90c994_Mul(jule::Ptr<_1aa889426_Fn>);
inline jule::Bool static__1aa90cc3b_Mod(jule::Ptr<_1aa889426_Fn>);
inline jule::Bool static__1aa90ced3_BitAnd(jule::Ptr<_1aa889426_Fn>);
inline jule::Bool static__1aa90d27a_BitOr(jule::Ptr<_1aa889426_Fn>);
inline jule::Bool static__1aa90d522_BitXor(jule::Ptr<_1aa889426_Fn>);
inline jule::Bool static__1aa90d863_unary(jule::Ptr<_1aa889426_Fn>*, jule::Str);
inline jule::Bool static__1aa90db0a_Neg(jule::Ptr<_1aa889426_Fn>);
inline jule::Bool static__1aa90dda2_Pos(jule::Ptr<_1aa889426_Fn>);
inline jule::Bool static__1aa90e149_BitNot(jule::Ptr<_1aa889426_Fn>);
inline jule::Bool static__1aa90e48a_assign(jule::Ptr<_1aa889426_Fn>*, jule::Str);
inline jule::Bool static__1aa90e732_AddAssign(jule::Ptr<_1aa889426_Fn>);
inline jule::Bool static__1aa90e9c9_SubAssign(jule::Ptr<_1aa889426_Fn>);
inline jule::Bool static__1aa90ec71_DivAssign(jule::Ptr<_1aa889426_Fn>);
inline jule::Bool static__1aa910018_MulAssign(jule::Ptr<_1aa889426_Fn>);
inline jule::Bool static__1aa9102b0_ModAssign(jule::Ptr<_1aa889426_Fn>);
inline jule::Bool static__1aa910557_ShlAssign(jule::Ptr<_1aa889426_Fn>);
inline jule::Bool static__1aa9107ee_ShrAssign(jule::Ptr<_1aa889426_Fn>);
inline jule::Bool static__1aa910a96_BitOrAssign(jule::Ptr<_1aa889426_Fn>);
inline jule::Bool static__1aa910d3d_BitAndAssign(jule::Ptr<_1aa889426_Fn>);
inline jule::Bool static__1aa9110d5_BitXorAssign(jule::Ptr<_1aa889426_Fn>);
struct _1aa909a07_FuncPattern {
	

	_1aa909a07_FuncPattern(void) = default;


};
inline void _1aa93c210_pushErr(_1aa93bbe3_typeCompatibilityChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1aa93c474_checkTrait(_1aa93bbe3_typeCompatibilityChecker*);
inline jule::Bool _1aa93c6d8_checkPtr(_1aa93bbe3_typeCompatibilityChecker*);
inline jule::Bool _1aa93c94c_checkPrim(_1aa93bbe3_typeCompatibilityChecker*);
inline jule::Bool _1aa93cd04_typeEnum(_1aa93bbe3_typeCompatibilityChecker*, jule::Ptr<_1aa8a04c5_TypeEnum>*, jule::Ptr<_1aa983872_TypeKind>*);
inline jule::Bool _1aa93d068_checkTypeEnum(_1aa93bbe3_typeCompatibilityChecker*);
inline jule::Bool _1aa93d2cc_check(_1aa93bbe3_typeCompatibilityChecker*);
struct _1aa93bbe3_typeCompatibilityChecker {
	jule::Ptr<_1aa8d92de_Sema> _field_s;
	jule::Ptr<_1aa983872_TypeKind> _field_dest;
	jule::Ptr<_1aa983872_TypeKind> _field_src;
	jule::Ptr<_1db944d0d_Token> _field_errorToken;
	

	_1aa93bbe3_typeCompatibilityChecker(void) = default;

	inline bool operator==(_1aa93bbe3_typeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1aa93bbe3_typeCompatibilityChecker _other) { return !this->operator==(_other); }


};
inline void _1aa93dc7d_pushErr(_1aa93d81b_assignTypeChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1aa93dee2_checkValidity(_1aa93d81b_assignTypeChecker*);
inline jule::Bool _1aa93e256_checkConst(_1aa93d81b_assignTypeChecker*);
inline jule::Bool _1aa93e4ba_isPrim(_1aa93d81b_assignTypeChecker*);
inline jule::Bool _1aa93e72e_checkCompatibility(_1aa93d81b_assignTypeChecker*);
inline jule::Bool _1aa93e993_check(_1aa93d81b_assignTypeChecker*);
struct _1aa93d81b_assignTypeChecker {
	jule::Ptr<_1aa8d92de_Sema> _field_s;
	jule::Ptr<_1aa983872_TypeKind> _field_dest;
	jule::Ptr<_1aa957d85_Data> _field_d;
	jule::Ptr<_1db944d0d_Token> _field_errorToken;
	

	_1aa93d81b_assignTypeChecker(void) = default;

	inline bool operator==(_1aa93d81b_assignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1aa93d81b_assignTypeChecker _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ad57ad3a_annotateConstraintElem(_1aa940301_dynamicTypeAnnotation*, jule::Ptr<_1aa983872_TypeKind>*);
inline jule::Bool _1ad57a532_annotateConstraintElem(_1aa940301_dynamicTypeAnnotation*, jule::Ptr<_1aa983872_TypeKind>*);
inline jule::Bool _1ad57c7a9_annotateConstraintElem(_1aa940301_dynamicTypeAnnotation*, jule::Ptr<_1aa983872_TypeKind>*);
inline jule::Bool _1ad582c76_annotateConstraintElem(_1aa940301_dynamicTypeAnnotation*, jule::Ptr<_1aa983872_TypeKind>*);
inline jule::Bool _1aa940bd6_annotateConstraintMap(_1aa940301_dynamicTypeAnnotation*, jule::Ptr<_1aa983872_TypeKind>*);
inline jule::Bool _1aa940ee4_annotateConstraintTup(_1aa940301_dynamicTypeAnnotation*, jule::Ptr<_1aa983872_TypeKind>*);
inline jule::Bool _1aa941302_annotateConstraintFn(_1aa940301_dynamicTypeAnnotation*, jule::Ptr<_1aa983872_TypeKind>*);
inline jule::Bool _1aa941632_annotateConstraintIdent(_1aa940301_dynamicTypeAnnotation*, jule::Ptr<_1aa983872_TypeKind>*);
inline jule::Bool _1aa941951_annotateConstraint(_1aa940301_dynamicTypeAnnotation*, jule::Ptr<_1aa983872_TypeKind>*);
inline void _1aa941c70_pushGeneric(_1aa940301_dynamicTypeAnnotation*, jule::Ptr<_1aa983872_TypeKind>*, jule::I64);
inline jule::Bool _1aa94207d_annotatePrim(_1aa940301_dynamicTypeAnnotation*, jule::Ptr<_1aa983872_TypeKind>*);
inline jule::Bool _1aa94238b_annotateArr(_1aa940301_dynamicTypeAnnotation*, jule::Ptr<_1aa983872_TypeKind>*);
inline jule::Bool _1aa942699_annotateSlc(_1aa940301_dynamicTypeAnnotation*, jule::Ptr<_1aa983872_TypeKind>*);
inline jule::Bool _1aa942a51_checkMapKey(_1aa940301_dynamicTypeAnnotation*, jule::Ptr<_1aa983872_TypeKind>*, jule::Ptr<_1aa983872_TypeKind>*);
inline jule::Bool _1aa942d5e_annotateMap(_1aa940301_dynamicTypeAnnotation*, jule::Ptr<_1aa983872_TypeKind>*);
inline jule::Bool _1aa94316c_annotateFn(_1aa940301_dynamicTypeAnnotation*, jule::Ptr<_1aa983872_TypeKind>*);
inline jule::Bool _1aa94347a_annotatePtr(_1aa940301_dynamicTypeAnnotation*, jule::Ptr<_1aa983872_TypeKind>*);
inline jule::Bool _1aa943788_annotateSptr(_1aa940301_dynamicTypeAnnotation*, jule::Ptr<_1aa983872_TypeKind>*);
inline jule::Bool _1aa943a96_annotateStruct(_1aa940301_dynamicTypeAnnotation*, jule::Ptr<_1aa983872_TypeKind>*);
inline jule::Bool _1aa943da4_annotateAny(_1aa940301_dynamicTypeAnnotation*, jule::Ptr<_1aa983872_TypeKind>*);
inline jule::Bool _1aa9441b2_annotateKind(_1aa940301_dynamicTypeAnnotation*, jule::Ptr<_1aa983872_TypeKind>*);
inline jule::Bool _1aa944426_annotate(_1aa940301_dynamicTypeAnnotation*);
struct _1aa940301_dynamicTypeAnnotation {
	jule::Ptr<_1aa959903_Eval> _field_e;
	jule::Ptr<_1aa88c0c7_FnIns> _field_f;
	jule::Ptr<_1aa88b208_ParamIns> _field_p;
	jule::Ptr<_1aa957d85_Data> _field_a;
	jule::Ptr<_1db944d0d_Token> _field_errorToken;
	jule::Ptr<_1aa983872_TypeKind>* _field_k = nullptr;
	jule::Ptr<_1aa854028_TypeDecl> _field_c;
	jule::Slice<jule::Ptr<_1aa983872_TypeKind>> _field_ignored;
	

	_1aa940301_dynamicTypeAnnotation(void) = default;


};
inline void _1aa945218_pushErrToken(_1aa944bb8_fnCallArgChecker*, jule::Ptr<_1db944d0d_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1aa945537_pushErr(_1aa944bb8_fnCallArgChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1aa88b208_ParamIns>> _1aa94579b_getParams(_1aa944bb8_fnCallArgChecker*);
inline jule::Bool _1aa945aa9_checkCounts(_1aa944bb8_fnCallArgChecker*, jule::Slice<jule::Ptr<_1aa88b208_ParamIns>>*);
inline jule::Bool _1aa94600a_checkArg(_1aa944bb8_fnCallArgChecker*, jule::Ptr<_1aa88b208_ParamIns>*, jule::Ptr<_1aa957d85_Data>*, jule::Ptr<_1db944d0d_Token>*);
inline jule::Bool _1aa9463b2_push(_1aa944bb8_fnCallArgChecker*, jule::Ptr<_1aa88b208_ParamIns>*, jule::Ptr<_1aa858549_Expr>);
inline jule::Bool _1aa946769_pushVariadic(_1aa944bb8_fnCallArgChecker*, jule::Ptr<_1aa88b208_ParamIns>*, jule::I64);
inline jule::Bool _1aa946a77_checkArgs(_1aa944bb8_fnCallArgChecker*, jule::Slice<jule::Ptr<_1aa88b208_ParamIns>>*);
inline jule::Bool _1aa946d0d_checkDynamicTypeAnnotation(_1aa944bb8_fnCallArgChecker*);
inline jule::Bool _1aa947083_check(_1aa944bb8_fnCallArgChecker*);
struct _1aa944bb8_fnCallArgChecker {
	jule::Ptr<_1aa959903_Eval> _field_e;
	jule::Slice<jule::Ptr<_1aa858549_Expr>> _field_args;
	jule::Ptr<_1db944d0d_Token> _field_errorToken;
	jule::Ptr<_1aa88c0c7_FnIns> _field_f;
	jule::Bool _field_dynamicAnnotation = false;
	jule::Slice<jule::Any> _field_argModels;
	jule::Slice<jule::Ptr<_1aa983872_TypeKind>> _field_ignored;
	

	_1aa944bb8_fnCallArgChecker(void) = default;


};
inline void _1aa947acd_pushErr(_1aa9475c2_structLitChecker*, jule::Ptr<_1db944d0d_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1aa947dec_pushSuggestion(_1aa9475c2_structLitChecker*, jule::Str, jule::Slice<jule::Any>);
inline void _1aa9482b5_pushMatch(_1aa9475c2_structLitChecker*, jule::Ptr<_1aa8763e1_FieldIns>*, jule::Ptr<_1aa957d85_Data>*, jule::Ptr<_1db944d0d_Token>*);
inline void _1aa9485d4_checkPair(_1aa9475c2_structLitChecker*, jule::Ptr<_1aa85ceaa_FieldExprPair>*, jule::Slice<jule::Ptr<_1aa858549_Expr>>*);
inline jule::Bool _1aa9488e2_readyExprs(_1aa9475c2_structLitChecker*, jule::Slice<jule::Ptr<_1aa858549_Expr>>*);
inline void _1aa948b67_check(_1aa9475c2_structLitChecker*, jule::Slice<jule::Ptr<_1aa858549_Expr>>*);
struct _1aa9475c2_structLitChecker {
	jule::Ptr<_1aa959903_Eval> _field_e;
	jule::Ptr<_1db944d0d_Token> _field_errorToken;
	jule::Ptr<_1aa876dd6_StructIns> _field_s;
	jule::Slice<jule::Ptr<_1aa87ba56_StructArgExprModel>> _field_args;
	

	_1aa9475c2_structLitChecker(void) = default;


};
inline jule::Ptr<_1aa908c59_Var> _1aa94966d_buildVar(_1aa9491a6_rangeChecker*, jule::Ptr<_1aa866986_VarDecl>*);
inline void _1aa949849_setSizeKey(_1aa9491a6_rangeChecker*);
inline void _1aa949c12_checkRangeExprValidity(_1aa9491a6_rangeChecker*, jule::Ptr<_1aa957d85_Data>*, jule::Ptr<_1aa908c59_Var>*, jule::Ptr<_1aa983872_TypeKind>*);
inline void _1aa949ddd_checkSlice(_1aa9491a6_rangeChecker*);
inline void _1aa94a0b9_checkArray(_1aa9491a6_rangeChecker*);
inline void _1aa94a295_checkMapKeyA(_1aa9491a6_rangeChecker*);
inline void _1aa94a471_checkMapKeyB(_1aa9491a6_rangeChecker*);
inline void _1aa94a64c_checkMap(_1aa9491a6_rangeChecker*);
inline void _1aa94a828_checkStr(_1aa9491a6_rangeChecker*);
inline void _1aa94aac0_checkComptimeStructFields(_1aa9491a6_rangeChecker*, jule::Ptr<_1aa8a4243_comptimeStructFields>);
inline jule::Bool _1aa94ad45_checkComptimeRange(_1aa9491a6_rangeChecker*);
inline jule::Bool _1aa94b0a9_check(_1aa9491a6_rangeChecker*);
struct _1aa9491a6_rangeChecker {
	jule::Ptr<_1aa8b91d1_scopeChecker> _field_sc;
	jule::Ptr<_1aa868614_RangeKind> _field_rang;
	jule::Ptr<_1aa8b4253_RangeIter> _field_Kind;
	jule::Ptr<_1aa957d85_Data> _field_d;
	

	_1aa9491a6_rangeChecker(void) = default;

	inline bool operator==(_1aa9491a6_rangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_1aa9491a6_rangeChecker _other) { return !this->operator==(_other); }


};
inline void _1aa94bc25_prepareTypes(_1aa94b780_retTypeChecker*);
inline void _1aa94be9a_prepareExprs(_1aa94b780_retTypeChecker*, jule::Ptr<_1aa858549_Expr>*);
inline void _1aa94c176_checkExprs(_1aa94b780_retTypeChecker*);
inline jule::Bool _1aa94c484_check(_1aa94b780_retTypeChecker*, jule::Ptr<_1aa858549_Expr>*);
struct _1aa94b780_retTypeChecker {
	jule::Ptr<_1aa8b91d1_scopeChecker> _field_sc;
	jule::Ptr<_1aa88c0c7_FnIns> _field_f;
	jule::Slice<jule::Ptr<_1aa983872_TypeKind>> _field_types;
	jule::Slice<jule::Ptr<_1aa858549_Expr>> _field_exprs;
	jule::Ptr<_1db944d0d_Token> _field_errorToken;
	jule::Any _field_model = jule::Any(nullptr);
	

	_1aa94b780_retTypeChecker(void) = default;


};
inline jule::Ptr<_1aa8d101c_ImportInfo> _1aa94da29_SelectPackage(_1aa94d51d_SymbolTable*, jule::Fn<jule::Bool(jule::Ptr<_1aa8d101c_ImportInfo>)>);
inline jule::Ptr<_1aa908c59_Var> _1aa94ddd1_FindVar(_1aa94d51d_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1aa982b29_TypeAlias> _1aa94e288_FindTypeAlias(_1aa94d51d_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1aa8740c0_Struct> _1aa94e640_FindStruct(_1aa94d51d_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1aa889426_Fn> _1aa94e9e7_FindFn(_1aa94d51d_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1aa89b647_Trait> _1aa94ed05_FindTrait(_1aa94d51d_SymbolTable*, jule::Str);
inline jule::Ptr<_1aa89ddca_Enum> _1aa950113_FindEnum(_1aa94d51d_SymbolTable*, jule::Str);
inline jule::Ptr<_1aa8a04c5_TypeEnum> _1aa950421_FindTypeEnum(_1aa94d51d_SymbolTable*, jule::Str);
inline jule::Ptr<_1aa908c59_Var> _1aa950993_findVar(_1aa94d51d_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Ptr<_1aa982b29_TypeAlias> _1aa950de4_findTypeAlias(_1aa94d51d_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Any _1aa95129b_defByIdent(_1aa94d51d_SymbolTable*, jule::Str, jule::Bool);
inline jule::Bool _1aa9516ec_isDuplicatedIdent(_1aa94d51d_SymbolTable*, jule::Uintptr, jule::Str, jule::Bool);
struct _1aa94d51d_SymbolTable {
	jule::Ptr<_1db94a198_File> _field_File;
	jule::Slice<_1aa891362_Pass> _field_Passes;
	jule::Slice<jule::Ptr<_1aa8d101c_ImportInfo>> _field_Imports;
	jule::Slice<jule::Ptr<_1aa908c59_Var>> _field_Vars;
	jule::Slice<jule::Ptr<_1aa982b29_TypeAlias>> _field_TypeAliases;
	jule::Slice<jule::Ptr<_1aa8740c0_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1aa889426_Fn>> _field_Funcs;
	jule::Slice<jule::Ptr<_1aa89b647_Trait>> _field_Traits;
	jule::Slice<jule::Ptr<_1aa89ddca_Enum>> _field_Enums;
	jule::Slice<jule::Ptr<_1aa8a04c5_TypeEnum>> _field_TypeEnums;
	jule::Slice<jule::Ptr<_1aa8ac548_Impl>> _field_Impls;
	

	_1aa94d51d_SymbolTable(void) = default;


};
inline jule::Bool _1aa958270_IsNil(_1aa957d85_Data*);
inline jule::Bool _1aa9584d4_IsVoid(_1aa957d85_Data*);
inline jule::Bool _1aa958748_IsConst(_1aa957d85_Data*);
inline jule::Bool _1aa958a56_GoodOperand(_1aa957d85_Data*, jule::Ptr<_1aa957d85_Data>*);
struct _1aa957d85_Data {
	jule::Bool _field_untyped = false;
	jule::Ptr<_1aa983872_TypeKind> _field_Kind;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Bool _field_Lvalue = false;
	jule::Bool _field_IsRune = false;
	jule::Any _field_Model = jule::Any(nullptr);
	jule::Bool _field_Decl = false;
	jule::Ptr<_1c0901b1b_Const> _field_Constant;
	

	_1aa957d85_Data(void) = default;

	inline bool operator==(_1aa957d85_Data _other) {
		return 
			this->_field_untyped == _other._field_untyped &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Lvalue == _other._field_Lvalue &&
			this->_field_IsRune == _other._field_IsRune &&
			this->_field_Model == _other._field_Model &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Constant == _other._field_Constant;
	}

	inline bool operator!=(_1aa957d85_Data _other) { return !this->operator==(_other); }


};
struct _1aa958e0d_Value {
	jule::Ptr<_1aa858549_Expr> _field_Expr;
	jule::Ptr<_1aa957d85_Data> _field_Data;
	

	_1aa958e0d_Value(void) = default;

	inline bool operator==(_1aa958e0d_Value _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1aa958e0d_Value _other) { return !this->operator==(_other); }


};
inline void _1aa959e0e_pushErr(_1aa959903_Eval*, jule::Ptr<_1db944d0d_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1aa95a22d_pushSuggestion(_1aa959903_Eval*, jule::Str, jule::Slice<jule::Any>);
inline void _1aa95a409_allowBuiltin(_1aa959903_Eval*);
inline void _1aa95a5d5_disallowBuiltin(_1aa959903_Eval*);
inline jule::Bool _1aa95a849_isUnsafe(_1aa959903_Eval*);
inline jule::Bool _1aa95aaad_isGlobal(_1aa959903_Eval*);
inline jule::Bool _1aa95ad88_applyNumericPrefix(_1aa959903_Eval*, jule::Ptr<_1aa957d85_Data>*);
inline jule::Ptr<_1aa957d85_Data> _1aa95b0ec_litNil(_1aa959903_Eval*);
inline jule::Ptr<_1aa957d85_Data> _1aa95b40a_litStr(_1aa959903_Eval*, jule::Ptr<_1aa85957d_LitExpr>*);
inline jule::Ptr<_1aa957d85_Data> _1aa95b718_litBool(_1aa959903_Eval*, jule::Ptr<_1aa85957d_LitExpr>*);
inline jule::Ptr<_1aa957d85_Data> _1aa95ba26_litRune(_1aa959903_Eval*, jule::Ptr<_1aa85957d_LitExpr>*);
inline jule::Ptr<_1aa957d85_Data> _1aa95bd34_litFloat(_1aa959903_Eval*, jule::Ptr<_1aa85957d_LitExpr>*);
inline jule::Ptr<_1aa957d85_Data> _1c090ab58_litInt(_1aa959903_Eval*, jule::Ptr<_1aa85957d_LitExpr>*);
inline jule::Ptr<_1aa957d85_Data> _1c090b30c_litNum(_1aa959903_Eval*, jule::Ptr<_1aa85957d_LitExpr>*);
inline jule::Ptr<_1aa957d85_Data> _1c090b021_evalLit(_1aa959903_Eval*, jule::Ptr<_1aa85957d_LitExpr>);
inline jule::Any _1c090b5d7_findBuiltins(_1aa959903_Eval*, jule::Str);
inline jule::Any _1aa95c340_getDef(_1aa959903_Eval*, jule::Str, jule::Bool);
inline void _1ad7b6482_pushReference(_1aa959903_Eval*, jule::Ptr<_1aa88c0c7_FnIns>*);
inline void _1ad7caa3a_pushReference(_1aa959903_Eval*, jule::Ptr<_1aa908c59_Var>*);
inline void _1ad66c47b_pushReference(_1aa959903_Eval*, jule::Ptr<_1aa876dd6_StructIns>*);
inline jule::Ptr<_1aa957d85_Data> _1aa95c8c3__evalEnum(_1aa959903_Eval*, jule::Ptr<_1aa89ddca_Enum>);
inline jule::Ptr<_1aa957d85_Data> _1aa95cc7a_evalEnum(_1aa959903_Eval*, jule::Ptr<_1aa89ddca_Enum>, jule::Ptr<_1db944d0d_Token>);
inline jule::Ptr<_1aa957d85_Data> _1aa95d088__evalTypeEnum(_1aa959903_Eval*, jule::Ptr<_1aa8a04c5_TypeEnum>);
inline jule::Ptr<_1aa957d85_Data> _1aa95d440_evalTypeEnum(_1aa959903_Eval*, jule::Ptr<_1aa8a04c5_TypeEnum>, jule::Ptr<_1db944d0d_Token>);
inline jule::Ptr<_1aa957d85_Data> _1aa95d74d__evalStruct(_1aa959903_Eval*, jule::Ptr<_1aa876dd6_StructIns>);
inline jule::Ptr<_1aa957d85_Data> _1aa95db05_evalStruct(_1aa959903_Eval*, jule::Ptr<_1aa876dd6_StructIns>, jule::Ptr<_1db944d0d_Token>);
inline jule::Ptr<_1aa957d85_Data> _1aa95de13_evalFnIns(_1aa959903_Eval*, jule::Ptr<_1aa88c0c7_FnIns>);
inline void _1aa95e232_checkDeprecated(_1aa959903_Eval*, jule::Slice<jule::Ptr<_1aa820a94_Directive>>*, jule::Ptr<_1db944d0d_Token>);
inline jule::Ptr<_1aa957d85_Data> _1aa95e5d9_evalFn(_1aa959903_Eval*, jule::Ptr<_1aa889426_Fn>, jule::Ptr<_1db944d0d_Token>);
inline void _1aa95e9a2_pushIllegalCycleError(_1aa959903_Eval*, jule::Ptr<_1aa908c59_Var>*, jule::Ptr<_1aa908c59_Var>*, jule::Str*);
inline jule::Bool _1aa95ed59_checkCrossCycle(_1aa959903_Eval*, jule::Ptr<_1aa908c59_Var>*, jule::Str*);
inline jule::Bool _1aa960211_checkIllegalCycles(_1aa959903_Eval*, jule::Ptr<_1aa908c59_Var>*, jule::Ptr<_1db944d0d_Token>);
inline jule::Ptr<_1aa957d85_Data> _1aa9605b8_evalVar(_1aa959903_Eval*, jule::Ptr<_1aa908c59_Var>, jule::Ptr<_1db944d0d_Token>);
inline jule::Ptr<_1aa957d85_Data> _1aa960970_evalTypeAlias(_1aa959903_Eval*, jule::Ptr<_1aa982b29_TypeAlias>, jule::Ptr<_1db944d0d_Token>);
inline jule::Ptr<_1aa957d85_Data> _1aa960d27_evalDef(_1aa959903_Eval*, jule::Any, jule::Ptr<_1db944d0d_Token>);
inline jule::Ptr<_1aa957d85_Data> _1aa961135_evalIdent(_1aa959903_Eval*, jule::Ptr<_1aa85a20a_IdentExpr>);
inline jule::Ptr<_1aa957d85_Data> _1aa961443_evalUnary(jule::Ptr<_1aa959903_Eval>, jule::Ptr<_1aa85a914_UnaryExpr>);
inline jule::Ptr<_1aa957d85_Data> _1aa961751_evalVariadic(jule::Ptr<_1aa959903_Eval>, jule::Ptr<_1aa85acbb_VariadicExpr>);
inline jule::Ptr<_1aa957d85_Data> _1aa961a5e_evalUnsafe(jule::Ptr<_1aa959903_Eval>, jule::Ptr<_1aa859c87_UnsafeExpr>);
inline jule::Ptr<_1aa957d85_Data> _1aa961d6c_evalArr(jule::Ptr<_1aa959903_Eval>, jule::Ptr<_1aa85eb38_SliceExpr>);
inline jule::Ptr<_1aa957d85_Data> _1aa9622bd_evalExpSlc(jule::Ptr<_1aa959903_Eval>, jule::Ptr<_1aa85eb38_SliceExpr>, jule::Ptr<_1aa983872_TypeKind>, jule::Any);
inline jule::Ptr<_1aa957d85_Data> _1aa9625cb_evalSliceExpr(jule::Ptr<_1aa959903_Eval>, jule::Ptr<_1aa85eb38_SliceExpr>);
inline void _1aa96291c_checkIntegerIndexingByData(_1aa959903_Eval*, jule::Ptr<_1aa957d85_Data>*, jule::Ptr<_1db944d0d_Token>);
inline void _1aa962ce6_indexingPtr(_1aa959903_Eval*, jule::Ptr<_1aa957d85_Data>*, jule::Ptr<_1aa957d85_Data>*, jule::Ptr<_1aa8604a7_IndexingExpr>*);
inline void _1aa9631ae_indexingArr(_1aa959903_Eval*, jule::Ptr<_1aa957d85_Data>*, jule::Ptr<_1aa957d85_Data>*, jule::Ptr<_1aa8604a7_IndexingExpr>*);
inline void _1aa963577_indexingSlc(_1aa959903_Eval*, jule::Ptr<_1aa957d85_Data>*, jule::Ptr<_1aa957d85_Data>*, jule::Ptr<_1aa8604a7_IndexingExpr>*);
inline void _1aa963940_indexingMap(_1aa959903_Eval*, jule::Ptr<_1aa957d85_Data>*, jule::Ptr<_1aa957d85_Data>*, jule::Ptr<_1aa8604a7_IndexingExpr>*);
inline void _1aa963d08_indexingStr(_1aa959903_Eval*, jule::Ptr<_1aa957d85_Data>*, jule::Ptr<_1aa957d85_Data>*, jule::Ptr<_1aa8604a7_IndexingExpr>*);
inline void _1aa9641c1_toIndexing(_1aa959903_Eval*, jule::Ptr<_1aa957d85_Data>*, jule::Ptr<_1aa957d85_Data>*, jule::Ptr<_1aa8604a7_IndexingExpr>*);
inline jule::Bool _1aa964644_pushGenericsFromExprSubIdent(jule::Ptr<_1aa959903_Eval>, jule::Ptr<_1aa85b99d_SubIdentExpr>*, jule::Slice<jule::Ptr<_1aa854028_TypeDecl>>*, jule::Ptr<_1aa858549_Expr>*);
inline jule::Bool _1aa964a0c_pushGenericsFromData(jule::Ptr<_1aa959903_Eval>, jule::Slice<jule::Ptr<_1aa854028_TypeDecl>>*, jule::Ptr<_1aa858549_Expr>*);
inline void _1aa964d4d_evalIdentDeclFromIndexing(jule::Ptr<_1aa959903_Eval>, jule::Ptr<_1aa957d85_Data>*, jule::Ptr<_1aa8604a7_IndexingExpr>*);
inline jule::Bool _1aa9652b0_checkGenericFn(jule::Ptr<_1aa959903_Eval>, jule::Ptr<_1aa88c0c7_FnIns>*, jule::Ptr<_1db944d0d_Token>*, jule::Any*);
inline void _1aa965601_evalFnGenericFromIndexing(jule::Ptr<_1aa959903_Eval>, jule::Ptr<_1aa957d85_Data>*, jule::Ptr<_1aa8604a7_IndexingExpr>*);
inline jule::Ptr<_1aa957d85_Data> _1aa965920_evalIndexing(jule::Ptr<_1aa959903_Eval>, jule::Ptr<_1aa8604a7_IndexingExpr>);
inline __jule_tuple_x_1aa957d85_Data__jule_tuple_x_1aa957d85_Data _1aa965c2d_evalSlicingExprs(jule::Ptr<_1aa959903_Eval>, jule::Ptr<_1aa860ab2_SlicingExpr>*);
inline void _1aa965ea3_slicingArr(_1aa959903_Eval*, jule::Ptr<_1aa957d85_Data>*);
inline void _1aa96636b_slicingStr(_1aa959903_Eval*, jule::Ptr<_1aa957d85_Data>*, jule::Ptr<_1aa957d85_Data>*, jule::Ptr<_1aa957d85_Data>*);
inline void _1aa9667cd_checkSlicing(_1aa959903_Eval*, jule::Ptr<_1aa957d85_Data>*, jule::Ptr<_1aa957d85_Data>*, jule::Ptr<_1aa957d85_Data>*, jule::Ptr<_1aa860ab2_SlicingExpr>*);
inline jule::Ptr<_1aa957d85_Data> _1aa966adb_evalSlicing(jule::Ptr<_1aa959903_Eval>, jule::Ptr<_1aa860ab2_SlicingExpr>);
inline void _1aa966ea4_castPtr(_1aa959903_Eval*, jule::Ptr<_1aa983872_TypeKind>, jule::Ptr<_1aa957d85_Data>, jule::Ptr<_1db944d0d_Token>);
inline void _1aa96736c_castStruct(_1aa959903_Eval*, jule::Ptr<_1aa983872_TypeKind>, jule::Ptr<_1aa957d85_Data>, jule::Ptr<_1db944d0d_Token>);
inline void _1aa967735_castRef(_1aa959903_Eval*, jule::Ptr<_1aa983872_TypeKind>, jule::Ptr<_1aa957d85_Data>, jule::Ptr<_1db944d0d_Token>);
inline void _1aa967aed_castSlc(_1aa959903_Eval*, jule::Ptr<_1aa983872_TypeKind>, jule::Ptr<_1aa957d85_Data>, jule::Ptr<_1db944d0d_Token>);
inline void _1aa967e1c_castStr(_1aa959903_Eval*, jule::Ptr<_1aa957d85_Data>, jule::Ptr<_1db944d0d_Token>);
inline void _1aa9682d5_castInt(_1aa959903_Eval*, jule::Ptr<_1aa983872_TypeKind>, jule::Ptr<_1aa957d85_Data>, jule::Ptr<_1db944d0d_Token>);
inline void _1aa96869d_castNum(_1aa959903_Eval*, jule::Ptr<_1aa983872_TypeKind>, jule::Ptr<_1aa957d85_Data>, jule::Ptr<_1db944d0d_Token>);
inline void _1aa968a66_castPrim(_1aa959903_Eval*, jule::Ptr<_1aa983872_TypeKind>, jule::Ptr<_1aa957d85_Data>, jule::Ptr<_1db944d0d_Token>);
inline void _1aa968d85_castConstant(_1aa959903_Eval*, jule::Ptr<_1aa983872_TypeKind>*, jule::Ptr<_1aa957d85_Data>*);
inline void _1aa96924d_castTypeEnum(_1aa959903_Eval*, jule::Ptr<_1aa983872_TypeKind>*, jule::Ptr<_1aa957d85_Data>*, jule::Ptr<_1db944d0d_Token>*);
inline void _1aa969616_castTypeEnumT(_1aa959903_Eval*, jule::Ptr<_1aa983872_TypeKind>*, jule::Ptr<_1aa957d85_Data>*, jule::Ptr<_1db944d0d_Token>*);
inline jule::Ptr<_1aa957d85_Data> _1aa969a67_evalCastByTypeNData(_1aa959903_Eval*, jule::Ptr<_1aa983872_TypeKind>, jule::Ptr<_1aa957d85_Data>, jule::Ptr<_1db944d0d_Token>);
inline jule::Ptr<_1aa957d85_Data> _1aa969eb8_evalCastT(jule::Ptr<_1aa959903_Eval>, jule::Ptr<_1aa983872_TypeKind>*, jule::Ptr<_1aa858549_Expr>*, jule::Ptr<_1db944d0d_Token>*);
inline jule::Ptr<_1aa957d85_Data> _1aa96a2c6_evalCast(jule::Ptr<_1aa959903_Eval>, jule::Ptr<_1aa85b173_CastExpr>);
inline jule::Ptr<_1aa957d85_Data> _1aa96a5d4_evalNsSelection(_1aa959903_Eval*, jule::Ptr<_1aa85b52a_NsSelectionExpr>);
inline jule::Ptr<_1aa957d85_Data> _1aa96aa35_evalStructLitExplicit(jule::Ptr<_1aa959903_Eval>, jule::Ptr<_1aa876dd6_StructIns>, jule::Slice<jule::Ptr<_1aa858549_Expr>>, jule::Ptr<_1db944d0d_Token>);
inline jule::Ptr<_1aa957d85_Data> _1aa96ad43_evalStructLit(jule::Ptr<_1aa959903_Eval>, jule::Ptr<_1aa85d708_StructLit>);
inline _1aa992e58_typeChecker _1aa96b0a7_typeChecker(_1aa959903_Eval*);
inline jule::Ptr<_1aa957d85_Data> _1aa96b3b5_evalType(_1aa959903_Eval*, jule::Ptr<_1aa854028_TypeDecl>);
inline void _1aa96b6d4_callTypeFn(jule::Ptr<_1aa959903_Eval>, jule::Ptr<_1aa85c52b_FnCallExpr>*, jule::Ptr<_1aa957d85_Data>*);
inline void _1aa96ba03_callBuiltinFn(jule::Ptr<_1aa959903_Eval>, jule::Ptr<_1aa85c52b_FnCallExpr>*, jule::Ptr<_1aa957d85_Data>*);
inline void _1aa96bd44_checkFnOfConcurrentCall(_1aa959903_Eval*, jule::Ptr<_1aa88c0c7_FnIns>*, jule::Ptr<_1db944d0d_Token>);
inline void _1aa96c240_processExceptionalHandler(_1aa959903_Eval*, jule::Ptr<_1aa88c0c7_FnIns>*, jule::Ptr<_1aa85c52b_FnCallExpr>*, jule::Ptr<_1aa957d85_Data>*);
inline void _1aa96c570_callFn(jule::Ptr<_1aa959903_Eval>, jule::Ptr<_1aa85c52b_FnCallExpr>*, jule::Ptr<_1aa957d85_Data>*);
inline jule::Ptr<_1aa957d85_Data> _1aa96c87d_evalFnCall(jule::Ptr<_1aa959903_Eval>, jule::Ptr<_1aa85c52b_FnCallExpr>);
inline jule::Ptr<_1aa957d85_Data> _1aa96cc35_evalEnumStatic(_1aa959903_Eval*, jule::Ptr<_1aa89ddca_Enum>, jule::Ptr<_1db944d0d_Token>);
inline jule::Ptr<_1aa957d85_Data> _1aa96d0dc_evalTypeEnumStatic(_1aa959903_Eval*, jule::Ptr<_1aa8a04c5_TypeEnum>, jule::Ptr<_1db944d0d_Token>);
inline jule::Ptr<_1aa957d85_Data> _1aa96d494_evalStructStatic(_1aa959903_Eval*, jule::Ptr<_1aa876dd6_StructIns>, jule::Ptr<_1db944d0d_Token>);
inline jule::Ptr<_1aa957d85_Data> _1aa96d8e5_evalTraitSubIdent(_1aa959903_Eval*, jule::Ptr<_1aa957d85_Data>, jule::Ptr<_1aa89b647_Trait>, jule::Ptr<_1db944d0d_Token>);
inline jule::Ptr<_1aa957d85_Data> _1aa96dde0_evalStructSubIdent(_1aa959903_Eval*, jule::Ptr<_1aa957d85_Data>, jule::Ptr<_1aa876dd6_StructIns>, jule::Ptr<_1aa85b99d_SubIdentExpr>, jule::Bool);
inline jule::Ptr<_1aa957d85_Data> _1aa96e297_evalSliceSubIdent(_1aa959903_Eval*, jule::Ptr<_1aa957d85_Data>, jule::Ptr<_1db944d0d_Token>);
inline jule::Ptr<_1aa957d85_Data> _1aa96e64e_evalArraySubIdent(_1aa959903_Eval*, jule::Ptr<_1aa957d85_Data>, jule::Ptr<_1db944d0d_Token>);
inline jule::Ptr<_1aa957d85_Data> _1aa96e95c_evalIntTypeStatic(_1aa959903_Eval*, jule::Ptr<_1db944d0d_Token>);
inline jule::Ptr<_1aa957d85_Data> _1aa96ec6a_evalUintTypeStatic(_1aa959903_Eval*, jule::Ptr<_1db944d0d_Token>);
inline jule::Ptr<_1aa957d85_Data> _1aa970078_evalI8TypeStatic(_1aa959903_Eval*, jule::Ptr<_1db944d0d_Token>);
inline jule::Ptr<_1aa957d85_Data> _1aa970386_evalI16TypeStatic(_1aa959903_Eval*, jule::Ptr<_1db944d0d_Token>);
inline jule::Ptr<_1aa957d85_Data> _1aa970694_evalI32TypeStatic(_1aa959903_Eval*, jule::Ptr<_1db944d0d_Token>);
inline jule::Ptr<_1aa957d85_Data> _1aa9709a2_evalI64TypeStatic(_1aa959903_Eval*, jule::Ptr<_1db944d0d_Token>);
inline jule::Ptr<_1aa957d85_Data> _1aa970cb0_evalU8TypeStatic(_1aa959903_Eval*, jule::Ptr<_1db944d0d_Token>);
inline jule::Ptr<_1aa957d85_Data> _1aa9710bd_evalU16TypeStatic(_1aa959903_Eval*, jule::Ptr<_1db944d0d_Token>);
inline jule::Ptr<_1aa957d85_Data> _1aa9713cb_evalU32TypeStatic(_1aa959903_Eval*, jule::Ptr<_1db944d0d_Token>);
inline jule::Ptr<_1aa957d85_Data> _1aa9716d9_evalU64TypeStatic(_1aa959903_Eval*, jule::Ptr<_1db944d0d_Token>);
inline jule::Ptr<_1aa957d85_Data> _1aa9719e7_evalF32TypeStatic(_1aa959903_Eval*, jule::Ptr<_1db944d0d_Token>);
inline jule::Ptr<_1aa957d85_Data> _1aa971d05_evalF64TypeStatic(_1aa959903_Eval*, jule::Ptr<_1db944d0d_Token>);
inline jule::Ptr<_1aa957d85_Data> _1aa9721ac_evalPrimStatic(_1aa959903_Eval*, jule::Str, jule::Ptr<_1db944d0d_Token>);
inline jule::Ptr<_1aa957d85_Data> _1aa972564_evalTypeStatic(_1aa959903_Eval*, jule::Ptr<_1aa957d85_Data>, jule::Ptr<_1aa85b99d_SubIdentExpr>);
inline jule::Ptr<_1aa957d85_Data> _1aa97291b_evalObjSubIdent(_1aa959903_Eval*, jule::Ptr<_1aa957d85_Data>, jule::Ptr<_1aa85b99d_SubIdentExpr>);
inline jule::Ptr<_1aa957d85_Data> _1aa972c29_evalSubIdent(jule::Ptr<_1aa959903_Eval>, jule::Ptr<_1aa85b99d_SubIdentExpr>);
inline jule::Ptr<_1aa957d85_Data> _1aa973037_evalTuple(jule::Ptr<_1aa959903_Eval>, jule::Ptr<_1aa8591c6_TupleExpr>);
inline jule::Ptr<_1aa957d85_Data> _1aa9733de_evalMap(jule::Ptr<_1aa959903_Eval>, jule::Ptr<_1aa98ead1_Map>, jule::Ptr<_1aa85db7b_BraceLit>);
inline jule::Ptr<_1aa957d85_Data> _1aa9736ec_evalBraceLit(jule::Ptr<_1aa959903_Eval>, jule::Ptr<_1aa85db7b_BraceLit>);
inline jule::Ptr<_1aa957d85_Data> _1aa973a0a_evalAnonFn(jule::Ptr<_1aa959903_Eval>, jule::Ptr<_1aa8659a7_FnDecl>);
inline jule::Ptr<_1aa957d85_Data> _1aa973d18_evalBinop(jule::Ptr<_1aa959903_Eval>, jule::Ptr<_1aa85be21_BinopExpr>);
inline jule::Ptr<_1aa957d85_Data> _1aa974126_evalExprKind(jule::Ptr<_1aa959903_Eval>, jule::Any);
inline jule::Ptr<_1aa957d85_Data> _1aa974434_eval(jule::Ptr<_1aa959903_Eval>, jule::Ptr<_1aa858549_Expr>);
inline jule::Ptr<_1aa957d85_Data> _1aa974742_evalExpr(jule::Ptr<_1aa959903_Eval>, jule::Ptr<_1aa858549_Expr>);
struct _1aa959903_Eval {
	jule::Ptr<_1aa8d92de_Sema> _field_s;
	jule::Trait<_1aa9a0509_Lookup> _field_lookup;
	jule::Ptr<_1aa983872_TypeKind> _field_prefix;
	jule::Bool _field_unsafety = false;
	jule::Bool _field_immutable = false;
	jule::Bool _field_ignored = false;
	jule::Bool _field_disBuiltin = false;
	jule::Ptr<_1aa908c59_Var> _field_owner;
	jule::Ptr<_1aa8763e1_FieldIns> _field_field;
	jule::Bool _field_arg = false;
	

	_1aa959903_Eval(void) = default;

	inline bool operator==(_1aa959903_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_disBuiltin == _other._field_disBuiltin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field &&
			this->_field_arg == _other._field_arg;
	}

	inline bool operator!=(_1aa959903_Eval _other) { return !this->operator==(_other); }


};
inline _1aa974bb5_unaryEval static__1aa97516b_new(jule::Ptr<_1aa959903_Eval>);
inline void _1aa975347_minus(_1aa974bb5_unaryEval*);
inline void _1aa975523_plus(_1aa974bb5_unaryEval*);
inline void _1aa9756ee_caret(_1aa974bb5_unaryEval*);
inline void _1aa9758ca_excl(_1aa974bb5_unaryEval*);
inline void _1aa975aa6_star(_1aa974bb5_unaryEval*);
inline void _1aa975c82_amper(_1aa974bb5_unaryEval*);
inline void _1aa975e5d_typeDecl(_1aa974bb5_unaryEval*);
inline void _1aa976139_evalData(_1aa974bb5_unaryEval*);
inline jule::Ptr<_1aa957d85_Data> _1aa976414_eval(_1aa974bb5_unaryEval*, jule::Ptr<_1aa85a914_UnaryExpr>);
struct _1aa974bb5_unaryEval {
	jule::Ptr<_1aa959903_Eval> _field_e;
	jule::Ptr<_1aa957d85_Data> _field_d;
	jule::Ptr<_1aa85a914_UnaryExpr> _field_u;
	

	_1aa974bb5_unaryEval(void) = default;

	inline bool operator==(_1aa974bb5_unaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_1aa974bb5_unaryEval _other) { return !this->operator==(_other); }


};
inline _1aa976953_binaryEval static__1aa97702a_newPlain(jule::Ptr<_1aa959903_Eval>);
inline _1aa976953_binaryEval static__1aa97736b_new(jule::Ptr<_1aa959903_Eval>, jule::Ptr<_1db944d0d_Token>);
inline jule::Bool _1aa9775d0_checkTypeCompatibility(_1aa976953_binaryEval*);
inline jule::Bool _1aa977877_checkStructCommonOperatorCompatibility(_1aa976953_binaryEval*);
inline jule::Ptr<_1aa957d85_Data> _1aa977b1e_evalNil(_1aa976953_binaryEval*);
inline jule::Ptr<_1aa957d85_Data> _1aa977d83_evalEnum(_1aa976953_binaryEval*);
inline jule::Ptr<_1aa957d85_Data> _1aa9780e7_evalTypeEnum(_1aa976953_binaryEval*);
inline jule::Ptr<_1aa957d85_Data> _1aa97835b_evalSptr(_1aa976953_binaryEval*);
inline jule::Ptr<_1aa957d85_Data> _1aa9785c0_evalPtr(_1aa976953_binaryEval*);
inline jule::Ptr<_1aa957d85_Data> _1aa978834_evalArr(_1aa976953_binaryEval*);
inline jule::Ptr<_1aa957d85_Data> _1aa978a98_evalSlc(_1aa976953_binaryEval*);
inline jule::Ptr<_1aa957d85_Data> _1aa978d0c_evalFn(_1aa976953_binaryEval*);
inline jule::Ptr<_1aa957d85_Data> _1aa979071_evalStruct(_1aa976953_binaryEval*);
inline jule::Ptr<_1aa957d85_Data> _1aa9792d5_evalTrait(_1aa976953_binaryEval*);
inline jule::Ptr<_1aa957d85_Data> _1aa979549_evalAny(_1aa976953_binaryEval*);
inline jule::Ptr<_1aa957d85_Data> _1aa9797ad_evalBool(_1aa976953_binaryEval*);
inline jule::Ptr<_1aa957d85_Data> _1aa979a22_evalStr(_1aa976953_binaryEval*);
inline void _1aa979bed_setTypeToGreater(_1aa976953_binaryEval*);
inline void _1aa979e40_checkModData(_1aa976953_binaryEval*, jule::Ptr<_1aa957d85_Data>*);
inline void _1aa97a11b_mod(_1aa976953_binaryEval*);
inline jule::Bool _1aa97a4c3_numbersAreCompatibile(_1aa976953_binaryEval*, jule::Str*, jule::Str*);
inline jule::Ptr<_1aa957d85_Data> _1aa97a737_evalFloat(_1aa976953_binaryEval*);
inline jule::Ptr<_1aa957d85_Data> _1aa97a99b_evalInt(_1aa976953_binaryEval*);
inline jule::Ptr<_1aa957d85_Data> _1aa97ac10_evalPrim(_1aa976953_binaryEval*);
inline void _1aa97addb_checkSpecialCases(_1aa976953_binaryEval*);
inline jule::Ptr<_1aa957d85_Data> _1aa97b150_evalOp(_1aa976953_binaryEval*);
inline void _1aa97b3c5_evalConst(_1aa976953_binaryEval*, jule::Ptr<_1aa957d85_Data>*);
inline void _1aa97b64a_checkData(_1aa976953_binaryEval*, jule::Ptr<_1aa957d85_Data>*);
inline void _1aa97b826_checkDatas(_1aa976953_binaryEval*);
inline void _1aa97ba9b_setModel(_1aa976953_binaryEval*, jule::Ptr<_1aa957d85_Data>*);
inline void _1aa97bd21_postEval(_1aa976953_binaryEval*, jule::Ptr<_1aa957d85_Data>*);
inline jule::Ptr<_1aa957d85_Data> _1aa97c1c8_solveExplicit(_1aa976953_binaryEval*, jule::Ptr<_1aa957d85_Data>*, jule::Ptr<_1aa957d85_Data>*);
inline jule::Ptr<_1aa957d85_Data> _1aa97c4d6_eval(_1aa976953_binaryEval*, jule::Ptr<_1aa85be21_BinopExpr>*);
struct _1aa976953_binaryEval {
	jule::Ptr<_1aa959903_Eval> _field_e;
	jule::Ptr<_1aa957d85_Data> _field_l;
	jule::Ptr<_1aa957d85_Data> _field_r;
	jule::Ptr<_1db944d0d_Token> _field_op;
	

	_1aa976953_binaryEval(void) = default;

	inline bool operator==(_1aa976953_binaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1aa976953_binaryEval _other) { return !this->operator==(_other); }


};
struct _1aa9820e0_InsGeneric {
	jule::Ptr<_1aa983872_TypeKind> _field_Kind;
	jule::Slice<jule::Ptr<_1aa983872_TypeKind>> _field_Constraint;
	

	_1aa9820e0_InsGeneric(void) = default;


};
struct _1aa982b29_TypeAlias {
	jule::Ptr<_1aa863eb1_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Generic = false;
	jule::Ptr<_1db944d0d_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1aa9889ba_TypeSymbol> _field_Kind;
	jule::Slice<jule::Any> _field_Refers;
	jule::Slice<jule::Ptr<_1aa982b29_TypeAlias>> _field_Generics;
	

	_1aa982b29_TypeAlias(void) = default;


};
inline jule::Str _1aa983c6d_Str(_1aa983872_TypeKind*);
inline jule::Bool _1aa98407b_Equal(jule::Ptr<_1aa983872_TypeKind>, jule::Ptr<_1aa983872_TypeKind>);
inline jule::Bool _1aa984598_CppLinked(_1aa983872_TypeKind*);
inline jule::Bool _1aa98480c_IsNil(_1aa983872_TypeKind*);
inline jule::Bool _1aa984a71_Void(_1aa983872_TypeKind*);
inline jule::Bool _1aa984cd5_Comparable(_1aa983872_TypeKind*);
inline jule::Bool _1aa985049_Mutable(_1aa983872_TypeKind*);
inline jule::Bool _1aa9852ad_NilCompatible(_1aa983872_TypeKind*);
inline jule::Bool _1aa985522_PerformsRC(_1aa983872_TypeKind*);
inline jule::Bool _1aa985786_SupportsCloning(_1aa983872_TypeKind*);
inline jule::Bool _1aa9859ea_Variadicable(_1aa983872_TypeKind*);
inline jule::Ptr<_1aa989339_Prim> _1aa985c5e_Prim(_1aa983872_TypeKind*);
inline jule::Ptr<_1aa98cabd_Sptr> _1aa985ec3_Sptr(_1aa983872_TypeKind*);
inline jule::Ptr<_1aa991132_Ptr> _1aa986237_Ptr(_1aa983872_TypeKind*);
inline jule::Ptr<_1aa89ddca_Enum> _1aa98649b_Enum(_1aa983872_TypeKind*);
inline jule::Ptr<_1aa8a04c5_TypeEnum> _1aa986710_TypeEnum(_1aa983872_TypeKind*);
inline jule::Ptr<_1aa9906c5_Arr> _1aa986974_Arr(_1aa983872_TypeKind*);
inline jule::Ptr<_1aa98d52a_Slc> _1aa986bd8_Slc(_1aa983872_TypeKind*);
inline jule::Ptr<_1aa88c0c7_FnIns> _1aa986e4c_Fn(_1aa983872_TypeKind*);
inline jule::Ptr<_1aa876dd6_StructIns> _1aa9871b1_Struct(_1aa983872_TypeKind*);
inline jule::Ptr<_1aa89b647_Trait> _1aa987425_Trait(_1aa983872_TypeKind*);
inline jule::Ptr<_1aa98ead1_Map> _1aa987689_Map(_1aa983872_TypeKind*);
inline jule::Ptr<_1aa98e0a8_Tuple> _1aa9878ed_Tup(_1aa983872_TypeKind*);
inline jule::Bool _1aa987b62_comptime(_1aa983872_TypeKind*);
inline jule::Ptr<_1aa8a4243_comptimeStructFields> _1aa987dc6_comptimeStructFields(_1aa983872_TypeKind*);
inline jule::Ptr<_1aa8a3121_comptimeStructField> _1aa98813a_comptimeStructField(_1aa983872_TypeKind*);
inline jule::Ptr<_1aa8a262b_comptimeRange> _1aa98839e_comptimeRange(_1aa983872_TypeKind*);
inline jule::Ptr<_1aa8a5750_comptimeType> _1aa988613_comptimeType(_1aa983872_TypeKind*);
struct _1aa983872_TypeKind {
	jule::Str _field_CppIdent;
	jule::Bool _field_Generic = false;
	jule::Bool _field_Variadic = false;
	jule::Trait<_1aa983410_Kind> _field_Kind;
	

	_1aa983872_TypeKind(void) = default;

	inline bool operator==(_1aa983872_TypeKind _other) {
		return 
			this->_field_CppIdent == _other._field_CppIdent &&
			this->_field_Generic == _other._field_Generic &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1aa983872_TypeKind _other) { return !this->operator==(_other); }


};
inline jule::Bool _1aa988d72_checked(_1aa9889ba_TypeSymbol*);
inline void _1aa98904d_removeKind(_1aa9889ba_TypeSymbol*);
struct _1aa9889ba_TypeSymbol {
	jule::Ptr<_1aa854028_TypeDecl> _field_Decl;
	jule::Ptr<_1aa983872_TypeKind> _field_Kind;
	

	_1aa9889ba_TypeSymbol(void) = default;

	inline bool operator==(_1aa9889ba_TypeSymbol _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1aa9889ba_TypeSymbol _other) { return !this->operator==(_other); }


};
inline jule::Str _1aa98969c_Str(_1aa989339_Prim*);
inline jule::Bool _1aa9899aa_Equal(jule::Ptr<_1aa989339_Prim>, jule::Ptr<_1aa983872_TypeKind>);
inline jule::Bool _1aa989e2d_IsConstraint(_1aa989339_Prim*);
inline jule::Bool _1aa98a192_IsI8(_1aa989339_Prim*);
inline jule::Bool _1aa98a406_IsI16(_1aa989339_Prim*);
inline jule::Bool _1aa98a66a_IsI32(_1aa989339_Prim*);
inline jule::Bool _1aa98a8ce_IsI64(_1aa989339_Prim*);
inline jule::Bool _1aa98ab43_IsU8(_1aa989339_Prim*);
inline jule::Bool _1aa98ada7_IsU16(_1aa989339_Prim*);
inline jule::Bool _1aa98b11b_IsU32(_1aa989339_Prim*);
inline jule::Bool _1aa98b380_IsU64(_1aa989339_Prim*);
inline jule::Bool _1aa98b5e4_IsF32(_1aa989339_Prim*);
inline jule::Bool _1aa98b858_IsF64(_1aa989339_Prim*);
inline jule::Bool _1aa98babc_IsInt(_1aa989339_Prim*);
inline jule::Bool _1aa98bd31_IsUint(_1aa989339_Prim*);
inline jule::Bool _1aa98c095_IsUintptr(_1aa989339_Prim*);
inline jule::Bool _1aa98c309_IsBool(_1aa989339_Prim*);
inline jule::Bool _1aa98c56d_IsStr(_1aa989339_Prim*);
inline jule::Bool _1aa98c7d2_IsAny(_1aa989339_Prim*);
struct _1aa989339_Prim {
	jule::Str _field_Kind;
	

	_1aa989339_Prim(void) = default;

	inline bool operator==(_1aa989339_Prim _other) {
		return 
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1aa989339_Prim _other) { return !this->operator==(_other); }


};
inline jule::Str _1aa98ce31_Str(_1aa98cabd_Sptr*);
inline jule::Bool _1aa98d23e_Equal(jule::Ptr<_1aa98cabd_Sptr>, jule::Ptr<_1aa983872_TypeKind>);
struct _1aa98cabd_Sptr {
	jule::Ptr<_1aa983872_TypeKind> _field_Elem;
	

	_1aa98cabd_Sptr(void) = default;

	inline bool operator==(_1aa98cabd_Sptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1aa98cabd_Sptr _other) { return !this->operator==(_other); }


};
inline jule::Str _1aa98da36_Str(_1aa98d52a_Slc*);
inline jule::Bool _1aa98dd44_Equal(jule::Ptr<_1aa98d52a_Slc>, jule::Ptr<_1aa983872_TypeKind>);
struct _1aa98d52a_Slc {
	jule::Ptr<_1aa983872_TypeKind> _field_Elem;
	

	_1aa98d52a_Slc(void) = default;

	inline bool operator==(_1aa98d52a_Slc _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1aa98d52a_Slc _other) { return !this->operator==(_other); }


};
inline jule::Str _1aa98e41b_Str(_1aa98e0a8_Tuple*);
inline jule::Bool _1aa98e729_Equal(jule::Ptr<_1aa98e0a8_Tuple>, jule::Ptr<_1aa983872_TypeKind>);
struct _1aa98e0a8_Tuple {
	jule::Slice<jule::Ptr<_1aa983872_TypeKind>> _field_Types;
	

	_1aa98e0a8_Tuple(void) = default;


};
inline jule::Str _1aa98ee44_Str(_1aa98ead1_Map*);
inline jule::Bool _1aa990252_Equal(jule::Ptr<_1aa98ead1_Map>, jule::Ptr<_1aa983872_TypeKind>);
struct _1aa98ead1_Map {
	jule::Ptr<_1aa983872_TypeKind> _field_Key;
	jule::Ptr<_1aa983872_TypeKind> _field_Val;
	

	_1aa98ead1_Map(void) = default;

	inline bool operator==(_1aa98ead1_Map _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1aa98ead1_Map _other) { return !this->operator==(_other); }


};
inline jule::Str _1aa990a38_Str(_1aa9906c5_Arr*);
inline jule::Bool _1aa990d46_Equal(jule::Ptr<_1aa9906c5_Arr>, jule::Ptr<_1aa983872_TypeKind>);
struct _1aa9906c5_Arr {
	jule::Bool _field_Auto = false;
	jule::I64 _field_N = 0;
	jule::Ptr<_1aa983872_TypeKind> _field_Elem;
	

	_1aa9906c5_Arr(void) = default;

	inline bool operator==(_1aa9906c5_Arr _other) {
		return 
			this->_field_Auto == _other._field_Auto &&
			this->_field_N == _other._field_N &&
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1aa9906c5_Arr _other) { return !this->operator==(_other); }


};
inline jule::Str _1aa991495_Str(_1aa991132_Ptr*);
inline jule::Bool _1aa9917a3_Equal(jule::Ptr<_1aa991132_Ptr>, jule::Ptr<_1aa983872_TypeKind>);
inline jule::Bool _1aa991b05_IsUnsafe(_1aa991132_Ptr*);
struct _1aa991132_Ptr {
	jule::Ptr<_1aa983872_TypeKind> _field_Elem;
	

	_1aa991132_Ptr(void) = default;

	inline bool operator==(_1aa991132_Ptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1aa991132_Ptr _other) { return !this->operator==(_other); }


};
struct _1aa992078_referencer {
	jule::Str _field_ident;
	jule::Any _field_owner;
	jule::Slice<jule::Any>* _field_refs = nullptr;
	

	_1aa992078_referencer(void) = default;

	inline bool operator==(_1aa992078_referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_1aa992078_referencer _other) { return !this->operator==(_other); }


};
inline void _1aa993662_pushErr(_1aa992e58_typeChecker*, jule::Ptr<_1db944d0d_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1aa99383d_allowBuiltin(_1aa992e58_typeChecker*);
inline void _1aa993a19_disallowBuiltin(_1aa992e58_typeChecker*);
inline jule::Ptr<_1aa989339_Prim> _1aa993d27_buildPrim(_1aa992e58_typeChecker*, jule::Ptr<_1aa8545de_IdentTypeDecl>*);
inline void _1ada254e3_pushReference(_1aa992e58_typeChecker*, jule::Ptr<_1aa876dd6_StructIns>*);
inline void _1ada28370_pushReference(_1aa992e58_typeChecker*, jule::Ptr<_1aa89b647_Trait>*);
inline void _1aa994322_pushReferenceByKind(_1aa992e58_typeChecker*, jule::Ptr<_1aa983872_TypeKind>*);
inline void _1aa9946da_pushCycleError(_1aa992e58_typeChecker*, jule::Any, jule::Any, jule::Str*);
inline jule::Bool _1aa994a92_checkCrossCycle(_1aa992e58_typeChecker*, jule::Any, jule::Str*);
inline jule::Bool _1aa994e49_checkIllegalCycles(_1aa992e58_typeChecker*, jule::Ptr<_1aa8545de_IdentTypeDecl>*, jule::Any);
inline jule::Trait<_1aa983410_Kind> _1aa995301_fromTypeAlias(_1aa992e58_typeChecker*, jule::Ptr<_1aa8545de_IdentTypeDecl>*, jule::Ptr<_1aa982b29_TypeAlias>*);
inline jule::Ptr<_1aa89ddca_Enum> _1aa9956a8_fromEnum(_1aa992e58_typeChecker*, jule::Ptr<_1aa8545de_IdentTypeDecl>*, jule::Ptr<_1aa89ddca_Enum>*);
inline jule::Ptr<_1aa8a04c5_TypeEnum> _1aa995a60_fromTypeEnum(_1aa992e58_typeChecker*, jule::Ptr<_1aa8545de_IdentTypeDecl>*, jule::Ptr<_1aa8a04c5_TypeEnum>*);
inline jule::Ptr<_1aa89b647_Trait> _1aa995e17_fromTrait(_1aa992e58_typeChecker*, jule::Ptr<_1aa8545de_IdentTypeDecl>*, jule::Ptr<_1aa89b647_Trait>*);
inline jule::Bool _1aa9962be_checkStructIns(_1aa992e58_typeChecker*, jule::Ptr<_1aa876dd6_StructIns>*, jule::Ptr<_1db944d0d_Token>*);
inline void _1aa996566_appendUsedStructReference(_1aa992e58_typeChecker*, jule::Ptr<_1aa8740c0_Struct>*);
inline jule::Ptr<_1aa876dd6_StructIns> _1aa99692e_buildStructInstance(_1aa992e58_typeChecker*, jule::Ptr<_1aa8545de_IdentTypeDecl>*, jule::Ptr<_1aa8740c0_Struct>*);
inline jule::Ptr<_1aa876dd6_StructIns> _1aa996cd6_fromStruct(_1aa992e58_typeChecker*, jule::Ptr<_1aa8545de_IdentTypeDecl>*, jule::Ptr<_1aa8740c0_Struct>*);
inline jule::Trait<_1aa983410_Kind> _1aa9970e4_getDef(_1aa992e58_typeChecker*, jule::Ptr<_1aa8545de_IdentTypeDecl>*);
inline jule::Trait<_1aa983410_Kind> _1aa997402_buildIdent(_1aa992e58_typeChecker*, jule::Ptr<_1aa8545de_IdentTypeDecl>);
inline jule::Trait<_1aa983410_Kind> _1aa997710_buildSubIdent(_1aa992e58_typeChecker*, jule::Ptr<_1aa854c3d_SubIdentTypeDecl>);
inline jule::Ptr<_1aa98cabd_Sptr> _1aa997a1d_buildSptrFromType(_1aa992e58_typeChecker*, jule::Ptr<_1aa983872_TypeKind>*);
inline jule::Ptr<_1aa98cabd_Sptr> _1aa997d2b_buildSptr(_1aa992e58_typeChecker*, jule::Ptr<_1aa8553d1_SptrTypeDecl>);
inline jule::Ptr<_1aa991132_Ptr> _1aa998139_buildPtrFromType(_1aa992e58_typeChecker*, jule::Ptr<_1aa983872_TypeKind>*);
inline jule::Ptr<_1aa991132_Ptr> _1aa998447_buildPtr(_1aa992e58_typeChecker*, jule::Ptr<_1aa855da4_PtrTypeDecl>);
inline jule::Ptr<_1aa98d52a_Slc> _1aa998755_buildSlc(_1aa992e58_typeChecker*, jule::Ptr<_1aa8557cc_SlcTypeDecl>);
inline jule::Ptr<_1aa9906c5_Arr> _1aa998a63_buildArr(_1aa992e58_typeChecker*, jule::Ptr<_1aa856536_ArrTypeDecl>);
inline jule::Ptr<_1aa98ead1_Map> _1aa998d71_buildMap(_1aa992e58_typeChecker*, jule::Ptr<_1aa856c84_MapTypeDecl>);
inline jule::Ptr<_1aa98e0a8_Tuple> _1aa99917e_buildTuple(_1aa992e58_typeChecker*, jule::Ptr<_1aa855ab8_TupleTypeDecl>);
inline jule::Bool _1aa99948c_checkFnTypes(_1aa992e58_typeChecker*, jule::Ptr<_1aa88c0c7_FnIns>*);
inline jule::Ptr<_1aa88c0c7_FnIns> _1aa99979a_buildFn(_1aa992e58_typeChecker*, jule::Ptr<_1aa8659a7_FnDecl>);
inline jule::Trait<_1aa983410_Kind> _1aa999aa8_buildByNamespace(_1aa992e58_typeChecker*, jule::Ptr<_1aa8550e5_NamespaceTypeDecl>);
inline jule::Ptr<_1aa983872_TypeKind> _1aa999db6_build(_1aa992e58_typeChecker*, jule::Any*);
inline jule::Ptr<_1aa983872_TypeKind> _1aa99a1c4_checkDecl(_1aa992e58_typeChecker*, jule::Ptr<_1aa854028_TypeDecl>*);
inline void _1aa99a449_check(_1aa992e58_typeChecker*, jule::Ptr<_1aa9889ba_TypeSymbol>*);
struct _1aa992e58_typeChecker {
	jule::Ptr<_1aa8d92de_Sema> _field_s;
	jule::Trait<_1aa9a0509_Lookup> _field_rootLookup;
	jule::Trait<_1aa9a0509_Lookup> _field_lookup;
	jule::Ptr<_1aa992078_referencer> _field_referencer;
	jule::Ptr<_1aa890031_ReferenceStack> _field_refers;
	jule::Ptr<_1db944d0d_Token> _field_errorToken;
	jule::Slice<jule::Ptr<_1aa861321_GenericDecl>> _field_ignoreGenerics;
	jule::Slice<jule::Ptr<_1aa983872_TypeKind>>* _field_ignoredGenerics = nullptr;
	jule::Slice<jule::Ptr<_1aa982b29_TypeAlias>> _field_useGenerics;
	jule::Bool _field_notPlain = false;
	jule::Bool _field_disBuiltin = false;
	jule::Bool _field_selection = false;
	jule::Ptr<_1aa982b29_TypeAlias> _field_ownerAlias;
	jule::Slice<jule::Ptr<_1aa982b29_TypeAlias>> _field_bannedGenerics;
	jule::Bool _field_inscatch = false;
	

	_1aa992e58_typeChecker(void) = default;


};
inline jule::Bool static__1aa99aaa9_prim(jule::Str*, jule::Ptr<_1aa989339_Prim>);
inline jule::Bool static__1aa99adea_exist(jule::Str*, jule::Ptr<_1aa983872_TypeKind>*);
struct _1aa99a669_identTypeLookup {
	

	_1aa99a669_identTypeLookup(void) = default;

	inline bool operator==(_1aa99a669_identTypeLookup _other) { return true; }

	inline bool operator!=(_1aa99a669_identTypeLookup _other) { return !this->operator==(_other); }


};
struct _1ab0ead63_FileInfo {
	jule::Ptr<_1aa81e80c_Ast> _field_Ast;
	jule::Slice<_1d9d938bd_Log> _field_Errors;
	

	_1ab0ead63_FileInfo(void) = default;


};
struct _1ab1497eb_stmt {
	jule::Slice<jule::Ptr<_1db944d0d_Token>> _field_tokens;
	jule::Bool _field_terminated = false;
	

	_1ab1497eb_stmt(void) = default;


};
inline void _1ab14a7a8_stop(_1ab14a126_scopeParser*);
inline jule::Bool _1ab14aa1c_stopped(_1ab14a126_scopeParser*);
inline jule::Bool _1ab14ac81_finished(_1ab14a126_scopeParser*);
inline jule::Bool _1ab14aee5_isLastSt(_1ab14a126_scopeParser*);
inline void _1ab14b314_pushErr(_1ab14a126_scopeParser*, jule::Ptr<_1db944d0d_Token>, jule::Str);
inline void _1ab14b633_pushSuggestion(_1ab14a126_scopeParser*, jule::Str, jule::Slice<jule::Any>);
inline void _1ab14b8a8_insertAsNext(_1ab14a126_scopeParser*, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline jule::Ptr<_1ab1497eb_stmt> _1ab14bb1c_next(_1ab14a126_scopeParser*);
inline jule::Ptr<_1aa863eb1_ScopeTree> _1ab14bec4_buildScope(_1ab14a126_scopeParser*, jule::Slice<jule::Ptr<_1db944d0d_Token>>*, jule::Ptr<_1db944d0d_Token>);
inline jule::Ptr<_1aa866986_VarDecl> _1ab14c2d2_buildVarSt(_1ab14a126_scopeParser*, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline jule::Ptr<_1aa866d3d_RetSt> _1ab14c5e0_buildRetSt(_1ab14a126_scopeParser*, jule::Slice<jule::Ptr<_1db944d0d_Token>>);
inline jule::Ptr<_1aa86749d_Iter> _1ab14c8ed_buildWhileNextIter(_1ab14a126_scopeParser*, jule::Ptr<_1ab1497eb_stmt>*);
inline jule::Ptr<_1aa867c73_WhileKind> _1ab14cc0b_buildWhileIterKind(_1ab14a126_scopeParser*, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_1db944d0d_Token>>> _1ab14d019_getRangeKindKeysTokens(_1ab14a126_scopeParser*, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline jule::Ptr<_1aa866986_VarDecl> _1ab14d327_buildRangeKindKey(_1ab14a126_scopeParser*, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline jule::Slice<jule::Ptr<_1aa866986_VarDecl>> _1ab14d635_buildRangeKindKeys(_1ab14a126_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_1db944d0d_Token>>>*);
inline void _1ab14d976_setupRangeKindKeysPlain(_1ab14a126_scopeParser*, jule::Ptr<_1aa868614_RangeKind>*, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline void _1ab14dcc8_setupRangeKindKeysExplicit(_1ab14a126_scopeParser*, jule::Ptr<_1aa868614_RangeKind>*, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline void _1ab14e108_setupRangeKindKeys(_1ab14a126_scopeParser*, jule::Ptr<_1aa868614_RangeKind>*, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline jule::Ptr<_1aa868614_RangeKind> _1ab14e559_buildRangeIterKind(_1ab14a126_scopeParser*, jule::Slice<jule::Ptr<_1db944d0d_Token>>*, jule::Slice<jule::Ptr<_1db944d0d_Token>>*, jule::Ptr<_1db944d0d_Token>*);
inline jule::Any _1ab14e911_buildCommonIterKind(_1ab14a126_scopeParser*, jule::Slice<jule::Ptr<_1db944d0d_Token>>*, jule::Ptr<_1db944d0d_Token>*);
inline jule::Ptr<_1aa86749d_Iter> _1ab14ec1e_buildCommonIter(_1ab14a126_scopeParser*, jule::Slice<jule::Ptr<_1db944d0d_Token>>);
inline jule::Ptr<_1aa86749d_Iter> _1ab15002c_buildIterSt(_1ab14a126_scopeParser*, jule::Ptr<_1ab1497eb_stmt>*);
inline jule::Ptr<_1aa8689bb_BreakSt> _1ab15033a_buildBreakSt(_1ab14a126_scopeParser*, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline jule::Ptr<_1aa868d73_ContSt> _1ab150648_buildContSt(_1ab14a126_scopeParser*, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline jule::Ptr<_1aa8692e6_If> _1ab150956_buildIf(_1ab14a126_scopeParser*, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline jule::Ptr<_1aa86969d_Else> _1ab150c64_buildElse(_1ab14a126_scopeParser*, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline jule::Ptr<_1aa869b21_Conditional> _1ab151072_buildIfElseChain(_1ab14a126_scopeParser*, jule::Slice<jule::Ptr<_1db944d0d_Token>>);
inline jule::Ptr<_1aa858549_Expr> _1ab151380_buildCoCallSt(_1ab14a126_scopeParser*, jule::Slice<jule::Ptr<_1db944d0d_Token>>);
inline jule::Ptr<_1aa861a80_GotoSt> _1ab15168d_buildGotoSt(_1ab14a126_scopeParser*, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline jule::Ptr<_1aa861d6b_FallSt> _1ab15199b_buildFallSt(_1ab14a126_scopeParser*, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline jule::Ptr<_1aa86a2e7_TypeAliasDecl> _1ab151ca9_buildTypeAliasSt(_1ab14a126_scopeParser*, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline void _1ab15221b_pushCaseExpr(_1ab14a126_scopeParser*, jule::Slice<jule::Ptr<_1db944d0d_Token>>, jule::Ptr<_1db944d0d_Token>, jule::Bool, jule::Slice<jule::Ptr<_1aa858549_Expr>>*);
inline jule::Slice<jule::Ptr<_1aa858549_Expr>> _1ab15266c_buildCaseExprs(_1ab14a126_scopeParser*, jule::Slice<jule::Ptr<_1db944d0d_Token>>*, jule::Ptr<_1db944d0d_Token>*, jule::Bool);
inline jule::Ptr<_1aa863eb1_ScopeTree> _1ab15297a_buildCaseScope(_1ab14a126_scopeParser*, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline __jule_tuple_x_1aa86a76a_Case__jule_tuple_bool _1ab152d32_buildCase(_1ab14a126_scopeParser*, jule::Slice<jule::Ptr<_1db944d0d_Token>>*, jule::Bool);
inline __jule_tuple_sx_1aa86a76a_Case__jule_tuple_x_1aa86969d_Else _1ab1531d9_buildCases(_1ab14a126_scopeParser*, jule::Slice<jule::Ptr<_1db944d0d_Token>>, jule::Bool);
inline jule::Ptr<_1aa86ae41_MatchCase> _1ab1534e7_buildMatchCase(_1ab14a126_scopeParser*, jule::Slice<jule::Ptr<_1db944d0d_Token>>);
inline jule::Ptr<_1aa863eb1_ScopeTree> _1ab153805_buildScopeSt(_1ab14a126_scopeParser*, jule::Slice<jule::Ptr<_1db944d0d_Token>>);
inline jule::Ptr<_1aa8616c8_LabelSt> _1ab153b13_buildLabelSt(_1ab14a126_scopeParser*, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline __jule_tuple__1aa863675_StmtData__jule_tuple_bool _1ab153e21_buildIdSt(_1ab14a126_scopeParser*, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline jule::Ptr<_1ab162e41_assignInfo> _1ab15422e_buildAssignInfo(_1ab14a126_scopeParser*, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline jule::Ptr<_1aa862476_AssignLeft> _1ab15453c_buildAssignL(_1ab14a126_scopeParser*, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline jule::Slice<jule::Ptr<_1aa862476_AssignLeft>> _1ab15484a_buildAssignLs(_1ab14a126_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_1db944d0d_Token>>>*);
inline __jule_tuple_x_1aa8629b5_AssignSt__jule_tuple_bool _1ab154b58_buildPlainAssign(_1ab14a126_scopeParser*, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline __jule_tuple_x_1aa8629b5_AssignSt__jule_tuple_bool _1ab154e66_buildDeclAssign(_1ab14a126_scopeParser*, jule::Slice<jule::Ptr<_1db944d0d_Token>>);
inline __jule_tuple_x_1aa8629b5_AssignSt__jule_tuple_bool _1ab155274_buildAssignSt(_1ab14a126_scopeParser*, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline jule::Ptr<_1aa858dda_UseExpr> _1ab155582_buildUseExpr(_1ab14a126_scopeParser*, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline jule::Any _1ab155890_buildSt(_1ab14a126_scopeParser*, jule::Ptr<_1ab1497eb_stmt>*);
inline void _1ab155bae_build(_1ab14a126_scopeParser*, jule::Slice<jule::Ptr<_1db944d0d_Token>>*, jule::Ptr<_1aa863eb1_ScopeTree>*);
struct _1ab14a126_scopeParser {
	jule::Ptr<_1ab16683a_parser> _field_p;
	jule::Ptr<_1aa863eb1_ScopeTree> _field_s;
	jule::Slice<jule::Ptr<_1ab1497eb_stmt>> _field_stmts;
	jule::I64 _field_pos = 0;
	

	_1ab14a126_scopeParser(void) = default;


};
inline void _1ab156dd0_pushErr(_1ab15660a_exprBuilder*, jule::Ptr<_1db944d0d_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1ab1571ee_pushSuggestion(_1ab15660a_exprBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1aa8591c6_TupleExpr> _1ab15750c_buildTuple(_1ab15660a_exprBuilder*, jule::Slice<jule::Slice<jule::Ptr<_1db944d0d_Token>>>*);
inline jule::Ptr<_1aa85957d_LitExpr> _1ab15781a_buildLit(_1ab15660a_exprBuilder*, jule::Ptr<_1db944d0d_Token>);
inline jule::Ptr<_1aa854028_TypeDecl> _1ab157b28_buildPrimitiveType(_1ab15660a_exprBuilder*, jule::Ptr<_1db944d0d_Token>*);
inline jule::Any _1ab157e36_buildSingle(_1ab15660a_exprBuilder*, jule::Ptr<_1db944d0d_Token>);
inline jule::Ptr<_1aa85a20a_IdentExpr> _1ab158244_buildCppLinkedIdent(_1ab15660a_exprBuilder*, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline jule::Ptr<_1aa85a914_UnaryExpr> _1ab158552_buildUnary(_1ab15660a_exprBuilder*, jule::Slice<jule::Ptr<_1db944d0d_Token>>);
inline jule::Ptr<_1aa85b99d_SubIdentExpr> _1ab158860_buildObjSubIdent(_1ab15660a_exprBuilder*, jule::Slice<jule::Ptr<_1db944d0d_Token>>);
inline jule::Ptr<_1aa85b52a_NsSelectionExpr> _1ab158b6d_buildNsSubIdent(_1ab15660a_exprBuilder*, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline jule::Ptr<_1aa854028_TypeDecl> _1ab158e7b_buildType(_1ab15660a_exprBuilder*, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline jule::Any _1ab159289_buildSubIdent(_1ab15660a_exprBuilder*, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline jule::Ptr<_1aa85acbb_VariadicExpr> _1ab159597_buildVariadic(_1ab15660a_exprBuilder*, jule::Slice<jule::Ptr<_1db944d0d_Token>>);
inline jule::Any _1ab1598a5_buildOpRight(_1ab15660a_exprBuilder*, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline jule::Ptr<_1aa858835_RangeExpr> _1ab159bd5_buildBetweenParentheses(_1ab15660a_exprBuilder*, jule::Slice<jule::Ptr<_1db944d0d_Token>>);
inline jule::Ptr<_1aa85b173_CastExpr> _1ab15a004_tryBuildCast(_1ab15660a_exprBuilder*, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline void _1ab15a3bc_pushArg(_1ab15660a_exprBuilder*, jule::Slice<jule::Ptr<_1aa858549_Expr>>*, jule::Slice<jule::Ptr<_1db944d0d_Token>>, jule::Ptr<_1db944d0d_Token>);
inline jule::Slice<jule::Ptr<_1aa858549_Expr>> _1ab15a6ca_buildArgs(_1ab15660a_exprBuilder*, jule::Slice<jule::Ptr<_1db944d0d_Token>>);
inline jule::Slice<jule::Ptr<_1aa854028_TypeDecl>> _1ab15a9d8_buildCallGenerics(_1ab15660a_exprBuilder*, jule::Slice<jule::Ptr<_1db944d0d_Token>>);
inline jule::Ptr<_1aa85c52b_FnCallExpr> _1ab15ae39_buildFnCall(_1ab15660a_exprBuilder*, jule::Ptr<_1db944d0d_Token>*, jule::Slice<jule::Ptr<_1db944d0d_Token>>*, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline jule::Any _1ab15b247_buildParenthesesRange(_1ab15660a_exprBuilder*, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline jule::Ptr<_1aa859c87_UnsafeExpr> _1ab15b555_buildUnsafeExpr(_1ab15660a_exprBuilder*, jule::Slice<jule::Ptr<_1db944d0d_Token>>);
inline jule::Ptr<_1aa8659a7_FnDecl> _1ab15b863_buildAnonFn(_1ab15660a_exprBuilder*, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline jule::Any _1ab15bb71_buildUnsafe(_1ab15660a_exprBuilder*, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline void _1ab15c039_pushRangeLitPart(_1ab15660a_exprBuilder*, jule::Slice<jule::Ptr<_1db944d0d_Token>>, jule::Ptr<_1db944d0d_Token>, jule::Slice<jule::Slice<jule::Ptr<_1db944d0d_Token>>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_1db944d0d_Token>>> _1ab15c369_getBraceRangeLitExprParts(_1ab15660a_exprBuilder*, jule::Slice<jule::Ptr<_1db944d0d_Token>>);
inline jule::Ptr<_1aa85ceaa_FieldExprPair> _1ab15c688_buildFieldExprPair(_1ab15660a_exprBuilder*, jule::Slice<jule::Ptr<_1db944d0d_Token>>);
inline jule::Ptr<_1aa858549_Expr> _1ab15c996_buildStructLitExpr(_1ab15660a_exprBuilder*, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline jule::Slice<jule::Ptr<_1aa858549_Expr>> _1ab15cca4_buildStructLitExprs(_1ab15660a_exprBuilder*, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline jule::Ptr<_1aa85d708_StructLit> _1ab15d0d4_buildTypedStructLiteral(_1ab15660a_exprBuilder*, jule::Slice<jule::Ptr<_1db944d0d_Token>>);
inline jule::Ptr<_1aa858549_Expr> _1ab15d403_buildBraceLitPart(_1ab15660a_exprBuilder*, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline jule::Ptr<_1aa85db7b_BraceLit> _1ab15d711_buildBraceLit(_1ab15660a_exprBuilder*, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline jule::Any _1ab15da1e_buildBraceRange(_1ab15660a_exprBuilder*, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_1db944d0d_Token>>> _1ab15dd2c_getEnumerableParts(_1ab15660a_exprBuilder*, jule::Slice<jule::Ptr<_1db944d0d_Token>>);
inline jule::Ptr<_1aa85eb38_SliceExpr> _1ab15e13a_buildSlice(_1ab15660a_exprBuilder*, jule::Slice<jule::Ptr<_1db944d0d_Token>>);
inline jule::Ptr<_1aa8604a7_IndexingExpr> _1ab15e58b_buildIndexing(_1ab15660a_exprBuilder*, jule::Slice<jule::Ptr<_1db944d0d_Token>>, jule::Slice<jule::Ptr<_1db944d0d_Token>>, jule::Ptr<_1db944d0d_Token>);
inline jule::Ptr<_1aa860ab2_SlicingExpr> _1ab15eb30_buildSlicing(_1ab15660a_exprBuilder*, jule::Slice<jule::Ptr<_1db944d0d_Token>>*, jule::Slice<jule::Ptr<_1db944d0d_Token>>*, jule::Slice<jule::Ptr<_1db944d0d_Token>>*, jule::Ptr<_1db944d0d_Token>*, jule::Ptr<_1db944d0d_Token>);
inline jule::Any _1ab15ee3d_buildBracketRange(_1ab15660a_exprBuilder*, jule::Slice<jule::Ptr<_1db944d0d_Token>>);
inline jule::Any _1ab16024b_buildData(_1ab15660a_exprBuilder*, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline jule::Any _1ab160603_buildBinop(_1ab15660a_exprBuilder*, jule::Slice<jule::Ptr<_1db944d0d_Token>>*, jule::I64);
inline jule::Any _1ab160911_build(_1ab15660a_exprBuilder*, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline jule::Any _1ab160c1e_buildKind(_1ab15660a_exprBuilder*, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline jule::Ptr<_1aa858549_Expr> _1ab16102c_buildFromTokens(_1ab15660a_exprBuilder*, jule::Slice<jule::Ptr<_1db944d0d_Token>>);
struct _1ab15660a_exprBuilder {
	jule::Ptr<_1ab16683a_parser> _field_p;
	

	_1ab15660a_exprBuilder(void) = default;

	inline bool operator==(_1ab15660a_exprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_1ab15660a_exprBuilder _other) { return !this->operator==(_other); }


};
struct _1ab162e41_assignInfo {
	jule::Slice<jule::Ptr<_1db944d0d_Token>> _field_l;
	jule::Slice<jule::Ptr<_1db944d0d_Token>> _field_r;
	jule::Ptr<_1db944d0d_Token> _field_setter;
	jule::Bool _field_ok = false;
	

	_1ab162e41_assignInfo(void) = default;


};
inline void _1ab166b6a_stop(_1ab16683a_parser*);
inline jule::Bool _1ab166dce_stopped(_1ab16683a_parser*);
inline void _1ab167297_pushErr(_1ab16683a_parser*, jule::Ptr<_1db944d0d_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1ab1675b6_pushSuggestion(_1ab16683a_parser*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1aa858549_Expr> _1ab1678c4_buildExpr(jule::Ptr<_1ab16683a_parser>, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline jule::Ptr<_1aa820a94_Directive> _1ab167bd2_buildDirective(_1ab16683a_parser*, jule::Slice<jule::Ptr<_1db944d0d_Token>>);
inline void _1ab167e57_pushDirective(_1ab16683a_parser*, jule::Ptr<_1aa820a94_Directive>);
inline jule::Ptr<_1aa863eb1_ScopeTree> _1ab16830e_buildScope(jule::Ptr<_1ab16683a_parser>, jule::Slice<jule::Ptr<_1db944d0d_Token>>*, jule::Ptr<_1db944d0d_Token>);
inline __jule_tuple_x_1aa854028_TypeDecl__jule_tuple_bool _1ab168760__buildType(jule::Ptr<_1ab16683a_parser>, jule::Slice<jule::Ptr<_1db944d0d_Token>>*, jule::I64*, jule::Bool);
inline __jule_tuple_x_1aa854028_TypeDecl__jule_tuple_bool _1ab168bb1_buildType(jule::Ptr<_1ab16683a_parser>, jule::Slice<jule::Ptr<_1db944d0d_Token>>*, jule::I64*, jule::Bool);
inline jule::Ptr<_1aa86a2e7_TypeAliasDecl> _1ab168ebe_buildTypeAliasDecl(jule::Ptr<_1ab16683a_parser>, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline void _1ab1692dd_buildVarTypeAndExpr(jule::Ptr<_1ab16683a_parser>, jule::Ptr<_1aa866986_VarDecl>*, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline void _1ab16960c_buildVarCommon(jule::Ptr<_1ab16683a_parser>, jule::Ptr<_1aa866986_VarDecl>*, jule::Slice<jule::Ptr<_1db944d0d_Token>>);
inline void _1ab1699c5_buildVarBegin(_1ab16683a_parser*, jule::Ptr<_1aa866986_VarDecl>*, jule::I64*, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline jule::Ptr<_1aa866986_VarDecl> _1ab169cd3_buildVar(jule::Ptr<_1ab16683a_parser>, jule::Slice<jule::Ptr<_1db944d0d_Token>>);
inline jule::Ptr<_1aa861321_GenericDecl> _1ab16a0e1_buildGeneric(jule::Ptr<_1ab16683a_parser>, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline jule::Slice<jule::Ptr<_1aa861321_GenericDecl>> _1ab16a498_buildGenerics(jule::Ptr<_1ab16683a_parser>, jule::Slice<jule::Ptr<_1db944d0d_Token>>*, jule::Ptr<_1db944d0d_Token>*);
inline jule::Ptr<_1aa864687_ParamDecl> _1ab16a7a6_buildSelfParam(_1ab16683a_parser*, jule::Slice<jule::Ptr<_1db944d0d_Token>>);
inline void _1ab16ab6e_paramTypeBegin(_1ab16683a_parser*, jule::Ptr<_1aa864687_ParamDecl>*, jule::I64*, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline void _1ab16ae8d_buildParamType(jule::Ptr<_1ab16683a_parser>, jule::Ptr<_1aa864687_ParamDecl>*, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline void _1ab16b2ac_buildParamBody(jule::Ptr<_1ab16683a_parser>, jule::Ptr<_1aa864687_ParamDecl>*, jule::Slice<jule::Ptr<_1db944d0d_Token>>);
inline jule::Ptr<_1aa864687_ParamDecl> _1ab16b5ba_buildParam(jule::Ptr<_1ab16683a_parser>, jule::Slice<jule::Ptr<_1db944d0d_Token>>);
inline void _1ab16b840_checkParams(_1ab16683a_parser*, jule::Slice<jule::Ptr<_1aa864687_ParamDecl>>*);
inline jule::Slice<jule::Ptr<_1aa864687_ParamDecl>> _1ab16bbe7_buildParams(jule::Ptr<_1ab16683a_parser>, jule::Slice<jule::Ptr<_1db944d0d_Token>>*, jule::Bool);
inline __jule_tuple_x_1aa85713b_RetTypeDecl__jule_tuple_bool _1ab16c09e_buildMultiRetType(jule::Ptr<_1ab16683a_parser>, jule::Slice<jule::Ptr<_1db944d0d_Token>>*, jule::I64*);
inline __jule_tuple_x_1aa85713b_RetTypeDecl__jule_tuple_bool _1ab16c456_buildRetType(jule::Ptr<_1ab16683a_parser>, jule::Slice<jule::Ptr<_1db944d0d_Token>>*, jule::I64*);
inline jule::Ptr<_1aa8659a7_FnDecl> _1ab16c8a7_buildFnPrototype(jule::Ptr<_1ab16683a_parser>, jule::Slice<jule::Ptr<_1db944d0d_Token>>*, jule::I64*, jule::Bool);
inline jule::Ptr<_1aa8659a7_FnDecl> _1ab16cd08_buildFn(jule::Ptr<_1ab16683a_parser>, jule::Slice<jule::Ptr<_1db944d0d_Token>>*, jule::Bool, jule::Bool);
inline jule::Slice<jule::Ptr<_1db944d0d_Token>> _1ab16d116_getUseDeclSelectors(_1ab16683a_parser*, jule::Slice<jule::Ptr<_1db944d0d_Token>>);
inline void _1ab16d435_buildCppUseDecl(_1ab16683a_parser*, jule::Ptr<_1aa86b6d3_UseDecl>*, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline void _1ab16d754_buildStdUseDecl(_1ab16683a_parser*, jule::Ptr<_1aa86b6d3_UseDecl>*, jule::Slice<jule::Ptr<_1db944d0d_Token>>);
inline void _1ab16da73_buildIdentUseDecl(_1ab16683a_parser*, jule::Ptr<_1aa86b6d3_UseDecl>*, jule::Slice<jule::Ptr<_1db944d0d_Token>>);
inline void _1ab16dd92_parseUseDecl(_1ab16683a_parser*, jule::Ptr<_1aa86b6d3_UseDecl>*, jule::Slice<jule::Ptr<_1db944d0d_Token>>);
inline jule::Ptr<_1aa86b6d3_UseDecl> _1ab16e249_buildUseDecl(_1ab16683a_parser*, jule::Slice<jule::Ptr<_1db944d0d_Token>>, jule::Bool);
inline jule::Ptr<_1aa854028_TypeDecl> _1ab16e601_buildTypeEnumItemKind(jule::Ptr<_1ab16683a_parser>, jule::I64*, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline jule::Slice<jule::Ptr<_1aa86d185_TypeEnumItemDecl>> _1ab16e90e_buildTypeEnumItems(jule::Ptr<_1ab16683a_parser>, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline jule::Ptr<_1aa86d790_TypeEnumDecl> _1ab16ec1c_buildTypeEnumDecl(jule::Ptr<_1ab16683a_parser>, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline jule::Ptr<_1aa858549_Expr> _1ab1700c4_buildEnumItemExpr(jule::Ptr<_1ab16683a_parser>, jule::I64*, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline jule::Slice<jule::Ptr<_1aa86bb56_EnumItemDecl>> _1ab1703d2_buildEnumItems(jule::Ptr<_1ab16683a_parser>, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline jule::Ptr<_1aa86c67e_EnumDecl> _1ab1706e0_buildEnumDecl(jule::Ptr<_1ab16683a_parser>, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline jule::Any _1ab1709ed_buildNodeEnumDecl(jule::Ptr<_1ab16683a_parser>, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline jule::Ptr<_1aa86d98d_FieldDecl> _1ab170d0b_buildField(jule::Ptr<_1ab16683a_parser>, jule::Slice<jule::Ptr<_1db944d0d_Token>>);
inline jule::Slice<jule::Ptr<_1aa86d98d_FieldDecl>> _1ab171119_buildStructDeclFields(jule::Ptr<_1ab16683a_parser>, jule::Slice<jule::Ptr<_1db944d0d_Token>>);
inline jule::Ptr<_1aa86e241_StructDecl> _1ab171427_buildStructDecl(jule::Ptr<_1ab16683a_parser>, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline void _1ab17169c_checkMethodReceiver(_1ab16683a_parser*, jule::Ptr<_1aa8659a7_FnDecl>*);
inline void _1ab1719bb_buildTraitBody(jule::Ptr<_1ab16683a_parser>, jule::Ptr<_1aa86e917_TraitDecl>*, jule::Slice<jule::Ptr<_1db944d0d_Token>>);
inline jule::Ptr<_1aa86e917_TraitDecl> _1ab171cc9_buildTraitDecl(jule::Ptr<_1ab16683a_parser>, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline jule::Ptr<_1aa8659a7_FnDecl> _1ab1720d7_buildCppLinkFn(jule::Ptr<_1ab16683a_parser>, jule::Slice<jule::Ptr<_1db944d0d_Token>>);
inline jule::Ptr<_1aa866986_VarDecl> _1ab1723e5_buildCppLinkVar(jule::Ptr<_1ab16683a_parser>, jule::Slice<jule::Ptr<_1db944d0d_Token>>);
inline jule::Ptr<_1aa86e241_StructDecl> _1ab172703_buildCppLinkStruct(jule::Ptr<_1ab16683a_parser>, jule::Slice<jule::Ptr<_1db944d0d_Token>>);
inline jule::Ptr<_1aa86a2e7_TypeAliasDecl> _1ab172a11_buildCppLinkTypeAlias(jule::Ptr<_1ab16683a_parser>, jule::Slice<jule::Ptr<_1db944d0d_Token>>);
inline jule::Ptr<_1aa86b6d3_UseDecl> _1ab172d1e_buildCppLinkUse(jule::Ptr<_1ab16683a_parser>, jule::Slice<jule::Ptr<_1db944d0d_Token>>);
inline jule::Any _1ab17312c_buildCppLink(jule::Ptr<_1ab16683a_parser>, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline jule::Ptr<_1aa8659a7_FnDecl> _1ab17343a_getMethod(jule::Ptr<_1ab16683a_parser>, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline void _1ab173759_parseImplBody(jule::Ptr<_1ab16683a_parser>, jule::Ptr<_1aa870022_Impl>*, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline jule::Ptr<_1aa870022_Impl> _1ab173a67_buildImpl(jule::Ptr<_1ab16683a_parser>, jule::Slice<jule::Ptr<_1db944d0d_Token>>);
inline jule::Any _1ab173d75_buildNodeData(jule::Ptr<_1ab16683a_parser>, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline void _1ab1740ea_applyFnMeta(_1ab16683a_parser*, jule::Ptr<_1aa8659a7_FnDecl>*);
inline void _1ab174370_applyMeta(_1ab16683a_parser*, _1aa820698_Node*);
inline void _1ab1745e5_pushUseDecl(jule::Ptr<_1ab16683a_parser>, jule::Ptr<_1aa86b6d3_UseDecl>*);
inline jule::Bool _1ab174903_pushMetaNodes(jule::Ptr<_1ab16683a_parser>, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline _1aa820698_Node _1ab174c11_parseNode(jule::Ptr<_1ab16683a_parser>, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline void _1ab174e86_appendNode(jule::Ptr<_1ab16683a_parser>, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline void _1ab1753e8_removeRange(_1ab16683a_parser*, jule::I64, jule::Str, jule::Slice<jule::Ptr<_1db944d0d_Token>>*, jule::Slice<jule::I64>*);
inline void _1ab1757b1_pushWrongOrderCloseErr(_1ab16683a_parser*, jule::Ptr<_1db944d0d_Token>*, jule::Slice<jule::Ptr<_1db944d0d_Token>>*, jule::Slice<jule::I64>*);
inline void _1ab175c23_pushRangeClose(_1ab16683a_parser*, jule::Ptr<_1db944d0d_Token>, jule::Str, jule::Slice<jule::Ptr<_1db944d0d_Token>>*, jule::Slice<jule::I64>*);
inline void _1ab175e98_checkRanges(_1ab16683a_parser*, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline void _1ab17621d_parse(jule::Ptr<_1ab16683a_parser>, jule::Ptr<_1db94a198_File>*);
struct _1ab16683a_parser {
	jule::Ptr<_1aa81e80c_Ast> _field_ast;
	jule::Slice<jule::Ptr<_1aa820a94_Directive>> _field_directives;
	jule::Slice<_1d9d938bd_Log> _field_errors;
	jule::Ptr<_1ab15660a_exprBuilder> _field_ep;
	

	_1ab16683a_parser(void) = default;


};
inline void _1ab177b37_pushErr(_1ab177560_typeBuilder*, jule::Ptr<_1db944d0d_Token>, jule::Str);
inline void _1ab177e56_pushSuggestion(_1ab177560_typeBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1aa854028_TypeDecl> _1ab1781ba_buildPrim(_1ab177560_typeBuilder*);
inline jule::Ptr<_1aa854028_TypeDecl> _1ab17842e_buildNamespace(_1ab177560_typeBuilder*);
inline jule::Slice<jule::Ptr<_1aa854028_TypeDecl>> _1ab178693_buildGenerics(_1ab177560_typeBuilder*);
inline jule::Slice<jule::Slice<jule::Ptr<_1db944d0d_Token>>> _1ab178907_identGenerics(_1ab177560_typeBuilder*);
inline jule::Ptr<_1aa854028_TypeDecl> _1ab178b6b_buildIdent(_1ab177560_typeBuilder*);
inline jule::Ptr<_1aa854028_TypeDecl> _1ab178dd0_buildCppLink(_1ab177560_typeBuilder*);
inline jule::Ptr<_1aa854028_TypeDecl> _1ab179144_buildFn(_1ab177560_typeBuilder*);
inline jule::Ptr<_1aa854028_TypeDecl> _1ab1793a8_buildPtr(_1ab177560_typeBuilder*);
inline jule::Ptr<_1aa854028_TypeDecl> _1ab17961c_buildSptr(_1ab177560_typeBuilder*);
inline jule::Ptr<_1aa854028_TypeDecl> _1ab179881_buildOp(_1ab177560_typeBuilder*);
inline jule::Ptr<_1aa854028_TypeDecl> _1ab179ae5_buildSlc(_1ab177560_typeBuilder*);
inline jule::Ptr<_1aa854028_TypeDecl> _1ab179d59_buildArr(_1ab177560_typeBuilder*);
inline jule::Ptr<_1aa854028_TypeDecl> _1ab17a0bd_buildMap(_1ab177560_typeBuilder*);
inline jule::Ptr<_1aa854028_TypeDecl> _1ab17a332_buildEnumerable(_1ab177560_typeBuilder*);
inline jule::Ptr<_1aa854028_TypeDecl> _1ab17a596_step(_1ab177560_typeBuilder*);
inline __jule_tuple_x_1aa854028_TypeDecl__jule_tuple_bool _1ab17a80a_build(_1ab177560_typeBuilder*);
struct _1ab177560_typeBuilder {
	jule::Ptr<_1ab16683a_parser> _field_p;
	jule::Slice<jule::Ptr<_1db944d0d_Token>> _field_tokens;
	jule::I64* _field_i = nullptr;
	jule::Bool _field_err = false;
	

	_1ab177560_typeBuilder(void) = default;


};
struct _1aa39e17d_CompileInfo {
	jule::Bool _field_Prod = false;
	jule::Bool _field_Test = false;
	jule::Str _field_Compiler = jule::Str("clang", 5);
	jule::Str _field_CppStd = jule::Str("cpp14", 5);
	

	_1aa39e17d_CompileInfo(void) = default;

	inline bool operator==(_1aa39e17d_CompileInfo _other) {
		return 
			this->_field_Prod == _other._field_Prod &&
			this->_field_Test == _other._field_Test &&
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CppStd == _other._field_CppStd;
	}

	inline bool operator!=(_1aa39e17d_CompileInfo _other) { return !this->operator==(_other); }


};
inline void _1aa3a0a31_pushErr(_1aa3a04d1_directiveEval*, jule::Ptr<_1db944d0d_Token>, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Slice<jule::Ptr<_1db944d0d_Token>>> _1aa3a0dd8_splitOperans(_1aa3a04d1_directiveEval*, jule::Str, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline jule::Bool _1aa3a11e6_evalDirectiveIdent(_1aa3a04d1_directiveEval*, jule::Str);
inline jule::Bool _1aa3a1504_evalDirectivePart(_1aa3a04d1_directiveEval*, jule::Slice<jule::Ptr<_1db944d0d_Token>>);
inline jule::Bool _1aa3a1768_eval(_1aa3a04d1_directiveEval*);
struct _1aa3a04d1_directiveEval {
	jule::Slice<_1d9d938bd_Log> _field_logs;
	jule::Ptr<_1aa820a94_Directive> _field_d;
	jule::Slice<jule::Str> _field_vars;
	

	_1aa3a04d1_directiveEval(void) = default;


};
inline jule::Ptr<_1ab17b7c8_JuleImporter> static__1ab17bc07_New(_1aa39e17d_CompileInfo);
inline jule::Slice<jule::Ptr<_1aa8d101c_ImportInfo>> _1ab17be6b_AllPackages(_1ab17b7c8_JuleImporter*);
inline void _1ab17c334_SetModPath(_1ab17b7c8_JuleImporter*, jule::Str);
inline jule::Str _1ab17c598_GetModPath(_1ab17b7c8_JuleImporter*);
inline jule::Str _1ab17c8a6_ModById(_1ab17b7c8_JuleImporter*, jule::I64);
inline jule::Ptr<_1aa8d101c_ImportInfo> _1ab17cbb4_GetImport(_1ab17b7c8_JuleImporter*, jule::Str);
inline __jule_tuple_sx_1aa81e80c_Ast__jule_tuple_s_1d9d938bd_Log _1ab17d06b_ImportPackage(_1ab17b7c8_JuleImporter*, jule::Str, jule::Bool);
inline void _1ab17d2e1_Imported(_1ab17b7c8_JuleImporter*, jule::Ptr<_1aa8d101c_ImportInfo>);
inline __jule_tuple_bool__jule_tuple_s_1d9d938bd_Log _1ab17d731_isPassBuildDirectives(_1ab17b7c8_JuleImporter*, jule::Ptr<_1aa81e80c_Ast>*);
struct _1ab17b7c8_JuleImporter {
	jule::Slice<jule::Str> _field_mods;
	jule::Str _field_mod;
	jule::Slice<jule::Ptr<_1aa8d101c_ImportInfo>> _field_pkgs;
	jule::Slice<jule::Str> _field_vars;
	

	_1ab17b7c8_JuleImporter(void) = default;


};
struct _1ab18157a_OrderedDefines {
	jule::Slice<jule::Ptr<_1aa8740c0_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1aa908c59_Var>> _field_Globals;
	

	_1ab18157a_OrderedDefines(void) = default;


};
inline jule::Bool _1bac88c55_isCommonOrdered(jule::Slice<jule::Ptr<_1aa8740c0_Struct>>, jule::Ptr<_1aa8740c0_Struct>);
inline jule::Bool _1bac8dba0_isCommonOrdered(jule::Slice<jule::Ptr<_1aa908c59_Var>>, jule::Ptr<_1aa908c59_Var>);
inline void _1bac85427_orderCommon(jule::Slice<jule::Ptr<_1aa8740c0_Struct>>*);
inline void _1bac86b76_orderCommon(jule::Slice<jule::Ptr<_1aa908c59_Var>>*);
inline void static__1ab1821b3_orderStructures(jule::Slice<jule::Ptr<_1aa8740c0_Struct>>*);
inline void static__1ab1823c2_orderVars(jule::Slice<jule::Ptr<_1aa908c59_Var>>*);
struct _1ab1817de_defineOrderer {
	

	_1ab1817de_defineOrderer(void) = default;

	inline bool operator==(_1ab1817de_defineOrderer _other) { return true; }

	inline bool operator!=(_1ab1817de_defineOrderer _other) { return !this->operator==(_other); }


};
struct _1ab320340_liveTable {
	jule::Slice<jule::Ptr<_1aa908c59_Var>> _field_vars;
	jule::Slice<jule::Ptr<_1aa88c0c7_FnIns>> _field_fns;
	jule::Slice<jule::Ptr<_1aa876dd6_StructIns>> _field_structs;
	jule::Slice<jule::Ptr<_1aa89b647_Trait>> _field_traits;
	

	_1ab320340_liveTable(void) = default;


};
inline void _1ab3565b8_optimizeChild(jule::Ptr<_1ab3560e0_scopeDeadCode>, jule::Ptr<_1aa8b25a3_Scope>*);
inline void _1ab356860_optimizeBodyChildExceptional(jule::Ptr<_1ab3560e0_scopeDeadCode>, jule::Ptr<_1aa8b25a3_Scope>*);
inline void _1ab356ae6_optimizeBodyChild(jule::Ptr<_1ab3560e0_scopeDeadCode>, jule::Ptr<_1aa8b25a3_Scope>*);
inline void _1ab356d6b_optimizeExprModel(jule::Ptr<_1ab3560e0_scopeDeadCode>, jule::Any*);
inline void _1ab357047_eliminateFollowed(_1ab3560e0_scopeDeadCode*);
inline void _1ab3572bc_pushGoto(jule::Ptr<_1ab3560e0_scopeDeadCode>, jule::Ptr<_1aa8b50cd_GotoSt>);
inline void _1ab357542_pushLabel(jule::Ptr<_1ab3560e0_scopeDeadCode>, jule::Ptr<_1aa8b4ce2_Label>);
inline void _1ab3577b7_optimizeRangeIter(jule::Ptr<_1ab3560e0_scopeDeadCode>, jule::Ptr<_1aa8b4253_RangeIter>);
inline void _1ab357a3c_optimizeWhileIter(jule::Ptr<_1ab3560e0_scopeDeadCode>, jule::Ptr<_1aa8b386d_WhileIter>);
inline void _1ab357cb2_optimizeInfIter(jule::Ptr<_1ab3560e0_scopeDeadCode>, jule::Ptr<_1aa8b33ea_InfIter>);
inline void _1ab358037_optimizeConditional(jule::Ptr<_1ab3560e0_scopeDeadCode>, jule::Ptr<_1aa8b310e_Conditional>);
inline void _1ab3582ac_optimizeMatch(jule::Ptr<_1ab3560e0_scopeDeadCode>, jule::Ptr<_1aa8b63ba_Match>);
inline void _1ab358532_optimizeAssign(jule::Ptr<_1ab3560e0_scopeDeadCode>, jule::Ptr<_1aa8b5908_Assign>);
inline void _1ab3587a7_optimizeMultiAssign(jule::Ptr<_1ab3560e0_scopeDeadCode>, jule::Ptr<_1aa8b5cb0_MultiAssign>);
inline void _1ab358a2c_optimizeStmt(jule::Ptr<_1ab3560e0_scopeDeadCode>, jule::Any);
inline void _1ab358c08_optimizeStmts(jule::Ptr<_1ab3560e0_scopeDeadCode>);
struct _1ab3560e0_scopeDeadCode {
	jule::Ptr<_1ab3560e0_scopeDeadCode> _field_parent;
	jule::Ptr<_1aa8b25a3_Scope> _field_s;
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::I64 _field_i = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_1aa8b4ce2_Label>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1aa8b50cd_GotoSt>>> _field_gotos;
	jule::Bool _field_except = false;
	

	_1ab3560e0_scopeDeadCode(void) = default;

	inline bool operator==(_1ab3560e0_scopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_i == _other._field_i &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_except == _other._field_except;
	}

	inline bool operator!=(_1ab3560e0_scopeDeadCode _other) { return !this->operator==(_other); }


};
inline _1ab35a04a_exprDeadCode static__1ab35a677_new(jule::Ptr<_1ab3560e0_scopeDeadCode>*);
inline void _1ab35a8ec_binary(_1ab35a04a_exprDeadCode*, jule::Ptr<_1aa87b2a3_BinopExprModel>);
inline void _1ab35ab72_unary(_1ab35a04a_exprDeadCode*, jule::Ptr<_1aa87b65a_UnaryExprModel>);
inline void _1ab35ade7_structureLit(_1ab35a04a_exprDeadCode*, jule::Ptr<_1aa87be0d_StructLitExprModel>);
inline void _1ab35b16c_allocStructure(_1ab35a04a_exprDeadCode*, jule::Ptr<_1aa87c21b_AllocStructLitExprModel>);
inline void _1ab35b3e2_casting(_1ab35a04a_exprDeadCode*, jule::Ptr<_1aa87c76b_CastingExprModel>);
inline void _1ab35b667_args(_1ab35a04a_exprDeadCode*, jule::Slice<jule::Any>*);
inline void _1ab35b8dc_funcCall(_1ab35a04a_exprDeadCode*, jule::Ptr<_1aa87d11d_FnCallExprModel>);
inline void _1ab35bb62_slice(_1ab35a04a_exprDeadCode*, jule::Ptr<_1aa87d4c5_SliceExprModel>);
inline void _1ab35bdd7_array(_1ab35a04a_exprDeadCode*, jule::Ptr<_1aa8811ed_ArrayExprModel>);
inline void _1ab35c15c_indexing(_1ab35a04a_exprDeadCode*, jule::Ptr<_1aa87d948_IndexingExprModel>);
inline void _1ab35c3d2_anonFunc(_1ab35a04a_exprDeadCode*, jule::Ptr<_1aa87dd00_AnonFnExprModel>);
inline void _1ab35c657_mapExpr(_1ab35a04a_exprDeadCode*, jule::Ptr<_1aa87e62a_MapExprModel>);
inline void _1ab35c8cc_slicing(_1ab35a04a_exprDeadCode*, jule::Ptr<_1aa87eb69_SlicingExprModel>);
inline void _1ab35cb52_traitSub(_1ab35a04a_exprDeadCode*, jule::Ptr<_1aa8801a8_TraitSubIdentExprModel>);
inline void _1ab35cdc7_structureSub(_1ab35a04a_exprDeadCode*, jule::Ptr<_1aa88098e_StructSubIdentExprModel>);
inline void _1ab35d14c_commonSub(_1ab35a04a_exprDeadCode*, jule::Ptr<_1aa881a4a_CommonSubIdentExprModel>);
inline void _1ab35d3c2_tuple(_1ab35a04a_exprDeadCode*, jule::Ptr<_1aa881d47_TupleExprModel>);
inline void _1ab35d647_newCall(_1ab35a04a_exprDeadCode*, jule::Ptr<_1aa882d15_BuiltinNewCallExprModel>);
inline void _1ab35d8bc_outCall(_1ab35a04a_exprDeadCode*, jule::Ptr<_1aa882221_BuiltinOutCallExprModel>);
inline void _1ab35db42_outlnCall(_1ab35a04a_exprDeadCode*, jule::Ptr<_1aa88260b_BuiltinOutlnCallExprModel>);
inline void _1ab35ddb7_panicCall(_1ab35a04a_exprDeadCode*, jule::Ptr<_1aa883200_BuiltinPanicCallExprModel>);
inline void _1ab35e13c_assertCall(_1ab35a04a_exprDeadCode*, jule::Ptr<_1aa8836a6_BuiltinAssertCallExprModel>);
inline void _1ab35e3b2_errorCall(_1ab35a04a_exprDeadCode*, jule::Ptr<_1aa885587_BuiltinErrorCallExprModel>);
inline void _1ab35e637_makeCall(_1ab35a04a_exprDeadCode*, jule::Ptr<_1aa883b5c_BuiltinMakeCallExprModel>);
inline void _1ab35e8ac_appendCall(_1ab35a04a_exprDeadCode*, jule::Ptr<_1aa884047_BuiltinAppendCallExprModel>);
inline void _1ab35eb32_lenCall(_1ab35a04a_exprDeadCode*, jule::Ptr<_1aa884366_BuiltinLenCallExprModel>);
inline void _1ab35eda7_capCall(_1ab35a04a_exprDeadCode*, jule::Ptr<_1aa884685_BuiltinCapCallExprModel>);
inline void _1ab36012c_cloneCall(_1ab35a04a_exprDeadCode*, jule::Ptr<_1aa88292a_BuiltinCloneCallExprModel>);
inline void _1ab3603a2_deleteCall(_1ab35a04a_exprDeadCode*, jule::Ptr<_1aa884d39_BuiltinDeleteCallExprModel>);
inline void _1ab360627_sizeof(_1ab35a04a_exprDeadCode*, jule::Ptr<_1aa885884_SizeofExprModel>);
inline void _1ab36089c_alignof(_1ab35a04a_exprDeadCode*, jule::Ptr<_1aa885b70_AlignofExprModel>);
inline void _1ab360b22_integratedToStr(_1ab35a04a_exprDeadCode*, jule::Ptr<_1aa886269_IntegratedToStrExprModel>);
inline void _1ab360d97_free(_1ab35a04a_exprDeadCode*, jule::Ptr<_1aa88691d_FreeExprModel>);
inline void _1ab36111c_backendEmit(_1ab35a04a_exprDeadCode*, jule::Ptr<_1aa886632_BackendEmitExprModel>);
inline void _1ab361392_optimize(_1ab35a04a_exprDeadCode*, jule::Any*);
struct _1ab35a04a_exprDeadCode {
	jule::Ptr<_1ab3560e0_scopeDeadCode> _field_s;
	

	_1ab35a04a_exprDeadCode(void) = default;

	inline bool operator==(_1ab35a04a_exprDeadCode _other) {
		return 
			this->_field_s == _other._field_s;
	}

	inline bool operator!=(_1ab35a04a_exprDeadCode _other) { return !this->operator==(_other); }


};
struct _1aa2bb331_StrCompExprModel {
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Ptr<_1c0901b1b_Const> _field_Right;
	jule::Bool _field_NotEq = false;
	

	_1aa2bb331_StrCompExprModel(void) = default;

	inline bool operator==(_1aa2bb331_StrCompExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_NotEq == _other._field_NotEq;
	}

	inline bool operator!=(_1aa2bb331_StrCompExprModel _other) { return !this->operator==(_other); }


};
struct _1aa2bb6e9_StrAppendExprModel {
	jule::Any _field_Str = jule::Any(nullptr);
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1aa2bb6e9_StrAppendExprModel(void) = default;

	inline bool operator==(_1aa2bb6e9_StrAppendExprModel _other) {
		return 
			this->_field_Str == _other._field_Str &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1aa2bb6e9_StrAppendExprModel _other) { return !this->operator==(_other); }


};
struct _1aa2bb9d5_UnsafeBinopExprModel {
	jule::Ptr<_1aa87b2a3_BinopExprModel> _field_Node;
	

	_1aa2bb9d5_UnsafeBinopExprModel(void) = default;

	inline bool operator==(_1aa2bb9d5_UnsafeBinopExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1aa2bb9d5_UnsafeBinopExprModel _other) { return !this->operator==(_other); }


};
struct _1aa2bbd6a_UnsafeIndexingExprModel {
	jule::Ptr<_1aa87d948_IndexingExprModel> _field_Node;
	

	_1aa2bbd6a_UnsafeIndexingExprModel(void) = default;

	inline bool operator==(_1aa2bbd6a_UnsafeIndexingExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1aa2bbd6a_UnsafeIndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1aa2bc200_PushToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Ptr<_1aa87d4c5_SliceExprModel> _field_Elems;
	

	_1aa2bc200_PushToSliceExprModel(void) = default;

	inline bool operator==(_1aa2bc200_PushToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_1aa2bc200_PushToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1aa2bc73e_MutSlicingExprModel {
	jule::Ptr<_1db944d0d_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	_1aa2bc73e_MutSlicingExprModel(void) = default;

	inline bool operator==(_1aa2bc73e_MutSlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1aa2bc73e_MutSlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1aa2bcb18_StrInsertBeginExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1aa2bcb18_StrInsertBeginExprModel(void) = default;

	inline bool operator==(_1aa2bcb18_StrInsertBeginExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1aa2bcb18_StrInsertBeginExprModel _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1aa2bdd28_scopeOptimizer> static__1aa2be389_new(jule::Ptr<_1aa8b25a3_Scope>);
inline void _1aa2be60e_setCurrentStmt(_1aa2bdd28_scopeOptimizer*, jule::Any);
inline void _1aa2be884_optimizeData(_1aa2bdd28_scopeOptimizer*, jule::Ptr<_1aa957d85_Data>);
inline void _1aa2beb09_optimizeVar(_1aa2bdd28_scopeOptimizer*, jule::Ptr<_1aa908c59_Var>);
inline void _1aa2bed7e_optimizeConditional(_1aa2bdd28_scopeOptimizer*, jule::Ptr<_1aa8b310e_Conditional>);
inline void _1aa2c0269_buildDefaultConstatTrueCase(_1aa2bdd28_scopeOptimizer*, jule::Ptr<_1aa8b6e15_Case>, jule::I64*, jule::Ptr<_1aa8b63ba_Match>*);
inline void _1aa2c0478_optimizeMatch(_1aa2bdd28_scopeOptimizer*, jule::Ptr<_1aa8b63ba_Match>);
inline void _1aa2c06ed_optimizeRangeIter(_1aa2bdd28_scopeOptimizer*, jule::Ptr<_1aa8b4253_RangeIter>);
inline void _1aa2c0973_optimizeWhileIter(_1aa2bdd28_scopeOptimizer*, jule::Ptr<_1aa8b386d_WhileIter>);
inline jule::Bool _1aa2c0c81_substr(_1aa2bdd28_scopeOptimizer*, jule::Ptr<_1aa8b5908_Assign>);
inline jule::Bool _1aa2c108e_strInsert(_1aa2bdd28_scopeOptimizer*, jule::Ptr<_1aa8b5908_Assign>);
inline jule::Bool _1aa2c139c_strAppend(_1aa2bdd28_scopeOptimizer*, jule::Ptr<_1aa8b5908_Assign>);
inline jule::Bool _1aa2c16aa_strAssign(_1aa2bdd28_scopeOptimizer*, jule::Ptr<_1aa8b5908_Assign>);
inline void _1aa2c1930_optimizeAssign(_1aa2bdd28_scopeOptimizer*, jule::Ptr<_1aa8b5908_Assign>);
inline void _1aa2c1ba5_optimizeMultiAssign(_1aa2bdd28_scopeOptimizer*, jule::Ptr<_1aa8b5cb0_MultiAssign>);
inline void _1aa2c1e2a_optimizeRet(_1aa2bdd28_scopeOptimizer*, jule::Ptr<_1aa8b783e_RetSt>);
inline void _1aa2c21a0_optimizeStmt(_1aa2bdd28_scopeOptimizer*, jule::Any);
inline void _1aa2c2425_optimizeChild(_1aa2bdd28_scopeOptimizer*, jule::Ptr<_1aa8b25a3_Scope>);
inline void _1aa2c2601_optimize(_1aa2bdd28_scopeOptimizer*);
struct _1aa2bdd28_scopeOptimizer {
	jule::I64 _field_i = 0;
	jule::Ptr<_1aa8b25a3_Scope> _field_scope;
	

	_1aa2bdd28_scopeOptimizer(void) = default;

	inline bool operator==(_1aa2bdd28_scopeOptimizer _other) {
		return 
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1aa2bdd28_scopeOptimizer _other) { return !this->operator==(_other); }


};
inline void static__1aa2c4c52_optimize(jule::Any*);
inline jule::Bool _1aa2c5060_strCond(_1aa2c4724_exprOptimizer*, jule::Ptr<_1aa87b2a3_BinopExprModel>);
inline void _1aa2c52d5_binary(_1aa2c4724_exprOptimizer*, jule::Ptr<_1aa87b2a3_BinopExprModel>);
inline void _1aa2c555a_unary(_1aa2c4724_exprOptimizer*, jule::Ptr<_1aa87b65a_UnaryExprModel>);
inline void _1aa2c57d0_structureLit(_1aa2c4724_exprOptimizer*, jule::Ptr<_1aa87be0d_StructLitExprModel>);
inline void _1aa2c5a55_allocStructure(_1aa2c4724_exprOptimizer*, jule::Ptr<_1aa87c21b_AllocStructLitExprModel>);
inline void _1aa2c5cca_casting(_1aa2c4724_exprOptimizer*, jule::Ptr<_1aa87c76b_CastingExprModel>);
inline void _1aa2c6050_args(_1aa2c4724_exprOptimizer*, jule::Slice<jule::Any>*);
inline void _1aa2c62c5_scope(_1aa2c4724_exprOptimizer*, jule::Ptr<_1aa8b25a3_Scope>*);
inline void _1aa2c654a_funcCall(_1aa2c4724_exprOptimizer*, jule::Ptr<_1aa87d11d_FnCallExprModel>);
inline void _1aa2c67c0_slice(_1aa2c4724_exprOptimizer*, jule::Ptr<_1aa87d4c5_SliceExprModel>);
inline void _1aa2c6a45_array(_1aa2c4724_exprOptimizer*, jule::Ptr<_1aa8811ed_ArrayExprModel>);
inline void _1aa2c6cba_indexing(_1aa2c4724_exprOptimizer*, jule::Ptr<_1aa87d948_IndexingExprModel>);
inline void _1aa2c7040_anonFunc(_1aa2c4724_exprOptimizer*, jule::Ptr<_1aa87dd00_AnonFnExprModel>);
inline void _1aa2c72b5_mapExpr(_1aa2c4724_exprOptimizer*, jule::Ptr<_1aa87e62a_MapExprModel>);
inline void _1aa2c753a_slicing(_1aa2c4724_exprOptimizer*, jule::Ptr<_1aa87eb69_SlicingExprModel>);
inline void _1aa2c77b0_traitSub(_1aa2c4724_exprOptimizer*, jule::Ptr<_1aa8801a8_TraitSubIdentExprModel>);
inline void _1aa2c7a35_structureSub(_1aa2c4724_exprOptimizer*, jule::Ptr<_1aa88098e_StructSubIdentExprModel>);
inline void _1aa2c7caa_commonSub(_1aa2c4724_exprOptimizer*, jule::Ptr<_1aa881a4a_CommonSubIdentExprModel>);
inline void _1aa2c8030_tuple(_1aa2c4724_exprOptimizer*, jule::Ptr<_1aa881d47_TupleExprModel>);
inline void _1aa2c82a5_newCall(_1aa2c4724_exprOptimizer*, jule::Ptr<_1aa882d15_BuiltinNewCallExprModel>);
inline void _1aa2c852a_outCall(_1aa2c4724_exprOptimizer*, jule::Ptr<_1aa882221_BuiltinOutCallExprModel>);
inline void _1aa2c87a0_outlnCall(_1aa2c4724_exprOptimizer*, jule::Ptr<_1aa88260b_BuiltinOutlnCallExprModel>);
inline void _1aa2c8a25_panicCall(_1aa2c4724_exprOptimizer*, jule::Ptr<_1aa883200_BuiltinPanicCallExprModel>);
inline void _1aa2c8c9a_assertCall(_1aa2c4724_exprOptimizer*, jule::Ptr<_1aa8836a6_BuiltinAssertCallExprModel>);
inline void _1aa2c9020_errorCall(_1aa2c4724_exprOptimizer*, jule::Ptr<_1aa885587_BuiltinErrorCallExprModel>);
inline void _1aa2c9295_makeCall(_1aa2c4724_exprOptimizer*, jule::Ptr<_1aa883b5c_BuiltinMakeCallExprModel>);
inline void _1aa2c951a_appendCall(_1aa2c4724_exprOptimizer*, jule::Ptr<_1aa884047_BuiltinAppendCallExprModel>);
inline void _1aa2c9790_lenCall(_1aa2c4724_exprOptimizer*, jule::Ptr<_1aa884366_BuiltinLenCallExprModel>);
inline void _1aa2c9a15_capCall(_1aa2c4724_exprOptimizer*, jule::Ptr<_1aa884685_BuiltinCapCallExprModel>);
inline void _1aa2c9c8a_cloneCall(_1aa2c4724_exprOptimizer*, jule::Ptr<_1aa88292a_BuiltinCloneCallExprModel>);
inline void _1aa2ca010_deleteCall(_1aa2c4724_exprOptimizer*, jule::Ptr<_1aa884d39_BuiltinDeleteCallExprModel>);
inline void _1aa2ca285_sizeof(_1aa2c4724_exprOptimizer*, jule::Ptr<_1aa885884_SizeofExprModel>);
inline void _1aa2ca50a_alignof(_1aa2c4724_exprOptimizer*, jule::Ptr<_1aa885b70_AlignofExprModel>);
inline void _1aa2ca780_integratedToStr(_1aa2c4724_exprOptimizer*, jule::Ptr<_1aa886269_IntegratedToStrExprModel>);
inline void _1aa2caa05_free(_1aa2c4724_exprOptimizer*, jule::Ptr<_1aa88691d_FreeExprModel>);
inline void _1aa2cac7a_backendEmit(_1aa2c4724_exprOptimizer*, jule::Ptr<_1aa886632_BackendEmitExprModel>);
inline void _1aa2cae56_do(_1aa2c4724_exprOptimizer*);
struct _1aa2c4724_exprOptimizer {
	jule::Ptr<jule::Any> _field_model;
	

	_1aa2c4724_exprOptimizer(void) = default;

	inline bool operator==(_1aa2c4724_exprOptimizer _other) {
		return 
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1aa2c4724_exprOptimizer _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ab361d43_Optimizer> static__1ab3622e9_New(jule::Ptr<_1ab17e039_IR>*);
inline void _1ab36256e_optimizeGlobal(_1ab361d43_Optimizer*, jule::Ptr<_1aa908c59_Var>*);
inline void _1ab3627e4_optimizeFunction(_1ab361d43_Optimizer*, jule::Ptr<_1aa889426_Fn>*);
inline void _1ab362a69_optimizeStruct(_1ab361d43_Optimizer*, jule::Ptr<_1aa8740c0_Struct>*);
inline void _1ab362cde_optimizeGlobals(_1ab361d43_Optimizer*, jule::Ptr<_1aa8d3b57_Package>*);
inline void _1ab363064_optimizeFunctions(_1ab361d43_Optimizer*, jule::Ptr<_1aa8d3b57_Package>*);
inline void _1ab3632d9_optimizeStructs(_1ab361d43_Optimizer*, jule::Ptr<_1aa8d3b57_Package>*);
inline void _1ab36355e_optimizePackage(_1ab361d43_Optimizer*, jule::Ptr<_1aa8d3b57_Package>*);
inline void _1ab36373a_Optimize(_1ab361d43_Optimizer*);
struct _1ab361d43_Optimizer {
	jule::Ptr<_1ab17e039_IR> _field_ir;
	

	_1ab361d43_Optimizer(void) = default;

	inline bool operator==(_1ab361d43_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1ab361d43_Optimizer _other) { return !this->operator==(_other); }


};
inline void static__1ab41ca14_Reset(void);
inline void static__1ab41dd78_Print(jule::Str, jule::Str);
struct _1ab41da9d_AnsiEscape {
	

	_1ab41da9d_AnsiEscape(void) = default;

	inline bool operator==(_1ab41da9d_AnsiEscape _other) { return true; }

	inline bool operator!=(_1ab41da9d_AnsiEscape _other) { return !this->operator==(_other); }


};
inline void static__1ab420709_LogFlat(_1d9d938bd_Log*);
inline void static__1ab420918_LogError(_1d9d938bd_Log*);
inline void static__1ab420b27_Log(_1d9d938bd_Log*);
inline void static__1ab420d36_PrintLogs(jule::Slice<_1d9d938bd_Log>*);
struct _1ab420473_Logger {
	

	_1ab420473_Logger(void) = default;

	inline bool operator==(_1ab420473_Logger _other) { return true; }

	inline bool operator!=(_1ab420473_Logger _other) { return !this->operator==(_other); }


};
inline jule::U64 _1abc2795b_Unix(_1abc275a4_AbsTime*);
struct _1abc275a4_AbsTime {
	jule::U64 _field_Day = 0;
	jule::U64 _field_WeekDay = 0;
	jule::U64 _field_YearDay = 0;
	jule::U64 _field_Month = 0;
	jule::U64 _field_Year = 0;
	jule::U64 _field_Second = 0;
	jule::U64 _field_Minute = 0;
	jule::U64 _field_Hour = 0;
	

	_1abc275a4_AbsTime(void) = default;

	inline bool operator==(_1abc275a4_AbsTime _other) {
		return 
			this->_field_Day == _other._field_Day &&
			this->_field_WeekDay == _other._field_WeekDay &&
			this->_field_YearDay == _other._field_YearDay &&
			this->_field_Month == _other._field_Month &&
			this->_field_Year == _other._field_Year &&
			this->_field_Second == _other._field_Second &&
			this->_field_Minute == _other._field_Minute &&
			this->_field_Hour == _other._field_Hour;
	}

	inline bool operator!=(_1abc275a4_AbsTime _other) { return !this->operator==(_other); }


};
inline _1abc27c47_Time static__1abc280dd_Unix(jule::U64);
inline _1abc27c47_Time static__1abc282db_Now(void);
inline jule::U64 _1abc2873c_Unix(_1abc27c47_Time*);
inline jule::U64 _1abc289a1_Day(_1abc27c47_Time*);
inline jule::U64 _1abc28c15_Month(_1abc27c47_Time*);
inline jule::U64 _1abc28e79_Year(_1abc27c47_Time*);
inline jule::U64 _1abc291dd_Second(_1abc27c47_Time*);
inline jule::U64 _1abc29452_Minute(_1abc27c47_Time*);
inline jule::U64 _1abc296b6_Hour(_1abc27c47_Time*);
inline _1abc275a4_AbsTime _1abc2992a_Abs(_1abc27c47_Time*);
struct _1abc27c47_Time {
	jule::U64 _field_sec = 0;
	

	_1abc27c47_Time(void) = default;

	inline bool operator==(_1abc27c47_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_1abc27c47_Time _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1abb71e38_scopeCoder> static__1abb72576_new(jule::Ptr<_1abc31cc8_ObjectCoder>*);
inline void _1baeec78d_iterHead(jule::Ptr<_1abb71e38_scopeCoder>, jule::Ptr<_1aa8b4253_RangeIter>*, jule::Bool*, jule::Str*);
inline void _1abb72bb4_rangeIndexIter(jule::Ptr<_1abb71e38_scopeCoder>, jule::Ptr<_1aa8b4253_RangeIter>*);
inline void _1abb72e39_rangeHashmapIter(jule::Ptr<_1abb71e38_scopeCoder>, jule::Ptr<_1aa8b4253_RangeIter>*);
inline void _1abb731ae_ifCase(jule::Ptr<_1abb71e38_scopeCoder>, jule::Ptr<_1aa8b299e_If>);
inline void _1abb73434_conditional(jule::Ptr<_1abb71e38_scopeCoder>, jule::Ptr<_1aa8b310e_Conditional>);
inline void _1abb736a9_infIter(jule::Ptr<_1abb71e38_scopeCoder>, jule::Ptr<_1aa8b33ea_InfIter>);
inline void _1abb7392e_whileIter(jule::Ptr<_1abb71e38_scopeCoder>, jule::Ptr<_1aa8b386d_WhileIter>);
inline void _1abb73ba4_rangeIter(jule::Ptr<_1abb71e38_scopeCoder>, jule::Ptr<_1aa8b4253_RangeIter>);
inline void _1abb73e29_cont(jule::Ptr<_1abb71e38_scopeCoder>, jule::Ptr<_1aa8b464e_ContSt>);
inline void _1abb7419e_label(jule::Ptr<_1abb71e38_scopeCoder>, jule::Ptr<_1aa8b4ce2_Label>);
inline void _1abb74424_gotoSt(jule::Ptr<_1abb71e38_scopeCoder>, jule::Ptr<_1aa8b50cd_GotoSt>);
inline void _1abb74699_postfix(jule::Ptr<_1abb71e38_scopeCoder>, jule::Ptr<_1aa8b5485_Postfix>);
inline void _1abb7491e_assign(jule::Ptr<_1abb71e38_scopeCoder>, jule::Ptr<_1aa8b5908_Assign>);
inline void _1abb74b94_mapLookupAssign(jule::Ptr<_1abb71e38_scopeCoder>, jule::Ptr<_1aa8b5cb0_MultiAssign>*);
inline void _1abb74e19_multiAssignTup(jule::Ptr<_1abb71e38_scopeCoder>, jule::Ptr<_1aa8b5cb0_MultiAssign>*);
inline void _1abb7518e_multiAssignFn(jule::Ptr<_1abb71e38_scopeCoder>, jule::Ptr<_1aa8b5cb0_MultiAssign>*);
inline void _1abb75414_multiAssign(jule::Ptr<_1abb71e38_scopeCoder>, jule::Ptr<_1aa8b5cb0_MultiAssign>);
inline jule::Fn<void(void)> _1abb75722_matchExpr(jule::Ptr<_1abb71e38_scopeCoder>, jule::Ptr<_1aa8b63ba_Match>);
inline void _1abb75a41_case(jule::Ptr<_1abb71e38_scopeCoder>, jule::Ptr<_1aa8b63ba_Match>, jule::Ptr<_1aa8b6e15_Case>);
inline void _1abb75cb6_matchSt(jule::Ptr<_1abb71e38_scopeCoder>, jule::Ptr<_1aa8b63ba_Match>);
inline void _1abb7603b_fallSt(jule::Ptr<_1abb71e38_scopeCoder>, jule::Ptr<_1aa8b74ba_FallSt>);
inline void _1abb762b1_breakSt(jule::Ptr<_1abb71e38_scopeCoder>, jule::Ptr<_1aa8b4a06_BreakSt>);
inline void _1abb76536_setResult(jule::Ptr<_1abb71e38_scopeCoder>, jule::Ptr<_1aa8b783e_RetSt>);
inline void _1abb767ab_retSt(jule::Ptr<_1abb71e38_scopeCoder>, jule::Ptr<_1aa8b783e_RetSt>);
inline void _1abb76a31_var(jule::Ptr<_1abb71e38_scopeCoder>, jule::Ptr<_1aa908c59_Var>);
inline void _1abb76ca6_strAppend(jule::Ptr<_1abb71e38_scopeCoder>, jule::Ptr<_1aa2bb6e9_StrAppendExprModel>);
inline void _1abb7702b_st(jule::Ptr<_1abb71e38_scopeCoder>, jule::Any);
inline void _1abb772a1_scopeStmts(jule::Ptr<_1abb71e38_scopeCoder>, jule::Ptr<_1aa8b25a3_Scope>*);
inline void _1abb77526_scope(jule::Ptr<_1abb71e38_scopeCoder>, jule::Ptr<_1aa8b25a3_Scope>);
inline void _1abb7779b_funcScope(jule::Ptr<_1abb71e38_scopeCoder>, jule::Ptr<_1aa88c0c7_FnIns>);
struct _1abb71e38_scopeCoder {
	jule::Ptr<_1abc31cc8_ObjectCoder> _field_oc;
	

	_1abb71e38_scopeCoder(void) = default;

	inline bool operator==(_1abb71e38_scopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1abb71e38_scopeCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1abb7a381_exprCoder> static__1abb7a77c_new(jule::Ptr<_1abc31cc8_ObjectCoder>*);
inline void _1abb7aa02_string(jule::Ptr<_1abb7a381_exprCoder>, jule::Ptr<_1c0901b1b_Const>*);
inline void _1abb7ac77_boolean(jule::Ptr<_1abb7a381_exprCoder>, jule::Bool);
inline void _1abb7ae53_nilLit(jule::Ptr<_1abb7a381_exprCoder>);
inline jule::Bool _1abb7b261_ftoaSpecialCases(jule::Ptr<_1abb7a381_exprCoder>, jule::F64*);
inline void _1abb7b4d6_float32(jule::Ptr<_1abb7a381_exprCoder>, jule::Ptr<_1c0901b1b_Const>*);
inline void _1abb7b75b_float64(jule::Ptr<_1abb7a381_exprCoder>, jule::Ptr<_1c0901b1b_Const>*);
inline void _1abb7b9d1_constant(jule::Ptr<_1abb7a381_exprCoder>, jule::Ptr<_1c0901b1b_Const>);
inline void _1abb7bd99_divByZeroBinary(jule::Ptr<_1abb7a381_exprCoder>, jule::Ptr<_1db944d0d_Token>*, jule::Ptr<_1aa87acdb_OperandExprModel>*, jule::Ptr<_1aa87acdb_OperandExprModel>*);
inline void _1abb7c11e_unsafeBinary(jule::Ptr<_1abb7a381_exprCoder>, jule::Ptr<_1aa87b2a3_BinopExprModel>);
inline void _1abb7c394_binary(jule::Ptr<_1abb7a381_exprCoder>, jule::Ptr<_1aa87b2a3_BinopExprModel>);
inline void _1abb7c619_var(jule::Ptr<_1abb7a381_exprCoder>, jule::Ptr<_1aa908c59_Var>);
inline void _1abb7c88e_structureIns(jule::Ptr<_1abb7a381_exprCoder>, jule::Ptr<_1aa876dd6_StructIns>);
inline void _1abb7cb14_unary(jule::Ptr<_1abb7a381_exprCoder>, jule::Ptr<_1aa87b65a_UnaryExprModel>);
inline void _1abb7cd89_structureLit(jule::Ptr<_1abb7a381_exprCoder>, jule::Ptr<_1aa87be0d_StructLitExprModel>);
inline void _1abb7d10e_allocStructure(jule::Ptr<_1abb7a381_exprCoder>, jule::Ptr<_1aa87c21b_AllocStructLitExprModel>);
inline void _1abb7d384_possibleRefExpr(jule::Ptr<_1abb7a381_exprCoder>, jule::Any);
inline void _1abb7d74c_castTraitFromTrait(jule::Ptr<_1abb7a381_exprCoder>, jule::Ptr<_1aa87c76b_CastingExprModel>*, jule::Ptr<_1aa89b647_Trait>, jule::Ptr<_1aa89b647_Trait>);
inline void _1abb7d9c2_casting(jule::Ptr<_1abb7a381_exprCoder>, jule::Ptr<_1aa87c76b_CastingExprModel>);
inline void _1abb7dc47_models(jule::Ptr<_1abb7a381_exprCoder>, jule::Slice<jule::Any>);
inline void _1abb7debc_args(jule::Ptr<_1abb7a381_exprCoder>, jule::Ptr<_1aa87d11d_FnCallExprModel>*);
inline void _1abb7e242_modelForCall(jule::Ptr<_1abb7a381_exprCoder>, jule::Any);
inline void _1abb7e4b7_pushCallInf(jule::Ptr<_1abb7a381_exprCoder>, jule::Ptr<_1aa87d11d_FnCallExprModel>*);
inline jule::Bool _1abb7e7c5_isWrapped(jule::Ptr<_1abb7a381_exprCoder>, jule::Ptr<_1aa87d11d_FnCallExprModel>*);
inline void _1abb7ea4a_pureFuncCall(jule::Ptr<_1abb7a381_exprCoder>, jule::Ptr<_1aa87d11d_FnCallExprModel>*);
inline void _1abb7ecc0_coFuncCall(jule::Ptr<_1abb7a381_exprCoder>, jule::Ptr<_1aa87d11d_FnCallExprModel>*);
inline void _1abb800de_writeUseExpr(jule::Ptr<_1abb7a381_exprCoder>, jule::Ptr<_1aa88c0c7_FnIns>*, jule::Ptr<_1aa957d85_Data>);
inline void _1abb80364_funcCall(jule::Ptr<_1abb7a381_exprCoder>, jule::Ptr<_1aa87d11d_FnCallExprModel>);
inline void _1abb805d9_slice(jule::Ptr<_1abb7a381_exprCoder>, jule::Ptr<_1aa87d4c5_SliceExprModel>);
inline void _1abb8085e_indexing(jule::Ptr<_1abb7a381_exprCoder>, jule::Ptr<_1aa87d948_IndexingExprModel>);
inline void _1abb80ad4_unsafeIndexing(jule::Ptr<_1abb7a381_exprCoder>, jule::Ptr<_1aa2bbd6a_UnsafeIndexingExprModel>);
inline void _1abb80d59_anonFunc(jule::Ptr<_1abb7a381_exprCoder>, jule::Ptr<_1aa87dd00_AnonFnExprModel>);
inline void _1abb810ce_mapExpr(jule::Ptr<_1abb7a381_exprCoder>, jule::Ptr<_1aa87e62a_MapExprModel>);
inline void _1abb81354_slicing(jule::Ptr<_1abb7a381_exprCoder>, jule::Ptr<_1aa87eb69_SlicingExprModel>);
inline void _1abb815c9_traitSub(jule::Ptr<_1abb7a381_exprCoder>, jule::Ptr<_1aa8801a8_TraitSubIdentExprModel>);
inline void _1abb8184e_structureSub(jule::Ptr<_1abb7a381_exprCoder>, jule::Ptr<_1aa88098e_StructSubIdentExprModel>);
inline void _1abb81ac4_commonIdent(jule::Ptr<_1abb7a381_exprCoder>, jule::Ptr<_1aa8814d9_CommonIdentExprModel>);
inline void _1abb81d49_commonSub(jule::Ptr<_1abb7a381_exprCoder>, jule::Ptr<_1aa881a4a_CommonSubIdentExprModel>);
inline void _1abb820be_array(jule::Ptr<_1abb7a381_exprCoder>, jule::Ptr<_1aa8811ed_ArrayExprModel>);
inline void _1abb82344_funcInsCommon(jule::Ptr<_1abb7a381_exprCoder>, jule::Ptr<_1aa88c0c7_FnIns>);
inline void _1abb825b9_funcIns(jule::Ptr<_1abb7a381_exprCoder>, jule::Ptr<_1aa88c0c7_FnIns>);
inline void _1abb8283e_tuple(jule::Ptr<_1abb7a381_exprCoder>, jule::Ptr<_1aa881d47_TupleExprModel>);
inline void _1abb82ab4_newCall(jule::Ptr<_1abb7a381_exprCoder>, jule::Ptr<_1aa882d15_BuiltinNewCallExprModel>);
inline void _1abb82d39_outCall(jule::Ptr<_1abb7a381_exprCoder>, jule::Ptr<_1aa882221_BuiltinOutCallExprModel>);
inline void _1abb830ae_outlnCall(jule::Ptr<_1abb7a381_exprCoder>, jule::Ptr<_1aa88260b_BuiltinOutlnCallExprModel>);
inline void _1abb83334_panicCall(jule::Ptr<_1abb7a381_exprCoder>, jule::Ptr<_1aa883200_BuiltinPanicCallExprModel>);
inline void _1abb835a9_assertCall(jule::Ptr<_1abb7a381_exprCoder>, jule::Ptr<_1aa8836a6_BuiltinAssertCallExprModel>);
inline void _1abb8382e_errorCall(jule::Ptr<_1abb7a381_exprCoder>, jule::Ptr<_1aa885587_BuiltinErrorCallExprModel>);
inline void _1abb83aa4_copyCall(jule::Ptr<_1abb7a381_exprCoder>, jule::Ptr<_1aa88519c_BuiltinCopyCallExprModel>);
inline void _1abb83d29_lenCall(jule::Ptr<_1abb7a381_exprCoder>, jule::Ptr<_1aa884366_BuiltinLenCallExprModel>);
inline void _1abb8409e_capCall(jule::Ptr<_1abb7a381_exprCoder>, jule::Ptr<_1aa884685_BuiltinCapCallExprModel>);
inline void _1abb84324_deleteCall(jule::Ptr<_1abb7a381_exprCoder>, jule::Ptr<_1aa884d39_BuiltinDeleteCallExprModel>);
inline void _1abb84599_makeCallSlice(jule::Ptr<_1abb7a381_exprCoder>, jule::Ptr<_1aa883b5c_BuiltinMakeCallExprModel>*);
inline void _1abb8481e_makeCallStr(jule::Ptr<_1abb7a381_exprCoder>, jule::Ptr<_1aa883b5c_BuiltinMakeCallExprModel>*);
inline void _1abb84a94_makeCall(jule::Ptr<_1abb7a381_exprCoder>, jule::Ptr<_1aa883b5c_BuiltinMakeCallExprModel>);
inline void _1abb84d19_pushToSlice(jule::Ptr<_1abb7a381_exprCoder>, jule::Ptr<_1aa2bc200_PushToSliceExprModel>);
inline void _1abb8508e_appendCall(jule::Ptr<_1abb7a381_exprCoder>, jule::Ptr<_1aa884047_BuiltinAppendCallExprModel>);
inline void _1abb85314_cloneCall(jule::Ptr<_1abb7a381_exprCoder>, jule::Ptr<_1aa88292a_BuiltinCloneCallExprModel>);
inline void _1abb85589_sizeof(jule::Ptr<_1abb7a381_exprCoder>, jule::Ptr<_1aa885884_SizeofExprModel>);
inline void _1abb8580e_alignof(jule::Ptr<_1abb7a381_exprCoder>, jule::Ptr<_1aa885b70_AlignofExprModel>);
inline jule::Str _1abb85b1c_runeLit(jule::Ptr<_1abb7a381_exprCoder>, jule::Ptr<_1aa885e5b_RuneExprModel>);
inline void _1abb85d92_structureStatic(jule::Ptr<_1abb7a381_exprCoder>, jule::Ptr<_1aa880d35_StructStaticIdentExprModel>);
inline void _1abb86117_integratedToStr(jule::Ptr<_1abb7a381_exprCoder>, jule::Ptr<_1aa886269_IntegratedToStrExprModel>);
inline void _1abb8638c_backendEmit(jule::Ptr<_1abb7a381_exprCoder>, jule::Ptr<_1aa886632_BackendEmitExprModel>);
inline void _1abb86612_free(jule::Ptr<_1abb7a381_exprCoder>, jule::Ptr<_1aa88691d_FreeExprModel>);
inline void _1abb86887_mutSlicing(jule::Ptr<_1abb7a381_exprCoder>, jule::Ptr<_1aa2bc73e_MutSlicingExprModel>);
inline void _1abb86b0c_strInsertBegin(jule::Ptr<_1abb7a381_exprCoder>, jule::Ptr<_1aa2bcb18_StrInsertBeginExprModel>);
inline void _1abb86d82_strComp(jule::Ptr<_1abb7a381_exprCoder>, jule::Ptr<_1aa2bb331_StrCompExprModel>);
inline void _1abb87107_model(jule::Ptr<_1abb7a381_exprCoder>, jule::Any);
inline void _1abb8737c_initExpr(jule::Ptr<_1abb7a381_exprCoder>, jule::Ptr<_1aa983872_TypeKind>);
struct _1abb7a381_exprCoder {
	jule::Ptr<_1abc31cc8_ObjectCoder> _field_oc;
	

	_1abb7a381_exprCoder(void) = default;

	inline bool operator==(_1abb7a381_exprCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1abb7a381_exprCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1abb89b21_deriveCoder> static__1abb8a00b_new(jule::Ptr<_1abc31cc8_ObjectCoder>);
inline jule::Str _1abb8a319_cloneFuncDecl(_1abb89b21_deriveCoder*, jule::Ptr<_1aa8740c0_Struct>*);
inline jule::Str _1abb8a627_cloneFuncDef(_1abb89b21_deriveCoder*, jule::Ptr<_1aa8740c0_Struct>*);
struct _1abb89b21_deriveCoder {
	jule::Ptr<_1abc31cc8_ObjectCoder> _field_oc;
	

	_1abb89b21_deriveCoder(void) = default;

	inline bool operator==(_1abb89b21_deriveCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1abb89b21_deriveCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1abb8b507_TestCoder> static__1abb8b97a_New(jule::Ptr<_1abc31cc8_ObjectCoder>*);
inline jule::Ptr<_1aa8d101c_ImportInfo> _1abb8bbde_findTestingPackage(jule::Ptr<_1abb8b507_TestCoder>);
inline void _1abb8be64_appendTest(jule::Ptr<_1abb8b507_TestCoder>, jule::Ptr<_1aa88c0c7_FnIns>);
inline void _1abb8c1d9_appendPackageTests(jule::Ptr<_1abb8b507_TestCoder>, jule::Ptr<_1aa8d3b57_Package>*);
inline jule::Bool _1abb8c44d_readyTestingPackage(jule::Ptr<_1abb8b507_TestCoder>);
inline void _1abb8c629_callTmReset(jule::Ptr<_1abb8b507_TestCoder>);
inline void _1abb8c805_callTmFailed(jule::Ptr<_1abb8b507_TestCoder>);
inline void _1abb8c9d1_callTmSkipped(jule::Ptr<_1abb8b507_TestCoder>);
inline void _1abb8cbac_Serialize(jule::Ptr<_1abb8b507_TestCoder>);
struct _1abb8b507_TestCoder {
	jule::Ptr<_1aa876dd6_StructIns> _field_t;
	jule::Ptr<_1aa889426_Fn> _field_tmReset;
	jule::Ptr<_1aa889426_Fn> _field_tmFailed;
	jule::Ptr<_1aa889426_Fn> _field_tmSkipped;
	jule::Ptr<_1abc31cc8_ObjectCoder> _field_oc;
	

	_1abb8b507_TestCoder(void) = default;

	inline bool operator==(_1abb8b507_TestCoder _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_tmReset == _other._field_tmReset &&
			this->_field_tmFailed == _other._field_tmFailed &&
			this->_field_tmSkipped == _other._field_tmSkipped &&
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1abb8b507_TestCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__1abb8e120_toOut(jule::Str*, jule::Uintptr);
inline jule::Str static__1abb8e50a_toLocal(jule::I64, jule::I64, jule::Str*);
inline jule::Str static__1abb8e7a2_func(jule::Ptr<_1aa889426_Fn>*);
inline jule::Str static__1abb8ea49_funcIns(jule::Ptr<_1aa88c0c7_FnIns>*);
inline jule::Str static__1abb8ece1_traitDecl(jule::Ptr<_1aa89b647_Trait>);
inline jule::Str static__1abb90088_param(jule::Ptr<_1aa887ad9_Param>*);
inline jule::Str static__1abb90330_structure(jule::Ptr<_1aa8740c0_Struct>*);
inline jule::Str static__1abb905c7_structureIns(jule::Ptr<_1aa876dd6_StructIns>*);
inline jule::Str static__1abb9086e_field(jule::Ptr<_1aa8714eb_Field>*);
inline jule::Str static__1abb90b16_var(jule::Ptr<_1aa908c59_Var>);
inline jule::Str static__1abb90dad_iterBegin(jule::Uintptr);
inline jule::Str static__1abb91155_iterEnd(jule::Uintptr);
inline jule::Str static__1abb913ec_iterNext(jule::Uintptr);
inline jule::Str static__1abb91694_label(jule::Str*);
inline jule::Str static__1abb9193b_matchEnd(jule::Uintptr);
inline jule::Str static__1abb91bd3_caseBegin(jule::Uintptr);
struct _1abb8da48_identCoder {
	

	_1abb8da48_identCoder(void) = default;

	inline bool operator==(_1abb8da48_identCoder _other) { return true; }

	inline bool operator!=(_1abb8da48_identCoder _other) { return !this->operator==(_other); }


};
struct _1abc30436_SerializationInfo {
	jule::Str _field_Compiler;
	jule::Str _field_CompilerCommand;
	

	_1abc30436_SerializationInfo(void) = default;

	inline bool operator==(_1abc30436_SerializationInfo _other) {
		return 
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CompilerCommand == _other._field_CompilerCommand;
	}

	inline bool operator!=(_1abc30436_SerializationInfo _other) { return !this->operator==(_other); }


};
struct _1abc308ed_traitHash {
	jule::Ptr<_1aa89b647_Trait> _field_t;
	jule::Ptr<_1aa876dd6_StructIns> _field_s;
	jule::I64 _field_i = 0;
	

	_1abc308ed_traitHash(void) = default;

	inline bool operator==(_1abc308ed_traitHash _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_s == _other._field_s &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1abc308ed_traitHash _other) { return !this->operator==(_other); }


};
struct _1abc30ca5_traitCast {
	jule::Ptr<_1aa89b647_Trait> _field_t1;
	jule::Ptr<_1aa89b647_Trait> _field_t2;
	

	_1abc30ca5_traitCast(void) = default;

	inline bool operator==(_1abc30ca5_traitCast _other) {
		return 
			this->_field_t1 == _other._field_t1 &&
			this->_field_t2 == _other._field_t2;
	}

	inline bool operator!=(_1abc30ca5_traitCast _other) { return !this->operator==(_other); }


};
inline jule::Str _1abc3edb3_Str(_1abc3eb0a_customType*);
inline jule::Bool _1abc401c1_Equal(jule::Ptr<_1abc3eb0a_customType>, jule::Ptr<_1aa983872_TypeKind>);
struct _1abc3eb0a_customType {
	jule::Str _field_kind;
	

	_1abc3eb0a_customType(void) = default;

	inline bool operator==(_1abc3eb0a_customType _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1abc3eb0a_customType _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1abc40578_typeCoder> static__1abc40ab7_new(jule::Ptr<_1abc31cc8_ObjectCoder>*);
inline jule::Str _1abc40dc5_toType(_1abc40578_typeCoder*, jule::Str);
inline jule::Str _1abc411d3_prim(_1abc40578_typeCoder*, jule::Ptr<_1aa989339_Prim>);
inline jule::Str _1abc414e1_tuple(_1abc40578_typeCoder*, jule::Ptr<_1aa98e0a8_Tuple>);
inline jule::Str _1abc417ee_asSptr(_1abc40578_typeCoder*, jule::Str);
inline jule::Str _1abc41b0c_asPtr(_1abc40578_typeCoder*, jule::Str);
inline jule::Str _1abc41e1a_sptr(_1abc40578_typeCoder*, jule::Ptr<_1aa98cabd_Sptr>);
inline jule::Str _1abc42228_ptr(_1abc40578_typeCoder*, jule::Ptr<_1aa991132_Ptr>);
inline jule::Str _1abc42536_enumDecl(_1abc40578_typeCoder*, jule::Ptr<_1aa89ddca_Enum>);
inline jule::Str _1abc42844_typeEnumDecl(_1abc40578_typeCoder*, jule::Ptr<_1aa8a04c5_TypeEnum>);
inline jule::Str _1abc42b52_asSlice(_1abc40578_typeCoder*, jule::Ptr<_1aa983872_TypeKind>);
inline jule::Str _1abc42e60_slice(_1abc40578_typeCoder*, jule::Ptr<_1aa98d52a_Slc>);
inline jule::Str _1abc4326d_mapType(_1abc40578_typeCoder*, jule::Ptr<_1aa98ead1_Map>);
inline jule::Str _1abc4357b_traitIdent(_1abc40578_typeCoder*, jule::Str);
inline jule::Str _1abc43889_traitDecl(_1abc40578_typeCoder*, jule::Ptr<_1aa89b647_Trait>);
inline jule::Str _1abc43b97_structure(_1abc40578_typeCoder*, jule::Ptr<_1aa8740c0_Struct>);
inline jule::Str _1abc43ea5_structureIns(_1abc40578_typeCoder*, jule::Ptr<_1aa876dd6_StructIns>);
inline jule::Str _1abc442b3_array(_1abc40578_typeCoder*, jule::Ptr<_1aa9906c5_Arr>);
inline jule::Str _1abc448ce_paramIns(_1abc40578_typeCoder*, jule::Ptr<_1aa88b208_ParamIns>*);
inline void _1abc4500b_funcInsResult(_1abc40578_typeCoder*, jule::Str*, jule::Ptr<_1aa88c0c7_FnIns>*);
inline jule::Str _1abc45319_anonFunc(_1abc40578_typeCoder*, jule::Ptr<_1aa88c0c7_FnIns>);
inline jule::Str _1abc45627_func(_1abc40578_typeCoder*, jule::Ptr<_1aa88c0c7_FnIns>);
inline jule::Str _1abc45935_kind(_1abc40578_typeCoder*, jule::Ptr<_1aa983872_TypeKind>);
struct _1abc40578_typeCoder {
	jule::Ptr<_1abc31cc8_ObjectCoder> _field_oc;
	jule::Ptr<_1abc4ce9d_resultCoder> _field_rc;
	

	_1abc40578_typeCoder(void) = default;

	inline bool operator==(_1abc40578_typeCoder _other) {
		return 
			this->_field_oc == _other._field_oc &&
			this->_field_rc == _other._field_rc;
	}

	inline bool operator!=(_1abc40578_typeCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1abc4ce9d_resultCoder> static__1abc4d4a9_new(jule::Ptr<_1abc40578_typeCoder>*);
inline void _1abc4d7c8_ptr(_1abc4ce9d_resultCoder*, jule::Str*, jule::Ptr<_1aa991132_Ptr>);
inline void _1abc4dae7_sptr(_1abc4ce9d_resultCoder*, jule::Str*, jule::Ptr<_1aa98cabd_Sptr>);
inline void _1abc4de16_mapType(_1abc4ce9d_resultCoder*, jule::Str*, jule::Ptr<_1aa98ead1_Map>);
inline void _1abc4e235_slice(_1abc4ce9d_resultCoder*, jule::Str*, jule::Ptr<_1aa98d52a_Slc>);
inline void _1abc4e554_arr(_1abc4ce9d_resultCoder*, jule::Str*, jule::Ptr<_1aa9906c5_Arr>);
inline void _1abc4e873_func(_1abc4ce9d_resultCoder*, jule::Str*, jule::Ptr<_1aa88c0c7_FnIns>);
inline void _1abc4eb92_tup(_1abc4ce9d_resultCoder*, jule::Str*, jule::Ptr<_1aa98e0a8_Tuple>);
inline void _1abc4eeb1_codeMut(_1abc4ce9d_resultCoder*, jule::Str*, jule::Ptr<_1aa983872_TypeKind>*);
inline void _1abc502d0_codeMut1(_1abc4ce9d_resultCoder*, jule::Str*, jule::Ptr<_1aa983872_TypeKind>*);
inline jule::Str _1abc505aa_code(_1abc4ce9d_resultCoder*, jule::Ptr<_1aa983872_TypeKind>*);
struct _1abc4ce9d_resultCoder {
	jule::Ptr<_1abc40578_typeCoder> _field_tc;
	

	_1abc4ce9d_resultCoder(void) = default;

	inline bool operator==(_1abc4ce9d_resultCoder _other) {
		return 
			this->_field_tc == _other._field_tc;
	}

	inline bool operator!=(_1abc4ce9d_resultCoder _other) { return !this->operator==(_other); }


};
inline jule::Str _1bb4030e4_Name(_1bb402d08_Flag*);
inline jule::Str _1bb403226_What(_1bb402d08_Flag*);
inline void _1bb403369_Reset(_1bb402d08_Flag*);
inline jule::I32 _1bb4034ac_Short(_1bb402d08_Flag*);
struct _1bb402d08_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::I64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::I64> _field_data;
	

	_1bb402d08_Flag(void) = default;

	inline bool operator==(_1bb402d08_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1bb402d08_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1bb406515_Name(_1bb406977_Flag*);
inline jule::Str _1bb406c63_What(_1bb406977_Flag*);
inline void _1bb406d95_Reset(_1bb406977_Flag*);
inline jule::I32 _1bb406ec7_Short(_1bb406977_Flag*);
struct _1bb406977_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::U64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::U64> _field_data;
	

	_1bb406977_Flag(void) = default;

	inline bool operator==(_1bb406977_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1bb406977_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1bb409ccc_Name(_1bb40a23e_Flag*);
inline jule::Str _1bb40a52a_What(_1bb40a23e_Flag*);
inline void _1bb40a65c_Reset(_1bb40a23e_Flag*);
inline jule::I32 _1bb40a78e_Short(_1bb40a23e_Flag*);
struct _1bb40a23e_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::F64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::F64> _field_data;
	

	_1bb40a23e_Flag(void) = default;

	inline bool operator==(_1bb40a23e_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1bb40a23e_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1bb40d5d8_Name(_1bb40da4a_Flag*);
inline jule::Str _1bb40dd36_What(_1bb40da4a_Flag*);
inline void _1bb40de68_Reset(_1bb40da4a_Flag*);
inline jule::I32 _1bb40e09a_Short(_1bb40da4a_Flag*);
struct _1bb40da4a_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Bool _field_default = false;
	jule::Str _field_what;
	jule::Ptr<jule::Bool> _field_data;
	

	_1bb40da4a_Flag(void) = default;

	inline bool operator==(_1bb40da4a_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1bb40da4a_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1bb411da0_Name(_1bb412312_Flag*);
inline jule::Str _1bb4125ed_What(_1bb412312_Flag*);
inline void _1bb412730_Reset(_1bb412312_Flag*);
inline jule::I32 _1bb412862_Short(_1bb412312_Flag*);
struct _1bb412312_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Str _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Str> _field_data;
	

	_1bb412312_Flag(void) = default;

	inline bool operator==(_1bb412312_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1bb412312_Flag _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1abca969c_FlagSet> static__1abca9988_New(void);
inline jule::Trait<_1abca7c3e_CommonFlag> _1abca9e1c_FindFlag(_1abca969c_FlagSet*, jule::Str);
inline jule::Trait<_1abca7c3e_CommonFlag> _1abcaa22a_FindFlagShort(_1abca969c_FlagSet*, jule::I32);
inline jule::Slice<jule::Trait<_1abca7c3e_CommonFlag>> _1abcaa48e_Flags(_1abca969c_FlagSet*);
inline jule::Exceptional<jule::Slice<jule::Str>> _1abcaa79c_Parse(_1abca969c_FlagSet*, jule::Slice<jule::Str>);
inline void _1abcaa978_Reset(_1abca969c_FlagSet*);
inline jule::Ptr<_1bb412312_Flag> _1bb5b4c01_addFlagCommon(_1abca969c_FlagSet*, jule::Str, jule::I32, jule::Str);
inline jule::Ptr<_1bb40da4a_Flag> _1bb5bd545_addFlagCommon(_1abca969c_FlagSet*, jule::Str, jule::I32, jule::Str);
inline void _1bb5b2b88_AddVar(_1abca969c_FlagSet*, jule::Ptr<jule::Str>, jule::Str, jule::I32, jule::Str);
inline void _1bb5bb510_AddVar(_1abca969c_FlagSet*, jule::Ptr<jule::Bool>, jule::Str, jule::I32, jule::Str);
struct _1abca969c_FlagSet {
	jule::Slice<jule::Trait<_1abca7c3e_CommonFlag>> _field_flags;
	

	_1abca969c_FlagSet(void) = default;


};
inline __jule_tuple_i64__jule_tuple_bool _1bb42a490_parseInteger(_1abcabd75_argParser*, jule::Str*, jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)>);
inline __jule_tuple_u64__jule_tuple_bool _1bb433564_parseInteger(_1abcabd75_argParser*, jule::Str*, jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)>);
inline jule::Str _1abcac66c_getData(_1abcabd75_argParser*);
inline jule::VoidExceptional _1abcac8ae_processFlag(_1abcabd75_argParser*, jule::Trait<_1abca7c3e_CommonFlag>*);
inline jule::VoidExceptional _1abcacb34_singleDash(_1abcabd75_argParser*, jule::Str*);
inline jule::VoidExceptional _1abcacda9_doubleDash(_1abcabd75_argParser*, jule::Str*);
inline jule::VoidExceptional _1abcad085_tryArg(_1abcabd75_argParser*);
inline jule::VoidExceptional _1abcad261_parse(_1abcabd75_argParser*);
struct _1abcabd75_argParser {
	_1abca969c_FlagSet _field_set;
	jule::Slice<jule::Str> _field_args;
	jule::Slice<jule::Str> _field_content;
	jule::I64 _field_i = 0;
	

	_1abcabd75_argParser(void) = default;


};
inline jule::Ptr<_1abc31cc8_ObjectCoder> static__1abc321e6_New(jule::Ptr<_1ab17e039_IR>*, _1abc30436_SerializationInfo);
inline void _1abc3246b_write(jule::Ptr<_1abc31cc8_ObjectCoder>, jule::Str);
inline void _1abc32647_addIndent(jule::Ptr<_1abc31cc8_ObjectCoder>);
inline void _1abc32823_doneIndent(jule::Ptr<_1abc31cc8_ObjectCoder>);
inline void _1abc329ee_indent(jule::Ptr<_1abc31cc8_ObjectCoder>);
inline jule::I64 _1abc32d0c_findAnyType(jule::Ptr<_1abc31cc8_ObjectCoder>, jule::Ptr<_1aa983872_TypeKind>*);
inline jule::I64 _1abc3311a_pushAnyType(jule::Ptr<_1abc31cc8_ObjectCoder>, jule::Ptr<_1aa983872_TypeKind>);
inline void _1abc33390_pushResultIns(jule::Ptr<_1abc31cc8_ObjectCoder>, jule::Ptr<_1aa88c0c7_FnIns>*);
inline void _1abc33615_pushResult(jule::Ptr<_1abc31cc8_ObjectCoder>, jule::Ptr<_1aa889426_Fn>*);
inline jule::I64 _1abc339bc_findTypeOffsetS(_1abc31cc8_ObjectCoder*, jule::Ptr<_1aa89b647_Trait>, jule::Ptr<_1aa876dd6_StructIns>);
inline jule::I64 _1abc33d74_findTypeOffset(_1abc31cc8_ObjectCoder*, jule::Ptr<_1aa89b647_Trait>, jule::Ptr<_1aa983872_TypeKind>);
inline void _1abc34193_pushAndWriteMaskMapper(jule::Ptr<_1abc31cc8_ObjectCoder>, jule::Ptr<_1aa89b647_Trait>, jule::Ptr<_1aa89b647_Trait>);
inline void _1abc34418_locInfo(jule::Ptr<_1abc31cc8_ObjectCoder>, jule::Ptr<_1db944d0d_Token>*);
inline void _1abc345e4_head(jule::Ptr<_1abc31cc8_ObjectCoder>);
inline void _1abc347c0_links(jule::Ptr<_1abc31cc8_ObjectCoder>);
inline void _1abc34a45_prepareStructure(_1abc31cc8_ObjectCoder*, jule::Ptr<_1aa8740c0_Struct>*);
inline void _1abc34c21_prepareStructures(jule::Ptr<_1abc31cc8_ObjectCoder>);
inline void _1abc34e96_iterPackages(jule::Ptr<_1abc31cc8_ObjectCoder>, jule::Fn<void(jule::Ptr<_1aa8d3b57_Package>*)>);
inline void _1abc35172_buildTraitMap(jule::Ptr<_1abc31cc8_ObjectCoder>);
inline void _1abc3534d_traitDecls(jule::Ptr<_1abc31cc8_ObjectCoder>);
inline void _1abc355c3_structurePlainDecl(jule::Ptr<_1abc31cc8_ObjectCoder>, jule::Ptr<_1aa8740c0_Struct>*);
inline void _1abc3579e_structurePlainDecls(jule::Ptr<_1abc31cc8_ObjectCoder>);
inline void _1abc35a24_fieldDecl(jule::Ptr<_1abc31cc8_ObjectCoder>, jule::Ptr<_1aa8763e1_FieldIns>*);
inline void _1abc35c99_structureDestructor(jule::Ptr<_1abc31cc8_ObjectCoder>, jule::Ptr<_1aa876dd6_StructIns>*);
inline void _1abc36041_structureDeriveDefsDecls(jule::Ptr<_1abc31cc8_ObjectCoder>, jule::Ptr<_1aa876dd6_StructIns>*);
inline void _1abc36371_structureOperatorEq(jule::Ptr<_1abc31cc8_ObjectCoder>, jule::Str*, jule::Ptr<_1aa876dd6_StructIns>*);
inline void _1abc36690_structureOperatorNotEq(jule::Ptr<_1abc31cc8_ObjectCoder>, jule::Str*, jule::Ptr<_1aa876dd6_StructIns>*);
inline void _1abc36a58_structureOperator(jule::Ptr<_1abc31cc8_ObjectCoder>, jule::Str*, jule::Ptr<_1aa88c0c7_FnIns>*, jule::Str);
inline void _1abc36ccd_structureOperators(jule::Ptr<_1abc31cc8_ObjectCoder>, jule::Ptr<_1aa876dd6_StructIns>*);
inline void _1abc37053_structureInsDecl(jule::Ptr<_1abc31cc8_ObjectCoder>, jule::Ptr<_1aa876dd6_StructIns>*);
inline void _1abc372c8_structureDecl(jule::Ptr<_1abc31cc8_ObjectCoder>, jule::Ptr<_1aa8740c0_Struct>*);
inline void _1abc374a4_structureDecls(jule::Ptr<_1abc31cc8_ObjectCoder>);
inline void _1abc37729_paramsDecls(jule::Ptr<_1abc31cc8_ObjectCoder>, jule::Slice<jule::Ptr<_1aa88b208_ParamIns>>*);
inline void _1abc37a48_funcHead(jule::Ptr<_1abc31cc8_ObjectCoder>, jule::Ptr<_1aa88c0c7_FnIns>*, jule::Bool);
inline void _1abc37d67_funcDeclIns(jule::Ptr<_1abc31cc8_ObjectCoder>, jule::Ptr<_1aa88c0c7_FnIns>*, jule::Bool);
inline void _1abc38186_funcDecl(jule::Ptr<_1abc31cc8_ObjectCoder>, jule::Ptr<_1aa889426_Fn>*, jule::Bool);
inline void _1abc3854e_funcDeclTrait(jule::Ptr<_1abc31cc8_ObjectCoder>, jule::Ptr<_1aa89b647_Trait>*, jule::Ptr<_1aa889426_Fn>*, jule::Bool);
inline void _1abc3872a_funcDecls(jule::Ptr<_1abc31cc8_ObjectCoder>);
inline void _1abc38a49_traitDataTypeMethods(jule::Ptr<_1abc31cc8_ObjectCoder>, jule::Ptr<_1aa89b647_Trait>*, jule::Ptr<_1aa89b647_Trait>*);
inline void _1abc38c25_traitDataTypes(jule::Ptr<_1abc31cc8_ObjectCoder>);
inline void _1abc38e9a_paramIns(jule::Ptr<_1abc31cc8_ObjectCoder>, jule::Ptr<_1aa88b208_ParamIns>*);
inline void _1abc39220_paramsIns(jule::Ptr<_1abc31cc8_ObjectCoder>, jule::Slice<jule::Ptr<_1aa88b208_ParamIns>>*);
inline void _1abc3953e_varInitExpr(jule::Ptr<_1abc31cc8_ObjectCoder>, jule::Ptr<_1aa908c59_Var>*, jule::Fn<void(void)>);
inline void _1abc397b4_var(jule::Ptr<_1abc31cc8_ObjectCoder>, jule::Ptr<_1aa908c59_Var>);
inline void _1abc39a39_funcIns(jule::Ptr<_1abc31cc8_ObjectCoder>, jule::Ptr<_1aa88c0c7_FnIns>*);
inline void _1abc39cae_func(jule::Ptr<_1abc31cc8_ObjectCoder>, jule::Ptr<_1aa889426_Fn>*);
inline void _1abc3a0cd_funcTrait(jule::Ptr<_1abc31cc8_ObjectCoder>, jule::Ptr<_1abc308ed_traitHash>*, jule::Ptr<_1aa889426_Fn>*);
inline void _1abc3a3ec_traitWrapper(jule::Ptr<_1abc31cc8_ObjectCoder>, jule::Ptr<_1aa889426_Fn>*, jule::Ptr<_1abc308ed_traitHash>*);
inline void _1abc3a5c8_traitWrappers(jule::Ptr<_1abc31cc8_ObjectCoder>);
inline void _1abc3a8e7_traitDataMethods(jule::Ptr<_1abc31cc8_ObjectCoder>, jule::Ptr<_1aa89b647_Trait>*, jule::Ptr<_1abc308ed_traitHash>*);
inline void _1abc3ac16_traitData(jule::Ptr<_1abc31cc8_ObjectCoder>, jule::Ptr<_1abc308ed_traitHash>*, jule::Ptr<_1aa89b647_Trait>*);
inline void _1abc3ade2_traitDatas(jule::Ptr<_1abc31cc8_ObjectCoder>);
inline void _1abc3b0bd_globals(jule::Ptr<_1abc31cc8_ObjectCoder>);
inline void _1abc3b299_decls(jule::Ptr<_1abc31cc8_ObjectCoder>);
inline void _1abc3b51e_structureMethods(jule::Ptr<_1abc31cc8_ObjectCoder>, jule::Ptr<_1aa876dd6_StructIns>*);
inline void _1abc3b794_structureDeriveDefs(jule::Ptr<_1abc31cc8_ObjectCoder>, jule::Ptr<_1aa876dd6_StructIns>*);
inline void _1abc3ba19_structureOstream(jule::Ptr<_1abc31cc8_ObjectCoder>, jule::Ptr<_1aa876dd6_StructIns>*);
inline void _1abc3bc8e_structureIns(jule::Ptr<_1abc31cc8_ObjectCoder>, jule::Ptr<_1aa876dd6_StructIns>*);
inline void _1abc3c014_structure(jule::Ptr<_1abc31cc8_ObjectCoder>, jule::Ptr<_1aa8740c0_Struct>*);
inline void _1abc3c1e0_structures(jule::Ptr<_1abc31cc8_ObjectCoder>);
inline void _1abc3c3bb_funcs(jule::Ptr<_1abc31cc8_ObjectCoder>);
inline void _1abc3c641_pushInit(jule::Ptr<_1abc31cc8_ObjectCoder>, jule::Ptr<_1aa8d3b57_Package>*);
inline void _1abc3c81c_initCaller(jule::Ptr<_1abc31cc8_ObjectCoder>);
inline void _1abc3c9e8_end(jule::Ptr<_1abc31cc8_ObjectCoder>);
inline void _1abc3cbc4_serializeHead(jule::Ptr<_1abc31cc8_ObjectCoder>);
inline void _1abc3cda0_Serialize(jule::Ptr<_1abc31cc8_ObjectCoder>);
struct _1abc31cc8_ObjectCoder {
	jule::Str _field_Obj;
	jule::Slice<jule::Str> _field_resultDecls;
	jule::Str _field_anyObj;
	jule::Ptr<_1ab17e039_IR> _field_ir;
	_1abc30436_SerializationInfo _field_info;
	jule::Slice<jule::Ptr<_1abc308ed_traitHash>> _field_tmap;
	jule::Str _field_indentBuffer;
	jule::Map<jule::Str,jule::Bool> _field_resultMap;
	jule::Slice<jule::Ptr<_1aa983872_TypeKind>> _field_anyTypeMap;
	jule::Slice<_1abc30ca5_traitCast> _field_traitCastMap;
	jule::Ptr<_1abb7a381_exprCoder> _field_ec;
	jule::Ptr<_1abb71e38_scopeCoder> _field_sc;
	jule::Ptr<_1abc40578_typeCoder> _field_tc;
	jule::Ptr<_1abb89b21_deriveCoder> _field_dc;
	jule::I64 _field_headPos = 0;
	jule::I64 _field_declPos = 0;
	

	_1abc31cc8_ObjectCoder(void) = default;


};
inline jule::Ptr<_1ab320708_ObjectDeadCode> static__1ab320bd1_new(jule::Ptr<_1ab17e039_IR>*);
inline jule::Bool _1bacb57ed_isLive(jule::Ptr<_1ab320708_ObjectDeadCode>, jule::Ptr<_1aa89b647_Trait>*);
inline jule::Bool _1bacba539_isLive(jule::Ptr<_1ab320708_ObjectDeadCode>, jule::Ptr<_1aa88c0c7_FnIns>*);
inline jule::Bool _1babc65dd_isLive(jule::Ptr<_1ab320708_ObjectDeadCode>, jule::Ptr<_1aa876dd6_StructIns>*);
inline jule::Bool _1babcc171_isLive(jule::Ptr<_1ab320708_ObjectDeadCode>, jule::Ptr<_1aa908c59_Var>*);
inline void _1bacb5b50_pushLive(jule::Ptr<_1ab320708_ObjectDeadCode>, jule::Ptr<_1aa89b647_Trait>);
inline void _1babc182a_pushLive(jule::Ptr<_1ab320708_ObjectDeadCode>, jule::Ptr<_1aa88c0c7_FnIns>);
inline void _1babc57a7_pushLive(jule::Ptr<_1ab320708_ObjectDeadCode>, jule::Ptr<_1aa876dd6_StructIns>);
inline void _1babcc4c3_pushLive(jule::Ptr<_1ab320708_ObjectDeadCode>, jule::Ptr<_1aa908c59_Var>);
inline void _1ab352d89_setReferencesAsLive(jule::Ptr<_1ab320708_ObjectDeadCode>, jule::Ptr<_1aa890031_ReferenceStack>*);
inline void _1ab35310e_inits(jule::Ptr<_1ab320708_ObjectDeadCode>, jule::Ptr<_1aa8d3b57_Package>*);
inline void _1ab353384_collectLivePackage(jule::Ptr<_1ab320708_ObjectDeadCode>, jule::Ptr<_1aa8d3b57_Package>*);
inline void _1ab353560_collectLive(jule::Ptr<_1ab320708_ObjectDeadCode>);
inline void _1ab3537d5_removeDeadGlobals(jule::Ptr<_1ab320708_ObjectDeadCode>, jule::Slice<jule::Ptr<_1aa908c59_Var>>*);
inline void _1ab353a5a_removeDeadFns(jule::Ptr<_1ab320708_ObjectDeadCode>, jule::Slice<jule::Ptr<_1aa889426_Fn>>*);
inline void _1ab353cd0_removeDeadStructs(jule::Ptr<_1ab320708_ObjectDeadCode>, jule::Slice<jule::Ptr<_1aa8740c0_Struct>>*);
inline void _1ab354055_removeDeadTraits(jule::Ptr<_1ab320708_ObjectDeadCode>, jule::Slice<jule::Ptr<_1aa89b647_Trait>>*);
inline void _1ab3542ca_removeDeadsFile(jule::Ptr<_1ab320708_ObjectDeadCode>, jule::Ptr<_1aa94d51d_SymbolTable>*);
inline void _1ab354550_removeDeadsPackage(jule::Ptr<_1ab320708_ObjectDeadCode>, jule::Ptr<_1aa8d3b57_Package>*);
inline void _1ab35472b_removeDeads(jule::Ptr<_1ab320708_ObjectDeadCode>);
inline void _1ab354907_elimanate(jule::Ptr<_1ab320708_ObjectDeadCode>);
struct _1ab320708_ObjectDeadCode {
	_1ab320340_liveTable _field_live;
	jule::Ptr<_1ab17e039_IR> _field_ir;
	

	_1ab320708_ObjectDeadCode(void) = default;


};
inline __jule_tuple_x_1ab17e039_IR__jule_tuple_s_1d9d938bd_Log static__1ab17e4bd_Build(jule::Str, jule::I64);
inline void _1ab17e91e_appendStructs(_1ab17e039_IR*, jule::Ptr<_1aa8d3b57_Package>*, jule::Slice<jule::Ptr<_1aa8740c0_Struct>>*);
inline jule::Slice<jule::Ptr<_1aa8740c0_Struct>> _1ab17eb83_GetAllStructures(_1ab17e039_IR*);
inline void _1ab17eea2_appendGlobals(_1ab17e039_IR*, jule::Ptr<_1aa8d3b57_Package>*, jule::Slice<jule::Ptr<_1aa908c59_Var>>*);
inline jule::Slice<jule::Ptr<_1aa908c59_Var>> _1ab180216_GetAllGlobals(_1ab17e039_IR*);
inline void _1ab1803e2_Order(_1ab17e039_IR*);
struct _1ab17e039_IR {
	jule::Str _field_Root;
	jule::Slice<jule::Str> _field_Passes;
	jule::Ptr<_1aa8d3b57_Package> _field_Main;
	jule::Slice<jule::Ptr<_1aa8d101c_ImportInfo>> _field_Used;
	_1ab18157a_OrderedDefines _field_Ordered;
	

	_1ab17e039_IR(void) = default;


};
inline jule::Str _1aa87728d_Str(_1aa876dd6_StructIns*);
inline jule::Bool _1aa87759b_Equal(jule::Ptr<_1aa876dd6_StructIns>, jule::Ptr<_1aa983872_TypeKind>);
inline jule::Bool _1aa8779ca_Same(_1aa876dd6_StructIns*, jule::Ptr<_1aa876dd6_StructIns>);
inline jule::Ptr<_1aa889426_Fn> _1aa877d82_FindMethod(_1aa876dd6_StructIns*, jule::Str, jule::Bool);
inline jule::Ptr<_1aa8763e1_FieldIns> _1aa878190_FindField(_1aa876dd6_StructIns*, jule::Str);
inline jule::Ptr<_1aa908c59_Var> _1aa87849d_FindStatic(_1aa876dd6_StructIns*, jule::Str);
struct _1aa876dd6_StructIns {
	jule::Bool _field_Checked = false;
	jule::Ptr<_1aa8740c0_Struct> _field_Decl;
	jule::Slice<jule::Ptr<_1aa9820e0_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1aa8763e1_FieldIns>> _field_Fields;
	jule::Slice<jule::Ptr<_1aa908c59_Var>> _field_Statics;
	jule::Slice<jule::Ptr<_1aa889426_Fn>> _field_Methods;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Comparable = false;
	jule::Ptr<_1aa890031_ReferenceStack> _field_Refers;
	_1aa8732ab_Operators _field_Operators;
	

	_1aa876dd6_StructIns(void) = default;


};
inline jule::Ptr<_1d9e31494_Cmd> static__1d9e318e5_New(jule::Str);
inline jule::VoidExceptional _1d9e31ac1_Spawn(_1d9e31494_Cmd*);
inline jule::VoidExceptional _1d9e31c9c_Kill(_1d9e31494_Cmd*);
inline jule::Exceptional<jule::I64> _1d9e32011_Wait(_1d9e31494_Cmd*);
inline jule::VoidExceptional _1d9e355ec_spawn(_1d9e31494_Cmd*);
inline jule::VoidExceptional _1d9e357c8_kill(_1d9e31494_Cmd*);
inline jule::Exceptional<jule::I64> _1d9e35a3c_wait(_1d9e31494_Cmd*);
struct _1d9e31494_Cmd {
	_1d9e35278_cmdAttrs _field_attrs;
	jule::Str _field_path;
	jule::Slice<jule::Str> _field_Args;
	jule::Slice<jule::Str> _field_Env;
	

	_1d9e31494_Cmd(void) = default;


};
inline jule::I32 _203d2e9a5_DecodeRune(jule::I32, jule::I32);
inline __jule_tuple_i32__jule_tuple_i32 _203d2ec4c_EncodeRune(jule::I32);
inline jule::Slice<jule::U16> _203d3006b_Encode(jule::Slice<jule::I32>);
inline jule::Slice<jule::I32> _203d30313_Decode(jule::Slice<jule::U16>);
inline jule::Slice<jule::U16> _203d30621_AppendRune(jule::Slice<jule::U16>, jule::I32);
inline jule::Slice<jule::U16> _203d30852_Utf16FromStr(jule::Str);
inline jule::Str _203d30b0a_Utf16ToStr(jule::Slice<jule::U16>);
inline jule::Str _203d30da2_U16PtrToStr(jule::U16*);
inline jule::I64 _202c5b1b8_GetLastErrno(void);
inline jule::Uintptr _203d5878c_GetStdHandle(jule::Uintptr);
inline jule::Bool _203d58a34_CloseHandle(jule::Uintptr);
inline jule::I64 _203d58d75_Wstat(jule::U16*, struct _stat*);
inline jule::I64 _203d59260_Wopen(jule::U16*, jule::I64, jule::I64);
inline jule::U32 _203d5945d_GetLastError(void);
inline jule::U32 _203d5979e_GetCurrentDirectory(jule::U32, jule::U16*);
inline jule::Bool _203d59cdd_DeleteFile(jule::U16*);
inline jule::Bool _203d5a085_CreateDirectory(jule::U16*);
inline jule::Bool _203d5a32c_RemoveDirectory(jule::U16*);
inline jule::U32 _203d5a7b1_GetFullPathName(jule::U16*, jule::U32, jule::U16*, jule::U16**);
inline jule::Bool _203d5ab02_GetConsoleMode(jule::Uintptr, jule::I64*);
inline jule::Bool _203d5b1b8_SetConsoleMode(jule::Uintptr, jule::I64);
inline jule::Bool _203d5b6b3_WriteConsole(jule::Uintptr, jule::U16*, jule::I64, jule::I64*, void*);
inline jule::Bool _203d5bb47_ReadConsole(jule::Uintptr, jule::U16*, jule::I64, jule::I64*);
inline jule::Uintptr _203d5c186_FindFirstFile(jule::U16*, WIN32_FIND_DATAW*);
inline jule::I64 _203d5c4c7_FindNextFile(jule::Uintptr, WIN32_FIND_DATAW*);
inline jule::I64 _203d5c76e_FindClose(jule::Uintptr);
inline jule::I64 _203d5e298_Seek(jule::I64, jule::I64, jule::I64);
inline jule::I64 _203d5e683_Read(jule::I64, void*, jule::U64);
inline jule::I64 _203d5ea07_Close(jule::I64);
inline jule::I64 _203d5ede2_Write(jule::I64, void*, jule::U64);
inline void _203d60101_Exit(jule::I64);
inline jule::Slice<jule::U8> _203d7addb_Stobs(jule::Str*);
inline void _203d7b590_PushToStrBuffer(jule::Str*, jule::Slice<jule::U8>);
inline __jule_tuple_i32__jule_tuple_int _203e638ec_DecodeRune(jule::Slice<jule::U8>);
inline __jule_tuple_i32__jule_tuple_int _203e63c1b_DecodeRuneStr(jule::Str);
inline __jule_tuple_i32__jule_tuple_int _203e63eb3_DecodeLastRune(jule::Slice<jule::U8>);
inline jule::I64 _203e64502_RuneLen(jule::I32);
inline jule::I64 _203e64920_EncodeRune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _203e64c61_AppendRune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _203e650a2_appendRuneNonASCII(jule::Slice<jule::U8>, jule::I32);
inline jule::I64 _203e655e1_RuneCountStr(jule::Str);
inline jule::Bool _203e65888_RuneStart(jule::U8);
inline jule::I64 _2040171dc_getLastOsErrorWindows(void);
inline jule::Slice<jule::Str> _204018210_Args(void);
inline jule::Exceptional<jule::Str> _204018683_WorkingDir(void);
inline jule::Exceptional<jule::Str> _204019563_getwd(void);
inline jule::Bool _1d9c55c25_IsLetter(jule::I32);
inline jule::Bool _1d9cbd6e9_is16(jule::Slice<_1d9cbbb37_Range16>, jule::U16);
inline jule::Bool _1d9cbda3a_is32(jule::Slice<_1d9cbc0aa_Range32>, jule::U32);
inline jule::Bool _1d9cbe2cc_isExcludingLatin(jule::Ptr<_1d9cbc52d_RangeTable>, jule::I32);
inline jule::Bool _1d9cbe574_IsUpper(jule::I32);
inline jule::I64 _1d9ce0144_FindByte(jule::Slice<jule::U8>, jule::U8);
inline jule::I64 _1d9d02464_FindLastByte(jule::Slice<jule::U8>, jule::U8);
inline jule::I64 _1d9d0272d_FindByteStr(jule::Str*, jule::U8);
inline jule::I64 _1d9d02a6e_FindLastByteStr(jule::Str*, jule::U8);
inline jule::Str _1d9d02e37_Repeat(jule::Str, jule::I64);
inline jule::Bool _1d9d03366_hasPrefix(jule::Str*, jule::Str*, jule::I64);
inline jule::Bool _1d9d036a7_HasPrefix(jule::Str, jule::Str);
inline jule::Bool _1d9d03b19_hasSuffix(jule::Str*, jule::Str*, jule::I64);
inline jule::Bool _1d9d03e27_HasSuffix(jule::Str, jule::Str);
inline jule::I64 _1d9d04312_FindAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _1d9d04b4d_FindLastAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _1d9d04e8e_FindLast(jule::Str, jule::Str);
inline jule::I64 _1d9d06237_findRune(jule::Slice<jule::U8>*, jule::I32);
inline jule::I64 _1d9d06a73_FindLastByte(jule::Str, jule::U8);
inline jule::I64 _1d9d07887_FindAny(jule::Str, jule::Str);
inline jule::Slice<jule::Str> _1d9d080b3_Split(jule::Str, jule::Str, jule::I64);
inline jule::Bool _1d9d08404_Contains(jule::Str, jule::Str);
inline jule::Bool _1d9d08dc7_ContainsAny(jule::Str, jule::Str);
inline jule::I64 _1d9d09218_Count(jule::Str, jule::Str);
inline jule::Str _1d9d0969c_Replace(jule::Str, jule::Str, jule::Str, jule::I64);
inline void _1d9d06710_trimLeft(jule::Slice<jule::U8>*, jule::Slice<jule::U8>*);
inline jule::Str _1d9d0a758_TrimLeft(jule::Str, jule::Str);
inline void _1d9d0aa11_trimRight(jule::Slice<jule::U8>*, jule::Slice<jule::U8>*);
inline jule::Str _1d9d0b193_Trim(jule::Str, jule::Str);
inline jule::Bool _203ee3350_IsPathSep(jule::U8);
inline jule::Bool _203ee3619_isSlash(jule::U8);
inline jule::U8 _203ee38b1_toUpper(jule::U8);
inline jule::I64 _203ee3e77_volumeNameLen(jule::Str);
inline __jule_tuple_str__jule_tuple_str__jule_tuple_bool _203ee421e_cutPath(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _203ee44b6_fullPath(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _203ee483a_abs(jule::Str);
inline jule::Str _203ee4ad2_join(jule::Slice<jule::Str>);
inline jule::Str _1d9d0c738_Clean(jule::Str);
inline jule::Str _1d9d0ccbb_FromSlash(jule::Str);
inline jule::Str _1d9d0d0da_Join(jule::Slice<jule::Str>);
inline jule::Str _1d9d0d382_Ext(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _1d9d0d629_Abs(jule::Str);
inline jule::Str _1d9d0d8c1_Base(jule::Str);
inline jule::Str _1d9d0dc45_Dir(jule::Str);
inline jule::Str _1d9d0dedc_VolumeName(jule::Str);
inline jule::I64 _203d70221_getLastFsError(void);
inline jule::Bool _203e675c1_isConsoleHandle(jule::Uintptr);
inline void _1d9e35da0_appendEscapeArg(jule::Str*, jule::Str);
inline jule::Str _1d9e36147_makeCmdLine(jule::Slice<jule::Str>);
inline jule::Exceptional<jule::Slice<jule::U16>> _1d9e364ee_createEnvBlock(jule::Slice<jule::Str>);
inline jule::I64 _1d9e374cd_processErrorFromCode(jule::I64);
inline jule::I64 _1d9e376dc_getLastProcessError(void);
inline void _1d9e37e90_Exit(jule::I64);
inline jule::Str _1d9e3818d_Executable(void);
inline jule::Bool _1d9d85e87_IsStdHeaderPath(jule::Str);
inline jule::Bool _1d9d86240_IsValidHeaderExt(jule::Str);
inline jule::Bool _1d9d864d7_IsValidCppExt(jule::Str);
inline jule::Str _1d9d93d0d_Logf(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1d9d940e9_argToStr(jule::Any);
inline jule::I64 _1d9d94391_findNextFmt(jule::Str);
inline jule::Str _1d9d94726_applyFmt(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1d9d9579e_IsTopDirective(jule::Str);
inline jule::Bool _1d9d96bce_IsWindows(jule::Str);
inline jule::Bool _1d9d96e87_IsDarwin(jule::Str);
inline jule::Bool _1d9d9722e_IsLinux(jule::Str);
inline jule::Bool _1d9d9754d_IsI386(jule::Str);
inline jule::Bool _1d9d977e5_IsAmd64(jule::Str);
inline jule::Bool _1d9d97a8c_IsArm64(jule::Str);
inline jule::Bool _1d9d97d34_IsUnix(jule::Str);
inline jule::Bool _1d9d981a8_Is32Bit(jule::Str);
inline jule::Bool _1d9d98450_Is64Bit(jule::Str);
inline void _1d9e39425_init(void);
inline jule::Bool _1db945517_IsUnaryOp(jule::Str);
inline jule::Bool _1db945803_IsBinOp(jule::Str);
inline jule::Bool _1db945db9_IsStr(jule::Str);
inline jule::Bool _1db946161_IsRawStr(jule::Str);
inline jule::Bool _1db946408_IsRune(jule::Str);
inline jule::Bool _1db946a24_IsBool(jule::Str);
inline jule::Bool _1db946cbb_IsFloat(jule::Str);
inline jule::Bool _1db947063_IsNum(jule::Str);
inline jule::Bool _1db9475a2_IsIgnoreIdent(jule::Str);
inline jule::Bool _1db947849_IsAnonIdent(jule::Str);
inline jule::Bool _1db947d88_IsSpace(jule::I32);
inline jule::Bool _1db9482d9_IsLetter(jule::I32);
inline jule::Bool _1db948828_IsDecimal(jule::U8);
inline jule::Bool _1db948ac0_IsBinary(jule::U8);
inline jule::Bool _1db948d67_IsOctal(jule::U8);
inline jule::Bool _1db94910e_IsHex(jule::U8);
inline jule::Bool _1db9493a6_IsAssign(jule::U64);
inline jule::Bool _1db94964d_IsPostfixOp(jule::Str);
inline jule::Bool _1db9498e5_IsAssignOp(jule::Str);
inline jule::Ptr<_1db94a198_File> _1db94b6c7_NewFileSet(jule::Str);
inline _1d9d938bd_Log _1db94ce6a_makeErr(jule::I64, jule::I64, jule::Ptr<_1db94a198_File>*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1db94d300_bytesHasPrefix(jule::Slice<jule::U8>*, jule::Str);
inline jule::Str _1db94d641_floatFmtE(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1db94d9c6_floatFmtP(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1db94dd17_floatFmtDotnp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1db94e158_floatFmtDotfp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1db94e499_floatFmtDotp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1db94e8ea_floatNum(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1db94eb92_commonNum(jule::Slice<jule::U8>*);
inline jule::Str _1db94ee39_binaryNum(jule::Slice<jule::U8>*);
inline jule::Bool _1db95027a_isFloatFmtE(jule::U8, jule::I64);
inline jule::Bool _1db9505bb_isFloatFmtP(jule::U8, jule::I64);
inline jule::Bool _1db95090c_isFloatFmtDotnp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Bool _1db950c4d_isFloatFmtDotp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Bool _1db95108e_isFloatFmtDotfp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1db9514e0_octalNum(jule::Slice<jule::U8>*);
inline jule::Str _1db951787_hexNum(jule::Slice<jule::U8>*);
inline jule::Str _1db951ac8_hexEscape(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1db951d70_bigUnicodePointEscape(jule::Slice<jule::U8>*);
inline jule::Str _1db952139_littleUnicodePointEscape(jule::Slice<jule::U8>*);
inline jule::Str _1db9522e3_hexByteEscape(jule::Slice<jule::U8>*);
inline jule::Str _1db952579_byteEscape(jule::Slice<jule::U8>*);
inline jule::Slice<_1d9d938bd_Log> _1db957073_Lex(jule::Ptr<_1db94a198_File>, jule::I64);
inline jule::I64 _1dc5567ed_LeadingZeros64(jule::U64);
inline jule::I64 _1dc557733_TrailingZeros(jule::U64);
inline jule::I64 _1dc558129_TrailingZeros32(jule::U32);
inline jule::I64 _1dc5583c1_TrailingZeros64(jule::U64);
inline jule::I64 _1dc55d9d1_Len32(jule::U32);
inline jule::I64 _1dc55dc78_Len64(jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _1dc55e938_Add64(jule::U64, jule::U64, jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _1dc5610bb_Mul64(jule::U64, jule::U64);
inline jule::U32 _1dc483472_F32Bits(jule::F32);
inline jule::F32 _1dc48375d_F32FromBits(jule::U32);
inline jule::U64 _1dc483a05_F64Bits(jule::F64);
inline jule::F64 _1dc483d24_F64FromBits(jule::U64);
inline __jule_tuple_f64__jule_tuple_int _1dc486310_Frexp(jule::F64);
inline jule::F64 _1dc5680a1_NaN(void);
inline jule::Bool _1dc56838c_IsNaN(jule::F64);
inline jule::F64 _1dc568634_Inf(jule::I64);
inline jule::Bool _1dc568942_IsInf(jule::F64, jule::I64);
inline __jule_tuple_f64__jule_tuple_int _1dc568bd9_normalize(jule::F64);
inline jule::F64 _1dc56a5c0_Log(jule::F64);
inline jule::F64 _1dc56ae61_Abs(jule::F64);
inline __jule_tuple_f64__jule_tuple_f64 _1dc5728a2_Modf(jule::F64);
inline jule::F64 _1dc573166_Log2(jule::F64);
inline jule::Str _1dc59bdc6_FmtFloat(jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _1dc59c448_genericFtoa(jule::Slice<jule::U8>, jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _1dc59cab9_bigFtoa(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _1dc59ac60_floatInfo*);
inline jule::Slice<jule::U8> _1dc59d218_fmtDigits(jule::Slice<jule::U8>, jule::Bool, jule::Bool, _1dc59b887_decimalSlice, jule::I64, jule::U8);
inline void _1dc59d614_roundShortest(_1dc5ad778_decimal*, jule::U64, jule::I64, _1dc59ac60_floatInfo*);
inline jule::Slice<jule::U8> _1dc59db42_fmtE(jule::Slice<jule::U8>, jule::Bool, _1dc59b887_decimalSlice, jule::I64, jule::U8);
inline jule::Slice<jule::U8> _1dc59e0c6_fmtF(jule::Slice<jule::U8>, jule::Bool, _1dc59b887_decimalSlice, jule::I64);
inline jule::Slice<jule::U8> _1dc59e6d1_fmtB(jule::Slice<jule::U8>, jule::Bool, jule::U64, jule::I64, _1dc59ac60_floatInfo*);
inline jule::Slice<jule::U8> _1dc59ed52_fmtX(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _1dc59ac60_floatInfo*);
inline jule::I64 _1dc5a0193_min(jule::I64, jule::I64);
inline jule::I64 _1dc5a04d4_max(jule::I64, jule::I64);
inline jule::U8 _1dc5a10ea_lower(jule::U8);
inline __jule_tuple_u64__jule_tuple__1dbbeddec_ConvError _1dc5a1529_parseUint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::U64> _1dc5a1914_ParseUint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::I64> _1dc5a1d76_ParseInt(jule::Str, jule::I64, jule::I64);
inline __jule_tuple_f64__jule_tuple_bool _1dc5a298c_eiselLemire64(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _1dc5a2d88_eiselLemire32(jule::U64, jule::I64, jule::Bool);
inline jule::I64 _1dc5a4a9e_commonPrefixLenIgnoreCase(jule::Str, jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1dc5a4d9b_special(jule::Str);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1dc5a5143_readFloat(jule::Str);
inline __jule_tuple_f64__jule_tuple_bool _1dc5a6ac3_atof64exact(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _1dc5a6ead_atof32exact(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f64__jule_tuple__1dbbeddec_ConvError _1dc5a7585_atofHex(jule::Str, _1dc59ac60_floatInfo*, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1dbbeddec_ConvError _1dc5a793c_atof32(jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1dbbeddec_ConvError _1dc5a7bd4_atof64(jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1dbbeddec_ConvError _1dc5a8025_parseFloatPrefix(jule::Str, jule::I64);
inline jule::Exceptional<jule::F64> _1dc5a8366_ParseFloat(jule::Str, jule::I64);
inline void _1dc5a8ad6_ryuFtoaFixed32(_1dc59b887_decimalSlice*, jule::U32, jule::I64, jule::I64);
inline void _1dc5a9026_ryuFtoaFixed64(_1dc59b887_decimalSlice*, jule::U64, jule::I64, jule::I64);
inline void _1dc5a980c_formatDecimal(_1dc59b887_decimalSlice*, jule::U64, jule::Bool, jule::Bool, jule::I64);
inline void _1dc5a9c80_ryuFtoaShortest(_1dc59b887_decimalSlice*, jule::U64, jule::I64, _1dc59ac60_floatInfo*);
inline jule::I64 _1dc5aa027_mulByLog2Log10(jule::I64);
inline jule::I64 _1dc5aa2be_mulByLog10Log2(jule::I64);
inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1dc5aa6a9_computeBounds(jule::U64, jule::I64, _1dc59ac60_floatInfo*);
inline void _1dc5aac4d_ryuDigits(_1dc59b887_decimalSlice*, jule::U64, jule::U64, jule::U64, jule::Bool, jule::Bool);
inline void _1dc5ab336_ryuDigits32(_1dc59b887_decimalSlice*, jule::U32, jule::U32, jule::U32, jule::Bool, jule::Bool, jule::I64);
inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1dc5ab721_mult64bitPow10(jule::U32, jule::I64, jule::I64);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1dc5abb0b_mult128bitPow10(jule::U64, jule::I64, jule::I64);
inline jule::Bool _1dc5abe4c_divisibleByPow5(jule::U64, jule::I64);
inline __jule_tuple_u32__jule_tuple_u32 _1dc5ac1e4_divmod1e9(jule::U64);
inline void _1dc5aee61_trim(_1dc5ad778_decimal*);
inline void _1dc5b0219_rightShift(_1dc5ad778_decimal*, jule::U64);
inline jule::Bool _1dc5b067b_prefixIsLessThan(jule::Array<jule::U8,800>, jule::I64, jule::Str);
inline void _1dc5b0901_leftShift(_1dc5ad778_decimal*, jule::U64);
inline jule::Bool _1dc5b0c42_shouldRoundUp(_1dc5ad778_decimal*, jule::I64);
inline jule::Str _1dc5b235e_FmtUint(jule::U64, jule::I64);
inline jule::Str _1dc5b26e4_FmtInt(jule::I64, jule::I64);
inline jule::Str _1dc5b298b_Itoa(jule::I64);
inline jule::Str _1dc5b2caa_small(jule::I64);
inline jule::Bool _1dc5b3052_isPowerOfTwo(jule::I64);
inline __jule_tuple_su8__jule_tuple_str _1dc5b3580_fmtBits(jule::Slice<jule::U8>, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline jule::Str _1dc5b498d_RealKindOf(jule::Str);
inline jule::I64 _1dc5b4c35_BitsizeOf(jule::Str);
inline jule::Str _1dc5b5054_IntFromBits(jule::I64);
inline jule::Str _1dc5b52eb_UintFromBits(jule::I64);
inline jule::Str _1dc5b5593_FloatFromBits(jule::I64);
inline jule::Bool _1dc5b6143_CheckBitFloat(jule::Str, jule::I64);
inline jule::I64 _1dc5b63da_BitsizeOfFloat(jule::F64);
inline jule::I64 _1dc5b6682_BitsizeOfInt(jule::I64);
inline jule::I64 _1dc5b6929_BitsizeOfUint(jule::U64);
inline void _1dc5b6a8e_UpdateTarget(void);
inline void _1dc5b6c04_init(void);
inline jule::I64 _1dc5baa3d_MinI(jule::Str);
inline jule::I64 _1dc5bad29_MaxI(jule::Str);
inline jule::U64 _1dc5bb0c1_MaxU(jule::Str);
inline jule::F64 _1dc5bb2d0_Min(jule::Str);
inline jule::F64 _1dc5bb577_Max(jule::Str);
inline jule::Bool _1dc5bb9c8_IsI8Compatible(jule::Str);
inline jule::Bool _1dc5bbcb4_IsI16Compatible(jule::Str);
inline jule::Bool _1dc5bc05b_IsI32Compatible(jule::Str);
inline jule::Bool _1dc5bc37a_IsI64Compatible(jule::Str);
inline jule::Bool _1dc5bc622_IsU8Compatible(jule::Str);
inline jule::Bool _1dc5bc8b9_IsU16Compatible(jule::Str);
inline jule::Bool _1dc5bcb61_IsU32Compatible(jule::Str);
inline jule::Bool _1dc5bced5_IsU64Compatible(jule::Str);
inline jule::Bool _1dc5bd27c_IsF32Compatible(jule::Str);
inline jule::Bool _1dc5bd524_IsF64Compatible(jule::Str);
inline jule::Bool _1dc5bd865_TypesAreCompatible(jule::Str, jule::Str);
inline jule::Bool _1dc5bdb0c_IsI16Greater(jule::Str);
inline jule::Bool _1dc5bdda4_IsI32Greater(jule::Str);
inline jule::Bool _1dc5be14b_IsI64Greater(jule::Str);
inline jule::Bool _1dc5be3e3_IsU16Greater(jule::Str);
inline jule::Bool _1dc5be844_IsU32Greater(jule::Str);
inline jule::Bool _1dc5beadb_IsU64Greater(jule::Str);
inline jule::Bool _1dc5bed83_IsF32Greater(jule::Str);
inline jule::Bool _1dc5c012a_IsF64Greater(jule::Str);
inline jule::Bool _1dc5c046b_IsGreater(jule::Str, jule::Str);
inline jule::Bool _1dc5c14a0_IsSigInt(jule::Str);
inline jule::Bool _1dc5c178b_IsUnsigInt(jule::Str);
inline jule::Bool _1dc5c1a33_IsInt(jule::Str);
inline jule::Bool _1dc5c1d52_IsFloat(jule::Str);
inline jule::Bool _1c0901698_IsNum(jule::Str);
inline jule::Bool _1c09018a7_IsSigNum(jule::Str);
inline void _1c090a33e_lshiftUnsig(_1c0901b1b_Const*, _1c0901b1b_Const*);
inline void _1c090a63b_rshiftUnsig(_1c0901b1b_Const*, _1c0901b1b_Const*);
inline jule::Bool _1aa9224d1_IsAscii(jule::I32);
inline jule::I32 _1aa922613_ToRune(jule::Slice<jule::U8>);
inline jule::Str _1aa939619_ToRawStr(jule::Slice<jule::U8>);
inline jule::Str _1aa939938_ToStr(jule::Slice<jule::U8>);
inline __jule_tuple_u8__jule_tuple_bool _1aa939bd0_tryBtoaCommonEsq(jule::Slice<jule::U8>);
inline jule::I32 _1aa939edd_runeFromEsqSeq(jule::Slice<jule::U8>, jule::I64*);
inline jule::Slice<jule::U8> _1aa93a32e_strEsqSeq(jule::Slice<jule::U8>, jule::I64*);
inline jule::I64 _1aa2a66b2_findFormatPrefix(jule::Slice<jule::U8>*, jule::I64*);
inline jule::Slice<jule::U8> _1aa2ac300_getFormatRange(jule::I64*, jule::Slice<jule::U8>*);
inline void _1aa2ac5a8_FmtByDefault(jule::Str*, jule::Any*);
inline void _1aa2ac982_applyFmtByDefault(jule::Str*, jule::I64*, jule::Slice<jule::Any>*);
inline void _1aa2acd7d_applyFmt(jule::Slice<jule::U8>*, jule::Str*, jule::I64*, jule::Slice<jule::Any>*);
inline jule::Str _1aa2ad18b_Format(jule::Str*, jule::Slice<jule::Any>);
inline jule::Str _1aa2aee5c_Format(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1aa88e1d9_parameterUsesGenerics(jule::Ptr<_1aa88b208_ParamIns>*, jule::Slice<jule::Ptr<_1aa861321_GenericDecl>>*);
inline jule::Ptr<_1aa9889ba_TypeSymbol> _1aa8916b4_buildType(jule::Ptr<_1aa854028_TypeDecl>);
inline jule::Ptr<_1aa958e0d_Value> _1aa8919a0_buildExpr(jule::Ptr<_1aa858549_Expr>);
inline jule::Ptr<_1aa982b29_TypeAlias> _1aa891c47_buildTypeAlias(jule::Ptr<_1aa86a2e7_TypeAliasDecl>);
inline jule::Ptr<_1aa8714eb_Field> _1aa892066_buildField(jule::Ptr<_1aa86d98d_FieldDecl>);
inline jule::Slice<jule::Ptr<_1aa8714eb_Field>> _1aa89230d_buildFields(jule::Slice<jule::Ptr<_1aa86d98d_FieldDecl>>*);
inline jule::Ptr<_1aa8740c0_Struct> _1aa8925a5_buildStruct(jule::Ptr<_1aa86e241_StructDecl>);
inline jule::Ptr<_1aa887ad9_Param> _1aa89284c_buildParam(jule::Ptr<_1aa864687_ParamDecl>);
inline jule::Slice<jule::Ptr<_1aa887ad9_Param>> _1aa892bc1_buildParams(jule::Slice<jule::Ptr<_1aa864687_ParamDecl>>*);
inline jule::Ptr<_1aa8873d0_RetType> _1aa892e68_buildRetType(jule::Ptr<_1aa85713b_RetTypeDecl>);
inline jule::Ptr<_1aa889426_Fn> _1aa893210_buildFn(jule::Ptr<_1aa8659a7_FnDecl>);
inline jule::Slice<jule::Ptr<_1aa889426_Fn>> _1aa8934a7_buildMethods(jule::Slice<jule::Ptr<_1aa8659a7_FnDecl>>*);
inline jule::Slice<jule::Ptr<_1aa9889ba_TypeSymbol>> _1aa89374e_buildTraitInherits(jule::Slice<jule::Ptr<_1aa854028_TypeDecl>>*);
inline jule::Ptr<_1aa89b647_Trait> _1aa8939e6_buildTrait(jule::Ptr<_1aa86e917_TraitDecl>);
inline jule::Ptr<_1aa89d3d5_EnumItem> _1aa893c8d_buildEnumItem(jule::Ptr<_1aa86bb56_EnumItemDecl>);
inline jule::Slice<jule::Ptr<_1aa89d3d5_EnumItem>> _1aa894035_buildEnumItems(jule::Slice<jule::Ptr<_1aa86bb56_EnumItemDecl>>*);
inline jule::Ptr<_1aa89ddca_Enum> _1aa894486_buildEnum(jule::Ptr<_1aa86c67e_EnumDecl>);
inline jule::Ptr<_1aa89ee0e_TypeEnumItem> _1aa89472d_buildTypeEnumItem(jule::Ptr<_1aa86d185_TypeEnumItemDecl>);
inline jule::Slice<jule::Ptr<_1aa89ee0e_TypeEnumItem>> _1aa8949c5_buildTypeEnumItems(jule::Slice<jule::Ptr<_1aa86d185_TypeEnumItemDecl>>*);
inline jule::Ptr<_1aa8a04c5_TypeEnum> _1aa894c6c_buildTypeEnum(jule::Ptr<_1aa86d790_TypeEnumDecl>);
inline jule::Ptr<_1aa908c59_Var> _1aa895014_buildVar(jule::Ptr<_1aa866986_VarDecl>);
inline jule::Slice<jule::Ptr<_1aa908c59_Var>> _1aa8952ab_buildVars(jule::Slice<jule::Ptr<_1aa866986_VarDecl>>);
inline jule::Ptr<_1aa8ac548_Impl> _1aa895553_buildImpl(jule::Ptr<_1aa870022_Impl>);
inline jule::Ptr<_1aa957d85_Data> _1aa8a8511_buildAsComptimeMethodData(jule::Ptr<_1aa88c0c7_FnIns>*);
inline jule::Ptr<_1aa8d101c_ImportInfo> _1aa8a880d_findComptimePackage(jule::Ptr<_1aa8d92de_Sema>*);
inline jule::Ptr<_1aa957d85_Data> _1aa8a8b71_buildComptimeTypeInfoData(jule::Ptr<_1aa8d92de_Sema>*, jule::Ptr<_1aa983872_TypeKind>*);
inline jule::Bool _1aa8ab976_matchConstraint(jule::Str*, jule::Ptr<_1aa983872_TypeKind>*);
inline jule::Bool _1aa8abc62_isBuiltinConstraint(jule::Str*);
inline jule::Ptr<_1aa8b91d1_scopeChecker> _1aa8ae5d3_newScopeCheckerBase(jule::Ptr<_1aa8d92de_Sema>*, jule::Ptr<_1aa88c0c7_FnIns>);
inline jule::Ptr<_1aa8b91d1_scopeChecker> _1aa8ae968_newScopeChecker(jule::Ptr<_1aa8d92de_Sema>*, jule::Ptr<_1aa88c0c7_FnIns>);
inline jule::Ptr<_1aa8b7e49_scopeLabel> _1aa8aeca9_findLabelParent(jule::Str, jule::Ptr<_1aa8b91d1_scopeChecker>);
inline jule::Bool _1aa8b013e_modelIsGotoScope(jule::Any, jule::Ptr<_1aa8b25a3_Scope>*);
inline jule::Bool _1aa8b0480_stmtIsGotoScope(jule::Any*, jule::Ptr<_1aa8b25a3_Scope>*);
inline jule::I64 _1aa8b07c1_countMatchType(jule::Ptr<_1aa8b63ba_Match>*, jule::Ptr<_1aa983872_TypeKind>*);
inline jule::Slice<jule::Ptr<_1aa957d85_Data>> _1aa8b0a68_getDatasFromTupleData(jule::Ptr<_1aa957d85_Data>*);
inline jule::Bool _1aa8b13a4_checkMut(jule::Ptr<_1aa8d92de_Sema>*, jule::Ptr<_1aa957d85_Data>*, jule::Ptr<_1aa957d85_Data>, jule::Ptr<_1db944d0d_Token>);
inline jule::Bool _1aa8b1838_checkAssign(jule::Ptr<_1aa8d92de_Sema>*, jule::Ptr<_1aa957d85_Data>*, jule::Ptr<_1aa957d85_Data>, jule::Ptr<_1db944d0d_Token>);
inline jule::Bool _1aa8b1ad0_isValidAstStForNextSt(jule::Any*);
inline jule::Bool _1aa8b1d77_isValidStForNextSt(jule::Any*);
inline jule::Bool _1aa8b211e_stmtIsDef(jule::Any*);
inline jule::Ptr<_1aa908c59_Var> _1aa8cd734_findVarInPackage(jule::Slice<jule::Ptr<_1aa94d51d_SymbolTable>>*, jule::Str, jule::Bool);
inline jule::Ptr<_1aa982b29_TypeAlias> _1aa8cdb63_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1aa94d51d_SymbolTable>>*, jule::Str, jule::Bool);
inline jule::Ptr<_1aa8740c0_Struct> _1aa8ce04d_findStructInPackage(jule::Slice<jule::Ptr<_1aa94d51d_SymbolTable>>*, jule::Str, jule::Bool);
inline jule::Ptr<_1aa889426_Fn> _1aa8ce4b0_findFnInPackage(jule::Slice<jule::Ptr<_1aa94d51d_SymbolTable>>*, jule::Str, jule::Bool);
inline jule::Ptr<_1aa89b647_Trait> _1aa8ce7bd_findTraitInPackage(jule::Slice<jule::Ptr<_1aa94d51d_SymbolTable>>*, jule::Str);
inline jule::Ptr<_1aa89ddca_Enum> _1aa8ceb0e_findEnumInPackage(jule::Slice<jule::Ptr<_1aa94d51d_SymbolTable>>*, jule::Str);
inline jule::Ptr<_1aa8a04c5_TypeEnum> _1aa8cee50_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1aa94d51d_SymbolTable>>*, jule::Str);
inline jule::Any _1aa8d044a_defByIdentPackage(jule::Slice<jule::Ptr<_1aa94d51d_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Bool _1aa8d5e12_isStdPackage(jule::Str, jule::Str);
inline jule::Bool _1aa8d6b6b_isValidModelForRef(jule::Any*);
inline _1d9d938bd_Log _1aa8d7111_compilerErr(jule::Ptr<_1db944d0d_Token>*, jule::Bool, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1aa8d7452_impIsLookupable(jule::Ptr<_1aa8d101c_ImportInfo>*, jule::Str);
inline void _1aa8d774e_appendRetVars(jule::Slice<jule::Ptr<_1aa908c59_Var>>*, jule::Ptr<_1aa88c0c7_FnIns>*);
inline void _1aa8d7a07_appendParamVars(jule::Slice<jule::Ptr<_1aa908c59_Var>>*, jule::Ptr<_1aa88c0c7_FnIns>*);
inline void _1aa8d7cd2_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1aa982b29_TypeAlias>>*, jule::Ptr<_1aa88c0c7_FnIns>*);
inline jule::Ptr<_1aa94d51d_SymbolTable> _1aa8d8134_findFile(jule::Slice<jule::Ptr<_1aa94d51d_SymbolTable>>*, jule::Ptr<_1db94a198_File>*);
inline void _1aa8d8596_pushSuggestion(_1d9d938bd_Log*, jule::Str, jule::Slice<jule::Any>);
inline void _1aa907241_pushImplemented(jule::Ptr<_1aa89b647_Trait>, jule::Ptr<_1aa8740c0_Struct>*);
inline void _1aa9074e9_pushImplements(jule::Ptr<_1aa8740c0_Struct>*, jule::Ptr<_1aa89b647_Trait>);
inline jule::Bool _1aa93a97d_traitHasReferenceReceiver(jule::Ptr<_1aa89b647_Trait>*);
inline jule::Bool _1aa93ac25_floatAssignable(jule::Str, jule::Ptr<_1aa957d85_Data>*);
inline jule::Bool _1aa93b066_sigAssignable(jule::Str, jule::Ptr<_1aa957d85_Data>*);
inline jule::Bool _1aa93b3eb_unsigAssignable(jule::Str, jule::Ptr<_1aa957d85_Data>*);
inline jule::Bool _1aa93b73c_intAssignable(jule::Str, jule::Ptr<_1aa957d85_Data>*);
inline jule::Ptr<_1aa983872_TypeKind> _1aa94c6b5_lenKind(void);
inline jule::Ptr<_1aa820a94_Directive> _1aa97c8d2_findDirective(jule::Slice<jule::Ptr<_1aa820a94_Directive>>*, jule::Str);
inline jule::Any _1aa97cc67_findBuiltinsImport(jule::Str, jule::Ptr<_1aa8d101c_ImportInfo>);
inline void _1aa97ce76_fitBitsize(jule::Ptr<_1aa957d85_Data>*);
inline void _1aa97d273_makeStructLitAlloc(jule::Ptr<_1aa957d85_Data>*, jule::Ptr<_1aa87be0d_StructLitExprModel>*);
inline jule::Ptr<_1aa908c59_Var> _1aa97d5b4_buildErrorVar(jule::Ptr<_1aa8b25a3_Scope>*, jule::Ptr<_1aa85c52b_FnCallExpr>*);
inline jule::Any _1aa97d905_findBuiltinsSema(jule::Str, jule::Ptr<_1aa8d92de_Sema>);
inline jule::Bool _1aa97db9c_isOkForShifting(jule::Ptr<_1aa957d85_Data>*);
inline jule::Bool _1aa97e054_isInstancedStruct(jule::Ptr<_1aa876dd6_StructIns>);
inline jule::Bool _1aa97e3b7_isPtrArithmeticCompatible(jule::Ptr<_1aa957d85_Data>*, jule::Ptr<_1aa957d85_Data>*);
inline void _1aa97e609_applyCastKindModel(jule::Ptr<_1aa957d85_Data>*, jule::Ptr<_1aa983872_TypeKind>*);
inline void _1aa97e8b2_applyCastKind(jule::Ptr<_1aa957d85_Data>*, jule::Ptr<_1aa983872_TypeKind>*);
inline jule::Ptr<_1aa957d85_Data> _1aa97eab0_buildVoidData(void);
inline jule::Str _1aa97ed79_checkDataForIntegerIndexing(jule::Ptr<_1aa957d85_Data>*);
inline void _1aa980143_applyCastModelByEnum(jule::Ptr<_1aa957d85_Data>*, jule::Ptr<_1aa89ddca_Enum>);
inline void _1aa9803eb_castConstByType(jule::Str*, jule::Ptr<_1aa957d85_Data>*);
inline void _1aa980907_updateModelToGenericIns(jule::Any*, jule::Ptr<_1aa88c0c7_FnIns>*);
inline jule::Bool _1aa980b49_pushSubIdentFromExpr(jule::Any, jule::Ptr<_1aa854c3d_SubIdentTypeDecl>*);
inline jule::Str _1aa980de1_constoa(jule::Ptr<_1c0901b1b_Const>*);
inline jule::Ptr<_1aa957d85_Data> _1aa981232_evalEnumStatic(jule::Ptr<_1aa89ddca_Enum>*, jule::Ptr<_1aa89d3d5_EnumItem>*);
inline jule::Bool _1aa99b2e6_kindUsesGenerics(jule::Ptr<_1aa983872_TypeKind>*, jule::Slice<jule::Ptr<_1aa861321_GenericDecl>>*);
inline jule::Bool _1aa99b67b_hasDirective(jule::Slice<jule::Ptr<_1aa820a94_Directive>>*, jule::Str);
inline jule::Bool _1aa99b923_canGetPtr(jule::Ptr<_1aa957d85_Data>*);
inline jule::Bool _1aa99bc42_isValidForSptrType(jule::Ptr<_1aa983872_TypeKind>*);
inline jule::Bool _1aa99bed9_isValidForRef(jule::Ptr<_1aa983872_TypeKind>*);
inline jule::Bool _1aa99c2a3_isBuiltinStrConvertable(jule::Ptr<_1aa983872_TypeKind>*);
inline jule::Str _1aa99c528_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline jule::Ptr<_1aa989339_Prim> _1aa99c8d0_buildPrimType(jule::Str);
inline jule::Ptr<_1aa8740c0_Struct> _1aa99cb77_getStructFromKind(jule::Ptr<_1aa983872_TypeKind>);
inline jule::Bool _1aa99ce1e_isPrim(jule::Str);
inline void _1aa99d1c7_applyImplicitCast(jule::Ptr<_1aa983872_TypeKind>*, jule::Ptr<_1aa957d85_Data>*);
inline jule::Bool _1aa99d46e_validTypeForXof(jule::Ptr<_1aa983872_TypeKind>*);
inline __jule_tuple_x_1aa94d51d_SymbolTable__jule_tuple_s_1d9d938bd_Log _1aa9a121e_buildSymbols(jule::Ptr<_1aa81e80c_Ast>*, jule::Trait<_1aa8cd36b_Importer>*, jule::Ptr<_1aa895aa3_symbolBuilder>);
inline __jule_tuple_x_1aa8d3b57_Package__jule_tuple_s_1d9d938bd_Log _1aa9a164d_analyzePackage(jule::Slice<jule::Ptr<_1aa81e80c_Ast>>*, jule::Trait<_1aa8cd36b_Importer>*, jule::I64*);
inline __jule_tuple_x_1aa8d3b57_Package__jule_tuple_s_1d9d938bd_Log _1aa9a1a38_AnalyzePackage(jule::Slice<jule::Ptr<_1aa81e80c_Ast>>, jule::Trait<_1aa8cd36b_Importer>, jule::I64);
inline jule::Ptr<_1aa88c0c7_FnIns> _1aa2b0710_findBuiltinFn(jule::Str);
inline jule::Ptr<_1aa982b29_TypeAlias> _1aa2b09eb_findBuiltinTypeAlias(jule::Str);
inline jule::Any _1aa2b0c93_findBuiltinDef(jule::Str);
inline jule::Any _1aa2b10b2_findBuiltinDefStdDebug(jule::Str);
inline jule::Any _1aa2b1359_findBuiltinDefStdMem(jule::Str);
inline jule::Any _1aa2b1623_findBuiltinDefStdComptime(jule::Str);
inline jule::Any _1aa2b18ba_findBuiltinDefStdJuleIntegrated(jule::Str);
inline jule::Any _1aa2b1d2c_findPackageBuiltinDef(jule::Str, jule::Str);
inline jule::Ptr<_1aa957d85_Data> _1aa2b2239_builtinCallerCommonPlain(jule::Ptr<_1aa959903_Eval>*, jule::Ptr<_1aa85c52b_FnCallExpr>*, jule::Ptr<_1aa957d85_Data>*);
inline jule::Ptr<_1aa957d85_Data> _1aa2b25ad_builtinCallerCommon(jule::Ptr<_1aa959903_Eval>*, jule::Ptr<_1aa85c52b_FnCallExpr>*, jule::Ptr<_1aa957d85_Data>*);
inline jule::Ptr<_1aa957d85_Data> _1aa2b2998_builtinCallerCommonMut(jule::Ptr<_1aa959903_Eval>*, jule::Ptr<_1aa85c52b_FnCallExpr>*, jule::Ptr<_1aa957d85_Data>*);
inline jule::Ptr<_1aa957d85_Data> _1aa2b2cd9_builtinCallerError(jule::Ptr<_1aa959903_Eval>*, jule::Ptr<_1aa85c52b_FnCallExpr>*);
inline jule::Ptr<_1aa957d85_Data> _1aa2b31c4_builtinCallerOut(jule::Ptr<_1aa959903_Eval>*, jule::Ptr<_1aa85c52b_FnCallExpr>*, jule::Ptr<_1aa957d85_Data>*);
inline jule::Ptr<_1aa957d85_Data> _1aa2b35ae_builtinCallerOutln(jule::Ptr<_1aa959903_Eval>*, jule::Ptr<_1aa85c52b_FnCallExpr>*, jule::Ptr<_1aa957d85_Data>*);
inline jule::Ptr<_1aa957d85_Data> _1aa2b3999_builtinCallerNew(jule::Ptr<_1aa959903_Eval>*, jule::Ptr<_1aa85c52b_FnCallExpr>*, jule::Ptr<_1aa957d85_Data>*);
inline jule::Ptr<_1aa957d85_Data> _1aa2b40b5_builtinCallerPanic(jule::Ptr<_1aa959903_Eval>*, jule::Ptr<_1aa85c52b_FnCallExpr>*, jule::Ptr<_1aa957d85_Data>*);
inline jule::Ptr<_1aa957d85_Data> _1aa2b44a0_builtinCallerMake(jule::Ptr<_1aa959903_Eval>*, jule::Ptr<_1aa85c52b_FnCallExpr>*, jule::Ptr<_1aa957d85_Data>*);
inline jule::Ptr<_1aa957d85_Data> _1aa2b488a_builtinCallerAppend(jule::Ptr<_1aa959903_Eval>*, jule::Ptr<_1aa85c52b_FnCallExpr>*, jule::Ptr<_1aa957d85_Data>*);
inline jule::Ptr<_1aa957d85_Data> _1aa2b4d1e_callerCopySlice(jule::Ptr<_1aa957d85_Data>*, jule::Ptr<_1aa959903_Eval>*, jule::Ptr<_1aa85c52b_FnCallExpr>*, jule::Ptr<_1aa957d85_Data>*);
inline jule::Ptr<_1aa957d85_Data> _1aa2b52a3_callerCopyStr(jule::Ptr<_1aa957d85_Data>*, jule::Ptr<_1aa959903_Eval>*, jule::Ptr<_1aa85c52b_FnCallExpr>*, jule::Ptr<_1aa957d85_Data>*);
inline jule::Ptr<_1aa957d85_Data> _1aa2b568d_builtinCallerCopy(jule::Ptr<_1aa959903_Eval>*, jule::Ptr<_1aa85c52b_FnCallExpr>*, jule::Ptr<_1aa957d85_Data>*);
inline jule::Ptr<_1aa957d85_Data> _1aa2b59ce_callerLenSlice(jule::Ptr<_1aa957d85_Data>*, jule::Ptr<_1aa957d85_Data>*);
inline jule::Ptr<_1aa957d85_Data> _1aa2b5d20_callerLenMap(jule::Ptr<_1aa957d85_Data>*, jule::Ptr<_1aa957d85_Data>*);
inline jule::Ptr<_1aa957d85_Data> _1aa2b6161_callerLenArr(jule::Ptr<_1aa957d85_Data>*, jule::Ptr<_1aa957d85_Data>*);
inline jule::Ptr<_1aa957d85_Data> _1aa2b64a2_callerLenStr(jule::Ptr<_1aa957d85_Data>*, jule::Ptr<_1aa957d85_Data>*);
inline jule::Ptr<_1aa957d85_Data> _1aa2b688c_builtinCallerLen(jule::Ptr<_1aa959903_Eval>*, jule::Ptr<_1aa85c52b_FnCallExpr>*, jule::Ptr<_1aa957d85_Data>*);
inline jule::Ptr<_1aa957d85_Data> _1aa2b6bcd_callerCapSlice(jule::Ptr<_1aa957d85_Data>*, jule::Ptr<_1aa957d85_Data>*);
inline jule::Ptr<_1aa957d85_Data> _1aa2b701e_callerCapStr(jule::Ptr<_1aa957d85_Data>*, jule::Ptr<_1aa957d85_Data>*);
inline jule::Ptr<_1aa957d85_Data> _1aa2b7409_builtinCallerCap(jule::Ptr<_1aa959903_Eval>*, jule::Ptr<_1aa85c52b_FnCallExpr>*, jule::Ptr<_1aa957d85_Data>*);
inline jule::Ptr<_1aa957d85_Data> _1aa2b788d_callerDeleteMap(jule::Ptr<_1aa959903_Eval>*, jule::Ptr<_1aa85c52b_FnCallExpr>*, jule::Ptr<_1aa957d85_Data>*, jule::Ptr<_1aa957d85_Data>*);
inline jule::Ptr<_1aa957d85_Data> _1aa2b7c78_builtinCallerDelete(jule::Ptr<_1aa959903_Eval>*, jule::Ptr<_1aa85c52b_FnCallExpr>*, jule::Ptr<_1aa957d85_Data>*);
inline jule::Ptr<_1aa957d85_Data> _1aa2b833e_builtinCallerClone(jule::Ptr<_1aa959903_Eval>*, jule::Ptr<_1aa85c52b_FnCallExpr>*, jule::Ptr<_1aa957d85_Data>*);
inline jule::Ptr<_1aa957d85_Data> _1aa2b8680_builtinCallerAssert(jule::Ptr<_1aa959903_Eval>*, jule::Ptr<_1aa85c52b_FnCallExpr>*, jule::Ptr<_1aa957d85_Data>*);
inline jule::Ptr<_1aa957d85_Data> _1aa2b8a8c_builtinCallerStdComptimeTypeOf(jule::Ptr<_1aa959903_Eval>*, jule::Ptr<_1aa85c52b_FnCallExpr>*, jule::Ptr<_1aa957d85_Data>*);
inline jule::Ptr<_1aa957d85_Data> _1aa2b8eaa_builtinCallerStdComptimeRange(jule::Ptr<_1aa959903_Eval>*, jule::Ptr<_1aa85c52b_FnCallExpr>*, jule::Ptr<_1aa957d85_Data>*);
inline jule::Ptr<_1aa957d85_Data> _1aa2b93c8_builtinCallerStdMemSizeOf(jule::Ptr<_1aa959903_Eval>*, jule::Ptr<_1aa85c52b_FnCallExpr>*, jule::Ptr<_1aa957d85_Data>*);
inline jule::Ptr<_1aa957d85_Data> _1aa2b97e6_builtinCallerStdMemAlignOf(jule::Ptr<_1aa959903_Eval>*, jule::Ptr<_1aa85c52b_FnCallExpr>*, jule::Ptr<_1aa957d85_Data>*);
inline jule::Ptr<_1aa957d85_Data> _1aa2b9c14_builtinCallerStdMemFree(jule::Ptr<_1aa959903_Eval>*, jule::Ptr<_1aa85c52b_FnCallExpr>*, jule::Ptr<_1aa957d85_Data>*);
inline jule::Ptr<_1aa957d85_Data> _1aa2ba143_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_1aa959903_Eval>*, jule::Ptr<_1aa85c52b_FnCallExpr>*, jule::Ptr<_1aa957d85_Data>*);
inline jule::Ptr<_1aa957d85_Data> _1aa2ba561_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_1aa959903_Eval>*, jule::Ptr<_1aa85c52b_FnCallExpr>*, jule::Ptr<_1aa957d85_Data>*);
inline jule::Ptr<_1aa957d85_Data> _1aa2ba9a1_builtinCallerStdDebugOut(jule::Ptr<_1aa959903_Eval>*, jule::Ptr<_1aa85c52b_FnCallExpr>*, jule::Ptr<_1aa957d85_Data>*);
inline jule::Ptr<_1aa957d85_Data> _1aa2bad8b_builtinCallerStdDebugOutln(jule::Ptr<_1aa959903_Eval>*, jule::Ptr<_1aa85c52b_FnCallExpr>*, jule::Ptr<_1aa957d85_Data>*);
inline jule::Bool _1aa3b0634_FindModuleFile(jule::Slice<jule::Ptr<_203d70793_DirEntry>>*);
inline jule::Str _1aa3b0766_FindModuleFileDeep(jule::Str);
inline jule::Slice<_1d9d938bd_Log> _1aa3b0964_CheckModuleFile(jule::Str);
inline jule::Ptr<_1ab0ead63_FileInfo> _1ab14773e_ParseFile(jule::Ptr<_1db94a198_File>);
inline __jule_tuple_x_1aa81e80c_Ast__jule_tuple_s_1d9d938bd_Log _1ab147cc2_parseFileset(jule::Ptr<_1db94a198_File>);
inline jule::Ptr<_1aa863eb1_ScopeTree> _1ab1486eb_newScope(void);
inline __jule_tuple_bool__jule_tuple_bool _1ab1489d7_isSt(jule::Ptr<_1db944d0d_Token>, jule::Ptr<_1db944d0d_Token>);
inline jule::Bool _1ab148d28_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1db944d0d_Token>>*, jule::I64*);
inline __jule_tuple_int__jule_tuple_bool _1ab1491ad_nextStPos(jule::Slice<jule::Ptr<_1db944d0d_Token>>*, jule::I64);
inline __jule_tuple_sx_1db944d0d_Token__jule_tuple_bool _1ab1494ee_skipSt(jule::I64*, jule::Slice<jule::Ptr<_1db944d0d_Token>>);
inline jule::Slice<jule::Ptr<_1ab1497eb_stmt>> _1ab149b92_splitStmts(jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline jule::Bool _1ab16137e_isTypeOp(jule::Str*);
inline jule::Bool _1ab16166a_isTypeRange(jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline jule::Slice<jule::Ptr<_1db944d0d_Token>> _1ab161912_getBlockExpr(jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline __jule_tuple_sx_1db944d0d_Token__jule_tuple_sx_1db944d0d_Token _1ab161c97_splitDelim(jule::Slice<jule::Ptr<_1db944d0d_Token>>*, jule::U64);
inline jule::I64 _1ab16203e_findLowestPrecOp(jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline jule::Ptr<_1aa85a20a_IdentExpr> _1ab1622d6_buildIdentExpr(jule::Ptr<_1db944d0d_Token>*);
inline __jule_tuple_sx_1db944d0d_Token__jule_tuple_int _1ab16257d_getRangeExprTokens(jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline jule::Bool _1ab1632d7_checkAssignTokens(jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline _1d9d938bd_Log _1ab164508_makeErr(jule::I64, jule::I64, jule::Ptr<_1db94a198_File>*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1db944d0d_Token>> _1ab1649d1_range(jule::I64*, jule::Str, jule::Str, jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline __jule_tuple_sx_1db944d0d_Token__jule_tuple_sx_1db944d0d_Token _1ab164c78_rangeLast(jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline __jule_tuple_ssx_1db944d0d_Token__jule_tuple_s_1d9d938bd_Log _1ab165163_partsKind(jule::Slice<jule::Ptr<_1db944d0d_Token>>*, jule::Str, jule::Bool);
inline __jule_tuple_ssx_1db944d0d_Token__jule_tuple_s_1d9d938bd_Log _1ab16554d_parts(jule::Slice<jule::Ptr<_1db944d0d_Token>>*, jule::U64, jule::Bool);
inline jule::Str _1ab1657e5_getCloseKindOfBrace(jule::Str);
inline _1d9d938bd_Log _1ab165bd0_compilerErr(jule::Ptr<_1db944d0d_Token>*, jule::Str*, jule::Slice<jule::Any>);
inline void _1ab16610e_pushSuggestion(_1d9d938bd_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1ab1663a6_tokstoa(jule::Slice<jule::Ptr<_1db944d0d_Token>>*);
inline jule::Bool _1ab1764e8_isPub(jule::Str*);
inline jule::Ptr<_1aa854028_TypeDecl> _1ab176d89_buildVoidType(void);
inline jule::Ptr<_1aa854028_TypeDecl> _1ab1770cb_buildPrimType(jule::Ptr<_1db944d0d_Token>);
inline __jule_tuple_bool__jule_tuple_bool _1aa384691_checkOs(jule::Str);
inline __jule_tuple_bool__jule_tuple_bool _1aa3847c3_checkArch(jule::Str);
inline jule::Bool _1aa384905_isPassFileAnnotation(jule::Str);
inline void _1aa39e48b_setOsVars(jule::Slice<jule::Str>*);
inline void _1aa39e6de_setArchVars(jule::Slice<jule::Str>*);
inline void _1aa39e997_initVars(jule::Slice<jule::Str>*, _1aa39e17d_CompileInfo*);
inline jule::Slice<jule::U8> _1ab17b08b_readBuff(jule::Str);
inline _1d9d938bd_Log _1ab17b344_flatCompilerErr(jule::Str);
inline void _1ab180755_pushPasses(jule::Ptr<_1aa8d3b57_Package>*, jule::Slice<jule::Str>*);
inline jule::Slice<jule::Str> _1ab180ada_getAllUniquePasses(jule::Ptr<_1aa8d3b57_Package>*, jule::Slice<jule::Ptr<_1aa8d101c_ImportInfo>>);
inline _1aa39e17d_CompileInfo _1ab180cd8_buildCompileInfo(void);
inline void _1ab354bc1_EliminateDefines(jule::Ptr<_1ab17e039_IR>*);
inline jule::Ptr<_1aa820a94_Directive> _1ab355056_findDirective(jule::Slice<jule::Ptr<_1aa820a94_Directive>>*, jule::Str);
inline jule::Bool _1ab355397_hasDirective(jule::Slice<jule::Ptr<_1aa820a94_Directive>>*, jule::Str);
inline void _1ab358ee4_eliminateDeadCodeOfScope(jule::Ptr<_1aa8b25a3_Scope>);
inline void _1ab35927a_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1aa889426_Fn>>*);
inline void _1ab3594bc_eliminateFunctionsScopePackage(jule::Ptr<_1aa8d3b57_Package>*);
inline void _1ab359764_eliminateScopePackage(jule::Ptr<_1aa8d3b57_Package>*);
inline void _1ab359973_EliminateScopes(jule::Ptr<_1ab17e039_IR>*);
inline jule::Bool _1aa2c29ec_isStdPackage(jule::Str, jule::Str);
inline jule::Bool _1aa2c2d0a_isConstantValidConditionalCase(jule::Ptr<_1aa8b299e_If>*);
inline jule::Bool _1aa2c30b3_isUnreachableExpr(jule::Any*);
inline jule::Bool _1aa2c3404_isConstantValidMatchCase(jule::Ptr<_1aa8b6e15_Case>*);
inline jule::Bool _1aa2c369b_isUnreachableConditionalCase(jule::Ptr<_1aa8b299e_If>*);
inline jule::Bool _1aa2c3954_isUnreachableMatchCase(jule::Ptr<_1aa8b6e15_Case>*);
inline __jule_tuple_bool__jule_tuple_u64 _1aa2cb352_checkForBitShiftOpt(jule::Ptr<_1aa87acdb_OperandExprModel>*, jule::Ptr<_1aa87acdb_OperandExprModel>*);
inline void _1aa2cd651_PushOptLevel(jule::I64);
inline void _1ab36395a_detectEnabled(void);
inline void _1ab421760_Throw(jule::Str);
inline jule::U64 _1abc29bd3_unix(void);
inline jule::U64 _1abc29ee1_unixYearToSeconds(jule::U64, jule::Bool*);
inline jule::U64 _1abc2a376_unixMonthToSeconds(jule::U64, jule::Bool);
inline jule::Bool _1abb77aed_isCopyOptimizable(jule::Ptr<_1aa957d85_Data>*);
inline jule::Bool _1abb77e83_isIterCopyOptimizable(jule::Ptr<_1aa957d85_Data>*, jule::Ptr<_1aa908c59_Var>*);
inline jule::Str _1abb876ce_decomposeCommonEsq(jule::U8);
inline jule::Str _1abb879ba_sbtoa(jule::U8);
inline jule::Str _1abb87c62_cstrBytes(jule::Slice<jule::U8>);
inline jule::Str _1abb88081_cstrLit(jule::Slice<jule::U8>);
inline jule::Str _1abb8838e_ftoa(jule::F64, jule::I64);
inline jule::Str _1abb88636_itoa(jule::I64);
inline jule::Str _1abb888cd_utoa(jule::U64);
inline jule::Bool _1abb88c85_isForwarded(jule::Ptr<_1aa8b25a3_Scope>*);
inline jule::Bool _1abb8904e_isBuiltinCallHasDebuginf(jule::Ptr<_1aa87d11d_FnCallExprModel>*);
inline jule::Bool _1abb89280_isExprComesFromBind(jule::Ptr<_1aa957d85_Data>*);
inline jule::Bool _1abb89527_isAny(jule::Ptr<_1aa983872_TypeKind>*);
inline void _1abc3d213_iterFiles(jule::Ptr<_1aa8d3b57_Package>*, jule::Fn<void(jule::Ptr<_1aa94d51d_SymbolTable>*)>);
inline jule::Str _1abc3d4ee_concatAllParts(jule::Slice<jule::Ptr<_1db944d0d_Token>>);
inline jule::Bool _1abc3d840_containsTraitMethod(jule::Ptr<_1aa89b647_Trait>*, jule::Str*);
inline void _1abc3db3c_pushMethodsFromInherit(jule::Ptr<_1aa89b647_Trait>*, jule::Ptr<_1aa89b647_Trait>*);
inline void _1abc3de17_pushMethodsFromInherits(jule::Ptr<_1aa89b647_Trait>*, jule::Ptr<_1aa89b647_Trait>*);
inline jule::Ptr<_1aa820a94_Directive> _1abc51e91_findDirective(jule::Slice<jule::Ptr<_1aa820a94_Directive>>*, jule::Str);
inline jule::Bool _1abc52326_hasDirective(jule::Slice<jule::Ptr<_1aa820a94_Directive>>*, jule::Str);
inline jule::Bool _1abc525bd_shouldInitialized(jule::Ptr<_1aa983872_TypeKind>*);
inline void _1d9e3c318_printErrorMessage(jule::Str);
inline void _1d9e3c56b_help(jule::Slice<jule::Str>*);
inline void _1d9e3c77a_version(jule::Slice<jule::Str>*);
inline void _1d9e3c967_toolDistos(void);
inline void _1d9e3cacc_toolDistarch(void);
inline void _1d9e3ccdb_tool(jule::Slice<jule::Str>*);
inline void _1d9e3ceea_julenv(jule::Slice<jule::Str>*);
inline void _1d9e3d2d6_mod(jule::Slice<jule::Str>*);
inline jule::Bool _1d9e3d57d_processCommand(jule::Slice<jule::Str>*);
inline void _1d9e3d6e3_showInfo(void);
void entry_point(void);
inline void _1d9e3e10b_enableVtp(void);
inline void _1d9e3e2b5_init(void);
inline void _1abcae839_init(void);
inline jule::Ptr<_203d7c4c5_File> _1abcaeae2_openOutput(jule::Str*);
inline void _1abcaec57_clearObjects(void);
inline void _1abcb0054_compileIr(jule::Str, jule::Str);
inline jule::Bool _1abcb02eb_isCppSourceFile(jule::Str);
inline void _1abcb050a_pushCompCmdClang(jule::Str*);
inline void _1abcb0719_pushCompCmdGcc(jule::Str*);
inline __jule_tuple_str__jule_tuple_str _1abcb0b6a_genCompileCmd(jule::Str, jule::Ptr<_1ab17e039_IR>*);
inline jule::Str _1abcb0d68_getCompilePath(void);
inline void _1abcb10aa_applyTargetIndependentOptimizations(jule::Ptr<_1ab17e039_IR>*);
inline void _1abcb1220_checkCompilerFlag(void);
inline void _1abcb13da_checkTargetArch(jule::Str);
inline void _1abcb15e9_checkTargetOs(jule::Str);
inline void _1abcb1808_checkTargetFlag(jule::Str*);
inline void _1abcb1a17_checkOptFlag(jule::Str*);
inline void _1abcb1d8b_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _1abcb2122_checkFlags(jule::Slice<jule::Str>*);
inline void _1abcb2331_setupSemaFlags(jule::I64*);
inline jule::Ptr<_1ab17e039_IR> _1abcb25c8_buildIr(jule::Slice<jule::Str>*);
inline void _1abcb27d7_compileCommand(jule::Slice<jule::Str>*);


struct _1aa8a2450_comptimeRangeKindMptrData {
	void(*_1aa8a1bd0_ready)(jule::Trait<_1aa8a2450_comptimeRangeKind>, jule::Ptr<_1aa908c59_Var>, jule::Ptr<_1aa908c59_Var>);
	void(*_1aa8a2098_step)(jule::Trait<_1aa8a2450_comptimeRangeKind>, jule::I64, jule::Ptr<_1aa908c59_Var>, jule::Ptr<_1aa908c59_Var>);
	jule::I64(*_1aa8a230c_len)(jule::Trait<_1aa8a2450_comptimeRangeKind>);
};

struct _1aa8cd36b_ImporterMptrData {
	void(*_1aa8cc28d_SetModPath)(jule::Trait<_1aa8cd36b_Importer>, jule::Str);
	jule::Str(*_1aa8cc4d0_GetModPath)(jule::Trait<_1aa8cd36b_Importer>);
	jule::Str(*_1aa8cc7dd_ModById)(jule::Trait<_1aa8cd36b_Importer>, jule::I64);
	jule::Ptr<_1aa8d101c_ImportInfo>(*_1aa8ccaeb_GetImport)(jule::Trait<_1aa8cd36b_Importer>, jule::Str);
	__jule_tuple_sx_1aa81e80c_Ast__jule_tuple_s_1d9d938bd_Log(*_1aa8ccea3_ImportPackage)(jule::Trait<_1aa8cd36b_Importer>, jule::Str, jule::Bool);
	void(*_1aa8cd228_Imported)(jule::Trait<_1aa8cd36b_Importer>, jule::Ptr<_1aa8d101c_ImportInfo>);
};

struct _1aa983410_KindMptrData {
	jule::Str(*_1aa982eae_Str)(jule::Trait<_1aa983410_Kind>);
	jule::Bool(*_1aa9832bc_Equal)(jule::Trait<_1aa983410_Kind>, jule::Ptr<_1aa983872_TypeKind>);
};

struct _1aa9a0509_LookupMptrData {
	jule::Ptr<_1aa8d101c_ImportInfo>(*_1aa99d9be_SelectPackage)(jule::Trait<_1aa9a0509_Lookup>, jule::Fn<jule::Bool(jule::Ptr<_1aa8d101c_ImportInfo>)>);
	jule::Ptr<_1aa908c59_Var>(*_1aa99dd76_FindVar)(jule::Trait<_1aa9a0509_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1aa982b29_TypeAlias>(*_1aa99e22d_FindTypeAlias)(jule::Trait<_1aa9a0509_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1aa8740c0_Struct>(*_1aa99e5d5_FindStruct)(jule::Trait<_1aa9a0509_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1aa889426_Fn>(*_1aa99e98c_FindFn)(jule::Trait<_1aa9a0509_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1aa89b647_Trait>(*_1aa99ec9a_FindTrait)(jule::Trait<_1aa9a0509_Lookup>, jule::Str);
	jule::Ptr<_1aa89ddca_Enum>(*_1aa9a00a8_FindEnum)(jule::Trait<_1aa9a0509_Lookup>, jule::Str);
	jule::Ptr<_1aa8a04c5_TypeEnum>(*_1aa9a03b6_FindTypeEnum)(jule::Trait<_1aa9a0509_Lookup>, jule::Str);
};

struct _1abca7c3e_CommonFlagMptrData {
	jule::Str(*_1abc78072_Name)(jule::Trait<_1abca7c3e_CommonFlag>);
	jule::I32(*_1abc781a4_Short)(jule::Trait<_1abca7c3e_CommonFlag>);
	jule::Str(*_1abc782d6_What)(jule::Trait<_1abca7c3e_CommonFlag>);
	void(*_1abca7b0c_Reset)(jule::Trait<_1abca7c3e_CommonFlag>);
};



inline void _1aa8a1bd0_ready_comptimeRangeKind_0(jule::Trait<_1aa8a2450_comptimeRangeKind> _self_, jule::Ptr<_1aa908c59_Var> _1328_keyA, jule::Ptr<_1aa908c59_Var> _1344_keyB) {
	_1aa8a4d37_ready(_self_.safe_ptr<_1aa8a4243_comptimeStructFields>(), _1328_keyA, _1344_keyB);
}
inline void _1aa8a2098_step_comptimeRangeKind_0(jule::Trait<_1aa8a2450_comptimeRangeKind> _self_, jule::I64 _1423_i, jule::Ptr<_1aa908c59_Var> _1435_keyA, jule::Ptr<_1aa908c59_Var> _1451_keyB) {
	_1aa8a5200_step(_self_.safe_ptr<_1aa8a4243_comptimeStructFields>(), _1423_i, _1435_keyA, _1451_keyB);
}
inline jule::I64 _1aa8a230c_len_comptimeRangeKind_0(jule::Trait<_1aa8a2450_comptimeRangeKind> _self_) {
	return _1aa8a5464_len(_self_.safe_ptr<_1aa8a4243_comptimeStructFields>());
}
inline void _1aa8cc28d_SetModPath_Importer_0(jule::Trait<_1aa8cd36b_Importer> _self_, jule::Str _1729_path) {
	_1ab17c334_SetModPath(_self_.safe_ptr<_1ab17b7c8_JuleImporter>(), _1729_path);
}
inline jule::Str _1aa8cc4d0_GetModPath_Importer_0(jule::Trait<_1aa8cd36b_Importer> _self_) {
	return _1ab17c598_GetModPath(_self_.safe_ptr<_1ab17b7c8_JuleImporter>());
}
inline jule::Str _1aa8cc7dd_ModById_Importer_0(jule::Trait<_1aa8cd36b_Importer> _self_, jule::I64 _2522_id) {
	return _1ab17c8a6_ModById(_self_.safe_ptr<_1ab17b7c8_JuleImporter>(), _2522_id);
}
inline jule::Ptr<_1aa8d101c_ImportInfo> _1aa8ccaeb_GetImport_Importer_0(jule::Trait<_1aa8cd36b_Importer> _self_, jule::Str _3128_path) {
	return _1ab17cbb4_GetImport(_self_.safe_ptr<_1ab17b7c8_JuleImporter>(), _3128_path);
}
inline __jule_tuple_sx_1aa81e80c_Ast__jule_tuple_s_1d9d938bd_Log _1aa8ccea3_ImportPackage_Importer_0(jule::Trait<_1aa8cd36b_Importer> _self_, jule::Str _3732_path, jule::Bool _3743_update_mod) {
	return _1ab17d06b_ImportPackage(_self_.safe_ptr<_1ab17b7c8_JuleImporter>(), _3732_path, _3743_update_mod);
}
inline void _1aa8cd228_Imported_Importer_0(jule::Trait<_1aa8cd36b_Importer> _self_, jule::Ptr<_1aa8d101c_ImportInfo> _4131__0) {
	_1ab17d2e1_Imported(_self_.safe_ptr<_1ab17b7c8_JuleImporter>(), _4131__0);
}
inline jule::Str _1aa982eae_Str_Kind_0(jule::Trait<_1aa983410_Kind> _self_) {
	return _1aa87728d_Str(_self_.safe_ptr<_1aa876dd6_StructIns>());
}
inline jule::Bool _1aa9832bc_Equal_Kind_0(jule::Trait<_1aa983410_Kind> _self_, jule::Ptr<_1aa983872_TypeKind> _5621_other) {
	return _1aa87759b_Equal(_self_.data.as<_1aa876dd6_StructIns>(), _5621_other);
}
inline jule::Str _1aa982eae_Str_Kind_1(jule::Trait<_1aa983410_Kind> _self_) {
	return _1aa88c407_Str(_self_.safe_ptr<_1aa88c0c7_FnIns>());
}
inline jule::Bool _1aa9832bc_Equal_Kind_1(jule::Trait<_1aa983410_Kind> _self_, jule::Ptr<_1aa983872_TypeKind> _5621_other) {
	return _1aa88c715_Equal(_self_.data.as<_1aa88c0c7_FnIns>(), _5621_other);
}
inline jule::Str _1aa982eae_Str_Kind_2(jule::Trait<_1aa983410_Kind> _self_) {
	return _1aa89ba43_Str(_self_.safe_ptr<_1aa89b647_Trait>());
}
inline jule::Bool _1aa9832bc_Equal_Kind_2(jule::Trait<_1aa983410_Kind> _self_, jule::Ptr<_1aa983872_TypeKind> _5621_other) {
	return _1aa89bd51_Equal(_self_.data.as<_1aa89b647_Trait>(), _5621_other);
}
inline jule::Str _1aa982eae_Str_Kind_3(jule::Trait<_1aa983410_Kind> _self_) {
	return _1aa89e23d_Str(_self_.safe_ptr<_1aa89ddca_Enum>());
}
inline jule::Bool _1aa9832bc_Equal_Kind_3(jule::Trait<_1aa983410_Kind> _self_, jule::Ptr<_1aa983872_TypeKind> _5621_other) {
	return _1aa89e54b_Equal(_self_.data.as<_1aa89ddca_Enum>(), _5621_other);
}
inline jule::Str _1aa982eae_Str_Kind_4(jule::Trait<_1aa983410_Kind> _self_) {
	return _1aa8a0805_Str(_self_.safe_ptr<_1aa8a04c5_TypeEnum>());
}
inline jule::Bool _1aa9832bc_Equal_Kind_4(jule::Trait<_1aa983410_Kind> _self_, jule::Ptr<_1aa983872_TypeKind> _5621_other) {
	return _1aa8a0b13_Equal(_self_.data.as<_1aa8a04c5_TypeEnum>(), _5621_other);
}
inline jule::Str _1aa982eae_Str_Kind_5(jule::Trait<_1aa983410_Kind> _self_) {
	return _1aa8a2a27_Str(_self_.safe_ptr<_1aa8a262b_comptimeRange>());
}
inline jule::Bool _1aa9832bc_Equal_Kind_5(jule::Trait<_1aa983410_Kind> _self_, jule::Ptr<_1aa983872_TypeKind> _5621_other) {
	return _1aa8a2d35_Equal(_self_.data.as<_1aa8a262b_comptimeRange>(), _5621_other);
}
inline jule::Str _1aa982eae_Str_Kind_6(jule::Trait<_1aa983410_Kind> _self_) {
	return _1aa8a3484_Str(_self_.safe_ptr<_1aa8a3121_comptimeStructField>());
}
inline jule::Bool _1aa9832bc_Equal_Kind_6(jule::Trait<_1aa983410_Kind> _self_, jule::Ptr<_1aa983872_TypeKind> _5621_other) {
	return _1aa8a3792_Equal(_self_.data.as<_1aa8a3121_comptimeStructField>(), _5621_other);
}
inline jule::Str _1aa982eae_Str_Kind_7(jule::Trait<_1aa983410_Kind> _self_) {
	return _1aa8a45ea_Str(_self_.safe_ptr<_1aa8a4243_comptimeStructFields>());
}
inline jule::Bool _1aa9832bc_Equal_Kind_7(jule::Trait<_1aa983410_Kind> _self_, jule::Ptr<_1aa983872_TypeKind> _5621_other) {
	return _1aa8a4908_Equal(_self_.data.as<_1aa8a4243_comptimeStructFields>(), _5621_other);
}
inline jule::Str _1aa982eae_Str_Kind_8(jule::Trait<_1aa983410_Kind> _self_) {
	return _1aa8a5ab3_Str(_self_.safe_ptr<_1aa8a5750_comptimeType>());
}
inline jule::Bool _1aa9832bc_Equal_Kind_8(jule::Trait<_1aa983410_Kind> _self_, jule::Ptr<_1aa983872_TypeKind> _5621_other) {
	return _1aa8a5dc1_Equal(_self_.data.as<_1aa8a5750_comptimeType>(), _5621_other);
}
inline jule::Str _1aa982eae_Str_Kind_9(jule::Trait<_1aa983410_Kind> _self_) {
	return _1aa983c6d_Str(_self_.safe_ptr<_1aa983872_TypeKind>());
}
inline jule::Bool _1aa9832bc_Equal_Kind_9(jule::Trait<_1aa983410_Kind> _self_, jule::Ptr<_1aa983872_TypeKind> _5621_other) {
	return _1aa98407b_Equal(_self_.data.as<_1aa983872_TypeKind>(), _5621_other);
}
inline jule::Str _1aa982eae_Str_Kind_10(jule::Trait<_1aa983410_Kind> _self_) {
	return _1aa98969c_Str(_self_.safe_ptr<_1aa989339_Prim>());
}
inline jule::Bool _1aa9832bc_Equal_Kind_10(jule::Trait<_1aa983410_Kind> _self_, jule::Ptr<_1aa983872_TypeKind> _5621_other) {
	return _1aa9899aa_Equal(_self_.data.as<_1aa989339_Prim>(), _5621_other);
}
inline jule::Str _1aa982eae_Str_Kind_11(jule::Trait<_1aa983410_Kind> _self_) {
	return _1aa98ce31_Str(_self_.safe_ptr<_1aa98cabd_Sptr>());
}
inline jule::Bool _1aa9832bc_Equal_Kind_11(jule::Trait<_1aa983410_Kind> _self_, jule::Ptr<_1aa983872_TypeKind> _5621_other) {
	return _1aa98d23e_Equal(_self_.data.as<_1aa98cabd_Sptr>(), _5621_other);
}
inline jule::Str _1aa982eae_Str_Kind_12(jule::Trait<_1aa983410_Kind> _self_) {
	return _1aa98da36_Str(_self_.safe_ptr<_1aa98d52a_Slc>());
}
inline jule::Bool _1aa9832bc_Equal_Kind_12(jule::Trait<_1aa983410_Kind> _self_, jule::Ptr<_1aa983872_TypeKind> _5621_other) {
	return _1aa98dd44_Equal(_self_.data.as<_1aa98d52a_Slc>(), _5621_other);
}
inline jule::Str _1aa982eae_Str_Kind_13(jule::Trait<_1aa983410_Kind> _self_) {
	return _1aa98e41b_Str(_self_.safe_ptr<_1aa98e0a8_Tuple>());
}
inline jule::Bool _1aa9832bc_Equal_Kind_13(jule::Trait<_1aa983410_Kind> _self_, jule::Ptr<_1aa983872_TypeKind> _5621_other) {
	return _1aa98e729_Equal(_self_.data.as<_1aa98e0a8_Tuple>(), _5621_other);
}
inline jule::Str _1aa982eae_Str_Kind_14(jule::Trait<_1aa983410_Kind> _self_) {
	return _1aa98ee44_Str(_self_.safe_ptr<_1aa98ead1_Map>());
}
inline jule::Bool _1aa9832bc_Equal_Kind_14(jule::Trait<_1aa983410_Kind> _self_, jule::Ptr<_1aa983872_TypeKind> _5621_other) {
	return _1aa990252_Equal(_self_.data.as<_1aa98ead1_Map>(), _5621_other);
}
inline jule::Str _1aa982eae_Str_Kind_15(jule::Trait<_1aa983410_Kind> _self_) {
	return _1aa990a38_Str(_self_.safe_ptr<_1aa9906c5_Arr>());
}
inline jule::Bool _1aa9832bc_Equal_Kind_15(jule::Trait<_1aa983410_Kind> _self_, jule::Ptr<_1aa983872_TypeKind> _5621_other) {
	return _1aa990d46_Equal(_self_.data.as<_1aa9906c5_Arr>(), _5621_other);
}
inline jule::Str _1aa982eae_Str_Kind_16(jule::Trait<_1aa983410_Kind> _self_) {
	return _1aa991495_Str(_self_.safe_ptr<_1aa991132_Ptr>());
}
inline jule::Bool _1aa9832bc_Equal_Kind_16(jule::Trait<_1aa983410_Kind> _self_, jule::Ptr<_1aa983872_TypeKind> _5621_other) {
	return _1aa9917a3_Equal(_self_.data.as<_1aa991132_Ptr>(), _5621_other);
}
inline jule::Str _1aa982eae_Str_Kind_17(jule::Trait<_1aa983410_Kind> _self_) {
	return _1abc3edb3_Str(_self_.safe_ptr<_1abc3eb0a_customType>());
}
inline jule::Bool _1aa9832bc_Equal_Kind_17(jule::Trait<_1aa983410_Kind> _self_, jule::Ptr<_1aa983872_TypeKind> _5621_other) {
	return _1abc401c1_Equal(_self_.data.as<_1abc3eb0a_customType>(), _5621_other);
}
inline jule::Ptr<_1aa8d101c_ImportInfo> _1aa99d9be_SelectPackage_Lookup_0(jule::Trait<_1aa9a0509_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1aa8d101c_ImportInfo>)> _932_selector) {
	return _1aa8b9654_SelectPackage(_self_.safe_ptr<_1aa8b91d1_scopeChecker>(), _932_selector);
}
inline jule::Ptr<_1aa908c59_Var> _1aa99dd76_FindVar_Lookup_0(jule::Trait<_1aa9a0509_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_cpp_linked) {
	return _1aa8b9a0b_FindVar(_self_.safe_ptr<_1aa8b91d1_scopeChecker>(), _1326_ident, _1338_cpp_linked);
}
inline jule::Ptr<_1aa982b29_TypeAlias> _1aa99e22d_FindTypeAlias_Lookup_0(jule::Trait<_1aa9a0509_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_cpp_linked) {
	return _1aa8b9db3_FindTypeAlias(_self_.safe_ptr<_1aa8b91d1_scopeChecker>(), _1732_ident, _1744_cpp_linked);
}
inline jule::Ptr<_1aa8740c0_Struct> _1aa99e5d5_FindStruct_Lookup_0(jule::Trait<_1aa9a0509_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_cpp_linked) {
	return _1aa8ba26a_FindStruct(_self_.safe_ptr<_1aa8b91d1_scopeChecker>(), _2129_ident, _2141_cpp_linked);
}
inline jule::Ptr<_1aa889426_Fn> _1aa99e98c_FindFn_Lookup_0(jule::Trait<_1aa9a0509_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_cpp_linked) {
	return _1aa8ba622_FindFn(_self_.safe_ptr<_1aa8b91d1_scopeChecker>(), _2525_ident, _2537_cpp_linked);
}
inline jule::Ptr<_1aa89b647_Trait> _1aa99ec9a_FindTrait_Lookup_0(jule::Trait<_1aa9a0509_Lookup> _self_, jule::Str _2928_ident) {
	return _1aa8ba930_FindTrait(_self_.safe_ptr<_1aa8b91d1_scopeChecker>(), _2928_ident);
}
inline jule::Ptr<_1aa89ddca_Enum> _1aa9a00a8_FindEnum_Lookup_0(jule::Trait<_1aa9a0509_Lookup> _self_, jule::Str _3327_ident) {
	return _1aa8bac3d_FindEnum(_self_.safe_ptr<_1aa8b91d1_scopeChecker>(), _3327_ident);
}
inline jule::Ptr<_1aa8a04c5_TypeEnum> _1aa9a03b6_FindTypeEnum_Lookup_0(jule::Trait<_1aa9a0509_Lookup> _self_, jule::Str _3731_ident) {
	return _1aa8bb04b_FindTypeEnum(_self_.safe_ptr<_1aa8b91d1_scopeChecker>(), _3731_ident);
}
inline jule::Ptr<_1aa8d101c_ImportInfo> _1aa99d9be_SelectPackage_Lookup_1(jule::Trait<_1aa9a0509_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1aa8d101c_ImportInfo>)> _932_selector) {
	return _1aa8d1528_SelectPackage(_self_.safe_ptr<_1aa8d101c_ImportInfo>(), _932_selector);
}
inline jule::Ptr<_1aa908c59_Var> _1aa99dd76_FindVar_Lookup_1(jule::Trait<_1aa9a0509_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_cpp_linked) {
	return _1aa8d18d0_FindVar(_self_.safe_ptr<_1aa8d101c_ImportInfo>(), _1326_ident, _1338_cpp_linked);
}
inline jule::Ptr<_1aa982b29_TypeAlias> _1aa99e22d_FindTypeAlias_Lookup_1(jule::Trait<_1aa9a0509_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_cpp_linked) {
	return _1aa8d1c87_FindTypeAlias(_self_.safe_ptr<_1aa8d101c_ImportInfo>(), _1732_ident, _1744_cpp_linked);
}
inline jule::Ptr<_1aa8740c0_Struct> _1aa99e5d5_FindStruct_Lookup_1(jule::Trait<_1aa9a0509_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_cpp_linked) {
	return _1aa8d213e_FindStruct(_self_.safe_ptr<_1aa8d101c_ImportInfo>(), _2129_ident, _2141_cpp_linked);
}
inline jule::Ptr<_1aa889426_Fn> _1aa99e98c_FindFn_Lookup_1(jule::Trait<_1aa9a0509_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_cpp_linked) {
	return _1aa8d24e6_FindFn(_self_.safe_ptr<_1aa8d101c_ImportInfo>(), _2525_ident, _2537_cpp_linked);
}
inline jule::Ptr<_1aa89b647_Trait> _1aa99ec9a_FindTrait_Lookup_1(jule::Trait<_1aa9a0509_Lookup> _self_, jule::Str _2928_ident) {
	return _1aa8d2804_FindTrait(_self_.safe_ptr<_1aa8d101c_ImportInfo>(), _2928_ident);
}
inline jule::Ptr<_1aa89ddca_Enum> _1aa9a00a8_FindEnum_Lookup_1(jule::Trait<_1aa9a0509_Lookup> _self_, jule::Str _3327_ident) {
	return _1aa8d2b12_FindEnum(_self_.safe_ptr<_1aa8d101c_ImportInfo>(), _3327_ident);
}
inline jule::Ptr<_1aa8a04c5_TypeEnum> _1aa9a03b6_FindTypeEnum_Lookup_1(jule::Trait<_1aa9a0509_Lookup> _self_, jule::Str _3731_ident) {
	return _1aa8d2e20_FindTypeEnum(_self_.safe_ptr<_1aa8d101c_ImportInfo>(), _3731_ident);
}
inline jule::Ptr<_1aa8d101c_ImportInfo> _1aa99d9be_SelectPackage_Lookup_2(jule::Trait<_1aa9a0509_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1aa8d101c_ImportInfo>)> _932_selector) {
	return _1aa8d411e_SelectPackage(_self_.safe_ptr<_1aa8d3b57_Package>(), _932_selector);
}
inline jule::Ptr<_1aa908c59_Var> _1aa99dd76_FindVar_Lookup_2(jule::Trait<_1aa9a0509_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_cpp_linked) {
	return _1aa8d44c6_FindVar(_self_.safe_ptr<_1aa8d3b57_Package>(), _1326_ident, _1338_cpp_linked);
}
inline jule::Ptr<_1aa982b29_TypeAlias> _1aa99e22d_FindTypeAlias_Lookup_2(jule::Trait<_1aa9a0509_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_cpp_linked) {
	return _1aa8d487d_FindTypeAlias(_self_.safe_ptr<_1aa8d3b57_Package>(), _1732_ident, _1744_cpp_linked);
}
inline jule::Ptr<_1aa8740c0_Struct> _1aa99e5d5_FindStruct_Lookup_2(jule::Trait<_1aa9a0509_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_cpp_linked) {
	return _1aa8d4c35_FindStruct(_self_.safe_ptr<_1aa8d3b57_Package>(), _2129_ident, _2141_cpp_linked);
}
inline jule::Ptr<_1aa889426_Fn> _1aa99e98c_FindFn_Lookup_2(jule::Trait<_1aa9a0509_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_cpp_linked) {
	return _1aa8d50dc_FindFn(_self_.safe_ptr<_1aa8d3b57_Package>(), _2525_ident, _2537_cpp_linked);
}
inline jule::Ptr<_1aa89b647_Trait> _1aa99ec9a_FindTrait_Lookup_2(jule::Trait<_1aa9a0509_Lookup> _self_, jule::Str _2928_ident) {
	return _1aa8d53ea_FindTrait(_self_.safe_ptr<_1aa8d3b57_Package>(), _2928_ident);
}
inline jule::Ptr<_1aa89ddca_Enum> _1aa9a00a8_FindEnum_Lookup_2(jule::Trait<_1aa9a0509_Lookup> _self_, jule::Str _3327_ident) {
	return _1aa8d5708_FindEnum(_self_.safe_ptr<_1aa8d3b57_Package>(), _3327_ident);
}
inline jule::Ptr<_1aa8a04c5_TypeEnum> _1aa9a03b6_FindTypeEnum_Lookup_2(jule::Trait<_1aa9a0509_Lookup> _self_, jule::Str _3731_ident) {
	return _1aa8d5a16_FindTypeEnum(_self_.safe_ptr<_1aa8d3b57_Package>(), _3731_ident);
}
inline jule::Ptr<_1aa8d101c_ImportInfo> _1aa99d9be_SelectPackage_Lookup_3(jule::Trait<_1aa9a0509_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1aa8d101c_ImportInfo>)> _932_selector) {
	return _1aa8d9762_SelectPackage(_self_.safe_ptr<_1aa8d92de_Sema>(), _932_selector);
}
inline jule::Ptr<_1aa908c59_Var> _1aa99dd76_FindVar_Lookup_3(jule::Trait<_1aa9a0509_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_cpp_linked) {
	return _1aa8d9b19_FindVar(_self_.safe_ptr<_1aa8d92de_Sema>(), _1326_ident, _1338_cpp_linked);
}
inline jule::Ptr<_1aa982b29_TypeAlias> _1aa99e22d_FindTypeAlias_Lookup_3(jule::Trait<_1aa9a0509_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_cpp_linked) {
	return _1aa8d9ec1_FindTypeAlias(_self_.safe_ptr<_1aa8d92de_Sema>(), _1732_ident, _1744_cpp_linked);
}
inline jule::Ptr<_1aa8740c0_Struct> _1aa99e5d5_FindStruct_Lookup_3(jule::Trait<_1aa9a0509_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_cpp_linked) {
	return _1aa8da378_FindStruct(_self_.safe_ptr<_1aa8d92de_Sema>(), _2129_ident, _2141_cpp_linked);
}
inline jule::Ptr<_1aa889426_Fn> _1aa99e98c_FindFn_Lookup_3(jule::Trait<_1aa9a0509_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_cpp_linked) {
	return _1aa8da730_FindFn(_self_.safe_ptr<_1aa8d92de_Sema>(), _2525_ident, _2537_cpp_linked);
}
inline jule::Ptr<_1aa89b647_Trait> _1aa99ec9a_FindTrait_Lookup_3(jule::Trait<_1aa9a0509_Lookup> _self_, jule::Str _2928_ident) {
	return _1aa8daa3d_FindTrait(_self_.safe_ptr<_1aa8d92de_Sema>(), _2928_ident);
}
inline jule::Ptr<_1aa89ddca_Enum> _1aa9a00a8_FindEnum_Lookup_3(jule::Trait<_1aa9a0509_Lookup> _self_, jule::Str _3327_ident) {
	return _1aa8dad4b_FindEnum(_self_.safe_ptr<_1aa8d92de_Sema>(), _3327_ident);
}
inline jule::Ptr<_1aa8a04c5_TypeEnum> _1aa9a03b6_FindTypeEnum_Lookup_3(jule::Trait<_1aa9a0509_Lookup> _self_, jule::Str _3731_ident) {
	return _1aa8db159_FindTypeEnum(_self_.safe_ptr<_1aa8d92de_Sema>(), _3731_ident);
}
inline jule::Ptr<_1aa8d101c_ImportInfo> _1aa99d9be_SelectPackage_Lookup_4(jule::Trait<_1aa9a0509_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1aa8d101c_ImportInfo>)> _932_selector) {
	return _1aa94da29_SelectPackage(_self_.safe_ptr<_1aa94d51d_SymbolTable>(), _932_selector);
}
inline jule::Ptr<_1aa908c59_Var> _1aa99dd76_FindVar_Lookup_4(jule::Trait<_1aa9a0509_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_cpp_linked) {
	return _1aa94ddd1_FindVar(_self_.safe_ptr<_1aa94d51d_SymbolTable>(), _1326_ident, _1338_cpp_linked);
}
inline jule::Ptr<_1aa982b29_TypeAlias> _1aa99e22d_FindTypeAlias_Lookup_4(jule::Trait<_1aa9a0509_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_cpp_linked) {
	return _1aa94e288_FindTypeAlias(_self_.safe_ptr<_1aa94d51d_SymbolTable>(), _1732_ident, _1744_cpp_linked);
}
inline jule::Ptr<_1aa8740c0_Struct> _1aa99e5d5_FindStruct_Lookup_4(jule::Trait<_1aa9a0509_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_cpp_linked) {
	return _1aa94e640_FindStruct(_self_.safe_ptr<_1aa94d51d_SymbolTable>(), _2129_ident, _2141_cpp_linked);
}
inline jule::Ptr<_1aa889426_Fn> _1aa99e98c_FindFn_Lookup_4(jule::Trait<_1aa9a0509_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_cpp_linked) {
	return _1aa94e9e7_FindFn(_self_.safe_ptr<_1aa94d51d_SymbolTable>(), _2525_ident, _2537_cpp_linked);
}
inline jule::Ptr<_1aa89b647_Trait> _1aa99ec9a_FindTrait_Lookup_4(jule::Trait<_1aa9a0509_Lookup> _self_, jule::Str _2928_ident) {
	return _1aa94ed05_FindTrait(_self_.safe_ptr<_1aa94d51d_SymbolTable>(), _2928_ident);
}
inline jule::Ptr<_1aa89ddca_Enum> _1aa9a00a8_FindEnum_Lookup_4(jule::Trait<_1aa9a0509_Lookup> _self_, jule::Str _3327_ident) {
	return _1aa950113_FindEnum(_self_.safe_ptr<_1aa94d51d_SymbolTable>(), _3327_ident);
}
inline jule::Ptr<_1aa8a04c5_TypeEnum> _1aa9a03b6_FindTypeEnum_Lookup_4(jule::Trait<_1aa9a0509_Lookup> _self_, jule::Str _3731_ident) {
	return _1aa950421_FindTypeEnum(_self_.safe_ptr<_1aa94d51d_SymbolTable>(), _3731_ident);
}
inline jule::Str _1abc78072_Name_CommonFlag_0(jule::Trait<_1abca7c3e_CommonFlag> _self_) {
	return _1bb4030e4_Name(_self_.safe_ptr<_1bb402d08_Flag>());
}
inline jule::I32 _1abc781a4_Short_CommonFlag_0(jule::Trait<_1abca7c3e_CommonFlag> _self_) {
	return _1bb4034ac_Short(_self_.safe_ptr<_1bb402d08_Flag>());
}
inline jule::Str _1abc782d6_What_CommonFlag_0(jule::Trait<_1abca7c3e_CommonFlag> _self_) {
	return _1bb403226_What(_self_.safe_ptr<_1bb402d08_Flag>());
}
inline void _1abca7b0c_Reset_CommonFlag_0(jule::Trait<_1abca7c3e_CommonFlag> _self_) {
	_1bb403369_Reset(_self_.safe_ptr<_1bb402d08_Flag>());
}
inline jule::Str _1abc78072_Name_CommonFlag_1(jule::Trait<_1abca7c3e_CommonFlag> _self_) {
	return _1bb406515_Name(_self_.safe_ptr<_1bb406977_Flag>());
}
inline jule::I32 _1abc781a4_Short_CommonFlag_1(jule::Trait<_1abca7c3e_CommonFlag> _self_) {
	return _1bb406ec7_Short(_self_.safe_ptr<_1bb406977_Flag>());
}
inline jule::Str _1abc782d6_What_CommonFlag_1(jule::Trait<_1abca7c3e_CommonFlag> _self_) {
	return _1bb406c63_What(_self_.safe_ptr<_1bb406977_Flag>());
}
inline void _1abca7b0c_Reset_CommonFlag_1(jule::Trait<_1abca7c3e_CommonFlag> _self_) {
	_1bb406d95_Reset(_self_.safe_ptr<_1bb406977_Flag>());
}
inline jule::Str _1abc78072_Name_CommonFlag_2(jule::Trait<_1abca7c3e_CommonFlag> _self_) {
	return _1bb409ccc_Name(_self_.safe_ptr<_1bb40a23e_Flag>());
}
inline jule::I32 _1abc781a4_Short_CommonFlag_2(jule::Trait<_1abca7c3e_CommonFlag> _self_) {
	return _1bb40a78e_Short(_self_.safe_ptr<_1bb40a23e_Flag>());
}
inline jule::Str _1abc782d6_What_CommonFlag_2(jule::Trait<_1abca7c3e_CommonFlag> _self_) {
	return _1bb40a52a_What(_self_.safe_ptr<_1bb40a23e_Flag>());
}
inline void _1abca7b0c_Reset_CommonFlag_2(jule::Trait<_1abca7c3e_CommonFlag> _self_) {
	_1bb40a65c_Reset(_self_.safe_ptr<_1bb40a23e_Flag>());
}
inline jule::Str _1abc78072_Name_CommonFlag_3(jule::Trait<_1abca7c3e_CommonFlag> _self_) {
	return _1bb40d5d8_Name(_self_.safe_ptr<_1bb40da4a_Flag>());
}
inline jule::I32 _1abc781a4_Short_CommonFlag_3(jule::Trait<_1abca7c3e_CommonFlag> _self_) {
	return _1bb40e09a_Short(_self_.safe_ptr<_1bb40da4a_Flag>());
}
inline jule::Str _1abc782d6_What_CommonFlag_3(jule::Trait<_1abca7c3e_CommonFlag> _self_) {
	return _1bb40dd36_What(_self_.safe_ptr<_1bb40da4a_Flag>());
}
inline void _1abca7b0c_Reset_CommonFlag_3(jule::Trait<_1abca7c3e_CommonFlag> _self_) {
	_1bb40de68_Reset(_self_.safe_ptr<_1bb40da4a_Flag>());
}
inline jule::Str _1abc78072_Name_CommonFlag_4(jule::Trait<_1abca7c3e_CommonFlag> _self_) {
	return _1bb411da0_Name(_self_.safe_ptr<_1bb412312_Flag>());
}
inline jule::I32 _1abc781a4_Short_CommonFlag_4(jule::Trait<_1abca7c3e_CommonFlag> _self_) {
	return _1bb412862_Short(_self_.safe_ptr<_1bb412312_Flag>());
}
inline jule::Str _1abc782d6_What_CommonFlag_4(jule::Trait<_1abca7c3e_CommonFlag> _self_) {
	return _1bb4125ed_What(_self_.safe_ptr<_1bb412312_Flag>());
}
inline void _1abca7b0c_Reset_CommonFlag_4(jule::Trait<_1abca7c3e_CommonFlag> _self_) {
	_1bb412730_Reset(_self_.safe_ptr<_1bb412312_Flag>());
}


static _1aa8a2450_comptimeRangeKindMptrData _1aa8a2450_comptimeRangeKind_mptr_data[] = {
	{
		._1aa8a1bd0_ready=_1aa8a1bd0_ready_comptimeRangeKind_0,
		._1aa8a2098_step=_1aa8a2098_step_comptimeRangeKind_0,
		._1aa8a230c_len=_1aa8a230c_len_comptimeRangeKind_0,
	},
};
static _1aa8cd36b_ImporterMptrData _1aa8cd36b_Importer_mptr_data[] = {
	{
		._1aa8cc28d_SetModPath=_1aa8cc28d_SetModPath_Importer_0,
		._1aa8cc4d0_GetModPath=_1aa8cc4d0_GetModPath_Importer_0,
		._1aa8cc7dd_ModById=_1aa8cc7dd_ModById_Importer_0,
		._1aa8ccaeb_GetImport=_1aa8ccaeb_GetImport_Importer_0,
		._1aa8ccea3_ImportPackage=_1aa8ccea3_ImportPackage_Importer_0,
		._1aa8cd228_Imported=_1aa8cd228_Imported_Importer_0,
	},
};
static _1aa983410_KindMptrData _1aa983410_Kind_mptr_data[] = {
	{
		._1aa982eae_Str=_1aa982eae_Str_Kind_0,
		._1aa9832bc_Equal=_1aa9832bc_Equal_Kind_0,
	},
	{
		._1aa982eae_Str=_1aa982eae_Str_Kind_1,
		._1aa9832bc_Equal=_1aa9832bc_Equal_Kind_1,
	},
	{
		._1aa982eae_Str=_1aa982eae_Str_Kind_2,
		._1aa9832bc_Equal=_1aa9832bc_Equal_Kind_2,
	},
	{
		._1aa982eae_Str=_1aa982eae_Str_Kind_3,
		._1aa9832bc_Equal=_1aa9832bc_Equal_Kind_3,
	},
	{
		._1aa982eae_Str=_1aa982eae_Str_Kind_4,
		._1aa9832bc_Equal=_1aa9832bc_Equal_Kind_4,
	},
	{
		._1aa982eae_Str=_1aa982eae_Str_Kind_5,
		._1aa9832bc_Equal=_1aa9832bc_Equal_Kind_5,
	},
	{
		._1aa982eae_Str=_1aa982eae_Str_Kind_6,
		._1aa9832bc_Equal=_1aa9832bc_Equal_Kind_6,
	},
	{
		._1aa982eae_Str=_1aa982eae_Str_Kind_7,
		._1aa9832bc_Equal=_1aa9832bc_Equal_Kind_7,
	},
	{
		._1aa982eae_Str=_1aa982eae_Str_Kind_8,
		._1aa9832bc_Equal=_1aa9832bc_Equal_Kind_8,
	},
	{
		._1aa982eae_Str=_1aa982eae_Str_Kind_9,
		._1aa9832bc_Equal=_1aa9832bc_Equal_Kind_9,
	},
	{
		._1aa982eae_Str=_1aa982eae_Str_Kind_10,
		._1aa9832bc_Equal=_1aa9832bc_Equal_Kind_10,
	},
	{
		._1aa982eae_Str=_1aa982eae_Str_Kind_11,
		._1aa9832bc_Equal=_1aa9832bc_Equal_Kind_11,
	},
	{
		._1aa982eae_Str=_1aa982eae_Str_Kind_12,
		._1aa9832bc_Equal=_1aa9832bc_Equal_Kind_12,
	},
	{
		._1aa982eae_Str=_1aa982eae_Str_Kind_13,
		._1aa9832bc_Equal=_1aa9832bc_Equal_Kind_13,
	},
	{
		._1aa982eae_Str=_1aa982eae_Str_Kind_14,
		._1aa9832bc_Equal=_1aa9832bc_Equal_Kind_14,
	},
	{
		._1aa982eae_Str=_1aa982eae_Str_Kind_15,
		._1aa9832bc_Equal=_1aa9832bc_Equal_Kind_15,
	},
	{
		._1aa982eae_Str=_1aa982eae_Str_Kind_16,
		._1aa9832bc_Equal=_1aa9832bc_Equal_Kind_16,
	},
	{
		._1aa982eae_Str=_1aa982eae_Str_Kind_17,
		._1aa9832bc_Equal=_1aa9832bc_Equal_Kind_17,
	},
};
static _1aa9a0509_LookupMptrData _1aa9a0509_Lookup_mptr_data[] = {
	{
		._1aa99d9be_SelectPackage=_1aa99d9be_SelectPackage_Lookup_0,
		._1aa99dd76_FindVar=_1aa99dd76_FindVar_Lookup_0,
		._1aa99e22d_FindTypeAlias=_1aa99e22d_FindTypeAlias_Lookup_0,
		._1aa99e5d5_FindStruct=_1aa99e5d5_FindStruct_Lookup_0,
		._1aa99e98c_FindFn=_1aa99e98c_FindFn_Lookup_0,
		._1aa99ec9a_FindTrait=_1aa99ec9a_FindTrait_Lookup_0,
		._1aa9a00a8_FindEnum=_1aa9a00a8_FindEnum_Lookup_0,
		._1aa9a03b6_FindTypeEnum=_1aa9a03b6_FindTypeEnum_Lookup_0,
	},
	{
		._1aa99d9be_SelectPackage=_1aa99d9be_SelectPackage_Lookup_1,
		._1aa99dd76_FindVar=_1aa99dd76_FindVar_Lookup_1,
		._1aa99e22d_FindTypeAlias=_1aa99e22d_FindTypeAlias_Lookup_1,
		._1aa99e5d5_FindStruct=_1aa99e5d5_FindStruct_Lookup_1,
		._1aa99e98c_FindFn=_1aa99e98c_FindFn_Lookup_1,
		._1aa99ec9a_FindTrait=_1aa99ec9a_FindTrait_Lookup_1,
		._1aa9a00a8_FindEnum=_1aa9a00a8_FindEnum_Lookup_1,
		._1aa9a03b6_FindTypeEnum=_1aa9a03b6_FindTypeEnum_Lookup_1,
	},
	{
		._1aa99d9be_SelectPackage=_1aa99d9be_SelectPackage_Lookup_2,
		._1aa99dd76_FindVar=_1aa99dd76_FindVar_Lookup_2,
		._1aa99e22d_FindTypeAlias=_1aa99e22d_FindTypeAlias_Lookup_2,
		._1aa99e5d5_FindStruct=_1aa99e5d5_FindStruct_Lookup_2,
		._1aa99e98c_FindFn=_1aa99e98c_FindFn_Lookup_2,
		._1aa99ec9a_FindTrait=_1aa99ec9a_FindTrait_Lookup_2,
		._1aa9a00a8_FindEnum=_1aa9a00a8_FindEnum_Lookup_2,
		._1aa9a03b6_FindTypeEnum=_1aa9a03b6_FindTypeEnum_Lookup_2,
	},
	{
		._1aa99d9be_SelectPackage=_1aa99d9be_SelectPackage_Lookup_3,
		._1aa99dd76_FindVar=_1aa99dd76_FindVar_Lookup_3,
		._1aa99e22d_FindTypeAlias=_1aa99e22d_FindTypeAlias_Lookup_3,
		._1aa99e5d5_FindStruct=_1aa99e5d5_FindStruct_Lookup_3,
		._1aa99e98c_FindFn=_1aa99e98c_FindFn_Lookup_3,
		._1aa99ec9a_FindTrait=_1aa99ec9a_FindTrait_Lookup_3,
		._1aa9a00a8_FindEnum=_1aa9a00a8_FindEnum_Lookup_3,
		._1aa9a03b6_FindTypeEnum=_1aa9a03b6_FindTypeEnum_Lookup_3,
	},
	{
		._1aa99d9be_SelectPackage=_1aa99d9be_SelectPackage_Lookup_4,
		._1aa99dd76_FindVar=_1aa99dd76_FindVar_Lookup_4,
		._1aa99e22d_FindTypeAlias=_1aa99e22d_FindTypeAlias_Lookup_4,
		._1aa99e5d5_FindStruct=_1aa99e5d5_FindStruct_Lookup_4,
		._1aa99e98c_FindFn=_1aa99e98c_FindFn_Lookup_4,
		._1aa99ec9a_FindTrait=_1aa99ec9a_FindTrait_Lookup_4,
		._1aa9a00a8_FindEnum=_1aa9a00a8_FindEnum_Lookup_4,
		._1aa9a03b6_FindTypeEnum=_1aa9a03b6_FindTypeEnum_Lookup_4,
	},
};
static _1abca7c3e_CommonFlagMptrData _1abca7c3e_CommonFlag_mptr_data[] = {
	{
		._1abc78072_Name=_1abc78072_Name_CommonFlag_0,
		._1abc781a4_Short=_1abc781a4_Short_CommonFlag_0,
		._1abc782d6_What=_1abc782d6_What_CommonFlag_0,
		._1abca7b0c_Reset=_1abca7b0c_Reset_CommonFlag_0,
	},
	{
		._1abc78072_Name=_1abc78072_Name_CommonFlag_1,
		._1abc781a4_Short=_1abc781a4_Short_CommonFlag_1,
		._1abc782d6_What=_1abc782d6_What_CommonFlag_1,
		._1abca7b0c_Reset=_1abca7b0c_Reset_CommonFlag_1,
	},
	{
		._1abc78072_Name=_1abc78072_Name_CommonFlag_2,
		._1abc781a4_Short=_1abc781a4_Short_CommonFlag_2,
		._1abc782d6_What=_1abc782d6_What_CommonFlag_2,
		._1abca7b0c_Reset=_1abca7b0c_Reset_CommonFlag_2,
	},
	{
		._1abc78072_Name=_1abc78072_Name_CommonFlag_3,
		._1abc781a4_Short=_1abc781a4_Short_CommonFlag_3,
		._1abc782d6_What=_1abc782d6_What_CommonFlag_3,
		._1abca7b0c_Reset=_1abca7b0c_Reset_CommonFlag_3,
	},
	{
		._1abc78072_Name=_1abc78072_Name_CommonFlag_4,
		._1abc781a4_Short=_1abc781a4_Short_CommonFlag_4,
		._1abc782d6_What=_1abc782d6_What_CommonFlag_4,
		._1abca7b0c_Reset=_1abca7b0c_Reset_CommonFlag_4,
	},
};


void __jule_any_type0_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type0_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other); }
jule::Str __jule_any_type0_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type0{.dealloc=__jule_any_type0_dealloc, .eq=__jule_any_type0_eq, .to_str=__jule_any_type0_to_str};
jule::Bool __jule_any_type0_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type0 && __jule_any_type0_eq(any.data.alloc, (void*)&other); }
void __jule_any_type1_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
jule::Bool __jule_any_type1_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other); }
jule::Str __jule_any_type1_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type1{.dealloc=__jule_any_type1_dealloc, .eq=__jule_any_type1_eq, .to_str=__jule_any_type1_to_str};
jule::Bool __jule_any_type1_compare(const jule::Any &any, const jule::I32 &other) { return any.type == &__jule_any_type1 && __jule_any_type1_eq(any.data.alloc, (void*)&other); }
void __jule_any_type2_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type2_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other); }
jule::Str __jule_any_type2_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type2{.dealloc=__jule_any_type2_dealloc, .eq=__jule_any_type2_eq, .to_str=__jule_any_type2_to_str};
jule::Bool __jule_any_type2_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type2 && __jule_any_type2_eq(any.data.alloc, (void*)&other); }
void __jule_any_type3_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U64>().dealloc(); }
jule::Bool __jule_any_type3_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U64*>(alloc) == *reinterpret_cast<jule::U64*>(other); }
jule::Str __jule_any_type3_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U64*>(alloc)); }
struct jule::Any::Type __jule_any_type3{.dealloc=__jule_any_type3_dealloc, .eq=__jule_any_type3_eq, .to_str=__jule_any_type3_to_str};
jule::Bool __jule_any_type3_compare(const jule::Any &any, const jule::U64 &other) { return any.type == &__jule_any_type3 && __jule_any_type3_eq(any.data.alloc, (void*)&other); }
void __jule_any_type4_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Bool>().dealloc(); }
jule::Bool __jule_any_type4_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Bool*>(alloc) == *reinterpret_cast<jule::Bool*>(other); }
jule::Str __jule_any_type4_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Bool*>(alloc)); }
struct jule::Any::Type __jule_any_type4{.dealloc=__jule_any_type4_dealloc, .eq=__jule_any_type4_eq, .to_str=__jule_any_type4_to_str};
jule::Bool __jule_any_type4_compare(const jule::Any &any, const jule::Bool &other) { return any.type == &__jule_any_type4 && __jule_any_type4_eq(any.data.alloc, (void*)&other); }
void __jule_any_type5_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
jule::Bool __jule_any_type5_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Str*>(alloc) == *reinterpret_cast<jule::Str*>(other); }
jule::Str __jule_any_type5_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type5{.dealloc=__jule_any_type5_dealloc, .eq=__jule_any_type5_eq, .to_str=__jule_any_type5_to_str};
jule::Bool __jule_any_type5_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type5 && __jule_any_type5_eq(any.data.alloc, (void*)&other); }
void __jule_any_type6_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F64>().dealloc(); }
jule::Bool __jule_any_type6_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::F64*>(alloc) == *reinterpret_cast<jule::F64*>(other); }
jule::Str __jule_any_type6_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F64*>(alloc)); }
struct jule::Any::Type __jule_any_type6{.dealloc=__jule_any_type6_dealloc, .eq=__jule_any_type6_eq, .to_str=__jule_any_type6_to_str};
jule::Bool __jule_any_type6_compare(const jule::Any &any, const jule::F64 &other) { return any.type == &__jule_any_type6 && __jule_any_type6_eq(any.data.alloc, (void*)&other); }
void __jule_any_type7_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa88c0c7_FnIns>().dealloc(); }
struct jule::Any::Type __jule_any_type7{.dealloc=__jule_any_type7_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type7_compare(const jule::Any &any, const jule::Ptr<_1aa88c0c7_FnIns> &other) { return any.type == &__jule_any_type7 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type8_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa908c59_Var>().dealloc(); }
struct jule::Any::Type __jule_any_type8{.dealloc=__jule_any_type8_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type8_compare(const jule::Any &any, const jule::Ptr<_1aa908c59_Var> &other) { return any.type == &__jule_any_type8 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type9_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa876dd6_StructIns>().dealloc(); }
struct jule::Any::Type __jule_any_type9{.dealloc=__jule_any_type9_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type9_compare(const jule::Any &any, const jule::Ptr<_1aa876dd6_StructIns> &other) { return any.type == &__jule_any_type9 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type10_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa89b647_Trait>().dealloc(); }
struct jule::Any::Type __jule_any_type10{.dealloc=__jule_any_type10_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type10_compare(const jule::Any &any, const jule::Ptr<_1aa89b647_Trait> &other) { return any.type == &__jule_any_type10 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type11_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa870022_Impl>().dealloc(); }
struct jule::Any::Type __jule_any_type11{.dealloc=__jule_any_type11_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type11_compare(const jule::Any &any, const jule::Ptr<_1aa870022_Impl> &other) { return any.type == &__jule_any_type11 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type12_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa86a2e7_TypeAliasDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type12{.dealloc=__jule_any_type12_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type12_compare(const jule::Any &any, const jule::Ptr<_1aa86a2e7_TypeAliasDecl> &other) { return any.type == &__jule_any_type12 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type13_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa86e241_StructDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type13{.dealloc=__jule_any_type13_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type13_compare(const jule::Any &any, const jule::Ptr<_1aa86e241_StructDecl> &other) { return any.type == &__jule_any_type13 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type14_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa8659a7_FnDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type14{.dealloc=__jule_any_type14_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type14_compare(const jule::Any &any, const jule::Ptr<_1aa8659a7_FnDecl> &other) { return any.type == &__jule_any_type14 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type15_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa86e917_TraitDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type15{.dealloc=__jule_any_type15_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type15_compare(const jule::Any &any, const jule::Ptr<_1aa86e917_TraitDecl> &other) { return any.type == &__jule_any_type15 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type16_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa866986_VarDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type16{.dealloc=__jule_any_type16_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type16_compare(const jule::Any &any, const jule::Ptr<_1aa866986_VarDecl> &other) { return any.type == &__jule_any_type16 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type17_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa86c67e_EnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type17{.dealloc=__jule_any_type17_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type17_compare(const jule::Any &any, const jule::Ptr<_1aa86c67e_EnumDecl> &other) { return any.type == &__jule_any_type17 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type18_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa86d790_TypeEnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type18{.dealloc=__jule_any_type18_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type18_compare(const jule::Any &any, const jule::Ptr<_1aa86d790_TypeEnumDecl> &other) { return any.type == &__jule_any_type18 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type19_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0901b1b_Const>().dealloc(); }
struct jule::Any::Type __jule_any_type19{.dealloc=__jule_any_type19_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type19_compare(const jule::Any &any, const jule::Ptr<_1c0901b1b_Const> &other) { return any.type == &__jule_any_type19 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type20_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa8545de_IdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type20{.dealloc=__jule_any_type20_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type20_compare(const jule::Any &any, const jule::Ptr<_1aa8545de_IdentTypeDecl> &other) { return any.type == &__jule_any_type20 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type21_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa8b4ce2_Label>().dealloc(); }
struct jule::Any::Type __jule_any_type21{.dealloc=__jule_any_type21_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type21_compare(const jule::Any &any, const jule::Ptr<_1aa8b4ce2_Label> &other) { return any.type == &__jule_any_type21 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type22_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa8b25a3_Scope>().dealloc(); }
struct jule::Any::Type __jule_any_type22{.dealloc=__jule_any_type22_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type22_compare(const jule::Any &any, const jule::Ptr<_1aa8b25a3_Scope> &other) { return any.type == &__jule_any_type22 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type23_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa885587_BuiltinErrorCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type23{.dealloc=__jule_any_type23_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type23_compare(const jule::Any &any, const jule::Ptr<_1aa885587_BuiltinErrorCallExprModel> &other) { return any.type == &__jule_any_type23 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type24_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa957d85_Data>().dealloc(); }
struct jule::Any::Type __jule_any_type24{.dealloc=__jule_any_type24_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type24_compare(const jule::Any &any, const jule::Ptr<_1aa957d85_Data> &other) { return any.type == &__jule_any_type24 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type25_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa886632_BackendEmitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type25{.dealloc=__jule_any_type25_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type25_compare(const jule::Any &any, const jule::Ptr<_1aa886632_BackendEmitExprModel> &other) { return any.type == &__jule_any_type25 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type26_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa884047_BuiltinAppendCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type26{.dealloc=__jule_any_type26_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type26_compare(const jule::Any &any, const jule::Ptr<_1aa884047_BuiltinAppendCallExprModel> &other) { return any.type == &__jule_any_type26 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type27_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa88292a_BuiltinCloneCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type27{.dealloc=__jule_any_type27_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type27_compare(const jule::Any &any, const jule::Ptr<_1aa88292a_BuiltinCloneCallExprModel> &other) { return any.type == &__jule_any_type27 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type28_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa882221_BuiltinOutCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type28{.dealloc=__jule_any_type28_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type28_compare(const jule::Any &any, const jule::Ptr<_1aa882221_BuiltinOutCallExprModel> &other) { return any.type == &__jule_any_type28 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type29_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa88260b_BuiltinOutlnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type29{.dealloc=__jule_any_type29_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type29_compare(const jule::Any &any, const jule::Ptr<_1aa88260b_BuiltinOutlnCallExprModel> &other) { return any.type == &__jule_any_type29 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type30_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa883200_BuiltinPanicCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type30{.dealloc=__jule_any_type30_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type30_compare(const jule::Any &any, const jule::Ptr<_1aa883200_BuiltinPanicCallExprModel> &other) { return any.type == &__jule_any_type30 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type31_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa8836a6_BuiltinAssertCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type31{.dealloc=__jule_any_type31_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type31_compare(const jule::Any &any, const jule::Ptr<_1aa8836a6_BuiltinAssertCallExprModel> &other) { return any.type == &__jule_any_type31 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type32_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa88519c_BuiltinCopyCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type32{.dealloc=__jule_any_type32_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type32_compare(const jule::Any &any, const jule::Ptr<_1aa88519c_BuiltinCopyCallExprModel> &other) { return any.type == &__jule_any_type32 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type33_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa884d39_BuiltinDeleteCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type33{.dealloc=__jule_any_type33_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type33_compare(const jule::Any &any, const jule::Ptr<_1aa884d39_BuiltinDeleteCallExprModel> &other) { return any.type == &__jule_any_type33 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type34_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa88691d_FreeExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type34{.dealloc=__jule_any_type34_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type34_compare(const jule::Any &any, const jule::Ptr<_1aa88691d_FreeExprModel> &other) { return any.type == &__jule_any_type34 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type35_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa87d11d_FnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type35{.dealloc=__jule_any_type35_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type35_compare(const jule::Any &any, const jule::Ptr<_1aa87d11d_FnCallExprModel> &other) { return any.type == &__jule_any_type35 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type36_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa8b310e_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type36{.dealloc=__jule_any_type36_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type36_compare(const jule::Any &any, const jule::Ptr<_1aa8b310e_Conditional> &other) { return any.type == &__jule_any_type36 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type37_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa8b33ea_InfIter>().dealloc(); }
struct jule::Any::Type __jule_any_type37{.dealloc=__jule_any_type37_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type37_compare(const jule::Any &any, const jule::Ptr<_1aa8b33ea_InfIter> &other) { return any.type == &__jule_any_type37 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type38_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa867c73_WhileKind>().dealloc(); }
struct jule::Any::Type __jule_any_type38{.dealloc=__jule_any_type38_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type38_compare(const jule::Any &any, const jule::Ptr<_1aa867c73_WhileKind> &other) { return any.type == &__jule_any_type38 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type39_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa8b386d_WhileIter>().dealloc(); }
struct jule::Any::Type __jule_any_type39{.dealloc=__jule_any_type39_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type39_compare(const jule::Any &any, const jule::Ptr<_1aa8b386d_WhileIter> &other) { return any.type == &__jule_any_type39 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type40_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa868614_RangeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type40{.dealloc=__jule_any_type40_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type40_compare(const jule::Any &any, const jule::Ptr<_1aa868614_RangeKind> &other) { return any.type == &__jule_any_type40 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type41_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa8b4253_RangeIter>().dealloc(); }
struct jule::Any::Type __jule_any_type41{.dealloc=__jule_any_type41_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type41_compare(const jule::Any &any, const jule::Ptr<_1aa8b4253_RangeIter> &other) { return any.type == &__jule_any_type41 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type42_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa8b464e_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type42{.dealloc=__jule_any_type42_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type42_compare(const jule::Any &any, const jule::Ptr<_1aa8b464e_ContSt> &other) { return any.type == &__jule_any_type42 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type43_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa8b50cd_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type43{.dealloc=__jule_any_type43_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type43_compare(const jule::Any &any, const jule::Ptr<_1aa8b50cd_GotoSt> &other) { return any.type == &__jule_any_type43 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type44_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa8b5485_Postfix>().dealloc(); }
struct jule::Any::Type __jule_any_type44{.dealloc=__jule_any_type44_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type44_compare(const jule::Any &any, const jule::Ptr<_1aa8b5485_Postfix> &other) { return any.type == &__jule_any_type44 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type45_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa8b5908_Assign>().dealloc(); }
struct jule::Any::Type __jule_any_type45{.dealloc=__jule_any_type45_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type45_compare(const jule::Any &any, const jule::Ptr<_1aa8b5908_Assign> &other) { return any.type == &__jule_any_type45 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type46_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa87d948_IndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type46{.dealloc=__jule_any_type46_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type46_compare(const jule::Any &any, const jule::Ptr<_1aa87d948_IndexingExprModel> &other) { return any.type == &__jule_any_type46 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type47_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa8b5cb0_MultiAssign>().dealloc(); }
struct jule::Any::Type __jule_any_type47{.dealloc=__jule_any_type47_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type47_compare(const jule::Any &any, const jule::Ptr<_1aa8b5cb0_MultiAssign> &other) { return any.type == &__jule_any_type47 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type48_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa8b63ba_Match>().dealloc(); }
struct jule::Any::Type __jule_any_type48{.dealloc=__jule_any_type48_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type48_compare(const jule::Any &any, const jule::Ptr<_1aa8b63ba_Match> &other) { return any.type == &__jule_any_type48 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type49_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa8b74ba_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type49{.dealloc=__jule_any_type49_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type49_compare(const jule::Any &any, const jule::Ptr<_1aa8b74ba_FallSt> &other) { return any.type == &__jule_any_type49 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type50_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa8b4a06_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type50{.dealloc=__jule_any_type50_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type50_compare(const jule::Any &any, const jule::Ptr<_1aa8b4a06_BreakSt> &other) { return any.type == &__jule_any_type50 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type51_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa8b783e_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type51{.dealloc=__jule_any_type51_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type51_compare(const jule::Any &any, const jule::Ptr<_1aa8b783e_RetSt> &other) { return any.type == &__jule_any_type51 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type52_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa863eb1_ScopeTree>().dealloc(); }
struct jule::Any::Type __jule_any_type52{.dealloc=__jule_any_type52_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type52_compare(const jule::Any &any, const jule::Ptr<_1aa863eb1_ScopeTree> &other) { return any.type == &__jule_any_type52 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type53_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa858549_Expr>().dealloc(); }
struct jule::Any::Type __jule_any_type53{.dealloc=__jule_any_type53_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type53_compare(const jule::Any &any, const jule::Ptr<_1aa858549_Expr> &other) { return any.type == &__jule_any_type53 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type54_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa869b21_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type54{.dealloc=__jule_any_type54_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type54_compare(const jule::Any &any, const jule::Ptr<_1aa869b21_Conditional> &other) { return any.type == &__jule_any_type54 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type55_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa86749d_Iter>().dealloc(); }
struct jule::Any::Type __jule_any_type55{.dealloc=__jule_any_type55_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type55_compare(const jule::Any &any, const jule::Ptr<_1aa86749d_Iter> &other) { return any.type == &__jule_any_type55 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type56_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa868d73_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type56{.dealloc=__jule_any_type56_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type56_compare(const jule::Any &any, const jule::Ptr<_1aa868d73_ContSt> &other) { return any.type == &__jule_any_type56 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type57_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa8616c8_LabelSt>().dealloc(); }
struct jule::Any::Type __jule_any_type57{.dealloc=__jule_any_type57_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type57_compare(const jule::Any &any, const jule::Ptr<_1aa8616c8_LabelSt> &other) { return any.type == &__jule_any_type57 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type58_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa861a80_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type58{.dealloc=__jule_any_type58_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type58_compare(const jule::Any &any, const jule::Ptr<_1aa861a80_GotoSt> &other) { return any.type == &__jule_any_type58 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type59_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa8629b5_AssignSt>().dealloc(); }
struct jule::Any::Type __jule_any_type59{.dealloc=__jule_any_type59_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type59_compare(const jule::Any &any, const jule::Ptr<_1aa8629b5_AssignSt> &other) { return any.type == &__jule_any_type59 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type60_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa86ae41_MatchCase>().dealloc(); }
struct jule::Any::Type __jule_any_type60{.dealloc=__jule_any_type60_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type60_compare(const jule::Any &any, const jule::Ptr<_1aa86ae41_MatchCase> &other) { return any.type == &__jule_any_type60 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type61_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa861d6b_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type61{.dealloc=__jule_any_type61_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type61_compare(const jule::Any &any, const jule::Ptr<_1aa861d6b_FallSt> &other) { return any.type == &__jule_any_type61 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type62_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa8689bb_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type62{.dealloc=__jule_any_type62_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type62_compare(const jule::Any &any, const jule::Ptr<_1aa8689bb_BreakSt> &other) { return any.type == &__jule_any_type62 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type63_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa866d3d_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type63{.dealloc=__jule_any_type63_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type63_compare(const jule::Any &any, const jule::Ptr<_1aa866d3d_RetSt> &other) { return any.type == &__jule_any_type63 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type64_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa858dda_UseExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type64{.dealloc=__jule_any_type64_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type64_compare(const jule::Any &any, const jule::Ptr<_1aa858dda_UseExpr> &other) { return any.type == &__jule_any_type64 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type65_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa889426_Fn>().dealloc(); }
struct jule::Any::Type __jule_any_type65{.dealloc=__jule_any_type65_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type65_compare(const jule::Any &any, const jule::Ptr<_1aa889426_Fn> &other) { return any.type == &__jule_any_type65 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type66_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa8740c0_Struct>().dealloc(); }
struct jule::Any::Type __jule_any_type66{.dealloc=__jule_any_type66_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type66_compare(const jule::Any &any, const jule::Ptr<_1aa8740c0_Struct> &other) { return any.type == &__jule_any_type66 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type67_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa982b29_TypeAlias>().dealloc(); }
struct jule::Any::Type __jule_any_type67{.dealloc=__jule_any_type67_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type67_compare(const jule::Any &any, const jule::Ptr<_1aa982b29_TypeAlias> &other) { return any.type == &__jule_any_type67 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type68_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa89ddca_Enum>().dealloc(); }
struct jule::Any::Type __jule_any_type68{.dealloc=__jule_any_type68_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type68_compare(const jule::Any &any, const jule::Ptr<_1aa89ddca_Enum> &other) { return any.type == &__jule_any_type68 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type69_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa8a04c5_TypeEnum>().dealloc(); }
struct jule::Any::Type __jule_any_type69{.dealloc=__jule_any_type69_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type69_compare(const jule::Any &any, const jule::Ptr<_1aa8a04c5_TypeEnum> &other) { return any.type == &__jule_any_type69 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type70_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa8801a8_TraitSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type70{.dealloc=__jule_any_type70_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type70_compare(const jule::Any &any, const jule::Ptr<_1aa8801a8_TraitSubIdentExprModel> &other) { return any.type == &__jule_any_type70 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type71_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa88098e_StructSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type71{.dealloc=__jule_any_type71_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type71_compare(const jule::Any &any, const jule::Ptr<_1aa88098e_StructSubIdentExprModel> &other) { return any.type == &__jule_any_type71 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type72_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa8814d9_CommonIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type72{.dealloc=__jule_any_type72_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type72_compare(const jule::Any &any, const jule::Ptr<_1aa8814d9_CommonIdentExprModel> &other) { return any.type == &__jule_any_type72 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type73_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa881a4a_CommonSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type73{.dealloc=__jule_any_type73_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type73_compare(const jule::Any &any, const jule::Ptr<_1aa881a4a_CommonSubIdentExprModel> &other) { return any.type == &__jule_any_type73 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type74_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa87b65a_UnaryExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type74{.dealloc=__jule_any_type74_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type74_compare(const jule::Any &any, const jule::Ptr<_1aa87b65a_UnaryExprModel> &other) { return any.type == &__jule_any_type74 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type75_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa856536_ArrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type75{.dealloc=__jule_any_type75_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type75_compare(const jule::Any &any, const jule::Ptr<_1aa856536_ArrTypeDecl> &other) { return any.type == &__jule_any_type75 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type76_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa8557cc_SlcTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type76{.dealloc=__jule_any_type76_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type76_compare(const jule::Any &any, const jule::Ptr<_1aa8557cc_SlcTypeDecl> &other) { return any.type == &__jule_any_type76 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type77_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa855da4_PtrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type77{.dealloc=__jule_any_type77_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type77_compare(const jule::Any &any, const jule::Ptr<_1aa855da4_PtrTypeDecl> &other) { return any.type == &__jule_any_type77 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type78_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa8553d1_SptrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type78{.dealloc=__jule_any_type78_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type78_compare(const jule::Any &any, const jule::Ptr<_1aa8553d1_SptrTypeDecl> &other) { return any.type == &__jule_any_type78 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type79_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa856c84_MapTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type79{.dealloc=__jule_any_type79_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type79_compare(const jule::Any &any, const jule::Ptr<_1aa856c84_MapTypeDecl> &other) { return any.type == &__jule_any_type79 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type80_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa855ab8_TupleTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type80{.dealloc=__jule_any_type80_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type80_compare(const jule::Any &any, const jule::Ptr<_1aa855ab8_TupleTypeDecl> &other) { return any.type == &__jule_any_type80 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type81_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa85acbb_VariadicExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type81{.dealloc=__jule_any_type81_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type81_compare(const jule::Any &any, const jule::Ptr<_1aa85acbb_VariadicExpr> &other) { return any.type == &__jule_any_type81 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type82_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa87d4c5_SliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type82{.dealloc=__jule_any_type82_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type82_compare(const jule::Any &any, const jule::Ptr<_1aa87d4c5_SliceExprModel> &other) { return any.type == &__jule_any_type82 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type83_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa85ceaa_FieldExprPair>().dealloc(); }
struct jule::Any::Type __jule_any_type83{.dealloc=__jule_any_type83_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type83_compare(const jule::Any &any, const jule::Ptr<_1aa85ceaa_FieldExprPair> &other) { return any.type == &__jule_any_type83 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type84_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa85e451_KeyValPair>().dealloc(); }
struct jule::Any::Type __jule_any_type84{.dealloc=__jule_any_type84_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type84_compare(const jule::Any &any, const jule::Ptr<_1aa85e451_KeyValPair> &other) { return any.type == &__jule_any_type84 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type85_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa85a20a_IdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type85{.dealloc=__jule_any_type85_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type85_compare(const jule::Any &any, const jule::Ptr<_1aa85a20a_IdentExpr> &other) { return any.type == &__jule_any_type85 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type86_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa8591c6_TupleExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type86{.dealloc=__jule_any_type86_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type86_compare(const jule::Any &any, const jule::Ptr<_1aa8591c6_TupleExpr> &other) { return any.type == &__jule_any_type86 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type87_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa881d47_TupleExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type87{.dealloc=__jule_any_type87_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type87_compare(const jule::Any &any, const jule::Ptr<_1aa881d47_TupleExprModel> &other) { return any.type == &__jule_any_type87 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type88_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa885e5b_RuneExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type88{.dealloc=__jule_any_type88_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type88_compare(const jule::Any &any, const jule::Ptr<_1aa885e5b_RuneExprModel> &other) { return any.type == &__jule_any_type88 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type89_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa983872_TypeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type89{.dealloc=__jule_any_type89_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type89_compare(const jule::Any &any, const jule::Ptr<_1aa983872_TypeKind> &other) { return any.type == &__jule_any_type89 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type90_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa8811ed_ArrayExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type90{.dealloc=__jule_any_type90_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type90_compare(const jule::Any &any, const jule::Ptr<_1aa8811ed_ArrayExprModel> &other) { return any.type == &__jule_any_type90 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type91_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa85b99d_SubIdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type91{.dealloc=__jule_any_type91_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type91_compare(const jule::Any &any, const jule::Ptr<_1aa85b99d_SubIdentExpr> &other) { return any.type == &__jule_any_type91 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type92_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa854c3d_SubIdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type92{.dealloc=__jule_any_type92_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type92_compare(const jule::Any &any, const jule::Ptr<_1aa854c3d_SubIdentTypeDecl> &other) { return any.type == &__jule_any_type92 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type93_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa85a914_UnaryExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type93{.dealloc=__jule_any_type93_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type93_compare(const jule::Any &any, const jule::Ptr<_1aa85a914_UnaryExpr> &other) { return any.type == &__jule_any_type93 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type94_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa854028_TypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type94{.dealloc=__jule_any_type94_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type94_compare(const jule::Any &any, const jule::Ptr<_1aa854028_TypeDecl> &other) { return any.type == &__jule_any_type94 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type95_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa85b52a_NsSelectionExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type95{.dealloc=__jule_any_type95_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type95_compare(const jule::Any &any, const jule::Ptr<_1aa85b52a_NsSelectionExpr> &other) { return any.type == &__jule_any_type95 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type96_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa8550e5_NamespaceTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type96{.dealloc=__jule_any_type96_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type96_compare(const jule::Any &any, const jule::Ptr<_1aa8550e5_NamespaceTypeDecl> &other) { return any.type == &__jule_any_type96 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type97_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa87eb69_SlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type97{.dealloc=__jule_any_type97_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type97_compare(const jule::Any &any, const jule::Ptr<_1aa87eb69_SlicingExprModel> &other) { return any.type == &__jule_any_type97 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type98_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa87c76b_CastingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type98{.dealloc=__jule_any_type98_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type98_compare(const jule::Any &any, const jule::Ptr<_1aa87c76b_CastingExprModel> &other) { return any.type == &__jule_any_type98 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type99_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa85eb38_SliceExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type99{.dealloc=__jule_any_type99_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type99_compare(const jule::Any &any, const jule::Ptr<_1aa85eb38_SliceExpr> &other) { return any.type == &__jule_any_type99 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type100_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa87be0d_StructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type100{.dealloc=__jule_any_type100_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type100_compare(const jule::Any &any, const jule::Ptr<_1aa87be0d_StructLitExprModel> &other) { return any.type == &__jule_any_type100 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type101_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa880d35_StructStaticIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type101{.dealloc=__jule_any_type101_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type101_compare(const jule::Any &any, const jule::Ptr<_1aa880d35_StructStaticIdentExprModel> &other) { return any.type == &__jule_any_type101 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type102_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa87e62a_MapExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type102{.dealloc=__jule_any_type102_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type102_compare(const jule::Any &any, const jule::Ptr<_1aa87e62a_MapExprModel> &other) { return any.type == &__jule_any_type102 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type103_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa87dd00_AnonFnExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type103{.dealloc=__jule_any_type103_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type103_compare(const jule::Any &any, const jule::Ptr<_1aa87dd00_AnonFnExprModel> &other) { return any.type == &__jule_any_type103 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type104_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa858835_RangeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type104{.dealloc=__jule_any_type104_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type104_compare(const jule::Any &any, const jule::Ptr<_1aa858835_RangeExpr> &other) { return any.type == &__jule_any_type104 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type105_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa85957d_LitExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type105{.dealloc=__jule_any_type105_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type105_compare(const jule::Any &any, const jule::Ptr<_1aa85957d_LitExpr> &other) { return any.type == &__jule_any_type105 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type106_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa859c87_UnsafeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type106{.dealloc=__jule_any_type106_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type106_compare(const jule::Any &any, const jule::Ptr<_1aa859c87_UnsafeExpr> &other) { return any.type == &__jule_any_type106 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type107_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa8604a7_IndexingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type107{.dealloc=__jule_any_type107_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type107_compare(const jule::Any &any, const jule::Ptr<_1aa8604a7_IndexingExpr> &other) { return any.type == &__jule_any_type107 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type108_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa860ab2_SlicingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type108{.dealloc=__jule_any_type108_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type108_compare(const jule::Any &any, const jule::Ptr<_1aa860ab2_SlicingExpr> &other) { return any.type == &__jule_any_type108 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type109_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa85b173_CastExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type109{.dealloc=__jule_any_type109_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type109_compare(const jule::Any &any, const jule::Ptr<_1aa85b173_CastExpr> &other) { return any.type == &__jule_any_type109 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type110_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa85d708_StructLit>().dealloc(); }
struct jule::Any::Type __jule_any_type110{.dealloc=__jule_any_type110_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type110_compare(const jule::Any &any, const jule::Ptr<_1aa85d708_StructLit> &other) { return any.type == &__jule_any_type110 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type111_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa85c52b_FnCallExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type111{.dealloc=__jule_any_type111_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type111_compare(const jule::Any &any, const jule::Ptr<_1aa85c52b_FnCallExpr> &other) { return any.type == &__jule_any_type111 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type112_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa85db7b_BraceLit>().dealloc(); }
struct jule::Any::Type __jule_any_type112{.dealloc=__jule_any_type112_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type112_compare(const jule::Any &any, const jule::Ptr<_1aa85db7b_BraceLit> &other) { return any.type == &__jule_any_type112 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type113_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa85be21_BinopExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type113{.dealloc=__jule_any_type113_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type113_compare(const jule::Any &any, const jule::Ptr<_1aa85be21_BinopExpr> &other) { return any.type == &__jule_any_type113 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type114_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa87b2a3_BinopExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type114{.dealloc=__jule_any_type114_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type114_compare(const jule::Any &any, const jule::Ptr<_1aa87b2a3_BinopExprModel> &other) { return any.type == &__jule_any_type114 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type115_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa87c21b_AllocStructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type115{.dealloc=__jule_any_type115_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type115_compare(const jule::Any &any, const jule::Ptr<_1aa87c21b_AllocStructLitExprModel> &other) { return any.type == &__jule_any_type115 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type116_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa882d15_BuiltinNewCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type116{.dealloc=__jule_any_type116_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type116_compare(const jule::Any &any, const jule::Ptr<_1aa882d15_BuiltinNewCallExprModel> &other) { return any.type == &__jule_any_type116 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type117_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa883b5c_BuiltinMakeCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type117{.dealloc=__jule_any_type117_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type117_compare(const jule::Any &any, const jule::Ptr<_1aa883b5c_BuiltinMakeCallExprModel> &other) { return any.type == &__jule_any_type117 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type118_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa884366_BuiltinLenCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type118{.dealloc=__jule_any_type118_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type118_compare(const jule::Any &any, const jule::Ptr<_1aa884366_BuiltinLenCallExprModel> &other) { return any.type == &__jule_any_type118 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type119_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa884685_BuiltinCapCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type119{.dealloc=__jule_any_type119_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type119_compare(const jule::Any &any, const jule::Ptr<_1aa884685_BuiltinCapCallExprModel> &other) { return any.type == &__jule_any_type119 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type120_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa885884_SizeofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type120{.dealloc=__jule_any_type120_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type120_compare(const jule::Any &any, const jule::Ptr<_1aa885884_SizeofExprModel> &other) { return any.type == &__jule_any_type120 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type121_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa885b70_AlignofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type121{.dealloc=__jule_any_type121_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type121_compare(const jule::Any &any, const jule::Ptr<_1aa885b70_AlignofExprModel> &other) { return any.type == &__jule_any_type121 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type122_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa886269_IntegratedToStrExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type122{.dealloc=__jule_any_type122_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type122_compare(const jule::Any &any, const jule::Ptr<_1aa886269_IntegratedToStrExprModel> &other) { return any.type == &__jule_any_type122 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type123_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa2bc73e_MutSlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type123{.dealloc=__jule_any_type123_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type123_compare(const jule::Any &any, const jule::Ptr<_1aa2bc73e_MutSlicingExprModel> &other) { return any.type == &__jule_any_type123 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type124_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa2bcb18_StrInsertBeginExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type124{.dealloc=__jule_any_type124_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type124_compare(const jule::Any &any, const jule::Ptr<_1aa2bcb18_StrInsertBeginExprModel> &other) { return any.type == &__jule_any_type124 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type125_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa2bb6e9_StrAppendExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type125{.dealloc=__jule_any_type125_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type125_compare(const jule::Any &any, const jule::Ptr<_1aa2bb6e9_StrAppendExprModel> &other) { return any.type == &__jule_any_type125 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type126_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa2bc200_PushToSliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type126{.dealloc=__jule_any_type126_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type126_compare(const jule::Any &any, const jule::Ptr<_1aa2bc200_PushToSliceExprModel> &other) { return any.type == &__jule_any_type126 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type127_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa2bb331_StrCompExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type127{.dealloc=__jule_any_type127_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type127_compare(const jule::Any &any, const jule::Ptr<_1aa2bb331_StrCompExprModel> &other) { return any.type == &__jule_any_type127 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type128_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa2bb9d5_UnsafeBinopExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type128{.dealloc=__jule_any_type128_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type128_compare(const jule::Any &any, const jule::Ptr<_1aa2bb9d5_UnsafeBinopExprModel> &other) { return any.type == &__jule_any_type128 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type129_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa2bbd6a_UnsafeIndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type129{.dealloc=__jule_any_type129_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type129_compare(const jule::Any &any, const jule::Ptr<_1aa2bbd6a_UnsafeIndexingExprModel> &other) { return any.type == &__jule_any_type129 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type130_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U8>().dealloc(); }
jule::Bool __jule_any_type130_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U8*>(alloc) == *reinterpret_cast<jule::U8*>(other); }
jule::Str __jule_any_type130_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U8*>(alloc)); }
struct jule::Any::Type __jule_any_type130{.dealloc=__jule_any_type130_dealloc, .eq=__jule_any_type130_eq, .to_str=__jule_any_type130_to_str};
jule::Bool __jule_any_type130_compare(const jule::Any &any, const jule::U8 &other) { return any.type == &__jule_any_type130 && __jule_any_type130_eq(any.data.alloc, (void*)&other); }
void __jule_any_type131_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F32>().dealloc(); }
jule::Bool __jule_any_type131_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::F32*>(alloc) == *reinterpret_cast<jule::F32*>(other); }
jule::Str __jule_any_type131_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F32*>(alloc)); }
struct jule::Any::Type __jule_any_type131{.dealloc=__jule_any_type131_dealloc, .eq=__jule_any_type131_eq, .to_str=__jule_any_type131_to_str};
jule::Bool __jule_any_type131_compare(const jule::Any &any, const jule::F32 &other) { return any.type == &__jule_any_type131 && __jule_any_type131_eq(any.data.alloc, (void*)&other); }
void __jule_any_type132_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I8>().dealloc(); }
jule::Bool __jule_any_type132_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I8*>(alloc) == *reinterpret_cast<jule::I8*>(other); }
jule::Str __jule_any_type132_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I8*>(alloc)); }
struct jule::Any::Type __jule_any_type132{.dealloc=__jule_any_type132_dealloc, .eq=__jule_any_type132_eq, .to_str=__jule_any_type132_to_str};
jule::Bool __jule_any_type132_compare(const jule::Any &any, const jule::I8 &other) { return any.type == &__jule_any_type132 && __jule_any_type132_eq(any.data.alloc, (void*)&other); }
void __jule_any_type133_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I16>().dealloc(); }
jule::Bool __jule_any_type133_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I16*>(alloc) == *reinterpret_cast<jule::I16*>(other); }
jule::Str __jule_any_type133_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I16*>(alloc)); }
struct jule::Any::Type __jule_any_type133{.dealloc=__jule_any_type133_dealloc, .eq=__jule_any_type133_eq, .to_str=__jule_any_type133_to_str};
jule::Bool __jule_any_type133_compare(const jule::Any &any, const jule::I16 &other) { return any.type == &__jule_any_type133 && __jule_any_type133_eq(any.data.alloc, (void*)&other); }
void __jule_any_type134_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U16>().dealloc(); }
jule::Bool __jule_any_type134_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U16*>(alloc) == *reinterpret_cast<jule::U16*>(other); }
jule::Str __jule_any_type134_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U16*>(alloc)); }
struct jule::Any::Type __jule_any_type134{.dealloc=__jule_any_type134_dealloc, .eq=__jule_any_type134_eq, .to_str=__jule_any_type134_to_str};
jule::Bool __jule_any_type134_compare(const jule::Any &any, const jule::U16 &other) { return any.type == &__jule_any_type134 && __jule_any_type134_eq(any.data.alloc, (void*)&other); }
void __jule_any_type135_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U32>().dealloc(); }
jule::Bool __jule_any_type135_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U32*>(alloc) == *reinterpret_cast<jule::U32*>(other); }
jule::Str __jule_any_type135_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U32*>(alloc)); }
struct jule::Any::Type __jule_any_type135{.dealloc=__jule_any_type135_dealloc, .eq=__jule_any_type135_eq, .to_str=__jule_any_type135_to_str};
jule::Bool __jule_any_type135_compare(const jule::Any &any, const jule::U32 &other) { return any.type == &__jule_any_type135 && __jule_any_type135_eq(any.data.alloc, (void*)&other); }
jule::Array<jule::Array<jule::Str,2>,5> _1d9e3c13c_HelpMap = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str("help", 4),jule::Str("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str("version", 7),jule::Str("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str("tool", 4),jule::Str("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str("julenv", 6),jule::Str("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str("mod", 3),jule::Str("Module management", 17)})});
jule::Str _1abcae130_OutDir = jule::Str("dist", 4);
jule::Str _1abcae3b6_OutName = jule::Str("ir.cpp", 6);
jule::Str _1abcae680_Out = jule::Str();
jule::Str _202baed0e_Compiler = jule::Str();
jule::Str _202bb1085_CompilerPath = jule::Str();
jule::Str _202bb12a5_CppStd = jule::Str("cpp17", 5);
jule::Bool _202bb154c_Shadowing = false;
jule::Bool _202bb17c2_Transpilation = false;
jule::Bool _202bb1a8b_Test = false;
jule::Bool _202bb1d55_RC = true;
jule::Bool _202bb222e_Safety = true;
jule::Bool _202bb24e8_Production = false;
jule::Uintptr _203d57ec8_STDIN = _203d5878c_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551606LLU));
jule::Uintptr _203d58292_STDOUT = _203d5878c_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551605LLU));
jule::Uintptr _203d58528_STDERR = _203d5878c_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551604LLU));
jule::Array<jule::U8,256> _203e627ca_first = jule::Array<jule::U8,256>({});
jule::Array<_203e62d5d_acceptRange,16> _203e6316b_acceptRanges = jule::Array<_203e62d5d_acceptRange,16>({_203e62d5d_acceptRange{._field_lo=128LLU, ._field_hi=191LLU},_203e62d5d_acceptRange{._field_lo=160LLU, ._field_hi=191LLU},_203e62d5d_acceptRange{._field_lo=128LLU, ._field_hi=159LLU},_203e62d5d_acceptRange{._field_lo=144LLU, ._field_hi=191LLU},_203e62d5d_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}});
jule::Ptr<_1d9cbc52d_RangeTable> _1d9c57c6b__L = jule::new_ptr<_1d9cbc52d_RangeTable>(_1d9cbc52d_RangeTable{._field_R16=jule::Slice<_1d9cbbb37_Range16>::make({_1d9cbbb37_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU},_1d9cbbb37_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU},_1d9cbbb37_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU},_1d9cbbb37_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU},_1d9cbbb37_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_1d9cbbb37_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU},_1d9cbbb37_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU},_1d9cbbb37_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU},_1d9cbbb37_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU},_1d9cbbb37_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU},_1d9cbbb37_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU},_1d9cbbb37_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU},_1d9cbbb37_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU},_1d9cbbb37_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU},_1d9cbbb37_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU},_1d9cbbb37_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU},_1d9cbbb37_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU},_1d9cbbb37_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU},_1d9cbbb37_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU},_1d9cbbb37_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU},_1d9cbbb37_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU},_1d9cbbb37_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU},_1d9cbbb37_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU},_1d9cbbb37_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU},_1d9cbbb37_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU},_1d9cbbb37_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU},_1d9cbbb37_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU},_1d9cbbb37_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU},_1d9cbbb37_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU},_1d9cbbb37_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU},_1d9cbbb37_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU},_1d9cbbb37_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU},_1d9cbbb37_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU},_1d9cbbb37_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU},_1d9cbbb37_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU},_1d9cbbb37_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU},_1d9cbbb37_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU},_1d9cbbb37_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU},_1d9cbbb37_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU},_1d9cbbb37_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU},_1d9cbbb37_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU},_1d9cbbb37_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU},_1d9cbbb37_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU},_1d9cbbb37_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU},_1d9cbbb37_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU},_1d9cbbb37_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU},_1d9cbbb37_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_1d9cbbb37_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU},_1d9cbbb37_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU},_1d9cbbb37_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU},_1d9cbbb37_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU},_1d9cbbb37_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU},_1d9cbbb37_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU},_1d9cbbb37_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_1d9cbbb37_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU},_1d9cbbb37_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU},_1d9cbbb37_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_1d9cbbb37_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_1d9cbbb37_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_1d9cbbb37_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU},_1d9cbbb37_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU},_1d9cbbb37_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU},_1d9cbbb37_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU},_1d9cbbb37_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU},_1d9cbbb37_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU},_1d9cbbb37_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU},_1d9cbbb37_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU},_1d9cbbb37_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU},_1d9cbbb37_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU},_1d9cbbb37_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU},_1d9cbbb37_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU},_1d9cbbb37_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU},_1d9cbbb37_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU},_1d9cbbb37_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU},_1d9cbbb37_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU},_1d9cbbb37_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU},_1d9cbbb37_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU},_1d9cbbb37_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_1d9cbc0aa_Range32>::make({_1d9cbc0aa_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU},_1d9cbc0aa_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU},_1d9cbc0aa_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU},_1d9cbc0aa_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU},_1d9cbc0aa_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU},_1d9cbc0aa_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU},_1d9cbc0aa_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU},_1d9cbc0aa_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU},_1d9cbc0aa_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU},_1d9cbc0aa_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU},_1d9cbc0aa_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU},_1d9cbc0aa_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU},_1d9cbc0aa_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU},_1d9cbc0aa_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU},_1d9cbc0aa_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU},_1d9cbc0aa_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU},_1d9cbc0aa_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU},_1d9cbc0aa_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU},_1d9cbc0aa_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU},_1d9cbc0aa_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU},_1d9cbc0aa_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU},_1d9cbc0aa_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU},_1d9cbc0aa_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU},_1d9cbc0aa_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU},_1d9cbc0aa_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU},_1d9cbc0aa_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU},_1d9cbc0aa_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU},_1d9cbc0aa_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU},_1d9cbc0aa_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_1d9cbc0aa_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_1d9cbc0aa_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU},_1d9cbc0aa_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_1d9cbc0aa_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU},_1d9cbc0aa_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU},_1d9cbc0aa_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU},_1d9cbc0aa_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU},_1d9cbc0aa_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU},_1d9cbc0aa_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU},_1d9cbc0aa_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU},_1d9cbc0aa_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU},_1d9cbc0aa_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU},_1d9cbc0aa_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU},_1d9cbc0aa_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=6LL});
jule::Ptr<_1d9cbc52d_RangeTable> _1d9c58c5b__LU = jule::new_ptr<_1d9cbc52d_RangeTable>(_1d9cbc52d_RangeTable{._field_R16=jule::Slice<_1d9cbbb37_Range16>::make({_1d9cbbb37_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU},_1d9cbbb37_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU},_1d9cbbb37_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU},_1d9cbbb37_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU},_1d9cbbb37_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU},_1d9cbbb37_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU},_1d9cbbb37_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU},_1d9cbbb37_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU},_1d9cbbb37_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU},_1d9cbbb37_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU},_1d9cbbb37_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU},_1d9cbbb37_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU},_1d9cbbb37_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU},_1d9cbbb37_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU},_1d9cbbb37_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU},_1d9cbbb37_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU},_1d9cbbb37_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU},_1d9cbbb37_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU},_1d9cbbb37_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU},_1d9cbbb37_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU},_1d9cbbb37_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU},_1d9cbbb37_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU},_1d9cbbb37_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_1d9cbbb37_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU},_1d9cbbb37_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU},_1d9cbbb37_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU},_1d9cbbb37_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU},_1d9cbbb37_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU},_1d9cbbb37_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU},_1d9cbbb37_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU},_1d9cbbb37_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU},_1d9cbbb37_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_1d9cbbb37_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU},_1d9cbbb37_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU},_1d9cbbb37_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_1d9cbbb37_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_1d9cbbb37_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_1d9cbbb37_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_1d9cbbb37_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU},_1d9cbbb37_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU},_1d9cbbb37_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU},_1d9cbbb37_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU},_1d9cbbb37_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU},_1d9cbbb37_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU},_1d9cbbb37_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU},_1d9cbbb37_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU},_1d9cbbb37_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU},_1d9cbbb37_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU},_1d9cbbb37_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU},_1d9cbbb37_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU},_1d9cbbb37_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU},_1d9cbbb37_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU},_1d9cbbb37_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU},_1d9cbbb37_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU},_1d9cbbb37_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU},_1d9cbbb37_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU},_1d9cbbb37_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU},_1d9cbbb37_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU},_1d9cbbb37_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU},_1d9cbbb37_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_1d9cbc0aa_Range32>::make({_1d9cbc0aa_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU},_1d9cbc0aa_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_1d9cbc0aa_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_1d9cbc0aa_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_1d9cbc0aa_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_1d9cbc0aa_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU},_1d9cbc0aa_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=3LL});
jule::Array<jule::U8,256> _1d9cb5e94__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});
jule::Array<jule::Str,4> _1d9d11891_CppHeaderExts = jule::Array<jule::Str,4>({jule::Str(".h", 2),jule::Str(".hpp", 4),jule::Str(".hxx", 4),jule::Str(".hh", 3)});
jule::Array<jule::Str,3> _1d9d8412d_CppExts = jule::Array<jule::Str,3>({jule::Str(".cpp", 4),jule::Str(".cc", 3),jule::Str(".cxx", 4)});
jule::Array<jule::Str,1> _1d9d8434d_ObjectiveCppExts = jule::Array<jule::Str,1>({jule::Str(".mm", 3)});
jule::Str _1d9e38479_PathStdlib = jule::Str();
jule::Str _1d9e38699_PathExec = jule::Str();
jule::Str _1d9e38952_PathWd = jule::Str();
jule::Str _1d9e38c60_PathApi = jule::Str();
jule::Str _1d9e39029_Os = jule::Str("windows", 7);
jule::Str _1d9e392e3_Arch = jule::Str("amd64", 5);
jule::Array<jule::I32,5> _1db89915d_Spaces = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
jule::Array<jule::Str,6> _1db89937d_UnaryOps = jule::Array<jule::Str,6>({jule::Str("-", 1),jule::Str("+", 1),jule::Str("^", 1),jule::Str("!", 1),jule::Str("*", 1),jule::Str("&", 1)});
jule::Array<jule::Str,12> _1db89959d_BinOps = jule::Array<jule::Str,12>({jule::Str("+", 1),jule::Str("-", 1),jule::Str("*", 1),jule::Str("/", 1),jule::Str("%", 1),jule::Str("&", 1),jule::Str("|", 1),jule::Str("^", 1),jule::Str("<", 1),jule::Str(">", 1),jule::Str("&&", 2),jule::Str("||", 2)});
jule::Array<jule::Str,2> _1db93e313_PostfixOps = jule::Array<jule::Str,2>({jule::Str("++", 2),jule::Str("--", 2)});
jule::Array<jule::Str,11> _1db93e610_AssignOps = jule::Array<jule::Str,11>({jule::Str("=", 1),jule::Str("+=", 2),jule::Str("-=", 2),jule::Str("/=", 2),jule::Str("*=", 2),jule::Str("%=", 2),jule::Str(">>=", 3),jule::Str("<<=", 3),jule::Str("|=", 2),jule::Str("&=", 2),jule::Str("^=", 2)});
jule::Array<_1db94c200_kindPair,47> _1db94c62e_keywords = jule::Array<_1db94c200_kindPair,47>({_1db94c200_kindPair{._field_kind=jule::Str("i8", 2), ._field_id=static_cast<jule::U64>(1LLU)},_1db94c200_kindPair{._field_kind=jule::Str("i16", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1db94c200_kindPair{._field_kind=jule::Str("i32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1db94c200_kindPair{._field_kind=jule::Str("i64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1db94c200_kindPair{._field_kind=jule::Str("u8", 2), ._field_id=static_cast<jule::U64>(1LLU)},_1db94c200_kindPair{._field_kind=jule::Str("u16", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1db94c200_kindPair{._field_kind=jule::Str("u32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1db94c200_kindPair{._field_kind=jule::Str("u64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1db94c200_kindPair{._field_kind=jule::Str("f32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1db94c200_kindPair{._field_kind=jule::Str("f64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1db94c200_kindPair{._field_kind=jule::Str("uint", 4), ._field_id=static_cast<jule::U64>(1LLU)},_1db94c200_kindPair{._field_kind=jule::Str("int", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1db94c200_kindPair{._field_kind=jule::Str("uintptr", 7), ._field_id=static_cast<jule::U64>(1LLU)},_1db94c200_kindPair{._field_kind=jule::Str("bool", 4), ._field_id=static_cast<jule::U64>(1LLU)},_1db94c200_kindPair{._field_kind=jule::Str("str", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1db94c200_kindPair{._field_kind=jule::Str("any", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1db94c200_kindPair{._field_kind=jule::Str("true", 4), ._field_id=static_cast<jule::U64>(6LLU)},_1db94c200_kindPair{._field_kind=jule::Str("false", 5), ._field_id=static_cast<jule::U64>(6LLU)},_1db94c200_kindPair{._field_kind=jule::Str("nil", 3), ._field_id=static_cast<jule::U64>(6LLU)},_1db94c200_kindPair{._field_kind=jule::Str("const", 5), ._field_id=static_cast<jule::U64>(9LLU)},_1db94c200_kindPair{._field_kind=jule::Str("ret", 3), ._field_id=static_cast<jule::U64>(4LLU)},_1db94c200_kindPair{._field_kind=jule::Str("type", 4), ._field_id=static_cast<jule::U64>(10LLU)},_1db94c200_kindPair{._field_kind=jule::Str("for", 3), ._field_id=static_cast<jule::U64>(12LLU)},_1db94c200_kindPair{._field_kind=jule::Str("break", 5), ._field_id=static_cast<jule::U64>(13LLU)},_1db94c200_kindPair{._field_kind=jule::Str("continue", 8), ._field_id=static_cast<jule::U64>(14LLU)},_1db94c200_kindPair{._field_kind=jule::Str("in", 2), ._field_id=static_cast<jule::U64>(15LLU)},_1db94c200_kindPair{._field_kind=jule::Str("if", 2), ._field_id=static_cast<jule::U64>(16LLU)},_1db94c200_kindPair{._field_kind=jule::Str("else", 4), ._field_id=static_cast<jule::U64>(17LLU)},_1db94c200_kindPair{._field_kind=jule::Str("use", 3), ._field_id=static_cast<jule::U64>(19LLU)},_1db94c200_kindPair{._field_kind=jule::Str("goto", 4), ._field_id=static_cast<jule::U64>(21LLU)},_1db94c200_kindPair{._field_kind=jule::Str("enum", 4), ._field_id=static_cast<jule::U64>(23LLU)},_1db94c200_kindPair{._field_kind=jule::Str("struct", 6), ._field_id=static_cast<jule::U64>(24LLU)},_1db94c200_kindPair{._field_kind=jule::Str("co", 2), ._field_id=static_cast<jule::U64>(25LLU)},_1db94c200_kindPair{._field_kind=jule::Str("match", 5), ._field_id=static_cast<jule::U64>(26LLU)},_1db94c200_kindPair{._field_kind=jule::Str("self", 4), ._field_id=static_cast<jule::U64>(27LLU)},_1db94c200_kindPair{._field_kind=jule::Str("trait", 5), ._field_id=static_cast<jule::U64>(28LLU)},_1db94c200_kindPair{._field_kind=jule::Str("impl", 4), ._field_id=static_cast<jule::U64>(29LLU)},_1db94c200_kindPair{._field_kind=jule::Str("cpp", 3), ._field_id=static_cast<jule::U64>(30LLU)},_1db94c200_kindPair{._field_kind=jule::Str("fall", 4), ._field_id=static_cast<jule::U64>(31LLU)},_1db94c200_kindPair{._field_kind=jule::Str("fn", 2), ._field_id=static_cast<jule::U64>(32LLU)},_1db94c200_kindPair{._field_kind=jule::Str("let", 3), ._field_id=static_cast<jule::U64>(33LLU)},_1db94c200_kindPair{._field_kind=jule::Str("unsafe", 6), ._field_id=static_cast<jule::U64>(34LLU)},_1db94c200_kindPair{._field_kind=jule::Str("mut", 3), ._field_id=static_cast<jule::U64>(35LLU)},_1db94c200_kindPair{._field_kind=jule::Str("defer", 5), ._field_id=static_cast<jule::U64>(36LLU)},_1db94c200_kindPair{._field_kind=jule::Str("static", 6), ._field_id=static_cast<jule::U64>(37LLU)},_1db94c200_kindPair{._field_kind=jule::Str("error", 5), ._field_id=static_cast<jule::U64>(39LLU)},_1db94c200_kindPair{._field_kind=jule::Str("map", 3), ._field_id=static_cast<jule::U64>(40LLU)}});
jule::Array<_1db94c200_kindPair,39> _1db94c970_basicOps = jule::Array<_1db94c200_kindPair,39>({_1db94c200_kindPair{._field_kind=jule::Str("::", 2), ._field_id=static_cast<jule::U64>(22LLU)},_1db94c200_kindPair{._field_kind=jule::Str(":", 1), ._field_id=static_cast<jule::U64>(11LLU)},_1db94c200_kindPair{._field_kind=jule::Str(";", 1), ._field_id=static_cast<jule::U64>(5LLU)},_1db94c200_kindPair{._field_kind=jule::Str(",", 1), ._field_id=static_cast<jule::U64>(8LLU)},_1db94c200_kindPair{._field_kind=jule::Str("...", 3), ._field_id=static_cast<jule::U64>(7LLU)},_1db94c200_kindPair{._field_kind=jule::Str(".", 1), ._field_id=static_cast<jule::U64>(20LLU)},_1db94c200_kindPair{._field_kind=jule::Str("+=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1db94c200_kindPair{._field_kind=jule::Str("-=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1db94c200_kindPair{._field_kind=jule::Str("*=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1db94c200_kindPair{._field_kind=jule::Str("/=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1db94c200_kindPair{._field_kind=jule::Str("%=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1db94c200_kindPair{._field_kind=jule::Str("<<=", 3), ._field_id=static_cast<jule::U64>(7LLU)},_1db94c200_kindPair{._field_kind=jule::Str(">>=", 3), ._field_id=static_cast<jule::U64>(7LLU)},_1db94c200_kindPair{._field_kind=jule::Str("^=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1db94c200_kindPair{._field_kind=jule::Str("&=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1db94c200_kindPair{._field_kind=jule::Str("|=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1db94c200_kindPair{._field_kind=jule::Str("==", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1db94c200_kindPair{._field_kind=jule::Str("!=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1db94c200_kindPair{._field_kind=jule::Str(">=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1db94c200_kindPair{._field_kind=jule::Str("<=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1db94c200_kindPair{._field_kind=jule::Str("&&", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1db94c200_kindPair{._field_kind=jule::Str("||", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1db94c200_kindPair{._field_kind=jule::Str("<<", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1db94c200_kindPair{._field_kind=jule::Str(">>", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1db94c200_kindPair{._field_kind=jule::Str("++", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1db94c200_kindPair{._field_kind=jule::Str("--", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1db94c200_kindPair{._field_kind=jule::Str("+", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1db94c200_kindPair{._field_kind=jule::Str("-", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1db94c200_kindPair{._field_kind=jule::Str("*", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1db94c200_kindPair{._field_kind=jule::Str("/", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1db94c200_kindPair{._field_kind=jule::Str("%", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1db94c200_kindPair{._field_kind=jule::Str("&", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1db94c200_kindPair{._field_kind=jule::Str("|", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1db94c200_kindPair{._field_kind=jule::Str("^", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1db94c200_kindPair{._field_kind=jule::Str("!", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1db94c200_kindPair{._field_kind=jule::Str("<", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1db94c200_kindPair{._field_kind=jule::Str(">", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1db94c200_kindPair{._field_kind=jule::Str("=", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1db94c200_kindPair{._field_kind=jule::Str("#", 1), ._field_id=static_cast<jule::U64>(38LLU)}});
jule::Array<jule::U8,32> _1dc556e08__DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
jule::Array<jule::U8,64> _1dc5574be__DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
_1dc59ac60_floatInfo _1dc59b128_f32info = _1dc59ac60_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
_1dc59ac60_floatInfo _1dc59b436_f64info = _1dc59ac60_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
jule::Array<jule::Array<jule::U64,2>,696> _1dc5a3806_detailedPowsOfTen = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
jule::Slice<jule::I64> _1dc5a5484_powtab = jule::Slice<jule::I64>::make({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
jule::Slice<jule::F64> _1dc5a5ee0_f64pow10 = jule::Slice<jule::F64>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
jule::Slice<jule::F32> _1dc5a6331_f32pow10 = jule::Slice<jule::F32>::make({1.0f,10.0f,100.0f,1000.0f,10000.0f,100000.0f,1000000.0f,10000000.0f,100000000.0f,1000000000.0f,10000000000.0f});
jule::Array<jule::U64,20> _1dc5a9356_u64pow10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
jule::Slice<_1dc5acca5_leftCheat> _1dc5ad1d4_leftCheats = jule::Slice<_1dc5acca5_leftCheat>::make({_1dc5acca5_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()},_1dc5acca5_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("5", 1)},_1dc5acca5_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("25", 2)},_1dc5acca5_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("125", 3)},_1dc5acca5_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("625", 3)},_1dc5acca5_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("3125", 4)},_1dc5acca5_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("15625", 5)},_1dc5acca5_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("78125", 5)},_1dc5acca5_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("390625", 6)},_1dc5acca5_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("1953125", 7)},_1dc5acca5_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("9765625", 7)},_1dc5acca5_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("48828125", 8)},_1dc5acca5_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("244140625", 9)},_1dc5acca5_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("1220703125", 10)},_1dc5acca5_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("6103515625", 10)},_1dc5acca5_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("30517578125", 11)},_1dc5acca5_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("152587890625", 12)},_1dc5acca5_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("762939453125", 12)},_1dc5acca5_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("3814697265625", 13)},_1dc5acca5_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("19073486328125", 14)},_1dc5acca5_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("95367431640625", 14)},_1dc5acca5_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("476837158203125", 15)},_1dc5acca5_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("2384185791015625", 16)},_1dc5acca5_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("11920928955078125", 17)},_1dc5acca5_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("59604644775390625", 17)},_1dc5acca5_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("298023223876953125", 18)},_1dc5acca5_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("1490116119384765625", 19)},_1dc5acca5_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("7450580596923828125", 19)},_1dc5acca5_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("37252902984619140625", 20)},_1dc5acca5_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("186264514923095703125", 21)},_1dc5acca5_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("931322574615478515625", 21)},_1dc5acca5_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("4656612873077392578125", 22)},_1dc5acca5_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("23283064365386962890625", 23)},_1dc5acca5_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("116415321826934814453125", 24)},_1dc5acca5_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("582076609134674072265625", 24)},_1dc5acca5_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("2910383045673370361328125", 25)},_1dc5acca5_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("14551915228366851806640625", 26)},_1dc5acca5_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("72759576141834259033203125", 26)},_1dc5acca5_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("363797880709171295166015625", 27)},_1dc5acca5_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("1818989403545856475830078125", 28)},_1dc5acca5_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("9094947017729282379150390625", 28)},_1dc5acca5_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("45474735088646411895751953125", 29)},_1dc5acca5_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("227373675443232059478759765625", 30)},_1dc5acca5_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("1136868377216160297393798828125", 31)},_1dc5acca5_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("5684341886080801486968994140625", 31)},_1dc5acca5_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("28421709430404007434844970703125", 32)},_1dc5acca5_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("142108547152020037174224853515625", 33)},_1dc5acca5_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("710542735760100185871124267578125", 33)},_1dc5acca5_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("3552713678800500929355621337890625", 34)},_1dc5acca5_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("17763568394002504646778106689453125", 35)},_1dc5acca5_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("88817841970012523233890533447265625", 35)},_1dc5acca5_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("444089209850062616169452667236328125", 36)},_1dc5acca5_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("2220446049250313080847263336181640625", 37)},_1dc5acca5_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("11102230246251565404236316680908203125", 38)},_1dc5acca5_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("55511151231257827021181583404541015625", 38)},_1dc5acca5_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("277555756156289135105907917022705078125", 39)},_1dc5acca5_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("1387778780781445675529539585113525390625", 40)},_1dc5acca5_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("6938893903907228377647697925567626953125", 40)},_1dc5acca5_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("34694469519536141888238489627838134765625", 41)},_1dc5acca5_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("173472347597680709441192448139190673828125", 42)},_1dc5acca5_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str("867361737988403547205962240695953369140625", 42)}});
jule::I64 _1dc5b3c23_BitSize = 0LL;
jule::Str _1dc5b3edc_SysInt = jule::Str();
jule::Str _1dc5b42a6_SysUint = jule::Str();
jule::Slice<jule::Str> _1aa8a9dd6_builtinConstraints = jule::Slice<jule::Str>::make({jule::Str("signed", 6),jule::Str("unsigned", 8),jule::Str("float", 5),jule::Str("numeric", 7),jule::Str("mutable", 7),jule::Str("immutable", 9),jule::Str("ordered", 7),jule::Str("comparable", 10)});
jule::Bool _1aa2cbaa0_Copy = false;
jule::Bool _1aa2cbdad_Deadcode = false;
jule::Bool _1aa2cc177_Append = false;
jule::Bool _1aa2cc485_Math = false;
jule::Bool _1aa2cc74e_Access = false;
jule::Bool _1aa2cca18_Inline = false;
jule::Bool _1aa2cccd2_Ptr = false;
jule::Bool _1aa2cd1ab_Cond = false;
jule::Bool _1aa2cd475_Str = false;
jule::Bool _1ab361936_exprEnabled = false;
jule::Bool _1ab361b56_scopeEnabled = false;
jule::Array<jule::U64,12> _1abc26b36_mdays = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
jule::Str _1abb7181c_assignArgName = jule::Str("__jule_assign_arg", 17);
jule::Ptr<_1d9cbc52d_RangeTable> _1d9c66461_Upper = _1d9c58c5b__LU;
jule::Ptr<_1d9cbc52d_RangeTable> _1d9c5ee0a_Letter = _1d9c57c6b__L;





std::ostream &operator<<(std::ostream &_Stream, _203e62d5d_acceptRange _Src) {
	_Stream << "acceptRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d9cbbb37_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d9cbc0aa_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d9cbc52d_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "R16:" << _Src._field_R16 << ", ";
	_Stream << "R32:" << _Src._field_R32 << ", ";
	_Stream << "LatinOffset:" << _Src._field_LatinOffset;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1d9d0bdec_index(_1d9d0b979_lazyBuff* _self_, jule::I64 _5424_i) {
	if (((*(_self_))._field_buff != nullptr)) {
		return (*(_self_))._field_buff[_5424_i];;
	};
	return (*(_self_))._field_path[_5424_i];;
}



inline void _1d9d0c172_append(_1d9d0b979_lazyBuff* _self_, jule::U8 _6125_c) {
	if (((*(_self_))._field_buff == nullptr)) {
		if ((((*(_self_))._field_w < (*(_self_))._field_path.len()) && ((*(_self_))._field_path[(*(_self_))._field_w] == _6125_c))) {
			((*(_self_))._field_w)++;
			return;;
		};
		(*(_self_))._field_buff=jule::Slice<jule::U8>::alloc((*(_self_))._field_path.len(), (*(_self_))._field_path.len(), 0);
		jule::copy(((*(_self_))._field_buff), (static_cast<jule::Slice<jule::U8>>((*(_self_))._field_path.slice(0LL, (*(_self_))._field_w))));
	};
	(*(_self_))._field_buff[(*(_self_))._field_w]=_6125_c;
	((*(_self_))._field_w)++;
}



inline jule::Str _1d9d0c3d6_string(_1d9d0b979_lazyBuff* _self_) {
	if (((*(_self_))._field_buff == nullptr)) {
		return (*(_self_))._field_volAndPath.slice(0LL, ((*(_self_))._field_volLen + (*(_self_))._field_w));;
	};
	return ((*(_self_))._field_volAndPath.slice(0LL, (*(_self_))._field_volLen) + static_cast<jule::Str>((*(_self_))._field_buff.slice(0LL, (*(_self_))._field_w)));;
}







std::ostream &operator<<(std::ostream &_Stream, _1d9d0b979_lazyBuff _Src) {
	_Stream << "lazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "volAndPath:" << _Src._field_volAndPath << ", ";
	_Stream << "volLen:" << _Src._field_volLen;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _203d70793_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "Name:" << _Src._field_Name << ", ";
	_Stream << "Stat:" << _Src._field_Stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_203d70793_DirEntry>>> static__1d9d0e43d_Read(jule::Str _1520_path) {
	jule::Slice<jule::Ptr<_203d70793_DirEntry>> __jule_func_result;
	jule::Slice<jule::U16> _1613_utf16Path = _203d30852_Utf16FromStr(_1d9d0d0da_Join(jule::Slice<jule::Str>::make({_1520_path,jule::Str("*", 1)})));;
	WIN32_FIND_DATAW _1717_data = (WIN32_FIND_DATAW){};;
	jule::Uintptr _1813_handle = _203d5c186_FindFirstFile((&(_1613_utf16Path[0LL])), (&(_1717_data)));;
	if ((_1813_handle == jule::MAX_U64)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_203d70793_DirEntry>>>(jule::Any(), __jule_func_result);;
	};
	for (;;) {
		{
			jule::Ptr<_203d70793_DirEntry> _2321_entry = jule::new_ptr<_203d70793_DirEntry>(_203d70793_DirEntry{._field_Name=_203d30da2_U16PtrToStr(((jule::U16*)(_1717_data.cFileName))), });;
			_2321_entry.get()._field_Stat=({
				auto except = static__1d9d101b9_Of(_1d9d0d0da_Join(jule::Slice<jule::Str>::make({_1520_path,_2321_entry.get()._field_Name})));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::Ptr<_203d70793_DirEntry>>>(except.error);
				} jule::Ptr<_203d7eb15_Status>(nullptr);});
			});
			__jule_func_result = jule::alloc_for_append(__jule_func_result,1);__jule_func_result.__push(_2321_entry);;
			if ((_203d5c4c7_FindNextFile(_1813_handle, (&(_1717_data))) == 0LL)) {
				goto _iter_end_1ac65272b;
			};
		}
	_iter_next_1ac65272b:;
	}
	_iter_end_1ac65272b:;;
	_203d5c76e_FindClose(_1813_handle);
	return jule::Exceptional<jule::Slice<jule::Ptr<_203d70793_DirEntry>>>(jule::Any(), __jule_func_result);;
}



inline jule::VoidExceptional static__1d9d0e64c_Create(jule::Str _3922_path) {
	jule::Slice<jule::U16> _4413_utf16Path = _203d30852_Utf16FromStr(_3922_path);;
	if ((!(_203d5a085_CreateDirectory((&(_4413_utf16Path[0LL])))))) {
		return jule::VoidExceptional(jule::Any(_203d70221_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional static__1d9d0e85b_Remove(jule::Str _5322_path) {
	jule::Slice<jule::U16> _5413_utf16Path = _203d30852_Utf16FromStr(_5322_path);;
	if ((!(_203d5a32c_RemoveDirectory((&(_5413_utf16Path[0LL])))))) {
		return jule::VoidExceptional(jule::Any(_203d70221_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _203d70a07_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_203d7c4c5_File> static__203d7c937_New(jule::Uintptr _4619_handle) {
	return jule::new_ptr<_203d7c4c5_File>(_203d7c4c5_File{._field_handle=_4619_handle});;
}



inline jule::Exceptional<jule::Ptr<_203d7c4c5_File>> static__203d7cbce_Create(jule::Str _5622_path) {
	return jule::Exceptional<jule::Ptr<_203d7c4c5_File>>(jule::Any(), ({
		auto except = static__203e66845_Open(_5622_path, static_cast<jule::I64>(770LL), 438LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Ptr<_203d7c4c5_File>>(except.error);
		} jule::Ptr<_203d7c4c5_File>(nullptr);});
	}));;
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__203d7ce76_Read(jule::Str _6820_path) {
	jule::Ptr<_203d7eb15_Status> _6913_s = ({
		auto except = static__1d9d101b9_Of(_6820_path);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_203d7eb15_Status>(nullptr);});
	});;
	if ((!(_203d80286_IsReg(_6913_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(static_cast<jule::I64>(14LL), &__jule_any_type0));
	};
	if ((_203d804ea_Size(_6913_s.ptr()) == 0LLU)) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(), jule::Slice<jule::U8>::alloc(0LL, 0LL, 0));;
	};
	jule::Ptr<_203d7c4c5_File> _7917_f = ({
		auto except = static__203e66845_Open(_6820_path, static_cast<jule::I64>(0LL), 0LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_203d7c4c5_File>(nullptr);});
	});;
	__JULE_DEFER({
		({
			auto except = _203d7e0cb_Close(_7917_f.ptr());
			if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/fs/file.jule:80:17"));
		});
	});;
	jule::Slice<jule::U8> _8217_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::I64>(_203d804ea_Size(_6913_s.ptr())), static_cast<jule::I64>(_203d804ea_Size(_6913_s.ptr())), 0);;
	jule::I64 _8313_n = ({
		auto except = _203e6726e_Read(_7917_f.ptr(), _8217_buff);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} 0;});
	});;
	return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(), _8217_buff.slice(0LL, _8313_n));;
}



inline jule::VoidExceptional static__203d7d2c8_Write(jule::Str _9221_path, jule::Slice<jule::U8> _9232_data, jule::I64 _9246_perm) {
	jule::Ptr<_203d7c4c5_File> _9317_f = ({
		auto except = static__203e66845_Open(_9221_path, static_cast<jule::I64>(769LL), _9246_perm);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional(except.error);
		} jule::Ptr<_203d7c4c5_File>(nullptr);});
	});;
	({
		auto except = _203e66e61_Write(_9317_f.ptr(), _9232_data);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	({
		auto except = _203d7e0cb_Close(_9317_f.ptr());
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::VoidExceptional static__203d7d62a_WriteStr(jule::Str _9924_path, jule::Str* _9936_data, jule::I64 _9947_perm) {
	({
		auto except = static__203d7d2c8_Write(_9924_path, _203d7addb_Stobs(_9936_data), _9947_perm);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _203d7dae2_Seek(_203d7c4c5_File* _self_, jule::I64 _11123_offset, jule::I64 _11136_origin) {
	jule::I64 _11213_pos = _203d5e298_Seek(static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_handle)), _11123_offset, static_cast<jule::I64>(_11136_origin));;
	if ((_11213_pos == -1LL)) {
		return jule::Exceptional<jule::I64>(jule::Any(_203d70221_getLastFsError(), &__jule_any_type0));
	};
	return jule::Exceptional<jule::I64>(jule::Any(), _11213_pos);;
}



inline jule::Exceptional<jule::I64> _203d7de00_WriteStr(_203d7c4c5_File* _self_, jule::Str* _12028_data) {
	jule::I64 __jule_func_result = 0;
	__jule_func_result = static_cast<jule::I64>(({
		auto except = _203e66e61_Write(_self_, _203d7addb_Stobs(_12028_data));
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::I64>(except.error);
		} 0;});
	}));
	return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
}



inline jule::VoidExceptional _203d7e0cb_Close(_203d7c4c5_File* _self_) {
	if ((_203d5ea07_Close(static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_handle))) == -1LL)) {
		return jule::VoidExceptional(jule::Any(_203d70221_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::Ptr<_203d7c4c5_File>> static__203e66845_Open(jule::Str _2120_path, jule::I64 _2131_flag, jule::I64 _2144_mode) {
	jule::Slice<jule::U16> _2213_utf16Path = _203d30852_Utf16FromStr(_2120_path);;
	jule::I64 _2313_handle = _203d59260_Wopen((&(_2213_utf16Path[0LL])), static_cast<jule::I64>(_2131_flag), _2144_mode);;
	if ((_2313_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_203d7c4c5_File>>(jule::Any(_203d70221_getLastFsError(), &__jule_any_type0));
	};
	return jule::Exceptional<jule::Ptr<_203d7c4c5_File>>(jule::Any(), static__203d7c937_New(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_2313_handle))));;
}



inline jule::VoidExceptional static__203e66a54_Remove(jule::Str _3422_path) {
	jule::Slice<jule::U16> _3513_utf16Path = _203d30852_Utf16FromStr(_3422_path);;
	if ((!(_203d59cdd_DeleteFile((&(_3513_utf16Path[0LL])))))) {
		return jule::VoidExceptional(jule::Any(_203d70221_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _203e66e61_Write(_203d7c4c5_File* _self_, jule::Slice<jule::U8> _4924_buff) {
	jule::I64 __jule_func_result = 0;
	if ((_4924_buff.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
	};
	if (_203e675c1_isConsoleHandle((*(_self_))._field_handle)) {
		jule::Slice<jule::U16> _5517_utf16Buff = _203d30852_Utf16FromStr(static_cast<jule::Str>(_4924_buff));;
		jule::Bool _5617_ok = _203d5b6b3_WriteConsole((*(_self_))._field_handle, (&(_5517_utf16Buff[0LL])), static_cast<jule::I64>(_5517_utf16Buff.len()), &(__jule_func_result), nullptr);;
		if ((!(_5617_ok))) {
			return jule::Exceptional<jule::I64>(jule::Any(_203d70221_getLastFsError(), &__jule_any_type0));
		};
		__jule_func_result = __jule_func_result;
		return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
	};
	__jule_func_result=static_cast<jule::I64>(_203d5ede2_Write(static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_handle)), (&(_4924_buff[0LL])), static_cast<jule::U64>(static_cast<jule::U64>(_4924_buff.len()))));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>(jule::Any(_203d70221_getLastFsError(), &__jule_any_type0));
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
}



inline jule::Exceptional<jule::I64> _203e6726e_Read(_203d7c4c5_File* _self_, jule::Slice<jule::U8> _7927_buff) {
	jule::I64 __jule_func_result = 0;
	if ((_7927_buff.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
	};
	if (_203e675c1_isConsoleHandle((*(_self_))._field_handle)) {
		jule::Slice<jule::U16> _8521_codepage = jule::Slice<jule::U16>::alloc(_7927_buff.len(), _7927_buff.len(), 0);;
		jule::Bool _8617_ok = _203d5bb47_ReadConsole((*(_self_))._field_handle, (&(_8521_codepage[0LL])), static_cast<jule::I64>(_7927_buff.len()), &(__jule_func_result));;
		if ((!(_8617_ok))) {
			return jule::Exceptional<jule::I64>(jule::Any(_203d70221_getLastFsError(), &__jule_any_type0));
		};
		jule::Slice<jule::I32> _9117_runes = _203d30313_Decode(_8521_codepage.slice(0LL, __jule_func_result));;
		__jule_func_result=0LL;
		{
			auto expr = &(_9117_runes);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac6741ba:;
			if (it != expr_end) {
				jule::I32 *_9320_r = it;
				{
					jule::I64 _9421_size = _203e64502_RuneLen((*(_9320_r)));;
					if (((__jule_func_result + _9421_size) > _7927_buff.len())) {
						goto _iter_end_1ac6741ba;
					};
					_203e64920_EncodeRune(_7927_buff.slice(__jule_func_result), (*(_9320_r)));
					__jule_func_result+=_9421_size;
				}
				_iter_next_1ac6741ba:;
				++it;
				goto _iter_begin_1ac6741ba;
			}
			_iter_end_1ac6741ba:;
		};
		__jule_func_result = __jule_func_result;
		return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
	};
	__jule_func_result=static_cast<jule::I64>(_203d5e683_Read(static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_handle)), (&(_7927_buff[0LL])), static_cast<jule::U64>(static_cast<jule::U64>(_7927_buff.len()))));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>(jule::Any(_203d70221_getLastFsError(), &__jule_any_type0));
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
}







std::ostream &operator<<(std::ostream &_Stream, _203d7c4c5_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _203d80022_IsDir(_203d7eb15_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL));;
}



inline jule::Bool _203d80286_IsReg(_203d7eb15_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(2LL)) == static_cast<jule::I64>(2LL));;
}



inline jule::U64 _203d804ea_Size(_203d7eb15_Status* _self_) {
	return (*(_self_))._field_size;;
}



inline jule::Exceptional<jule::Ptr<_203d7eb15_Status>> static__1d9d101b9_Of(jule::Str _1218_path) {
	if (_1218_path.empty()) {
		return jule::Exceptional<jule::Ptr<_203d7eb15_Status>>(jule::Any(static_cast<jule::I64>(4LL), &__jule_any_type0));
	};
	jule::Slice<jule::U16> _1613_utf16Path = _203d30852_Utf16FromStr(_1218_path);;
	struct _stat _1717_handle = (struct _stat){};;
	jule::I64 _1813_code = _203d58d75_Wstat((&(_1613_utf16Path[0LL])), (&(_1717_handle)));;
	if ((_1813_code == -1LL)) {
		return jule::Exceptional<jule::Ptr<_203d7eb15_Status>>(jule::Any(_203d70221_getLastFsError(), &__jule_any_type0));
	};
	jule::Ptr<_203d7eb15_Status> _2217_stat = jule::new_ptr<_203d7eb15_Status>();;
	_2217_stat.get()._field_size=_1717_handle.st_size;
	if (((_1717_handle.st_mode & 16384LLU) == 16384LLU)) {
		_2217_stat.get()._field_mode|=static_cast<jule::I64>(1LL);
	} else if (((_1717_handle.st_mode & 32768LLU) == 32768LLU)) {
		_2217_stat.get()._field_mode|=static_cast<jule::I64>(2LL);
	};
	return jule::Exceptional<jule::Ptr<_203d7eb15_Status>>(jule::Any(), _2217_stat);;
}







std::ostream &operator<<(std::ostream &_Stream, _203d7eb15_Status _Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d9e35278_cmdAttrs _Src) {
	_Stream << "cmdAttrs{";
	_Stream << "hProcess:" << _Src._field_hProcess << ", ";
	_Stream << "hThread:" << _Src._field_hThread;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d9d938bd_Log _Src) {
	_Stream << "Log{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Text:" << _Src._field_Text << ", ";
	_Stream << "Line:" << _Src._field_Line << ", ";
	_Stream << "Suggestion:" << _Src._field_Suggestion;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1db9451b5_Prec(_1db944d0d_Token* _self_) {
	if (((*(_self_))._field_Id != static_cast<jule::U64>(7LLU))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("%", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str(">>", 2) || _match_expr == jule::Str("<<", 2) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1ab482ddc:;
			{
				return 5LLU;;
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1ab482e53:;
			{
				return 4LLU;;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("=", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1ab482804:;
			{
				return 3LLU;;
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1ab48287b:;
			{
				return 2LLU;;
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1ab482903:;
			{
				return 1LLU;;
			}
		}
		else {
			_case_begin_1ab482606:;
			{
				return 0LLU;;
			}
		}
		_match_end_1ab481a67:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1db944d0d_Token _Src) {
	_Stream << "Token{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Id:" << _Src._field_Id;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1db94a5a5_IsOk(_1db94a198_File* _self_) {
	({
		auto except = static__1d9d101b9_Of((*(_self_))._field_Path);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} jule::Ptr<_203d7eb15_Status>(nullptr);});
	});
	return true;;
}



inline void _1db94a82a_Fill(_1db94a198_File* _self_, jule::Slice<jule::U8> _2327_data) {
	(*(_self_))._field_Data=_2327_data;
}



inline jule::Str _1db94aa8e_Dir(_1db94a198_File* _self_) {
	return _1d9d0dc45_Dir((*(_self_))._field_Path);;
}



inline jule::Str _1db94ad03_Name(_1db94a198_File* _self_) {
	return _1d9d0d8c1_Base((*(_self_))._field_Path);;
}



inline jule::Uintptr _1db94b067_Addr(_1db94a198_File* _self_) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)((&((*(_self_)))))));;
}



inline jule::Str _1db94b375_GetRow(_1db94a198_File* _self_, jule::I64 _4421_row) {
	jule::I64 _4517_n = 0LL;;
	jule::I64 _4617_lineStart = 0LL;;
	jule::I64 _4717_i = 0LL;;
	for (; (_4717_i < (*(_self_))._field_Data.len()); (_4717_i)++) {
		{
			if (((*(_self_))._field_Data[_4717_i] != '\n')) {
				goto _iter_next_1ab48796e;
			};
			(_4517_n)++;
			if ((_4517_n == _4421_row)) {
				return static_cast<jule::Str>((*(_self_))._field_Data.slice(_4617_lineStart, _4717_i));;
			};
			_4617_lineStart=static_cast<jule::I64>((_4717_i + 1LL));
		}
	_iter_next_1ab48796e:;
	}
	_iter_end_1ab48796e:;;
	return jule::Str();;
}







std::ostream &operator<<(std::ostream &_Stream, _1db94a198_File _Src) {
	_Stream << "File{";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Data:" << _Src._field_Data << ", ";
	_Stream << "Tokens:" << _Src._field_Tokens;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1db94c200_kindPair _Src) {
	_Stream << "kindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _1db953305_pushErr(_1db952c61_lex* _self_, jule::Str _45826_fmt, jule::Slice<jule::Any> _45839_args) {
	(*(_self_))._field_errors = jule::alloc_for_append((*(_self_))._field_errors,1);(*(_self_))._field_errors.__push(_1db94ce6a_makeErr((*(_self_))._field_row, (*(_self_))._field_column, &((*(_self_))._field_file), _45826_fmt, _45839_args));;
}



inline void _1db953624_pushErrTok(_1db952c61_lex* _self_, jule::Ptr<_1db944d0d_Token>* _46330_token, jule::Str _46345_fmt) {
	(*(_self_))._field_errors = jule::alloc_for_append((*(_self_))._field_errors,1);(*(_self_))._field_errors.__push(_1db94ce6a_makeErr((*(_46330_token)).get()._field_Row, (*(_46330_token)).get()._field_Column, &((*(_self_))._field_file), _46345_fmt, jule::Slice<jule::Any>()));;
}



inline void _1db953800_lex(_1db952c61_lex* _self_) {
	(*(_self_))._field_errors=nullptr;
	_1db955802_newLine(_self_);
	while (((*(_self_))._field_pos < (*(_self_))._field_file.get()._field_Data.len())) {
		{
			jule::Ptr<_1db944d0d_Token> _47321_token = _1db956b77_token(_self_);;
			if ((_47321_token.get()._field_Id != static_cast<jule::U64>(0LLU))) {
				(*(_self_))._field_tokens = jule::alloc_for_append((*(_self_))._field_tokens,1);(*(_self_))._field_tokens.__push(_47321_token);;
			};
		}
	_iter_next_1ac76cb32:;
	}
	_iter_end_1ac76cb32:;;
}



inline jule::Str _1db953b0d_id(_1db952c61_lex* _self_, jule::Slice<jule::U8>* _48222_ln) {
	if (((*(_48222_ln)).len() == 0LL)) {
		return jule::Str();;
	};
	jule::I32 _48614_r = 0;;
	jule::I64 _48621_i = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _203e638ec_DecodeRune((*(_48222_ln)));
		_48614_r = __jule_assign_result.__jule_result_arg0;
		_48621_i = __jule_assign_result.__jule_result_arg1;
	});
	if (((_48614_r != '_') && (!(_1db9482d9_IsLetter(_48614_r))))) {
		return jule::Str();;
	};
	while ((_48621_i < (*(_48222_ln)).len())) {
		{
			jule::I32 _49218_pr = 0;;
			jule::I64 _49222_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _203e638ec_DecodeRune((*(_48222_ln)).slice(_48621_i));
				_49218_pr = __jule_assign_result.__jule_result_arg0;
				_49222_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_49218_pr != '_') && (!(_1db948828_IsDecimal(static_cast<jule::U8>(static_cast<jule::U8>(_49218_pr)))))) && (!(_1db9482d9_IsLetter(_49218_pr))))) {
				(*(_self_))._field_pos+=_48621_i;
				return static_cast<jule::Str>((*(_48222_ln)).slice(0LL, _48621_i));;
			};
			_48621_i+=_49222_n;
		}
	_iter_next_1ac770dbb:;
	}
	_iter_end_1ac770dbb:;;
	(*(_self_))._field_pos+=(*(_48222_ln)).len();
	return static_cast<jule::Str>((*(_48222_ln)));;
}



inline jule::Slice<jule::U8> _1db953d72_resume(_1db952c61_lex* _self_) {
	jule::I64 _50717_i = (*(_self_))._field_pos;;
	for (; (_50717_i < (*(_self_))._field_file.get()._field_Data.len()); (_50717_i)++) {
		{
			jule::I32 _50917_r = static_cast<jule::I32>((*(_self_))._field_file.get()._field_Data[_50717_i]);;
			if (_1db947d88_IsSpace(_50917_r)) {
				;
				((*(_self_))._field_pos)++;
				{
					auto &_match_expr{ _50917_r };
					
					if (_match_expr == '\n') {
						_case_begin_1ac7757e9:;
						{
							_1db955802_newLine(_self_);
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_1ac7752cc:;
						{
							(*(_self_))._field_column+=8LL;
						}
					}
					else {
						_case_begin_1ac770d33:;
						{
							((*(_self_))._field_column)++;
						}
					}
					_match_end_1ac7751ab:;
				};
				goto _iter_next_1ac7739e5;
			};
			jule::I64 _52421_j = _50717_i;;
			for (; (_52421_j < (*(_self_))._field_file.get()._field_Data.len()); (_52421_j)++) {
				{
					if (((*(_self_))._field_file.get()._field_Data[_52421_j] == '\n')) {
						goto _iter_end_1ac7745c8;
					};
				}
			_iter_next_1ac7745c8:;
			}
			_iter_end_1ac7745c8:;;
			return (*(_self_))._field_file.get()._field_Data.slice(_50717_i, _52421_j);;
		}
	_iter_next_1ac7739e5:;
	}
	_iter_end_1ac7739e5:;;
	return nullptr;;
}



inline void _1db9540e7_lexLineComment(_1db952c61_lex* _self_, jule::Ptr<_1db944d0d_Token>* _53538_token) {
	jule::I64 _53613_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*(_self_))._field_file.get()._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _53917_r = (*(_self_))._field_file.get()._field_Data[(*(_self_))._field_pos];;
			if (((_53917_r == '\n') || (_53917_r == '\r'))) {
				goto _iter_end_1ac777ec2;
			};
		}
	_iter_next_1ac777ec2:;
	}
	_iter_end_1ac777ec2:;;
	if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
		(*(_53538_token)).get()._field_Id=static_cast<jule::U64>(18LLU);
		(*(_53538_token)).get()._field_Kind=static_cast<jule::Str>((*(_self_))._field_file.get()._field_Data.slice(_53613_start, (*(_self_))._field_pos));
	};
}



inline void _1db95436c_lexRangeComment(_1db952c61_lex* _self_, jule::Ptr<_1db944d0d_Token>* _55039_token) {
	jule::I64 _55113_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*(_self_))._field_file.get()._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _55417_r = (*(_self_))._field_file.get()._field_Data[(*(_self_))._field_pos];;
			if ((_55417_r == '\r')) {
				goto _iter_next_1ac77b2c2;
			};
			if ((_55417_r == '\n')) {
				_1db955802_newLine(_self_);
				goto _iter_next_1ac77b2c2;
			};
			(*(_self_))._field_column+=1LL;
			if ((((((*(_self_))._field_pos + 1LL) < (*(_self_))._field_file.get()._field_Data.len()) && (_55417_r == '*')) && ((*(_self_))._field_file.get()._field_Data[((*(_self_))._field_pos + 1LL)] == '/'))) {
				(*(_self_))._field_column+=2LL;
				(*(_self_))._field_pos+=2LL;
				if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
					(*(_55039_token)).get()._field_Id=static_cast<jule::U64>(18LLU);
					(*(_55039_token)).get()._field_Kind=static_cast<jule::Str>((*(_self_))._field_file.get()._field_Data.slice(_55113_start, (*(_self_))._field_pos));
				};
				return;;
			};
		}
	_iter_next_1ac77b2c2:;
	}
	_iter_end_1ac77b2c2:;;
	_1db953305_pushErr(_self_, jule::Str("missing block comment close", 27), jule::Slice<jule::Any>());
}



inline jule::Str _1db95467a_num(_1db952c61_lex* _self_, jule::Slice<jule::U8>* _57823_txt) {
	jule::Str __jule_func_result;
	if (((*(_57823_txt))[0LL] == '_')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result=_1db951787_hexNum(_57823_txt);
	if ((!(__jule_func_result.empty()))) {
		goto _julec_label_end;
	};
	__jule_func_result=_1db9514e0_octalNum(_57823_txt);
	if ((!(__jule_func_result.empty()))) {
		goto _julec_label_end;
	};
	__jule_func_result=_1db94ee39_binaryNum(_57823_txt);
	if ((!(__jule_func_result.empty()))) {
		goto _julec_label_end;
	};
	__jule_func_result=_1db94eb92_commonNum(_57823_txt);
	_julec_label_end:;
	(*(_self_))._field_pos+=__jule_func_result.len();
	return __jule_func_result;;
}



inline jule::Str _1db954988_escapeSeq(_1db952c61_lex* _self_, jule::Slice<jule::U8>* _60029_txt) {
	jule::Str _60117_seq = jule::Str();;
	if (((*(_60029_txt)).len() < 2LL)) {
		goto _julec_label_end;
	};
	{
		auto &_match_expr{ (*(_60029_txt))[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1ac786068:;
			{
				(*(_self_))._field_pos+=2LL;
				return static_cast<jule::Str>((*(_60029_txt)).slice(0LL, 2LL));;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1ac785e9c:;
			{
				_60117_seq=_1db951d70_bigUnicodePointEscape(_60029_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1ac785bd3:;
			{
				_60117_seq=_1db952139_littleUnicodePointEscape(_60029_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1ac785c49:;
			{
				_60117_seq=_1db9522e3_hexByteEscape(_60029_txt);
			}
		}
		else {
			_case_begin_1ac785474:;
			{
				_60117_seq=_1db952579_byteEscape(_60029_txt);
			}
		}
		_match_end_1ac785ab2:;
	};
	_julec_label_end:;
	if (_60117_seq.empty()) {
		((*(_self_))._field_pos)++;
		_1db953305_pushErr(_self_, jule::Str("invalid escape sequence", 23), jule::Slice<jule::Any>());
		return jule::Str();;
	};
	(*(_self_))._field_pos+=_60117_seq.len();
	return _60117_seq;;
}



inline jule::Str _1db954d40_getRune(_1db952c61_lex* _self_, jule::Slice<jule::U8>* _63027_txt, jule::Bool _63040_raw) {
	if (((!(_63040_raw)) && ((*(_63027_txt))[0LL] == '\\'))) {
		return _1db954988_escapeSeq(_self_, _63027_txt);;
	};
	jule::I32 _63414_r = 0;;
	jule::I64 _63417_n = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _203e638ec_DecodeRune((*(_63027_txt)));
		_63414_r = __jule_assign_result.__jule_result_arg0;
		_63417_n = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_pos+=_63417_n;
	return static_cast<jule::Str>(_63414_r);;
}



inline jule::Str _1db95514d_lexRune(_1db952c61_lex* _self_, jule::Slice<jule::U8>* _63927_txt) {
	jule::Str _64017_run = jule::Str("'", 1);;
	((*(_self_))._field_column)++;
	jule::I64 _64217_n = 0LL;;
	jule::I64 _64317_i = 1LL;;
	for (; (_64317_i < (*(_63927_txt)).len()); (_64317_i)++) {
		{
			if (((*(_63927_txt))[_64317_i] == '\r')) {
				goto _iter_next_1ac78c019;
			};
			if (((*(_63927_txt))[_64317_i] == '\n')) {
				_1db953305_pushErr(_self_, jule::Str("rune is not finished", 20), jule::Slice<jule::Any>());
				((*(_self_))._field_pos)++;
				_1db955802_newLine(_self_);
				return jule::Str();;
			};
			jule::Slice<jule::U8> _65517_part = (*(_63927_txt)).slice(_64317_i);;
			jule::Str _65617_r = _1db954d40_getRune(_self_, &(_65517_part), false);;
			_64017_run+=_65617_r;
			(*(_self_))._field_column+=_203e655e1_RuneCountStr(_65617_r);
			if (_65617_r.equal("'", 1)) {
				((*(_self_))._field_pos)++;
				goto _iter_end_1ac78c019;
			};
			if ((_65617_r.len() > 1LL)) {
				_64317_i+=(_65617_r.len() - 1LL);
			};
			(_64217_n)++;
		}
	_iter_next_1ac78c019:;
	}
	_iter_end_1ac78c019:;;
	if ((_64217_n == 0LL)) {
		_1db953305_pushErr(_self_, jule::Str("rune is cannot empty", 20), jule::Slice<jule::Any>());
	} else if ((_64217_n > 1LL)) {
		_1db953305_pushErr(_self_, jule::Str("rune is should be single", 24), jule::Slice<jule::Any>());
	};
	return _64017_run;;
}



inline jule::Str _1db9553b2_lexStr(_1db952c61_lex* _self_) {
	jule::Str _67917_s = jule::Str();;
	jule::U8 _68013_mark = (*(_self_))._field_file.get()._field_Data[(*(_self_))._field_pos];;
	((*(_self_))._field_pos)++;
	jule::Bool _68213_raw = (_68013_mark == '`');;
	(_67917_s).append(_68013_mark);
	((*(_self_))._field_column)++;
	while (((*(_self_))._field_pos < (*(_self_))._field_file.get()._field_Data.len())) {
		{
			jule::U8 _68717_ch = (*(_self_))._field_file.get()._field_Data[(*(_self_))._field_pos];;
			if ((_68717_ch == '\r')) {
				goto _iter_next_1ac79377e;
			};
			if ((_68717_ch == '\n')) {
				_1db955802_newLine(_self_);
				if ((!(_68213_raw))) {
					_1db953305_pushErr(_self_, jule::Str("string is not finished", 22), jule::Slice<jule::Any>());
					((*(_self_))._field_pos)++;
					return jule::Str();;
				};
			};
			jule::Slice<jule::U8> _69921_part = (*(_self_))._field_file.get()._field_Data.slice((*(_self_))._field_pos);;
			jule::Str _70017_r = _1db954d40_getRune(_self_, &(_69921_part), _68213_raw);;
			_67917_s+=_70017_r;
			(*(_self_))._field_column+=_203e655e1_RuneCountStr(_70017_r);
			if ((_68717_ch == _68013_mark)) {
				goto _iter_end_1ac79377e;
			};
		}
	_iter_next_1ac79377e:;
	}
	_iter_end_1ac79377e:;;
	return _67917_s;;
}



inline jule::Bool _1db955626_isFirstTokenOfLine(_1db952c61_lex* _self_) {
	return ((*(_self_))._field_column == 1LL);;
}



inline void _1db955802_newLine(_1db952c61_lex* _self_) {
	((*(_self_))._field_row)++;
	(*(_self_))._field_column=1LL;
}



inline jule::Bool _1db955cec_isOp(_1db952c61_lex* _self_, jule::Slice<jule::U8>* _72024_txt, jule::Str _72037_kind, jule::U64 _72048_id, jule::Ptr<_1db944d0d_Token>* _72066_t) {
	if ((!(_1db94d300_bytesHasPrefix(_72024_txt, _72037_kind)))) {
		return false;;
	};
	(*(_72066_t)).get()._field_Kind=_72037_kind;
	(*(_72066_t)).get()._field_Id=_72048_id;
	(*(_self_))._field_pos+=_72037_kind.len();
	return true;;
}



inline jule::Bool _1db9561a4_lexBasicOps(_1db952c61_lex* _self_, jule::Slice<jule::U8> _73030_txt, jule::Ptr<_1db944d0d_Token>* _73048_tok) {
	{
		auto expr = &(_1db94c970_basicOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac799a82:;
		if (it != expr_end) {
			_1db94c200_kindPair *_73116_pair = it;
			{
				if (_1db955cec_isOp(_self_, &(_73030_txt), (*(_73116_pair))._field_kind, (*(_73116_pair))._field_id, _73048_tok)) {
					return true;;
				};
			}
			_iter_next_1ac799a82:;
			++it;
			goto _iter_begin_1ac799a82;
		}
		_iter_end_1ac799a82:;
	};
	return false;;
}



inline jule::Bool _1db95655b_lexId(_1db952c61_lex* _self_, jule::Slice<jule::U8>* _74025_txt, jule::Ptr<_1db944d0d_Token>* _74043_t) {
	jule::Str _74113_lex = _1db953b0d_id(_self_, _74025_txt);;
	if (_74113_lex.empty()) {
		return false;;
	};
	(*(_74043_t)).get()._field_Kind=_74113_lex;
	(*(_74043_t)).get()._field_Id=static_cast<jule::U64>(2LLU);
	return true;;
}



inline jule::Bool _1db956913_lexNum(_1db952c61_lex* _self_, jule::Slice<jule::U8>* _75026_txt, jule::Ptr<_1db944d0d_Token>* _75044_t) {
	jule::Str _75113_lex = _1db95467a_num(_self_, _75026_txt);;
	if (_75113_lex.empty()) {
		return false;;
	};
	(*(_75044_t)).get()._field_Kind=_75113_lex;
	(*(_75044_t)).get()._field_Id=static_cast<jule::U64>(6LLU);
	return true;;
}



inline jule::Ptr<_1db944d0d_Token> _1db956b77_token(_1db952c61_lex* _self_) {
	jule::Ptr<_1db944d0d_Token> _76217_t = jule::new_ptr<_1db944d0d_Token>(_1db944d0d_Token{._field_File=(*(_self_))._field_file, ._field_Id=static_cast<jule::U64>(0LLU)});;
	jule::Slice<jule::U8> _76713_txt = _1db953d72_resume(_self_);;
	if ((_76713_txt == nullptr)) {
		return _76217_t;;
	};
	_76217_t.get()._field_Column=(*(_self_))._field_column;
	_76217_t.get()._field_Row=(*(_self_))._field_row;
	{
		
		if (_1db956913_lexNum(_self_, &(_76713_txt), &(_76217_t))) {
			_case_begin_1ac7a0aaa:;
			{
				goto _match_end_1ac79eea5;
			}
		}
		else if ((_76713_txt[0LL] == '\'')) {
			_case_begin_1ac7a1319:;
			{
				_76217_t.get()._field_Kind=_1db95514d_lexRune(_self_, &(_76713_txt));
				_76217_t.get()._field_Id=static_cast<jule::U64>(6LLU);
				return _76217_t;;
			}
		}
		else if (((_76713_txt[0LL] == '\"') || (_76713_txt[0LL] == '`'))) {
			_case_begin_1ac7a1380:;
			{
				_76217_t.get()._field_Kind=_1db9553b2_lexStr(_self_);
				_76217_t.get()._field_Id=static_cast<jule::U64>(6LLU);
				return _76217_t;;
			}
		}
		else if (_1db94d300_bytesHasPrefix(&(_76713_txt), jule::Str("//", 2))) {
			_case_begin_1ac7a15b1:;
			{
				_1db9540e7_lexLineComment(_self_, &(_76217_t));
				return _76217_t;;
			}
		}
		else if (_1db94d300_bytesHasPrefix(&(_76713_txt), jule::Str("/*", 2))) {
			_case_begin_1ac7a1627:;
			{
				_1db95436c_lexRangeComment(_self_, &(_76217_t));
				return _76217_t;;
			}
		}
		else if (_1db955cec_isOp(_self_, &(_76713_txt), jule::Str("(", 1), static_cast<jule::U64>(3LLU), &(_76217_t)) || _1db955cec_isOp(_self_, &(_76713_txt), jule::Str(")", 1), static_cast<jule::U64>(3LLU), &(_76217_t)) || _1db955cec_isOp(_self_, &(_76713_txt), jule::Str("{", 1), static_cast<jule::U64>(3LLU), &(_76217_t)) || _1db955cec_isOp(_self_, &(_76713_txt), jule::Str("}", 1), static_cast<jule::U64>(3LLU), &(_76217_t)) || _1db955cec_isOp(_self_, &(_76713_txt), jule::Str("[", 1), static_cast<jule::U64>(3LLU), &(_76217_t)) || _1db955cec_isOp(_self_, &(_76713_txt), jule::Str("]", 1), static_cast<jule::U64>(3LLU), &(_76217_t)) || _1db9561a4_lexBasicOps(_self_, _76713_txt, &(_76217_t))) {
			_case_begin_1ac7a168d:;
			{
				goto _match_end_1ac79eea5;
			}
		}
		else if (_1db95655b_lexId(_self_, &(_76713_txt), &(_76217_t))) {
			_case_begin_1ac7a0071:;
			{
				{
					auto expr = &(_1db94c62e_keywords);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac7a6c37:;
					if (it != expr_end) {
						_1db94c200_kindPair *_80520_pair = it;
						{
							if (((*(_80520_pair))._field_kind == _76217_t.get()._field_Kind)) {
								_76217_t.get()._field_Id=(*(_80520_pair))._field_id;
								goto _iter_end_1ac7a6c37;
							};
						}
						_iter_next_1ac7a6c37:;
						++it;
						goto _iter_begin_1ac7a6c37;
					}
					_iter_end_1ac7a6c37:;
				};
			}
		}
		else {
			_case_begin_1ac7a000a:;
			{
				jule::I32 _81218_r = 0;;
				jule::I64 _81221_sz = 0;;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _203e638ec_DecodeRune(_76713_txt);
					_81218_r = __jule_assign_result.__jule_result_arg0;
					_81221_sz = __jule_assign_result.__jule_result_arg1;
				});
				_1db953305_pushErr(_self_, jule::Str("undefined token: @", 18), jule::Slice<jule::Any>::make({jule::Any(_81218_r, &__jule_any_type1)}));
				((*(_self_))._field_column)++;
				(*(_self_))._field_pos+=_81221_sz;
				return _76217_t;;
			}
		}
		_match_end_1ac79eea5:;
	};
	(*(_self_))._field_column+=_203e655e1_RuneCountStr(_76217_t.get()._field_Kind);
	return _76217_t;;
}







std::ostream &operator<<(std::ostream &_Stream, _1db952c61_lex _Src) {
	_Stream << "lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dc59ac60_floatInfo _Src) {
	_Stream << "floatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dc59b887_decimalSlice _Src) {
	_Stream << "decimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dc5acca5_leftCheat _Src) {
	_Stream << "leftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dc5a57e7_set(_1dc5ad778_decimal* _self_, jule::Str _23322_s) {
	jule::Bool __jule_func_result = false;
	jule::I64 _23417_i = 0LL;;
	(*(_self_))._field_neg=false;
	(*(_self_))._field_trunc=false;
	if ((_23417_i >= _23322_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_23322_s[_23417_i] == '+')) {
			_case_begin_1ab4d732b:;
			{
				(_23417_i)++;
			}
		}
		else if ((_23322_s[_23417_i] == '-')) {
			_case_begin_1ab4d73a3:;
			{
				(*(_self_))._field_neg=true;
				(_23417_i)++;
			}
		}
		_match_end_1ab4d71b6:;
	};
	jule::Bool _25117_sawdot = false;;
	jule::Bool _25217_sawdigits = false;;
	for (; (_23417_i < _23322_s.len()); (_23417_i)++) {
		{
			{
				
				if ((_23322_s[_23417_i] == '_')) {
					_case_begin_1ab4d9509:;
					{
						goto _iter_next_1ab4d8ccd;
					}
				}
				else if ((_23322_s[_23417_i] == '.')) {
					_case_begin_1ab4d9581:;
					{
						if (_25117_sawdot) {
							return __jule_func_result;;
						};
						_25117_sawdot=true;
						(*(_self_))._field_dp=(*(_self_))._field_nd;
						goto _iter_next_1ab4d8ccd;
					}
				}
				else if ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9'))) {
					_case_begin_1ab4d9608:;
					{
						_25217_sawdigits=true;
						if (((_23322_s[_23417_i] == '0') && ((*(_self_))._field_nd == 0LL))) {
							((*(_self_))._field_dp)--;
							goto _iter_next_1ab4d8ccd;
						};
						if (((*(_self_))._field_nd < 800LL)) {
							(*(_self_))._field_d[(*(_self_))._field_nd]=_23322_s[_23417_i];
							((*(_self_))._field_nd)++;
						} else if ((_23322_s[_23417_i] != '0')) {
							(*(_self_))._field_trunc=true;
						};
						goto _iter_next_1ab4d8ccd;
					}
				}
				_match_end_1ab4d93d8:;
			};
			goto _iter_end_1ab4d8ccd;
		}
	_iter_next_1ab4d8ccd:;
	}
	_iter_end_1ab4d8ccd:;;
	if ((!(_25217_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_25117_sawdot))) {
		(*(_self_))._field_dp=(*(_self_))._field_nd;
	};
	if (((_23417_i < _23322_s.len()) && (_1dc5a10ea_lower(_23322_s[_23417_i]) == 'e'))) {
		(_23417_i)++;
		if ((_23417_i >= _23322_s.len())) {
			return __jule_func_result;;
		};
		jule::I64 _29721_esign = 1LL;;
		if ((_23322_s[_23417_i] == '+')) {
			(_23417_i)++;
		} else if ((_23322_s[_23417_i] == '-')) {
			(_23417_i)++;
			_29721_esign=-1LL;
		};
		if ((((_23417_i >= _23322_s.len()) || (_23322_s[_23417_i] < '0')) || (_23322_s[_23417_i] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _30721_e = 0LL;;
		for (; ((_23417_i < _23322_s.len()) && ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9')) || (_23322_s[_23417_i] == '_'))); (_23417_i)++) {
			{
				if ((_23322_s[_23417_i] == '_')) {
					goto _iter_next_1ab4e1c2b;
				};
				if ((_30721_e < 10000LL)) {
					_30721_e=static_cast<jule::I64>((((_30721_e * 10LL) + static_cast<jule::I64>(_23322_s[_23417_i])) - '0'));
				};
			}
		_iter_next_1ab4e1c2b:;
		}
		_iter_end_1ab4e1c2b:;;
		(*(_self_))._field_dp+=(_30721_e * _29721_esign);
	};
	if ((_23417_i != _23322_s.len())) {
		return __jule_func_result;;
	};
	__jule_func_result=true;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_bool _1dc5a5b05_floatBits(_1dc5ad778_decimal* _self_, _1dc59ac60_floatInfo* _32729_flt) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _32817_exp = 0LL;;
	jule::U64 _32917_mant = 0LLU;;
	if (((*(_self_))._field_nd == 0LL)) {
		_32917_mant=0LLU;
		_32817_exp=(*(_32729_flt))._field_bias;
		goto _julec_label_out;
	};
	if (((*(_self_))._field_dp > 310LL)) {
		goto _julec_label_overflow;
	};
	if (((*(_self_))._field_dp < -330LL)) {
		_32917_mant=0LLU;
		_32817_exp=(*(_32729_flt))._field_bias;
		goto _julec_label_out;
	};
	_32817_exp=0LL;
	while (((*(_self_))._field_dp > 0LL)) {
		{
			jule::I64 _35421_n = 0LL;;
			if (((*(_self_))._field_dp >= _1dc5a5484_powtab.len())) {
				_35421_n=27LL;
			} else {
				_35421_n=_1dc5a5484_powtab[(*(_self_))._field_dp];
			};
			_1dc5addc7_shift(_self_, static_cast<jule::I64>((-(_35421_n))));
			_32817_exp+=_35421_n;
		}
	_iter_next_1ab4e85c3:;
	}
	_iter_end_1ab4e85c3:;;
	while ((((*(_self_))._field_dp < 0LL) || (((*(_self_))._field_dp == 0LL) && ((*(_self_))._field_d[0LL] < '5')))) {
		{
			jule::I64 _36421_n = 0LL;;
			if (((-((*(_self_))._field_dp)) >= _1dc5a5484_powtab.len())) {
				_36421_n=27LL;
			} else {
				_36421_n=_1dc5a5484_powtab[(-((*(_self_))._field_dp))];
			};
			_1dc5addc7_shift(_self_, _36421_n);
			_32817_exp-=_36421_n;
		}
	_iter_next_1ab4e9607:;
	}
	_iter_end_1ab4e9607:;;
	(_32817_exp)--;
	if ((_32817_exp < ((*(_32729_flt))._field_bias + 1LL))) {
		jule::I64 _38117_n = (((*(_32729_flt))._field_bias + 1LL) - _32817_exp);;
		_1dc5addc7_shift(_self_, static_cast<jule::I64>((-(_38117_n))));
		_32817_exp+=_38117_n;
	};
	if (((_32817_exp - (*(_32729_flt))._field_bias) >= static_cast<jule::I64>(((1LL << (*(_32729_flt))._field_expbits) - 1LL)))) {
		goto _julec_label_overflow;
	};
	_1dc5addc7_shift(_self_, static_cast<jule::I64>(static_cast<jule::I64>((1LL + (*(_32729_flt))._field_mantbits))));
	_32917_mant=static_cast<jule::U64>(_1dc5ae8ab_roundedInteger(_self_));
	if ((_32917_mant == (2LLU << (*(_32729_flt))._field_mantbits))) {
		_32917_mant>>=1LLU;
		(_32817_exp)++;
		if (((_32817_exp - (*(_32729_flt))._field_bias) >= static_cast<jule::I64>(((1LL << (*(_32729_flt))._field_expbits) - 1LL)))) {
			goto _julec_label_overflow;
		};
	};
	if (((_32917_mant & (1LLU << (*(_32729_flt))._field_mantbits)) == 0LLU)) {
		_32817_exp=(*(_32729_flt))._field_bias;
	};
	goto _julec_label_out;
	_julec_label_overflow:;
	_32917_mant=0LLU;
	_32817_exp=static_cast<jule::I64>(static_cast<jule::I64>((((static_cast<jule::U64>(1LLU) << (*(_32729_flt))._field_expbits) - 1LLU) + static_cast<jule::U64>((*(_32729_flt))._field_bias))));
	__jule_func_result.__jule_result_arg1=true;
	_julec_label_out:;
	jule::U64 _41717_bits = (_32917_mant & ((1LLU << (*(_32729_flt))._field_mantbits) - 1LLU));;
	_41717_bits|=(static_cast<jule::U64>(((_32817_exp - (*(_32729_flt))._field_bias) & static_cast<jule::I64>(((1LL << (*(_32729_flt))._field_expbits) - 1LL)))) << (*(_32729_flt))._field_mantbits);
	if ((*(_self_))._field_neg) {
		_41717_bits|=((1LLU << (*(_32729_flt))._field_mantbits) << (*(_32729_flt))._field_expbits);
	};
	__jule_func_result.__jule_result_arg0 = _41717_bits;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline void _1dc5adb52_assign(_1dc5ad778_decimal* _self_, jule::U64 _33029_v) {
	jule::Array<jule::U8,24> _33117_buf = jule::Array<jule::U8,24>();;
	jule::I64 _33417_n = 0LL;;
	while ((_33029_v > 0LLU)) {
		{
			jule::U64 _33617_v1 = (_33029_v / 10LLU);;
			_33029_v-=(10LLU * _33617_v1);
			_33117_buf[_33417_n]=static_cast<jule::U8>(static_cast<jule::U8>((_33029_v + '0')));
			(_33417_n)++;
			_33029_v=_33617_v1;
		}
	_iter_next_1ab506aa9:;
	}
	_iter_end_1ab506aa9:;;
	(*(_self_))._field_nd=0LL;
	(_33417_n)--;
	for (; (_33417_n >= 0LL); (_33417_n)--) {
		{
			(*(_self_))._field_d[(*(_self_))._field_nd]=_33117_buf[_33417_n];
			((*(_self_))._field_nd)++;
		}
	_iter_next_1ab507527:;
	}
	_iter_end_1ab507527:;;
	(*(_self_))._field_dp=(*(_self_))._field_nd;
	_1dc5aee61_trim(_self_);
}



inline void _1dc5addc7_shift(_1dc5ad778_decimal* _self_, jule::I64 _35528_k) {
	{
		
		if (((*(_self_))._field_nd == 0LL)) {
			_case_begin_1ab509606:;
		}
		else if ((_35528_k > 0LL)) {
			_case_begin_1ab50967d:;
			{
				while ((_35528_k > 60LL)) {
					{
						_1dc5b0901_leftShift(_self_, 60LLU);
						_35528_k-=60LL;
					}
				_iter_next_1ab50a3d7:;
				}
				_iter_end_1ab50a3d7:;;
				_1dc5b0901_leftShift(_self_, static_cast<jule::U64>(static_cast<jule::U64>(_35528_k)));
			}
		}
		else if ((_35528_k < 0LL)) {
			_case_begin_1ab509705:;
			{
				while ((_35528_k < -60LL)) {
					{
						_1dc5b0219_rightShift(_self_, 60LLU);
						_35528_k+=60LL;
					}
				_iter_next_1ab50a34e:;
				}
				_iter_end_1ab50a34e:;;
				_1dc5b0219_rightShift(_self_, static_cast<jule::U64>(static_cast<jule::U64>((-(_35528_k)))));
			}
		}
		_match_end_1ab5094d5:;
	};
}



inline void _1dc5ae14c_roundDown(_1dc5ad778_decimal* _self_, jule::I64 _37528_nd) {
	if (((_37528_nd < 0LL) || (_37528_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	(*(_self_))._field_nd=_37528_nd;
	_1dc5aee61_trim(_self_);
}



inline void _1dc5ae3c2_roundUp(_1dc5ad778_decimal* _self_, jule::I64 _38426_nd) {
	if (((_38426_nd < 0LL) || (_38426_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	jule::I64 _39017_i = (_38426_nd - 1LL);;
	for (; (_39017_i >= 0LL); (_39017_i)--) {
		{
			jule::U8 _39217_c = (*(_self_))._field_d[_39017_i];;
			if ((_39217_c < '9')) {
				((*(_self_))._field_d[_39017_i])++;
				(*(_self_))._field_nd=static_cast<jule::I64>((_39017_i + 1LL));
				return;;
			};
		}
	_iter_next_1ab50e023:;
	}
	_iter_end_1ab50e023:;;
	(*(_self_))._field_d[0LL]='1';
	(*(_self_))._field_nd=1LL;
	((*(_self_))._field_dp)++;
}



inline void _1dc5ae647_round(_1dc5ad778_decimal* _self_, jule::I64 _41124_nd) {
	if (((_41124_nd < 0LL) || (_41124_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	if (_1dc5b0c42_shouldRoundUp(_self_, _41124_nd)) {
		_1dc5ae3c2_roundUp(_self_, _41124_nd);
	} else {
		_1dc5ae14c_roundDown(_self_, _41124_nd);
	};
}



inline jule::U64 _1dc5ae8ab_roundedInteger(_1dc5ad778_decimal* _self_) {
	if (((*(_self_))._field_dp > 20LL)) {
		return jule::MAX_U64;;
	};
	jule::I64 _42817_i = 0LL;;
	jule::U64 _42917_n = 0LLU;;
	for (; ((_42817_i < (*(_self_))._field_dp) && (_42817_i < (*(_self_))._field_nd)); (_42817_i)++) {
		{
			_42917_n=static_cast<jule::U64>(((_42917_n * 10LLU) + static_cast<jule::U64>(((*(_self_))._field_d[_42817_i] - '0'))));
		}
	_iter_next_1ab511b91:;
	}
	_iter_end_1ab511b91:;;
	for (; (_42817_i < (*(_self_))._field_dp); (_42817_i)++) {
		{
			_42917_n*=10LLU;
		}
	_iter_next_1ab513885:;
	}
	_iter_end_1ab513885:;;
	if (_1dc5b0c42_shouldRoundUp(_self_, (*(_self_))._field_dp)) {
		(_42917_n)++;
	};
	return _42917_n;;
}







std::ostream &operator<<(std::ostream &_Stream, _1dc5ad778_decimal _Src) {
	_Stream << "decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c0901b1b_Const> static__1c090208e_NewI64(jule::I64 _1622_x) {
	return jule::new_ptr<_1c0901b1b_Const>(_1c0901b1b_Const{._field_data=jule::Any(_1622_x, &__jule_any_type2)});;
}



inline jule::Ptr<_1c0901b1b_Const> static__1c0902336_NewU64(jule::U64 _1922_x) {
	return jule::new_ptr<_1c0901b1b_Const>(_1c0901b1b_Const{._field_data=jule::Any(_1922_x, &__jule_any_type3)});;
}



inline jule::Ptr<_1c0901b1b_Const> static__1c09025cd_NewBool(jule::Bool _2223_x) {
	return jule::new_ptr<_1c0901b1b_Const>(_1c0901b1b_Const{._field_data=jule::Any(_2223_x, &__jule_any_type4)});;
}



inline jule::Ptr<_1c0901b1b_Const> static__1c0902875_NewStr(jule::Str _2522_x) {
	return jule::new_ptr<_1c0901b1b_Const>(_1c0901b1b_Const{._field_data=jule::Any(_2522_x, &__jule_any_type5)});;
}



inline jule::Ptr<_1c0901b1b_Const> static__1c0902b1c_NewF64(jule::F64 _2822_x) {
	return jule::new_ptr<_1c0901b1b_Const>(_1c0901b1b_Const{._field_data=jule::Any(_2822_x, &__jule_any_type6)});;
}



inline jule::Ptr<_1c0901b1b_Const> static__1c0902d1a_NewNil(void) {
	return jule::new_ptr<_1c0901b1b_Const>(_1c0901b1b_Const{._field_data=nullptr});;
}



inline jule::I64 _1c0903414_ReadI64(_1c0901b1b_Const* _self_) {
	if ((!(_1c09057ac_IsI64(_self_)))) {
		return 0LL;;
	};
	return static_cast<jule::I64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2));;
}



inline jule::U64 _1c0903678_ReadU64(_1c0901b1b_Const* _self_) {
	if ((!(_1c0905a21_IsU64(_self_)))) {
		return 0LLU;;
	};
	return static_cast<jule::U64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3));;
}



inline jule::Bool _1c09038dc_ReadBool(_1c0901b1b_Const* _self_) {
	if ((!(_1c0905c85_IsBool(_self_)))) {
		return false;;
	};
	return (*(_self_))._field_data.cast<jule::Bool>(&__jule_any_type4);;
}



inline jule::Str _1c0903b51_ReadStr(_1c0901b1b_Const* _self_) {
	if ((!(_1c0905ee9_IsStr(_self_)))) {
		return jule::Str();;
	};
	return (*(_self_))._field_data.cast<jule::Str>(&__jule_any_type5);;
}



inline jule::F64 _1c0903db5_ReadF64(_1c0901b1b_Const* _self_) {
	if ((!(_1c090625d_IsF64(_self_)))) {
		return 0LL;;
	};
	return static_cast<jule::F64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6));;
}



inline jule::I64 _1c0904129_AsI64(_1c0901b1b_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1acc0c5dd:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2));;
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1acc0c654:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1acc0c016:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6)));;
			}
		}
		else {
			_case_begin_1acc0be6c:;
			{
				return 0LL;;
			}
		}
		_match_end_1acc0be17:;
	};
}



inline jule::U64 _1c090438d_AsU64(_1c0901b1b_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1acc0e018:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3));;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1acc0e07e:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1acc0da95:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6)));;
			}
		}
		else {
			_case_begin_1acc0c830:;
			{
				return 0LLU;;
			}
		}
		_match_end_1acc0cd5d:;
	};
}



inline jule::F64 _1c0904602_AsF64(_1c0901b1b_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1acc10943:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6));;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1acc109a9:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1acc104c0:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3)));;
			}
		}
		else {
			_case_begin_1acc0e25a:;
			{
				return 0LL;;
			}
		}
		_match_end_1acc0c896:;
	};
}



inline void _1c0904877_SetI64(_1c0901b1b_Const* _self_, jule::I64 _13825_x) {
	(*(_self_))._field_data=jule::Any(_13825_x, &__jule_any_type2);
}



inline void _1c0904aec_SetU64(_1c0901b1b_Const* _self_, jule::U64 _14125_x) {
	(*(_self_))._field_data=jule::Any(_14125_x, &__jule_any_type3);
}



inline void _1c0904d72_SetBool(_1c0901b1b_Const* _self_, jule::Bool _14426_x) {
	(*(_self_))._field_data=jule::Any(_14426_x, &__jule_any_type4);
}



inline void _1c09050e7_SetStr(_1c0901b1b_Const* _self_, jule::Str _14725_x) {
	(*(_self_))._field_data=jule::Any(_14725_x, &__jule_any_type5);
}



inline void _1c090536c_SetF64(_1c0901b1b_Const* _self_, jule::F64 _15025_x) {
	(*(_self_))._field_data=jule::Any(_15025_x, &__jule_any_type6);
}



inline void _1c0905548_SetNil(_1c0901b1b_Const* _self_) {
	(*(_self_))._field_data=nullptr;
}



inline jule::Bool _1c09057ac_IsI64(_1c0901b1b_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1acc1435e:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1acc145d4:;
			{
				return false;;
			}
		}
		_match_end_1acc1457e:;
	};
}



inline jule::Bool _1c0905a21_IsU64(_1c0901b1b_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1acc14e86:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1acc14804:;
			{
				return false;;
			}
		}
		_match_end_1acc146b1:;
	};
}



inline jule::Bool _1c0905c85_IsBool(_1c0901b1b_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1acc1521c:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1acc158d2:;
			{
				return false;;
			}
		}
		_match_end_1acc1587c:;
	};
}



inline jule::Bool _1c0905ee9_IsStr(_1c0901b1b_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1acc15bce:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1acc16394:;
			{
				return false;;
			}
		}
		_match_end_1acc1633e:;
	};
}



inline jule::Bool _1c090625d_IsF64(_1c0901b1b_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1acc16691:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1acc16d56:;
			{
				return false;;
			}
		}
		_match_end_1acc16d01:;
	};
}



inline jule::Bool _1c09064c2_IsNil(_1c0901b1b_Const* _self_) {
	return ((*(_self_))._field_data == nullptr);;
}



inline jule::Bool _1c09067d0_AreSameTypes(_1c0901b1b_Const* _self_, _1c0901b1b_Const _21327_x) {
	{
		
		if ((_1c09057ac_IsI64(_self_) == _1c09057ac_IsI64(&_21327_x))) {
			_case_begin_1acc18907:;
			{
				return true;;
			}
		}
		else if ((_1c0905a21_IsU64(_self_) == _1c0905a21_IsU64(&_21327_x))) {
			_case_begin_1acc1820e:;
			{
				return true;;
			}
		}
		else if ((_1c090625d_IsF64(_self_) == _1c090625d_IsF64(&_21327_x))) {
			_case_begin_1acc18286:;
			{
				return true;;
			}
		}
		else if ((_1c0905c85_IsBool(_self_) == _1c0905c85_IsBool(&_21327_x))) {
			_case_begin_1acc1830d:;
			{
				return true;;
			}
		}
		else if ((_1c0905ee9_IsStr(_self_) == _1c0905ee9_IsStr(&_21327_x))) {
			_case_begin_1acc18385:;
			{
				return true;;
			}
		}
		else if ((_1c09064c2_IsNil(_self_) == _1c09064c2_IsNil(&_21327_x))) {
			_case_begin_1acc185d8:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1acc18187:;
			{
				return false;;
			}
		}
		_match_end_1acc180bb:;
	};
}



inline jule::Bool _1c0906add_And(_1c0901b1b_Const* _self_, _1c0901b1b_Const _23818_x) {
	{
		
		if ((_1c0905c85_IsBool(_self_) && _1c0905c85_IsBool(&_23818_x))) {
			_case_begin_1acc1bb08:;
			{
				return (_1c09038dc_ReadBool(_self_) && _1c09038dc_ReadBool(&_23818_x));;
			}
		}
		else {
			_case_begin_1acc1b410:;
			{
				return false;;
			}
		}
		_match_end_1acc1b212:;
	};
}



inline jule::Bool _1c0906deb_Or(_1c0901b1b_Const* _self_, _1c0901b1b_Const _24917_x) {
	{
		
		if ((_1c0905c85_IsBool(_self_) && _1c0905c85_IsBool(&_24917_x))) {
			_case_begin_1acc1ce6c:;
			{
				return (_1c09038dc_ReadBool(_self_) || _1c09038dc_ReadBool(&_24917_x));;
			}
		}
		else {
			_case_begin_1acc1c7b8:;
			{
				return false;;
			}
		}
		_match_end_1acc1be38:;
	};
}



inline jule::Bool _1c0907209_Eq(_1c0901b1b_Const* _self_, _1c0901b1b_Const _26017_x) {
	{
		
		if (_1c09064c2_IsNil(_self_)) {
			_case_begin_1acc1e347:;
			{
				return _1c09064c2_IsNil(&_26017_x);;
			}
		}
		else if (_1c0905c85_IsBool(_self_)) {
			_case_begin_1acc1dba4:;
			{
				return (_1c0905c85_IsBool(&_26017_x) && (_1c09038dc_ReadBool(_self_) == _1c09038dc_ReadBool(&_26017_x)));;
			}
		}
		else if (_1c0905ee9_IsStr(_self_)) {
			_case_begin_1acc1dc1a:;
			{
				return (_1c0905ee9_IsStr(&_26017_x) && (_1c0903b51_ReadStr(_self_) == _1c0903b51_ReadStr(&_26017_x)));;
			}
		}
		else if (_1c09057ac_IsI64(_self_)) {
			_case_begin_1acc1dc92:;
			{
				return (_1c0903414_ReadI64(_self_) == _1c0904129_AsI64(&_26017_x));;
			}
		}
		else if (_1c0905a21_IsU64(_self_)) {
			_case_begin_1acc1dd19:;
			{
				return (_1c0903678_ReadU64(_self_) == _1c090438d_AsU64(&_26017_x));;
			}
		}
		else if (_1c090625d_IsF64(_self_)) {
			_case_begin_1acc1e04a:;
			{
				return (_1c0903db5_ReadF64(_self_) == _1c0904602_AsF64(&_26017_x));;
			}
		}
		else {
			_case_begin_1acc1db3d:;
			{
				return false;;
			}
		}
		_match_end_1acc1d28b:;
	};
}



inline jule::Bool _1c0907517_Lt(_1c0901b1b_Const* _self_, _1c0901b1b_Const _28717_x) {
	{
		
		if (_1c0905ee9_IsStr(_self_)) {
			_case_begin_1acc2313c:;
			{
				return (_1c0905ee9_IsStr(&_28717_x) && (_1c0903b51_ReadStr(_self_) < _1c0903b51_ReadStr(&_28717_x)));;
			}
		}
		else if (_1c09057ac_IsI64(_self_)) {
			_case_begin_1acc229ee:;
			{
				return (_1c0903414_ReadI64(_self_) < _1c0904129_AsI64(&_28717_x));;
			}
		}
		else if (_1c0905a21_IsU64(_self_)) {
			_case_begin_1acc22a65:;
			{
				return (_1c0903678_ReadU64(_self_) < _1c090438d_AsU64(&_28717_x));;
			}
		}
		else if (_1c090625d_IsF64(_self_)) {
			_case_begin_1acc22acb:;
			{
				return (_1c0903db5_ReadF64(_self_) < _1c0904602_AsF64(&_28717_x));;
			}
		}
		else {
			_case_begin_1acc1e677:;
			{
				return false;;
			}
		}
		_match_end_1acc1e5ab:;
	};
}



inline jule::Bool _1c0907825_LtEq(_1c0901b1b_Const* _self_, _1c0901b1b_Const _31019_x) {
	{
		
		if (_1c0905ee9_IsStr(_self_)) {
			_case_begin_1acc25e42:;
			{
				return (_1c0905ee9_IsStr(&_31019_x) && (_1c0903b51_ReadStr(_self_) <= _1c0903b51_ReadStr(&_31019_x)));;
			}
		}
		else if (_1c09057ac_IsI64(_self_)) {
			_case_begin_1acc25804:;
			{
				return (_1c0903414_ReadI64(_self_) <= _1c0904129_AsI64(&_31019_x));;
			}
		}
		else if (_1c0905a21_IsU64(_self_)) {
			_case_begin_1acc2586a:;
			{
				return (_1c0903678_ReadU64(_self_) <= _1c090438d_AsU64(&_31019_x));;
			}
		}
		else if (_1c090625d_IsF64(_self_)) {
			_case_begin_1acc258d1:;
			{
				return (_1c0903db5_ReadF64(_self_) <= _1c0904602_AsF64(&_31019_x));;
			}
		}
		else {
			_case_begin_1acc233b2:;
			{
				return false;;
			}
		}
		_match_end_1acc232e6:;
	};
}



inline jule::Bool _1c0907b33_Gt(_1c0901b1b_Const* _self_, _1c0901b1b_Const _33317_x) {
	{
		
		if (_1c0905ee9_IsStr(_self_)) {
			_case_begin_1acc28c47:;
			{
				return (_1c0905ee9_IsStr(&_33317_x) && (_1c0903b51_ReadStr(_self_) > _1c0903b51_ReadStr(&_33317_x)));;
			}
		}
		else if (_1c09057ac_IsI64(_self_)) {
			_case_begin_1acc28609:;
			{
				return (_1c0903414_ReadI64(_self_) > _1c0904129_AsI64(&_33317_x));;
			}
		}
		else if (_1c0905a21_IsU64(_self_)) {
			_case_begin_1acc28670:;
			{
				return (_1c0903678_ReadU64(_self_) > _1c090438d_AsU64(&_33317_x));;
			}
		}
		else if (_1c090625d_IsF64(_self_)) {
			_case_begin_1acc286d6:;
			{
				return (_1c0903db5_ReadF64(_self_) > _1c0904602_AsF64(&_33317_x));;
			}
		}
		else {
			_case_begin_1acc261b7:;
			{
				return false;;
			}
		}
		_match_end_1acc260eb:;
	};
}



inline jule::Bool _1c0907e41_GtEq(_1c0901b1b_Const* _self_, _1c0901b1b_Const _35619_x) {
	{
		
		if (_1c0905ee9_IsStr(_self_)) {
			_case_begin_1acc2ba4c:;
			{
				return (_1c0905ee9_IsStr(&_35619_x) && (_1c0903b51_ReadStr(_self_) >= _1c0903b51_ReadStr(&_35619_x)));;
			}
		}
		else if (_1c09057ac_IsI64(_self_)) {
			_case_begin_1acc2b40e:;
			{
				return (_1c0903414_ReadI64(_self_) >= _1c0904129_AsI64(&_35619_x));;
			}
		}
		else if (_1c0905a21_IsU64(_self_)) {
			_case_begin_1acc2b475:;
			{
				return (_1c0903678_ReadU64(_self_) >= _1c090438d_AsU64(&_35619_x));;
			}
		}
		else if (_1c090625d_IsF64(_self_)) {
			_case_begin_1acc2b4db:;
			{
				return (_1c0903db5_ReadF64(_self_) >= _1c0904602_AsF64(&_35619_x));;
			}
		}
		else {
			_case_begin_1acc28ebc:;
			{
				return false;;
			}
		}
		_match_end_1acc28e01:;
	};
}



inline jule::Bool _1c090824e_Add(_1c0901b1b_Const* _self_, _1c0901b1b_Const _37722_x) {
	{
		
		if (_1c0905ee9_IsStr(_self_)) {
			_case_begin_1acc2e852:;
			{
				if ((!(_1c0905ee9_IsStr(&_37722_x)))) {
					return false;;
				};
				_1c09050e7_SetStr(_self_, (_1c0903b51_ReadStr(_self_) + _1c0903b51_ReadStr(&_37722_x)));
			}
		}
		else if (_1c090625d_IsF64(_self_)) {
			_case_begin_1acc2e214:;
			{
				_1c090536c_SetF64(_self_, static_cast<jule::F64>((_1c0903db5_ReadF64(_self_) + _1c0904602_AsF64(&_37722_x))));
			}
		}
		else if (_1c09057ac_IsI64(_self_)) {
			_case_begin_1acc2e27a:;
			{
				if (_1c090625d_IsF64(&_37722_x)) {
					_1c090536c_SetF64(_self_, static_cast<jule::F64>((_1c0904602_AsF64(_self_) + _1c0903db5_ReadF64(&_37722_x))));
				} else {
					_1c0904877_SetI64(_self_, static_cast<jule::I64>((_1c0903414_ReadI64(_self_) + _1c0904129_AsI64(&_37722_x))));
				};
			}
		}
		else if (_1c0905a21_IsU64(_self_)) {
			_case_begin_1acc2e2e1:;
			{
				if (_1c090625d_IsF64(&_37722_x)) {
					_1c090536c_SetF64(_self_, static_cast<jule::F64>((_1c0904602_AsF64(_self_) + _1c0903db5_ReadF64(&_37722_x))));
				} else {
					_1c0904aec_SetU64(_self_, static_cast<jule::U64>((_1c0903678_ReadU64(_self_) + _1c090438d_AsU64(&_37722_x))));
				};
			}
		}
		else {
			_case_begin_1acc2bcc2:;
			{
				return false;;
			}
		}
		_match_end_1acc2bc06:;
	};
	return true;;
}



inline jule::Bool _1c090855c_Sub(_1c0901b1b_Const* _self_, _1c0901b1b_Const _40622_x) {
	{
		
		if (_1c090625d_IsF64(_self_)) {
			_case_begin_1acc34c86:;
			{
				_1c090536c_SetF64(_self_, static_cast<jule::F64>((_1c0903db5_ReadF64(_self_) - _1c0904602_AsF64(&_40622_x))));
			}
		}
		else if (_1c09057ac_IsI64(_self_)) {
			_case_begin_1acc345b0:;
			{
				if (_1c090625d_IsF64(&_40622_x)) {
					_1c090536c_SetF64(_self_, static_cast<jule::F64>((_1c0904602_AsF64(_self_) - _1c0903db5_ReadF64(&_40622_x))));
				} else {
					_1c0904877_SetI64(_self_, static_cast<jule::I64>((_1c0903414_ReadI64(_self_) - _1c0904129_AsI64(&_40622_x))));
				};
			}
		}
		else if (_1c0905a21_IsU64(_self_)) {
			_case_begin_1acc34626:;
			{
				if (_1c090625d_IsF64(&_40622_x)) {
					_1c090536c_SetF64(_self_, static_cast<jule::F64>((_1c0904602_AsF64(_self_) - _1c0903db5_ReadF64(&_40622_x))));
				} else {
					_1c0904aec_SetU64(_self_, static_cast<jule::U64>((_1c0903678_ReadU64(_self_) - _1c090438d_AsU64(&_40622_x))));
				};
			}
		}
		else {
			_case_begin_1acc34549:;
			{
				return false;;
			}
		}
		_match_end_1acc33c96:;
	};
	return true;;
}



inline jule::Bool _1c090886a_Mul(_1c0901b1b_Const* _self_, _1c0901b1b_Const _43022_x) {
	{
		
		if (_1c090625d_IsF64(_self_)) {
			_case_begin_1acc3921e:;
			{
				_1c090536c_SetF64(_self_, static_cast<jule::F64>((_1c0903db5_ReadF64(_self_) * _1c0904602_AsF64(&_43022_x))));
			}
		}
		else if (_1c09057ac_IsI64(_self_)) {
			_case_begin_1acc38a48:;
			{
				if (_1c090625d_IsF64(&_43022_x)) {
					_1c090536c_SetF64(_self_, static_cast<jule::F64>((_1c0904602_AsF64(_self_) * _1c0903db5_ReadF64(&_43022_x))));
				} else {
					_1c0904877_SetI64(_self_, static_cast<jule::I64>((_1c0903414_ReadI64(_self_) * _1c0904129_AsI64(&_43022_x))));
				};
			}
		}
		else if (_1c0905a21_IsU64(_self_)) {
			_case_begin_1acc38aae:;
			{
				if (_1c090625d_IsF64(&_43022_x)) {
					_1c090536c_SetF64(_self_, static_cast<jule::F64>((_1c0904602_AsF64(_self_) * _1c0903db5_ReadF64(&_43022_x))));
				} else {
					_1c0904aec_SetU64(_self_, static_cast<jule::U64>((_1c0903678_ReadU64(_self_) * _1c090438d_AsU64(&_43022_x))));
				};
			}
		}
		else {
			_case_begin_1acc389d2:;
			{
				return false;;
			}
		}
		_match_end_1acc380db:;
	};
	return true;;
}



inline jule::Bool _1c0908b78_Div(_1c0901b1b_Const* _self_, _1c0901b1b_Const _45822_x) {
	{
		
		if (_1c090625d_IsF64(_self_)) {
			_case_begin_1acc3d6a7:;
			{
				jule::F64 _46117_l = _1c0904602_AsF64(&_45822_x);;
				if ((_46117_l == 0LL)) {
					return false;;
				};
				_1c090536c_SetF64(_self_, static_cast<jule::F64>(jule::div(_1c0903db5_ReadF64(_self_),_46117_l)));
			}
		}
		else if (_1c09057ac_IsI64(_self_)) {
			_case_begin_1acc3ced1:;
			{
				jule::F64 _46717_l = _1c0904602_AsF64(&_45822_x);;
				if ((_46717_l == 0LL)) {
					return false;;
				};
				_1c090536c_SetF64(_self_, static_cast<jule::F64>(jule::div(_1c0904602_AsF64(_self_),_46717_l)));
			}
		}
		else if (_1c0905a21_IsU64(_self_)) {
			_case_begin_1acc3d047:;
			{
				jule::F64 _47317_l = _1c0904602_AsF64(&_45822_x);;
				if ((_47317_l == 0LL)) {
					return false;;
				};
				_1c090536c_SetF64(_self_, static_cast<jule::F64>(jule::div(_1c0904602_AsF64(_self_),_47317_l)));
			}
		}
		else {
			_case_begin_1acc3ce6a:;
			{
				return false;;
			}
		}
		_match_end_1acc3c574:;
	};
	return true;;
}



inline jule::Bool _1c0908e86_Mod(_1c0901b1b_Const* _self_, _1c0901b1b_Const _48722_x) {
	{
		
		if (_1c09057ac_IsI64(_self_)) {
			_case_begin_1acc42b2e:;
			{
				jule::I64 _49017_l = _1c0904129_AsI64(&_48722_x);;
				if ((_49017_l == 0LL)) {
					return false;;
				};
				_1c0904877_SetI64(_self_, static_cast<jule::I64>(jule::mod(_1c0903414_ReadI64(_self_),_49017_l)));
			}
		}
		else if (_1c0905a21_IsU64(_self_)) {
			_case_begin_1acc42469:;
			{
				jule::U64 _49617_l = _1c090438d_AsU64(&_48722_x);;
				if ((_49617_l == 0LLU)) {
					return false;;
				};
				_1c0904aec_SetU64(_self_, static_cast<jule::U64>(jule::mod(_1c0903678_ReadU64(_self_),_49617_l)));
			}
		}
		else {
			_case_begin_1acc42403:;
			{
				return false;;
			}
		}
		_match_end_1acc4237b:;
	};
	return true;;
}



inline jule::Bool _1c0909294_BitwiseAnd(_1c0901b1b_Const* _self_, _1c0901b1b_Const _50929_x) {
	{
		
		if (_1c09057ac_IsI64(_self_)) {
			_case_begin_1acc45c53:;
			{
				_1c0904877_SetI64(_self_, static_cast<jule::I64>((_1c0903414_ReadI64(_self_) & _1c0904129_AsI64(&_50929_x))));
			}
		}
		else if (_1c0905a21_IsU64(_self_)) {
			_case_begin_1acc4558d:;
			{
				_1c0904aec_SetU64(_self_, static_cast<jule::U64>((_1c0903678_ReadU64(_self_) & _1c090438d_AsU64(&_50929_x))));
			}
		}
		else {
			_case_begin_1acc45527:;
			{
				return false;;
			}
		}
		_match_end_1acc454a0:;
	};
	return true;;
}



inline jule::Bool _1c09095a2_BitwiseOr(_1c0901b1b_Const* _self_, _1c0901b1b_Const _52328_x) {
	{
		
		if (_1c09057ac_IsI64(_self_)) {
			_case_begin_1acc47ccc:;
			{
				_1c0904877_SetI64(_self_, static_cast<jule::I64>((_1c0903414_ReadI64(_self_) | _1c0904129_AsI64(&_52328_x))));
			}
		}
		else if (_1c0905a21_IsU64(_self_)) {
			_case_begin_1acc47617:;
			{
				_1c0904aec_SetU64(_self_, static_cast<jule::U64>((_1c0903678_ReadU64(_self_) | _1c090438d_AsU64(&_52328_x))));
			}
		}
		else {
			_case_begin_1acc475a1:;
			{
				return false;;
			}
		}
		_match_end_1acc474d5:;
	};
	return true;;
}



inline jule::Bool _1c09098b0_Xor(_1c0901b1b_Const* _self_, _1c0901b1b_Const _53722_x) {
	{
		
		if (_1c09057ac_IsI64(_self_)) {
			_case_begin_1acc49d56:;
			{
				_1c0904877_SetI64(_self_, static_cast<jule::I64>((_1c0903414_ReadI64(_self_) ^ _1c0904129_AsI64(&_53722_x))));
			}
		}
		else if (_1c0905a21_IsU64(_self_)) {
			_case_begin_1acc49691:;
			{
				_1c0904aec_SetU64(_self_, static_cast<jule::U64>((_1c0903678_ReadU64(_self_) ^ _1c090438d_AsU64(&_53722_x))));
			}
		}
		else {
			_case_begin_1acc4962a:;
			{
				return false;;
			}
		}
		_match_end_1acc4955e:;
	};
	return true;;
}



inline jule::Bool _1c0909bbd_Lshift(_1c0901b1b_Const* _self_, _1c0901b1b_Const _55125_x) {
	{
		
		if (_1c09057ac_IsI64(_self_)) {
			_case_begin_1acc4bdd0:;
			{
				jule::I64 _55417_l = _1c0904129_AsI64(_self_);;
				if ((_55417_l < 0LL)) {
					jule::U64 _55621_r = _1c090438d_AsU64(&_55125_x);;
					_1c0904877_SetI64(_self_, static_cast<jule::I64>((_55417_l << _55621_r)));
				} else {
					_1c090a33e_lshiftUnsig(_self_, &(_55125_x));
				};
			}
		}
		else if (_1c0905a21_IsU64(_self_)) {
			_case_begin_1acc4b71a:;
			{
				_1c090a33e_lshiftUnsig(_self_, &(_55125_x));
			}
		}
		else {
			_case_begin_1acc4b6a4:;
			{
				return false;;
			}
		}
		_match_end_1acc4b5d8:;
	};
	return true;;
}



inline jule::Bool _1c0909ecb_Rshift(_1c0901b1b_Const* _self_, _1c0901b1b_Const _57125_x) {
	{
		
		if (_1c09057ac_IsI64(_self_)) {
			_case_begin_1acc4e740:;
			{
				jule::I64 _57417_l = _1c0904129_AsI64(_self_);;
				if ((_57417_l < 0LL)) {
					jule::U64 _57621_r = _1c090438d_AsU64(&_57125_x);;
					_1c0904877_SetI64(_self_, static_cast<jule::I64>((_57417_l >> _57621_r)));
				} else {
					_1c090a63b_rshiftUnsig(_self_, &(_57125_x));
				};
			}
		}
		else if (_1c0905a21_IsU64(_self_)) {
			_case_begin_1acc4e07a:;
			{
				_1c090a63b_rshiftUnsig(_self_, &(_57125_x));
			}
		}
		else {
			_case_begin_1acc4e014:;
			{
				return false;;
			}
		}
		_match_end_1acc4de48:;
	};
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _1c0901b1b_Const _Src) {
	_Stream << "Const{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa81e80c_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "TopDirectives:" << _Src._field_TopDirectives << ", ";
	_Stream << "UseDecls:" << _Src._field_UseDecls << ", ";
	_Stream << "Nodes:" << _Src._field_Nodes;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa820698_Node _Src) {
	_Stream << "Node{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa820a94_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "Tag:" << _Src._field_Tag << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa854028_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aa854952_IsPrim(_1aa8545de_IdentTypeDecl* _self_) {
	return ((*(_self_))._field_Token.get()._field_Id == static_cast<jule::U64>(1LLU));;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa8545de_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa854c3d_SubIdentTypeDecl _Src) {
	_Stream << "SubIdentTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa8550e5_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa8553d1_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa8557cc_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa855ab8_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "Types:" << _Src._field_Types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aa856206_IsUnsafe(_1aa855da4_PtrTypeDecl* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa855da4_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aa856910_AutoSized(_1aa856536_ArrTypeDecl* _self_) {
	return ((*(_self_))._field_Size == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa856536_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa856c84_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa85713b_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa858549_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa858835_RangeExpr _Src) {
	_Stream << "RangeExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa858dda_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa8591c6_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aa8598d0_IsNil(_1aa85957d_LitExpr* _self_) {
	return (*(_self_))._field_Value.equal("nil", 3);;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa85957d_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa859c87_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aa85a55c_IsSelf(_1aa85a20a_IdentExpr* _self_) {
	return (*(_self_))._field_Ident.equal("self", 4);;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa85a20a_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa85a914_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "Op:" << _Src._field_Op << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa85acbb_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa85b173_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa85b52a_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "Ns:" << _Src._field_Ns << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa85b99d_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "IsSelf:" << _Src._field_IsSelf << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa85be21_BinopExpr _Src) {
	_Stream << "BinopExpr{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aa85c88e_Unhandled(_1aa85c52b_FnCallExpr* _self_) {
	return ((*(_self_))._field_Exception == nullptr);;
}



inline jule::Bool _1aa85cb03_Ignored(_1aa85c52b_FnCallExpr* _self_) {
	return (((*(_self_))._field_Exception != nullptr) && (*(_self_))._field_Exception.get()._field_Deferred);;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa85c52b_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Exception:" << _Src._field_Exception << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aa85d30c_IsTargeted(_1aa85ceaa_FieldExprPair* _self_) {
	return ((*(_self_))._field_Field != nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa85ceaa_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa85d708_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aa85decd_IsEmpty(_1aa85db7b_BraceLit* _self_) {
	return ((*(_self_))._field_Exprs.len() == 0LL);;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa85db7b_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa85e451_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val << ", ";
	_Stream << "Colon:" << _Src._field_Colon;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aa85ee68_IsEmpty(_1aa85eb38_SliceExpr* _self_) {
	return ((*(_self_))._field_Exprs.len() == 0LL);;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa85eb38_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa8604a7_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa860ab2_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Start:" << _Src._field_Start << ", ";
	_Stream << "To:" << _Src._field_To;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa860d9d_Constraint _Src) {
	_Stream << "Constraint{";
	_Stream << "Mask:" << _Src._field_Mask;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa861321_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa8616c8_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa861a80_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa861d6b_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "Token:" << _Src._field_Token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa862476_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa8629b5_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "Declarative:" << _Src._field_Declarative << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa8638a6_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa863eb1_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aa8649ea_IsSelf(_1aa864687_ParamDecl* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}



inline jule::Bool _1aa864c5e_IsRef(_1aa864687_ParamDecl* _self_) {
	return ((!((*(_self_))._field_Ident.empty())) && ((*(_self_))._field_Ident[0LL] == '&'));;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa864687_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aa865d09_IsAnon(_1aa8659a7_FnDecl* _self_) {
	return (*(_self_))._field_Ident.equal("<anonymous>", 11);;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa8659a7_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa866986_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa866d3d_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aa867800_IsInf(_1aa86749d_Iter* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa86749d_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aa8680c5_IsWhileNext(_1aa867c73_WhileKind* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa867c73_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "NextToken:" << _Src._field_NextToken;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa868614_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "InToken:" << _Src._field_InToken << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa8689bb_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa868d73_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa8692e6_If _Src) {
	_Stream << "If{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa86969d_Else _Src) {
	_Stream << "Else{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa869b21_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Head:" << _Src._field_Head << ", ";
	_Stream << "Tail:" << _Src._field_Tail << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa86a2e7_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa86a76a_Case _Src) {
	_Stream << "Case{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa86ae41_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa86b6d3_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Full:" << _Src._field_Full << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Std:" << _Src._field_Std;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aa86bea8_AutoExpr(_1aa86bb56_EnumItemDecl* _self_) {
	return ((*(_self_))._field_Expr == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa86bb56_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aa86cc12_DefaultTyped(_1aa86c67e_EnumDecl* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa86c67e_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa86d185_TypeEnumItemDecl _Src) {
	_Stream << "TypeEnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa86d790_TypeEnumDecl _Src) {
	_Stream << "TypeEnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa86d98d_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa86e241_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa86e917_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Inherits:" << _Src._field_Inherits << ", ";
	_Stream << "Methods:" << _Src._field_Methods;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aa870385_IsTraitImpl(_1aa870022_Impl* _self_) {
	return ((*(_self_))._field_Base != nullptr);;
}



inline jule::Bool _1aa8705e9_IsStructImpl(_1aa870022_Impl* _self_) {
	return ((*(_self_))._field_Base == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa870022_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aa8763e1_FieldIns> _1aa8718a3_instance(jule::Ptr<_1aa8714eb_Field> _self_) {
	return jule::new_ptr<_1aa8763e1_FieldIns>(_1aa8763e1_FieldIns{._field_Decl=_self_, });;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa8714eb_Field _Src) {
	_Stream << "Field{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa8732ab_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "Eq:" << _Src._field_Eq << ", ";
	_Stream << "Gt:" << _Src._field_Gt << ", ";
	_Stream << "GtEq:" << _Src._field_GtEq << ", ";
	_Stream << "Lt:" << _Src._field_Lt << ", ";
	_Stream << "LtEq:" << _Src._field_LtEq << ", ";
	_Stream << "Shl:" << _Src._field_Shl << ", ";
	_Stream << "Shr:" << _Src._field_Shr << ", ";
	_Stream << "Add:" << _Src._field_Add << ", ";
	_Stream << "Sub:" << _Src._field_Sub << ", ";
	_Stream << "Div:" << _Src._field_Div << ", ";
	_Stream << "Mul:" << _Src._field_Mul << ", ";
	_Stream << "Mod:" << _Src._field_Mod << ", ";
	_Stream << "BitAnd:" << _Src._field_BitAnd << ", ";
	_Stream << "BitOr:" << _Src._field_BitOr << ", ";
	_Stream << "BitXor:" << _Src._field_BitXor << ", ";
	_Stream << "Neg:" << _Src._field_Neg << ", ";
	_Stream << "Pos:" << _Src._field_Pos << ", ";
	_Stream << "BitNot:" << _Src._field_BitNot << ", ";
	_Stream << "AddAssign:" << _Src._field_AddAssign << ", ";
	_Stream << "SubAssign:" << _Src._field_SubAssign << ", ";
	_Stream << "DivAssign:" << _Src._field_DivAssign << ", ";
	_Stream << "MulAssign:" << _Src._field_MulAssign << ", ";
	_Stream << "ModAssign:" << _Src._field_ModAssign << ", ";
	_Stream << "ShlAssign:" << _Src._field_ShlAssign << ", ";
	_Stream << "ShrAssign:" << _Src._field_ShrAssign << ", ";
	_Stream << "BitOrAssign:" << _Src._field_BitOrAssign << ", ";
	_Stream << "BitAndAssign:" << _Src._field_BitAndAssign << ", ";
	_Stream << "BitXorAssign:" << _Src._field_BitXorAssign;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aa876dd6_StructIns> _1aa874532_instance(jule::Ptr<_1aa8740c0_Struct> _self_) {
	if (((_self_.get()._field_Generics.len() == 0LL) && (_self_.get()._field_Instances.len() == 1LL))) {
		return _self_.get()._field_Instances[0LL];;
	};
	jule::Ptr<_1aa876dd6_StructIns> _9917_ins = jule::new_ptr<_1aa876dd6_StructIns>(_1aa876dd6_StructIns{._field_Decl=_self_, ._field_Fields=jule::Slice<jule::Ptr<_1aa8763e1_FieldIns>>::alloc(0LL, _self_.get()._field_Fields.len()), ._field_Statics=jule::Slice<jule::Ptr<_1aa908c59_Var>>::alloc(0LL, _self_.get()._field_Statics.len()), ._field_Refers=static__1aa890284_new(), });;
	{
		auto expr = &(_self_.get()._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad0a4ed5:;
		if (it != expr_end) {
			jule::Ptr<_1aa908c59_Var> _10621_s = *it;
			{
				_9917_ins.get()._field_Statics = jule::alloc_for_append(_9917_ins.get()._field_Statics,1);_9917_ins.get()._field_Statics.__push(jule::new_ptr<_1aa908c59_Var>((*(_10621_s))));;
			}
			_iter_next_1ad0a4ed5:;
			++it;
			goto _iter_begin_1ad0a4ed5;
		}
		_iter_end_1ad0a4ed5:;
	};
	{
		auto expr = &(_self_.get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad0a6448:;
		if (it != expr_end) {
			jule::Ptr<_1aa8714eb_Field> _11021_f = *it;
			{
				_9917_ins.get()._field_Fields = jule::alloc_for_append(_9917_ins.get()._field_Fields,1);_9917_ins.get()._field_Fields.__push(_1aa8718a3_instance(_11021_f));;
				if ((((!(_11021_f.get()._field_Mutable)) && (_11021_f.get()._field_Kind.get()._field_Kind != nullptr)) && _1aa985049_Mutable(_11021_f.get()._field_Kind.get()._field_Kind.ptr()))) {
					_9917_ins.get()._field_Mutable=true;
				};
			}
			_iter_next_1ad0a6448:;
			++it;
			goto _iter_begin_1ad0a6448;
		}
		_iter_end_1ad0a6448:;
	};
	if ((_self_.get()._field_Generics.len() == 0LL)) {
		_9917_ins.get()._field_Methods=_self_.get()._field_Methods;
	} else {
		_9917_ins.get()._field_Methods=jule::Slice<jule::Ptr<_1aa889426_Fn>>::alloc(0LL, _self_.get()._field_Methods.len());
		{
			auto expr = &(_self_.get()._field_Methods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad0a87d0:;
			if (it != expr_end) {
				jule::Ptr<_1aa889426_Fn> _12125_f = *it;
				{
					jule::Ptr<_1aa889426_Fn> _12225_fins = jule::new_ptr<_1aa889426_Fn>((*(_12125_f)));;
					_12225_fins.get()._field_Instances=nullptr;
					_9917_ins.get()._field_Methods = jule::alloc_for_append(_9917_ins.get()._field_Methods,1);_9917_ins.get()._field_Methods.__push(_12225_fins);;
				}
				_iter_next_1ad0a87d0:;
				++it;
				goto _iter_begin_1ad0a87d0;
			}
			_iter_end_1ad0a87d0:;
		};
	};
	return _9917_ins;;
}



inline jule::Ptr<_1aa876dd6_StructIns> _1aa87480c_appendInstance(_1aa8740c0_Struct* _self_, jule::Ptr<_1aa876dd6_StructIns>* _13338_ins) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad0aab34:;
		if (it != expr_end) {
			jule::Ptr<_1aa876dd6_StructIns> _13921_ains = *it;
			{
				if (_1aa8779ca_Same(_13921_ains.ptr(), (*(_13338_ins)))) {
					return _13921_ains;;
				};
			}
			_iter_next_1ad0aab34:;
			++it;
			goto _iter_begin_1ad0aab34;
		}
		_iter_end_1ad0aab34:;
	};
	(*(_self_))._field_Instances = jule::alloc_for_append((*(_self_))._field_Instances,1);(*(_self_))._field_Instances.__push((*(_13338_ins)));;
	return nullptr;;
}



inline jule::Ptr<_1aa889426_Fn> _1aa874bb4_FindMethod(_1aa8740c0_Struct* _self_, jule::Str _15129_ident, jule::Bool _15141_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad0ac042:;
		if (it != expr_end) {
			jule::Ptr<_1aa889426_Fn> _15221_f = *it;
			{
				if (((_15221_f.get()._field_Statically == _15141_statically) && (_15221_f.get()._field_Ident == _15129_ident))) {
					return _15221_f;;
				};
			}
			_iter_next_1ad0ac042:;
			++it;
			goto _iter_begin_1ad0ac042;
		}
		_iter_end_1ad0ac042:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aa908c59_Var> _1aa874ec2_FindStatic(_1aa8740c0_Struct* _self_, jule::Str _16229_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad0ad20d:;
		if (it != expr_end) {
			jule::Ptr<_1aa908c59_Var> _16321_v = *it;
			{
				if ((_16321_v.get()._field_Ident == _16229_ident)) {
					return _16321_v;;
				};
			}
			_iter_next_1ad0ad20d:;
			++it;
			goto _iter_begin_1ad0ad20d;
		}
		_iter_end_1ad0ad20d:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aa8714eb_Field> _1aa8752d0_FindField(_1aa8740c0_Struct* _self_, jule::Str _17328_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad0ae0dd:;
		if (it != expr_end) {
			jule::Ptr<_1aa8714eb_Field> _17421_f = *it;
			{
				if ((_17421_f.get()._field_Ident == _17328_ident)) {
					return _17421_f;;
				};
			}
			_iter_next_1ad0ae0dd:;
			++it;
			goto _iter_begin_1ad0ae0dd;
		}
		_iter_end_1ad0ae0dd:;
	};
	return nullptr;;
}



inline jule::Bool _1aa8755dd_IsImplements(_1aa8740c0_Struct* _self_, jule::Ptr<_1aa89b647_Trait> _18327_t) {
	{
		auto expr = &((*(_self_))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad0aeebd:;
		if (it != expr_end) {
			jule::Ptr<_1aa89b647_Trait> *_18416_it = it;
			{
				if ((_18327_t == (*(_18416_it)))) {
					return true;;
				};
			}
			_iter_next_1ad0aeebd:;
			++it;
			goto _iter_begin_1ad0aeebd;
		}
		_iter_end_1ad0aeebd:;
	};
	return false;;
}



inline jule::Bool _1aa8758eb_IsDerives(_1aa8740c0_Struct* _self_, jule::Str _19324_ident) {
	{
		auto expr = &((*(_self_))._field_Directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad0b052e:;
		if (it != expr_end) {
			jule::Ptr<_1aa820a94_Directive> *_19416_d = it;
			{
				if ((*(_19416_d)).get()._field_Tag.get()._field_Kind.equal("derive", 6)) {
					if ((((*(_19416_d)).get()._field_Args.len() == 1LL) && ((*(_19416_d)).get()._field_Args[0LL].get()._field_Kind == _19324_ident))) {
						return true;;
					};
				};
			}
			_iter_next_1ad0b052e:;
			++it;
			goto _iter_begin_1ad0b052e;
		}
		_iter_end_1ad0b052e:;
	};
	return false;;
}



inline jule::Bool _1aa875c09_IsUses(_1aa8740c0_Struct* _self_, jule::Ptr<_1aa8740c0_Struct> _20521_s) {
	{
		auto expr = &((*(_self_))._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad0b2bb3:;
		if (it != expr_end) {
			jule::Ptr<_1aa8740c0_Struct> *_20616_u = it;
			{
				while ((_20521_s == (*(_20616_u)))) {
					{
						return true;;
					}
				_iter_next_1ad0b3411:;
				}
				_iter_end_1ad0b3411:;;
			}
			_iter_next_1ad0b2bb3:;
			++it;
			goto _iter_begin_1ad0b2bb3;
		}
		_iter_end_1ad0b2bb3:;
	};
	return false;;
}



inline jule::Bool _1aa875e6d_HasRefAccessible(_1aa8740c0_Struct* _self_) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad0b35cb:;
		if (it != expr_end) {
			jule::Ptr<_1aa889426_Fn> *_21616_m = it;
			{
				if ((((*(_21616_m)).get()._field_Params.len() > 0LL) && _1aa88847a_IsRef((*(_21616_m)).get()._field_Params[0LL].ptr()))) {
					return true;;
				};
			}
			_iter_next_1ad0b35cb:;
			++it;
			goto _iter_begin_1ad0b35cb;
		}
		_iter_end_1ad0b35cb:;
	};
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa8740c0_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Depends:" << _Src._field_Depends << ", ";
	_Stream << "Uses:" << _Src._field_Uses << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Implements:" << _Src._field_Implements << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa8763e1_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa87acdb_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Model:" << _Src._field_Model;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa87b2a3_BinopExprModel _Src) {
	_Stream << "BinopExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa87b65a_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa87ba56_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa87be0d_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "Strct:" << _Src._field_Strct << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa87c21b_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "Lit:" << _Src._field_Lit;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa87c76b_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa87d11d_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Except:" << _Src._field_Except << ", ";
	_Stream << "Assigned:" << _Src._field_Assigned;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa87d4c5_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "ElemKind:" << _Src._field_ElemKind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa87d948_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa87dd00_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Global:" << _Src._field_Global;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa87e1a7_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa87e62a_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "KeyKind:" << _Src._field_KeyKind << ", ";
	_Stream << "ValKind:" << _Src._field_ValKind << ", ";
	_Stream << "Entries:" << _Src._field_Entries;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa87eb69_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa8801a8_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Trt:" << _Src._field_Trt;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa88098e_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Owner:" << _Src._field_Owner;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa880d35_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "Structure:" << _Src._field_Structure << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa8811ed_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa8814d9_CommonIdentExprModel _Src) {
	_Stream << "CommonIdentExprModel{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa881a4a_CommonSubIdentExprModel _Src) {
	_Stream << "CommonSubIdentExprModel{";
	_Stream << "ExprKind:" << _Src._field_ExprKind << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa881d47_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "Datas:" << _Src._field_Datas;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa882221_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa88260b_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa88292a_BuiltinCloneCallExprModel _Src) {
	_Stream << "BuiltinCloneCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa882d15_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Init:" << _Src._field_Init;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa883200_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa8836a6_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Log:" << _Src._field_Log;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa883b5c_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Len:" << _Src._field_Len << ", ";
	_Stream << "Cap:" << _Src._field_Cap;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa884047_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elements:" << _Src._field_Elements;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa884366_BuiltinLenCallExprModel _Src) {
	_Stream << "BuiltinLenCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa884685_BuiltinCapCallExprModel _Src) {
	_Stream << "BuiltinCapCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa884d39_BuiltinDeleteCallExprModel _Src) {
	_Stream << "BuiltinDeleteCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Key:" << _Src._field_Key;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa88519c_BuiltinCopyCallExprModel _Src) {
	_Stream << "BuiltinCopyCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Src:" << _Src._field_Src;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa885587_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Err:" << _Src._field_Err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa885884_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa885b70_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa885e5b_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "Code:" << _Src._field_Code;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa886269_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa886632_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "Code:" << _Src._field_Code << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa88691d_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa8873d0_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aa88b208_ParamIns> _1aa887ea2_instance(jule::Ptr<_1aa887ad9_Param> _self_) {
	return jule::new_ptr<_1aa88b208_ParamIns>(_1aa88b208_ParamIns{._field_Decl=_self_, });;
}



inline jule::Bool _1aa888216_IsSelf(_1aa887ad9_Param* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}



inline jule::Bool _1aa88847a_IsRef(_1aa887ad9_Param* _self_) {
	return ((!((*(_self_))._field_Ident.empty())) && ((*(_self_))._field_Ident[0LL] == '&'));;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa887ad9_Param _Src) {
	_Stream << "Param{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aa889888_IsVoid(_1aa889426_Fn* _self_) {
	return ((*(_self_))._field_Result == nullptr);;
}



inline jule::Bool _1aa889aec_IsMethod(_1aa889426_Fn* _self_) {
	return ((*(_self_))._field_Owner != nullptr);;
}



inline jule::Bool _1aa889d61_IsEntryPoint(_1aa889426_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("main", 4);;
}



inline jule::Bool _1aa88a0c5_IsInit(_1aa889426_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("init", 4);;
}



inline jule::Bool _1aa88a339_IsAnon(_1aa889426_Fn* _self_) {
	return _1db947849_IsAnonIdent((*(_self_))._field_Ident);;
}



inline jule::Bool _1aa88a59d_AnyVar(_1aa889426_Fn* _self_) {
	return (((*(_self_))._field_Result != nullptr) && ((*(_self_))._field_Result.get()._field_Idents.len() > 0LL));;
}



inline jule::Ptr<_1aa88c0c7_FnIns> _1aa88a812_instanceForce(jule::Ptr<_1aa889426_Fn> _self_) {
	jule::Ptr<_1aa88c0c7_FnIns> _10017_ins = jule::new_ptr<_1aa88c0c7_FnIns>(_1aa88c0c7_FnIns{._field_Decl=_self_, ._field_Scope=jule::new_ptr<_1aa8b25a3_Scope>(), ._field_Refers=static__1aa890284_new(), });;
	_10017_ins.get()._field_Params=jule::Slice<jule::Ptr<_1aa88b208_ParamIns>>::alloc(0LL, _self_.get()._field_Params.len());
	{
		auto expr = &(_self_.get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad0c7348:;
		if (it != expr_end) {
			jule::Ptr<_1aa887ad9_Param> _10721_p = *it;
			{
				_10017_ins.get()._field_Params = jule::alloc_for_append(_10017_ins.get()._field_Params,1);_10017_ins.get()._field_Params.__push(_1aa887ea2_instance(_10721_p));;
			}
			_iter_next_1ad0c7348:;
			++it;
			goto _iter_begin_1ad0c7348;
		}
		_iter_end_1ad0c7348:;
	};
	if ((_10017_ins.get()._field_Decl.get()._field_Result != nullptr)) {
		_10017_ins.get()._field_Result=_10017_ins.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Kind;
	};
	return _10017_ins;;
}



inline jule::Ptr<_1aa88c0c7_FnIns> _1aa88aa76_instance(jule::Ptr<_1aa889426_Fn> _self_) {
	if (((_self_.get()._field_Generics.len() == 0LL) && (_self_.get()._field_Instances.len() == 1LL))) {
		return _self_.get()._field_Instances[0LL];;
	};
	return _1aa88a812_instanceForce(_self_);;
}



inline jule::Ptr<_1aa88c0c7_FnIns> _1aa88ad51_appendInstance(_1aa889426_Fn* _self_, jule::Ptr<_1aa88c0c7_FnIns>* _12838_ins) {
	if (((*(_self_))._field_Generics.len() == 0LL)) {
		if (((*(_self_))._field_Instances.len() == 1LL)) {
			return (*(_self_))._field_Instances[0LL];;
		};
		(*(_self_))._field_Instances = jule::alloc_for_append((*(_self_))._field_Instances,1);(*(_self_))._field_Instances.__push((*(_12838_ins)));;
		return nullptr;;
	};
	if (((*(_self_))._field_Instances.len() == 0LL)) {
		(*(_self_))._field_Instances = jule::alloc_for_append((*(_self_))._field_Instances,1);(*(_self_))._field_Instances.__push((*(_12838_ins)));;
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad0cb12c:;
		if (it != expr_end) {
			jule::Ptr<_1aa88c0c7_FnIns> _14421_ains = *it;
			{
				if (_1aa88d9d0_Same(_14421_ains.ptr(), (*(_12838_ins)))) {
					return _14421_ains;;
				};
			}
			_iter_next_1ad0cb12c:;
			++it;
			goto _iter_begin_1ad0cb12c;
		}
		_iter_end_1ad0cb12c:;
	};
	(*(_self_))._field_Instances = jule::alloc_for_append((*(_self_))._field_Instances,1);(*(_self_))._field_Instances.__push((*(_12838_ins)));;
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa889426_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params << ", ";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1aa88b5d2_Str(_1aa88b208_ParamIns* _self_) {
	jule::Str _16617_s = jule::Str();;
	if ((*(_self_))._field_Decl.get()._field_Mutable) {
		(_16617_s).append("mut ", 4);
	};
	if ((*(_self_))._field_Decl.get()._field_Reference) {
		(_16617_s).append("&_:", 3);
	};
	if (_1aa888216_IsSelf((*(_self_))._field_Decl.ptr())) {
		if (_1aa88847a_IsRef((*(_self_))._field_Decl.ptr())) {
			(_16617_s).append("&", 1);
		};
		(_16617_s).append("self", 4);
		return _16617_s;;
	};
	if ((*(_self_))._field_Decl.get()._field_Variadic) {
		(_16617_s).append("...", 3);
	};
	if (((*(_self_))._field_Kind != nullptr)) {
		_16617_s+=_1aa983c6d_Str((*(_self_))._field_Kind.ptr());
	};
	return _16617_s;;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa88b208_ParamIns _Src) {
	_Stream << _1aa88b5d2_Str(&_Src);
	return _Stream;
}



inline jule::Str _1aa88c407_Str(_1aa88c0c7_FnIns* _self_) {
	;
	return _1aa88dcdd_GetKindStr(_self_, false);;
}



inline jule::Bool _1aa88c715_Equal(jule::Ptr<_1aa88c0c7_FnIns> _self_, jule::Ptr<_1aa983872_TypeKind> _21721_other) {
	jule::Ptr<_1aa88c0c7_FnIns> _21813_f = _1aa986e4c_Fn(_21721_other.ptr());;
	if ((_21813_f == nullptr)) {
		return false;;
	};
	return _1aa88cb77_EqualFn(_self_, &(_21813_f));;
}



inline jule::Bool _1aa88cb77_EqualFn(jule::Ptr<_1aa88c0c7_FnIns> _self_, jule::Ptr<_1aa88c0c7_FnIns>* _22824_f) {
	if ((_self_.get()._field_Decl.get()._field_Exceptional != (*(_22824_f)).get()._field_Decl.get()._field_Exceptional)) {
		return false;;
	};
	if ((_self_.get()._field_Decl.get()._field_Unsafety != (*(_22824_f)).get()._field_Decl.get()._field_Unsafety)) {
		return false;;
	};
	if ((_1aa889888_IsVoid(_self_.get()._field_Decl.ptr()) != _1aa889888_IsVoid((*(_22824_f)).get()._field_Decl.ptr()))) {
		return false;;
	};
	jule::Fn<jule::Bool(jule::Ptr<_1aa88b208_ParamIns>,jule::Ptr<_1aa88b208_ParamIns>)> _23813_checkParams = jule::Fn<jule::Bool(jule::Ptr<_1aa88b208_ParamIns>,jule::Ptr<_1aa88b208_ParamIns>)>([=](jule::Ptr<_1aa88b208_ParamIns> _23830_p1, jule::Ptr<_1aa88b208_ParamIns> _23845_p2) mutable -> jule::Bool {
		if ((_23830_p1.get()._field_Decl.get()._field_Mutable != _23845_p2.get()._field_Decl.get()._field_Mutable)) {
			return false;;
		};
		if (_1aa888216_IsSelf(_23830_p1.get()._field_Decl.ptr())) {
			if ((!(_1aa888216_IsSelf(_23845_p2.get()._field_Decl.ptr())))) {
				return false;;
			};
			if ((_1aa88847a_IsRef(_23830_p1.get()._field_Decl.ptr()) != _1aa88847a_IsRef(_23845_p2.get()._field_Decl.ptr()))) {
				return false;;
			};
			return true;;
		};
		if ((_23830_p1.get()._field_Decl.get()._field_Reference != _23845_p2.get()._field_Decl.get()._field_Reference)) {
			return false;;
		};
		if ((_23830_p1.get()._field_Decl.get()._field_Variadic != _23845_p2.get()._field_Decl.get()._field_Variadic)) {
			return false;;
		};
		return _1aa98407b_Equal(_23830_p1.get()._field_Kind, _23845_p2.get()._field_Kind);;
	});;
	if (((*(_22824_f)).get()._field_Params.len() != _self_.get()._field_Params.len())) {
		return false;;
	};
	jule::I64 _27017_i = 0LL;;
	for (; (_27017_i < _self_.get()._field_Params.len()); (_27017_i)++) {
		{
			if ((!(_23813_checkParams(_self_.get()._field_Params[_27017_i], (*(_22824_f)).get()._field_Params[_27017_i])))) {
				return false;;
			};
		}
	_iter_next_1ad0d93b0:;
	}
	_iter_end_1ad0d93b0:;;
	if ((!(_1aa889888_IsVoid(_self_.get()._field_Decl.ptr())))) {
		if ((!(_1aa98407b_Equal(_self_.get()._field_Result, (*(_22824_f)).get()._field_Result)))) {
			return false;;
		};
	};
	return true;;
}



inline jule::Bool _1aa88ce85_equalTrait(jule::Ptr<_1aa88c0c7_FnIns> _self_, jule::Ptr<_1aa88c0c7_FnIns>* _28727_other) {
	if ((_self_.get()._field_Decl.get()._field_Public != (*(_28727_other)).get()._field_Decl.get()._field_Public)) {
		return false;;
	};
	if ((_self_.get()._field_Decl.get()._field_Ident != (*(_28727_other)).get()._field_Decl.get()._field_Ident)) {
		return false;;
	};
	if ((!(_1aa88cb77_EqualFn(_self_, _28727_other)))) {
		return false;;
	};
	if ((_self_.get()._field_Decl.get()._field_Generics.len() != (*(_28727_other)).get()._field_Decl.get()._field_Generics.len())) {
		return false;;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1aa983872_TypeKind>> _1aa88d1e9_Types(_1aa88c0c7_FnIns* _self_) {
	{
		
		if (((*(_self_))._field_Result == nullptr)) {
			_case_begin_1ad0dd617:;
			{
				return nullptr;;
			}
		}
		else if ((_1aa9878ed_Tup((*(_self_))._field_Result.ptr()) == nullptr)) {
			_case_begin_1ad0dd67d:;
			{
				return jule::Slice<jule::Ptr<_1aa983872_TypeKind>>::make({(*(_self_))._field_Result});;
			}
		}
		else {
			_case_begin_1ad0dd5a1:;
			{
				return _1aa9878ed_Tup((*(_self_))._field_Result.ptr()).get()._field_Types;;
			}
		}
		_match_end_1ad0dd529:;
	};
}



inline jule::Bool _1aa88d45d_IsBuiltin(_1aa88c0c7_FnIns* _self_) {
	return ((*(_self_))._field_caller != nullptr);;
}



inline jule::Bool _1aa88d6c2_IsAnon(_1aa88c0c7_FnIns* _self_) {
	return ((*(_self_))._field_Anon || (((*(_self_))._field_Decl != nullptr) && _1aa88a339_IsAnon((*(_self_))._field_Decl.ptr())));;
}



inline jule::Bool _1aa88d9d0_Same(_1aa88c0c7_FnIns* _self_, jule::Ptr<_1aa88c0c7_FnIns> _33019_f) {
	if ((((*(_self_))._field_Decl != _33019_f.get()._field_Decl) || (_33019_f.get()._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad0e1dbd:;
		if (it != expr_end) {
			jule::I64 _33513_i = it - expr->begin();
			jule::Ptr<_1aa9820e0_InsGeneric> *_33516_g = it;
			{
				if ((!(_1aa98407b_Equal((*(_33516_g)).get()._field_Kind, _33019_f.get()._field_Generics[_33513_i].get()._field_Kind)))) {
					return false;;
				};
			}
			_iter_next_1ad0e1dbd:;
			++it;
			_33513_i++;
			goto _iter_begin_1ad0e1dbd;
		}
		_iter_end_1ad0e1dbd:;
	};
	return true;;
}



inline jule::Str _1aa88dcdd_GetKindStr(_1aa88c0c7_FnIns* _self_, jule::Bool _34625_ident) {
	jule::Str _34717_s = jule::Str();;
	if ((*(_self_))._field_Decl.get()._field_Unsafety) {
		(_34717_s).append("unsafe ", 7);
	};
	(_34717_s).append("fn", 2);
	if ((_34625_ident && ((*(_self_))._field_Decl != nullptr))) {
		_34717_s+=(jule::Str(" ", 1) + (*(_self_))._field_Decl.get()._field_Ident);
	};
	(_34717_s).append("(", 1);
	jule::I64 _36013_n = (*(_self_))._field_Params.len();;
	if ((_36013_n > 0LL)) {
		{
			auto expr = &((*(_self_))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad0e5b4c:;
			if (it != expr_end) {
				jule::Ptr<_1aa88b208_ParamIns> *_36220_p = it;
				{
					_34717_s+=_1aa88b5d2_Str((*(_36220_p)).ptr());
					(_34717_s).append(",", 1);
				}
				_iter_next_1ad0e5b4c:;
				++it;
				goto _iter_begin_1ad0e5b4c;
			}
			_iter_end_1ad0e5b4c:;
		};
		(_34717_s).mut_slice(0LL, (_34717_s.len() - 1LL));;
	};
	(_34717_s).append(")", 1);
	if ((*(_self_))._field_Decl.get()._field_Exceptional) {
		(_34717_s).append("!", 1);
	};
	if ((!(_1aa889888_IsVoid((*(_self_))._field_Decl.ptr())))) {
		(_34717_s).append(":", 1);
		_34717_s+=_1aa983c6d_Str((*(_self_))._field_Result.ptr());
	};
	return _34717_s;;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa88c0c7_FnIns _Src) {
	_Stream << _1aa88c407_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1aa890031_ReferenceStack> static__1aa890284_new(void) {
	return jule::new_ptr<_1aa890031_ReferenceStack>(_1aa890031_ReferenceStack{._field_buffer=jule::Slice<jule::Any>::alloc(0LL, 10LL)});;
}



inline jule::I64 _1aa890619_Len(_1aa890031_ReferenceStack* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_buffer.len());;
}



inline jule::Any _1aa890927_At(_1aa890031_ReferenceStack* _self_, jule::I64 _6821_i) {
	return (*(_self_))._field_buffer[_6821_i];;
}



inline void _1aa890b9c_Push(_1aa890031_ReferenceStack* _self_, jule::Any _7327_ref) {
	(*(_self_))._field_buffer = jule::alloc_for_append((*(_self_))._field_buffer,1);(*(_self_))._field_buffer.__push(_7327_ref);;
}



inline jule::Bool _1ad7b90ab_Exist(_1aa890031_ReferenceStack* _self_, jule::Ptr<_1aa88c0c7_FnIns> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad7ba3ba:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type7_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1ad7ba3ba:;
			++it;
			goto _iter_begin_1ad7ba3ba;
		}
		_iter_end_1ad7ba3ba:;
	};
	return false;;
}

inline jule::Bool _1ad7cd5cb_Exist(_1aa890031_ReferenceStack* _self_, jule::Ptr<_1aa908c59_Var> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad7ce896:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type8_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1ad7ce896:;
			++it;
			goto _iter_begin_1ad7ce896;
		}
		_iter_end_1ad7ce896:;
	};
	return false;;
}

inline jule::Bool _1ad67014e_Exist(_1aa890031_ReferenceStack* _self_, jule::Ptr<_1aa876dd6_StructIns> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad6714a2:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type9_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1ad6714a2:;
			++it;
			goto _iter_begin_1ad6714a2;
		}
		_iter_end_1ad6714a2:;
	};
	return false;;
}

inline jule::Bool _1ada29ecb_Exist(_1aa890031_ReferenceStack* _self_, jule::Ptr<_1aa89b647_Trait> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ada2b20d:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type10_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1ada2b20d:;
			++it;
			goto _iter_begin_1ada2b20d;
		}
		_iter_end_1ada2b20d:;
	};
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa890031_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa891362_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Text:" << _Src._field_Text;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aa895aa3_symbolBuilder> _1aa896059_getRoot(jule::Ptr<_1aa895aa3_symbolBuilder> _self_) {
	jule::Ptr<_1aa895aa3_symbolBuilder> _32517_root = _self_;;
	while ((_32517_root.get()._field_owner != nullptr)) {
		{
			_32517_root=_32517_root.get()._field_owner;
		}
	_iter_next_1ad10e4b2:;
	}
	_iter_end_1ad10e4b2:;;
	return _32517_root;;
}



inline void _1aa896422_pushErr(_1aa895aa3_symbolBuilder* _self_, jule::Ptr<_1db944d0d_Token>* _33227_token, jule::Str _33242_fmt, jule::Slice<jule::Any> _33255_args) {
	(*(_self_))._field_errors = jule::alloc_for_append((*(_self_))._field_errors,1);(*(_self_))._field_errors.__push(_1aa8d7111_compilerErr(_33227_token, true, _33242_fmt, _33255_args));;
}



inline void _1aa8967da_pushErrText(_1aa895aa3_symbolBuilder* _self_, jule::Ptr<_1db944d0d_Token>* _33631_token, jule::Str _33646_fmt, jule::Slice<jule::Any> _33659_args) {
	(*(_self_))._field_errors = jule::alloc_for_append((*(_self_))._field_errors,1);(*(_self_))._field_errors.__push(_1aa8d7111_compilerErr(_33631_token, false, _33646_fmt, _33659_args));;
}



inline void _1aa896b09_pushSuggestion(_1aa895aa3_symbolBuilder* _self_, jule::Str _34133_fmt, jule::Slice<jule::Any> _34146_args) {
	{
		_1aa8d8596_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _34133_fmt, _34146_args);
	};
}



inline jule::Bool _1aa896eb1_checkCppUseDeclPath(_1aa895aa3_symbolBuilder* _self_, jule::Ptr<_1aa86b6d3_UseDecl>* _34539_decl, jule::Str _34555_path) {
	jule::Bool __jule_func_result = false;
	jule::Str _34613_ext = _1d9d0d382_Ext(_34555_path);;
	if (((!(_1d9d86240_IsValidHeaderExt(_34613_ext))) && (!(_1d9d864d7_IsValidCppExt(_34613_ext))))) {
		_1aa896422_pushErr(_self_, &((*(_34539_decl)).get()._field_Token), jule::Str("invalid C++ extension: @", 24), jule::Slice<jule::Any>::make({jule::Any(_34613_ext, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_203d7eb15_Status> _35313_info = ({
		auto except = static__1d9d101b9_Of(_34555_path);
		(except.ok()) ? (except.result) : ({{
			_1aa896422_pushErr(_self_, &((*(_34539_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_34539_decl)).get()._field_LinkPath, &__jule_any_type5)}));
			__jule_func_result = false;
			return __jule_func_result;;
		} jule::Ptr<_203d7eb15_Status>(nullptr);});
	});;
	if (_203d80022_IsDir(_35313_info.ptr())) {
		_1aa896422_pushErr(_self_, &((*(_34539_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_34539_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1aa8d101c_ImportInfo> _1aa89728b_buildCppHeaderImport(_1aa895aa3_symbolBuilder* _self_, jule::Ptr<_1aa86b6d3_UseDecl>* _36544_decl) {
	jule::Str _36617_path = (*(_36544_decl)).get()._field_LinkPath;;
	if ((!(_1d9d85e87_IsStdHeaderPath((*(_36544_decl)).get()._field_LinkPath)))) {
		_36617_path=_1d9d0d0da_Join(jule::Slice<jule::Str>::make({_1db94aa8e_Dir((*(_36544_decl)).get()._field_Token.get()._field_File.ptr()),(*(_36544_decl)).get()._field_LinkPath}));
		jule::Bool _37021_ok = _1aa896eb1_checkCppUseDeclPath(_self_, _36544_decl, _36617_path);;
		if ((!(_37021_ok))) {
			return nullptr;;
		};
		({
			__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1d9d0d629_Abs(_36617_path);
			_36617_path = __jule_assign_result.__jule_result_arg0;
			_37021_ok = __jule_assign_result.__jule_result_arg1;
		});
		if ((!(_37021_ok))) {
			_1aa896422_pushErr(_self_, &((*(_36544_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_36544_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		};
	};
	return jule::new_ptr<_1aa8d101c_ImportInfo>(_1aa8d101c_ImportInfo{._field_Token=(*(_36544_decl)).get()._field_Token, ._field_Path=_36617_path, ._field_LinkPath=(*(_36544_decl)).get()._field_LinkPath, ._field_Ident=jule::Str(), ._field_CppLinked=true, ._field_Std=false, ._field_Package=nullptr, });;
}



inline jule::Ptr<_1aa8d101c_ImportInfo> _1aa897599_buildStdImport(_1aa895aa3_symbolBuilder* _self_, jule::Ptr<_1aa86b6d3_UseDecl>* _39338_decl) {
	jule::Str _39417_path = (*(_39338_decl)).get()._field_LinkPath.slice(5LL);;
	_39417_path=_1d9d0969c_Replace(_39417_path, jule::Str("::", 2), static_cast<jule::Str>(92LL), -1LL);
	_39417_path=_1d9d0d0da_Join(jule::Slice<jule::Str>::make({_1d9e38479_PathStdlib,_39417_path}));
	jule::Bool _39720_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1d9d0d629_Abs(_39417_path);
		_39417_path = __jule_assign_result.__jule_result_arg0;
		_39720_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_39720_ok))) {
		_1aa896422_pushErr(_self_, &((*(_39338_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_39338_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_203d7eb15_Status> _40413_info = ({
		auto except = static__1d9d101b9_Of(_39417_path);
		(except.ok()) ? (except.result) : ({{
			_1aa896422_pushErr(_self_, &((*(_39338_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_39338_decl)).get()._field_LinkPath, &__jule_any_type5)}));
			return nullptr;;
		} jule::Ptr<_203d7eb15_Status>(nullptr);});
	});;
	if ((!(_203d80022_IsDir(_40413_info.ptr())))) {
		_1aa896422_pushErr(_self_, &((*(_39338_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_39338_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::I64 _41413_i = (_1d9d04e8e_FindLast((*(_39338_decl)).get()._field_LinkPath, jule::Str("::", 2)) + 1LL);;
	jule::Str _41513_ident = (*(_39338_decl)).get()._field_LinkPath.slice(_41413_i);;
	return jule::new_ptr<_1aa8d101c_ImportInfo>(_1aa8d101c_ImportInfo{._field_Token=(*(_39338_decl)).get()._field_Token, ._field_Path=_39417_path, ._field_LinkPath=(*(_39338_decl)).get()._field_LinkPath, ._field_Ident=_41513_ident, ._field_Alias=(*(_39338_decl)).get()._field_Alias, ._field_CppLinked=false, ._field_Std=true, ._field_ImportAll=(*(_39338_decl)).get()._field_Full, ._field_Package=jule::new_ptr<_1aa8d3b57_Package>(_1aa8d3b57_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_1aa8d101c_ImportInfo> _1aa8978a7_buildIdentImport(jule::Ptr<_1aa895aa3_symbolBuilder> _self_, jule::Ptr<_1aa86b6d3_UseDecl>* _43241_decl) {
	jule::Str _43313_modPath = _1aa8cd36b_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1aa8cc4d0_GetModPath(_self_.get()._field_importer);;
	if ((_43313_modPath.len() == 0LL)) {
		_1aa896422_pushErr(_self_.ptr(), &((*(_43241_decl)).get()._field_Token), jule::Str("no module file found in current directory or any parent directory", 65), jule::Slice<jule::Any>());
		_1aa896b09_pushSuggestion(_self_.ptr(), jule::Str("use \"julec mod init\" command to initialize module", 49), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _44017_path = (*(_43241_decl)).get()._field_LinkPath;;
	_44017_path=_1d9d0969c_Replace(_44017_path, jule::Str("::", 2), static_cast<jule::Str>(92LL), -1LL);
	_44017_path=_1d9d0d0da_Join(jule::Slice<jule::Str>::make({_43313_modPath,_44017_path}));
	jule::Bool _44420_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1d9d0d629_Abs(_44017_path);
		_44017_path = __jule_assign_result.__jule_result_arg0;
		_44420_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_44420_ok))) {
		_1aa896422_pushErr(_self_.ptr(), &((*(_43241_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_43241_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_203d7eb15_Status> _45113_info = ({
		auto except = static__1d9d101b9_Of(_44017_path);
		(except.ok()) ? (except.result) : ({{
			_1aa896422_pushErr(_self_.ptr(), &((*(_43241_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_43241_decl)).get()._field_LinkPath, &__jule_any_type5)}));
			return nullptr;;
		} jule::Ptr<_203d7eb15_Status>(nullptr);});
	});;
	if ((!(_203d80022_IsDir(_45113_info.ptr())))) {
		_1aa896422_pushErr(_self_.ptr(), &((*(_43241_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_43241_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::I64 _46113_i = (_1d9d04e8e_FindLast((*(_43241_decl)).get()._field_LinkPath, jule::Str("::", 2)) + 1LL);;
	jule::Str _46213_ident = (*(_43241_decl)).get()._field_LinkPath.slice(_46113_i);;
	return jule::new_ptr<_1aa8d101c_ImportInfo>(_1aa8d101c_ImportInfo{._field_Token=(*(_43241_decl)).get()._field_Token, ._field_Path=_44017_path, ._field_LinkPath=(*(_43241_decl)).get()._field_LinkPath, ._field_Ident=_46213_ident, ._field_Alias=(*(_43241_decl)).get()._field_Alias, ._field_CppLinked=false, ._field_Std=false, ._field_ImportAll=(*(_43241_decl)).get()._field_Full, ._field_Package=jule::new_ptr<_1aa8d3b57_Package>(_1aa8d3b57_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_1aa8d101c_ImportInfo> _1aa897bb5_buildImport(jule::Ptr<_1aa895aa3_symbolBuilder> _self_, jule::Ptr<_1aa86b6d3_UseDecl>* _47936_decl) {
	{
		
		if ((*(_47936_decl)).get()._field_CppLinked) {
			_case_begin_1ad1269d5:;
			{
				return _1aa89728b_buildCppHeaderImport(_self_.ptr(), _47936_decl);;
			}
		}
		else if ((*(_47936_decl)).get()._field_Std) {
			_case_begin_1ad126c27:;
			{
				return _1aa897599_buildStdImport(_self_.ptr(), _47936_decl);;
			}
		}
		else {
			_case_begin_1ad1262dc:;
			{
				return _1aa8978a7_buildIdentImport(_self_, _47936_decl);;
			}
		}
		_match_end_1ad126221:;
	};
}



inline jule::Bool _1aa897ec3_checkDuplicateUseDecl(_1aa895aa3_symbolBuilder* _self_, jule::Ptr<_1aa8d101c_ImportInfo>* _49041_pkg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1aa8d101c_ImportInfo> _49213_lpkg = _1aa94da29_SelectPackage((*(_self_))._field_table.ptr(), jule::Fn<jule::Bool(jule::Ptr<_1aa8d101c_ImportInfo>)>([=](jule::Ptr<_1aa8d101c_ImportInfo> _49248_spkg) mutable -> jule::Bool {
		return ((*(_49041_pkg)).get()._field_Path == _49248_spkg.get()._field_Path);;
	}));;
	if ((_49213_lpkg == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_1aa896422_pushErr(_self_, &((*(_49041_pkg)).get()._field_Token), jule::Str("use declaration duplication: @ is already used above", 52), jule::Slice<jule::Any>::make({jule::Any((*(_49041_pkg)).get()._field_LinkPath, &__jule_any_type5)}));
	_1aa896b09_pushSuggestion(_self_, jule::Str("remove this use declaration, already used, it is safe", 53), jule::Slice<jule::Any>());
	__jule_func_result = false;
	return __jule_func_result;;
}



inline void _1aa8982e2_implImportSelections(_1aa895aa3_symbolBuilder* _self_, jule::Ptr<_1aa8d101c_ImportInfo>* _50444_imp, jule::Ptr<_1aa86b6d3_UseDecl>* _50467_decl) {
	(*(_50444_imp)).get()._field_Selected=(*(_50467_decl)).get()._field_Selected;
	{
		auto expr = &((*(_50444_imp)).get()._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad12a5aa:;
		if (it != expr_end) {
			jule::Ptr<_1db944d0d_Token> _50616_item = *it;
			{
				{
					auto expr = &((*(_50444_imp)).get()._field_Selected);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad12ace7:;
					if (it != expr_end) {
						jule::Ptr<_1db944d0d_Token> _50720_citem = *it;
						{
							if ((_50616_item == _50720_citem)) {
								goto _iter_end_1ad12ace7;
							} else if ((_50616_item.get()._field_Kind == _50720_citem.get()._field_Kind)) {
								_1aa896422_pushErr(_self_, &(_50616_item), jule::Str("duplicated selection: @ is already selected", 43), jule::Slice<jule::Any>::make({jule::Any(_50616_item.get()._field_Kind, &__jule_any_type5)}));
								_1aa896b09_pushSuggestion(_self_, jule::Str("remove this use selection, already selected, it is safe", 55), jule::Slice<jule::Any>());
								goto _iter_end_1ad12ace7;
							};
						}
						_iter_next_1ad12ace7:;
						++it;
						goto _iter_begin_1ad12ace7;
					}
					_iter_end_1ad12ace7:;
				};
			}
			_iter_next_1ad12a5aa:;
			++it;
			goto _iter_begin_1ad12a5aa;
		}
		_iter_end_1ad12a5aa:;
	};
}



inline jule::Str _1aa898600_getAsLinkPath(jule::Ptr<_1aa895aa3_symbolBuilder> _self_, jule::Str _51937_path) {
	if (_1d9d036a7_HasPrefix(_51937_path, _1d9e38479_PathStdlib)) {
		(_51937_path).mut_slice(_1d9e38479_PathStdlib.len());;
		return (jule::Str("std", 3) + _1d9d0969c_Replace(_51937_path, static_cast<jule::Str>(92LL), jule::Str("::", 2), -1LL));;
	};
	jule::Str _52514_root;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1d9d0d629_Abs(_1aa8cd36b_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1aa8cc4d0_GetModPath(_self_.get()._field_importer));
		_52514_root = __jule_assign_result.__jule_result_arg0;
	});
	(_51937_path).mut_slice(_52514_root.len());;
	if ((_51937_path[0LL] == 92LLU)) {
		(_51937_path).mut_slice(1LL);;
	};
	return _1d9d0969c_Replace(_51937_path, static_cast<jule::Str>(92LL), jule::Str("::", 2), -1LL);;
}



inline void _1aa8989b8_pushCycleError(jule::Ptr<_1aa895aa3_symbolBuilder> _self_, jule::Ptr<_1aa895aa3_symbolBuilder>* _53335_sb, jule::Str _53355_path, jule::Str* _53371_message) {
	;
	jule::Str _53513_refersTo = _1d9d93d0d_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_1aa898600_getAsLinkPath(_self_, _1db94aa8e_Dir((*(_53335_sb)).get()._field_table.get()._field_File.ptr())), &__jule_any_type5),jule::Any(_1aa898600_getAsLinkPath(_self_, _53355_path), &__jule_any_type5)}));;
	((*(_53371_message))).buffer.insert(0, (((_1d9d02e37_Repeat(jule::Str(" ", 1), 7LL) + _53513_refersTo) + jule::Str("\n", 1))));;
}



inline void _1aa898d81_pushCrossCycleError(jule::Ptr<_1aa895aa3_symbolBuilder> _self_, jule::Ptr<_1aa895aa3_symbolBuilder>* _54240_target, jule::Ptr<_1aa8d101c_ImportInfo>* _54265_imp, jule::Ptr<_1db944d0d_Token>* _54284_errorToken) {
	jule::Str _54317_message = jule::Str();;
	_1aa8989b8_pushCycleError(_self_, &(_self_), (*(_54265_imp)).get()._field_Path, &(_54317_message));
	jule::Ptr<_1aa895aa3_symbolBuilder> _54717_owner = _self_.get()._field_owner;;
	jule::Ptr<_1aa895aa3_symbolBuilder> _54817_old = _self_;;
	while ((_54717_owner.get()._field_owner != nullptr)) {
		{
			_1aa8989b8_pushCycleError(_self_, &(_54817_old.get()._field_owner), _1db94aa8e_Dir(_54817_old.get()._field_table.get()._field_File.ptr()), &(_54317_message));
			if ((_54717_owner.get()._field_owner == (*(_54240_target)))) {
				_1aa8989b8_pushCycleError(_self_, _54240_target, _1db94aa8e_Dir(_54717_owner.get()._field_table.get()._field_File.ptr()), &(_54317_message));
				goto _iter_end_1ad13367e;
			};
			_54817_old=_54717_owner;
			_54717_owner=_54717_owner.get()._field_owner;
		}
	_iter_next_1ad13367e:;
	}
	_iter_end_1ad13367e:;;
	_1aa896422_pushErr(_self_.ptr(), _54284_errorToken, jule::Str("illegal cross cycle in use declarations;\n@", 42), jule::Slice<jule::Any>::make({jule::Any(_54317_message, &__jule_any_type5)}));
}



inline jule::Bool _1aa899238_checkImportCycles(jule::Ptr<_1aa895aa3_symbolBuilder> _self_, jule::Ptr<_1aa8d101c_ImportInfo> _56537_imp, jule::Ptr<_1aa86b6d3_UseDecl>* _56556_decl) {
	if ((_56537_imp.get()._field_Path == _1db94aa8e_Dir(_self_.get()._field_table.get()._field_File.ptr()))) {
		_1aa896422_pushErr(_self_.ptr(), &((*(_56556_decl)).get()._field_Token), jule::Str("illegal cycle in use declaration, package @ refers to itself", 60), jule::Slice<jule::Any>::make({jule::Any(_1aa898600_getAsLinkPath(_self_, _56537_imp.get()._field_Path), &__jule_any_type5)}));
		return false;;
	};
	if ((_self_.get()._field_owner == nullptr)) {
		return true;;
	};
	if ((_1db94aa8e_Dir(_self_.get()._field_owner.get()._field_table.get()._field_File.ptr()) == _56537_imp.get()._field_Path)) {
		_1aa898d81_pushCrossCycleError(_self_, &(_self_.get()._field_owner), &(_56537_imp), &((*(_56556_decl)).get()._field_Token));
		return false;;
	};
	jule::Ptr<_1aa895aa3_symbolBuilder> _58017_owner = _self_.get()._field_owner;;
	_julec_label_iter:;
	if ((_1db94aa8e_Dir(_58017_owner.get()._field_table.get()._field_File.ptr()) == _56537_imp.get()._field_Path)) {
		_1aa898d81_pushCrossCycleError(_self_, &(_58017_owner), &(_56537_imp), &((*(_56556_decl)).get()._field_Token));
		return false;;
	};
	if ((_58017_owner.get()._field_owner != nullptr)) {
		_58017_owner=_58017_owner.get()._field_owner;
		goto _julec_label_iter;
	};
	return true;;
}



inline void _1aa899623_checkPackageAccessibility(_1aa895aa3_symbolBuilder* _self_, jule::Ptr<_1aa86b6d3_UseDecl>* _60145_decl, jule::Str* _60162_mod, jule::Str* _60173_path) {
	if (((_1aa8cd36b_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1aa8cc4d0_GetModPath((*(_self_))._field_importer) != (*(_60162_mod))) && _1d9d08404_Contains((*(_60173_path)), jule::Str("internal", 8)))) {
		_1aa896422_pushErr(_self_, &((*(_60145_decl)).get()._field_Token), jule::Str("you cannot access to internal packages", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1aa8999db_importPackage(jule::Ptr<_1aa895aa3_symbolBuilder> _self_, jule::Ptr<_1aa8d101c_ImportInfo>* _60738_imp, jule::Ptr<_1aa86b6d3_UseDecl>* _60761_decl) {
	jule::Bool __jule_func_result = false;
	if ((*(_60738_imp)).get()._field_CppLinked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1aa8d101c_ImportInfo> _61217_port = _1aa8cd36b_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1aa8ccaeb_GetImport(_self_.get()._field_importer, (*(_60738_imp)).get()._field_Path);;
	if ((_61217_port != nullptr)) {
		(*(_60738_imp)).get()._field_Package=_61217_port.get()._field_Package;
		(*(_60738_imp)).get()._field_Duplicate=true;
		jule::Str _61717_oldMod = _1aa8cd36b_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1aa8cc4d0_GetModPath(_self_.get()._field_importer);;
		_1aa8cd36b_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1aa8cc28d_SetModPath(_self_.get()._field_importer, _1aa8cd36b_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1aa8cc7dd_ModById(_self_.get()._field_importer, (*(_60738_imp)).get()._field_ModId));
		_1aa899623_checkPackageAccessibility(_self_.ptr(), _60761_decl, &(_61717_oldMod), &(_61217_port.get()._field_Path));
		_1aa8cd36b_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1aa8cc28d_SetModPath(_self_.get()._field_importer, _61717_oldMod);
	} else {
		if ((!(_1aa899238_checkImportCycles(_self_, (*(_60738_imp)), _60761_decl)))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
		jule::Str _62617_oldMod = _1aa8cd36b_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1aa8cc4d0_GetModPath(_self_.get()._field_importer);;
		__JULE_DEFER({
			_1aa8cd36b_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1aa8cc28d_SetModPath(_self_.get()._field_importer, _62617_oldMod);
		});;
		if ((*(_60738_imp)).get()._field_Std) {
			_1aa8cd36b_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1aa8cc28d_SetModPath(_self_.get()._field_importer, _1d9e38479_PathStdlib);
		};
		jule::Slice<jule::Ptr<_1aa81e80c_Ast>> _63122_asts;;
		jule::Slice<_1d9d938bd_Log> _63132_errors;;
		({
			__jule_tuple_sx_1aa81e80c_Ast__jule_tuple_s_1d9d938bd_Log __jule_assign_result = _1aa8cd36b_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1aa8ccea3_ImportPackage(_self_.get()._field_importer, (*(_60738_imp)).get()._field_Path, (!((*(_60738_imp)).get()._field_Std)));
			_63122_asts = __jule_assign_result.__jule_result_arg0;
			_63132_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_63132_errors.len() > 0LL)) {
			_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_63132_errors);
			__jule_func_result = false;
			return __jule_func_result;;
		};
		_1aa899623_checkPackageAccessibility(_self_.ptr(), _60761_decl, &(_62617_oldMod), &((*(_60738_imp)).get()._field_Path));
		{
			auto expr = &(_63122_asts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad14256c:;
			if (it != expr_end) {
				jule::Ptr<_1aa81e80c_Ast> _63925_ast = *it;
				{
					jule::Ptr<_1aa94d51d_SymbolTable> _64025_table = nullptr;;
					({
						__jule_tuple_x_1aa94d51d_SymbolTable__jule_tuple_s_1d9d938bd_Log __jule_assign_result = _1aa9a121e_buildSymbols(&(_63925_ast), &(_self_.get()._field_importer), _self_);
						_64025_table = __jule_assign_result.__jule_result_arg0;
						_63132_errors = __jule_assign_result.__jule_result_arg1;
					});
					if ((_63132_errors.len() > 0LL)) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_63132_errors);
						__jule_func_result = false;
						return __jule_func_result;;
					};
					(*(_60738_imp)).get()._field_Package.get()._field_Files = jule::alloc_for_append((*(_60738_imp)).get()._field_Package.get()._field_Files,1);(*(_60738_imp)).get()._field_Package.get()._field_Files.__push(_64025_table);;
				}
				_iter_next_1ad14256c:;
				++it;
				goto _iter_begin_1ad14256c;
			}
			_iter_end_1ad14256c:;
		};
	};
	_1aa8982e2_implImportSelections(_self_.ptr(), _60738_imp, _60761_decl);
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1aa8d101c_ImportInfo> _1aa899ce9_importUseDecl(jule::Ptr<_1aa895aa3_symbolBuilder> _self_, jule::Ptr<_1aa86b6d3_UseDecl>* _65438_decl) {
	jule::Ptr<_1aa8d101c_ImportInfo> _65517_imp = _1aa897bb5_buildImport(_self_, _65438_decl);;
	if ((_65517_imp == nullptr)) {
		return nullptr;;
	};
	jule::Bool _66117_ok = _1aa897ec3_checkDuplicateUseDecl(_self_.ptr(), &(_65517_imp));;
	if ((!(_66117_ok))) {
		return nullptr;;
	};
	_66117_ok=_1aa8999db_importPackage(_self_, &(_65517_imp), _65438_decl);
	_self_.get()._field_table.get()._field_Imports = jule::alloc_for_append(_self_.get()._field_table.get()._field_Imports,1);_self_.get()._field_table.get()._field_Imports.__push(_65517_imp);;
	if (_66117_ok) {
		_1aa8cd36b_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1aa8cd228_Imported(_self_.get()._field_importer, _65517_imp);
		return _65517_imp;;
	};
	return nullptr;;
}



inline void _1aa899ec5_importUseDecls(jule::Ptr<_1aa895aa3_symbolBuilder> _self_) {
	{
		auto expr = &(_self_.get()._field_ast.get()._field_UseDecls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad146c9c:;
		if (it != expr_end) {
			jule::Ptr<_1aa86b6d3_UseDecl> _67621_decl = *it;
			{
				_1aa899ce9_importUseDecl(_self_, &(_67621_decl));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					goto _iter_end_1ad146c9c;
				};
			}
			_iter_next_1ad146c9c:;
			++it;
			goto _iter_begin_1ad146c9c;
		}
		_iter_end_1ad146c9c:;
	};
}



inline void _1aa89a24a_appendNode(_1aa895aa3_symbolBuilder* _self_, _1aa820698_Node* _68534_node) {
	{
		auto &_match_expr{ (*(_68534_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1ad1477c5:;
			{
				(*(_self_))._field_table.get()._field_Impls = jule::alloc_for_append((*(_self_))._field_table.get()._field_Impls,1);(*(_self_))._field_table.get()._field_Impls.__push(_1aa895553_buildImpl((*(_68534_node))._field_Data.cast_ptr<_1aa870022_Impl>(&__jule_any_type11)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1ad148694:;
			{
				jule::Ptr<_1aa982b29_TypeAlias> _69021_ta = _1aa891c47_buildTypeAlias((*(_68534_node))._field_Data.cast_ptr<_1aa86a2e7_TypeAliasDecl>(&__jule_any_type12));;
				(*(_self_))._field_table.get()._field_TypeAliases = jule::alloc_for_append((*(_self_))._field_table.get()._field_TypeAliases,1);(*(_self_))._field_table.get()._field_TypeAliases.__push(_69021_ta);;
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1ad14870a:;
			{
				jule::Ptr<_1aa8740c0_Struct> _69321_srct = _1aa8925a5_buildStruct((*(_68534_node))._field_Data.cast_ptr<_1aa86e241_StructDecl>(&__jule_any_type13));;
				(*(_self_))._field_table.get()._field_Structs = jule::alloc_for_append((*(_self_))._field_table.get()._field_Structs,1);(*(_self_))._field_table.get()._field_Structs.__push(_69321_srct);;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1ad148771:;
			{
				jule::Ptr<_1aa889426_Fn> _69621_f = _1aa893210_buildFn((*(_68534_node))._field_Data.cast_ptr<_1aa8659a7_FnDecl>(&__jule_any_type14));;
				(*(_self_))._field_table.get()._field_Funcs = jule::alloc_for_append((*(_self_))._field_table.get()._field_Funcs,1);(*(_self_))._field_table.get()._field_Funcs.__push(_69621_f);;
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1ad148ead:;
			{
				jule::Ptr<_1aa89b647_Trait> _69921_t = _1aa8939e6_buildTrait((*(_68534_node))._field_Data.cast_ptr<_1aa86e917_TraitDecl>(&__jule_any_type15));;
				(*(_self_))._field_table.get()._field_Traits = jule::alloc_for_append((*(_self_))._field_table.get()._field_Traits,1);(*(_self_))._field_table.get()._field_Traits.__push(_69921_t);;
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1ad149024:;
			{
				jule::Ptr<_1aa908c59_Var> _70221_v = _1aa895014_buildVar((*(_68534_node))._field_Data.cast_ptr<_1aa866986_VarDecl>(&__jule_any_type16));;
				(*(_self_))._field_table.get()._field_Vars = jule::alloc_for_append((*(_self_))._field_table.get()._field_Vars,1);(*(_self_))._field_table.get()._field_Vars.__push(_70221_v);;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1ad14908a:;
			{
				jule::Ptr<_1aa89ddca_Enum> _70521_e = _1aa894486_buildEnum((*(_68534_node))._field_Data.cast_ptr<_1aa86c67e_EnumDecl>(&__jule_any_type17));;
				(*(_self_))._field_table.get()._field_Enums = jule::alloc_for_append((*(_self_))._field_table.get()._field_Enums,1);(*(_self_))._field_table.get()._field_Enums.__push(_70521_e);;
			}
		}
		else if (_match_expr.type == &__jule_any_type18) {
			_case_begin_1ad149101:;
			{
				jule::Ptr<_1aa8a04c5_TypeEnum> _70821_e = _1aa894c6c_buildTypeEnum((*(_68534_node))._field_Data.cast_ptr<_1aa86d790_TypeEnumDecl>(&__jule_any_type18));;
				(*(_self_))._field_table.get()._field_TypeEnums = jule::alloc_for_append((*(_self_))._field_table.get()._field_TypeEnums,1);(*(_self_))._field_table.get()._field_TypeEnums.__push(_70821_e);;
			}
		}
		else {
			_case_begin_1ad148584:;
			{
				_1aa896422_pushErr(_self_, &((*(_68534_node))._field_Token), jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ad14852e:;
	};
}



inline void _1aa89a426_appendNodes(_1aa895aa3_symbolBuilder* _self_) {
	{
		auto expr = &((*(_self_))._field_ast.get()._field_Nodes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad1487e8:;
		if (it != expr_end) {
			_1aa820698_Node _71621_node = *it;
			{
				_1aa89a24a_appendNode(_self_, &(_71621_node));
			}
			_iter_next_1ad1487e8:;
			++it;
			goto _iter_begin_1ad1487e8;
		}
		_iter_end_1ad1487e8:;
	};
}



inline void _1aa89a69b_pushDirectivePass(_1aa895aa3_symbolBuilder* _self_, jule::Ptr<_1aa820a94_Directive>* _72141_d) {
	if (((*(_72141_d)).get()._field_Args.len() == 0LL)) {
		_1aa896422_pushErr(_self_, &((*(_72141_d)).get()._field_Tag), jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_72141_d)).get()._field_Args.len() > 1LL)) {
		jule::Ptr<_1db944d0d_Token> _72617_arg = (*(_72141_d)).get()._field_Args[1LL];;
		_1aa896422_pushErr(_self_, &(_72617_arg), jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*(_72141_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
	};
	jule::Ptr<_1db944d0d_Token> _73013_arg = (*(_72141_d)).get()._field_Args[0LL];;
	if ((_73013_arg.get()._field_Id != static_cast<jule::U64>(6LLU))) {
		_1aa896422_pushErr(_self_, &(_73013_arg), jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if ((_73013_arg.get()._field_Kind[0LL] != '\"')) {
		_1aa896422_pushErr(_self_, &(_73013_arg), jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*(_self_))._field_table.get()._field_Passes = jule::alloc_for_append((*(_self_))._field_table.get()._field_Passes,1);(*(_self_))._field_table.get()._field_Passes.__push(_1aa891362_Pass{._field_Token=(*(_72141_d)).get()._field_Tag, ._field_Text=_73013_arg.get()._field_Kind.slice(1LL, (_73013_arg.get()._field_Kind.len() - 1LL))});;
}



inline void _1aa89a877_appendTopDirectives(_1aa895aa3_symbolBuilder* _self_) {
	{
		auto expr = &((*(_self_))._field_ast.get()._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad1550eb:;
		if (it != expr_end) {
			jule::Ptr<_1aa820a94_Directive> _74821_d = *it;
			{
				{
					auto &_match_expr{ _74821_d.get()._field_Tag.get()._field_Kind };
					
					if (_match_expr == jule::Str("pass", 4)) {
						_case_begin_1ad15831e:;
						{
							_1aa89a69b_pushDirectivePass(_self_, &(_74821_d));
						}
					}
					_match_end_1ad158297:;
				};
			}
			_iter_next_1ad1550eb:;
			++it;
			goto _iter_begin_1ad1550eb;
		}
		_iter_end_1ad1550eb:;
	};
}



inline void _1aa89aa53_build(jule::Ptr<_1aa895aa3_symbolBuilder> _self_) {
	_self_.get()._field_table=jule::new_ptr<_1aa94d51d_SymbolTable>(_1aa94d51d_SymbolTable{._field_File=_self_.get()._field_ast.get()._field_File, });
	_1aa89a877_appendTopDirectives(_self_.ptr());
	_1aa899ec5_importUseDecls(_self_);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	_1aa89a426_appendNodes(_self_.ptr());
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1aa895aa3_symbolBuilder _Src) {
	_Stream << "symbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1aa89ba43_Str(_1aa89b647_Trait* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1aa89bd51_Equal(jule::Ptr<_1aa89b647_Trait> _self_, jule::Ptr<_1aa983872_TypeKind> _2621_other) {
	jule::Ptr<_1aa89b647_Trait> _2713_trt = _1aa987425_Trait(_2621_other.ptr());;
	return (_self_ == _2713_trt);;
}



inline jule::Bool _1aa89c1d6_IsBuiltin(_1aa89b647_Trait* _self_) {
	return ((*(_self_))._field_Token == nullptr);;
}



inline jule::Ptr<_1aa889426_Fn> _1aa89c4e4_FindMethod(_1aa89b647_Trait* _self_, jule::Str _4029_ident) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad15c059:;
		if (it != expr_end) {
			jule::Ptr<_1aa889426_Fn> _4121_f = *it;
			{
				if ((_4121_f.get()._field_Ident == _4029_ident)) {
					return _4121_f;;
				};
			}
			_iter_next_1ad15c059:;
			++it;
			goto _iter_begin_1ad15c059;
		}
		_iter_end_1ad15c059:;
	};
	return _1aa89cb10_findMethodInherit(_self_, &(_4029_ident));;
}



inline jule::Bool _1aa89c802_inherits(jule::Ptr<_1aa89b647_Trait> _self_, jule::Ptr<_1aa89b647_Trait>* _4929_t) {
	if ((_self_ == (*(_4929_t)))) {
		return true;;
	};
	{
		auto expr = &(_self_.get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad15d544:;
		if (it != expr_end) {
			jule::Ptr<_1aa9889ba_TypeSymbol> _5321_i = *it;
			{
				if (_1aa89c802_inherits(_1aa987425_Trait(_5321_i.get()._field_Kind.ptr()), _4929_t)) {
					return true;;
				};
			}
			_iter_next_1ad15d544:;
			++it;
			goto _iter_begin_1ad15d544;
		}
		_iter_end_1ad15d544:;
	};
	return false;;
}



inline jule::Ptr<_1aa889426_Fn> _1aa89cb10_findMethodInherit(_1aa89b647_Trait* _self_, jule::Str* _6137_ident) {
	{
		auto expr = &((*(_self_))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad15e6cc:;
		if (it != expr_end) {
			jule::Ptr<_1aa9889ba_TypeSymbol> _6221_i = *it;
			{
				if ((_6221_i.get()._field_Kind == nullptr)) {
					goto _iter_next_1ad15e6cc;
				};
				jule::Ptr<_1aa89b647_Trait> _6621_t = _1aa987425_Trait(_6221_i.get()._field_Kind.ptr());;
				if ((_6621_t != nullptr)) {
					jule::Ptr<_1aa889426_Fn> _6825_f2 = _1aa89c4e4_FindMethod(_6621_t.ptr(), (*(_6137_ident)));;
					if ((_6825_f2 != nullptr)) {
						return _6825_f2;;
					};
				};
			}
			_iter_next_1ad15e6cc:;
			++it;
			goto _iter_begin_1ad15e6cc;
		}
		_iter_end_1ad15e6cc:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa89b647_Trait _Src) {
	_Stream << _1aa89ba43_Str(&_Src);
	return _Stream;
}



inline jule::Bool _1aa89d7c0_AutoExpr(_1aa89d3d5_EnumItem* _self_) {
	return ((*(_self_))._field_Value == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa89d3d5_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1aa89e23d_Str(_1aa89ddca_Enum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1aa89e54b_Equal(jule::Ptr<_1aa89ddca_Enum> _self_, jule::Ptr<_1aa983872_TypeKind> _3821_other) {
	jule::Ptr<_1aa89ddca_Enum> _3913_enm = _1aa98649b_Enum(_3821_other.ptr());;
	return (_self_ == _3913_enm);;
}



inline jule::Ptr<_1aa89d3d5_EnumItem> _1aa89e98b_FindItem(_1aa89ddca_Enum* _self_, jule::Str _4727_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad1631b4:;
		if (it != expr_end) {
			jule::Ptr<_1aa89d3d5_EnumItem> _4821_item = *it;
			{
				if ((_4821_item.get()._field_Ident == _4727_ident)) {
					return _4821_item;;
				};
			}
			_iter_next_1ad1631b4:;
			++it;
			goto _iter_begin_1ad1631b4;
		}
		_iter_end_1ad1631b4:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa89ddca_Enum _Src) {
	_Stream << _1aa89e23d_Str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa89ee0e_TypeEnumItem _Src) {
	_Stream << "TypeEnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1aa8a0805_Str(_1aa8a04c5_TypeEnum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1aa8a0b13_Equal(jule::Ptr<_1aa8a04c5_TypeEnum> _self_, jule::Ptr<_1aa983872_TypeKind> _8021_other) {
	jule::Ptr<_1aa8a04c5_TypeEnum> _8113_tenm = _1aa986710_TypeEnum(_8021_other.ptr());;
	return (_self_ == _8113_tenm);;
}



inline jule::Ptr<_1aa89ee0e_TypeEnumItem> _1aa8a100e_FindItem(_1aa8a04c5_TypeEnum* _self_, jule::Str _8927_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad165282:;
		if (it != expr_end) {
			jule::Ptr<_1aa89ee0e_TypeEnumItem> _9021_item = *it;
			{
				if ((_9021_item.get()._field_Ident == _8927_ident)) {
					return _9021_item;;
				};
			}
			_iter_next_1ad165282:;
			++it;
			goto _iter_begin_1ad165282;
		}
		_iter_end_1ad165282:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa8a04c5_TypeEnum _Src) {
	_Stream << _1aa8a0805_Str(&_Src);
	return _Stream;
}



inline jule::Str _1aa8a2a27_Str(_1aa8a262b_comptimeRange* _self_) {
	return jule::Str("comptimeRange", 13);;
}



inline jule::Bool _1aa8a2d35_Equal(jule::Ptr<_1aa8a262b_comptimeRange> _self_, jule::Ptr<_1aa983872_TypeKind> _2521_other) {
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa8a262b_comptimeRange _Src) {
	_Stream << _1aa8a2a27_Str(&_Src);
	return _Stream;
}



inline jule::Str _1aa8a3484_Str(_1aa8a3121_comptimeStructField* _self_) {
	return jule::Str("comptimeField", 13);;
}



inline jule::Bool _1aa8a3792_Equal(jule::Ptr<_1aa8a3121_comptimeStructField> _self_, jule::Ptr<_1aa983872_TypeKind> _3521_other) {
	return false;;
}



inline jule::Ptr<_1aa957d85_Data> _1aa8a3b49__Name(jule::Ptr<_1aa8a3121_comptimeStructField> _self_) {
	jule::Ptr<_1c0901b1b_Const> _4017_constant = static__1c0902875_NewStr(_self_.get()._field_field.get()._field_Decl.get()._field_Ident);;
	return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("str", 3)), 10)}), ._field_Model=jule::Any(_4017_constant, &__jule_any_type19), ._field_Constant=_4017_constant});;
}



inline jule::Ptr<_1aa957d85_Data> _1aa8a3e57_subIdent(jule::Ptr<_1aa8a3121_comptimeStructField> _self_, jule::Str _5028_ident) {
	{
		auto &_match_expr{ _5028_ident };
		
		if (_match_expr == jule::Str("Name", 4)) {
			_case_begin_1ad16994b:;
			{
				jule::Ptr<_1aa88c0c7_FnIns> _5321_method = jule::new_ptr<_1aa88c0c7_FnIns>(_1aa88c0c7_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aa957d85_Data>(jule::Ptr<_1aa959903_Eval>*,jule::Ptr<_1aa85c52b_FnCallExpr>*,jule::Ptr<_1aa957d85_Data>*)>([=](jule::Ptr<_1aa959903_Eval>* _5433_e, jule::Ptr<_1aa85c52b_FnCallExpr>* _5448_fc, jule::Ptr<_1aa957d85_Data>* ) mutable -> jule::Ptr<_1aa957d85_Data> {
					return _1aa8a3b49__Name(_self_);;
				}), });;
				return _1aa8a8511_buildAsComptimeMethodData(&(_5321_method));;
			}
		}
		else {
			_case_begin_1ad169ae4:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad1699b2:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1aa8a3121_comptimeStructField _Src) {
	_Stream << _1aa8a3484_Str(&_Src);
	return _Stream;
}



inline jule::Str _1aa8a45ea_Str(_1aa8a4243_comptimeStructFields* _self_) {
	return jule::Str("comptimeStructFields", 20);;
}



inline jule::Bool _1aa8a4908_Equal(jule::Ptr<_1aa8a4243_comptimeStructFields> _self_, jule::Ptr<_1aa983872_TypeKind> _7221_other) {
	return false;;
}



inline void _1aa8a4d37_ready(_1aa8a4243_comptimeStructFields* _self_, jule::Ptr<_1aa908c59_Var> _7628_keyA, jule::Ptr<_1aa908c59_Var> _7644_keyB) {
	if ((_7628_keyA != nullptr)) {
		_7628_keyA.get()._field_Constant=true;
		_7628_keyA.get()._field_Value=jule::new_ptr<_1aa958e0d_Value>(_1aa958e0d_Value{._field_Data=jule::new_ptr<_1aa957d85_Data>()});
		_7628_keyA.get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
		_7628_keyA.get()._field_Kind=jule::new_ptr<_1aa9889ba_TypeSymbol>(_1aa9889ba_TypeSymbol{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("int", 3)), 10)})});
	};
	if ((_7644_keyB != nullptr)) {
		_7644_keyB.get()._field_Constant=true;
		_7644_keyB.get()._field_Value=jule::new_ptr<_1aa958e0d_Value>(_1aa958e0d_Value{._field_Data=jule::new_ptr<_1aa957d85_Data>()});
		_7644_keyB.get()._field_Kind=jule::new_ptr<_1aa9889ba_TypeSymbol>(_1aa9889ba_TypeSymbol{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(jule::new_ptr<_1aa8a3121_comptimeStructField>(), 6)})});
	};
}



inline void _1aa8a5200_step(_1aa8a4243_comptimeStructFields* _self_, jule::I64 _10223_i, jule::Ptr<_1aa908c59_Var> _10235_keyA, jule::Ptr<_1aa908c59_Var> _10251_keyB) {
	if ((_10235_keyA != nullptr)) {
		_10235_keyA.get()._field_Value.get()._field_Data.get()._field_Constant=static__1c090208e_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_10223_i)));
		_10235_keyA.get()._field_Value.get()._field_Data.get()._field_Model=jule::Any(_10235_keyA.get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	};
	if ((_10251_keyB != nullptr)) {
		_1aa98813a_comptimeStructField(_10251_keyB.get()._field_Kind.get()._field_Kind.ptr()).get()._field_field=(*(_self_))._field_fields[_10223_i];
	};
}



inline jule::I64 _1aa8a5464_len(_1aa8a4243_comptimeStructFields* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_fields.len());;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa8a4243_comptimeStructFields _Src) {
	_Stream << _1aa8a45ea_Str(&_Src);
	return _Stream;
}



inline jule::Str _1aa8a5ab3_Str(_1aa8a5750_comptimeType* _self_) {
	return jule::Str("comptimeTypeInfo", 16);;
}



inline jule::Bool _1aa8a5dc1_Equal(jule::Ptr<_1aa8a5750_comptimeType> _self_, jule::Ptr<_1aa983872_TypeKind> _12621_other) {
	return false;;
}



inline jule::Ptr<_1aa957d85_Data> _1aa8a63bb__Str(jule::Ptr<_1aa8a5750_comptimeType> _self_) {
	jule::Ptr<_1c0901b1b_Const> _13117_constant = static__1c0902875_NewStr(_1aa983c6d_Str(_self_.get()._field_Base.ptr()));;
	return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("str", 3)), 10)}), ._field_Model=jule::Any(_13117_constant, &__jule_any_type19), ._field_Constant=_13117_constant});;
}



inline jule::Ptr<_1aa957d85_Data> _1aa8a66c9__Kind(jule::Ptr<_1aa8a5750_comptimeType> _self_, jule::Ptr<_1aa959903_Eval>* _14130_e) {
	jule::Ptr<_1aa89ddca_Enum> _14217_enm = _1aa8d2b12_FindEnum(_1aa8a880d_findComptimePackage(&((*(_14130_e)).get()._field_s)).ptr(), jule::Str("Kind", 4));;
	jule::Ptr<_1aa89d3d5_EnumItem> _14317_item = nullptr;;
	{
		
		if (_1aa984a71_Void(_self_.get()._field_Base.ptr())) {
			_case_begin_1ad175171:;
			{
				_14317_item=_1aa89e98b_FindItem(_14217_enm.ptr(), jule::Str("Void", 4));
			}
		}
		else if ((_1aa9871b1_Struct(_self_.get()._field_Base.ptr()) != nullptr)) {
			_case_begin_1ad174d30:;
			{
				_14317_item=_1aa89e98b_FindItem(_14217_enm.ptr(), jule::Str("Struct", 6));
			}
		}
		else if ((_1aa987425_Trait(_self_.get()._field_Base.ptr()) != nullptr)) {
			_case_begin_1ad174a66:;
			{
				_14317_item=_1aa89e98b_FindItem(_14217_enm.ptr(), jule::Str("Trait", 5));
			}
		}
		else if ((_1aa986237_Ptr(_self_.get()._field_Base.ptr()) != nullptr)) {
			_case_begin_1ad174acc:;
			{
				if (_1aa991b05_IsUnsafe(_1aa986237_Ptr(_self_.get()._field_Base.ptr()).ptr())) {
					_14317_item=_1aa89e98b_FindItem(_14217_enm.ptr(), jule::Str("UnsafePtr", 9));
				} else {
					_14317_item=_1aa89e98b_FindItem(_14217_enm.ptr(), jule::Str("Ptr", 3));
				};
			}
		}
		else if ((_1aa985ec3_Sptr(_self_.get()._field_Base.ptr()) != nullptr)) {
			_case_begin_1ad174b43:;
			{
				_14317_item=_1aa89e98b_FindItem(_14217_enm.ptr(), jule::Str("Ref", 3));
			}
		}
		else if ((_1aa98649b_Enum(_self_.get()._field_Base.ptr()) != nullptr)) {
			_case_begin_1ad174ba9:;
			{
				_14317_item=_1aa89e98b_FindItem(_14217_enm.ptr(), jule::Str("Enum", 4));
			}
		}
		else if ((_1aa987689_Map(_self_.get()._field_Base.ptr()) != nullptr)) {
			_case_begin_1ad175605:;
			{
				_14317_item=_1aa89e98b_FindItem(_14217_enm.ptr(), jule::Str("Map", 3));
			}
		}
		else if ((_1aa986bd8_Slc(_self_.get()._field_Base.ptr()) != nullptr)) {
			_case_begin_1ad17566b:;
			{
				_14317_item=_1aa89e98b_FindItem(_14217_enm.ptr(), jule::Str("Slice", 5));
			}
		}
		else if ((_1aa986974_Arr(_self_.get()._field_Base.ptr()) != nullptr)) {
			_case_begin_1ad1756d2:;
			{
				_14317_item=_1aa89e98b_FindItem(_14217_enm.ptr(), jule::Str("Array", 5));
			}
		}
		else if ((_1aa986e4c_Fn(_self_.get()._field_Base.ptr()) != nullptr)) {
			_case_begin_1ad175748:;
			{
				_14317_item=_1aa89e98b_FindItem(_14217_enm.ptr(), jule::Str("Func", 4));
			}
		}
		else if ((_1aa985c5e_Prim(_self_.get()._field_Base.ptr()) != nullptr)) {
			_case_begin_1ad1757ae:;
			{
				jule::Ptr<_1aa989339_Prim> _17017_prim = _1aa985c5e_Prim(_self_.get()._field_Base.ptr());;
				{
					
					if (_1aa98c7d2_IsAny(_17017_prim.ptr())) {
						_case_begin_1ad17dbd5:;
						{
							_14317_item=_1aa89e98b_FindItem(_14217_enm.ptr(), jule::Str("Any", 3));
						}
					}
					else if (_1aa98c309_IsBool(_17017_prim.ptr())) {
						_case_begin_1ad17cec0:;
						{
							_14317_item=_1aa89e98b_FindItem(_14217_enm.ptr(), jule::Str("Bool", 4));
						}
					}
					else if (_1aa98c56d_IsStr(_17017_prim.ptr())) {
						_case_begin_1ad17d72e:;
						{
							_14317_item=_1aa89e98b_FindItem(_14217_enm.ptr(), jule::Str("Str", 3));
						}
					}
					else if (_1aa98b5e4_IsF32(_17017_prim.ptr())) {
						_case_begin_1ad17e169:;
						{
							_14317_item=_1aa89e98b_FindItem(_14217_enm.ptr(), jule::Str("F32", 3));
						}
					}
					else if (_1aa98b858_IsF64(_17017_prim.ptr())) {
						_case_begin_1ad17e1d0:;
						{
							_14317_item=_1aa89e98b_FindItem(_14217_enm.ptr(), jule::Str("F64", 3));
						}
					}
					else if (_1aa98a192_IsI8(_17017_prim.ptr())) {
						_case_begin_1ad17e246:;
						{
							_14317_item=_1aa89e98b_FindItem(_14217_enm.ptr(), jule::Str("I8", 2));
						}
					}
					else if (_1aa98a406_IsI16(_17017_prim.ptr())) {
						_case_begin_1ad17e2ac:;
						{
							_14317_item=_1aa89e98b_FindItem(_14217_enm.ptr(), jule::Str("I16", 3));
						}
					}
					else if (_1aa98a66a_IsI32(_17017_prim.ptr())) {
						_case_begin_1ad17e323:;
						{
							_14317_item=_1aa89e98b_FindItem(_14217_enm.ptr(), jule::Str("I32", 3));
						}
					}
					else if (_1aa98a8ce_IsI64(_17017_prim.ptr())) {
						_case_begin_1ad17e389:;
						{
							_14317_item=_1aa89e98b_FindItem(_14217_enm.ptr(), jule::Str("I64", 3));
						}
					}
					else if (_1aa98ab43_IsU8(_17017_prim.ptr())) {
						_case_begin_1ad17e400:;
						{
							_14317_item=_1aa89e98b_FindItem(_14217_enm.ptr(), jule::Str("U8", 2));
						}
					}
					else if (_1aa98ada7_IsU16(_17017_prim.ptr())) {
						_case_begin_1ad17e466:;
						{
							_14317_item=_1aa89e98b_FindItem(_14217_enm.ptr(), jule::Str("U16", 3));
						}
					}
					else if (_1aa98b11b_IsU32(_17017_prim.ptr())) {
						_case_begin_1ad17e4cc:;
						{
							_14317_item=_1aa89e98b_FindItem(_14217_enm.ptr(), jule::Str("U32", 3));
						}
					}
					else if (_1aa98b380_IsU64(_17017_prim.ptr())) {
						_case_begin_1ad17e543:;
						{
							_14317_item=_1aa89e98b_FindItem(_14217_enm.ptr(), jule::Str("U64", 3));
						}
					}
					else if (_1aa98babc_IsInt(_17017_prim.ptr())) {
						_case_begin_1ad17e5a9:;
						{
							_14317_item=_1aa89e98b_FindItem(_14217_enm.ptr(), jule::Str("Int", 3));
						}
					}
					else if (_1aa98bd31_IsUint(_17017_prim.ptr())) {
						_case_begin_1ad17e631:;
						{
							_14317_item=_1aa89e98b_FindItem(_14217_enm.ptr(), jule::Str("Uint", 4));
						}
					}
					else if (_1aa98c095_IsUintptr(_17017_prim.ptr())) {
						_case_begin_1ad17e6a8:;
						{
							_14317_item=_1aa89e98b_FindItem(_14217_enm.ptr(), jule::Str("Uintptr", 7));
						}
					}
					else {
						_case_begin_1ad17d586:;
						{
							jule::panic((jule::Str("Kind(): unimplemented type for std::comptime: ", 46) + _1aa983c6d_Str(_self_.get()._field_Base.ptr())) + jule::Str("\nlocation: std/jule/sema/comptime.jule:205:17"));;
						}
					}
					_match_end_1ad17d520:;
				};
			}
		}
		else {
			_case_begin_1ad1746e2:;
			{
				jule::panic((jule::Str("Kind(): unimplemented type for std::comptime: ", 46) + _1aa983c6d_Str(_self_.get()._field_Base.ptr())) + jule::Str("\nlocation: std/jule/sema/comptime.jule:208:13"));;
			}
		}
		_match_end_1ad174956:;
	};
	return _1aa981232_evalEnumStatic(&(_14217_enm), &(_14317_item));;
}



inline jule::Ptr<_1aa957d85_Data> _1aa8a6a81__Bits(jule::Ptr<_1aa8a5750_comptimeType> _self_, jule::Ptr<_1aa959903_Eval>* _21330_e, jule::Ptr<_1aa85c52b_FnCallExpr>* _21345_fc) {
	jule::Ptr<_1aa989339_Prim> _21413_prim = _1aa985c5e_Prim(_self_.get()._field_Base.ptr());;
	if ((_21413_prim == nullptr)) {
		_1aa959e0e_pushErr((*(_21330_e)).ptr(), (*(_21345_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1aa983c6d_Str(_self_.get()._field_Base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Bits", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::I64 _21913_n = _1dc5b4c35_BitsizeOf(_21413_prim.get()._field_Kind);;
	if ((_21913_n == -1LL)) {
		_1aa959e0e_pushErr((*(_21330_e)).ptr(), (*(_21345_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1aa983c6d_Str(_self_.get()._field_Base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Bits", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1c0901b1b_Const> _22417_constant = static__1c090208e_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_21913_n)));;
	return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("int", 3)), 10)}), ._field_Model=jule::Any(_22417_constant, &__jule_any_type19), ._field_Constant=_22417_constant});;
}



inline jule::Ptr<_1aa957d85_Data> _1aa8a6e38__Elem(jule::Ptr<_1aa8a5750_comptimeType> _self_, jule::Ptr<_1aa959903_Eval>* _23430_e, jule::Ptr<_1aa85c52b_FnCallExpr>* _23445_fc) {
	jule::Ptr<_1aa991132_Ptr> _23517_ptr = _1aa986237_Ptr(_self_.get()._field_Base.ptr());;
	if ((_23517_ptr != nullptr)) {
		if (_1aa991b05_IsUnsafe(_23517_ptr.ptr())) {
			_1aa959e0e_pushErr((*(_23430_e)).ptr(), (*(_23445_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1aa983c6d_Str(_self_.get()._field_Base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Elem", 4), &__jule_any_type5)}));
			return nullptr;;
		};
		return _1aa8a8b71_buildComptimeTypeInfoData(&((*(_23430_e)).get()._field_s), &(_23517_ptr.get()._field_Elem));;
	};
	jule::Ptr<_1aa98cabd_Sptr> _24317_sptr = _1aa985ec3_Sptr(_self_.get()._field_Base.ptr());;
	if ((_24317_sptr != nullptr)) {
		return _1aa8a8b71_buildComptimeTypeInfoData(&((*(_23430_e)).get()._field_s), &(_24317_sptr.get()._field_Elem));;
	};
	jule::Ptr<_1aa98d52a_Slc> _24717_slice = _1aa986bd8_Slc(_self_.get()._field_Base.ptr());;
	if ((_24717_slice != nullptr)) {
		return _1aa8a8b71_buildComptimeTypeInfoData(&((*(_23430_e)).get()._field_s), &(_24717_slice.get()._field_Elem));;
	};
	jule::Ptr<_1aa9906c5_Arr> _25117_array = _1aa986974_Arr(_self_.get()._field_Base.ptr());;
	if ((_25117_array != nullptr)) {
		return _1aa8a8b71_buildComptimeTypeInfoData(&((*(_23430_e)).get()._field_s), &(_25117_array.get()._field_Elem));;
	};
	_1aa959e0e_pushErr((*(_23430_e)).ptr(), (*(_23445_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1aa983c6d_Str(_self_.get()._field_Base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Elem", 4), &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Ptr<_1aa957d85_Data> _1aa8a72e0__Size(jule::Ptr<_1aa8a5750_comptimeType> _self_, jule::Ptr<_1aa959903_Eval>* _25930_e, jule::Ptr<_1aa85c52b_FnCallExpr>* _25945_fc) {
	jule::Ptr<_1aa9906c5_Arr> _26017_arr = _1aa986974_Arr(_self_.get()._field_Base.ptr());;
	if ((_26017_arr == nullptr)) {
		_1aa959e0e_pushErr((*(_25930_e)).ptr(), (*(_25945_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1aa983c6d_Str(_self_.get()._field_Base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Size", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1c0901b1b_Const> _26517_constant = static__1c090208e_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_26017_arr.get()._field_N)));;
	return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("int", 3)), 10)}), ._field_Model=jule::Any(_26517_constant, &__jule_any_type19), ._field_Constant=_26517_constant});;
}



inline jule::Ptr<_1aa957d85_Data> _1aa8a7697__Key(jule::Ptr<_1aa8a5750_comptimeType> _self_, jule::Ptr<_1aa959903_Eval>* _27529_e, jule::Ptr<_1aa85c52b_FnCallExpr>* _27544_fc) {
	jule::Ptr<_1aa98ead1_Map> _27617_m = _1aa987689_Map(_self_.get()._field_Base.ptr());;
	if ((_27617_m == nullptr)) {
		_1aa959e0e_pushErr((*(_27529_e)).ptr(), (*(_27544_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1aa983c6d_Str(_self_.get()._field_Base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Key", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	return _1aa8a8b71_buildComptimeTypeInfoData(&((*(_27529_e)).get()._field_s), &(_27617_m.get()._field_Key));;
}



inline jule::Ptr<_1aa957d85_Data> _1aa8a7a4e__Value(jule::Ptr<_1aa8a5750_comptimeType> _self_, jule::Ptr<_1aa959903_Eval>* _28431_e, jule::Ptr<_1aa85c52b_FnCallExpr>* _28446_fc) {
	jule::Ptr<_1aa98ead1_Map> _28517_m = _1aa987689_Map(_self_.get()._field_Base.ptr());;
	if ((_28517_m == nullptr)) {
		_1aa959e0e_pushErr((*(_28431_e)).ptr(), (*(_28446_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1aa983c6d_Str(_self_.get()._field_Base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Value", 5), &__jule_any_type5)}));
		return nullptr;;
	};
	return _1aa8a8b71_buildComptimeTypeInfoData(&((*(_28431_e)).get()._field_s), &(_28517_m.get()._field_Val));;
}



inline jule::Ptr<_1aa957d85_Data> _1aa8a7e06__Fields(jule::Ptr<_1aa8a5750_comptimeType> _self_, jule::Ptr<_1aa959903_Eval>* _29332_e, jule::Ptr<_1aa85c52b_FnCallExpr>* _29347_fc) {
	jule::Ptr<_1aa876dd6_StructIns> _29417_s = _1aa9871b1_Struct(_self_.get()._field_Base.ptr());;
	if ((_29417_s == nullptr)) {
		_1aa959e0e_pushErr((*(_29332_e)).ptr(), (*(_29347_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1aa983c6d_Str(_self_.get()._field_Base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Fields", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(jule::new_ptr<_1aa8a4243_comptimeStructFields>(_1aa8a4243_comptimeStructFields{._field_fields=_29417_s.get()._field_Fields}), 7)}), });;
}



inline jule::Ptr<_1aa957d85_Data> _1aa8a8214_subIdent(jule::Ptr<_1aa8a5750_comptimeType> _self_, jule::Str _30828_ident) {
	{
		auto &_match_expr{ _30828_ident };
		
		if (_match_expr == jule::Str("Str", 3)) {
			_case_begin_1ad19c41d:;
			{
				jule::Ptr<_1aa88c0c7_FnIns> _31121_method = jule::new_ptr<_1aa88c0c7_FnIns>(_1aa88c0c7_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aa957d85_Data>(jule::Ptr<_1aa959903_Eval>*,jule::Ptr<_1aa85c52b_FnCallExpr>*,jule::Ptr<_1aa957d85_Data>*)>([=](jule::Ptr<_1aa959903_Eval>* _31233_e, jule::Ptr<_1aa85c52b_FnCallExpr>* _31248_fc, jule::Ptr<_1aa957d85_Data>* ) mutable -> jule::Ptr<_1aa957d85_Data> {
					return _1aa8a63bb__Str(_self_);;
				}), });;
				return _1aa8a8511_buildAsComptimeMethodData(&(_31121_method));;
			}
		}
		else if (_match_expr == jule::Str("Bits", 4)) {
			_case_begin_1ad19e0e0:;
			{
				jule::Ptr<_1aa88c0c7_FnIns> _31821_method = jule::new_ptr<_1aa88c0c7_FnIns>(_1aa88c0c7_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aa957d85_Data>(jule::Ptr<_1aa959903_Eval>*,jule::Ptr<_1aa85c52b_FnCallExpr>*,jule::Ptr<_1aa957d85_Data>*)>([=](jule::Ptr<_1aa959903_Eval>* _31933_e, jule::Ptr<_1aa85c52b_FnCallExpr>* _31948_fc, jule::Ptr<_1aa957d85_Data>* ) mutable -> jule::Ptr<_1aa957d85_Data> {
					return _1aa8a6a81__Bits(_self_, _31933_e, _31948_fc);;
				}), });;
				return _1aa8a8511_buildAsComptimeMethodData(&(_31821_method));;
			}
		}
		else if (_match_expr == jule::Str("Elem", 4)) {
			_case_begin_1ad19e156:;
			{
				jule::Ptr<_1aa88c0c7_FnIns> _32521_method = jule::new_ptr<_1aa88c0c7_FnIns>(_1aa88c0c7_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aa957d85_Data>(jule::Ptr<_1aa959903_Eval>*,jule::Ptr<_1aa85c52b_FnCallExpr>*,jule::Ptr<_1aa957d85_Data>*)>([=](jule::Ptr<_1aa959903_Eval>* _32633_e, jule::Ptr<_1aa85c52b_FnCallExpr>* _32648_fc, jule::Ptr<_1aa957d85_Data>* ) mutable -> jule::Ptr<_1aa957d85_Data> {
					return _1aa8a6e38__Elem(_self_, _32633_e, _32648_fc);;
				}), });;
				return _1aa8a8511_buildAsComptimeMethodData(&(_32521_method));;
			}
		}
		else if (_match_expr == jule::Str("Size", 4)) {
			_case_begin_1ad19e1bc:;
			{
				jule::Ptr<_1aa88c0c7_FnIns> _33221_method = jule::new_ptr<_1aa88c0c7_FnIns>(_1aa88c0c7_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aa957d85_Data>(jule::Ptr<_1aa959903_Eval>*,jule::Ptr<_1aa85c52b_FnCallExpr>*,jule::Ptr<_1aa957d85_Data>*)>([=](jule::Ptr<_1aa959903_Eval>* _33333_e, jule::Ptr<_1aa85c52b_FnCallExpr>* _33348_fc, jule::Ptr<_1aa957d85_Data>* ) mutable -> jule::Ptr<_1aa957d85_Data> {
					return _1aa8a72e0__Size(_self_, _33333_e, _33348_fc);;
				}), });;
				return _1aa8a8511_buildAsComptimeMethodData(&(_33221_method));;
			}
		}
		else if (_match_expr == jule::Str("Key", 3)) {
			_case_begin_1ad19dd26:;
			{
				jule::Ptr<_1aa88c0c7_FnIns> _33921_method = jule::new_ptr<_1aa88c0c7_FnIns>(_1aa88c0c7_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aa957d85_Data>(jule::Ptr<_1aa959903_Eval>*,jule::Ptr<_1aa85c52b_FnCallExpr>*,jule::Ptr<_1aa957d85_Data>*)>([=](jule::Ptr<_1aa959903_Eval>* _34033_e, jule::Ptr<_1aa85c52b_FnCallExpr>* _34048_fc, jule::Ptr<_1aa957d85_Data>* ) mutable -> jule::Ptr<_1aa957d85_Data> {
					return _1aa8a7697__Key(_self_, _34033_e, _34048_fc);;
				}), });;
				return _1aa8a8511_buildAsComptimeMethodData(&(_33921_method));;
			}
		}
		else if (_match_expr == jule::Str("Value", 5)) {
			_case_begin_1ad19dd8c:;
			{
				jule::Ptr<_1aa88c0c7_FnIns> _34621_method = jule::new_ptr<_1aa88c0c7_FnIns>(_1aa88c0c7_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aa957d85_Data>(jule::Ptr<_1aa959903_Eval>*,jule::Ptr<_1aa85c52b_FnCallExpr>*,jule::Ptr<_1aa957d85_Data>*)>([=](jule::Ptr<_1aa959903_Eval>* _34733_e, jule::Ptr<_1aa85c52b_FnCallExpr>* _34748_fc, jule::Ptr<_1aa957d85_Data>* ) mutable -> jule::Ptr<_1aa957d85_Data> {
					return _1aa8a7a4e__Value(_self_, _34733_e, _34748_fc);;
				}), });;
				return _1aa8a8511_buildAsComptimeMethodData(&(_34621_method));;
			}
		}
		else if (_match_expr == jule::Str("Fields", 6)) {
			_case_begin_1ad19de03:;
			{
				jule::Ptr<_1aa88c0c7_FnIns> _35321_method = jule::new_ptr<_1aa88c0c7_FnIns>(_1aa88c0c7_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aa957d85_Data>(jule::Ptr<_1aa959903_Eval>*,jule::Ptr<_1aa85c52b_FnCallExpr>*,jule::Ptr<_1aa957d85_Data>*)>([=](jule::Ptr<_1aa959903_Eval>* _35433_e, jule::Ptr<_1aa85c52b_FnCallExpr>* _35448_fc, jule::Ptr<_1aa957d85_Data>* ) mutable -> jule::Ptr<_1aa957d85_Data> {
					return _1aa8a7e06__Fields(_self_, _35433_e, _35448_fc);;
				}), });;
				return _1aa8a8511_buildAsComptimeMethodData(&(_35321_method));;
			}
		}
		else if (_match_expr == jule::Str("Kind", 4)) {
			_case_begin_1ad19de69:;
			{
				jule::Ptr<_1aa88c0c7_FnIns> _36021_method = jule::new_ptr<_1aa88c0c7_FnIns>(_1aa88c0c7_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aa957d85_Data>(jule::Ptr<_1aa959903_Eval>*,jule::Ptr<_1aa85c52b_FnCallExpr>*,jule::Ptr<_1aa957d85_Data>*)>([=](jule::Ptr<_1aa959903_Eval>* _36133_e, jule::Ptr<_1aa85c52b_FnCallExpr>* _36148_fc, jule::Ptr<_1aa957d85_Data>* ) mutable -> jule::Ptr<_1aa957d85_Data> {
					return _1aa8a66c9__Kind(_self_, _36133_e);;
				}), });;
				return _1aa8a8511_buildAsComptimeMethodData(&(_36021_method));;
			}
		}
		else {
			_case_begin_1ad19dbb1:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad19d870:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1aa8a5750_comptimeType _Src) {
	_Stream << _1aa8a5ab3_Str(&_Src);
	return _Stream;
}



inline jule::Fn<jule::Bool(jule::Ptr<_1aa8d92de_Sema>*,jule::Slice<jule::Ptr<_1aa982b29_TypeAlias>>*)> _1aa8aaac9_readyFn(jule::Ptr<_1aa8aa69a_constraintChecker> _self_) {
	return jule::Fn<jule::Bool(jule::Ptr<_1aa8d92de_Sema>*,jule::Slice<jule::Ptr<_1aa982b29_TypeAlias>>*)>([=](jule::Ptr<_1aa8d92de_Sema>* _6321_sema, jule::Slice<jule::Ptr<_1aa982b29_TypeAlias>>* _6339_generics) mutable -> jule::Bool {
		{
			auto expr = &(_self_.get()._field_genericsD);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad1ba34d:;
			if (it != expr_end) {
				jule::I64 _6418_i = it - expr->begin();
				jule::Ptr<_1aa861321_GenericDecl> _6425_g = *it;
				{
					jule::Ptr<_1aa9820e0_InsGeneric> _6525_generic = _self_.get()._field_generics[_6418_i];;
					if (((_6425_g.get()._field_Constraint == nullptr) || (_6425_g.get()._field_Constraint.get()._field_Mask.len() == 0LL))) {
						goto _iter_next_1ad1ba34d;
					};
					_6525_generic.get()._field_Constraint=jule::Slice<jule::Ptr<_1aa983872_TypeKind>>::alloc(0LL, _6425_g.get()._field_Constraint.get()._field_Mask.len());
					{
						auto expr = &(_6425_g.get()._field_Constraint.get()._field_Mask);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ad1bc31c:;
						if (it != expr_end) {
							jule::Ptr<_1aa854028_TypeDecl> _7029_mask = *it;
							{
								jule::I64 _7125_n = (*(_6321_sema)).get()._field_errors.len();;
								jule::Ptr<_1aa983872_TypeKind> _7229_kind = _1aa8e16ae_buildTypeWithRefers((*(_6321_sema)), &(_7029_mask), jule::Trait<_1aa9a0509_Lookup>((*(_6321_sema)), 3), (*(_6339_generics)), nullptr);;
								if ((_7229_kind == nullptr)) {
									{
										auto &_match_expr{ _7029_mask.get()._field_Kind };
										
										if (_match_expr.type == &__jule_any_type20) {
											_case_begin_1ad1be51c:;
											{
												jule::Ptr<_1aa8545de_IdentTypeDecl> _7637_itd = _7029_mask.get()._field_Kind.cast_ptr<_1aa8545de_IdentTypeDecl>(&__jule_any_type20);;
												if (((_7637_itd.get()._field_Generics.len() == 0LL) && _1aa8abc62_isBuiltinConstraint(&(_7637_itd.get()._field_Ident)))) {
													_7229_kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(_7637_itd.get()._field_Ident), 10)});
													(*(_6321_sema)).get()._field_errors=(*(_6321_sema)).get()._field_errors.slice(0LL, _7125_n);
													goto _julec_label_success;
												};
											}
										}
										_match_end_1ad1be4b7:;
									};
									return false;;
								};
								_julec_label_success:;
								_6525_generic.get()._field_Constraint = jule::alloc_for_append(_6525_generic.get()._field_Constraint,1);_6525_generic.get()._field_Constraint.__push(_7229_kind);;
							}
							_iter_next_1ad1bc31c:;
							++it;
							goto _iter_begin_1ad1bc31c;
						}
						_iter_end_1ad1bc31c:;
					};
				}
				_iter_next_1ad1ba34d:;
				++it;
				_6418_i++;
				goto _iter_begin_1ad1ba34d;
			}
			_iter_end_1ad1ba34d:;
		};
		return true;;
	});;
}



inline jule::Bool _1aa8aad3d_readyFi(jule::Ptr<_1aa8aa69a_constraintChecker> _self_) {
	_self_.get()._field_genericsD=_self_.get()._field_fi.get()._field_Decl.get()._field_Generics;
	_self_.get()._field_generics=_self_.get()._field_fi.get()._field_Generics;
	return ((!(_self_.get()._field_uniq)) || _1aa8e5c8a_fnEnvironment(_self_.get()._field_s, &(_self_.get()._field_fi), _1aa8aaac9_readyFn(_self_)));;
}



inline jule::Bool _1aa8ab0a2_readySi(jule::Ptr<_1aa8aa69a_constraintChecker> _self_) {
	_self_.get()._field_genericsD=_self_.get()._field_si.get()._field_Decl.get()._field_Generics;
	_self_.get()._field_generics=_self_.get()._field_si.get()._field_Generics;
	return ((!(_self_.get()._field_uniq)) || _1aa8aaac9_readyFn(_self_)(&(_self_.get()._field_s), &(_self_.get()._field_genericsA)));;
}



inline jule::Bool _1aa8ab316_ready(jule::Ptr<_1aa8aa69a_constraintChecker> _self_) {
	if ((_self_.get()._field_fi != nullptr)) {
		return _1aa8aad3d_readyFi(_self_);;
	};
	return _1aa8ab0a2_readySi(_self_);;
}



inline jule::Bool _1aa8ab57a_check(jule::Ptr<_1aa8aa69a_constraintChecker> _self_) {
	if ((!(_1aa8ab316_ready(_self_)))) {
		return false;;
	};
	_julec_label_lookup:;
	{
		auto expr = &(_self_.get()._field_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad1c6205:;
		if (it != expr_end) {
			jule::I64 _11914_i = it - expr->begin();
			jule::Ptr<_1aa9820e0_InsGeneric> _11921_g = *it;
			{
				if ((_11921_g.get()._field_Constraint == nullptr)) {
					goto _iter_next_1ad1c6205;
				};
				{
					auto expr = &(_11921_g.get()._field_Constraint);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad1c6d2c:;
					if (it != expr_end) {
						jule::Ptr<_1aa983872_TypeKind> _12325_c2 = *it;
						{
							jule::Ptr<_1aa989339_Prim> _12425_prim = _1aa985c5e_Prim(_12325_c2.ptr());;
							if (((_12425_prim != nullptr) && _1aa989e2d_IsConstraint(_12425_prim.ptr()))) {
								if (_1aa8ab976_matchConstraint(&(_12425_prim.get()._field_Kind), &(_11921_g.get()._field_Kind))) {
									goto _iter_next_1ad1c6205;
								};
								goto _iter_next_1ad1c6d2c;
							};
							if (_1aa98407b_Equal(_12325_c2, _11921_g.get()._field_Kind)) {
								goto _iter_next_1ad1c6205;
							};
						}
						_iter_next_1ad1c6d2c:;
						++it;
						goto _iter_begin_1ad1c6d2c;
					}
					_iter_end_1ad1c6d2c:;
				};
				_1aa8dbbb5_pushErr(_self_.get()._field_s.ptr(), _self_.get()._field_et, jule::Str("type @ is not matched with @'s constraint", 41), jule::Slice<jule::Any>::make({jule::Any(_1aa983c6d_Str(_11921_g.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_self_.get()._field_genericsD[_11914_i].get()._field_Ident, &__jule_any_type5)}));
				return false;;
			}
			_iter_next_1ad1c6205:;
			++it;
			_11914_i++;
			goto _iter_begin_1ad1c6205;
		}
		_iter_end_1ad1c6205:;
	};
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa8aa69a_constraintChecker _Src) {
	_Stream << "constraintChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "genericsD:" << _Src._field_genericsD << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "genericsA:" << _Src._field_genericsA << ", ";
	_Stream << "fi:" << _Src._field_fi << ", ";
	_Stream << "si:" << _Src._field_si << ", ";
	_Stream << "et:" << _Src._field_et << ", ";
	_Stream << "uniq:" << _Src._field_uniq;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aa8ac944_IsTraitImpl(_1aa8ac548_Impl* _self_) {
	return ((*(_self_))._field_Base != nullptr);;
}



inline jule::Bool _1aa8acba8_IsStructImpl(_1aa8ac548_Impl* _self_) {
	return ((*(_self_))._field_Base == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa8ac548_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa8b25a3_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa8b299e_If _Src) {
	_Stream << "If{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa8b2c8a_Else _Src) {
	_Stream << "Else{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa8b310e_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Elifs:" << _Src._field_Elifs << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa8b33ea_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aa8b3c14_IsWhileNext(_1aa8b386d_WhileIter* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa8b386d_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa8b4253_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa8b464e_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "It:" << _Src._field_It;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa8b4a06_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "It:" << _Src._field_It << ", ";
	_Stream << "Mtch:" << _Src._field_Mtch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa8b4ce2_Label _Src) {
	_Stream << "Label{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa8b50cd_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa8b5485_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa8b5908_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa8b5cb0_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aa8b68c6_IsGenericTypeMatch(_1aa8b63ba_Match* _self_) {
	return (((*(_self_))._field_TypeMatch && ((*(_self_))._field_Expr != nullptr)) && (*(_self_))._field_Expr.get()._field_Kind.get()._field_Generic);;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa8b63ba_Match _Src) {
	_Stream << "Match{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Comptime:" << _Src._field_Comptime << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aa8b71ce_isDefault(_1aa8b6e15_Case* _self_) {
	return ((*(_self_))._field_Exprs == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa8b6e15_Case _Src) {
	_Stream << "Case{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs << ", ";
	_Stream << "Next:" << _Src._field_Next;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa8b74ba_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "DestCase:" << _Src._field_DestCase;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa8b783e_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa8b7e49_scopeLabel _Src) {
	_Stream << "scopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa8b83bc_scopeGoto _Src) {
	_Stream << "scopeGoto{";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aa8d101c_ImportInfo> _1aa8b9654_SelectPackage(_1aa8b91d1_scopeChecker* _self_, jule::Fn<jule::Bool(jule::Ptr<_1aa8d101c_ImportInfo>)> _45632_selector) {
	return _1aa8d9762_SelectPackage((*(_self_))._field_s.ptr(), _45632_selector);;
}



inline jule::Ptr<_1aa908c59_Var> _1aa8b9a0b_FindVar(_1aa8b91d1_scopeChecker* _self_, jule::Str _46726_ident, jule::Bool _46738_cpp_linked) {
	;
	jule::Ptr<_1aa908c59_Var> _47017_v = _1aa950993_findVar((*(_self_))._field_table.ptr(), _46726_ident, _46738_cpp_linked, true);;
	if ((_47017_v != nullptr)) {
		return _47017_v;;
	};
	jule::Ptr<_1aa8b91d1_scopeChecker> _47517_parent = (*(_self_))._field_parent;;
	while ((_47517_parent != nullptr)) {
		{
			_47017_v=_1aa950993_findVar(_47517_parent.get()._field_table.ptr(), _46726_ident, _46738_cpp_linked, true);
			if ((_47017_v != nullptr)) {
				return _47017_v;;
			};
			_47517_parent=_47517_parent.get()._field_parent;
		}
	_iter_next_1ad1e1ae4:;
	}
	_iter_end_1ad1e1ae4:;;
	return _1aa8d9b19_FindVar((*(_self_))._field_s.ptr(), _46726_ident, _46738_cpp_linked);;
}



inline jule::Ptr<_1aa982b29_TypeAlias> _1aa8b9db3_FindTypeAlias(_1aa8b91d1_scopeChecker* _self_, jule::Str _49432_ident, jule::Bool _49444_cppLinked) {
	;
	jule::Ptr<_1aa982b29_TypeAlias> _49717_ta = _1aa950de4_findTypeAlias((*(_self_))._field_table.ptr(), _49432_ident, _49444_cppLinked, true);;
	if ((_49717_ta != nullptr)) {
		return _49717_ta;;
	};
	jule::Ptr<_1aa8b91d1_scopeChecker> _50217_parent = (*(_self_))._field_parent;;
	while ((_50217_parent != nullptr)) {
		{
			_49717_ta=_1aa950de4_findTypeAlias(_50217_parent.get()._field_table.ptr(), _49432_ident, _49444_cppLinked, true);
			if ((_49717_ta != nullptr)) {
				return _49717_ta;;
			};
			_50217_parent=_50217_parent.get()._field_parent;
		}
	_iter_next_1ad1e52bd:;
	}
	_iter_end_1ad1e52bd:;;
	return _1aa8d9ec1_FindTypeAlias((*(_self_))._field_s.ptr(), _49432_ident, _49444_cppLinked);;
}



inline jule::Ptr<_1aa8740c0_Struct> _1aa8ba26a_FindStruct(_1aa8b91d1_scopeChecker* _self_, jule::Str _51929_ident, jule::Bool _51941_cppLinked) {
	return _1aa8da378_FindStruct((*(_self_))._field_s.ptr(), _51929_ident, _51941_cppLinked);;
}



inline jule::Ptr<_1aa889426_Fn> _1aa8ba622_FindFn(_1aa8b91d1_scopeChecker* _self_, jule::Str _52825_ident, jule::Bool _52837_cppLinked) {
	return _1aa8da730_FindFn((*(_self_))._field_s.ptr(), _52825_ident, _52837_cppLinked);;
}



inline jule::Ptr<_1aa89b647_Trait> _1aa8ba930_FindTrait(_1aa8b91d1_scopeChecker* _self_, jule::Str _53728_ident) {
	return _1aa8daa3d_FindTrait((*(_self_))._field_s.ptr(), _53728_ident);;
}



inline jule::Ptr<_1aa89ddca_Enum> _1aa8bac3d_FindEnum(_1aa8b91d1_scopeChecker* _self_, jule::Str _54627_ident) {
	return _1aa8dad4b_FindEnum((*(_self_))._field_s.ptr(), _54627_ident);;
}



inline jule::Ptr<_1aa8a04c5_TypeEnum> _1aa8bb04b_FindTypeEnum(_1aa8b91d1_scopeChecker* _self_, jule::Str _55531_ident) {
	return _1aa8db159_FindTypeEnum((*(_self_))._field_s.ptr(), _55531_ident);;
}



inline jule::Bool _1aa8bb37b_isUnsafe(jule::Ptr<_1aa8b91d1_scopeChecker> _self_) {
	jule::Ptr<_1aa8b91d1_scopeChecker> _56317_scope = _self_;;
	_julec_label_iter:;
	if (_56317_scope.get()._field_scope.get()._field_Unsafety) {
		return true;;
	};
	if ((_56317_scope.get()._field_parent != nullptr)) {
		_56317_scope=_56317_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Bool _1aa8bb5e0_isRoot(_1aa8b91d1_scopeChecker* _self_) {
	return (((*(_self_))._field_parent == nullptr) || ((*(_self_))._field_owner != nullptr));;
}



inline void _1aa8bb7bb_stop(_1aa8b91d1_scopeChecker* _self_) {
	(*(_self_))._field_i=-1LL;
}



inline jule::Bool _1aa8bba30_stopped(_1aa8b91d1_scopeChecker* _self_) {
	return ((*(_self_))._field_i == -1LL);;
}



inline jule::Bool _1aa8bbc94_isDeferred(jule::Ptr<_1aa8b91d1_scopeChecker> _self_) {
	jule::Ptr<_1aa8b91d1_scopeChecker> _59617_scope = _self_;;
	_julec_label_iter:;
	if (_59617_scope.get()._field_scope.get()._field_Deferred) {
		return true;;
	};
	if ((_59617_scope.get()._field_parent != nullptr)) {
		_59617_scope=_59617_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Ptr<_1aa8b91d1_scopeChecker> _1aa8bc008_getRoot(jule::Ptr<_1aa8b91d1_scopeChecker> _self_) {
	jule::Ptr<_1aa8b91d1_scopeChecker> _61417_root = _self_;;
	while (((_61417_root.get()._field_parent != nullptr) && (_61417_root.get()._field_owner == nullptr))) {
		{
			_61417_root=_61417_root.get()._field_parent;
		}
	_iter_next_1ad1ee717:;
	}
	_iter_end_1ad1ee717:;;
	return _61417_root;;
}



inline jule::Ptr<_1aa8b91d1_scopeChecker> _1aa8bc26c_getHardRoot(jule::Ptr<_1aa8b91d1_scopeChecker> _self_) {
	jule::Ptr<_1aa8b91d1_scopeChecker> _62417_root = _self_;;
	while ((_62417_root.get()._field_parent != nullptr)) {
		{
			_62417_root=_62417_root.get()._field_parent;
		}
	_iter_next_1ad200938:;
	}
	_iter_end_1ad200938:;;
	return _62417_root;;
}



inline jule::Ptr<_1aa8b4ce2_Label> _1aa8bc57a_findLabel(_1aa8b91d1_scopeChecker* _self_, jule::Str _63428_ident) {
	{
		auto expr = &((*(_self_))._field_scope.get()._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad201472:;
		if (it != expr_end) {
			jule::Any _63521_st = *it;
			{
				{
					auto &_match_expr{ _63521_st };
					
					if (_match_expr.type == &__jule_any_type21) {
						_case_begin_1ad201e89:;
						{
							jule::Ptr<_1aa8b4ce2_Label> _63825_label = _63521_st.cast_ptr<_1aa8b4ce2_Label>(&__jule_any_type21);;
							if ((_63825_label.get()._field_Ident == _63428_ident)) {
								return _63825_label;;
							};
						}
					}
					_match_end_1ad201d8a:;
				};
			}
			_iter_next_1ad201472:;
			++it;
			goto _iter_begin_1ad201472;
		}
		_iter_end_1ad201472:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aa8b7e49_scopeLabel> _1aa8bc888_findLabelScope(jule::Ptr<_1aa8b91d1_scopeChecker> _self_, jule::Str _65034_ident) {
	jule::Ptr<_1aa8b7e49_scopeLabel> _65117_label = _1aa8bcb96_findLabelAll(_self_.ptr(), _65034_ident);;
	if (((_65117_label != nullptr) && (_65117_label.get()._field_scope == _self_))) {
		return _65117_label;;
	};
	return nullptr;;
}



inline jule::Ptr<_1aa8b7e49_scopeLabel> _1aa8bcb96_findLabelAll(_1aa8b91d1_scopeChecker* _self_, jule::Str _66231_ident) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad2041de:;
		if (it != expr_end) {
			jule::Ptr<_1aa8b7e49_scopeLabel> _66321_lbl = *it;
			{
				if ((_66321_lbl.get()._field_label.get()._field_Ident == _66231_ident)) {
					return _66321_lbl;;
				};
			}
			_iter_next_1ad2041de:;
			++it;
			goto _iter_begin_1ad2041de;
		}
		_iter_end_1ad2041de:;
	};
	return nullptr;;
}



inline jule::Bool _1aa8bd04d_isDuplicatedIdent(_1aa8b91d1_scopeChecker* _self_, jule::Uintptr _67436_itself, jule::Str _67453_ident) {
	jule::Ptr<_1aa908c59_Var> _67513_v = _1aa8b9a0b_FindVar(_self_, _67453_ident, false);;
	if (((_67513_v != nullptr) && (static_cast<jule::Uintptr>(_67513_v) != _67436_itself))) {
		if ((_67513_v.get()._field_Scope == nullptr)) {
			return false;;
		};
		return ((_67513_v.get()._field_Scope == (*(_self_))._field_scope) || (!(_1aa8db577_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	jule::Ptr<_1aa982b29_TypeAlias> _68313_ta = _1aa8b9db3_FindTypeAlias(_self_, _67453_ident, false);;
	if (((_68313_ta != nullptr) && (static_cast<jule::Uintptr>(_68313_ta) != _67436_itself))) {
		if ((_68313_ta.get()._field_Scope == nullptr)) {
			return false;;
		};
		return ((_68313_ta.get()._field_Scope == (*(_self_))._field_tree) || (!(_1aa8db577_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	return false;;
}



inline void _1aa8bd2c3_checkVarDecl(jule::Ptr<_1aa8b91d1_scopeChecker> _self_, jule::Ptr<_1aa866986_VarDecl> _69436_decl) {
	jule::Ptr<_1aa908c59_Var> _69517_v = _1aa895014_buildVar(_69436_decl);;
	_69517_v.get()._field_Scope=_self_.get()._field_scope;
	__JULE_DEFER({
		_self_.get()._field_table.get()._field_Vars = jule::alloc_for_append(_self_.get()._field_table.get()._field_Vars,1);_self_.get()._field_table.get()._field_Vars.__push(_69517_v);;
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_69517_v, &__jule_any_type8));;
	});;
	if (_1aa8bd04d_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_69517_v)), _69517_v.get()._field_Ident)) {
		_1aa8dbbb5_pushErr(_self_.get()._field_s.ptr(), _69517_v.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_69517_v.get()._field_Ident, &__jule_any_type5)}));
		_1aa8dbed4_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1aa8bb7bb_stop(_self_.ptr());
		return;;
	};
	_1aa8eca50_checkVarDecl(_self_.get()._field_s, &(_69517_v), jule::Trait<_1aa9a0509_Lookup>(_self_, 0));
	if (((!(_1aa909386_IsTypeInferred(_69517_v.ptr()))) && ((_69517_v.get()._field_Kind == nullptr) || (_69517_v.get()._field_Kind.get()._field_Kind == nullptr)))) {
		return;;
	};
	_1aa901191_checkTypeVar(_self_.get()._field_s, &(_69517_v), jule::Trait<_1aa9a0509_Lookup>(_self_, 0));
}



inline void _1aa8bd548_checkTypeAliasDecl(jule::Ptr<_1aa8b91d1_scopeChecker> _self_, jule::Ptr<_1aa86a2e7_TypeAliasDecl> _71842_decl) {
	jule::Ptr<_1aa982b29_TypeAlias> _71917_ta = _1aa891c47_buildTypeAlias(_71842_decl);;
	if (_1aa8bd04d_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_71917_ta)), _71917_ta.get()._field_Ident)) {
		_1aa8dbbb5_pushErr(_self_.get()._field_s.ptr(), _71917_ta.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_71917_ta.get()._field_Ident, &__jule_any_type5)}));
		_1aa8dbed4_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1aa8bb7bb_stop(_self_.ptr());
		return;;
	};
	_1aa8e7550_checkTypeAliasDecl(_self_.get()._field_s, &(_71917_ta), jule::Trait<_1aa9a0509_Lookup>(_self_, 0));
	_self_.get()._field_table.get()._field_TypeAliases = jule::alloc_for_append(_self_.get()._field_table.get()._field_TypeAliases,1);_self_.get()._field_table.get()._field_TypeAliases.__push(_71917_ta);;
	if ((_71917_ta.get()._field_Kind.get()._field_Kind == nullptr)) {
		_1aa8bb7bb_stop(_self_.ptr());
	};
}



inline jule::Ptr<_1aa8b25a3_Scope> _1aa8bd7ac_getChild(_1aa8b91d1_scopeChecker* _self_) {
	return jule::new_ptr<_1aa8b25a3_Scope>(_1aa8b25a3_Scope{._field_Parent=(*(_self_))._field_scope, });;
}



inline void _1aa8bdb75_checkChildSsc(jule::Ptr<_1aa8b91d1_scopeChecker> _self_, jule::Ptr<_1aa863eb1_ScopeTree>* _74238_tree, jule::Ptr<_1aa8b25a3_Scope>* _74261_s, jule::Ptr<_1aa8b91d1_scopeChecker>* _74277_ssc) {
	(*(_74277_ssc)).get()._field_parent=_self_;
	_1aa8c9125_check((*(_74277_ssc)), _74238_tree, _74261_s);
}



inline jule::Ptr<_1aa8b25a3_Scope> _1aa8be02c_checkChildSc(jule::Ptr<_1aa8b91d1_scopeChecker> _self_, jule::Ptr<_1aa863eb1_ScopeTree>* _74737_tree, jule::Ptr<_1aa8b91d1_scopeChecker>* _74760_ssc) {
	jule::Ptr<_1aa8b25a3_Scope> _74817_s = _1aa8bd7ac_getChild(_self_.ptr());;
	_1aa8bdb75_checkChildSsc(_self_, _74737_tree, &(_74817_s), _74760_ssc);
	return _74817_s;;
}



inline jule::Ptr<_1aa8b25a3_Scope> _1aa8be33a_checkChild(jule::Ptr<_1aa8b91d1_scopeChecker> _self_, jule::Ptr<_1aa863eb1_ScopeTree>* _75335_tree) {
	jule::Ptr<_1aa8b91d1_scopeChecker> _75417_ssc = _1aa8c9389_newChildChecker(_self_);;
	return _1aa8be02c_checkChildSc(_self_, _75335_tree, &(_75417_ssc));;
}



inline void _1aa8be5b0_checkAnonScope(jule::Ptr<_1aa8b91d1_scopeChecker> _self_, jule::Ptr<_1aa863eb1_ScopeTree> _75838_tree) {
	jule::Ptr<_1aa8b25a3_Scope> _75917_s = _1aa8be33a_checkChild(_self_, &(_75838_tree));;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_75917_s, &__jule_any_type22));;
}



inline void _1aa8be8ce_processErrorCall(jule::Ptr<_1aa8b91d1_scopeChecker> _self_, jule::Ptr<_1aa885587_BuiltinErrorCallExprModel>* _76341_m, jule::Ptr<_1db944d0d_Token> _76372_err) {
	if (_1aa8bbc94_isDeferred(_self_)) {
		_1aa8dbbb5_pushErr(_self_.get()._field_s.ptr(), _76372_err, jule::Str("deferred scopes are not supports error calls", 44), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1aa8b91d1_scopeChecker> _76817_root = _1aa8bc008_getRoot(_self_);;
	if ((!(_76817_root.get()._field_owner.get()._field_Decl.get()._field_Exceptional))) {
		_1aa8dbbb5_pushErr(_self_.get()._field_s.ptr(), _76372_err, jule::Str("error call can only useable for exceptional functions", 53), jule::Slice<jule::Any>());
		_1aa8dbed4_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("you can declare an exceptional function with \"!\" operator", 57), jule::Slice<jule::Any>());
	};
	(*(_76341_m)).get()._field_Func=_76817_root.get()._field_owner;
}



inline void _1aa8beb54_checkExpr(jule::Ptr<_1aa8b91d1_scopeChecker> _self_, jule::Ptr<_1aa858549_Expr> _77633_expr) {
	jule::Ptr<_1aa959903_Eval> _77717_eval = _1aa8e3958_eval(_self_.get()._field_s, jule::Trait<_1aa9a0509_Lookup>(_self_, 0));;
	_77717_eval.get()._field_ignored=true;
	jule::Ptr<_1aa957d85_Data> _77917_d = _1aa974742_evalExpr(_77717_eval, _77633_expr);;
	if ((_77917_d == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _77917_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ad219c2c:;
			{
				jule::Ptr<_1aa885587_BuiltinErrorCallExprModel> _78621_m = _77917_d.get()._field_Model.cast_ptr<_1aa885587_BuiltinErrorCallExprModel>(&__jule_any_type23);;
				_1aa8be8ce_processErrorCall(_self_, &(_78621_m), _77633_expr.get()._field_Token);
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_77917_d, &__jule_any_type24));;
			}
		}
		else if (_match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type28 || _match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type30 || _match_expr.type == &__jule_any_type31 || _match_expr.type == &__jule_any_type32 || _match_expr.type == &__jule_any_type33 || _match_expr.type == &__jule_any_type34 || _match_expr.type == &__jule_any_type35) {
			_case_begin_1ad219e3b:;
			{
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_77917_d, &__jule_any_type24));;
			}
		}
		else {
			_case_begin_1ad219d81:;
			{
				_1aa8dbbb5_pushErr(_self_.get()._field_s.ptr(), _77633_expr.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ad219b94:;
	};
}



inline jule::Ptr<_1aa8b299e_If> _1aa8bee62_checkIf(jule::Ptr<_1aa8b91d1_scopeChecker> _self_, jule::Ptr<_1aa8692e6_If> _80631_i) {
	jule::Ptr<_1aa8b25a3_Scope> _80717_s = _1aa8be33a_checkChild(_self_, &(_80631_i.get()._field_Scope));;
	jule::Ptr<_1aa957d85_Data> _80917_d = _1aa974742_evalExpr(_1aa8e3958_eval(_self_.get()._field_s, jule::Trait<_1aa9a0509_Lookup>(_self_, 0)), _80631_i.get()._field_Expr);;
	if ((_80917_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1aa989339_Prim> _81417_prim = _1aa985c5e_Prim(_80917_d.get()._field_Kind.ptr());;
	if (((_81417_prim == nullptr) || (!(_1aa98c309_IsBool(_81417_prim.ptr()))))) {
		_1aa8dbbb5_pushErr(_self_.get()._field_s.ptr(), _80631_i.get()._field_Expr.get()._field_Token, jule::Str("if conditions must be have boolean expression", 45), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1aa8b299e_If>(_1aa8b299e_If{._field_Expr=_80917_d.get()._field_Model, ._field_Scope=_80717_s});;
}



inline jule::Ptr<_1aa8b2c8a_Else> _1aa8c0270_checkElse(jule::Ptr<_1aa8b91d1_scopeChecker> _self_, jule::Ptr<_1aa86969d_Else> _82633_e) {
	return jule::new_ptr<_1aa8b2c8a_Else>(_1aa8b2c8a_Else{._field_Scope=_1aa8be33a_checkChild(_self_, &(_82633_e.get()._field_Scope))});;
}



inline void _1aa8c04e5_checkConditional(jule::Ptr<_1aa8b91d1_scopeChecker> _self_, jule::Ptr<_1aa869b21_Conditional> _83240_conditional) {
	jule::Ptr<_1aa8b310e_Conditional> _83317_c = jule::new_ptr<_1aa8b310e_Conditional>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_83317_c, &__jule_any_type36));;
	_83317_c.get()._field_Elifs=jule::Slice<jule::Ptr<_1aa8b299e_If>>::alloc(0LL, (_83240_conditional.get()._field_Tail.len() + 1LL));
	_83317_c.get()._field_Elifs = jule::alloc_for_append(_83317_c.get()._field_Elifs,1);_83317_c.get()._field_Elifs.__push(_1aa8bee62_checkIf(_self_, _83240_conditional.get()._field_Head));;
	{
		auto expr = &(_83240_conditional.get()._field_Tail);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad22460a:;
		if (it != expr_end) {
			jule::Ptr<_1aa8692e6_If> _83921_elif = *it;
			{
				_83317_c.get()._field_Elifs = jule::alloc_for_append(_83317_c.get()._field_Elifs,1);_83317_c.get()._field_Elifs.__push(_1aa8bee62_checkIf(_self_, _83921_elif));;
			}
			_iter_next_1ad22460a:;
			++it;
			goto _iter_begin_1ad22460a;
		}
		_iter_end_1ad22460a:;
	};
	if ((_83240_conditional.get()._field_Default != nullptr)) {
		_83317_c.get()._field_Default=_1aa8c0270_checkElse(_self_, _83240_conditional.get()._field_Default);
	};
}



inline void _1aa8c0957_checkIterScopeSsc(jule::Ptr<_1aa8b91d1_scopeChecker> _self_, jule::Uintptr _84837_it, jule::Ptr<_1aa863eb1_ScopeTree> _84854_tree, jule::Ptr<_1aa8b25a3_Scope>* _84877_s, jule::Ptr<_1aa8b91d1_scopeChecker> _84892_ssc) {
	_84892_ssc.get()._field_it=_84837_it;
	_1aa8bdb75_checkChildSsc(_self_, &(_84854_tree), _84877_s, &(_84892_ssc));
}



inline jule::Ptr<_1aa8b25a3_Scope> _1aa8c0da8_checkIterScopeSc(jule::Ptr<_1aa8b91d1_scopeChecker> _self_, jule::Uintptr _85336_it, jule::Ptr<_1aa863eb1_ScopeTree> _85353_tree, jule::Ptr<_1aa8b91d1_scopeChecker> _85375_ssc) {
	jule::Ptr<_1aa8b25a3_Scope> _85417_scope = _1aa8bd7ac_getChild(_self_.ptr());;
	_1aa8c0957_checkIterScopeSsc(_self_, _85336_it, _85353_tree, &(_85417_scope), _85375_ssc);
	return _85417_scope;;
}



inline jule::Ptr<_1aa8b25a3_Scope> _1aa8c1260_checkIterScope(jule::Ptr<_1aa8b91d1_scopeChecker> _self_, jule::Uintptr _85934_it, jule::Ptr<_1aa863eb1_ScopeTree>* _85952_tree) {
	jule::Ptr<_1aa8b91d1_scopeChecker> _86017_ssc = _1aa8c9389_newChildChecker(_self_);;
	return _1aa8c0da8_checkIterScopeSc(_self_, _85934_it, (*(_85952_tree)), _86017_ssc);;
}



inline void _1aa8c14d5_checkInfIter(jule::Ptr<_1aa8b91d1_scopeChecker> _self_, jule::Ptr<_1aa86749d_Iter>* _86437_it) {
	jule::Ptr<_1aa8b33ea_InfIter> _86517_kind = jule::new_ptr<_1aa8b33ea_InfIter>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_86517_kind, &__jule_any_type37));;
	_86517_kind.get()._field_Scope=_1aa8c1260_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_86517_kind)), &((*(_86437_it)).get()._field_Scope));
}



inline void _1aa8c175a_checkWhileIter(jule::Ptr<_1aa8b91d1_scopeChecker> _self_, jule::Ptr<_1aa86749d_Iter>* _87039_it) {
	jule::Ptr<_1aa867c73_WhileKind> _87117_wh = (*(_87039_it)).get()._field_Kind.cast_ptr<_1aa867c73_WhileKind>(&__jule_any_type38);;
	if (((_87117_wh.get()._field_Expr == nullptr) && (_87117_wh.get()._field_Next == nullptr))) {
		_1aa8c14d5_checkInfIter(_self_, _87039_it);
		return;;
	};
	jule::Ptr<_1aa8b386d_WhileIter> _87717_kind = jule::new_ptr<_1aa8b386d_WhileIter>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_87717_kind, &__jule_any_type39));;
	_87717_kind.get()._field_Scope=_1aa8c1260_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_87717_kind)), &((*(_87039_it)).get()._field_Scope));
	if ((_87117_wh.get()._field_Expr != nullptr)) {
		jule::Ptr<_1aa957d85_Data> _88221_d = _1aa974742_evalExpr(_1aa8e3958_eval(_self_.get()._field_s, jule::Trait<_1aa9a0509_Lookup>(_self_, 0)), _87117_wh.get()._field_Expr);;
		if ((_88221_d == nullptr)) {
			return;;
		};
		jule::Ptr<_1aa989339_Prim> _88717_prim = _1aa985c5e_Prim(_88221_d.get()._field_Kind.ptr());;
		if ((_88717_prim == nullptr)) {
			_1aa8dbbb5_pushErr(_self_.get()._field_s.ptr(), (*(_87039_it)).get()._field_Token, jule::Str("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_1aa98c309_IsBool(_88717_prim.ptr())))) {
			_1aa8dbbb5_pushErr(_self_.get()._field_s.ptr(), (*(_87039_it)).get()._field_Token, jule::Str("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		_87717_kind.get()._field_Expr=_88221_d.get()._field_Model;
	};
	if (_1aa8680c5_IsWhileNext(_87117_wh.ptr())) {
		if ((!(_1aa8b1ad0_isValidAstStForNextSt(&(_87117_wh.get()._field_Next))))) {
			_1aa8dbbb5_pushErr(_self_.get()._field_s.ptr(), _87117_wh.get()._field_NextToken, jule::Str("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			return;;
		};
		jule::I64 _90717_n = _self_.get()._field_scope.get()._field_Stmts.len();;
		_1aa8c7dc1_checkNode(_self_, &(_87117_wh.get()._field_Next));
		if ((_90717_n < _self_.get()._field_scope.get()._field_Stmts.len())) {
			jule::Any _91025_st = _self_.get()._field_scope.get()._field_Stmts[_90717_n];;
			_self_.get()._field_scope.get()._field_Stmts=_self_.get()._field_scope.get()._field_Stmts.slice(0LL, _90717_n);
			if ((!(_1aa8b1d77_isValidStForNextSt(&(_91025_st))))) {
				_1aa8dbbb5_pushErr(_self_.get()._field_s.ptr(), _87117_wh.get()._field_NextToken, jule::Str("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			};
			_87717_kind.get()._field_Next=_91025_st;
		};
	};
}



inline void _1aa8c1b23_checkComptimeRangeIter(jule::Ptr<_1aa8b91d1_scopeChecker> _self_, jule::Ptr<_1aa86749d_Iter>* _92047_it, jule::Ptr<_1aa8b4253_RangeIter>* _92063_kind, jule::Ptr<_1aa957d85_Data>* _92086_d) {
	if (((*(_92063_kind)).get()._field_KeyA != nullptr)) {
		if (((!(_1aa8db577_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1aa8bd04d_isDuplicatedIdent(_self_.ptr(), 0LLU, (*(_92063_kind)).get()._field_KeyA.get()._field_Ident))) {
			_1aa8dbbb5_pushErr(_self_.get()._field_s.ptr(), (*(_92063_kind)).get()._field_KeyA.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_92063_kind)).get()._field_KeyA.get()._field_Ident, &__jule_any_type5)}));
			_1aa8dbed4_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
	};
	if (((*(_92063_kind)).get()._field_KeyB != nullptr)) {
		if (((!(_1aa8db577_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1aa8bd04d_isDuplicatedIdent(_self_.ptr(), 0LLU, (*(_92063_kind)).get()._field_KeyB.get()._field_Ident))) {
			_1aa8dbbb5_pushErr(_self_.get()._field_s.ptr(), (*(_92063_kind)).get()._field_KeyB.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_92063_kind)).get()._field_KeyB.get()._field_Ident, &__jule_any_type5)}));
			_1aa8dbed4_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
	};
	jule::Ptr<_1aa8a262b_comptimeRange> _93417_comptime = _1aa98839e_comptimeRange((*(_92086_d)).get()._field_Kind.ptr());;
	_1aa8a2450_comptimeRangeKind_mptr_data[(_93417_comptime.get()._field_kind).type_offset]._1aa8a1bd0_ready(_93417_comptime.get()._field_kind, (*(_92063_kind)).get()._field_KeyA, (*(_92063_kind)).get()._field_KeyB);
	jule::I64 _93617_i = 0LL;;
	jule::I64 _93713_errors = _self_.get()._field_s.get()._field_errors.len();;
	for (; (_93617_i < _1aa8a2450_comptimeRangeKind_mptr_data[(_93417_comptime.get()._field_kind).type_offset]._1aa8a230c_len(_93417_comptime.get()._field_kind)); (_93617_i)++) {
		{
			jule::Ptr<_1aa8b91d1_scopeChecker> _93921_ssc = _1aa8c9389_newChildChecker(_self_);;
			jule::Ptr<_1aa8b25a3_Scope> _94021_scope = _1aa8bd7ac_getChild(_self_.ptr());;
			if (((*(_92063_kind)).get()._field_KeyA != nullptr)) {
				(*(_92063_kind)).get()._field_KeyA.get()._field_Scope=_94021_scope;
				_93921_ssc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_93921_ssc.get()._field_table.get()._field_Vars,1);_93921_ssc.get()._field_table.get()._field_Vars.__push((*(_92063_kind)).get()._field_KeyA);;
			};
			if (((*(_92063_kind)).get()._field_KeyB != nullptr)) {
				(*(_92063_kind)).get()._field_KeyB.get()._field_Scope=_94021_scope;
				_93921_ssc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_93921_ssc.get()._field_table.get()._field_Vars,1);_93921_ssc.get()._field_table.get()._field_Vars.__push((*(_92063_kind)).get()._field_KeyB);;
			};
			_1aa8a2450_comptimeRangeKind_mptr_data[(_93417_comptime.get()._field_kind).type_offset]._1aa8a2098_step(_93417_comptime.get()._field_kind, _93617_i, (*(_92063_kind)).get()._field_KeyA, (*(_92063_kind)).get()._field_KeyB);
			_1aa8bdb75_checkChildSsc(_self_, &((*(_92047_it)).get()._field_Scope), &(_94021_scope), &(_93921_ssc));
			if ((_93713_errors != _self_.get()._field_s.get()._field_errors.len())) {
				goto _iter_end_1ad23a049;
			};
			_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_94021_scope, &__jule_any_type22));;
		}
	_iter_next_1ad23a049:;
	}
	_iter_end_1ad23a049:;;
}



inline void _1aa8c1d98_checkRangeIter(jule::Ptr<_1aa8b91d1_scopeChecker> _self_, jule::Ptr<_1aa86749d_Iter>* _95939_it) {
	jule::Ptr<_1aa868614_RangeKind> _96017_rang = (*(_95939_it)).get()._field_Kind.cast_ptr<_1aa868614_RangeKind>(&__jule_any_type40);;
	jule::Ptr<_1aa957d85_Data> _96217_d = _1aa974126_evalExprKind(_1aa8e3958_eval(_self_.get()._field_s, jule::Trait<_1aa9a0509_Lookup>(_self_, 0)), _96017_rang.get()._field_Expr.get()._field_Kind);;
	if ((_96217_d == nullptr)) {
		return;;
	};
	jule::Ptr<_1aa8b4253_RangeIter> _96717_kind = jule::new_ptr<_1aa8b4253_RangeIter>(_1aa8b4253_RangeIter{._field_Expr=_96217_d, });;
	_1aa9491a6_rangeChecker _97117_rc = _1aa9491a6_rangeChecker{._field_sc=_self_, ._field_rang=_96017_rang, ._field_Kind=_96717_kind, ._field_d=_96217_d};;
	jule::Bool _97713_ok = _1aa94b0a9_check(&_97117_rc);;
	if ((!(_97713_ok))) {
		return;;
	};
	jule::Ptr<_1aa8a262b_comptimeRange> _98217_comptimeRange = _1aa98839e_comptimeRange(_96217_d.get()._field_Kind.ptr());;
	if ((_98217_comptimeRange != nullptr)) {
		_1aa8c1b23_checkComptimeRangeIter(_self_, _95939_it, &(_96717_kind), &(_96217_d));
		return;;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_96717_kind, &__jule_any_type41));;
	jule::Ptr<_1aa8b91d1_scopeChecker> _99017_ssc = _1aa8c9389_newChildChecker(_self_);;
	jule::Ptr<_1aa8b25a3_Scope> _99117_scope = _1aa8bd7ac_getChild(_self_.ptr());;
	if ((_96717_kind.get()._field_KeyA != nullptr)) {
		if (((!(_1aa8db577_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1aa8bd04d_isDuplicatedIdent(_self_.ptr(), 0LLU, _96717_kind.get()._field_KeyA.get()._field_Ident))) {
			_1aa8dbbb5_pushErr(_self_.get()._field_s.ptr(), _96717_kind.get()._field_KeyA.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_96717_kind.get()._field_KeyA.get()._field_Ident, &__jule_any_type5)}));
			_1aa8dbed4_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		_96717_kind.get()._field_KeyA.get()._field_Scope=_99117_scope;
		_99017_ssc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_99017_ssc.get()._field_table.get()._field_Vars,1);_99017_ssc.get()._field_table.get()._field_Vars.__push(_96717_kind.get()._field_KeyA);;
	};
	if ((_96717_kind.get()._field_KeyB != nullptr)) {
		if (((!(_1aa8db577_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1aa8bd04d_isDuplicatedIdent(_self_.ptr(), 0LLU, _96717_kind.get()._field_KeyB.get()._field_Ident))) {
			_1aa8dbbb5_pushErr(_self_.get()._field_s.ptr(), _96717_kind.get()._field_KeyB.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_96717_kind.get()._field_KeyB.get()._field_Ident, &__jule_any_type5)}));
			_1aa8dbed4_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		_96717_kind.get()._field_KeyB.get()._field_Scope=_99117_scope;
		_99017_ssc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_99017_ssc.get()._field_table.get()._field_Vars,1);_99017_ssc.get()._field_table.get()._field_Vars.__push(_96717_kind.get()._field_KeyB);;
	};
	_1aa8c0957_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_96717_kind)), (*(_95939_it)).get()._field_Scope, &(_99117_scope), _99017_ssc);
	_96717_kind.get()._field_Scope=_99117_scope;
}



inline void _1aa8c211d_checkIter(jule::Ptr<_1aa8b91d1_scopeChecker> _self_, jule::Ptr<_1aa86749d_Iter> _101533_it) {
	if (_1aa867800_IsInf(_101533_it.ptr())) {
		_1aa8c14d5_checkInfIter(_self_, &(_101533_it));
		return;;
	};
	{
		auto &_match_expr{ _101533_it.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1ad24aa1b:;
			{
				_1aa8c175a_checkWhileIter(_self_, &(_101533_it));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1ad24b698:;
			{
				_1aa8c1d98_checkRangeIter(_self_, &(_101533_it));
			}
		}
		else {
			_case_begin_1ad24a8ea:;
			{
				jule::outln(jule::Str("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_1ad24a895:;
	};
}



inline jule::Bool _1aa8c242b_checkValidContLabel(jule::Ptr<_1aa8b91d1_scopeChecker> _self_, jule::Uintptr _103139_it) {
	jule::Ptr<_1aa8b91d1_scopeChecker> _103217_scope = _self_;;
	_julec_label_iter:;
	if ((_103217_scope.get()._field_it == _103139_it)) {
		return true;;
	};
	if ((_103217_scope.get()._field_parent != nullptr)) {
		_103217_scope=_103217_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Bool _1aa8c2739_checkValidBreakLabel(jule::Ptr<_1aa8b91d1_scopeChecker> _self_, jule::Uintptr _104740_ptr) {
	jule::Ptr<_1aa8b91d1_scopeChecker> _104817_scope = _self_;;
	_julec_label_iter:;
	if ((_104817_scope.get()._field_it == _104740_ptr)) {
		return true;;
	};
	if ((_104817_scope.get()._field_cse != 0LLU)) {
		jule::Uintptr _105617_mtch = static_cast<jule::Uintptr>(((_1aa8b6e15_Case*)(_104817_scope.get()._field_cse))->_field_Owner);;
		if ((_105617_mtch == _104740_ptr)) {
			return true;;
		};
	};
	if ((_104817_scope.get()._field_parent != nullptr)) {
		_104817_scope=_104817_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Ptr<_1aa8b464e_ContSt> _1aa8c2a47_checkContValidScope(jule::Ptr<_1aa8b91d1_scopeChecker> _self_, jule::Ptr<_1aa868d73_ContSt> _107039_c) {
	if (_1aa8bbc94_isDeferred(_self_)) {
		_1aa8dbbb5_pushErr(_self_.get()._field_s.ptr(), _107039_c.get()._field_Token, jule::Str("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_107039_c.get()._field_Label != nullptr)) {
		return jule::new_ptr<_1aa8b464e_ContSt>();;
	};
	jule::Ptr<_1aa8b91d1_scopeChecker> _108017_scope = _self_;;
	_julec_label_iter:;
	{
		
		if ((((_108017_scope.get()._field_it == 0LLU) && (_108017_scope.get()._field_parent != nullptr)) && (_108017_scope.get()._field_owner == nullptr))) {
			_case_begin_1ad2537c1:;
			{
				_108017_scope=_108017_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_108017_scope.get()._field_it != 0LLU)) {
			_case_begin_1ad253848:;
			{
				return jule::new_ptr<_1aa8b464e_ContSt>(_1aa8b464e_ContSt{._field_It=_108017_scope.get()._field_it});;
			}
		}
		_match_end_1ad253716:;
	};
	_1aa8dbbb5_pushErr(_self_.get()._field_s.ptr(), _107039_c.get()._field_Token, jule::Str("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1aa8c2cbc_checkCont(jule::Ptr<_1aa8b91d1_scopeChecker> _self_, jule::Ptr<_1aa868d73_ContSt> _109429_c) {
	jule::Ptr<_1aa8b464e_ContSt> _109517_cont = _1aa8c2a47_checkContValidScope(_self_, _109429_c);;
	if ((_109517_cont == nullptr)) {
		return;;
	};
	if ((_109429_c.get()._field_Label != nullptr)) {
		jule::Ptr<_1aa8b7e49_scopeLabel> _110121_label = _1aa8aeca9_findLabelParent(_109429_c.get()._field_Label.get()._field_Kind, _self_.get()._field_parent);;
		if ((_110121_label == nullptr)) {
			_1aa8dbbb5_pushErr(_self_.get()._field_s.ptr(), _109429_c.get()._field_Label, jule::Str("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any(_109429_c.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
			return;;
		};
		_110121_label.get()._field_used=true;
		if (((_110121_label.get()._field_pos + 1LL) >= _110121_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
			_1aa8dbbb5_pushErr(_self_.get()._field_s.ptr(), _109429_c.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_109429_c.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
			return;;
		};
		jule::I64 _111417_i = (_110121_label.get()._field_pos + 1LL);;
		if ((_111417_i >= _110121_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
			_1aa8dbbb5_pushErr(_self_.get()._field_s.ptr(), _109429_c.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>());
		} else {
			jule::Any _111825_st = _110121_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_111417_i];;
			{
				auto &_match_expr{ _111825_st };
				
				if (_match_expr.type == &__jule_any_type37) {
					_case_begin_1ad25a50e:;
					{
						_109517_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_111825_st.cast_ptr<_1aa8b33ea_InfIter>(&__jule_any_type37)));
					}
				}
				else if (_match_expr.type == &__jule_any_type41) {
					_case_begin_1ad25bdb2:;
					{
						_109517_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_111825_st.cast_ptr<_1aa8b4253_RangeIter>(&__jule_any_type41)));
					}
				}
				else if (_match_expr.type == &__jule_any_type39) {
					_case_begin_1ad25be28:;
					{
						_109517_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_111825_st.cast_ptr<_1aa8b386d_WhileIter>(&__jule_any_type39)));
					}
				}
				else {
					_case_begin_1ad25bc3b:;
					{
						_1aa8dbbb5_pushErr(_self_.get()._field_s.ptr(), _109429_c.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_109429_c.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
					}
				}
				_match_end_1ad25bbd6:;
			};
		};
	};
	if ((_109517_cont.get()._field_It != 0LLU)) {
		if ((!(_1aa8c242b_checkValidContLabel(_self_, _109517_cont.get()._field_It)))) {
			_1aa8dbbb5_pushErr(_self_.get()._field_s.ptr(), _109429_c.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_109429_c.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		};
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_109517_cont, &__jule_any_type42));;
}



inline void _1aa8c3042_checkLabel(jule::Ptr<_1aa8b91d1_scopeChecker> _self_, jule::Ptr<_1aa8616c8_LabelSt> _114134_l) {
	if ((_1aa8bc57a_findLabel(_self_.ptr(), _114134_l.get()._field_Ident) != nullptr)) {
		_1aa8dbbb5_pushErr(_self_.get()._field_s.ptr(), _114134_l.get()._field_Token, jule::Str("label is already exist in this identifier: @", 44), jule::Slice<jule::Any>::make({jule::Any(_114134_l.get()._field_Ident, &__jule_any_type5)}));
		return;;
	};
	jule::Ptr<_1aa8b4ce2_Label> _114717_label = jule::new_ptr<_1aa8b4ce2_Label>(_1aa8b4ce2_Label{._field_Ident=_114134_l.get()._field_Ident});;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_114717_label, &__jule_any_type21));;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_1aa8b7e49_scopeLabel>>::make({jule::new_ptr<_1aa8b7e49_scopeLabel>(_1aa8b7e49_scopeLabel{._field_token=_114134_l.get()._field_Token, ._field_label=_114717_label, ._field_pos=static_cast<jule::I64>((_self_.get()._field_scope.get()._field_Stmts.len() - 1LL)), ._field_scope=_self_, })}));
}



inline void _1aa8c32b7_pushGoto(jule::Ptr<_1aa8b91d1_scopeChecker> _self_, jule::Ptr<_1aa861a80_GotoSt> _116032_gt) {
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(jule::new_ptr<_1aa8b50cd_GotoSt>(_1aa8b50cd_GotoSt{._field_Ident=_116032_gt.get()._field_Label.get()._field_Kind}), &__jule_any_type43));;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_1aa8b83bc_scopeGoto>>::make({jule::new_ptr<_1aa8b83bc_scopeGoto>(_1aa8b83bc_scopeGoto{._field_gt=_116032_gt, ._field_scope=_self_, ._field_pos=static_cast<jule::I64>((_self_.get()._field_scope.get()._field_Stmts.len() - 1LL))})}));
}



inline void _1aa8c353c_checkPostfix(jule::Ptr<_1aa8b91d1_scopeChecker> _self_, jule::Ptr<_1aa8629b5_AssignSt> _117236_a) {
	if ((_117236_a.get()._field_Left.len() > 1LL)) {
		_1aa8dbbb5_pushErr(_self_.get()._field_s.ptr(), _117236_a.get()._field_Setter, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1aa858549_Expr> _117817_expr = _117236_a.get()._field_Left[0LL].get()._field_Expr;;
	jule::Ptr<_1aa957d85_Data> _117917_d = _1aa974742_evalExpr(_1aa8e3958_eval(_self_.get()._field_s, jule::Trait<_1aa9a0509_Lookup>(_self_, 0)), _117817_expr);;
	if ((_117917_d == nullptr)) {
		return;;
	};
	_1aa8b1838_checkAssign(&(_self_.get()._field_s), &(_117917_d), nullptr, _117236_a.get()._field_Setter);
	if ((_1aa986237_Ptr(_117917_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1aa991132_Ptr> _118721_ptr = _1aa986237_Ptr(_117917_d.get()._field_Kind.ptr());;
		if (_1aa991b05_IsUnsafe(_118721_ptr.ptr())) {
			_1aa8dbbb5_pushErr(_self_.get()._field_s.ptr(), _117236_a.get()._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any(_117236_a.get()._field_Setter.get()._field_Kind, &__jule_any_type5),jule::Any(_1aa983c6d_Str(_117917_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
			return;;
		};
	} else {
		if (((_1aa985c5e_Prim(_117917_d.get()._field_Kind.ptr()) == nullptr) || (!(_1c0901698_IsNum(_1aa985c5e_Prim(_117917_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_1aa8dbbb5_pushErr(_self_.get()._field_s.ptr(), _117236_a.get()._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any(_117236_a.get()._field_Setter.get()._field_Kind, &__jule_any_type5),jule::Any(_1aa983c6d_Str(_117917_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
			return;;
		};
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(jule::new_ptr<_1aa8b5485_Postfix>(_1aa8b5485_Postfix{._field_Expr=_117917_d.get()._field_Model, ._field_Op=_117236_a.get()._field_Setter.get()._field_Kind}), &__jule_any_type44));;
}



inline jule::Bool _1aa8c384a_isNewAssignIdent(_1aa8b91d1_scopeChecker* _self_, jule::Str _120535_ident) {
	if ((_1db9475a2_IsIgnoreIdent(_120535_ident) || _120535_ident.empty())) {
		return false;;
	};
	return (_1aa95129b_defByIdent((*(_self_))._field_table.ptr(), _120535_ident, false) == nullptr);;
}



inline jule::Bool _1aa8c3c9b_checkStructureAssignOp(jule::Ptr<_1aa8b91d1_scopeChecker> _self_, jule::Ptr<_1aa876dd6_StructIns>* _121247_s, jule::Ptr<_1aa8629b5_AssignSt>* _121267_a, jule::Ptr<_1aa957d85_Data>* _121286_r) {
	jule::Ptr<_1aa88c0c7_FnIns> _121517_overload = nullptr;;
	{
		auto &_match_expr{ (*(_121267_a)).get()._field_Setter.get()._field_Kind };
		
		if (_match_expr == jule::Str("+=", 2)) {
			_case_begin_1ad26dc4d:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_AddAssign;
			}
		}
		else if (_match_expr == jule::Str("-=", 2)) {
			_case_begin_1ad2700b2:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_SubAssign;
			}
		}
		else if (_match_expr == jule::Str("/=", 2)) {
			_case_begin_1ad270128:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_DivAssign;
			}
		}
		else if (_match_expr == jule::Str("*=", 2)) {
			_case_begin_1ad27018e:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_MulAssign;
			}
		}
		else if (_match_expr == jule::Str("%=", 2)) {
			_case_begin_1ad26e18d:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_ModAssign;
			}
		}
		else if (_match_expr == jule::Str("<<=", 3)) {
			_case_begin_1ad26e204:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_ShlAssign;
			}
		}
		else if (_match_expr == jule::Str(">>=", 3)) {
			_case_begin_1ad26e26a:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_ShrAssign;
			}
		}
		else if (_match_expr == jule::Str("|=", 2)) {
			_case_begin_1ad26e2d1:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_BitOrAssign;
			}
		}
		else if (_match_expr == jule::Str("&=", 2)) {
			_case_begin_1ad27037b:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_BitAndAssign;
			}
		}
		else if (_match_expr == jule::Str("^=", 2)) {
			_case_begin_1ad2703e2:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_BitXorAssign;
			}
		}
		else {
			_case_begin_1ad26e127:;
			{
				_1aa8dbbb5_pushErr(_self_.get()._field_s.ptr(), (*(_121267_a)).get()._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_121267_a)).get()._field_Setter.get()._field_Kind, &__jule_any_type5),jule::Any(_1aa87728d_Str((*(_121247_s)).ptr()), &__jule_any_type5)}));
				return false;;
			}
		}
		_match_end_1ad26da94:;
	};
	if ((_121517_overload == nullptr)) {
		_1aa8dbbb5_pushErr(_self_.get()._field_s.ptr(), (*(_121267_a)).get()._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_121267_a)).get()._field_Setter.get()._field_Kind, &__jule_any_type5),jule::Any(_1aa87728d_Str((*(_121247_s)).ptr()), &__jule_any_type5)}));
		return false;;
	};
	jule::Ptr<_1aa88b208_ParamIns> _124717_p = _121517_overload.get()._field_Params[1LL];;
	return _1aa8e3e53_checkAssignType(_self_.get()._field_s, _124717_p.get()._field_Decl.get()._field_Reference, &(_124717_p.get()._field_Kind), _121286_r, (*(_121267_a)).get()._field_Setter);;
}



inline void _1aa8c4021_checkSingleAssign(jule::Ptr<_1aa8b91d1_scopeChecker> _self_, jule::Ptr<_1aa8629b5_AssignSt>* _125142_a) {
	jule::Ptr<_1aa957d85_Data> _125217_l = nullptr;;
	if ((!(_1db9475a2_IsIgnoreIdent((*(_125142_a)).get()._field_Left[0LL].get()._field_Ident)))) {
		jule::Ptr<_1aa858549_Expr> _125521_expr = (*(_125142_a)).get()._field_Left[0LL].get()._field_Expr;;
		_125217_l=_1aa974742_evalExpr(_1aa8e3958_eval(_self_.get()._field_s, jule::Trait<_1aa9a0509_Lookup>(_self_, 0)), _125521_expr);
		if ((_125217_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1aa959903_Eval> _126217_eval = nullptr;;
	if ((_125217_l != nullptr)) {
		_126217_eval=_1aa8e364a_evalp(_self_.get()._field_s, jule::Trait<_1aa9a0509_Lookup>(_self_, 0), _125217_l.get()._field_Kind);
	} else {
		_126217_eval=_1aa8e3958_eval(_self_.get()._field_s, jule::Trait<_1aa9a0509_Lookup>(_self_, 0));
	};
	_126217_eval.get()._field_unsafety=_1aa8bb37b_isUnsafe(_self_);
	jule::Ptr<_1aa957d85_Data> _126917_r = _1aa974742_evalExpr(_126217_eval, (*(_125142_a)).get()._field_Right);;
	if ((_126917_r == nullptr)) {
		return;;
	};
	if ((_125217_l == nullptr)) {
		if (_1aa984a71_Void(_126917_r.get()._field_Kind.ptr())) {
			_1aa8dbbb5_pushErr(_self_.get()._field_s.ptr(), (*(_125142_a)).get()._field_Right.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		};
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_126917_r, &__jule_any_type24));;
		return;;
	};
	if ((!(_1aa8b1838_checkAssign(&(_self_.get()._field_s), &(_125217_l), _126917_r, (*(_125142_a)).get()._field_Setter)))) {
		return;;
	};
	if ((_1aa9878ed_Tup(_126917_r.get()._field_Kind.ptr()) != nullptr)) {
		_1aa8dbbb5_pushErr(_self_.get()._field_s.ptr(), (*(_125142_a)).get()._field_Setter, jule::Str("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1aa87acdb_OperandExprModel> _129117_lm = jule::new_ptr<_1aa87acdb_OperandExprModel>(_1aa87acdb_OperandExprModel{._field_Kind=_125217_l.get()._field_Kind, ._field_Model=_125217_l.get()._field_Model});;
	jule::Ptr<_1aa87acdb_OperandExprModel> _129517_rm = jule::new_ptr<_1aa87acdb_OperandExprModel>(_1aa87acdb_OperandExprModel{._field_Kind=_126917_r.get()._field_Kind, ._field_Model=_126917_r.get()._field_Model});;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(jule::new_ptr<_1aa8b5908_Assign>(_1aa8b5908_Assign{._field_L=_129117_lm, ._field_R=_129517_rm, ._field_Op=(*(_125142_a)).get()._field_Setter}), &__jule_any_type45));;
	if ((!(*(_125142_a)).get()._field_Setter.get()._field_Kind.equal("=", 1))) {
		jule::Ptr<_1aa876dd6_StructIns> _130221_strct = _1aa9871b1_Struct(_125217_l.get()._field_Kind.ptr());;
		if ((_130221_strct != nullptr)) {
			_1aa8c3c9b_checkStructureAssignOp(_self_, &(_130221_strct), _125142_a, &(_126917_r));
			return;;
		};
		(*(_125142_a)).get()._field_Setter.get()._field_Kind=(*(_125142_a)).get()._field_Setter.get()._field_Kind.slice(0LL, ((*(_125142_a)).get()._field_Setter.get()._field_Kind.len() - 1LL));
		_1aa976953_binaryEval _130921_solver = static__1aa97736b_new(_126217_eval, (*(_125142_a)).get()._field_Setter);;
		_126917_r=_1aa97c1c8_solveExplicit(&_130921_solver, &(_125217_l), &(_126917_r));
		if ((_126917_r == nullptr)) {
			return;;
		};
		((*(_125142_a)).get()._field_Setter.get()._field_Kind).append("=", 1);
		return;;
	};
	_1aa93d81b_assignTypeChecker _131817_checker = _1aa93d81b_assignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_125217_l.get()._field_Kind, ._field_d=_126917_r, ._field_errorToken=(*(_125142_a)).get()._field_Setter};;
	if (_1aa93e993_check(&_131817_checker)) {
		_129517_rm.get()._field_Model=_126917_r.get()._field_Model;
		_129117_lm.get()._field_Model=_125217_l.get()._field_Model;
	};
}



inline void _1aa8c454e_processEndPartOfMultiAssign(_1aa8b91d1_scopeChecker* _self_, jule::Ptr<_1aa8b5cb0_MultiAssign>* _133051_st, jule::Ptr<_1aa8629b5_AssignSt>* _133114_a, jule::Ptr<_1aa862476_AssignLeft>* _133133_lexpr, jule::Ptr<_1aa957d85_Data>* _133158_l, jule::Ptr<_1aa957d85_Data>* _133173_r) {
	if (((!((*(_133133_lexpr)).get()._field_Reference)) && _1db9475a2_IsIgnoreIdent((*(_133133_lexpr)).get()._field_Ident))) {
		if (_1aa984a71_Void((*(_133173_r)).get()._field_Kind.ptr())) {
			_1aa8dbbb5_pushErr((*(_self_))._field_s.ptr(), (*(_133114_a)).get()._field_Right.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		};
		(*(_133051_st)).get()._field_L = jule::alloc_for_append((*(_133051_st)).get()._field_L,1);(*(_133051_st)).get()._field_L.__push(nullptr);;
		return;;
	};
	if (((*(_133114_a)).get()._field_Declarative && ((*(_133133_lexpr)).get()._field_Reference || _1aa8c384a_isNewAssignIdent(_self_, (*(_133133_lexpr)).get()._field_Ident)))) {
		if (_1aa8bd04d_isDuplicatedIdent(_self_, 0LLU, (*(_133133_lexpr)).get()._field_Ident)) {
			_1aa8dbbb5_pushErr((*(_self_))._field_s.ptr(), (*(_133133_lexpr)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_133133_lexpr)).get()._field_Ident, &__jule_any_type5)}));
			_1aa8dbed4_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
			_1aa8bb7bb_stop(_self_);
			return;;
		};
		if (_1db9475a2_IsIgnoreIdent((*(_133133_lexpr)).get()._field_Ident)) {
			_1aa8dbbb5_pushErr((*(_self_))._field_s.ptr(), (*(_133133_lexpr)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1aa908c59_Var> _135221_v = jule::new_ptr<_1aa908c59_Var>(_1aa908c59_Var{._field_Scope=(*(_self_))._field_scope, ._field_Token=(*(_133133_lexpr)).get()._field_Token, ._field_Ident=(*(_133133_lexpr)).get()._field_Ident, ._field_Mutable=(*(_133133_lexpr)).get()._field_Mutable, ._field_Reference=(*(_133133_lexpr)).get()._field_Reference, ._field_Value=jule::new_ptr<_1aa958e0d_Value>(_1aa958e0d_Value{._field_Expr=(*(_133114_a)).get()._field_Right, ._field_Data=(*(_133173_r))}), });;
		_1aa900d72_checkVar((*(_self_))._field_s, &(_135221_v));
		_135221_v.get()._field_Value=nullptr;
		(*(_133051_st)).get()._field_L = jule::alloc_for_append((*(_133051_st)).get()._field_L,1);(*(_133051_st)).get()._field_L.__push(jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=_135221_v.get()._field_Kind.get()._field_Kind, ._field_Mutable=_135221_v.get()._field_Mutable, ._field_Reference=_135221_v.get()._field_Reference, ._field_Lvalue=(!(_135221_v.get()._field_Constant)), ._field_Model=jule::Any(_135221_v, &__jule_any_type8), }));;
		(*(_self_))._field_table.get()._field_Vars = jule::alloc_for_append((*(_self_))._field_table.get()._field_Vars,1);(*(_self_))._field_table.get()._field_Vars.__push(_135221_v);;
		(*(_self_))._field_scope.get()._field_Stmts = jule::alloc_for_append((*(_self_))._field_scope.get()._field_Stmts,1);(*(_self_))._field_scope.get()._field_Stmts.__push(jule::Any(_135221_v, &__jule_any_type8));;
		return;;
	};
	if (((*(_133133_lexpr)).get()._field_Mutable || (*(_133133_lexpr)).get()._field_Reference)) {
		_1aa8dbbb5_pushErr((*(_self_))._field_s.ptr(), (*(_133133_lexpr)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_133133_lexpr)).get()._field_Ident, &__jule_any_type5)}));
		_1aa8dbed4_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if ((!(_1aa8b1838_checkAssign(&((*(_self_))._field_s), _133158_l, (*(_133173_r)), (*(_133114_a)).get()._field_Setter)))) {
		return;;
	};
	;
	_1aa8e6d68_checkValidityForInitExpr((*(_self_))._field_s, (*(_133158_l)).get()._field_Mutable, false, &((*(_133158_l)).get()._field_Kind), _133173_r, &((*(_133114_a)).get()._field_Setter));
	_1aa93d81b_assignTypeChecker _139517_checker = _1aa93d81b_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_133158_l)).get()._field_Kind, ._field_d=(*(_133173_r)), ._field_errorToken=(*(_133114_a)).get()._field_Setter};;
	_1aa93e993_check(&_139517_checker);
	(*(_133051_st)).get()._field_L = jule::alloc_for_append((*(_133051_st)).get()._field_L,1);(*(_133051_st)).get()._field_L.__push((*(_133158_l)));;
}



inline void _1aa8c47d5_checkMultiAssign(jule::Ptr<_1aa8b91d1_scopeChecker> _self_, jule::Ptr<_1aa8629b5_AssignSt>* _140541_a) {
	jule::Ptr<_1aa957d85_Data> _140617_rd = _1aa974742_evalExpr(_1aa8e3958_eval(_self_.get()._field_s, jule::Trait<_1aa9a0509_Lookup>(_self_, 0)), (*(_140541_a)).get()._field_Right);;
	if ((_140617_rd == nullptr)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1aa957d85_Data>> _141017_right = _1aa8b0a68_getDatasFromTupleData(&(_140617_rd));;
	if ((_141017_right.len() == 1LL)) {
		{
			auto &_match_expr{ _141017_right[0LL].get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type46) {
				_case_begin_1ad290e5c:;
				{
					jule::Ptr<_1aa87d948_IndexingExprModel> _141425_iem = _141017_right[0LL].get()._field_Model.cast_ptr<_1aa87d948_IndexingExprModel>(&__jule_any_type46);;
					if ((_1aa987689_Map(_141425_iem.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
						_141017_right=jule::Slice<jule::Ptr<_1aa957d85_Data>>::make({jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=_1aa987689_Map(_141425_iem.get()._field_Expr.get()._field_Kind.ptr()).get()._field_Val, }),jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("bool", 4)), 10)}), })});
					};
				}
			}
			_match_end_1ad290e07:;
		};
	};
	{
		
		if (((*(_140541_a)).get()._field_Left.len() > _141017_right.len())) {
			_case_begin_1ad2912ae:;
			{
				_1aa8dbbb5_pushErr(_self_.get()._field_s.ptr(), (*(_140541_a)).get()._field_Setter, jule::Str("overflow multi assignment identifers", 36), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (((*(_140541_a)).get()._field_Left.len() < _141017_right.len())) {
			_case_begin_1ad291325:;
			{
				_1aa8dbbb5_pushErr(_self_.get()._field_s.ptr(), (*(_140541_a)).get()._field_Setter, jule::Str("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1ad29315c:;
	};
	jule::Ptr<_1aa8b5cb0_MultiAssign> _143317_st = jule::new_ptr<_1aa8b5cb0_MultiAssign>(_1aa8b5cb0_MultiAssign{._field_R=_140617_rd.get()._field_Model});;
	{
		auto expr = &((*(_140541_a)).get()._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad2955c1:;
		if (it != expr_end) {
			jule::I64 _143613_i = it - expr->begin();
			{
				jule::Ptr<_1aa862476_AssignLeft> _143721_lexpr = (*(_140541_a)).get()._field_Left[_143613_i];;
				jule::Ptr<_1aa957d85_Data> _143821_l = nullptr;;
				if (((!(_1db9475a2_IsIgnoreIdent(_143721_lexpr.get()._field_Ident))) && ((!((*(_140541_a)).get()._field_Declarative)) || (!(_1aa8c384a_isNewAssignIdent(_self_.ptr(), _143721_lexpr.get()._field_Ident)))))) {
					_143821_l=_1aa974742_evalExpr(_1aa8e3958_eval(_self_.get()._field_s, jule::Trait<_1aa9a0509_Lookup>(_self_, 0)), _143721_lexpr.get()._field_Expr);
					if ((_143821_l == nullptr)) {
						goto _iter_next_1ad2955c1;
					};
				};
				jule::Ptr<_1aa957d85_Data> _144621_r = _141017_right[_143613_i];;
				_1aa8c454e_processEndPartOfMultiAssign(_self_.ptr(), &(_143317_st), _140541_a, &(_143721_lexpr), &(_143821_l), &(_144621_r));
			}
			_iter_next_1ad2955c1:;
			++it;
			_143613_i++;
			goto _iter_begin_1ad2955c1;
		}
		_iter_end_1ad2955c1:;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_143317_st, &__jule_any_type47));;
}



inline void _1aa8c4a5a_checkAssignSt(jule::Ptr<_1aa8b91d1_scopeChecker> _self_, jule::Ptr<_1aa8629b5_AssignSt> _145237_a) {
	{
		
		if (_1db94964d_IsPostfixOp(_145237_a.get()._field_Setter.get()._field_Kind)) {
			_case_begin_1ad29966e:;
			{
				_1aa8c353c_checkPostfix(_self_, _145237_a);
			}
		}
		else if (((_145237_a.get()._field_Left.len() == 1LL) && (!(_145237_a.get()._field_Declarative)))) {
			_case_begin_1ad299372:;
			{
				_1aa8c4021_checkSingleAssign(_self_, &(_145237_a));
			}
		}
		else {
			_case_begin_1ad298c89:;
			{
				_1aa8c47d5_checkMultiAssign(_self_, &(_145237_a));
			}
		}
		_match_end_1ad298bbd:;
	};
}



inline jule::Ptr<_1aa8b25a3_Scope> _1aa8c4e12_checkCaseScope(jule::Ptr<_1aa8b91d1_scopeChecker> _self_, jule::Ptr<_1aa8b6e15_Case>* _146335_c, jule::Ptr<_1aa863eb1_ScopeTree>* _146350_tree) {
	jule::Ptr<_1aa8b91d1_scopeChecker> _146417_ssc = _1aa8c9389_newChildChecker(_self_);;
	_146417_ssc.get()._field_cse=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_146335_c))));
	return _1aa8be02c_checkChildSc(_self_, _146350_tree, &(_146417_ssc));;
}



inline jule::Ptr<_1aa8b6e15_Case> _1aa8c540c_checkCase(jule::Ptr<_1aa8b91d1_scopeChecker> _self_, jule::Ptr<_1aa8b63ba_Match> _146933_m, jule::I64 _146944_i, jule::Ptr<_1aa86a76a_Case> _146956_c, jule::Ptr<_1aa957d85_Data> _146975_expr) {
	jule::Ptr<_1aa8b6e15_Case> _147017_case = _146933_m.get()._field_Cases[_146944_i];;
	_147017_case.get()._field_Exprs=jule::Slice<jule::Ptr<_1aa957d85_Data>>::alloc(0LL, _146956_c.get()._field_Exprs.len());
	jule::Bool _147217_constMatched = false;;
	jule::Ptr<_1aa959903_Eval> _147317_eval = _1aa8e3958_eval(_self_.get()._field_s, jule::Trait<_1aa9a0509_Lookup>(_self_, 0));;
	{
		auto expr = &(_146956_c.get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad29e135:;
		if (it != expr_end) {
			jule::Ptr<_1aa858549_Expr> _147421_e = *it;
			{
				jule::Ptr<_1aa957d85_Data> _147521_d = _1aa974126_evalExprKind(_147317_eval, _147421_e.get()._field_Kind);;
				if ((_147521_d == nullptr)) {
					goto _iter_next_1ad29e135;
				};
				if (_146933_m.get()._field_TypeMatch) {
					_147017_case.get()._field_Exprs = jule::alloc_for_append(_147017_case.get()._field_Exprs,1);_147017_case.get()._field_Exprs.__push(_147521_d);;
					if ((_1aa8b07c1_countMatchType(&(_146933_m), &(_147521_d.get()._field_Kind)) > 1LL)) {
						_1aa8dbbb5_pushErr(_self_.get()._field_s.ptr(), _147421_e.get()._field_Token, jule::Str("duplicated pattern: type @ is already matched", 45), jule::Slice<jule::Any>::make({jule::Any(_1aa983c6d_Str(_147521_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
					};
					if (_146975_expr.get()._field_Kind.get()._field_Generic) {
						_147217_constMatched=(_147217_constMatched || _1aa98407b_Equal(_146975_expr.get()._field_Kind, _147521_d.get()._field_Kind));
					} else {
						if ((_1aa986710_TypeEnum(_146975_expr.get()._field_Kind.ptr()) != nullptr)) {
							_1aa8e43a4_checkTypeCompatibility(_self_.get()._field_s, &(_146975_expr.get()._field_Kind), &(_147521_d.get()._field_Kind), &(_147421_e.get()._field_Token));
						} else {
							jule::Ptr<_1aa89b647_Trait> _149029_trt = _1aa987425_Trait(_146975_expr.get()._field_Kind.ptr());;
							if ((_149029_trt != nullptr)) {
								_1aa8e43a4_checkTypeCompatibility(_self_.get()._field_s, &(_146975_expr.get()._field_Kind), &(_147521_d.get()._field_Kind), &(_147421_e.get()._field_Token));
							};
						};
					};
					goto _iter_next_1ad29e135;
				} else if (_146933_m.get()._field_Comptime) {
					if ((!(_1aa958748_IsConst(_147521_d.ptr())))) {
						_1aa8dbbb5_pushErr(_self_.get()._field_s.ptr(), _147421_e.get()._field_Token, jule::Str("const-matching requires constant expression", 43), jule::Slice<jule::Any>());
					} else {
						_147217_constMatched=(_147217_constMatched || _1c09038dc_ReadBool(_147521_d.get()._field_Constant.ptr()));
					};
				};
				if (_147521_d.get()._field_Decl) {
					_1aa8dbbb5_pushErr(_self_.get()._field_s.ptr(), _147421_e.get()._field_Token, jule::Str("expecting expression, found type declaration", 44), jule::Slice<jule::Any>());
					_1aa8dbed4_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("you can use type-match if you want to match types", 49), jule::Slice<jule::Any>());
					goto _iter_next_1ad29e135;
				};
				_147017_case.get()._field_Exprs = jule::alloc_for_append(_147017_case.get()._field_Exprs,1);_147017_case.get()._field_Exprs.__push(_147521_d);;
				_1aa93d81b_assignTypeChecker _151321_checker = _1aa93d81b_assignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_146975_expr.get()._field_Kind, ._field_d=_147521_d, ._field_errorToken=_147421_e.get()._field_Token};;
				_1aa93e993_check(&_151321_checker);
			}
			_iter_next_1ad29e135:;
			++it;
			goto _iter_begin_1ad29e135;
		}
		_iter_end_1ad29e135:;
	};
	if (((!(_146933_m.get()._field_Comptime)) || _147217_constMatched)) {
		_147017_case.get()._field_Scope=_1aa8c4e12_checkCaseScope(_self_, &(_147017_case), &(_146956_c.get()._field_Scope));
	};
	return _147017_case;;
}



inline void _1aa8c57c5_checkCases(jule::Ptr<_1aa8b91d1_scopeChecker> _self_, jule::Ptr<_1aa86ae41_MatchCase>* _152735_m, jule::Ptr<_1aa8b63ba_Match> _152754_rm, jule::Ptr<_1aa957d85_Data> _152770_expr) {
	_152754_rm.get()._field_Cases=jule::Slice<jule::Ptr<_1aa8b6e15_Case>>::alloc(0LL, (*(_152735_m)).get()._field_Cases.len());
	{
		auto expr = &((*(_152735_m)).get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad2a8480:;
		if (it != expr_end) {
			jule::I64 _152913_i = it - expr->begin();
			{
				jule::Ptr<_1aa8b6e15_Case> _153021_case = jule::new_ptr<_1aa8b6e15_Case>(_1aa8b6e15_Case{._field_Owner=_152754_rm, });;
				if ((_152913_i > 0LL)) {
					_152754_rm.get()._field_Cases[(_152913_i - 1LL)].get()._field_Next=_153021_case;
				};
				_152754_rm.get()._field_Cases = jule::alloc_for_append(_152754_rm.get()._field_Cases,1);_152754_rm.get()._field_Cases.__push(_153021_case);;
			}
			_iter_next_1ad2a8480:;
			++it;
			_152913_i++;
			goto _iter_begin_1ad2a8480;
		}
		_iter_end_1ad2a8480:;
	};
	if (((_152754_rm.get()._field_Default != nullptr) && ((*(_152735_m)).get()._field_Cases.len() > 0LL))) {
		_152754_rm.get()._field_Cases[(_152754_rm.get()._field_Cases.len() - 1LL)].get()._field_Next=_152754_rm.get()._field_Default;
	};
	{
		auto expr = &((*(_152735_m)).get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad2ab94a:;
		if (it != expr_end) {
			jule::I64 _154314_i = it - expr->begin();
			jule::Ptr<_1aa86a76a_Case> _154321_c = *it;
			{
				_1aa8c540c_checkCase(_self_, _152754_rm, _154314_i, _154321_c, _152770_expr);
			}
			_iter_next_1ad2ab94a:;
			++it;
			_154314_i++;
			goto _iter_begin_1ad2ab94a;
		}
		_iter_end_1ad2ab94a:;
	};
}



inline jule::Ptr<_1aa8b6e15_Case> _1aa8c5b7c_checkDefault(jule::Ptr<_1aa8b91d1_scopeChecker> _self_, jule::Ptr<_1aa8b63ba_Match> _154836_m, jule::Ptr<_1aa86969d_Else> _154851_d) {
	jule::Ptr<_1aa8b6e15_Case> _154917_def = jule::new_ptr<_1aa8b6e15_Case>(_1aa8b6e15_Case{._field_Owner=_154836_m, });;
	_154917_def.get()._field_Scope=_1aa8c4e12_checkCaseScope(_self_, &(_154917_def), &(_154851_d.get()._field_Scope));
	return _154917_def;;
}



inline void _1aa8c5e9b_checkComptimePanic(jule::Ptr<_1aa8b91d1_scopeChecker> _self_, jule::Ptr<_1db944d0d_Token> _155638_callToken, jule::Ptr<_1aa8b25a3_Scope>* _155658_s) {
	if (((*(_155658_s)).get()._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _156113_stmt = (*(_155658_s)).get()._field_Stmts[0LL];;
	{
		auto &_match_expr{ _156113_stmt };
		
		if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1ad2aec7d:;
			{
				jule::Ptr<_1aa957d85_Data> _156417_d = _156113_stmt.cast_ptr<_1aa957d85_Data>(&__jule_any_type24);;
				{
					auto &_match_expr{ _156417_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type30) {
						_case_begin_1ad2b0ad6:;
						{
							jule::Ptr<_1aa883200_BuiltinPanicCallExprModel> _156721_m = _156417_d.get()._field_Model.cast_ptr<_1aa883200_BuiltinPanicCallExprModel>(&__jule_any_type30);;
							{
								auto &_match_expr{ _156721_m.get()._field_Expr };
								
								if (_match_expr.type == &__jule_any_type19) {
									_case_begin_1ad2b1a71:;
									{
										jule::Ptr<_1c0901b1b_Const> _157025_c = _156721_m.get()._field_Expr.cast_ptr<_1c0901b1b_Const>(&__jule_any_type19);;
										if (_1c0905ee9_IsStr(_157025_c.ptr())) {
											if ((_155638_callToken == nullptr)) {
												jule::Ptr<_1aa8b91d1_scopeChecker> _157337_root = _1aa8bc26c_getHardRoot(_self_);;
												_1aa8dbbb5_pushErr(_self_.get()._field_s.ptr(), _157337_root.get()._field_calledFrom, jule::Str("compile-time panic: @", 21), jule::Slice<jule::Any>::make({jule::Any(_1c0903b51_ReadStr(_157025_c.ptr()), &__jule_any_type5)}));
											} else {
												_1aa8dbbb5_pushErr(_self_.get()._field_s.ptr(), _155638_callToken, jule::Str("compile-time panic: @", 21), jule::Slice<jule::Any>::make({jule::Any(_1c0903b51_ReadStr(_157025_c.ptr()), &__jule_any_type5)}));
											};
										};
									}
								}
								_match_end_1ad2b1862:;
							};
						}
					}
					_match_end_1ad2b06da:;
				};
			}
		}
		_match_end_1ad2aec17:;
	};
}



inline void _1aa8c62ba_processConstMatch(jule::Ptr<_1aa8b91d1_scopeChecker> _self_, jule::Ptr<_1aa8b63ba_Match> _158441_tm, jule::Ptr<_1aa86ae41_MatchCase>* _158458_m) {
	{
		auto expr = &(_158441_tm.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad2b2335:;
		if (it != expr_end) {
			jule::I64 _158514_i = it - expr->begin();
			jule::Ptr<_1aa8b6e15_Case> _158521_c = *it;
			{
				if ((_158521_c.get()._field_Scope != nullptr)) {
					jule::Ptr<_1db944d0d_Token> _158725_token = nullptr;;
					if ((!(_158441_tm.get()._field_TypeMatch))) {
						_158725_token=(*(_158458_m)).get()._field_Cases[_158514_i].get()._field_Scope.get()._field_Stmts[0LL]._field_Token;
					};
					_1aa8c5e9b_checkComptimePanic(_self_, _158725_token, &(_158521_c.get()._field_Scope));
					_158441_tm.get()._field_Default=_158521_c;
					_158441_tm.get()._field_Cases=nullptr;
					return;;
				};
			}
			_iter_next_1ad2b2335:;
			++it;
			_158514_i++;
			goto _iter_begin_1ad2b2335;
		}
		_iter_end_1ad2b2335:;
	};
	if (((*(_158458_m)).get()._field_Default != nullptr)) {
		_158441_tm.get()._field_Cases=nullptr;
		_158441_tm.get()._field_Default=_1aa8c5b7c_checkDefault(_self_, _158441_tm, (*(_158458_m)).get()._field_Default);
		if ((_158441_tm.get()._field_Default != nullptr)) {
			jule::Ptr<_1db944d0d_Token> _160125_token = nullptr;;
			if ((!(_158441_tm.get()._field_TypeMatch))) {
				_160125_token=(*(_158458_m)).get()._field_Default.get()._field_Scope.get()._field_Stmts[0LL]._field_Token;
			};
			_1aa8c5e9b_checkComptimePanic(_self_, _160125_token, &(_158441_tm.get()._field_Default.get()._field_Scope));
		};
	};
}



inline void _1aa8c6540_checkTypeMatch(jule::Ptr<_1aa8b91d1_scopeChecker> _self_, jule::Ptr<_1aa86ae41_MatchCase>* _161039_m) {
	jule::Ptr<_1aa957d85_Data> _161117_d = _1aa974434_eval(_1aa8e3958_eval(_self_.get()._field_s, jule::Trait<_1aa9a0509_Lookup>(_self_, 0)), (*(_161039_m)).get()._field_Expr);;
	if ((_161117_d == nullptr)) {
		return;;
	};
	if (((!(_161117_d.get()._field_Kind.get()._field_Generic)) && (!(((((_1aa985c5e_Prim(_161117_d.get()._field_Kind.ptr()) != nullptr) && _1aa98c7d2_IsAny(_1aa985c5e_Prim(_161117_d.get()._field_Kind.ptr()).ptr())) || (_1aa987425_Trait(_161117_d.get()._field_Kind.ptr()) != nullptr)) || (_1aa986710_TypeEnum(_161117_d.get()._field_Kind.ptr()) != nullptr)))))) {
		_1aa8dbbb5_pushErr(_self_.get()._field_s.ptr(), (*(_161039_m)).get()._field_Expr.get()._field_Token, jule::Str("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1aa8b63ba_Match> _162217_tm = jule::new_ptr<_1aa8b63ba_Match>(_1aa8b63ba_Match{._field_Expr=_161117_d, ._field_TypeMatch=true, });;
	_162217_tm.get()._field_Comptime=_162217_tm.get()._field_Expr.get()._field_Kind.get()._field_Generic;
	if (((!(_162217_tm.get()._field_Expr.get()._field_Kind.get()._field_Generic)) && ((*(_161039_m)).get()._field_Default != nullptr))) {
		_162217_tm.get()._field_Default=_1aa8c5b7c_checkDefault(_self_, _162217_tm, (*(_161039_m)).get()._field_Default);
	};
	_1aa8c57c5_checkCases(_self_, _161039_m, _162217_tm, _161117_d);
	if (_162217_tm.get()._field_Comptime) {
		_1aa8c62ba_processConstMatch(_self_, _162217_tm, _161039_m);
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_162217_tm, &__jule_any_type48));;
}



inline void _1aa8c67b5_checkCommonMatch(jule::Ptr<_1aa8b91d1_scopeChecker> _self_, jule::Ptr<_1aa86ae41_MatchCase>* _163741_m) {
	jule::Ptr<_1aa957d85_Data> _163817_d = nullptr;;
	if (((*(_163741_m)).get()._field_Expr == nullptr)) {
		_163817_d=jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("bool", 4)), 10)}), ._field_Constant=static__1c09025cd_NewBool(true)});
		_163817_d.get()._field_Model=jule::Any(_163817_d.get()._field_Constant, &__jule_any_type19);
	} else {
		_163817_d=_1aa974742_evalExpr(_1aa8e3958_eval(_self_.get()._field_s, jule::Trait<_1aa9a0509_Lookup>(_self_, 0)), (*(_163741_m)).get()._field_Expr);
		if ((_163817_d == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1aa8b63ba_Match> _165217_mc = jule::new_ptr<_1aa8b63ba_Match>(_1aa8b63ba_Match{._field_Expr=_163817_d, ._field_Comptime=(((((*(_163741_m)).get()._field_Expr != nullptr) && _1aa958748_IsConst(_163817_d.ptr())) && _1c0905c85_IsBool(_163817_d.get()._field_Constant.ptr())) && _1c09038dc_ReadBool(_163817_d.get()._field_Constant.ptr())), });;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_165217_mc, &__jule_any_type48));;
	if (((*(_163741_m)).get()._field_Default != nullptr)) {
		_165217_mc.get()._field_Default=_1aa8c5b7c_checkDefault(_self_, _165217_mc, (*(_163741_m)).get()._field_Default);
	};
	_1aa8c57c5_checkCases(_self_, _163741_m, _165217_mc, _163817_d);
	if (_165217_mc.get()._field_Comptime) {
		_1aa8c62ba_processConstMatch(_self_, _165217_mc, _163741_m);
	};
}



inline void _1aa8c6a3a_checkMatch(jule::Ptr<_1aa8b91d1_scopeChecker> _self_, jule::Ptr<_1aa86ae41_MatchCase> _167034_m) {
	if (_167034_m.get()._field_TypeMatch) {
		_1aa8c6540_checkTypeMatch(_self_, &(_167034_m));
		return;;
	};
	_1aa8c67b5_checkCommonMatch(_self_, &(_167034_m));
}



inline void _1aa8c6cb0_checkFall(jule::Ptr<_1aa8b91d1_scopeChecker> _self_, jule::Ptr<_1aa861d6b_FallSt> _167829_f) {
	if ((((_self_.get()._field_cse == 0LLU) || ((_self_.get()._field_scope.get()._field_Stmts.len() + 1LL) < _self_.get()._field_scope.get()._field_Stmts.len())) || _1aa8bbc94_isDeferred(_self_))) {
		_1aa8dbbb5_pushErr(_self_.get()._field_s.ptr(), _167829_f.get()._field_Token, jule::Str("fall keyword can only useable at end of the case scopes", 55), jule::Slice<jule::Any>());
		return;;
	};
	_1aa8b6e15_Case* _168617_case = ((_1aa8b6e15_Case*)(_self_.get()._field_cse));;
	if (_168617_case->_field_Owner.get()._field_Comptime) {
		_1aa8dbbb5_pushErr(_self_.get()._field_s.ptr(), _167829_f.get()._field_Token, jule::Str("the fall statement is not allowed for comptime-matching", 55), jule::Slice<jule::Any>());
		return;;
	} else if ((_168617_case->_field_Next == nullptr)) {
		_1aa8dbbb5_pushErr(_self_.get()._field_s.ptr(), _167829_f.get()._field_Token, jule::Str("fall cannot useable at final case", 33), jule::Slice<jule::Any>());
		_1aa8dbed4_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("remove \"fall\" keyword", 21), jule::Slice<jule::Any>());
		return;;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(jule::new_ptr<_1aa8b74ba_FallSt>(_1aa8b74ba_FallSt{._field_DestCase=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_168617_case->_field_Next))}), &__jule_any_type49));;
}



inline jule::Ptr<_1aa8b4a06_BreakSt> _1aa8c70bd_checkBreakWithLabel(jule::Ptr<_1aa8b91d1_scopeChecker> _self_, jule::Ptr<_1aa8689bb_BreakSt> _170139_b) {
	jule::Ptr<_1aa8b4a06_BreakSt> _170217_brk = _1aa8c73cb_checkPlainBreak(_self_, _170139_b);;
	if ((_170217_brk == nullptr)) {
		return nullptr;;
	};
	_170217_brk.get()._field_It=0LLU;
	_170217_brk.get()._field_Mtch=0LLU;
	jule::Ptr<_1aa8b7e49_scopeLabel> _171217_label = _1aa8aeca9_findLabelParent(_170139_b.get()._field_Label.get()._field_Kind, _self_.get()._field_parent);;
	if ((_171217_label == nullptr)) {
		_1aa8dbbb5_pushErr(_self_.get()._field_s.ptr(), _170139_b.get()._field_Label, jule::Str("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any(_170139_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	_171217_label.get()._field_used=true;
	if (((_171217_label.get()._field_pos + 1LL) >= _171217_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
		_1aa8dbbb5_pushErr(_self_.get()._field_s.ptr(), _170139_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_170139_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::I64 _172513_i = (_171217_label.get()._field_pos + 1LL);;
	if ((_172513_i >= _171217_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
		_1aa8dbbb5_pushErr(_self_.get()._field_s.ptr(), _170139_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_170139_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
	} else {
		jule::Any _172921_st = _171217_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_172513_i];;
		{
			auto &_match_expr{ _172921_st };
			
			if (_match_expr.type == &__jule_any_type37) {
				_case_begin_1ad2d0320:;
				{
					_170217_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_172921_st.cast_ptr<_1aa8b33ea_InfIter>(&__jule_any_type37)));
				}
			}
			else if (_match_expr.type == &__jule_any_type41) {
				_case_begin_1ad2d1e48:;
				{
					_170217_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_172921_st.cast_ptr<_1aa8b4253_RangeIter>(&__jule_any_type41)));
				}
			}
			else if (_match_expr.type == &__jule_any_type39) {
				_case_begin_1ad2d1eae:;
				{
					_170217_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_172921_st.cast_ptr<_1aa8b386d_WhileIter>(&__jule_any_type39)));
				}
			}
			else if (_match_expr.type == &__jule_any_type48) {
				_case_begin_1ad2d2036:;
				{
					_170217_brk.get()._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_172921_st.cast_ptr<_1aa8b63ba_Match>(&__jule_any_type48)));
				}
			}
			else {
				_case_begin_1ad2d1cc2:;
				{
					_1aa8dbbb5_pushErr(_self_.get()._field_s.ptr(), _170139_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_170139_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
				}
			}
			_match_end_1ad2d1c6c:;
		};
	};
	if ((_170217_brk.get()._field_It != 0LLU)) {
		if ((!(_1aa8c2739_checkValidBreakLabel(_self_, _170217_brk.get()._field_It)))) {
			_1aa8dbbb5_pushErr(_self_.get()._field_s.ptr(), _170139_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_170139_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		};
	};
	if ((_170217_brk.get()._field_Mtch != 0LLU)) {
		if ((!(_1aa8c2739_checkValidBreakLabel(_self_, _170217_brk.get()._field_Mtch)))) {
			_1aa8dbbb5_pushErr(_self_.get()._field_s.ptr(), _170139_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_170139_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		};
	};
	return _170217_brk;;
}



inline jule::Ptr<_1aa8b4a06_BreakSt> _1aa8c73cb_checkPlainBreak(jule::Ptr<_1aa8b91d1_scopeChecker> _self_, jule::Ptr<_1aa8689bb_BreakSt> _175935_b) {
	if (_1aa8bbc94_isDeferred(_self_)) {
		_1aa8dbbb5_pushErr(_self_.get()._field_s.ptr(), _175935_b.get()._field_Token, jule::Str("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aa8b91d1_scopeChecker> _176517_scope = _self_;;
	_julec_label_iter:;
	{
		
		if (((((_176517_scope.get()._field_it == 0LLU) && (_176517_scope.get()._field_cse == 0LLU)) && (_176517_scope.get()._field_parent != nullptr)) && (_176517_scope.get()._field_owner == nullptr))) {
			_case_begin_1ad2d803c:;
			{
				_176517_scope=_176517_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_176517_scope.get()._field_it != 0LLU)) {
			_case_begin_1ad2d80b4:;
			{
				return jule::new_ptr<_1aa8b4a06_BreakSt>(_1aa8b4a06_BreakSt{._field_It=_176517_scope.get()._field_it, });;
			}
		}
		else if ((_176517_scope.get()._field_cse != 0LLU)) {
			_case_begin_1ad2d813b:;
			{
				return jule::new_ptr<_1aa8b4a06_BreakSt>(_1aa8b4a06_BreakSt{._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(((_1aa8b6e15_Case*)(_176517_scope.get()._field_cse))->_field_Owner))});;
			}
		}
		_match_end_1ad2d7e71:;
	};
	_1aa8dbbb5_pushErr(_self_.get()._field_s.ptr(), _175935_b.get()._field_Token, jule::Str("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1aa8c7651_checkBreak(jule::Ptr<_1aa8b91d1_scopeChecker> _self_, jule::Ptr<_1aa8689bb_BreakSt> _178130_b) {
	if ((_178130_b.get()._field_Label != nullptr)) {
		jule::Ptr<_1aa8b4a06_BreakSt> _178321_brk = _1aa8c70bd_checkBreakWithLabel(_self_, _178130_b);;
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_178321_brk, &__jule_any_type50));;
		return;;
	};
	jule::Ptr<_1aa8b4a06_BreakSt> _178817_brk = _1aa8c73cb_checkPlainBreak(_self_, _178130_b);;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_178817_brk, &__jule_any_type50));;
}



inline void _1aa8c78c6_checkRet(jule::Ptr<_1aa8b91d1_scopeChecker> _self_, jule::Ptr<_1aa866d3d_RetSt> _179232_r) {
	if (_1aa8bbc94_isDeferred(_self_)) {
		_1aa8dbbb5_pushErr(_self_.get()._field_s.ptr(), _179232_r.get()._field_Token, jule::Str("deferred scopes are not supports return statements", 50), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1aa8b783e_RetSt> _179717_rt = jule::new_ptr<_1aa8b783e_RetSt>(_1aa8b783e_RetSt{._field_Func=_1aa8bc008_getRoot(_self_).get()._field_owner, });;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_179717_rt, &__jule_any_type51));;
	jule::Ptr<_1aa94b780_retTypeChecker> _180217_rtc = jule::new_ptr<_1aa94b780_retTypeChecker>(_1aa94b780_retTypeChecker{._field_sc=_self_, ._field_f=_179717_rt.get()._field_Func, ._field_errorToken=_179232_r.get()._field_Token, });;
	jule::Bool _180713_ok = _1aa94c484_check(_180217_rtc.ptr(), &(_179232_r.get()._field_Expr));;
	if ((!(_180713_ok))) {
		return;;
	};
	if ((_179232_r.get()._field_Expr != nullptr)) {
		_179717_rt.get()._field_Expr=_180217_rtc.get()._field_model;
	};
}



inline void _1aa8c7b4b_checkUseExpr(jule::Ptr<_1aa8b91d1_scopeChecker> _self_, jule::Ptr<_1aa858dda_UseExpr> _181732_ue) {
	if ((_self_.get()._field_result == nullptr)) {
		_1aa8dbbb5_pushErr(_self_.get()._field_s.ptr(), _181732_ue.get()._field_Token, jule::Str("use expressions cannot useable out of exceptional handler scopes", 64), jule::Slice<jule::Any>());
		return;;
	};
	if (_1aa8bbc94_isDeferred(_self_)) {
		_1aa8dbbb5_pushErr(_self_.get()._field_s.ptr(), _181732_ue.get()._field_Token, jule::Str("use expressions cannot useable in deferred scopes", 49), jule::Slice<jule::Any>());
	};
	if (((_self_.get()._field_i + 1LL) < _self_.get()._field_tree.get()._field_Stmts.len())) {
		_1aa8dbbb5_pushErr(_self_.get()._field_s.ptr(), _181732_ue.get()._field_Token, jule::Str("use expressions must be last statement of scope", 47), jule::Slice<jule::Any>());
	};
}



inline void _1aa8c7dc1_checkNode(jule::Ptr<_1aa8b91d1_scopeChecker> _self_, jule::Any* _183334_node) {
	{
		auto &_match_expr{ (*(_183334_node)) };
		
		if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1ad2e53e0:;
			{
				_1aa8be5b0_checkAnonScope(_self_, (*(_183334_node)).cast_ptr<_1aa863eb1_ScopeTree>(&__jule_any_type52));
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1ad2e4d07:;
			{
				_1aa8bd2c3_checkVarDecl(_self_, (*(_183334_node)).cast_ptr<_1aa866986_VarDecl>(&__jule_any_type16));
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1ad2e5203:;
			{
				_1aa8bd548_checkTypeAliasDecl(_self_, (*(_183334_node)).cast_ptr<_1aa86a2e7_TypeAliasDecl>(&__jule_any_type12));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1ad2e5522:;
			{
				_1aa8beb54_checkExpr(_self_, (*(_183334_node)).cast_ptr<_1aa858549_Expr>(&__jule_any_type53));
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_1ad2e5588:;
			{
				_1aa8c04e5_checkConditional(_self_, (*(_183334_node)).cast_ptr<_1aa869b21_Conditional>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_1ad2e5742:;
			{
				_1aa8c211d_checkIter(_self_, (*(_183334_node)).cast_ptr<_1aa86749d_Iter>(&__jule_any_type55));
			}
		}
		else if (_match_expr.type == &__jule_any_type56) {
			_case_begin_1ad2e57a8:;
			{
				_1aa8c2cbc_checkCont(_self_, (*(_183334_node)).cast_ptr<_1aa868d73_ContSt>(&__jule_any_type56));
			}
		}
		else if (_match_expr.type == &__jule_any_type57) {
			_case_begin_1ad2e581e:;
			{
				_1aa8c3042_checkLabel(_self_, (*(_183334_node)).cast_ptr<_1aa8616c8_LabelSt>(&__jule_any_type57));
			}
		}
		else if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1ad2e5885:;
			{
				_1aa8c32b7_pushGoto(_self_, (*(_183334_node)).cast_ptr<_1aa861a80_GotoSt>(&__jule_any_type58));
			}
		}
		else if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1ad2e58eb:;
			{
				_1aa8c4a5a_checkAssignSt(_self_, (*(_183334_node)).cast_ptr<_1aa8629b5_AssignSt>(&__jule_any_type59));
			}
		}
		else if (_match_expr.type == &__jule_any_type60) {
			_case_begin_1ad2e5962:;
			{
				_1aa8c6a3a_checkMatch(_self_, (*(_183334_node)).cast_ptr<_1aa86ae41_MatchCase>(&__jule_any_type60));
			}
		}
		else if (_match_expr.type == &__jule_any_type61) {
			_case_begin_1ad2e59c8:;
			{
				_1aa8c6cb0_checkFall(_self_, (*(_183334_node)).cast_ptr<_1aa861d6b_FallSt>(&__jule_any_type61));
			}
		}
		else if (_match_expr.type == &__jule_any_type62) {
			_case_begin_1ad2e5a3e:;
			{
				_1aa8c7651_checkBreak(_self_, (*(_183334_node)).cast_ptr<_1aa8689bb_BreakSt>(&__jule_any_type62));
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1ad2e5aa5:;
			{
				_1aa8c78c6_checkRet(_self_, (*(_183334_node)).cast_ptr<_1aa866d3d_RetSt>(&__jule_any_type63));
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1ad2e5b1b:;
			{
				_1aa8c7b4b_checkUseExpr(_self_, (*(_183334_node)).cast_ptr<_1aa858dda_UseExpr>(&__jule_any_type64));
			}
		}
		else {
			_case_begin_1ad2e4e7d:;
			{
				jule::outln(jule::Str("error <unimplemented scope node>", 32));
			}
		}
		_match_end_1ad2e4da1:;
	};
}



inline void _1aa8c809c_checkResult(jule::Ptr<_1aa8b91d1_scopeChecker> _self_) {
	_1aa8638a6_Stmt _187117_stmt = _self_.get()._field_tree.get()._field_Stmts[(_self_.get()._field_tree.get()._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _187117_stmt._field_Data };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1ad2ee2ea:;
			{
				jule::Ptr<_1aa858dda_UseExpr> _187421_ue = _187117_stmt._field_Data.cast_ptr<_1aa858dda_UseExpr>(&__jule_any_type64);;
				jule::Ptr<_1aa957d85_Data> _187521_d = _1aa974742_evalExpr(_1aa8e3958_eval(_self_.get()._field_s, jule::Trait<_1aa9a0509_Lookup>(_self_, 0)), _187421_ue.get()._field_Expr);;
				if ((_187521_d == nullptr)) {
					return;;
				};
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_187521_d, &__jule_any_type24));;
				jule::Ptr<_1aa94b780_retTypeChecker> _188021_rtc = jule::new_ptr<_1aa94b780_retTypeChecker>(_1aa94b780_retTypeChecker{._field_sc=_self_, ._field_types=_1aa88d1e9_Types(_self_.get()._field_result.ptr()), ._field_errorToken=_187421_ue.get()._field_Expr.get()._field_Token, });;
				_1aa94c484_check(_188021_rtc.ptr(), &(_187421_ue.get()._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1ad2eda25:;
			{
				jule::Ptr<_1aa858549_Expr> _188721_expr = _187117_stmt._field_Data.cast_ptr<_1aa858549_Expr>(&__jule_any_type53);;
				jule::Ptr<_1aa957d85_Data> _188821_d = _1aa974742_evalExpr(_1aa8e3958_eval(_self_.get()._field_s, jule::Trait<_1aa9a0509_Lookup>(_self_, 0)), _188721_expr);;
				if ((_188821_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ _188821_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1ad308a85:;
						{
							jule::Ptr<_1aa885587_BuiltinErrorCallExprModel> _189425_m = _188821_d.get()._field_Model.cast_ptr<_1aa885587_BuiltinErrorCallExprModel>(&__jule_any_type23);;
							_1aa8be8ce_processErrorCall(_self_, &(_189425_m), _188721_expr.get()._field_Token);
							_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_188821_d, &__jule_any_type24));;
						}
					}
					else {
						_case_begin_1ad308678:;
						{
							return;;
						}
					}
					_match_end_1ad308469:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type58 || _match_expr.type == &__jule_any_type62 || _match_expr.type == &__jule_any_type56 || _match_expr.type == &__jule_any_type63) {
			_case_begin_1ad2eda8b:;
			{
				_1aa8c7dc1_checkNode(_self_, &(_187117_stmt._field_Data));
			}
		}
		else {
			_case_begin_1ad2ed9ae:;
			{
				_1aa8c7dc1_checkNode(_self_, &(_187117_stmt._field_Data));
				return;;
			}
		}
		_match_end_1ad2ed838:;
	};
	_self_.get()._field_result=nullptr;
}



inline void _1aa8c8278_checkTree(jule::Ptr<_1aa8b91d1_scopeChecker> _self_) {
	_self_.get()._field_i=0LL;
	jule::I64 _191617_n = _self_.get()._field_tree.get()._field_Stmts.len();;
	if ((_self_.get()._field_result != nullptr)) {
		(_191617_n)--;
	};
	for (; (_self_.get()._field_i < _191617_n); (_self_.get()._field_i)++) {
		{
			_1aa8638a6_Stmt _192421_stmt = _self_.get()._field_tree.get()._field_Stmts[_self_.get()._field_i];;
			_1aa8c7dc1_checkNode(_self_, &(_192421_stmt._field_Data));
			if (_1aa8bba30_stopped(_self_.ptr())) {
				return;;
			};
		}
	_iter_next_1ad30b26e:;
	}
	_iter_end_1ad30b26e:;;
	if (((_self_.get()._field_result != nullptr) && (_self_.get()._field_tree.get()._field_Stmts.len() != 0LL))) {
		_1aa8c809c_checkResult(_self_);
	};
}



inline void _1aa8c8597_checkGoto(_1aa8b91d1_scopeChecker* _self_, jule::Ptr<_1aa8b83bc_scopeGoto>* _193533_gt, jule::Ptr<_1aa8b7e49_scopeLabel>* _193554_label) {
	jule::Ptr<_1aa8b91d1_scopeChecker> _193617_gtsc = (*(_193533_gt)).get()._field_scope;;
	while (((_193617_gtsc.get()._field_childIndex - 1LL) > (*(_193554_label)).get()._field_scope.get()._field_childIndex)) {
		{
			_193617_gtsc=_193617_gtsc.get()._field_parent;
		}
	_iter_next_1ad30e85a:;
	}
	_iter_end_1ad30e85a:;;
	jule::I64 _194117_n = 0LL;;
	if ((_193617_gtsc.get()._field_scope == (*(_193554_label)).get()._field_scope.get()._field_scope)) {
		if (((*(_193533_gt)).get()._field_pos > (*(_193554_label)).get()._field_pos)) {
			return;;
		};
		_194117_n=(*(_193533_gt)).get()._field_pos;
	};
	jule::I64 _195417_i = ((*(_193554_label)).get()._field_pos - 1LL);;
	if ((_194117_n == 0LL)) {
		{
			auto expr = &((*(_193554_label)).get()._field_scope.get()._field_scope.get()._field_Stmts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad311d8a:;
			if (it != expr_end) {
				jule::I64 _195717_j = it - expr->begin();
				jule::Any _195720_stmt = *it;
				{
					if (_1aa8b0480_stmtIsGotoScope(&(_195720_stmt), &(_193617_gtsc.get()._field_scope))) {
						_194117_n=_195717_j;
						goto _iter_end_1ad311d8a;
					};
				}
				_iter_next_1ad311d8a:;
				++it;
				_195717_j++;
				goto _iter_begin_1ad311d8a;
			}
			_iter_end_1ad311d8a:;
		};
	};
	for (; (_195417_i >= _194117_n); (_195417_i)--) {
		{
			jule::Any _196721_stmt = (*(_193554_label)).get()._field_scope.get()._field_scope.get()._field_Stmts[_195417_i];;
			if (_1aa8b211e_stmtIsDef(&(_196721_stmt))) {
				_1aa8dbbb5_pushErr((*(_self_))._field_s.ptr(), (*(_193533_gt)).get()._field_gt.get()._field_Token, jule::Str("goto @ jumps over declaration(s)", 32), jule::Slice<jule::Any>::make({jule::Any((*(_193533_gt)).get()._field_gt.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
				return;;
			};
		}
	_iter_next_1ad312c7b:;
	}
	_iter_end_1ad312c7b:;;
}



inline void _1aa8c8773_checkGotos(_1aa8b91d1_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_gotos)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad3126c6:;
		if (it != expr_end) {
			jule::Ptr<_1aa8b83bc_scopeGoto> _197621_gt = *it;
			{
				jule::Ptr<_1aa8b7e49_scopeLabel> _197721_label = _1aa8bcb96_findLabelAll(_self_, _197621_gt.get()._field_gt.get()._field_Label.get()._field_Kind);;
				if ((_197721_label == nullptr)) {
					_1aa8dbbb5_pushErr((*(_self_))._field_s.ptr(), _197621_gt.get()._field_gt.get()._field_Token, jule::Str("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any(_197621_gt.get()._field_gt.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
					goto _iter_next_1ad3126c6;
				};
				_197721_label.get()._field_used=true;
				_1aa8c8597_checkGoto(_self_, &(_197621_gt), &(_197721_label));
			}
			_iter_next_1ad3126c6:;
			++it;
			goto _iter_begin_1ad3126c6;
		}
		_iter_end_1ad3126c6:;
	};
}



inline void _1aa8c894e_checkLabels(_1aa8b91d1_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad316d6d:;
		if (it != expr_end) {
			jule::Ptr<_1aa8b7e49_scopeLabel> _198916_l = *it;
			{
				if ((!(_198916_l.get()._field_used))) {
					_1aa8dbbb5_pushErr((*(_self_))._field_s.ptr(), _198916_l.get()._field_token, jule::Str("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any(_198916_l.get()._field_label.get()._field_Ident, &__jule_any_type5)}));
				};
			}
			_iter_next_1ad316d6d:;
			++it;
			goto _iter_begin_1ad316d6d;
		}
		_iter_end_1ad316d6d:;
	};
}



inline void _1aa8c8b2a_checkVars(_1aa8b91d1_scopeChecker* _self_) {
	{
		auto expr = &((*(_self_))._field_table.get()._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad31729c:;
		if (it != expr_end) {
			jule::Ptr<_1aa908c59_Var> _199716_v = *it;
			{
				if (((((!(_199716_v.get()._field_Used)) && (!(_1db9475a2_IsIgnoreIdent(_199716_v.get()._field_Ident)))) && (!(_1db947849_IsAnonIdent(_199716_v.get()._field_Ident)))) && (!_199716_v.get()._field_Ident.equal("self", 4)))) {
					_1aa8dbbb5_pushErr((*(_self_))._field_s.ptr(), _199716_v.get()._field_Token, jule::Str("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any(_199716_v.get()._field_Ident, &__jule_any_type5)}));
				};
			}
			_iter_next_1ad31729c:;
			++it;
			goto _iter_begin_1ad31729c;
		}
		_iter_end_1ad31729c:;
	};
}



inline void _1aa8c8d06_checkAliases(_1aa8b91d1_scopeChecker* _self_) {
	{
		auto expr = &((*(_self_))._field_table.get()._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad31a2c2:;
		if (it != expr_end) {
			jule::Ptr<_1aa982b29_TypeAlias> _200516_a = *it;
			{
				if ((((!(_200516_a.get()._field_Used)) && (!(_1db9475a2_IsIgnoreIdent(_200516_a.get()._field_Ident)))) && (!(_1db947849_IsAnonIdent(_200516_a.get()._field_Ident))))) {
					_1aa8dbbb5_pushErr((*(_self_))._field_s.ptr(), _200516_a.get()._field_Token, jule::Str("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any(_200516_a.get()._field_Ident, &__jule_any_type5)}));
				};
			}
			_iter_next_1ad31a2c2:;
			++it;
			goto _iter_begin_1ad31a2c2;
		}
		_iter_end_1ad31a2c2:;
	};
}



inline void _1aa8c9125_check(jule::Ptr<_1aa8b91d1_scopeChecker> _self_, jule::Ptr<_1aa863eb1_ScopeTree>* _201330_tree, jule::Ptr<_1aa8b25a3_Scope>* _201353_s) {
	(*(_201353_s)).get()._field_Deferred=(*(_201330_tree)).get()._field_Deferred;
	(*(_201353_s)).get()._field_Unsafety=(*(_201330_tree)).get()._field_Unsafety;
	jule::I64 _201713_errors = _self_.get()._field_s.get()._field_errors.len();;
	_self_.get()._field_tree=(*(_201330_tree));
	_self_.get()._field_scope=(*(_201353_s));
	_1aa8c8278_checkTree(_self_);
	if ((_201713_errors == _self_.get()._field_s.get()._field_errors.len())) {
		_1aa8c8b2a_checkVars(_self_.ptr());
		_1aa8c8d06_checkAliases(_self_.ptr());
		if (_1aa8bb5e0_isRoot(_self_.ptr())) {
			_1aa8c8773_checkGotos(_self_.ptr());
			_1aa8c894e_checkLabels(_self_.ptr());
		};
	};
}



inline jule::Ptr<_1aa8b91d1_scopeChecker> _1aa8c9389_newChildChecker(jule::Ptr<_1aa8b91d1_scopeChecker> _self_) {
	jule::Ptr<_1aa8b91d1_scopeChecker> _203717_base = _1aa8ae5d3_newScopeCheckerBase(&(_self_.get()._field_s), nullptr);;
	_203717_base.get()._field_parent=_self_;
	_203717_base.get()._field_labels=_self_.get()._field_labels;
	_203717_base.get()._field_gotos=_self_.get()._field_gotos;
	_203717_base.get()._field_childIndex=static_cast<jule::I64>((_self_.get()._field_childIndex + 1LL));
	return _203717_base;;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa8b91d1_scopeChecker _Src) {
	_Stream << "scopeChecker{";
	_Stream << "calledFrom:" << _Src._field_calledFrom << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "childIndex:" << _Src._field_childIndex << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _1aa8ca379_checkCdef(_1aa8c9e39_directiveChecker* _self_, jule::Ptr<_1aa820a94_Directive>* _1629_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1ad32142c:;
			{
				if ((*(_self_))._field_o.cast_ptr<_1aa889426_Fn>(&__jule_any_type65).get()._field_CppLinked) {
					goto _match_end_1ad32165d;
				};
				goto _case_begin_1ad3216b3;
			}
		}
		else {
			_case_begin_1ad3216b3:;
			{
				_1aa8dbbb5_pushErr((*(_self_))._field_s.ptr(), (*(_1629_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_1629_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1ad32165d:;
	};
	if (((*(_1629_d)).get()._field_Args.len() > 0LL)) {
		_1aa8dbbb5_pushErr((*(_self_))._field_s.ptr(), (*(_1629_d)).get()._field_Args[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1aa8ca5ee_checkTypedef(_1aa8c9e39_directiveChecker* _self_, jule::Ptr<_1aa820a94_Directive>* _3232_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1ad323b05:;
			{
				if ((*(_self_))._field_o.cast_ptr<_1aa8740c0_Struct>(&__jule_any_type66).get()._field_CppLinked) {
					goto _match_end_1ad323d25;
				};
				goto _case_begin_1ad323d7a;
			}
		}
		else {
			_case_begin_1ad323d7a:;
			{
				_1aa8dbbb5_pushErr((*(_self_))._field_s.ptr(), (*(_3232_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_3232_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1ad323d25:;
	};
	if (((*(_3232_d)).get()._field_Args.len() > 0LL)) {
		_1aa8dbbb5_pushErr((*(_self_))._field_s.ptr(), (*(_3232_d)).get()._field_Args[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1aa8ca874_checkDerive(_1aa8c9e39_directiveChecker* _self_, jule::Ptr<_1aa820a94_Directive>* _4831_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1ad326300:;
			{
				if ((!((*(_self_))._field_o.cast_ptr<_1aa8740c0_Struct>(&__jule_any_type66).get()._field_CppLinked))) {
					goto _match_end_1ad326520;
				};
				goto _case_begin_1ad326575;
			}
		}
		else {
			_case_begin_1ad326575:;
			{
				_1aa8dbbb5_pushErr((*(_self_))._field_s.ptr(), (*(_4831_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ad326520:;
	};
	if (((*(_4831_d)).get()._field_Args.len() == 0LL)) {
		_1aa8dbbb5_pushErr((*(_self_))._field_s.ptr(), (*(_4831_d)).get()._field_Tag, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		_1aa8dbed4_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_4831_d)).get()._field_Args.len() > 1LL)) {
		_1aa8dbbb5_pushErr((*(_self_))._field_s.ptr(), (*(_4831_d)).get()._field_Args[1LL], jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("derive", 6), &__jule_any_type5)}));
	};
	{
		auto &_match_expr{ (*(_4831_d)).get()._field_Args[0LL].get()._field_Kind };
		
		if (_match_expr == jule::Str("Clone", 5)) {
			_case_begin_1ad32a05c:;
		}
		else {
			_case_begin_1ad327213:;
			{
				_1aa8dbbb5_pushErr((*(_self_))._field_s.ptr(), (*(_4831_d)).get()._field_Args[0LL], jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_4831_d)).get()._field_Args[0LL].get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1ad329b94:;
	};
}



inline void _1aa8caae9_checkNamespace(_1aa8c9e39_directiveChecker* _self_, jule::Ptr<_1aa820a94_Directive>* _7438_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1ad329e91:;
			{
				if ((!((*(_self_))._field_o.cast_ptr<_1aa8740c0_Struct>(&__jule_any_type66).get()._field_CppLinked))) {
					_1aa8dbbb5_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1ad32b569:;
			{
				if ((!((*(_self_))._field_o.cast_ptr<_1aa889426_Fn>(&__jule_any_type65).get()._field_CppLinked))) {
					_1aa8dbbb5_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ad32b5d0:;
			{
				if ((!((*(_self_))._field_o.cast_ptr<_1aa908c59_Var>(&__jule_any_type8).get()._field_CppLinked))) {
					_1aa8dbbb5_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else {
			_case_begin_1ad32b4ae:;
			{
				_1aa8dbbb5_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1ad32b459:;
	};
	if (((*(_7438_d)).get()._field_Args.len() == 0LL)) {
		_1aa8dbbb5_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_7438_d)).get()._field_Args.len() > 1LL)) {
		_1aa8dbbb5_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Args[1LL], jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
	};
	jule::Ptr<_1db944d0d_Token> _9913_arg = (*(_7438_d)).get()._field_Args[0LL];;
	if ((_9913_arg.get()._field_Id != static_cast<jule::U64>(6LLU))) {
		_1aa8dbbb5_pushErr((*(_self_))._field_s.ptr(), _9913_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if ((_9913_arg.get()._field_Kind[0LL] != '\"')) {
		_1aa8dbbb5_pushErr((*(_self_))._field_s.ptr(), _9913_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*(_7438_d)).get()._field_Args[0LL].get()._field_Kind=_9913_arg.get()._field_Kind.slice(1LL, (_9913_arg.get()._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1ad334b05:;
			{
				if ((_1aa97c8d2_findDirective(&((*((*(_self_))._field_d))), jule::Str("typedef", 7)) == nullptr)) {
					jule::Ptr<_1aa820a94_Directive> _11625_typedef = jule::new_ptr<_1aa820a94_Directive>(_1aa820a94_Directive{._field_Tag=(*(_7438_d)).get()._field_Tag, });;
					_11625_typedef.get()._field_Tag.get()._field_Kind=jule::Str("typedef", 7);
					(*((*(_self_))._field_d))=jule::append((*((*(_self_))._field_d)),jule::Slice<jule::Ptr<_1aa820a94_Directive>>::make({_11625_typedef}));
				};
			}
		}
		_match_end_1ad3346a4:;
	};
}



inline void _1aa8cad6e_checkDeprecated(_1aa8c9e39_directiveChecker* _self_, jule::Ptr<_1aa820a94_Directive>* _12539_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1ad334c9d:;
			{
				if ((*(_self_))._field_o.cast_ptr<_1aa8740c0_Struct>(&__jule_any_type66).get()._field_CppLinked) {
					_1aa8dbbb5_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1ad336d5a:;
			{
				if ((*(_self_))._field_o.cast_ptr<_1aa889426_Fn>(&__jule_any_type65).get()._field_CppLinked) {
					_1aa8dbbb5_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ad336dc1:;
			{
				if ((*(_self_))._field_o.cast_ptr<_1aa908c59_Var>(&__jule_any_type8).get()._field_CppLinked) {
					_1aa8dbbb5_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else {
			_case_begin_1ad33671c:;
			{
				_1aa8dbbb5_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1ad336574:;
	};
	if (((*(_12539_d)).get()._field_Args.len() == 0LL)) {
		return;;
	};
	if (((*(_12539_d)).get()._field_Args.len() > 1LL)) {
		_1aa8dbbb5_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Args[1LL], jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
	};
	jule::Ptr<_1db944d0d_Token> _15013_arg = (*(_12539_d)).get()._field_Args[0LL];;
	if ((_15013_arg.get()._field_Id != static_cast<jule::U64>(6LLU))) {
		_1aa8dbbb5_pushErr((*(_self_))._field_s.ptr(), _15013_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if ((_15013_arg.get()._field_Kind[0LL] != '\"')) {
		_1aa8dbbb5_pushErr((*(_self_))._field_s.ptr(), _15013_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*(_12539_d)).get()._field_Args[0LL].get()._field_Kind=_15013_arg.get()._field_Kind.slice(1LL, (_15013_arg.get()._field_Kind.len() - 1LL));
}



inline void _1aa8cb0e4_checkTest(_1aa8c9e39_directiveChecker* _self_, jule::Ptr<_1aa820a94_Directive>* _16429_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1ad33e626:;
			{
				jule::Ptr<_1aa889426_Fn> _16717_f = (*(_self_))._field_o.cast_ptr<_1aa889426_Fn>(&__jule_any_type65);;
				if ((((!(_16717_f.get()._field_CppLinked)) && (!(_1aa88a0c5_IsInit(_16717_f.ptr())))) && (!(_1aa889d61_IsEntryPoint(_16717_f.ptr()))))) {
					goto _match_end_1ad33ee2e;
				};
				if (_1aa889aec_IsMethod(_16717_f.ptr())) {
					_1aa8dbbb5_pushErr((*(_self_))._field_s.ptr(), _16717_f.get()._field_Token, jule::Str("you cannot declare test methods", 31), jule::Slice<jule::Any>());
					goto _match_end_1ad33ee2e;
				};
				goto _case_begin_1ad340072;
			}
		}
		else {
			_case_begin_1ad340072:;
			{
				_1aa8dbbb5_pushErr((*(_self_))._field_s.ptr(), (*(_16429_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_16429_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1ad33ee2e:;
	};
	if (((*(_16429_d)).get()._field_Args.len() > 0LL)) {
		_1aa8dbbb5_pushErr((*(_self_))._field_s.ptr(), (*(_16429_d)).get()._field_Args[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1aa8cb369_checkDirective(_1aa8c9e39_directiveChecker* _self_, jule::Ptr<_1aa820a94_Directive>* _18538_d) {
	{
		auto &_match_expr{ (*(_18538_d)).get()._field_Tag.get()._field_Kind };
		
		if (_match_expr == jule::Str("cdef", 4)) {
			_case_begin_1ad343d56:;
			{
				_1aa8ca379_checkCdef(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("typedef", 7)) {
			_case_begin_1ad343dbc:;
			{
				_1aa8ca5ee_checkTypedef(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("derive", 6)) {
			_case_begin_1ad343e33:;
			{
				_1aa8ca874_checkDerive(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("namespace", 9)) {
			_case_begin_1ad343e99:;
			{
				_1aa8caae9_checkNamespace(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("deprecated", 10)) {
			_case_begin_1ad344a7c:;
			{
				_1aa8cad6e_checkDeprecated(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("test", 4)) {
			_case_begin_1ad344ae3:;
			{
				_1aa8cb0e4_checkTest(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("build", 5) || _match_expr == jule::Str("pass", 4)) {
			_case_begin_1ad344b59:;
			{
				_1aa8dbbb5_pushErr((*(_self_))._field_s.ptr(), (*(_18538_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_18538_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		else {
			_case_begin_1ad343ce0:;
			{
				_1aa8dbbb5_pushErr((*(_self_))._field_s.ptr(), (*(_18538_d)).get()._field_Tag, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(_18538_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1ad343c8a:;
	};
}



inline void _1aa8cb545_check(_1aa8c9e39_directiveChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_d)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad3471bc:;
		if (it != expr_end) {
			jule::Ptr<_1aa820a94_Directive> _20821_d = *it;
			{
				_1aa8cb369_checkDirective(_self_, &(_20821_d));
			}
			_iter_next_1ad3471bc:;
			++it;
			goto _iter_begin_1ad3471bc;
		}
		_iter_end_1ad3471bc:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1aa8c9e39_directiveChecker _Src) {
	_Stream << "directiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aa8d101c_ImportInfo> _1aa8d1528_SelectPackage(_1aa8d101c_ImportInfo* _self_, jule::Fn<jule::Bool(jule::Ptr<_1aa8d101c_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_1aa908c59_Var> _1aa8d18d0_FindVar(_1aa8d101c_ImportInfo* _self_, jule::Str _18926_ident, jule::Bool ) {
	if ((!(_1aa8d32b6_isLookupable(_self_, _18926_ident)))) {
		return nullptr;;
	};
	return _1aa8cd734_findVarInPackage(&((*(_self_))._field_Package.get()._field_Files), _18926_ident, false);;
}



inline jule::Ptr<_1aa982b29_TypeAlias> _1aa8d1c87_FindTypeAlias(_1aa8d101c_ImportInfo* _self_, jule::Str _20132_ident, jule::Bool ) {
	if ((!(_1aa8d32b6_isLookupable(_self_, _20132_ident)))) {
		return nullptr;;
	};
	return _1aa8cdb63_findTypeAliasInPackage(&((*(_self_))._field_Package.get()._field_Files), _20132_ident, false);;
}



inline jule::Ptr<_1aa8740c0_Struct> _1aa8d213e_FindStruct(_1aa8d101c_ImportInfo* _self_, jule::Str _21329_ident, jule::Bool ) {
	if ((!(_1aa8d32b6_isLookupable(_self_, _21329_ident)))) {
		return nullptr;;
	};
	return _1aa8ce04d_findStructInPackage(&((*(_self_))._field_Package.get()._field_Files), _21329_ident, false);;
}



inline jule::Ptr<_1aa889426_Fn> _1aa8d24e6_FindFn(_1aa8d101c_ImportInfo* _self_, jule::Str _22525_ident, jule::Bool ) {
	if ((!(_1aa8d32b6_isLookupable(_self_, _22525_ident)))) {
		return nullptr;;
	};
	return _1aa8ce4b0_findFnInPackage(&((*(_self_))._field_Package.get()._field_Files), _22525_ident, false);;
}



inline jule::Ptr<_1aa89b647_Trait> _1aa8d2804_FindTrait(_1aa8d101c_ImportInfo* _self_, jule::Str _23628_ident) {
	if ((!(_1aa8d32b6_isLookupable(_self_, _23628_ident)))) {
		return nullptr;;
	};
	return _1aa8ce7bd_findTraitInPackage(&((*(_self_))._field_Package.get()._field_Files), _23628_ident);;
}



inline jule::Ptr<_1aa89ddca_Enum> _1aa8d2b12_FindEnum(_1aa8d101c_ImportInfo* _self_, jule::Str _24727_ident) {
	if ((!(_1aa8d32b6_isLookupable(_self_, _24727_ident)))) {
		return nullptr;;
	};
	return _1aa8ceb0e_findEnumInPackage(&((*(_self_))._field_Package.get()._field_Files), _24727_ident);;
}



inline jule::Ptr<_1aa8a04c5_TypeEnum> _1aa8d2e20_FindTypeEnum(_1aa8d101c_ImportInfo* _self_, jule::Str _25831_ident) {
	if ((!(_1aa8d32b6_isLookupable(_self_, _25831_ident)))) {
		return nullptr;;
	};
	return _1aa8cee50_findTypeEnumInPackage(&((*(_self_))._field_Package.get()._field_Files), _25831_ident);;
}



inline jule::Bool _1aa8d32b6_isLookupable(_1aa8d101c_ImportInfo* _self_, jule::Str _26727_ident) {
	if ((*(_self_))._field_CppLinked) {
		return false;;
	};
	if ((!((*(_self_))._field_ImportAll))) {
		if ((((*(_self_))._field_Alias.len() != 0LL) || _1aa8d35c4_existIdent(_self_, jule::Str("self", 4)))) {
			return true;;
		};
		if (((*(_self_))._field_Selected.len() > 0LL)) {
			if ((!(_1aa8d35c4_existIdent(_self_, _26727_ident)))) {
				return false;;
			};
		};
	};
	return true;;
}



inline jule::Bool _1aa8d35c4_existIdent(_1aa8d101c_ImportInfo* _self_, jule::Str _28725_ident) {
	{
		auto expr = &((*(_self_))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad35c39c:;
		if (it != expr_end) {
			jule::Ptr<_1db944d0d_Token> *_28816_sident = it;
			{
				if (((*(_28816_sident)).get()._field_Kind == _28725_ident)) {
					return true;;
				};
			}
			_iter_next_1ad35c39c:;
			++it;
			goto _iter_begin_1ad35c39c;
		}
		_iter_end_1ad35c39c:;
	};
	return false;;
}



inline jule::Bool _1aa8d385a_isAccessibleViaSelection(_1aa8d101c_ImportInfo* _self_) {
	return (((*(_self_))._field_ImportAll || ((*(_self_))._field_Selected.len() == 0LL)) || _1aa8d35c4_existIdent(_self_, jule::Str("self", 4)));;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa8d101c_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Duplicate:" << _Src._field_Duplicate << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Std:" << _Src._field_Std << ", ";
	_Stream << "ImportAll:" << _Src._field_ImportAll << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Package:" << _Src._field_Package << ", ";
	_Stream << "ModId:" << _Src._field_ModId;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aa8d101c_ImportInfo> _1aa8d411e_SelectPackage(_1aa8d3b57_Package* _self_, jule::Fn<jule::Bool(jule::Ptr<_1aa8d101c_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_1aa908c59_Var> _1aa8d44c6_FindVar(_1aa8d3b57_Package* _self_, jule::Str _31426_ident, jule::Bool _31438_cpp_linked) {
	return _1aa8cd734_findVarInPackage(&((*(_self_))._field_Files), _31426_ident, _31438_cpp_linked);;
}



inline jule::Ptr<_1aa982b29_TypeAlias> _1aa8d487d_FindTypeAlias(_1aa8d3b57_Package* _self_, jule::Str _32032_ident, jule::Bool _32044_cpp_linked) {
	return _1aa8cdb63_findTypeAliasInPackage(&((*(_self_))._field_Files), _32032_ident, _32044_cpp_linked);;
}



inline jule::Ptr<_1aa8740c0_Struct> _1aa8d4c35_FindStruct(_1aa8d3b57_Package* _self_, jule::Str _32629_ident, jule::Bool _32641_cpp_linked) {
	return _1aa8ce04d_findStructInPackage(&((*(_self_))._field_Files), _32629_ident, _32641_cpp_linked);;
}



inline jule::Ptr<_1aa889426_Fn> _1aa8d50dc_FindFn(_1aa8d3b57_Package* _self_, jule::Str _33225_ident, jule::Bool _33237_cpp_linked) {
	return _1aa8ce4b0_findFnInPackage(&((*(_self_))._field_Files), _33225_ident, _33237_cpp_linked);;
}



inline jule::Ptr<_1aa89b647_Trait> _1aa8d53ea_FindTrait(_1aa8d3b57_Package* _self_, jule::Str _33828_ident) {
	return _1aa8ce7bd_findTraitInPackage(&((*(_self_))._field_Files), _33828_ident);;
}



inline jule::Ptr<_1aa89ddca_Enum> _1aa8d5708_FindEnum(_1aa8d3b57_Package* _self_, jule::Str _34427_ident) {
	return _1aa8ceb0e_findEnumInPackage(&((*(_self_))._field_Files), _34427_ident);;
}



inline jule::Ptr<_1aa8a04c5_TypeEnum> _1aa8d5a16_FindTypeEnum(_1aa8d3b57_Package* _self_, jule::Str _35031_ident) {
	return _1aa8cee50_findTypeEnumInPackage(&((*(_self_))._field_Files), _35031_ident);;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa8d3b57_Package _Src) {
	_Stream << "Package{";
	_Stream << "Files:" << _Src._field_Files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aa8a5750_comptimeType> _1aa8d8c5b_pushComptimeType(_1aa8d87c7_commonSemaMeta* _self_, jule::Ptr<_1aa983872_TypeKind>* _21340_t) {
	{
		auto expr = &((*(_self_))._field_comptimeTypes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad3839de:;
		if (it != expr_end) {
			jule::Ptr<_1aa8a5750_comptimeType> _21421_t2 = *it;
			{
				if (_1aa98407b_Equal(_21421_t2.get()._field_Base, (*(_21340_t)))) {
					return _21421_t2;;
				};
			}
			_iter_next_1ad3839de:;
			++it;
			goto _iter_begin_1ad3839de;
		}
		_iter_end_1ad3839de:;
	};
	jule::Ptr<_1aa8a5750_comptimeType> _21917_t1 = jule::new_ptr<_1aa8a5750_comptimeType>(_1aa8a5750_comptimeType{._field_Base=(*(_21340_t))});;
	(*(_self_))._field_comptimeTypes = jule::alloc_for_append((*(_self_))._field_comptimeTypes,1);(*(_self_))._field_comptimeTypes.__push(_21917_t1);;
	return _21917_t1;;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa8d87c7_commonSemaMeta _Src) {
	_Stream << "commonSemaMeta{";
	_Stream << "comptimeTypes:" << _Src._field_comptimeTypes;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aa8d101c_ImportInfo> _1aa8d9762_SelectPackage(_1aa8d92de_Sema* _self_, jule::Fn<jule::Bool(jule::Ptr<_1aa8d101c_ImportInfo>)> _24232_selector) {
	return _1aa94da29_SelectPackage((*(_self_))._field_file.ptr(), _24232_selector);;
}



inline jule::Ptr<_1aa908c59_Var> _1aa8d9b19_FindVar(_1aa8d92de_Sema* _self_, jule::Str _25226_ident, jule::Bool _25238_cpp_linked) {
	jule::Ptr<_1aa908c59_Var> _25417_v = _1aa8cd734_findVarInPackage(&((*(_self_))._field_files), _25226_ident, _25238_cpp_linked);;
	if ((_25417_v != nullptr)) {
		return _25417_v;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad386591:;
		if (it != expr_end) {
			jule::Ptr<_1aa8d101c_ImportInfo> _26021_imp = *it;
			{
				if ((!(_1aa8d7452_impIsLookupable(&(_26021_imp), _25226_ident)))) {
					goto _iter_next_1ad386591;
				};
				_25417_v=_1aa8d18d0_FindVar(_26021_imp.ptr(), _25226_ident, _25238_cpp_linked);
				if (((_25417_v != nullptr) && _1aa8dc38b_isAccessibleDefine(_self_, _25417_v.get()._field_Public, _25417_v.get()._field_Token))) {
					return _25417_v;;
				};
			}
			_iter_next_1ad386591:;
			++it;
			goto _iter_begin_1ad386591;
		}
		_iter_end_1ad386591:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aa982b29_TypeAlias> _1aa8d9ec1_FindTypeAlias(_1aa8d92de_Sema* _self_, jule::Str _27932_ident, jule::Bool _27944_cpp_linked) {
	jule::Ptr<_1aa982b29_TypeAlias> _28117_ta = _1aa8cdb63_findTypeAliasInPackage(&((*(_self_))._field_files), _27932_ident, _27944_cpp_linked);;
	if ((_28117_ta != nullptr)) {
		return _28117_ta;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad388d24:;
		if (it != expr_end) {
			jule::Ptr<_1aa8d101c_ImportInfo> _28721_imp = *it;
			{
				if ((!(_1aa8d7452_impIsLookupable(&(_28721_imp), _27932_ident)))) {
					goto _iter_next_1ad388d24;
				};
				_28117_ta=_1aa8d1c87_FindTypeAlias(_28721_imp.ptr(), _27932_ident, _27944_cpp_linked);
				if (((_28117_ta != nullptr) && _1aa8dc38b_isAccessibleDefine(_self_, _28117_ta.get()._field_Public, _28117_ta.get()._field_Token))) {
					return _28117_ta;;
				};
			}
			_iter_next_1ad388d24:;
			++it;
			goto _iter_begin_1ad388d24;
		}
		_iter_end_1ad388d24:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aa8740c0_Struct> _1aa8da378_FindStruct(_1aa8d92de_Sema* _self_, jule::Str _30629_ident, jule::Bool _30641_cppLinked) {
	jule::Ptr<_1aa8740c0_Struct> _30817_s = _1aa8ce04d_findStructInPackage(&((*(_self_))._field_files), _30629_ident, _30641_cppLinked);;
	if ((_30817_s != nullptr)) {
		return _30817_s;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad38b5a7:;
		if (it != expr_end) {
			jule::Ptr<_1aa8d101c_ImportInfo> _31321_imp = *it;
			{
				if ((!(_1aa8d7452_impIsLookupable(&(_31321_imp), _30629_ident)))) {
					goto _iter_next_1ad38b5a7;
				};
				_30817_s=_1aa8d213e_FindStruct(_31321_imp.ptr(), _30629_ident, _30641_cppLinked);
				if (((_30817_s != nullptr) && _1aa8dc38b_isAccessibleDefine(_self_, _30817_s.get()._field_Public, _30817_s.get()._field_Token))) {
					return _30817_s;;
				};
			}
			_iter_next_1ad38b5a7:;
			++it;
			goto _iter_begin_1ad38b5a7;
		}
		_iter_end_1ad38b5a7:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aa889426_Fn> _1aa8da730_FindFn(_1aa8d92de_Sema* _self_, jule::Str _33125_ident, jule::Bool _33137_cpp_linked) {
	jule::Ptr<_1aa889426_Fn> _33317_f = _1aa8ce4b0_findFnInPackage(&((*(_self_))._field_files), _33125_ident, _33137_cpp_linked);;
	if ((_33317_f != nullptr)) {
		return _33317_f;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad38dd3a:;
		if (it != expr_end) {
			jule::Ptr<_1aa8d101c_ImportInfo> _33921_imp = *it;
			{
				if ((!(_1aa8d7452_impIsLookupable(&(_33921_imp), _33125_ident)))) {
					goto _iter_next_1ad38dd3a;
				};
				_33317_f=_1aa8d24e6_FindFn(_33921_imp.ptr(), _33125_ident, _33137_cpp_linked);
				if (((_33317_f != nullptr) && _1aa8dc38b_isAccessibleDefine(_self_, _33317_f.get()._field_Public, _33317_f.get()._field_Token))) {
					return _33317_f;;
				};
			}
			_iter_next_1ad38dd3a:;
			++it;
			goto _iter_begin_1ad38dd3a;
		}
		_iter_end_1ad38dd3a:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aa89b647_Trait> _1aa8daa3d_FindTrait(_1aa8d92de_Sema* _self_, jule::Str _35828_ident) {
	jule::Ptr<_1aa89b647_Trait> _36017_t = _1aa8ce7bd_findTraitInPackage(&((*(_self_))._field_files), _35828_ident);;
	if ((_36017_t != nullptr)) {
		return _36017_t;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad391733:;
		if (it != expr_end) {
			jule::Ptr<_1aa8d101c_ImportInfo> _36621_imp = *it;
			{
				if ((!(_1aa8d7452_impIsLookupable(&(_36621_imp), _35828_ident)))) {
					goto _iter_next_1ad391733;
				};
				_36017_t=_1aa8d2804_FindTrait(_36621_imp.ptr(), _35828_ident);
				if (((_36017_t != nullptr) && _1aa8dc38b_isAccessibleDefine(_self_, _36017_t.get()._field_Public, _36017_t.get()._field_Token))) {
					return _36017_t;;
				};
			}
			_iter_next_1ad391733:;
			++it;
			goto _iter_begin_1ad391733;
		}
		_iter_end_1ad391733:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aa89ddca_Enum> _1aa8dad4b_FindEnum(_1aa8d92de_Sema* _self_, jule::Str _38527_ident) {
	jule::Ptr<_1aa89ddca_Enum> _38717_e = _1aa8ceb0e_findEnumInPackage(&((*(_self_))._field_files), _38527_ident);;
	if ((_38717_e != nullptr)) {
		return _38717_e;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad393c63:;
		if (it != expr_end) {
			jule::Ptr<_1aa8d101c_ImportInfo> _39321_imp = *it;
			{
				if ((!(_1aa8d7452_impIsLookupable(&(_39321_imp), _38527_ident)))) {
					goto _iter_next_1ad393c63;
				};
				_38717_e=_1aa8d2b12_FindEnum(_39321_imp.ptr(), _38527_ident);
				if (((_38717_e != nullptr) && _1aa8dc38b_isAccessibleDefine(_self_, _38717_e.get()._field_Public, _38717_e.get()._field_Token))) {
					return _38717_e;;
				};
			}
			_iter_next_1ad393c63:;
			++it;
			goto _iter_begin_1ad393c63;
		}
		_iter_end_1ad393c63:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aa8a04c5_TypeEnum> _1aa8db159_FindTypeEnum(_1aa8d92de_Sema* _self_, jule::Str _41231_ident) {
	jule::Ptr<_1aa8a04c5_TypeEnum> _41417_e = _1aa8cee50_findTypeEnumInPackage(&((*(_self_))._field_files), _41231_ident);;
	if ((_41417_e != nullptr)) {
		return _41417_e;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad396293:;
		if (it != expr_end) {
			jule::Ptr<_1aa8d101c_ImportInfo> _42021_imp = *it;
			{
				if ((!(_1aa8d7452_impIsLookupable(&(_42021_imp), _41231_ident)))) {
					goto _iter_next_1ad396293;
				};
				_41417_e=_1aa8d2e20_FindTypeEnum(_42021_imp.ptr(), _41231_ident);
				if (((_41417_e != nullptr) && _1aa8dc38b_isAccessibleDefine(_self_, _41417_e.get()._field_Public, _41417_e.get()._field_Token))) {
					return _41417_e;;
				};
			}
			_iter_next_1ad396293:;
			++it;
			goto _iter_begin_1ad396293;
		}
		_iter_end_1ad396293:;
	};
	return nullptr;;
}



inline jule::Bool _1aa8db577_isFlag(_1aa8d92de_Sema* _self_, jule::I64 _43621_flags) {
	return (((*(_self_))._field_flags & _43621_flags) == _43621_flags);;
}



inline void _1aa8db7ec_setCurrentFile(_1aa8d92de_Sema* _self_, jule::Ptr<_1aa94d51d_SymbolTable> _43837_f) {
	(*(_self_))._field_file=_43837_f;
}



inline void _1aa8dbbb5_pushErr(_1aa8d92de_Sema* _self_, jule::Ptr<_1db944d0d_Token> _44026_token, jule::Str _44041_fmt, jule::Slice<jule::Any> _44054_args) {
	(*(_self_))._field_errors = jule::alloc_for_append((*(_self_))._field_errors,1);(*(_self_))._field_errors.__push(_1aa8d7111_compilerErr(&(_44026_token), true, _44041_fmt, _44054_args));;
}



inline void _1aa8dbed4_pushSuggestion(_1aa8d92de_Sema* _self_, jule::Str _44533_fmt, jule::Slice<jule::Any> _44546_args) {
	{
		_1aa8d8596_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _44533_fmt, _44546_args);
	};
}



inline jule::Bool _1aa8dc38b_isAccessibleDefine(_1aa8d92de_Sema* _self_, jule::Bool _45033_public, jule::Ptr<_1db944d0d_Token> _45047_token) {
	return ((_45033_public || (_45047_token.get()._field_File == nullptr)) || (_1db94aa8e_Dir((*(_self_))._field_file.get()._field_File.ptr()) == _1db94aa8e_Dir(_45047_token.get()._field_File.ptr())));;
}



inline jule::Bool _1aa8dc7dc_isDuplicatedIdent(_1aa8d92de_Sema* _self_, jule::Uintptr _45732_itself, jule::Str _45749_ident, jule::Bool _45761_cpp_linked) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad39c5da:;
		if (it != expr_end) {
			jule::Ptr<_1aa94d51d_SymbolTable> *_45816_f = it;
			{
				if (_1aa9516ec_isDuplicatedIdent((*(_45816_f)).ptr(), _45732_itself, _45749_ident, _45761_cpp_linked)) {
					return true;;
				};
				{
					auto expr = &((*(_45816_f)).get()._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad39d443:;
					if (it != expr_end) {
						jule::Ptr<_1aa8d101c_ImportInfo> *_46320_imp = it;
						{
							{
								auto expr = &((*(_46320_imp)).get()._field_Selected);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1ad39dc18:;
								if (it != expr_end) {
									jule::Ptr<_1db944d0d_Token> *_46424_selected = it;
									{
										if (((*(_46424_selected)).get()._field_Kind == _45749_ident)) {
											return true;;
										};
									}
									_iter_next_1ad39dc18:;
									++it;
									goto _iter_begin_1ad39dc18;
								}
								_iter_end_1ad39dc18:;
							};
						}
						_iter_next_1ad39d443:;
						++it;
						goto _iter_begin_1ad39d443;
					}
					_iter_end_1ad39d443:;
				};
			}
			_iter_next_1ad39c5da:;
			++it;
			goto _iter_begin_1ad39c5da;
		}
		_iter_end_1ad39c5da:;
	};
	return false;;
}



inline void _1aa8dcb0b_checkDirectives(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Slice<jule::Ptr<_1aa820a94_Directive>>* _47440_d, jule::Any _47466_o) {
	_1aa8c9e39_directiveChecker _47517_dc = _1aa8c9e39_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_1aa820a94_Directive>>>)((&((*(_47440_d)))))), ._field_o=_47466_o};;
	_1aa8cb545_check(&_47517_dc);
}



inline jule::Bool _1aa8dd05c_checkGenericQuantity(_1aa8d92de_Sema* _self_, jule::I64 _48339_required, jule::I64 _48354_given, jule::Ptr<_1db944d0d_Token> _48366_token) {
	jule::Bool __jule_func_result = false;
	{
		
		if (((_48339_required == 0LL) && (_48354_given > 0LL))) {
			_case_begin_1ad3a18db:;
			{
				_1aa8dbbb5_pushErr(_self_, _48366_token, jule::Str("define not has generics", 23), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if (((_48339_required > 0LL) && (_48354_given == 0LL))) {
			_case_begin_1ad3a1204:;
			{
				_1aa8dbbb5_pushErr(_self_, _48366_token, jule::Str("define has generics", 19), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_48339_required < _48354_given)) {
			_case_begin_1ad3a126a:;
			{
				_1aa8dbbb5_pushErr(_self_, _48366_token, jule::Str("overflow generics", 17), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_48339_required > _48354_given)) {
			_case_begin_1ad3a12e2:;
			{
				_1aa8dbbb5_pushErr(_self_, _48366_token, jule::Str("missing generics", 16), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1ad3a118d:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1ad3a10c2:;
	};
}



inline jule::Bool _1aa8dd436_isDuplicatedImportSelection(_1aa8d92de_Sema* _self_, jule::Uintptr _50242_itself, jule::Str _50259_ident) {
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad3a2bc8:;
		if (it != expr_end) {
			jule::Ptr<_1aa8d101c_ImportInfo> *_50316_imp = it;
			{
				if ((static_cast<jule::Uintptr>((*(_50316_imp))) == _50242_itself)) {
					goto _iter_end_1ad3a2bc8;
				};
				if (_1aa8d35c4_existIdent((*(_50316_imp)).ptr(), _50259_ident)) {
					return true;;
				};
			}
			_iter_next_1ad3a2bc8:;
			++it;
			goto _iter_begin_1ad3a2bc8;
		}
		_iter_end_1ad3a2bc8:;
	};
	return false;;
}



inline jule::Any _1aa8dd7ee_getImportDef(_1aa8d92de_Sema* _self_, jule::Str _51527_ident, jule::Ptr<_1aa8d101c_ImportInfo>* _51544_imp) {
	if ((_1aa2b1d2c_findPackageBuiltinDef((*(_51544_imp)).get()._field_LinkPath, _51527_ident) != nullptr)) {
		return jule::Any(true, &__jule_any_type4);;
	};
	{
		auto expr = &((*(_51544_imp)).get()._field_Package.get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad3a5a77:;
		if (it != expr_end) {
			jule::Ptr<_1aa94d51d_SymbolTable> _51921_f = *it;
			{
				;
				jule::Any _52221_def = _1aa95129b_defByIdent(_51921_f.ptr(), _51527_ident, false);;
				if ((_52221_def != nullptr)) {
					return _52221_def;;
				};
			}
			_iter_next_1ad3a5a77:;
			++it;
			goto _iter_begin_1ad3a5a77;
		}
		_iter_end_1ad3a5a77:;
	};
	return nullptr;;
}



inline jule::Bool _1ad3ac6a5_checkImportSelection(_1aa8d92de_Sema* _self_, jule::Ptr<_1db944d0d_Token>* _53043_ident, jule::Ptr<_1aa908c59_Var>* _53059_s) {
	if ((!(_1aa8dc38b_isAccessibleDefine(_self_, (*(_53059_s)).get()._field_Public, (*(_53059_s)).get()._field_Token)))) {
		_1aa8dbbb5_pushErr(_self_, (*(_53043_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_53043_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1aa8dbed4_pushSuggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1aa8d044a_defByIdentPackage(&((*(_self_))._field_files), &((*(_53059_s)).get()._field_Ident), false) != nullptr)) {
		_1aa8dbbb5_pushErr(_self_, (*(_53043_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_53059_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1ad3b15ee_checkImportSelection(_1aa8d92de_Sema* _self_, jule::Ptr<_1db944d0d_Token>* _53043_ident, jule::Ptr<_1aa982b29_TypeAlias>* _53059_s) {
	if ((!(_1aa8dc38b_isAccessibleDefine(_self_, (*(_53059_s)).get()._field_Public, (*(_53059_s)).get()._field_Token)))) {
		_1aa8dbbb5_pushErr(_self_, (*(_53043_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_53043_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1aa8dbed4_pushSuggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1aa8d044a_defByIdentPackage(&((*(_self_))._field_files), &((*(_53059_s)).get()._field_Ident), false) != nullptr)) {
		_1aa8dbbb5_pushErr(_self_, (*(_53043_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_53059_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1ad3b53b1_checkImportSelection(_1aa8d92de_Sema* _self_, jule::Ptr<_1db944d0d_Token>* _53043_ident, jule::Ptr<_1aa8740c0_Struct>* _53059_s) {
	if ((!(_1aa8dc38b_isAccessibleDefine(_self_, (*(_53059_s)).get()._field_Public, (*(_53059_s)).get()._field_Token)))) {
		_1aa8dbbb5_pushErr(_self_, (*(_53043_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_53043_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1aa8dbed4_pushSuggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1aa8d044a_defByIdentPackage(&((*(_self_))._field_files), &((*(_53059_s)).get()._field_Ident), false) != nullptr)) {
		_1aa8dbbb5_pushErr(_self_, (*(_53043_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_53059_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1acd5e2cd_checkImportSelection(_1aa8d92de_Sema* _self_, jule::Ptr<_1db944d0d_Token>* _53043_ident, jule::Ptr<_1aa89b647_Trait>* _53059_s) {
	if ((!(_1aa8dc38b_isAccessibleDefine(_self_, (*(_53059_s)).get()._field_Public, (*(_53059_s)).get()._field_Token)))) {
		_1aa8dbbb5_pushErr(_self_, (*(_53043_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_53043_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1aa8dbed4_pushSuggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1aa8d044a_defByIdentPackage(&((*(_self_))._field_files), &((*(_53059_s)).get()._field_Ident), false) != nullptr)) {
		_1aa8dbbb5_pushErr(_self_, (*(_53043_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_53059_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1acd62de7_checkImportSelection(_1aa8d92de_Sema* _self_, jule::Ptr<_1db944d0d_Token>* _53043_ident, jule::Ptr<_1aa89ddca_Enum>* _53059_s) {
	if ((!(_1aa8dc38b_isAccessibleDefine(_self_, (*(_53059_s)).get()._field_Public, (*(_53059_s)).get()._field_Token)))) {
		_1aa8dbbb5_pushErr(_self_, (*(_53043_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_53043_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1aa8dbed4_pushSuggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1aa8d044a_defByIdentPackage(&((*(_self_))._field_files), &((*(_53059_s)).get()._field_Ident), false) != nullptr)) {
		_1aa8dbbb5_pushErr(_self_, (*(_53043_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_53059_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1acd66bba_checkImportSelection(_1aa8d92de_Sema* _self_, jule::Ptr<_1db944d0d_Token>* _53043_ident, jule::Ptr<_1aa8a04c5_TypeEnum>* _53059_s) {
	if ((!(_1aa8dc38b_isAccessibleDefine(_self_, (*(_53059_s)).get()._field_Public, (*(_53059_s)).get()._field_Token)))) {
		_1aa8dbbb5_pushErr(_self_, (*(_53043_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_53043_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1aa8dbed4_pushSuggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1aa8d044a_defByIdentPackage(&((*(_self_))._field_files), &((*(_53059_s)).get()._field_Ident), false) != nullptr)) {
		_1aa8dbbb5_pushErr(_self_, (*(_53043_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_53059_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1acd6aaae_checkImportSelection(_1aa8d92de_Sema* _self_, jule::Ptr<_1db944d0d_Token>* _53043_ident, jule::Ptr<_1aa889426_Fn>* _53059_s) {
	if ((!(_1aa8dc38b_isAccessibleDefine(_self_, (*(_53059_s)).get()._field_Public, (*(_53059_s)).get()._field_Token)))) {
		_1aa8dbbb5_pushErr(_self_, (*(_53043_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_53043_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1aa8dbed4_pushSuggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1aa8d044a_defByIdentPackage(&((*(_self_))._field_files), &((*(_53059_s)).get()._field_Ident), false) != nullptr)) {
		_1aa8dbbb5_pushErr(_self_, (*(_53043_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_53059_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}



inline jule::Bool _1aa8dded6_checkImportSelectedSelections(_1aa8d92de_Sema* _self_, jule::Ptr<_1aa8d101c_ImportInfo>* _54453_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_54453_imp)).get()._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad3a8052:;
		if (it != expr_end) {
			jule::Ptr<_1db944d0d_Token> _54616_ident = *it;
			{
				if (_54616_ident.get()._field_Kind.equal("self", 4)) {
					goto _iter_next_1ad3a8052;
				};
				if (_1aa8dd436_isDuplicatedImportSelection(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_54453_imp)))), _54616_ident.get()._field_Kind)) {
					_1aa8dbbb5_pushErr(_self_, _54616_ident, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_54616_ident.get()._field_Kind, &__jule_any_type5)}));
					_1aa8dbed4_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1ad3a8052;
				};
				jule::Any _55821_def = _1aa8dd7ee_getImportDef(_self_, _54616_ident.get()._field_Kind, _54453_imp);;
				{
					auto &_match_expr{ _55821_def };
					
					if (_match_expr.type == &__jule_any_type4) {
						_case_begin_1ad3a874a:;
						{
							goto _iter_next_1ad3a8052;
						}
					}
					else if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1ad3aa87e:;
						{
							jule::Ptr<_1aa908c59_Var> _56425_v = _55821_def.cast_ptr<_1aa908c59_Var>(&__jule_any_type8);;
							__jule_func_result=(_1ad3ac6a5_checkImportSelection(_self_, &(_54616_ident), &(_56425_v)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type67) {
						_case_begin_1ad3aa8e5:;
						{
							jule::Ptr<_1aa982b29_TypeAlias> _56725_ta = _55821_def.cast_ptr<_1aa982b29_TypeAlias>(&__jule_any_type67);;
							__jule_func_result=(_1ad3b15ee_checkImportSelection(_self_, &(_54616_ident), &(_56725_ta)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type66) {
						_case_begin_1ad3ab462:;
						{
							jule::Ptr<_1aa8740c0_Struct> _57025_s = _55821_def.cast_ptr<_1aa8740c0_Struct>(&__jule_any_type66);;
							__jule_func_result=(_1ad3b53b1_checkImportSelection(_self_, &(_54616_ident), &(_57025_s)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type10) {
						_case_begin_1ad3ab4c8:;
						{
							jule::Ptr<_1aa89b647_Trait> _57325_t = _55821_def.cast_ptr<_1aa89b647_Trait>(&__jule_any_type10);;
							__jule_func_result=(_1acd5e2cd_checkImportSelection(_self_, &(_54616_ident), &(_57325_t)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type68) {
						_case_begin_1ad3ab53e:;
						{
							jule::Ptr<_1aa89ddca_Enum> _57625_e = _55821_def.cast_ptr<_1aa89ddca_Enum>(&__jule_any_type68);;
							__jule_func_result=(_1acd62de7_checkImportSelection(_self_, &(_54616_ident), &(_57625_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type69) {
						_case_begin_1ad3ab5a5:;
						{
							jule::Ptr<_1aa8a04c5_TypeEnum> _57925_e = _55821_def.cast_ptr<_1aa8a04c5_TypeEnum>(&__jule_any_type69);;
							__jule_func_result=(_1acd66bba_checkImportSelection(_self_, &(_54616_ident), &(_57925_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type65) {
						_case_begin_1ad3ab61b:;
						{
							jule::Ptr<_1aa889426_Fn> _58225_f = _55821_def.cast_ptr<_1aa889426_Fn>(&__jule_any_type65);;
							__jule_func_result=(_1acd6aaae_checkImportSelection(_self_, &(_54616_ident), &(_58225_f)) && __jule_func_result);
						}
					}
					else {
						_case_begin_1ad3aa6b4:;
						{
							_1aa8dbbb5_pushErr(_self_, _54616_ident, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any(_54616_ident.get()._field_Kind, &__jule_any_type5)}));
							__jule_func_result=false;
							goto _iter_next_1ad3a8052;
						}
					}
					_match_end_1ad3aa65e:;
				};
			}
			_iter_next_1ad3a8052:;
			++it;
			goto _iter_begin_1ad3a8052;
		}
		_iter_end_1ad3a8052:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1acd706b8_checkImportsAllSelectionsFromCollection(_1aa8d92de_Sema* _self_, jule::Slice<jule::Ptr<_1aa908c59_Var>>* _59362_s, jule::Ptr<_1db944d0d_Token>* _59371_et) {
	jule::Bool _59417_ok = true;;
	{
		auto expr = _59362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd7239b:;
		if (it != expr_end) {
			jule::Ptr<_1aa908c59_Var> *_59516_d = it;
			{
				if ((*(_59516_d)).get()._field_Public) {
					_59417_ok=(_1ad3ac6a5_checkImportSelection(_self_, _59371_et, _59516_d) && _59417_ok);
				};
			}
			_iter_next_1acd7239b:;
			++it;
			goto _iter_begin_1acd7239b;
		}
		_iter_end_1acd7239b:;
	};
	return _59417_ok;;
}

inline jule::Bool _1acd73c2c_checkImportsAllSelectionsFromCollection(_1aa8d92de_Sema* _self_, jule::Slice<jule::Ptr<_1aa982b29_TypeAlias>>* _59362_s, jule::Ptr<_1db944d0d_Token>* _59371_et) {
	jule::Bool _59417_ok = true;;
	{
		auto expr = _59362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd750b3:;
		if (it != expr_end) {
			jule::Ptr<_1aa982b29_TypeAlias> *_59516_d = it;
			{
				if ((*(_59516_d)).get()._field_Public) {
					_59417_ok=(_1ad3b15ee_checkImportSelection(_self_, _59371_et, _59516_d) && _59417_ok);
				};
			}
			_iter_next_1acd750b3:;
			++it;
			goto _iter_begin_1acd750b3;
		}
		_iter_end_1acd750b3:;
	};
	return _59417_ok;;
}

inline jule::Bool _1acd74304_checkImportsAllSelectionsFromCollection(_1aa8d92de_Sema* _self_, jule::Slice<jule::Ptr<_1aa8740c0_Struct>>* _59362_s, jule::Ptr<_1db944d0d_Token>* _59371_et) {
	jule::Bool _59417_ok = true;;
	{
		auto expr = _59362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd77cb9:;
		if (it != expr_end) {
			jule::Ptr<_1aa8740c0_Struct> *_59516_d = it;
			{
				if ((*(_59516_d)).get()._field_Public) {
					_59417_ok=(_1ad3b53b1_checkImportSelection(_self_, _59371_et, _59516_d) && _59417_ok);
				};
			}
			_iter_next_1acd77cb9:;
			++it;
			goto _iter_begin_1acd77cb9;
		}
		_iter_end_1acd77cb9:;
	};
	return _59417_ok;;
}

inline jule::Bool _1acd7964a_checkImportsAllSelectionsFromCollection(_1aa8d92de_Sema* _self_, jule::Slice<jule::Ptr<_1aa889426_Fn>>* _59362_s, jule::Ptr<_1db944d0d_Token>* _59371_et) {
	jule::Bool _59417_ok = true;;
	{
		auto expr = _59362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd7a9e2:;
		if (it != expr_end) {
			jule::Ptr<_1aa889426_Fn> *_59516_d = it;
			{
				if ((*(_59516_d)).get()._field_Public) {
					_59417_ok=(_1acd6aaae_checkImportSelection(_self_, _59371_et, _59516_d) && _59417_ok);
				};
			}
			_iter_next_1acd7a9e2:;
			++it;
			goto _iter_begin_1acd7a9e2;
		}
		_iter_end_1acd7a9e2:;
	};
	return _59417_ok;;
}

inline jule::Bool _1acd79c33_checkImportsAllSelectionsFromCollection(_1aa8d92de_Sema* _self_, jule::Slice<jule::Ptr<_1aa89b647_Trait>>* _59362_s, jule::Ptr<_1db944d0d_Token>* _59371_et) {
	jule::Bool _59417_ok = true;;
	{
		auto expr = _59362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd7d6a4:;
		if (it != expr_end) {
			jule::Ptr<_1aa89b647_Trait> *_59516_d = it;
			{
				if ((*(_59516_d)).get()._field_Public) {
					_59417_ok=(_1acd5e2cd_checkImportSelection(_self_, _59371_et, _59516_d) && _59417_ok);
				};
			}
			_iter_next_1acd7d6a4:;
			++it;
			goto _iter_begin_1acd7d6a4;
		}
		_iter_end_1acd7d6a4:;
	};
	return _59417_ok;;
}

inline jule::Bool _1acd7c8e5_checkImportsAllSelectionsFromCollection(_1aa8d92de_Sema* _self_, jule::Slice<jule::Ptr<_1aa89ddca_Enum>>* _59362_s, jule::Ptr<_1db944d0d_Token>* _59371_et) {
	jule::Bool _59417_ok = true;;
	{
		auto expr = _59362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd81366:;
		if (it != expr_end) {
			jule::Ptr<_1aa89ddca_Enum> *_59516_d = it;
			{
				if ((*(_59516_d)).get()._field_Public) {
					_59417_ok=(_1acd62de7_checkImportSelection(_self_, _59371_et, _59516_d) && _59417_ok);
				};
			}
			_iter_next_1acd81366:;
			++it;
			goto _iter_begin_1acd81366;
		}
		_iter_end_1acd81366:;
	};
	return _59417_ok;;
}

inline jule::Bool _1acd805a7_checkImportsAllSelectionsFromCollection(_1aa8d92de_Sema* _self_, jule::Slice<jule::Ptr<_1aa8a04c5_TypeEnum>>* _59362_s, jule::Ptr<_1db944d0d_Token>* _59371_et) {
	jule::Bool _59417_ok = true;;
	{
		auto expr = _59362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd840b1:;
		if (it != expr_end) {
			jule::Ptr<_1aa8a04c5_TypeEnum> *_59516_d = it;
			{
				if ((*(_59516_d)).get()._field_Public) {
					_59417_ok=(_1acd66bba_checkImportSelection(_self_, _59371_et, _59516_d) && _59417_ok);
				};
			}
			_iter_next_1acd840b1:;
			++it;
			goto _iter_begin_1acd840b1;
		}
		_iter_end_1acd840b1:;
	};
	return _59417_ok;;
}



inline jule::Bool _1aa8de712_checkImportAllSelections(_1aa8d92de_Sema* _self_, jule::Ptr<_1aa8d101c_ImportInfo>* _60344_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_60344_imp)).get()._field_Package.get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd6ea6e:;
		if (it != expr_end) {
			jule::Ptr<_1aa94d51d_SymbolTable> *_60516_file = it;
			{
				__jule_func_result=(_1acd706b8_checkImportsAllSelectionsFromCollection(_self_, &((*(_60516_file)).get()._field_Vars), &((*(_60344_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1acd73c2c_checkImportsAllSelectionsFromCollection(_self_, &((*(_60516_file)).get()._field_TypeAliases), &((*(_60344_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1acd74304_checkImportsAllSelectionsFromCollection(_self_, &((*(_60516_file)).get()._field_Structs), &((*(_60344_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1acd7964a_checkImportsAllSelectionsFromCollection(_self_, &((*(_60516_file)).get()._field_Funcs), &((*(_60344_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1acd79c33_checkImportsAllSelectionsFromCollection(_self_, &((*(_60516_file)).get()._field_Traits), &((*(_60344_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1acd7c8e5_checkImportsAllSelectionsFromCollection(_self_, &((*(_60516_file)).get()._field_Enums), &((*(_60344_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1acd805a7_checkImportsAllSelectionsFromCollection(_self_, &((*(_60516_file)).get()._field_TypeEnums), &((*(_60344_imp)).get()._field_Token)) && __jule_func_result);
			}
			_iter_next_1acd6ea6e:;
			++it;
			goto _iter_begin_1acd6ea6e;
		}
		_iter_end_1acd6ea6e:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1aa8dea31_checkImportSelections(_1aa8d92de_Sema* _self_, jule::Ptr<_1aa8d101c_ImportInfo>* _61745_imp) {
	jule::Bool __jule_func_result = false;
	if (((*(_61745_imp)).get()._field_Selected.len() > 0LL)) {
		__jule_func_result = _1aa8dded6_checkImportSelectedSelections(_self_, _61745_imp);
		return __jule_func_result;;
	} else if ((*(_61745_imp)).get()._field_ImportAll) {
		__jule_func_result = _1aa8de712_checkImportAllSelections(_self_, _61745_imp);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1aa8ded3e_isUseAliasDuplication(_1aa8d92de_Sema* _self_, jule::Ptr<_1aa8d101c_ImportInfo>* _62641_imp) {
	if (((*(_62641_imp)).get()._field_Alias.len() == 0LL)) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd8646a:;
		if (it != expr_end) {
			jule::Ptr<_1aa8d101c_ImportInfo> _63121_imp2 = *it;
			{
				if ((_63121_imp2 == (*(_62641_imp)))) {
					goto _iter_end_1acd8646a;
				};
				if ((_63121_imp2.get()._field_Alias == (*(_62641_imp)).get()._field_Alias)) {
					return true;;
				};
				if (((_63121_imp2.get()._field_Ident == _63121_imp2.get()._field_LinkPath) && (_63121_imp2.get()._field_Ident == (*(_62641_imp)).get()._field_Alias))) {
					return true;;
				};
			}
			_iter_next_1acd8646a:;
			++it;
			goto _iter_begin_1acd8646a;
		}
		_iter_end_1acd8646a:;
	};
	return false;;
}



inline jule::Bool _1aa8e014c_checkImport(_1aa8d92de_Sema* _self_, jule::Ptr<_1aa8d101c_ImportInfo>* _64635_imp) {
	if (((*(_64635_imp)).get()._field_CppLinked || ((*(_64635_imp)).get()._field_Package.get()._field_Files.len() == 0LL))) {
		return true;;
	};
	if (_1aa8ded3e_isUseAliasDuplication(_self_, _64635_imp)) {
		_1aa8dbbb5_pushErr(_self_, (*(_64635_imp)).get()._field_Token, jule::Str("identifier duplication: @ is already used for another use declaration above", 75), jule::Slice<jule::Any>::make({jule::Any((*(_64635_imp)).get()._field_Alias, &__jule_any_type5)}));
		_1aa8dbed4_pushSuggestion(_self_, jule::Str("rename alias for this use declaration to avoid duplication", 58), jule::Slice<jule::Any>());
	};
	if ((!((*(_64635_imp)).get()._field_Duplicate))) {
		jule::Ptr<_1aa8d92de_Sema> _65721_sema = jule::new_ptr<_1aa8d92de_Sema>(_1aa8d92de_Sema{._field_flags=(*(_self_))._field_flags, ._field_meta=(*(_self_))._field_meta});;
		_1aa90564b_check(_65721_sema, &((*(_64635_imp)).get()._field_Package.get()._field_Files));
		if ((_65721_sema.get()._field_errors.len() != 0LL)) {
			(*(_self_))._field_errors=jule::append((*(_self_))._field_errors,_65721_sema.get()._field_errors);
			_65721_sema.get()._field_errors=nullptr;
			return false;;
		};
	};
	return _1aa8dea31_checkImportSelections(_self_, _64635_imp);;
}



inline void _1aa8e0328_checkImports(_1aa8d92de_Sema* _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd8a282:;
		if (it != expr_end) {
			jule::Ptr<_1aa94d51d_SymbolTable> _67221_file = *it;
			{
				_1aa8db7ec_setCurrentFile(_self_, _67221_file);
				{
					auto expr = &(_67221_file.get()._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1acd8d098:;
					if (it != expr_end) {
						jule::Ptr<_1aa8d101c_ImportInfo> _67425_imp = *it;
						{
							jule::Bool _67521_ok = _1aa8e014c_checkImport(_self_, &(_67425_imp));;
							if ((!(_67521_ok))) {
								return;;
							};
						}
						_iter_next_1acd8d098:;
						++it;
						goto _iter_begin_1acd8d098;
					}
					_iter_end_1acd8d098:;
				};
			}
			_iter_next_1acd8a282:;
			++it;
			goto _iter_begin_1acd8a282;
		}
		_iter_end_1acd8a282:;
	};
}



inline void _1aa8e0504_implFileImpls(jule::Ptr<_1aa8d92de_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Impls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd8d461:;
		if (it != expr_end) {
			jule::Ptr<_1aa8ac548_Impl> _68521_imp = *it;
			{
				_1aa8ec731_implImpl(_self_, &(_68521_imp));
			}
			_iter_next_1acd8d461:;
			++it;
			goto _iter_begin_1acd8d461;
		}
		_iter_end_1acd8d461:;
	};
}



inline void _1aa8e06d0_implImpls(jule::Ptr<_1aa8d92de_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd8ea6c:;
		if (it != expr_end) {
			jule::Ptr<_1aa94d51d_SymbolTable> _69121_file = *it;
			{
				_1aa8db7ec_setCurrentFile(_self_.ptr(), _69121_file);
				_1aa8e0504_implFileImpls(_self_);
			}
			_iter_next_1acd8ea6c:;
			++it;
			goto _iter_begin_1acd8ea6c;
		}
		_iter_end_1acd8ea6c:;
	};
}



inline void _1aa8e08ab_checkEnums(jule::Ptr<_1aa8d92de_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd90ad4:;
		if (it != expr_end) {
			jule::Ptr<_1aa94d51d_SymbolTable> _69821_file = *it;
			{
				_1aa8db7ec_setCurrentFile(_self_.ptr(), _69821_file);
				_1aa8e9343_checkEnumDecls(_self_);
			}
			_iter_next_1acd90ad4:;
			++it;
			goto _iter_begin_1acd90ad4;
		}
		_iter_end_1acd90ad4:;
	};
}



inline void _1aa8e0a87_checkFileInherits(jule::Ptr<_1aa8d92de_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd91871:;
		if (it != expr_end) {
			jule::Ptr<_1aa89b647_Trait> _70521_t = *it;
			{
				jule::Bool _70617_ok = _1aa8ea9d7__checkTraitDeclInherits(_self_, &(_70521_t));;
				if ((!(_70617_ok))) {
					return;;
				};
			}
			_iter_next_1acd91871:;
			++it;
			goto _iter_begin_1acd91871;
		}
		_iter_end_1acd91871:;
	};
}



inline void _1aa8e0c63_checkInherits(jule::Ptr<_1aa8d92de_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd91ca0:;
		if (it != expr_end) {
			jule::Ptr<_1aa94d51d_SymbolTable> _71421_file = *it;
			{
				_1aa8db7ec_setCurrentFile(_self_.ptr(), _71421_file);
				_1aa8e0a87_checkFileInherits(_self_);
			}
			_iter_next_1acd91ca0:;
			++it;
			goto _iter_begin_1acd91ca0;
		}
		_iter_end_1acd91ca0:;
	};
}



inline _1aa992e58_typeChecker _1aa8e11b4_typeChecker(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Trait<_1aa9a0509_Lookup> _72035_l, jule::Slice<jule::Ptr<_1aa982b29_TypeAlias>> _72050_generics, jule::Ptr<_1aa992078_referencer> _72113_referencer) {
	_1aa992e58_typeChecker _72217_tc = _1aa992e58_typeChecker{._field_s=_self_, ._field_rootLookup=_72035_l, ._field_lookup=_72035_l, ._field_referencer=_72113_referencer, ._field_useGenerics=_72050_generics, };;
	{
		auto &_match_expr{ _72035_l };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1acd945ee:;
			{
				jule::Ptr<_1aa8b91d1_scopeChecker> _73121_hard = _1aa8bc26c_getHardRoot(_72035_l.cast_ptr<_1aa8b91d1_scopeChecker>(0));;
				_72217_tc._field_refers=_73121_hard.get()._field_owner.get()._field_Refers;
			}
		}
		_match_end_1acd94500:;
	};
	if (((_72113_referencer != nullptr) && (_72113_referencer.get()._field_refs != nullptr))) {
		{
			auto &_match_expr{ _72113_referencer.get()._field_owner };
			
			if (_match_expr.type == &__jule_any_type67) {
				_case_begin_1acd959c9:;
				{
					_72217_tc._field_ownerAlias=_72113_referencer.get()._field_owner.cast_ptr<_1aa982b29_TypeAlias>(&__jule_any_type67);
				}
			}
			_match_end_1acd95974:;
		};
	};
	return _72217_tc;;
}



inline jule::Ptr<_1aa983872_TypeKind> _1aa8e16ae_buildTypeWithRefers(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Ptr<_1aa854028_TypeDecl>* _74744_t, jule::Trait<_1aa9a0509_Lookup> _74767_l, jule::Slice<jule::Ptr<_1aa982b29_TypeAlias>> _74813_generics, jule::Ptr<_1aa992078_referencer> _74841_referencer) {
	return ({ auto _wrap_copy = _1aa8e11b4_typeChecker(_self_, _74767_l, _74813_generics, _74841_referencer); _1aa99a1c4_checkDecl(&_wrap_copy, _74744_t); });;
}



inline jule::Bool _1aa8e1ba9_checkTypeWithRefers(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Ptr<_1aa9889ba_TypeSymbol>* _75444_t, jule::Trait<_1aa9a0509_Lookup> _75464_l, jule::Slice<jule::Ptr<_1aa982b29_TypeAlias>> _75513_generics, jule::Ptr<_1aa992078_referencer> _75541_referencer) {
	jule::Bool __jule_func_result = false;
	if (_1aa988d72_checked((*(_75444_t)).ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*(_75444_t)).get()._field_Kind=_1aa8e16ae_buildTypeWithRefers(_self_, &((*(_75444_t)).get()._field_Decl), _75464_l, _75513_generics, _75541_referencer);
	__jule_func_result = _1aa988d72_checked((*(_75444_t)).ptr());
	return __jule_func_result;;
}



inline jule::Ptr<_1aa8aa69a_constraintChecker> _1aa8e1e1d_constraintChecker(jule::Ptr<_1aa8d92de_Sema> _self_) {
	return jule::new_ptr<_1aa8aa69a_constraintChecker>(_1aa8aa69a_constraintChecker{._field_s=_self_, });;
}



inline jule::Bool _1aa8e22c5_checkType(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Ptr<_1aa9889ba_TypeSymbol>* _76934_t, jule::Trait<_1aa9a0509_Lookup> _76954_l) {
	return _1aa8e1ba9_checkTypeWithRefers(_self_, _76934_t, _76954_l, nullptr, nullptr);;
}



inline jule::Ptr<_1aa983872_TypeKind> _1aa8e2726_buildTypeWithGenerics(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Ptr<_1aa854028_TypeDecl>* _77546_t, jule::Slice<jule::Ptr<_1aa982b29_TypeAlias>> _77613_generics, jule::Ptr<_1aa890031_ReferenceStack> _77641_refers) {
	jule::Ptr<_1aa992e58_typeChecker> _77717_tc = jule::new_ptr<_1aa992e58_typeChecker>(_1aa992e58_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1aa9a0509_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1aa9a0509_Lookup>(_self_, 3), ._field_refers=_77641_refers, ._field_useGenerics=_77613_generics, });;
	return _1aa99a1c4_checkDecl(_77717_tc.ptr(), _77546_t);;
}



inline jule::Ptr<_1aa983872_TypeKind> _1aa8e2a34_buildType(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Ptr<_1aa854028_TypeDecl>* _78834_t) {
	return _1aa8e2726_buildTypeWithGenerics(_self_, _78834_t, nullptr, nullptr);;
}



inline jule::Ptr<_1aa983872_TypeKind> _1aa8e2d42_selectType(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Ptr<_1aa854028_TypeDecl>* _79335_t) {
	jule::Ptr<_1aa992e58_typeChecker> _79417_tc = jule::new_ptr<_1aa992e58_typeChecker>(_1aa992e58_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1aa9a0509_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1aa9a0509_Lookup>(_self_, 3), ._field_selection=true, });;
	return _1aa99a1c4_checkDecl(_79417_tc.ptr(), _79335_t);;
}



inline jule::Ptr<_1aa959903_Eval> _1aa8e3293_evalpd(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Trait<_1aa9a0509_Lookup> _80530_l, jule::Ptr<_1aa983872_TypeKind> _80545_p, jule::Ptr<_1aa908c59_Var> _80563_owner) {
	jule::Ptr<_1aa959903_Eval> _80617_e = jule::new_ptr<_1aa959903_Eval>(_1aa959903_Eval{._field_s=_self_, ._field_lookup=_80530_l, ._field_owner=_80563_owner, });;
	{
		auto &_match_expr{ _80530_l };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1acd9dbad:;
			{
				_80617_e.get()._field_unsafety=_1aa8bb37b_isUnsafe(_80530_l.cast_ptr<_1aa8b91d1_scopeChecker>(0));
			}
		}
		_match_end_1acd9db47:;
	};
	_80617_e.get()._field_prefix=_80545_p;
	return _80617_e;;
}



inline jule::Ptr<_1aa959903_Eval> _1aa8e364a_evalp(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Trait<_1aa9a0509_Lookup> _82029_l, jule::Ptr<_1aa983872_TypeKind> _82044_p) {
	return _1aa8e3293_evalpd(_self_, _82029_l, _82044_p, nullptr);;
}



inline jule::Ptr<_1aa959903_Eval> _1aa8e3958_eval(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Trait<_1aa9a0509_Lookup> _82528_l) {
	return _1aa8e364a_evalp(_self_, _82528_l, nullptr);;
}



inline jule::Bool _1aa8e3e53_checkAssignType(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Bool _82935_destIsRef, jule::Ptr<_1aa983872_TypeKind>* _82957_dest, jule::Ptr<_1aa957d85_Data>* _83014_d, jule::Ptr<_1db944d0d_Token> _83028_errorToken) {
	if ((*(_83014_d)).get()._field_Decl) {
		_1aa8dbbb5_pushErr(_self_.ptr(), _83028_errorToken, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return false;;
	};
	if (_82935_destIsRef) {
		if ((!(_1aa98407b_Equal((*(_82957_dest)), (*(_83014_d)).get()._field_Kind)))) {
			_1aa8dbbb5_pushErr(_self_.ptr(), _83028_errorToken, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1aa983c6d_Str((*(_82957_dest)).ptr()), &__jule_any_type5),jule::Any(_1aa983c6d_Str((*(_83014_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
			return false;;
		};
	} else {
		jule::Ptr<_1aa93d81b_assignTypeChecker> _84121_atc = jule::new_ptr<_1aa93d81b_assignTypeChecker>(_1aa93d81b_assignTypeChecker{._field_s=_self_, ._field_dest=(*(_82957_dest)), ._field_d=(*(_83014_d)), ._field_errorToken=_83028_errorToken});;
		jule::Bool _84717_ok = _1aa93e993_check(_84121_atc.ptr());;
		if ((!(_84717_ok))) {
			return false;;
		};
	};
	if (((!(_1aa958748_IsConst((*(_83014_d)).ptr()))) || (_1aa985c5e_Prim((*(_82957_dest)).ptr()) == nullptr))) {
		return true;;
	};
	jule::Str _85717_kind = _1aa985c5e_Prim((*(_82957_dest)).ptr()).get()._field_Kind;;
	{
		
		if (_1dc5c14a0_IsSigInt(_85717_kind)) {
			_case_begin_1acda5203:;
			{
				_1c0904877_SetI64((*(_83014_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_1c0904129_AsI64((*(_83014_d)).get()._field_Constant.ptr())));
			}
		}
		else if (_1dc5c178b_IsUnsigInt(_85717_kind)) {
			_case_begin_1acda527a:;
			{
				_1c0904aec_SetU64((*(_83014_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_1c090438d_AsU64((*(_83014_d)).get()._field_Constant.ptr())));
			}
		}
		else if (_1dc5c1d52_IsFloat(_85717_kind)) {
			_case_begin_1acda5302:;
			{
				_1c090536c_SetF64((*(_83014_d)).get()._field_Constant.ptr(), static_cast<jule::F64>(_1c0904602_AsF64((*(_83014_d)).get()._field_Constant.ptr())));
			}
		}
		_match_end_1acda5137:;
	};
	return true;;
}



inline jule::Bool _1aa8e43a4_checkTypeCompatibility(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Ptr<_1aa983872_TypeKind>* _87147_dest, jule::Ptr<_1aa983872_TypeKind>* _87214_src, jule::Ptr<_1db944d0d_Token>* _87235_errorToken) {
	if (((*(_87214_src)) == nullptr)) {
		_1aa8dbbb5_pushErr(_self_.ptr(), (*(_87235_errorToken)), jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1aa983c6d_Str((*(_87147_dest)).ptr()), &__jule_any_type5),jule::Any(_1aa983c6d_Str((*(_87214_src)).ptr()), &__jule_any_type5)}));
		return false;;
	};
	if ((_1aa9878ed_Tup((*(_87214_src)).ptr()) != nullptr)) {
		_1aa8dbbb5_pushErr(_self_.ptr(), (*(_87235_errorToken)), jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1aa983c6d_Str((*(_87147_dest)).ptr()), &__jule_any_type5),jule::Any(_1aa983c6d_Str((*(_87214_src)).ptr()), &__jule_any_type5)}));
		return false;;
	};
	_1aa93bbe3_typeCompatibilityChecker _88617_tcc = _1aa93bbe3_typeCompatibilityChecker{._field_s=_self_, ._field_dest=(*(_87147_dest)), ._field_src=(*(_87214_src)), ._field_errorToken=(*(_87235_errorToken))};;
	if (_1aa93d2cc_check(&_88617_tcc)) {
		return true;;
	};
	_1aa8dbbb5_pushErr(_self_.ptr(), (*(_87235_errorToken)), jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1aa983c6d_Str((*(_87147_dest)).ptr()), &__jule_any_type5),jule::Any(_1aa983c6d_Str((*(_87214_src)).ptr()), &__jule_any_type5)}));
	return false;;
}



inline jule::Ptr<_1aa983872_TypeKind> _1aa8e4827_buildNonGenericTypeKind(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Ptr<_1aa854028_TypeDecl>* _90748_ast, jule::Slice<jule::Ptr<_1aa861321_GenericDecl>>* _90814_generics, jule::Slice<jule::Ptr<_1aa983872_TypeKind>>* _90850_ignored) {
	jule::Ptr<_1aa992e58_typeChecker> _90917_tc = jule::new_ptr<_1aa992e58_typeChecker>(_1aa992e58_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1aa9a0509_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1aa9a0509_Lookup>(_self_, 3), ._field_ignoreGenerics=(*(_90814_generics)), ._field_ignoredGenerics=(&((*(_90850_ignored)))), });;
	return _1aa99a1c4_checkDecl(_90917_tc.ptr(), _90748_ast);;
}



inline jule::Bool _1aa8e4c12_buildFnNonGenericTypeKinds(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Ptr<_1aa88c0c7_FnIns>* _91951_f, jule::Slice<jule::Ptr<_1aa983872_TypeKind>>* _91967_ignored) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Slice<jule::Ptr<_1aa861321_GenericDecl>> _92117_generics = nullptr;;
	if (_1aa889aec_IsMethod((*(_91951_f)).get()._field_Decl.ptr())) {
		_92117_generics=jule::append((*(_91951_f)).get()._field_Decl.get()._field_Generics,(*(_91951_f)).get()._field_Decl.get()._field_Owner.get()._field_Generics);
	} else {
		_92117_generics=(*(_91951_f)).get()._field_Decl.get()._field_Generics;
	};
	{
		auto expr = &((*(_91951_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acdadd22:;
		if (it != expr_end) {
			jule::Ptr<_1aa88b208_ParamIns> _92821_p = *it;
			{
				if ((!(_1aa888216_IsSelf(_92821_p.get()._field_Decl.ptr())))) {
					_92821_p.get()._field_Kind=_1aa8e4827_buildNonGenericTypeKind(_self_, &(_92821_p.get()._field_Decl.get()._field_Kind.get()._field_Decl), &(_92117_generics), _91967_ignored);
					__jule_func_result=(__jule_func_result && (_92821_p.get()._field_Kind != nullptr));
				};
			}
			_iter_next_1acdadd22:;
			++it;
			goto _iter_begin_1acdadd22;
		}
		_iter_end_1acdadd22:;
	};
	if ((!(_1aa889888_IsVoid((*(_91951_f)).get()._field_Decl.ptr())))) {
		(*(_91951_f)).get()._field_Result=_1aa8e4827_buildNonGenericTypeKind(_self_, &((*(_91951_f)).get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl), &(_92117_generics), _91967_ignored);
		__jule_func_result=(__jule_func_result && ((*(_91951_f)).get()._field_Result != nullptr));
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1aa88c0c7_FnIns> _1aa8e5031_getTraitCheckFnKind(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Ptr<_1aa889426_Fn>* _94144_f) {
	if (((*(_94144_f)).get()._field_Instances.len() == 1LL)) {
		return (*(_94144_f)).get()._field_Instances[0LL];;
	};
	jule::Ptr<_1aa88c0c7_FnIns> _94517_ins = _1aa88a812_instanceForce((*(_94144_f)));;
	jule::Ptr<_1aa992e58_typeChecker> _94717_tc = jule::new_ptr<_1aa992e58_typeChecker>(_1aa992e58_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1aa9a0509_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1aa9a0509_Lookup>(_self_, 3), });;
	{
		auto expr = &(_94517_ins.get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acdb3541:;
		if (it != expr_end) {
			jule::Ptr<_1aa88b208_ParamIns> _95221_p = *it;
			{
				if ((!(_1aa888216_IsSelf(_95221_p.get()._field_Decl.ptr())))) {
					_95221_p.get()._field_Kind=_1aa99a1c4_checkDecl(_94717_tc.ptr(), &(_95221_p.get()._field_Decl.get()._field_Kind.get()._field_Decl));
				};
			}
			_iter_next_1acdb3541:;
			++it;
			goto _iter_begin_1acdb3541;
		}
		_iter_end_1acdb3541:;
	};
	if ((!(_1aa889888_IsVoid((*(_94144_f)).ptr())))) {
		_94517_ins.get()._field_Result=_1aa99a1c4_checkDecl(_94717_tc.ptr(), &((*(_94144_f)).get()._field_Result.get()._field_Kind.get()._field_Decl));
	};
	return _94517_ins;;
}



inline jule::Bool _1aa8e5482_checkConstraintsFn(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Ptr<_1aa88c0c7_FnIns>* _96443_f, jule::Ptr<_1db944d0d_Token>* _96459_et, jule::Ptr<_1aa88c0c7_FnIns> _96475_exist) {
	jule::Ptr<_1aa8aa69a_constraintChecker> _96517_cc = _1aa8e1e1d_constraintChecker(_self_);;
	_96517_cc.get()._field_et=(*(_96459_et));
	_96517_cc.get()._field_fi=(*(_96443_f));
	if ((_96475_exist != nullptr)) {
		{
			auto expr = &(_96475_exist.get()._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1acdb6841:;
			if (it != expr_end) {
				jule::I64 _96918_i = it - expr->begin();
				jule::Ptr<_1aa9820e0_InsGeneric> _96925_g = *it;
				{
					(*(_96443_f)).get()._field_Generics[_96918_i].get()._field_Constraint=_96925_g.get()._field_Constraint;
				}
				_iter_next_1acdb6841:;
				++it;
				_96918_i++;
				goto _iter_begin_1acdb6841;
			}
			_iter_end_1acdb6841:;
		};
	} else {
		_96517_cc.get()._field_uniq=true;
	};
	return _1aa8ab57a_check(_96517_cc);;
}



inline jule::Bool _1aa8e58d3_checkConstraintsStruct(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Ptr<_1aa876dd6_StructIns>* _97847_s, jule::Ptr<_1db944d0d_Token>* _97867_et, jule::Ptr<_1aa876dd6_StructIns> _97883_exist) {
	jule::Ptr<_1aa8aa69a_constraintChecker> _97917_cc = _1aa8e1e1d_constraintChecker(_self_);;
	_97917_cc.get()._field_et=(*(_97867_et));
	_97917_cc.get()._field_si=(*(_97847_s));
	if ((_97883_exist != nullptr)) {
		{
			auto expr = &(_97883_exist.get()._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1acdb92a0:;
			if (it != expr_end) {
				jule::I64 _98318_i = it - expr->begin();
				jule::Ptr<_1aa9820e0_InsGeneric> _98325_g = *it;
				{
					(*(_97847_s)).get()._field_Generics[_98318_i].get()._field_Constraint=_98325_g.get()._field_Constraint;
				}
				_iter_next_1acdb92a0:;
				++it;
				_98318_i++;
				goto _iter_begin_1acdb92a0;
			}
			_iter_end_1acdb92a0:;
		};
	} else {
		_97917_cc.get()._field_uniq=true;
	};
	return _1aa8ab57a_check(_97917_cc);;
}



inline jule::Bool _1aa8e5c8a_fnEnvironment(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Ptr<_1aa88c0c7_FnIns>* _99538_f, jule::Fn<jule::Bool(jule::Ptr<_1aa8d92de_Sema>*,jule::Slice<jule::Ptr<_1aa982b29_TypeAlias>>*)> _99549_algo) {
	jule::Ptr<_1aa8d92de_Sema> _99617_sema = (*(_99538_f)).get()._field_Decl.get()._field_sema;;
	jule::Ptr<_1aa94d51d_SymbolTable> _99717_old = (*(_99538_f)).get()._field_Decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_1aa8db7ec_setCurrentFile((*(_99538_f)).get()._field_Decl.get()._field_sema.ptr(), _99717_old);
	});;
	jule::Ptr<_1aa94d51d_SymbolTable> _99917_file = _1aa8d8134_findFile(&((*(_99538_f)).get()._field_Decl.get()._field_sema.get()._field_files), &((*(_99538_f)).get()._field_Decl.get()._field_Token.get()._field_File));;
	if ((_99917_file != nullptr)) {
		_1aa8db7ec_setCurrentFile((*(_99538_f)).get()._field_Decl.get()._field_sema.ptr(), _99917_file);
	};
	jule::I64 _100417_size = (*(_99538_f)).get()._field_Generics.len();;
	if ((((*(_99538_f)).get()._field_Decl != nullptr) && ((*(_99538_f)).get()._field_Decl.get()._field_Owner != nullptr))) {
		_100417_size+=(*(_99538_f)).get()._field_Decl.get()._field_Owner.get()._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_1aa982b29_TypeAlias>> _100917_generics = jule::Slice<jule::Ptr<_1aa982b29_TypeAlias>>::alloc(0LL, _100417_size);;
	_1aa8d7cd2_appendGenericTypeAliases(&(_100917_generics), _99538_f);
	jule::Bool _101213_ok = _99549_algo(&(_99617_sema), &(_100917_generics));;
	if ((_99617_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_99617_sema.get()._field_errors);
		_99617_sema.get()._field_errors=nullptr;
	};
	return _101213_ok;;
}



inline void _1aa8e6010_checkFnParamKind(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Ptr<_1aa88b208_ParamIns>* _102241_p) {
	(*(_102241_p)).get()._field_Kind.get()._field_Variadic=(*(_102241_p)).get()._field_Decl.get()._field_Variadic;
	if (((*(_102241_p)).get()._field_Decl.get()._field_Reference && (!(_1aa99bed9_isValidForRef(&((*(_102241_p)).get()._field_Kind)))))) {
		_1aa8dbbb5_pushErr(_self_.ptr(), (*(_102241_p)).get()._field_Decl.get()._field_Token, jule::Str("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_1aa983c6d_Str((*(_102241_p)).get()._field_Kind.ptr()), &__jule_any_type5)}));
	};
}



inline jule::Bool _1aa8e631d_reloadFnInsTypes(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Ptr<_1aa88c0c7_FnIns> _102940_f) {
	if ((_1aa88d45d_IsBuiltin(_102940_f.ptr()) || _1aa88d6c2_IsAnon(_102940_f.ptr()))) {
		return true;;
	};
	return _1aa8e5c8a_fnEnvironment(_self_, &(_102940_f), jule::Fn<jule::Bool(jule::Ptr<_1aa8d92de_Sema>*,jule::Slice<jule::Ptr<_1aa982b29_TypeAlias>>*)>([=](jule::Ptr<_1aa8d92de_Sema>* _103343_sema, jule::Slice<jule::Ptr<_1aa982b29_TypeAlias>>* _103361_generics) mutable -> jule::Bool {
		jule::Bool _103421_ok = true;;
		{
			auto expr = &(_102940_f.get()._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1acdc5135:;
			if (it != expr_end) {
				jule::Ptr<_1aa88b208_ParamIns> _103525_p = *it;
				{
					if (_1aa888216_IsSelf(_103525_p.get()._field_Decl.ptr())) {
						if (_1aa88847a_IsRef(_103525_p.get()._field_Decl.ptr())) {
							_103525_p.get()._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(jule::new_ptr<_1aa98cabd_Sptr>(_1aa98cabd_Sptr{._field_Elem=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_102940_f.get()._field_Owner, 0)})}), 11)});
						} else {
							_103525_p.get()._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_102940_f.get()._field_Owner, 0)});
						};
					} else {
						_103525_p.get()._field_Kind=_1aa8e2726_buildTypeWithGenerics((*(_103343_sema)), &(_103525_p.get()._field_Decl.get()._field_Kind.get()._field_Decl), (*(_103361_generics)), _102940_f.get()._field_Refers);
						if ((_103525_p.get()._field_Kind != nullptr)) {
							_1aa8e6010_checkFnParamKind(_self_, &(_103525_p));
						} else {
							_103421_ok=false;
						};
					};
				}
				_iter_next_1acdc5135:;
				++it;
				goto _iter_begin_1acdc5135;
			}
			_iter_end_1acdc5135:;
		};
		if ((!(_1aa889888_IsVoid(_102940_f.get()._field_Decl.ptr())))) {
			_102940_f.get()._field_Result=_1aa8e2726_buildTypeWithGenerics((*(_103343_sema)), &(_102940_f.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl), (*(_103361_generics)), _102940_f.get()._field_Refers);
			_103421_ok=((_102940_f.get()._field_Result != nullptr) && _103421_ok);
		};
		return _103421_ok;;
	}));;
}



inline jule::Bool _1aa8e6791_checkRefValidityForInitExpr(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Bool _106547_leftMut, jule::Ptr<_1aa957d85_Data>* _106567_d, jule::Ptr<_1db944d0d_Token>* _106582_errorToken) {
	{
		auto &_match_expr{ (*(_106567_d)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1acdca602:;
			{
				goto _match_end_1acdc9a63;
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1acdca668:;
			{
				jule::Ptr<_1aa8801a8_TraitSubIdentExprModel> _107021_model = (*(_106567_d)).get()._field_Model.cast_ptr<_1aa8801a8_TraitSubIdentExprModel>(&__jule_any_type70);;
				if ((!(_1aa8d6b6b_isValidModelForRef(&(_107021_model.get()._field_Expr))))) {
					_1aa8dbbb5_pushErr(_self_.ptr(), (*(_106582_errorToken)), jule::Str("you cannot use reference variable @ because reference is dangling", 65), jule::Slice<jule::Any>::make({jule::Any(_107021_model.get()._field_Method.get()._field_Ident, &__jule_any_type5)}));
					return false;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1acdca448:;
			{
				jule::Ptr<_1aa88098e_StructSubIdentExprModel> _107621_model = (*(_106567_d)).get()._field_Model.cast_ptr<_1aa88098e_StructSubIdentExprModel>(&__jule_any_type71);;
				if ((!(_1aa8d6b6b_isValidModelForRef(&(_107621_model.get()._field_Expr.get()._field_Model))))) {
					_1aa8dbbb5_pushErr(_self_.ptr(), (*(_106582_errorToken)), jule::Str("you cannot use reference variable @ because reference is dangling", 65), jule::Slice<jule::Any>::make({jule::Any(_107621_model.get()._field_Field.get()._field_Decl.get()._field_Ident, &__jule_any_type5)}));
					return false;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type72 || _match_expr.type == &__jule_any_type73) {
			_case_begin_1acdca4ae:;
			{
				_1aa8dbbb5_pushErr(_self_.ptr(), (*(_106582_errorToken)), jule::Str("built-in defines cannot pass to references", 42), jule::Slice<jule::Any>());
				return false;;
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1acdca525:;
			{
				jule::Ptr<_1aa87b65a_UnaryExprModel> _108621_unary = (*(_106567_d)).get()._field_Model.cast_ptr<_1aa87b65a_UnaryExprModel>(&__jule_any_type74);;
				if (_108621_unary.get()._field_Op.get()._field_Kind.equal("*", 1)) {
					if ((!(_1aa8d6b6b_isValidModelForRef(&((*(_106567_d)).get()._field_Model))))) {
						_1aa8dbbb5_pushErr(_self_.ptr(), (*(_106582_errorToken)), jule::Str("you cannot use reference variable @ because reference is dangling", 65), jule::Slice<jule::Any>::make({jule::Any(jule::Str("address from * &T", 17), &__jule_any_type5)}));
						return false;;
					};
					goto _match_end_1acdc9a63;
				};
				goto _case_begin_1acdc9ab8;
			}
		}
		else {
			_case_begin_1acdc9ab8:;
			{
				_1aa8dbbb5_pushErr(_self_.ptr(), (*(_106582_errorToken)), jule::Str("references requires variable for assignment", 43), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1acdc9a63:;
	};
	if ((_106547_leftMut && (!((*(_106567_d)).get()._field_Mutable)))) {
		_1aa8dbbb5_pushErr(_self_.ptr(), (*(_106582_errorToken)), jule::Str("mutable reference cannot point to immutable data", 48), jule::Slice<jule::Any>());
		return false;;
	};
	return true;;
}



inline jule::Bool _1aa8e6d68_checkValidityForInitExpr(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Bool _110644_leftMut, jule::Bool _110659_leftRef, jule::Ptr<_1aa983872_TypeKind>* _110710_leftKind, jule::Ptr<_1aa957d85_Data>* _110736_d, jule::Ptr<_1db944d0d_Token>* _110751_errorToken) {
	if (((_110644_leftMut && (!((*(_110736_d)).get()._field_Mutable))) && _1aa985049_Mutable((*(_110736_d)).get()._field_Kind.ptr()))) {
		_1aa8dbbb5_pushErr(_self_.ptr(), (*(_110751_errorToken)), jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1aa983c6d_Str((*(_110736_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
		return false;;
	};
	if (_110659_leftRef) {
		if ((!(_1aa8e6791_checkRefValidityForInitExpr(_self_, _110644_leftMut, _110736_d, _110751_errorToken)))) {
			return false;;
		};
	};
	jule::Ptr<_1aa93d81b_assignTypeChecker> _111717_atc = jule::new_ptr<_1aa93d81b_assignTypeChecker>(_1aa93d81b_assignTypeChecker{._field_s=_self_, ._field_d=(*(_110736_d)), ._field_errorToken=(*(_110751_errorToken))});;
	return _1aa93dee2_checkValidity(_111717_atc.ptr());;
}



inline jule::Bool _1aa8e7231_checkTypeAliasDeclKind(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Ptr<_1aa982b29_TypeAlias>* _112547_ta, jule::Trait<_1aa9a0509_Lookup> _112567_l) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1aa94d51d_SymbolTable> _112617_old = _self_.get()._field_file;;
	__JULE_DEFER({
		_1aa8db7ec_setCurrentFile(_self_.ptr(), _112617_old);
	});;
	if (((*(_112547_ta)).get()._field_Token != nullptr)) {
		jule::Ptr<_1aa94d51d_SymbolTable> _113121_file = _1aa8d8134_findFile(&(_self_.get()._field_files), &((*(_112547_ta)).get()._field_Token.get()._field_File));;
		if ((_113121_file != nullptr)) {
			_1aa8db7ec_setCurrentFile(_self_.ptr(), _113121_file);
		};
	};
	__jule_func_result=_1aa8e1ba9_checkTypeWithRefers(_self_, &((*(_112547_ta)).get()._field_Kind), _112567_l, nullptr, jule::new_ptr<_1aa992078_referencer>(_1aa992078_referencer{._field_ident=(*(_112547_ta)).get()._field_Ident, ._field_owner=jule::Any((*(_112547_ta)), &__jule_any_type67), ._field_refs=(&((*(_112547_ta)).get()._field_Refers))}));
	if (((__jule_func_result && (_1aa986974_Arr((*(_112547_ta)).get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) && _1aa986974_Arr((*(_112547_ta)).get()._field_Kind.get()._field_Kind.ptr()).get()._field_Auto)) {
		_1aa8dbbb5_pushErr(_self_.ptr(), (*(_112547_ta)).get()._field_Kind.get()._field_Decl.get()._field_Token, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
		__jule_func_result=false;
	};
	return __jule_func_result;;
}



inline void _1aa8e7550_checkTypeAliasDecl(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Ptr<_1aa982b29_TypeAlias>* _114843_ta, jule::Trait<_1aa9a0509_Lookup> _114863_l) {
	if (_1db9475a2_IsIgnoreIdent((*(_114843_ta)).get()._field_Ident)) {
		_1aa8dbbb5_pushErr(_self_.ptr(), (*(_114843_ta)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	_1aa8e7231_checkTypeAliasDeclKind(_self_, _114843_ta, _114863_l);
}



inline void _1aa8e77c5_checkTypeAliasDeclDup(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Ptr<_1aa982b29_TypeAlias>* _115646_ta) {
	if (_1db9475a2_IsIgnoreIdent((*(_115646_ta)).get()._field_Ident)) {
		_1aa8dbbb5_pushErr(_self_.ptr(), (*(_115646_ta)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_1aa8dc7dc_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_115646_ta)))), (*(_115646_ta)).get()._field_Ident, (*(_115646_ta)).get()._field_CppLinked)) {
		_1aa8dbbb5_pushErr(_self_.ptr(), (*(_115646_ta)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_115646_ta)).get()._field_Ident, &__jule_any_type5)}));
		_1aa8dbed4_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1aa8e7231_checkTypeAliasDeclKind(_self_, _115646_ta, jule::Trait<_1aa9a0509_Lookup>(_self_, 3));
}



inline jule::Bool _1aa8e7a39_checkTypeAliasDecls(jule::Ptr<_1aa8d92de_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad46e8cc:;
		if (it != expr_end) {
			jule::Ptr<_1aa982b29_TypeAlias> _116921_ta = *it;
			{
				_1aa8e77c5_checkTypeAliasDeclDup(_self_, &(_116921_ta));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ad46e8cc:;
			++it;
			goto _iter_begin_1ad46e8cc;
		}
		_iter_end_1ad46e8cc:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1ad4946e3_checkEnumItemsDup(_1aa8d92de_Sema* _self_, jule::Slice<jule::Ptr<_1aa89d3d5_EnumItem>> _118039_items) {
	{
		auto expr = &(_118039_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad495914:;
		if (it != expr_end) {
			jule::Ptr<_1aa89d3d5_EnumItem> *_118116_item = it;
			{
				if ((*(_118116_item)).get()._field_Ident.empty()) {
					goto _iter_next_1ad495914;
				} else if (_1db9475a2_IsIgnoreIdent((*(_118116_item)).get()._field_Ident)) {
					_1aa8dbbb5_pushErr(_self_, (*(_118116_item)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_118039_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ad496690:;
						if (it != expr_end) {
							jule::Ptr<_1aa89d3d5_EnumItem> *_118724_citem = it;
							{
								if (((*(_118116_item)) == (*(_118724_citem)))) {
									goto _iter_end_1ad496690;
								} else if (((*(_118116_item)).get()._field_Ident == (*(_118724_citem)).get()._field_Ident)) {
									_1aa8dbbb5_pushErr(_self_, (*(_118116_item)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_118116_item)).get()._field_Ident, &__jule_any_type5)}));
									_1aa8dbed4_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1ad496690;
								};
							}
							_iter_next_1ad496690:;
							++it;
							goto _iter_begin_1ad496690;
						}
						_iter_end_1ad496690:;
					};
				};
			}
			_iter_next_1ad495914:;
			++it;
			goto _iter_begin_1ad495914;
		}
		_iter_end_1ad495914:;
	};
}

inline void _1ad49e8a7_checkEnumItemsDup(_1aa8d92de_Sema* _self_, jule::Slice<jule::Ptr<_1aa89ee0e_TypeEnumItem>> _118039_items) {
	{
		auto expr = &(_118039_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad4a0aa6:;
		if (it != expr_end) {
			jule::Ptr<_1aa89ee0e_TypeEnumItem> *_118116_item = it;
			{
				if ((*(_118116_item)).get()._field_Ident.empty()) {
					goto _iter_next_1ad4a0aa6;
				} else if (_1db9475a2_IsIgnoreIdent((*(_118116_item)).get()._field_Ident)) {
					_1aa8dbbb5_pushErr(_self_, (*(_118116_item)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_118039_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ad4a1832:;
						if (it != expr_end) {
							jule::Ptr<_1aa89ee0e_TypeEnumItem> *_118724_citem = it;
							{
								if (((*(_118116_item)) == (*(_118724_citem)))) {
									goto _iter_end_1ad4a1832;
								} else if (((*(_118116_item)).get()._field_Ident == (*(_118724_citem)).get()._field_Ident)) {
									_1aa8dbbb5_pushErr(_self_, (*(_118116_item)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_118116_item)).get()._field_Ident, &__jule_any_type5)}));
									_1aa8dbed4_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1ad4a1832;
								};
							}
							_iter_next_1ad4a1832:;
							++it;
							goto _iter_begin_1ad4a1832;
						}
						_iter_end_1ad4a1832:;
					};
				};
			}
			_iter_next_1ad4a0aa6:;
			++it;
			goto _iter_begin_1ad4a0aa6;
		}
		_iter_end_1ad4a0aa6:;
	};
}



inline void _1aa8e8034_checkEnumItemsStr(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Ptr<_1aa89ddca_Enum>* _120042_e) {
	jule::Ptr<_1aa959903_Eval> _120117_eval = _1aa8e3958_eval(_self_, jule::Trait<_1aa9a0509_Lookup>(_self_, 3));;
	{
		auto expr = &((*(_120042_e)).get()._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad471417:;
		if (it != expr_end) {
			jule::Ptr<_1aa89d3d5_EnumItem> _120221_item = *it;
			{
				if (_1aa89d7c0_AutoExpr(_120221_item.ptr())) {
					_120221_item.get()._field_Value=jule::new_ptr<_1aa958e0d_Value>(_1aa958e0d_Value{._field_Data=jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Constant=static__1c0902875_NewStr(_120221_item.get()._field_Ident)})});
					_120221_item.get()._field_Value.get()._field_Data.get()._field_Model=jule::Any(_120221_item.get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
				} else {
					jule::Ptr<_1aa957d85_Data> _121125_d = _1aa974742_evalExpr(_120117_eval, _120221_item.get()._field_Value.get()._field_Expr);;
					if ((_121125_d == nullptr)) {
						goto _iter_next_1ad471417;
					};
					if ((!(_1aa958748_IsConst(_121125_d.ptr())))) {
						_1aa8dbbb5_pushErr(_self_.ptr(), _120221_item.get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
					};
					_1aa8e3e53_checkAssignType(_self_, false, &((*(_120042_e)).get()._field_Kind.get()._field_Kind), &(_121125_d), _120221_item.get()._field_Token);
					_120221_item.get()._field_Value.get()._field_Data=_121125_d;
				};
			}
			_iter_next_1ad471417:;
			++it;
			goto _iter_begin_1ad471417;
		}
		_iter_end_1ad471417:;
	};
}



inline void _1ad479a08_checkEnumItemInt(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Ptr<_1aa959903_Eval>* _122646_eval, jule::Ptr<_1aa89ddca_Enum>* _122664_e, jule::Ptr<_1aa989339_Prim>* _122675_prim, jule::Ptr<_1aa89d3d5_EnumItem>* _122693_item, jule::U64* _1226115_n) {
	if (_1aa89d7c0_AutoExpr((*(_122693_item)).ptr())) {
		(*(_122693_item)).get()._field_Value=jule::new_ptr<_1aa958e0d_Value>(_1aa958e0d_Value{._field_Data=jule::new_ptr<_1aa957d85_Data>()});
		{
			
{
				_case_begin_1ad47c5ee:;
				{
					(*(_122693_item)).get()._field_Value.get()._field_Data.get()._field_Constant=static__1c0902336_NewU64((*(_1226115_n)));
				}
			}
			_match_end_1ad47bea0:;
		};
		(*(_122693_item)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_122693_item)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	} else {
		jule::Ptr<_1aa957d85_Data> _124121_d = _1aa974742_evalExpr((*(_122646_eval)), (*(_122693_item)).get()._field_Value.get()._field_Expr);;
		if ((_124121_d == nullptr)) {
			return;;
		};
		if ((!(_1aa958748_IsConst(_124121_d.ptr())))) {
			_1aa8dbbb5_pushErr(_self_.ptr(), (*(_122693_item)).get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_1aa8e3e53_checkAssignType(_self_, false, &((*(_122664_e)).get()._field_Kind.get()._field_Kind), &(_124121_d), (*(_122693_item)).get()._field_Token);
		(*(_122693_item)).get()._field_Value.get()._field_Data=_124121_d;
		{
			
{
				_case_begin_1ad4809a9:;
				{
					(*(_1226115_n))=static_cast<jule::U64>(_1c0903678_ReadU64((*(_122693_item)).get()._field_Value.get()._field_Data.get()._field_Constant.ptr()));
				}
			}
			_match_end_1ad480745:;
		};
	};
}

inline void _1ad48796c_checkEnumItemInt(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Ptr<_1aa959903_Eval>* _122646_eval, jule::Ptr<_1aa89ddca_Enum>* _122664_e, jule::Ptr<_1aa989339_Prim>* _122675_prim, jule::Ptr<_1aa89d3d5_EnumItem>* _122693_item, jule::I64* _1226115_n) {
	if (_1aa89d7c0_AutoExpr((*(_122693_item)).ptr())) {
		(*(_122693_item)).get()._field_Value=jule::new_ptr<_1aa958e0d_Value>(_1aa958e0d_Value{._field_Data=jule::new_ptr<_1aa957d85_Data>()});
		{
			
{
				_case_begin_1ad48a475:;
				{
					(*(_122693_item)).get()._field_Value.get()._field_Data.get()._field_Constant=static__1c090208e_NewI64((*(_1226115_n)));
				}
			}
			_match_end_1ad489d9d:;
		};
		(*(_122693_item)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_122693_item)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	} else {
		jule::Ptr<_1aa957d85_Data> _124121_d = _1aa974742_evalExpr((*(_122646_eval)), (*(_122693_item)).get()._field_Value.get()._field_Expr);;
		if ((_124121_d == nullptr)) {
			return;;
		};
		if ((!(_1aa958748_IsConst(_124121_d.ptr())))) {
			_1aa8dbbb5_pushErr(_self_.ptr(), (*(_122693_item)).get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_1aa8e3e53_checkAssignType(_self_, false, &((*(_122664_e)).get()._field_Kind.get()._field_Kind), &(_124121_d), (*(_122693_item)).get()._field_Token);
		(*(_122693_item)).get()._field_Value.get()._field_Data=_124121_d;
		{
			
{
				_case_begin_1ad48d9ea:;
				{
					(*(_1226115_n))=static_cast<jule::I64>(_1c0903414_ReadI64((*(_122693_item)).get()._field_Value.get()._field_Data.get()._field_Constant.ptr()));
				}
			}
			_match_end_1ad48d80d:;
		};
	};
}



inline void _1ad476098_checkEnumItemsInt1(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Ptr<_1aa989339_Prim>* _126144_prim, jule::Ptr<_1aa89ddca_Enum>* _126162_e) {
	jule::U64 _126217_max = 0LLU;;
	{
		
{
			_case_begin_1ad477d69:;
			{
				_126217_max=static_cast<jule::U64>(_1dc5bb0c1_MaxU(_1aa98969c_Str((*(_126144_prim)).ptr())));
			}
		}
		_match_end_1ad477ad3:;
	};
	jule::Ptr<_1aa959903_Eval> _127217_eval = _1aa8e3958_eval(_self_, jule::Trait<_1aa9a0509_Lookup>(_self_, 3));;
	jule::U64 _127317_n = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1aa89d3d5_EnumItem> _127417_first = (*(_126162_e)).get()._field_Items[0LL];;
	_1ad479a08_checkEnumItemInt(_self_, &(_127217_eval), _126162_e, _126144_prim, &(_127417_first), &(_127317_n));
	if ((_127417_first.get()._field_Value.get()._field_Data != nullptr)) {
		{
			
{
				_case_begin_1ad48124b:;
				{
					_127317_n=static_cast<jule::U64>(_1c090438d_AsU64(_127417_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr()));
				}
			}
			_match_end_1ad479d38:;
		};
	};
	{
		auto expr = (*(_126162_e)).get()._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1ad480b74:;
		if (it != expr_end) {
			jule::Ptr<_1aa89d3d5_EnumItem> _128621_item = *it;
			{
				if (((_1aa89d7c0_AutoExpr(_128621_item.ptr()) && (_127317_n > 0LLU)) && ((_126217_max - _127317_n) <= 0LLU))) {
					_1aa8dbbb5_pushErr(_self_.ptr(), _128621_item.get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_1ad480b74;
				};
				(_127317_n)++;
				_1ad479a08_checkEnumItemInt(_self_, &(_127217_eval), _126162_e, _126144_prim, &(_128621_item), &(_127317_n));
			}
			_iter_next_1ad480b74:;
			++it;
			goto _iter_begin_1ad480b74;
		}
		_iter_end_1ad480b74:;
	};
}

inline void _1ad481d51_checkEnumItemsInt1(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Ptr<_1aa989339_Prim>* _126144_prim, jule::Ptr<_1aa89ddca_Enum>* _126162_e) {
	jule::I64 _126217_max = 0LL;;
	{
		
{
			_case_begin_1ad485a58:;
			{
				_126217_max=static_cast<jule::I64>(_1dc5bad29_MaxI(_1aa98969c_Str((*(_126144_prim)).ptr())));
			}
		}
		_match_end_1ad48587c:;
	};
	jule::Ptr<_1aa959903_Eval> _127217_eval = _1aa8e3958_eval(_self_, jule::Trait<_1aa9a0509_Lookup>(_self_, 3));;
	jule::I64 _127317_n = static_cast<jule::I64>(0LL);;
	jule::Ptr<_1aa89d3d5_EnumItem> _127417_first = (*(_126162_e)).get()._field_Items[0LL];;
	_1ad48796c_checkEnumItemInt(_self_, &(_127217_eval), _126162_e, _126144_prim, &(_127417_first), &(_127317_n));
	if ((_127417_first.get()._field_Value.get()._field_Data != nullptr)) {
		{
			
{
				_case_begin_1ad489b39:;
				{
					_127317_n=static_cast<jule::I64>(_1c0904129_AsI64(_127417_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr()));
				}
			}
			_match_end_1ad487c9c:;
		};
	};
	{
		auto expr = (*(_126162_e)).get()._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1ad48ed09:;
		if (it != expr_end) {
			jule::Ptr<_1aa89d3d5_EnumItem> _128621_item = *it;
			{
				if (((_1aa89d7c0_AutoExpr(_128621_item.ptr()) && (_127317_n > 0LL)) && ((_126217_max - _127317_n) <= 0LL))) {
					_1aa8dbbb5_pushErr(_self_.ptr(), _128621_item.get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_1ad48ed09;
				};
				(_127317_n)++;
				_1ad48796c_checkEnumItemInt(_self_, &(_127217_eval), _126162_e, _126144_prim, &(_128621_item), &(_127317_n));
			}
			_iter_next_1ad48ed09:;
			++it;
			goto _iter_begin_1ad48ed09;
		}
		_iter_end_1ad48ed09:;
	};
}



inline void _1aa8e8ad4_checkEnumItemsInt(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Ptr<_1aa89ddca_Enum>* _129642_e) {
	jule::Ptr<_1aa989339_Prim> _129713_prim = _1aa985c5e_Prim((*(_129642_e)).get()._field_Kind.get()._field_Kind.ptr());;
	{
		
		if (_1dc5c14a0_IsSigInt(_129713_prim.get()._field_Kind)) {
			_case_begin_1ad48369e:;
			{
				_1ad481d51_checkEnumItemsInt1(_self_, &(_129713_prim), _129642_e);
			}
		}
		else {
			_case_begin_1ad47584a:;
			{
				_1ad476098_checkEnumItemsInt1(_self_, &(_129713_prim), _129642_e);
			}
		}
		_match_end_1ad4757e5:;
	};
}



inline void _1aa8e8d59_checkEnumDecl(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Ptr<_1aa89ddca_Enum>* _130638_e) {
	if (_1db9475a2_IsIgnoreIdent((*(_130638_e)).get()._field_Ident)) {
		_1aa8dbbb5_pushErr(_self_.ptr(), (*(_130638_e)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1aa8dc7dc_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_130638_e)))), (*(_130638_e)).get()._field_Ident, false)) {
		_1aa8dbbb5_pushErr(_self_.ptr(), (*(_130638_e)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_130638_e)).get()._field_Ident, &__jule_any_type5)}));
		_1aa8dbed4_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*(_130638_e)).get()._field_Items.len() == 0LL)) {
		_1aa8dbbb5_pushErr(_self_.ptr(), (*(_130638_e)).get()._field_Token, jule::Str("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*(_130638_e)).get()._field_Ident, &__jule_any_type5)}));
		return;;
	};
	_1ad4946e3_checkEnumItemsDup(_self_.ptr(), (*(_130638_e)).get()._field_Items);
	if (((*(_130638_e)).get()._field_Kind != nullptr)) {
		if ((!(_1aa8e22c5_checkType(_self_, &((*(_130638_e)).get()._field_Kind), jule::Trait<_1aa9a0509_Lookup>(_self_, 3))))) {
			return;;
		};
	} else {
		(*(_130638_e)).get()._field_Kind=jule::new_ptr<_1aa9889ba_TypeSymbol>(_1aa9889ba_TypeSymbol{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("int", 3)), 10)})});
	};
	jule::Ptr<_1aa989339_Prim> _133417_t = _1aa985c5e_Prim((*(_130638_e)).get()._field_Kind.get()._field_Kind.ptr());;
	if ((_133417_t == nullptr)) {
		_1aa8dbbb5_pushErr(_self_.ptr(), (*(_130638_e)).get()._field_Token, jule::Str("invalid type source", 19), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_1aa98c56d_IsStr(_133417_t.ptr())) {
			_case_begin_1ad49a7e8:;
			{
				_1aa8e8034_checkEnumItemsStr(_self_, _130638_e);
			}
		}
		else if (_1dc5c1a33_IsInt(_1aa98969c_Str(_133417_t.ptr()))) {
			_case_begin_1ad49a4eb:;
			{
				_1aa8e8ad4_checkEnumItemsInt(_self_, _130638_e);
			}
		}
		else {
			_case_begin_1ad499a28:;
			{
				_1aa8dbbb5_pushErr(_self_.ptr(), (*(_130638_e)).get()._field_Token, jule::Str("invalid type source", 19), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ad4999c3:;
	};
}



inline void _1aa8e90ce_checkTypeEnumDecl(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Ptr<_1aa8a04c5_TypeEnum>* _135142_e) {
	if (_1db9475a2_IsIgnoreIdent((*(_135142_e)).get()._field_Ident)) {
		_1aa8dbbb5_pushErr(_self_.ptr(), (*(_135142_e)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1aa8dc7dc_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_135142_e)))), (*(_135142_e)).get()._field_Ident, false)) {
		_1aa8dbbb5_pushErr(_self_.ptr(), (*(_135142_e)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_135142_e)).get()._field_Ident, &__jule_any_type5)}));
		_1aa8dbed4_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*(_135142_e)).get()._field_Items.len() == 0LL)) {
		_1aa8dbbb5_pushErr(_self_.ptr(), (*(_135142_e)).get()._field_Token, jule::Str("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*(_135142_e)).get()._field_Ident, &__jule_any_type5)}));
		return;;
	};
	_1ad49e8a7_checkEnumItemsDup(_self_.ptr(), (*(_135142_e)).get()._field_Items);
	{
		auto expr = &((*(_135142_e)).get()._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad4a2c84:;
		if (it != expr_end) {
			jule::Ptr<_1aa89ee0e_TypeEnumItem> _136521_item = *it;
			{
				if ((_136521_item.get()._field_Kind == nullptr)) {
					_1aa8dbbb5_pushErr(_self_.ptr(), _136521_item.get()._field_Token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
					goto _iter_next_1ad4a2c84;
				};
				jule::Bool _137017_ok = _1aa8e22c5_checkType(_self_, &(_136521_item.get()._field_Kind), jule::Trait<_1aa9a0509_Lookup>(_self_, 3));;
				if ((!(_137017_ok))) {
					goto _iter_next_1ad4a2c84;
				};
				jule::Ptr<_1aa989339_Prim> _137417_p = _1aa985c5e_Prim(_136521_item.get()._field_Kind.get()._field_Kind.ptr());;
				if (((_137417_p != nullptr) && _1aa98c7d2_IsAny(_137417_p.ptr()))) {
					_1aa8dbbb5_pushErr(_self_.ptr(), _136521_item.get()._field_Token, jule::Str("the <any> type is not allowed for type-enum declarations", 56), jule::Slice<jule::Any>());
				};
			}
			_iter_next_1ad4a2c84:;
			++it;
			goto _iter_begin_1ad4a2c84;
		}
		_iter_end_1ad4a2c84:;
	};
	if (((*(_135142_e)).get()._field_Items.len() == 1LL)) {
		jule::Ptr<_1aa89ee0e_TypeEnumItem> _138021_item = (*(_135142_e)).get()._field_Items[0LL];;
		_1aa983872_TypeKind _138117_tk = _1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>((*(_135142_e)), 4)};;
		if (((_138021_item.get()._field_Kind.get()._field_Kind != nullptr) && _1aa98407b_Equal(_138021_item.get()._field_Kind.get()._field_Kind, ((jule::Ptr<_1aa983872_TypeKind>)((&(_138117_tk))))))) {
			_1aa8dbbb5_pushErr(_self_.ptr(), _138021_item.get()._field_Token, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any(_1aa8a0805_Str((*(_135142_e)).ptr()), &__jule_any_type5)}));
		};
	};
}



inline jule::Bool _1aa8e9343_checkEnumDecls(jule::Ptr<_1aa8d92de_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad4a896b:;
		if (it != expr_end) {
			jule::Ptr<_1aa89ddca_Enum> _139221_e = *it;
			{
				_1aa8e8d59_checkEnumDecl(_self_, &(_139221_e));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ad4a896b:;
			++it;
			goto _iter_begin_1ad4a896b;
		}
		_iter_end_1ad4a896b:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1aa8e95a7_checkTypeEnumDecls(jule::Ptr<_1aa8d92de_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad4a9d8a:;
		if (it != expr_end) {
			jule::Ptr<_1aa8a04c5_TypeEnum> _140421_e = *it;
			{
				_1aa8e90ce_checkTypeEnumDecl(_self_, &(_140421_e));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ad4a9d8a:;
			++it;
			goto _iter_begin_1ad4a9d8a;
		}
		_iter_end_1ad4a9d8a:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1aa8e98b5_checkDeclGenerics(_1aa8d92de_Sema* _self_, jule::Slice<jule::Ptr<_1aa861321_GenericDecl>>* _141437_generics) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = _141437_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad4ab474:;
		if (it != expr_end) {
			jule::I64 _141613_i = it - expr->begin();
			jule::Ptr<_1aa861321_GenericDecl> *_141616_g = it;
			{
				if (_1db9475a2_IsIgnoreIdent((*(_141616_g)).get()._field_Ident)) {
					_1aa8dbbb5_pushErr(_self_, (*(_141616_g)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1ad4ab474;
				};
				_julec_label_duplicationLookup:;
				{
					auto expr = _141437_generics;
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad4acba1:;
					if (it != expr_end) {
						jule::I64 _142517_j = it - expr->begin();
						jule::Ptr<_1aa861321_GenericDecl> *_142520_ct = it;
						{
							{
								
								if ((_142517_j >= _141613_i)) {
									_case_begin_1ad4adac5:;
									{
										goto _iter_end_1ad4acba1;
									}
								}
								else if (((*(_141616_g)).get()._field_Ident == (*(_142520_ct)).get()._field_Ident)) {
									_case_begin_1ad4adb4c:;
									{
										_1aa8dbbb5_pushErr(_self_, (*(_141616_g)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_141616_g)).get()._field_Ident, &__jule_any_type5)}));
										_1aa8dbed4_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										__jule_func_result=false;
										goto _iter_end_1ad4acba1;
									}
								}
								_match_end_1ad4ad9b5:;
							};
						}
						_iter_next_1ad4acba1:;
						++it;
						_142517_j++;
						goto _iter_begin_1ad4acba1;
					}
					_iter_end_1ad4acba1:;
				};
			}
			_iter_next_1ad4ab474:;
			++it;
			_141613_i++;
			goto _iter_begin_1ad4ab474;
		}
		_iter_end_1ad4ab474:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1aa8e9bc3_checkFnDeclParamsDup(_1aa8d92de_Sema* _self_, jule::Ptr<_1aa889426_Fn>* _144140_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	_julec_label_check:;
	{
		auto expr = &((*(_144140_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad4b0dd5:;
		if (it != expr_end) {
			jule::I64 _144413_i = it - expr->begin();
			jule::Ptr<_1aa887ad9_Param> *_144416_p = it;
			{
				{
					auto expr = &((*(_144140_f)).get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad4b1a62:;
					if (it != expr_end) {
						jule::Ptr<_1aa861321_GenericDecl> *_144620_g = it;
						{
							if (((*(_144416_p)).get()._field_Ident == (*(_144620_g)).get()._field_Ident)) {
								__jule_func_result=false;
								_1aa8dbbb5_pushErr(_self_, (*(_144416_p)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_144416_p)).get()._field_Ident, &__jule_any_type5)}));
								_1aa8dbed4_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								goto _iter_next_1ad4b0dd5;
							};
						}
						_iter_next_1ad4b1a62:;
						++it;
						goto _iter_begin_1ad4b1a62;
					}
					_iter_end_1ad4b1a62:;
				};
				_julec_label_paramsLookup:;
				{
					auto expr = &((*(_144140_f)).get()._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad4b2557:;
					if (it != expr_end) {
						jule::I64 _145617_j = it - expr->begin();
						jule::Ptr<_1aa887ad9_Param> *_145620_jp = it;
						{
							{
								
								if ((_145617_j >= _144413_i)) {
									_case_begin_1ad4b4180:;
									{
										goto _iter_end_1ad4b2557;
									}
								}
								else if (_1db9475a2_IsIgnoreIdent((*(_144416_p)).get()._field_Ident) || _1db9475a2_IsIgnoreIdent((*(_145620_jp)).get()._field_Ident) || _1db947849_IsAnonIdent((*(_144416_p)).get()._field_Ident) || _1db947849_IsAnonIdent((*(_145620_jp)).get()._field_Ident)) {
									_case_begin_1ad4b4207:;
									{
										goto _iter_end_1ad4b2557;
									}
								}
								else if (((*(_144416_p)).get()._field_Ident == (*(_145620_jp)).get()._field_Ident)) {
									_case_begin_1ad4b427e:;
									{
										__jule_func_result=false;
										_1aa8dbbb5_pushErr(_self_, (*(_144416_p)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_144416_p)).get()._field_Ident, &__jule_any_type5)}));
										_1aa8dbed4_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_next_1ad4b0dd5;
									}
								}
								_match_end_1ad4b405e:;
							};
						}
						_iter_next_1ad4b2557:;
						++it;
						_145617_j++;
						goto _iter_begin_1ad4b2557;
					}
					_iter_end_1ad4b2557:;
				};
			}
			_iter_next_1ad4b0dd5:;
			++it;
			_144413_i++;
			goto _iter_begin_1ad4b0dd5;
		}
		_iter_end_1ad4b0dd5:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1aa8e9ed1_checkFnDeclResultDup(_1aa8d92de_Sema* _self_, jule::Ptr<_1aa889426_Fn>* _147840_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	if (_1aa889888_IsVoid((*(_147840_f)).ptr())) {
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_147840_f)).get()._field_Result.get()._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad4b71d8:;
		if (it != expr_end) {
			jule::I64 _148513_i = it - expr->begin();
			jule::Ptr<_1db944d0d_Token> *_148516_v = it;
			{
				if ((_1db9475a2_IsIgnoreIdent((*(_148516_v)).get()._field_Kind) || _1db947849_IsAnonIdent((*(_148516_v)).get()._field_Kind))) {
					goto _iter_next_1ad4b71d8;
				};
				{
					auto expr = &((*(_147840_f)).get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad4b8728:;
					if (it != expr_end) {
						jule::Ptr<_1aa861321_GenericDecl> *_149020_g = it;
						{
							if (((*(_148516_v)).get()._field_Kind == (*(_149020_g)).get()._field_Ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_1ad4b8728:;
						++it;
						goto _iter_begin_1ad4b8728;
					}
					_iter_end_1ad4b8728:;
				};
				{
					auto expr = &((*(_147840_f)).get()._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad4b9938:;
					if (it != expr_end) {
						jule::Ptr<_1aa887ad9_Param> *_149620_p = it;
						{
							if (((*(_148516_v)).get()._field_Kind == (*(_149620_p)).get()._field_Ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_1ad4b9938:;
						++it;
						goto _iter_begin_1ad4b9938;
					}
					_iter_end_1ad4b9938:;
				};
				_julec_label_itself_lookup:;
				{
					auto expr = &((*(_147840_f)).get()._field_Result.get()._field_Idents);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad4bab48:;
					if (it != expr_end) {
						jule::I64 _150417_j = it - expr->begin();
						jule::Ptr<_1db944d0d_Token> *_150420_jv = it;
						{
							{
								
								if ((_150417_j >= _148513_i)) {
									_case_begin_1ad4bb84c:;
									{
										goto _iter_end_1ad4bab48;
									}
								}
								else if (((*(_150420_jv)).get()._field_Kind == (*(_148516_v)).get()._field_Kind)) {
									_case_begin_1ad4bb8c4:;
									{
										goto _julec_label_exist;
									}
								}
								_match_end_1ad4bb73c:;
							};
						}
						_iter_next_1ad4bab48:;
						++it;
						_150417_j++;
						goto _iter_begin_1ad4bab48;
					}
					_iter_end_1ad4bab48:;
				};
				goto _iter_next_1ad4b71d8;
				_julec_label_exist:;
				_1aa8dbbb5_pushErr(_self_, (*(_148516_v)), jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_148516_v)).get()._field_Kind, &__jule_any_type5)}));
				_1aa8dbed4_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
				__jule_func_result=false;
			}
			_iter_next_1ad4b71d8:;
			++it;
			_148513_i++;
			goto _iter_begin_1ad4b71d8;
		}
		_iter_end_1ad4b71d8:;
	};
	return __jule_func_result;;
}



inline void _1aa8ea256_checkFnDeclPrototype(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Ptr<_1aa889426_Fn>* _152545_f) {
	if (((*(_152545_f)).get()._field_Exceptional && (*(_152545_f)).get()._field_CppLinked)) {
		_1aa8dbbb5_pushErr(_self_.ptr(), (*(_152545_f)).get()._field_Token, jule::Str("cpp-linked defines cannot be exceptional", 40), jule::Slice<jule::Any>());
		return;;
	};
	if ((*(_152545_f)).get()._field_Exceptional) {
		if (_1aa889d61_IsEntryPoint((*(_152545_f)).ptr())) {
			_1aa8dbbb5_pushErr(_self_.ptr(), (*(_152545_f)).get()._field_Token, jule::Str("entry point cannot be exceptional", 33), jule::Slice<jule::Any>());
		} else if (_1aa88a0c5_IsInit((*(_152545_f)).ptr())) {
			_1aa8dbbb5_pushErr(_self_.ptr(), (*(_152545_f)).get()._field_Token, jule::Str("initializer function cannot be exceptional", 42), jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_1aa8e98b5_checkDeclGenerics(_self_.ptr(), &((*(_152545_f)).get()._field_Generics))))) {
			_case_begin_1ad4be9a4:;
		}
		else if ((!(_1aa8e9bc3_checkFnDeclParamsDup(_self_.ptr(), _152545_f)))) {
			_case_begin_1ad4bea1a:;
		}
		else if ((!(_1aa8e9ed1_checkFnDeclResultDup(_self_.ptr(), _152545_f)))) {
			_case_begin_1ad4c0d4b:;
		}
		_match_end_1ad4be894:;
	};
}



inline jule::Bool _1aa8ea6a7_catchTraitInheritCycle(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Ptr<_1aa89b647_Trait> _154642_t1, jule::Ptr<_1aa89b647_Trait> _154658_t2, jule::Str* _154675_message) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &(_154658_t2.get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad4c2952:;
		if (it != expr_end) {
			jule::Ptr<_1aa9889ba_TypeSymbol> _154821_i = *it;
			{
				if ((_154821_i.get()._field_Kind == nullptr)) {
					goto _iter_next_1ad4c2952;
				};
				jule::Ptr<_1aa89b647_Trait> _155221_t3 = _1aa987425_Trait(_154821_i.get()._field_Kind.ptr());;
				if ((_154642_t1 == _155221_t3)) {
					_1aa8ee898_pushCycleError(_self_.ptr(), &(_154658_t2.get()._field_Ident), &(_155221_t3.get()._field_Ident), _154675_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_1aa8ea6a7_catchTraitInheritCycle(_self_, _154642_t1, _155221_t3, _154675_message)))) {
					_1aa8ee898_pushCycleError(_self_.ptr(), &(_154658_t2.get()._field_Ident), &(_155221_t3.get()._field_Ident), _154675_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ad4c2952:;
			++it;
			goto _iter_begin_1ad4c2952;
		}
		_iter_end_1ad4c2952:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1aa8ea9d7__checkTraitDeclInherits(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Ptr<_1aa89b647_Trait>* _156548_t) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_156548_t)).get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad4c57e0:;
		if (it != expr_end) {
			jule::I64 _156714_i = it - expr->begin();
			jule::Ptr<_1aa9889ba_TypeSymbol> _156721_it = *it;
			{
				if ((!(_1aa8e22c5_checkType(_self_, &(_156721_it), jule::Trait<_1aa9a0509_Lookup>(_self_, 3))))) {
					__jule_func_result=false;
					goto _iter_next_1ad4c57e0;
				};
				jule::Ptr<_1aa89b647_Trait> _157221_t2 = _1aa987425_Trait(_156721_it.get()._field_Kind.ptr());;
				if ((_157221_t2 == nullptr)) {
					_1aa8dbbb5_pushErr(_self_.ptr(), _156721_it.get()._field_Decl.get()._field_Token, jule::Str("trait @ cannot implement @, type should be trait", 48), jule::Slice<jule::Any>::make({jule::Any((*(_156548_t)).get()._field_Ident, &__jule_any_type5),jule::Any(_1aa983c6d_Str(_156721_it.get()._field_Kind.ptr()), &__jule_any_type5)}));
					__jule_func_result=false;
					goto _iter_next_1ad4c57e0;
				};
				{
					auto expr = &((*(_156548_t)).get()._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad4c735d:;
					if (it != expr_end) {
						jule::I64 _157817_j = it - expr->begin();
						jule::Ptr<_1aa9889ba_TypeSymbol> _157820_it2 = *it;
						{
							if ((_157817_j >= _156714_i)) {
								goto _iter_end_1ad4c735d;
							};
							if (((_157820_it2.get()._field_Kind != nullptr) && _1aa98407b_Equal(_156721_it.get()._field_Kind, _157820_it2.get()._field_Kind))) {
								_1aa8dbbb5_pushErr(_self_.ptr(), _156721_it.get()._field_Decl.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_157221_t2.get()._field_Ident, &__jule_any_type5)}));
								__jule_func_result=false;
								goto _iter_end_1ad4c735d;
							};
						}
						_iter_next_1ad4c735d:;
						++it;
						_157817_j++;
						goto _iter_begin_1ad4c735d;
					}
					_iter_end_1ad4c735d:;
				};
				if (((*(_156548_t)) == _157221_t2)) {
					_1aa8dbbb5_pushErr(_self_.ptr(), _156721_it.get()._field_Decl.get()._field_Token, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*(_156548_t)).get()._field_Ident, &__jule_any_type5)}));
					__jule_func_result=false;
				} else {
					jule::Str _159225_message = jule::Str();;
					__jule_func_result=(__jule_func_result && _1aa8ea6a7_catchTraitInheritCycle(_self_, (*(_156548_t)), _157221_t2, &(_159225_message)));
					if ((_159225_message.len() > 0LL)) {
						jule::Str _159529_errMsg = _159225_message;;
						_159225_message=jule::Str();
						_1aa8ee898_pushCycleError(_self_.ptr(), &((*(_156548_t)).get()._field_Ident), &(_157221_t2.get()._field_Ident), &(_159225_message));
						_159529_errMsg+=_159225_message;
						_1aa8dbbb5_pushErr(_self_.ptr(), _156721_it.get()._field_Decl.get()._field_Token, jule::Str("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_159529_errMsg, &__jule_any_type5)}));
					};
				};
			}
			_iter_next_1ad4c57e0:;
			++it;
			_156714_i++;
			goto _iter_begin_1ad4c57e0;
		}
		_iter_end_1ad4c57e0:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1aa8eac6d_checkTraitDeclInherits(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Ptr<_1aa89b647_Trait>* _160647_t) {
	{
		auto expr = &((*(_160647_t)).get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad4c623b:;
		if (it != expr_end) {
			jule::I64 _160714_i = it - expr->begin();
			jule::Ptr<_1aa9889ba_TypeSymbol> _160721_it = *it;
			{
				jule::Ptr<_1aa89b647_Trait> _160821_t1 = _1aa987425_Trait(_160721_it.get()._field_Kind.ptr());;
				{
					auto expr = &((*(_160647_t)).get()._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad4ce72d:;
					if (it != expr_end) {
						jule::I64 _160918_j = it - expr->begin();
						jule::Ptr<_1aa9889ba_TypeSymbol> _160925_it2 = *it;
						{
							if ((_160918_j == _160714_i)) {
								goto _iter_next_1ad4ce72d;
							};
							jule::Ptr<_1aa89b647_Trait> _161325_t2 = _1aa987425_Trait(_160925_it2.get()._field_Kind.ptr());;
							{
								auto expr = &(_160821_t1.get()._field_Methods);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1ad4d0bd5:;
								if (it != expr_end) {
									jule::Ptr<_1aa889426_Fn> _161429_t1m = *it;
									{
										jule::Ptr<_1aa889426_Fn> _161529_t2m = _1aa89c4e4_FindMethod(_161325_t2.ptr(), _161429_t1m.get()._field_Ident);;
										if ((_161529_t2m == nullptr)) {
											goto _iter_next_1ad4d0bd5;
										};
										jule::Ptr<_1aa88c0c7_FnIns> _161925_t1f = _1aa8e5031_getTraitCheckFnKind(_self_, &(_161429_t1m));;
										jule::Ptr<_1aa88c0c7_FnIns> _162025_t2f = _1aa8e5031_getTraitCheckFnKind(_self_, &(_161529_t2m));;
										if ((!(_1aa88ce85_equalTrait(_161925_t1f, &(_162025_t2f))))) {
											_1aa8dbbb5_pushErr(_self_.ptr(), _160721_it.get()._field_Decl.get()._field_Token, jule::Str("trait @ inherits trait @, but same identifiers implemented different;\n       @\n       @", 87), jule::Slice<jule::Any>::make({jule::Any((*(_160647_t)).get()._field_Ident, &__jule_any_type5),jule::Any(_161325_t2.get()._field_Ident, &__jule_any_type5),jule::Any(_1aa88dcdd_GetKindStr(_161925_t1f.ptr(), true), &__jule_any_type5),jule::Any(_1aa88dcdd_GetKindStr(_162025_t2f.ptr(), true), &__jule_any_type5)}));
											return;;
										};
									}
									_iter_next_1ad4d0bd5:;
									++it;
									goto _iter_begin_1ad4d0bd5;
								}
								_iter_end_1ad4d0bd5:;
							};
						}
						_iter_next_1ad4ce72d:;
						++it;
						_160918_j++;
						goto _iter_begin_1ad4ce72d;
					}
					_iter_end_1ad4ce72d:;
				};
			}
			_iter_next_1ad4c623b:;
			++it;
			_160714_i++;
			goto _iter_begin_1ad4c623b;
		}
		_iter_end_1ad4c623b:;
	};
}



inline void _1aa8eaee3_checkTraitDeclMethod(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Ptr<_1aa889426_Fn>* _163145_f) {
	if (_1db9475a2_IsIgnoreIdent((*(_163145_f)).get()._field_Ident)) {
		_1aa8dbbb5_pushErr(_self_.ptr(), (*(_163145_f)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	(*(_163145_f)).get()._field_sema=_self_;
	_1aa8ea256_checkFnDeclPrototype(_self_, _163145_f);
	jule::Ptr<_1aa88c0c7_FnIns> _163717_ins = _1aa88aa76_instance((*(_163145_f)));;
	_1aa8e631d_reloadFnInsTypes(_self_, _163717_ins);
	_163717_ins.get()._field_reloaded=true;
	_1aa88ad51_appendInstance((*(_163145_f)).ptr(), &(_163717_ins));
}



inline void _1aa8eb268_checkTraitDeclMethods(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Ptr<_1aa89b647_Trait>* _164346_t) {
	{
		auto expr = &((*(_164346_t)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad4d5b30:;
		if (it != expr_end) {
			jule::I64 _164414_i = it - expr->begin();
			jule::Ptr<_1aa889426_Fn> _164421_f = *it;
			{
				_1aa8eaee3_checkTraitDeclMethod(_self_, &(_164421_f));
				(*(_164346_t)).get()._field_Mutable=((*(_164346_t)).get()._field_Mutable || _164421_f.get()._field_Params[0LL].get()._field_Mutable);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					return;;
				};
				if ((_1aa89cb10_findMethodInherit((*(_164346_t)).ptr(), &(_164421_f.get()._field_Ident)) != nullptr)) {
					_1aa8dbbb5_pushErr(_self_.ptr(), _164421_f.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_164421_f.get()._field_Ident, &__jule_any_type5)}));
					_1aa8dbed4_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					goto _iter_next_1ad4d5b30;
				};
				_julec_label_duplicateLookup:;
				{
					auto expr = &((*(_164346_t)).get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad4d8c54:;
					if (it != expr_end) {
						jule::I64 _166117_j = it - expr->begin();
						jule::Ptr<_1aa889426_Fn> _166120_jf = *it;
						{
							{
								
								if ((_166117_j >= _164414_i)) {
									_case_begin_1ad4d99d0:;
									{
										goto _iter_end_1ad4d8c54;
									}
								}
								else if ((_164421_f.get()._field_Ident == _166120_jf.get()._field_Ident)) {
									_case_begin_1ad4d9a57:;
									{
										_1aa8dbbb5_pushErr(_self_.ptr(), _164421_f.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_164421_f.get()._field_Ident, &__jule_any_type5)}));
										_1aa8dbed4_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_end_1ad4d8c54;
									}
								}
								_match_end_1ad4d98c0:;
							};
						}
						_iter_next_1ad4d8c54:;
						++it;
						_166117_j++;
						goto _iter_begin_1ad4d8c54;
					}
					_iter_end_1ad4d8c54:;
				};
			}
			_iter_next_1ad4d5b30:;
			++it;
			_164414_i++;
			goto _iter_begin_1ad4d5b30;
		}
		_iter_end_1ad4d5b30:;
	};
}



inline void _1aa8eb4dd_checkTraitDecl(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Ptr<_1aa89b647_Trait>* _168039_t) {
	if (_1db9475a2_IsIgnoreIdent((*(_168039_t)).get()._field_Ident)) {
		_1aa8dbbb5_pushErr(_self_.ptr(), (*(_168039_t)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1aa8dc7dc_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_168039_t)))), (*(_168039_t)).get()._field_Ident, false)) {
		_1aa8dbbb5_pushErr(_self_.ptr(), (*(_168039_t)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_168039_t)).get()._field_Ident, &__jule_any_type5)}));
		_1aa8dbed4_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1aa8eac6d_checkTraitDeclInherits(_self_, _168039_t);
	_1aa8eb268_checkTraitDeclMethods(_self_, _168039_t);
}



inline jule::Bool _1aa8eb752_checkTraitDecls(jule::Ptr<_1aa8d92de_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad4ddbb0:;
		if (it != expr_end) {
			jule::Ptr<_1aa89b647_Trait> _169421_t = *it;
			{
				_1aa8eb4dd_checkTraitDecl(_self_, &(_169421_t));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ad4ddbb0:;
			++it;
			goto _iter_begin_1ad4ddbb0;
		}
		_iter_end_1ad4ddbb0:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1aa8ebb09_checkTraitImplMethods(_1aa8d92de_Sema* _self_, jule::Ptr<_1aa89b647_Trait>* _170445_base, jule::Ptr<_1aa8ac548_Impl>* _170460_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_170460_ipl)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad4e0662:;
		if (it != expr_end) {
			jule::Ptr<_1aa889426_Fn> *_170616_f = it;
			{
				if ((_1aa89c4e4_FindMethod((*(_170445_base)).ptr(), (*(_170616_f)).get()._field_Ident) == nullptr)) {
					_1aa8dbbb5_pushErr(_self_, (*(_170616_f)).get()._field_Token, jule::Str("undefined identifier: trait @ has no define @", 45), jule::Slice<jule::Any>::make({jule::Any((*(_170445_base)).get()._field_Ident, &__jule_any_type5),jule::Any((*(_170616_f)).get()._field_Ident, &__jule_any_type5)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1ad4e0662:;
			++it;
			goto _iter_begin_1ad4e0662;
		}
		_iter_end_1ad4e0662:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1aa8ebeb1_implToStruct(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Ptr<_1aa8740c0_Struct>* _171537_dest, jule::Ptr<_1aa8ac548_Impl>* _171557_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_171557_ipl)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad4e28a6:;
		if (it != expr_end) {
			jule::Ptr<_1aa889426_Fn> _171921_f = *it;
			{
				if (((_1aa874bb4_FindMethod((*(_171537_dest)).ptr(), _171921_f.get()._field_Ident, _171921_f.get()._field_Statically) != nullptr) || (_1aa8752d0_FindField((*(_171537_dest)).ptr(), _171921_f.get()._field_Ident) != nullptr))) {
					_1aa8dbbb5_pushErr(_self_.ptr(), _171921_f.get()._field_Token, jule::Str("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*(_171537_dest)).get()._field_Ident, &__jule_any_type5),jule::Any(_171921_f.get()._field_Ident, &__jule_any_type5)}));
					__jule_func_result=false;
					goto _iter_next_1ad4e28a6;
				};
				if ((((*(_171537_dest)).get()._field_Generics.len() > 0LL) && (_171921_f.get()._field_Generics.len() > 0LL))) {
					{
						auto expr = &(_171921_f.get()._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ad4e4db4:;
						if (it != expr_end) {
							jule::Ptr<_1aa861321_GenericDecl> _172724_fg = *it;
							{
								{
									auto expr = &((*(_171537_dest)).get()._field_Generics);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1ad4e569a:;
									if (it != expr_end) {
										jule::Ptr<_1aa861321_GenericDecl> _172828_dg = *it;
										{
											if ((_172724_fg.get()._field_Ident == _172828_dg.get()._field_Ident)) {
												_1aa8dbbb5_pushErr(_self_.ptr(), _172724_fg.get()._field_Token, jule::Str("methods cannot have same generic identifier with owner same time", 64), jule::Slice<jule::Any>());
												__jule_func_result=false;
											};
										}
										_iter_next_1ad4e569a:;
										++it;
										goto _iter_begin_1ad4e569a;
									}
									_iter_end_1ad4e569a:;
								};
							}
							_iter_next_1ad4e4db4:;
							++it;
							goto _iter_begin_1ad4e4db4;
						}
						_iter_end_1ad4e4db4:;
					};
				};
				_1aa8dcb0b_checkDirectives(_self_, &(_171921_f.get()._field_Directives), jule::Any(_171921_f, &__jule_any_type65));
				_171921_f.get()._field_sema=_self_;
				_171921_f.get()._field_Owner=(*(_171537_dest));
				(*(_171537_dest)).get()._field_Methods = jule::alloc_for_append((*(_171537_dest)).get()._field_Methods,1);(*(_171537_dest)).get()._field_Methods.__push(_171921_f);;
			}
			_iter_next_1ad4e28a6:;
			++it;
			goto _iter_begin_1ad4e28a6;
		}
		_iter_end_1ad4e28a6:;
	};
	{
		auto expr = &((*(_171557_ipl)).get()._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad4e7e1c:;
		if (it != expr_end) {
			jule::Ptr<_1aa908c59_Var> _174421_v = *it;
			{
				;
				if (((_1aa874bb4_FindMethod((*(_171537_dest)).ptr(), _174421_v.get()._field_Ident, true) != nullptr) || (_1aa874ec2_FindStatic((*(_171537_dest)).ptr(), _174421_v.get()._field_Ident) != nullptr))) {
					_1aa8dbbb5_pushErr(_self_.ptr(), _174421_v.get()._field_Token, jule::Str("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*(_171537_dest)).get()._field_Ident, &__jule_any_type5),jule::Any(_174421_v.get()._field_Ident, &__jule_any_type5)}));
					__jule_func_result=false;
					goto _iter_next_1ad4e7e1c;
				};
				(*(_171537_dest)).get()._field_Statics = jule::alloc_for_append((*(_171537_dest)).get()._field_Statics,1);(*(_171537_dest)).get()._field_Statics.__push(_174421_v);;
			}
			_iter_next_1ad4e7e1c:;
			++it;
			goto _iter_begin_1ad4e7e1c;
		}
		_iter_end_1ad4e7e1c:;
	};
	return __jule_func_result;;
}



inline void _1aa8ec236_implTrait(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Ptr<_1aa8ac548_Impl>* _175734_decl) {
	jule::Ptr<_1aa983872_TypeKind> _175817_base_t = _1aa8e2d42_selectType(_self_, &((*(_175734_decl)).get()._field_Base));;
	if ((_175817_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1aa89b647_Trait> _176217_base = _1aa987425_Trait(_175817_base_t.ptr());;
	if ((_176217_base == nullptr)) {
		_1aa8dbbb5_pushErr(_self_.ptr(), (*(_175734_decl)).get()._field_Base.get()._field_Token, jule::Str("invalid base type for impl: @", 29), jule::Slice<jule::Any>::make({jule::Any(_1aa983c6d_Str(_175817_base_t.ptr()), &__jule_any_type5)}));
		_1aa8dbed4_pushSuggestion(_self_.ptr(), jule::Str("expected trait, use a trait", 27), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1aa983872_TypeKind> _176917_destT = _1aa8e2d42_selectType(_self_, &((*(_175734_decl)).get()._field_Dest));;
	if ((_176917_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1aa876dd6_StructIns> _177317_destS = _1aa9871b1_Struct(_176917_destT.ptr());;
	if ((_177317_destS == nullptr)) {
		_1aa8dbbb5_pushErr(_self_.ptr(), (*(_175734_decl)).get()._field_Dest.get()._field_Token, jule::Str("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_1aa983c6d_Str(_176917_destT.ptr()), &__jule_any_type5)}));
		_1aa8dbed4_pushSuggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1aa8740c0_Struct> _178017_dest = _177317_destS.get()._field_Decl;;
	if ((_1db94aa8e_Dir(_178017_dest.get()._field_Token.get()._field_File.ptr()) != _1db94aa8e_Dir(_self_.get()._field_file.get()._field_File.ptr()))) {
		_1aa8dbbb5_pushErr(_self_.ptr(), (*(_175734_decl)).get()._field_Dest.get()._field_Token, jule::Str("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	_1aa907241_pushImplemented(_176217_base, &(_178017_dest));
	_1aa9074e9_pushImplements(&(_178017_dest), _176217_base);
	if (((*(_175734_decl)).get()._field_Statics.len() > 0LL)) {
		_1aa8dbbb5_pushErr(_self_.ptr(), (*(_175734_decl)).get()._field_Statics[0LL].get()._field_Token, jule::Str("trait implementations cannot implement static field", 51), jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_1aa8ebb09_checkTraitImplMethods(_self_.ptr(), &(_176217_base), _175734_decl)))) {
			_case_begin_1ad501be5:;
			{
				return;;
			}
		}
		else if ((!(_1aa8ebeb1_implToStruct(_self_, &(_178017_dest), _175734_decl)))) {
			_case_begin_1ad501c6c:;
			{
				return;;
			}
		}
		_match_end_1ad500430:;
	};
}



inline void _1aa8ec4ab_implStruct(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Ptr<_1aa8ac548_Impl>* _180235_decl) {
	jule::Ptr<_1aa983872_TypeKind> _180317_destT = _1aa8e2d42_selectType(_self_, &((*(_180235_decl)).get()._field_Dest));;
	if ((_180317_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1aa876dd6_StructIns> _180717_destS = _1aa9871b1_Struct(_180317_destT.ptr());;
	if ((_180717_destS == nullptr)) {
		_1aa8dbbb5_pushErr(_self_.ptr(), (*(_180235_decl)).get()._field_Dest.get()._field_Token, jule::Str("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_1aa983c6d_Str(_180317_destT.ptr()), &__jule_any_type5)}));
		_1aa8dbed4_pushSuggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1aa8740c0_Struct> _181417_dest = _180717_destS.get()._field_Decl;;
	if ((_1db94aa8e_Dir(_181417_dest.get()._field_Token.get()._field_File.ptr()) != _1db94aa8e_Dir(_self_.get()._field_file.get()._field_File.ptr()))) {
		_1aa8dbbb5_pushErr(_self_.ptr(), (*(_180235_decl)).get()._field_Dest.get()._field_Token, jule::Str("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_1aa8ebeb1_implToStruct(_self_, &(_181417_dest), _180235_decl)))) {
			_case_begin_1ad506524:;
			{
				return;;
			}
		}
		_match_end_1ad503d7e:;
	};
}



inline void _1aa8ec731_implImpl(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Ptr<_1aa8ac548_Impl>* _182733_decl) {
	{
		
		if (_1aa8ac944_IsTraitImpl((*(_182733_decl)).ptr())) {
			_case_begin_1ad507118:;
			{
				_1aa8ec236_implTrait(_self_, _182733_decl);
			}
		}
		else if (_1aa8acba8_IsStructImpl((*(_182733_decl)).ptr())) {
			_case_begin_1ad507190:;
			{
				_1aa8ec4ab_implStruct(_self_, _182733_decl);
			}
		}
		_match_end_1ad507008:;
	};
}



inline void _1aa8eca50_checkVarDecl(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Ptr<_1aa908c59_Var>* _183837_decl, jule::Trait<_1aa9a0509_Lookup> _183853_l) {
	if (_1db9475a2_IsIgnoreIdent((*(_183837_decl)).get()._field_Ident)) {
		_1aa8dbbb5_pushErr(_self_.ptr(), (*(_183837_decl)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_1aa909386_IsTypeInferred((*(_183837_decl)).ptr())) {
		if ((!(_1aa909122_IsInitialized((*(_183837_decl)).ptr())))) {
			_1aa8dbbb5_pushErr(_self_.ptr(), (*(_183837_decl)).get()._field_Token, jule::Str("type inferred declarations should have a initializer expression", 63), jule::Slice<jule::Any>());
		};
	} else {
		_1aa8e22c5_checkType(_self_, &((*(_183837_decl)).get()._field_Kind), _183853_l);
	};
	if (((*(_183837_decl)).get()._field_Constant && (*(_183837_decl)).get()._field_Reference)) {
		_1aa8dbbb5_pushErr(_self_.ptr(), (*(_183837_decl)).get()._field_Token, jule::Str("references cannot be constant", 29), jule::Slice<jule::Any>());
	};
	if ((!(_1aa909122_IsInitialized((*(_183837_decl)).ptr())))) {
		if ((*(_183837_decl)).get()._field_Constant) {
			_1aa8dbbb5_pushErr(_self_.ptr(), (*(_183837_decl)).get()._field_Token, jule::Str("missing expression for constant variable initialization", 55), jule::Slice<jule::Any>());
		};
		if ((*(_183837_decl)).get()._field_Statically) {
			_1aa8dbbb5_pushErr(_self_.ptr(), (*(_183837_decl)).get()._field_Token, jule::Str("static variables must be have initialize expression", 51), jule::Slice<jule::Any>());
		};
		if ((*(_183837_decl)).get()._field_Reference) {
			_1aa8dbbb5_pushErr(_self_.ptr(), (*(_183837_decl)).get()._field_Token, jule::Str("reference variables must be have lvalue initialize expression", 61), jule::Slice<jule::Any>());
		};
	};
}



inline void _1aa8eccc5_checkGlobalVarDecl(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Ptr<_1aa908c59_Var>* _187043_decl) {
	if (_1aa8dc7dc_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_187043_decl)))), (*(_187043_decl)).get()._field_Ident, (*(_187043_decl)).get()._field_CppLinked)) {
		_1aa8dbbb5_pushErr(_self_.ptr(), (*(_187043_decl)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_187043_decl)).get()._field_Ident, &__jule_any_type5)}));
		_1aa8dbed4_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*(_187043_decl)).get()._field_CppLinked && (*(_187043_decl)).get()._field_Constant)) {
		_1aa8dbbb5_pushErr(_self_.ptr(), (*(_187043_decl)).get()._field_Token, jule::Str("cpp linked variables cannot be constant", 39), jule::Slice<jule::Any>());
	};
	if ((((!((*(_187043_decl)).get()._field_CppLinked)) && (!((*(_187043_decl)).get()._field_Constant))) && (!((*(_187043_decl)).get()._field_Statically)))) {
		_1aa8dbbb5_pushErr(_self_.ptr(), (*(_187043_decl)).get()._field_Token, jule::Str("global variables must be static", 31), jule::Slice<jule::Any>());
		_1aa8dbed4_pushSuggestion(_self_.ptr(), jule::Str("use \"static\" keyword to define", 30), jule::Slice<jule::Any>());
	};
	_1aa8dcb0b_checkDirectives(_self_, &((*(_187043_decl)).get()._field_Directives), jule::Any((*(_187043_decl)), &__jule_any_type8));
	_1aa8eca50_checkVarDecl(_self_, _187043_decl, jule::Trait<_1aa9a0509_Lookup>(_self_, 3));
}



inline jule::Bool _1aa8ed039_checkGlobalDecls(jule::Ptr<_1aa8d92de_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad511672:;
		if (it != expr_end) {
			jule::Ptr<_1aa908c59_Var> _188821_decl = *it;
			{
				_1aa8eccc5_checkGlobalVarDecl(_self_, &(_188821_decl));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ad511672:;
			++it;
			goto _iter_begin_1ad511672;
		}
		_iter_end_1ad511672:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1aa8ed3e1_checkStructTraitImpl(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Ptr<_1aa8740c0_Struct>* _189845_strct, jule::Ptr<_1aa89b647_Trait>* _189866_trt) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*(_189866_trt)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad512dc1:;
		if (it != expr_end) {
			jule::Ptr<_1aa889426_Fn> _189921_tf = *it;
			{
				jule::Bool _190021_exist = false;;
				jule::Ptr<_1aa889426_Fn> _190121_sf = _1aa874bb4_FindMethod((*(_189845_strct)).ptr(), _189921_tf.get()._field_Ident, _189921_tf.get()._field_Statically);;
				jule::Ptr<_1aa88c0c7_FnIns> _190217_tfK = _1aa8e5031_getTraitCheckFnKind(_self_, &(_189921_tf));;
				if ((_190121_sf != nullptr)) {
					jule::Ptr<_1aa88c0c7_FnIns> _190425_sfK = _1aa8e5031_getTraitCheckFnKind(_self_, &(_190121_sf));;
					_190021_exist=_1aa88ce85_equalTrait(_190217_tfK, &(_190425_sfK));
				};
				if (_190021_exist) {
					jule::Ptr<_1aa820a94_Directive> _190821_d = _1aa97c8d2_findDirective(&(_190121_sf.get()._field_Directives), jule::Str("deprecated", 10));;
					if ((_190821_d != nullptr)) {
						_1aa8dbbb5_pushErr(_self_.ptr(), _190821_d.get()._field_Tag, jule::Str("trait implementations cannot have deprecated code", 49), jule::Slice<jule::Any>());
					};
					__jule_func_result=false;
				} else {
					;
					_1aa8dbbb5_pushErr(_self_.ptr(), (*(_189845_strct)).get()._field_Token, jule::Str("trait @ derived but not implemented define @", 44), jule::Slice<jule::Any>::make({jule::Any((*(_189866_trt)).get()._field_Ident, &__jule_any_type5),jule::Any(_1aa88dcdd_GetKindStr(_190217_tfK.ptr(), true), &__jule_any_type5)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1ad512dc1:;
			++it;
			goto _iter_begin_1ad512dc1;
		}
		_iter_end_1ad512dc1:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1aa8ed6ee_checkStructImpls(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Ptr<_1aa8740c0_Struct>* _192241_s) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_192241_s)).get()._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad5181b2:;
		if (it != expr_end) {
			jule::Ptr<_1aa89b647_Trait> _192421_trt = *it;
			{
				__jule_func_result=(_1aa8ed3e1_checkStructTraitImpl(_self_, _192241_s, &(_192421_trt)) && __jule_func_result);
			}
			_iter_next_1ad5181b2:;
			++it;
			goto _iter_begin_1ad5181b2;
		}
		_iter_end_1ad5181b2:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1aa8eda0c_checkStructFields(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Ptr<_1aa8740c0_Struct>* _193042_st) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_193042_st)).get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad519504:;
		if (it != expr_end) {
			jule::Ptr<_1aa8714eb_Field> _193221_f = *it;
			{
				_193221_f.get()._field_Owner=(*(_193042_st));
				{
					auto expr = &((*(_193042_st)).get()._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad51a04e:;
					if (it != expr_end) {
						jule::Ptr<_1aa8714eb_Field> _193420_cf = *it;
						{
							if ((_193221_f == _193420_cf)) {
								goto _iter_end_1ad51a04e;
							} else if ((_193221_f.get()._field_Ident == _193420_cf.get()._field_Ident)) {
								_1aa8dbbb5_pushErr(_self_.ptr(), _193221_f.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_193221_f.get()._field_Ident, &__jule_any_type5)}));
								_1aa8dbed4_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								__jule_func_result=false;
							};
						}
						_iter_next_1ad51a04e:;
						++it;
						goto _iter_begin_1ad51a04e;
					}
					_iter_end_1ad51a04e:;
				};
			}
			_iter_next_1ad519504:;
			++it;
			goto _iter_begin_1ad519504;
		}
		_iter_end_1ad519504:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1aa8edc82_checkStructDecl(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Ptr<_1aa8740c0_Struct>* _194740_s) {
	if (_1db9475a2_IsIgnoreIdent((*(_194740_s)).get()._field_Ident)) {
		_1aa8dbbb5_pushErr(_self_.ptr(), (*(_194740_s)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1aa8dc7dc_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_194740_s)))), (*(_194740_s)).get()._field_Ident, (*(_194740_s)).get()._field_CppLinked)) {
		_1aa8dbbb5_pushErr(_self_.ptr(), (*(_194740_s)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_194740_s)).get()._field_Ident, &__jule_any_type5)}));
		_1aa8dbed4_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1aa8dcb0b_checkDirectives(_self_, &((*(_194740_s)).get()._field_Directives), jule::Any((*(_194740_s)), &__jule_any_type66));
	{
		
		if ((!(_1aa8e98b5_checkDeclGenerics(_self_.ptr(), &((*(_194740_s)).get()._field_Generics))))) {
			_case_begin_1ad51bdb9:;
		}
		else if ((!(_1aa8eda0c_checkStructFields(_self_, _194740_s)))) {
			_case_begin_1ad51dbe0:;
		}
		else if ((!(_1aa8ed6ee_checkStructImpls(_self_, _194740_s)))) {
			_case_begin_1ad51dc67:;
		}
		_match_end_1ad51dabe:;
	};
}



inline jule::Bool _1aa8edee6_checkStructDecls(jule::Ptr<_1aa8d92de_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_203c02c52:;
		if (it != expr_end) {
			jule::Ptr<_1aa8740c0_Struct> _196621_s = *it;
			{
				_1aa8edc82_checkStructDecl(_self_, &(_196621_s));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_203c02c52:;
			++it;
			goto _iter_begin_203c02c52;
		}
		_iter_end_203c02c52:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1aa8ee26b_checkFnDecl(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Ptr<_1aa889426_Fn>* _197636_f) {
	if (_1db9475a2_IsIgnoreIdent((*(_197636_f)).get()._field_Ident)) {
		_1aa8dbbb5_pushErr(_self_.ptr(), (*(_197636_f)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	_1aa8dcb0b_checkDirectives(_self_, &((*(_197636_f)).get()._field_Directives), jule::Any((*(_197636_f)), &__jule_any_type65));
	(*(_197636_f)).get()._field_sema=_self_;
	_1aa8ea256_checkFnDeclPrototype(_self_, _197636_f);
	if (_1aa8dc7dc_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_197636_f)))), (*(_197636_f)).get()._field_Ident, (*(_197636_f)).get()._field_CppLinked)) {
		if ((*(_197636_f)).get()._field_Ident.equal("init", 4)) {
			jule::Ptr<_1aa889426_Fn> _198821_init = _1aa8da730_FindFn(_self_.ptr(), jule::Str("init", 4), false);;
			if ((_198821_init != nullptr)) {
				return;;
			};
		};
		_1aa8dbbb5_pushErr(_self_.ptr(), (*(_197636_f)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_197636_f)).get()._field_Ident, &__jule_any_type5)}));
		_1aa8dbed4_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1aa8ee4d0_checkFnDecls(jule::Ptr<_1aa8d92de_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_203c0ed3b:;
		if (it != expr_end) {
			jule::Ptr<_1aa889426_Fn> _200021_f = *it;
			{
				_1aa8ee26b_checkFnDecl(_self_, &(_200021_f));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_203c0ed3b:;
			++it;
			goto _iter_begin_203c0ed3b;
		}
		_iter_end_203c0ed3b:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1aa8ee898_pushCycleError(_1aa8d92de_Sema* _self_, jule::Str* _201030_st1, jule::Str* _201041_st2, jule::Str* _201056_message) {
	;
	jule::Str _201213_refers_to = _1d9d93d0d_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*(_201030_st1)), &__jule_any_type5),jule::Any((*(_201041_st2)), &__jule_any_type5)}));;
	((*(_201056_message))).buffer.insert(0, (((_1d9d02e37_Repeat(jule::Str(" ", 1), 7LL) + _201213_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _1aa8eece9_checkCrossCycle(_1aa8d92de_Sema* _self_, jule::Ptr<_1aa8740c0_Struct>* _201631_st1, jule::Ptr<_1aa8740c0_Struct>* _201646_st2, jule::Str* _201665_message) {
	{
		auto expr = &((*(_201646_st2)).get()._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_203c12e82:;
		if (it != expr_end) {
			jule::Ptr<_1aa8740c0_Struct> *_201716_u = it;
			{
				if (((*(_201716_u)) == (*(_201631_st1)))) {
					_1aa8ee898_pushCycleError(_self_, &((*(_201646_st2)).get()._field_Ident), &((*(_201716_u)).get()._field_Ident), _201665_message);
					return false;;
				};
				if ((!(_1aa8eece9_checkCrossCycle(_self_, _201631_st1, _201716_u, _201665_message)))) {
					_1aa8ee898_pushCycleError(_self_, &((*(_201646_st2)).get()._field_Ident), &((*(_201716_u)).get()._field_Ident), _201665_message);
					return false;;
				};
			}
			_iter_next_203c12e82:;
			++it;
			goto _iter_begin_203c12e82;
		}
		_iter_end_203c12e82:;
	};
	return true;;
}



inline jule::Bool _1aa90026c_checkStructDeriveIllegalCycles(_1aa8d92de_Sema* _self_, jule::Str _203049_derive, jule::Ptr<_1aa8740c0_Struct>* _203063_st1, jule::Ptr<_1aa983872_TypeKind>* _203082_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1aa8740c0_Struct> _203117_st2 = _1aa99cb77_getStructFromKind((*(_203082_k)));;
	if ((_203117_st2 == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_203063_st1)) == _203117_st2)) {
		_1aa8dbbb5_pushErr(_self_, (*(_203063_st1)).get()._field_Token, jule::Str("illegal cycle for derive @, struct @ refers to itself", 53), jule::Slice<jule::Any>::make({jule::Any(_203049_derive, &__jule_any_type5),jule::Any((*(_203063_st1)).get()._field_Ident, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Str _204317_message = jule::Str();;
	if ((!(_1aa8eece9_checkCrossCycle(_self_, _203063_st1, &(_203117_st2), &(_204317_message))))) {
		jule::Str _204521_errMsg = _204317_message;;
		_204317_message=jule::Str();
		_1aa8ee898_pushCycleError(_self_, &((*(_203063_st1)).get()._field_Ident), &(_203117_st2.get()._field_Ident), &(_204317_message));
		_204521_errMsg+=_204317_message;
		_1aa8dbbb5_pushErr(_self_, (*(_203063_st1)).get()._field_Token, jule::Str("illegal cross cycle for derive @;\n@", 35), jule::Slice<jule::Any>::make({jule::Any(_203049_derive, &__jule_any_type5),jule::Any(_204521_errMsg, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1aa9005ad_checkStructInsDeriveClone(_1aa8d92de_Sema* _self_, jule::Ptr<_1aa876dd6_StructIns> _205548_st) {
	jule::Bool __jule_func_result = false;
	if ((!(_1aa8758eb_IsDerives(_205548_st.get()._field_Decl.ptr(), jule::Str("Clone", 5))))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto expr = &(_205548_st.get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_203c18c8a:;
		if (it != expr_end) {
			jule::Ptr<_1aa8763e1_FieldIns> _205921_f = *it;
			{
				if ((_205921_f.get()._field_Kind == nullptr)) {
					goto _iter_next_203c18c8a;
				};
				if ((!(_1aa985786_SupportsCloning(_205921_f.get()._field_Kind.ptr())))) {
					_1aa8dbbb5_pushErr(_self_, _205548_st.get()._field_Decl.get()._field_Token, jule::Str("type @ is not compatible to derive @", 36), jule::Slice<jule::Any>::make({jule::Any(_1aa983c6d_Str(_205921_f.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("Clone", 5), &__jule_any_type5)}));
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_1aa90026c_checkStructDeriveIllegalCycles(_self_, jule::Str("Clone", 5), &(_205548_st.get()._field_Decl), &(_205921_f.get()._field_Kind))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_203c18c8a:;
			++it;
			goto _iter_begin_203c18c8a;
		}
		_iter_end_203c18c8a:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1aa90079a_checkPackageDecls(jule::Ptr<_1aa8d92de_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_203c1b81a:;
		if (it != expr_end) {
			jule::Ptr<_1aa94d51d_SymbolTable> _207721_f = *it;
			{
				_1aa8db7ec_setCurrentFile(_self_.ptr(), _207721_f);
				if ((!(_1aa8e95a7_checkTypeEnumDecls(_self_)))) {
					return;;
				};
				if ((!(_1aa8e7a39_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_203c1b81a:;
			++it;
			goto _iter_begin_203c1b81a;
		}
		_iter_end_203c1b81a:;
	};
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_203c1bac3:;
		if (it != expr_end) {
			jule::Ptr<_1aa94d51d_SymbolTable> _208721_f = *it;
			{
				_1aa8db7ec_setCurrentFile(_self_.ptr(), _208721_f);
				if ((!(_1aa8eb752_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_203c1bac3:;
			++it;
			goto _iter_begin_203c1bac3;
		}
		_iter_end_203c1bac3:;
	};
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_203c1ca80:;
		if (it != expr_end) {
			jule::Ptr<_1aa94d51d_SymbolTable> _209421_f = *it;
			{
				_1aa8db7ec_setCurrentFile(_self_.ptr(), _209421_f);
				if ((!(_1aa8ed039_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_203c1ca80:;
			++it;
			goto _iter_begin_203c1ca80;
		}
		_iter_end_203c1ca80:;
	};
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_203c1e3bc:;
		if (it != expr_end) {
			jule::Ptr<_1aa94d51d_SymbolTable> _210121_f = *it;
			{
				_1aa8db7ec_setCurrentFile(_self_.ptr(), _210121_f);
				{
					
					if ((!(_1aa8ee4d0_checkFnDecls(_self_)))) {
						_case_begin_203c2006b:;
					}
					else if ((!(_1aa8edee6_checkStructDecls(_self_)))) {
						_case_begin_203c200d2:;
					}
					else {
						_case_begin_203c20005:;
						{
							goto _iter_next_203c1e3bc;
						}
					}
					_match_end_203c1ee8e:;
				};
				return;;
			}
			_iter_next_203c1e3bc:;
			++it;
			goto _iter_begin_203c1e3bc;
		}
		_iter_end_203c1e3bc:;
	};
}



inline void _1aa900adb_checkDataForTypeInference(_1aa8d92de_Sema* _self_, jule::Ptr<_1aa957d85_Data>* _211345_d, jule::Ptr<_1db944d0d_Token>* _211356_err_token) {
	{
		
		if (_1aa958270_IsNil((*(_211345_d)).ptr())) {
			_case_begin_203c21006:;
			{
				_1aa8dbbb5_pushErr(_self_, (*(_211356_err_token)), jule::Str("nil is cannot use with type inferred definitions", 48), jule::Slice<jule::Any>());
			}
		}
		else if (_1aa9584d4_IsVoid((*(_211345_d)).ptr())) {
			_case_begin_203c2107d:;
			{
				_1aa8dbbb5_pushErr(_self_, (*(_211356_err_token)), jule::Str("void data is cannot use for type inferred definitions", 53), jule::Slice<jule::Any>());
			}
		}
		else if ((*(_211345_d)).get()._field_Kind.get()._field_Variadic) {
			_case_begin_203c21105:;
			{
				_1aa8dbbb5_pushErr(_self_, (*(_211356_err_token)), jule::Str("invalid expression for type inference", 37), jule::Slice<jule::Any>());
			}
		}
		_match_end_203c20dd5:;
	};
}



inline void _1aa900d72_checkVar(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Ptr<_1aa908c59_Var>* _212433_v) {
	if ((*(_212433_v)).get()._field_CppLinked) {
		return;;
	};
	if (_1aa909386_IsTypeInferred((*(_212433_v)).ptr())) {
		(*(_212433_v)).get()._field_Kind=jule::new_ptr<_1aa9889ba_TypeSymbol>(_1aa9889ba_TypeSymbol{._field_Kind=(*(_212433_v)).get()._field_Value.get()._field_Data.get()._field_Kind});
		_1aa900adb_checkDataForTypeInference(_self_.ptr(), &((*(_212433_v)).get()._field_Value.get()._field_Data), &((*(_212433_v)).get()._field_Value.get()._field_Expr.get()._field_Token));
		_1aa8e6d68_checkValidityForInitExpr(_self_, (*(_212433_v)).get()._field_Mutable, (*(_212433_v)).get()._field_Reference, &((*(_212433_v)).get()._field_Kind.get()._field_Kind), &((*(_212433_v)).get()._field_Value.get()._field_Data), &((*(_212433_v)).get()._field_Value.get()._field_Expr.get()._field_Token));
	} else {
		jule::Ptr<_1aa9906c5_Arr> _214121_arr = _1aa986974_Arr((*(_212433_v)).get()._field_Kind.get()._field_Kind.ptr());;
		if ((_214121_arr != nullptr)) {
			if (_214121_arr.get()._field_Auto) {
				jule::Ptr<_1aa9906c5_Arr> _214425_dataArr = _1aa986974_Arr((*(_212433_v)).get()._field_Value.get()._field_Data.get()._field_Kind.ptr());;
				if ((_214425_dataArr != nullptr)) {
					_214121_arr.get()._field_N=_214425_dataArr.get()._field_N;
				};
			};
		};
		if (_1aa8e3e53_checkAssignType(_self_, (*(_212433_v)).get()._field_Reference, &((*(_212433_v)).get()._field_Kind.get()._field_Kind), &((*(_212433_v)).get()._field_Value.get()._field_Data), (*(_212433_v)).get()._field_Value.get()._field_Expr.get()._field_Token)) {
			_1aa8e6d68_checkValidityForInitExpr(_self_, (*(_212433_v)).get()._field_Mutable, (*(_212433_v)).get()._field_Reference, &((*(_212433_v)).get()._field_Kind.get()._field_Kind), &((*(_212433_v)).get()._field_Value.get()._field_Data), &((*(_212433_v)).get()._field_Value.get()._field_Expr.get()._field_Token));
		};
	};
	if (((*(_212433_v)).get()._field_Reference && (!(_1aa99bed9_isValidForRef(&((*(_212433_v)).get()._field_Kind.get()._field_Kind)))))) {
		_1aa8dbbb5_pushErr(_self_.ptr(), (*(_212433_v)).get()._field_Token, jule::Str("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_1aa983c6d_Str((*(_212433_v)).get()._field_Kind.get()._field_Kind.ptr()), &__jule_any_type5)}));
	};
	if ((*(_212433_v)).get()._field_Constant) {
		jule::Bool _216617_comptime = _1aa987b62_comptime((*(_212433_v)).get()._field_Value.get()._field_Data.get()._field_Kind.ptr());;
		if (((!(_1aa958748_IsConst((*(_212433_v)).get()._field_Value.get()._field_Data.ptr()))) && (!(_216617_comptime)))) {
			_1aa8dbbb5_pushErr(_self_.ptr(), (*(_212433_v)).get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		if ((_216617_comptime && (_1aa98839e_comptimeRange((*(_212433_v)).get()._field_Value.get()._field_Data.get()._field_Kind.ptr()) != nullptr))) {
			_1aa8dbbb5_pushErr(_self_.ptr(), (*(_212433_v)).get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("@ is invalid data-type for constant", 35), jule::Slice<jule::Any>::make({jule::Any(_1aa983c6d_Str((*(_212433_v)).get()._field_Value.get()._field_Data.get()._field_Kind.ptr()), &__jule_any_type5)}));
		};
	} else {
		(*(_212433_v)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
	};
	if ((_1aa9878ed_Tup((*(_212433_v)).get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
		(*(_212433_v)).get()._field_Kind.get()._field_Kind=nullptr;
	};
}



inline void _1aa901191_checkTypeVar(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Ptr<_1aa908c59_Var>* _218337_decl, jule::Trait<_1aa9a0509_Lookup> _218353_l) {
	if (((*(_218337_decl)).get()._field_CppLinked || (!(_1aa909122_IsInitialized((*(_218337_decl)).ptr()))))) {
		return;;
	};
	jule::Ptr<_1aa959903_Eval> _218817_eval = nullptr;;
	if (((*(_218337_decl)).get()._field_Kind != nullptr)) {
		_218817_eval=_1aa8e3293_evalpd(_self_, _218353_l, (*(_218337_decl)).get()._field_Kind.get()._field_Kind, (*(_218337_decl)));
	} else {
		_218817_eval=_1aa8e3293_evalpd(_self_, _218353_l, nullptr, (*(_218337_decl)));
	};
	_218817_eval.get()._field_immutable=(!((*(_218337_decl)).get()._field_Mutable));
	(*(_218337_decl)).get()._field_Value.get()._field_Data=_1aa974742_evalExpr(_218817_eval, (*(_218337_decl)).get()._field_Value.get()._field_Expr);
	if (((*(_218337_decl)).get()._field_Value.get()._field_Data == nullptr)) {
		return;;
	};
	_1aa900d72_checkVar(_self_, _218337_decl);
}



inline void _1aa90136c_checkGlobalTypes(jule::Ptr<_1aa8d92de_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad3b9a69:;
		if (it != expr_end) {
			jule::Ptr<_1aa908c59_Var> _220421_decl = *it;
			{
				if (((_1aa909122_IsInitialized(_220421_decl.ptr()) && (_220421_decl.get()._field_Value.get()._field_Data == nullptr)) || (_1aa909386_IsTypeInferred(_220421_decl.ptr()) && (_220421_decl.get()._field_Kind.get()._field_Kind == nullptr)))) {
					_1aa901191_checkTypeVar(_self_, &(_220421_decl), jule::Trait<_1aa9a0509_Lookup>(_self_, 3));
				};
			}
			_iter_next_1ad3b9a69:;
			++it;
			goto _iter_begin_1ad3b9a69;
		}
		_iter_end_1ad3b9a69:;
	};
}



inline jule::Ptr<_1aa88c0c7_FnIns> _1aa901724_readyToCheckFn(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Ptr<_1aa876dd6_StructIns>* _221539_s, jule::Ptr<_1aa889426_Fn>* _221559_f) {
	jule::Ptr<_1aa88c0c7_FnIns> _221617_ins = _1aa88aa76_instance((*(_221559_f)));;
	if (((*(_221559_f)).get()._field_Instances.len() != 0LL)) {
		return _221617_ins;;
	};
	_221617_ins.get()._field_Owner=(*(_221539_s));
	_1aa88ad51_appendInstance((*(_221559_f)).ptr(), &(_221617_ins));
	_221617_ins.get()._field_reloaded=true;
	if (_1aa8e631d_reloadFnInsTypes(_self_, _221617_ins)) {
		return _221617_ins;;
	};
	return nullptr;;
}



inline void _1aa901a43_checkTypeMethod(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Ptr<_1aa876dd6_StructIns>* _222940_s, jule::Ptr<_1aa889426_Fn>* _222960_f) {
	if (((*(_222960_f)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_1aa88c0c7_FnIns> _223417_ins = (*(_222960_f)).get()._field_Instances[0LL];;
	if ((_223417_ins.get()._field_Scope.get()._field_Stmts.len() > 0LL)) {
		return;;
	};
	_1aa90421b_checkFnIns(_self_, &(_223417_ins));
}



inline jule::Ptr<_1aa88c0c7_FnIns> _1aa901e94_checkStructInsOp(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Ptr<_1aa876dd6_StructIns>* _224241_s, jule::Ptr<_1aa889426_Fn>* _224261_f, jule::Fn<jule::Bool(jule::Ptr<_1aa889426_Fn>)> _224269_p) {
	if (((((*(_224261_f)) == nullptr) || ((*(_224261_f)).get()._field_Generics.len() > 0LL)) || (!(_224269_p((*(_224261_f))))))) {
		return nullptr;;
	};
	return (*(_224261_f)).get()._field_Instances[0LL];;
}



inline jule::Bool _1aa90234b_checkStructEnv(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Ptr<_1aa876dd6_StructIns>* _225239_s, jule::Ptr<_1db944d0d_Token> _225258_errorToken) {
	jule::Bool __jule_func_result = false;
	_1aa992e58_typeChecker _225317_tc = _1aa992e58_typeChecker{._field_s=(*(_225239_s)).get()._field_Decl.get()._field_sema, ._field_rootLookup=jule::Trait<_1aa9a0509_Lookup>((*(_225239_s)).get()._field_Decl.get()._field_sema, 3), ._field_lookup=jule::Trait<_1aa9a0509_Lookup>((*(_225239_s)).get()._field_Decl.get()._field_sema, 3), ._field_referencer=jule::new_ptr<_1aa992078_referencer>(_1aa992078_referencer{._field_ident=(*(_225239_s)).get()._field_Decl.get()._field_Ident, ._field_owner=jule::Any((*(_225239_s)).get()._field_Decl, &__jule_any_type66), }), ._field_refers=(*(_225239_s)).get()._field_Refers, };;
	if (((*(_225239_s)).get()._field_Generics.len() > 0LL)) {
		_225317_tc._field_useGenerics=jule::Slice<jule::Ptr<_1aa982b29_TypeAlias>>::alloc(0LL, (*(_225239_s)).get()._field_Generics.len());
		{
			auto expr = &((*(_225239_s)).get()._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad3c3c3d:;
			if (it != expr_end) {
				jule::I64 _226618_i = it - expr->begin();
				jule::Ptr<_1aa9820e0_InsGeneric> _226625_g = *it;
				{
					jule::Ptr<_1aa861321_GenericDecl> _226725_decl = (*(_225239_s)).get()._field_Decl.get()._field_Generics[_226618_i];;
					_225317_tc._field_useGenerics = jule::alloc_for_append(_225317_tc._field_useGenerics,1);_225317_tc._field_useGenerics.__push(jule::new_ptr<_1aa982b29_TypeAlias>(_1aa982b29_TypeAlias{._field_Token=_226725_decl.get()._field_Token, ._field_Ident=_226725_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_1aa9889ba_TypeSymbol>(_1aa9889ba_TypeSymbol{._field_Kind=_226625_g.get()._field_Kind}), }));;
				}
				_iter_next_1ad3c3c3d:;
				++it;
				_226618_i++;
				goto _iter_begin_1ad3c3c3d;
			}
			_iter_end_1ad3c3c3d:;
		};
	};
	jule::Ptr<_1aa94d51d_SymbolTable> _227617_oldFile = _self_.get()._field_file;;
	__JULE_DEFER({
		_1aa8db7ec_setCurrentFile(_self_.ptr(), _227617_oldFile);
	});;
	if ((_self_.get()._field_file.get()._field_File != (*(_225239_s)).get()._field_Decl.get()._field_Token.get()._field_File)) {
		jule::Ptr<_1aa94d51d_SymbolTable> _228021_file = _1aa8d8134_findFile(&(_self_.get()._field_files), &((*(_225239_s)).get()._field_Decl.get()._field_Token.get()._field_File));;
		if ((_228021_file != nullptr)) {
			_1aa8db7ec_setCurrentFile(_self_.ptr(), _228021_file);
		};
	};
	if (((*(_225239_s)).get()._field_Generics.len() > 0LL)) {
		jule::Ptr<_1aa8aa69a_constraintChecker> _228721_cc = _1aa8e1e1d_constraintChecker(_self_);;
		_228721_cc.get()._field_et=_225258_errorToken;
		_228721_cc.get()._field_si=(*(_225239_s));
		_228721_cc.get()._field_genericsA=_225317_tc._field_useGenerics;
		_228721_cc.get()._field_uniq=true;
		if ((!(_1aa8ab57a_check(_228721_cc)))) {
			return __jule_func_result;;
		};
	};
	__jule_func_result=true;
	if (((*(_225239_s)).get()._field_Statics.len() > 0LL)) {
		jule::I64 _230021_n = _self_.get()._field_errors.len();;
		_self_.get()._field_files[0LL].get()._field_TypeAliases=jule::append(_225317_tc._field_useGenerics,_self_.get()._field_files[0LL].get()._field_TypeAliases);
		{
			auto expr = &((*(_225239_s)).get()._field_Statics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad3ca816:;
			if (it != expr_end) {
				jule::Ptr<_1aa908c59_Var> _230225_v = *it;
				{
					_1aa8eca50_checkVarDecl(_self_, &(_230225_v), jule::Trait<_1aa9a0509_Lookup>(_self_, 3));
					_1aa901191_checkTypeVar(_self_, &(_230225_v), jule::Trait<_1aa9a0509_Lookup>(_self_, 3));
					__jule_func_result=(((_self_.get()._field_errors.len() - _230021_n) == 0LL) && __jule_func_result);
				}
				_iter_next_1ad3ca816:;
				++it;
				goto _iter_begin_1ad3ca816;
			}
			_iter_end_1ad3ca816:;
		};
		_self_.get()._field_files[0LL].get()._field_TypeAliases=_self_.get()._field_files[0LL].get()._field_TypeAliases.slice(_225317_tc._field_useGenerics.len());
		if ((!(__jule_func_result))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	jule::Ptr<_1aa959903_Eval> _231317_eval = _1aa8e3958_eval(_self_, jule::Trait<_1aa9a0509_Lookup>(_self_, 3));;
	(*(_225239_s)).get()._field_Comparable=(!((*(_225239_s)).get()._field_Decl.get()._field_CppLinked));
	{
		auto expr = &((*(_225239_s)).get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad3cd363:;
		if (it != expr_end) {
			jule::Ptr<_1aa8763e1_FieldIns> _231521_f = *it;
			{
				jule::Ptr<_1aa983872_TypeKind> _231621_kind = _1aa99a1c4_checkDecl(&_225317_tc, &(_231521_f.get()._field_Decl.get()._field_Kind.get()._field_Decl));;
				__jule_func_result=((_231621_kind != nullptr) && __jule_func_result);
				if ((_231621_kind == nullptr)) {
					if (((_self_ != (*(_225239_s)).get()._field_Decl.get()._field_sema) && ((*(_225239_s)).get()._field_Decl.get()._field_sema.get()._field_errors.len() > 0LL))) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,(*(_225239_s)).get()._field_Decl.get()._field_sema.get()._field_errors);
						(*(_225239_s)).get()._field_Decl.get()._field_sema.get()._field_errors=nullptr;
					};
					goto _iter_next_1ad3cd363;
				};
				_231521_f.get()._field_Kind=_231621_kind;
				(*(_225239_s)).get()._field_Mutable=((*(_225239_s)).get()._field_Mutable || ((!(_231521_f.get()._field_Decl.get()._field_Mutable)) && _1aa985049_Mutable(_231521_f.get()._field_Kind.ptr())));
				(*(_225239_s)).get()._field_Comparable=((*(_225239_s)).get()._field_Comparable && _1aa984cd5_Comparable(_231521_f.get()._field_Kind.ptr()));
				_1aa9005ad_checkStructInsDeriveClone(_self_.ptr(), (*(_225239_s)));
				if ((_231521_f.get()._field_Decl.get()._field_Default == nullptr)) {
					goto _iter_next_1ad3cd363;
				};
				_231317_eval.get()._field_prefix=_231521_f.get()._field_Kind;
				_231317_eval.get()._field_field=_231521_f;
				_231521_f.get()._field_Default=_1aa974742_evalExpr(_231317_eval, _231521_f.get()._field_Decl.get()._field_Default);
				if ((_231521_f.get()._field_Default == nullptr)) {
					goto _iter_next_1ad3cd363;
				};
				;
				_1aa8e3e53_checkAssignType(_self_, false, &(_231521_f.get()._field_Kind), &(_231521_f.get()._field_Default), _231521_f.get()._field_Decl.get()._field_Default.get()._field_Token);
			}
			_iter_next_1ad3cd363:;
			++it;
			goto _iter_begin_1ad3cd363;
		}
		_iter_end_1ad3cd363:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1aa902703_precheckStructIns(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Ptr<_1aa876dd6_StructIns>* _235042_s, jule::Ptr<_1db944d0d_Token> _235061_errorToken) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=_1aa90234b_checkStructEnv(_self_, _235042_s, _235061_errorToken);
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_235042_s)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad3d5700:;
		if (it != expr_end) {
			jule::Ptr<_1aa889426_Fn> _235521_f = *it;
			{
				if ((_235521_f.get()._field_Generics.len() == 0LL)) {
					if ((_1aa901724_readyToCheckFn(_self_, _235042_s, &(_235521_f)) == nullptr)) {
						__jule_func_result = false;
						return __jule_func_result;;
					};
				};
			}
			_iter_next_1ad3d5700:;
			++it;
			goto _iter_begin_1ad3d5700;
		}
		_iter_end_1ad3d5700:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1aa902978_checkStructIns(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Ptr<_1aa876dd6_StructIns>* _236539_s) {
	{
		auto expr = &((*(_236539_s)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad3d704d:;
		if (it != expr_end) {
			jule::Ptr<_1aa889426_Fn> _236621_f = *it;
			{
				_1aa901a43_checkTypeMethod(_self_, _236539_s, &(_236621_f));
			}
			_iter_next_1ad3d704d:;
			++it;
			goto _iter_begin_1ad3d704d;
		}
		_iter_end_1ad3d704d:;
	};
}



inline void _1aa902bed_checkTypeStruct(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Ptr<_1aa8740c0_Struct>* _237140_s) {
	if ((*(_237140_s)).get()._field_CppLinked) {
		return;;
	};
	if (((*(_237140_s)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_237140_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad3d889b:;
		if (it != expr_end) {
			jule::Ptr<_1aa876dd6_StructIns> _238421_ins = *it;
			{
				_1aa902978_checkStructIns(_self_, &(_238421_ins));
			}
			_iter_next_1ad3d889b:;
			++it;
			goto _iter_begin_1ad3d889b;
		}
		_iter_end_1ad3d889b:;
	};
}



inline void _1aa902dc9_checkStructTypes(jule::Ptr<_1aa8d92de_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad3d945c:;
		if (it != expr_end) {
			jule::Ptr<_1aa8740c0_Struct> _239021_s = *it;
			{
				_1aa902bed_checkTypeStruct(_self_, &(_239021_s));
			}
			_iter_next_1ad3d945c:;
			++it;
			goto _iter_begin_1ad3d945c;
		}
		_iter_end_1ad3d945c:;
	};
}



inline void _1aa903171_checkStructInsOperators(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Ptr<_1aa876dd6_StructIns> _239547_s) {
	{
		auto expr = &(_239547_s.get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad3da2a4:;
		if (it != expr_end) {
			jule::Ptr<_1aa889426_Fn> _239621_m = *it;
			{
				{
					auto &_match_expr{ _239621_m.get()._field_Ident };
					
					if (_match_expr == jule::Str("Eq", 2)) {
						_case_begin_1ad3db00d:;
						{
							_239547_s.get()._field_Operators._field_Eq=_1aa901e94_checkStructInsOp(_self_, &(_239547_s), &(_239621_m), static__1aa90aa08_Eq);
							_239547_s.get()._field_Comparable=(_239547_s.get()._field_Operators._field_Eq != nullptr);
						}
					}
					else if (_match_expr == jule::Str("Gt", 2)) {
						_case_begin_1ad3db074:;
						{
							_239547_s.get()._field_Operators._field_Gt=_1aa901e94_checkStructInsOp(_self_, &(_239547_s), &(_239621_m), static__1aa90aca0_Gt);
						}
					}
					else if (_match_expr == jule::Str("GtEq", 4)) {
						_case_begin_1ad3db0da:;
						{
							_239547_s.get()._field_Operators._field_GtEq=_1aa901e94_checkStructInsOp(_self_, &(_239547_s), &(_239621_m), static__1aa90b047_GtEq);
						}
					}
					else if (_match_expr == jule::Str("Lt", 2)) {
						_case_begin_1ad3db162:;
						{
							_239547_s.get()._field_Operators._field_Lt=_1aa901e94_checkStructInsOp(_self_, &(_239547_s), &(_239621_m), static__1aa90b2de_Lt);
						}
					}
					else if (_match_expr == jule::Str("LtEq", 4)) {
						_case_begin_1ad3db1d9:;
						{
							_239547_s.get()._field_Operators._field_LtEq=_1aa901e94_checkStructInsOp(_self_, &(_239547_s), &(_239621_m), static__1aa90b586_LtEq);
						}
					}
					else if (_match_expr == jule::Str("Shl", 3)) {
						_case_begin_1ad3db261:;
						{
							_239547_s.get()._field_Operators._field_Shl=_1aa901e94_checkStructInsOp(_self_, &(_239547_s), &(_239621_m), static__1aa90bb6e_Shl);
						}
					}
					else if (_match_expr == jule::Str("Shr", 3)) {
						_case_begin_1ad3db2d8:;
						{
							_239547_s.get()._field_Operators._field_Shr=_1aa901e94_checkStructInsOp(_self_, &(_239547_s), &(_239621_m), static__1aa90be16_Shr);
						}
					}
					else if (_match_expr == jule::Str("Add", 3)) {
						_case_begin_1ad3db360:;
						{
							_239547_s.get()._field_Operators._field_Add=_1aa901e94_checkStructInsOp(_self_, &(_239547_s), &(_239621_m), static__1aa90c1ad_Add);
						}
					}
					else if (_match_expr == jule::Str("Sub", 3)) {
						_case_begin_1ad3db3d7:;
						{
							_239547_s.get()._field_Operators._field_Sub=_1aa901e94_checkStructInsOp(_self_, &(_239547_s), &(_239621_m), static__1aa90c455_Sub);
						}
					}
					else if (_match_expr == jule::Str("Div", 3)) {
						_case_begin_1ad3db45e:;
						{
							_239547_s.get()._field_Operators._field_Div=_1aa901e94_checkStructInsOp(_self_, &(_239547_s), &(_239621_m), static__1aa90c6ec_Div);
						}
					}
					else if (_match_expr == jule::Str("Mul", 3)) {
						_case_begin_1ad3db4d6:;
						{
							_239547_s.get()._field_Operators._field_Mul=_1aa901e94_checkStructInsOp(_self_, &(_239547_s), &(_239621_m), static__1aa90c994_Mul);
						}
					}
					else if (_match_expr == jule::Str("Mod", 3)) {
						_case_begin_1ad3db55d:;
						{
							_239547_s.get()._field_Operators._field_Mod=_1aa901e94_checkStructInsOp(_self_, &(_239547_s), &(_239621_m), static__1aa90cc3b_Mod);
						}
					}
					else if (_match_expr == jule::Str("BitAnd", 6)) {
						_case_begin_1ad3db5d5:;
						{
							_239547_s.get()._field_Operators._field_BitAnd=_1aa901e94_checkStructInsOp(_self_, &(_239547_s), &(_239621_m), static__1aa90ced3_BitAnd);
						}
					}
					else if (_match_expr == jule::Str("BitOr", 5)) {
						_case_begin_1ad3db65c:;
						{
							_239547_s.get()._field_Operators._field_BitOr=_1aa901e94_checkStructInsOp(_self_, &(_239547_s), &(_239621_m), static__1aa90d27a_BitOr);
						}
					}
					else if (_match_expr == jule::Str("BitXor", 6)) {
						_case_begin_1ad3db6d4:;
						{
							_239547_s.get()._field_Operators._field_BitXor=_1aa901e94_checkStructInsOp(_self_, &(_239547_s), &(_239621_m), static__1aa90d522_BitXor);
						}
					}
					else if (_match_expr == jule::Str("Neg", 3)) {
						_case_begin_1ad3db75b:;
						{
							_239547_s.get()._field_Operators._field_Neg=_1aa901e94_checkStructInsOp(_self_, &(_239547_s), &(_239621_m), static__1aa90db0a_Neg);
						}
					}
					else if (_match_expr == jule::Str("Pos", 3)) {
						_case_begin_1ad3db7d3:;
						{
							_239547_s.get()._field_Operators._field_Pos=_1aa901e94_checkStructInsOp(_self_, &(_239547_s), &(_239621_m), static__1aa90dda2_Pos);
						}
					}
					else if (_match_expr == jule::Str("BitNot", 6)) {
						_case_begin_1ad3db85a:;
						{
							_239547_s.get()._field_Operators._field_BitNot=_1aa901e94_checkStructInsOp(_self_, &(_239547_s), &(_239621_m), static__1aa90e149_BitNot);
						}
					}
					else if (_match_expr == jule::Str("AddAssign", 9)) {
						_case_begin_1ad3db8d2:;
						{
							_239547_s.get()._field_Operators._field_AddAssign=_1aa901e94_checkStructInsOp(_self_, &(_239547_s), &(_239621_m), static__1aa90e732_AddAssign);
						}
					}
					else if (_match_expr == jule::Str("SubAssign", 9)) {
						_case_begin_1ad3db959:;
						{
							_239547_s.get()._field_Operators._field_SubAssign=_1aa901e94_checkStructInsOp(_self_, &(_239547_s), &(_239621_m), static__1aa90e9c9_SubAssign);
						}
					}
					else if (_match_expr == jule::Str("DivAssign", 9)) {
						_case_begin_1ad3db9d1:;
						{
							_239547_s.get()._field_Operators._field_DivAssign=_1aa901e94_checkStructInsOp(_self_, &(_239547_s), &(_239621_m), static__1aa90ec71_DivAssign);
						}
					}
					else if (_match_expr == jule::Str("MulAssign", 9)) {
						_case_begin_1ad3dba58:;
						{
							_239547_s.get()._field_Operators._field_MulAssign=_1aa901e94_checkStructInsOp(_self_, &(_239547_s), &(_239621_m), static__1aa910018_MulAssign);
						}
					}
					else if (_match_expr == jule::Str("ModAssign", 9)) {
						_case_begin_1ad3dbad0:;
						{
							_239547_s.get()._field_Operators._field_ModAssign=_1aa901e94_checkStructInsOp(_self_, &(_239547_s), &(_239621_m), static__1aa9102b0_ModAssign);
						}
					}
					else if (_match_expr == jule::Str("ShlAssign", 9)) {
						_case_begin_1ad3dbb57:;
						{
							_239547_s.get()._field_Operators._field_ShlAssign=_1aa901e94_checkStructInsOp(_self_, &(_239547_s), &(_239621_m), static__1aa910557_ShlAssign);
						}
					}
					else if (_match_expr == jule::Str("ShrAssign", 9)) {
						_case_begin_1ad3dbbce:;
						{
							_239547_s.get()._field_Operators._field_ShrAssign=_1aa901e94_checkStructInsOp(_self_, &(_239547_s), &(_239621_m), static__1aa9107ee_ShrAssign);
						}
					}
					else if (_match_expr == jule::Str("BitOrAssign", 11)) {
						_case_begin_1ad3dbc56:;
						{
							_239547_s.get()._field_Operators._field_BitOrAssign=_1aa901e94_checkStructInsOp(_self_, &(_239547_s), &(_239621_m), static__1aa910a96_BitOrAssign);
						}
					}
					else if (_match_expr == jule::Str("BitAndAssign", 12)) {
						_case_begin_1ad3dbccd:;
						{
							_239547_s.get()._field_Operators._field_BitAndAssign=_1aa901e94_checkStructInsOp(_self_, &(_239547_s), &(_239621_m), static__1aa910d3d_BitAndAssign);
						}
					}
					else if (_match_expr == jule::Str("BitXorAssign", 12)) {
						_case_begin_1ad3dbd55:;
						{
							_239547_s.get()._field_Operators._field_BitXorAssign=_1aa901e94_checkStructInsOp(_self_, &(_239547_s), &(_239621_m), static__1aa9110d5_BitXorAssign);
						}
					}
					_match_end_1ad3daae0:;
				};
			}
			_iter_next_1ad3da2a4:;
			++it;
			goto _iter_begin_1ad3da2a4;
		}
		_iter_end_1ad3da2a4:;
	};
}



inline void _1aa903407_precheckStructType(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Ptr<_1aa8740c0_Struct>* _245943_s) {
	if ((*(_245943_s)).get()._field_CppLinked) {
		return;;
	};
	if (((*(_245943_s)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*(_245943_s)).get()._field_Instances.len() == 0LL)) {
		jule::Ptr<_1aa876dd6_StructIns> _247021_ins = _1aa874532_instance((*(_245943_s)));;
		_247021_ins.get()._field_Checked=true;
		_1aa87480c_appendInstance((*(_245943_s)).ptr(), &(_247021_ins));
		_1aa902703_precheckStructIns(_self_, &(_247021_ins), nullptr);
	};
	_1aa903171_checkStructInsOperators(_self_, (*(_245943_s)).get()._field_Instances[0LL]);
}



inline void _1aa9035d3_precheckStructTypes(jule::Ptr<_1aa8d92de_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad3ee373:;
		if (it != expr_end) {
			jule::Ptr<_1aa8740c0_Struct> _248021_s = *it;
			{
				_1aa903407_precheckStructType(_self_, &(_248021_s));
			}
			_iter_next_1ad3ee373:;
			++it;
			goto _iter_begin_1ad3ee373;
		}
		_iter_end_1ad3ee373:;
	};
}



inline void _1aa903858_checkRets(_1aa8d92de_Sema* _self_, jule::Ptr<_1aa88c0c7_FnIns>* _248533_f) {
	if (_1aa889888_IsVoid((*(_248533_f)).get()._field_Decl.ptr())) {
		return;;
	};
	_1aa905a03_missingRetChecker _248913_mrc = static__1aa905dbb_new();;
	jule::Bool _249013_ok = _1aa906dcd_check(&_248913_mrc, (*(_248533_f)).get()._field_Scope);;
	if ((!(_249013_ok))) {
		_1aa8dbbb5_pushErr(_self_, (*(_248533_f)).get()._field_Decl.get()._field_Token, jule::Str("missing return at end of function", 33), jule::Slice<jule::Any>());
	};
}



inline void _1aa903b77_checkFnInsSc(_1aa8d92de_Sema* _self_, jule::Ptr<_1aa88c0c7_FnIns>* _249636_f, jule::Ptr<_1aa8b91d1_scopeChecker>* _249652_sc) {
	_1aa8d774e_appendRetVars(&((*(_249652_sc)).get()._field_table.get()._field_Vars), _249636_f);
	_1aa8d7a07_appendParamVars(&((*(_249652_sc)).get()._field_table.get()._field_Vars), _249636_f);
	_1aa8d7cd2_appendGenericTypeAliases(&((*(_249652_sc)).get()._field_table.get()._field_TypeAliases), _249636_f);
	_1aa8c9125_check((*(_249652_sc)), &((*(_249636_f)).get()._field_Decl.get()._field_Scope), &((*(_249636_f)).get()._field_Scope));
	if ((!(_1aa8bba30_stopped((*(_249652_sc)).ptr())))) {
		_1aa903858_checkRets(_self_, _249636_f);
	};
}



inline void _1aa903e96_checkFnInsCaller(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Ptr<_1aa88c0c7_FnIns>* _250941_f, jule::Ptr<_1db944d0d_Token> _250956_caller) {
	if ((*(_250941_f)).get()._field_Decl.get()._field_CppLinked) {
		return;;
	};
	jule::Ptr<_1aa94d51d_SymbolTable> _251417_old = (*(_250941_f)).get()._field_Decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_1aa8db7ec_setCurrentFile((*(_250941_f)).get()._field_Decl.get()._field_sema.ptr(), _251417_old);
	});;
	jule::Ptr<_1aa94d51d_SymbolTable> _251617_file = _1aa8d8134_findFile(&((*(_250941_f)).get()._field_Decl.get()._field_sema.get()._field_files), &((*(_250941_f)).get()._field_Decl.get()._field_Token.get()._field_File));;
	if ((_251617_file != nullptr)) {
		_1aa8db7ec_setCurrentFile((*(_250941_f)).get()._field_Decl.get()._field_sema.ptr(), _251617_file);
	};
	jule::Ptr<_1aa8b91d1_scopeChecker> _252117_sc = _1aa8ae968_newScopeChecker(&((*(_250941_f)).get()._field_Decl.get()._field_sema), (*(_250941_f)));;
	_252117_sc.get()._field_calledFrom=_250956_caller;
	_1aa903b77_checkFnInsSc(_self_.ptr(), _250941_f, &(_252117_sc));
	if (((*(_250941_f)).get()._field_Decl.get()._field_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,(*(_250941_f)).get()._field_Decl.get()._field_sema.get()._field_errors);
		(*(_250941_f)).get()._field_Decl.get()._field_sema.get()._field_errors=nullptr;
	};
}



inline void _1aa90421b_checkFnIns(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Ptr<_1aa88c0c7_FnIns>* _253135_f) {
	_1aa903e96_checkFnInsCaller(_self_, _253135_f, nullptr);
}



inline void _1aa904491_checkTypeFn(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Ptr<_1aa889426_Fn>* _253536_f) {
	if ((*(_253536_f)).get()._field_CppLinked) {
		return;;
	};
	if (((*(_253536_f)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_253536_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad409845:;
		if (it != expr_end) {
			jule::Ptr<_1aa88c0c7_FnIns> _254521_ins = *it;
			{
				_1aa90421b_checkFnIns(_self_, &(_254521_ins));
			}
			_iter_next_1ad409845:;
			++it;
			goto _iter_begin_1ad409845;
		}
		_iter_end_1ad409845:;
	};
}



inline void _1aa904716_checkTestFn(_1aa8d92de_Sema* _self_, jule::Ptr<_1aa88c0c7_FnIns>* _255035_f) {
	if ((*(_255035_f)).get()._field_Decl.get()._field_Public) {
		_1aa8dbbb5_pushErr(_self_, (*(_255035_f)).get()._field_Decl.get()._field_Token, jule::Str("test function cannot be public", 30), jule::Slice<jule::Any>());
		_1aa8dbed4_pushSuggestion(_self_, jule::Str("remove \"pub\" modifier", 21), jule::Slice<jule::Any>());
		return;;
	};
	if (((((((*(_255035_f)).get()._field_Decl.get()._field_Unsafety || (!(_1aa889888_IsVoid((*(_255035_f)).get()._field_Decl.ptr())))) || ((*(_255035_f)).get()._field_Decl.get()._field_Generics.len() != 0LL)) || ((*(_255035_f)).get()._field_Params.len() != 1LL)) || (*(_255035_f)).get()._field_Decl.get()._field_Params[0LL].get()._field_Mutable) || (*(_255035_f)).get()._field_Decl.get()._field_Params[0LL].get()._field_Reference)) {
		_1aa8dbbb5_pushErr(_self_, (*(_255035_f)).get()._field_Decl.get()._field_Token, jule::Str("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1aa8dbed4_pushSuggestion(_self_, jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1aa98cabd_Sptr> _256817_sptr = _1aa985ec3_Sptr((*(_255035_f)).get()._field_Params[0LL].get()._field_Kind.ptr());;
	if ((_256817_sptr == nullptr)) {
		_1aa8dbbb5_pushErr(_self_, (*(_255035_f)).get()._field_Decl.get()._field_Token, jule::Str("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1aa8dbed4_pushSuggestion(_self_, jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1aa876dd6_StructIns> _257513_s = _1aa9871b1_Struct(_256817_sptr.get()._field_Elem.ptr());;
	if (((_257513_s == nullptr) || (!(_1aa8d5e12_isStdPackage(_257513_s.get()._field_Decl.get()._field_Token.get()._field_File.get()._field_Path, jule::Str("testing", 7)))))) {
		_1aa8dbbb5_pushErr(_self_, (*(_255035_f)).get()._field_Decl.get()._field_Token, jule::Str("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1aa8dbed4_pushSuggestion(_self_, jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1aa90498b_precheckTypeFn(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Ptr<_1aa889426_Fn>* _258339_f) {
	if ((*(_258339_f)).get()._field_CppLinked) {
		return;;
	};
	if (((*(_258339_f)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*(_258339_f)).get()._field_Instances.len() == 0LL)) {
		jule::Ptr<_1aa88c0c7_FnIns> _259421_ins = _1aa88a812_instanceForce((*(_258339_f)));;
		(*(_258339_f)).get()._field_Instances = jule::alloc_for_append((*(_258339_f)).get()._field_Instances,1);(*(_258339_f)).get()._field_Instances.__push(_259421_ins);;
		jule::Bool _259617_ok = _1aa8e631d_reloadFnInsTypes(_self_, _259421_ins);;
		_259421_ins.get()._field_reloaded=true;
		if ((_259617_ok && _1aa99b67b_hasDirective(&((*(_258339_f)).get()._field_Directives), jule::Str("test", 4)))) {
			_1aa904716_checkTestFn(_self_.ptr(), &(_259421_ins));
		};
	};
}



inline void _1aa904b67_precheckFnTypes(jule::Ptr<_1aa8d92de_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad415356:;
		if (it != expr_end) {
			jule::Ptr<_1aa89b647_Trait> _260721_decl = *it;
			{
				{
					auto expr = &(_260721_decl.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad415bb4:;
					if (it != expr_end) {
						jule::Ptr<_1aa889426_Fn> _260825_m = *it;
						{
							_1aa90498b_precheckTypeFn(_self_, &(_260825_m));
						}
						_iter_next_1ad415bb4:;
						++it;
						goto _iter_begin_1ad415bb4;
					}
					_iter_end_1ad415bb4:;
				};
			}
			_iter_next_1ad415356:;
			++it;
			goto _iter_begin_1ad415356;
		}
		_iter_end_1ad415356:;
	};
	{
		auto expr = &(_self_.get()._field_file.get()._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad415884:;
		if (it != expr_end) {
			jule::Ptr<_1aa889426_Fn> _261221_decl = *it;
			{
				_1aa90498b_precheckTypeFn(_self_, &(_261221_decl));
			}
			_iter_next_1ad415884:;
			++it;
			goto _iter_begin_1ad415884;
		}
		_iter_end_1ad415884:;
	};
}



inline void _1aa904d43_checkFnTypes(jule::Ptr<_1aa8d92de_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad416e90:;
		if (it != expr_end) {
			jule::Ptr<_1aa889426_Fn> _261921_decl = *it;
			{
				_1aa904491_checkTypeFn(_self_, &(_261921_decl));
			}
			_iter_next_1ad416e90:;
			++it;
			goto _iter_begin_1ad416e90;
		}
		_iter_end_1ad416e90:;
	};
}



inline void _1aa90501e_checkPackageTypes(jule::Ptr<_1aa8d92de_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad417ba5:;
		if (it != expr_end) {
			jule::Ptr<_1aa94d51d_SymbolTable> _262721_f = *it;
			{
				_1aa8db7ec_setCurrentFile(_self_.ptr(), _262721_f);
				_1aa90136c_checkGlobalTypes(_self_);
				_1aa904b67_precheckFnTypes(_self_);
				_1aa9035d3_precheckStructTypes(_self_);
			}
			_iter_next_1ad417ba5:;
			++it;
			goto _iter_begin_1ad417ba5;
		}
		_iter_end_1ad417ba5:;
	};
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad41947b:;
		if (it != expr_end) {
			jule::Ptr<_1aa94d51d_SymbolTable> _263821_f = *it;
			{
				_1aa8db7ec_setCurrentFile(_self_.ptr(), _263821_f);
				_1aa904d43_checkFnTypes(_self_);
				_1aa902dc9_checkStructTypes(_self_);
			}
			_iter_next_1ad41947b:;
			++it;
			goto _iter_begin_1ad41947b;
		}
		_iter_end_1ad41947b:;
	};
}



inline void _1aa9051ea_setFileSemaFields(jule::Ptr<_1aa8d92de_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad419a64:;
		if (it != expr_end) {
			jule::Ptr<_1aa889426_Fn> _264621_f = *it;
			{
				_264621_f.get()._field_sema=_self_;
			}
			_iter_next_1ad419a64:;
			++it;
			goto _iter_begin_1ad419a64;
		}
		_iter_end_1ad419a64:;
	};
	{
		auto expr = &(_self_.get()._field_file.get()._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad41aa54:;
		if (it != expr_end) {
			jule::Ptr<_1aa8740c0_Struct> _264921_st = *it;
			{
				_264921_st.get()._field_sema=_self_;
			}
			_iter_next_1ad41aa54:;
			++it;
			goto _iter_begin_1ad41aa54;
		}
		_iter_end_1ad41aa54:;
	};
}



inline void _1aa9053c6_setSemaFields(jule::Ptr<_1aa8d92de_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad41b58d:;
		if (it != expr_end) {
			jule::Ptr<_1aa94d51d_SymbolTable> _265521_file = *it;
			{
				_1aa8db7ec_setCurrentFile(_self_.ptr(), _265521_file);
				_1aa9051ea_setFileSemaFields(_self_);
			}
			_iter_next_1ad41b58d:;
			++it;
			goto _iter_begin_1ad41b58d;
		}
		_iter_end_1ad41b58d:;
	};
}



inline void _1aa90564b_check(jule::Ptr<_1aa8d92de_Sema> _self_, jule::Slice<jule::Ptr<_1aa94d51d_SymbolTable>>* _266130_files) {
	_self_.get()._field_files=(*(_266130_files));
	_1aa8e0328_checkImports(_self_.ptr());
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1aa9053c6_setSemaFields(_self_);
	_1aa8e08ab_checkEnums(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1aa8e0c63_checkInherits(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1aa8e06d0_implImpls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1aa90079a_checkPackageDecls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1aa90501e_checkPackageTypes(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1aa8d92de_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags << ", ";
	_Stream << "meta:" << _Src._field_meta;
	_Stream << "}";
	return _Stream;
}



inline _1aa905a03_missingRetChecker static__1aa905dbb_new(void) {
	return _1aa905a03_missingRetChecker{._field_breaked=jule::Slice<jule::Uintptr>::alloc(16LLU, 16LLU, 0), };;
}



inline jule::Bool _1aa906196_checkConditional(_1aa905a03_missingRetChecker* _self_, jule::Ptr<_1aa8b310e_Conditional> _270935_c) {
	{
		auto expr = &(_270935_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad421692:;
		if (it != expr_end) {
			jule::Ptr<_1aa8b299e_If> _271021_elif = *it;
			{
				if ((_271021_elif == nullptr)) {
					return false;;
				};
				if ((!(_1aa906ac0_checkScope(_self_, _271021_elif.get()._field_Scope)))) {
					return false;;
				};
			}
			_iter_next_1ad421692:;
			++it;
			goto _iter_begin_1ad421692;
		}
		_iter_end_1ad421692:;
	};
	return ((_270935_c.get()._field_Default != nullptr) && _1aa906ac0_checkScope(_self_, _270935_c.get()._field_Default.get()._field_Scope));;
}



inline jule::Bool _1aa9064a4_checkMatch(_1aa905a03_missingRetChecker* _self_, jule::Ptr<_1aa8b63ba_Match> _272129_m) {
	{
		auto expr = &(_272129_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad423386:;
		if (it != expr_end) {
			jule::Ptr<_1aa8b6e15_Case> _272221_c = *it;
			{
				if ((_272221_c == nullptr)) {
					return false;;
				};
				jule::I64 _272617_n = (*(_self_))._field_breaked.len();;
				jule::Bool _272717_ok = _1aa906ac0_checkScope(_self_, _272221_c.get()._field_Scope);;
				{
					
					if ((_272617_n != (*(_self_))._field_breaked.len())) {
						_case_begin_1ad424ed1:;
						{
							return false;;
						}
					}
					else if ((!(_272717_ok))) {
						_case_begin_1ad425047:;
						{
							if ((!((*(_self_))._field_falled))) {
								return false;;
							};
							goto _case_begin_1ad4250be;
						}
					}
					else if ((*(_self_))._field_falled) {
						_case_begin_1ad4250be:;
						{
							(*(_self_))._field_falled=false;
							if ((_272221_c.get()._field_Next == nullptr)) {
								return false;;
							};
							goto _iter_next_1ad423386;
						}
					}
					_match_end_1ad424e7b:;
				};
			}
			_iter_next_1ad423386:;
			++it;
			goto _iter_begin_1ad423386;
		}
		_iter_end_1ad423386:;
	};
	return ((_272129_m.get()._field_Default != nullptr) && _1aa906ac0_checkScope(_self_, _272129_m.get()._field_Default.get()._field_Scope));;
}



inline jule::Bool _1aa9067b2_checkInfIter(_1aa905a03_missingRetChecker* _self_, jule::Ptr<_1aa8b33ea_InfIter> _274731_it) {
	jule::I64 _274813_n = (*(_self_))._field_breaked.len();;
	if (_1aa906ac0_checkScope(_self_, _274731_it.get()._field_Scope)) {
		(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _274813_n);
		return true;;
	};
	if ((_274813_n != (*(_self_))._field_breaked.len())) {
		jule::Uintptr _275417_itaddr = static_cast<jule::Uintptr>(_274731_it);;
		{
			auto expr = (*(_self_))._field_breaked.slice(_274813_n);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1ad428ce8:;
			if (it != expr_end) {
				jule::Uintptr _275520_addr = *it;
				{
					if ((_275417_itaddr == _275520_addr)) {
						(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _274813_n);
						return false;;
					};
				}
				_iter_next_1ad428ce8:;
				++it;
				goto _iter_begin_1ad428ce8;
			}
			_iter_end_1ad428ce8:;
		};
		(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _274813_n);
	};
	return true;;
}



inline jule::Bool _1aa906ac0_checkScope(_1aa905a03_missingRetChecker* _self_, jule::Ptr<_1aa8b25a3_Scope> _276629_s) {
	if ((_276629_s == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_276629_s.get()._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad42a8aa:;
		if (it != expr_end) {
			jule::Any _277021_st = *it;
			{
				{
					auto &_match_expr{ _277021_st };
					
					if (_match_expr.type == &__jule_any_type49) {
						_case_begin_1ad42b0e7:;
						{
							(*(_self_))._field_falled=true;
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type50) {
						_case_begin_1ad42b191:;
						{
							jule::Uintptr _277621_addr = _277021_st.cast_ptr<_1aa8b4a06_BreakSt>(&__jule_any_type50).get()._field_It;;
							if ((_277621_addr != 0LLU)) {
								(*(_self_))._field_breaked = jule::alloc_for_append((*(_self_))._field_breaked,1);(*(_self_))._field_breaked.__push(_277621_addr);;
							};
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type42) {
						_case_begin_1ad42b207:;
						{
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type37) {
						_case_begin_1ad42b26d:;
						{
							if (_1aa9067b2_checkInfIter(_self_, _277021_st.cast_ptr<_1aa8b33ea_InfIter>(&__jule_any_type37))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type51) {
						_case_begin_1ad42b2d4:;
						{
							return true;;
						}
					}
					else if (_match_expr.type == &__jule_any_type22) {
						_case_begin_1ad42b34a:;
						{
							if (_1aa906ac0_checkScope(_self_, _277021_st.cast_ptr<_1aa8b25a3_Scope>(&__jule_any_type22))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type24) {
						_case_begin_1ad42b3b1:;
						{
							{
								auto &_match_expr{ _277021_st.cast_ptr<_1aa957d85_Data>(&__jule_any_type24).get()._field_Model };
								
								if (_match_expr.type == &__jule_any_type30 || _match_expr.type == &__jule_any_type23) {
									_case_begin_1ad42ed10:;
									{
										return true;;
									}
								}
								_match_end_1ad42ea46:;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type36) {
						_case_begin_1ad42b438:;
						{
							if (_1aa906196_checkConditional(_self_, _277021_st.cast_ptr<_1aa8b310e_Conditional>(&__jule_any_type36))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type48) {
						_case_begin_1ad42b4b0:;
						{
							if (_1aa9064a4_checkMatch(_self_, _277021_st.cast_ptr<_1aa8b63ba_Match>(&__jule_any_type48))) {
								return true;;
							};
						}
					}
					_match_end_1ad42ae4e:;
				};
			}
			_iter_next_1ad42a8aa:;
			++it;
			goto _iter_begin_1ad42a8aa;
		}
		_iter_end_1ad42a8aa:;
	};
	return false;;
}



inline jule::Bool _1aa906dcd_check(_1aa905a03_missingRetChecker* _self_, jule::Ptr<_1aa8b25a3_Scope> _281224_s) {
	return _1aa906ac0_checkScope(_self_, _281224_s);;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa905a03_missingRetChecker _Src) {
	_Stream << "missingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa907c14_IterRelation _Src) {
	_Stream << "IterRelation{";
	_Stream << "Range:" << _Src._field_Range;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aa909122_IsInitialized(_1aa908c59_Var* _self_) {
	return ((*(_self_))._field_Value != nullptr);;
}



inline jule::Bool _1aa909386_IsTypeInferred(_1aa908c59_Var* _self_) {
	return (((*(_self_))._field_Kind == nullptr) || ((*(_self_))._field_Kind.get()._field_Decl == nullptr));;
}



inline jule::Bool _1aa9095ea_untypedConstant(_1aa908c59_Var* _self_) {
	return (_1aa909386_IsTypeInferred(_self_) && (*(_self_))._field_Value.get()._field_Data.get()._field_untyped);;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa908c59_Var _Src) {
	_Stream << "Var{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Value:" << _Src._field_Value << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "IterRelation:" << _Src._field_IterRelation << ", ";
	_Stream << "RetOrder:" << _Src._field_RetOrder << ", ";
	_Stream << "Depends:" << _Src._field_Depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1aa90a178_Dispose(jule::Ptr<_1aa889426_Fn> _1023_f) {
	return ((((((((((_1023_f != nullptr) && (_1023_f.get()._field_Owner != nullptr)) && _1023_f.get()._field_Ident.equal("Dispose", 7)) && (!(_1023_f.get()._field_Statically))) && (!(_1023_f.get()._field_Unsafety))) && _1aa889888_IsVoid(_1023_f.ptr())) && (_1023_f.get()._field_Generics.len() == 0LL)) && (_1023_f.get()._field_Params.len() == 1LL)) && _1023_f.get()._field_Params[0LL].get()._field_Mutable) && (!(_1aa88847a_IsRef(_1023_f.get()._field_Params[0LL].ptr()))));;
}



inline jule::Bool static__1aa90a420_Str(jule::Ptr<_1aa889426_Fn> _2419_f) {
	if (((((((((((_2419_f == nullptr) || (_2419_f.get()._field_Owner == nullptr)) || (!_2419_f.get()._field_Ident.equal("Str", 3))) || _2419_f.get()._field_Statically) || _2419_f.get()._field_Unsafety) || _1aa889888_IsVoid(_2419_f.ptr())) || (_2419_f.get()._field_Generics.len() != 0LL)) || (_2419_f.get()._field_Params.len() != 1LL)) || _2419_f.get()._field_Params[0LL].get()._field_Mutable) || _1aa88847a_IsRef(_2419_f.get()._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1aa88c0c7_FnIns> _3817_ins = _2419_f.get()._field_Instances[0LL];;
	jule::Ptr<_1aa989339_Prim> _3913_prim = _1aa985c5e_Prim(_3817_ins.get()._field_Result.ptr());;
	if ((_3913_prim == nullptr)) {
		return false;;
	};
	return _1aa98c56d_IsStr(_3913_prim.ptr());;
}



inline jule::Bool static__1aa90a761_logical(jule::Ptr<_1aa889426_Fn>* _4624_f, jule::Str _4632_ident) {
	if (((((((((((((((*(_4624_f)) == nullptr) || ((*(_4624_f)).get()._field_Ident != _4632_ident)) || ((*(_4624_f)).get()._field_Owner == nullptr)) || ((*(_4624_f)).get()._field_Instances.len() == 0LL)) || (*(_4624_f)).get()._field_Statically) || (*(_4624_f)).get()._field_Unsafety) || _1aa889888_IsVoid((*(_4624_f)).ptr())) || ((*(_4624_f)).get()._field_Generics.len() != 0LL)) || ((*(_4624_f)).get()._field_Params.len() != 2LL)) || (*(_4624_f)).get()._field_Params[0LL].get()._field_Mutable) || _1aa88847a_IsRef((*(_4624_f)).get()._field_Params[0LL].ptr())) || (*(_4624_f)).get()._field_Params[1LL].get()._field_Mutable) || (*(_4624_f)).get()._field_Params[1LL].get()._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1aa88c0c7_FnIns> _6317_ins = (*(_4624_f)).get()._field_Instances[0LL];;
	jule::Ptr<_1aa989339_Prim> _6413_prim = _1aa985c5e_Prim(_6317_ins.get()._field_Result.ptr());;
	if (((_6413_prim == nullptr) || (!(_1aa98c309_IsBool(_6413_prim.ptr()))))) {
		return false;;
	};
	return (_6317_ins.get()._field_Owner == _1aa9871b1_Struct(_6317_ins.get()._field_Params[1LL].get()._field_Kind.ptr()));;
}



inline jule::Bool static__1aa90aa08_Eq(jule::Ptr<_1aa889426_Fn> _7218_f) {
	return static__1aa90a761_logical(&(_7218_f), jule::Str("Eq", 2));;
}



inline jule::Bool static__1aa90aca0_Gt(jule::Ptr<_1aa889426_Fn> _7718_f) {
	return static__1aa90a761_logical(&(_7718_f), jule::Str("Gt", 2));;
}



inline jule::Bool static__1aa90b047_GtEq(jule::Ptr<_1aa889426_Fn> _8220_f) {
	return static__1aa90a761_logical(&(_8220_f), jule::Str("GtEq", 4));;
}



inline jule::Bool static__1aa90b2de_Lt(jule::Ptr<_1aa889426_Fn> _8718_f) {
	return static__1aa90a761_logical(&(_8718_f), jule::Str("Lt", 2));;
}



inline jule::Bool static__1aa90b586_LtEq(jule::Ptr<_1aa889426_Fn> _9220_f) {
	return static__1aa90a761_logical(&(_9220_f), jule::Str("LtEq", 4));;
}



inline jule::Bool static__1aa90b8c7_result(jule::Ptr<_1aa889426_Fn>* _9623_f, jule::Str _9631_ident) {
	if (((((((((((((((*(_9623_f)) == nullptr) || ((*(_9623_f)).get()._field_Ident != _9631_ident)) || ((*(_9623_f)).get()._field_Owner == nullptr)) || ((*(_9623_f)).get()._field_Instances.len() == 0LL)) || (*(_9623_f)).get()._field_Statically) || (*(_9623_f)).get()._field_Unsafety) || _1aa889888_IsVoid((*(_9623_f)).ptr())) || ((*(_9623_f)).get()._field_Generics.len() != 0LL)) || ((*(_9623_f)).get()._field_Params.len() != 2LL)) || (*(_9623_f)).get()._field_Params[0LL].get()._field_Mutable) || _1aa88847a_IsRef((*(_9623_f)).get()._field_Params[0LL].ptr())) || (*(_9623_f)).get()._field_Params[1LL].get()._field_Mutable) || (*(_9623_f)).get()._field_Params[1LL].get()._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1aa88c0c7_FnIns> _11317_ins = (*(_9623_f)).get()._field_Instances[0LL];;
	return (_1aa9871b1_Struct(_11317_ins.get()._field_Result.ptr()) == _11317_ins.get()._field_Owner);;
}



inline jule::Bool static__1aa90bb6e_Shl(jule::Ptr<_1aa889426_Fn> _11819_f) {
	return static__1aa90b8c7_result(&(_11819_f), jule::Str("Shl", 3));;
}



inline jule::Bool static__1aa90be16_Shr(jule::Ptr<_1aa889426_Fn> _12319_f) {
	return static__1aa90b8c7_result(&(_12319_f), jule::Str("Shr", 3));;
}



inline jule::Bool static__1aa90c1ad_Add(jule::Ptr<_1aa889426_Fn> _12819_f) {
	return static__1aa90b8c7_result(&(_12819_f), jule::Str("Add", 3));;
}



inline jule::Bool static__1aa90c455_Sub(jule::Ptr<_1aa889426_Fn> _13319_f) {
	return static__1aa90b8c7_result(&(_13319_f), jule::Str("Sub", 3));;
}



inline jule::Bool static__1aa90c6ec_Div(jule::Ptr<_1aa889426_Fn> _13819_f) {
	return static__1aa90b8c7_result(&(_13819_f), jule::Str("Div", 3));;
}



inline jule::Bool static__1aa90c994_Mul(jule::Ptr<_1aa889426_Fn> _14319_f) {
	return static__1aa90b8c7_result(&(_14319_f), jule::Str("Mul", 3));;
}



inline jule::Bool static__1aa90cc3b_Mod(jule::Ptr<_1aa889426_Fn> _14819_f) {
	return static__1aa90b8c7_result(&(_14819_f), jule::Str("Mod", 3));;
}



inline jule::Bool static__1aa90ced3_BitAnd(jule::Ptr<_1aa889426_Fn> _15322_f) {
	return static__1aa90b8c7_result(&(_15322_f), jule::Str("BitAnd", 6));;
}



inline jule::Bool static__1aa90d27a_BitOr(jule::Ptr<_1aa889426_Fn> _15821_f) {
	return static__1aa90b8c7_result(&(_15821_f), jule::Str("BitOr", 5));;
}



inline jule::Bool static__1aa90d522_BitXor(jule::Ptr<_1aa889426_Fn> _16322_f) {
	return static__1aa90b8c7_result(&(_16322_f), jule::Str("BitXor", 6));;
}



inline jule::Bool static__1aa90d863_unary(jule::Ptr<_1aa889426_Fn>* _16722_f, jule::Str _16730_ident) {
	if (((((((((((((*(_16722_f)) == nullptr) || ((*(_16722_f)).get()._field_Ident != _16730_ident)) || ((*(_16722_f)).get()._field_Owner == nullptr)) || ((*(_16722_f)).get()._field_Instances.len() == 0LL)) || (*(_16722_f)).get()._field_Statically) || (*(_16722_f)).get()._field_Unsafety) || _1aa889888_IsVoid((*(_16722_f)).ptr())) || ((*(_16722_f)).get()._field_Generics.len() != 0LL)) || ((*(_16722_f)).get()._field_Params.len() != 1LL)) || (*(_16722_f)).get()._field_Params[0LL].get()._field_Mutable) || _1aa88847a_IsRef((*(_16722_f)).get()._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1aa88c0c7_FnIns> _18217_ins = (*(_16722_f)).get()._field_Instances[0LL];;
	return (_1aa9871b1_Struct(_18217_ins.get()._field_Result.ptr()) == _18217_ins.get()._field_Owner);;
}



inline jule::Bool static__1aa90db0a_Neg(jule::Ptr<_1aa889426_Fn> _18719_f) {
	return static__1aa90d863_unary(&(_18719_f), jule::Str("Neg", 3));;
}



inline jule::Bool static__1aa90dda2_Pos(jule::Ptr<_1aa889426_Fn> _19219_f) {
	return static__1aa90d863_unary(&(_19219_f), jule::Str("Pos", 3));;
}



inline jule::Bool static__1aa90e149_BitNot(jule::Ptr<_1aa889426_Fn> _19722_f) {
	return static__1aa90d863_unary(&(_19722_f), jule::Str("BitNot", 6));;
}



inline jule::Bool static__1aa90e48a_assign(jule::Ptr<_1aa889426_Fn>* _20123_f, jule::Str _20131_ident) {
	if (((((((((((((((*(_20123_f)) == nullptr) || ((*(_20123_f)).get()._field_Ident != _20131_ident)) || ((*(_20123_f)).get()._field_Owner == nullptr)) || ((*(_20123_f)).get()._field_Instances.len() == 0LL)) || (*(_20123_f)).get()._field_Statically) || (*(_20123_f)).get()._field_Unsafety) || (!(_1aa889888_IsVoid((*(_20123_f)).ptr())))) || ((*(_20123_f)).get()._field_Generics.len() != 0LL)) || ((*(_20123_f)).get()._field_Params.len() != 2LL)) || (!((*(_20123_f)).get()._field_Params[0LL].get()._field_Mutable))) || _1aa88847a_IsRef((*(_20123_f)).get()._field_Params[0LL].ptr())) || (*(_20123_f)).get()._field_Params[1LL].get()._field_Mutable) || (*(_20123_f)).get()._field_Params[1LL].get()._field_Reference)) {
		return false;;
	};
	return true;;
}



inline jule::Bool static__1aa90e732_AddAssign(jule::Ptr<_1aa889426_Fn> _22125_f) {
	return static__1aa90e48a_assign(&(_22125_f), jule::Str("AddAssign", 9));;
}



inline jule::Bool static__1aa90e9c9_SubAssign(jule::Ptr<_1aa889426_Fn> _22625_f) {
	return static__1aa90e48a_assign(&(_22625_f), jule::Str("SubAssign", 9));;
}



inline jule::Bool static__1aa90ec71_DivAssign(jule::Ptr<_1aa889426_Fn> _23125_f) {
	return static__1aa90e48a_assign(&(_23125_f), jule::Str("DivAssign", 9));;
}



inline jule::Bool static__1aa910018_MulAssign(jule::Ptr<_1aa889426_Fn> _23625_f) {
	return static__1aa90e48a_assign(&(_23625_f), jule::Str("MulAssign", 9));;
}



inline jule::Bool static__1aa9102b0_ModAssign(jule::Ptr<_1aa889426_Fn> _24125_f) {
	return static__1aa90e48a_assign(&(_24125_f), jule::Str("ModAssign", 9));;
}



inline jule::Bool static__1aa910557_ShlAssign(jule::Ptr<_1aa889426_Fn> _24625_f) {
	return static__1aa90e48a_assign(&(_24625_f), jule::Str("ShlAssign", 9));;
}



inline jule::Bool static__1aa9107ee_ShrAssign(jule::Ptr<_1aa889426_Fn> _25125_f) {
	return static__1aa90e48a_assign(&(_25125_f), jule::Str("ShrAssign", 9));;
}



inline jule::Bool static__1aa910a96_BitOrAssign(jule::Ptr<_1aa889426_Fn> _25627_f) {
	return static__1aa90e48a_assign(&(_25627_f), jule::Str("BitOrAssign", 11));;
}



inline jule::Bool static__1aa910d3d_BitAndAssign(jule::Ptr<_1aa889426_Fn> _26128_f) {
	return static__1aa90e48a_assign(&(_26128_f), jule::Str("BitAndAssign", 12));;
}



inline jule::Bool static__1aa9110d5_BitXorAssign(jule::Ptr<_1aa889426_Fn> _26628_f) {
	return static__1aa90e48a_assign(&(_26628_f), jule::Str("BitXorAssign", 12));;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa909a07_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline void _1aa93c210_pushErr(_1aa93bbe3_typeCompatibilityChecker* _self_, jule::Str _11726_fmt, jule::Slice<jule::Any> _11739_args) {
	_1aa8dbbb5_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _11726_fmt, _11739_args);
}



inline jule::Bool _1aa93c474_checkTrait(_1aa93bbe3_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1aa98480c_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1aa89b647_Trait> _12517_trt = _1aa987425_Trait((*(_self_))._field_dest.ptr());;
	jule::Bool _12617_ref = false;;
	{
		
		if ((_1aa985ec3_Sptr((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1ad541916:;
			{
				_12617_ref=true;
				(*(_self_))._field_src=_1aa985ec3_Sptr((*(_self_))._field_src.ptr()).get()._field_Elem;
				if ((_1aa9871b1_Struct((*(_self_))._field_src.ptr()) == nullptr)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				goto _case_begin_1ad541284;
			}
		}
		else if ((_1aa9871b1_Struct((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1ad541284:;
			{
				jule::Ptr<_1aa876dd6_StructIns> _13617_s = _1aa9871b1_Struct((*(_self_))._field_src.ptr());;
				if ((!(_1aa8755dd_IsImplements(_13617_s.get()._field_Decl.ptr(), _12517_trt)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if (((!(_12617_ref)) && _1aa93a97d_traitHasReferenceReceiver(&(_12517_trt)))) {
					_1aa93c210_pushErr(_self_, jule::Str("trait has reference receiver parameter used method, cannot assign non-reference instance", 88), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1aa987425_Trait((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1ad5412ea:;
			{
				jule::Ptr<_1aa89b647_Trait> _14621_base = _1aa987425_Trait((*(_self_))._field_src.ptr());;
				if ((_12517_trt == _14621_base)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_julec_label_lookup:;
				{
					auto expr = &(_14621_base.get()._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad5458c6:;
					if (it != expr_end) {
						jule::Ptr<_1aa8740c0_Struct> _15120_s1 = *it;
						{
							{
								auto expr = &(_12517_trt.get()._field_Implemented);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1ad546553:;
								if (it != expr_end) {
									jule::Ptr<_1aa8740c0_Struct> _15224_s2 = *it;
									{
										if ((_15120_s1 == _15224_s2)) {
											goto _iter_next_1ad5458c6;
										};
									}
									_iter_next_1ad546553:;
									++it;
									goto _iter_begin_1ad546553;
								}
								_iter_end_1ad546553:;
							};
							__jule_func_result = false;
							return __jule_func_result;;
						}
						_iter_next_1ad5458c6:;
						++it;
						goto _iter_begin_1ad5458c6;
					}
					_iter_end_1ad5458c6:;
				};
				{
					auto expr = &(_12517_trt.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad546ba2:;
					if (it != expr_end) {
						jule::Ptr<_1aa889426_Fn> _15925_m1 = *it;
						{
							jule::Ptr<_1aa889426_Fn> _16025_m2 = _1aa89c4e4_FindMethod(_14621_base.ptr(), _15925_m1.get()._field_Ident);;
							if ((_16025_m2 == nullptr)) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
							jule::Ptr<_1aa88c0c7_FnIns> _16421_m1k = _1aa8e5031_getTraitCheckFnKind((*(_self_))._field_s, &(_15925_m1));;
							jule::Ptr<_1aa88c0c7_FnIns> _16521_m2k = _1aa8e5031_getTraitCheckFnKind((*(_self_))._field_s, &(_16025_m2));;
							if ((!(_1aa88ce85_equalTrait(_16421_m1k, &(_16521_m2k))))) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
						}
						_iter_next_1ad546ba2:;
						++it;
						goto _iter_begin_1ad546ba2;
					}
					_iter_end_1ad546ba2:;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1ad54121d:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1ad5411a7:;
	};
}



inline jule::Bool _1aa93c6d8_checkPtr(_1aa93bbe3_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1aa98480c_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1aa991132_Ptr> _18017_dest = _1aa986237_Ptr((*(_self_))._field_dest.ptr());;
	if (_1aa991b05_IsUnsafe(_18017_dest.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	__jule_func_result = _1aa98407b_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1aa93c94c_checkPrim(_1aa93bbe3_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((!((*(_self_))._field_dest.get()._field_Variadic))) {
		jule::Ptr<_1aa989339_Prim> _18917_prim = _1aa985c5e_Prim((*(_self_))._field_dest.ptr());;
		if (((_18917_prim != nullptr) && _1aa98c7d2_IsAny(_18917_prim.ptr()))) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	__jule_func_result = _1aa98407b_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1aa93cd04_typeEnum(_1aa93bbe3_typeCompatibilityChecker* _self_, jule::Ptr<_1aa8a04c5_TypeEnum>* _19728_e, jule::Ptr<_1aa983872_TypeKind>* _19747_t2) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*(_19728_e)).get()._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad54c9bb:;
		if (it != expr_end) {
			jule::Ptr<_1aa89ee0e_TypeEnumItem> _19821_item = *it;
			{
				if (_1aa98407b_Equal(_19821_item.get()._field_Kind.get()._field_Kind, (*(_19747_t2)))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				jule::Ptr<_1aa8a04c5_TypeEnum> _20221_ke = _1aa986710_TypeEnum(_19821_item.get()._field_Kind.get()._field_Kind.ptr());;
				if ((_20221_ke == nullptr)) {
					goto _iter_next_1ad54c9bb;
				};
				if (_1aa93cd04_typeEnum(_self_, &(_20221_ke), _19747_t2)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1ad54c9bb:;
			++it;
			goto _iter_begin_1ad54c9bb;
		}
		_iter_end_1ad54c9bb:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1aa93d068_checkTypeEnum(_1aa93bbe3_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1aa98407b_Equal((*(_self_))._field_dest, (*(_self_))._field_src)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1aa8a04c5_TypeEnum> _21717_e = _1aa986710_TypeEnum((*(_self_))._field_dest.ptr());;
	__jule_func_result = _1aa93cd04_typeEnum(_self_, &(_21717_e), &((*(_self_))._field_src));
	return __jule_func_result;;
}



inline jule::Bool _1aa93d2cc_check(_1aa93bbe3_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((_1aa986237_Ptr((*(_self_))._field_dest.ptr()) != nullptr)) {
		__jule_func_result = _1aa93c6d8_checkPtr(_self_);
		return __jule_func_result;;
	};
	if (_1aa9852ad_NilCompatible((*(_self_))._field_dest.ptr())) {
		if (_1aa98480c_IsNil((*(_self_))._field_src.ptr())) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	{
		
		if ((_1aa985c5e_Prim((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1ad5525a3:;
			{
				__jule_func_result = _1aa93c94c_checkPrim(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1aa986710_TypeEnum((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1ad55298d:;
			{
				__jule_func_result = _1aa93d068_checkTypeEnum(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1aa987425_Trait((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1ad552a04:;
			{
				__jule_func_result = _1aa93c474_checkTrait(_self_);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1ad5519ae:;
			{
				__jule_func_result = _1aa98407b_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
				return __jule_func_result;;
			}
		}
		_match_end_1ad5516a1:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1aa93bbe3_typeCompatibilityChecker _Src) {
	_Stream << "typeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline void _1aa93dc7d_pushErr(_1aa93d81b_assignTypeChecker* _self_, jule::Str _25326_fmt, jule::Slice<jule::Any> _25339_args) {
	_1aa8dbbb5_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _25326_fmt, _25339_args);
}



inline jule::Bool _1aa93dee2_checkValidity(_1aa93d81b_assignTypeChecker* _self_) {
	jule::Bool _25817_valid = true;;
	{
		
		if ((_1aa986e4c_Fn((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad5556b6:;
			{
				jule::Ptr<_1aa88c0c7_FnIns> _26117_f = _1aa986e4c_Fn((*(_self_))._field_d.get()._field_Kind.ptr());;
				{
					
					if (_1aa88d45d_IsBuiltin(_26117_f.ptr())) {
						_case_begin_1ad556c39:;
						{
							_1aa93dc7d_pushErr(_self_, jule::Str("builtin define cannot use as anonymous function", 47), jule::Slice<jule::Any>());
							_25817_valid=false;
						}
					}
					else if (_26117_f.get()._field_Decl.get()._field_CppLinked) {
						_case_begin_1ad556cb1:;
						{
							_1aa93dc7d_pushErr(_self_, jule::Str("cpp-linked functions cannot use as anonymous function", 53), jule::Slice<jule::Any>());
							_25817_valid=false;
						}
					}
					else if (((!(_26117_f.get()._field_Decl.get()._field_Statically)) && _1aa889aec_IsMethod(_26117_f.get()._field_Decl.ptr()))) {
						_case_begin_1ad556d38:;
						{
							_1aa93dc7d_pushErr(_self_, jule::Str("non-static methods cannot use as anonymous function", 51), jule::Slice<jule::Any>());
							_25817_valid=false;
						}
					}
					else if (((_26117_f.get()._field_Decl.get()._field_Generics.len() > 0LL) && (_26117_f.get()._field_Generics.len() == 0LL))) {
						_case_begin_1ad556db0:;
						{
							_1aa93dc7d_pushErr(_self_, jule::Str("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
							_1aa8dbed4_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("instantiate generic function to use as anonymous function", 57), jule::Slice<jule::Any>());
							_25817_valid=false;
						}
					}
					_match_end_1ad556b5c:;
				};
			}
		}
		else if ((_1aa9878ed_Tup((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad55573d:;
			{
				_1aa93dc7d_pushErr(_self_, jule::Str("tuples cannot assign to single define in same time", 50), jule::Slice<jule::Any>());
				_25817_valid=false;
			}
		}
		_match_end_1ad55560b:;
	};
	return _25817_valid;;
}



inline jule::Bool _1aa93e256_checkConst(_1aa93d81b_assignTypeChecker* _self_) {
	if (((((!(_1aa958748_IsConst((*(_self_))._field_d.ptr()))) || (_1aa985c5e_Prim((*(_self_))._field_dest.ptr()) == nullptr)) || (_1aa985c5e_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) == nullptr)) || (!(_1c0901698_IsNum(_1aa985c5e_Prim((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
		return false;;
	};
	if ((!__jule_any_type19_compare((*(_self_))._field_d.get()._field_Model, (*(_self_))._field_d.get()._field_Constant))) {
		return false;;
	};
	jule::Str _29813_kind = _1aa985c5e_Prim((*(_self_))._field_dest.ptr()).get()._field_Kind;;
	{
		
		if (_1dc5c1d52_IsFloat(_29813_kind)) {
			_case_begin_1ad55e318:;
			{
				if ((!(_1aa93ac25_floatAssignable(_29813_kind, &((*(_self_))._field_d))))) {
					_1aa93dc7d_pushErr(_self_, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					return false;;
				};
				(*(_self_))._field_d.get()._field_Constant.get()._field_Kind=_29813_kind;
			}
		}
		else if (_1dc5c1a33_IsInt(_29813_kind)) {
			_case_begin_1ad55db97:;
			{
				if ((!(_1aa93b73c_intAssignable(_29813_kind, &((*(_self_))._field_d))))) {
					_1aa93dc7d_pushErr(_self_, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					return false;;
				};
				(*(_self_))._field_d.get()._field_Constant.get()._field_Kind=_29813_kind;
			}
		}
		else {
			_case_begin_1ad55db31:;
			{
				return false;;
			}
		}
		_match_end_1ad55daba:;
	};
	return true;;
}



inline jule::Bool _1aa93e4ba_isPrim(_1aa93d81b_assignTypeChecker* _self_) {
	if (((*(_self_))._field_dest.get()._field_Variadic || (*(_self_))._field_d.get()._field_Kind.get()._field_Variadic)) {
		return false;;
	};
	if ((_1aa984598_CppLinked((*(_self_))._field_dest.ptr()) || _1aa984598_CppLinked((*(_self_))._field_d.get()._field_Kind.ptr()))) {
		return false;;
	};
	return ((_1aa985c5e_Prim((*(_self_))._field_dest.ptr()) != nullptr) && (_1aa985c5e_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr));;
}



inline jule::Bool _1aa93e72e_checkCompatibility(_1aa93d81b_assignTypeChecker* _self_) {
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1ad563361:;
			{
				return false;;
			}
		}
		else if ((!(_1aa93dee2_checkValidity(_self_)))) {
			_case_begin_1ad5633d8:;
			{
				return false;;
			}
		}
		else if (_1aa93e256_checkConst(_self_)) {
			_case_begin_1ad563460:;
			{
				return true;;
			}
		}
		else if ((_1aa98649b_Enum((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad5634d7:;
			{
				jule::Ptr<_1aa983872_TypeKind> _34221_dkind = (*(_self_))._field_dest;;
				if ((_1aa98649b_Enum((*(_self_))._field_dest.ptr()) != nullptr)) {
					_34221_dkind=_1aa98649b_Enum((*(_self_))._field_dest.ptr()).get()._field_Kind.get()._field_Kind;
				} else if ((_1aa985c5e_Prim((*(_self_))._field_dest.ptr()) == nullptr)) {
					goto _match_end_1ad56321d;
				};
				if (_1dc5bd865_TypesAreCompatible(_1aa985c5e_Prim(_1aa98649b_Enum((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()).get()._field_Kind, _1aa985c5e_Prim(_34221_dkind.ptr()).get()._field_Kind)) {
					return true;;
				};
			}
		}
		else if (_1aa93e4ba_isPrim(_self_)) {
			_case_begin_1ad56355e:;
			{
				jule::Ptr<_1aa989339_Prim> _35217_dest = _1aa985c5e_Prim((*(_self_))._field_dest.ptr());;
				if (_1aa98c7d2_IsAny(_35217_dest.ptr())) {
					return true;;
				};
				jule::Ptr<_1aa989339_Prim> _35621_src = _1aa985c5e_Prim((*(_self_))._field_d.get()._field_Kind.ptr());;
				if (_1dc5bd865_TypesAreCompatible(_35217_dest.get()._field_Kind, _35621_src.get()._field_Kind)) {
					return true;;
				};
			}
		}
		_match_end_1ad56321d:;
	};
	return _1aa8e43a4_checkTypeCompatibility((*(_self_))._field_s, &((*(_self_))._field_dest), &((*(_self_))._field_d.get()._field_Kind), &((*(_self_))._field_errorToken));;
}



inline jule::Bool _1aa93e993_check(_1aa93d81b_assignTypeChecker* _self_) {
	jule::Bool _36513_ok = _1aa93e72e_checkCompatibility(_self_);;
	if ((_36513_ok && (!((*(_self_))._field_d.get()._field_Kind.get()._field_Variadic)))) {
		_1aa99d1c7_applyImplicitCast(&((*(_self_))._field_dest), &((*(_self_))._field_d));
	};
	return _36513_ok;;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa93d81b_assignTypeChecker _Src) {
	_Stream << "assignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ad57ad3a_annotateConstraintElem(_1aa940301_dynamicTypeAnnotation* _self_, jule::Ptr<_1aa983872_TypeKind>* _38549_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1ad57c446:;
			{
				jule::Ptr<_1aa983872_TypeKind> _38821_elem = nullptr;;
				{
					
{
						_case_begin_1ad57d25a:;
						{
							_38821_elem=_1aa986974_Arr((*(_38549_k)).ptr()).get()._field_Elem;
						}
					}
					_match_end_1ad57ccc6:;
				};
				(*(_self_))._field_c=(*(_self_))._field_c.get()._field_Kind.cast_ptr<_1aa856536_ArrTypeDecl>(&__jule_any_type75).get()._field_Elem;
				return _1aa941951_annotateConstraint(_self_, &(_38821_elem));;
			}
		}
		_match_end_1ad57c38b:;
	};
	return false;;
}

inline jule::Bool _1ad57a532_annotateConstraintElem(_1aa940301_dynamicTypeAnnotation* _self_, jule::Ptr<_1aa983872_TypeKind>* _38549_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1ad580955:;
			{
				jule::Ptr<_1aa983872_TypeKind> _38821_elem = nullptr;;
				{
					
{
						_case_begin_1ad581802:;
						{
							_38821_elem=_1aa986bd8_Slc((*(_38549_k)).ptr()).get()._field_Elem;
						}
					}
					_match_end_1ad5812d5:;
				};
				(*(_self_))._field_c=(*(_self_))._field_c.get()._field_Kind.cast_ptr<_1aa8557cc_SlcTypeDecl>(&__jule_any_type76).get()._field_Elem;
				return _1aa941951_annotateConstraint(_self_, &(_38821_elem));;
			}
		}
		_match_end_1ad58089a:;
	};
	return false;;
}

inline jule::Bool _1ad57c7a9_annotateConstraintElem(_1aa940301_dynamicTypeAnnotation* _self_, jule::Ptr<_1aa983872_TypeKind>* _38549_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1ad584030:;
			{
				jule::Ptr<_1aa983872_TypeKind> _38821_elem = nullptr;;
				{
					
{
						_case_begin_1ad584e43:;
						{
							_38821_elem=_1aa986237_Ptr((*(_38549_k)).ptr()).get()._field_Elem;
						}
					}
					_match_end_1ad5848b0:;
				};
				(*(_self_))._field_c=(*(_self_))._field_c.get()._field_Kind.cast_ptr<_1aa855da4_PtrTypeDecl>(&__jule_any_type77).get()._field_Elem;
				return _1aa941951_annotateConstraint(_self_, &(_38821_elem));;
			}
		}
		_match_end_1ad583e75:;
	};
	return false;;
}

inline jule::Bool _1ad582c76_annotateConstraintElem(_1aa940301_dynamicTypeAnnotation* _self_, jule::Ptr<_1aa983872_TypeKind>* _38549_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1ad5871a9:;
			{
				jule::Ptr<_1aa983872_TypeKind> _38821_elem = nullptr;;
				{
					
{
						_case_begin_1ad588144:;
						{
							_38821_elem=_1aa985ec3_Sptr((*(_38549_k)).ptr()).get()._field_Elem;
						}
					}
					_match_end_1ad587a39:;
				};
				(*(_self_))._field_c=(*(_self_))._field_c.get()._field_Kind.cast_ptr<_1aa8553d1_SptrTypeDecl>(&__jule_any_type78).get()._field_Elem;
				return _1aa941951_annotateConstraint(_self_, &(_38821_elem));;
			}
		}
		_match_end_1ad5870ee:;
	};
	return false;;
}



inline jule::Bool _1aa940bd6_annotateConstraintMap(_1aa940301_dynamicTypeAnnotation* _self_, jule::Ptr<_1aa983872_TypeKind>* _40545_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1ad56ac92:;
			{
				jule::Ptr<_1aa98ead1_Map> _40821_m = _1aa987689_Map((*(_40545_k)).ptr());;
				jule::Ptr<_1aa856c84_MapTypeDecl> _40921_m2 = (*(_self_))._field_c.get()._field_Kind.cast_ptr<_1aa856c84_MapTypeDecl>(&__jule_any_type79);;
				(*(_self_))._field_c=_40921_m2.get()._field_Key;
				if ((!(_1aa941951_annotateConstraint(_self_, &(_40821_m.get()._field_Key))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				(*(_self_))._field_c=_40921_m2.get()._field_Val;
				__jule_func_result = _1aa941951_annotateConstraint(_self_, &(_40821_m.get()._field_Val));
				return __jule_func_result;;
			}
		}
		_match_end_1ad56ac1a:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1aa940ee4_annotateConstraintTup(_1aa940301_dynamicTypeAnnotation* _self_, jule::Ptr<_1aa983872_TypeKind>* _42045_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1ad56d49d:;
			{
				jule::Ptr<_1aa855ab8_TupleTypeDecl> _42321_tup = (*(_self_))._field_c.get()._field_Kind.cast_ptr<_1aa855ab8_TupleTypeDecl>(&__jule_any_type80);;
				jule::Ptr<_1aa98e0a8_Tuple> _42421_tup2 = _1aa9878ed_Tup((*(_42045_k)).ptr());;
				{
					auto expr = &(_42421_tup2.get()._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad56e845:;
					if (it != expr_end) {
						jule::Ptr<_1aa983872_TypeKind> _42525_t2 = *it;
						{
							{
								auto expr = &(_42321_tup.get()._field_Types);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1ad570109:;
								if (it != expr_end) {
									jule::Ptr<_1aa854028_TypeDecl> _42629_t = *it;
									{
										(*(_self_))._field_c=_42629_t;
										if (_1aa941951_annotateConstraint(_self_, &(_42525_t2))) {
											__jule_func_result = true;
											return __jule_func_result;;
										};
									}
									_iter_next_1ad570109:;
									++it;
									goto _iter_begin_1ad570109;
								}
								_iter_end_1ad570109:;
							};
						}
						_iter_next_1ad56e845:;
						++it;
						goto _iter_begin_1ad56e845;
					}
					_iter_end_1ad56e845:;
				};
			}
		}
		_match_end_1ad56d448:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1aa941302_annotateConstraintFn(_1aa940301_dynamicTypeAnnotation* _self_, jule::Ptr<_1aa983872_TypeKind>* _43744_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1ad56ed1d:;
			{
				jule::Ptr<_1aa8659a7_FnDecl> _44021_pf = (*(_self_))._field_c.get()._field_Kind.cast_ptr<_1aa8659a7_FnDecl>(&__jule_any_type14);;
				jule::Ptr<_1aa88c0c7_FnIns> _44121_f = _1aa986e4c_Fn((*(_43744_k)).ptr());;
				{
					auto expr = &(_44121_f.get()._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad57224e:;
					if (it != expr_end) {
						jule::I64 _44218_i = it - expr->begin();
						jule::Ptr<_1aa88b208_ParamIns> _44225_fp = *it;
						{
							(*(_self_))._field_c=_44021_pf.get()._field_Params[_44218_i].get()._field_Kind;
							if (_1aa941951_annotateConstraint(_self_, &(_44225_fp.get()._field_Kind))) {
								__jule_func_result = true;
								return __jule_func_result;;
							};
						}
						_iter_next_1ad57224e:;
						++it;
						_44218_i++;
						goto _iter_begin_1ad57224e;
					}
					_iter_end_1ad57224e:;
				};
				if ((_44021_pf.get()._field_Result != nullptr)) {
					(*(_self_))._field_c=_44021_pf.get()._field_Result.get()._field_Kind;
					if (_1aa941951_annotateConstraint(_self_, &(_44121_f.get()._field_Result))) {
						__jule_func_result = true;
						return __jule_func_result;;
					};
				};
			}
		}
		_match_end_1ad56d7de:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1aa941632_annotateConstraintIdent(_1aa940301_dynamicTypeAnnotation* _self_, jule::Ptr<_1aa983872_TypeKind>* _45847_k) {
	jule::Ptr<_1aa8545de_IdentTypeDecl> _45917_ident = (*(_self_))._field_c.get()._field_Kind.cast_ptr<_1aa8545de_IdentTypeDecl>(&__jule_any_type20);;
	jule::Ptr<_1aa876dd6_StructIns> _46017_s = _1aa9871b1_Struct((*(_45847_k)).ptr());;
	{
		auto expr = &((*(_self_))._field_f.get()._field_Decl.get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad574bbe:;
		if (it != expr_end) {
			jule::I64 _46113_i = it - expr->begin();
			jule::Ptr<_1aa861321_GenericDecl> _46116_g = *it;
			{
				if ((_46116_g.get()._field_Ident == _45917_ident.get()._field_Ident)) {
					jule::Ptr<_1aa9820e0_InsGeneric> _46325_fg = (*(_self_))._field_f.get()._field_Generics[_46113_i];;
					if ((_46325_fg != nullptr)) {
						return false;;
					};
					_1aa941c70_pushGeneric(_self_, _45847_k, _46113_i);
					return true;;
				};
				if ((_46017_s == nullptr)) {
					goto _iter_next_1ad574bbe;
				};
				jule::Ptr<_1aa854028_TypeDecl> _47321_c = (*(_self_))._field_c;;
				{
					auto expr = &(_45917_ident.get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad576ebd:;
					if (it != expr_end) {
						jule::Ptr<_1aa854028_TypeDecl> _47425_ig = *it;
						{
							(*(_self_))._field_c=_47425_ig;
							{
								auto expr = &(_46017_s.get()._field_Generics);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1ad578530:;
								if (it != expr_end) {
									jule::Ptr<_1aa9820e0_InsGeneric> _47629_sg = *it;
									{
										if (_1aa941951_annotateConstraint(_self_, &(_47629_sg.get()._field_Kind))) {
											return true;;
										};
									}
									_iter_next_1ad578530:;
									++it;
									goto _iter_begin_1ad578530;
								}
								_iter_end_1ad578530:;
							};
						}
						_iter_next_1ad576ebd:;
						++it;
						goto _iter_begin_1ad576ebd;
					}
					_iter_end_1ad576ebd:;
				};
				(*(_self_))._field_c=_47321_c;
			}
			_iter_next_1ad574bbe:;
			++it;
			_46113_i++;
			goto _iter_begin_1ad574bbe;
		}
		_iter_end_1ad574bbe:;
	};
	return false;;
}



inline jule::Bool _1aa941951_annotateConstraint(_1aa940301_dynamicTypeAnnotation* _self_, jule::Ptr<_1aa983872_TypeKind>* _48742_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1ad5788b5:;
			{
				return _1aa941632_annotateConstraintIdent(_self_, _48742_k);;
			}
		}
		_match_end_1ad578123:;
	};
	{
		
		if ((_1aa986974_Arr((*(_48742_k)).ptr()) != nullptr)) {
			_case_begin_1ad575b37:;
			{
				return _1ad57ad3a_annotateConstraintElem(_self_, _48742_k);;
			}
		}
		else if ((_1aa986bd8_Slc((*(_48742_k)).ptr()) != nullptr)) {
			_case_begin_1ad579dc2:;
			{
				return _1ad57a532_annotateConstraintElem(_self_, _48742_k);;
			}
		}
		else if ((_1aa986237_Ptr((*(_48742_k)).ptr()) != nullptr)) {
			_case_begin_1ad579e38:;
			{
				return _1ad57c7a9_annotateConstraintElem(_self_, _48742_k);;
			}
		}
		else if ((_1aa985ec3_Sptr((*(_48742_k)).ptr()) != nullptr)) {
			_case_begin_1ad57a037:;
			{
				return _1ad582c76_annotateConstraintElem(_self_, _48742_k);;
			}
		}
		else if ((_1aa987689_Map((*(_48742_k)).ptr()) != nullptr)) {
			_case_begin_1ad57a09d:;
			{
				return _1aa940bd6_annotateConstraintMap(_self_, _48742_k);;
			}
		}
		else if ((_1aa986e4c_Fn((*(_48742_k)).ptr()) != nullptr)) {
			_case_begin_1ad5794ed:;
			{
				return _1aa941302_annotateConstraintFn(_self_, _48742_k);;
			}
		}
		else if ((_1aa9878ed_Tup((*(_48742_k)).ptr()) != nullptr)) {
			_case_begin_1ad579564:;
			{
				return _1aa940ee4_annotateConstraintTup(_self_, _48742_k);;
			}
		}
		else {
			_case_begin_1ad579d06:;
			{
				return false;;
			}
		}
		_match_end_1ad579ca1:;
	};
}



inline void _1aa941c70_pushGeneric(_1aa940301_dynamicTypeAnnotation* _self_, jule::Ptr<_1aa983872_TypeKind>* _51235_k, jule::I64 _51249_i) {
	(*(_self_))._field_f.get()._field_Generics[_51249_i]=jule::new_ptr<_1aa9820e0_InsGeneric>(_1aa9820e0_InsGeneric{._field_Kind=(*(_51235_k)), });
	jule::Ptr<_1aa861321_GenericDecl> _51417_gd = (*(_self_))._field_f.get()._field_Decl.get()._field_Generics[_51249_i];;
	{
		auto expr = &((*(_self_))._field_ignored);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad58a9e8:;
		if (it != expr_end) {
			jule::Ptr<_1aa983872_TypeKind> _51521_ignored = *it;
			{
				if ((_51417_gd.get()._field_Ident == _1aa983c6d_Str(_51521_ignored.ptr()))) {
					_51521_ignored.get()._field_Kind=(*(_51235_k)).get()._field_Kind;
				};
			}
			_iter_next_1ad58a9e8:;
			++it;
			goto _iter_begin_1ad58a9e8;
		}
		_iter_end_1ad58a9e8:;
	};
	if (((_51417_gd.get()._field_Constraint == nullptr) || (_51417_gd.get()._field_Constraint.get()._field_Mask.len() != 1LL))) {
		return;;
	};
	(*(_self_))._field_c=_51417_gd.get()._field_Constraint.get()._field_Mask[0LL];
	_1aa941951_annotateConstraint(_self_, _51235_k);
}



inline jule::Bool _1aa94207d_annotatePrim(_1aa940301_dynamicTypeAnnotation* _self_, jule::Ptr<_1aa983872_TypeKind>* _52743_k) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1aa943da4_annotateAny(_self_, _52743_k);
	return __jule_func_result;;
}



inline jule::Bool _1aa94238b_annotateArr(_1aa940301_dynamicTypeAnnotation* _self_, jule::Ptr<_1aa983872_TypeKind>* _53142_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1aa9906c5_Arr> _53217_parr = _1aa986974_Arr((*((*(_self_))._field_k)).ptr());;
	if ((_53217_parr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1aa9906c5_Arr> _53617_arr = _1aa986974_Arr((*(_53142_k)).ptr());;
	(*(_self_))._field_k=(&(_53217_parr.get()._field_Elem));
	__jule_func_result = _1aa9441b2_annotateKind(_self_, &(_53617_arr.get()._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1aa942699_annotateSlc(_1aa940301_dynamicTypeAnnotation* _self_, jule::Ptr<_1aa983872_TypeKind>* _54142_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1aa98d52a_Slc> _54217_pslc = _1aa986bd8_Slc((*((*(_self_))._field_k)).ptr());;
	if ((_54217_pslc == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1aa98d52a_Slc> _54617_slc = _1aa986bd8_Slc((*(_54142_k)).ptr());;
	(*(_self_))._field_k=(&(_54217_pslc.get()._field_Elem));
	__jule_func_result = _1aa9441b2_annotateKind(_self_, &(_54617_slc.get()._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1aa942a51_checkMapKey(_1aa940301_dynamicTypeAnnotation* _self_, jule::Ptr<_1aa983872_TypeKind>* _55141_k, jule::Ptr<_1aa983872_TypeKind>* _55161_ck) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1aa983872_TypeKind>* _55217_old = (*(_self_))._field_k;;
	(*(_self_))._field_k=_55141_k;
	__jule_func_result=_1aa9441b2_annotateKind(_self_, _55161_ck);
	(*(_self_))._field_k=_55217_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1aa942d5e_annotateMap(_1aa940301_dynamicTypeAnnotation* _self_, jule::Ptr<_1aa983872_TypeKind>* _55942_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1aa98ead1_Map> _56017_pmap = _1aa987689_Map((*((*(_self_))._field_k)).ptr());;
	if ((_56017_pmap == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1aa98ead1_Map> _56417_m = _1aa987689_Map((*(_55942_k)).ptr());;
	__jule_func_result = (_1aa942a51_checkMapKey(_self_, (&(_56017_pmap.get()._field_Key)), &(_56417_m.get()._field_Key)) && _1aa942a51_checkMapKey(_self_, (&(_56017_pmap.get()._field_Val)), &(_56417_m.get()._field_Val)));
	return __jule_func_result;;
}



inline jule::Bool _1aa94316c_annotateFn(_1aa940301_dynamicTypeAnnotation* _self_, jule::Ptr<_1aa983872_TypeKind>* _56941_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1aa88c0c7_FnIns> _57017_pf = _1aa986e4c_Fn((*((*(_self_))._field_k)).ptr());;
	if ((_57017_pf == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1aa88c0c7_FnIns> _57417_f = _1aa986e4c_Fn((*(_56941_k)).ptr());;
	{
		
		if ((_57017_pf.get()._field_Params.len() != _57417_f.get()._field_Params.len())) {
			_case_begin_1ad596ae2:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_1aa889888_IsVoid(_57017_pf.get()._field_Decl.ptr()) != _1aa889888_IsVoid(_57417_f.get()._field_Decl.ptr()))) {
			_case_begin_1ad596b69:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1ad596a6a:;
	};
	__jule_func_result=true;
	jule::Ptr<_1aa983872_TypeKind>* _58317_old = (*(_self_))._field_k;;
	{
		auto expr = &(_57417_f.get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad5983da:;
		if (it != expr_end) {
			jule::I64 _58414_i = it - expr->begin();
			jule::Ptr<_1aa88b208_ParamIns> _58421_fp = *it;
			{
				(*(_self_))._field_k=(&(_57017_pf.get()._field_Params[_58414_i].get()._field_Kind));
				__jule_func_result=(_1aa9441b2_annotateKind(_self_, &(_58421_fp.get()._field_Kind)) && __jule_func_result);
			}
			_iter_next_1ad5983da:;
			++it;
			_58414_i++;
			goto _iter_begin_1ad5983da;
		}
		_iter_end_1ad5983da:;
	};
	if ((!(_1aa889888_IsVoid(_57017_pf.get()._field_Decl.ptr())))) {
		(*(_self_))._field_k=(&(_57017_pf.get()._field_Result));
		__jule_func_result=(_1aa9441b2_annotateKind(_self_, &(_57417_f.get()._field_Result)) && __jule_func_result);
	};
	(*(_self_))._field_k=_58317_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1aa94347a_annotatePtr(_1aa940301_dynamicTypeAnnotation* _self_, jule::Ptr<_1aa983872_TypeKind>* _59842_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1aa991132_Ptr> _59917_pptr = _1aa986237_Ptr((*((*(_self_))._field_k)).ptr());;
	if ((_59917_pptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1aa991132_Ptr> _60317_ptr = _1aa986237_Ptr((*(_59842_k)).ptr());;
	(*(_self_))._field_k=(&(_59917_pptr.get()._field_Elem));
	__jule_func_result = _1aa9441b2_annotateKind(_self_, &(_60317_ptr.get()._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1aa943788_annotateSptr(_1aa940301_dynamicTypeAnnotation* _self_, jule::Ptr<_1aa983872_TypeKind>* _60843_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1aa98cabd_Sptr> _60917_ssptr = _1aa985ec3_Sptr((*((*(_self_))._field_k)).ptr());;
	if ((_60917_ssptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1aa98cabd_Sptr> _61317_sptr = _1aa985ec3_Sptr((*(_60843_k)).ptr());;
	(*(_self_))._field_k=(&(_60917_ssptr.get()._field_Elem));
	__jule_func_result = _1aa9441b2_annotateKind(_self_, &(_61317_sptr.get()._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1aa943a96_annotateStruct(_1aa940301_dynamicTypeAnnotation* _self_, jule::Ptr<_1aa983872_TypeKind>* _61845_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1aa876dd6_StructIns> _61917_s = _1aa9871b1_Struct((*((*(_self_))._field_k)).ptr());;
	if ((_61917_s == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1aa876dd6_StructIns> _62317_s2 = _1aa9871b1_Struct((*(_61845_k)).ptr());;
	if ((_61917_s.get()._field_Generics.len() != _62317_s2.get()._field_Generics.len())) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &(_61917_s.get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad5a0c83:;
		if (it != expr_end) {
			jule::I64 _62714_i = it - expr->begin();
			jule::Ptr<_1aa9820e0_InsGeneric> _62721_g = *it;
			{
				jule::Ptr<_1aa9820e0_InsGeneric> _62821_g2 = _62317_s2.get()._field_Generics[_62714_i];;
				if (_1aa98407b_Equal(_62721_g.get()._field_Kind, _62821_g2.get()._field_Kind)) {
					goto _iter_next_1ad5a0c83;
				};
				(*(_self_))._field_k=(&(_62721_g.get()._field_Kind));
				if ((!(_1aa9441b2_annotateKind(_self_, &(_62821_g2.get()._field_Kind))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ad5a0c83:;
			++it;
			_62714_i++;
			goto _iter_begin_1ad5a0c83;
		}
		_iter_end_1ad5a0c83:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1aa943da4_annotateAny(_1aa940301_dynamicTypeAnnotation* _self_, jule::Ptr<_1aa983872_TypeKind>* _64042_k) {
	jule::Bool __jule_func_result = false;
	jule::Str _64113_kind = _1aa983c6d_Str((*((*(_self_))._field_k)).ptr());;
	{
		auto expr = &((*(_self_))._field_f.get()._field_Decl.get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad5a3cca:;
		if (it != expr_end) {
			jule::I64 _64213_i = it - expr->begin();
			jule::Ptr<_1aa861321_GenericDecl> _64216_g = *it;
			{
				if ((_64113_kind != _64216_g.get()._field_Ident)) {
					goto _iter_next_1ad5a3cca;
				};
				jule::Ptr<_1aa9820e0_InsGeneric> _64617_t = (*(_self_))._field_f.get()._field_Generics[_64213_i];;
				{
					
					if ((_64617_t == nullptr) || (_64617_t.get()._field_Kind == nullptr)) {
						_case_begin_1ad5a57b0:;
						{
							_1aa941c70_pushGeneric(_self_, _64042_k, _64213_i);
						}
					}
					else if ((!(_1aa98407b_Equal(_64617_t.get()._field_Kind, (*(_64042_k)))))) {
						_case_begin_1ad5a5826:;
						{
							__jule_func_result = false;
							return __jule_func_result;;
						}
					}
					_match_end_1ad5a566c:;
				};
				(*((*(_self_))._field_k)).get()._field_Kind=(*(_64042_k)).get()._field_Kind;
				__jule_func_result = true;
				return __jule_func_result;;
			}
			_iter_next_1ad5a3cca:;
			++it;
			_64213_i++;
			goto _iter_begin_1ad5a3cca;
		}
		_iter_end_1ad5a3cca:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1aa9441b2_annotateKind(_1aa940301_dynamicTypeAnnotation* _self_, jule::Ptr<_1aa983872_TypeKind>* _66143_k) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_k == nullptr) || ((*((*(_self_))._field_k)) == nullptr))) {
		return __jule_func_result;;
	};
	{
		
		if (_1aa943da4_annotateAny(_self_, _66143_k)) {
			_case_begin_1ad5a7cbd:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1aa985c5e_Prim((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_1ad5a7d34:;
			{
				__jule_func_result = _1aa94207d_annotatePrim(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else if ((_1aa986974_Arr((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_1ad5a7d9a:;
			{
				__jule_func_result = _1aa94238b_annotateArr(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else if ((_1aa986bd8_Slc((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_1ad5a7e11:;
			{
				__jule_func_result = _1aa942699_annotateSlc(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else if ((_1aa987689_Map((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_1ad5a8186:;
			{
				__jule_func_result = _1aa942d5e_annotateMap(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else if ((_1aa986e4c_Fn((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_1ad5a81ec:;
			{
				__jule_func_result = _1aa94316c_annotateFn(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else if ((_1aa986237_Ptr((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_1ad5a8263:;
			{
				__jule_func_result = _1aa94347a_annotatePtr(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else if ((_1aa985ec3_Sptr((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_1ad5a82c9:;
			{
				__jule_func_result = _1aa943788_annotateSptr(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else if ((_1aa9871b1_Struct((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_1ad5a852c:;
			{
				__jule_func_result = _1aa943a96_annotateStruct(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1ad5a7c57:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1ad5a7c02:;
	};
}



inline jule::Bool _1aa944426_annotate(_1aa940301_dynamicTypeAnnotation* _self_) {
	jule::Bool __jule_func_result = false;
	(*(_self_))._field_k=(&((*(_self_))._field_p.get()._field_Kind));
	__jule_func_result = _1aa9441b2_annotateKind(_self_, &((*(_self_))._field_a.get()._field_Kind));
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa940301_dynamicTypeAnnotation _Src) {
	_Stream << "dynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "k:" << _Src._field_k << ", ";
	_Stream << "c:" << _Src._field_c << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1aa945218_pushErrToken(_1aa944bb8_fnCallArgChecker* _self_, jule::Ptr<_1db944d0d_Token> _70631_token, jule::Str _70646_fmt, jule::Slice<jule::Any> _70659_args) {
	_1aa8dbbb5_pushErr((*(_self_))._field_e.get()._field_s.ptr(), _70631_token, _70646_fmt, _70659_args);
}



inline void _1aa945537_pushErr(_1aa944bb8_fnCallArgChecker* _self_, jule::Str _71026_fmt, jule::Slice<jule::Any> _71039_args) {
	_1aa945218_pushErrToken(_self_, (*(_self_))._field_errorToken, _71026_fmt, _71039_args);
}



inline jule::Slice<jule::Ptr<_1aa88b208_ParamIns>> _1aa94579b_getParams(_1aa944bb8_fnCallArgChecker* _self_) {
	if (((((*(_self_))._field_f.get()._field_Params.len() > 0LL) && ((*(_self_))._field_f.get()._field_Params[0LL].get()._field_Decl != nullptr)) && _1aa888216_IsSelf((*(_self_))._field_f.get()._field_Params[0LL].get()._field_Decl.ptr()))) {
		return (*(_self_))._field_f.get()._field_Params.slice(1LL);;
	};
	return (*(_self_))._field_f.get()._field_Params;;
}



inline jule::Bool _1aa945aa9_checkCounts(_1aa944bb8_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1aa88b208_ParamIns>>* _72331_params) {
	jule::Bool __jule_func_result = false;
	jule::I64 _72417_n = (*(_72331_params)).len();;
	if (((_72417_n > 0LL) && _1aa888216_IsSelf((*(_72331_params))[0LL].get()._field_Decl.ptr()))) {
		(_72417_n)--;
	};
	jule::I64 _72917_diff = (_72417_n - (*(_self_))._field_args.len());;
	jule::Str _73017_log = jule::Str();;
	{
		
		if ((_72917_diff == 0LL)) {
			_case_begin_1ad5b3db7:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_72417_n > 0LL) && (*(_72331_params))[(_72417_n - 1LL)].get()._field_Decl.get()._field_Variadic)) {
			_case_begin_1ad5b468c:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_72917_diff < 0LL) || (_72917_diff > (*(_72331_params)).len()))) {
			_case_begin_1ad5b42b3:;
			{
				_73017_log=jule::Str("argument overflow: passed more argument than expected to call @", 63);
			}
		}
		else {
			_case_begin_1ad5b424c:;
			{
				_73017_log=jule::Str("missing arguments to call @", 27);
			}
		}
		_match_end_1ad5b41d6:;
	};
	jule::Str _74117_err = (*(_self_))._field_f.get()._field_Decl.get()._field_Ident;;
	(_74117_err).append("\n       wanted (", 16);
	{
		auto expr = _72331_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad5b2404:;
		if (it != expr_end) {
			jule::I64 _74313_i = it - expr->begin();
			jule::Ptr<_1aa88b208_ParamIns> *_74316_p = it;
			{
				_74117_err+=_1aa983c6d_Str((*(_74316_p)).get()._field_Kind.ptr());
				if ((((*(_72331_params)).len() - _74313_i) > 1LL)) {
					(_74117_err).append(", ", 2);
				};
			}
			_iter_next_1ad5b2404:;
			++it;
			_74313_i++;
			goto _iter_begin_1ad5b2404;
		}
		_iter_end_1ad5b2404:;
	};
	(_74117_err).append(")", 1);
	_1aa945537_pushErr(_self_, _73017_log, jule::Slice<jule::Any>::make({jule::Any(_74117_err, &__jule_any_type5)}));
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1aa94600a_checkArg(_1aa944bb8_fnCallArgChecker* _self_, jule::Ptr<_1aa88b208_ParamIns>* _75432_p, jule::Ptr<_1aa957d85_Data>* _75451_arg, jule::Ptr<_1db944d0d_Token>* _75468_errorToken) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_dynamicAnnotation && _1aa88e1d9_parameterUsesGenerics(_75432_p, &((*(_self_))._field_f.get()._field_Decl.get()._field_Generics)))) {
		__jule_func_result=(!((*(_75432_p)).get()._field_Decl.get()._field_Variadic));
		if (__jule_func_result) {
			_1aa940301_dynamicTypeAnnotation _75825_dta = _1aa940301_dynamicTypeAnnotation{._field_e=(*(_self_))._field_e, ._field_f=(*(_self_))._field_f, ._field_p=(*(_75432_p)), ._field_a=(*(_75451_arg)), ._field_errorToken=(*(_75468_errorToken)), ._field_ignored=(*(_self_))._field_ignored};;
			__jule_func_result=_1aa944426_annotate(&_75825_dta);
		};
		if ((!(__jule_func_result))) {
			_1aa945218_pushErrToken(_self_, (*(_75468_errorToken)), jule::Str("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	if (_1aa8e6d68_checkValidityForInitExpr((*(_self_))._field_e.get()._field_s, (*(_75432_p)).get()._field_Decl.get()._field_Mutable, (*(_75432_p)).get()._field_Decl.get()._field_Reference, &((*(_75432_p)).get()._field_Kind), _75451_arg, _75468_errorToken)) {
		_1aa8e3e53_checkAssignType((*(_self_))._field_e.get()._field_s, (*(_75432_p)).get()._field_Decl.get()._field_Reference, &((*(_75432_p)).get()._field_Kind), _75451_arg, (*(_75468_errorToken)));
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1aa9463b2_push(_1aa944bb8_fnCallArgChecker* _self_, jule::Ptr<_1aa88b208_ParamIns>* _78228_p, jule::Ptr<_1aa858549_Expr> _78246_arg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1aa983872_TypeKind> _78317_old = (*(_self_))._field_e.get()._field_prefix;;
	jule::Bool _78413_oldImmut = (*(_self_))._field_e.get()._field_immutable;;
	(*(_self_))._field_e.get()._field_immutable=(!((*(_78228_p)).get()._field_Decl.get()._field_Mutable));
	if (((!((*(_self_))._field_dynamicAnnotation)) && (!((*(_78228_p)).get()._field_Decl.get()._field_Variadic)))) {
		(*(_self_))._field_e.get()._field_prefix=(*(_78228_p)).get()._field_Kind;
	} else {
		(*(_self_))._field_e.get()._field_prefix=nullptr;
	};
	jule::Ptr<_1aa957d85_Data> _79217_d = _1aa974126_evalExprKind((*(_self_))._field_e, _78246_arg.get()._field_Kind);;
	(*(_self_))._field_e.get()._field_prefix=_78317_old;
	(*(_self_))._field_e.get()._field_immutable=_78413_oldImmut;
	if ((_79217_d == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1aa94600a_checkArg(_self_, _78228_p, &(_79217_d), &(_78246_arg.get()._field_Token));
	(*(_self_))._field_argModels = jule::alloc_for_append((*(_self_))._field_argModels,1);(*(_self_))._field_argModels.__push(_79217_d.get()._field_Model);;
	return __jule_func_result;;
}



inline jule::Bool _1aa946769_pushVariadic(_1aa944bb8_fnCallArgChecker* _self_, jule::Ptr<_1aa88b208_ParamIns>* _80636_p, jule::I64 _80654_i) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _80817_variadiced = false;;
	jule::Bool _80913_more = ((_80654_i + 1LL) < (*(_self_))._field_args.len());;
	jule::Ptr<_1aa87d4c5_SliceExprModel> _81017_model = jule::new_ptr<_1aa87d4c5_SliceExprModel>(_1aa87d4c5_SliceExprModel{._field_ElemKind=(*(_80636_p)).get()._field_Kind, });;
	jule::Ptr<_1aa983872_TypeKind> _81417_old = (*(_self_))._field_e.get()._field_prefix;;
	jule::Bool _81913_variadic = (*(_80636_p)).get()._field_Kind.get()._field_Variadic;;
	(*(_80636_p)).get()._field_Kind.get()._field_Variadic=false;
	__JULE_DEFER({
		(*(_80636_p)).get()._field_Kind.get()._field_Variadic=_81913_variadic;
	});;
	for (; (_80654_i < (*(_self_))._field_args.len()); (_80654_i)++) {
		{
			jule::Ptr<_1aa858549_Expr> _82621_arg = (*(_self_))._field_args[_80654_i];;
			{
				auto &_match_expr{ _82621_arg.get()._field_Kind };
				
				if (_match_expr.type == &__jule_any_type81) {
					_case_begin_1ad5c98b1:;
					{
						(*(_self_))._field_e.get()._field_prefix=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(jule::new_ptr<_1aa98d52a_Slc>(_1aa98d52a_Slc{._field_Elem=(*(_80636_p)).get()._field_Kind}), 12)});
					}
				}
				else {
					_case_begin_1ad5ca197:;
					{
						(*(_self_))._field_e.get()._field_prefix=(*(_80636_p)).get()._field_Kind;
					}
				}
				_match_end_1ad5ca142:;
			};
			jule::Ptr<_1aa957d85_Data> _83921_d = _1aa974434_eval((*(_self_))._field_e, _82621_arg);;
			if ((_83921_d == nullptr)) {
				__jule_func_result=false;
				goto _iter_next_1ad5c8d22;
			};
			if (_83921_d.get()._field_Kind.get()._field_Variadic) {
				_80817_variadiced=true;
				(*(_80636_p)).get()._field_Kind.get()._field_Variadic=true;
				__jule_func_result=(__jule_func_result && _1aa94600a_checkArg(_self_, _80636_p, &(_83921_d), &(_82621_arg.get()._field_Token)));
				{
					auto &_match_expr{ _83921_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type82) {
						_case_begin_1ad5cc353:;
						{
							_81017_model=_83921_d.get()._field_Model.cast_ptr<_1aa87d4c5_SliceExprModel>(&__jule_any_type82);
							_81017_model.get()._field_ElemKind=(*(_80636_p)).get()._field_Kind;
						}
					}
					else {
						_case_begin_1ad5cd0ce:;
						{
							_81017_model=nullptr;
							(*(_self_))._field_argModels = jule::alloc_for_append((*(_self_))._field_argModels,1);(*(_self_))._field_argModels.__push(_83921_d.get()._field_Model);;
						}
					}
					_match_end_1ad5cd1bc:;
				};
				(_80654_i)++;
				goto _iter_end_1ad5c8d22;
			};
			__jule_func_result=(__jule_func_result && _1aa94600a_checkArg(_self_, _80636_p, &(_83921_d), &(_82621_arg.get()._field_Token)));
			_81017_model.get()._field_Elems = jule::alloc_for_append(_81017_model.get()._field_Elems,1);_81017_model.get()._field_Elems.__push(_83921_d.get()._field_Model);;
		}
	_iter_next_1ad5c8d22:;
	}
	_iter_end_1ad5c8d22:;;
	(*(_self_))._field_e.get()._field_prefix=_81417_old;
	if ((_80817_variadiced && _80913_more)) {
		_1aa945218_pushErrToken(_self_, (*(_self_))._field_args[_80654_i].get()._field_Token, jule::Str("variadic argument can't use with more argument", 46), jule::Slice<jule::Any>());
	};
	if ((_81017_model != nullptr)) {
		(*(_self_))._field_argModels = jule::alloc_for_append((*(_self_))._field_argModels,1);(*(_self_))._field_argModels.__push(jule::Any(_81017_model, &__jule_any_type82));;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1aa946a77_checkArgs(_1aa944bb8_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1aa88b208_ParamIns>>* _88233_params) {
	jule::Bool __jule_func_result = false;
	jule::Bool _88313_arg = (*(_self_))._field_e.get()._field_arg;;
	(*(_self_))._field_e.get()._field_arg=true;
	__jule_func_result=true;
	jule::I64 _88717_i = 0LL;;
	if ((((*(_88233_params)).len() > 0LL) && _1aa888216_IsSelf((*(_88233_params))[0LL].get()._field_Decl.ptr()))) {
		(_88717_i)++;
	};
	_julec_label_iter:;
	while ((_88717_i < (*(_88233_params)).len())) {
		{
			jule::Ptr<_1aa88b208_ParamIns> _89421_p = (*(_88233_params))[_88717_i];;
			{
				
				if (_89421_p.get()._field_Decl.get()._field_Variadic) {
					_case_begin_1ad5d446a:;
					{
						__jule_func_result=(_1aa946769_pushVariadic(_self_, &(_89421_p), _88717_i) && __jule_func_result);
						goto _iter_end_1ad5d2a1d;
					}
				}
				else if (((*(_self_))._field_args.len() <= _88717_i)) {
					_case_begin_1ad5d3b95:;
					{
						__jule_func_result=false;
						goto _iter_end_1ad5d2a1d;
					}
				}
				else {
					_case_begin_1ad5d40c4:;
					{
						__jule_func_result=(_1aa9463b2_push(_self_, &(_89421_p), (*(_self_))._field_args[_88717_i]) && __jule_func_result);
					}
				}
				_match_end_1ad5d405d:;
			};
			(_88717_i)++;
		}
	_iter_next_1ad5d2a1d:;
	}
	_iter_end_1ad5d2a1d:;;
	(*(_self_))._field_e.get()._field_arg=_88313_arg;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1aa946d0d_checkDynamicTypeAnnotation(_1aa944bb8_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*(_self_))._field_f.get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad5d63e5:;
		if (it != expr_end) {
			jule::Ptr<_1aa9820e0_InsGeneric> _91416_g = *it;
			{
				if ((_91416_g == nullptr)) {
					_1aa945537_pushErr(_self_, jule::Str("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ad5d63e5:;
			++it;
			goto _iter_begin_1ad5d63e5;
		}
		_iter_end_1ad5d63e5:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1aa947083_check(_1aa944bb8_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_1aa88b208_ParamIns>> _92417_params = _1aa94579b_getParams(_self_);;
	__jule_func_result=_1aa945aa9_checkCounts(_self_, &(_92417_params));
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1aa946a77_checkArgs(_self_, &(_92417_params));
	if ((__jule_func_result && (*(_self_))._field_dynamicAnnotation)) {
		__jule_func_result=_1aa946d0d_checkDynamicTypeAnnotation(_self_);
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa944bb8_fnCallArgChecker _Src) {
	_Stream << "fnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamicAnnotation:" << _Src._field_dynamicAnnotation << ", ";
	_Stream << "argModels:" << _Src._field_argModels << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1aa947acd_pushErr(_1aa9475c2_structLitChecker* _self_, jule::Ptr<_1db944d0d_Token> _94526_token, jule::Str _94541_fmt, jule::Slice<jule::Any> _94554_args) {
	_1aa959e0e_pushErr((*(_self_))._field_e.ptr(), _94526_token, _94541_fmt, _94554_args);
}



inline void _1aa947dec_pushSuggestion(_1aa9475c2_structLitChecker* _self_, jule::Str _95033_fmt, jule::Slice<jule::Any> _95046_args) {
	_1aa95a22d_pushSuggestion((*(_self_))._field_e.ptr(), _95033_fmt, _95046_args);
}



inline void _1aa9482b5_pushMatch(_1aa9475c2_structLitChecker* _self_, jule::Ptr<_1aa8763e1_FieldIns>* _95433_f, jule::Ptr<_1aa957d85_Data>* _95452_d, jule::Ptr<_1db944d0d_Token>* _95467_errorToken) {
	;
	if (_1aa8e6d68_checkValidityForInitExpr((*(_self_))._field_e.get()._field_s, (!((*(_self_))._field_e.get()._field_immutable)), false, &((*(_95433_f)).get()._field_Kind), _95452_d, _95467_errorToken)) {
		_1aa8e3e53_checkAssignType((*(_self_))._field_e.get()._field_s, false, &((*(_95433_f)).get()._field_Kind), _95452_d, (*(_95467_errorToken)));
	};
	(*(_self_))._field_args = jule::alloc_for_append((*(_self_))._field_args,1);(*(_self_))._field_args.__push(jule::new_ptr<_1aa87ba56_StructArgExprModel>(_1aa87ba56_StructArgExprModel{._field_Field=(*(_95433_f)), ._field_Expr=(*(_95452_d)).get()._field_Model}));;
}



inline void _1aa9485d4_checkPair(_1aa9475c2_structLitChecker* _self_, jule::Ptr<_1aa85ceaa_FieldExprPair>* _96733_pair, jule::Slice<jule::Ptr<_1aa858549_Expr>>* _96760_exprs) {
	jule::Ptr<_1aa8763e1_FieldIns> _96917_f = _1aa878190_FindField((*(_self_))._field_s.ptr(), (*(_96733_pair)).get()._field_Field.get()._field_Kind);;
	if ((_96917_f == nullptr)) {
		_1aa947acd_pushErr(_self_, (*(_96733_pair)).get()._field_Field, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_96733_pair)).get()._field_Field.get()._field_Kind, &__jule_any_type5)}));
		return;;
	};
	if ((!(_1aa8dc38b_isAccessibleDefine((*(_self_))._field_e.get()._field_s.ptr(), _96917_f.get()._field_Decl.get()._field_Public, _96917_f.get()._field_Decl.get()._field_Token)))) {
		_1aa947acd_pushErr(_self_, (*(_96733_pair)).get()._field_Field, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_96733_pair)).get()._field_Field.get()._field_Kind, &__jule_any_type5)}));
		_1aa947dec_pushSuggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
	};
	_julec_label_dup_lookup:;
	{
		auto expr = _96760_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad5e0ad6:;
		if (it != expr_end) {
			jule::Ptr<_1aa858549_Expr> _98121_expr = *it;
			{
				{
					auto &_match_expr{ _98121_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type83) {
						_case_begin_1ad5e1455:;
						{
							jule::Ptr<_1aa85ceaa_FieldExprPair> _98425_dpair = _98121_expr.get()._field_Kind.cast_ptr<_1aa85ceaa_FieldExprPair>(&__jule_any_type83);;
							{
								
								if (((*(_96733_pair)) == _98425_dpair)) {
									_case_begin_1ad5e2401:;
									{
										goto _iter_end_1ad5e0ad6;
									}
								}
								else if (((*(_96733_pair)).get()._field_Field.get()._field_Kind == _98425_dpair.get()._field_Field.get()._field_Kind)) {
									_case_begin_1ad5e2478:;
									{
										_1aa947acd_pushErr(_self_, (*(_96733_pair)).get()._field_Field, jule::Str("@ already has expression", 24), jule::Slice<jule::Any>::make({jule::Any((*(_96733_pair)).get()._field_Field.get()._field_Kind, &__jule_any_type5)}));
										goto _iter_end_1ad5e0ad6;
									}
								}
								_match_end_1ad5e2346:;
							};
						}
					}
					_match_end_1ad5e129b:;
				};
			}
			_iter_next_1ad5e0ad6:;
			++it;
			goto _iter_begin_1ad5e0ad6;
		}
		_iter_end_1ad5e0ad6:;
	};
	jule::Ptr<_1aa983872_TypeKind> _99517_prefix = (*(_self_))._field_e.get()._field_prefix;;
	__JULE_DEFER({
		(*(_self_))._field_e.get()._field_prefix=_99517_prefix;
	});;
	(*(_self_))._field_e.get()._field_prefix=_96917_f.get()._field_Kind;
	jule::Ptr<_1aa957d85_Data> _99917_d = _1aa974126_evalExprKind((*(_self_))._field_e, (*(_96733_pair)).get()._field_Expr.get()._field_Kind);;
	if ((_99917_d == nullptr)) {
		return;;
	};
	_1aa9482b5_pushMatch(_self_, &(_96917_f), &(_99917_d), &((*(_96733_pair)).get()._field_Field));
}



inline jule::Bool _1aa9488e2_readyExprs(_1aa9475c2_structLitChecker* _self_, jule::Slice<jule::Ptr<_1aa858549_Expr>>* _100634_exprs) {
	jule::Bool _100717_ok = true;;
	{
		auto expr = _100634_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad5e5b85:;
		if (it != expr_end) {
			jule::I64 _100814_i = it - expr->begin();
			jule::Ptr<_1aa858549_Expr> _100821_expr = *it;
			{
				{
					auto &_match_expr{ _100821_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type84) {
						_case_begin_1ad5e68cd:;
						{
							jule::Ptr<_1aa85e451_KeyValPair> _101125_pair = _100821_expr.get()._field_Kind.cast_ptr<_1aa85e451_KeyValPair>(&__jule_any_type84);;
							{
								auto &_match_expr{ _101125_pair.get()._field_Key.get()._field_Kind };
								
								if (_match_expr.type == &__jule_any_type85) {
									_case_begin_1ad5e843a:;
									{
										goto _match_end_1ad5e769d;
									}
								}
								else {
									_case_begin_1ad5e7923:;
									{
										_1aa947acd_pushErr(_self_, _101125_pair.get()._field_Colon, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
										_100717_ok=false;
										goto _iter_next_1ad5e5b85;
									}
								}
								_match_end_1ad5e769d:;
							};
							(*(_100634_exprs))[_100814_i].get()._field_Kind=jule::Any(jule::new_ptr<_1aa85ceaa_FieldExprPair>(_1aa85ceaa_FieldExprPair{._field_Field=_101125_pair.get()._field_Key.get()._field_Token, ._field_Expr=_101125_pair.get()._field_Val}), &__jule_any_type83);
						}
					}
					_match_end_1ad5e6724:;
				};
			}
			_iter_next_1ad5e5b85:;
			++it;
			_100814_i++;
			goto _iter_begin_1ad5e5b85;
		}
		_iter_end_1ad5e5b85:;
	};
	return _100717_ok;;
}



inline void _1aa948b67_check(_1aa9475c2_structLitChecker* _self_, jule::Slice<jule::Ptr<_1aa858549_Expr>>* _103029_exprs) {
	if (((*(_103029_exprs)).len() == 0LL)) {
		return;;
	};
	if ((!(_1aa9488e2_readyExprs(_self_, _103029_exprs)))) {
		return;;
	};
	jule::Bool _103717_paired = false;;
	{
		auto expr = _103029_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad5e6669:;
		if (it != expr_end) {
			jule::I64 _103814_i = it - expr->begin();
			jule::Ptr<_1aa858549_Expr> _103821_expr = *it;
			{
				{
					auto &_match_expr{ _103821_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type83) {
						_case_begin_1ad600101:;
						{
							jule::Ptr<_1aa85ceaa_FieldExprPair> _104125_pair = _103821_expr.get()._field_Kind.cast_ptr<_1aa85ceaa_FieldExprPair>(&__jule_any_type83);;
							if (((_103814_i > 0LL) && (!(_103717_paired)))) {
								_1aa947acd_pushErr(_self_, _104125_pair.get()._field_Field, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							_103717_paired=true;
							_1aa9485d4_checkPair(_self_, &(_104125_pair), _103029_exprs);
						}
					}
					else {
						_case_begin_1ad5ea96a:;
						{
							if (_103717_paired) {
								_1aa947acd_pushErr(_self_, _103821_expr.get()._field_Token, jule::Str("argument must target to field", 29), jule::Slice<jule::Any>());
							};
							if ((_103814_i >= (*(_self_))._field_s.get()._field_Fields.len())) {
								_1aa947acd_pushErr(_self_, _103821_expr.get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>());
								goto _iter_next_1ad5e6669;
							};
							jule::Ptr<_1aa8763e1_FieldIns> _105625_field = (*(_self_))._field_s.get()._field_Fields[_103814_i];;
							if ((!(_1aa8dc38b_isAccessibleDefine((*(_self_))._field_e.get()._field_s.ptr(), _105625_field.get()._field_Decl.get()._field_Public, _105625_field.get()._field_Decl.get()._field_Token)))) {
								_1aa947acd_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("structure cannot instantiating because it has non-public fields", 63), jule::Slice<jule::Any>());
								_1aa947dec_pushSuggestion(_self_, jule::Str("use field:expression pairs to instantiate", 41), jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_1aa983872_TypeKind> _106425_prefix = (*(_self_))._field_e.get()._field_prefix;;
							__JULE_DEFER({
								(*(_self_))._field_e.get()._field_prefix=_106425_prefix;
							});;
							(*(_self_))._field_e.get()._field_prefix=_105625_field.get()._field_Kind;
							jule::Ptr<_1aa957d85_Data> _106825_d = _1aa974126_evalExprKind((*(_self_))._field_e, _103821_expr.get()._field_Kind);;
							if ((_106825_d == nullptr)) {
								goto _iter_next_1ad5e6669;
							};
							_1aa9482b5_pushMatch(_self_, &(_105625_field), &(_106825_d), &(_103821_expr.get()._field_Token));
						}
					}
					_match_end_1ad5ea7e4:;
				};
			}
			_iter_next_1ad5e6669:;
			++it;
			_103814_i++;
			goto _iter_begin_1ad5e6669;
		}
		_iter_end_1ad5e6669:;
	};
	if ((!(_103717_paired))) {
		jule::I64 _107917_n = (*(_self_))._field_s.get()._field_Fields.len();;
		jule::I64 _108021_diff = (_107917_n - (*(_103029_exprs)).len());;
		{
			
			if ((_108021_diff <= 0LL)) {
				_case_begin_1ad602eb1:;
				{
					return;;
				}
			}
			_match_end_1ad602d90:;
		};
		jule::Str _108621_idents = jule::Str();;
		for (; (_108021_diff > 0LL); (_108021_diff)--) {
			{
				_108621_idents+=(jule::Str(", ", 2) + (*(_self_))._field_s.get()._field_Fields[(_107917_n - _108021_diff)].get()._field_Decl.get()._field_Ident);
			}
		_iter_next_1ad6038a7:;
		}
		_iter_end_1ad6038a7:;;
		(_108621_idents).mut_slice(2LL);;
		_1aa947acd_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(_108621_idents, &__jule_any_type5)}));
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1aa9475c2_structLitChecker _Src) {
	_Stream << "structLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aa908c59_Var> _1aa94966d_buildVar(_1aa9491a6_rangeChecker* _self_, jule::Ptr<_1aa866986_VarDecl>* _110528_decl) {
	jule::Ptr<_1aa908c59_Var> _110617_v = _1aa895014_buildVar((*(_110528_decl)));;
	return _110617_v;;
}



inline void _1aa949849_setSizeKey(_1aa9491a6_rangeChecker* _self_) {
	if ((((*(_self_))._field_rang.get()._field_KeyA == nullptr) || _1db9475a2_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyA.get()._field_Ident))) {
		return;;
	};
	(*(_self_))._field_Kind.get()._field_KeyA=_1aa94966d_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyA));
	(*(_self_))._field_Kind.get()._field_KeyA.get()._field_Kind=jule::new_ptr<_1aa9889ba_TypeSymbol>(_1aa9889ba_TypeSymbol{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("int", 3)), 10)})});
	{
		auto &_match_expr{ (*(_self_))._field_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ab535610:;
			{
				(*(_self_))._field_Kind.get()._field_KeyA.get()._field_IterRelation=jule::new_ptr<_1aa907c14_IterRelation>(_1aa907c14_IterRelation{._field_Range=(*(_self_))._field_d.get()._field_Model.cast_ptr<_1aa908c59_Var>(&__jule_any_type8)});
			}
		}
		_match_end_1ab535b71:;
	};
}



inline void _1aa949c12_checkRangeExprValidity(_1aa9491a6_rangeChecker* _self_, jule::Ptr<_1aa957d85_Data>* _113646_d, jule::Ptr<_1aa908c59_Var>* _113657_key, jule::Ptr<_1aa983872_TypeKind>* _113673_k) {
	jule::Bool _113717__mut = (*(_113657_key)).get()._field_Mutable;;
	if ((_113717__mut && (!(_1aa985049_Mutable((*(_113673_k)).ptr()))))) {
		_113717__mut=false;
	};
	_1aa8e6d68_checkValidityForInitExpr((*(_self_))._field_sc.get()._field_s, _113717__mut, (*(_113657_key)).get()._field_Reference, &((*(_113657_key)).get()._field_Kind.get()._field_Kind), _113646_d, &((*(_self_))._field_rang.get()._field_InToken));
}



inline void _1aa949ddd_checkSlice(_1aa9491a6_rangeChecker* _self_) {
	_1aa949849_setSizeKey(_self_);
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _1db9475a2_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1aa98d52a_Slc> _115517_slc = _1aa986bd8_Slc((*(_self_))._field_d.get()._field_Kind.ptr());;
	(*(_self_))._field_Kind.get()._field_KeyB=_1aa94966d_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
	(*(_self_))._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1aa9889ba_TypeSymbol>(_1aa9889ba_TypeSymbol{._field_Kind=_115517_slc.get()._field_Elem});
	_1aa949c12_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(_self_))._field_Kind.get()._field_KeyB), &(_115517_slc.get()._field_Elem));
}



inline void _1aa94a0b9_checkArray(_1aa9491a6_rangeChecker* _self_) {
	_1aa949849_setSizeKey(_self_);
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _1db9475a2_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1aa9906c5_Arr> _116817_arr = _1aa986974_Arr((*(_self_))._field_d.get()._field_Kind.ptr());;
	(*(_self_))._field_Kind.get()._field_KeyB=_1aa94966d_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
	(*(_self_))._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1aa9889ba_TypeSymbol>(_1aa9889ba_TypeSymbol{._field_Kind=_116817_arr.get()._field_Elem});
	_1aa949c12_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(_self_))._field_Kind.get()._field_KeyB), &(_116817_arr.get()._field_Elem));
}



inline void _1aa94a295_checkMapKeyA(_1aa9491a6_rangeChecker* _self_) {
	if ((((*(_self_))._field_rang.get()._field_KeyA == nullptr) || _1db9475a2_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyA.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1aa98ead1_Map> _118017_m = _1aa987689_Map((*(_self_))._field_d.get()._field_Kind.ptr());;
	(*(_self_))._field_Kind.get()._field_KeyA=_1aa94966d_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyA));
	(*(_self_))._field_Kind.get()._field_KeyA.get()._field_Kind=jule::new_ptr<_1aa9889ba_TypeSymbol>(_1aa9889ba_TypeSymbol{._field_Kind=_118017_m.get()._field_Key});
	jule::Ptr<_1aa957d85_Data> _118417_d = jule::new_ptr<_1aa957d85_Data>((*((*(_self_))._field_d)));;
	_118417_d.get()._field_Kind=_118017_m.get()._field_Key;
	_1aa949c12_checkRangeExprValidity(_self_, &(_118417_d), &((*(_self_))._field_Kind.get()._field_KeyA), &(_118017_m.get()._field_Key));
}



inline void _1aa94a471_checkMapKeyB(_1aa9491a6_rangeChecker* _self_) {
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _1db9475a2_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1aa98ead1_Map> _119517_m = _1aa987689_Map((*(_self_))._field_d.get()._field_Kind.ptr());;
	(*(_self_))._field_Kind.get()._field_KeyB=_1aa94966d_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
	(*(_self_))._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1aa9889ba_TypeSymbol>(_1aa9889ba_TypeSymbol{._field_Kind=_119517_m.get()._field_Val});
	jule::Ptr<_1aa957d85_Data> _119917_d = jule::new_ptr<_1aa957d85_Data>((*((*(_self_))._field_d)));;
	_119917_d.get()._field_Kind=_119517_m.get()._field_Val;
	_1aa949c12_checkRangeExprValidity(_self_, &(_119917_d), &((*(_self_))._field_Kind.get()._field_KeyB), &(_119517_m.get()._field_Val));
}



inline void _1aa94a64c_checkMap(_1aa9491a6_rangeChecker* _self_) {
	_1aa94a295_checkMapKeyA(_self_);
	_1aa94a471_checkMapKeyB(_self_);
}



inline void _1aa94a828_checkStr(_1aa9491a6_rangeChecker* _self_) {
	_1aa949849_setSizeKey(_self_);
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _1db9475a2_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	(*(_self_))._field_Kind.get()._field_KeyB=_1aa94966d_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
	(*(_self_))._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1aa9889ba_TypeSymbol>(_1aa9889ba_TypeSymbol{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("u8", 2)), 10)})});
}



inline void _1aa94aac0_checkComptimeStructFields(_1aa9491a6_rangeChecker* _self_, jule::Ptr<_1aa8a4243_comptimeStructFields> _122348_data) {
	_1aa949849_setSizeKey(_self_);
	if ((((*(_self_))._field_rang.get()._field_KeyA != nullptr) && (*(_self_))._field_rang.get()._field_KeyA.get()._field_Mutable)) {
		_1aa8dbbb5_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_rang.get()._field_KeyA.get()._field_Token, jule::Str("define @ cannot be mutable", 26), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_rang.get()._field_KeyA.get()._field_Ident, &__jule_any_type5)}));
	};
	if ((((*(_self_))._field_rang.get()._field_KeyB != nullptr) && (*(_self_))._field_rang.get()._field_KeyB.get()._field_Mutable)) {
		_1aa8dbbb5_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_rang.get()._field_KeyB.get()._field_Token, jule::Str("define @ cannot be mutable", 26), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident, &__jule_any_type5)}));
	};
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _1db9475a2_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	(*(_self_))._field_Kind.get()._field_KeyB=_1aa94966d_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
}



inline jule::Bool _1aa94ad45_checkComptimeRange(_1aa9491a6_rangeChecker* _self_) {
	jule::Ptr<_1aa8a262b_comptimeRange> _123817_range = _1aa98839e_comptimeRange((*(_self_))._field_d.get()._field_Kind.ptr());;
	{
		auto &_match_expr{ _123817_range.get()._field_kind };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1ad44e9de:;
			{
				_1aa94aac0_checkComptimeStructFields(_self_, _123817_range.get()._field_kind.cast_ptr<_1aa8a4243_comptimeStructFields>(0));
				return true;;
			}
		}
		else {
			_case_begin_1ad44e291:;
			{
				_1aa8dbbb5_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_rang.get()._field_InToken, jule::Str("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1ad44e23b:;
	};
}



inline jule::Bool _1aa94b0a9_check(_1aa9491a6_rangeChecker* _self_) {
	{
		
		if ((*(_self_))._field_d.get()._field_Kind.get()._field_Variadic) {
			_case_begin_1ad450c43:;
		}
		else if ((_1aa986bd8_Slc((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad450ca9:;
			{
				_1aa949ddd_checkSlice(_self_);
				return true;;
			}
		}
		else if ((_1aa986974_Arr((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad450d20:;
			{
				_1aa94a0b9_checkArray(_self_);
				return true;;
			}
		}
		else if ((_1aa987689_Map((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad450d86:;
			{
				_1aa94a64c_checkMap(_self_);
				return true;;
			}
		}
		else if ((_1aa98839e_comptimeRange((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad45222d:;
			{
				return _1aa94ad45_checkComptimeRange(_self_);;
			}
		}
		else {
			_case_begin_1ad44e4d3:;
			{
				jule::Ptr<_1aa989339_Prim> _126517_prim = _1aa985c5e_Prim((*(_self_))._field_d.get()._field_Kind.ptr());;
				if (((_126517_prim != nullptr) && _1aa98c56d_IsStr(_126517_prim.ptr()))) {
					_1aa94a828_checkStr(_self_);
					return true;;
				};
			}
		}
		_match_end_1ad4509e0:;
	};
	_1aa8dbbb5_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_rang.get()._field_InToken, jule::Str("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa9491a6_rangeChecker _Src) {
	_Stream << "rangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _1aa94bc25_prepareTypes(_1aa94b780_retTypeChecker* _self_) {
	if (((*(_self_))._field_f != nullptr)) {
		(*(_self_))._field_types=_1aa88d1e9_Types((*(_self_))._field_f.ptr());
	};
}



inline void _1aa94be9a_prepareExprs(_1aa94b780_retTypeChecker* _self_, jule::Ptr<_1aa858549_Expr>* _129336_e) {
	if (((*(_129336_e)) == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*(_129336_e)).get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1ad456c49:;
			{
				(*(_self_))._field_exprs=(*(_129336_e)).get()._field_Kind.cast_ptr<_1aa8591c6_TupleExpr>(&__jule_any_type86).get()._field_Expr;
			}
		}
		else {
			_case_begin_1ad456e47:;
			{
				(*(_self_))._field_exprs = jule::alloc_for_append((*(_self_))._field_exprs,1);(*(_self_))._field_exprs.__push((*(_129336_e)));;
			}
		}
		_match_end_1ad456a7e:;
	};
}



inline void _1aa94c176_checkExprs(_1aa94b780_retTypeChecker* _self_) {
	if (((*(_self_))._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1aa957d85_Data>> _130917_datas = jule::Slice<jule::Ptr<_1aa957d85_Data>>::alloc(0LL, (*(_self_))._field_exprs.len());;
	jule::Ptr<_1aa959903_Eval> _131017_eval = _1aa8e3958_eval((*(_self_))._field_sc.get()._field_s, jule::Trait<_1aa9a0509_Lookup>((*(_self_))._field_sc, 0));;
	{
		auto expr = &((*(_self_))._field_exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad4572dd:;
		if (it != expr_end) {
			jule::I64 _131114_i = it - expr->begin();
			jule::Ptr<_1aa858549_Expr> _131121_expr = *it;
			{
				if ((_131114_i >= (*(_self_))._field_types.len())) {
					goto _iter_end_1ad4572dd;
				};
				jule::Ptr<_1aa983872_TypeKind> _131621_t = (*(_self_))._field_types[_131114_i];;
				_131017_eval.get()._field_prefix=_131621_t;
				jule::Ptr<_1aa957d85_Data> _131921_d = _1aa974742_evalExpr(_131017_eval, _131121_expr);;
				if ((_131921_d == nullptr)) {
					goto _iter_next_1ad4572dd;
				};
				_130917_datas = jule::alloc_for_append(_130917_datas,1);_130917_datas.__push(_131921_d);;
				if (((!(_131921_d.get()._field_Mutable)) && _1aa985049_Mutable(_131921_d.get()._field_Kind.ptr()))) {
					_1aa8dbbb5_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("mutable typed return expressions should be mutable", 50), jule::Slice<jule::Any>());
					return;;
				};
				_1aa93d81b_assignTypeChecker _133121_ac = _1aa93d81b_assignTypeChecker{._field_s=(*(_self_))._field_sc.get()._field_s, ._field_dest=_131621_t, ._field_d=_131921_d, ._field_errorToken=(*(_self_))._field_errorToken};;
				_1aa93e993_check(&_133121_ac);
			}
			_iter_next_1ad4572dd:;
			++it;
			_131114_i++;
			goto _iter_begin_1ad4572dd;
		}
		_iter_end_1ad4572dd:;
	};
	if ((_130917_datas.len() > 1LL)) {
		(*(_self_))._field_model=jule::Any(jule::new_ptr<_1aa881d47_TupleExprModel>(_1aa881d47_TupleExprModel{._field_Datas=_130917_datas}), &__jule_any_type87);
	} else if ((_130917_datas.len() == 1LL)) {
		(*(_self_))._field_model=_130917_datas[0LL].get()._field_Model;
	};
}



inline jule::Bool _1aa94c484_check(_1aa94b780_retTypeChecker* _self_, jule::Ptr<_1aa858549_Expr>* _135029_e) {
	_1aa94bc25_prepareTypes(_self_);
	_1aa94be9a_prepareExprs(_self_, _135029_e);
	jule::I64 _135413_n = (*(_self_))._field_exprs.len();;
	if (((_135413_n == 0LL) && ((*(_self_))._field_types.len() > 0LL))) {
		if ((!(_1aa88a59d_AnyVar((*(_self_))._field_f.get()._field_Decl.ptr())))) {
			_1aa8dbbb5_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("return statements of non-void functions should have return expression", 69), jule::Slice<jule::Any>());
			return false;;
		};
		return true;;
	};
	if ((((_135413_n > 0LL) && ((*(_self_))._field_f != nullptr)) && _1aa889888_IsVoid((*(_self_))._field_f.get()._field_Decl.ptr()))) {
		_1aa8dbbb5_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("void functions is cannot returns any value", 42), jule::Slice<jule::Any>());
		return false;;
	};
	if ((_135413_n > (*(_self_))._field_types.len())) {
		_1aa8dbbb5_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("overflow return expressions", 27), jule::Slice<jule::Any>());
	} else if ((_135413_n < (*(_self_))._field_types.len())) {
		_1aa8dbbb5_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("missing return expressions for multi-return", 43), jule::Slice<jule::Any>());
	};
	_1aa94c176_checkExprs(_self_);
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa94b780_retTypeChecker _Src) {
	_Stream << "retTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aa8d101c_ImportInfo> _1aa94da29_SelectPackage(_1aa94d51d_SymbolTable* _self_, jule::Fn<jule::Bool(jule::Ptr<_1aa8d101c_ImportInfo>)> _2732_selector) {
	if ((_2732_selector == nullptr)) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad731a90:;
		if (it != expr_end) {
			jule::Ptr<_1aa8d101c_ImportInfo> _3121_pkg = *it;
			{
				if (_2732_selector(_3121_pkg)) {
					return _3121_pkg;;
				};
			}
			_iter_next_1ad731a90:;
			++it;
			goto _iter_begin_1ad731a90;
		}
		_iter_end_1ad731a90:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aa908c59_Var> _1aa94ddd1_FindVar(_1aa94d51d_SymbolTable* _self_, jule::Str _4126_ident, jule::Bool _4138_cppLinked) {
	return _1aa950993_findVar(_self_, _4126_ident, _4138_cppLinked, false);;
}



inline jule::Ptr<_1aa982b29_TypeAlias> _1aa94e288_FindTypeAlias(_1aa94d51d_SymbolTable* _self_, jule::Str _4732_ident, jule::Bool _4744_cppLinked) {
	return _1aa950de4_findTypeAlias(_self_, _4732_ident, _4744_cppLinked, false);;
}



inline jule::Ptr<_1aa8740c0_Struct> _1aa94e640_FindStruct(_1aa94d51d_SymbolTable* _self_, jule::Str _5329_ident, jule::Bool _5341_cppLinked) {
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad733e05:;
		if (it != expr_end) {
			jule::Ptr<_1aa8740c0_Struct> _5421_s = *it;
			{
				if (((_5421_s.get()._field_Ident == _5329_ident) && (_5421_s.get()._field_CppLinked == _5341_cppLinked))) {
					return _5421_s;;
				};
			}
			_iter_next_1ad733e05:;
			++it;
			goto _iter_begin_1ad733e05;
		}
		_iter_end_1ad733e05:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aa889426_Fn> _1aa94e9e7_FindFn(_1aa94d51d_SymbolTable* _self_, jule::Str _6425_ident, jule::Bool _6437_cppLinked) {
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad735302:;
		if (it != expr_end) {
			jule::Ptr<_1aa889426_Fn> _6521_f = *it;
			{
				if (((_6521_f.get()._field_Ident == _6425_ident) && (_6521_f.get()._field_CppLinked == _6437_cppLinked))) {
					return _6521_f;;
				};
			}
			_iter_next_1ad735302:;
			++it;
			goto _iter_begin_1ad735302;
		}
		_iter_end_1ad735302:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aa89b647_Trait> _1aa94ed05_FindTrait(_1aa94d51d_SymbolTable* _self_, jule::Str _7528_ident) {
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad7364bd:;
		if (it != expr_end) {
			jule::Ptr<_1aa89b647_Trait> _7621_t = *it;
			{
				if ((_7621_t.get()._field_Ident == _7528_ident)) {
					return _7621_t;;
				};
			}
			_iter_next_1ad7364bd:;
			++it;
			goto _iter_begin_1ad7364bd;
		}
		_iter_end_1ad7364bd:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aa89ddca_Enum> _1aa950113_FindEnum(_1aa94d51d_SymbolTable* _self_, jule::Str _8627_ident) {
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad73739d:;
		if (it != expr_end) {
			jule::Ptr<_1aa89ddca_Enum> _8721_e = *it;
			{
				if ((_8721_e.get()._field_Ident == _8627_ident)) {
					return _8721_e;;
				};
			}
			_iter_next_1ad73739d:;
			++it;
			goto _iter_begin_1ad73739d;
		}
		_iter_end_1ad73739d:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aa8a04c5_TypeEnum> _1aa950421_FindTypeEnum(_1aa94d51d_SymbolTable* _self_, jule::Str _9731_ident) {
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad73827d:;
		if (it != expr_end) {
			jule::Ptr<_1aa8a04c5_TypeEnum> _9821_e = *it;
			{
				if ((_9821_e.get()._field_Ident == _9731_ident)) {
					return _9821_e;;
				};
			}
			_iter_next_1ad73827d:;
			++it;
			goto _iter_begin_1ad73827d;
		}
		_iter_end_1ad73827d:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aa908c59_Var> _1aa950993_findVar(_1aa94d51d_SymbolTable* _self_, jule::Str _10826_ident, jule::Bool _10838_cppLinked, jule::Bool _10855_reverse) {
	if (_10855_reverse) {
		jule::I64 _11021_i = ((*(_self_))._field_Vars.len() - 1LL);;
		for (; (_11021_i >= 0LL); (_11021_i)--) {
			{
				jule::Ptr<_1aa908c59_Var> _11225_v = (*(_self_))._field_Vars[_11021_i];;
				if (((_11225_v.get()._field_Ident == _10826_ident) && (_11225_v.get()._field_CppLinked == _10838_cppLinked))) {
					return _11225_v;;
				};
			}
		_iter_next_1ad73a24c:;
		}
		_iter_end_1ad73a24c:;;
	} else {
		{
			auto expr = &((*(_self_))._field_Vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad739cb8:;
			if (it != expr_end) {
				jule::Ptr<_1aa908c59_Var> _11825_v = *it;
				{
					if (((_11825_v.get()._field_Ident == _10826_ident) && (_11825_v.get()._field_CppLinked == _10838_cppLinked))) {
						return _11825_v;;
					};
				}
				_iter_next_1ad739cb8:;
				++it;
				goto _iter_begin_1ad739cb8;
			}
			_iter_end_1ad739cb8:;
		};
	};
	return nullptr;;
}



inline jule::Ptr<_1aa982b29_TypeAlias> _1aa950de4_findTypeAlias(_1aa94d51d_SymbolTable* _self_, jule::Str _12732_ident, jule::Bool _12744_cppLinked, jule::Bool _12761_reverse) {
	if (_12761_reverse) {
		jule::I64 _12921_i = ((*(_self_))._field_TypeAliases.len() - 1LL);;
		for (; (_12921_i >= 0LL); (_12921_i)--) {
			{
				jule::Ptr<_1aa982b29_TypeAlias> _13125_ta = (*(_self_))._field_TypeAliases[_12921_i];;
				if (((_13125_ta.get()._field_Ident == _12732_ident) && (_13125_ta.get()._field_CppLinked == _12744_cppLinked))) {
					return _13125_ta;;
				};
			}
		_iter_next_1ad73d371:;
		}
		_iter_end_1ad73d371:;;
	} else {
		{
			auto expr = &((*(_self_))._field_TypeAliases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad73cddc:;
			if (it != expr_end) {
				jule::Ptr<_1aa982b29_TypeAlias> _13725_ta = *it;
				{
					if (((_13725_ta.get()._field_Ident == _12732_ident) && (_13725_ta.get()._field_CppLinked == _12744_cppLinked))) {
						return _13725_ta;;
					};
				}
				_iter_next_1ad73cddc:;
				++it;
				goto _iter_begin_1ad73cddc;
			}
			_iter_end_1ad73cddc:;
		};
	};
	return nullptr;;
}



inline jule::Any _1aa95129b_defByIdent(_1aa94d51d_SymbolTable* _self_, jule::Str _14829_ident, jule::Bool _14841_cppLinked) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad74062b:;
		if (it != expr_end) {
			jule::Ptr<_1aa908c59_Var> _14921_v = *it;
			{
				if (((_14921_v.get()._field_Ident == _14829_ident) && (_14921_v.get()._field_CppLinked == _14841_cppLinked))) {
					return jule::Any(_14921_v, &__jule_any_type8);;
				};
			}
			_iter_next_1ad74062b:;
			++it;
			goto _iter_begin_1ad74062b;
		}
		_iter_end_1ad74062b:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad73eb8b:;
		if (it != expr_end) {
			jule::Ptr<_1aa982b29_TypeAlias> _15521_ta = *it;
			{
				if (((_15521_ta.get()._field_Ident == _14829_ident) && (_15521_ta.get()._field_CppLinked == _14841_cppLinked))) {
					return jule::Any(_15521_ta, &__jule_any_type67);;
				};
			}
			_iter_next_1ad73eb8b:;
			++it;
			goto _iter_begin_1ad73eb8b;
		}
		_iter_end_1ad73eb8b:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad741583:;
		if (it != expr_end) {
			jule::Ptr<_1aa8740c0_Struct> _16121_s = *it;
			{
				if (((_16121_s.get()._field_Ident == _14829_ident) && (_16121_s.get()._field_CppLinked == _14841_cppLinked))) {
					return jule::Any(_16121_s, &__jule_any_type66);;
				};
			}
			_iter_next_1ad741583:;
			++it;
			goto _iter_begin_1ad741583;
		}
		_iter_end_1ad741583:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad742bb1:;
		if (it != expr_end) {
			jule::Ptr<_1aa889426_Fn> _16721_f = *it;
			{
				if (((_16721_f.get()._field_Ident == _14829_ident) && (_16721_f.get()._field_CppLinked == _14841_cppLinked))) {
					return jule::Any(_16721_f, &__jule_any_type65);;
				};
			}
			_iter_next_1ad742bb1:;
			++it;
			goto _iter_begin_1ad742bb1;
		}
		_iter_end_1ad742bb1:;
	};
	if (_14841_cppLinked) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad744124:;
		if (it != expr_end) {
			jule::Ptr<_1aa89b647_Trait> _17721_t = *it;
			{
				if ((_17721_t.get()._field_Ident == _14829_ident)) {
					return jule::Any(_17721_t, &__jule_any_type10);;
				};
			}
			_iter_next_1ad744124:;
			++it;
			goto _iter_begin_1ad744124;
		}
		_iter_end_1ad744124:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad744c29:;
		if (it != expr_end) {
			jule::Ptr<_1aa89ddca_Enum> _18321_e = *it;
			{
				if ((_18321_e.get()._field_Ident == _14829_ident)) {
					return jule::Any(_18321_e, &__jule_any_type68);;
				};
			}
			_iter_next_1ad744c29:;
			++it;
			goto _iter_begin_1ad744c29;
		}
		_iter_end_1ad744c29:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad742562:;
		if (it != expr_end) {
			jule::Ptr<_1aa8a04c5_TypeEnum> _18921_te = *it;
			{
				if ((_18921_te.get()._field_Ident == _14829_ident)) {
					return jule::Any(_18921_te, &__jule_any_type69);;
				};
			}
			_iter_next_1ad742562:;
			++it;
			goto _iter_begin_1ad742562;
		}
		_iter_end_1ad742562:;
	};
	return nullptr;;
}



inline jule::Bool _1aa9516ec_isDuplicatedIdent(_1aa94d51d_SymbolTable* _self_, jule::Uintptr _20132_itself, jule::Str _20149_ident, jule::Bool _20161_cppLinked) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad7464cd:;
		if (it != expr_end) {
			jule::Ptr<_1aa908c59_Var> *_20216_v = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_20216_v))) != _20132_itself) && ((*(_20216_v)).get()._field_Ident == _20149_ident)) && ((*(_20216_v)).get()._field_CppLinked == _20161_cppLinked))) {
					return true;;
				};
			}
			_iter_next_1ad7464cd:;
			++it;
			goto _iter_begin_1ad7464cd;
		}
		_iter_end_1ad7464cd:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad746489:;
		if (it != expr_end) {
			jule::Ptr<_1aa982b29_TypeAlias> *_20816_ta = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_20816_ta))) != _20132_itself) && ((*(_20816_ta)).get()._field_Ident == _20149_ident)) && ((*(_20816_ta)).get()._field_CppLinked == _20161_cppLinked))) {
					return true;;
				};
			}
			_iter_next_1ad746489:;
			++it;
			goto _iter_begin_1ad746489;
		}
		_iter_end_1ad746489:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad74749b:;
		if (it != expr_end) {
			jule::Ptr<_1aa8740c0_Struct> *_21416_s = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21416_s))) != _20132_itself) && ((*(_21416_s)).get()._field_Ident == _20149_ident)) && ((*(_21416_s)).get()._field_CppLinked == _20161_cppLinked))) {
					return true;;
				};
			}
			_iter_next_1ad74749b:;
			++it;
			goto _iter_begin_1ad74749b;
		}
		_iter_end_1ad74749b:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad748aeb:;
		if (it != expr_end) {
			jule::Ptr<_1aa889426_Fn> *_22016_f = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22016_f))) != _20132_itself) && ((*(_22016_f)).get()._field_Ident == _20149_ident)) && ((*(_22016_f)).get()._field_CppLinked == _20161_cppLinked))) {
					return true;;
				};
			}
			_iter_next_1ad748aeb:;
			++it;
			goto _iter_begin_1ad748aeb;
		}
		_iter_end_1ad748aeb:;
	};
	if (_20161_cppLinked) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad74b060:;
		if (it != expr_end) {
			jule::Ptr<_1aa89b647_Trait> *_23016_t = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23016_t))) != _20132_itself) && ((*(_23016_t)).get()._field_Ident == _20149_ident))) {
					return true;;
				};
			}
			_iter_next_1ad74b060:;
			++it;
			goto _iter_begin_1ad74b060;
		}
		_iter_end_1ad74b060:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad74b637:;
		if (it != expr_end) {
			jule::Ptr<_1aa89ddca_Enum> *_23616_e = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23616_e))) != _20132_itself) && ((*(_23616_e)).get()._field_Ident == _20149_ident))) {
					return true;;
				};
			}
			_iter_next_1ad74b637:;
			++it;
			goto _iter_begin_1ad74b637;
		}
		_iter_end_1ad74b637:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad74c836:;
		if (it != expr_end) {
			jule::Ptr<_1aa8a04c5_TypeEnum> *_24216_te = it;
			{
				if (((static_cast<jule::Uintptr>((*(_24216_te))) != _20132_itself) && ((*(_24216_te)).get()._field_Ident == _20149_ident))) {
					return true;;
				};
			}
			_iter_next_1ad74c836:;
			++it;
			goto _iter_begin_1ad74c836;
		}
		_iter_end_1ad74c836:;
	};
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa94d51d_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Imports:" << _Src._field_Imports << ", ";
	_Stream << "Vars:" << _Src._field_Vars << ", ";
	_Stream << "TypeAliases:" << _Src._field_TypeAliases << ", ";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Funcs:" << _Src._field_Funcs << ", ";
	_Stream << "Traits:" << _Src._field_Traits << ", ";
	_Stream << "Enums:" << _Src._field_Enums << ", ";
	_Stream << "TypeEnums:" << _Src._field_TypeEnums << ", ";
	_Stream << "Impls:" << _Src._field_Impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aa958270_IsNil(_1aa957d85_Data* _self_) {
	return _1aa98480c_IsNil((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1aa9584d4_IsVoid(_1aa957d85_Data* _self_) {
	return _1aa984a71_Void((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1aa958748_IsConst(_1aa957d85_Data* _self_) {
	return ((*(_self_))._field_Constant != nullptr);;
}



inline jule::Bool _1aa958a56_GoodOperand(_1aa957d85_Data* _self_, jule::Ptr<_1aa957d85_Data>* _10031_other) {
	if ((_1aa986710_TypeEnum((*(_10031_other)).get()._field_Kind.ptr()) != nullptr)) {
		return false;;
	};
	return ((((_1aa985c5e_Prim((*(_10031_other)).get()._field_Kind.ptr()) == nullptr) || (!(_1aa98c7d2_IsAny(_1aa985c5e_Prim((*(_10031_other)).get()._field_Kind.ptr()).ptr())))) && (_1aa987425_Trait((*(_10031_other)).get()._field_Kind.ptr()) == nullptr)) && (!(_1aa98480c_IsNil((*(_self_))._field_Kind.ptr()))));;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa957d85_Data _Src) {
	_Stream << "Data{";
	_Stream << "untyped:" << _Src._field_untyped << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Lvalue:" << _Src._field_Lvalue << ", ";
	_Stream << "IsRune:" << _Src._field_IsRune << ", ";
	_Stream << "Model:" << _Src._field_Model << ", ";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Constant:" << _Src._field_Constant;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa958e0d_Value _Src) {
	_Stream << "Value{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}



inline void _1aa959e0e_pushErr(_1aa959903_Eval* _self_, jule::Ptr<_1db944d0d_Token> _13126_token, jule::Str _13141_fmt, jule::Slice<jule::Any> _13154_args) {
	_1aa8dbbb5_pushErr((*(_self_))._field_s.ptr(), _13126_token, _13141_fmt, _13154_args);
}



inline void _1aa95a22d_pushSuggestion(_1aa959903_Eval* _self_, jule::Str _13633_fmt, jule::Slice<jule::Any> _13646_args) {
	_1aa8dbed4_pushSuggestion((*(_self_))._field_s.ptr(), _13633_fmt, _13646_args);
}



inline void _1aa95a409_allowBuiltin(_1aa959903_Eval* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1aa95a5d5_disallowBuiltin(_1aa959903_Eval* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline jule::Bool _1aa95a849_isUnsafe(_1aa959903_Eval* _self_) {
	return (*(_self_))._field_unsafety;;
}



inline jule::Bool _1aa95aaad_isGlobal(_1aa959903_Eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1ad780418:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ad77e824:;
			{
				return false;;
			}
		}
		_match_end_1ad77ed96:;
	};
}



inline jule::Bool _1aa95ad88_applyNumericPrefix(_1aa959903_Eval* _self_, jule::Ptr<_1aa957d85_Data>* _16342_d) {
	if ((((((*(_16342_d)) == nullptr) || (!(_1aa958748_IsConst((*(_16342_d)).ptr())))) || (_1aa985c5e_Prim((*(_16342_d)).get()._field_Kind.ptr()) == nullptr)) || ((*(_self_))._field_prefix == nullptr))) {
		return false;;
	};
	jule::Ptr<_1aa989339_Prim> _17013_prim = _1aa985c5e_Prim((*(_self_))._field_prefix.ptr());;
	if ((_17013_prim == nullptr)) {
		return false;;
	};
	{
		
		if (_1dc5c1d52_IsFloat(_1aa98969c_Str(_17013_prim.ptr()))) {
			_case_begin_1ad782629:;
			{
				(*(_16342_d)).get()._field_Kind=jule::new_ptr<_1aa983872_TypeKind>((*((*(_self_))._field_prefix)));
				_1c090536c_SetF64((*(_16342_d)).get()._field_Constant.ptr(), static_cast<jule::F64>(_1c0904602_AsF64((*(_16342_d)).get()._field_Constant.ptr())));
				(*(_16342_d)).get()._field_Constant.get()._field_Kind=_17013_prim.get()._field_Kind;
			}
		}
		else if (_1dc5c14a0_IsSigInt(_1aa98969c_Str(_17013_prim.ptr()))) {
			_case_begin_1ad782690:;
			{
				if ((!(_1aa93b066_sigAssignable(_1aa98969c_Str(_17013_prim.ptr()), _16342_d)))) {
					return false;;
				};
				(*(_16342_d)).get()._field_Kind=jule::new_ptr<_1aa983872_TypeKind>((*((*(_self_))._field_prefix)));
				_1c0904877_SetI64((*(_16342_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_1c0904129_AsI64((*(_16342_d)).get()._field_Constant.ptr())));
				(*(_16342_d)).get()._field_Constant.get()._field_Kind=_17013_prim.get()._field_Kind;
			}
		}
		else if (_1dc5c178b_IsUnsigInt(_1aa98969c_Str(_17013_prim.ptr()))) {
			_case_begin_1ad782706:;
			{
				if ((!(_1aa93b3eb_unsigAssignable(_1aa98969c_Str(_17013_prim.ptr()), _16342_d)))) {
					return false;;
				};
				(*(_16342_d)).get()._field_Kind=jule::new_ptr<_1aa983872_TypeKind>((*((*(_self_))._field_prefix)));
				_1c0904aec_SetU64((*(_16342_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_1c090438d_AsU64((*(_16342_d)).get()._field_Constant.ptr())));
				(*(_16342_d)).get()._field_Constant.get()._field_Kind=_17013_prim.get()._field_Kind;
			}
		}
		_match_end_1ad782409:;
	};
	return true;;
}



inline jule::Ptr<_1aa957d85_Data> _1aa95b0ec_litNil(_1aa959903_Eval* _self_) {
	jule::Ptr<_1c0901b1b_Const> _20217_constant = static__1c0902d1a_NewNil();;
	return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=nullptr}), ._field_Mutable=true, ._field_Model=jule::Any(_20217_constant, &__jule_any_type19), ._field_Constant=_20217_constant});;
}



inline jule::Ptr<_1aa957d85_Data> _1aa95b40a_litStr(_1aa959903_Eval* _self_, jule::Ptr<_1aa85957d_LitExpr>* _21122_l) {
	jule::Str _21217_s = (*(_21122_l)).get()._field_Value.slice(1LL, ((*(_21122_l)).get()._field_Value.len() - 1LL));;
	if (_1db946161_IsRawStr((*(_21122_l)).get()._field_Value)) {
		_21217_s=_1aa939619_ToRawStr(static_cast<jule::Slice<jule::U8>>(_21217_s));
	} else {
		_21217_s=_1aa939938_ToStr(static_cast<jule::Slice<jule::U8>>(_21217_s));
	};
	jule::Ptr<_1c0901b1b_Const> _21817_constant = static__1c0902875_NewStr(_21217_s);;
	return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("str", 3)), 10)}), ._field_Mutable=true, ._field_Model=jule::Any(_21817_constant, &__jule_any_type19), ._field_Constant=_21817_constant});;
}



inline jule::Ptr<_1aa957d85_Data> _1aa95b718_litBool(_1aa959903_Eval* _self_, jule::Ptr<_1aa85957d_LitExpr>* _23023_l) {
	jule::Ptr<_1c0901b1b_Const> _23117_constant = static__1c09025cd_NewBool((*(_23023_l)).get()._field_Value.equal("true", 4));;
	return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("bool", 4)), 10)}), ._field_Mutable=true, ._field_Model=jule::Any(_23117_constant, &__jule_any_type19), ._field_Constant=_23117_constant});;
}



inline jule::Ptr<_1aa957d85_Data> _1aa95ba26_litRune(_1aa959903_Eval* _self_, jule::Ptr<_1aa85957d_LitExpr>* _24223_l) {
	;
	;
	jule::Str _24713_lt = (*(_24223_l)).get()._field_Value.slice(1LL, ((*(_24223_l)).get()._field_Value.len() - 1LL));;
	jule::I32 _24813_r = _1aa922613_ToRune(static_cast<jule::Slice<jule::U8>>(_24713_lt));;
	jule::Ptr<_1aa957d85_Data> _24917_data = jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Constant=static__1c090208e_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_24813_r)))});;
	jule::Bool _25313_isAscii = _1aa9224d1_IsAscii(_24813_r);;
	if (_25313_isAscii) {
		_24917_data.get()._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("u8", 2)), 10)});
	} else {
		_24917_data.get()._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("i32", 3)), 10)});
	};
	_24917_data.get()._field_Mutable=true;
	_24917_data.get()._field_Model=jule::Any(jule::new_ptr<_1aa885e5b_RuneExprModel>(_1aa885e5b_RuneExprModel{._field_Code=_24813_r}), &__jule_any_type88);
	_24917_data.get()._field_IsRune=true;
	_24917_data.get()._field_untyped=true;
	return _24917_data;;
}



inline jule::Ptr<_1aa957d85_Data> _1aa95bd34_litFloat(_1aa959903_Eval* _self_, jule::Ptr<_1aa85957d_LitExpr>* _27124_l) {
	;
	jule::F64 _27313_f = ({
		auto except = _1dc5a8366_ParseFloat((*(_27124_l)).get()._field_Value, 64LL);
		(except.ok()) ? (except.result) : ({

			jule::MAX_F64;
		});
	});;
	jule::Ptr<_1c0901b1b_Const> _27417_constant = static__1c0902b1c_NewF64(_27313_f);;
	return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_untyped=true, ._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("f64", 3)), 10)}), ._field_Mutable=true, ._field_Model=jule::Any(_27417_constant, &__jule_any_type19), ._field_Constant=_27417_constant});;
}



inline jule::Ptr<_1aa957d85_Data> _1c090ab58_litInt(_1aa959903_Eval* _self_, jule::Ptr<_1aa85957d_LitExpr>* _28626_l) {
	;
	jule::Str _28917_lit = (*(_28626_l)).get()._field_Value;;
	jule::I64 _29017_base = 0LL;;
	{
		
		if (_1d9d036a7_HasPrefix(_28917_lit, jule::Str("0x", 2))) {
			_case_begin_1ad793ddd:;
			{
				(_28917_lit).mut_slice(2LL);;
				_29017_base=16LLU;
			}
		}
		else if (_1d9d036a7_HasPrefix(_28917_lit, jule::Str("0b", 2))) {
			_case_begin_1ad793e54:;
			{
				(_28917_lit).mut_slice(2LL);;
				_29017_base=2LLU;
			}
		}
		else if (_1d9d036a7_HasPrefix(_28917_lit, jule::Str("0o", 2))) {
			_case_begin_1ad793b02:;
			{
				(_28917_lit).mut_slice(2LL);;
				_29017_base=8LLU;
			}
		}
		else if (((_28917_lit[0LL] == '0') && (_28917_lit.len() > 1LL))) {
			_case_begin_1ad793b68:;
			{
				(_28917_lit).mut_slice(1LL);;
				_29017_base=8LLU;
			}
		}
		else {
			_case_begin_1ad793a8b:;
			{
				_29017_base=10LLU;
			}
		}
		_match_end_1ad793a25:;
	};
	jule::Ptr<_1aa957d85_Data> _31017_d = jule::new_ptr<_1aa957d85_Data>();;
	jule::Bool _31217_ok = true;;
	jule::I64 _31313_sig = ({
		auto except = _1dc5a1d76_ParseInt(_28917_lit, _29017_base, 64LL);
		(except.ok()) ? (except.result) : ({
			_31217_ok=false;

			0LL;
		});
	});;
	if (_31217_ok) {
		_31017_d.get()._field_Constant=static__1c090208e_NewI64(_31313_sig);
		_31017_d.get()._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("int", 3)), 10)});
	} else {
		jule::U64 _32317_unsig = ({
			auto except = _1dc5a1914_ParseUint(_28917_lit, _29017_base, 64LL);
			(except.ok()) ? (except.result) : ({
				_1aa959e0e_pushErr(_self_, (*(_28626_l)).get()._field_Token, jule::Str("arithmetic value overflow: this value too big", 45), jule::Slice<jule::Any>());
				_1aa95a22d_pushSuggestion(_self_, jule::Str("floating-point literals may solve your problem", 46), jule::Slice<jule::Any>());

				jule::MAX_U64;
			});
		});;
		_31017_d.get()._field_Constant=static__1c0902336_NewU64(_32317_unsig);
		_31017_d.get()._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("uint", 4)), 10)});
	};
	_31017_d.get()._field_Model=jule::Any(_31017_d.get()._field_Constant, &__jule_any_type19);
	if ((!(_1aa95ad88_applyNumericPrefix(_self_, &(_31017_d))))) {
		_1aa97ce76_fitBitsize(&(_31017_d));
	};
	_31017_d.get()._field_Mutable=true;
	_31017_d.get()._field_untyped=true;
	return _31017_d;;
}



inline jule::Ptr<_1aa957d85_Data> _1c090b30c_litNum(_1aa959903_Eval* _self_, jule::Ptr<_1aa85957d_LitExpr>* _34626_l) {
	{
		
		if (_1db946cbb_IsFloat((*(_34626_l)).get()._field_Value)) {
			_case_begin_1ad79be07:;
			{
				return _1aa95bd34_litFloat(_self_, _34626_l);;
			}
		}
		else {
			_case_begin_1ad79b70e:;
			{
				return _1c090ab58_litInt(_self_, _34626_l);;
			}
		}
		_match_end_1ad79b643:;
	};
}



inline jule::Ptr<_1aa957d85_Data> _1c090b021_evalLit(_1aa959903_Eval* _self_, jule::Ptr<_1aa85957d_LitExpr> _35526_lit) {
	{
		
		if (_1aa8598d0_IsNil(_35526_lit.ptr())) {
			_case_begin_1ad79d018:;
			{
				return _1aa95b0ec_litNil(_self_);;
			}
		}
		else if (_1db945db9_IsStr(_35526_lit.get()._field_Value)) {
			_case_begin_1ad79c941:;
			{
				return _1aa95b40a_litStr(_self_, &(_35526_lit));;
			}
		}
		else if (_1db946a24_IsBool(_35526_lit.get()._field_Value)) {
			_case_begin_1ad79c9b8:;
			{
				return _1aa95b718_litBool(_self_, &(_35526_lit));;
			}
		}
		else if (_1db946408_IsRune(_35526_lit.get()._field_Value)) {
			_case_begin_1ad79ca40:;
			{
				return _1aa95ba26_litRune(_self_, &(_35526_lit));;
			}
		}
		else if (_1db947063_IsNum(_35526_lit.get()._field_Value)) {
			_case_begin_1ad79cc3d:;
			{
				return _1c090b30c_litNum(_self_, &(_35526_lit));;
			}
		}
		else {
			_case_begin_1ad79c457:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad79c38b:;
	};
}



inline jule::Any _1c090b5d7_findBuiltins(_1aa959903_Eval* _self_, jule::Str _37231_ident) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 1)) {
			_case_begin_1ad79ed3e:;
			{
				jule::Any _37521_def = _1aa97cc67_findBuiltinsImport(_37231_ident, (*(_self_))._field_lookup.cast_ptr<_1aa8d101c_ImportInfo>(1));;
				if ((_37521_def != nullptr)) {
					return _37521_def;;
				};
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_1ad7a02b2:;
			{
				jule::Any _38021_def = _1aa97d905_findBuiltinsSema(_37231_ident, (*(_self_))._field_lookup.cast_ptr<_1aa8d92de_Sema>(3));;
				if ((_38021_def != nullptr)) {
					return _38021_def;;
				};
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_1ad7a0328:;
			{
				jule::Any _38521_def = _1aa97d905_findBuiltinsSema(_37231_ident, (*(_self_))._field_lookup.cast_ptr<_1aa8b91d1_scopeChecker>(0).get()._field_s);;
				if ((_38521_def != nullptr)) {
					return _38521_def;;
				};
			}
		}
		_match_end_1ad79ecd9:;
	};
	if ((*(_self_))._field_disBuiltin) {
		return nullptr;;
	};
	return _1aa2b0c93_findBuiltinDef(_37231_ident);;
}



inline jule::Any _1aa95c340_getDef(_1aa959903_Eval* _self_, jule::Str _39625_ident, jule::Bool _39637_cppLinked) {
	jule::Ptr<_1aa908c59_Var> _40117_v = _1aa9a0509_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1aa99dd76_FindVar((*(_self_))._field_lookup, _39625_ident, _39637_cppLinked);;
	if ((_40117_v != nullptr)) {
		return jule::Any(_40117_v, &__jule_any_type8);;
	};
	jule::Ptr<_1aa982b29_TypeAlias> _40617_ta = _1aa9a0509_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1aa99e22d_FindTypeAlias((*(_self_))._field_lookup, _39625_ident, _39637_cppLinked);;
	if ((_40617_ta != nullptr)) {
		return jule::Any(_40617_ta, &__jule_any_type67);;
	};
	if ((!(_39637_cppLinked))) {
		jule::Ptr<_1aa89ddca_Enum> _41221_enm = _1aa9a0509_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1aa9a00a8_FindEnum((*(_self_))._field_lookup, _39625_ident);;
		if ((_41221_enm != nullptr)) {
			return jule::Any(_41221_enm, &__jule_any_type68);;
		};
		jule::Ptr<_1aa8a04c5_TypeEnum> _41721_tenm = _1aa9a0509_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1aa9a03b6_FindTypeEnum((*(_self_))._field_lookup, _39625_ident);;
		if ((_41721_tenm != nullptr)) {
			return jule::Any(_41721_tenm, &__jule_any_type69);;
		};
	};
	jule::Ptr<_1aa889426_Fn> _42317_f = _1aa9a0509_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1aa99e98c_FindFn((*(_self_))._field_lookup, _39625_ident, _39637_cppLinked);;
	if ((_42317_f != nullptr)) {
		return jule::Any(_42317_f, &__jule_any_type65);;
	};
	jule::Ptr<_1aa8740c0_Struct> _42817_s = _1aa9a0509_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1aa99e5d5_FindStruct((*(_self_))._field_lookup, _39625_ident, _39637_cppLinked);;
	if ((_42817_s != nullptr)) {
		return jule::Any(_42817_s, &__jule_any_type66);;
	};
	return _1c090b5d7_findBuiltins(_self_, _39625_ident);;
}



inline void _1ad7b6482_pushReference(_1aa959903_Eval* _self_, jule::Ptr<_1aa88c0c7_FnIns>* _43640_ref) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1ad7bb18a:;
			{
				jule::Ptr<_1aa8b91d1_scopeChecker> _43921_sc = _1aa8bc26c_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1aa8b91d1_scopeChecker>(0));;
				if ((!(_1ad7b90ab_Exist(_43921_sc.get()._field_owner.get()._field_Refers.ptr(), (*(_43640_ref)))))) {
					_1aa890b9c_Push(_43921_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any((*(_43640_ref)), &__jule_any_type7));
				};
			}
		}
		else {
			_case_begin_1ad7b783a:;
			{
				if (((((*(_self_))._field_owner != nullptr) && ((*(_self_))._field_owner.get()._field_Scope == nullptr)) && (!(_1ad7b90ab_Exist((*(_self_))._field_owner.get()._field_Refers.ptr(), (*(_43640_ref))))))) {
					_1aa890b9c_Push((*(_self_))._field_owner.get()._field_Refers.ptr(), jule::Any((*(_43640_ref)), &__jule_any_type7));
				};
			}
		}
		_match_end_1ad7b77d5:;
	};
}

inline void _1ad7caa3a_pushReference(_1aa959903_Eval* _self_, jule::Ptr<_1aa908c59_Var>* _43640_ref) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1ad7d0512:;
			{
				jule::Ptr<_1aa8b91d1_scopeChecker> _43921_sc = _1aa8bc26c_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1aa8b91d1_scopeChecker>(0));;
				if ((!(_1ad7cd5cb_Exist(_43921_sc.get()._field_owner.get()._field_Refers.ptr(), (*(_43640_ref)))))) {
					_1aa890b9c_Push(_43921_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any((*(_43640_ref)), &__jule_any_type8));
				};
			}
		}
		else {
			_case_begin_1ad7cbd5a:;
			{
				if (((((*(_self_))._field_owner != nullptr) && ((*(_self_))._field_owner.get()._field_Scope == nullptr)) && (!(_1ad7cd5cb_Exist((*(_self_))._field_owner.get()._field_Refers.ptr(), (*(_43640_ref))))))) {
					_1aa890b9c_Push((*(_self_))._field_owner.get()._field_Refers.ptr(), jule::Any((*(_43640_ref)), &__jule_any_type8));
				};
			}
		}
		_match_end_1ad7cbd05:;
	};
}

inline void _1ad66c47b_pushReference(_1aa959903_Eval* _self_, jule::Ptr<_1aa876dd6_StructIns>* _43640_ref) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1ad66d658:;
			{
				jule::Ptr<_1aa8b91d1_scopeChecker> _43921_sc = _1aa8bc26c_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1aa8b91d1_scopeChecker>(0));;
				if ((!(_1ad67014e_Exist(_43921_sc.get()._field_owner.get()._field_Refers.ptr(), (*(_43640_ref)))))) {
					_1aa890b9c_Push(_43921_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any((*(_43640_ref)), &__jule_any_type9));
				};
			}
		}
		else {
			_case_begin_1ad66d8cd:;
			{
				if (((((*(_self_))._field_owner != nullptr) && ((*(_self_))._field_owner.get()._field_Scope == nullptr)) && (!(_1ad67014e_Exist((*(_self_))._field_owner.get()._field_Refers.ptr(), (*(_43640_ref))))))) {
					_1aa890b9c_Push((*(_self_))._field_owner.get()._field_Refers.ptr(), jule::Any((*(_43640_ref)), &__jule_any_type9));
				};
			}
		}
		_match_end_1ad66d878:;
	};
}



inline jule::Ptr<_1aa957d85_Data> _1aa95c8c3__evalEnum(_1aa959903_Eval* _self_, jule::Ptr<_1aa89ddca_Enum> _45328_enm) {
	return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_45328_enm, 3)}), ._field_Decl=true, });;
}



inline jule::Ptr<_1aa957d85_Data> _1aa95cc7a_evalEnum(_1aa959903_Eval* _self_, jule::Ptr<_1aa89ddca_Enum> _46231_enm, jule::Ptr<_1db944d0d_Token> _46243_errorToken) {
	if ((!(_1aa8dc38b_isAccessibleDefine((*(_self_))._field_s.ptr(), _46231_enm.get()._field_Public, _46231_enm.get()._field_Token)))) {
		_1aa959e0e_pushErr(_self_, _46243_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_46231_enm.get()._field_Ident, &__jule_any_type5)}));
		_1aa95a22d_pushSuggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1aa95c8c3__evalEnum(_self_, _46231_enm);;
}



inline jule::Ptr<_1aa957d85_Data> _1aa95d088__evalTypeEnum(_1aa959903_Eval* _self_, jule::Ptr<_1aa8a04c5_TypeEnum> _47132_enm) {
	return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_47132_enm, 4)}), ._field_Decl=true, });;
}



inline jule::Ptr<_1aa957d85_Data> _1aa95d440_evalTypeEnum(_1aa959903_Eval* _self_, jule::Ptr<_1aa8a04c5_TypeEnum> _48035_enm, jule::Ptr<_1db944d0d_Token> _48051_errorToken) {
	if ((!(_1aa8dc38b_isAccessibleDefine((*(_self_))._field_s.ptr(), _48035_enm.get()._field_Public, _48035_enm.get()._field_Token)))) {
		_1aa959e0e_pushErr(_self_, _48051_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_48035_enm.get()._field_Ident, &__jule_any_type5)}));
		_1aa95a22d_pushSuggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1aa95d088__evalTypeEnum(_self_, _48035_enm);;
}



inline jule::Ptr<_1aa957d85_Data> _1aa95d74d__evalStruct(_1aa959903_Eval* _self_, jule::Ptr<_1aa876dd6_StructIns> _48930_s) {
	jule::Ptr<_1aa957d85_Data> _49017_d = jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_48930_s, 0)}), ._field_Model=jule::Any(_48930_s, &__jule_any_type9), ._field_Decl=true, });;
	if (((_48930_s.get()._field_Decl != nullptr) && _48930_s.get()._field_Decl.get()._field_CppLinked)) {
		_49017_d.get()._field_Kind.get()._field_CppIdent=_48930_s.get()._field_Decl.get()._field_Ident;
	};
	return _49017_d;;
}



inline jule::Ptr<_1aa957d85_Data> _1aa95db05_evalStruct(_1aa959903_Eval* _self_, jule::Ptr<_1aa876dd6_StructIns> _50333_s, jule::Ptr<_1db944d0d_Token> _50348_errorToken) {
	if ((!(_1aa8dc38b_isAccessibleDefine((*(_self_))._field_s.ptr(), _50333_s.get()._field_Decl.get()._field_Public, _50333_s.get()._field_Decl.get()._field_Token)))) {
		_1aa959e0e_pushErr(_self_, _50348_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_50333_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5)}));
		_1aa95a22d_pushSuggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1aa95e232_checkDeprecated(_self_, &(_50333_s.get()._field_Decl.get()._field_Directives), _50348_errorToken);
	return _1aa95d74d__evalStruct(_self_, _50333_s);;
}



inline jule::Ptr<_1aa957d85_Data> _1aa95de13_evalFnIns(_1aa959903_Eval* _self_, jule::Ptr<_1aa88c0c7_FnIns> _51328_f) {
	return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_51328_f, 1)}), ._field_Model=jule::Any(_51328_f, &__jule_any_type7), });;
}



inline void _1aa95e232_checkDeprecated(_1aa959903_Eval* _self_, jule::Slice<jule::Ptr<_1aa820a94_Directive>>* _52239_directives, jule::Ptr<_1db944d0d_Token> _52270_tok) {
	if (_1aa95a849_isUnsafe(_self_)) {
		return;;
	};
	jule::Ptr<_1aa820a94_Directive> _52713_d = _1aa97c8d2_findDirective(_52239_directives, jule::Str("deprecated", 10));;
	if ((_52713_d != nullptr)) {
		if ((_52713_d.get()._field_Args.len() == 0LL)) {
			_1aa959e0e_pushErr(_self_, _52270_tok, jule::Str("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any(jule::Str("this code is deprecated", 23), &__jule_any_type5)}));
		} else {
			_1aa959e0e_pushErr(_self_, _52270_tok, jule::Str("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any(_52713_d.get()._field_Args[0LL].get()._field_Kind, &__jule_any_type5)}));
		};
		_1aa95a22d_pushSuggestion(_self_, jule::Str("use Unsafe Jule for deprecated codes or replace to successor", 60), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1aa957d85_Data> _1aa95e5d9_evalFn(_1aa959903_Eval* _self_, jule::Ptr<_1aa889426_Fn> _53829_f, jule::Ptr<_1db944d0d_Token> _53837_errorToken) {
	if ((!(_1aa8dc38b_isAccessibleDefine((*(_self_))._field_s.ptr(), _53829_f.get()._field_Public, _53829_f.get()._field_Token)))) {
		_1aa959e0e_pushErr(_self_, _53837_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_53829_f.get()._field_Ident, &__jule_any_type5)}));
		_1aa95a22d_pushSuggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1aa95e232_checkDeprecated(_self_, &(_53829_f.get()._field_Directives), _53837_errorToken);
	jule::Ptr<_1aa88c0c7_FnIns> _54717_ins = _1aa88aa76_instance(_53829_f);;
	_1ad7b6482_pushReference(_self_, &(_54717_ins));
	return _1aa95de13_evalFnIns(_self_, _54717_ins);;
}



inline void _1aa95e9a2_pushIllegalCycleError(_1aa959903_Eval* _self_, jule::Ptr<_1aa908c59_Var>* _55241_v1, jule::Ptr<_1aa908c59_Var>* _55252_v2, jule::Str* _55267_message) {
	;
	jule::Str _55413_refers_to = _1d9d93d0d_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*(_55241_v1)).get()._field_Ident, &__jule_any_type5),jule::Any((*(_55252_v2)).get()._field_Ident, &__jule_any_type5)}));;
	((*(_55267_message))).buffer.insert(0, (((_1d9d02e37_Repeat(jule::Str(" ", 1), 7LL) + _55413_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _1aa95ed59_checkCrossCycle(_1aa959903_Eval* _self_, jule::Ptr<_1aa908c59_Var>* _55835_v, jule::Str* _55849_message) {
	{
		auto expr = &((*(_55835_v)).get()._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad7be07d:;
		if (it != expr_end) {
			jule::Ptr<_1aa908c59_Var> *_55916_d = it;
			{
				if (((*(_55916_d)) == (*(_self_))._field_owner)) {
					_1aa95e9a2_pushIllegalCycleError(_self_, _55835_v, _55916_d, _55849_message);
					return false;;
				};
				if ((!(_1aa95ed59_checkCrossCycle(_self_, _55916_d, _55849_message)))) {
					_1aa95e9a2_pushIllegalCycleError(_self_, _55835_v, _55916_d, _55849_message);
					return false;;
				};
			}
			_iter_next_1ad7be07d:;
			++it;
			goto _iter_begin_1ad7be07d;
		}
		_iter_end_1ad7be07d:;
	};
	return true;;
}



inline jule::Bool _1aa960211_checkIllegalCycles(_1aa959903_Eval* _self_, jule::Ptr<_1aa908c59_Var>* _57742_v, jule::Ptr<_1db944d0d_Token> _57751_decl_token) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_owner == nullptr) || ((*(_self_))._field_owner.get()._field_Scope != nullptr))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_self_))._field_owner == (*(_57742_v)))) {
		_1aa959e0e_pushErr(_self_, (*(_self_))._field_owner.get()._field_Token, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_owner.get()._field_Ident, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Str _59017_message = jule::Str();;
	if ((!(_1aa95ed59_checkCrossCycle(_self_, _57742_v, &(_59017_message))))) {
		jule::Str _59321_errMsg = _59017_message;;
		_59017_message=jule::Str();
		_1aa95e9a2_pushIllegalCycleError(_self_, &((*(_self_))._field_owner), _57742_v, &(_59017_message));
		_59321_errMsg+=_59017_message;
		_1aa959e0e_pushErr(_self_, _57751_decl_token, jule::Str("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_59321_errMsg, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	(*(_self_))._field_owner.get()._field_Depends = jule::alloc_for_append((*(_self_))._field_owner.get()._field_Depends,1);(*(_self_))._field_owner.get()._field_Depends.__push((*(_57742_v)));;
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1aa957d85_Data> _1aa9605b8_evalVar(_1aa959903_Eval* _self_, jule::Ptr<_1aa908c59_Var> _60530_v, jule::Ptr<_1db944d0d_Token> _60539_errorToken) {
	if ((!(_1aa8dc38b_isAccessibleDefine((*(_self_))._field_s.ptr(), _60530_v.get()._field_Public, _60530_v.get()._field_Token)))) {
		_1aa959e0e_pushErr(_self_, _60539_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_60530_v.get()._field_Ident, &__jule_any_type5)}));
		_1aa95a22d_pushSuggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1aa95e232_checkDeprecated(_self_, &(_60530_v.get()._field_Directives), _60539_errorToken);
	_60530_v.get()._field_Used=true;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1ad7c6926:;
			{
				jule::Bool _61917_ok = _1aa960211_checkIllegalCycles(_self_, &(_60530_v), _60539_errorToken);;
				if ((!(_61917_ok))) {
					return nullptr;;
				};
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_1ad7c69d1:;
			{
				if (((!(_60530_v.get()._field_Reference)) || _1aa95a849_isUnsafe(_self_))) {
					goto _match_end_1ad7c68c1;
				};
				jule::Ptr<_1aa8b91d1_scopeChecker> _62721_s = (*(_self_))._field_lookup.cast_ptr<_1aa8b91d1_scopeChecker>(0);;
				while (((_62721_s.get()._field_owner == nullptr) && (_62721_s.get()._field_parent != nullptr))) {
					{
						_62721_s=_62721_s.get()._field_parent;
					}
				_iter_next_1ad7c89b1:;
				}
				_iter_end_1ad7c89b1:;;
				if ((((_62721_s.get()._field_owner != nullptr) && _62721_s.get()._field_owner.get()._field_Anon) && (_60530_v.get()._field_Scope != _62721_s.get()._field_owner.get()._field_Scope))) {
					_1aa959e0e_pushErr(_self_, _60539_errorToken, jule::Str("anonymous functions cannot access to reference definition @ of parent scope", 75), jule::Slice<jule::Any>::make({jule::Any(_60530_v.get()._field_Ident, &__jule_any_type5)}));
				};
			}
		}
		_match_end_1ad7c68c1:;
	};
	if ((_60530_v.get()._field_Scope == nullptr)) {
		_1ad7caa3a_pushReference(_self_, &(_60530_v));
	};
	if (((!(_60530_v.get()._field_CppLinked)) && ((_60530_v.get()._field_Value == nullptr) || (_60530_v.get()._field_Value.get()._field_Data == nullptr)))) {
		if (_60530_v.get()._field_Constant) {
			_1aa901191_checkTypeVar((*(_self_))._field_s, &(_60530_v), jule::Trait<_1aa9a0509_Lookup>((*(_self_))._field_s, 3));
			if (((_60530_v.get()._field_Value == nullptr) || (_60530_v.get()._field_Value.get()._field_Data == nullptr))) {
				return nullptr;;
			};
		};
	};
	if (((_60530_v.get()._field_Kind == nullptr) || (_60530_v.get()._field_Kind.get()._field_Kind == nullptr))) {
		if ((_60530_v.get()._field_Scope != nullptr)) {
			return nullptr;;
		};
		_1aa901191_checkTypeVar((*(_self_))._field_s, &(_60530_v), (*(_self_))._field_lookup);
		if (((_60530_v.get()._field_Kind == nullptr) || (_60530_v.get()._field_Kind.get()._field_Kind == nullptr))) {
			return nullptr;;
		};
	};
	jule::Ptr<_1aa957d85_Data> _67017_d = jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=_60530_v.get()._field_Kind.get()._field_Kind, ._field_Mutable=_60530_v.get()._field_Mutable, ._field_Reference=_60530_v.get()._field_Reference, ._field_Lvalue=(!(_60530_v.get()._field_Constant)), ._field_Model=jule::Any(_60530_v, &__jule_any_type8), });;
	if ((((!(_60530_v.get()._field_CppLinked)) && _1aa909122_IsInitialized(_60530_v.ptr())) && (_60530_v.get()._field_Value.get()._field_Data != nullptr))) {
		_67017_d.get()._field_IsRune=_60530_v.get()._field_Value.get()._field_Data.get()._field_IsRune;
	};
	if ((_60530_v.get()._field_Constant && (_60530_v.get()._field_Value.get()._field_Data.get()._field_Constant != nullptr))) {
		_67017_d.get()._field_Constant=jule::new_ptr<_1c0901b1b_Const>((*(_60530_v.get()._field_Value.get()._field_Data.get()._field_Constant)));
		_67017_d.get()._field_Model=jule::Any(_67017_d.get()._field_Constant, &__jule_any_type19);
		if (_1aa9095ea_untypedConstant(_60530_v.ptr())) {
			_1aa95ad88_applyNumericPrefix(_self_, &(_67017_d));
			_67017_d.get()._field_untyped=true;
		};
	};
	return _67017_d;;
}



inline jule::Ptr<_1aa957d85_Data> _1aa960970_evalTypeAlias(_1aa959903_Eval* _self_, jule::Ptr<_1aa982b29_TypeAlias> _69436_ta, jule::Ptr<_1db944d0d_Token> _69452_errorToken) {
	if ((!(_1aa8dc38b_isAccessibleDefine((*(_self_))._field_s.ptr(), _69436_ta.get()._field_Public, _69436_ta.get()._field_Token)))) {
		_1aa959e0e_pushErr(_self_, _69452_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_69436_ta.get()._field_Ident, &__jule_any_type5)}));
		_1aa95a22d_pushSuggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_69436_ta.get()._field_Used=true;
	jule::Trait<_1aa983410_Kind> _70317_kind = _69436_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind;;
	jule::Ptr<_1aa957d85_Data> _70417_d = nullptr;;
	{
		auto &_match_expr{ _70317_kind };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1ad7dc5a7:;
			{
				_70417_d=_1aa95d74d__evalStruct(_self_, _70317_kind.cast_ptr<_1aa876dd6_StructIns>(0));
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_1ad7db188:;
			{
				_70417_d=_1aa95c8c3__evalEnum(_self_, _70317_kind.cast_ptr<_1aa89ddca_Enum>(3));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1ad7db1ee:;
			{
				_70417_d=_1aa95d088__evalTypeEnum(_self_, _70317_kind.cast_ptr<_1aa8a04c5_TypeEnum>(4));
			}
		}
		else {
			_case_begin_1ad7db067:;
			{
				_70417_d=jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=_69436_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind}), ._field_Decl=true, });
				if (_69436_ta.get()._field_CppLinked) {
					_70417_d.get()._field_Kind.get()._field_CppIdent=_69436_ta.get()._field_Ident;
				} else {
					_70417_d.get()._field_Kind.get()._field_CppIdent=_69436_ta.get()._field_Kind.get()._field_Kind.get()._field_CppIdent;
				};
				_70417_d.get()._field_Model=jule::Any(_70417_d.get()._field_Kind, &__jule_any_type89);
			}
		}
		_match_end_1ad7db012:;
	};
	_70417_d.get()._field_Kind.get()._field_Generic=_69436_ta.get()._field_Generic;
	return _70417_d;;
}



inline jule::Ptr<_1aa957d85_Data> _1aa960d27_evalDef(_1aa959903_Eval* _self_, jule::Any _73030_def, jule::Ptr<_1db944d0d_Token> _73040_ident) {
	{
		auto &_match_expr{ _73030_def };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ad7ded6d:;
			{
				return _1aa9605b8_evalVar(_self_, _73030_def.cast_ptr<_1aa908c59_Var>(&__jule_any_type8), _73040_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1ad7dedd4:;
			{
				return _1aa95cc7a_evalEnum(_self_, _73030_def.cast_ptr<_1aa89ddca_Enum>(&__jule_any_type68), _73040_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1ad7dee4a:;
			{
				return _1aa95d440_evalTypeEnum(_self_, _73030_def.cast_ptr<_1aa8a04c5_TypeEnum>(&__jule_any_type69), _73040_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1ad7deec2:;
			{
				return _1aa95db05_evalStruct(_self_, _1aa874532_instance(_73030_def.cast_ptr<_1aa8740c0_Struct>(&__jule_any_type66)), _73040_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1ad7e0038:;
			{
				jule::Ptr<_1aa889426_Fn> _74121_f = _73030_def.cast_ptr<_1aa889426_Fn>(&__jule_any_type65);;
				if ((!_74121_f.get()._field_Ident.equal("init", 4))) {
					return _1aa95e5d9_evalFn(_self_, _74121_f, _73040_ident);;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1ad7e00b0:;
			{
				return _1aa95de13_evalFnIns(_self_, _73030_def.cast_ptr<_1aa88c0c7_FnIns>(&__jule_any_type7));;
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1ad7e0137:;
			{
				return _1aa960970_evalTypeAlias(_self_, _73030_def.cast_ptr<_1aa982b29_TypeAlias>(&__jule_any_type67), _73040_ident);;
			}
		}
		_match_end_1ad7dec80:;
	};
	_1aa959e0e_pushErr(_self_, _73040_ident, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any(_73040_ident.get()._field_Kind, &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Ptr<_1aa957d85_Data> _1aa961135_evalIdent(_1aa959903_Eval* _self_, jule::Ptr<_1aa85a20a_IdentExpr> _75428_ident) {
	jule::Any _75517_def = _1aa95c340_getDef(_self_, _75428_ident.get()._field_Ident, _75428_ident.get()._field_CppLinked);;
	return _1aa960d27_evalDef(_self_, _75517_def, _75428_ident.get()._field_Token);;
}



inline jule::Ptr<_1aa957d85_Data> _1aa961443_evalUnary(jule::Ptr<_1aa959903_Eval> _self_, jule::Ptr<_1aa85a914_UnaryExpr> _75933_u) {
	_1aa974bb5_unaryEval _76017_unary = static__1aa97516b_new(_self_);;
	return _1aa976414_eval(&_76017_unary, _75933_u);;
}



inline jule::Ptr<_1aa957d85_Data> _1aa961751_evalVariadic(jule::Ptr<_1aa959903_Eval> _self_, jule::Ptr<_1aa85acbb_VariadicExpr> _76436_v) {
	if ((_76436_v.get()._field_Expr == nullptr)) {
		_1aa959e0e_pushErr(_self_.ptr(), _76436_v.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aa983872_TypeKind> _77017_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_77017_prefix;
	});;
	jule::Ptr<_1aa957d85_Data> _77417_d = _1aa974126_evalExprKind(_self_, _76436_v.get()._field_Expr.get()._field_Kind);;
	if ((_77417_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1aa9859ea_Variadicable(_77417_d.get()._field_Kind.ptr())))) {
		_1aa959e0e_pushErr(_self_.ptr(), _76436_v.get()._field_Token, jule::Str("type @ is not variadicable", 26), jule::Slice<jule::Any>::make({jule::Any(_1aa983c6d_Str(_77417_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1aa98d52a_Slc> _78413_slc = _1aa986bd8_Slc(_77417_d.get()._field_Kind.ptr());;
	_77417_d.get()._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_CppIdent=_78413_slc.get()._field_Elem.get()._field_CppIdent, ._field_Generic=_78413_slc.get()._field_Elem.get()._field_Generic, ._field_Variadic=true, ._field_Kind=_78413_slc.get()._field_Elem.get()._field_Kind});
	return _77417_d;;
}



inline jule::Ptr<_1aa957d85_Data> _1aa961a5e_evalUnsafe(jule::Ptr<_1aa959903_Eval> _self_, jule::Ptr<_1aa859c87_UnsafeExpr> _79434_u) {
	jule::Bool _79513_unsafety = _self_.get()._field_unsafety;;
	_self_.get()._field_unsafety=true;
	jule::Ptr<_1aa957d85_Data> _79717_d = _1aa974126_evalExprKind(_self_, _79434_u.get()._field_Expr.get()._field_Kind);;
	_self_.get()._field_unsafety=_79513_unsafety;
	return _79717_d;;
}



inline jule::Ptr<_1aa957d85_Data> _1aa961d6c_evalArr(jule::Ptr<_1aa959903_Eval> _self_, jule::Ptr<_1aa85eb38_SliceExpr> _80231_s) {
	jule::Ptr<_1aa9906c5_Arr> _80417_pt = _1aa986974_Arr(_self_.get()._field_prefix.ptr());;
	jule::Ptr<_1aa9906c5_Arr> _80617_arr = jule::new_ptr<_1aa9906c5_Arr>(_1aa9906c5_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=_80417_pt.get()._field_Elem});;
	jule::Bool _81217_filled = false;;
	if ((_80231_s.get()._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ _80231_s.get()._field_Exprs[1LL].get()._field_Kind };
			
			if (_match_expr.type == &__jule_any_type81) {
				_case_begin_1ad7edbb2:;
				{
					if ((_80231_s.get()._field_Exprs[1LL].get()._field_Kind.cast_ptr<_1aa85acbb_VariadicExpr>(&__jule_any_type81).get()._field_Expr != nullptr)) {
						goto _match_end_1ad7edb5c;
					};
					if (_80417_pt.get()._field_Auto) {
						_1aa959e0e_pushErr(_self_.ptr(), _80231_s.get()._field_Token, jule::Str("auto-sized arrays cannot filled", 31), jule::Slice<jule::Any>());
						return nullptr;;
					};
					_81217_filled=true;
					_80231_s.get()._field_Exprs=_80231_s.get()._field_Exprs.slice(0LL, 1LL);
				}
			}
			_match_end_1ad7edb5c:;
		};
	};
	_80617_arr.get()._field_N=static_cast<jule::I64>(_80231_s.get()._field_Exprs.len());
	if ((!(_80417_pt.get()._field_Auto))) {
		if ((_80617_arr.get()._field_N > _80417_pt.get()._field_N)) {
			_1aa959e0e_pushErr(_self_.ptr(), _80231_s.get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else if ((_80617_arr.get()._field_N < _80417_pt.get()._field_N)) {
			_80617_arr.get()._field_N=_80417_pt.get()._field_N;
		};
	};
	jule::Ptr<_1aa8811ed_ArrayExprModel> _84117_model = jule::new_ptr<_1aa8811ed_ArrayExprModel>(_1aa8811ed_ArrayExprModel{._field_Kind=_80617_arr, });;
	if (_81217_filled) {
		_84117_model.get()._field_Elems=jule::Slice<jule::Any>::alloc(0LL, 2LL, jule::Any(nullptr));
	} else {
		_84117_model.get()._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _80231_s.get()._field_Exprs.len(), jule::Any(nullptr));
	};
	jule::Ptr<_1aa983872_TypeKind> _85017_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_80617_arr.get()._field_Elem;
	{
		auto expr = &(_80231_s.get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad803d71:;
		if (it != expr_end) {
			jule::Ptr<_1aa858549_Expr> _85221_elem = *it;
			{
				jule::Ptr<_1aa957d85_Data> _85321_d = _1aa974126_evalExprKind(_self_, _85221_elem.get()._field_Kind);;
				if ((_85321_d == nullptr)) {
					goto _iter_next_1ad803d71;
				};
				_1aa8e3e53_checkAssignType(_self_.get()._field_s, false, &(_80617_arr.get()._field_Elem), &(_85321_d), _80231_s.get()._field_Token);
				_84117_model.get()._field_Elems = jule::alloc_for_append(_84117_model.get()._field_Elems,1);_84117_model.get()._field_Elems.__push(_85321_d.get()._field_Model);;
			}
			_iter_next_1ad803d71:;
			++it;
			goto _iter_begin_1ad803d71;
		}
		_iter_end_1ad803d71:;
	};
	_self_.get()._field_prefix=_85017_prefix;
	if (_81217_filled) {
		_84117_model.get()._field_Elems = jule::alloc_for_append(_84117_model.get()._field_Elems,1);_84117_model.get()._field_Elems.__push(nullptr);;
	};
	return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_80617_arr, 15)}), ._field_Mutable=true, ._field_Model=jule::Any(_84117_model, &__jule_any_type90), });;
}



inline jule::Ptr<_1aa957d85_Data> _1aa9622bd_evalExpSlc(jule::Ptr<_1aa959903_Eval> _self_, jule::Ptr<_1aa85eb38_SliceExpr> _87734_s, jule::Ptr<_1aa983872_TypeKind> _87753_t, jule::Any _87771_first) {
	jule::Ptr<_1aa98d52a_Slc> _87817_slc = jule::new_ptr<_1aa98d52a_Slc>(_1aa98d52a_Slc{._field_Elem=_87753_t});;
	jule::I64 _88217_i = 0LL;;
	jule::Ptr<_1aa87d4c5_SliceExprModel> _88317_model = jule::new_ptr<_1aa87d4c5_SliceExprModel>(_1aa87d4c5_SliceExprModel{._field_ElemKind=_87753_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _87734_s.get()._field_Exprs.len(), jule::Any(nullptr))});;
	if ((_87771_first != nullptr)) {
		_88317_model.get()._field_Elems = jule::alloc_for_append(_88317_model.get()._field_Elems,1);_88317_model.get()._field_Elems.__push(_87771_first);;
		_88217_i=1LL;
	};
	jule::Ptr<_1aa983872_TypeKind> _89217_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_87817_slc.get()._field_Elem;
	{
		auto expr = _87734_s.get()._field_Exprs.slice(_88217_i);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1ad60a0ea:;
		if (it != expr_end) {
			jule::Ptr<_1aa858549_Expr> _89421_elem = *it;
			{
				jule::Ptr<_1aa957d85_Data> _89521_d = _1aa974126_evalExprKind(_self_, _89421_elem.get()._field_Kind);;
				if ((_89521_d == nullptr)) {
					goto _iter_next_1ad60a0ea;
				};
				_1aa8e3e53_checkAssignType(_self_.get()._field_s, false, &(_87817_slc.get()._field_Elem), &(_89521_d), _87734_s.get()._field_Token);
				_88317_model.get()._field_Elems = jule::alloc_for_append(_88317_model.get()._field_Elems,1);_88317_model.get()._field_Elems.__push(_89521_d.get()._field_Model);;
			}
			_iter_next_1ad60a0ea:;
			++it;
			goto _iter_begin_1ad60a0ea;
		}
		_iter_end_1ad60a0ea:;
	};
	_self_.get()._field_prefix=_89217_prefix;
	return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_87817_slc, 12)}), ._field_Mutable=true, ._field_Model=jule::Any(_88317_model, &__jule_any_type82), });;
}



inline jule::Ptr<_1aa957d85_Data> _1aa9625cb_evalSliceExpr(jule::Ptr<_1aa959903_Eval> _self_, jule::Ptr<_1aa85eb38_SliceExpr> _91337_s) {
	if ((_self_.get()._field_prefix != nullptr)) {
		{
			
			if ((_1aa986974_Arr(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1ad60cc79:;
				{
					return _1aa961d6c_evalArr(_self_, _91337_s);;
				}
			}
			else if ((_1aa986bd8_Slc(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1ad60cd01:;
				{
					jule::Ptr<_1aa98d52a_Slc> _91925_pt = _1aa986bd8_Slc(_self_.get()._field_prefix.ptr());;
					return _1aa9622bd_evalExpSlc(_self_, _91337_s, _91925_pt.get()._field_Elem, nullptr);;
				}
			}
			_match_end_1ad60cb69:;
		};
	};
	jule::Ptr<_1aa983872_TypeKind> _92417_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	if ((_91337_s.get()._field_Exprs.len() == 0LL)) {
		_1aa959e0e_pushErr(_self_.ptr(), _91337_s.get()._field_Token, jule::Str("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aa957d85_Data> _93217_firstElem = _1aa974126_evalExprKind(_self_, _91337_s.get()._field_Exprs[0LL].get()._field_Kind);;
	if ((_93217_firstElem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1aa957d85_Data> _93717_d = _1aa9622bd_evalExpSlc(_self_, _91337_s, _93217_firstElem.get()._field_Kind, _93217_firstElem.get()._field_Model);;
	_self_.get()._field_prefix=_92417_prefix;
	return _93717_d;;
}



inline void _1aa96291c_checkIntegerIndexingByData(_1aa959903_Eval* _self_, jule::Ptr<_1aa957d85_Data>* _94350_d, jule::Ptr<_1db944d0d_Token> _94360_token) {
	jule::Str _94413_err_key = _1aa97ed79_checkDataForIntegerIndexing(_94350_d);;
	{
		auto &_match_expr{ _94413_err_key };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1ad612be6:;
			{
				return;;
			}
		}
		else if (_match_expr == jule::Str("type @ is invalid for indexing", 30)) {
			_case_begin_1ad6131d0:;
			{
				_1aa959e0e_pushErr(_self_, _94360_token, _94413_err_key, jule::Slice<jule::Any>::make({jule::Any(_1aa983c6d_Str((*(_94350_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
			}
		}
		else {
			_case_begin_1ad61306a:;
			{
				_1aa959e0e_pushErr(_self_, _94360_token, _94413_err_key, jule::Slice<jule::Any>());
			}
		}
		_match_end_1ad612e8d:;
	};
}



inline void _1aa962ce6_indexingPtr(_1aa959903_Eval* _self_, jule::Ptr<_1aa957d85_Data>* _95535_d, jule::Ptr<_1aa957d85_Data>* _95550_index, jule::Ptr<_1aa8604a7_IndexingExpr>* _95565_i) {
	_1aa96291c_checkIntegerIndexingByData(_self_, _95550_index, (*(_95565_i)).get()._field_Token);
	jule::Ptr<_1aa991132_Ptr> _95817_ptr = _1aa986237_Ptr((*(_95535_d)).get()._field_Kind.ptr());;
	{
		
		if (_1aa991b05_IsUnsafe(_95817_ptr.ptr())) {
			_case_begin_1ad615864:;
			{
				_1aa959e0e_pushErr(_self_, (*(_95565_i)).get()._field_Token, jule::Str("unsafe pointers are not supports indexing", 41), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_1aa95a849_isUnsafe(_self_)))) {
			_case_begin_1ad6158ca:;
			{
				_1aa959e0e_pushErr(_self_, (*(_95565_i)).get()._field_Token, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ad615743:;
	};
	(*(_95535_d)).get()._field_Kind=_95817_ptr.get()._field_Elem;
}



inline void _1aa9631ae_indexingArr(_1aa959903_Eval* _self_, jule::Ptr<_1aa957d85_Data>* _97035_d, jule::Ptr<_1aa957d85_Data>* _97050_index, jule::Ptr<_1aa8604a7_IndexingExpr>* _97065_i) {
	jule::Ptr<_1aa9906c5_Arr> _97117_arr = _1aa986974_Arr((*(_97035_d)).get()._field_Kind.ptr());;
	(*(_97035_d)).get()._field_Kind=_97117_arr.get()._field_Elem;
	_1aa96291c_checkIntegerIndexingByData(_self_, _97050_index, (*(_97065_i)).get()._field_Token);
	if ((_1aa958748_IsConst((*(_97050_index)).ptr()) && (_1c0904602_AsF64((*(_97050_index)).get()._field_Constant.ptr()) >= static_cast<jule::F64>(_97117_arr.get()._field_N)))) {
		_1aa959e0e_pushErr(_self_, (*(_97065_i)).get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
	};
}



inline void _1aa963577_indexingSlc(_1aa959903_Eval* _self_, jule::Ptr<_1aa957d85_Data>* _97935_d, jule::Ptr<_1aa957d85_Data>* _97950_index, jule::Ptr<_1aa8604a7_IndexingExpr>* _97965_i) {
	jule::Ptr<_1aa98d52a_Slc> _98017_slc = _1aa986bd8_Slc((*(_97935_d)).get()._field_Kind.ptr());;
	(*(_97935_d)).get()._field_Kind=_98017_slc.get()._field_Elem;
	_1aa96291c_checkIntegerIndexingByData(_self_, _97950_index, (*(_97965_i)).get()._field_Token);
	if ((!(_1aa958748_IsConst((*(_97950_index)).ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_97935_d)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1ad61b095:;
			{
				jule::Ptr<_1aa87d4c5_SliceExprModel> _99021_m = (*(_97935_d)).get()._field_Model.cast_ptr<_1aa87d4c5_SliceExprModel>(&__jule_any_type82);;
				jule::F64 _99117_indx = _1c0904602_AsF64((*(_97950_index)).get()._field_Constant.ptr());;
				if ((_99117_indx >= static_cast<jule::F64>(_99021_m.get()._field_Elems.len()))) {
					_1aa959e0e_pushErr(_self_, (*(_97965_i)).get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
				} else {
					(*(_97935_d)).get()._field_Model=_99021_m.get()._field_Elems[static_cast<jule::I64>(static_cast<jule::U64>(_99117_indx))];
					(*(_97935_d)).get()._field_Decl=true;
				};
			}
		}
		_match_end_1ad61b00c:;
	};
}



inline void _1aa963940_indexingMap(_1aa959903_Eval* _self_, jule::Ptr<_1aa957d85_Data>* _100135_d, jule::Ptr<_1aa957d85_Data>* _100150_index, jule::Ptr<_1aa8604a7_IndexingExpr>* _100169_i) {
	if (((*(_100150_index)) == nullptr)) {
		return;;
	};
	jule::Ptr<_1aa98ead1_Map> _100517_m = _1aa987689_Map((*(_100135_d)).get()._field_Kind.ptr());;
	_1aa93d81b_assignTypeChecker _100617_atc = _1aa93d81b_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=_100517_m.get()._field_Key, ._field_d=(*(_100150_index)), ._field_errorToken=(*(_100169_i)).get()._field_Token};;
	_1aa93e993_check(&_100617_atc);
	(*(_100135_d)).get()._field_Kind=_100517_m.get()._field_Val;
}



inline void _1aa963d08_indexingStr(_1aa959903_Eval* _self_, jule::Ptr<_1aa957d85_Data>* _101635_d, jule::Ptr<_1aa957d85_Data>* _101650_index, jule::Ptr<_1aa8604a7_IndexingExpr>* _101665_i) {
	;
	(*(_101635_d)).get()._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("u8", 2)), 10)});
	if (((*(_101650_index)) == nullptr)) {
		return;;
	};
	_1aa96291c_checkIntegerIndexingByData(_self_, _101650_index, (*(_101665_i)).get()._field_Token);
	if ((!(_1aa958748_IsConst((*(_101650_index)).ptr())))) {
		(*(_101635_d)).get()._field_Constant=nullptr;
		return;;
	};
	if (_1aa958748_IsConst((*(_101635_d)).ptr())) {
		jule::Ptr<_1db944d0d_Token> _103217_errorToken = (*(_101665_i)).get()._field_Token;;
		jule::I64 _103317_j = _1c0904129_AsI64((*(_101650_index)).get()._field_Constant.ptr());;
		jule::Str _103417_s = _1c0903b51_ReadStr((*(_101635_d)).get()._field_Constant.ptr());;
		if ((static_cast<jule::I64>(_103317_j) >= _103417_s.len())) {
			_1aa959e0e_pushErr(_self_, _103217_errorToken, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else {
			_1c0904aec_SetU64((*(_101635_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_103417_s[_103317_j])));
		};
	};
}



inline void _1aa9641c1_toIndexing(_1aa959903_Eval* _self_, jule::Ptr<_1aa957d85_Data>* _104334_d, jule::Ptr<_1aa957d85_Data>* _104349_index, jule::Ptr<_1aa8604a7_IndexingExpr>* _104368_i) {
	{
		
		if ((_1aa986237_Ptr((*(_104334_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad625a2d:;
			{
				_1aa962ce6_indexingPtr(_self_, _104334_d, _104349_index, _104368_i);
				return;;
			}
		}
		else if ((_1aa986974_Arr((*(_104334_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad625aa5:;
			{
				_1aa9631ae_indexingArr(_self_, _104334_d, _104349_index, _104368_i);
				return;;
			}
		}
		else if ((_1aa986bd8_Slc((*(_104334_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad625b2c:;
			{
				_1aa963577_indexingSlc(_self_, _104334_d, _104349_index, _104368_i);
				return;;
			}
		}
		else if ((_1aa987689_Map((*(_104334_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad625ba4:;
			{
				_1aa963940_indexingMap(_self_, _104334_d, _104349_index, _104368_i);
				return;;
			}
		}
		else if ((_1aa985c5e_Prim((*(_104334_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad625c2b:;
			{
				jule::Ptr<_1aa989339_Prim> _105817_prim = _1aa985c5e_Prim((*(_104334_d)).get()._field_Kind.ptr());;
				{
					
					if (_1aa98c56d_IsStr(_105817_prim.ptr())) {
						_case_begin_1ad629b64:;
						{
							_1aa963d08_indexingStr(_self_, _104334_d, _104349_index, _104368_i);
							return;;
						}
					}
					_match_end_1ad629aba:;
				};
			}
		}
		_match_end_1ad6258da:;
	};
	_1aa959e0e_pushErr(_self_, (*(_104368_i)).get()._field_Token, jule::Str("type @ is not support indexing", 30), jule::Slice<jule::Any>::make({jule::Any(_1aa983c6d_Str((*(_104334_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
}



inline jule::Bool _1aa964644_pushGenericsFromExprSubIdent(jule::Ptr<_1aa959903_Eval> _self_, jule::Ptr<_1aa85b99d_SubIdentExpr>* _106853_sexpr, jule::Slice<jule::Ptr<_1aa854028_TypeDecl>>* _106914_generics, jule::Ptr<_1aa858549_Expr>* _106942_expr) {
	jule::Ptr<_1aa854c3d_SubIdentTypeDecl> _107017_t = jule::new_ptr<_1aa854c3d_SubIdentTypeDecl>();;
	if ((!(_1aa980b49_pushSubIdentFromExpr(jule::Any((*(_106853_sexpr)), &__jule_any_type91), &(_107017_t))))) {
		_1aa959e0e_pushErr(_self_.ptr(), (*(_106942_expr)).get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	(*(_106914_generics)) = jule::alloc_for_append((*(_106914_generics)),1);(*(_106914_generics)).__push(jule::new_ptr<_1aa854028_TypeDecl>(_1aa854028_TypeDecl{._field_Kind=jule::Any(_107017_t, &__jule_any_type92)}));;
	return true;;
}



inline jule::Bool _1aa964a0c_pushGenericsFromData(jule::Ptr<_1aa959903_Eval> _self_, jule::Slice<jule::Ptr<_1aa854028_TypeDecl>>* _107945_generics, jule::Ptr<_1aa858549_Expr>* _107973_expr) {
	{
		auto &_match_expr{ (*(_107973_expr)).get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1ad62d99d:;
			{
				jule::Ptr<_1aa85a914_UnaryExpr> _108221_u = (*(_107973_expr)).get()._field_Kind.cast_ptr<_1aa85a914_UnaryExpr>(&__jule_any_type93);;
				{
					auto &_match_expr{ _108221_u.get()._field_Op.get()._field_Kind };
					
					if (_match_expr == jule::Str("*", 1)) {
						_case_begin_1ad62e1a7:;
						{
							jule::Ptr<_1aa855da4_PtrTypeDecl> _108525_kind = jule::new_ptr<_1aa855da4_PtrTypeDecl>();;
							jule::Slice<jule::Ptr<_1aa854028_TypeDecl>> _108625__generics = jule::Slice<jule::Ptr<_1aa854028_TypeDecl>>::alloc(0LL, 1LL);;
							_1aa964a0c_pushGenericsFromData(_self_, &(_108625__generics), &(_108221_u.get()._field_Expr));
							_108525_kind.get()._field_Elem=_108625__generics[0LL];
							(*(_107945_generics)) = jule::alloc_for_append((*(_107945_generics)),1);(*(_107945_generics)).__push(jule::new_ptr<_1aa854028_TypeDecl>(_1aa854028_TypeDecl{._field_Token=(*(_107973_expr)).get()._field_Token, ._field_Kind=jule::Any(_108525_kind, &__jule_any_type77)}));;
						}
					}
					else if (_match_expr == jule::Str("&", 1)) {
						_case_begin_1ad6302eb:;
						{
							jule::Ptr<_1aa8553d1_SptrTypeDecl> _109425_kind = jule::new_ptr<_1aa8553d1_SptrTypeDecl>();;
							jule::Slice<jule::Ptr<_1aa854028_TypeDecl>> _109525__generics = jule::Slice<jule::Ptr<_1aa854028_TypeDecl>>::alloc(0LL, 1LL);;
							_1aa964a0c_pushGenericsFromData(_self_, &(_109525__generics), &(_108221_u.get()._field_Expr));
							_109425_kind.get()._field_Elem=_109525__generics[0LL];
							(*(_107945_generics)) = jule::alloc_for_append((*(_107945_generics)),1);(*(_107945_generics)).__push(jule::new_ptr<_1aa854028_TypeDecl>(_1aa854028_TypeDecl{._field_Token=(*(_107973_expr)).get()._field_Token, ._field_Kind=jule::Any(_109425_kind, &__jule_any_type78)}));;
						}
					}
					else {
						_case_begin_1ad62e8a0:;
						{
							_1aa959e0e_pushErr(_self_.ptr(), _108221_u.get()._field_Op, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
							return false;;
						}
					}
					_match_end_1ad62e62a:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1ad62da14:;
			{
				(*(_107945_generics)) = jule::alloc_for_append((*(_107945_generics)),1);(*(_107945_generics)).__push((*(_107973_expr)).get()._field_Kind.cast_ptr<_1aa854028_TypeDecl>(&__jule_any_type94));;
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1ad62d7e4:;
			{
				jule::Ptr<_1aa85b99d_SubIdentExpr> _110921_sexpr = (*(_107973_expr)).get()._field_Kind.cast_ptr<_1aa85b99d_SubIdentExpr>(&__jule_any_type91);;
				return _1aa964644_pushGenericsFromExprSubIdent(_self_, &(_110921_sexpr), _107945_generics, _107973_expr);;
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1ad62d85a:;
			{
				jule::Ptr<_1aa85a20a_IdentExpr> _111221_ident = (*(_107973_expr)).get()._field_Kind.cast_ptr<_1aa85a20a_IdentExpr>(&__jule_any_type85);;
				(*(_107945_generics)) = jule::alloc_for_append((*(_107945_generics)),1);(*(_107945_generics)).__push(jule::new_ptr<_1aa854028_TypeDecl>(_1aa854028_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_1aa8545de_IdentTypeDecl>(_1aa8545de_IdentTypeDecl{._field_Token=_111221_ident.get()._field_Token, ._field_Ident=_111221_ident.get()._field_Ident, ._field_CppLinked=_111221_ident.get()._field_CppLinked, }), &__jule_any_type20)}));;
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1ad62d8c1:;
			{
				{
					auto expr = &((*(_107973_expr)).get()._field_Kind.cast_ptr<_1aa8591c6_TupleExpr>(&__jule_any_type86).get()._field_Expr);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad6355ba:;
					if (it != expr_end) {
						jule::Ptr<_1aa858549_Expr> _112125_texpr = *it;
						{
							if ((!(_1aa964a0c_pushGenericsFromData(_self_, _107945_generics, &(_112125_texpr))))) {
								return false;;
							};
						}
						_iter_next_1ad6355ba:;
						++it;
						goto _iter_begin_1ad6355ba;
					}
					_iter_end_1ad6355ba:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1ad62ce75:;
			{
				jule::Ptr<_1aa85b52a_NsSelectionExpr> _112721_ns = (*(_107973_expr)).get()._field_Kind.cast_ptr<_1aa85b52a_NsSelectionExpr>(&__jule_any_type95);;
				jule::Ptr<_1aa8545de_IdentTypeDecl> _112821_decl = jule::new_ptr<_1aa8545de_IdentTypeDecl>(_1aa8545de_IdentTypeDecl{._field_Token=_112721_ns.get()._field_Ident, ._field_Ident=_112721_ns.get()._field_Ident.get()._field_Kind, });;
				(*(_107945_generics)) = jule::alloc_for_append((*(_107945_generics)),1);(*(_107945_generics)).__push(jule::new_ptr<_1aa854028_TypeDecl>(_1aa854028_TypeDecl{._field_Token=_112821_decl.get()._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1aa8550e5_NamespaceTypeDecl>(_1aa8550e5_NamespaceTypeDecl{._field_Idents=_112721_ns.get()._field_Ns, ._field_Kind=jule::new_ptr<_1aa854028_TypeDecl>(_1aa854028_TypeDecl{._field_Token=_112821_decl.get()._field_Token, ._field_Kind=jule::Any(_112821_decl, &__jule_any_type20)})}), &__jule_any_type96)}));;
			}
		}
		else {
			_case_begin_1ad62cded:;
			{
				_1aa959e0e_pushErr(_self_.ptr(), (*(_107973_expr)).get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1ad62cd98:;
	};
	return true;;
}



inline void _1aa964d4d_evalIdentDeclFromIndexing(jule::Ptr<_1aa959903_Eval> _self_, jule::Ptr<_1aa957d85_Data>* _114950_d, jule::Ptr<_1aa8604a7_IndexingExpr>* _114965_i) {
	jule::Ptr<_1aa876dd6_StructIns> _115017_s = _1aa9871b1_Struct((*(_114950_d)).get()._field_Kind.ptr());;
	if ((_115017_s == nullptr)) {
		_1aa959e0e_pushErr(_self_.ptr(), (*(_114965_i)).get()._field_Expr.get()._field_Token, jule::Str("type @ not supports generics", 28), jule::Slice<jule::Any>::make({jule::Any(_1aa983c6d_Str((*(_114950_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
		(*(_114950_d))=nullptr;
		return;;
	};
	jule::Ptr<_1aa8545de_IdentTypeDecl> _115717_decl = nullptr;;
	{
		auto &_match_expr{ (*(_114965_i)).get()._field_Expr.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1ad63a933:;
			{
				jule::Ptr<_1aa85a20a_IdentExpr> _116021_expr = (*(_114965_i)).get()._field_Expr.get()._field_Kind.cast_ptr<_1aa85a20a_IdentExpr>(&__jule_any_type85);;
				_115717_decl=jule::new_ptr<_1aa8545de_IdentTypeDecl>(_1aa8545de_IdentTypeDecl{._field_Token=_116021_expr.get()._field_Token, ._field_Ident=_116021_expr.get()._field_Ident, ._field_CppLinked=_116021_expr.get()._field_CppLinked, });
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1ad63b99a:;
			{
				jule::Ptr<_1aa85b52a_NsSelectionExpr> _116721_expr = (*(_114965_i)).get()._field_Expr.get()._field_Kind.cast_ptr<_1aa85b52a_NsSelectionExpr>(&__jule_any_type95);;
				_115717_decl=jule::new_ptr<_1aa8545de_IdentTypeDecl>(_1aa8545de_IdentTypeDecl{._field_Token=_116721_expr.get()._field_Ident, ._field_Ident=_116721_expr.get()._field_Ident.get()._field_Kind, });
			}
		}
		else {
			_case_begin_1ad63ad2e:;
			{
				_1aa959e0e_pushErr(_self_.ptr(), (*(_114965_i)).get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				(*(_114950_d))=nullptr;
				return;;
			}
		}
		_match_end_1ad63acc9:;
	};
	if ((!(_1aa964a0c_pushGenericsFromData(_self_, &(_115717_decl.get()._field_Generics), &((*(_114965_i)).get()._field_Index))))) {
		(*(_114950_d))=nullptr;
		return;;
	};
	_115017_s=({ auto _wrap_copy = _1aa96b0a7_typeChecker(_self_.ptr()); _1aa996cd6_fromStruct(&_wrap_copy, &(_115717_decl), &(_115017_s.get()._field_Decl)); });
	if ((_115017_s == nullptr)) {
		(*(_114950_d))=nullptr;
		return;;
	};
	(*(_114950_d)).get()._field_Kind.get()._field_Kind=jule::Trait<_1aa983410_Kind>(_115017_s, 0);
}



inline jule::Bool _1aa9652b0_checkGenericFn(jule::Ptr<_1aa959903_Eval> _self_, jule::Ptr<_1aa88c0c7_FnIns>* _119239_f, jule::Ptr<_1db944d0d_Token>* _119255_et, jule::Any* _119272_model) {
	jule::Bool _119313_ok = _1aa8e631d_reloadFnInsTypes(_self_.get()._field_s, (*(_119239_f)));;
	(*(_119239_f)).get()._field_reloaded=true;
	if ((!(_119313_ok))) {
		return false;;
	};
	jule::Ptr<_1aa88c0c7_FnIns> _119817_existInstance = _1aa88ad51_appendInstance((*(_119239_f)).get()._field_Decl.ptr(), _119239_f);;
	if ((!(_1aa8e5482_checkConstraintsFn(_self_.get()._field_s, _119239_f, _119255_et, _119817_existInstance)))) {
		return false;;
	};
	if ((_119817_existInstance != nullptr)) {
		(*(_119239_f))=_119817_existInstance;
		_1aa980907_updateModelToGenericIns(_119272_model, &(_119817_existInstance));
	} else {
		_1aa903e96_checkFnInsCaller(_self_.get()._field_s, _119239_f, (*(_119255_et)));
	};
	return true;;
}



inline void _1aa965601_evalFnGenericFromIndexing(jule::Ptr<_1aa959903_Eval> _self_, jule::Ptr<_1aa957d85_Data>* _121750_d, jule::Ptr<_1aa8604a7_IndexingExpr>* _121765_i) {
	jule::Slice<jule::Ptr<_1aa854028_TypeDecl>> _121817_generics = jule::Slice<jule::Ptr<_1aa854028_TypeDecl>>::alloc(0LL, 8LLU);;
	if ((!(_1aa964a0c_pushGenericsFromData(_self_, &(_121817_generics), &((*(_121765_i)).get()._field_Index))))) {
		(*(_121750_d))=nullptr;
		return;;
	};
	jule::Ptr<_1aa88c0c7_FnIns> _122417_f = _1aa986e4c_Fn((*(_121750_d)).get()._field_Kind.ptr());;
	jule::I64 _122517_genericsLen = 0LL;;
	if ((_122417_f.get()._field_Decl != nullptr)) {
		_122517_genericsLen=static_cast<jule::I64>(_122417_f.get()._field_Decl.get()._field_Generics.len());
	};
	if ((!(_1aa8dd05c_checkGenericQuantity(_self_.get()._field_s.ptr(), _122517_genericsLen, static_cast<jule::I64>(_121817_generics.len()), (*(_121765_i)).get()._field_Expr.get()._field_Token)))) {
		(*(_121750_d))=nullptr;
		return;;
	};
	_122417_f.get()._field_Generics=jule::Slice<jule::Ptr<_1aa9820e0_InsGeneric>>::alloc(0LL, _122417_f.get()._field_Decl.get()._field_Generics.len());
	{
		auto expr = &(_121817_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad645e7c:;
		if (it != expr_end) {
			jule::Ptr<_1aa854028_TypeDecl> _123621_g = *it;
			{
				jule::Ptr<_1aa957d85_Data> _123721_k = _1aa96b3b5_evalType(_self_.ptr(), _123621_g);;
				if ((_123721_k == nullptr)) {
					(*(_121750_d))=nullptr;
					return;;
				};
				_122417_f.get()._field_Generics = jule::alloc_for_append(_122417_f.get()._field_Generics,1);_122417_f.get()._field_Generics.__push(jule::new_ptr<_1aa9820e0_InsGeneric>(_1aa9820e0_InsGeneric{._field_Kind=_123721_k.get()._field_Kind, }));;
			}
			_iter_next_1ad645e7c:;
			++it;
			goto _iter_begin_1ad645e7c;
		}
		_iter_end_1ad645e7c:;
	};
	if (_1aa88d45d_IsBuiltin(_122417_f.ptr())) {
		return;;
	};
	if (_1aa9652b0_checkGenericFn(_self_, &(_122417_f), &((*(_121765_i)).get()._field_Expr.get()._field_Token), &((*(_121750_d)).get()._field_Model))) {
		(*(_121750_d)).get()._field_Kind.get()._field_Kind=jule::Trait<_1aa983410_Kind>(_122417_f, 1);
	} else {
		(*(_121750_d))=nullptr;
	};
}



inline jule::Ptr<_1aa957d85_Data> _1aa965920_evalIndexing(jule::Ptr<_1aa959903_Eval> _self_, jule::Ptr<_1aa8604a7_IndexingExpr> _125636_i) {
	jule::Ptr<_1aa983872_TypeKind> _125717_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_125717_prefix;
	});;
	jule::Ptr<_1aa957d85_Data> _126117_d = _1aa974126_evalExprKind(_self_, _125636_i.get()._field_Expr.get()._field_Kind);;
	if ((_126117_d == nullptr)) {
		return nullptr;;
	};
	if (_126117_d.get()._field_Decl) {
		_1aa964d4d_evalIdentDeclFromIndexing(_self_, &(_126117_d), &(_125636_i));
		return _126117_d;;
	};
	if ((_1aa986e4c_Fn(_126117_d.get()._field_Kind.ptr()) != nullptr)) {
		_1aa965601_evalFnGenericFromIndexing(_self_, &(_126117_d), &(_125636_i));
		return _126117_d;;
	};
	_1aa957d85_Data _127717_old_d = (*(_126117_d));;
	jule::Ptr<_1aa957d85_Data> _127917_index = _1aa974126_evalExprKind(_self_, _125636_i.get()._field_Index.get()._field_Kind);;
	if ((_127917_index == nullptr)) {
		return nullptr;;
	};
	_126117_d.get()._field_Decl=false;
	_1aa9641c1_toIndexing(_self_.ptr(), &(_126117_d), &(_127917_index), &(_125636_i));
	if (_1aa958748_IsConst(_126117_d.ptr())) {
		_126117_d.get()._field_Decl=false;
		_126117_d.get()._field_Model=jule::Any(_126117_d.get()._field_Constant, &__jule_any_type19);
	} else if (_126117_d.get()._field_Decl) {
		_126117_d.get()._field_Decl=false;
	} else {
		_126117_d.get()._field_Model=jule::Any(jule::new_ptr<_1aa87d948_IndexingExprModel>(_1aa87d948_IndexingExprModel{._field_Token=_125636_i.get()._field_Token, ._field_Expr=jule::new_ptr<_1aa957d85_Data>(_127717_old_d), ._field_Index=_127917_index}), &__jule_any_type46);
	};
	return _126117_d;;
}



inline __jule_tuple_x_1aa957d85_Data__jule_tuple_x_1aa957d85_Data _1aa965c2d_evalSlicingExprs(jule::Ptr<_1aa959903_Eval> _self_, jule::Ptr<_1aa860ab2_SlicingExpr>* _131041_s) {
	__jule_tuple_x_1aa957d85_Data__jule_tuple_x_1aa957d85_Data __jule_func_result;
	jule::Ptr<_1aa983872_TypeKind> _131117_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_131117_prefix;
	});;
	jule::Ptr<_1aa957d85_Data> _131517_l = nullptr;;
	jule::Ptr<_1aa957d85_Data> _131617_r = nullptr;;
	if (((*(_131041_s)).get()._field_Start != nullptr)) {
		_131517_l=_1aa974126_evalExprKind(_self_, (*(_131041_s)).get()._field_Start.get()._field_Kind);
		if ((_131517_l != nullptr)) {
			_1aa96291c_checkIntegerIndexingByData(_self_.ptr(), &(_131517_l), (*(_131041_s)).get()._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	} else {
		_131517_l=jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("int", 3)), 10)}), ._field_Constant=static__1c090208e_NewI64(0LL)});
		_131517_l.get()._field_Model=jule::Any(_131517_l.get()._field_Constant, &__jule_any_type19);
	};
	if (((*(_131041_s)).get()._field_To != nullptr)) {
		_131617_r=_1aa974126_evalExprKind(_self_, (*(_131041_s)).get()._field_To.get()._field_Kind);
		if ((_131617_r != nullptr)) {
			_1aa96291c_checkIntegerIndexingByData(_self_.ptr(), &(_131617_r), (*(_131041_s)).get()._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	};
	__jule_func_result.__jule_result_arg0 = _131517_l;
	__jule_func_result.__jule_result_arg1 = _131617_r;
	return __jule_func_result;;
}



inline void _1aa965ea3_slicingArr(_1aa959903_Eval* _self_, jule::Ptr<_1aa957d85_Data>* _134530_d) {
	jule::Ptr<_1aa983872_TypeKind> _134617_elemType = _1aa986974_Arr((*(_134530_d)).get()._field_Kind.ptr()).get()._field_Elem;;
	(*(_134530_d)).get()._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(jule::new_ptr<_1aa98d52a_Slc>(_1aa98d52a_Slc{._field_Elem=_134617_elemType}), 12)});
	(*(_134530_d)).get()._field_Lvalue=false;
	(*(_134530_d)).get()._field_Mutable=((*(_134530_d)).get()._field_Mutable || (!(_1aa985049_Mutable(_134617_elemType.ptr()))));
}



inline void _1aa96636b_slicingStr(_1aa959903_Eval* _self_, jule::Ptr<_1aa957d85_Data>* _136030_d, jule::Ptr<_1aa957d85_Data>* _136041_l, jule::Ptr<_1aa957d85_Data>* _136052_r) {
	(*(_136030_d)).get()._field_Lvalue=false;
	(*(_136030_d)).get()._field_Mutable=true;
	if ((!(_1aa958748_IsConst((*(_136030_d)).ptr())))) {
		return;;
	};
	if ((((*(_136041_l)) == nullptr) || ((*(_136052_r)) == nullptr))) {
		(*(_136030_d)).get()._field_Constant=nullptr;
		return;;
	};
	if ((_1aa958748_IsConst((*(_136041_l)).ptr()) && _1aa958748_IsConst((*(_136052_r)).ptr()))) {
		jule::I64 _137317_left = _1c0904129_AsI64((*(_136041_l)).get()._field_Constant.ptr());;
		if ((_137317_left < 0LL)) {
			return;;
		};
		jule::Str _137817_s = _1c0903b51_ReadStr((*(_136030_d)).get()._field_Constant.ptr());;
		jule::I64 _137921_right = 0LL;;
		if (((*(_136052_r)) == nullptr)) {
			_137921_right=static_cast<jule::I64>(static_cast<jule::I64>(_137817_s.len()));
		} else {
			_137921_right=static_cast<jule::I64>(_1c0904129_AsI64((*(_136052_r)).get()._field_Constant.ptr()));
		};
		if ((_137317_left > _137921_right)) {
			return;;
		};
		_1c09050e7_SetStr((*(_136030_d)).get()._field_Constant.ptr(), _137817_s.slice(_137317_left, _137921_right));
		(*(_136030_d)).get()._field_Decl=true;
	} else {
		(*(_136030_d)).get()._field_Constant=nullptr;
	};
}



inline void _1aa9667cd_checkSlicing(_1aa959903_Eval* _self_, jule::Ptr<_1aa957d85_Data>* _139636_d, jule::Ptr<_1aa957d85_Data>* _139647_l, jule::Ptr<_1aa957d85_Data>* _139658_r, jule::Ptr<_1aa860ab2_SlicingExpr>* _139669_s) {
	{
		
		if ((_1aa986974_Arr((*(_139636_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad65c69c:;
			{
				_1aa965ea3_slicingArr(_self_, _139636_d);
				return;;
			}
		}
		else if ((_1aa986bd8_Slc((*(_139636_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad65c724:;
			{
				return;;
			}
		}
		else if ((_1aa985c5e_Prim((*(_139636_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad65c79b:;
			{
				jule::Ptr<_1aa989339_Prim> _140417_prim = _1aa985c5e_Prim((*(_139636_d)).get()._field_Kind.ptr());;
				{
					
					if (_1aa98c56d_IsStr(_140417_prim.ptr())) {
						_case_begin_1ad65eb88:;
						{
							_1aa96636b_slicingStr(_self_, _139636_d, _139647_l, _139658_r);
							return;;
						}
					}
					_match_end_1ad65eade:;
				};
			}
		}
		_match_end_1ad65c57b:;
	};
	_1aa959e0e_pushErr(_self_, (*(_139669_s)).get()._field_Token, jule::Str("type @ is not support slicing", 29), jule::Slice<jule::Any>::make({jule::Any(_1aa983c6d_Str((*(_139636_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
}



inline jule::Ptr<_1aa957d85_Data> _1aa966adb_evalSlicing(jule::Ptr<_1aa959903_Eval> _self_, jule::Ptr<_1aa860ab2_SlicingExpr> _141535_s) {
	jule::Ptr<_1aa957d85_Data> _141617_d = _1aa974126_evalExprKind(_self_, _141535_s.get()._field_Expr.get()._field_Kind);;
	if ((_141617_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1aa957d85_Data> _142118_l;;
	jule::Ptr<_1aa957d85_Data> _142125_r;;
	({
		__jule_tuple_x_1aa957d85_Data__jule_tuple_x_1aa957d85_Data __jule_assign_result = _1aa965c2d_evalSlicingExprs(_self_, &(_141535_s));
		_142118_l = __jule_assign_result.__jule_result_arg0;
		_142125_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_142118_l == nullptr)) {
		return _141617_d;;
	};
	_141617_d.get()._field_Decl=false;
	_1aa9667cd_checkSlicing(_self_.ptr(), &(_141617_d), &(_142118_l), &(_142125_r), &(_141535_s));
	if (_1aa958748_IsConst(_141617_d.ptr())) {
		_141617_d.get()._field_Decl=false;
		_141617_d.get()._field_Model=jule::Any(_141617_d.get()._field_Constant, &__jule_any_type19);
	} else if (_141617_d.get()._field_Decl) {
		_141617_d.get()._field_Decl=false;
	} else {
		jule::Ptr<_1aa87eb69_SlicingExprModel> _143921_model = jule::new_ptr<_1aa87eb69_SlicingExprModel>(_1aa87eb69_SlicingExprModel{._field_Token=_141535_s.get()._field_Token, ._field_Expr=_141617_d.get()._field_Model, ._field_Left=_142118_l.get()._field_Model, });;
		if ((_142125_r != nullptr)) {
			_143921_model.get()._field_Right=_142125_r.get()._field_Model;
		};
		_141617_d.get()._field_Model=jule::Any(_143921_model, &__jule_any_type97);
	};
	return _141617_d;;
}



inline void _1aa966ea4_castPtr(_1aa959903_Eval* _self_, jule::Ptr<_1aa983872_TypeKind> _145230_t, jule::Ptr<_1aa957d85_Data> _145248_d, jule::Ptr<_1db944d0d_Token> _145258_errorToken) {
	_145248_d.get()._field_Constant=nullptr;
	jule::Ptr<_1aa98cabd_Sptr> _145413_sptr = _1aa985ec3_Sptr(_145248_d.get()._field_Kind.ptr());;
	if ((_145413_sptr != nullptr)) {
		if ((!(_1aa98407b_Equal(_1aa986237_Ptr(_145230_t.ptr()).get()._field_Elem, _145413_sptr.get()._field_Elem)))) {
			_1aa959e0e_pushErr(_self_, _145258_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1aa983c6d_Str(_145248_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1aa983c6d_Str(_145230_t.ptr()), &__jule_any_type5)}));
		};
		return;;
	};
	if ((!(_1aa95a849_isUnsafe(_self_)))) {
		_1aa959e0e_pushErr(_self_, _145258_errorToken, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1aa989339_Prim> _146713_prim = _1aa985c5e_Prim(_145248_d.get()._field_Kind.ptr());;
	if (((_1aa986237_Ptr(_145248_d.get()._field_Kind.ptr()) == nullptr) && ((_146713_prim == nullptr) || (!(_1dc5c1a33_IsInt(_1aa98969c_Str(_146713_prim.ptr()))))))) {
		_1aa959e0e_pushErr(_self_, _145258_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1aa983c6d_Str(_145248_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1aa983c6d_Str(_145230_t.ptr()), &__jule_any_type5)}));
	};
}



inline void _1aa96736c_castStruct(_1aa959903_Eval* _self_, jule::Ptr<_1aa983872_TypeKind> _147333_t, jule::Ptr<_1aa957d85_Data> _147351_d, jule::Ptr<_1db944d0d_Token> _147361_errorToken) {
	_147351_d.get()._field_Constant=nullptr;
	jule::Ptr<_1aa89b647_Trait> _147517_tr = _1aa987425_Trait(_147351_d.get()._field_Kind.ptr());;
	if ((_147517_tr == nullptr)) {
		_1aa959e0e_pushErr(_self_, _147361_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1aa983c6d_Str(_147351_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1aa983c6d_Str(_147333_t.ptr()), &__jule_any_type5)}));
		return;;
	};
	jule::Ptr<_1aa876dd6_StructIns> _148117_s = _1aa9871b1_Struct(_147333_t.ptr());;
	_1ad66c47b_pushReference(_self_, &(_148117_s));
	if ((!(_1aa8755dd_IsImplements(_148117_s.get()._field_Decl.ptr(), _147517_tr)))) {
		_1aa959e0e_pushErr(_self_, _147361_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1aa983c6d_Str(_147351_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1aa983c6d_Str(_147333_t.ptr()), &__jule_any_type5)}));
	};
}



inline void _1aa967735_castRef(_1aa959903_Eval* _self_, jule::Ptr<_1aa983872_TypeKind> _148930_t, jule::Ptr<_1aa957d85_Data> _148948_d, jule::Ptr<_1db944d0d_Token> _148958_errorToken) {
	_148948_d.get()._field_Constant=nullptr;
	jule::Ptr<_1aa98cabd_Sptr> _149117_sptr = _1aa985ec3_Sptr(_148930_t.ptr());;
	jule::Ptr<_1aa991132_Ptr> _149317_ptr = _1aa986237_Ptr(_148948_d.get()._field_Kind.ptr());;
	if (((_149317_ptr != nullptr) && _1aa98407b_Equal(_149117_sptr.get()._field_Elem, _149317_ptr.get()._field_Elem))) {
		if ((!(_1aa95a849_isUnsafe(_self_)))) {
			_1aa959e0e_pushErr(_self_, _148958_errorToken, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_1aa9871b1_Struct(_149117_sptr.get()._field_Elem.ptr()) != nullptr)) {
		_1aa96736c_castStruct(_self_, _149117_sptr.get()._field_Elem, _148948_d, _148958_errorToken);
		return;;
	};
	_1aa959e0e_pushErr(_self_, _148958_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1aa983c6d_Str(_148948_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1aa983c6d_Str(_148930_t.ptr()), &__jule_any_type5)}));
}



inline void _1aa967aed_castSlc(_1aa959903_Eval* _self_, jule::Ptr<_1aa983872_TypeKind> _151130_t, jule::Ptr<_1aa957d85_Data> _151148_d, jule::Ptr<_1db944d0d_Token> _151158_errorToken) {
	_151148_d.get()._field_Constant=nullptr;
	if ((_1aa98649b_Enum(_151148_d.get()._field_Kind.ptr()) != nullptr)) {
		if (((_1aa985c5e_Prim(_1aa98649b_Enum(_151148_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()) == nullptr) || (!(_1aa98c56d_IsStr(_1aa985c5e_Prim(_1aa98649b_Enum(_151148_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()).ptr()))))) {
			_1aa959e0e_pushErr(_self_, _151158_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1aa983c6d_Str(_151148_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1aa983c6d_Str(_151130_t.ptr()), &__jule_any_type5)}));
			return;;
		};
	} else if (((_1aa985c5e_Prim(_151148_d.get()._field_Kind.ptr()) == nullptr) || (!(_1aa98c56d_IsStr(_1aa985c5e_Prim(_151148_d.get()._field_Kind.ptr()).ptr()))))) {
		_1aa959e0e_pushErr(_self_, _151158_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1aa983c6d_Str(_151148_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1aa983c6d_Str(_151130_t.ptr()), &__jule_any_type5)}));
		return;;
	};
	_151130_t=_1aa986bd8_Slc(_151130_t.ptr()).get()._field_Elem;
	jule::Ptr<_1aa989339_Prim> _152413_prim = _1aa985c5e_Prim(_151130_t.ptr());;
	if (((_152413_prim == nullptr) || ((!(_1aa98ab43_IsU8(_152413_prim.ptr()))) && (!(_1aa98a66a_IsI32(_152413_prim.ptr())))))) {
		_1aa959e0e_pushErr(_self_, _151158_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1aa983c6d_Str(_151148_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1aa983c6d_Str(_151130_t.ptr()), &__jule_any_type5)}));
	};
}



inline void _1aa967e1c_castStr(_1aa959903_Eval* _self_, jule::Ptr<_1aa957d85_Data> _153030_d, jule::Ptr<_1db944d0d_Token> _153040_errorToken) {
	_153030_d.get()._field_Constant=nullptr;
	if ((_1aa98649b_Enum(_153030_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1aa89ddca_Enum> _153321_e = _1aa98649b_Enum(_153030_d.get()._field_Kind.ptr());;
		if (((_1aa985c5e_Prim(_153321_e.get()._field_Kind.get()._field_Kind.ptr()) != nullptr) && _1aa98c56d_IsStr(_1aa985c5e_Prim(_153321_e.get()._field_Kind.get()._field_Kind.ptr()).ptr()))) {
			return;;
		};
	};
	if ((_1aa985c5e_Prim(_153030_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1aa989339_Prim> _154017_prim = _1aa985c5e_Prim(_153030_d.get()._field_Kind.ptr());;
		if (((!(_1aa98ab43_IsU8(_154017_prim.ptr()))) && (!(_1aa98a66a_IsI32(_154017_prim.ptr()))))) {
			_1aa959e0e_pushErr(_self_, _153040_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type5),jule::Any(_1aa983c6d_Str(_153030_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
		};
		return;;
	};
	if ((_1aa986bd8_Slc(_153030_d.get()._field_Kind.ptr()) == nullptr)) {
		_1aa959e0e_pushErr(_self_, _153040_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type5),jule::Any(_1aa983c6d_Str(_153030_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return;;
	};
	jule::Ptr<_1aa983872_TypeKind> _155217_t = _1aa986bd8_Slc(_153030_d.get()._field_Kind.ptr()).get()._field_Elem;;
	jule::Ptr<_1aa989339_Prim> _155313_prim = _1aa985c5e_Prim(_155217_t.ptr());;
	if (((_155313_prim == nullptr) || ((!(_1aa98ab43_IsU8(_155313_prim.ptr()))) && (!(_1aa98a66a_IsI32(_155313_prim.ptr())))))) {
		_1aa959e0e_pushErr(_self_, _153040_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type5),jule::Any(_1aa983c6d_Str(_153030_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
	};
}



inline void _1aa9682d5_castInt(_1aa959903_Eval* _self_, jule::Ptr<_1aa983872_TypeKind> _155930_t, jule::Ptr<_1aa957d85_Data> _155948_d, jule::Ptr<_1db944d0d_Token> _155958_errorToken) {
	if (_1aa958748_IsConst(_155948_d.ptr())) {
		jule::Ptr<_1aa989339_Prim> _156117_prim = _1aa985c5e_Prim(_155930_t.ptr());;
		{
			
			if (_1dc5c14a0_IsSigInt(_156117_prim.get()._field_Kind)) {
				_case_begin_1ad6872a9:;
				{
					_1c0904877_SetI64(_155948_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1c0904129_AsI64(_155948_d.get()._field_Constant.ptr())));
				}
			}
			else if (_1dc5c178b_IsUnsigInt(_156117_prim.get()._field_Kind)) {
				_case_begin_1ad687331:;
				{
					_1c0904aec_SetU64(_155948_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1c090438d_AsU64(_155948_d.get()._field_Constant.ptr())));
				}
			}
			_match_end_1ad6871ee:;
		};
	} else {
		_155948_d.get()._field_Constant=nullptr;
	};
	if ((_1aa98649b_Enum(_155948_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1aa89ddca_Enum> _157317_e = _1aa98649b_Enum(_155948_d.get()._field_Kind.ptr());;
		if (_1c0901698_IsNum(_1aa983c6d_Str(_157317_e.get()._field_Kind.get()._field_Kind.ptr()))) {
			return;;
		};
	};
	if ((_1aa985ec3_Sptr(_155948_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1aa989339_Prim> _158017_prim = _1aa985c5e_Prim(_155930_t.ptr());;
		if ((!(_1aa98c095_IsUintptr(_158017_prim.ptr())))) {
			_1aa959e0e_pushErr(_self_, _155958_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1aa983c6d_Str(_155948_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1aa983c6d_Str(_155930_t.ptr()), &__jule_any_type5)}));
		};
		return;;
	};
	if ((_1aa986237_Ptr(_155948_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1aa989339_Prim> _158717_prim = _1aa985c5e_Prim(_155930_t.ptr());;
		if (_1aa98c095_IsUintptr(_158717_prim.ptr())) {
		} else if ((!(_1aa95a849_isUnsafe(_self_)))) {
			_1aa959e0e_pushErr(_self_, _155958_errorToken, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	jule::Ptr<_1aa989339_Prim> _159613_prim = _1aa985c5e_Prim(_155948_d.get()._field_Kind.ptr());;
	if (((_159613_prim != nullptr) && _1c0901698_IsNum(_1aa98969c_Str(_159613_prim.ptr())))) {
		return;;
	};
	_1aa959e0e_pushErr(_self_, _155958_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1aa983c6d_Str(_155948_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1aa983c6d_Str(_155930_t.ptr()), &__jule_any_type5)}));
}



inline void _1aa96869d_castNum(_1aa959903_Eval* _self_, jule::Ptr<_1aa983872_TypeKind> _160430_t, jule::Ptr<_1aa957d85_Data> _160448_d, jule::Ptr<_1db944d0d_Token> _160458_errorToken) {
	if (_1aa958748_IsConst(_160448_d.ptr())) {
		jule::Ptr<_1aa989339_Prim> _160617_prim = _1aa985c5e_Prim(_160430_t.ptr());;
		{
			
			if (_1dc5c1d52_IsFloat(_160617_prim.get()._field_Kind)) {
				_case_begin_1ad80ac57:;
				{
					_1c090536c_SetF64(_160448_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_1c0904602_AsF64(_160448_d.get()._field_Constant.ptr())));
				}
			}
			else if (_1dc5c14a0_IsSigInt(_160617_prim.get()._field_Kind)) {
				_case_begin_1ad80acce:;
				{
					_1c0904877_SetI64(_160448_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1c0904129_AsI64(_160448_d.get()._field_Constant.ptr())));
				}
			}
			else if (_1dc5c178b_IsUnsigInt(_160617_prim.get()._field_Kind)) {
				_case_begin_1ad80ad56:;
				{
					_1c0904aec_SetU64(_160448_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1c090438d_AsU64(_160448_d.get()._field_Constant.ptr())));
				}
			}
			_match_end_1ad80ab8b:;
		};
	} else {
		_160448_d.get()._field_Constant=nullptr;
	};
	if ((_1aa98649b_Enum(_160448_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1aa89ddca_Enum> _162017_e = _1aa98649b_Enum(_160448_d.get()._field_Kind.ptr());;
		if (_1c0901698_IsNum(_1aa983c6d_Str(_162017_e.get()._field_Kind.get()._field_Kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1aa989339_Prim> _162613_prim = _1aa985c5e_Prim(_160448_d.get()._field_Kind.ptr());;
	if (((_162613_prim != nullptr) && _1c0901698_IsNum(_1aa98969c_Str(_162613_prim.ptr())))) {
		return;;
	};
	_1aa959e0e_pushErr(_self_, _160458_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1aa983c6d_Str(_160448_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1aa983c6d_Str(_160430_t.ptr()), &__jule_any_type5)}));
}



inline void _1aa968a66_castPrim(_1aa959903_Eval* _self_, jule::Ptr<_1aa983872_TypeKind> _163431_t, jule::Ptr<_1aa957d85_Data> _163449_d, jule::Ptr<_1db944d0d_Token> _163459_errorToken) {
	jule::Ptr<_1aa989339_Prim> _163513_prim = _1aa985c5e_Prim(_163431_t.ptr());;
	{
		
		if (_1aa98c7d2_IsAny(_163513_prim.ptr())) {
			_case_begin_1ad811675:;
			{
				_163449_d.get()._field_Constant=nullptr;
			}
		}
		else if (_1aa98c56d_IsStr(_163513_prim.ptr())) {
			_case_begin_1ad811bd6:;
			{
				_1aa967e1c_castStr(_self_, _163449_d, _163459_errorToken);
			}
		}
		else if (_1dc5c1a33_IsInt(_1aa98969c_Str(_163513_prim.ptr()))) {
			_case_begin_1ad811c4c:;
			{
				_1aa9682d5_castInt(_self_, _163431_t, _163449_d, _163459_errorToken);
			}
		}
		else if (_1c0901698_IsNum(_1aa98969c_Str(_163513_prim.ptr()))) {
			_case_begin_1ad811cc4:;
			{
				_1aa96869d_castNum(_self_, _163431_t, _163449_d, _163459_errorToken);
			}
		}
		else {
			_case_begin_1ad811b70:;
			{
				_1aa959e0e_pushErr(_self_, _163459_errorToken, jule::Str("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_1aa983c6d_Str(_163431_t.ptr()), &__jule_any_type5)}));
			}
		}
		_match_end_1ad811b09:;
	};
}



inline void _1aa968d85_castConstant(_1aa959903_Eval* _self_, jule::Ptr<_1aa983872_TypeKind>* _165136_t, jule::Ptr<_1aa957d85_Data>* _165155_d) {
	if ((((*(_165155_d)) == nullptr) || (!(_1aa958748_IsConst((*(_165155_d)).ptr()))))) {
		return;;
	};
	jule::Ptr<_1aa989339_Prim> _165513_prim = _1aa985c5e_Prim((*(_165136_t)).ptr());;
	_1aa9803eb_castConstByType(&(_165513_prim.get()._field_Kind), _165155_d);
	(*(_165155_d)).get()._field_Model=jule::Any((*(_165155_d)).get()._field_Constant, &__jule_any_type19);
}



inline void _1aa96924d_castTypeEnum(_1aa959903_Eval* _self_, jule::Ptr<_1aa983872_TypeKind>* _166036_t, jule::Ptr<_1aa957d85_Data>* _166055_d, jule::Ptr<_1db944d0d_Token>* _166070_errorToken) {
	jule::I64 _166113_n = (*(_self_))._field_s.get()._field_errors.len();;
	if ((!(_1aa8e43a4_checkTypeCompatibility((*(_self_))._field_s, &((*(_166055_d)).get()._field_Kind), _166036_t, _166070_errorToken)))) {
		(*(_self_))._field_s.get()._field_errors=(*(_self_))._field_s.get()._field_errors.slice(0LL, _166113_n);
		_1aa959e0e_pushErr(_self_, (*(_166070_errorToken)), jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1aa983c6d_Str((*(_166055_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1aa983c6d_Str((*(_166036_t)).ptr()), &__jule_any_type5)}));
	};
	(*(_166055_d)).get()._field_Constant=nullptr;
}



inline void _1aa969616_castTypeEnumT(_1aa959903_Eval* _self_, jule::Ptr<_1aa983872_TypeKind>* _166937_t, jule::Ptr<_1aa957d85_Data>* _166956_d, jule::Ptr<_1db944d0d_Token>* _166971_errorToken) {
	jule::I64 _167013_n = (*(_self_))._field_s.get()._field_errors.len();;
	if ((!(_1aa8e43a4_checkTypeCompatibility((*(_self_))._field_s, _166937_t, &((*(_166956_d)).get()._field_Kind), _166971_errorToken)))) {
		(*(_self_))._field_s.get()._field_errors=(*(_self_))._field_s.get()._field_errors.slice(0LL, _167013_n);
		_1aa959e0e_pushErr(_self_, (*(_166971_errorToken)), jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1aa983c6d_Str((*(_166956_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1aa983c6d_Str((*(_166937_t)).ptr()), &__jule_any_type5)}));
	};
	(*(_166956_d)).get()._field_Constant=nullptr;
}



inline jule::Ptr<_1aa957d85_Data> _1aa969a67_evalCastByTypeNData(_1aa959903_Eval* _self_, jule::Ptr<_1aa983872_TypeKind> _167842_t, jule::Ptr<_1aa957d85_Data> _167860_d, jule::Ptr<_1db944d0d_Token> _167874_errorToken) {
	if (((_167860_d != nullptr) && _167860_d.get()._field_Decl)) {
		_1aa959e0e_pushErr(_self_, _167874_errorToken, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		
		if (_1aa958270_IsNil(_167860_d.ptr())) {
			_case_begin_1ad81cd68:;
			{
				if ((!(_1aa9852ad_NilCompatible(_167842_t.ptr())))) {
					_1aa959e0e_pushErr(_self_, _167874_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("<nil>", 5), &__jule_any_type5),jule::Any(_1aa983c6d_Str(_167842_t.ptr()), &__jule_any_type5)}));
				};
				_167860_d.get()._field_Constant=nullptr;
			}
		}
		else if (((_1aa985c5e_Prim(_167860_d.get()._field_Kind.ptr()) != nullptr) && _1aa98c7d2_IsAny(_1aa985c5e_Prim(_167860_d.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1ad81c50a:;
			{
				if ((_1aa98649b_Enum(_167842_t.ptr()) != nullptr)) {
					_1aa959e0e_pushErr(_self_, _167874_errorToken, jule::Str("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
					_1aa95a22d_pushSuggestion(_self_, jule::Str("try cast to type of enum fields instead of enum", 47), jule::Slice<jule::Any>());
				} else if ((_1aa986710_TypeEnum(_167842_t.ptr()) != nullptr)) {
					_1aa959e0e_pushErr(_self_, _167874_errorToken, jule::Str("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
				};
				_167860_d.get()._field_Constant=nullptr;
			}
		}
		else if ((_1aa986710_TypeEnum(_167860_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad81c285:;
			{
				_1aa96924d_castTypeEnum(_self_, &(_167842_t), &(_167860_d), &(_167874_errorToken));
			}
		}
		else if ((_1aa986710_TypeEnum(_167842_t.ptr()) != nullptr)) {
			_case_begin_1ad81c2eb:;
			{
				_1aa969616_castTypeEnumT(_self_, &(_167842_t), &(_167860_d), &(_167874_errorToken));
			}
		}
		else if ((_1aa986237_Ptr(_167842_t.ptr()) != nullptr)) {
			_case_begin_1ad81c362:;
			{
				_1aa966ea4_castPtr(_self_, _167842_t, _167860_d, _167874_errorToken);
			}
		}
		else if ((_1aa985ec3_Sptr(_167842_t.ptr()) != nullptr)) {
			_case_begin_1ad81ceab:;
			{
				_1aa967735_castRef(_self_, _167842_t, _167860_d, _167874_errorToken);
			}
		}
		else if ((_1aa986bd8_Slc(_167842_t.ptr()) != nullptr)) {
			_case_begin_1ad81d022:;
			{
				_1aa967aed_castSlc(_self_, _167842_t, _167860_d, _167874_errorToken);
			}
		}
		else if ((_1aa9871b1_Struct(_167842_t.ptr()) != nullptr)) {
			_case_begin_1ad81d088:;
			{
				_1aa96736c_castStruct(_self_, _167842_t, _167860_d, _167874_errorToken);
			}
		}
		else if ((_1aa985c5e_Prim(_167842_t.ptr()) != nullptr)) {
			_case_begin_1ad81d110:;
			{
				_1aa968a66_castPrim(_self_, _167842_t, _167860_d, _167874_errorToken);
				_1aa968d85_castConstant(_self_, &(_167842_t), &(_167860_d));
			}
		}
		else {
			_case_begin_1ad81c164:;
			{
				_1aa959e0e_pushErr(_self_, _167874_errorToken, jule::Str("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_1aa983c6d_Str(_167842_t.ptr()), &__jule_any_type5)}));
				_167860_d=nullptr;
			}
		}
		_match_end_1ad81c10e:;
	};
	if ((_167860_d == nullptr)) {
		return nullptr;;
	};
	_167860_d.get()._field_Mutable=(_167860_d.get()._field_Mutable || ((!(_1aa985049_Mutable(_167860_d.get()._field_Kind.ptr()))) && _1aa985049_Mutable(_167842_t.ptr())));
	_167860_d.get()._field_Lvalue=false;
	_167860_d.get()._field_Decl=false;
	if (((_1aa98649b_Enum(_167860_d.get()._field_Kind.ptr()) == nullptr) || (!(_1aa98407b_Equal(_1aa98649b_Enum(_167860_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind, _167842_t))))) {
		_1aa97e8b2_applyCastKind(&(_167860_d), &(_167842_t));
		_167860_d.get()._field_Model.cast_ptr<_1aa87c76b_CastingExprModel>(&__jule_any_type98).get()._field_Token=_167874_errorToken;
	} else {
		_167860_d.get()._field_Kind=_167842_t;
	};
	_167860_d.get()._field_untyped=false;
	if (_1aa958748_IsConst(_167860_d.ptr())) {
		_167860_d.get()._field_Constant.get()._field_Kind=_1aa985c5e_Prim(_167842_t.ptr()).get()._field_Kind;
	};
	return _167860_d;;
}



inline jule::Ptr<_1aa957d85_Data> _1aa969eb8_evalCastT(jule::Ptr<_1aa959903_Eval> _self_, jule::Ptr<_1aa983872_TypeKind>* _174334_t, jule::Ptr<_1aa858549_Expr>* _174353_e, jule::Ptr<_1db944d0d_Token>* _174368_et) {
	jule::Ptr<_1aa983872_TypeKind> _174417_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_174417_prefix;
	});;
	if ((_1aa986bd8_Slc((*(_174334_t)).ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*(_174353_e)).get()._field_Kind };
			
			if (_match_expr.type == &__jule_any_type99) {
				_case_begin_1ad82a9be:;
				{
					_self_.get()._field_prefix=(*(_174334_t));
				}
			}
			_match_end_1ad82a925:;
		};
	};
	jule::Ptr<_1aa957d85_Data> _175317_d = _1aa974126_evalExprKind(_self_, (*(_174353_e)).get()._field_Kind);;
	if (((_175317_d == nullptr) || (_self_.get()._field_prefix != nullptr))) {
		return _175317_d;;
	};
	return _1aa969a67_evalCastByTypeNData(_self_.ptr(), (*(_174334_t)), _175317_d, (*(_174368_et)));;
}



inline jule::Ptr<_1aa957d85_Data> _1aa96a2c6_evalCast(jule::Ptr<_1aa959903_Eval> _self_, jule::Ptr<_1aa85b173_CastExpr> _176032_c) {
	jule::Ptr<_1aa9889ba_TypeSymbol> _176117_t = _1aa8916b4_buildType(_176032_c.get()._field_Kind);;
	jule::Bool _176213_ok = _1aa8e22c5_checkType(_self_.get()._field_s, &(_176117_t), _self_.get()._field_lookup);;
	if ((!(_176213_ok))) {
		return nullptr;;
	};
	return _1aa969eb8_evalCastT(_self_, &(_176117_t.get()._field_Kind), &(_176032_c.get()._field_Expr), &(_176032_c.get()._field_Kind.get()._field_Token));;
}



inline jule::Ptr<_1aa957d85_Data> _1aa96a5d4_evalNsSelection(_1aa959903_Eval* _self_, jule::Ptr<_1aa85b52a_NsSelectionExpr> _176934_s) {
	jule::Str _177013_path = _1aa99c528_buildLinkPathByTokens(&(_176934_s.get()._field_Ns));;
	jule::Ptr<_1aa8d101c_ImportInfo> _177117_imp = _1aa9a0509_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1aa99d9be_SelectPackage((*(_self_))._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1aa8d101c_ImportInfo>)>([=](jule::Ptr<_1aa8d101c_ImportInfo> _177152_imp) mutable -> jule::Bool {
		if (((_176934_s.get()._field_Ns.len() == 1LL) && (_177152_imp.get()._field_Alias == _177013_path))) {
			return true;;
		};
		return ((_177152_imp.get()._field_LinkPath == _177013_path) && _1aa8d385a_isAccessibleViaSelection(_177152_imp.ptr()));;
	}));;
	if ((_177117_imp == nullptr)) {
		_1aa959e0e_pushErr(_self_, _176934_s.get()._field_Ns[0LL], jule::Str("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_177013_path, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Trait<_1aa9a0509_Lookup> _178317_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait<_1aa9a0509_Lookup>(_177117_imp, 1);
	;
	_1aa95a5d5_disallowBuiltin(_self_);
	jule::Any _178817_def = _1aa95c340_getDef(_self_, _176934_s.get()._field_Ident.get()._field_Kind, false);;
	_1aa95a409_allowBuiltin(_self_);
	(*(_self_))._field_lookup=_178317_lookup;
	jule::Ptr<_1aa957d85_Data> _179117_d = _1aa960d27_evalDef(_self_, _178817_def, _176934_s.get()._field_Ident);;
	return _179117_d;;
}



inline jule::Ptr<_1aa957d85_Data> _1aa96aa35_evalStructLitExplicit(jule::Ptr<_1aa959903_Eval> _self_, jule::Ptr<_1aa876dd6_StructIns> _179545_s, jule::Slice<jule::Ptr<_1aa858549_Expr>> _179613_exprs, jule::Ptr<_1db944d0d_Token> _179633_errorToken) {
	jule::Bool _179713_ok = _1aa8dd05c_checkGenericQuantity(_self_.get()._field_s.ptr(), static_cast<jule::I64>(_179545_s.get()._field_Decl.get()._field_Generics.len()), static_cast<jule::I64>(_179545_s.get()._field_Generics.len()), _179633_errorToken);;
	if ((!(_179713_ok))) {
		return nullptr;;
	};
	if (((_self_.get()._field_field != nullptr) && (_self_.get()._field_field.get()._field_Decl.get()._field_Owner == _179545_s.get()._field_Decl))) {
		_1aa959e0e_pushErr(_self_.ptr(), _179633_errorToken, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any(_179545_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5)}));
	};
	_1ad66c47b_pushReference(_self_.ptr(), &(_179545_s));
	_1aa95e232_checkDeprecated(_self_.ptr(), &(_179545_s.get()._field_Decl.get()._field_Directives), _179633_errorToken);
	_1aa9475c2_structLitChecker _181017_slc = _1aa9475c2_structLitChecker{._field_e=_self_, ._field_errorToken=_179633_errorToken, ._field_s=_179545_s, };;
	_1aa948b67_check(&_181017_slc, &(_179613_exprs));
	jule::Ptr<_1aa957d85_Data> _181717_d = jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_179545_s, 0)}), ._field_Mutable=(!(_self_.get()._field_immutable)), ._field_Model=jule::Any(jule::new_ptr<_1aa87be0d_StructLitExprModel>(_1aa87be0d_StructLitExprModel{._field_Strct=_179545_s, ._field_Args=_181017_slc._field_args}), &__jule_any_type100), });;
	if (_179545_s.get()._field_Decl.get()._field_CppLinked) {
		_181717_d.get()._field_Kind.get()._field_CppIdent=_179545_s.get()._field_Decl.get()._field_Ident;
	};
	return _181717_d;;
}



inline jule::Ptr<_1aa957d85_Data> _1aa96ad43_evalStructLit(jule::Ptr<_1aa959903_Eval> _self_, jule::Ptr<_1aa85d708_StructLit> _183337_lit) {
	jule::Ptr<_1aa9889ba_TypeSymbol> _183417_t = _1aa8916b4_buildType(_183337_lit.get()._field_Kind);;
	jule::Bool _183513_ok = _1aa8e22c5_checkType(_self_.get()._field_s, &(_183417_t), _self_.get()._field_lookup);;
	if ((!(_183513_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1aa876dd6_StructIns> _184017_s = _1aa9871b1_Struct(_183417_t.get()._field_Kind.ptr());;
	if ((_184017_s == nullptr)) {
		if ((_1aa985ec3_Sptr(_183417_t.get()._field_Kind.ptr()) != nullptr)) {
			_184017_s=_1aa9871b1_Struct(_1aa985ec3_Sptr(_183417_t.get()._field_Kind.ptr()).get()._field_Elem.ptr());
			if ((_184017_s != nullptr)) {
				goto _julec_label_eval;
			};
		};
		_1aa959e0e_pushErr(_self_.ptr(), _183337_lit.get()._field_Kind.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_eval:;
	jule::Ptr<_1aa957d85_Data> _185317_d = _1aa96aa35_evalStructLitExplicit(_self_, _184017_s, _183337_lit.get()._field_Exprs, _183337_lit.get()._field_Kind.get()._field_Token);;
	if ((_1aa985ec3_Sptr(_183417_t.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1aa87be0d_StructLitExprModel> _185521_model = _185317_d.get()._field_Model.cast_ptr<_1aa87be0d_StructLitExprModel>(&__jule_any_type100);;
		_1aa97d273_makeStructLitAlloc(&(_185317_d), &(_185521_model));
	};
	return _185317_d;;
}



inline _1aa992e58_typeChecker _1aa96b0a7_typeChecker(_1aa959903_Eval* _self_) {
	return _1aa8e11b4_typeChecker((*(_self_))._field_s, (*(_self_))._field_lookup, nullptr, nullptr);;
}



inline jule::Ptr<_1aa957d85_Data> _1aa96b3b5_evalType(_1aa959903_Eval* _self_, jule::Ptr<_1aa854028_TypeDecl> _186531_t) {
	jule::Ptr<_1aa9889ba_TypeSymbol> _186617_tk = _1aa8916b4_buildType(_186531_t);;
	jule::Bool _186713_ok = _1aa8e22c5_checkType((*(_self_))._field_s, &(_186617_tk), (*(_self_))._field_lookup);;
	if ((!(_186713_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=_186617_tk.get()._field_Kind, ._field_Model=jule::Any(_186617_tk.get()._field_Kind, &__jule_any_type89), ._field_Decl=true, });;
}



inline void _1aa96b6d4_callTypeFn(jule::Ptr<_1aa959903_Eval> _self_, jule::Ptr<_1aa85c52b_FnCallExpr>* _187835_fc, jule::Ptr<_1aa957d85_Data>* _187857_d) {
	if (((*(_187835_fc)).get()._field_Args.len() < 1LL)) {
		_1aa959e0e_pushErr(_self_.ptr(), (*(_187835_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1), &__jule_any_type5)}));
	} else if (((*(_187835_fc)).get()._field_Args.len() > 1LL)) {
		_1aa959e0e_pushErr(_self_.ptr(), (*(_187835_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(_1aa983c6d_Str((*(_187857_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
	} else if ((*(_187835_fc)).get()._field_IsCo) {
		_1aa959e0e_pushErr(_self_.ptr(), (*(_187835_fc)).get()._field_Token, jule::Str("concurrent calls are not allowed for type-cast calls", 52), jule::Slice<jule::Any>());
		(*(_187857_d))=nullptr;
		return;;
	} else if (((*(_187835_fc)).get()._field_Exception != nullptr)) {
		_1aa959e0e_pushErr(_self_.ptr(), (*(_187835_fc)).get()._field_Token, jule::Str("exceptionals are not supported for type-cast call", 49), jule::Slice<jule::Any>());
		(*(_187857_d))=nullptr;
		return;;
	};
	if (((*(_187835_fc)).get()._field_Args.len() > 0LL)) {
		jule::Ptr<_1aa858549_Expr> _189421_arg = (*(_187835_fc)).get()._field_Args[0LL];;
		(*(_187857_d))=_1aa969eb8_evalCastT(_self_, &((*(_187857_d)).get()._field_Kind), &(_189421_arg), &(_189421_arg.get()._field_Token));
		return;;
	};
	if (((*(_187857_d)) != nullptr)) {
		(*(_187857_d)).get()._field_Decl=false;
	};
}



inline void _1aa96ba03_callBuiltinFn(jule::Ptr<_1aa959903_Eval> _self_, jule::Ptr<_1aa85c52b_FnCallExpr>* _190438_fc, jule::Ptr<_1aa957d85_Data>* _190460_d) {
	(*(_190460_d))=_1aa986e4c_Fn((*(_190460_d)).get()._field_Kind.ptr()).get()._field_caller(&(_self_), _190438_fc, _190460_d);
	if (((*(_190460_d)) == nullptr)) {
		return;;
	};
	(*(_190460_d)).get()._field_Mutable=true;
}



inline void _1aa96bd44_checkFnOfConcurrentCall(_1aa959903_Eval* _self_, jule::Ptr<_1aa88c0c7_FnIns>* _191243_f, jule::Ptr<_1db944d0d_Token> _191254_errorToken) {
	if (_1aa95a849_isUnsafe(_self_)) {
		return;;
	};
	{
		auto expr = &((*(_191243_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad84a3b2:;
		if (it != expr_end) {
			jule::Ptr<_1aa88b208_ParamIns> *_191616_p = it;
			{
				if (_1aa888216_IsSelf((*(_191616_p)).get()._field_Decl.ptr())) {
					if ((!(_1aa88847a_IsRef((*(_191616_p)).get()._field_Decl.ptr())))) {
						_1aa959e0e_pushErr(_self_, _191254_errorToken, jule::Str("Safe Jule not allows to make concurrent calls with methods which is has \"self\" receiver parameter", 97), jule::Slice<jule::Any>());
						_1aa95a22d_pushSuggestion(_self_, jule::Str("use \"&self\" receiver parameter instead, or Unsafe Jule with unsafe {} scope to make concurrent call", 99), jule::Slice<jule::Any>());
					};
				};
				if ((*(_191616_p)).get()._field_Decl.get()._field_Reference) {
					_1aa959e0e_pushErr(_self_, _191254_errorToken, jule::Str("Safe Jule not allows to make concurrent calls with functions which is has reference parameter(s)", 96), jule::Slice<jule::Any>());
					_1aa95a22d_pushSuggestion(_self_, jule::Str("use Unsafe Jule with unsafe {} scope to make concurrent call", 60), jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1ad84a3b2:;
			++it;
			goto _iter_begin_1ad84a3b2;
		}
		_iter_end_1ad84a3b2:;
	};
}



inline void _1aa96c240_processExceptionalHandler(_1aa959903_Eval* _self_, jule::Ptr<_1aa88c0c7_FnIns>* _193149_f, jule::Ptr<_1aa85c52b_FnCallExpr>* _193165_fc, jule::Ptr<_1aa957d85_Data>* _193187_d) {
	jule::Bool _193213_resultNeeded = ((!(_1aa889888_IsVoid((*(_193149_f)).get()._field_Decl.ptr()))) && ((*(_self_))._field_arg || (!((*(_self_))._field_ignored))));;
	jule::Ptr<_1aa8b91d1_scopeChecker> _193317_csc = nullptr;;
	jule::Ptr<_1aa8b25a3_Scope> _193417_ch = nullptr;;
	jule::Ptr<_1aa87d11d_FnCallExprModel> _193617_model = (*(_193187_d)).get()._field_Model.cast_ptr<_1aa87d11d_FnCallExprModel>(&__jule_any_type35);;
	jule::Ptr<_1aa8b91d1_scopeChecker> _194017_sc = (*(_self_))._field_lookup.cast_ptr<_1aa8b91d1_scopeChecker>(0);;
	_193317_csc=_1aa8c9389_newChildChecker(_194017_sc);
	if (_193213_resultNeeded) {
		_193317_csc.get()._field_result=(*(_193149_f));
	};
	_193417_ch=_1aa8bd7ac_getChild(_194017_sc.ptr());
	(*(_193165_fc)).get()._field_Exception.get()._field_Parent=_194017_sc.get()._field_tree;
	_193317_csc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_193317_csc.get()._field_table.get()._field_Vars,1);_193317_csc.get()._field_table.get()._field_Vars.__push(_1aa97d5b4_buildErrorVar(&(_193417_ch), _193165_fc));;
	_1aa8bdb75_checkChildSsc(_194017_sc, &((*(_193165_fc)).get()._field_Exception), &(_193417_ch), &(_193317_csc));
	_193617_model.get()._field_Assigned=_193213_resultNeeded;
	_193617_model.get()._field_Except=_193417_ch;
	if ((_193213_resultNeeded && (_193317_csc.get()._field_result != nullptr))) {
		_1aa959e0e_pushErr(_self_, (*(_193165_fc)).get()._field_Token, jule::Str("exceptional returns an expression, therefore else block should return expression", 80), jule::Slice<jule::Any>());
	};
}



inline void _1aa96c570_callFn(jule::Ptr<_1aa959903_Eval> _self_, jule::Ptr<_1aa85c52b_FnCallExpr>* _195831_fc, jule::Ptr<_1aa957d85_Data>* _195853_d) {
	jule::Ptr<_1aa88c0c7_FnIns> _195917_f = _1aa986e4c_Fn((*(_195853_d)).get()._field_Kind.ptr());;
	if (_1aa88d45d_IsBuiltin(_195917_f.ptr())) {
		_1aa96ba03_callBuiltinFn(_self_, _195831_fc, _195853_d);
		return;;
	};
	if ((_1aa95aaad_isGlobal(_self_.ptr()) && _195917_f.get()._field_Decl.get()._field_Exceptional)) {
		_1aa959e0e_pushErr(_self_.ptr(), (*(_195831_fc)).get()._field_Token, jule::Str("exceptionals are not allowed in global scope", 44), jule::Slice<jule::Any>());
		_1aa95a22d_pushSuggestion(_self_.ptr(), jule::Str("wrap exceptional with a non-exceptional function", 48), jule::Slice<jule::Any>());
		(*(_195853_d))=nullptr;
		return;;
	};
	if (((!(_1aa889aec_IsMethod(_195917_f.get()._field_Decl.ptr()))) && _1aa99b67b_hasDirective(&(_195917_f.get()._field_Decl.get()._field_Directives), jule::Str("test", 4)))) {
		_1aa959e0e_pushErr(_self_.ptr(), (*(_195831_fc)).get()._field_Token, jule::Str("you cannot call test functions", 30), jule::Slice<jule::Any>());
		(*(_195853_d))=nullptr;
		return;;
	};
	if (((((!((*(_195853_d)).get()._field_Mutable)) && _1aa889aec_IsMethod(_195917_f.get()._field_Decl.ptr())) && (!(_195917_f.get()._field_Decl.get()._field_Statically))) && _195917_f.get()._field_Decl.get()._field_Params[0LL].get()._field_Mutable)) {
		_1aa959e0e_pushErr(_self_.ptr(), (*(_195831_fc)).get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	} else if (((!(_1aa95a849_isUnsafe(_self_.ptr()))) && _195917_f.get()._field_Decl.get()._field_Unsafety)) {
		_1aa959e0e_pushErr(_self_.ptr(), (*(_195831_fc)).get()._field_Token, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	jule::Bool _198317_dynamicAnnotation = (((_195917_f.get()._field_Decl.get()._field_Generics.len() > 0LL) && (_195917_f.get()._field_Generics.len() == 0LL)) && (_195917_f.get()._field_Params.len() > 0LL));;
	if (_198317_dynamicAnnotation) {
		_195917_f.get()._field_Generics=jule::Slice<jule::Ptr<_1aa9820e0_InsGeneric>>::alloc(_195917_f.get()._field_Decl.get()._field_Generics.len(), _195917_f.get()._field_Decl.get()._field_Generics.len());
	} else if ((_195917_f.get()._field_Generics.len() != _195917_f.get()._field_Decl.get()._field_Generics.len())) {
		_1aa8dd05c_checkGenericQuantity(_self_.get()._field_s.ptr(), static_cast<jule::I64>(_195917_f.get()._field_Decl.get()._field_Generics.len()), static_cast<jule::I64>(_195917_f.get()._field_Generics.len()), (*(_195831_fc)).get()._field_Token);
		(*(_195853_d))=nullptr;
		return;;
	};
	jule::Ptr<_1aa8d92de_Sema> _199217_old = _self_.get()._field_s;;
	if ((_195917_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		_self_.get()._field_s=_195917_f.get()._field_Decl.get()._field_Owner.get()._field_sema;
	};
	__JULE_DEFER({
		if ((_199217_old != _self_.get()._field_s)) {
			_199217_old.get()._field_errors=jule::append(_199217_old.get()._field_errors,_self_.get()._field_s.get()._field_errors);
			_self_.get()._field_s.get()._field_errors=nullptr;
		};
		_self_.get()._field_s=_199217_old;
	});;
	_1aa944bb8_fnCallArgChecker _200517_fcac = _1aa944bb8_fnCallArgChecker{._field_e=_self_, ._field_args=(*(_195831_fc)).get()._field_Args, ._field_errorToken=(*(_195831_fc)).get()._field_Token, ._field_dynamicAnnotation=_198317_dynamicAnnotation, };;
	if ((!(_198317_dynamicAnnotation))) {
		if ((!(_195917_f.get()._field_reloaded))) {
			jule::Bool _201421_ok = _1aa8e631d_reloadFnInsTypes(_self_.get()._field_s, _195917_f);;
			_195917_f.get()._field_reloaded=true;
			if ((!(_201421_ok))) {
				(*(_195853_d))=nullptr;
				return;;
			};
		};
		jule::Ptr<_1aa88c0c7_FnIns> _202121_existInstance = _1aa88ad51_appendInstance(_195917_f.get()._field_Decl.ptr(), &(_195917_f));;
		if ((_202121_existInstance != nullptr)) {
			_195917_f=_202121_existInstance;
		};
	} else if ((!(_1aa8e4c12_buildFnNonGenericTypeKinds(_self_.get()._field_s, &(_195917_f), &(_200517_fcac._field_ignored))))) {
		(*(_195853_d))=nullptr;
		return;;
	};
	_200517_fcac._field_f=_195917_f;
	jule::Bool _203217_ok = false;;
	if ((_195917_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		({
			jule::Ptr<_1aa8d92de_Sema> ___jule_assign_arg = _self_.get()._field_s;
			jule::Ptr<_1aa8d92de_Sema> _1___jule_assign_arg = _199217_old;
			_199217_old = ___jule_assign_arg;
			_self_.get()._field_s = _1___jule_assign_arg;
		});
		_203217_ok=_1aa947083_check(&_200517_fcac);
		({
			jule::Ptr<_1aa8d92de_Sema> ___jule_assign_arg = _self_.get()._field_s;
			jule::Ptr<_1aa8d92de_Sema> _1___jule_assign_arg = _199217_old;
			_199217_old = ___jule_assign_arg;
			_self_.get()._field_s = _1___jule_assign_arg;
		});
	} else {
		_203217_ok=_1aa947083_check(&_200517_fcac);
	};
	if (_198317_dynamicAnnotation) {
		if ((!(_203217_ok))) {
			(*(_195853_d))=nullptr;
			return;;
		};
		if ((!(_1aa9652b0_checkGenericFn(_self_, &(_195917_f), &((*(_195831_fc)).get()._field_Token), &((*(_195853_d)).get()._field_Model))))) {
			(*(_195853_d))=nullptr;
			return;;
		};
	};
	jule::Any _205217_callModel = (*(_195853_d)).get()._field_Model;;
	if (_1aa889888_IsVoid(_195917_f.get()._field_Decl.ptr())) {
		(*(_195853_d))=_1aa97eab0_buildVoidData();
	} else {
		(*(_195853_d)).get()._field_Kind=_195917_f.get()._field_Result;
		(*(_195853_d)).get()._field_Lvalue=false;
	};
	jule::Ptr<_1aa87d11d_FnCallExprModel> _206117_model = jule::new_ptr<_1aa87d11d_FnCallExprModel>(_1aa87d11d_FnCallExprModel{._field_Token=(*(_195831_fc)).get()._field_Token, ._field_Func=_195917_f, ._field_IsCo=(*(_195831_fc)).get()._field_IsCo, ._field_Expr=_205217_callModel, ._field_Args=_200517_fcac._field_argModels, });;
	(*(_195853_d)).get()._field_Model=jule::Any(_206117_model, &__jule_any_type35);
	(*(_195853_d)).get()._field_Mutable=true;
	if (_195917_f.get()._field_Decl.get()._field_Exceptional) {
		if ((*(_195831_fc)).get()._field_IsCo) {
			_1aa8dbbb5_pushErr(_self_.get()._field_s.ptr(), (*(_195831_fc)).get()._field_Token, jule::Str("concurrent calls not supports exceptionals", 42), jule::Slice<jule::Any>());
			_1aa8dbed4_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("handle exceptional in a separate function or anonymous function", 63), jule::Slice<jule::Any>());
		};
		{
			
			if (_1aa85c88e_Unhandled((*(_195831_fc)).ptr())) {
				_case_begin_1ad867ae9:;
				{
					_1aa959e0e_pushErr(_self_.ptr(), (*(_195831_fc)).get()._field_Token, jule::Str("exceptionals must be handled", 28), jule::Slice<jule::Any>());
					_1aa95a22d_pushSuggestion(_self_.ptr(), jule::Str("use \"!\" operator after exceptional to handle it", 47), jule::Slice<jule::Any>());
				}
			}
			else if (_1aa85cb03_Ignored((*(_195831_fc)).ptr())) {
				_case_begin_1ad867687:;
				{
					goto _match_end_1ad866763;
				}
			}
			else {
				_case_begin_1ad8667c9:;
				{
					_1aa96c240_processExceptionalHandler(_self_.ptr(), &(_195917_f), _195831_fc, _195853_d);
				}
			}
			_match_end_1ad866763:;
		};
	} else if ((!(_1aa85c88e_Unhandled((*(_195831_fc)).ptr())))) {
		_1aa959e0e_pushErr(_self_.ptr(), (*(_195831_fc)).get()._field_Token, jule::Str("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	if ((*(_195831_fc)).get()._field_IsCo) {
		_1aa96bd44_checkFnOfConcurrentCall(_self_.ptr(), &(_206117_model.get()._field_Func), (*(_195831_fc)).get()._field_Token);
	};
}



inline jule::Ptr<_1aa957d85_Data> _1aa96c87d_evalFnCall(jule::Ptr<_1aa959903_Eval> _self_, jule::Ptr<_1aa85c52b_FnCallExpr> _209634_fc) {
	jule::Ptr<_1aa983872_TypeKind> _209717_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_209717_prefix;
	});;
	{
		auto &_match_expr{ _209634_fc.get()._field_Expr.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1ad86a635:;
			{
				if (_209634_fc.get()._field_Expr.get()._field_Token.get()._field_Kind.equal("error", 5)) {
					return _1aa2b2cd9_builtinCallerError(&(_self_), &(_209634_fc));;
				};
			}
		}
		_match_end_1ad86a5d0:;
	};
	jule::Ptr<_1aa957d85_Data> _211017_d = _1aa974126_evalExprKind(_self_, _209634_fc.get()._field_Expr.get()._field_Kind);;
	if ((_211017_d == nullptr)) {
		return nullptr;;
	};
	if (_211017_d.get()._field_Decl) {
		_1aa96b6d4_callTypeFn(_self_, &(_209634_fc), &(_211017_d));
		return _211017_d;;
	};
	if ((_1aa986e4c_Fn(_211017_d.get()._field_Kind.ptr()) == nullptr)) {
		_1aa959e0e_pushErr(_self_.ptr(), _209634_fc.get()._field_Token, jule::Str("attempting to call a non-function", 33), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1aa96c570_callFn(_self_, &(_209634_fc), &(_211017_d));
	return _211017_d;;
}



inline jule::Ptr<_1aa957d85_Data> _1aa96cc35_evalEnumStatic(_1aa959903_Eval* _self_, jule::Ptr<_1aa89ddca_Enum> _212937_enm, jule::Ptr<_1db944d0d_Token> _212949_ident) {
	jule::Ptr<_1aa89d3d5_EnumItem> _213017_item = _1aa89e98b_FindItem(_212937_enm.ptr(), _212949_ident.get()._field_Kind);;
	if ((_213017_item == nullptr)) {
		_1aa959e0e_pushErr(_self_, _212949_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_212937_enm.get()._field_Ident, &__jule_any_type5),jule::Any(_212949_ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _1aa981232_evalEnumStatic(&(_212937_enm), &(_213017_item));;
}



inline jule::Ptr<_1aa957d85_Data> _1aa96d0dc_evalTypeEnumStatic(_1aa959903_Eval* _self_, jule::Ptr<_1aa8a04c5_TypeEnum> _213741_enm, jule::Ptr<_1db944d0d_Token> _213757_ident) {
	jule::Ptr<_1aa89ee0e_TypeEnumItem> _213817_item = _1aa8a100e_FindItem(_213741_enm.ptr(), _213757_ident.get()._field_Kind);;
	if ((_213817_item == nullptr)) {
		_1aa959e0e_pushErr(_self_, _213757_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_213741_enm.get()._field_Ident, &__jule_any_type5),jule::Any(_213757_ident.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	{
		
		if ((_1aa98649b_Enum(_213817_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad872131:;
			{
				return _1aa95c8c3__evalEnum(_self_, _1aa98649b_Enum(_213817_item.get()._field_Kind.get()._field_Kind.ptr()));;
			}
		}
		else if ((_1aa986710_TypeEnum(_213817_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad8727c4:;
			{
				return _1aa95d088__evalTypeEnum(_self_, _1aa986710_TypeEnum(_213817_item.get()._field_Kind.get()._field_Kind.ptr()));;
			}
		}
		else if ((_1aa9871b1_Struct(_213817_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad871b58:;
			{
				return _1aa95d74d__evalStruct(_self_, _1aa9871b1_Struct(_213817_item.get()._field_Kind.get()._field_Kind.ptr()));;
			}
		}
		else {
			_case_begin_1ad87198d:;
			{
				jule::Ptr<_1aa957d85_Data> _215121_d = jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=_213817_item.get()._field_Kind.get()._field_Kind, ._field_Decl=true, });;
				_215121_d.get()._field_Model=jule::Any(_215121_d.get()._field_Kind, &__jule_any_type89);
				return _215121_d;;
			}
		}
		_match_end_1ad871938:;
	};
}



inline jule::Ptr<_1aa957d85_Data> _1aa96d494_evalStructStatic(_1aa959903_Eval* _self_, jule::Ptr<_1aa876dd6_StructIns> _216039_s, jule::Ptr<_1db944d0d_Token> _216054_ident) {
	jule::Ptr<_1aa957d85_Data> _216117_d = jule::new_ptr<_1aa957d85_Data>();;
	;
	jule::Ptr<_1aa889426_Fn> _216517_method = _1aa877d82_FindMethod(_216039_s.ptr(), _216054_ident.get()._field_Kind, true);;
	if ((_216517_method != nullptr)) {
		if ((!(_1aa8dc38b_isAccessibleDefine((*(_self_))._field_s.ptr(), _216517_method.get()._field_Public, _216517_method.get()._field_Token)))) {
			_1aa959e0e_pushErr(_self_, _216054_ident, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_216054_ident.get()._field_Kind, &__jule_any_type5)}));
			_1aa95a22d_pushSuggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1aa88c0c7_FnIns> _217221_ins = _1aa88aa76_instance(_216517_method);;
		_217221_ins.get()._field_Owner=_216039_s;
		_1ad7b6482_pushReference(_self_, &(_217221_ins));
		_216117_d.get()._field_Model=jule::Any(jule::new_ptr<_1aa880d35_StructStaticIdentExprModel>(_1aa880d35_StructStaticIdentExprModel{._field_Structure=_216039_s, ._field_Expr=_216117_d.get()._field_Model, ._field_Method=_217221_ins}), &__jule_any_type101);
		_216117_d.get()._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_217221_ins, 1)});
		return _216117_d;;
	};
	jule::Ptr<_1aa908c59_Var> _218617_sttc = _1aa87849d_FindStatic(_216039_s.ptr(), _216054_ident.get()._field_Kind);;
	if ((_218617_sttc != nullptr)) {
		return _1aa9605b8_evalVar(_self_, _218617_sttc, _216054_ident);;
	};
	_1aa959e0e_pushErr(_self_, _216054_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_216039_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5),jule::Any(_216054_ident.get()._field_Kind, &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Ptr<_1aa957d85_Data> _1aa96d8e5_evalTraitSubIdent(_1aa959903_Eval* _self_, jule::Ptr<_1aa957d85_Data> _219540_d, jule::Ptr<_1aa89b647_Trait> _219554_trt, jule::Ptr<_1db944d0d_Token> _219571_ident) {
	jule::Ptr<_1aa889426_Fn> _219617_f = _1aa89c4e4_FindMethod(_219554_trt.ptr(), _219571_ident.get()._field_Kind);;
	if ((_219617_f == nullptr)) {
		_1aa959e0e_pushErr(_self_, _219571_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_219554_trt.get()._field_Ident, &__jule_any_type5),jule::Any(_219571_ident.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa88aa76_instance(_219617_f), 1)}), ._field_Model=jule::Any(jule::new_ptr<_1aa8801a8_TraitSubIdentExprModel>(_1aa8801a8_TraitSubIdentExprModel{._field_Token=_219571_ident, ._field_Expr=_219540_d.get()._field_Model, ._field_Method=_219617_f, ._field_Trt=_219554_trt}), &__jule_any_type70), });;
}



inline jule::Ptr<_1aa957d85_Data> _1aa96dde0_evalStructSubIdent(_1aa959903_Eval* _self_, jule::Ptr<_1aa957d85_Data> _221441_d, jule::Ptr<_1aa876dd6_StructIns> _221455_s, jule::Ptr<_1aa85b99d_SubIdentExpr> _221474_si, jule::Bool _221493_ref) {
	jule::Ptr<_1aa8763e1_FieldIns> _221517_f = _1aa878190_FindField(_221455_s.ptr(), _221474_si.get()._field_Ident.get()._field_Kind);;
	if ((_221517_f != nullptr)) {
		if ((!(_1aa8dc38b_isAccessibleDefine((*(_self_))._field_s.ptr(), _221517_f.get()._field_Decl.get()._field_Public, _221517_f.get()._field_Decl.get()._field_Token)))) {
			_1aa959e0e_pushErr(_self_, _221474_si.get()._field_Ident, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_221517_f.get()._field_Decl.get()._field_Ident, &__jule_any_type5)}));
			_1aa95a22d_pushSuggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1aa88098e_StructSubIdentExprModel> _222221_model = jule::new_ptr<_1aa88098e_StructSubIdentExprModel>(_1aa88098e_StructSubIdentExprModel{._field_Token=_221474_si.get()._field_Ident, ._field_Expr=jule::new_ptr<_1aa957d85_Data>((*(_221441_d))), ._field_Field=_221517_f, ._field_Owner=_221455_s});;
		_221441_d.get()._field_Model=jule::Any(_222221_model, &__jule_any_type71);
		_221441_d.get()._field_Kind=_221517_f.get()._field_Kind;
		_221441_d.get()._field_Lvalue=true;
		if ((_221517_f.get()._field_Decl.get()._field_Mutable && (!(_221441_d.get()._field_Mutable)))) {
			{
				auto &_match_expr{ (*(_self_))._field_lookup };
				
				if (_match_expr.type_is(true, 0)) {
					_case_begin_1ad8879a4:;
					{
						jule::Ptr<_1aa8b91d1_scopeChecker> _223625_scope = _1aa8bc008_getRoot((*(_self_))._field_lookup.cast_ptr<_1aa8b91d1_scopeChecker>(0));;
						_221441_d.get()._field_Mutable=((_223625_scope.get()._field_owner != nullptr) && (_223625_scope.get()._field_owner.get()._field_Owner == _221455_s));
					}
				}
				_match_end_1ad88794e:;
			};
		};
		return _221441_d;;
	};
	;
	jule::Ptr<_1aa889426_Fn> _224517_m = _1aa877d82_FindMethod(_221455_s.ptr(), _221474_si.get()._field_Ident.get()._field_Kind, false);;
	if ((_224517_m == nullptr)) {
		_1aa959e0e_pushErr(_self_, _221474_si.get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_221455_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5),jule::Any(_221474_si.get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	if ((!(_1aa8dc38b_isAccessibleDefine((*(_self_))._field_s.ptr(), _224517_m.get()._field_Public, _224517_m.get()._field_Token)))) {
		_1aa959e0e_pushErr(_self_, _221474_si.get()._field_Ident, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_224517_m.get()._field_Ident, &__jule_any_type5)}));
		_1aa95a22d_pushSuggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
	};
	if ((_1aa88847a_IsRef(_224517_m.get()._field_Params[0LL].ptr()) && (!(_221493_ref)))) {
		_1aa959e0e_pushErr(_self_, _221474_si.get()._field_Ident, jule::Str("reference method cannot use with non-reference instance", 55), jule::Slice<jule::Any>());
	};
	_1aa95e232_checkDeprecated(_self_, &(_224517_m.get()._field_Directives), _221474_si.get()._field_Ident);
	jule::Ptr<_1aa88c0c7_FnIns> _226117_ins = _1aa88aa76_instance(_224517_m);;
	_226117_ins.get()._field_Owner=_221455_s;
	_1ad7b6482_pushReference(_self_, &(_226117_ins));
	jule::Ptr<_1aa957d85_Data> _226417_model = jule::new_ptr<_1aa957d85_Data>((*(_221441_d)));;
	_221441_d.get()._field_Model=jule::Any(jule::new_ptr<_1aa88098e_StructSubIdentExprModel>(_1aa88098e_StructSubIdentExprModel{._field_Token=_221474_si.get()._field_Ident, ._field_Expr=_226417_model, ._field_Method=_226117_ins, ._field_Owner=_221455_s}), &__jule_any_type71);
	_221441_d.get()._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_226117_ins, 1)});
	return _221441_d;;
}



inline jule::Ptr<_1aa957d85_Data> _1aa96e297_evalSliceSubIdent(_1aa959903_Eval* _self_, jule::Ptr<_1aa957d85_Data> _227540_d, jule::Ptr<_1db944d0d_Token> _227554_ident) {
	{
		auto &_match_expr{ _227554_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1ad890a9a:;
			{
				return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(jule::new_ptr<_1aa88c0c7_FnIns>(_1aa88c0c7_FnIns{._field_Params=jule::Slice<jule::Ptr<_1aa88b208_ParamIns>>::make({jule::new_ptr<_1aa88b208_ParamIns>(_1aa88b208_ParamIns{._field_Decl=jule::new_ptr<_1aa887ad9_Param>(_1aa887ad9_Param{._field_Ident=jule::Str("i", 1)}), ._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("int", 3)), 10)})}),jule::new_ptr<_1aa88b208_ParamIns>(_1aa88b208_ParamIns{._field_Decl=jule::new_ptr<_1aa887ad9_Param>(_1aa887ad9_Param{._field_Ident=jule::Str("j", 1)}), ._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("int", 3)), 10)})})}), ._field_caller=jule::Fn<jule::Ptr<_1aa957d85_Data>(jule::Ptr<_1aa959903_Eval>*,jule::Ptr<_1aa85c52b_FnCallExpr>*,jule::Ptr<_1aa957d85_Data>*)>(_1aa2b2998_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_227540_d.get()._field_Mutable, ._field_Model=jule::Any(jule::new_ptr<_1aa881a4a_CommonSubIdentExprModel>(_1aa881a4a_CommonSubIdentExprModel{._field_ExprKind=_227540_d.get()._field_Kind, ._field_Expr=_227540_d.get()._field_Model, ._field_Token=_227554_ident, ._field_Ident=jule::Str("swap", 4)}), &__jule_any_type73), });;
			}
		}
		else {
			_case_begin_1ad890d75:;
			{
				_1aa959e0e_pushErr(_self_, _227554_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1aa983c6d_Str(_227540_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_227554_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ad890b33:;
	};
}



inline jule::Ptr<_1aa957d85_Data> _1aa96e64e_evalArraySubIdent(_1aa959903_Eval* _self_, jule::Ptr<_1aa957d85_Data> _231240_d, jule::Ptr<_1db944d0d_Token> _231254_ident) {
	{
		auto &_match_expr{ _231254_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1ad8920da:;
			{
				return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(jule::new_ptr<_1aa88c0c7_FnIns>(_1aa88c0c7_FnIns{._field_Params=jule::Slice<jule::Ptr<_1aa88b208_ParamIns>>::make({jule::new_ptr<_1aa88b208_ParamIns>(_1aa88b208_ParamIns{._field_Decl=jule::new_ptr<_1aa887ad9_Param>(_1aa887ad9_Param{._field_Ident=jule::Str("i", 1)}), ._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("int", 3)), 10)})}),jule::new_ptr<_1aa88b208_ParamIns>(_1aa88b208_ParamIns{._field_Decl=jule::new_ptr<_1aa887ad9_Param>(_1aa887ad9_Param{._field_Ident=jule::Str("j", 1)}), ._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("int", 3)), 10)})})}), ._field_caller=jule::Fn<jule::Ptr<_1aa957d85_Data>(jule::Ptr<_1aa959903_Eval>*,jule::Ptr<_1aa85c52b_FnCallExpr>*,jule::Ptr<_1aa957d85_Data>*)>(_1aa2b2998_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_231240_d.get()._field_Mutable, ._field_Model=jule::Any(jule::new_ptr<_1aa881a4a_CommonSubIdentExprModel>(_1aa881a4a_CommonSubIdentExprModel{._field_ExprKind=_231240_d.get()._field_Kind, ._field_Expr=_231240_d.get()._field_Model, ._field_Token=_231254_ident, ._field_Ident=jule::Str("swap", 4)}), &__jule_any_type73), });;
			}
		}
		else {
			_case_begin_1ad894131:;
			{
				_1aa959e0e_pushErr(_self_, _231254_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1aa983c6d_Str(_231240_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_231254_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ad894087:;
	};
}



inline jule::Ptr<_1aa957d85_Data> _1aa96e95c_evalIntTypeStatic(_1aa959903_Eval* _self_, jule::Ptr<_1db944d0d_Token> _234936_ident) {
	;
	{
		auto &_match_expr{ _234936_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1ad8983bb:;
			{
				jule::Ptr<_1c0901b1b_Const> _235321_c = static__1c090208e_NewI64(static_cast<jule::I64>(_1dc5bad29_MaxI(jule::Str("int", 3))));;
				_235321_c.get()._field_Kind=jule::Str("int", 3);
				return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("int", 3)), 10)}), ._field_Model=jule::Any(_235321_c, &__jule_any_type19), ._field_Constant=_235321_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1ad898432:;
			{
				jule::Ptr<_1c0901b1b_Const> _236121_c = static__1c090208e_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1dc5bb2d0_Min(jule::Str("int", 3)))));;
				_236121_c.get()._field_Kind=jule::Str("int", 3);
				return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("int", 3)), 10)}), ._field_Model=jule::Any(_236121_c, &__jule_any_type19), ._field_Constant=_236121_c});;
			}
		}
		else {
			_case_begin_1ad897673:;
			{
				_1aa959e0e_pushErr(_self_, _234936_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("int", 3), &__jule_any_type5),jule::Any(_234936_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ad8974ca:;
	};
}



inline jule::Ptr<_1aa957d85_Data> _1aa96ec6a_evalUintTypeStatic(_1aa959903_Eval* _self_, jule::Ptr<_1db944d0d_Token> _237437_ident) {
	;
	{
		auto &_match_expr{ _237437_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1ad8984dc:;
			{
				jule::Ptr<_1c0901b1b_Const> _237821_c = static__1c0902336_NewU64(static_cast<jule::U64>(_1dc5bb0c1_MaxU(jule::Str("uint", 4))));;
				_237821_c.get()._field_Kind=jule::Str("uint", 4);
				return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("uint", 4)), 10)}), ._field_Model=jule::Any(_237821_c, &__jule_any_type19), ._field_Constant=_237821_c});;
			}
		}
		else {
			_case_begin_1ad89b1d2:;
			{
				_1aa959e0e_pushErr(_self_, _237437_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("uint", 4), &__jule_any_type5),jule::Any(_237437_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ad89b039:;
	};
}



inline jule::Ptr<_1aa957d85_Data> _1aa970078_evalI8TypeStatic(_1aa959903_Eval* _self_, jule::Ptr<_1db944d0d_Token> _239135_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _239135_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1ad89d305:;
			{
				jule::Ptr<_1c0901b1b_Const> _239721_c = static__1c090208e_NewI64(127LL);;
				_239721_c.get()._field_Kind=jule::Str("i8", 2);
				return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("i8", 2)), 10)}), ._field_Model=jule::Any(_239721_c, &__jule_any_type19), ._field_Constant=_239721_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1ad89ed62:;
			{
				jule::Ptr<_1c0901b1b_Const> _240521_c = static__1c090208e_NewI64(-128LL);;
				_240521_c.get()._field_Kind=jule::Str("i8", 2);
				return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("i8", 2)), 10)}), ._field_Model=jule::Any(_240521_c, &__jule_any_type19), ._field_Constant=_240521_c});;
			}
		}
		else {
			_case_begin_1ad89e0a3:;
			{
				_1aa959e0e_pushErr(_self_, _239135_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i8", 2), &__jule_any_type5),jule::Any(_239135_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ad89ccb6:;
	};
}



inline jule::Ptr<_1aa957d85_Data> _1aa970386_evalI16TypeStatic(_1aa959903_Eval* _self_, jule::Ptr<_1db944d0d_Token> _241836_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _241836_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1ad8a3cab:;
			{
				jule::Ptr<_1c0901b1b_Const> _242421_c = static__1c090208e_NewI64(32767LL);;
				_242421_c.get()._field_Kind=jule::Str("i16", 3);
				return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("i16", 3)), 10)}), ._field_Model=jule::Any(_242421_c, &__jule_any_type19), ._field_Constant=_242421_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1ad8a3d22:;
			{
				jule::Ptr<_1c0901b1b_Const> _243221_c = static__1c090208e_NewI64(-32768LL);;
				_243221_c.get()._field_Kind=jule::Str("i16", 3);
				return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("i16", 3)), 10)}), ._field_Model=jule::Any(_243221_c, &__jule_any_type19), ._field_Constant=_243221_c});;
			}
		}
		else {
			_case_begin_1ad8a30eb:;
			{
				_1aa959e0e_pushErr(_self_, _241836_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i16", 3), &__jule_any_type5),jule::Any(_241836_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ad8a2eec:;
	};
}



inline jule::Ptr<_1aa957d85_Data> _1aa970694_evalI32TypeStatic(_1aa959903_Eval* _self_, jule::Ptr<_1db944d0d_Token> _244536_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _244536_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1ad8a7c05:;
			{
				jule::Ptr<_1c0901b1b_Const> _245121_c = static__1c090208e_NewI64(2147483647LL);;
				_245121_c.get()._field_Kind=jule::Str("i32", 3);
				return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("i32", 3)), 10)}), ._field_Model=jule::Any(_245121_c, &__jule_any_type19), ._field_Constant=_245121_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1ad8a7c6b:;
			{
				jule::Ptr<_1c0901b1b_Const> _245921_c = static__1c090208e_NewI64(-2147483648LL);;
				_245921_c.get()._field_Kind=jule::Str("i32", 3);
				return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("i32", 3)), 10)}), ._field_Model=jule::Any(_245921_c, &__jule_any_type19), ._field_Constant=_245921_c});;
			}
		}
		else {
			_case_begin_1ad8a7045:;
			{
				_1aa959e0e_pushErr(_self_, _244536_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i32", 3), &__jule_any_type5),jule::Any(_244536_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ad8a6e46:;
	};
}



inline jule::Ptr<_1aa957d85_Data> _1aa9709a2_evalI64TypeStatic(_1aa959903_Eval* _self_, jule::Ptr<_1db944d0d_Token> _247236_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _247236_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1ad8abb4e:;
			{
				jule::Ptr<_1c0901b1b_Const> _247821_c = static__1c090208e_NewI64(jule::MAX_I64);;
				_247821_c.get()._field_Kind=jule::Str("i64", 3);
				return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("i64", 3)), 10)}), ._field_Model=jule::Any(_247821_c, &__jule_any_type19), ._field_Constant=_247821_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1ad8abbb5:;
			{
				jule::Ptr<_1c0901b1b_Const> _248621_c = static__1c090208e_NewI64(jule::MIN_I64);;
				_248621_c.get()._field_Kind=jule::Str("i64", 3);
				return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("i64", 3)), 10)}), ._field_Model=jule::Any(_248621_c, &__jule_any_type19), ._field_Constant=_248621_c});;
			}
		}
		else {
			_case_begin_1ad8aae8e:;
			{
				_1aa959e0e_pushErr(_self_, _247236_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i64", 3), &__jule_any_type5),jule::Any(_247236_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ad8aad90:;
	};
}



inline jule::Ptr<_1aa957d85_Data> _1aa970cb0_evalU8TypeStatic(_1aa959903_Eval* _self_, jule::Ptr<_1db944d0d_Token> _249935_ident) {
	;
	;
	{
		auto &_match_expr{ _249935_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1ad8aec95:;
			{
				jule::Ptr<_1c0901b1b_Const> _250421_c = static__1c0902336_NewU64(255LLU);;
				_250421_c.get()._field_Kind=jule::Str("u8", 2);
				return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("u8", 2)), 10)}), ._field_Model=jule::Any(_250421_c, &__jule_any_type19), ._field_Constant=_250421_c});;
			}
		}
		else {
			_case_begin_1ad8ae624:;
			{
				_1aa959e0e_pushErr(_self_, _249935_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u8", 2), &__jule_any_type5),jule::Any(_249935_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ad8ae866:;
	};
}



inline jule::Ptr<_1aa957d85_Data> _1aa9710bd_evalU16TypeStatic(_1aa959903_Eval* _self_, jule::Ptr<_1db944d0d_Token> _251736_ident) {
	;
	;
	{
		auto &_match_expr{ _251736_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1ad8b2726:;
			{
				jule::Ptr<_1c0901b1b_Const> _252221_c = static__1c0902336_NewU64(65535LLU);;
				_252221_c.get()._field_Kind=jule::Str("u16", 3);
				return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("u16", 3)), 10)}), ._field_Model=jule::Any(_252221_c, &__jule_any_type19), ._field_Constant=_252221_c});;
			}
		}
		else {
			_case_begin_1ad8b20a5:;
			{
				_1aa959e0e_pushErr(_self_, _251736_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u16", 3), &__jule_any_type5),jule::Any(_251736_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ad8b22e7:;
	};
}



inline jule::Ptr<_1aa957d85_Data> _1aa9713cb_evalU32TypeStatic(_1aa959903_Eval* _self_, jule::Ptr<_1db944d0d_Token> _253536_ident) {
	;
	;
	{
		auto &_match_expr{ _253536_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1ad8b51a7:;
			{
				jule::Ptr<_1c0901b1b_Const> _254021_c = static__1c0902336_NewU64(4294967295LLU);;
				_254021_c.get()._field_Kind=jule::Str("u32", 3);
				return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("u32", 3)), 10)}), ._field_Model=jule::Any(_254021_c, &__jule_any_type19), ._field_Constant=_254021_c});;
			}
		}
		else {
			_case_begin_1ad8b4a36:;
			{
				_1aa959e0e_pushErr(_self_, _253536_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u32", 3), &__jule_any_type5),jule::Any(_253536_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ad8b4c78:;
	};
}



inline jule::Ptr<_1aa957d85_Data> _1aa9716d9_evalU64TypeStatic(_1aa959903_Eval* _self_, jule::Ptr<_1db944d0d_Token> _255336_ident) {
	;
	;
	{
		auto &_match_expr{ _255336_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1ad8b7b38:;
			{
				jule::Ptr<_1c0901b1b_Const> _255821_c = static__1c0902336_NewU64(jule::MAX_U64);;
				_255821_c.get()._field_Kind=jule::Str("u64", 3);
				return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("u64", 3)), 10)}), ._field_Model=jule::Any(_255821_c, &__jule_any_type19), ._field_Constant=_255821_c});;
			}
		}
		else {
			_case_begin_1ad8b74b7:;
			{
				_1aa959e0e_pushErr(_self_, _255336_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u64", 3), &__jule_any_type5),jule::Any(_255336_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ad8b7709:;
	};
}



inline jule::Ptr<_1aa957d85_Data> _1aa9719e7_evalF32TypeStatic(_1aa959903_Eval* _self_, jule::Ptr<_1db944d0d_Token> _257136_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _257136_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1ad8ba6c9:;
			{
				jule::Ptr<_1c0901b1b_Const> _257821_c = static__1c0902b1c_NewF64(340282346638528860000000000000000000000.0);;
				_257821_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("f32", 3)), 10)}), ._field_Model=jule::Any(_257821_c, &__jule_any_type19), ._field_Constant=_257821_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1ad8bb6ca:;
			{
				jule::Ptr<_1c0901b1b_Const> _258621_c = static__1c0902b1c_NewF64(-340282346638528860000000000000000000000.0);;
				_258621_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("f32", 3)), 10)}), ._field_Model=jule::Any(_258621_c, &__jule_any_type19), ._field_Constant=_258621_c});;
			}
		}
		else if (_match_expr == jule::Str("SmallestNonZero", 15)) {
			_case_begin_1ad8bb741:;
			{
				jule::Ptr<_1c0901b1b_Const> _259421_c = static__1c0902b1c_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				_259421_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("f32", 3)), 10)}), ._field_Model=jule::Any(_259421_c, &__jule_any_type19), ._field_Constant=_259421_c});;
			}
		}
		else {
			_case_begin_1ad8ba960:;
			{
				_1aa959e0e_pushErr(_self_, _257136_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("f32", 3), &__jule_any_type5),jule::Any(_257136_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ad8ba90a:;
	};
}



inline jule::Ptr<_1aa957d85_Data> _1aa971d05_evalF64TypeStatic(_1aa959903_Eval* _self_, jule::Ptr<_1db944d0d_Token> _260736_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _260736_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1ad8c0a42:;
			{
				jule::Ptr<_1c0901b1b_Const> _261421_c = static__1c0902b1c_NewF64(jule::MAX_F64);;
				_261421_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("f64", 3)), 10)}), ._field_Model=jule::Any(_261421_c, &__jule_any_type19), ._field_Constant=_261421_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1ad8c1a43:;
			{
				jule::Ptr<_1c0901b1b_Const> _262221_c = static__1c0902b1c_NewF64(jule::MIN_F64);;
				_262221_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("f64", 3)), 10)}), ._field_Model=jule::Any(_262221_c, &__jule_any_type19), ._field_Constant=_262221_c});;
			}
		}
		else if (_match_expr == jule::Str("SmallestNonZero", 15)) {
			_case_begin_1ad8c1aa9:;
			{
				jule::Ptr<_1c0901b1b_Const> _263021_c = static__1c0902b1c_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				_263021_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("f64", 3)), 10)}), ._field_Model=jule::Any(_263021_c, &__jule_any_type19), ._field_Constant=_263021_c});;
			}
		}
		else {
			_case_begin_1ad8c0cc8:;
			{
				_1aa959e0e_pushErr(_self_, _260736_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("f64", 3), &__jule_any_type5),jule::Any(_260736_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ad8c0c73:;
	};
}



inline jule::Ptr<_1aa957d85_Data> _1aa9721ac_evalPrimStatic(_1aa959903_Eval* _self_, jule::Str _264333_kind, jule::Ptr<_1db944d0d_Token> _264344_ident) {
	{
		auto &_match_expr{ _264333_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1ad8c498b:;
			{
				return _1aa96e95c_evalIntTypeStatic(_self_, _264344_ident);;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1ad8c5dcc:;
			{
				return _1aa96ec6a_evalUintTypeStatic(_self_, _264344_ident);;
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1ad8c5e43:;
			{
				return _1aa970078_evalI8TypeStatic(_self_, _264344_ident);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1ad8c533d:;
			{
				return _1aa970386_evalI16TypeStatic(_self_, _264344_ident);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1ad8c53a4:;
			{
				return _1aa970694_evalI32TypeStatic(_self_, _264344_ident);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1ad8c541a:;
			{
				return _1aa9709a2_evalI64TypeStatic(_self_, _264344_ident);;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1ad8c5481:;
			{
				return _1aa970cb0_evalU8TypeStatic(_self_, _264344_ident);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1ad8c5ea9:;
			{
				return _1aa9710bd_evalU16TypeStatic(_self_, _264344_ident);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1ad8c6020:;
			{
				return _1aa9713cb_evalU32TypeStatic(_self_, _264344_ident);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1ad8c6086:;
			{
				return _1aa9716d9_evalU64TypeStatic(_self_, _264344_ident);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1ad8c60ec:;
			{
				return _1aa9719e7_evalF32TypeStatic(_self_, _264344_ident);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1ad8c6163:;
			{
				return _1aa971d05_evalF64TypeStatic(_self_, _264344_ident);;
			}
		}
		else {
			_case_begin_1ad8c1c74:;
			{
				_1aa959e0e_pushErr(_self_, _264344_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_264333_kind, &__jule_any_type5),jule::Any(_264344_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ad8c1c1e:;
	};
}



inline jule::Ptr<_1aa957d85_Data> _1aa972564_evalTypeStatic(_1aa959903_Eval* _self_, jule::Ptr<_1aa957d85_Data> _267537_d, jule::Ptr<_1aa85b99d_SubIdentExpr> _267551_si) {
	{
		
		if ((_1aa985c5e_Prim(_267537_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad8cb1ce:;
			{
				return _1aa9721ac_evalPrimStatic(_self_, _1aa98969c_Str(_1aa985c5e_Prim(_267537_d.get()._field_Kind.ptr()).ptr()), _267551_si.get()._field_Ident);;
			}
		}
		else if ((_1aa98649b_Enum(_267537_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad8cb245:;
			{
				return _1aa96cc35_evalEnumStatic(_self_, _1aa98649b_Enum(_267537_d.get()._field_Kind.ptr()), _267551_si.get()._field_Ident);;
			}
		}
		else if ((_1aa986710_TypeEnum(_267537_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad8cb058:;
			{
				return _1aa96d0dc_evalTypeEnumStatic(_self_, _1aa986710_TypeEnum(_267537_d.get()._field_Kind.ptr()), _267551_si.get()._field_Ident);;
			}
		}
		else if ((_1aa9871b1_Struct(_267537_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad8cb0be:;
			{
				return _1aa96d494_evalStructStatic(_self_, _1aa9871b1_Struct(_267537_d.get()._field_Kind.ptr()), _267551_si.get()._field_Ident);;
			}
		}
		else {
			_case_begin_1ad8ca244:;
			{
				_1aa959e0e_pushErr(_self_, _267551_si.get()._field_Ident, jule::Str("type @ is not supports sub-defines", 34), jule::Slice<jule::Any>::make({jule::Any(_1aa983c6d_Str(_267537_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ad8ca19a:;
	};
}



inline jule::Ptr<_1aa957d85_Data> _1aa97291b_evalObjSubIdent(_1aa959903_Eval* _self_, jule::Ptr<_1aa957d85_Data> _269138_d, jule::Ptr<_1aa85b99d_SubIdentExpr> _269152_si) {
	if (_1db9475a2_IsIgnoreIdent(_269152_si.get()._field_Ident.get()._field_Kind)) {
		_1aa959e0e_pushErr(_self_, _269152_si.get()._field_Ident, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		
		if ((_1aa988613_comptimeType(_269138_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad8cece8:;
			{
				jule::Ptr<_1aa8a5750_comptimeType> _269921_comptimeType = _1aa988613_comptimeType(_269138_d.get()._field_Kind.ptr());;
				jule::Ptr<_1aa957d85_Data> _270021_cd = _1aa8a8214_subIdent(_269921_comptimeType, _269152_si.get()._field_Ident.get()._field_Kind);;
				if ((_270021_cd == nullptr)) {
					_1aa959e0e_pushErr(_self_, _269152_si.get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1aa983c6d_Str(_269138_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_269152_si.get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
				};
				return _270021_cd;;
			}
		}
		else if ((_1aa98813a_comptimeStructField(_269138_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad8d0744:;
			{
				jule::Ptr<_1aa8a3121_comptimeStructField> _270621_comptimeSF = _1aa98813a_comptimeStructField(_269138_d.get()._field_Kind.ptr());;
				jule::Ptr<_1aa957d85_Data> _270721_cd = _1aa8a3e57_subIdent(_270621_comptimeSF, _269152_si.get()._field_Ident.get()._field_Kind);;
				if ((_270721_cd == nullptr)) {
					_1aa959e0e_pushErr(_self_, _269152_si.get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1aa983c6d_Str(_269138_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_269152_si.get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
				};
				return _270721_cd;;
			}
		}
		_match_end_1ad8cec71:;
	};
	jule::Ptr<_1aa983872_TypeKind> _271417_kind = _269138_d.get()._field_Kind;;
	{
		
		if ((_1aa986237_Ptr(_269138_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad8d5507:;
			{
				jule::Ptr<_1aa991132_Ptr> _271717_ptr = _1aa986237_Ptr(_269138_d.get()._field_Kind.ptr());;
				if (_1aa991b05_IsUnsafe(_271717_ptr.ptr())) {
					goto _match_end_1ad8d5480;
				};
				if (((!(_269152_si.get()._field_IsSelf)) && (!(_1aa95a849_isUnsafe(_self_))))) {
					_1aa959e0e_pushErr(_self_, _269152_si.get()._field_Ident, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				_271417_kind=_1aa986237_Ptr(_269138_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		else if ((_1aa985ec3_Sptr(_269138_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad8d557e:;
			{
				_271417_kind=_1aa985ec3_Sptr(_269138_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		_match_end_1ad8d5480:;
	};
	{
		
		if ((_1aa987425_Trait(_269138_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad8d8186:;
			{
				return _1aa96d8e5_evalTraitSubIdent(_self_, _269138_d, _1aa987425_Trait(_269138_d.get()._field_Kind.ptr()), _269152_si.get()._field_Ident);;
			}
		}
		else if ((_1aa9871b1_Struct(_271417_kind.ptr()) != nullptr)) {
			_case_begin_1ad8d820d:;
			{
				jule::Ptr<_1aa876dd6_StructIns> _273317_s = _1aa9871b1_Struct(_271417_kind.ptr());;
				if (_1aa97e054_isInstancedStruct(_273317_s)) {
					jule::Bool _273525_usedReferenceElem = (_1aa985ec3_Sptr(_269138_d.get()._field_Kind.ptr()) != nullptr);;
					return _1aa96dde0_evalStructSubIdent(_self_, _269138_d, _1aa9871b1_Struct(_271417_kind.ptr()), _269152_si, _273525_usedReferenceElem);;
				};
			}
		}
		else if ((_1aa986bd8_Slc(_271417_kind.ptr()) != nullptr)) {
			_case_begin_1ad8d8285:;
			{
				return _1aa96e297_evalSliceSubIdent(_self_, _269138_d, _269152_si.get()._field_Ident);;
			}
		}
		else if ((_1aa986974_Arr(_271417_kind.ptr()) != nullptr)) {
			_case_begin_1ad8d830c:;
			{
				return _1aa96e64e_evalArraySubIdent(_self_, _269138_d, _269152_si.get()._field_Ident);;
			}
		}
		_match_end_1ad8d80a9:;
	};
	_1aa959e0e_pushErr(_self_, _269152_si.get()._field_Ident, jule::Str("object @ is not supports sub-defines", 36), jule::Slice<jule::Any>::make({jule::Any(_1aa983c6d_Str(_269138_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Ptr<_1aa957d85_Data> _1aa972c29_evalSubIdent(jule::Ptr<_1aa959903_Eval> _self_, jule::Ptr<_1aa85b99d_SubIdentExpr> _274736_si) {
	jule::Ptr<_1aa983872_TypeKind> _274817_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_274817_prefix;
	});;
	jule::Ptr<_1aa957d85_Data> _275217_d = _1aa974126_evalExprKind(_self_, _274736_si.get()._field_Expr.get()._field_Kind);;
	if ((_275217_d == nullptr)) {
		return nullptr;;
	};
	if (_275217_d.get()._field_Decl) {
		return _1aa972564_evalTypeStatic(_self_.ptr(), _275217_d, _274736_si);;
	};
	return _1aa97291b_evalObjSubIdent(_self_.ptr(), _275217_d, _274736_si);;
}



inline jule::Ptr<_1aa957d85_Data> _1aa973037_evalTuple(jule::Ptr<_1aa959903_Eval> _self_, jule::Ptr<_1aa8591c6_TupleExpr> _276433_tup) {
	jule::Ptr<_1aa98e0a8_Tuple> _276517_tupT = jule::new_ptr<_1aa98e0a8_Tuple>();;
	_276517_tupT.get()._field_Types=jule::Slice<jule::Ptr<_1aa983872_TypeKind>>::alloc(0LL, _276433_tup.get()._field_Expr.len());
	jule::Ptr<_1aa881d47_TupleExprModel> _276817_model = jule::new_ptr<_1aa881d47_TupleExprModel>(_1aa881d47_TupleExprModel{._field_Datas=jule::Slice<jule::Ptr<_1aa957d85_Data>>::alloc(0LL, _276433_tup.get()._field_Expr.len())});;
	jule::Bool _277217_ok = true;;
	{
		auto expr = &(_276433_tup.get()._field_Expr);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad8e1db5:;
		if (it != expr_end) {
			jule::Ptr<_1aa858549_Expr> _277321_expr = *it;
			{
				jule::Ptr<_1aa957d85_Data> _277421_d = _1aa974126_evalExprKind(_self_, _277321_expr.get()._field_Kind);;
				if ((_277421_d == nullptr)) {
					_277217_ok=false;
					goto _iter_next_1ad8e1db5;
				};
				_276517_tupT.get()._field_Types = jule::alloc_for_append(_276517_tupT.get()._field_Types,1);_276517_tupT.get()._field_Types.__push(_277421_d.get()._field_Kind);;
				_276817_model.get()._field_Datas = jule::alloc_for_append(_276817_model.get()._field_Datas,1);_276817_model.get()._field_Datas.__push(_277421_d);;
			}
			_iter_next_1ad8e1db5:;
			++it;
			goto _iter_begin_1ad8e1db5;
		}
		_iter_end_1ad8e1db5:;
	};
	if ((!(_277217_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_276517_tupT, 13)}), ._field_Model=jule::Any(_276817_model, &__jule_any_type87), });;
}



inline jule::Ptr<_1aa957d85_Data> _1aa9733de_evalMap(jule::Ptr<_1aa959903_Eval> _self_, jule::Ptr<_1aa98ead1_Map> _279331_m, jule::Ptr<_1aa85db7b_BraceLit> _279344_lit) {
	jule::Ptr<_1aa87e62a_MapExprModel> _279417_model = jule::new_ptr<_1aa87e62a_MapExprModel>(_1aa87e62a_MapExprModel{._field_KeyKind=_279331_m.get()._field_Key, ._field_ValKind=_279331_m.get()._field_Val, });;
	{
		auto expr = &(_279344_lit.get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad8e4e73:;
		if (it != expr_end) {
			jule::Ptr<_1aa858549_Expr> _279921_expr = *it;
			{
				{
					auto &_match_expr{ _279921_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type84) {
						_case_begin_1ad8e568d:;
						{
							goto _match_end_1ad8e5737;
						}
					}
					else {
						_case_begin_1ad8e58be:;
						{
							_1aa959e0e_pushErr(_self_.ptr(), _279344_lit.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							return nullptr;;
						}
					}
					_match_end_1ad8e5737:;
				};
				jule::Ptr<_1aa85e451_KeyValPair> _280921_pair = _279921_expr.get()._field_Kind.cast_ptr<_1aa85e451_KeyValPair>(&__jule_any_type84);;
				jule::Ptr<_1aa957d85_Data> _281121_key = _1aa974126_evalExprKind(_self_, _280921_pair.get()._field_Key.get()._field_Kind);;
				if ((_281121_key == nullptr)) {
					return nullptr;;
				};
				jule::Ptr<_1aa957d85_Data> _281621_val = _1aa974126_evalExprKind(_self_, _280921_pair.get()._field_Val.get()._field_Kind);;
				if ((_281621_val == nullptr)) {
					return nullptr;;
				};
				_1aa8e3e53_checkAssignType(_self_.get()._field_s, false, &(_279331_m.get()._field_Key), &(_281121_key), _280921_pair.get()._field_Colon);
				_1aa8e3e53_checkAssignType(_self_.get()._field_s, false, &(_279331_m.get()._field_Val), &(_281621_val), _280921_pair.get()._field_Colon);
				_279417_model.get()._field_Entries = jule::alloc_for_append(_279417_model.get()._field_Entries,1);_279417_model.get()._field_Entries.__push(jule::new_ptr<_1aa87e1a7_KeyValPairExprModel>(_1aa87e1a7_KeyValPairExprModel{._field_Key=_281121_key.get()._field_Model, ._field_Val=_281621_val.get()._field_Model}));;
			}
			_iter_next_1ad8e4e73:;
			++it;
			goto _iter_begin_1ad8e4e73;
		}
		_iter_end_1ad8e4e73:;
	};
	return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_279331_m, 14)}), ._field_Mutable=true, ._field_Model=jule::Any(_279417_model, &__jule_any_type102), });;
}



inline jule::Ptr<_1aa957d85_Data> _1aa9736ec_evalBraceLit(jule::Ptr<_1aa959903_Eval> _self_, jule::Ptr<_1aa85db7b_BraceLit> _283736_lit) {
	{
		
		if ((_self_.get()._field_prefix == nullptr)) {
			_case_begin_1ad8ea242:;
			{
				_1aa959e0e_pushErr(_self_.ptr(), _283736_lit.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1aa987689_Map(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1ad8eaa17:;
			{
				return _1aa9733de_evalMap(_self_, _1aa987689_Map(_self_.get()._field_prefix.ptr()), _283736_lit);;
			}
		}
		else if ((_1aa9871b1_Struct(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1ad8eaa7d:;
			{
				return _1aa96aa35_evalStructLitExplicit(_self_, _1aa9871b1_Struct(_self_.get()._field_prefix.ptr()), _283736_lit.get()._field_Exprs, _283736_lit.get()._field_Token);;
			}
		}
		else {
			_case_begin_1ad8e9dac:;
			{
				_1aa959e0e_pushErr(_self_.ptr(), _283736_lit.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ad8e9483:;
	};
}



inline jule::Ptr<_1aa957d85_Data> _1aa973a0a_evalAnonFn(jule::Ptr<_1aa959903_Eval> _self_, jule::Ptr<_1aa8659a7_FnDecl> _285234_decl) {
	_1aa992e58_typeChecker _285317_tc = _1aa992e58_typeChecker{._field_s=_self_.get()._field_s, ._field_rootLookup=_self_.get()._field_lookup, ._field_lookup=_self_.get()._field_lookup, };;
	jule::Ptr<_1aa88c0c7_FnIns> _285817_ins = _1aa99979a_buildFn(&_285317_tc, _285234_decl);;
	if ((_285817_ins == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _self_.get()._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1ad8ee5cb:;
			{
				jule::Ptr<_1aa8b91d1_scopeChecker> _286421_sc = _self_.get()._field_lookup.cast_ptr<_1aa8b91d1_scopeChecker>(0);;
				jule::Ptr<_1aa8b91d1_scopeChecker> _286521_scc = _1aa8c9389_newChildChecker(_286421_sc);;
				_286521_scc.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1aa8b7e49_scopeLabel>>>(nullptr);
				_286521_scc.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1aa8b83bc_scopeGoto>>>(nullptr);
				_286521_scc.get()._field_owner=nullptr;
				_286521_scc.get()._field_childIndex=0LL;
				_286521_scc.get()._field_it=0LLU;
				_286521_scc.get()._field_cse=0LLU;
				_286521_scc.get()._field_owner=_285817_ins;
				_1aa903b77_checkFnInsSc(_self_.get()._field_s.ptr(), &(_285817_ins), &(_286521_scc));
			}
		}
		else {
			_case_begin_1ad8ee477:;
			{
				_1aa90421b_checkFnIns(_self_.get()._field_s, &(_285817_ins));
			}
		}
		_match_end_1ad8ee422:;
	};
	return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_285817_ins, 1)}), ._field_Model=jule::Any(jule::new_ptr<_1aa87dd00_AnonFnExprModel>(_1aa87dd00_AnonFnExprModel{._field_Func=_285817_ins, ._field_Global=_1aa95aaad_isGlobal(_self_.ptr())}), &__jule_any_type103), });;
}



inline jule::Ptr<_1aa957d85_Data> _1aa973d18_evalBinop(jule::Ptr<_1aa959903_Eval> _self_, jule::Ptr<_1aa85be21_BinopExpr> _288733_op) {
	_1aa976953_binaryEval _288817_bs = static__1aa97702a_newPlain(_self_);;
	if ((_self_.get()._field_prefix != nullptr)) {
		jule::Ptr<_1aa989339_Prim> _289117_prim = _1aa985c5e_Prim(_self_.get()._field_prefix.ptr());;
		if (((_289117_prim == nullptr) || (!(_1c0901698_IsNum(_1aa98969c_Str(_289117_prim.ptr())))))) {
			jule::Ptr<_1aa983872_TypeKind> _289325_prefix = _self_.get()._field_prefix;;
			_self_.get()._field_prefix=nullptr;
			__JULE_DEFER({
				_self_.get()._field_prefix=_289325_prefix;
			});;
			return _1aa97c4d6_eval(&_288817_bs, &(_288733_op));;
		};
	};
	return _1aa97c4d6_eval(&_288817_bs, &(_288733_op));;
}



inline jule::Ptr<_1aa957d85_Data> _1aa974126_evalExprKind(jule::Ptr<_1aa959903_Eval> _self_, jule::Any _290236_kind) {
	{
		auto &_match_expr{ _290236_kind };
		
		if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1ad903998:;
			{
				jule::Ptr<_1aa858835_RangeExpr> _290521_e = _290236_kind.cast_ptr<_1aa858835_RangeExpr>(&__jule_any_type104);;
				return _1aa974126_evalExprKind(_self_, _290521_e.get()._field_Expr.get()._field_Kind);;
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_1ad90678c:;
			{
				return _1c090b021_evalLit(_self_.ptr(), _290236_kind.cast_ptr<_1aa85957d_LitExpr>(&__jule_any_type105));;
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1ad906803:;
			{
				return _1aa961135_evalIdent(_self_.ptr(), _290236_kind.cast_ptr<_1aa85a20a_IdentExpr>(&__jule_any_type85));;
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1ad906319:;
			{
				return _1aa961443_evalUnary(_self_, _290236_kind.cast_ptr<_1aa85a914_UnaryExpr>(&__jule_any_type93));;
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1ad906380:;
			{
				return _1aa961751_evalVariadic(_self_, _290236_kind.cast_ptr<_1aa85acbb_VariadicExpr>(&__jule_any_type81));;
			}
		}
		else if (_match_expr.type == &__jule_any_type106) {
			_case_begin_1ad906407:;
			{
				return _1aa961a5e_evalUnsafe(_self_, _290236_kind.cast_ptr<_1aa859c87_UnsafeExpr>(&__jule_any_type106));;
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1ad90647e:;
			{
				return _1aa9625cb_evalSliceExpr(_self_, _290236_kind.cast_ptr<_1aa85eb38_SliceExpr>(&__jule_any_type99));;
			}
		}
		else if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1ad90687a:;
			{
				return _1aa965920_evalIndexing(_self_, _290236_kind.cast_ptr<_1aa8604a7_IndexingExpr>(&__jule_any_type107));;
			}
		}
		else if (_match_expr.type == &__jule_any_type108) {
			_case_begin_1ad906902:;
			{
				return _1aa966adb_evalSlicing(_self_, _290236_kind.cast_ptr<_1aa860ab2_SlicingExpr>(&__jule_any_type108));;
			}
		}
		else if (_match_expr.type == &__jule_any_type109) {
			_case_begin_1ad906979:;
			{
				return _1aa96a2c6_evalCast(_self_, _290236_kind.cast_ptr<_1aa85b173_CastExpr>(&__jule_any_type109));;
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1ad906a01:;
			{
				return _1aa96a5d4_evalNsSelection(_self_.ptr(), _290236_kind.cast_ptr<_1aa85b52a_NsSelectionExpr>(&__jule_any_type95));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1ad906a78:;
			{
				return _1aa96ad43_evalStructLit(_self_, _290236_kind.cast_ptr<_1aa85d708_StructLit>(&__jule_any_type110));;
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1ad906b00:;
			{
				return _1aa96b3b5_evalType(_self_.ptr(), _290236_kind.cast_ptr<_1aa854028_TypeDecl>(&__jule_any_type94));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1ad906b77:;
			{
				return _1aa96c87d_evalFnCall(_self_, _290236_kind.cast_ptr<_1aa85c52b_FnCallExpr>(&__jule_any_type111));;
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1ad906bee:;
			{
				return _1aa972c29_evalSubIdent(_self_, _290236_kind.cast_ptr<_1aa85b99d_SubIdentExpr>(&__jule_any_type91));;
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1ad906c76:;
			{
				return _1aa973037_evalTuple(_self_, _290236_kind.cast_ptr<_1aa8591c6_TupleExpr>(&__jule_any_type86));;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1ad906ced:;
			{
				return _1aa9736ec_evalBraceLit(_self_, _290236_kind.cast_ptr<_1aa85db7b_BraceLit>(&__jule_any_type112));;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1ad906d75:;
			{
				return _1aa973a0a_evalAnonFn(_self_, _290236_kind.cast_ptr<_1aa8659a7_FnDecl>(&__jule_any_type14));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1ad906dec:;
			{
				return _1aa973d18_evalBinop(_self_, _290236_kind.cast_ptr<_1aa85be21_BinopExpr>(&__jule_any_type113));;
			}
		}
		else {
			_case_begin_1ad9061b5:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad9060c7:;
	};
}



inline jule::Ptr<_1aa957d85_Data> _1aa974434_eval(jule::Ptr<_1aa959903_Eval> _self_, jule::Ptr<_1aa858549_Expr> _295028_expr) {
	jule::Ptr<_1aa957d85_Data> _295117_d = _1aa974126_evalExprKind(_self_, _295028_expr.get()._field_Kind);;
	if (((_295117_d == nullptr) || (_295117_d.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	{
		
		if ((((_self_.get()._field_owner == nullptr) || (!(_self_.get()._field_owner.get()._field_Constant))) && _1aa987b62_comptime(_295117_d.get()._field_Kind.ptr()))) {
			_case_begin_1ad911511:;
			{
				_1aa8dbbb5_pushErr(_self_.get()._field_s.ptr(), _295028_expr.get()._field_Token, jule::Str("compile-time evaluations cannot used as expression", 50), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1aa986e4c_Fn(_295117_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad911588:;
			{
				jule::Ptr<_1aa88c0c7_FnIns> _296121_f = _1aa986e4c_Fn(_295117_d.get()._field_Kind.ptr());;
				if (_1aa88d45d_IsBuiltin(_296121_f.ptr())) {
					_1aa8dbbb5_pushErr(_self_.get()._field_s.ptr(), _295028_expr.get()._field_Token, jule::Str("built-in functions should be invoked", 36), jule::Slice<jule::Any>());
					goto _match_end_1ad9113bd;
				};
				if ((_296121_f.get()._field_Generics.len() != _296121_f.get()._field_Decl.get()._field_Generics.len())) {
					_1aa8dbbb5_pushErr(_self_.get()._field_s.ptr(), _295028_expr.get()._field_Token, jule::Str("define has generics", 19), jule::Slice<jule::Any>());
				};
				if (((!(_296121_f.get()._field_Decl.get()._field_Statically)) && _1aa889aec_IsMethod(_296121_f.get()._field_Decl.ptr()))) {
					_1aa8dbbb5_pushErr(_self_.get()._field_s.ptr(), _295028_expr.get()._field_Token, jule::Str("methods should be invoked", 25), jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_1ad9113bd:;
	};
	return _295117_d;;
}



inline jule::Ptr<_1aa957d85_Data> _1aa974742_evalExpr(jule::Ptr<_1aa959903_Eval> _self_, jule::Ptr<_1aa858549_Expr> _298032_expr) {
	jule::Ptr<_1aa957d85_Data> _298117_d = _1aa974434_eval(_self_, _298032_expr);;
	{
		
		if ((_298117_d == nullptr)) {
			_case_begin_1ad916824:;
			{
				return nullptr;;
			}
		}
		else if (_298117_d.get()._field_Decl) {
			_case_begin_1ad91689b:;
			{
				_1aa959e0e_pushErr(_self_.ptr(), _298032_expr.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1ad916758:;
			{
				return _298117_d;;
			}
		}
		_match_end_1ad9166e2:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1aa959903_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}



inline _1aa974bb5_unaryEval static__1aa97516b_new(jule::Ptr<_1aa959903_Eval> _300123_e) {
	return _1aa974bb5_unaryEval{._field_e=_300123_e, };;
}



inline void _1aa975347_minus(_1aa974bb5_unaryEval* _self_) {
	{
		
		if (((*(_self_))._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1ad91834d:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1aa985c5e_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad91801d:;
			{
				if ((!(_1c0901698_IsNum(_1aa983c6d_Str((*(_self_))._field_d.get()._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1aa9871b1_Struct((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad918084:;
			{
				if ((_1aa9871b1_Struct((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_Neg == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1ad917ea7:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ad917d75:;
	};
	if (_1aa958748_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1c090625d_IsF64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1ad91b8b2:;
				{
					_1c090536c_SetF64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::F64>((-(_1c0903db5_ReadF64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1c09057ac_IsI64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1ad91b939:;
				{
					_1c0904877_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((-(_1c0903414_ReadI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1c0905a21_IsU64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1ad91b9b1:;
				{
					_1c0904877_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((-(_1c0904129_AsI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_1ad91b7c4:;
		};
	};
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1aa87b65a_UnaryExprModel>(_1aa87b65a_UnaryExprModel{._field_Expr=jule::new_ptr<_1aa957d85_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
}



inline void _1aa975523_plus(_1aa974bb5_unaryEval* _self_) {
	{
		
		if (((*(_self_))._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1ad920cb2:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1aa985c5e_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad920982:;
			{
				if ((!(_1c0901698_IsNum(_1aa983c6d_Str((*(_self_))._field_d.get()._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1aa9871b1_Struct((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad9209e8:;
			{
				if ((_1aa9871b1_Struct((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_Pos == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1ad92091b:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ad920850:;
	};
	if (_1aa958748_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1c090625d_IsF64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1ad924326:;
				{
					_1c090536c_SetF64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::F64>((+(_1c0903db5_ReadF64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1c09057ac_IsI64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1ad92439d:;
				{
					_1c0904877_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((+(_1c0903414_ReadI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1c0905a21_IsU64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1ad924425:;
				{
					_1c0904877_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((+(_1c0904129_AsI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_1ad924238:;
		};
	};
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1aa87b65a_UnaryExprModel>(_1aa87b65a_UnaryExprModel{._field_Expr=jule::new_ptr<_1aa957d85_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
}



inline void _1aa9756ee_caret(_1aa974bb5_unaryEval* _self_) {
	{
		
		if (((*(_self_))._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1ad928704:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1aa985c5e_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad9283c4:;
			{
				if ((!(_1dc5c1a33_IsInt(_1aa983c6d_Str((*(_self_))._field_d.get()._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1aa9871b1_Struct((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad92843a:;
			{
				if ((_1aa9871b1_Struct((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_BitNot == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1ad92835d:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ad928292:;
	};
	if (_1aa958748_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1c09057ac_IsI64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1ad92bc57:;
				{
					_1c0904877_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((~(_1c0903414_ReadI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1c0905a21_IsU64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1ad92bcce:;
				{
					_1c0904aec_SetU64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::U64>((~(_1c0903678_ReadU64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_1ad92bb7a:;
		};
	};
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1aa87b65a_UnaryExprModel>(_1aa87b65a_UnaryExprModel{._field_Expr=jule::new_ptr<_1aa957d85_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
}



inline void _1aa9758ca_excl(_1aa974bb5_unaryEval* _self_) {
	jule::Ptr<_1aa989339_Prim> _312013_t = _1aa985c5e_Prim((*(_self_))._field_d.get()._field_Kind.ptr());;
	if (((_312013_t == nullptr) || (!(_1aa98c309_IsBool(_312013_t.ptr()))))) {
		(*(_self_))._field_d=nullptr;
		return;;
	};
	if (_1aa958748_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1c0905c85_IsBool((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1ad931476:;
				{
					_1c0904d72_SetBool((*(_self_))._field_d.get()._field_Constant.ptr(), (!(_1c09038dc_ReadBool((*(_self_))._field_d.get()._field_Constant.ptr()))));
				}
			}
			_match_end_1ad931377:;
		};
	};
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1aa87b65a_UnaryExprModel>(_1aa87b65a_UnaryExprModel{._field_Expr=jule::new_ptr<_1aa957d85_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
}



inline void _1aa975aa6_star(_1aa974bb5_unaryEval* _self_) {
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1aa87b65a_UnaryExprModel>(_1aa87b65a_UnaryExprModel{._field_Expr=jule::new_ptr<_1aa957d85_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
	{
		
		if ((_1aa986237_Ptr((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad934325:;
			{
				if ((!(_1aa95a849_isUnsafe((*(_self_))._field_e.ptr())))) {
					_1aa959e0e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_u.get()._field_Op, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1aa991132_Ptr> _315221_t = _1aa986237_Ptr((*(_self_))._field_d.get()._field_Kind.ptr());;
				if (_1aa991b05_IsUnsafe(_315221_t.ptr())) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
				(*(_self_))._field_d.get()._field_Kind=_315221_t.get()._field_Elem;
			}
		}
		else if ((_1aa985ec3_Sptr((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad933ee5:;
			{
				(*(_self_))._field_d.get()._field_Kind=_1aa985ec3_Sptr((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		else {
			_case_begin_1ad933e7e:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ad933e18:;
	};
	(*(_self_))._field_d.get()._field_Constant=nullptr;
	(*(_self_))._field_d.get()._field_Lvalue=true;
}



inline void _1aa975c82_amper(_1aa974bb5_unaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1ad938b54:;
			{
				jule::Ptr<_1aa87be0d_StructLitExprModel> _317221_lit = (*(_self_))._field_d.get()._field_Model.cast_ptr<_1aa87be0d_StructLitExprModel>(&__jule_any_type100);;
				_1aa97d273_makeStructLitAlloc(&((*(_self_))._field_d), &(_317221_lit));
			}
		}
		else {
			_case_begin_1ad938549:;
			{
				{
					
					if (_1aa99b923_canGetPtr(&((*(_self_))._field_d))) {
						_case_begin_1ad939193:;
						{
							(*(_self_))._field_d.get()._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(jule::new_ptr<_1aa991132_Ptr>(_1aa991132_Ptr{._field_Elem=(*(_self_))._field_d.get()._field_Kind}), 16)});
							(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1aa87b65a_UnaryExprModel>(_1aa87b65a_UnaryExprModel{._field_Expr=jule::new_ptr<_1aa957d85_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
						}
					}
					else {
						_case_begin_1ad938add:;
						{
							(*(_self_))._field_d=nullptr;
						}
					}
					_match_end_1ad938a22:;
				};
			}
		}
		_match_end_1ad9384c2:;
	};
	if (((*(_self_))._field_d != nullptr)) {
		(*(_self_))._field_d.get()._field_Constant=nullptr;
		(*(_self_))._field_d.get()._field_Lvalue=false;
	};
}



inline void _1aa975e5d_typeDecl(_1aa974bb5_unaryEval* _self_) {
	_1aa992e58_typeChecker _319617_tc = _1aa992e58_typeChecker{._field_s=(*(_self_))._field_e.get()._field_s, ._field_rootLookup=(*(_self_))._field_e.get()._field_lookup, ._field_lookup=(*(_self_))._field_e.get()._field_lookup, ._field_errorToken=(*(_self_))._field_u.get()._field_Op, };;
	{
		auto &_match_expr{ (*(_self_))._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1ad93c1eb:;
			{
				(*(_self_))._field_d.get()._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa998139_buildPtrFromType(&_319617_tc, &((*(_self_))._field_d.get()._field_Kind)), 16)});
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1ad93e7c5:;
			{
				(*(_self_))._field_d.get()._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa997a1d_buildSptrFromType(&_319617_tc, &((*(_self_))._field_d.get()._field_Kind)), 11)});
			}
		}
		else {
			_case_begin_1ad93d197:;
			{
				_1aa959e0e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_u.get()._field_Op, jule::Str("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_u.get()._field_Op.get()._field_Kind, &__jule_any_type5),jule::Any(_1aa983c6d_Str((*(_self_))._field_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ad93d142:;
	};
	(*(_self_))._field_d.get()._field_Decl=true;
}



inline void _1aa976139_evalData(_1aa974bb5_unaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1ad941b29:;
			{
				jule::Ptr<_1aa983872_TypeKind> _321921_prefix = (*(_self_))._field_e.get()._field_prefix;;
				(*(_self_))._field_e.get()._field_prefix=nullptr;
				(*(_self_))._field_d=_1aa974126_evalExprKind((*(_self_))._field_e, (*(_self_))._field_u.get()._field_Expr.get()._field_Kind);
				(*(_self_))._field_e.get()._field_prefix=_321921_prefix;
			}
		}
		else {
			_case_begin_1ad9416ea:;
			{
				(*(_self_))._field_d=_1aa974126_evalExprKind((*(_self_))._field_e, (*(_self_))._field_u.get()._field_Expr.get()._field_Kind);
			}
		}
		_match_end_1ad941695:;
	};
}



inline jule::Ptr<_1aa957d85_Data> _1aa976414_eval(_1aa974bb5_unaryEval* _self_, jule::Ptr<_1aa85a914_UnaryExpr> _322827_u) {
	(*(_self_))._field_u=_322827_u;
	_1aa976139_evalData(_self_);
	if (((*(_self_))._field_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_self_))._field_d.get()._field_Decl) {
		_1aa975e5d_typeDecl(_self_);
		return (*(_self_))._field_d;;
	};
	jule::Ptr<_1aa983872_TypeKind> _323913_kind = (*(_self_))._field_d.get()._field_Kind;;
	{
		auto &_match_expr{ (*(_self_))._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1ad945cb5:;
			{
				_1aa975347_minus(_self_);
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1ad9457a9:;
			{
				_1aa975523_plus(_self_);
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1ad945820:;
			{
				_1aa9756ee_caret(_self_);
			}
		}
		else if (_match_expr == jule::Str("!", 1)) {
			_case_begin_1ad945886:;
			{
				_1aa9758ca_excl(_self_);
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1ad9458ec:;
			{
				_1aa975aa6_star(_self_);
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1ad945e5d:;
			{
				_1aa975c82_amper(_self_);
			}
		}
		else {
			_case_begin_1ad945743:;
			{
				(*(_self_))._field_d=nullptr;
			}
		}
		_match_end_1ad945479:;
	};
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1ad945ed5:;
			{
				_1aa959e0e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_u.get()._field_Op, jule::Str("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_u.get()._field_Op.get()._field_Kind, &__jule_any_type5),jule::Any(_1aa983c6d_Str(_323913_kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		else if (_1aa958748_IsConst((*(_self_))._field_d.ptr())) {
			_case_begin_1ad947c73:;
			{
				(*(_self_))._field_d.get()._field_Model=jule::Any((*(_self_))._field_d.get()._field_Constant, &__jule_any_type19);
			}
		}
		_match_end_1ad947c1d:;
	};
	(*(_self_))._field_d.get()._field_Mutable=true;
	return (*(_self_))._field_d;;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa974bb5_unaryEval _Src) {
	_Stream << "unaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline _1aa976953_binaryEval static__1aa97702a_newPlain(jule::Ptr<_1aa959903_Eval> _327728_e) {
	return _1aa976953_binaryEval{._field_e=_327728_e, };;
}



inline _1aa976953_binaryEval static__1aa97736b_new(jule::Ptr<_1aa959903_Eval> _328323_e, jule::Ptr<_1db944d0d_Token> _328337_op) {
	return _1aa976953_binaryEval{._field_e=_328323_e, ._field_op=_328337_op};;
}



inline jule::Bool _1aa9775d0_checkTypeCompatibility(_1aa976953_binaryEval* _self_) {
	return _1aa8e43a4_checkTypeCompatibility((*(_self_))._field_e.get()._field_s, &((*(_self_))._field_l.get()._field_Kind), &((*(_self_))._field_r.get()._field_Kind), &((*(_self_))._field_op));;
}



inline jule::Bool _1aa977877_checkStructCommonOperatorCompatibility(_1aa976953_binaryEval* _self_) {
	jule::Ptr<_1aa88c0c7_FnIns> _329717_overload = nullptr;;
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1ad94bded:;
			{
				_329717_overload=_1aa9871b1_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Shl;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_1ad94d5c5:;
			{
				_329717_overload=_1aa9871b1_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Shr;
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1ad94d63b:;
			{
				_329717_overload=_1aa9871b1_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Add;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1ad94c3b5:;
			{
				_329717_overload=_1aa9871b1_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Sub;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1ad94c42b:;
			{
				_329717_overload=_1aa9871b1_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Div;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1ad94c492:;
			{
				_329717_overload=_1aa9871b1_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Mul;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1ad94c508:;
			{
				_329717_overload=_1aa9871b1_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Mod;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1ad94d6d5:;
			{
				_329717_overload=_1aa9871b1_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitAnd;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1ad94d74b:;
			{
				_329717_overload=_1aa9871b1_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitOr;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1ad94d7b2:;
			{
				_329717_overload=_1aa9871b1_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitXor;
			}
		}
		else {
			_case_begin_1ad94c34e:;
			{
				_1aa959e0e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1aa983c6d_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return false;;
			}
		}
		_match_end_1ad94c2c7:;
	};
	if ((_329717_overload == nullptr)) {
		_1aa959e0e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1aa983c6d_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return false;;
	};
	jule::Ptr<_1aa88b208_ParamIns> _332917_p = _329717_overload.get()._field_Params[1LL];;
	return _1aa8e3e53_checkAssignType((*(_self_))._field_e.get()._field_s, _332917_p.get()._field_Decl.get()._field_Reference, &(_332917_p.get()._field_Kind), &((*(_self_))._field_r), (*(_self_))._field_op);;
}



inline jule::Ptr<_1aa957d85_Data> _1aa977b1e_evalNil(_1aa976953_binaryEval* _self_) {
	if ((!(_1aa9852ad_NilCompatible((*(_self_))._field_r.get()._field_Kind.ptr())))) {
		_1aa959e0e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("nil", 3), &__jule_any_type5),jule::Any(_1aa983c6d_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1ad95714a:;
			{
				return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("bool", 4)), 10)}), });;
			}
		}
		else {
			_case_begin_1ad9572c1:;
			{
				_1aa959e0e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(jule::Str("nil", 3), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ad95725a:;
	};
}



inline jule::Ptr<_1aa957d85_Data> _1aa977d83_evalEnum(_1aa976953_binaryEval* _self_) {
	jule::Ptr<_1aa89ddca_Enum> _335417_enm = _1aa98649b_Enum((*(_self_))._field_l.get()._field_Kind.ptr());;
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1ad959537:;
			{
				jule::Ptr<_1aa983872_TypeKind> _335821_rkind = (*(_self_))._field_r.get()._field_Kind;;
				if ((_1aa98649b_Enum((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
					_335821_rkind=_1aa98649b_Enum((*(_self_))._field_r.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind;
				};
				if ((!(_1aa8e43a4_checkTypeCompatibility((*(_self_))._field_e.get()._field_s, &(_335417_enm.get()._field_Kind.get()._field_Kind), &(_335821_rkind), &((*(_self_))._field_op))))) {
					return nullptr;;
				};
				return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("bool", 4)), 10)}), });;
			}
		}
		_match_end_1ad9594d2:;
	};
	if (((_1aa98649b_Enum((*(_self_))._field_r.get()._field_Kind.ptr()) == nullptr) || (_335417_enm != _1aa98649b_Enum((*(_self_))._field_r.get()._field_Kind.ptr())))) {
		_1aa959e0e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_335417_enm.get()._field_Ident, &__jule_any_type5),jule::Any(_1aa983c6d_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1ad5e50a2:;
			{
				if ((!(_1c0901698_IsNum(_1aa983c6d_Str(_335417_enm.get()._field_Kind.get()._field_Kind.ptr()))))) {
					_1aa959e0e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_335417_enm.get()._field_Ident, &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("bool", 4)), 10)}), });;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1ad68c424:;
			{
				jule::Ptr<_1aa89d3d5_EnumItem> _339217_first = _335417_enm.get()._field_Items[0LL];;
				{
					
					if (_1c09057ac_IsI64(_339217_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr())) {
						_case_begin_1ad690229:;
						{
							if ((_1c0903414_ReadI64(_339217_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr()) == 0LL)) {
								goto _julec_label_next;
							};
							goto _julec_label_err;
						}
					}
					else if (_1c0905a21_IsU64(_339217_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr())) {
						_case_begin_1ad68e756:;
						{
							if ((_1c0903678_ReadU64(_339217_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr()) == 0LLU)) {
								goto _julec_label_next;
							};
							goto _julec_label_err;
						}
					}
					else {
						_case_begin_1ad68ed83:;
						{
							jule::panic(jule::Str("unimplemented enum type, this panic call should be unreachable", 62) + jule::Str("\nlocation: std/jule/sema/eval.jule:3405:17"));;
						}
					}
					_match_end_1ad68ed1c:;
				};
				_julec_label_err:;
				_1aa959e0e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("the @ enum type is not supports @ operator", 42), jule::Slice<jule::Any>::make({jule::Any(_335417_enm.get()._field_Ident, &__jule_any_type5),jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5)}));
				_1aa95a22d_pushSuggestion((*(_self_))._field_e.ptr(), jule::Str("define default enum field (the first one is default) with zero value to use & operator", 86), jule::Slice<jule::Any>());
				_julec_label_next:;
				goto _case_begin_1ad68c48a;
			}
		}
		else if (_match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1ad68c48a:;
			{
				if (((_1aa985c5e_Prim(_335417_enm.get()._field_Kind.get()._field_Kind.ptr()) == nullptr) || (!(_1dc5c1a33_IsInt(_1aa98969c_Str(_1aa985c5e_Prim(_335417_enm.get()._field_Kind.get()._field_Kind.ptr()).ptr())))))) {
					_1aa959e0e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_335417_enm.get()._field_Ident, &__jule_any_type5)}));
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1ad68b500:;
			{
				_1aa959e0e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_335417_enm.get()._field_Ident, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ad68b49a:;
	};
}



inline jule::Ptr<_1aa957d85_Data> _1aa9780e7_evalTypeEnum(_1aa976953_binaryEval* _self_) {
	jule::Ptr<_1aa8a04c5_TypeEnum> _342517_enm = _1aa986710_TypeEnum((*(_self_))._field_l.get()._field_Kind.ptr());;
	if ((!(_1aa9775d0_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1ad697792:;
			{
				return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("bool", 4)), 10)}), });;
			}
		}
		else {
			_case_begin_1ad697352:;
			{
				_1aa959e0e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1aa8a0805_Str(_342517_enm.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ad697022:;
	};
}



inline jule::Ptr<_1aa957d85_Data> _1aa97835b_evalSptr(_1aa976953_binaryEval* _self_) {
	if ((!(_1aa9775d0_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1ad699343:;
			{
				return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("bool", 4)), 10)}), });;
			}
		}
		else {
			_case_begin_1ad698980:;
			{
				_1aa959e0e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1aa983c6d_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ad69892a:;
	};
}



inline jule::Ptr<_1aa957d85_Data> _1aa9785c0_evalPtr(_1aa976953_binaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1ad69a5a8:;
			{
				if ((!(_1aa9775d0_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("bool", 4)), 10)}), });;
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1)) {
			_case_begin_1ad69c29c:;
			{
				if ((_1aa986237_Ptr((*(_self_))._field_l.get()._field_Kind.ptr()) == nullptr)) {
					({
						jule::Ptr<_1aa957d85_Data> ___jule_assign_arg = (*(_self_))._field_r;
						jule::Ptr<_1aa957d85_Data> _1___jule_assign_arg = (*(_self_))._field_l;
						(*(_self_))._field_l = ___jule_assign_arg;
						(*(_self_))._field_r = _1___jule_assign_arg;
					});
				};
				if (_1aa991b05_IsUnsafe(_1aa986237_Ptr((*(_self_))._field_l.get()._field_Kind.ptr()).ptr())) {
					_1aa959e0e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1aa983c6d_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				};
				if ((!(_1aa97e3b7_isPtrArithmeticCompatible(&((*(_self_))._field_l), &((*(_self_))._field_r))))) {
					_1aa959e0e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("type @ is incompatible to use for pointer arithmetic", 52), jule::Slice<jule::Any>::make({jule::Any(_1aa983c6d_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1ad69aaa3:;
			{
				_1aa959e0e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1aa983c6d_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ad69b147:;
	};
}



inline jule::Ptr<_1aa957d85_Data> _1aa978834_evalArr(_1aa976953_binaryEval* _self_) {
	if ((!(_1aa9775d0_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1ad6a21c5:;
			{
				return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("bool", 4)), 10)}), });;
			}
		}
		else {
			_case_begin_1ad6a22a2:;
			{
				_1aa959e0e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1aa983c6d_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ad69cb4e:;
	};
}



inline jule::Ptr<_1aa957d85_Data> _1aa978a98_evalSlc(_1aa976953_binaryEval* _self_) {
	if ((!(_1aa9775d0_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1ad6a4309:;
			{
				return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("bool", 4)), 10)}), });;
			}
		}
		else {
			_case_begin_1ad6a3946:;
			{
				_1aa959e0e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1aa983c6d_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ad6a38e1:;
	};
}



inline jule::Ptr<_1aa957d85_Data> _1aa978d0c_evalFn(_1aa976953_binaryEval* _self_) {
	if ((!(_1aa9775d0_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1ad6a4628:;
			{
				return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("bool", 4)), 10)}), });;
			}
		}
		else {
			_case_begin_1ad6a5a7a:;
			{
				_1aa959e0e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1aa983c6d_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ad6a5a25:;
	};
}



inline jule::Ptr<_1aa957d85_Data> _1aa979071_evalStruct(_1aa976953_binaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str(">", 1)) {
			_case_begin_1ad6a7c14:;
			{
				if ((_1aa9871b1_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Gt == nullptr)) {
					_1aa959e0e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1aa983c6d_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("bool", 4)), 10)}), });;
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_1ad6a7c7a:;
			{
				if ((_1aa9871b1_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_GtEq == nullptr)) {
					_1aa959e0e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1aa983c6d_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("bool", 4)), 10)}), });;
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_1ad6a8396:;
			{
				if ((_1aa9871b1_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Lt == nullptr)) {
					_1aa959e0e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1aa983c6d_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("bool", 4)), 10)}), });;
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_1ad6a840c:;
			{
				if ((_1aa9871b1_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_LtEq == nullptr)) {
					_1aa959e0e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1aa983c6d_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("bool", 4)), 10)}), });;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1ad6a8473:;
			{
				if ((!(_1aa9775d0_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("bool", 4)), 10)}), });;
			}
		}
		_match_end_1ad6a8242:;
	};
	if ((!(_1aa977877_checkStructCommonOperatorCompatibility(_self_)))) {
		return nullptr;;
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_1aa957d85_Data> _1aa9792d5_evalTrait(_1aa976953_binaryEval* _self_) {
	if ((!(_1aa9775d0_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1ad6b2290:;
			{
				return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("bool", 4)), 10)}), });;
			}
		}
		else {
			_case_begin_1ad6b23b1:;
			{
				_1aa959e0e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1aa983c6d_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ad6b20d6:;
	};
}



inline jule::Ptr<_1aa957d85_Data> _1aa979549_evalAny(_1aa976953_binaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1ad6b4094:;
			{
				return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("bool", 4)), 10)}), });;
			}
		}
		else {
			_case_begin_1ad6b3a11:;
			{
				_1aa959e0e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(jule::Str("any", 3), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ad6b25c0:;
	};
}



inline jule::Ptr<_1aa957d85_Data> _1aa9797ad_evalBool(_1aa976953_binaryEval* _self_) {
	if ((!(_1aa9775d0_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("&&", 2) || _match_expr == jule::Str("||", 2)) {
			_case_begin_1ad6b5d43:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1ad6b5480:;
			{
				_1aa959e0e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1aa983c6d_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ad6b542a:;
	};
}



inline jule::Ptr<_1aa957d85_Data> _1aa979a22_evalStr(_1aa976953_binaryEval* _self_) {
	jule::Str _366717_rk = _1aa983c6d_Str((*(_self_))._field_r.get()._field_Kind.ptr());;
	if ((!_366717_rk.equal("str", 3))) {
		_1aa959e0e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type5),jule::Any(_366717_rk, &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1ad6b92b9:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1ad6b9e13:;
			{
				return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("bool", 4)), 10)}), });;
			}
		}
		else {
			_case_begin_1ad6b78b1:;
			{
				_1aa959e0e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(jule::Str("str", 3), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ad6b8e01:;
	};
}



inline void _1aa979bed_setTypeToGreater(_1aa976953_binaryEval* _self_) {
	jule::Ptr<_1aa989339_Prim> _369413_lp = _1aa985c5e_Prim((*(_self_))._field_l.get()._field_Kind.ptr());;
	jule::Ptr<_1aa989339_Prim> _369513_rp = _1aa985c5e_Prim((*(_self_))._field_r.get()._field_Kind.ptr());;
	if (_1aa958748_IsConst((*(_self_))._field_l.ptr())) {
		if ((!(_1aa958748_IsConst((*(_self_))._field_r.ptr())))) {
			(*(_self_))._field_l.get()._field_Kind=(*(_self_))._field_r.get()._field_Kind;
			(*(_self_))._field_l.get()._field_Constant.get()._field_Kind=_369513_rp.get()._field_Kind;
			return;;
		};
		goto _julec_label_set;
	};
	if (_1aa958748_IsConst((*(_self_))._field_r.ptr())) {
		(*(_self_))._field_r.get()._field_Constant.get()._field_Kind=_369413_lp.get()._field_Kind;
		return;;
	};
	_julec_label_set:;
	if (((*(_self_))._field_l.get()._field_untyped && (!((*(_self_))._field_r.get()._field_untyped)))) {
		(*(_self_))._field_l.get()._field_Kind=(*(_self_))._field_r.get()._field_Kind;
		if (_1aa958748_IsConst((*(_self_))._field_l.ptr())) {
			(*(_self_))._field_l.get()._field_Constant.get()._field_Kind=_369513_rp.get()._field_Kind;
		};
		(*(_self_))._field_l.get()._field_untyped=false;
		return;;
	} else if (((!((*(_self_))._field_l.get()._field_untyped)) && (*(_self_))._field_r.get()._field_untyped)) {
		return;;
	};
	if (_1dc5c046b_IsGreater(_369513_rp.get()._field_Kind, _369413_lp.get()._field_Kind)) {
		(*(_self_))._field_l.get()._field_Kind=(*(_self_))._field_r.get()._field_Kind;
		if (_1aa958748_IsConst((*(_self_))._field_l.ptr())) {
			(*(_self_))._field_l.get()._field_Constant.get()._field_Kind=_369513_rp.get()._field_Kind;
		};
	};
}



inline void _1aa979e40_checkModData(_1aa976953_binaryEval* _self_, jule::Ptr<_1aa957d85_Data>* _372736_d) {
	if ((!(_1aa958748_IsConst((*(_372736_d)).ptr())))) {
		if (((_1aa985c5e_Prim((*(_372736_d)).get()._field_Kind.ptr()) == nullptr) || (!(_1dc5c1a33_IsInt(_1aa985c5e_Prim((*(_372736_d)).get()._field_Kind.ptr()).get()._field_Kind))))) {
			_1aa959e0e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_1aa93b066_sigAssignable(jule::Str("i64", 3), _372736_d)) {
			_case_begin_1ab54b406:;
			{
				_1c0904877_SetI64((*(_372736_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_1c0904129_AsI64((*(_372736_d)).get()._field_Constant.ptr())));
			}
		}
		else if (_1aa93b3eb_unsigAssignable(jule::Str("u64", 3), _372736_d)) {
			_case_begin_1ab54b0d7:;
			{
				_1c0904aec_SetU64((*(_372736_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_1c090438d_AsU64((*(_372736_d)).get()._field_Constant.ptr())));
			}
		}
		else {
			_case_begin_1ab54b071:;
			{
				_1aa959e0e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ab5499cb:;
	};
}



inline void _1aa97a11b_mod(_1aa976953_binaryEval* _self_) {
	_1aa979e40_checkModData(_self_, &((*(_self_))._field_l));
	_1aa979e40_checkModData(_self_, &((*(_self_))._field_r));
}



inline jule::Bool _1aa97a4c3_numbersAreCompatibile(_1aa976953_binaryEval* _self_, jule::Str* _374937_lk, jule::Str* _374947_rk) {
	if ((!(_1c0901698_IsNum((*(_374947_rk)))))) {
		return false;;
	};
	if ((_1aa958748_IsConst((*(_self_))._field_l.ptr()) && (*(_self_))._field_l.get()._field_untyped)) {
		return true;;
	};
	if ((*(_374937_lk)).equal("f32", 3)) {
		if ((_1aa958748_IsConst((*(_self_))._field_r.ptr()) && (*(_self_))._field_r.get()._field_untyped)) {
			return true;;
		};
		return (*(_374947_rk)).equal("f32", 3);;
	};
	if ((*(_374937_lk)).equal("f64", 3)) {
		if ((_1aa958748_IsConst((*(_self_))._field_r.ptr()) && (*(_self_))._field_r.get()._field_untyped)) {
			return true;;
		};
		return (*(_374947_rk)).equal("f64", 3);;
	};
	if ((_1aa958748_IsConst((*(_self_))._field_r.ptr()) && (*(_self_))._field_r.get()._field_untyped)) {
		return true;;
	};
	return ((*(_374937_lk)) == (*(_374947_rk)));;
}



inline jule::Ptr<_1aa957d85_Data> _1aa97a737_evalFloat(_1aa976953_binaryEval* _self_) {
	jule::Str _377513_lk = _1aa985c5e_Prim((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Kind;;
	jule::Str _377613_rk = _1aa985c5e_Prim((*(_self_))._field_r.get()._field_Kind.ptr()).get()._field_Kind;;
	if ((!(_1aa97a4c3_numbersAreCompatibile(_self_, &(_377513_lk), &(_377613_rk))))) {
		_1aa959e0e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_377513_lk, &__jule_any_type5),jule::Any(_377613_rk, &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_1ad962d8c:;
			{
				if (((!(_1aa958748_IsConst((*(_self_))._field_l.ptr()))) || (!(_1aa93b73c_intAssignable(jule::Str("i64", 3), &((*(_self_))._field_l)))))) {
					_1aa959e0e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_377513_lk, &__jule_any_type5),jule::Any(_377613_rk, &__jule_any_type5)}));
					return nullptr;;
				};
				if (((!(_1aa958748_IsConst((*(_self_))._field_r.ptr()))) || (!(_1aa93b73c_intAssignable(jule::Str("u64", 3), &((*(_self_))._field_r)))))) {
					_1aa959e0e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_377513_lk, &__jule_any_type5),jule::Any(_377613_rk, &__jule_any_type5)}));
					return nullptr;;
				};
				_1c0904877_SetI64((*(_self_))._field_l.get()._field_Constant.ptr(), static_cast<jule::I64>(_1c0904129_AsI64((*(_self_))._field_l.get()._field_Constant.ptr())));
				_1c0904aec_SetU64((*(_self_))._field_r.get()._field_Constant.ptr(), static_cast<jule::U64>(_1c090438d_AsU64((*(_self_))._field_r.get()._field_Constant.ptr())));
				if ((!(_1aa97db9c_isOkForShifting(&((*(_self_))._field_r))))) {
					_1aa959e0e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_1ad9622a9:;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1ad967798:;
			{
				_1aa979bed_setTypeToGreater(_self_);
				return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("bool", 4)), 10)}), });;
			}
		}
		_match_end_1ad967743:;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1)) {
			_case_begin_1ad9620ab:;
			{
				_1aa979bed_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1ad969844:;
			{
				if ((!(_1dc5c1a33_IsInt(_377613_rk)))) {
					_1aa959e0e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_377513_lk, &__jule_any_type5),jule::Any(_377613_rk, &__jule_any_type5)}));
					return nullptr;;
				};
				_1aa97a11b_mod(_self_);
				_1aa979bed_setTypeToGreater(_self_);
				return (*(_self_))._field_r;;
			}
		}
		else {
			_case_begin_1ad968667:;
			{
				_1aa959e0e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for floating-point type(s)", 52), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ad96825a:;
	};
}



inline jule::Ptr<_1aa957d85_Data> _1aa97a99b_evalInt(_1aa976953_binaryEval* _self_) {
	jule::Str _384113_lk = _1aa985c5e_Prim((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Kind;;
	jule::Str _384213_rk = _1aa985c5e_Prim((*(_self_))._field_r.get()._field_Kind.ptr()).get()._field_Kind;;
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_1ad969d2d:;
			{
				if (((!(_1dc5c1a33_IsInt(_384113_lk))) || (!(_1dc5c1a33_IsInt(_384213_rk))))) {
					_1aa959e0e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_384113_lk, &__jule_any_type5),jule::Any(_384213_rk, &__jule_any_type5)}));
					return nullptr;;
				};
				if ((!(_1aa97db9c_isOkForShifting(&((*(_self_))._field_r))))) {
					_1aa959e0e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_1ad96c946:;
	};
	if ((!(_1aa97a4c3_numbersAreCompatibile(_self_, &(_384113_lk), &(_384213_rk))))) {
		_1aa959e0e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_384113_lk, &__jule_any_type5),jule::Any(_384213_rk, &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1ad970828:;
			{
				return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("bool", 4)), 10)}), });;
			}
		}
		_match_end_1ad970790:;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1ad96ca78:;
			{
				_1aa979bed_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1ad972781:;
			{
				_1aa97a11b_mod(_self_);
				_1aa979bed_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1ad9715e8:;
			{
				_1aa959e0e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for integer type(s)", 45), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ad97150a:;
	};
}



inline jule::Ptr<_1aa957d85_Data> _1aa97ac10_evalPrim(_1aa976953_binaryEval* _self_) {
	jule::Ptr<_1aa989339_Prim> _390013_prim = _1aa985c5e_Prim((*(_self_))._field_l.get()._field_Kind.ptr());;
	{
		
		if (_1aa98c309_IsBool(_390013_prim.ptr())) {
			_case_begin_1ad974772:;
			{
				return _1aa9797ad_evalBool(_self_);;
			}
		}
		else if (_1aa98c56d_IsStr(_390013_prim.ptr())) {
			_case_begin_1ad9747e9:;
			{
				return _1aa979a22_evalStr(_self_);;
			}
		}
		_match_end_1ad9746b7:;
	};
	if ((_1aa985c5e_Prim((*(_self_))._field_r.get()._field_Kind.ptr()) == nullptr)) {
		_1aa959e0e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1aa98969c_Str(_390013_prim.ptr()), &__jule_any_type5),jule::Any(_1aa983c6d_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	{
		
		if (_1dc5c1d52_IsFloat(_390013_prim.get()._field_Kind)) {
			_case_begin_1ad976ed3:;
			{
				return _1aa97a737_evalFloat(_self_);;
			}
		}
		else if (_1dc5c1a33_IsInt(_390013_prim.get()._field_Kind)) {
			_case_begin_1ad9768a6:;
			{
				return _1aa97a99b_evalInt(_self_);;
			}
		}
		else {
			_case_begin_1ad976840:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad974d7c:;
	};
}



inline void _1aa97addb_checkSpecialCases(_1aa976953_binaryEval* _self_) {
	if (((!(_1aa984cd5_Comparable((*(_self_))._field_l.get()._field_Kind.ptr()))) && (!(_1aa98480c_IsNil((*(_self_))._field_r.get()._field_Kind.ptr()))))) {
		_1aa959e0e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_1aa983c6d_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
	} else if (((!(_1aa984cd5_Comparable((*(_self_))._field_r.get()._field_Kind.ptr()))) && (!(_1aa98480c_IsNil((*(_self_))._field_l.get()._field_Kind.ptr()))))) {
		_1aa959e0e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_1aa983c6d_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
	};
}



inline jule::Ptr<_1aa957d85_Data> _1aa97b150_evalOp(_1aa976953_binaryEval* _self_) {
	_1aa97addb_checkSpecialCases(_self_);
	{
		
		if (_1aa984a71_Void((*(_self_))._field_l.get()._field_Kind.ptr())) {
			_case_begin_1ad97a657:;
			{
				_1aa959e0e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(jule::Str("void", 4), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		else if (((_1aa985c5e_Prim((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr) && _1aa98c7d2_IsAny(_1aa985c5e_Prim((*(_self_))._field_r.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1ad97b2d4:;
			{
				({
					jule::Ptr<_1aa957d85_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1aa957d85_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1ad97b34a;
			}
		}
		else if (((_1aa985c5e_Prim((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr) && _1aa98c7d2_IsAny(_1aa985c5e_Prim((*(_self_))._field_l.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1ad97b34a:;
			{
				return _1aa979549_evalAny(_self_);;
			}
		}
		else if ((_1aa986710_TypeEnum((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad97ac40:;
			{
				({
					jule::Ptr<_1aa957d85_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1aa957d85_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1ad97acb7;
			}
		}
		else if ((_1aa986710_TypeEnum((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad97acb7:;
			{
				return _1aa9780e7_evalTypeEnum(_self_);;
			}
		}
		else if (_1aa98480c_IsNil((*(_self_))._field_l.get()._field_Kind.ptr())) {
			_case_begin_1ad97ad3e:;
			{
				return _1aa977b1e_evalNil(_self_);;
			}
		}
		else if ((_1aa98649b_Enum((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad97adb6:;
			{
				({
					jule::Ptr<_1aa957d85_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1aa957d85_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1ad97b3c2;
			}
		}
		else if ((_1aa98649b_Enum((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad97b3c2:;
			{
				return _1aa977d83_evalEnum(_self_);;
			}
		}
		else if ((_1aa985ec3_Sptr((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad97b449:;
			{
				({
					jule::Ptr<_1aa957d85_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1aa957d85_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1ad97b4c1;
			}
		}
		else if ((_1aa985ec3_Sptr((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad97b4c1:;
			{
				return _1aa97835b_evalSptr(_self_);;
			}
		}
		else if ((_1aa986237_Ptr((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad97b548:;
			{
				({
					jule::Ptr<_1aa957d85_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1aa957d85_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1ad97b5c0;
			}
		}
		else if ((_1aa986237_Ptr((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad97b5c0:;
			{
				return _1aa9785c0_evalPtr(_self_);;
			}
		}
		else if ((_1aa986974_Arr((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad97b647:;
			{
				return _1aa978834_evalArr(_self_);;
			}
		}
		else if ((_1aa986bd8_Slc((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad97b6be:;
			{
				return _1aa978a98_evalSlc(_self_);;
			}
		}
		else if ((_1aa986e4c_Fn((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad97b746:;
			{
				return _1aa978d0c_evalFn(_self_);;
			}
		}
		else if ((_1aa987425_Trait((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad97b7bd:;
			{
				({
					jule::Ptr<_1aa957d85_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1aa957d85_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1ad97b845;
			}
		}
		else if ((_1aa987425_Trait((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad97b845:;
			{
				return _1aa9792d5_evalTrait(_self_);;
			}
		}
		else if ((_1aa9871b1_Struct((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad97b8bc:;
			{
				return _1aa979071_evalStruct(_self_);;
			}
		}
		else if ((_1aa985c5e_Prim((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad97b944:;
			{
				return _1aa97ac10_evalPrim(_self_);;
			}
		}
		else {
			_case_begin_1ad97abb8:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad97ab52:;
	};
}



inline void _1aa97b3c5_evalConst(_1aa976953_binaryEval* _self_, jule::Ptr<_1aa957d85_Data>* _398433_d) {
	{
		
		if (((*(_398433_d)) == nullptr)) {
			_case_begin_1ad98aa41:;
			{
				return;;
			}
		}
		else if ((!(_1aa958748_IsConst((*(_self_))._field_l.ptr()))) || (!(_1aa958748_IsConst((*(_self_))._field_r.ptr())))) {
			_case_begin_1ad98aaa7:;
			{
				(*(_398433_d)).get()._field_Constant=nullptr;
				return;;
			}
		}
		_match_end_1ad98a3ae:;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1ad98c0c5:;
			{
				(*(_398433_d)).get()._field_Constant=static__1c09025cd_NewBool(_1c0907209_Eq((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1ad98c13b:;
			{
				(*(_398433_d)).get()._field_Constant=static__1c09025cd_NewBool((!(_1c0907209_Eq((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))))));
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1ad98c1a2:;
			{
				(*(_398433_d)).get()._field_Constant=static__1c09025cd_NewBool(_1c0906deb_Or((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1ad98c218:;
			{
				(*(_398433_d)).get()._field_Constant=static__1c09025cd_NewBool(_1c0906add_And((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str(">", 1)) {
			_case_begin_1ad98c27e:;
			{
				(*(_398433_d)).get()._field_Constant=static__1c09025cd_NewBool(_1c0907b33_Gt((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_1ad98c2e5:;
			{
				(*(_398433_d)).get()._field_Constant=static__1c09025cd_NewBool(_1c0907517_Lt((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_1ad98c35b:;
			{
				(*(_398433_d)).get()._field_Constant=static__1c09025cd_NewBool(_1c0907e41_GtEq((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_1ad98c3c2:;
			{
				(*(_398433_d)).get()._field_Constant=static__1c09025cd_NewBool(_1c0907825_LtEq((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1ad98c438:;
			{
				_1c090824e_Add((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_398433_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1ad98c49e:;
			{
				_1c090855c_Sub((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_398433_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1ad98c515:;
			{
				_1c090886a_Mul((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_398433_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1ad98c57b:;
			{
				jule::Bool _402117_ok = _1c0908b78_Div((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));;
				if (((!(_402117_ok)) && (_1c0904602_AsF64((*(_self_))._field_r.get()._field_Constant.ptr()) == 0LL))) {
					_1aa959e0e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*(_398433_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
				jule::Ptr<_1aa989339_Prim> _402621_prim = _1aa985c5e_Prim((*(_398433_d)).get()._field_Kind.ptr());;
				{
					
					if (_1dc5c14a0_IsSigInt(_402621_prim.get()._field_Kind)) {
						_case_begin_1ad998ab5:;
						{
							_1c0904877_SetI64((*(_398433_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_1c0904129_AsI64((*(_398433_d)).get()._field_Constant.ptr())));
						}
					}
					else if (_1dc5c178b_IsUnsigInt(_402621_prim.get()._field_Kind)) {
						_case_begin_1ad998b3c:;
						{
							_1c0904aec_SetU64((*(_398433_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_1c090438d_AsU64((*(_398433_d)).get()._field_Constant.ptr())));
						}
					}
					_match_end_1ad998a0a:;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1ad98c603:;
			{
				jule::Bool _403417_ok = _1c0908e86_Mod((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));;
				if (((!(_403417_ok)) && (_1c0904602_AsF64((*(_self_))._field_r.get()._field_Constant.ptr()) == 0LL))) {
					_1aa959e0e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*(_398433_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1ad98c67a:;
			{
				_1c09095a2_BitwiseOr((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_398433_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1ad98c702:;
			{
				_1c0909294_BitwiseAnd((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_398433_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1ad98c779:;
			{
				_1c09098b0_Xor((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_398433_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1ad98c801:;
			{
				_1c0909bbd_Lshift((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_398433_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_1ad98c878:;
			{
				_1c0909ecb_Rshift((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_398433_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		_match_end_1ad98b888:;
	};
	(*(_398433_d)).get()._field_Model=jule::Any((*(_398433_d)).get()._field_Constant, &__jule_any_type19);
	_1aa980143_applyCastModelByEnum(_398433_d, _1aa98649b_Enum((*(_398433_d)).get()._field_Kind.ptr()));
}



inline void _1aa97b64a_checkData(_1aa976953_binaryEval* _self_, jule::Ptr<_1aa957d85_Data>* _405933_d) {
	jule::Ptr<_1aa88c0c7_FnIns> _406013_f = _1aa986e4c_Fn((*(_405933_d)).get()._field_Kind.ptr());;
	if ((((_406013_f != nullptr) && (_406013_f.get()._field_Decl != nullptr)) && _1aa889aec_IsMethod(_406013_f.get()._field_Decl.ptr()))) {
		_1aa959e0e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("invalid expression used for binary operation", 44), jule::Slice<jule::Any>());
	};
}



inline void _1aa97b826_checkDatas(_1aa976953_binaryEval* _self_) {
	_1aa97b64a_checkData(_self_, &((*(_self_))._field_l));
	_1aa97b64a_checkData(_self_, &((*(_self_))._field_r));
}



inline void _1aa97ba9b_setModel(_1aa976953_binaryEval* _self_, jule::Ptr<_1aa957d85_Data>* _407132_d) {
	if (_1aa958748_IsConst((*(_407132_d)).ptr())) {
		if ((_1aa958748_IsConst((*(_self_))._field_l.ptr()) && _1aa958748_IsConst((*(_self_))._field_r.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1aa957d85_Data> _407918_l;;
	jule::Ptr<_1aa957d85_Data> _407925_r;;
	({
		jule::Ptr<_1aa957d85_Data> ___jule_assign_arg = (*(_self_))._field_l;
		jule::Ptr<_1aa957d85_Data> _1___jule_assign_arg = (*(_self_))._field_r;
		_407918_l = ___jule_assign_arg;
		_407925_r = _1___jule_assign_arg;
	});
	if ((!(_1aa958a56_GoodOperand(_407918_l.ptr(), &(_407925_r))))) {
		({
			jule::Ptr<_1aa957d85_Data> ___jule_assign_arg = _407925_r;
			jule::Ptr<_1aa957d85_Data> _1___jule_assign_arg = _407918_l;
			_407918_l = ___jule_assign_arg;
			_407925_r = _1___jule_assign_arg;
		});
	};
	(*(_407132_d)).get()._field_Model=jule::Any(jule::new_ptr<_1aa87b2a3_BinopExprModel>(_1aa87b2a3_BinopExprModel{._field_Left=jule::new_ptr<_1aa87acdb_OperandExprModel>(_1aa87acdb_OperandExprModel{._field_Kind=_407918_l.get()._field_Kind, ._field_Model=_407918_l.get()._field_Model}), ._field_Right=jule::new_ptr<_1aa87acdb_OperandExprModel>(_1aa87acdb_OperandExprModel{._field_Kind=_407925_r.get()._field_Kind, ._field_Model=_407925_r.get()._field_Model}), ._field_Op=(*(_self_))._field_op}), &__jule_any_type114);
}



inline void _1aa97bd21_postEval(_1aa976953_binaryEval* _self_, jule::Ptr<_1aa957d85_Data>* _409732_d) {
	(*(_409732_d)).get()._field_Lvalue=false;
	_1aa97ba9b_setModel(_self_, _409732_d);
}



inline jule::Ptr<_1aa957d85_Data> _1aa97c1c8_solveExplicit(_1aa976953_binaryEval* _self_, jule::Ptr<_1aa957d85_Data>* _410237_l, jule::Ptr<_1aa957d85_Data>* _410252_r) {
	({
		jule::Ptr<_1aa957d85_Data> ___jule_assign_arg = (*(_410237_l));
		jule::Ptr<_1aa957d85_Data> _1___jule_assign_arg = (*(_410252_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1aa97b826_checkDatas(_self_);
	jule::Ptr<_1aa957d85_Data> _410717_d = _1aa97b150_evalOp(_self_);;
	({
		jule::Ptr<_1aa957d85_Data> ___jule_assign_arg = (*(_410237_l));
		jule::Ptr<_1aa957d85_Data> _1___jule_assign_arg = (*(_410252_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1aa97b3c5_evalConst(_self_, &(_410717_d));
	if ((_410717_d != nullptr)) {
		_410717_d.get()._field_Mutable=true;
		_1aa97bd21_postEval(_self_, &(_410717_d));
	};
	return _410717_d;;
}



inline jule::Ptr<_1aa957d85_Data> _1aa97c4d6_eval(_1aa976953_binaryEval* _self_, jule::Ptr<_1aa85be21_BinopExpr>* _412228_op) {
	if ((*(_412228_op)).get()._field_Op.get()._field_Kind.equal("=", 1)) {
		_1aa959e0e_pushErr((*(_self_))._field_e.ptr(), (*(_412228_op)).get()._field_Op, jule::Str("assignments not available for expressions", 41), jule::Slice<jule::Any>());
		_1aa95a22d_pushSuggestion((*(_self_))._field_e.ptr(), jule::Str("use clear imperative approach, comes relevant assignment statement before the expression", 88), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aa957d85_Data> _412917_l = _1aa974126_evalExprKind((*(_self_))._field_e, (*(_412228_op)).get()._field_Left.get()._field_Kind);;
	if (((_412917_l == nullptr) || (_412917_l.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	jule::Ptr<_1aa983872_TypeKind> _413417_prefix = (*(_self_))._field_e.get()._field_prefix;;
	(*(_self_))._field_e.get()._field_prefix=_412917_l.get()._field_Kind;
	__JULE_DEFER({
		(*(_self_))._field_e.get()._field_prefix=_413417_prefix;
	});;
	jule::Ptr<_1aa957d85_Data> _413717_r = _1aa974126_evalExprKind((*(_self_))._field_e, (*(_412228_op)).get()._field_Right.get()._field_Kind);;
	if (((_413717_r == nullptr) || (_413717_r.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	(*(_self_))._field_op=(*(_412228_op)).get()._field_Op;
	jule::Ptr<_1aa957d85_Data> _414417_d = _1aa97c1c8_solveExplicit(_self_, &(_412917_l), &(_413717_r));;
	if ((((_414417_d != nullptr) && _412917_l.get()._field_IsRune) && _413717_r.get()._field_IsRune)) {
		_414417_d.get()._field_IsRune=true;
	};
	return _414417_d;;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa976953_binaryEval _Src) {
	_Stream << "binaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa9820e0_InsGeneric _Src) {
	_Stream << "InsGeneric{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa982b29_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Generic:" << _Src._field_Generic << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1aa983c6d_Str(_1aa983872_TypeKind* _self_) {
	if (_1aa98480c_IsNil(_self_)) {
		return jule::Str("nil", 3);;
	};
	jule::Str _7417_kind = jule::Str();;
	if ((*(_self_))._field_Variadic) {
		(_7417_kind).append("...", 3);
	};
	if (_1aa984598_CppLinked(_self_)) {
		(_7417_kind).append("cpp.", 4);
		_7417_kind+=(*(_self_))._field_CppIdent;
	} else {
		_7417_kind+=_1aa983410_Kind_mptr_data[((*(_self_))._field_Kind).type_offset]._1aa982eae_Str((*(_self_))._field_Kind);
	};
	return _7417_kind;;
}



inline jule::Bool _1aa98407b_Equal(jule::Ptr<_1aa983872_TypeKind> _self_, jule::Ptr<_1aa983872_TypeKind> _9021_other) {
	if (_1aa98480c_IsNil(_self_.ptr())) {
		return _1aa98480c_IsNil(_9021_other.ptr());;
	};
	if (_1aa984598_CppLinked(_self_.ptr())) {
		return (_1aa984598_CppLinked(_9021_other.ptr()) && (_self_.get()._field_CppIdent == _9021_other.get()._field_CppIdent));;
	};
	return _1aa983410_Kind_mptr_data[(_self_.get()._field_Kind).type_offset]._1aa9832bc_Equal(_self_.get()._field_Kind, _9021_other);;
}



inline jule::Bool _1aa984598_CppLinked(_1aa983872_TypeKind* _self_) {
	return ((*(_self_))._field_CppIdent.len() != 0LL);;
}



inline jule::Bool _1aa98480c_IsNil(_1aa983872_TypeKind* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}



inline jule::Bool _1aa984a71_Void(_1aa983872_TypeKind* _self_) {
	jule::Ptr<_1aa989339_Prim> _11113_prim = _1aa985c5e_Prim(_self_);;
	return ((_11113_prim != nullptr) && _11113_prim.get()._field_Kind.equal("void", 4));;
}



inline jule::Bool _1aa984cd5_Comparable(_1aa983872_TypeKind* _self_) {
	{
		_1aa983872_TypeKind* _11821__self = (&((*(_self_))));;
		if ((_1aa9871b1_Struct(_11821__self) != nullptr)) {
			return _1aa9871b1_Struct(_11821__self).get()._field_Comparable;;
		};
		return (((_1aa987689_Map(_11821__self) == nullptr) && (_1aa986bd8_Slc(_11821__self) == nullptr)) && (_1aa986e4c_Fn(_11821__self) == nullptr));;
	};
}



inline jule::Bool _1aa985049_Mutable(_1aa983872_TypeKind* _self_) {
	{
		_1aa983872_TypeKind* _12921__self = (&((*(_self_))));;
		if ((_1aa9871b1_Struct(_12921__self) != nullptr)) {
			return _1aa9871b1_Struct(_12921__self).get()._field_Mutable;;
		};
		if ((_1aa987425_Trait(_12921__self) != nullptr)) {
			return _1aa987425_Trait(_12921__self).get()._field_Mutable;;
		};
		if ((_1aa985c5e_Prim(_12921__self) != nullptr)) {
			jule::Ptr<_1aa989339_Prim> _13721_p = _1aa985c5e_Prim(_12921__self);;
			return _1aa98c7d2_IsAny(_13721_p.ptr());;
		};
		if ((_1aa986974_Arr(_12921__self) != nullptr)) {
			return _1aa985049_Mutable(_1aa986974_Arr(_12921__self).get()._field_Elem.ptr());;
		};
		return (((_1aa986bd8_Slc(_12921__self) != nullptr) || (_1aa986237_Ptr(_12921__self) != nullptr)) || (_1aa985ec3_Sptr(_12921__self) != nullptr));;
	};
}



inline jule::Bool _1aa9852ad_NilCompatible(_1aa983872_TypeKind* _self_) {
	{
		_1aa983872_TypeKind* _15221__self = (&((*(_self_))));;
		jule::Ptr<_1aa989339_Prim> _15417_prim = _1aa985c5e_Prim(_15221__self);;
		if (((_15417_prim != nullptr) && _1aa98c7d2_IsAny(_15417_prim.ptr()))) {
			return true;;
		};
		return (((((((_1aa98480c_IsNil(_15221__self) || (_1aa986e4c_Fn(_15221__self) != nullptr)) || (_1aa985ec3_Sptr(_15221__self) != nullptr)) || (_1aa986237_Ptr(_15221__self) != nullptr)) || (_1aa987425_Trait(_15221__self) != nullptr)) || (_1aa986bd8_Slc(_15221__self) != nullptr)) || (_1aa987689_Map(_15221__self) != nullptr)) || (_1aa986710_TypeEnum(_15221__self) != nullptr));;
	};
}



inline jule::Bool _1aa985522_PerformsRC(_1aa983872_TypeKind* _self_) {
	{
		_1aa983872_TypeKind* _17321__self = (&((*(_self_))));;
		jule::Ptr<_1aa989339_Prim> _17417_prim = _1aa985c5e_Prim(_17321__self);;
		if ((_17417_prim != nullptr)) {
			return _1aa98c7d2_IsAny(_17417_prim.ptr());;
		};
		return (((_1aa985ec3_Sptr(_17321__self) != nullptr) || (_1aa986bd8_Slc(_17321__self) != nullptr)) || (_1aa987425_Trait(_17321__self) != nullptr));;
	};
}



inline jule::Bool _1aa985786_SupportsCloning(_1aa983872_TypeKind* _self_) {
	{
		_1aa983872_TypeKind* _18521__self = (&((*(_self_))));;
		{
			
			if ((_1aa985c5e_Prim(_18521__self) != nullptr)) {
				_case_begin_1ad9d7450:;
				{
					return (!(_1aa98c7d2_IsAny(_1aa985c5e_Prim(_18521__self).ptr())));;
				}
			}
			else if ((_1aa98649b_Enum(_18521__self) != nullptr)) {
				_case_begin_1ad9d94b8:;
				{
					return true;;
				}
			}
			else if ((_1aa986e4c_Fn(_18521__self) != nullptr)) {
				_case_begin_1ad9d952e:;
				{
					return true;;
				}
			}
			else if ((_1aa986237_Ptr(_18521__self) != nullptr)) {
				_case_begin_1ad9d9595:;
				{
					return true;;
				}
			}
			else if ((_1aa986bd8_Slc(_18521__self) != nullptr)) {
				_case_begin_1ad9d90de:;
				{
					return _1aa985786_SupportsCloning(_1aa986bd8_Slc(_18521__self).get()._field_Elem.ptr());;
				}
			}
			else if ((_1aa987689_Map(_18521__self) != nullptr)) {
				_case_begin_1ad9d9155:;
				{
					jule::Ptr<_1aa98ead1_Map> _19821_m = _1aa987689_Map(_18521__self);;
					return (_1aa985786_SupportsCloning(_19821_m.get()._field_Key.ptr()) && _1aa985786_SupportsCloning(_19821_m.get()._field_Val.ptr()));;
				}
			}
			else if ((_1aa986974_Arr(_18521__self) != nullptr)) {
				_case_begin_1ad9d91bb:;
				{
					return _1aa985786_SupportsCloning(_1aa986974_Arr(_18521__self).get()._field_Elem.ptr());;
				}
			}
			else if ((_1aa985ec3_Sptr(_18521__self) != nullptr)) {
				_case_begin_1ad9d9232:;
				{
					return _1aa985786_SupportsCloning(_1aa985ec3_Sptr(_18521__self).get()._field_Elem.ptr());;
				}
			}
			else if ((_1aa9871b1_Struct(_18521__self) != nullptr)) {
				_case_begin_1ad9d97c6:;
				{
					jule::Ptr<_1aa876dd6_StructIns> _20525_s = _1aa9871b1_Struct(_18521__self);;
					return (((_20525_s.get()._field_Decl != nullptr) && (!(_20525_s.get()._field_Decl.get()._field_CppLinked))) && _1aa8758eb_IsDerives(_20525_s.get()._field_Decl.ptr(), jule::Str("Clone", 5)));;
				}
			}
			else {
				_case_begin_1ad9d9078:;
				{
					return false;;
				}
			}
			_match_end_1ad9d9012:;
		};
	};
}



inline jule::Bool _1aa9859ea_Variadicable(_1aa983872_TypeKind* _self_) {
	{
		_1aa983872_TypeKind* _21821__self = (&((*(_self_))));;
		return (_1aa986bd8_Slc(_21821__self) != nullptr);;
	};
}



inline jule::Ptr<_1aa989339_Prim> _1aa985c5e_Prim(_1aa983872_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 10)) {
			_case_begin_1ad9d775d:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aa989339_Prim>(10);;
			}
		}
		else {
			_case_begin_1ad9d88a2:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad9d884c:;
	};
}



inline jule::Ptr<_1aa98cabd_Sptr> _1aa985ec3_Sptr(_1aa983872_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 11)) {
			_case_begin_1ad9d893a:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aa98cabd_Sptr>(11);;
			}
		}
		else {
			_case_begin_1ad9e6d66:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad9e7295:;
	};
}



inline jule::Ptr<_1aa991132_Ptr> _1aa986237_Ptr(_1aa983872_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 16)) {
			_case_begin_1ad9e6e21:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aa991132_Ptr>(16);;
			}
		}
		else {
			_case_begin_1ad9e7a37:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad9e7e66:;
	};
}



inline jule::Ptr<_1aa89ddca_Enum> _1aa98649b_Enum(_1aa983872_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1ad9e7ae2:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aa89ddca_Enum>(3);;
			}
		}
		else {
			_case_begin_1ad9e8708:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad9e8b37:;
	};
}



inline jule::Ptr<_1aa8a04c5_TypeEnum> _1aa986710_TypeEnum(_1aa983872_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 4)) {
			_case_begin_1ad9e87b3:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aa8a04c5_TypeEnum>(4);;
			}
		}
		else {
			_case_begin_1ad9e93c9:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad9e9808:;
	};
}



inline jule::Ptr<_1aa9906c5_Arr> _1aa986974_Arr(_1aa983872_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 15)) {
			_case_begin_1ad9e9484:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aa9906c5_Arr>(15);;
			}
		}
		else {
			_case_begin_1ad9ea09a:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad9ea4c9:;
	};
}



inline jule::Ptr<_1aa98d52a_Slc> _1aa986bd8_Slc(_1aa983872_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 12)) {
			_case_begin_1ad9ea155:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aa98d52a_Slc>(12);;
			}
		}
		else {
			_case_begin_1ad9eac6b:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad9eb19a:;
	};
}



inline jule::Ptr<_1aa88c0c7_FnIns> _1aa986e4c_Fn(_1aa983872_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 1)) {
			_case_begin_1ad9ead26:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aa88c0c7_FnIns>(1);;
			}
		}
		else {
			_case_begin_1ad9eb9c5:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad9eb970:;
	};
}



inline jule::Ptr<_1aa876dd6_StructIns> _1aa9871b1_Struct(_1aa983872_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1ad9eba5d:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aa876dd6_StructIns>(0);;
			}
		}
		else {
			_case_begin_1ad9ec630:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad9eca5e:;
	};
}



inline jule::Ptr<_1aa89b647_Trait> _1aa987425_Trait(_1aa983872_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 2)) {
			_case_begin_1ad9ec6da:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aa89b647_Trait>(2);;
			}
		}
		else {
			_case_begin_1ad9ed301:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad9ed730:;
	};
}



inline jule::Ptr<_1aa98ead1_Map> _1aa987689_Map(_1aa983872_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 14)) {
			_case_begin_1ad9ed3ab:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aa98ead1_Map>(14);;
			}
		}
		else {
			_case_begin_1ad9ee05a:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad9ee005:;
	};
}



inline jule::Ptr<_1aa98e0a8_Tuple> _1aa9878ed_Tup(_1aa983872_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 13)) {
			_case_begin_1ad9ee0e3:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aa98e0a8_Tuple>(13);;
			}
		}
		else {
			_case_begin_1ad9eec4d:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad9eebe8:;
	};
}



inline jule::Bool _1aa987b62_comptime(_1aa983872_TypeKind* _self_) {
	return ((((_1aa988613_comptimeType(_self_) != nullptr) || (_1aa987dc6_comptimeStructFields(_self_) != nullptr)) || (_1aa98813a_comptimeStructField(_self_) != nullptr)) || (_1aa98839e_comptimeRange(_self_) != nullptr));;
}



inline jule::Ptr<_1aa8a4243_comptimeStructFields> _1aa987dc6_comptimeStructFields(_1aa983872_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 7)) {
			_case_begin_1ada008a8:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aa8a4243_comptimeStructFields>(7);;
			}
		}
		else {
			_case_begin_1ada022c2:;
			{
				return nullptr;;
			}
		}
		_match_end_1ada02129:;
	};
}



inline jule::Ptr<_1aa8a3121_comptimeStructField> _1aa98813a_comptimeStructField(_1aa983872_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 6)) {
			_case_begin_1ada0247b:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aa8a3121_comptimeStructField>(6);;
			}
		}
		else {
			_case_begin_1ada02b30:;
			{
				return nullptr;;
			}
		}
		_match_end_1ada02aca:;
	};
}



inline jule::Ptr<_1aa8a262b_comptimeRange> _1aa98839e_comptimeRange(_1aa983872_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 5)) {
			_case_begin_1ada02bb8:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aa8a262b_comptimeRange>(5);;
			}
		}
		else {
			_case_begin_1ada03845:;
			{
				return nullptr;;
			}
		}
		_match_end_1ada037e0:;
	};
}



inline jule::Ptr<_1aa8a5750_comptimeType> _1aa988613_comptimeType(_1aa983872_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 8)) {
			_case_begin_1ada038cd:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aa8a5750_comptimeType>(8);;
			}
		}
		else {
			_case_begin_1ada04538:;
			{
				return nullptr;;
			}
		}
		_match_end_1ada044d3:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1aa983872_TypeKind _Src) {
	_Stream << _1aa983c6d_Str(&_Src);
	return _Stream;
}



inline jule::Bool _1aa988d72_checked(_1aa9889ba_TypeSymbol* _self_) {
	return ((*(_self_))._field_Kind != nullptr);;
}



inline void _1aa98904d_removeKind(_1aa9889ba_TypeSymbol* _self_) {
	(*(_self_))._field_Kind=nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa9889ba_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1aa98969c_Str(_1aa989339_Prim* _self_) {
	return (*(_self_))._field_Kind;;
}



inline jule::Bool _1aa9899aa_Equal(jule::Ptr<_1aa989339_Prim> _self_, jule::Ptr<_1aa983872_TypeKind> _41521_other) {
	jule::Ptr<_1aa989339_Prim> _41613_prim = _1aa985c5e_Prim(_41521_other.ptr());;
	if ((_41613_prim == nullptr)) {
		return false;;
	};
	return (_self_.get()._field_Kind == _41613_prim.get()._field_Kind);;
}



inline jule::Bool _1aa989e2d_IsConstraint(_1aa989339_Prim* _self_) {
	return ((((!(_1aa98c56d_IsStr(_self_))) && (!(_1aa98c7d2_IsAny(_self_)))) && (!(_1aa98c309_IsBool(_self_)))) && (!(_1c0901698_IsNum((*(_self_))._field_Kind))));;
}



inline jule::Bool _1aa98a192_IsI8(_1aa989339_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i8", 2);;
}



inline jule::Bool _1aa98a406_IsI16(_1aa989339_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i16", 3);;
}



inline jule::Bool _1aa98a66a_IsI32(_1aa989339_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i32", 3);;
}



inline jule::Bool _1aa98a8ce_IsI64(_1aa989339_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i64", 3);;
}



inline jule::Bool _1aa98ab43_IsU8(_1aa989339_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u8", 2);;
}



inline jule::Bool _1aa98ada7_IsU16(_1aa989339_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u16", 3);;
}



inline jule::Bool _1aa98b11b_IsU32(_1aa989339_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u32", 3);;
}



inline jule::Bool _1aa98b380_IsU64(_1aa989339_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u64", 3);;
}



inline jule::Bool _1aa98b5e4_IsF32(_1aa989339_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f32", 3);;
}



inline jule::Bool _1aa98b858_IsF64(_1aa989339_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f64", 3);;
}



inline jule::Bool _1aa98babc_IsInt(_1aa989339_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("int", 3);;
}



inline jule::Bool _1aa98bd31_IsUint(_1aa989339_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uint", 4);;
}



inline jule::Bool _1aa98c095_IsUintptr(_1aa989339_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uintptr", 7);;
}



inline jule::Bool _1aa98c309_IsBool(_1aa989339_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("bool", 4);;
}



inline jule::Bool _1aa98c56d_IsStr(_1aa989339_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("str", 3);;
}



inline jule::Bool _1aa98c7d2_IsAny(_1aa989339_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("any", 3);;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa989339_Prim _Src) {
	_Stream << _1aa98969c_Str(&_Src);
	return _Stream;
}



inline jule::Str _1aa98ce31_Str(_1aa98cabd_Sptr* _self_) {
	return (jule::Str("&", 1) + _1aa983c6d_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1aa98d23e_Equal(jule::Ptr<_1aa98cabd_Sptr> _self_, jule::Ptr<_1aa983872_TypeKind> _49221_other) {
	jule::Ptr<_1aa98cabd_Sptr> _49313_sptr = _1aa985ec3_Sptr(_49221_other.ptr());;
	if ((_49313_sptr == nullptr)) {
		return false;;
	};
	return _1aa98407b_Equal(_self_.get()._field_Elem, _49313_sptr.get()._field_Elem);;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa98cabd_Sptr _Src) {
	_Stream << _1aa98ce31_Str(&_Src);
	return _Stream;
}



inline jule::Str _1aa98da36_Str(_1aa98d52a_Slc* _self_) {
	return (jule::Str("[]", 2) + _1aa983c6d_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1aa98dd44_Equal(jule::Ptr<_1aa98d52a_Slc> _self_, jule::Ptr<_1aa983872_TypeKind> _51121_other) {
	jule::Ptr<_1aa98d52a_Slc> _51213_slc = _1aa986bd8_Slc(_51121_other.ptr());;
	if ((_51213_slc == nullptr)) {
		return false;;
	};
	return _1aa98407b_Equal(_self_.get()._field_Elem, _51213_slc.get()._field_Elem);;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa98d52a_Slc _Src) {
	_Stream << _1aa98da36_Str(&_Src);
	return _Stream;
}



inline jule::Str _1aa98e41b_Str(_1aa98e0a8_Tuple* _self_) {
	jule::Str _52817_s = jule::Str("(", 1);;
	_52817_s+=_1aa983c6d_Str((*(_self_))._field_Types[0LL].ptr());
	{
		auto expr = (*(_self_))._field_Types.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1ada138cc:;
		if (it != expr_end) {
			jule::Ptr<_1aa983872_TypeKind> *_53016_t = it;
			{
				(_52817_s).append(",", 1);
				_52817_s+=_1aa983c6d_Str((*(_53016_t)).ptr());
			}
			_iter_next_1ada138cc:;
			++it;
			goto _iter_begin_1ada138cc;
		}
		_iter_end_1ada138cc:;
	};
	(_52817_s).append(")", 1);
	return _52817_s;;
}



inline jule::Bool _1aa98e729_Equal(jule::Ptr<_1aa98e0a8_Tuple> _self_, jule::Ptr<_1aa983872_TypeKind> _53921_other) {
	jule::Ptr<_1aa98e0a8_Tuple> _54013_tup = _1aa9878ed_Tup(_53921_other.ptr());;
	if ((_54013_tup == nullptr)) {
		return false;;
	};
	if ((_self_.get()._field_Types.len() != _54013_tup.get()._field_Types.len())) {
		return false;;
	};
	jule::I64 _54717_i = 0LL;;
	for (; (_54717_i < _self_.get()._field_Types.len()); (_54717_i)++) {
		{
			if ((!(_1aa98407b_Equal(_self_.get()._field_Types[_54717_i], _54013_tup.get()._field_Types[_54717_i])))) {
				return false;;
			};
		}
	_iter_next_1ada163e6:;
	}
	_iter_end_1ada163e6:;;
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa98e0a8_Tuple _Src) {
	_Stream << _1aa98e41b_Str(&_Src);
	return _Stream;
}



inline jule::Str _1aa98ee44_Str(_1aa98ead1_Map* _self_) {
	jule::Str _56717_s = jule::Str("[", 1);;
	_56717_s+=_1aa983c6d_Str((*(_self_))._field_Key.ptr());
	(_56717_s).append(":", 1);
	_56717_s+=_1aa983c6d_Str((*(_self_))._field_Val.ptr());
	(_56717_s).append("]", 1);
	return _56717_s;;
}



inline jule::Bool _1aa990252_Equal(jule::Ptr<_1aa98ead1_Map> _self_, jule::Ptr<_1aa983872_TypeKind> _57621_other) {
	jule::Ptr<_1aa98ead1_Map> _57713_m = _1aa987689_Map(_57621_other.ptr());;
	if ((_57713_m == nullptr)) {
		return false;;
	};
	return (_1aa98407b_Equal(_self_.get()._field_Key, _57713_m.get()._field_Key) && _1aa98407b_Equal(_self_.get()._field_Val, _57713_m.get()._field_Val));;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa98ead1_Map _Src) {
	_Stream << _1aa98ee44_Str(&_Src);
	return _Stream;
}



inline jule::Str _1aa990a38_Str(_1aa9906c5_Arr* _self_) {
	jule::Str _59517_s = jule::Str("[", 1);;
	_59517_s+=_1dc5b298b_Itoa((*(_self_))._field_N);
	(_59517_s).append("]", 1);
	_59517_s+=_1aa983c6d_Str((*(_self_))._field_Elem.ptr());
	return _59517_s;;
}



inline jule::Bool _1aa990d46_Equal(jule::Ptr<_1aa9906c5_Arr> _self_, jule::Ptr<_1aa983872_TypeKind> _60321_other) {
	jule::Ptr<_1aa9906c5_Arr> _60413_arr = _1aa986974_Arr(_60321_other.ptr());;
	if ((_60413_arr == nullptr)) {
		return false;;
	};
	return ((_self_.get()._field_N == _60413_arr.get()._field_N) && _1aa98407b_Equal(_self_.get()._field_Elem, _60413_arr.get()._field_Elem));;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa9906c5_Arr _Src) {
	_Stream << _1aa990a38_Str(&_Src);
	return _Stream;
}



inline jule::Str _1aa991495_Str(_1aa991132_Ptr* _self_) {
	if (_1aa991b05_IsUnsafe(_self_)) {
		return jule::Str("*unsafe", 7);;
	};
	return (jule::Str("*", 1) + _1aa983c6d_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1aa9917a3_Equal(jule::Ptr<_1aa991132_Ptr> _self_, jule::Ptr<_1aa983872_TypeKind> _62721_other) {
	jule::Ptr<_1aa991132_Ptr> _62813_ptr = _1aa986237_Ptr(_62721_other.ptr());;
	if ((_62813_ptr == nullptr)) {
		return false;;
	};
	return _1aa98407b_Equal(_self_.get()._field_Elem, _62813_ptr.get()._field_Elem);;
}



inline jule::Bool _1aa991b05_IsUnsafe(_1aa991132_Ptr* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa991132_Ptr _Src) {
	_Stream << _1aa991495_Str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa992078_referencer _Src) {
	_Stream << "referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _1aa993662_pushErr(_1aa992e58_typeChecker* _self_, jule::Ptr<_1db944d0d_Token> _71326_token, jule::Str _71341_fmt, jule::Slice<jule::Any> _71354_args) {
	_1aa8dbbb5_pushErr((*(_self_))._field_s.ptr(), _71326_token, _71341_fmt, _71354_args);
}



inline void _1aa99383d_allowBuiltin(_1aa992e58_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1aa993a19_disallowBuiltin(_1aa992e58_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline jule::Ptr<_1aa989339_Prim> _1aa993d27_buildPrim(_1aa992e58_typeChecker* _self_, jule::Ptr<_1aa8545de_IdentTypeDecl>* _72529_decl) {
	if ((!(_1aa99ce1e_isPrim((*(_72529_decl)).get()._field_Ident)))) {
		_1aa993662_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_72529_decl)).get()._field_Generics.len() > 0LL)) {
		_1aa993662_pushErr(_self_, (*(_72529_decl)).get()._field_Token, jule::Str("type @ not supports generics", 28), jule::Slice<jule::Any>::make({jule::Any((*(_72529_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	return _1aa99c8d0_buildPrimType((*(_72529_decl)).get()._field_Ident);;
}



inline void _1ada254e3_pushReference(_1aa992e58_typeChecker* _self_, jule::Ptr<_1aa876dd6_StructIns>* _73940_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1ad67014e_Exist((*(_self_))._field_refers.ptr(), (*(_73940_t)))) {
		return;;
	};
	_1aa890b9c_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_73940_t)), &__jule_any_type9));
}

inline void _1ada28370_pushReference(_1aa992e58_typeChecker* _self_, jule::Ptr<_1aa89b647_Trait>* _73940_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1ada29ecb_Exist((*(_self_))._field_refers.ptr(), (*(_73940_t)))) {
		return;;
	};
	_1aa890b9c_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_73940_t)), &__jule_any_type10));
}



inline void _1aa994322_pushReferenceByKind(_1aa992e58_typeChecker* _self_, jule::Ptr<_1aa983872_TypeKind>* _74943_k) {
	{
		
		if ((_1aa9871b1_Struct((*(_74943_k)).ptr()) != nullptr)) {
			_case_begin_1ada241a1:;
			{
				jule::Ptr<_1aa876dd6_StructIns> _75221_t = _1aa9871b1_Struct((*(_74943_k)).ptr());;
				_1ada254e3_pushReference(_self_, &(_75221_t));
			}
		}
		else if ((_1aa987425_Trait((*(_74943_k)).ptr()) != nullptr)) {
			_case_begin_1ada24228:;
			{
				jule::Ptr<_1aa89b647_Trait> _75521_t = _1aa987425_Trait((*(_74943_k)).ptr());;
				_1ada28370_pushReference(_self_, &(_75521_t));
			}
		}
		_match_end_1ada24091:;
	};
}



inline void _1aa9946da_pushCycleError(_1aa992e58_typeChecker* _self_, jule::Any _76029_def1, jule::Any _76040_def2, jule::Str* _76056_message) {
	;
	jule::Fn<jule::Str(jule::Any*)> _76213_getIdent = jule::Fn<jule::Str(jule::Any*)>([=](jule::Any* _76228_def) mutable -> jule::Str {
		{
			auto &_match_expr{ (*(_76228_def)) };
			
			if (_match_expr.type == &__jule_any_type67) {
				_case_begin_1ada2d4eb:;
				{
					return (*(_76228_def)).cast_ptr<_1aa982b29_TypeAlias>(&__jule_any_type67).get()._field_Ident;;
				}
			}
			else if (_match_expr.type == &__jule_any_type66) {
				_case_begin_1ada2d562:;
				{
					return (*(_76228_def)).cast_ptr<_1aa8740c0_Struct>(&__jule_any_type66).get()._field_Ident;;
				}
			}
			else {
				_case_begin_1ada2cdad:;
				{
					return jule::Str();;
				}
			}
			_match_end_1ada2ccd1:;
		};
	});;
	jule::Str _77213_def1Ident = _76213_getIdent(&(_76029_def1));;
	jule::Str _77313_def2Ident = _76213_getIdent(&(_76040_def2));;
	jule::Str _77413_refersTo = _1d9d93d0d_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_77213_def1Ident, &__jule_any_type5),jule::Any(_77313_def2Ident, &__jule_any_type5)}));;
	((*(_76056_message))).buffer.insert(0, (((_1d9d02e37_Repeat(jule::Str(" ", 1), 7LL) + _77413_refersTo) + jule::Str("\n", 1))));;
}



inline jule::Bool _1aa994a92_checkCrossCycle(_1aa992e58_typeChecker* _self_, jule::Any _77830_decl, jule::Str* _77846_message) {
	{
		auto &_match_expr{ _77830_decl };
		
		if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1ada30663:;
			{
				jule::Ptr<_1aa982b29_TypeAlias> _78117_ta = _77830_decl.cast_ptr<_1aa982b29_TypeAlias>(&__jule_any_type67);;
				{
					auto expr = &(_78117_ta.get()._field_Refers);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ada31125:;
					if (it != expr_end) {
						jule::Any *_78220_d = it;
						{
							{
								
								if (((*(_78220_d)) == (*(_self_))._field_referencer.get()._field_owner)) {
									_case_begin_1ada31d18:;
									{
										_1aa9946da_pushCycleError(_self_, jule::Any(_78117_ta, &__jule_any_type67), (*(_78220_d)), _77846_message);
										return false;;
									}
								}
								else if ((!(_1aa994a92_checkCrossCycle(_self_, (*(_78220_d)), _77846_message)))) {
									_case_begin_1ada31d90:;
									{
										_1aa9946da_pushCycleError(_self_, jule::Any(_78117_ta, &__jule_any_type67), (*(_78220_d)), _77846_message);
										return false;;
									}
								}
								_match_end_1ada31c08:;
							};
						}
						_iter_next_1ada31125:;
						++it;
						goto _iter_begin_1ada31125;
					}
					_iter_end_1ada31125:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1ada306c9:;
			{
				jule::Ptr<_1aa8740c0_Struct> _79317_s = _77830_decl.cast_ptr<_1aa8740c0_Struct>(&__jule_any_type66);;
				{
					auto expr = &(_79317_s.get()._field_Depends);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ada32610:;
					if (it != expr_end) {
						jule::Ptr<_1aa8740c0_Struct> *_79420_d = it;
						{
							{
								
								if ((__jule_any_type66_compare((*(_self_))._field_referencer.get()._field_owner, (*(_79420_d))))) {
									_case_begin_1ada340e5:;
									{
										_1aa9946da_pushCycleError(_self_, jule::Any(_79317_s, &__jule_any_type66), jule::Any((*(_79420_d)), &__jule_any_type66), _77846_message);
										return false;;
									}
								}
								else if ((!(_1aa994a92_checkCrossCycle(_self_, jule::Any((*(_79420_d)), &__jule_any_type66), _77846_message)))) {
									_case_begin_1ada3416c:;
									{
										_1aa9946da_pushCycleError(_self_, jule::Any(_79317_s, &__jule_any_type66), jule::Any((*(_79420_d)), &__jule_any_type66), _77846_message);
										return false;;
									}
								}
								_match_end_1ada33ed5:;
							};
						}
						_iter_next_1ada32610:;
						++it;
						goto _iter_begin_1ada32610;
					}
					_iter_end_1ada32610:;
				};
			}
		}
		_match_end_1ada30575:;
	};
	return true;;
}



inline jule::Bool _1aa994e49_checkIllegalCycles(_1aa992e58_typeChecker* _self_, jule::Ptr<_1aa8545de_IdentTypeDecl>* _81238_ident, jule::Any _81265_decl) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_referencer == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _81265_decl };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1ada33ca4:;
			{
				if (((*(_self_))._field_notPlain || _81265_decl.cast_ptr<_1aa8740c0_Struct>(&__jule_any_type66).get()._field_CppLinked)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1ada3601a:;
			{
				if (_81265_decl.cast_ptr<_1aa982b29_TypeAlias>(&__jule_any_type67).get()._field_CppLinked) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1ada33b50:;
	};
	if ((_81265_decl == (*(_self_))._field_referencer.get()._field_owner)) {
		_1aa993662_pushErr(_self_, (*(_81238_ident)).get()._field_Token, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_referencer.get()._field_ident, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Str _83517_message = jule::Str();;
	if ((!(_1aa994a92_checkCrossCycle(_self_, _81265_decl, &(_83517_message))))) {
		jule::Str _83821_errMsg = _83517_message;;
		_83517_message=jule::Str();
		_1aa9946da_pushCycleError(_self_, (*(_self_))._field_referencer.get()._field_owner, _81265_decl, &(_83517_message));
		_83821_errMsg+=_83517_message;
		_1aa993662_pushErr(_self_, (*(_81238_ident)).get()._field_Token, jule::Str("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_83821_errMsg, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_referencer.get()._field_owner };
		
		if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1ada384d4:;
			{
				{
					(*((*(_self_))._field_referencer.get()._field_refs))=jule::append((*((*(_self_))._field_referencer.get()._field_refs)),jule::Slice<jule::Any>::make({_81265_decl}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1ada3855b:;
			{
				{
					auto &_match_expr{ _81265_decl };
					
					if (_match_expr.type == &__jule_any_type66) {
						_case_begin_1ada3a65c:;
						{
							jule::Ptr<_1aa8740c0_Struct> _85425_s = (*(_self_))._field_referencer.get()._field_owner.cast_ptr<_1aa8740c0_Struct>(&__jule_any_type66);;
							_85425_s.get()._field_Depends = jule::alloc_for_append(_85425_s.get()._field_Depends,1);_85425_s.get()._field_Depends.__push(_81265_decl.cast_ptr<_1aa8740c0_Struct>(&__jule_any_type66));;
						}
					}
					_match_end_1ada3a56e:;
				};
			}
		}
		_match_end_1ada39d87:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Trait<_1aa983410_Kind> _1aa995301_fromTypeAlias(_1aa992e58_typeChecker* _self_, jule::Ptr<_1aa8545de_IdentTypeDecl>* _86233_decl, jule::Ptr<_1aa982b29_TypeAlias>* _86260_ta) {
	if ((!(_1aa8dc38b_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_86260_ta)).get()._field_Public, (*(_86260_ta)).get()._field_Token)))) {
		_1aa993662_pushErr(_self_, (*(_86233_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_86233_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	(*(_86260_ta)).get()._field_Used=true;
	if (((*(_86233_decl)).get()._field_Generics.len() > 0LL)) {
		_1aa993662_pushErr(_self_, (*(_86233_decl)).get()._field_Token, jule::Str("type @ not supports generics", 28), jule::Slice<jule::Any>::make({jule::Any((*(_86233_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if (((!((*(_self_))._field_inscatch)) && ((*(_self_))._field_bannedGenerics != nullptr))) {
		(*(_self_))._field_inscatch=true;
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ada3ea18:;
			if (it != expr_end) {
				jule::Ptr<_1aa982b29_TypeAlias> _87920_bg = *it;
				{
					if (((_87920_bg == (*(_86260_ta))) || (((*(_86260_ta)).get()._field_Kind.get()._field_Kind != nullptr) && _1aa98407b_Equal((*(_86260_ta)).get()._field_Kind.get()._field_Kind, _87920_bg.get()._field_Kind.get()._field_Kind)))) {
						(*(_self_))._field_inscatch=false;
						goto _iter_end_1ada3ea18;
					};
				}
				_iter_next_1ada3ea18:;
				++it;
				goto _iter_begin_1ada3ea18;
			}
			_iter_end_1ada3ea18:;
		};
	};
	if ((*(_self_))._field_inscatch) {
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ada40365:;
			if (it != expr_end) {
				jule::Ptr<_1aa982b29_TypeAlias> _89020_bg = *it;
				{
					if ((_89020_bg == (*(_86260_ta)))) {
						_1aa993662_pushErr(_self_, (*(_86233_decl)).get()._field_Token, jule::Str("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*(_86233_decl)).get()._field_Ident, &__jule_any_type5)}));
						return nullptr;;
					};
					{
						auto expr = &((*(_86260_ta)).get()._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ada42444:;
						if (it != expr_end) {
							jule::Ptr<_1aa982b29_TypeAlias> _89524_dg = *it;
							{
								if ((_89020_bg == _89524_dg)) {
									_1aa993662_pushErr(_self_, (*(_86233_decl)).get()._field_Token, jule::Str("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*(_86233_decl)).get()._field_Ident, &__jule_any_type5)}));
									return nullptr;;
								};
							}
							_iter_next_1ada42444:;
							++it;
							goto _iter_begin_1ada42444;
						}
						_iter_end_1ada42444:;
					};
				}
				_iter_next_1ada40365:;
				++it;
				goto _iter_begin_1ada40365;
			}
			_iter_end_1ada40365:;
		};
	};
	jule::Bool _90417_ok = _1aa994e49_checkIllegalCycles(_self_, _86233_decl, jule::Any((*(_86260_ta)), &__jule_any_type67));;
	if ((!(_90417_ok))) {
		return nullptr;;
	};
	if (((*(_86260_ta)).get()._field_Kind.get()._field_Kind == nullptr)) {
		_90417_ok=_1aa8e7231_checkTypeAliasDeclKind((*(_self_))._field_s, _86260_ta, (*(_self_))._field_lookup);
		if ((!(_90417_ok))) {
			return nullptr;;
		};
	};
	if (((*(_86260_ta)).get()._field_Generic && ((*(_self_))._field_ownerAlias != nullptr))) {
		(*(_self_))._field_ownerAlias.get()._field_Generics = jule::alloc_for_append((*(_self_))._field_ownerAlias.get()._field_Generics,1);(*(_self_))._field_ownerAlias.get()._field_Generics.__push((*(_86260_ta)));;
	};
	jule::Ptr<_1aa983872_TypeKind> _92317_tk = jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Generic=(*(_86260_ta)).get()._field_Generic, ._field_Kind=(*(_86260_ta)).get()._field_Kind.get()._field_Kind.get()._field_Kind});;
	_1aa994322_pushReferenceByKind(_self_, &(_92317_tk));
	if ((*(_86260_ta)).get()._field_CppLinked) {
		_92317_tk.get()._field_CppIdent=(*(_86260_ta)).get()._field_Ident;
	} else {
		_92317_tk.get()._field_CppIdent=(*(_86260_ta)).get()._field_Kind.get()._field_Kind.get()._field_CppIdent;
	};
	return jule::Trait<_1aa983410_Kind>(_92317_tk, 9);;
}



inline jule::Ptr<_1aa89ddca_Enum> _1aa9956a8_fromEnum(_1aa992e58_typeChecker* _self_, jule::Ptr<_1aa8545de_IdentTypeDecl>* _93628_decl, jule::Ptr<_1aa89ddca_Enum>* _93655_e) {
	if ((!(_1aa8dc38b_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_93655_e)).get()._field_Public, (*(_93655_e)).get()._field_Token)))) {
		_1aa993662_pushErr(_self_, (*(_93628_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_93628_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_93628_decl)).get()._field_Generics.len() > 0LL)) {
		_1aa993662_pushErr(_self_, (*(_93628_decl)).get()._field_Token, jule::Str("type @ not supports generics", 28), jule::Slice<jule::Any>::make({jule::Any((*(_93628_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	return (*(_93655_e));;
}



inline jule::Ptr<_1aa8a04c5_TypeEnum> _1aa995a60_fromTypeEnum(_1aa992e58_typeChecker* _self_, jule::Ptr<_1aa8545de_IdentTypeDecl>* _94832_decl, jule::Ptr<_1aa8a04c5_TypeEnum>* _94859_e) {
	if ((!(_1aa8dc38b_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_94859_e)).get()._field_Public, (*(_94859_e)).get()._field_Token)))) {
		_1aa993662_pushErr(_self_, (*(_94832_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_94832_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_94832_decl)).get()._field_Generics.len() > 0LL)) {
		_1aa993662_pushErr(_self_, (*(_94832_decl)).get()._field_Token, jule::Str("type @ not supports generics", 28), jule::Slice<jule::Any>::make({jule::Any((*(_94832_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	return (*(_94859_e));;
}



inline jule::Ptr<_1aa89b647_Trait> _1aa995e17_fromTrait(_1aa992e58_typeChecker* _self_, jule::Ptr<_1aa8545de_IdentTypeDecl>* _96029_decl, jule::Ptr<_1aa89b647_Trait>* _96056_t) {
	if ((!(_1aa8dc38b_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_96056_t)).get()._field_Public, (*(_96056_t)).get()._field_Token)))) {
		_1aa993662_pushErr(_self_, (*(_96029_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_96029_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_96029_decl)).get()._field_Generics.len() > 0LL)) {
		_1aa993662_pushErr(_self_, (*(_96029_decl)).get()._field_Token, jule::Str("type @ not supports generics", 28), jule::Slice<jule::Any>::make({jule::Any((*(_96029_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	_1ada28370_pushReference(_self_, _96056_t);
	return (*(_96056_t));;
}



inline jule::Bool _1aa9962be_checkStructIns(_1aa992e58_typeChecker* _self_, jule::Ptr<_1aa876dd6_StructIns>* _97338_ins, jule::Ptr<_1db944d0d_Token>* _97360_errorToken) {
	jule::Bool __jule_func_result = false;
	if ((*(_97338_ins)).get()._field_Checked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*(_97338_ins)).get()._field_Checked=true;
	if ((((*(_self_))._field_referencer != nullptr) && (__jule_any_type66_compare((*(_self_))._field_referencer.get()._field_owner, (*(_97338_ins)).get()._field_Decl)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_1aa902703_precheckStructIns((*(_self_))._field_s, _97338_ins, (*(_97360_errorToken)))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (((*(_97338_ins)).get()._field_Generics.len() > 0LL)) {
		_1aa903171_checkStructInsOperators((*(_self_))._field_s, (*(_97338_ins)));
		_1aa902978_checkStructIns((*(_self_))._field_s, _97338_ins);
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1aa996566_appendUsedStructReference(_1aa992e58_typeChecker* _self_, jule::Ptr<_1aa8740c0_Struct>* _99449_s) {
	if (((*(_self_))._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_referencer.get()._field_owner };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1ada52dc2:;
			{
				jule::Ptr<_1aa8740c0_Struct> _100021_refS = (*(_self_))._field_referencer.get()._field_owner.cast_ptr<_1aa8740c0_Struct>(&__jule_any_type66);;
				if ((!(_1aa875c09_IsUses(_100021_refS.ptr(), (*(_99449_s)))))) {
					_100021_refS.get()._field_Uses = jule::alloc_for_append(_100021_refS.get()._field_Uses,1);_100021_refS.get()._field_Uses.__push((*(_99449_s)));;
				};
			}
		}
		_match_end_1ada52d6c:;
	};
}



inline jule::Ptr<_1aa876dd6_StructIns> _1aa99692e_buildStructInstance(_1aa992e58_typeChecker* _self_, jule::Ptr<_1aa8545de_IdentTypeDecl>* _100743_decl, jule::Ptr<_1aa8740c0_Struct>* _100770_s) {
	jule::Ptr<_1aa992078_referencer> _100917_referencer = (*(_self_))._field_referencer;;
	(*(_self_))._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1aa982b29_TypeAlias>> _101117_bannedGenerics = (*(_self_))._field_bannedGenerics;;
	if (((*(_self_))._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 0)) {
				_case_begin_1ada55996:;
				{
					jule::Ptr<_1aa8b91d1_scopeChecker> _101825_sc = (*(_self_))._field_lookup.cast_ptr<_1aa8b91d1_scopeChecker>(0);;
					jule::Ptr<_1aa8b91d1_scopeChecker> _101925_hard = _1aa8bc26c_getHardRoot(_101825_sc);;
					if (((_101925_hard.get()._field_owner.get()._field_Owner == nullptr) || (_101925_hard.get()._field_owner.get()._field_Owner.get()._field_Decl != (*(_100770_s))))) {
						goto _match_end_1ada55941;
					};
					jule::I64 _102321_n = (_101925_hard.get()._field_owner.get()._field_Generics.len() + _101925_hard.get()._field_owner.get()._field_Owner.get()._field_Generics.len());;
					(*(_self_))._field_bannedGenerics=_101925_hard.get()._field_table.get()._field_TypeAliases.slice(0LL, _102321_n);
				}
			}
			_match_end_1ada55941:;
		};
	} else {
		(*(_self_))._field_inscatch=true;
	};
	jule::Trait<_1aa9a0509_Lookup> _103317_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=(*(_self_))._field_rootLookup;
	jule::Ptr<_1aa876dd6_StructIns> _103717_ins = _1aa874532_instance((*(_100770_s)));;
	_103717_ins.get()._field_Generics=jule::Slice<jule::Ptr<_1aa9820e0_InsGeneric>>::alloc(0LL, (*(_100743_decl)).get()._field_Generics.len());
	{
		auto expr = &((*(_100743_decl)).get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ada59c97:;
		if (it != expr_end) {
			jule::Ptr<_1aa854028_TypeDecl> _103921_g = *it;
			{
				jule::Ptr<_1aa983872_TypeKind> _104021_kind = _1aa999db6_build(_self_, &(_103921_g.get()._field_Kind));;
				if ((_104021_kind == nullptr)) {
					return nullptr;;
				};
				_103717_ins.get()._field_Generics = jule::alloc_for_append(_103717_ins.get()._field_Generics,1);_103717_ins.get()._field_Generics.__push(jule::new_ptr<_1aa9820e0_InsGeneric>(_1aa9820e0_InsGeneric{._field_Kind=_104021_kind, }));;
			}
			_iter_next_1ada59c97:;
			++it;
			goto _iter_begin_1ada59c97;
		}
		_iter_end_1ada59c97:;
	};
	(*(_self_))._field_lookup=_103317_lookup;
	(*(_self_))._field_bannedGenerics=_101117_bannedGenerics;
	(*(_self_))._field_referencer=_100917_referencer;
	return _103717_ins;;
}



inline jule::Ptr<_1aa876dd6_StructIns> _1aa996cd6_fromStruct(_1aa992e58_typeChecker* _self_, jule::Ptr<_1aa8545de_IdentTypeDecl>* _105534_decl, jule::Ptr<_1aa8740c0_Struct>* _105561_s) {
	if ((!(_1aa8dc38b_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_105561_s)).get()._field_Public, (*(_105561_s)).get()._field_Token)))) {
		_1aa993662_pushErr(_self_, (*(_105534_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_105534_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if ((*(_self_))._field_selection) {
		if (((*(_105534_decl)).get()._field_Generics.len() > 0LL)) {
			_1aa993662_pushErr(_self_, (*(_105534_decl)).get()._field_Token, jule::Str("generics are not allowed in this scope", 38), jule::Slice<jule::Any>());
			return nullptr;;
		};
		return jule::new_ptr<_1aa876dd6_StructIns>(_1aa876dd6_StructIns{._field_Decl=(*(_105561_s)), });;
	};
	jule::Bool _107317_ok = ((*(_self_))._field_notPlain || _1aa994e49_checkIllegalCycles(_self_, _105534_decl, jule::Any((*(_105561_s)), &__jule_any_type66)));;
	if ((!(_107317_ok))) {
		return nullptr;;
	};
	_1aa996566_appendUsedStructReference(_self_, _105561_s);
	jule::Ptr<_1aa876dd6_StructIns> _107917_ins = _1aa99692e_buildStructInstance(_self_, _105534_decl, _105561_s);;
	if ((_107917_ins == nullptr)) {
		return nullptr;;
	};
	_107317_ok=_1aa8dd05c_checkGenericQuantity((*(_self_))._field_s.ptr(), static_cast<jule::I64>(_107917_ins.get()._field_Decl.get()._field_Generics.len()), static_cast<jule::I64>(_107917_ins.get()._field_Generics.len()), (*(_105534_decl)).get()._field_Token);
	if ((!(_107317_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1aa876dd6_StructIns> _108917_existInstance = _1aa87480c_appendInstance((*(_105561_s)).ptr(), &(_107917_ins));;
	if ((_108917_existInstance != nullptr)) {
		if ((!(_1aa8e58d3_checkConstraintsStruct((*(_self_))._field_s, &(_107917_ins), &((*(_105534_decl)).get()._field_Token), _108917_existInstance)))) {
			return nullptr;;
		};
		_1ada254e3_pushReference(_self_, &(_108917_existInstance));
		return _108917_existInstance;;
	};
	if ((!(_1aa9962be_checkStructIns(_self_, &(_107917_ins), &((*(_105534_decl)).get()._field_Token))))) {
		return nullptr;;
	};
	_1ada254e3_pushReference(_self_, &(_107917_ins));
	return _107917_ins;;
}



inline jule::Trait<_1aa983410_Kind> _1aa9970e4_getDef(_1aa992e58_typeChecker* _self_, jule::Ptr<_1aa8545de_IdentTypeDecl>* _111330_decl) {
	{
		auto expr = &((*(_self_))._field_ignoreGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ada640d1:;
		if (it != expr_end) {
			jule::Ptr<_1aa861321_GenericDecl> _111416_g = *it;
			{
				if ((_111416_g.get()._field_Ident == (*(_111330_decl)).get()._field_Ident)) {
					return jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(_111416_g.get()._field_Ident), 10);;
				};
			}
			_iter_next_1ada640d1:;
			++it;
			goto _iter_begin_1ada640d1;
		}
		_iter_end_1ada640d1:;
	};
	{
		auto expr = &((*(_self_))._field_useGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ada64268:;
		if (it != expr_end) {
			jule::Ptr<_1aa982b29_TypeAlias> _112021_g = *it;
			{
				if ((_112021_g.get()._field_Ident == (*(_111330_decl)).get()._field_Ident)) {
					if (((*(_111330_decl)).get()._field_Generics.len() > 0LL)) {
						_1aa993662_pushErr(_self_, (*(_111330_decl)).get()._field_Token, jule::Str("type @ not supports generics", 28), jule::Slice<jule::Any>::make({jule::Any((*(_111330_decl)).get()._field_Ident, &__jule_any_type5)}));
						return nullptr;;
					};
					jule::Ptr<_1aa876dd6_StructIns> _112625_st = _1aa9871b1_Struct(_112021_g.get()._field_Kind.get()._field_Kind.ptr());;
					if ((_112625_st != nullptr)) {
						jule::Bool _112825_ok = _1aa994e49_checkIllegalCycles(_self_, _111330_decl, jule::Any(_112625_st.get()._field_Decl, &__jule_any_type66));;
						if ((!(_112825_ok))) {
							return nullptr;;
						};
					};
					return _112021_g.get()._field_Kind.get()._field_Kind.get()._field_Kind;;
				};
			}
			_iter_next_1ada64268:;
			++it;
			goto _iter_begin_1ada64268;
		}
		_iter_end_1ada64268:;
	};
	if ((!((*(_111330_decl)).get()._field_CppLinked))) {
		jule::Ptr<_1aa89ddca_Enum> _113821_e = _1aa9a0509_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1aa9a00a8_FindEnum((*(_self_))._field_lookup, (*(_111330_decl)).get()._field_Ident);;
		if ((_113821_e != nullptr)) {
			return jule::Trait<_1aa983410_Kind>(_1aa9956a8_fromEnum(_self_, _111330_decl, &(_113821_e)), 3);;
		};
		jule::Ptr<_1aa8a04c5_TypeEnum> _114321_te = _1aa9a0509_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1aa9a03b6_FindTypeEnum((*(_self_))._field_lookup, (*(_111330_decl)).get()._field_Ident);;
		if ((_114321_te != nullptr)) {
			return jule::Trait<_1aa983410_Kind>(_1aa995a60_fromTypeEnum(_self_, _111330_decl, &(_114321_te)), 4);;
		};
		jule::Ptr<_1aa89b647_Trait> _114821_t = _1aa9a0509_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1aa99ec9a_FindTrait((*(_self_))._field_lookup, (*(_111330_decl)).get()._field_Ident);;
		if ((_114821_t != nullptr)) {
			return jule::Trait<_1aa983410_Kind>(_1aa995e17_fromTrait(_self_, _111330_decl, &(_114821_t)), 2);;
		};
	} else if ((*(_self_))._field_selection) {
		_1aa993662_pushErr(_self_, (*(_111330_decl)).get()._field_Token, jule::Str("cpp-linked definitions are not allowed in this scope", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aa8740c0_Struct> _115717_s = _1aa9a0509_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1aa99e5d5_FindStruct((*(_self_))._field_lookup, (*(_111330_decl)).get()._field_Ident, (*(_111330_decl)).get()._field_CppLinked);;
	if ((_115717_s != nullptr)) {
		return jule::Trait<_1aa983410_Kind>(_1aa996cd6_fromStruct(_self_, _111330_decl, &(_115717_s)), 0);;
	};
	jule::Ptr<_1aa982b29_TypeAlias> _116217_ta = _1aa9a0509_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1aa99e22d_FindTypeAlias((*(_self_))._field_lookup, (*(_111330_decl)).get()._field_Ident, (*(_111330_decl)).get()._field_CppLinked);;
	if (((_116217_ta == nullptr) && (!((*(_self_))._field_disBuiltin)))) {
		_116217_ta=_1aa2b09eb_findBuiltinTypeAlias((*(_111330_decl)).get()._field_Ident);
	};
	if ((_116217_ta != nullptr)) {
		return _1aa995301_fromTypeAlias(_self_, _111330_decl, &(_116217_ta));;
	};
	_1aa993662_pushErr(_self_, (*(_111330_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_111330_decl)).get()._field_Ident, &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Trait<_1aa983410_Kind> _1aa997402_buildIdent(_1aa992e58_typeChecker* _self_, jule::Ptr<_1aa8545de_IdentTypeDecl> _117433_decl) {
	{
		
		if (_1aa99ce1e_isPrim(_117433_decl.get()._field_Ident)) {
			_case_begin_1ada6ecbd:;
			{
				return jule::Trait<_1aa983410_Kind>(_1aa993d27_buildPrim(_self_, &(_117433_decl)), 10);;
			}
		}
		else {
			_case_begin_1ada6e5c5:;
			{
				return _1aa9970e4_getDef(_self_, &(_117433_decl));;
			}
		}
		_match_end_1ada6e509:;
	};
}



inline jule::Trait<_1aa983410_Kind> _1aa997710_buildSubIdent(_1aa992e58_typeChecker* _self_, jule::Ptr<_1aa854c3d_SubIdentTypeDecl> _118336_decl) {
	jule::Trait<_1aa983410_Kind> _118417_ident = _1aa997402_buildIdent(_self_, _118336_decl.get()._field_Idents[0LL]);;
	if ((_118417_ident == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _118417_ident };
		
		if (_match_expr.type_is(true, 4)) {
			_case_begin_1ada71594:;
			{
				goto _match_end_1ada714a6;
			}
		}
		else {
			_case_begin_1ada71374:;
			{
				_1aa993662_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ada714a6:;
	};
	jule::Ptr<_1aa8a04c5_TypeEnum> _119517_t = _118417_ident.cast_ptr<_1aa8a04c5_TypeEnum>(4);;
	jule::Slice<jule::Ptr<_1aa8545de_IdentTypeDecl>> _119617_idents = _118336_decl.get()._field_Idents.slice(1LL);;
	{
		auto expr = &(_119617_idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ada7294c:;
		if (it != expr_end) {
			jule::I64 _119713_i = it - expr->begin();
			jule::Ptr<_1aa8545de_IdentTypeDecl> _119716_id = *it;
			{
				jule::Ptr<_1aa89ee0e_TypeEnumItem> _119821_item = _1aa8a100e_FindItem(_119517_t.ptr(), _119716_id.get()._field_Ident);;
				if ((_119821_item == nullptr)) {
					_1aa993662_pushErr(_self_, _119716_id.get()._field_Token, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_119517_t.get()._field_Ident, &__jule_any_type5),jule::Any(_119716_id.get()._field_Ident, &__jule_any_type5)}));
					return nullptr;;
				};
				if (((_119617_idents.len() - _119713_i) == 1LL)) {
					_1aa994322_pushReferenceByKind(_self_, &(_119821_item.get()._field_Kind.get()._field_Kind));
					return jule::Trait<_1aa983410_Kind>(_119821_item.get()._field_Kind.get()._field_Kind, 9);;
				};
				_119517_t=_1aa986710_TypeEnum(_119821_item.get()._field_Kind.get()._field_Kind.ptr());
				if ((_119517_t == nullptr)) {
					_1aa993662_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
			_iter_next_1ada7294c:;
			++it;
			_119713_i++;
			goto _iter_begin_1ada7294c;
		}
		_iter_end_1ada7294c:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aa98cabd_Sptr> _1aa997a1d_buildSptrFromType(_1aa992e58_typeChecker* _self_, jule::Ptr<_1aa983872_TypeKind>* _121741_elem) {
	{
		
		if (((*(_121741_elem)) == nullptr)) {
			_case_begin_1ada766cb:;
			{
				return nullptr;;
			}
		}
		else if ((_1aa9871b1_Struct((*(_121741_elem)).ptr()) != nullptr)) {
			_case_begin_1ada76753:;
			{
				jule::Ptr<_1aa876dd6_StructIns> _122317_s = _1aa9871b1_Struct((*(_121741_elem)).ptr());;
				if (((_122317_s.get()._field_Decl != nullptr) && _122317_s.get()._field_Decl.get()._field_CppLinked)) {
					_1aa993662_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("cpp-linked structures cannot supports reference counting", 56), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
		}
		else if (((_1aa986974_Arr((*(_121741_elem)).ptr()) != nullptr) && _1aa986974_Arr((*(_121741_elem)).ptr()).get()._field_Auto)) {
			_case_begin_1ada767ca:;
			{
				_1aa993662_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ada75d4b:;
	};
	return jule::new_ptr<_1aa98cabd_Sptr>(_1aa98cabd_Sptr{._field_Elem=(*(_121741_elem))});;
}



inline jule::Ptr<_1aa98cabd_Sptr> _1aa997d2b_buildSptr(_1aa992e58_typeChecker* _self_, jule::Ptr<_1aa8553d1_SptrTypeDecl> _123732_decl) {
	jule::Bool _123813_notPlain = (*(_self_))._field_notPlain;;
	(*(_self_))._field_notPlain=true;
	__JULE_DEFER({
		(*(_self_))._field_notPlain=_123813_notPlain;
	});;
	jule::Ptr<_1aa983872_TypeKind> _124217_elem = _1aa99a1c4_checkDecl(_self_, &(_123732_decl.get()._field_Elem));;
	return _1aa997a1d_buildSptrFromType(_self_, &(_124217_elem));;
}



inline jule::Ptr<_1aa991132_Ptr> _1aa998139_buildPtrFromType(_1aa992e58_typeChecker* _self_, jule::Ptr<_1aa983872_TypeKind>* _124640_elem) {
	{
		
		if (((*(_124640_elem)) == nullptr)) {
			_case_begin_1ada7b48e:;
			{
				return nullptr;;
			}
		}
		else if (((_1aa986974_Arr((*(_124640_elem)).ptr()) != nullptr) && _1aa986974_Arr((*(_124640_elem)).ptr()).get()._field_Auto)) {
			_case_begin_1ada7b516:;
			{
				_1aa993662_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return jule::new_ptr<_1aa991132_Ptr>();;
			}
		}
		_match_end_1ada7b37e:;
	};
	return jule::new_ptr<_1aa991132_Ptr>(_1aa991132_Ptr{._field_Elem=(*(_124640_elem))});;
}



inline jule::Ptr<_1aa991132_Ptr> _1aa998447_buildPtr(_1aa992e58_typeChecker* _self_, jule::Ptr<_1aa855da4_PtrTypeDecl> _126131_decl) {
	jule::Bool _126213_notPlain = (*(_self_))._field_notPlain;;
	(*(_self_))._field_notPlain=true;
	__JULE_DEFER({
		(*(_self_))._field_notPlain=_126213_notPlain;
	});;
	jule::Ptr<_1aa983872_TypeKind> _126617_elem = nullptr;;
	if ((!(_1aa856206_IsUnsafe(_126131_decl.ptr())))) {
		_126617_elem=_1aa99a1c4_checkDecl(_self_, &(_126131_decl.get()._field_Elem));
		return _1aa998139_buildPtrFromType(_self_, &(_126617_elem));;
	};
	return jule::new_ptr<_1aa991132_Ptr>(_1aa991132_Ptr{._field_Elem=_126617_elem});;
}



inline jule::Ptr<_1aa98d52a_Slc> _1aa998755_buildSlc(_1aa992e58_typeChecker* _self_, jule::Ptr<_1aa8557cc_SlcTypeDecl> _127831_decl) {
	jule::Bool _127913_notPlain = (*(_self_))._field_notPlain;;
	(*(_self_))._field_notPlain=true;
	__JULE_DEFER({
		(*(_self_))._field_notPlain=_127913_notPlain;
	});;
	jule::Ptr<_1aa983872_TypeKind> _128317_elem = _1aa99a1c4_checkDecl(_self_, &(_127831_decl.get()._field_Elem));;
	{
		
		if ((_128317_elem == nullptr)) {
			_case_begin_1ada8142d:;
			{
				return nullptr;;
			}
		}
		else if (((_1aa986974_Arr(_128317_elem.ptr()) != nullptr) && _1aa986974_Arr(_128317_elem.ptr()).get()._field_Auto)) {
			_case_begin_1ada814a5:;
			{
				_1aa993662_pushErr(_self_, _127831_decl.get()._field_Elem.get()._field_Token, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ada81373:;
	};
	return jule::new_ptr<_1aa98d52a_Slc>(_1aa98d52a_Slc{._field_Elem=_128317_elem});;
}



inline jule::Ptr<_1aa9906c5_Arr> _1aa998a63_buildArr(_1aa992e58_typeChecker* _self_, jule::Ptr<_1aa856536_ArrTypeDecl> _129931_decl) {
	jule::Bool _130013_notPlain = (*(_self_))._field_notPlain;;
	(*(_self_))._field_notPlain=true;
	__JULE_DEFER({
		(*(_self_))._field_notPlain=_130013_notPlain;
	});;
	jule::I64 _130417_n = 0LL;;
	if ((!(_1aa856910_AutoSized(_129931_decl.ptr())))) {
		jule::Ptr<_1aa957d85_Data> _130721_size = _1aa974742_evalExpr(_1aa8e3958_eval((*(_self_))._field_s, (*(_self_))._field_lookup), _129931_decl.get()._field_Size);;
		if ((_130721_size == nullptr)) {
			return nullptr;;
		};
		if ((!(_1aa958748_IsConst(_130721_size.ptr())))) {
			_1aa993662_pushErr(_self_, _129931_decl.get()._field_Size.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_1aa985c5e_Prim(_130721_size.get()._field_Kind.ptr()) == nullptr) || (!(_1dc5c1a33_IsInt(_1aa985c5e_Prim(_130721_size.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_1aa993662_pushErr(_self_, _129931_decl.get()._field_Size.get()._field_Token, jule::Str("array size must be integer", 26), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_130417_n=static_cast<jule::I64>(static_cast<jule::I64>(_1c0904129_AsI64(_130721_size.get()._field_Constant.ptr())));
		if ((_130417_n < 0LL)) {
			_1aa993662_pushErr(_self_, _129931_decl.get()._field_Elem.get()._field_Token, jule::Str("array size must be positive integer", 35), jule::Slice<jule::Any>());
			return nullptr;;
		} else {
			jule::I64 _132521_max = _1dc5bad29_MaxI(jule::Str("int", 3));;
			if (((_1dc5b3c23_BitSize != 64LL) && (static_cast<jule::I64>(_130417_n) > _132521_max))) {
				_1aa993662_pushErr(_self_, _129931_decl.get()._field_Size.get()._field_Token, jule::Str("array with size @ overflows limit (@) of the system", 51), jule::Slice<jule::Any>::make({jule::Any(_1aa980de1_constoa(&(_130721_size.get()._field_Constant)), &__jule_any_type5),jule::Any(_1dc5b26e4_FmtInt(_132521_max, 10LL), &__jule_any_type5)}));
				return nullptr;;
			};
		};
	};
	jule::Ptr<_1aa983872_TypeKind> _133417_elem = _1aa99a1c4_checkDecl(_self_, &(_129931_decl.get()._field_Elem));;
	{
		
		if ((_133417_elem == nullptr)) {
			_case_begin_1ada8a2d3:;
			{
				return nullptr;;
			}
		}
		else if (((_1aa986974_Arr(_133417_elem.ptr()) != nullptr) && _1aa986974_Arr(_133417_elem.ptr()).get()._field_Auto)) {
			_case_begin_1ada8a349:;
			{
				_1aa993662_pushErr(_self_, _129931_decl.get()._field_Elem.get()._field_Token, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ada8a0d5:;
	};
	return jule::new_ptr<_1aa9906c5_Arr>(_1aa9906c5_Arr{._field_Auto=_1aa856910_AutoSized(_129931_decl.ptr()), ._field_N=_130417_n, ._field_Elem=_133417_elem});;
}



inline jule::Ptr<_1aa98ead1_Map> _1aa998d71_buildMap(_1aa992e58_typeChecker* _self_, jule::Ptr<_1aa856c84_MapTypeDecl> _135231_decl) {
	jule::Bool _135313_notPlain = (*(_self_))._field_notPlain;;
	(*(_self_))._field_notPlain=true;
	__JULE_DEFER({
		(*(_self_))._field_notPlain=_135313_notPlain;
	});;
	jule::Ptr<_1aa983872_TypeKind> _135717_key = _1aa99a1c4_checkDecl(_self_, &(_135231_decl.get()._field_Key));;
	if ((_135717_key == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1aa983872_TypeKind> _136217_val = _1aa99a1c4_checkDecl(_self_, &(_135231_decl.get()._field_Val));;
	if ((_136217_val == nullptr)) {
		return nullptr;;
	};
	if ((_1aa98649b_Enum(_136217_val.ptr()) != nullptr)) {
		_1aa993662_pushErr(_self_, _135231_decl.get()._field_Val.get()._field_Token, jule::Str("maps do not support enums as map key type", 41), jule::Slice<jule::Any>());
	};
	return jule::new_ptr<_1aa98ead1_Map>(_1aa98ead1_Map{._field_Key=_135717_key, ._field_Val=_136217_val});;
}



inline jule::Ptr<_1aa98e0a8_Tuple> _1aa99917e_buildTuple(_1aa992e58_typeChecker* _self_, jule::Ptr<_1aa855ab8_TupleTypeDecl> _137633_decl) {
	jule::Slice<jule::Ptr<_1aa983872_TypeKind>> _137717_types = jule::Slice<jule::Ptr<_1aa983872_TypeKind>>::alloc(0LL, _137633_decl.get()._field_Types.len());;
	{
		auto expr = &(_137633_decl.get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ada90c78:;
		if (it != expr_end) {
			jule::Ptr<_1aa854028_TypeDecl> _137821_t = *it;
			{
				jule::Ptr<_1aa983872_TypeKind> _137921_kind = _1aa99a1c4_checkDecl(_self_, &(_137821_t));;
				if ((_137921_kind == nullptr)) {
					return nullptr;;
				};
				_137717_types = jule::alloc_for_append(_137717_types,1);_137717_types.__push(_137921_kind);;
			}
			_iter_next_1ada90c78:;
			++it;
			goto _iter_begin_1ada90c78;
		}
		_iter_end_1ada90c78:;
	};
	return jule::new_ptr<_1aa98e0a8_Tuple>(_1aa98e0a8_Tuple{._field_Types=_137717_types});;
}



inline jule::Bool _1aa99948c_checkFnTypes(_1aa992e58_typeChecker* _self_, jule::Ptr<_1aa88c0c7_FnIns>* _138936_f) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*(_138936_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ada9263c:;
		if (it != expr_end) {
			jule::Ptr<_1aa88b208_ParamIns> _139021_p = *it;
			{
				_139021_p.get()._field_Kind=_1aa999db6_build(_self_, &(_139021_p.get()._field_Decl.get()._field_Kind.get()._field_Decl.get()._field_Kind));
				__jule_func_result=(_139021_p.get()._field_Kind != nullptr);
				if ((!(__jule_func_result))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				_1aa8e6010_checkFnParamKind((*(_self_))._field_s, &(_139021_p));
			}
			_iter_next_1ada9263c:;
			++it;
			goto _iter_begin_1ada9263c;
		}
		_iter_end_1ada9263c:;
	};
	if ((!(_1aa889888_IsVoid((*(_138936_f)).get()._field_Decl.ptr())))) {
		(*(_138936_f)).get()._field_Result=_1aa999db6_build(_self_, &((*(_138936_f)).get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl.get()._field_Kind));
		__jule_func_result = ((*(_138936_f)).get()._field_Result != nullptr);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1aa88c0c7_FnIns> _1aa99979a_buildFn(_1aa992e58_typeChecker* _self_, jule::Ptr<_1aa8659a7_FnDecl> _140730_decl) {
	if ((_140730_decl.get()._field_Generics.len() > 0LL)) {
		_1aa993662_pushErr(_self_, _140730_decl.get()._field_Token, jule::Str("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aa889426_Fn> _141317_f = _1aa893210_buildFn(_140730_decl);;
	jule::I64 _141513_n = (*(_self_))._field_s.get()._field_errors.len();;
	_1aa8ee26b_checkFnDecl((*(_self_))._field_s, &(_141317_f));
	if ((_141513_n != (*(_self_))._field_s.get()._field_errors.len())) {
		return nullptr;;
	};
	jule::Ptr<_1aa88c0c7_FnIns> _142117_ins = _1aa88a812_instanceForce(_141317_f);;
	_142117_ins.get()._field_Anon=true;
	jule::Bool _142413_ok = _1aa99948c_checkFnTypes(_self_, &(_142117_ins));;
	if ((!(_142413_ok))) {
		return nullptr;;
	};
	return _142117_ins;;
}



inline jule::Trait<_1aa983410_Kind> _1aa999aa8_buildByNamespace(_1aa992e58_typeChecker* _self_, jule::Ptr<_1aa8550e5_NamespaceTypeDecl> _143239_decl) {
	jule::Str _143313_path = _1aa99c528_buildLinkPathByTokens(&(_143239_decl.get()._field_Idents));;
	jule::Ptr<_1aa8d101c_ImportInfo> _143417_imp = _1aa9a0509_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1aa99d9be_SelectPackage((*(_self_))._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1aa8d101c_ImportInfo>)>([=](jule::Ptr<_1aa8d101c_ImportInfo> _143452_imp) mutable -> jule::Bool {
		if (((_143239_decl.get()._field_Idents.len() == 1LL) && (_143452_imp.get()._field_Alias == _143313_path))) {
			return true;;
		};
		return ((_143452_imp.get()._field_LinkPath == _143313_path) && _1aa8d385a_isAccessibleViaSelection(_143452_imp.ptr()));;
	}));;
	if (((_143417_imp == nullptr) || (!(_1aa8d32b6_isLookupable(_143417_imp.ptr(), jule::Str("self", 4)))))) {
		_1aa993662_pushErr(_self_, _143239_decl.get()._field_Idents[0LL], jule::Str("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_143313_path, &__jule_any_type5)}));
		return nullptr;;
	};
	_1aa993a19_disallowBuiltin(_self_);
	jule::Trait<_1aa9a0509_Lookup> _144717_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait<_1aa9a0509_Lookup>(_143417_imp, 1);
	jule::Ptr<_1aa983872_TypeKind> _144917_kind = _1aa99a1c4_checkDecl(_self_, &(_143239_decl.get()._field_Kind));;
	(*(_self_))._field_lookup=_144717_lookup;
	_1aa99383d_allowBuiltin(_self_);
	return jule::Trait<_1aa983410_Kind>(_144917_kind, 9);;
}



inline jule::Ptr<_1aa983872_TypeKind> _1aa999db6_build(_1aa992e58_typeChecker* _self_, jule::Any* _145529_declKind) {
	jule::Trait<_1aa983410_Kind> _145617_kind = nullptr;;
	{
		auto &_match_expr{ (*(_145529_declKind)) };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1ada9e10a:;
			{
				jule::Trait<_1aa983410_Kind> _145921_t = _1aa997402_buildIdent(_self_, (*(_145529_declKind)).cast_ptr<_1aa8545de_IdentTypeDecl>(&__jule_any_type20));;
				if ((_145921_t != nullptr)) {
					_145617_kind=_145921_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1ada9edca:;
			{
				jule::Trait<_1aa983410_Kind> _146421_t = _1aa997710_buildSubIdent(_self_, (*(_145529_declKind)).cast_ptr<_1aa854c3d_SubIdentTypeDecl>(&__jule_any_type92));;
				if ((_146421_t != nullptr)) {
					_145617_kind=_146421_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1ada9ee41:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1aa98cabd_Sptr> _147021_t = _1aa997d2b_buildSptr(_self_, (*(_145529_declKind)).cast_ptr<_1aa8553d1_SptrTypeDecl>(&__jule_any_type78));;
				if ((_147021_t != nullptr)) {
					_145617_kind=jule::Trait<_1aa983410_Kind>(_147021_t, 11);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1ada9e5d3:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1aa991132_Ptr> _147621_t = _1aa998447_buildPtr(_self_, (*(_145529_declKind)).cast_ptr<_1aa855da4_PtrTypeDecl>(&__jule_any_type77));;
				if ((_147621_t != nullptr)) {
					_145617_kind=jule::Trait<_1aa983410_Kind>(_147621_t, 16);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1ada9e649:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1aa98d52a_Slc> _148221_t = _1aa998755_buildSlc(_self_, (*(_145529_declKind)).cast_ptr<_1aa8557cc_SlcTypeDecl>(&__jule_any_type76));;
				if ((_148221_t != nullptr)) {
					_145617_kind=jule::Trait<_1aa983410_Kind>(_148221_t, 12);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1ada9e6b0:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1aa9906c5_Arr> _148821_t = _1aa998a63_buildArr(_self_, (*(_145529_declKind)).cast_ptr<_1aa856536_ArrTypeDecl>(&__jule_any_type75));;
				if ((_148821_t != nullptr)) {
					_145617_kind=jule::Trait<_1aa983410_Kind>(_148821_t, 15);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1ada9e726:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1aa98ead1_Map> _149421_t = _1aa998d71_buildMap(_self_, (*(_145529_declKind)).cast_ptr<_1aa856c84_MapTypeDecl>(&__jule_any_type79));;
				if ((_149421_t != nullptr)) {
					_145617_kind=jule::Trait<_1aa983410_Kind>(_149421_t, 14);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1adaa010b:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1aa98e0a8_Tuple> _150021_t = _1aa99917e_buildTuple(_self_, (*(_145529_declKind)).cast_ptr<_1aa855ab8_TupleTypeDecl>(&__jule_any_type80));;
				if ((_150021_t != nullptr)) {
					_145617_kind=jule::Trait<_1aa983410_Kind>(_150021_t, 13);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1adaa0172:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1aa88c0c7_FnIns> _150621_t = _1aa99979a_buildFn(_self_, (*(_145529_declKind)).cast_ptr<_1aa8659a7_FnDecl>(&__jule_any_type14));;
				if ((_150621_t != nullptr)) {
					_145617_kind=jule::Trait<_1aa983410_Kind>(_150621_t, 1);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1adaa01d8:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Trait<_1aa983410_Kind> _151221_t = _1aa999aa8_buildByNamespace(_self_, (*(_145529_declKind)).cast_ptr<_1aa8550e5_NamespaceTypeDecl>(&__jule_any_type96));;
				if ((_151221_t != nullptr)) {
					_145617_kind=_151221_t;
				};
			}
		}
		else {
			_case_begin_1ada9e47e:;
			{
				_1aa993662_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ada9e391:;
	};
	if ((_145617_kind == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _145617_kind };
		
		if (_match_expr.type_is(true, 9)) {
			_case_begin_1adaaa831:;
			{
				return _145617_kind.cast_ptr<_1aa983872_TypeKind>(9);;
			}
		}
		else {
			_case_begin_1adaab216:;
			{
				jule::Ptr<_1aa983872_TypeKind> _152721_tk = jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=_145617_kind});;
				{
					auto &_match_expr{ _145617_kind };
					
					if (_match_expr.type_is(true, 10)) {
						_case_begin_1adaabb51:;
						{
							if (((*(_self_))._field_ignoredGenerics != nullptr)) {
								{
									(*((*(_self_))._field_ignoredGenerics))=jule::append((*((*(_self_))._field_ignoredGenerics)),jule::Slice<jule::Ptr<_1aa983872_TypeKind>>::make({_152721_tk}));
								};
							};
						}
					}
					else if (_match_expr.type_is(true, 0)) {
						_case_begin_1adaabbc8:;
						{
							jule::Ptr<_1aa876dd6_StructIns> _153421_s = _145617_kind.cast_ptr<_1aa876dd6_StructIns>(0);;
							if (((_153421_s.get()._field_Decl != nullptr) && _153421_s.get()._field_Decl.get()._field_CppLinked)) {
								_152721_tk.get()._field_CppIdent=_153421_s.get()._field_Decl.get()._field_Ident;
							};
						}
					}
					_match_end_1adaaba41:;
				};
				return _152721_tk;;
			}
		}
		_match_end_1adaab1b1:;
	};
}



inline jule::Ptr<_1aa983872_TypeKind> _1aa99a1c4_checkDecl(_1aa992e58_typeChecker* _self_, jule::Ptr<_1aa854028_TypeDecl>* _154333_decl) {
	jule::Ptr<_1db944d0d_Token> _154517_errorToken = (*(_self_))._field_errorToken;;
	(*(_self_))._field_errorToken=(*(_154333_decl)).get()._field_Token;
	jule::Ptr<_1aa983872_TypeKind> _154817_kind = _1aa999db6_build(_self_, &((*(_154333_decl)).get()._field_Kind));;
	(*(_self_))._field_errorToken=_154517_errorToken;
	return _154817_kind;;
}



inline void _1aa99a449_check(_1aa992e58_typeChecker* _self_, jule::Ptr<_1aa9889ba_TypeSymbol>* _155429_t) {
	if (((*(_155429_t)).get()._field_Decl == nullptr)) {
		return;;
	};
	jule::Ptr<_1aa983872_TypeKind> _155817_kind = _1aa99a1c4_checkDecl(_self_, &((*(_155429_t)).get()._field_Decl));;
	if ((_155817_kind == nullptr)) {
		_1aa98904d_removeKind((*(_155429_t)).ptr());
		return;;
	};
	(*(_155429_t)).get()._field_Kind=_155817_kind;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa992e58_typeChecker _Src) {
	_Stream << "typeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "rootLookup:" << _Src._field_rootLookup << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "ignoreGenerics:" << _Src._field_ignoreGenerics << ", ";
	_Stream << "ignoredGenerics:" << _Src._field_ignoredGenerics << ", ";
	_Stream << "useGenerics:" << _Src._field_useGenerics << ", ";
	_Stream << "notPlain:" << _Src._field_notPlain << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "ownerAlias:" << _Src._field_ownerAlias << ", ";
	_Stream << "bannedGenerics:" << _Src._field_bannedGenerics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1aa99aaa9_prim(jule::Str* _157021_ident, jule::Ptr<_1aa989339_Prim> _157033_t) {
	return (_157033_t.get()._field_Kind == (*(_157021_ident)));;
}



inline jule::Bool static__1aa99adea_exist(jule::Str* _157422_ident, jule::Ptr<_1aa983872_TypeKind>* _157439_k) {
	{
		
		if ((_1aa985c5e_Prim((*(_157439_k)).ptr()) != nullptr)) {
			_case_begin_1adab2948:;
			{
				return static__1aa99aaa9_prim(_157422_ident, _1aa985c5e_Prim((*(_157439_k)).ptr()));;
			}
		}
		else if ((_1aa985ec3_Sptr((*(_157439_k)).ptr()) != nullptr)) {
			_case_begin_1adab29ae:;
			{
				jule::Ptr<_1aa98cabd_Sptr> _157921_sptr = _1aa985ec3_Sptr((*(_157439_k)).ptr());;
				return static__1aa99adea_exist(_157422_ident, &(_157921_sptr.get()._field_Elem));;
			}
		}
		else if ((_1aa986237_Ptr((*(_157439_k)).ptr()) != nullptr)) {
			_case_begin_1adab2a25:;
			{
				jule::Ptr<_1aa991132_Ptr> _158221_ptr = _1aa986237_Ptr((*(_157439_k)).ptr());;
				return static__1aa99adea_exist(_157422_ident, &(_158221_ptr.get()._field_Elem));;
			}
		}
		else if ((_1aa986bd8_Slc((*(_157439_k)).ptr()) != nullptr)) {
			_case_begin_1adab2a8b:;
			{
				jule::Ptr<_1aa98d52a_Slc> _158521_slc = _1aa986bd8_Slc((*(_157439_k)).ptr());;
				return static__1aa99adea_exist(_157422_ident, &(_158521_slc.get()._field_Elem));;
			}
		}
		else if ((_1aa986974_Arr((*(_157439_k)).ptr()) != nullptr)) {
			_case_begin_1adab2d22:;
			{
				jule::Ptr<_1aa9906c5_Arr> _158821_arr = _1aa986974_Arr((*(_157439_k)).ptr());;
				return static__1aa99adea_exist(_157422_ident, &(_158821_arr.get()._field_Elem));;
			}
		}
		else if ((_1aa987689_Map((*(_157439_k)).ptr()) != nullptr)) {
			_case_begin_1adab2d88:;
			{
				jule::Ptr<_1aa98ead1_Map> _159121_m = _1aa987689_Map((*(_157439_k)).ptr());;
				return (static__1aa99adea_exist(_157422_ident, &(_159121_m.get()._field_Key)) || static__1aa99adea_exist(_157422_ident, &(_159121_m.get()._field_Val)));;
			}
		}
		else if ((_1aa9871b1_Struct((*(_157439_k)).ptr()) != nullptr)) {
			_case_begin_1adab2dee:;
			{
				jule::Ptr<_1aa876dd6_StructIns> _159521_s = _1aa9871b1_Struct((*(_157439_k)).ptr());;
				{
					auto expr = &(_159521_s.get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1adab8e05:;
					if (it != expr_end) {
						jule::Ptr<_1aa9820e0_InsGeneric> _159625_g = *it;
						{
							if (static__1aa99adea_exist(_157422_ident, &(_159625_g.get()._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1adab8e05:;
						++it;
						goto _iter_begin_1adab8e05;
					}
					_iter_end_1adab8e05:;
				};
				return false;;
			}
		}
		else if ((_1aa986e4c_Fn((*(_157439_k)).ptr()) != nullptr)) {
			_case_begin_1adab2e65:;
			{
				jule::Ptr<_1aa88c0c7_FnIns> _160321_f = _1aa986e4c_Fn((*(_157439_k)).ptr());;
				{
					auto expr = &(_160321_f.get()._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1adaba5ee:;
					if (it != expr_end) {
						jule::Ptr<_1aa88b208_ParamIns> _160425_p = *it;
						{
							if (_1aa888216_IsSelf(_160425_p.get()._field_Decl.ptr())) {
								goto _iter_next_1adaba5ee;
							};
							if (static__1aa99adea_exist(_157422_ident, &(_160425_p.get()._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1adaba5ee:;
						++it;
						goto _iter_begin_1adaba5ee;
					}
					_iter_end_1adaba5ee:;
				};
				if ((_160321_f.get()._field_Result != nullptr)) {
					return static__1aa99adea_exist(_157422_ident, &(_160321_f.get()._field_Result));;
				};
				return false;;
			}
		}
		else if ((_1aa9878ed_Tup((*(_157439_k)).ptr()) != nullptr)) {
			_case_begin_1adab31b8:;
			{
				jule::Ptr<_1aa98e0a8_Tuple> _161721_tup = _1aa9878ed_Tup((*(_157439_k)).ptr());;
				{
					auto expr = &(_161721_tup.get()._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1adabc733:;
					if (it != expr_end) {
						jule::Ptr<_1aa983872_TypeKind> _161825_t = *it;
						{
							if (static__1aa99adea_exist(_157422_ident, &(_161825_t))) {
								return true;;
							};
						}
						_iter_next_1adabc733:;
						++it;
						goto _iter_begin_1adabc733;
					}
					_iter_end_1adabc733:;
				};
				return false;;
			}
		}
		else {
			_case_begin_1adab28d2:;
			{
				return false;;
			}
		}
		_match_end_1adab2816:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1aa99a669_identTypeLookup _Src) {
	_Stream << "identTypeLookup{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab0ead63_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "Ast:" << _Src._field_Ast << ", ";
	_Stream << "Errors:" << _Src._field_Errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab1497eb_stmt _Src) {
	_Stream << "stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _1ab14a7a8_stop(_1ab14a126_scopeParser* _self_) {
	(*(_self_))._field_pos=-1LL;
}



inline jule::Bool _1ab14aa1c_stopped(_1ab14a126_scopeParser* _self_) {
	return ((*(_self_))._field_pos == -1LL);;
}



inline jule::Bool _1ab14ac81_finished(_1ab14a126_scopeParser* _self_) {
	return ((*(_self_))._field_pos >= (*(_self_))._field_stmts.len());;
}



inline jule::Bool _1ab14aee5_isLastSt(_1ab14a126_scopeParser* _self_) {
	return (((*(_self_))._field_pos + 1LL) >= (*(_self_))._field_stmts.len());;
}



inline void _1ab14b314_pushErr(_1ab14a126_scopeParser* _self_, jule::Ptr<_1db944d0d_Token> _19126_token, jule::Str _19141_fmt) {
	_1ab167297_pushErr((*(_self_))._field_p.ptr(), _19126_token, _19141_fmt, jule::Slice<jule::Any>());
}



inline void _1ab14b633_pushSuggestion(_1ab14a126_scopeParser* _self_, jule::Str _19633_fmt, jule::Slice<jule::Any> _19646_args) {
	_1ab1675b6_pushSuggestion((*(_self_))._field_p.ptr(), _19633_fmt, _19646_args);
}



inline void _1ab14b8a8_insertAsNext(_1ab14a126_scopeParser* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _20036_tokens) {
	(*(_self_))._field_stmts=jule::append((*(_self_))._field_stmts.slice(0LL, ((*(_self_))._field_pos + 1LL)),(*(_self_))._field_stmts.slice((*(_self_))._field_pos));
	(*(_self_))._field_stmts[((*(_self_))._field_pos + 1LL)]=jule::new_ptr<_1ab1497eb_stmt>(_1ab1497eb_stmt{._field_tokens=(*(_20036_tokens)), });
}



inline jule::Ptr<_1ab1497eb_stmt> _1ab14bb1c_next(_1ab14a126_scopeParser* _self_) {
	((*(_self_))._field_pos)++;
	return (*(_self_))._field_stmts[(*(_self_))._field_pos];;
}



inline jule::Ptr<_1aa863eb1_ScopeTree> _1ab14bec4_buildScope(_1ab14a126_scopeParser* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _21034_tokens, jule::Ptr<_1db944d0d_Token> _21056_end) {
	jule::Ptr<_1aa863eb1_ScopeTree> _21117_s = _1ab1486eb_newScope();;
	_21117_s.get()._field_Parent=(*(_self_))._field_s;
	_21117_s.get()._field_End=_21056_end;
	_1ab14a126_scopeParser _21417_ssp = _1ab14a126_scopeParser{._field_p=(*(_self_))._field_p, };;
	_1ab155bae_build(&_21417_ssp, _21034_tokens, &(_21117_s));
	return _21117_s;;
}



inline jule::Ptr<_1aa866986_VarDecl> _1ab14c2d2_buildVarSt(_1ab14a126_scopeParser* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _22134_tokens) {
	jule::Ptr<_1aa866986_VarDecl> _22217_v = _1ab169cd3_buildVar((*(_self_))._field_p, (*(_22134_tokens)));;
	_22217_v.get()._field_Scope=(*(_self_))._field_s;
	return _22217_v;;
}



inline jule::Ptr<_1aa866d3d_RetSt> _1ab14c5e0_buildRetSt(_1ab14a126_scopeParser* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>> _22733_tokens) {
	jule::Ptr<_1aa866d3d_RetSt> _22817_st = jule::new_ptr<_1aa866d3d_RetSt>(_1aa866d3d_RetSt{._field_Token=_22733_tokens[0LL], });;
	if ((_22733_tokens.len() > 1LL)) {
		_22733_tokens=_22733_tokens.slice(1LL);
		_22817_st.get()._field_Expr=_1ab1678c4_buildExpr((*(_self_))._field_p, &(_22733_tokens));
	};
	return _22817_st;;
}



inline jule::Ptr<_1aa86749d_Iter> _1ab14c8ed_buildWhileNextIter(_1ab14a126_scopeParser* _self_, jule::Ptr<_1ab1497eb_stmt>* _23842_s) {
	jule::Ptr<_1aa86749d_Iter> _23917_it = jule::new_ptr<_1aa86749d_Iter>(_1aa86749d_Iter{._field_Token=(*(_23842_s)).get()._field_tokens[0LL], });;
	jule::Slice<jule::Ptr<_1db944d0d_Token>> _24217_tokens = (*(_23842_s)).get()._field_tokens.slice(1LL);;
	jule::Ptr<_1aa867c73_WhileKind> _24317_kind = jule::new_ptr<_1aa867c73_WhileKind>();;
	if ((_24217_tokens.len() > 0LL)) {
		_24317_kind.get()._field_Expr=_1ab1678c4_buildExpr((*(_self_))._field_p, &(_24217_tokens));
	};
	if (_1ab14aee5_isLastSt(_self_)) {
		_1ab14b314_pushErr(_self_, _23917_it.get()._field_Token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	_24217_tokens=_1ab14bb1c_next(_self_).get()._field_tokens;
	jule::Slice<jule::Ptr<_1db944d0d_Token>> _25517_stTokens = _1ab161912_getBlockExpr(&(_24217_tokens));;
	if ((_25517_stTokens.len() > 0LL)) {
		jule::Ptr<_1ab1497eb_stmt> _25721_stmt = jule::new_ptr<_1ab1497eb_stmt>(_1ab1497eb_stmt{._field_tokens=_25517_stTokens, ._field_terminated=(*(_23842_s)).get()._field_terminated});;
		_24317_kind.get()._field_NextToken=_25517_stTokens[0LL];
		_24317_kind.get()._field_Next=_1ab155890_buildSt(_self_, &(_25721_stmt));
	};
	jule::I64 _26517_i = _25517_stTokens.len();;
	jule::Slice<jule::Ptr<_1db944d0d_Token>> _26617_blockTokens = _1ab1649d1_range(&(_26517_i), jule::Str("{", 1), jule::Str("}", 1), &(_24217_tokens));;
	if ((_26617_blockTokens == nullptr)) {
		_1ab14a7a8_stop(_self_);
		_1ab14b314_pushErr(_self_, _23917_it.get()._field_Token, jule::Str("body is not exist", 17));
		_1ab14b633_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_26517_i < _24217_tokens.len())) {
		_1ab14b314_pushErr(_self_, _24217_tokens[_26517_i], jule::Str("invalid syntax", 14));
	};
	_23917_it.get()._field_Scope=_1ab14bec4_buildScope(_self_, &(_26617_blockTokens), _24217_tokens[(_26517_i - 1LL)]);
	_23917_it.get()._field_Kind=jule::Any(_24317_kind, &__jule_any_type38);
	return _23917_it;;
}



inline jule::Ptr<_1aa867c73_WhileKind> _1ab14cc0b_buildWhileIterKind(_1ab14a126_scopeParser* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _28342_tokens) {
	return jule::new_ptr<_1aa867c73_WhileKind>(_1aa867c73_WhileKind{._field_Expr=_1ab1678c4_buildExpr((*(_self_))._field_p, _28342_tokens), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1db944d0d_Token>>> _1ab14d019_getRangeKindKeysTokens(_1ab14a126_scopeParser* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _28946_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_1db944d0d_Token>>> _29018_vars;;
	jule::Slice<_1d9d938bd_Log> _29024_errs;;
	({
		__jule_tuple_ssx_1db944d0d_Token__jule_tuple_s_1d9d938bd_Log __jule_assign_result = _1ab16554d_parts(_28946_toks, static_cast<jule::U64>(8LLU), true);
		_29018_vars = __jule_assign_result.__jule_result_arg0;
		_29024_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_p.get()._field_errors=jule::append((*(_self_))._field_p.get()._field_errors,_29024_errs);
	return _29018_vars;;
}



inline jule::Ptr<_1aa866986_VarDecl> _1ab14d327_buildRangeKindKey(_1ab14a126_scopeParser* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _29541_tokens) {
	if (((*(_29541_tokens)).len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1aa866986_VarDecl> _29917_key = jule::new_ptr<_1aa866986_VarDecl>(_1aa866986_VarDecl{._field_Token=(*(_29541_tokens))[0LL], });;
	if ((_29917_key.get()._field_Token.get()._field_Id == static_cast<jule::U64>(35LLU))) {
		_29917_key.get()._field_Mutable=true;
		if (((*(_29541_tokens)).len() == 1LL)) {
			_1ab14b314_pushErr(_self_, _29917_key.get()._field_Token, jule::Str("invalid syntax", 14));
		};
		_29917_key.get()._field_Token=(*(_29541_tokens))[1LL];
	} else if (((*(_29541_tokens)).len() > 1LL)) {
		_1ab14b314_pushErr(_self_, (*(_29541_tokens))[1LL], jule::Str("invalid syntax", 14));
	};
	if ((_29917_key.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1ab14b314_pushErr(_self_, _29917_key.get()._field_Token, jule::Str("invalid syntax", 14));
		_1ab14b633_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_29917_key.get()._field_Ident=_29917_key.get()._field_Token.get()._field_Kind;
	return _29917_key;;
}



inline jule::Slice<jule::Ptr<_1aa866986_VarDecl>> _1ab14d635_buildRangeKindKeys(_1ab14a126_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1db944d0d_Token>>>* _32042_parts) {
	jule::Slice<jule::Ptr<_1aa866986_VarDecl>> _32117_keys = nullptr;;
	{
		auto expr = _32042_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adc20c1b:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1db944d0d_Token>> _32221_tokens = *it;
			{
				_32117_keys = jule::alloc_for_append(_32117_keys,1);_32117_keys.__push(_1ab14d327_buildRangeKindKey(_self_, &(_32221_tokens)));;
			}
			_iter_next_1adc20c1b:;
			++it;
			goto _iter_begin_1adc20c1b;
		}
		_iter_end_1adc20c1b:;
	};
	return _32117_keys;;
}



inline void _1ab14d976_setupRangeKindKeysPlain(_1ab14a126_scopeParser* _self_, jule::Ptr<_1aa868614_RangeKind>* _32847_rng, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _32869_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1db944d0d_Token>>> _32917_keyTokens = _1ab14d019_getRangeKindKeysTokens(_self_, _32869_tokens);;
	if ((_32917_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_32917_keyTokens.len() > 2LL)) {
		_1ab14b314_pushErr(_self_, (*(_32847_rng)).get()._field_InToken, jule::Str("range variables can be maximum two", 34));
	};
	jule::Slice<jule::Ptr<_1aa866986_VarDecl>> _33617_keys = _1ab14d635_buildRangeKindKeys(_self_, &(_32917_keyTokens));;
	(*(_32847_rng)).get()._field_KeyA=_33617_keys[0LL];
	if ((_33617_keys.len() > 1LL)) {
		(*(_32847_rng)).get()._field_KeyB=_33617_keys[1LL];
	};
}



inline void _1ab14dcc8_setupRangeKindKeysExplicit(_1ab14a126_scopeParser* _self_, jule::Ptr<_1aa868614_RangeKind>* _34350_rng, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _34372_tokens) {
	jule::I64 _34417_i = 0LL;;
	jule::Slice<jule::Ptr<_1db944d0d_Token>> _34517_rang = _1ab1649d1_range(&(_34417_i), jule::Str("(", 1), jule::Str(")", 1), _34372_tokens);;
	if ((_34417_i < (*(_34372_tokens)).len())) {
		_1ab14b314_pushErr(_self_, (*(_34350_rng)).get()._field_InToken, jule::Str("invalid syntax", 14));
	};
	_1ab14d976_setupRangeKindKeysPlain(_self_, _34350_rng, &(_34517_rang));
}



inline void _1ab14e108_setupRangeKindKeys(_1ab14a126_scopeParser* _self_, jule::Ptr<_1aa868614_RangeKind>* _35242_rng, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _35264_tokens) {
	if (((*(_35264_tokens))[0LL].get()._field_Id == static_cast<jule::U64>(3LLU))) {
		if ((!(*(_35264_tokens))[0LL].get()._field_Kind.equal("(", 1))) {
			_1ab14b314_pushErr(_self_, (*(_35264_tokens))[0LL], jule::Str("invalid syntax", 14));
			return;;
		};
		_1ab14dcc8_setupRangeKindKeysExplicit(_self_, _35242_rng, _35264_tokens);
		return;;
	};
	_1ab14d976_setupRangeKindKeysPlain(_self_, _35242_rng, _35264_tokens);
}



inline jule::Ptr<_1aa868614_RangeKind> _1ab14e559_buildRangeIterKind(_1ab14a126_scopeParser* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _36442_var_tokens, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _36514_exprTokens, jule::Ptr<_1db944d0d_Token>* _36541_inToken) {
	jule::Ptr<_1aa868614_RangeKind> _36617_rng = jule::new_ptr<_1aa868614_RangeKind>(_1aa868614_RangeKind{._field_InToken=(*(_36541_inToken)), });;
	if (((*(_36514_exprTokens)).len() == 0LL)) {
		_1ab14b314_pushErr(_self_, _36617_rng.get()._field_InToken, jule::Str("expression missing", 18));
		return _36617_rng;;
	};
	_36617_rng.get()._field_Expr=_1ab1678c4_buildExpr((*(_self_))._field_p, _36514_exprTokens);
	if (((*(_36442_var_tokens)).len() > 0LL)) {
		_1ab14e108_setupRangeKindKeys(_self_, &(_36617_rng), _36442_var_tokens);
	};
	return _36617_rng;;
}



inline jule::Any _1ab14e911_buildCommonIterKind(_1ab14a126_scopeParser* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _38043_tokens, jule::Ptr<_1db944d0d_Token>* _38062_err_tok) {
	jule::I64 _38117_braceN = 0LL;;
	{
		auto expr = _38043_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adc2b3a8:;
		if (it != expr_end) {
			jule::I64 _38214_i = it - expr->begin();
			jule::Ptr<_1db944d0d_Token> _38221_tok = *it;
			{
				if ((_38221_tok.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _38221_tok.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1adc2c992:;
							{
								(_38117_braceN)++;
								goto _iter_next_1adc2b3a8;
							}
						}
						else {
							_case_begin_1adc2c596:;
							{
								(_38117_braceN)--;
							}
						}
						_match_end_1adc2c387:;
					};
				};
				if ((_38117_braceN != 0LL)) {
					goto _iter_next_1adc2b3a8;
				};
				{
					auto &_match_expr{ _38221_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(15LLU)) {
						_case_begin_1adc2ca3b:;
						{
							jule::Slice<jule::Ptr<_1db944d0d_Token>> _39925_declTokens = (*(_38043_tokens)).slice(0LL, _38214_i);;
							jule::Slice<jule::Ptr<_1db944d0d_Token>> _40025_exprTokens = (*(_38043_tokens)).slice((_38214_i + 1LL));;
							return jule::Any(_1ab14e559_buildRangeIterKind(_self_, &(_39925_declTokens), &(_40025_exprTokens), &(_38221_tok)), &__jule_any_type40);;
						}
					}
					_match_end_1adc2d300:;
				};
			}
			_iter_next_1adc2b3a8:;
			++it;
			_38214_i++;
			goto _iter_begin_1adc2b3a8;
		}
		_iter_end_1adc2b3a8:;
	};
	return jule::Any(_1ab14cc0b_buildWhileIterKind(_self_, _38043_tokens), &__jule_any_type38);;
}



inline jule::Ptr<_1aa86749d_Iter> _1ab14ec1e_buildCommonIter(_1ab14a126_scopeParser* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>> _40738_tokens) {
	jule::Ptr<_1aa86749d_Iter> _40817_it = jule::new_ptr<_1aa86749d_Iter>(_1aa86749d_Iter{._field_Token=_40738_tokens[0LL], });;
	_40738_tokens=_40738_tokens.slice(1LL);
	if ((_40738_tokens.len() == 0LL)) {
		_1ab14a7a8_stop(_self_);
		_1ab14b314_pushErr(_self_, _40817_it.get()._field_Token, jule::Str("body is not exist", 17));
		_1ab14b633_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1db944d0d_Token>> _41817_exprTokens = _1ab161912_getBlockExpr(&(_40738_tokens));;
	if ((_41817_exprTokens.len() > 0LL)) {
		_40817_it.get()._field_Kind=_1ab14e911_buildCommonIterKind(_self_, &(_41817_exprTokens), &(_40817_it.get()._field_Token));
	};
	jule::I64 _42217_i = _41817_exprTokens.len();;
	jule::Slice<jule::Ptr<_1db944d0d_Token>> _42317_scopeTokens = _1ab1649d1_range(&(_42217_i), jule::Str("{", 1), jule::Str("}", 1), &(_40738_tokens));;
	if ((_42317_scopeTokens == nullptr)) {
		_1ab14a7a8_stop(_self_);
		_1ab14b314_pushErr(_self_, _40817_it.get()._field_Token, jule::Str("body is not exist", 17));
		_1ab14b633_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_42217_i < _40738_tokens.len())) {
		_1ab14b314_pushErr(_self_, _40738_tokens[_42217_i], jule::Str("invalid syntax", 14));
	};
	_40817_it.get()._field_Scope=_1ab14bec4_buildScope(_self_, &(_42317_scopeTokens), _40738_tokens[(_42217_i - 1LL)]);
	return _40817_it;;
}



inline jule::Ptr<_1aa86749d_Iter> _1ab15002c_buildIterSt(_1ab14a126_scopeParser* _self_, jule::Ptr<_1ab1497eb_stmt>* _43735_st) {
	if ((*(_43735_st)).get()._field_terminated) {
		return _1ab14c8ed_buildWhileNextIter(_self_, _43735_st);;
	};
	return _1ab14ec1e_buildCommonIter(_self_, (*(_43735_st)).get()._field_tokens);;
}



inline jule::Ptr<_1aa8689bb_BreakSt> _1ab15033a_buildBreakSt(_1ab14a126_scopeParser* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _44436_tokens) {
	jule::Ptr<_1aa8689bb_BreakSt> _44517_brk = jule::new_ptr<_1aa8689bb_BreakSt>(_1aa8689bb_BreakSt{._field_Token=(*(_44436_tokens))[0LL], });;
	if (((*(_44436_tokens)).len() > 1LL)) {
		if (((*(_44436_tokens))[1LL].get()._field_Id != static_cast<jule::U64>(2LLU))) {
			_1ab14b314_pushErr(_self_, (*(_44436_tokens))[1LL], jule::Str("invalid syntax", 14));
			_1ab14b633_pushSuggestion(_self_, jule::Str("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			_44517_brk.get()._field_Label=(*(_44436_tokens))[1LL];
			if (((*(_44436_tokens)).len() > 2LL)) {
				_1ab14b314_pushErr(_self_, (*(_44436_tokens))[1LL], jule::Str("invalid syntax", 14));
			};
		};
	};
	return _44517_brk;;
}



inline jule::Ptr<_1aa868d73_ContSt> _1ab150648_buildContSt(_1ab14a126_scopeParser* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _46235_tokens) {
	jule::Ptr<_1aa868d73_ContSt> _46317_cont = jule::new_ptr<_1aa868d73_ContSt>(_1aa868d73_ContSt{._field_Token=(*(_46235_tokens))[0LL], });;
	if (((*(_46235_tokens)).len() > 1LL)) {
		if (((*(_46235_tokens))[1LL].get()._field_Id != static_cast<jule::U64>(2LLU))) {
			_1ab14b314_pushErr(_self_, (*(_46235_tokens))[1LL], jule::Str("invalid syntax", 14));
			_1ab14b633_pushSuggestion(_self_, jule::Str("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			_46317_cont.get()._field_Label=(*(_46235_tokens))[1LL];
			if (((*(_46235_tokens)).len() > 2LL)) {
				_1ab14b314_pushErr(_self_, (*(_46235_tokens))[1LL], jule::Str("invalid syntax", 14));
			};
		};
	};
	return _46317_cont;;
}



inline jule::Ptr<_1aa8692e6_If> _1ab150956_buildIf(_1ab14a126_scopeParser* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _48031_tokens) {
	jule::Ptr<_1aa8692e6_If> _48117_model = jule::new_ptr<_1aa8692e6_If>(_1aa8692e6_If{._field_Token=(*(_48031_tokens))[0LL], });;
	(*(_48031_tokens))=(*(_48031_tokens)).slice(1LL);
	jule::Slice<jule::Ptr<_1db944d0d_Token>> _48517_exprTokens = _1ab161912_getBlockExpr(_48031_tokens);;
	jule::I64 _48617_i = 0LL;;
	if ((_48517_exprTokens.len() == 0LL)) {
		_1ab14b314_pushErr(_self_, _48117_model.get()._field_Token, jule::Str("expression missing", 18));
	} else {
		_48617_i=static_cast<jule::I64>(_48517_exprTokens.len());
	};
	jule::Slice<jule::Ptr<_1db944d0d_Token>> _49217_scopeTokens = _1ab1649d1_range(&(_48617_i), jule::Str("{", 1), jule::Str("}", 1), _48031_tokens);;
	if ((_49217_scopeTokens == nullptr)) {
		_1ab14a7a8_stop(_self_);
		_1ab14b314_pushErr(_self_, _48117_model.get()._field_Token, jule::Str("body is not exist", 17));
		_1ab14b633_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1db944d0d_Token> _49917_end = (*(_48031_tokens))[(_48617_i - 1LL)];;
	if ((_48617_i < (*(_48031_tokens)).len())) {
		if (((*(_48031_tokens))[_48617_i].get()._field_Id == static_cast<jule::U64>(17LLU))) {
			(*(_48031_tokens))=(*(_48031_tokens)).slice(_48617_i);
		} else {
			_1ab14b314_pushErr(_self_, (*(_48031_tokens))[_48617_i], jule::Str("invalid syntax", 14));
			(*(_48031_tokens))=nullptr;
		};
	};
	_48117_model.get()._field_Expr=_1ab1678c4_buildExpr((*(_self_))._field_p, &(_48517_exprTokens));
	_48117_model.get()._field_Scope=_1ab14bec4_buildScope(_self_, &(_49217_scopeTokens), _49917_end);
	return _48117_model;;
}



inline jule::Ptr<_1aa86969d_Else> _1ab150c64_buildElse(_1ab14a126_scopeParser* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _51333_tokens) {
	jule::Ptr<_1aa86969d_Else> _51417_els = jule::new_ptr<_1aa86969d_Else>(_1aa86969d_Else{._field_Token=(*(_51333_tokens))[0LL], });;
	(*(_51333_tokens))=(*(_51333_tokens)).slice(1LL);
	jule::I64 _51817_i = 0LL;;
	jule::Slice<jule::Ptr<_1db944d0d_Token>> _51917_scopeTokens = _1ab1649d1_range(&(_51817_i), jule::Str("{", 1), jule::Str("}", 1), _51333_tokens);;
	if ((_51917_scopeTokens == nullptr)) {
		if ((_51817_i < (*(_51333_tokens)).len())) {
			_1ab14b314_pushErr(_self_, _51417_els.get()._field_Token, jule::Str("else's cannot have any expression", 33));
		} else {
			_1ab14a7a8_stop(_self_);
			_1ab14b314_pushErr(_self_, _51417_els.get()._field_Token, jule::Str("body is not exist", 17));
			_1ab14b633_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	if ((_51817_i < (*(_51333_tokens)).len())) {
		_1ab14b314_pushErr(_self_, (*(_51333_tokens))[_51817_i], jule::Str("invalid syntax", 14));
	};
	_51417_els.get()._field_Scope=_1ab14bec4_buildScope(_self_, &(_51917_scopeTokens), (*(_51333_tokens))[(_51817_i - 1LL)]);
	return _51417_els;;
}



inline jule::Ptr<_1aa869b21_Conditional> _1ab151072_buildIfElseChain(_1ab14a126_scopeParser* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>> _53739_tokens) {
	jule::Ptr<_1aa869b21_Conditional> _53817_chain = jule::new_ptr<_1aa869b21_Conditional>(_1aa869b21_Conditional{._field_Head=_1ab150956_buildIf(_self_, &(_53739_tokens)), });;
	if ((_53817_chain.get()._field_Head == nullptr)) {
		return nullptr;;
	};
	while ((_53739_tokens.len() != 0LL)) {
		{
			if ((_53739_tokens[0LL].get()._field_Id != static_cast<jule::U64>(17LLU))) {
				goto _iter_end_1adc4822c;
			};
			if (((_53739_tokens.len() > 1LL) && (_53739_tokens[1LL].get()._field_Id == static_cast<jule::U64>(16LLU)))) {
				_53739_tokens=_53739_tokens.slice(1LL);
				jule::Ptr<_1aa8692e6_If> _55025_elif = _1ab150956_buildIf(_self_, &(_53739_tokens));;
				_53817_chain.get()._field_Tail = jule::alloc_for_append(_53817_chain.get()._field_Tail,1);_53817_chain.get()._field_Tail.__push(_55025_elif);;
				goto _iter_next_1adc4822c;
			};
			_53817_chain.get()._field_Default=_1ab150c64_buildElse(_self_, &(_53739_tokens));
			goto _iter_end_1adc4822c;
		}
	_iter_next_1adc4822c:;
	}
	_iter_end_1adc4822c:;;
	return _53817_chain;;
}



inline jule::Ptr<_1aa858549_Expr> _1ab151380_buildCoCallSt(_1ab14a126_scopeParser* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>> _56036_tokens) {
	jule::Ptr<_1db944d0d_Token> _56113_token = _56036_tokens[0LL];;
	_56036_tokens=_56036_tokens.slice(1LL);
	jule::Ptr<_1aa858549_Expr> _56317_e = _1ab1678c4_buildExpr((*(_self_))._field_p, &(_56036_tokens));;
	if ((_56317_e == nullptr)) {
		return _56317_e;;
	};
	{
		auto &_match_expr{ _56317_e.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1adc4bdac:;
			{
				_56317_e.get()._field_Kind.cast_ptr<_1aa85c52b_FnCallExpr>(&__jule_any_type111).get()._field_IsCo=true;
			}
		}
		else {
			_case_begin_1adc4c2ca:;
			{
				_1ab14b314_pushErr(_self_, _56113_token, jule::Str("statement must have function call expression", 44));
			}
		}
		_match_end_1adc4be9a:;
	};
	return _56317_e;;
}



inline jule::Ptr<_1aa861a80_GotoSt> _1ab15168d_buildGotoSt(_1ab14a126_scopeParser* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _57635_tokens) {
	jule::Ptr<_1aa861a80_GotoSt> _57717_gt = jule::new_ptr<_1aa861a80_GotoSt>(_1aa861a80_GotoSt{._field_Token=(*(_57635_tokens))[0LL], });;
	if (((*(_57635_tokens)).len() == 1LL)) {
		_1ab14b314_pushErr(_self_, _57717_gt.get()._field_Token, jule::Str("missing label identifier for goto statement", 43));
		return nullptr;;
	} else if (((*(_57635_tokens)).len() > 2LL)) {
		_1ab14b314_pushErr(_self_, (*(_57635_tokens))[2LL], jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_1db944d0d_Token> _58617_identToken = (*(_57635_tokens))[1LL];;
	if ((_58617_identToken.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1ab14b314_pushErr(_self_, _58617_identToken, jule::Str("invalid syntax", 14));
		_1ab14b633_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return _57717_gt;;
	};
	_57717_gt.get()._field_Label=_58617_identToken;
	return _57717_gt;;
}



inline jule::Ptr<_1aa861d6b_FallSt> _1ab15199b_buildFallSt(_1ab14a126_scopeParser* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _59635_tokens) {
	jule::Ptr<_1aa861d6b_FallSt> _59717_fll = jule::new_ptr<_1aa861d6b_FallSt>(_1aa861d6b_FallSt{._field_Token=(*(_59635_tokens))[0LL]});;
	if (((*(_59635_tokens)).len() > 1LL)) {
		_1ab14b314_pushErr(_self_, (*(_59635_tokens))[1LL], jule::Str("invalid syntax", 14));
	};
	return _59717_fll;;
}



inline jule::Ptr<_1aa86a2e7_TypeAliasDecl> _1ab151ca9_buildTypeAliasSt(_1ab14a126_scopeParser* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _60640_tokens) {
	jule::Ptr<_1aa86a2e7_TypeAliasDecl> _60717_tad = _1ab168ebe_buildTypeAliasDecl((*(_self_))._field_p, _60640_tokens);;
	_60717_tad.get()._field_Scope=(*(_self_))._field_s;
	return _60717_tad;;
}



inline void _1ab15221b_pushCaseExpr(_1ab14a126_scopeParser* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>> _61235_tokens, jule::Ptr<_1db944d0d_Token> _61257_token, jule::Bool _6139_typeMatch, jule::Slice<jule::Ptr<_1aa858549_Expr>>* _61331_exprs) {
	if ((_61235_tokens.len() == 0LL)) {
		return;;
	};
	if (_6139_typeMatch) {
		jule::I64 _61921_i = 0LL;;
		jule::Ptr<_1aa854028_TypeDecl> _62022_t;;
		jule::Bool _62025_ok = false;;
		({
			__jule_tuple_x_1aa854028_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab168bb1_buildType((*(_self_))._field_p, &(_61235_tokens), (&(_61921_i)), true);
			_62022_t = __jule_assign_result.__jule_result_arg0;
			_62025_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62025_ok) {
			(*(_61331_exprs)) = jule::alloc_for_append((*(_61331_exprs)),1);(*(_61331_exprs)).__push(jule::new_ptr<_1aa858549_Expr>(_1aa858549_Expr{._field_Token=_61235_tokens[0LL], ._field_End=_61235_tokens[(_61235_tokens.len() - 1LL)], ._field_Kind=jule::Any(_62022_t, &__jule_any_type94)}));;
			if ((_61921_i < _61235_tokens.len())) {
				_1ab14b314_pushErr(_self_, _61235_tokens[_61921_i], jule::Str("invalid syntax", 14));
			};
		};
		return;;
	};
	(*(_61331_exprs)) = jule::alloc_for_append((*(_61331_exprs)),1);(*(_61331_exprs)).__push(_1ab1678c4_buildExpr((*(_self_))._field_p, &(_61235_tokens)));;
}



inline jule::Slice<jule::Ptr<_1aa858549_Expr>> _1ab15266c_buildCaseExprs(_1ab14a126_scopeParser* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _63638_tokens, jule::Ptr<_1db944d0d_Token>* _63661_colon, jule::Bool _63676_typeMatch) {
	jule::Slice<jule::Ptr<_1aa858549_Expr>> _63717_exprs = jule::Slice<jule::Ptr<_1aa858549_Expr>>::alloc(0LL, 1LL);;
	jule::I64 _63917_braceN = 0LL;;
	jule::I64 _64017_j = 0LL;;
	{
		auto expr = _63638_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adc5834c:;
		if (it != expr_end) {
			jule::I64 _64114_i = it - expr->begin();
			jule::Ptr<_1db944d0d_Token> _64121_tok = *it;
			{
				if ((_64121_tok.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _64121_tok.get()._field_Kind };
						
						if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
							_case_begin_1adc5a76c:;
							{
								(_63917_braceN)++;
							}
						}
						else {
							_case_begin_1adc5a371:;
							{
								(_63917_braceN)--;
							}
						}
						_match_end_1adc5a162:;
					};
					goto _iter_next_1adc5834c;
				} else if ((_63917_braceN != 0LL)) {
					goto _iter_next_1adc5834c;
				};
				{
					
					if (((_64121_tok.get()._field_Id == static_cast<jule::U64>(7LLU)) && _64121_tok.get()._field_Kind.equal("|", 1))) {
						_case_begin_1adc5b064:;
						{
							jule::Slice<jule::Ptr<_1db944d0d_Token>> _65721_exprTokens = (*(_63638_tokens)).slice(_64017_j, _64114_i);;
							if ((_65721_exprTokens.len() == 0LL)) {
								_1ab14b314_pushErr(_self_, _64121_tok, jule::Str("expression missing", 18));
							} else {
								_1ab15221b_pushCaseExpr(_self_, (*(_63638_tokens)).slice(_64017_j, _64114_i), _64121_tok, _63676_typeMatch, &(_63717_exprs));
							};
							_64017_j=static_cast<jule::I64>((_64114_i + 1LL));
						}
					}
					else if ((_64121_tok.get()._field_Id == static_cast<jule::U64>(11LLU))) {
						_case_begin_1adc5b0ca:;
						{
							(*(_63661_colon))=_64121_tok;
							_1ab15221b_pushCaseExpr(_self_, (*(_63638_tokens)).slice(_64017_j, _64114_i), _64121_tok, _63676_typeMatch, &(_63717_exprs));
							(*(_63638_tokens))=(*(_63638_tokens)).slice((_64114_i + 1LL));
							return _63717_exprs;;
						}
					}
					_match_end_1adc5aad0:;
				};
			}
			_iter_next_1adc5834c:;
			++it;
			_64114_i++;
			goto _iter_begin_1adc5834c;
		}
		_iter_end_1adc5834c:;
	};
	_1ab14b314_pushErr(_self_, (*(_63638_tokens))[0LL], jule::Str("invalid syntax", 14));
	(*(_63638_tokens))=nullptr;
	return nullptr;;
}



inline jule::Ptr<_1aa863eb1_ScopeTree> _1ab15297a_buildCaseScope(_1ab14a126_scopeParser* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _67638_tokens) {
	jule::I64 _67717_n = 0LL;;
	for (;;) {
		{
			jule::I64 _67921_i = 0LL;;
			jule::Slice<jule::Ptr<_1db944d0d_Token>> _68022_next;;
			({
				__jule_tuple_sx_1db944d0d_Token__jule_tuple_bool __jule_assign_result = _1ab1494ee_skipSt(&(_67921_i), (*(_67638_tokens)).slice(_67717_n));
				_68022_next = __jule_assign_result.__jule_result_arg0;
			});
			if ((_68022_next.len() == 0LL)) {
				goto _iter_end_1adc5e96e;
			};
			jule::Ptr<_1db944d0d_Token> _68417_tok = _68022_next[0LL];;
			if (((_68417_tok.get()._field_Id != static_cast<jule::U64>(7LLU)) || (!_68417_tok.get()._field_Kind.equal("|", 1)))) {
				_67717_n+=_67921_i;
				goto _iter_next_1adc5e96e;
			};
			jule::Slice<jule::Ptr<_1db944d0d_Token>> _68921_scopeTokens = (*(_67638_tokens)).slice(0LL, _67717_n);;
			jule::Ptr<_1aa863eb1_ScopeTree> _69021_scope = _1ab14bec4_buildScope(_self_, &(_68921_scopeTokens), (*(_67638_tokens))[_67717_n]);;
			(*(_67638_tokens))=(*(_67638_tokens)).slice(_67717_n);
			return _69021_scope;;
		}
	_iter_next_1adc5e96e:;
	}
	_iter_end_1adc5e96e:;;
	jule::Ptr<_1db944d0d_Token> _69417_end;;
	if (((*(_67638_tokens)).len() > 0LL)) {
		_69417_end=(*(_67638_tokens))[((*(_67638_tokens)).len() - 1LL)];
	};
	jule::Ptr<_1aa863eb1_ScopeTree> _69817_scope = _1ab14bec4_buildScope(_self_, _67638_tokens, _69417_end);;
	(*(_67638_tokens))=nullptr;
	return _69817_scope;;
}



inline __jule_tuple_x_1aa86a76a_Case__jule_tuple_bool _1ab152d32_buildCase(_1ab14a126_scopeParser* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _70333_tokens, jule::Bool _70351_typeMatch) {
	__jule_tuple_x_1aa86a76a_Case__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1aa86a76a_Case> _70417_c = jule::new_ptr<_1aa86a76a_Case>(_1aa86a76a_Case{._field_Token=(*(_70333_tokens))[0LL], });;
	(*(_70333_tokens))=(*(_70333_tokens)).slice(1LL);
	jule::Ptr<_1db944d0d_Token> _70817_colon = nullptr;;
	_70417_c.get()._field_Exprs=_1ab15266c_buildCaseExprs(_self_, _70333_tokens, &(_70817_colon), _70351_typeMatch);
	_70417_c.get()._field_Scope=_1ab15297a_buildCaseScope(_self_, _70333_tokens);
	if ((_70417_c.get()._field_Scope.get()._field_End == nullptr)) {
		_70417_c.get()._field_Scope.get()._field_End=_70817_colon;
	};
	jule::Bool _71413_isDefault = (_70417_c.get()._field_Exprs.len() == 0LL);;
	__jule_func_result.__jule_result_arg0 = _70417_c;
	__jule_func_result.__jule_result_arg1 = _71413_isDefault;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1aa86a76a_Case__jule_tuple_x_1aa86969d_Else _1ab1531d9_buildCases(_1ab14a126_scopeParser* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>> _71833_tokens, jule::Bool _71851_typeMatch) {
	__jule_tuple_sx_1aa86a76a_Case__jule_tuple_x_1aa86969d_Else __jule_func_result;
	jule::Slice<jule::Ptr<_1aa86a76a_Case>> _71917_cases = nullptr;;
	jule::Ptr<_1aa86969d_Else> _72017_def = nullptr;;
	jule::Bool _72117_defNotLast = false;;
	while ((_71833_tokens.len() > 0LL)) {
		{
			jule::Ptr<_1db944d0d_Token> _72321_tok = _71833_tokens[0LL];;
			if (((_72321_tok.get()._field_Id != static_cast<jule::U64>(7LLU)) || (!_72321_tok.get()._field_Kind.equal("|", 1)))) {
				_1ab14b314_pushErr(_self_, _72321_tok, jule::Str("invalid syntax", 14));
				goto _iter_end_1adc6815e;
			};
			jule::Ptr<_1aa86a76a_Case> _72822_c;;
			jule::Bool _72825_isDefault = false;;
			({
				__jule_tuple_x_1aa86a76a_Case__jule_tuple_bool __jule_assign_result = _1ab152d32_buildCase(_self_, &(_71833_tokens), _71851_typeMatch);
				_72822_c = __jule_assign_result.__jule_result_arg0;
				_72825_isDefault = __jule_assign_result.__jule_result_arg1;
			});
			if (_72825_isDefault) {
				_72822_c.get()._field_Token=_72321_tok;
				if ((_72017_def == nullptr)) {
					_72017_def=jule::new_ptr<_1aa86969d_Else>(_1aa86969d_Else{._field_Token=_72822_c.get()._field_Token, ._field_Scope=_72822_c.get()._field_Scope});
				} else {
					_1ab14b314_pushErr(_self_, _72321_tok, jule::Str("invalid syntax", 14));
				};
			} else {
				_72117_defNotLast=(_72117_defNotLast || (_72017_def != nullptr));
				_71917_cases = jule::alloc_for_append(_71917_cases,1);_71917_cases.__push(_72822_c);;
			};
		}
	_iter_next_1adc6815e:;
	}
	_iter_end_1adc6815e:;;
	if (_72117_defNotLast) {
		_1ab14b314_pushErr(_self_, _72017_def.get()._field_Token, jule::Str("default case should be last case", 32));
	};
	__jule_func_result.__jule_result_arg0 = _71917_cases;
	__jule_func_result.__jule_result_arg1 = _72017_def;
	return __jule_func_result;;
}



inline jule::Ptr<_1aa86ae41_MatchCase> _1ab1534e7_buildMatchCase(_1ab14a126_scopeParser* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>> _75237_tokens) {
	jule::Ptr<_1aa86ae41_MatchCase> _75317_m = jule::new_ptr<_1aa86ae41_MatchCase>(_1aa86ae41_MatchCase{._field_Token=_75237_tokens[0LL], });;
	_75237_tokens=_75237_tokens.slice(1LL);
	if (((_75237_tokens.len() > 0LL) && (_75237_tokens[0LL].get()._field_Id == static_cast<jule::U64>(10LLU)))) {
		_75317_m.get()._field_TypeMatch=true;
		_75237_tokens=_75237_tokens.slice(1LL);
	};
	jule::Slice<jule::Ptr<_1db944d0d_Token>> _76317_exprTokens = _1ab161912_getBlockExpr(&(_75237_tokens));;
	if ((_76317_exprTokens.len() > 0LL)) {
		_75317_m.get()._field_Expr=_1ab1678c4_buildExpr((*(_self_))._field_p, &(_76317_exprTokens));
	} else if (_75317_m.get()._field_TypeMatch) {
		_1ab14b314_pushErr(_self_, _75317_m.get()._field_Token, jule::Str("expression missing", 18));
	};
	jule::I64 _77017_i = _76317_exprTokens.len();;
	jule::Slice<jule::Ptr<_1db944d0d_Token>> _77117_blockToks = _1ab1649d1_range(&(_77017_i), jule::Str("{", 1), jule::Str("}", 1), &(_75237_tokens));;
	if ((_77117_blockToks == nullptr)) {
		_1ab14a7a8_stop(_self_);
		_1ab14b314_pushErr(_self_, _75317_m.get()._field_Token, jule::Str("body is not exist", 17));
		_1ab14b633_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_77017_i < _75237_tokens.len())) {
		_1ab14b314_pushErr(_self_, _75237_tokens[_77017_i], jule::Str("invalid syntax", 14));
	};
	_75317_m.get()._field_End=_75237_tokens[(_77017_i - 1LL)];
	({
		__jule_tuple_sx_1aa86a76a_Case__jule_tuple_x_1aa86969d_Else __jule_assign_result = _1ab1531d9_buildCases(_self_, _77117_blockToks, _75317_m.get()._field_TypeMatch);
		_75317_m.get()._field_Cases = __jule_assign_result.__jule_result_arg0;
		_75317_m.get()._field_Default = __jule_assign_result.__jule_result_arg1;
	});
	return _75317_m;;
}



inline jule::Ptr<_1aa863eb1_ScopeTree> _1ab153805_buildScopeSt(_1ab14a126_scopeParser* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>> _78535_tokens) {
	jule::Bool _78617_isUnsafe = false;;
	jule::Bool _78717_isDeferred = false;;
	jule::Ptr<_1db944d0d_Token> _78817_token = _78535_tokens[0LL];;
	if ((_78817_token.get()._field_Id == static_cast<jule::U64>(34LLU))) {
		_78617_isUnsafe=true;
		_78535_tokens=_78535_tokens.slice(1LL);
		if ((_78535_tokens.len() == 0LL)) {
			_1ab14b314_pushErr(_self_, _78817_token, jule::Str("invalid syntax", 14));
			return nullptr;;
		};
		_78817_token=_78535_tokens[0LL];
		if ((_78817_token.get()._field_Id == static_cast<jule::U64>(36LLU))) {
			_78717_isDeferred=true;
			_78535_tokens=_78535_tokens.slice(1LL);
			if ((_78535_tokens.len() == 0LL)) {
				_1ab14b314_pushErr(_self_, _78817_token, jule::Str("invalid syntax", 14));
				return nullptr;;
			};
		};
	} else if ((_78817_token.get()._field_Id == static_cast<jule::U64>(36LLU))) {
		_78717_isDeferred=true;
		_78535_tokens=_78535_tokens.slice(1LL);
		if ((_78535_tokens.len() == 0LL)) {
			_1ab14b314_pushErr(_self_, _78817_token, jule::Str("invalid syntax", 14));
			return nullptr;;
		};
	};
	jule::I64 _81417_i = 0LL;;
	jule::Slice<jule::Ptr<_1db944d0d_Token>> _81517_scopeTokens = _1ab1649d1_range(&(_81417_i), jule::Str("{", 1), jule::Str("}", 1), &(_78535_tokens));;
	if ((_81517_scopeTokens == nullptr)) {
		_1ab14b314_pushErr(_self_, _78817_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	} else if ((_81417_i < _78535_tokens.len())) {
		_1ab14b314_pushErr(_self_, _78535_tokens[_81417_i], jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_1aa863eb1_ScopeTree> _82217_scope = _1ab14bec4_buildScope(_self_, &(_81517_scopeTokens), _78535_tokens[(_81417_i - 1LL)]);;
	_82217_scope.get()._field_Unsafety=_78617_isUnsafe;
	_82217_scope.get()._field_Deferred=_78717_isDeferred;
	return _82217_scope;;
}



inline jule::Ptr<_1aa8616c8_LabelSt> _1ab153b13_buildLabelSt(_1ab14a126_scopeParser* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _82836_tokens) {
	jule::Ptr<_1aa8616c8_LabelSt> _82917_lbl = jule::new_ptr<_1aa8616c8_LabelSt>(_1aa8616c8_LabelSt{._field_Token=(*(_82836_tokens))[0LL], ._field_Ident=(*(_82836_tokens))[0LL].get()._field_Kind});;
	if (((*(_82836_tokens)).len() > 2LL)) {
		(*(_82836_tokens))=(*(_82836_tokens)).slice(2LL);
		_1ab14b8a8_insertAsNext(_self_, _82836_tokens);
	};
	return _82917_lbl;;
}



inline __jule_tuple__1aa863675_StmtData__jule_tuple_bool _1ab153e21_buildIdSt(_1ab14a126_scopeParser* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _84333_tokens) {
	__jule_tuple__1aa863675_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if (((*(_84333_tokens)).len() == 1LL)) {
		return __jule_func_result;;
	};
	jule::Ptr<_1db944d0d_Token> _84817_token = (*(_84333_tokens))[1LL];;
	{
		auto &_match_expr{ _84817_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1adc7e065:;
			{
				__jule_func_result.__jule_result_arg0 = jule::Any(_1ab153b13_buildLabelSt(_self_, _84333_tokens), &__jule_any_type57);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1adc7e010:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1ab162e41_assignInfo> _1ab15422e_buildAssignInfo(_1ab14a126_scopeParser* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _85739_tokens) {
	jule::Ptr<_1ab162e41_assignInfo> _85817_info = jule::new_ptr<_1ab162e41_assignInfo>(_1ab162e41_assignInfo{._field_ok=true});;
	jule::I64 _86117_braceN = 0LL;;
	{
		auto expr = _85739_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adc807c5:;
		if (it != expr_end) {
			jule::I64 _86214_i = it - expr->begin();
			jule::Ptr<_1db944d0d_Token> _86221_token = *it;
			{
				if ((_86221_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _86221_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1adc81dd1:;
							{
								(_86117_braceN)++;
							}
						}
						else {
							_case_begin_1adc819d5:;
							{
								(_86117_braceN)--;
							}
						}
						_match_end_1adc817c6:;
					};
				};
				{
					
					if ((_86117_braceN > 0LL)) {
						_case_begin_1adc821bc:;
						{
							goto _iter_next_1adc807c5;
						}
					}
					else if ((_86221_token.get()._field_Id != static_cast<jule::U64>(7LLU))) {
						_case_begin_1adc82233:;
						{
							goto _iter_next_1adc807c5;
						}
					}
					else if ((!(_1db9498e5_IsAssignOp(_86221_token.get()._field_Kind)))) {
						_case_begin_1adc822aa:;
						{
							goto _iter_next_1adc807c5;
						}
					}
					_match_end_1adc81e7a:;
				};
				_85817_info.get()._field_l=(*(_85739_tokens)).slice(0LL, _86214_i);
				if ((_85817_info.get()._field_l.len() == 0LL)) {
					_85817_info.get()._field_ok=false;
				};
				_85817_info.get()._field_setter=_86221_token;
				if (((_86214_i + 1LL) >= (*(_85739_tokens)).len())) {
					_85817_info.get()._field_r=nullptr;
					_85817_info.get()._field_ok=_1db94964d_IsPostfixOp(_85817_info.get()._field_setter.get()._field_Kind);
					goto _iter_end_1adc807c5;
				};
				_85817_info.get()._field_r=(*(_85739_tokens)).slice((_86214_i + 1LL));
				if (_1db94964d_IsPostfixOp(_85817_info.get()._field_setter.get()._field_Kind)) {
					if ((_85817_info.get()._field_r.len() > 0LL)) {
						_1ab14b314_pushErr(_self_, _85817_info.get()._field_r[0LL], jule::Str("invalid syntax", 14));
						_85817_info.get()._field_r=nullptr;
					};
				};
				goto _iter_end_1adc807c5;
			}
			_iter_next_1adc807c5:;
			++it;
			_86214_i++;
			goto _iter_begin_1adc807c5;
		}
		_iter_end_1adc807c5:;
	};
	return _85817_info;;
}



inline jule::Ptr<_1aa862476_AssignLeft> _1ab15453c_buildAssignL(_1ab14a126_scopeParser* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _90536_tokens) {
	jule::Ptr<_1aa862476_AssignLeft> _90617_l = jule::new_ptr<_1aa862476_AssignLeft>(_1aa862476_AssignLeft{._field_Token=(*(_90536_tokens))[0LL], });;
	if (((*(_90536_tokens))[0LL].get()._field_Id == static_cast<jule::U64>(2LLU))) {
		_90617_l.get()._field_Ident=_90617_l.get()._field_Token.get()._field_Kind;
	};
	_90617_l.get()._field_Expr=_1ab1678c4_buildExpr((*(_self_))._field_p, _90536_tokens);
	return _90617_l;;
}



inline jule::Slice<jule::Ptr<_1aa862476_AssignLeft>> _1ab15484a_buildAssignLs(_1ab14a126_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1db944d0d_Token>>>* _91637_parts) {
	jule::Slice<jule::Ptr<_1aa862476_AssignLeft>> _91717_lefts = nullptr;;
	{
		auto expr = _91637_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adc88cb7:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1db944d0d_Token>> _91821_part = *it;
			{
				jule::Ptr<_1aa862476_AssignLeft> _91921_l = _1ab15453c_buildAssignL(_self_, &(_91821_part));;
				_91717_lefts = jule::alloc_for_append(_91717_lefts,1);_91717_lefts.__push(_91921_l);;
			}
			_iter_next_1adc88cb7:;
			++it;
			goto _iter_begin_1adc88cb7;
		}
		_iter_end_1adc88cb7:;
	};
	return _91717_lefts;;
}



inline __jule_tuple_x_1aa8629b5_AssignSt__jule_tuple_bool _1ab154b58_buildPlainAssign(_1ab14a126_scopeParser* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _92640_tokens) {
	__jule_tuple_x_1aa8629b5_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1ab162e41_assignInfo> _92717_info = _1ab15422e_buildAssignInfo(_self_, _92640_tokens);;
	if ((!(_92717_info.get()._field_ok))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1aa8629b5_AssignSt> _93217_assign = jule::new_ptr<_1aa8629b5_AssignSt>(_1aa8629b5_AssignSt{._field_Setter=_92717_info.get()._field_setter, });;
	jule::Slice<jule::Slice<jule::Ptr<_1db944d0d_Token>>> _93618_parts;;
	jule::Slice<_1d9d938bd_Log> _93625_errs;;
	({
		__jule_tuple_ssx_1db944d0d_Token__jule_tuple_s_1d9d938bd_Log __jule_assign_result = _1ab16554d_parts(&(_92717_info.get()._field_l), static_cast<jule::U64>(8LLU), true);
		_93618_parts = __jule_assign_result.__jule_result_arg0;
		_93625_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_93625_errs.len() > 0LL)) {
		(*(_self_))._field_p.get()._field_errors=jule::append((*(_self_))._field_p.get()._field_errors,_93625_errs);
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_93217_assign.get()._field_Left=_1ab15484a_buildAssignLs(_self_, &(_93618_parts));
	if ((_92717_info.get()._field_r != nullptr)) {
		_93217_assign.get()._field_Right=_1ab1678c4_buildExpr((*(_self_))._field_p, &(_92717_info.get()._field_r));
	};
	__jule_func_result.__jule_result_arg0 = _93217_assign;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1aa8629b5_AssignSt__jule_tuple_bool _1ab154e66_buildDeclAssign(_1ab14a126_scopeParser* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>> _95038_tokens) {
	__jule_tuple_x_1aa8629b5_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_95038_tokens.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_95038_tokens=_95038_tokens.slice(1LL);
	jule::Ptr<_1db944d0d_Token> _95617_token = _95038_tokens[0LL];;
	if (((_95617_token.get()._field_Id != static_cast<jule::U64>(3LLU)) || (!_95617_token.get()._field_Kind.equal("(", 1)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1aa8629b5_AssignSt> _96117_assign = jule::new_ptr<_1aa8629b5_AssignSt>(_1aa8629b5_AssignSt{._field_Declarative=true, });;
	jule::I64 _96517_i = 0LL;;
	jule::Slice<jule::Ptr<_1db944d0d_Token>> _96617_rang = _1ab1649d1_range(&(_96517_i), jule::Str("(", 1), jule::Str(")", 1), &(_95038_tokens));;
	if ((_96617_rang == nullptr)) {
		_1ab14b314_pushErr(_self_, _95617_token, jule::Str("invalid syntax", 14));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	} else if (((_96517_i + 1LL) < _95038_tokens.len())) {
		_96117_assign.get()._field_Setter=_95038_tokens[_96517_i];
		(_96517_i)++;
		jule::Slice<jule::Ptr<_1db944d0d_Token>> _97321_exprTokens = _95038_tokens.slice(_96517_i);;
		_96117_assign.get()._field_Right=_1ab1678c4_buildExpr((*(_self_))._field_p, &(_97321_exprTokens));
	};
	jule::Slice<jule::Slice<jule::Ptr<_1db944d0d_Token>>> _97818_parts;;
	jule::Slice<_1d9d938bd_Log> _97825_errs;;
	({
		__jule_tuple_ssx_1db944d0d_Token__jule_tuple_s_1d9d938bd_Log __jule_assign_result = _1ab16554d_parts(&(_96617_rang), static_cast<jule::U64>(8LLU), true);
		_97818_parts = __jule_assign_result.__jule_result_arg0;
		_97825_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_97825_errs.len() > 0LL)) {
		(*(_self_))._field_p.get()._field_errors=jule::append((*(_self_))._field_p.get()._field_errors,_97825_errs);
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto expr = &(_97818_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adc94c4b:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1db944d0d_Token>> _98421_part = *it;
			{
				jule::Bool _98521_isMut = false;;
				jule::Bool _98621_isRef = false;;
				_95617_token=_98421_part[0LL];
				if ((_95617_token.get()._field_Id == static_cast<jule::U64>(35LLU))) {
					_98521_isMut=true;
					_98421_part=_98421_part.slice(1LL);
					if ((_98421_part.len() == 0LL)) {
						_1ab14b314_pushErr(_self_, _95617_token, jule::Str("invalid syntax", 14));
						goto _iter_next_1adc94c4b;
					};
				};
				if (((_98421_part[0LL].get()._field_Id == static_cast<jule::U64>(7LLU)) && _98421_part[0LL].get()._field_Kind.equal("&", 1))) {
					_98621_isRef=true;
					_98421_part=_98421_part.slice(1LL);
					if ((_98421_part.len() == 0LL)) {
						_1ab14b314_pushErr(_self_, _95617_token, jule::Str("invalid syntax", 14));
						goto _iter_next_1adc94c4b;
					};
				};
				if ((((_98421_part[0LL].get()._field_Id != static_cast<jule::U64>(2LLU)) && (_98421_part[0LL].get()._field_Id != static_cast<jule::U64>(3LLU))) && (!_98421_part[0LL].get()._field_Kind.equal("(", 1)))) {
					_1ab14b314_pushErr(_self_, _95617_token, jule::Str("invalid syntax", 14));
					goto _iter_next_1adc94c4b;
				};
				jule::Ptr<_1aa862476_AssignLeft> _101421_l = _1ab15453c_buildAssignL(_self_, &(_98421_part));;
				_101421_l.get()._field_Mutable=_98521_isMut;
				_101421_l.get()._field_Reference=_98621_isRef;
				_96117_assign.get()._field_Left = jule::alloc_for_append(_96117_assign.get()._field_Left,1);_96117_assign.get()._field_Left.__push(_101421_l);;
			}
			_iter_next_1adc94c4b:;
			++it;
			goto _iter_begin_1adc94c4b;
		}
		_iter_end_1adc94c4b:;
	};
	__jule_func_result.__jule_result_arg0 = _96117_assign;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1aa8629b5_AssignSt__jule_tuple_bool _1ab155274_buildAssignSt(_1ab14a126_scopeParser* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _102337_tokens) {
	__jule_tuple_x_1aa8629b5_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((!(_1ab1632d7_checkAssignTokens(_102337_tokens)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*(_102337_tokens))[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1adc9d0a6:;
			{
				({
					__jule_tuple_x_1aa8629b5_AssignSt__jule_tuple_bool __jule_assign_result = _1ab154e66_buildDeclAssign(_self_, (*(_102337_tokens)));
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1adc9cb99:;
			{
				({
					__jule_tuple_x_1aa8629b5_AssignSt__jule_tuple_bool __jule_assign_result = _1ab154b58_buildPlainAssign(_self_, _102337_tokens);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1adc9cb44:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1aa858dda_UseExpr> _1ab155582_buildUseExpr(_1ab14a126_scopeParser* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _103836_tokens) {
	if (((*(_103836_tokens)).len() == 1LL)) {
		_1ab14b314_pushErr(_self_, (*(_103836_tokens))[0LL], jule::Str("expression missing", 18));
		return nullptr;;
	};
	jule::Ptr<_1aa858dda_UseExpr> _104317_ue = jule::new_ptr<_1aa858dda_UseExpr>(_1aa858dda_UseExpr{._field_Token=(*(_103836_tokens))[0LL], });;
	(*(_103836_tokens))=(*(_103836_tokens)).slice(1LL);
	_104317_ue.get()._field_Expr=_1ab1678c4_buildExpr((*(_self_))._field_p, _103836_tokens);
	return _104317_ue;;
}



inline jule::Any _1ab155890_buildSt(_1ab14a126_scopeParser* _self_, jule::Ptr<_1ab1497eb_stmt>* _105131_st) {
	jule::Ptr<_1db944d0d_Token> _105217_token = (*(_105131_st)).get()._field_tokens[0LL];;
	if ((_105217_token.get()._field_Id == static_cast<jule::U64>(2LLU))) {
		jule::Any _105422_s = jule::Any(nullptr);;
		jule::Bool _105425_ok = false;;
		({
			__jule_tuple__1aa863675_StmtData__jule_tuple_bool __jule_assign_result = _1ab153e21_buildIdSt(_self_, &((*(_105131_st)).get()._field_tokens));
			_105422_s = __jule_assign_result.__jule_result_arg0;
			_105425_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_105425_ok) {
			return _105422_s;;
		};
	};
	jule::Ptr<_1aa8629b5_AssignSt> _106018_s;;
	jule::Bool _106021_ok = false;;
	({
		__jule_tuple_x_1aa8629b5_AssignSt__jule_tuple_bool __jule_assign_result = _1ab155274_buildAssignSt(_self_, &((*(_105131_st)).get()._field_tokens));
		_106018_s = __jule_assign_result.__jule_result_arg0;
		_106021_ok = __jule_assign_result.__jule_result_arg1;
	});
	if (_106021_ok) {
		return jule::Any(_106018_s, &__jule_any_type59);;
	};
	{
		auto &_match_expr{ _105217_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1ba96b361:;
			{
				return jule::Any(_1ab155582_buildUseExpr(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type64);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(37LLU) || _match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1ba96b3c7:;
			{
				return jule::Any(_1ab14c2d2_buildVarSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(4LLU)) {
			_case_begin_1ba96b163:;
			{
				return jule::Any(_1ab14c5e0_buildRetSt(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type63);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(12LLU)) {
			_case_begin_1ba96b1da:;
			{
				return jule::Any(_1ab15002c_buildIterSt(_self_, _105131_st), &__jule_any_type55);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(13LLU)) {
			_case_begin_1ba96b471:;
			{
				return jule::Any(_1ab15033a_buildBreakSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type62);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(14LLU)) {
			_case_begin_1ba96b4d7:;
			{
				return jule::Any(_1ab150648_buildContSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type56);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1ba96b54d:;
			{
				return jule::Any(_1ab151072_buildIfElseChain(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1ba96b5c5:;
			{
				return jule::Any(_1ab151380_buildCoCallSt(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type53);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1ba96b64c:;
			{
				return jule::Any(_1ab15168d_buildGotoSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type58);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1ba96b6c4:;
			{
				return jule::Any(_1ab15199b_buildFallSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type61);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1ba96b74b:;
			{
				return jule::Any(_1ab151ca9_buildTypeAliasSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(26LLU)) {
			_case_begin_1ba96b7c3:;
			{
				return jule::Any(_1ab1534e7_buildMatchCase(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type60);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_1ba96b84a:;
			{
				return jule::Any(_1ab153805_buildScopeSt(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type52);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1ba96b8c2:;
			{
				if (_105217_token.get()._field_Kind.equal("{", 1)) {
					return jule::Any(_1ab153805_buildScopeSt(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type52);;
				};
			}
		}
		_match_end_1ba96b0ec:;
	};
	jule::Ptr<_1aa858549_Expr> _110117_expr = _1ab1678c4_buildExpr((*(_self_))._field_p, &((*(_105131_st)).get()._field_tokens));;
	if ((_110117_expr != nullptr)) {
		return jule::Any(_110117_expr, &__jule_any_type53);;
	};
	_1ab14b314_pushErr(_self_, _105217_token, jule::Str("invalid syntax", 14));
	return nullptr;;
}



inline void _1ab155bae_build(_1ab14a126_scopeParser* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _110929_tokens, jule::Ptr<_1aa863eb1_ScopeTree>* _110952_s) {
	if (((*(_110952_s)) == nullptr)) {
		return;;
	};
	(*(_self_))._field_stmts=_1ab149b92_splitStmts(_110929_tokens);
	(*(_self_))._field_pos=-1LL;
	(*(_self_))._field_s=(*(_110952_s));
	while (((!(_1ab14aee5_isLastSt(_self_))) && (!(_1ab14ac81_finished(_self_))))) {
		{
			jule::Ptr<_1ab1497eb_stmt> _111721_st = _1ab14bb1c_next(_self_);;
			jule::Any _111821_data = _1ab155890_buildSt(_self_, &(_111721_st));;
			if ((_111821_data != nullptr)) {
				(*(_self_))._field_s.get()._field_Stmts = jule::alloc_for_append((*(_self_))._field_s.get()._field_Stmts,1);(*(_self_))._field_s.get()._field_Stmts.__push(_1aa8638a6_Stmt{._field_Token=_111721_st.get()._field_tokens[0LL], ._field_Data=_111821_data});;
			};
			if (_1ab14aa1c_stopped(_self_)) {
				goto _iter_end_1ba97428c;
			};
		}
	_iter_next_1ba97428c:;
	}
	_iter_end_1ba97428c:;;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab14a126_scopeParser _Src) {
	_Stream << "scopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline void _1ab156dd0_pushErr(_1ab15660a_exprBuilder* _self_, jule::Ptr<_1db944d0d_Token> _4426_token, jule::Str _4441_fmt, jule::Slice<jule::Any> _4454_args) {
	_1ab167297_pushErr((*(_self_))._field_p.ptr(), _4426_token, _4441_fmt, _4454_args);
}



inline void _1ab1571ee_pushSuggestion(_1ab15660a_exprBuilder* _self_, jule::Str _4933_fmt, jule::Slice<jule::Any> _4946_args) {
	_1ab1675b6_pushSuggestion((*(_self_))._field_p.ptr(), _4933_fmt, _4946_args);
}



inline jule::Ptr<_1aa8591c6_TupleExpr> _1ab15750c_buildTuple(_1ab15660a_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1db944d0d_Token>>>* _5334_parts) {
	jule::Ptr<_1aa8591c6_TupleExpr> _5417_tuple = jule::new_ptr<_1aa8591c6_TupleExpr>(_1aa8591c6_TupleExpr{._field_Expr=jule::Slice<jule::Ptr<_1aa858549_Expr>>::alloc(0LL, (*(_5334_parts)).len())});;
	{
		auto expr = _5334_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adb356d0:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1db944d0d_Token>> _5721_part = *it;
			{
				_5417_tuple.get()._field_Expr = jule::alloc_for_append(_5417_tuple.get()._field_Expr,1);_5417_tuple.get()._field_Expr.__push(_1ab16102c_buildFromTokens(_self_, _5721_part));;
			}
			_iter_next_1adb356d0:;
			++it;
			goto _iter_begin_1adb356d0;
		}
		_iter_end_1adb356d0:;
	};
	return _5417_tuple;;
}



inline jule::Ptr<_1aa85957d_LitExpr> _1ab15781a_buildLit(_1ab15660a_exprBuilder* _self_, jule::Ptr<_1db944d0d_Token> _6327_token) {
	return jule::new_ptr<_1aa85957d_LitExpr>(_1aa85957d_LitExpr{._field_Token=_6327_token, ._field_Value=_6327_token.get()._field_Kind});;
}



inline jule::Ptr<_1aa854028_TypeDecl> _1ab157b28_buildPrimitiveType(_1ab15660a_exprBuilder* _self_, jule::Ptr<_1db944d0d_Token>* _7038_token) {
	return _1ab1770cb_buildPrimType((*(_7038_token)));;
}



inline jule::Any _1ab157e36_buildSingle(_1ab15660a_exprBuilder* _self_, jule::Ptr<_1db944d0d_Token> _7434_token) {
	{
		auto &_match_expr{ _7434_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1adb371b5:;
			{
				return jule::Any(_1ab15781a_buildLit(_self_, _7434_token), &__jule_any_type105);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1adb3722b:;
			{
				if (_7434_token.get()._field_Kind.equal("...", 3)) {
					return jule::Any(jule::new_ptr<_1aa85acbb_VariadicExpr>(_1aa85acbb_VariadicExpr{._field_Token=_7434_token, }), &__jule_any_type81);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU) || _match_expr == static_cast<jule::U64>(27LLU) || _match_expr == static_cast<jule::U64>(39LLU)) {
			_case_begin_1adb37292:;
			{
				return jule::Any(_1ab1622d6_buildIdentExpr(&(_7434_token)), &__jule_any_type85);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1adb37308:;
			{
				return jule::Any(_1ab157b28_buildPrimitiveType(_self_, &(_7434_token)), &__jule_any_type94);;
			}
		}
		_match_end_1adb360e8:;
	};
	_1ab156dd0_pushErr(_self_, _7434_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1aa85a20a_IdentExpr> _1ab158244_buildCppLinkedIdent(_1ab15660a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _9543_tokens) {
	if (((*(_9543_tokens))[0LL].get()._field_Id != static_cast<jule::U64>(30LLU))) {
		return nullptr;;
	} else if (((*(_9543_tokens))[1LL].get()._field_Id != static_cast<jule::U64>(20LLU))) {
		_1ab156dd0_pushErr(_self_, (*(_9543_tokens))[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ab1571ee_pushSuggestion(_self_, jule::Str("use dot (.) to access cpp-linked defines", 40), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1db944d0d_Token> _10317_token = (*(_9543_tokens))[2LL];;
	if ((_10317_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1ab156dd0_pushErr(_self_, (*(_9543_tokens))[2LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ab1571ee_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aa85a20a_IdentExpr> _10917_expr = _1ab1622d6_buildIdentExpr(&(_10317_token));;
	_10917_expr.get()._field_CppLinked=true;
	return _10917_expr;;
}



inline jule::Ptr<_1aa85a914_UnaryExpr> _1ab158552_buildUnary(_1ab15660a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>> _11433_tokens) {
	jule::Ptr<_1db944d0d_Token> _11517_op = _11433_tokens[0LL];;
	if ((_11433_tokens.len() == 1LL)) {
		_1ab156dd0_pushErr(_self_, _11517_op, jule::Str("missing expression for unary operator", 37), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((!(_1db945517_IsUnaryOp(_11517_op.get()._field_Kind)))) {
		_1ab156dd0_pushErr(_self_, _11517_op, jule::Str("invalid unary operator: @", 25), jule::Slice<jule::Any>::make({jule::Any(_11517_op.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	_11433_tokens=_11433_tokens.slice(1LL);
	return jule::new_ptr<_1aa85a914_UnaryExpr>(_1aa85a914_UnaryExpr{._field_Op=_11517_op, ._field_Expr=_1ab16102c_buildFromTokens(_self_, _11433_tokens)});;
}



inline jule::Ptr<_1aa85b99d_SubIdentExpr> _1ab158860_buildObjSubIdent(_1ab15660a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>> _13539_tokens) {
	jule::I64 _13617_i = (_13539_tokens.len() - 1LL);;
	jule::Ptr<_1db944d0d_Token> _13717_identToken = _13539_tokens[_13617_i];;
	(_13617_i)--;
	_13539_tokens=_13539_tokens.slice(0LL, _13617_i);
	if ((_13539_tokens.len() == 0LL)) {
		_1ab156dd0_pushErr(_self_, _13717_identToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1aa85b99d_SubIdentExpr>(_1aa85b99d_SubIdentExpr{._field_Expr=_1ab16102c_buildFromTokens(_self_, _13539_tokens), ._field_Ident=_13717_identToken});;
}



inline jule::Ptr<_1aa85b52a_NsSelectionExpr> _1ab158b6d_buildNsSubIdent(_1ab15660a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _15039_tokens) {
	jule::Ptr<_1aa85b52a_NsSelectionExpr> _15117_ns = jule::new_ptr<_1aa85b52a_NsSelectionExpr>();;
	{
		auto expr = _15039_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adb43369:;
		if (it != expr_end) {
			jule::I64 _15214_i = it - expr->begin();
			jule::Ptr<_1db944d0d_Token> _15221_token = *it;
			{
				if (((_15214_i & 1LL) == 0LL)) {
					if ((_15221_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
						_1ab156dd0_pushErr(_self_, _15221_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
						_1ab1571ee_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
					};
					_15117_ns.get()._field_Ns = jule::alloc_for_append(_15117_ns.get()._field_Ns,1);_15117_ns.get()._field_Ns.__push(_15221_token);;
				} else if ((_15221_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_1ab156dd0_pushErr(_self_, _15221_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					_1ab1571ee_pushSuggestion(_self_, jule::Str("expected double colon \"::\"", 26), jule::Slice<jule::Any>());
				};
			}
			_iter_next_1adb43369:;
			++it;
			_15214_i++;
			goto _iter_begin_1adb43369;
		}
		_iter_end_1adb43369:;
	};
	_15117_ns.get()._field_Ident=_15117_ns.get()._field_Ns[(_15117_ns.get()._field_Ns.len() - 1LL)];
	_15117_ns.get()._field_Ns=_15117_ns.get()._field_Ns.slice(0LL, (_15117_ns.get()._field_Ns.len() - 1LL));
	return _15117_ns;;
}



inline jule::Ptr<_1aa854028_TypeDecl> _1ab158e7b_buildType(_1ab15660a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _16933_tokens) {
	jule::I64 _17017_i = 0LL;;
	jule::Ptr<_1aa854028_TypeDecl> _17118_t;;
	jule::Bool _17121_ok = false;;
	({
		__jule_tuple_x_1aa854028_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab168bb1_buildType((*(_self_))._field_p, _16933_tokens, (&(_17017_i)), false);
		_17118_t = __jule_assign_result.__jule_result_arg0;
		_17121_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_17121_ok))) {
		_1ab156dd0_pushErr(_self_, (*(_16933_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_17017_i < (*(_16933_tokens)).len())) {
		_1ab156dd0_pushErr(_self_, (*(_16933_tokens))[_17017_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	return _17118_t;;
}



inline jule::Any _1ab159289_buildSubIdent(_1ab15660a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _18337_tokens) {
	jule::I64 _18413_i = ((*(_18337_tokens)).len() - 2LL);;
	jule::Ptr<_1db944d0d_Token> _18513_token = (*(_18337_tokens))[_18413_i];;
	{
		auto &_match_expr{ _18513_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(20LLU)) {
			_case_begin_1baac9b2e:;
			{
				return jule::Any(_1ab158860_buildObjSubIdent(_self_, (*(_18337_tokens))), &__jule_any_type91);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1baaca129:;
			{
				return jule::Any(_1ab158b6d_buildNsSubIdent(_self_, _18337_tokens), &__jule_any_type95);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1baaca190:;
			{
				if (_18513_token.get()._field_Kind.equal("]", 1)) {
					return jule::Any(_1ab158e7b_buildType(_self_, _18337_tokens), &__jule_any_type94);;
				};
			}
		}
		_match_end_1baac9eb4:;
	};
	_1ab156dd0_pushErr(_self_, _18513_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1aa85acbb_VariadicExpr> _1ab159597_buildVariadic(_1ab15660a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>> _20136_tokens) {
	jule::Ptr<_1db944d0d_Token> _20217_token = _20136_tokens[(_20136_tokens.len() - 1LL)];;
	_20136_tokens=_20136_tokens.slice(0LL, (_20136_tokens.len() - 1LL));
	return jule::new_ptr<_1aa85acbb_VariadicExpr>(_1aa85acbb_VariadicExpr{._field_Token=_20217_token, ._field_Expr=_1ab16102c_buildFromTokens(_self_, _20136_tokens)});;
}



inline jule::Any _1ab1598a5_buildOpRight(_1ab15660a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _21036_tokens) {
	jule::Ptr<_1db944d0d_Token> _21117_token = (*(_21036_tokens))[((*(_21036_tokens)).len() - 1LL)];;
	{
		auto &_match_expr{ _21117_token.get()._field_Kind };
		
		if (_match_expr == jule::Str("!", 1)) {
			_case_begin_1baace062:;
			{
				(*(_21036_tokens))=(*(_21036_tokens)).slice(0LL, ((*(_21036_tokens)).len() - 1LL));
				jule::Any _21521_d = _1ab160911_build(_self_, _21036_tokens);;
				if ((_21521_d == nullptr)) {
					return nullptr;;
				};
				{
					auto &_match_expr{ _21521_d };
					
					if (_match_expr.type == &__jule_any_type111) {
						_case_begin_1baad0629:;
						{
							_21521_d.cast_ptr<_1aa85c52b_FnCallExpr>(&__jule_any_type111).get()._field_Exception=jule::new_ptr<_1aa863eb1_ScopeTree>(_1aa863eb1_ScopeTree{._field_Deferred=true, });
							return _21521_d;;
						}
					}
					_match_end_1baad075b:;
				};
			}
		}
		_match_end_1baacdda8:;
	};
	_1ab156dd0_pushErr(_self_, _21117_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1aa858835_RangeExpr> _1ab159bd5_buildBetweenParentheses(_1ab15660a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>> _23146_tokens) {
	if ((_23146_tokens.len() == 2LL)) {
		_1ab156dd0_pushErr(_self_, _23146_tokens[0LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		_1ab1571ee_pushSuggestion(_self_, jule::Str("empty parentheses are not valid expression, must include an expression in range", 79), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_23146_tokens=_23146_tokens.slice(1LL, (_23146_tokens.len() - 1LL));
	return jule::new_ptr<_1aa858835_RangeExpr>(_1aa858835_RangeExpr{._field_Expr=_1ab16102c_buildFromTokens(_self_, _23146_tokens)});;
}



inline jule::Ptr<_1aa85b173_CastExpr> _1ab15a004_tryBuildCast(_1ab15660a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _24336_tokens) {
	jule::I64 _24417_rangeN = 0LL;;
	{
		auto expr = _24336_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1baad39b2:;
		if (it != expr_end) {
			jule::I64 _24513_i = it - expr->begin();
			jule::Ptr<_1db944d0d_Token> _24516_token = *it;
			{
				if ((_24516_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _24516_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1baad5079:;
							{
								(_24417_rangeN)++;
								goto _iter_next_1baad39b2;
							}
						}
						else {
							_case_begin_1baad4b7d:;
							{
								(_24417_rangeN)--;
							}
						}
						_match_end_1baad496e:;
					};
				};
				if ((_24417_rangeN > 0LL)) {
					goto _iter_next_1baad39b2;
				} else if (((_24513_i + 1LL) == (*(_24336_tokens)).len())) {
					return nullptr;;
				};
				jule::Slice<jule::Ptr<_1db944d0d_Token>> _26421_typeTokens = (*(_24336_tokens)).slice(0LL, (_24513_i + 1LL));;
				jule::Slice<jule::Ptr<_1db944d0d_Token>> _26521_exprTokens = (*(_24336_tokens)).slice((_24513_i + 1LL));;
				if ((_26521_exprTokens.len() == 0LL)) {
					return nullptr;;
				};
				jule::Ptr<_1db944d0d_Token> _27217_tok = _26521_exprTokens[0LL];;
				if (((_27217_tok.get()._field_Id != static_cast<jule::U64>(3LLU)) || (!_27217_tok.get()._field_Kind.equal("(", 1)))) {
					return nullptr;;
				};
				jule::Ptr<_1aa85b173_CastExpr> _27721_cast = jule::new_ptr<_1aa85b173_CastExpr>(_1aa85b173_CastExpr{});;
				if ((_26521_exprTokens.len() == 2LL)) {
					_1ab156dd0_pushErr(_self_, _26521_exprTokens[0LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
					_1ab1571ee_pushSuggestion(_self_, jule::Str("give an expression for casting", 30), jule::Slice<jule::Any>());
				};
				if ((_26421_typeTokens.len() == 2LL)) {
					_1ab156dd0_pushErr(_self_, _26421_typeTokens[0LL], jule::Str("type missing", 12), jule::Slice<jule::Any>());
					_1ab1571ee_pushSuggestion(_self_, jule::Str("type declaration expected for casting", 37), jule::Slice<jule::Any>());
				} else {
					_26421_typeTokens=_26421_typeTokens.slice(1LL, (_26421_typeTokens.len() - 1LL));
					jule::I64 _29125_typeIndex = 0LL;;
					jule::Ptr<_1aa854028_TypeDecl> _29226_t;;
					jule::Bool _29229_ok = false;;
					({
						__jule_tuple_x_1aa854028_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab168bb1_buildType((*(_self_))._field_p, &(_26421_typeTokens), (&(_29125_typeIndex)), true);
						_29226_t = __jule_assign_result.__jule_result_arg0;
						_29229_ok = __jule_assign_result.__jule_result_arg1;
					});
					if ((_29229_ok && (_29125_typeIndex < _26421_typeTokens.len()))) {
						_1ab156dd0_pushErr(_self_, _26421_typeTokens[_29125_typeIndex], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					} else if ((!(_29229_ok))) {
						return _27721_cast;;
					};
					_27721_cast.get()._field_Kind=_29226_t;
					if ((_26521_exprTokens.len() > 2LL)) {
						jule::I64 _30229_j = 0LL;;
						_1ab1649d1_range(&(_30229_j), jule::Str("(", 1), jule::Str(")", 1), &(_26521_exprTokens));
						if ((_30229_j < _26521_exprTokens.len())) {
							return nullptr;;
						};
						_26521_exprTokens=_26521_exprTokens.slice(0LL, _30229_j);
						_27721_cast.get()._field_Expr=_1ab16102c_buildFromTokens(_self_, _26521_exprTokens);
					};
				};
				return _27721_cast;;
			}
			_iter_next_1baad39b2:;
			++it;
			_24513_i++;
			goto _iter_begin_1baad39b2;
		}
		_iter_end_1baad39b2:;
	};
	return nullptr;;
}



inline void _1ab15a3bc_pushArg(_1ab15660a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa858549_Expr>>* _31731_args, jule::Slice<jule::Ptr<_1db944d0d_Token>> _31750_tokens, jule::Ptr<_1db944d0d_Token> _31768_err_token) {
	if ((_31750_tokens.len() == 0LL)) {
		_1ab156dd0_pushErr(_self_, _31768_err_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ab1571ee_pushSuggestion(_self_, jule::Str("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	(*(_31731_args)) = jule::alloc_for_append((*(_31731_args)),1);(*(_31731_args)).__push(_1ab16102c_buildFromTokens(_self_, _31750_tokens));;
}



inline jule::Slice<jule::Ptr<_1aa858549_Expr>> _1ab15a6ca_buildArgs(_1ab15660a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>> _32632_tokens) {
	if ((_32632_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1aa858549_Expr>> _33217_args = nullptr;;
	jule::I64 _33317_last = 0LL;;
	jule::I64 _33417_rangeN = 0LL;;
	_32632_tokens=_32632_tokens.slice(1LL, (_32632_tokens.len() - 1LL));
	{
		auto expr = &(_32632_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1baae2570:;
		if (it != expr_end) {
			jule::I64 _33613_i = it - expr->begin();
			jule::Ptr<_1db944d0d_Token> _33616_token = *it;
			{
				if ((_33616_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _33616_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1baae3d02:;
							{
								(_33417_rangeN)++;
							}
						}
						else {
							_case_begin_1baae3906:;
							{
								(_33417_rangeN)--;
							}
						}
						_match_end_1baae36e7:;
					};
				};
				if (((_33417_rangeN > 0LL) || (_33616_token.get()._field_Id != static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1baae2570;
				};
				_1ab15a3bc_pushArg(_self_, &(_33217_args), _32632_tokens.slice(_33317_last, _33613_i), _33616_token);
				_33317_last=static_cast<jule::I64>((_33613_i + 1LL));
			}
			_iter_next_1baae2570:;
			++it;
			_33613_i++;
			goto _iter_begin_1baae2570;
		}
		_iter_end_1baae2570:;
	};
	if ((_33317_last < _32632_tokens.len())) {
		if ((_33317_last == 0LL)) {
			if ((_32632_tokens.len() > 0LL)) {
				_1ab15a3bc_pushArg(_self_, &(_33217_args), _32632_tokens.slice(_33317_last), _32632_tokens[_33317_last]);
			};
		} else {
			_1ab15a3bc_pushArg(_self_, &(_33217_args), _32632_tokens.slice(_33317_last), _32632_tokens[(_33317_last - 1LL)]);
		};
	};
	return _33217_args;;
}



inline jule::Slice<jule::Ptr<_1aa854028_TypeDecl>> _1ab15a9d8_buildCallGenerics(_1ab15660a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>> _36840_tokens) {
	if ((_36840_tokens.len() == 0LL)) {
		return nullptr;;
	};
	_36840_tokens=_36840_tokens.slice(1LL, (_36840_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_1db944d0d_Token>>> _37418_parts;;
	jule::Slice<_1d9d938bd_Log> _37425_errs;;
	({
		__jule_tuple_ssx_1db944d0d_Token__jule_tuple_s_1d9d938bd_Log __jule_assign_result = _1ab16554d_parts(&(_36840_tokens), static_cast<jule::U64>(8LLU), true);
		_37418_parts = __jule_assign_result.__jule_result_arg0;
		_37425_errs = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_1aa854028_TypeDecl>> _37517_generics = jule::Slice<jule::Ptr<_1aa854028_TypeDecl>>::alloc(0LL, _37418_parts.len());;
	(*(_self_))._field_p.get()._field_errors=jule::append((*(_self_))._field_p.get()._field_errors,_37425_errs);
	{
		auto expr = &(_37418_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1baae8576:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1db944d0d_Token>> _37721_part = *it;
			{
				if ((_37721_part.len() == 0LL)) {
					goto _iter_next_1baae8576;
				};
				jule::I64 _38121_j = 0LL;;
				jule::Ptr<_1aa854028_TypeDecl> _38222_generic;;
				({
					__jule_tuple_x_1aa854028_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab168bb1_buildType((*(_self_))._field_p, &(_37721_part), (&(_38121_j)), true);
					_38222_generic = __jule_assign_result.__jule_result_arg0;
				});
				if ((_38121_j < _37721_part.len())) {
					_1ab156dd0_pushErr(_self_, _37721_part[_38121_j], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				_37517_generics = jule::alloc_for_append(_37517_generics,1);_37517_generics.__push(_38222_generic);;
			}
			_iter_next_1baae8576:;
			++it;
			goto _iter_begin_1baae8576;
		}
		_iter_end_1baae8576:;
	};
	return _37517_generics;;
}



inline jule::Ptr<_1aa85c52b_FnCallExpr> _1ab15ae39_buildFnCall(_1ab15660a_exprBuilder* _self_, jule::Ptr<_1db944d0d_Token>* _39235_token, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _39255_expr, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _39276_args) {
	return jule::new_ptr<_1aa85c52b_FnCallExpr>(_1aa85c52b_FnCallExpr{._field_Token=(*(_39235_token)), ._field_Expr=_1ab16102c_buildFromTokens(_self_, (*(_39255_expr))), ._field_Args=_1ab15a6ca_buildArgs(_self_, (*(_39276_args))), });;
}



inline jule::Any _1ab15b247_buildParenthesesRange(_1ab15660a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _40045_tokens) {
	jule::Ptr<_1db944d0d_Token> _40117_token = (*(_40045_tokens))[0LL];;
	{
		auto &_match_expr{ _40117_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1baaeca97:;
			{
				{
					auto &_match_expr{ _40117_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1baaed416:;
						{
							jule::Ptr<_1aa85b173_CastExpr> _40625_expr = _1ab15a004_tryBuildCast(_self_, _40045_tokens);;
							if ((_40625_expr != nullptr)) {
								return jule::Any(_40625_expr, &__jule_any_type109);;
							};
						}
					}
					_match_end_1baaed24b:;
				};
			}
		}
		_match_end_1baaec8dd:;
	};
	jule::Slice<jule::Ptr<_1db944d0d_Token>> _41218_exprTokens;;
	jule::Slice<jule::Ptr<_1db944d0d_Token>> _41234_args_tokens;;
	({
		__jule_tuple_sx_1db944d0d_Token__jule_tuple_sx_1db944d0d_Token __jule_assign_result = _1ab164c78_rangeLast(_40045_tokens);
		_41218_exprTokens = __jule_assign_result.__jule_result_arg0;
		_41234_args_tokens = __jule_assign_result.__jule_result_arg1;
	});
	if ((_41218_exprTokens.len() == 0LL)) {
		return jule::Any(_1ab159bd5_buildBetweenParentheses(_self_, _41234_args_tokens), &__jule_any_type104);;
	};
	return jule::Any(_1ab15ae39_buildFnCall(_self_, &(_40117_token), &(_41218_exprTokens), &(_41234_args_tokens)), &__jule_any_type111);;
}



inline jule::Ptr<_1aa859c87_UnsafeExpr> _1ab15b555_buildUnsafeExpr(_1ab15660a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>> _42138_tokens) {
	jule::Ptr<_1db944d0d_Token> _42217_token = _42138_tokens[0LL];;
	_42138_tokens=_42138_tokens.slice(1LL);
	jule::I64 _42417_i = 0LL;;
	jule::Slice<jule::Ptr<_1db944d0d_Token>> _42517_rangeTokens = _1ab1649d1_range(&(_42417_i), jule::Str("{", 1), jule::Str("}", 1), &(_42138_tokens));;
	if ((_42517_rangeTokens.len() == 0LL)) {
		_1ab156dd0_pushErr(_self_, _42138_tokens[0LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1aa859c87_UnsafeExpr>(_1aa859c87_UnsafeExpr{._field_Token=_42217_token, ._field_Expr=_1ab16102c_buildFromTokens(_self_, _42517_rangeTokens)});;
}



inline jule::Ptr<_1aa8659a7_FnDecl> _1ab15b863_buildAnonFn(_1ab15660a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _43635_tokens) {
	jule::Ptr<_1aa8659a7_FnDecl> _43717_f = _1ab16cd08_buildFn((*(_self_))._field_p, _43635_tokens, false, false);;
	if ((!(_1aa865d09_IsAnon(_43717_f.ptr())))) {
		_1ab156dd0_pushErr(_self_, _43717_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ab1571ee_pushSuggestion(_self_, jule::Str("anonymous function expected, remove identifier of function", 58), jule::Slice<jule::Any>());
	};
	return _43717_f;;
}



inline jule::Any _1ab15bb71_buildUnsafe(_1ab15660a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _44535_tokens) {
	{
		auto &_match_expr{ (*(_44535_tokens))[1LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1ba980980:;
			{
				return jule::Any(_1ab15b863_buildAnonFn(_self_, _44535_tokens), &__jule_any_type14);;
			}
		}
		else {
			_case_begin_1ba980e58:;
			{
				return jule::Any(_1ab15b555_buildUnsafeExpr(_self_, (*(_44535_tokens))), &__jule_any_type106);;
			}
		}
		_match_end_1ba980dd1:;
	};
}



inline void _1ab15c039_pushRangeLitPart(_1ab15660a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>> _45539_part, jule::Ptr<_1db944d0d_Token> _4569_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1db944d0d_Token>>>* _45634_parts) {
	if ((_45539_part.len() == 0LL)) {
		_1ab156dd0_pushErr(_self_, _4569_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ab1571ee_pushSuggestion(_self_, jule::Str("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	(*(_45634_parts)) = jule::alloc_for_append((*(_45634_parts)),1);(*(_45634_parts)).__push(_45539_part);;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1db944d0d_Token>>> _1ab15c369_getBraceRangeLitExprParts(_1ab15660a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>> _46648_tokens) {
	if ((_46648_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1db944d0d_Token>>> _47217_parts = nullptr;;
	jule::I64 _47417_last = 0LL;;
	jule::I64 _47517_rangeN = 0LL;;
	_46648_tokens=_46648_tokens.slice(1LL, (_46648_tokens.len() - 1LL));
	{
		auto expr = &(_46648_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ba9850a0:;
		if (it != expr_end) {
			jule::I64 _47713_i = it - expr->begin();
			jule::Ptr<_1db944d0d_Token> _47716_token = *it;
			{
				if ((_47716_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _47716_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1ba986832:;
							{
								(_47517_rangeN)++;
							}
						}
						else {
							_case_begin_1ba986436:;
							{
								(_47517_rangeN)--;
							}
						}
						_match_end_1ba986227:;
					};
				};
				if (((_47517_rangeN > 0LL) || (_47716_token.get()._field_Id != static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1ba9850a0;
				};
				_1ab15c039_pushRangeLitPart(_self_, _46648_tokens.slice(_47417_last, _47713_i), _47716_token, &(_47217_parts));
				_47417_last=static_cast<jule::I64>((_47713_i + 1LL));
			}
			_iter_next_1ba9850a0:;
			++it;
			_47713_i++;
			goto _iter_begin_1ba9850a0;
		}
		_iter_end_1ba9850a0:;
	};
	if ((_47417_last < _46648_tokens.len())) {
		if ((_47417_last == 0LL)) {
			if ((_46648_tokens.len() > 0LL)) {
				_1ab15c039_pushRangeLitPart(_self_, _46648_tokens.slice(_47417_last), _46648_tokens[_47417_last], &(_47217_parts));
			};
		} else {
			_1ab15c039_pushRangeLitPart(_self_, _46648_tokens.slice(_47417_last), _46648_tokens[(_47417_last - 1LL)], &(_47217_parts));
		};
	};
	return _47217_parts;;
}



inline jule::Ptr<_1aa85ceaa_FieldExprPair> _1ab15c688_buildFieldExprPair(_1ab15660a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>> _50841_tokens) {
	if (((_50841_tokens.len() - 2LL) == 0LL)) {
		_1ab156dd0_pushErr(_self_, _50841_tokens[1LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aa85ceaa_FieldExprPair> _51317_pair = jule::new_ptr<_1aa85ceaa_FieldExprPair>(_1aa85ceaa_FieldExprPair{._field_Field=_50841_tokens[0LL], });;
	_50841_tokens=_50841_tokens.slice(2LL);
	_51317_pair.get()._field_Expr=_1ab16102c_buildFromTokens(_self_, _50841_tokens);
	return _51317_pair;;
}



inline jule::Ptr<_1aa858549_Expr> _1ab15c996_buildStructLitExpr(_1ab15660a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _52142_tokens) {
	jule::Ptr<_1db944d0d_Token> _52217_token = (*(_52142_tokens))[0LL];;
	if (((_52217_token.get()._field_Id == static_cast<jule::U64>(2LLU)) && ((*(_52142_tokens)).len() > 1LL))) {
		_52217_token=(*(_52142_tokens))[1LL];
		if ((_52217_token.get()._field_Id == static_cast<jule::U64>(11LLU))) {
			return jule::new_ptr<_1aa858549_Expr>(_1aa858549_Expr{._field_Token=_52217_token, ._field_End=(*(_52142_tokens))[((*(_52142_tokens)).len() - 1LL)], ._field_Kind=jule::Any(_1ab15c688_buildFieldExprPair(_self_, (*(_52142_tokens))), &__jule_any_type83)});;
		};
	};
	return _1ab16102c_buildFromTokens(_self_, (*(_52142_tokens)));;
}



inline jule::Slice<jule::Ptr<_1aa858549_Expr>> _1ab15cca4_buildStructLitExprs(_1ab15660a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _53643_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1db944d0d_Token>>> _53717_parts = _1ab15c369_getBraceRangeLitExprParts(_self_, (*(_53643_tokens)));;
	if ((_53717_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1aa858549_Expr>> _54217_pairs = jule::Slice<jule::Ptr<_1aa858549_Expr>>::alloc(0LL, _53717_parts.len());;
	{
		auto expr = &(_53717_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ba98e6d6:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1db944d0d_Token>> _54321_part = *it;
			{
				_54217_pairs = jule::alloc_for_append(_54217_pairs,1);_54217_pairs.__push(_1ab15c996_buildStructLitExpr(_self_, &(_54321_part)));;
			}
			_iter_next_1ba98e6d6:;
			++it;
			goto _iter_begin_1ba98e6d6;
		}
		_iter_end_1ba98e6d6:;
	};
	return _54217_pairs;;
}



inline jule::Ptr<_1aa85d708_StructLit> _1ab15d0d4_buildTypedStructLiteral(_1ab15660a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>> _54946_tokens) {
	jule::I64 _55017_i = 0LL;;
	jule::Ptr<_1aa854028_TypeDecl> _55118_t;;
	jule::Bool _55121_ok = false;;
	({
		__jule_tuple_x_1aa854028_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab168bb1_buildType((*(_self_))._field_p, &(_54946_tokens), (&(_55017_i)), true);
		_55118_t = __jule_assign_result.__jule_result_arg0;
		_55121_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_55121_ok))) {
		return nullptr;;
	} else if ((_55017_i >= _54946_tokens.len())) {
		_1ab156dd0_pushErr(_self_, _54946_tokens[_55017_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_54946_tokens=_54946_tokens.slice(_55017_i);
	jule::Ptr<_1db944d0d_Token> _56013_token = _54946_tokens[0LL];;
	if (((_56013_token.get()._field_Id != static_cast<jule::U64>(3LLU)) || (!_56013_token.get()._field_Kind.equal("{", 1)))) {
		_1ab156dd0_pushErr(_self_, _56013_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1aa85d708_StructLit>(_1aa85d708_StructLit{._field_End=_54946_tokens[(_54946_tokens.len() - 1LL)], ._field_Kind=_55118_t, ._field_Exprs=_1ab15cca4_buildStructLitExprs(_self_, &(_54946_tokens))});;
}



inline jule::Ptr<_1aa858549_Expr> _1ab15d403_buildBraceLitPart(_1ab15660a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _57341_tokens) {
	jule::Slice<jule::Ptr<_1db944d0d_Token>> _57418_l;;
	jule::Slice<jule::Ptr<_1db944d0d_Token>> _57425_r;;
	({
		__jule_tuple_sx_1db944d0d_Token__jule_tuple_sx_1db944d0d_Token __jule_assign_result = _1ab161c97_splitDelim(_57341_tokens, static_cast<jule::U64>(11LLU));
		_57418_l = __jule_assign_result.__jule_result_arg0;
		_57425_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_57418_l != nullptr)) {
		return jule::new_ptr<_1aa858549_Expr>(_1aa858549_Expr{._field_Token=(*(_57341_tokens))[0LL], ._field_End=(*(_57341_tokens))[((*(_57341_tokens)).len() - 1LL)], ._field_Kind=jule::Any(jule::new_ptr<_1aa85e451_KeyValPair>(_1aa85e451_KeyValPair{._field_Key=_1ab16102c_buildFromTokens(_self_, _57418_l), ._field_Val=_1ab16102c_buildFromTokens(_self_, _57425_r), ._field_Colon=(*(_57341_tokens))[_57418_l.len()]}), &__jule_any_type84)});;
	};
	return _1ab16102c_buildFromTokens(_self_, (*(_57341_tokens)));;
}



inline jule::Ptr<_1aa85db7b_BraceLit> _1ab15d711_buildBraceLit(_1ab15660a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _59037_tokens) {
	jule::Ptr<_1aa85db7b_BraceLit> _59117_lit = jule::new_ptr<_1aa85db7b_BraceLit>(_1aa85db7b_BraceLit{._field_Token=(*(_59037_tokens))[0LL], ._field_End=(*(_59037_tokens))[((*(_59037_tokens)).len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1db944d0d_Token>>> _59617_parts = _1ab15c369_getBraceRangeLitExprParts(_self_, (*(_59037_tokens)));;
	if ((_59617_parts == nullptr)) {
		return _59117_lit;;
	};
	_59117_lit.get()._field_Exprs=jule::Slice<jule::Ptr<_1aa858549_Expr>>::alloc(0LL, _59617_parts.len());
	{
		auto expr = &(_59617_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ba99902b:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1db944d0d_Token>> _60221_part = *it;
			{
				_59117_lit.get()._field_Exprs = jule::alloc_for_append(_59117_lit.get()._field_Exprs,1);_59117_lit.get()._field_Exprs.__push(_1ab15d403_buildBraceLitPart(_self_, &(_60221_part)));;
			}
			_iter_next_1ba99902b:;
			++it;
			goto _iter_begin_1ba99902b;
		}
		_iter_end_1ba99902b:;
	};
	return _59117_lit;;
}



inline jule::Any _1ab15da1e_buildBraceRange(_1ab15660a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _60939_tokens) {
	jule::Slice<jule::Ptr<_1db944d0d_Token>> _61018_exprTokens;;
	jule::I64 _61030_rangeN = 0;;
	({
		__jule_tuple_sx_1db944d0d_Token__jule_tuple_int __jule_assign_result = _1ab16257d_getRangeExprTokens(_60939_tokens);
		_61018_exprTokens = __jule_assign_result.__jule_result_arg0;
		_61030_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	{
		
		if ((_61018_exprTokens.len() == 0LL)) {
			_case_begin_1ba99a956:;
			{
				return jule::Any(_1ab15d711_buildBraceLit(_self_, _60939_tokens), &__jule_any_type112);;
			}
		}
		else if ((_61030_rangeN > 0LL)) {
			_case_begin_1ba99a9cd:;
			{
				_1ab156dd0_pushErr(_self_, (*(_60939_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ba999900:;
	};
	jule::Ptr<_1db944d0d_Token> _62113_elseToken = _61018_exprTokens[(_61018_exprTokens.len() - 1LL)];;
	if ((_61018_exprTokens[(_61018_exprTokens.len() - 1LL)].get()._field_Id == static_cast<jule::U64>(17LLU))) {
		_61018_exprTokens=_61018_exprTokens.slice(0LL, (_61018_exprTokens.len() - 1LL));
		jule::Any _62421_d = _1ab160911_build(_self_, &(_61018_exprTokens));;
		if ((_62421_d == nullptr)) {
			return nullptr;;
		};
		{
			auto &_match_expr{ _62421_d };
			
			if (_match_expr.type == &__jule_any_type111) {
				_case_begin_1ba99da47:;
				{
					(*(_60939_tokens))=(*(_60939_tokens)).slice((_61018_exprTokens.len() + 1LL));
					jule::I64 _63125_i = 0LL;;
					jule::Slice<jule::Ptr<_1db944d0d_Token>> _63225_rangeTokens = _1ab1649d1_range(&(_63125_i), jule::Str("{", 1), jule::Str("}", 1), _60939_tokens);;
					jule::Ptr<_1aa85c52b_FnCallExpr> _63325_model = _62421_d.cast_ptr<_1aa85c52b_FnCallExpr>(&__jule_any_type111);;
					if (_1aa85cb03_Ignored(_63325_model.ptr())) {
						_1ab156dd0_pushErr(_self_, _62113_elseToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
						_1ab1571ee_pushSuggestion(_self_, jule::Str("just ignore exceptional or handle it but you cannot do both at same time", 72), jule::Slice<jule::Any>());
					};
					_63325_model.get()._field_Exception=_1ab16830e_buildScope((*(_self_))._field_p, &(_63225_rangeTokens), (*(_60939_tokens))[(_63125_i - 1LL)]);
					return _62421_d;;
				}
			}
			else {
				_case_begin_1ba99dc45:;
				{
					_1ab156dd0_pushErr(_self_, _61018_exprTokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			_match_end_1ba99db79:;
		};
	};
	{
		auto &_match_expr{ _61018_exprTokens[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1ba9a3651:;
			{
				return _1ab15bb71_buildUnsafe(_self_, _60939_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1ba9a36b7:;
			{
				return jule::Any(_1ab15b863_buildAnonFn(_self_, _60939_tokens), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU) || _match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1ba9a34a8:;
			{
				return jule::Any(_1ab15d0d4_buildTypedStructLiteral(_self_, (*(_60939_tokens))), &__jule_any_type110);;
			}
		}
		else {
			_case_begin_1ba9a1022:;
			{
				_1ab156dd0_pushErr(_self_, _61018_exprTokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ba9a2809:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_1db944d0d_Token>>> _1ab15dd2c_getEnumerableParts(_1ab15660a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>> _66141_tokens) {
	_66141_tokens=_66141_tokens.slice(1LL, (_66141_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_1db944d0d_Token>>> _66318_parts;;
	jule::Slice<_1d9d938bd_Log> _66325_errors;;
	({
		__jule_tuple_ssx_1db944d0d_Token__jule_tuple_s_1d9d938bd_Log __jule_assign_result = _1ab16554d_parts(&(_66141_tokens), static_cast<jule::U64>(8LLU), true);
		_66318_parts = __jule_assign_result.__jule_result_arg0;
		_66325_errors = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_p.get()._field_errors=jule::append((*(_self_))._field_p.get()._field_errors,_66325_errors);
	return _66318_parts;;
}



inline jule::Ptr<_1aa85eb38_SliceExpr> _1ab15e13a_buildSlice(_1ab15660a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>> _66833_tokens) {
	jule::Ptr<_1aa85eb38_SliceExpr> _66917_slc = jule::new_ptr<_1aa85eb38_SliceExpr>(_1aa85eb38_SliceExpr{._field_Token=_66833_tokens[0LL], ._field_End=_66833_tokens[(_66833_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1db944d0d_Token>>> _67417_parts = _1ab15dd2c_getEnumerableParts(_self_, _66833_tokens);;
	if ((_67417_parts.len() == 0LL)) {
		return _66917_slc;;
	};
	_66917_slc.get()._field_Exprs=jule::Slice<jule::Ptr<_1aa858549_Expr>>::alloc(0LL, _67417_parts.len());
	{
		auto expr = &(_67417_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ba9a7a84:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1db944d0d_Token>> _68021_p = *it;
			{
				if ((_68021_p.len() == 0LL)) {
					goto _iter_next_1ba9a7a84;
				};
				_66917_slc.get()._field_Exprs = jule::alloc_for_append(_66917_slc.get()._field_Exprs,1);_66917_slc.get()._field_Exprs.__push(_1ab16102c_buildFromTokens(_self_, _68021_p));;
			}
			_iter_next_1ba9a7a84:;
			++it;
			goto _iter_begin_1ba9a7a84;
		}
		_iter_end_1ba9a7a84:;
	};
	return _66917_slc;;
}



inline jule::Ptr<_1aa8604a7_IndexingExpr> _1ab15e58b_buildIndexing(_1ab15660a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>> _69036_exprTokens, jule::Slice<jule::Ptr<_1db944d0d_Token>> _69113_tokens, jule::Ptr<_1db944d0d_Token> _69135_errorToken) {
	jule::Ptr<_1db944d0d_Token> _69217_end = _69113_tokens[(_69113_tokens.len() - 1LL)];;
	_69113_tokens=_69113_tokens.slice(1LL, (_69113_tokens.len() - 1LL));
	if ((_69113_tokens.len() == 0LL)) {
		_1ab156dd0_pushErr(_self_, _69135_errorToken, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aa858549_Expr> _69817_expr = _1ab16102c_buildFromTokens(_self_, _69036_exprTokens);;
	if ((_69817_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1aa858549_Expr> _70217_index = _1ab16102c_buildFromTokens(_self_, _69113_tokens);;
	if ((_70217_index == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1aa8604a7_IndexingExpr>(_1aa8604a7_IndexingExpr{._field_Token=_69135_errorToken, ._field_End=_69217_end, ._field_Expr=_69817_expr, ._field_Index=_70217_index});;
}



inline jule::Ptr<_1aa860ab2_SlicingExpr> _1ab15eb30_buildSlicing(_1ab15660a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _71436_exprTokens, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _71463_start, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _71514_to, jule::Ptr<_1db944d0d_Token>* _71533_errorToken, jule::Ptr<_1db944d0d_Token> _71557_end) {
	jule::Ptr<_1aa860ab2_SlicingExpr> _71617_slc = jule::new_ptr<_1aa860ab2_SlicingExpr>(_1aa860ab2_SlicingExpr{._field_Token=(*(_71533_errorToken)), ._field_End=_71557_end, ._field_Expr=_1ab16102c_buildFromTokens(_self_, (*(_71436_exprTokens))), });;
	if (((*(_71463_start)).len() > 0LL)) {
		_71617_slc.get()._field_Start=_1ab16102c_buildFromTokens(_self_, (*(_71463_start)));
	};
	if (((*(_71514_to)).len() > 0LL)) {
		_71617_slc.get()._field_To=_1ab16102c_buildFromTokens(_self_, (*(_71514_to)));
	};
	return _71617_slc;;
}



inline jule::Any _1ab15ee3d_buildBracketRange(_1ab15660a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>> _73040_tokens) {
	jule::Ptr<_1db944d0d_Token> _73117_errorToken = _73040_tokens[0LL];;
	jule::Slice<jule::Ptr<_1db944d0d_Token>> _73218_exprTokens;;
	jule::I64 _73230_rangeN = 0;;
	({
		__jule_tuple_sx_1db944d0d_Token__jule_tuple_int __jule_assign_result = _1ab16257d_getRangeExprTokens(&(_73040_tokens));
		_73218_exprTokens = __jule_assign_result.__jule_result_arg0;
		_73230_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	if ((_73218_exprTokens.len() == 0LL)) {
		return jule::Any(_1ab15e13a_buildSlice(_self_, _73040_tokens), &__jule_any_type99);;
	} else if ((_73230_rangeN > 0LL)) {
		_1ab156dd0_pushErr(_self_, _73117_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_73040_tokens=_73040_tokens.slice(_73218_exprTokens.len());
	jule::Slice<jule::Ptr<_1db944d0d_Token>> _74717_splitTokens = _73040_tokens.slice(1LL, (_73040_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_1db944d0d_Token>> _74818_start;;
	jule::Slice<jule::Ptr<_1db944d0d_Token>> _74829_to;;
	({
		__jule_tuple_sx_1db944d0d_Token__jule_tuple_sx_1db944d0d_Token __jule_assign_result = _1ab161c97_splitDelim(&(_74717_splitTokens), static_cast<jule::U64>(11LLU));
		_74818_start = __jule_assign_result.__jule_result_arg0;
		_74829_to = __jule_assign_result.__jule_result_arg1;
	});
	if (((_74818_start != nullptr) || (_74829_to != nullptr))) {
		return jule::Any(_1ab15eb30_buildSlicing(_self_, &(_73218_exprTokens), &(_74818_start), &(_74829_to), &(_73117_errorToken), _73040_tokens[(_73040_tokens.len() - 1LL)]), &__jule_any_type108);;
	};
	return jule::Any(_1ab15e58b_buildIndexing(_self_, _73218_exprTokens, _73040_tokens, _73117_errorToken), &__jule_any_type107);;
}



inline jule::Any _1ab16024b_buildData(_1ab15660a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _75533_tokens) {
	{
		auto _match_expr{ (*(_75533_tokens)).len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1ba9b47d8:;
			{
				return nullptr;;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1ba9b4871:;
			{
				return _1ab157e36_buildSingle(_self_, (*(_75533_tokens))[0LL]);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1ba9b48d7:;
			{
				if (((*(_75533_tokens))[0LL].get()._field_Id == static_cast<jule::U64>(30LLU))) {
					return jule::Any(_1ab158244_buildCppLinkedIdent(_self_, _75533_tokens), &__jule_any_type85);;
				};
			}
		}
		_match_end_1ba9b45da:;
	};
	jule::Ptr<_1db944d0d_Token> _76717_token = (*(_75533_tokens))[((*(_75533_tokens)).len() - 1LL)];;
	if (((_76717_token.get()._field_Id == static_cast<jule::U64>(7LLU)) && _76717_token.get()._field_Kind.equal("...", 3))) {
		return jule::Any(_1ab159597_buildVariadic(_self_, (*(_75533_tokens))), &__jule_any_type81);;
	};
	_76717_token=(*(_75533_tokens))[0LL];
	{
		auto &_match_expr{ _76717_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1ba9b7a83:;
			{
				if ((((*(_75533_tokens)).len() > 1LL) && _76717_token.get()._field_Kind.equal("*", 1))) {
					_76717_token=(*(_75533_tokens))[1LL];
					if (((_76717_token.get()._field_Id == static_cast<jule::U64>(1LLU)) || (_76717_token.get()._field_Id == static_cast<jule::U64>(34LLU)))) {
						return jule::Any(_1ab158e7b_buildType(_self_, _75533_tokens), &__jule_any_type94);;
					};
				};
				return jule::Any(_1ab158552_buildUnary(_self_, (*(_75533_tokens))), &__jule_any_type93);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1ba9b7b0a:;
			{
				if (((*(_75533_tokens)).len() < 3LL)) {
					goto _match_end_1ba9b79a6;
				};
				if (((*(_75533_tokens)).len() > 3LL)) {
					jule::Ptr<_1db944d0d_Token> _78921_t = (*(_75533_tokens))[((*(_75533_tokens)).len() - 1LL)];;
					if (((_78921_t.get()._field_Id == static_cast<jule::U64>(3LLU)) && _78921_t.get()._field_Kind.equal(")", 1))) {
						goto _match_end_1ba9b79a6;
					};
				};
				jule::Ptr<_1db944d0d_Token> _79517_next = (*(_75533_tokens))[1LL];;
				if (((_79517_next.get()._field_Id != static_cast<jule::U64>(3LLU)) || (!_79517_next.get()._field_Kind.equal("]", 1)))) {
					goto _match_end_1ba9b79a6;
				};
				return jule::Any(_1ab158e7b_buildType(_self_, _75533_tokens), &__jule_any_type94);;
			}
		}
		_match_end_1ba9b79a6:;
	};
	_76717_token=(*(_75533_tokens))[((*(_75533_tokens)).len() - 1LL)];
	{
		auto &_match_expr{ _76717_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1ba9b8116:;
			{
				return _1ab159289_buildSubIdent(_self_, _75533_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1ba9bd56c:;
			{
				return jule::Any(_1ab158e7b_buildType(_self_, _75533_tokens), &__jule_any_type94);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1ba9bd5d3:;
			{
				return _1ab1598a5_buildOpRight(_self_, _75533_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1ba9bd649:;
			{
				{
					auto &_match_expr{ _76717_token.get()._field_Kind };
					
					if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1ba9bed98:;
						{
							return _1ab15b247_buildParenthesesRange(_self_, _75533_tokens);;
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1ba9bee20:;
						{
							return _1ab15da1e_buildBraceRange(_self_, _75533_tokens);;
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1ba9bee97:;
						{
							return _1ab15ee3d_buildBracketRange(_self_, (*(_75533_tokens)));;
						}
					}
					_match_end_1ba9be89d:;
				};
			}
		}
		_match_end_1ba9b80b1:;
	};
	if ((_76717_token.get()._field_Id == static_cast<jule::U64>(32LLU))) {
		return jule::Any(_1ab158e7b_buildType(_self_, _75533_tokens), &__jule_any_type94);;
	};
	_1ab156dd0_pushErr(_self_, _76717_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1ab160603_buildBinop(_1ab15660a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _83134_tokens, jule::I64 _83152_i) {
	jule::Ptr<_1db944d0d_Token> _83217_op = (*(_83134_tokens))[_83152_i];;
	jule::Slice<jule::Ptr<_1db944d0d_Token>> _83317_leftTokens = (*(_83134_tokens)).slice(0LL, _83152_i);;
	if ((_1ab16137e_isTypeOp(&(_83217_op.get()._field_Kind)) && _1ab16166a_isTypeRange(&(_83317_leftTokens)))) {
		return jule::Any(_1ab158e7b_buildType(_self_, _83134_tokens), &__jule_any_type94);;
	};
	jule::Slice<jule::Ptr<_1db944d0d_Token>> _83817_rightTokens = (*(_83134_tokens)).slice((_83152_i + 1LL));;
	if ((_83317_leftTokens.len() == 0LL)) {
		_1ab156dd0_pushErr(_self_, (*(_83134_tokens))[_83152_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ab1571ee_pushSuggestion(_self_, jule::Str("left operand expected for binary operator", 41), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_83817_rightTokens.len() == 0LL)) {
		_1ab156dd0_pushErr(_self_, (*(_83134_tokens))[_83152_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ab1571ee_pushSuggestion(_self_, jule::Str("right operand expected for binary operator", 42), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::Any(jule::new_ptr<_1aa85be21_BinopExpr>(_1aa85be21_BinopExpr{._field_Left=_1ab16102c_buildFromTokens(_self_, _83317_leftTokens), ._field_Right=_1ab16102c_buildFromTokens(_self_, _83817_rightTokens), ._field_Op=_83217_op}), &__jule_any_type113);;
}



inline jule::Any _1ab160911_build(_1ab15660a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _85629_tokens) {
	if (((*(_85629_tokens))[0LL].get()._field_Id == static_cast<jule::U64>(40LLU))) {
		return jule::Any(_1ab158e7b_buildType(_self_, _85629_tokens), &__jule_any_type94);;
	};
	jule::I64 _86013_i = _1ab16203e_findLowestPrecOp(_85629_tokens);;
	if ((_86013_i == -1LL)) {
		return _1ab16024b_buildData(_self_, _85629_tokens);;
	};
	return _1ab160603_buildBinop(_self_, _85629_tokens, _86013_i);;
}



inline jule::Any _1ab160c1e_buildKind(_1ab15660a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _86733_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1db944d0d_Token>>> _86818_parts;;
	jule::Slice<_1d9d938bd_Log> _86825_errors;;
	({
		__jule_tuple_ssx_1db944d0d_Token__jule_tuple_s_1d9d938bd_Log __jule_assign_result = _1ab16554d_parts(_86733_tokens, static_cast<jule::U64>(8LLU), true);
		_86818_parts = __jule_assign_result.__jule_result_arg0;
		_86825_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_86825_errors != nullptr)) {
		(*(_self_))._field_p.get()._field_errors=jule::append((*(_self_))._field_p.get()._field_errors,_86825_errors);
		return nullptr;;
	} else if ((_86818_parts.len() > 1LL)) {
		return jule::Any(_1ab15750c_buildTuple(_self_, &(_86818_parts)), &__jule_any_type86);;
	};
	return _1ab160911_build(_self_, _86733_tokens);;
}



inline jule::Ptr<_1aa858549_Expr> _1ab16102c_buildFromTokens(_1ab15660a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>> _87838_tokens) {
	if ((_87838_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Any _88217_kind = _1ab160c1e_buildKind(_self_, &(_87838_tokens));;
	if ((_88217_kind == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1aa858549_Expr>(_1aa858549_Expr{._field_Token=_87838_tokens[0LL], ._field_End=_87838_tokens[(_87838_tokens.len() - 1LL)], ._field_Kind=_88217_kind});;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab15660a_exprBuilder _Src) {
	_Stream << "exprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab162e41_assignInfo _Src) {
	_Stream << "assignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _1ab166b6a_stop(_1ab16683a_parser* _self_) {
	(*(_self_))._field_ast=nullptr;
}



inline jule::Bool _1ab166dce_stopped(_1ab16683a_parser* _self_) {
	return ((*(_self_))._field_ast == nullptr);;
}



inline void _1ab167297_pushErr(_1ab16683a_parser* _self_, jule::Ptr<_1db944d0d_Token> _28326_token, jule::Str _28341_fmt, jule::Slice<jule::Any> _28354_args) {
	(*(_self_))._field_errors = jule::alloc_for_append((*(_self_))._field_errors,1);(*(_self_))._field_errors.__push(_1ab165bd0_compilerErr(&(_28326_token), &(_28341_fmt), _28354_args));;
}



inline void _1ab1675b6_pushSuggestion(_1ab16683a_parser* _self_, jule::Str _28833_fmt, jule::Slice<jule::Any> _28846_args) {
	{
		_1ab16610e_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _28833_fmt, _28846_args);
	};
}



inline jule::Ptr<_1aa858549_Expr> _1ab1678c4_buildExpr(jule::Ptr<_1ab16683a_parser> _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _29234_tokens) {
	return _1ab16102c_buildFromTokens(_self_.get()._field_ep.ptr(), (*(_29234_tokens)));;
}



inline jule::Ptr<_1aa820a94_Directive> _1ab167bd2_buildDirective(_1ab16683a_parser* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>> _29637_tokens) {
	if ((_29637_tokens.len() == 1LL)) {
		_1ab167297_pushErr(_self_, _29637_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_29637_tokens[1LL].get()._field_Column != (_29637_tokens[0LL].get()._field_Column + 1LL))) {
		_1ab167297_pushErr(_self_, _29637_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1aa820a94_Directive>(_1aa820a94_Directive{._field_Tag=_29637_tokens[1LL], ._field_Args=_29637_tokens.slice(2LL)});;
}



inline void _1ab167e57_pushDirective(_1ab16683a_parser* _self_, jule::Ptr<_1aa820a94_Directive> _31136_d) {
	if ((_31136_d == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1baa034d6:;
		if (it != expr_end) {
			jule::Ptr<_1aa820a94_Directive> _31616_pd = *it;
			{
				if ((_31136_d.get()._field_Tag.get()._field_Kind == _31616_pd.get()._field_Tag.get()._field_Kind)) {
					return;;
				};
			}
			_iter_next_1baa034d6:;
			++it;
			goto _iter_begin_1baa034d6;
		}
		_iter_end_1baa034d6:;
	};
	(*(_self_))._field_directives = jule::alloc_for_append((*(_self_))._field_directives,1);(*(_self_))._field_directives.__push(_31136_d);;
}



inline jule::Ptr<_1aa863eb1_ScopeTree> _1ab16830e_buildScope(jule::Ptr<_1ab16683a_parser> _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _32435_tokens, jule::Ptr<_1db944d0d_Token> _32457_end) {
	jule::Ptr<_1aa863eb1_ScopeTree> _32517_s = _1ab1486eb_newScope();;
	_32517_s.get()._field_End=_32457_end;
	_1ab14a126_scopeParser _32717_sp = _1ab14a126_scopeParser{._field_p=_self_, };;
	_1ab155bae_build(&_32717_sp, _32435_tokens, &(_32517_s));
	return _32517_s;;
}



inline __jule_tuple_x_1aa854028_TypeDecl__jule_tuple_bool _1ab168760__buildType(jule::Ptr<_1ab16683a_parser> _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _33442_tokens, jule::I64* _33513_i, jule::Bool _33522_err) {
	__jule_tuple_x_1aa854028_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	_1ab177560_typeBuilder _33617_tb = _1ab177560_typeBuilder{._field_p=_self_, ._field_tokens=(*(_33442_tokens)), ._field_i=_33513_i, ._field_err=_33522_err};;
	jule::Ptr<_1aa854028_TypeDecl> _34218_decl;;
	jule::Bool _34224_ok = false;;
	({
		__jule_tuple_x_1aa854028_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab17a80a_build(&_33617_tb);
		_34218_decl = __jule_assign_result.__jule_result_arg0;
		_34224_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _34218_decl;
	__jule_func_result.__jule_result_arg1 = _34224_ok;
	return __jule_func_result;;
}



inline __jule_tuple_x_1aa854028_TypeDecl__jule_tuple_bool _1ab168bb1_buildType(jule::Ptr<_1ab16683a_parser> _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _34741_tokens, jule::I64* _34813_i, jule::Bool _34822_err) {
	__jule_tuple_x_1aa854028_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1db944d0d_Token> _34913_token = (*(_34741_tokens))[(*(_34813_i))];;
	jule::Ptr<_1aa854028_TypeDecl> _35018_t;;
	jule::Bool _35021_ok = false;;
	({
		__jule_tuple_x_1aa854028_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab168760__buildType(_self_, _34741_tokens, _34813_i, _34822_err);
		_35018_t = __jule_assign_result.__jule_result_arg0;
		_35021_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((_34822_err && (!(_35021_ok)))) {
		_1ab167297_pushErr(_self_.ptr(), _34913_token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
	};
	__jule_func_result.__jule_result_arg0 = _35018_t;
	__jule_func_result.__jule_result_arg1 = _35021_ok;
	return __jule_func_result;;
}



inline jule::Ptr<_1aa86a2e7_TypeAliasDecl> _1ab168ebe_buildTypeAliasDecl(jule::Ptr<_1ab16683a_parser> _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _35743_tokens) {
	jule::I64 _35817_i = 1LL;;
	if ((_35817_i >= (*(_35743_tokens)).len())) {
		_1ab167297_pushErr(_self_.ptr(), (*(_35743_tokens))[(_35817_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aa86a2e7_TypeAliasDecl> _36317_tad = jule::new_ptr<_1aa86a2e7_TypeAliasDecl>(_1aa86a2e7_TypeAliasDecl{._field_Token=(*(_35743_tokens))[1LL], ._field_Ident=(*(_35743_tokens))[1LL].get()._field_Kind, });;
	jule::Ptr<_1db944d0d_Token> _36717_token = (*(_35743_tokens))[_35817_i];;
	if ((_36717_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1ab167297_pushErr(_self_.ptr(), _36717_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ab1675b6_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_35817_i)++;
	if ((_35817_i >= (*(_35743_tokens)).len())) {
		_1ab167297_pushErr(_self_.ptr(), (*(_35743_tokens))[(_35817_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return _36317_tad;;
	};
	_36717_token=(*(_35743_tokens))[_35817_i];
	if ((_36717_token.get()._field_Id != static_cast<jule::U64>(11LLU))) {
		_1ab167297_pushErr(_self_.ptr(), (*(_35743_tokens))[(_35817_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ab1675b6_pushSuggestion(_self_.ptr(), jule::Str("expected colon \":\"", 18), jule::Slice<jule::Any>());
		return _36317_tad;;
	};
	(_35817_i)++;
	if ((_35817_i >= (*(_35743_tokens)).len())) {
		_1ab167297_pushErr(_self_.ptr(), (*(_35743_tokens))[(_35817_i - 1LL)], jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return _36317_tad;;
	};
	jule::Ptr<_1aa854028_TypeDecl> _38818_t;;
	jule::Bool _38821_ok = false;;
	({
		__jule_tuple_x_1aa854028_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab168bb1_buildType(_self_, _35743_tokens, (&(_35817_i)), true);
		_38818_t = __jule_assign_result.__jule_result_arg0;
		_38821_ok = __jule_assign_result.__jule_result_arg1;
	});
	_36317_tad.get()._field_Kind=_38818_t;
	if ((_38821_ok && (_35817_i < (*(_35743_tokens)).len()))) {
		_1ab167297_pushErr(_self_.ptr(), (*(_35743_tokens))[_35817_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_36317_tad.get()._field_Public=_1ab1764e8_isPub(&(_36317_tad.get()._field_Ident));
	return _36317_tad;;
}



inline void _1ab1692dd_buildVarTypeAndExpr(jule::Ptr<_1ab16683a_parser> _self_, jule::Ptr<_1aa866986_VarDecl>* _39744_v, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _39762_tokens) {
	jule::I64 _39817_i = 0LL;;
	jule::Ptr<_1db944d0d_Token> _39917_tok = (*(_39762_tokens))[_39817_i];;
	if ((_39917_tok.get()._field_Id == static_cast<jule::U64>(11LLU))) {
		(_39817_i)++;
		if (((_39817_i >= (*(_39762_tokens)).len()) || (((*(_39762_tokens))[_39817_i].get()._field_Id == static_cast<jule::U64>(7LLU)) && (*(_39762_tokens))[_39817_i].get()._field_Kind.equal("=", 1)))) {
			_1ab167297_pushErr(_self_.ptr(), _39917_tok, jule::Str("type missing", 12), jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_1aa854028_TypeDecl> _40722_t;;
		jule::Bool _40725_ok = false;;
		({
			__jule_tuple_x_1aa854028_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab168bb1_buildType(_self_, _39762_tokens, (&(_39817_i)), true);
			_40722_t = __jule_assign_result.__jule_result_arg0;
			_40725_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_40725_ok) {
			(*(_39744_v)).get()._field_Kind=_40722_t;
			if ((_39817_i >= (*(_39762_tokens)).len())) {
				return;;
			};
			_39917_tok=(*(_39762_tokens))[_39817_i];
		};
	};
	if ((_39917_tok.get()._field_Id == static_cast<jule::U64>(7LLU))) {
		if ((!_39917_tok.get()._field_Kind.equal("=", 1))) {
			_1ab167297_pushErr(_self_.ptr(), _39917_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return;;
		};
		jule::Slice<jule::Ptr<_1db944d0d_Token>> _42221_exprTokens = (*(_39762_tokens)).slice((_39817_i + 1LL));;
		if ((_42221_exprTokens.len() == 0LL)) {
			_1ab167297_pushErr(_self_.ptr(), _39917_tok, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
			return;;
		};
		(*(_39744_v)).get()._field_Expr=_1ab1678c4_buildExpr(_self_, &(_42221_exprTokens));
	} else {
		_1ab167297_pushErr(_self_.ptr(), _39917_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1ab16960c_buildVarCommon(jule::Ptr<_1ab16683a_parser> _self_, jule::Ptr<_1aa866986_VarDecl>* _43339_v, jule::Slice<jule::Ptr<_1db944d0d_Token>> _43356_tokens) {
	(*(_43339_v)).get()._field_Token=_43356_tokens[0LL];
	if (((*(_43339_v)).get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1ab167297_pushErr(_self_.ptr(), (*(_43339_v)).get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ab1675b6_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	(*(_43339_v)).get()._field_Ident=(*(_43339_v)).get()._field_Token.get()._field_Kind;
	(*(_43339_v)).get()._field_Public=_1ab1764e8_isPub(&((*(_43339_v)).get()._field_Ident));
	(*(_43339_v)).get()._field_Kind=nullptr;
	if ((_43356_tokens.len() > 1LL)) {
		_43356_tokens=_43356_tokens.slice(1LL);
		_1ab1692dd_buildVarTypeAndExpr(_self_, _43339_v, &(_43356_tokens));
	};
}



inline void _1ab1699c5_buildVarBegin(_1ab16683a_parser* _self_, jule::Ptr<_1aa866986_VarDecl>* _44937_v, jule::I64* _44955_i, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _44964_tokens) {
	jule::Ptr<_1db944d0d_Token> _45013_tok = (*(_44964_tokens))[(*(_44955_i))];;
	{
		auto &_match_expr{ _45013_tok.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1baa1cb4e:;
			{
				(*(_44937_v)).get()._field_Statically=true;
				goto _case_begin_1baa1c379;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1baa1c379:;
			{
				((*(_44955_i)))++;
				if (((*(_44955_i)) >= (*(_44964_tokens)).len())) {
					_1ab167297_pushErr(_self_, _45013_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				if (((*(_44964_tokens))[(*(_44955_i))].get()._field_Id == static_cast<jule::U64>(35LLU))) {
					(*(_44937_v)).get()._field_Mutable=true;
					((*(_44955_i)))++;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1baa1c3e0:;
			{
				((*(_44955_i)))++;
				(*(_44937_v)).get()._field_Constant=true;
			}
		}
		else {
			_case_begin_1baa1c2be:;
			{
				_1ab167297_pushErr(_self_, _45013_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1baa1c148:;
	};
	if (((*(_44955_i)) >= (*(_44964_tokens)).len())) {
		_1ab167297_pushErr(_self_, _45013_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1aa866986_VarDecl> _1ab169cd3_buildVar(jule::Ptr<_1ab16683a_parser> _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>> _47932_tokens) {
	jule::I64 _48017_i = 0LL;;
	jule::Ptr<_1aa866986_VarDecl> _48117_v = jule::new_ptr<_1aa866986_VarDecl>(_1aa866986_VarDecl{._field_Token=_47932_tokens[0LL], });;
	_1ab1699c5_buildVarBegin(_self_.ptr(), &(_48117_v), &(_48017_i), &(_47932_tokens));
	if ((_48017_i >= _47932_tokens.len())) {
		return nullptr;;
	};
	_47932_tokens=_47932_tokens.slice(_48017_i);
	if (((_47932_tokens[0LL].get()._field_Id == static_cast<jule::U64>(7LLU)) && _47932_tokens[0LL].get()._field_Kind.equal("&", 1))) {
		_48117_v.get()._field_Reference=true;
		if ((_47932_tokens.len() == 1LL)) {
			return nullptr;;
		};
		_47932_tokens=_47932_tokens.slice(1LL);
	};
	_1ab16960c_buildVarCommon(_self_, &(_48117_v), _47932_tokens);
	return _48117_v;;
}



inline jule::Ptr<_1aa861321_GenericDecl> _1ab16a0e1_buildGeneric(jule::Ptr<_1ab16683a_parser> _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _50137_tokens) {
	jule::Ptr<_1aa861321_GenericDecl> _50217_g = jule::new_ptr<_1aa861321_GenericDecl>(_1aa861321_GenericDecl{._field_Token=(*(_50137_tokens))[0LL], });;
	if ((_50217_g.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1ab167297_pushErr(_self_.ptr(), _50217_g.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ab1675b6_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	_50217_g.get()._field_Ident=_50217_g.get()._field_Token.get()._field_Kind;
	if (((*(_50137_tokens)).len() > 1LL)) {
		if (((*(_50137_tokens))[1LL].get()._field_Id != static_cast<jule::U64>(11LLU))) {
			_1ab167297_pushErr(_self_.ptr(), (*(_50137_tokens))[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		if (((*(_50137_tokens)).len() == 2LL)) {
			_1ab167297_pushErr(_self_.ptr(), (*(_50137_tokens))[1LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		jule::Slice<jule::Ptr<_1db944d0d_Token>> _51921_constraintTokens = (*(_50137_tokens)).slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_1db944d0d_Token>>> _52022_parts;;
		jule::Slice<_1d9d938bd_Log> _52029_errors;;
		({
			__jule_tuple_ssx_1db944d0d_Token__jule_tuple_s_1d9d938bd_Log __jule_assign_result = _1ab165163_partsKind(&(_51921_constraintTokens), jule::Str("|", 1), true);
			_52022_parts = __jule_assign_result.__jule_result_arg0;
			_52029_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_52029_errors.len() > 0LL)) {
			_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_52029_errors);
			return nullptr;;
		};
		_50217_g.get()._field_Constraint=jule::new_ptr<_1aa860d9d_Constraint>(_1aa860d9d_Constraint{._field_Mask=jule::Slice<jule::Ptr<_1aa854028_TypeDecl>>::alloc(0LL, _52022_parts.len())});
		{
			auto expr = &(_52022_parts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1baa28ce2:;
			if (it != expr_end) {
				jule::Slice<jule::Ptr<_1db944d0d_Token>> _52625_part = *it;
				{
					jule::I64 _52725_i = 0LL;;
					jule::Ptr<_1aa854028_TypeDecl> _52826_kind;;
					({
						__jule_tuple_x_1aa854028_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab168bb1_buildType(_self_, &(_52625_part), (&(_52725_i)), true);
						_52826_kind = __jule_assign_result.__jule_result_arg0;
					});
					_50217_g.get()._field_Constraint.get()._field_Mask = jule::alloc_for_append(_50217_g.get()._field_Constraint.get()._field_Mask,1);_50217_g.get()._field_Constraint.get()._field_Mask.__push(_52826_kind);;
					if ((_52725_i < _52625_part.len())) {
						_1ab167297_pushErr(_self_.ptr(), _52625_part[_52725_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1baa28ce2:;
				++it;
				goto _iter_begin_1baa28ce2;
			}
			_iter_end_1baa28ce2:;
		};
	};
	return _50217_g;;
}



inline jule::Slice<jule::Ptr<_1aa861321_GenericDecl>> _1ab16a498_buildGenerics(jule::Ptr<_1ab16683a_parser> _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _53838_tokens, jule::Ptr<_1db944d0d_Token>* _53857_errorToken) {
	if (((*(_53838_tokens)).len() == 0LL)) {
		_1ab167297_pushErr(_self_.ptr(), (*(_53857_errorToken)), jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1db944d0d_Token>>> _54418_parts;;
	jule::Slice<_1d9d938bd_Log> _54425_errors;;
	({
		__jule_tuple_ssx_1db944d0d_Token__jule_tuple_s_1d9d938bd_Log __jule_assign_result = _1ab16554d_parts(_53838_tokens, static_cast<jule::U64>(8LLU), true);
		_54418_parts = __jule_assign_result.__jule_result_arg0;
		_54425_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_54425_errors.len() > 0LL)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_54425_errors);
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1aa861321_GenericDecl>> _55017_generics = jule::Slice<jule::Ptr<_1aa861321_GenericDecl>>::alloc(0LL, _54418_parts.len());;
	{
		auto expr = &(_54418_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1baa2d9a6:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1db944d0d_Token>> _55121_part = *it;
			{
				_55017_generics = jule::alloc_for_append(_55017_generics,1);_55017_generics.__push(_1ab16a0e1_buildGeneric(_self_, &(_55121_part)));;
			}
			_iter_next_1baa2d9a6:;
			++it;
			goto _iter_begin_1baa2d9a6;
		}
		_iter_end_1baa2d9a6:;
	};
	return _55017_generics;;
}



inline jule::Ptr<_1aa864687_ParamDecl> _1ab16a7a6_buildSelfParam(_1ab16683a_parser* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>> _55837_tokens) {
	if ((_55837_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1aa864687_ParamDecl> _56317_param = jule::new_ptr<_1aa864687_ParamDecl>();;
	jule::I64 _56617_i = 0LL;;
	if ((_55837_tokens[_56617_i].get()._field_Id == static_cast<jule::U64>(35LLU))) {
		_56317_param.get()._field_Mutable=true;
		(_56617_i)++;
		if ((_56617_i >= _55837_tokens.len())) {
			_1ab167297_pushErr(_self_, _55837_tokens[(_56617_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	if (_55837_tokens[_56617_i].get()._field_Kind.equal("&", 1)) {
		_56317_param.get()._field_Ident=jule::Str("&", 1);
		(_56617_i)++;
		if ((_56617_i >= _55837_tokens.len())) {
			_1ab167297_pushErr(_self_, _55837_tokens[(_56617_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	if ((_55837_tokens[_56617_i].get()._field_Id == static_cast<jule::U64>(27LLU))) {
		(_56317_param.get()._field_Ident).append("self", 4);
		_56317_param.get()._field_Token=_55837_tokens[_56617_i];
		(_56617_i)++;
		if ((_56617_i < _55837_tokens.len())) {
			_1ab167297_pushErr(_self_, _55837_tokens[_56617_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	};
	return _56317_param;;
}



inline void _1ab16ab6e_paramTypeBegin(_1ab16683a_parser* _self_, jule::Ptr<_1aa864687_ParamDecl>* _59738_param, jule::I64* _59762_i, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _59771_tokens) {
	for (; ((*(_59762_i)) < (*(_59771_tokens)).len()); ((*(_59762_i)))++) {
		{
			jule::Ptr<_1db944d0d_Token> _59917_token = (*(_59771_tokens))[(*(_59762_i))];;
			if ((_59917_token.get()._field_Id != static_cast<jule::U64>(7LLU))) {
				return;;
			} else if ((!_59917_token.get()._field_Kind.equal("...", 3))) {
				return;;
			};
			if ((*(_59738_param)).get()._field_Variadic) {
				_1ab167297_pushErr(_self_, _59917_token, jule::Str("define is already variadic", 26), jule::Slice<jule::Any>());
				goto _iter_next_1baa3589d;
			};
			(*(_59738_param)).get()._field_Variadic=true;
		}
	_iter_next_1baa3589d:;
	}
	_iter_end_1baa3589d:;;
}



inline void _1ab16ae8d_buildParamType(jule::Ptr<_1ab16683a_parser> _self_, jule::Ptr<_1aa864687_ParamDecl>* _61439_param, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _61463_tokens) {
	jule::I64 _61517_i = 0LL;;
	_1ab16ab6e_paramTypeBegin(_self_.ptr(), _61439_param, &(_61517_i), _61463_tokens);
	if ((_61517_i >= (*(_61463_tokens)).len())) {
		return;;
	};
	({
		__jule_tuple_x_1aa854028_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab168bb1_buildType(_self_, _61463_tokens, (&(_61517_i)), true);
		(*(_61439_param)).get()._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_61517_i < (*(_61463_tokens)).len())) {
		_1ab167297_pushErr(_self_.ptr(), (*(_61463_tokens))[_61517_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1ab16b2ac_buildParamBody(jule::Ptr<_1ab16683a_parser> _self_, jule::Ptr<_1aa864687_ParamDecl>* _62739_param, jule::Slice<jule::Ptr<_1db944d0d_Token>> _62762_tokens) {
	jule::Ptr<_1db944d0d_Token> _62817_tok = _62762_tokens[0LL];;
	if ((_62762_tokens.len() == 1LL)) {
		(*(_62739_param)).get()._field_Ident=_62817_tok.get()._field_Kind;
		return;;
	} else if ((_62762_tokens.len() < 3LL)) {
		_1ab167297_pushErr(_self_.ptr(), _62817_tok, jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return;;
	};
	if ((_62762_tokens[1LL].get()._field_Id != static_cast<jule::U64>(11LLU))) {
		(*(_62739_param)).get()._field_Ident=jule::Str("<anonymous>", 11);
		_1ab16ae8d_buildParamType(_self_, _62739_param, &(_62762_tokens));
		return;;
	};
	(*(_62739_param)).get()._field_Ident=_62817_tok.get()._field_Kind;
	_62762_tokens=_62762_tokens.slice(2LL);
	_1ab16ae8d_buildParamType(_self_, _62739_param, &(_62762_tokens));
}



inline jule::Ptr<_1aa864687_ParamDecl> _1ab16b5ba_buildParam(jule::Ptr<_1ab16683a_parser> _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>> _64734_tokens) {
	jule::Ptr<_1aa864687_ParamDecl> _64817_param = jule::new_ptr<_1aa864687_ParamDecl>(_1aa864687_ParamDecl{._field_Token=_64734_tokens[0LL], });;
	if ((_64817_param.get()._field_Token.get()._field_Id == static_cast<jule::U64>(35LLU))) {
		_64817_param.get()._field_Mutable=true;
		if ((_64734_tokens.len() == 1LL)) {
			_1ab167297_pushErr(_self_.ptr(), _64734_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_64734_tokens=_64734_tokens.slice(1LL);
		_64817_param.get()._field_Token=_64734_tokens[0LL];
	};
	if ((_64734_tokens.len() >= 3LL)) {
		if (((_64817_param.get()._field_Token.get()._field_Id == static_cast<jule::U64>(7LLU)) && _64817_param.get()._field_Token.get()._field_Kind.equal("&", 1))) {
			if ((_64734_tokens.len() == 1LL)) {
				_1ab167297_pushErr(_self_.ptr(), _64734_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			};
			if (((_64734_tokens[1LL].get()._field_Id == static_cast<jule::U64>(2LLU)) && (_64734_tokens[2LL].get()._field_Id == static_cast<jule::U64>(11LLU)))) {
				_64817_param.get()._field_Reference=true;
				_64734_tokens=_64734_tokens.slice(1LL);
				_64817_param.get()._field_Token=_64734_tokens[0LL];
			};
		};
	};
	if ((_64817_param.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_64817_param.get()._field_Ident=jule::Str("<anonymous>", 11);
		_1ab16ae8d_buildParamType(_self_, &(_64817_param), &(_64734_tokens));
	} else {
		_1ab16b2ac_buildParamBody(_self_, &(_64817_param), _64734_tokens);
	};
	return _64817_param;;
}



inline void _1ab16b840_checkParams(_1ab16683a_parser* _self_, jule::Slice<jule::Ptr<_1aa864687_ParamDecl>>* _69035_params) {
	{
		auto expr = _69035_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1baa44e73:;
		if (it != expr_end) {
			jule::Ptr<_1aa864687_ParamDecl> _69121_param = *it;
			{
				if ((_1aa8649ea_IsSelf(_69121_param.ptr()) || (_69121_param.get()._field_Kind != nullptr))) {
					goto _iter_next_1baa44e73;
				};
				if ((_69121_param.get()._field_Token == nullptr)) {
					_1ab167297_pushErr(_self_, _69121_param.get()._field_Token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
				} else {
					_69121_param.get()._field_Kind=jule::new_ptr<_1aa854028_TypeDecl>(_1aa854028_TypeDecl{._field_Token=_69121_param.get()._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1aa8545de_IdentTypeDecl>(_1aa8545de_IdentTypeDecl{._field_Token=_69121_param.get()._field_Token, ._field_Ident=_69121_param.get()._field_Token.get()._field_Kind, }), &__jule_any_type20)});
					_69121_param.get()._field_Ident=jule::Str("<anonymous>", 11);
				};
			}
			_iter_next_1baa44e73:;
			++it;
			goto _iter_begin_1baa44e73;
		}
		_iter_end_1baa44e73:;
	};
}



inline jule::Slice<jule::Ptr<_1aa864687_ParamDecl>> _1ab16bbe7_buildParams(jule::Ptr<_1ab16683a_parser> _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _71036_tokens, jule::Bool _71054_method) {
	jule::Slice<jule::Slice<jule::Ptr<_1db944d0d_Token>>> _71118_parts;;
	jule::Slice<_1d9d938bd_Log> _71125_errs;;
	({
		__jule_tuple_ssx_1db944d0d_Token__jule_tuple_s_1d9d938bd_Log __jule_assign_result = _1ab16554d_parts(_71036_tokens, static_cast<jule::U64>(8LLU), true);
		_71118_parts = __jule_assign_result.__jule_result_arg0;
		_71125_errs = __jule_assign_result.__jule_result_arg1;
	});
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_71125_errs);
	if ((_71118_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1aa864687_ParamDecl>> _71717_params = nullptr;;
	if ((_71054_method && (_71118_parts.len() > 0LL))) {
		jule::Ptr<_1aa864687_ParamDecl> _71921_param = _1ab16a7a6_buildSelfParam(_self_.ptr(), _71118_parts[0LL]);;
		if (((_71921_param != nullptr) && _1aa8649ea_IsSelf(_71921_param.ptr()))) {
			_71717_params = jule::alloc_for_append(_71717_params,1);_71717_params.__push(_71921_param);;
			_71118_parts=_71118_parts.slice(1LL);
		};
	};
	{
		auto expr = &(_71118_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1baa495c6:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1db944d0d_Token>> _72621_part = *it;
			{
				jule::Ptr<_1aa864687_ParamDecl> _72721_param = _1ab16b5ba_buildParam(_self_, _72621_part);;
				if ((_72721_param != nullptr)) {
					_71717_params = jule::alloc_for_append(_71717_params,1);_71717_params.__push(_72721_param);;
				};
			}
			_iter_next_1baa495c6:;
			++it;
			goto _iter_begin_1baa495c6;
		}
		_iter_end_1baa495c6:;
	};
	_1ab16b840_checkParams(_self_.ptr(), &(_71717_params));
	return _71717_params;;
}



inline __jule_tuple_x_1aa85713b_RetTypeDecl__jule_tuple_bool _1ab16c09e_buildMultiRetType(jule::Ptr<_1ab16683a_parser> _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _73742_tokens, jule::I64* _73765_i) {
	__jule_tuple_x_1aa85713b_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1aa85713b_RetTypeDecl>();
	((*(_73765_i)))++;
	if (((*(_73765_i)) >= (*(_73742_tokens)).len())) {
		((*(_73765_i)))--;
		({
			__jule_tuple_x_1aa854028_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab168bb1_buildType(_self_, _73742_tokens, (&((*(_73765_i)))), false);
			__jule_func_result.__jule_result_arg0.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
		});
		return __jule_func_result;;
	};
	((*(_73765_i)))--;
	jule::Slice<jule::Ptr<_1db944d0d_Token>> _74717_rangeTokens = _1ab1649d1_range(_73765_i, jule::Str("(", 1), jule::Str(")", 1), _73742_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_1db944d0d_Token>>> _74918_parts;;
	jule::Slice<_1d9d938bd_Log> _74925_errs;;
	({
		__jule_tuple_ssx_1db944d0d_Token__jule_tuple_s_1d9d938bd_Log __jule_assign_result = _1ab16554d_parts(&(_74717_rangeTokens), static_cast<jule::U64>(8LLU), true);
		_74918_parts = __jule_assign_result.__jule_result_arg0;
		_74925_errs = __jule_assign_result.__jule_result_arg1;
	});
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_74925_errs);
	if ((_74918_parts.len() == 0LL)) {
		return __jule_func_result;;
	};
	jule::Slice<jule::Ptr<_1aa854028_TypeDecl>> _75517_types = jule::Slice<jule::Ptr<_1aa854028_TypeDecl>>::alloc(0LL, _74918_parts.len());;
	__jule_func_result.__jule_result_arg0.get()._field_Idents=jule::Slice<jule::Ptr<_1db944d0d_Token>>::alloc(0LL, _74918_parts.len());
	{
		auto expr = &(_74918_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1baa50874:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1db944d0d_Token>> _75721_part = *it;
			{
				jule::Ptr<_1db944d0d_Token> _75821_token = _75721_part[0LL];;
				jule::I64 _75921_offset = 0LL;;
				if ((_75721_part.len() > 1LL)) {
					_75821_token=_75721_part[1LL];
					if ((_75821_token.get()._field_Id == static_cast<jule::U64>(11LLU))) {
						_75921_offset=2LL;
						if ((_75721_part.len() < 3LL)) {
							_1ab167297_pushErr(_self_.ptr(), _75821_token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
							goto _iter_next_1baa50874;
						};
					};
				};
				_75821_token=_75721_part[0LL];
				if ((_75921_offset != 2LL)) {
					jule::Ptr<_1db944d0d_Token> _77525_newToken = jule::new_ptr<_1db944d0d_Token>((*(_75821_token)));;
					_77525_newToken.get()._field_Kind=jule::Str("<anonymous>", 11);
					__jule_func_result.__jule_result_arg0.get()._field_Idents = jule::alloc_for_append(__jule_func_result.__jule_result_arg0.get()._field_Idents,1);__jule_func_result.__jule_result_arg0.get()._field_Idents.__push(_77525_newToken);;
				} else {
					__jule_func_result.__jule_result_arg0.get()._field_Idents = jule::alloc_for_append(__jule_func_result.__jule_result_arg0.get()._field_Idents,1);__jule_func_result.__jule_result_arg0.get()._field_Idents.__push(_75821_token);;
				};
				jule::Ptr<_1aa854028_TypeDecl> _78222_tk;;
				({
					__jule_tuple_x_1aa854028_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab168bb1_buildType(_self_, &(_75721_part), (&(_75921_offset)), true);
					_78222_tk = __jule_assign_result.__jule_result_arg0;
				});
				if ((_75921_offset < _75721_part.len())) {
					_1ab167297_pushErr(_self_.ptr(), _75721_part[_75921_offset], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				_75517_types = jule::alloc_for_append(_75517_types,1);_75517_types.__push(_78222_tk);;
			}
			_iter_next_1baa50874:;
			++it;
			goto _iter_begin_1baa50874;
		}
		_iter_end_1baa50874:;
	};
	if ((_75517_types.len() > 1LL)) {
		__jule_func_result.__jule_result_arg0.get()._field_Kind=jule::new_ptr<_1aa854028_TypeDecl>(_1aa854028_TypeDecl{._field_Token=(*(_73742_tokens))[0LL], ._field_Kind=jule::Any(jule::new_ptr<_1aa855ab8_TupleTypeDecl>(_1aa855ab8_TupleTypeDecl{._field_Types=_75517_types}), &__jule_any_type80)});
	} else {
		__jule_func_result.__jule_result_arg0.get()._field_Kind=_75517_types[0LL];
	};
	__jule_func_result.__jule_result_arg1=true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1aa85713b_RetTypeDecl__jule_tuple_bool _1ab16c456_buildRetType(jule::Ptr<_1ab16683a_parser> _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _80537_tokens, jule::I64* _80560_i) {
	__jule_tuple_x_1aa85713b_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1aa85713b_RetTypeDecl>();
	if (((*(_80560_i)) >= (*(_80537_tokens)).len())) {
		return __jule_func_result;;
	};
	jule::Ptr<_1db944d0d_Token> _81117_token = (*(_80537_tokens))[(*(_80560_i))];;
	{
		auto &_match_expr{ _81117_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1baa58e54:;
			{
				if (_81117_token.get()._field_Kind.equal("{", 1)) {
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1baa58eba:;
			{
				if (_81117_token.get()._field_Kind.equal("=", 1)) {
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1baa59031:;
			{
				if ((((*(_80560_i)) + 1LL) >= (*(_80537_tokens)).len())) {
					_1ab167297_pushErr(_self_.ptr(), _81117_token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
					return __jule_func_result;;
				};
				((*(_80560_i)))++;
				_81117_token=(*(_80537_tokens))[(*(_80560_i))];
				if ((_81117_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _81117_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("(", 1)) {
							_case_begin_1baa5b85d:;
							{
								({
									__jule_tuple_x_1aa85713b_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1ab16c09e_buildMultiRetType(_self_, _80537_tokens, _80560_i);
									__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
									__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
								});
								return __jule_func_result;;
							}
						}
						else if (_match_expr == jule::Str("{", 1)) {
							_case_begin_1baa5b8c4:;
							{
								_1ab167297_pushErr(_self_.ptr(), _81117_token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
								return __jule_func_result;;
							}
						}
						_match_end_1baa5b7a3:;
					};
				};
				({
					__jule_tuple_x_1aa854028_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab168bb1_buildType(_self_, _80537_tokens, (&((*(_80560_i)))), true);
					__jule_func_result.__jule_result_arg0.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
				return __jule_func_result;;
			}
		}
		_match_end_1baa58d55:;
	};
	((*(_80560_i)))++;
	_1ab167297_pushErr(_self_.ptr(), _81117_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return __jule_func_result;;
}



inline jule::Ptr<_1aa8659a7_FnDecl> _1ab16c8a7_buildFnPrototype(jule::Ptr<_1ab16683a_parser> _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _85041_tokens, jule::I64* _85064_i, jule::Bool _85072_method) {
	jule::Ptr<_1aa8659a7_FnDecl> _85117_f = jule::new_ptr<_1aa8659a7_FnDecl>(_1aa8659a7_FnDecl{._field_Token=(*(_85041_tokens))[(*(_85064_i))], });;
	if ((_85117_f.get()._field_Token.get()._field_Id == static_cast<jule::U64>(37LLU))) {
		_85117_f.get()._field_Statically=true;
		((*(_85064_i)))++;
		if (((*(_85064_i)) >= (*(_85041_tokens)).len())) {
			_1ab167297_pushErr(_self_.ptr(), _85117_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_85117_f.get()._field_Token=(*(_85041_tokens))[(*(_85064_i))];
	};
	if ((_85117_f.get()._field_Token.get()._field_Id == static_cast<jule::U64>(34LLU))) {
		_85117_f.get()._field_Unsafety=true;
		((*(_85064_i)))++;
		if (((*(_85064_i)) >= (*(_85041_tokens)).len())) {
			_1ab167297_pushErr(_self_.ptr(), _85117_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_85117_f.get()._field_Token=(*(_85041_tokens))[(*(_85064_i))];
	};
	((*(_85064_i)))++;
	if (((*(_85064_i)) >= (*(_85041_tokens)).len())) {
		_1ab167297_pushErr(_self_.ptr(), _85117_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1db944d0d_Token> _88413_tok = (*(_85041_tokens))[(*(_85064_i))];;
	if ((_88413_tok.get()._field_Id == static_cast<jule::U64>(2LLU))) {
		((*(_85064_i)))++;
		if (((*(_85064_i)) >= (*(_85041_tokens)).len())) {
			_1ab167297_pushErr(_self_.ptr(), _85117_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_85117_f.get()._field_Ident=_88413_tok.get()._field_Kind;
	} else {
		_85117_f.get()._field_Ident=jule::Str("<anonymous>", 11);
	};
	jule::Ptr<_1db944d0d_Token> _89613_errorToken = (*(_85041_tokens))[(*(_85064_i))];;
	jule::Slice<jule::Ptr<_1db944d0d_Token>> _89717_genericsTokens = _1ab1649d1_range(_85064_i, jule::Str("[", 1), jule::Str("]", 1), _85041_tokens);;
	if ((_89717_genericsTokens != nullptr)) {
		_85117_f.get()._field_Generics=_1ab16a498_buildGenerics(_self_, &(_89717_genericsTokens), &(_89613_errorToken));
	};
	if ((!(*(_85041_tokens))[(*(_85064_i))].get()._field_Kind.equal("(", 1))) {
		_1ab167297_pushErr(_self_.ptr(), (*(_85041_tokens))[(*(_85064_i))], jule::Str("missing function parentheses", 28), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1db944d0d_Token>> _90717_paramsToks = _1ab1649d1_range(_85064_i, jule::Str("(", 1), jule::Str(")", 1), _85041_tokens);;
	if ((_90717_paramsToks.len() > 0LL)) {
		_85117_f.get()._field_Params=_1ab16bbe7_buildParams(_self_, &(_90717_paramsToks), _85072_method);
	};
	if (((*(_85064_i)) < (*(_85041_tokens)).len())) {
		jule::Ptr<_1db944d0d_Token> _91317_token = (*(_85041_tokens))[(*(_85064_i))];;
		if (((_91317_token.get()._field_Id == static_cast<jule::U64>(7LLU)) && _91317_token.get()._field_Kind.equal("!", 1))) {
			_85117_f.get()._field_Exceptional=true;
			((*(_85064_i)))++;
		};
	};
	_85117_f.get()._field_Public=_1ab1764e8_isPub(&(_85117_f.get()._field_Ident));
	({
		__jule_tuple_x_1aa85713b_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1ab16c456_buildRetType(_self_, _85041_tokens, _85064_i);
		_85117_f.get()._field_Result = __jule_assign_result.__jule_result_arg0;
	});
	return _85117_f;;
}



inline jule::Ptr<_1aa8659a7_FnDecl> _1ab16cd08_buildFn(jule::Ptr<_1ab16683a_parser> _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _92732_tokens, jule::Bool _92750_method, jule::Bool _92764_prototype) {
	jule::I64 _92817_i = 0LL;;
	jule::Ptr<_1aa8659a7_FnDecl> _92917_f = _1ab16c8a7_buildFnPrototype(_self_, _92732_tokens, &(_92817_i), _92750_method);;
	if (_92764_prototype) {
		if ((_92817_i < (*(_92732_tokens)).len())) {
			_1ab167297_pushErr(_self_.ptr(), (*(_92732_tokens))[(_92817_i + 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		};
		return _92917_f;;
	} else if ((_92917_f == nullptr)) {
		return _92917_f;;
	};
	if ((_92817_i >= (*(_92732_tokens)).len())) {
		_1ab166b6a_stop(_self_.ptr());
		_1ab167297_pushErr(_self_.ptr(), _92917_f.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1ab1675b6_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1db944d0d_Token>> _94517_blockTokens = _1ab1649d1_range(&(_92817_i), jule::Str("{", 1), jule::Str("}", 1), _92732_tokens);;
	if ((_94517_blockTokens != nullptr)) {
		_92917_f.get()._field_Scope=_1ab16830e_buildScope(_self_, &(_94517_blockTokens), (*(_92732_tokens))[(_92817_i - 1LL)]);
		_92917_f.get()._field_Scope.get()._field_Unsafety=_92917_f.get()._field_Unsafety;
		if ((_92817_i < (*(_92732_tokens)).len())) {
			_1ab167297_pushErr(_self_.ptr(), (*(_92732_tokens))[_92817_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	} else {
		_1ab166b6a_stop(_self_.ptr());
		_1ab167297_pushErr(_self_.ptr(), _92917_f.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1ab1675b6_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _92917_f;;
}



inline jule::Slice<jule::Ptr<_1db944d0d_Token>> _1ab16d116_getUseDeclSelectors(_1ab16683a_parser* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>> _96142_tokens) {
	jule::I64 _96217_i = 0LL;;
	_96142_tokens=_1ab1649d1_range(&(_96217_i), jule::Str("{", 1), jule::Str("}", 1), &(_96142_tokens));
	jule::Slice<jule::Slice<jule::Ptr<_1db944d0d_Token>>> _96418_parts;;
	jule::Slice<_1d9d938bd_Log> _96425_errs;;
	({
		__jule_tuple_ssx_1db944d0d_Token__jule_tuple_s_1d9d938bd_Log __jule_assign_result = _1ab16554d_parts(&(_96142_tokens), static_cast<jule::U64>(8LLU), true);
		_96418_parts = __jule_assign_result.__jule_result_arg0;
		_96425_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_96425_errs.len() > 0LL)) {
		(*(_self_))._field_errors=jule::append((*(_self_))._field_errors,_96425_errs);
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1db944d0d_Token>> _97017_selectors = jule::Slice<jule::Ptr<_1db944d0d_Token>>::alloc(0LL, _96418_parts.len());;
	{
		auto expr = &(_96418_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1baa723e0:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1db944d0d_Token>> _97121_part = *it;
			{
				if ((_97121_part.len() > 1LL)) {
					_1ab167297_pushErr(_self_, _97121_part[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1db944d0d_Token> _97521_tok = _97121_part[0LL];;
				if (((_97521_tok.get()._field_Id != static_cast<jule::U64>(2LLU)) && (_97521_tok.get()._field_Id != static_cast<jule::U64>(27LLU)))) {
					_1ab167297_pushErr(_self_, _97521_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					_1ab1675b6_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
					goto _iter_next_1baa723e0;
				};
				_97017_selectors = jule::alloc_for_append(_97017_selectors,1);_97017_selectors.__push(_97521_tok);;
			}
			_iter_next_1baa723e0:;
			++it;
			goto _iter_begin_1baa723e0;
		}
		_iter_end_1baa723e0:;
	};
	return _97017_selectors;;
}



inline void _1ab16d435_buildCppUseDecl(_1ab16683a_parser* _self_, jule::Ptr<_1aa86b6d3_UseDecl>* _98639_decl, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _98656_tokens) {
	if (((*(_98656_tokens)).len() > 1LL)) {
		_1ab167297_pushErr(_self_, (*(_98656_tokens))[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1db944d0d_Token> _99013_token = (*(_98656_tokens))[0LL];;
	if (((_99013_token.get()._field_Id != static_cast<jule::U64>(6LLU)) || ((_99013_token.get()._field_Kind[0LL] != '`') && (_99013_token.get()._field_Kind[0LL] != '\"')))) {
		_1ab167297_pushErr(_self_, _99013_token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return;;
	};
	(*(_98639_decl)).get()._field_CppLinked=true;
	(*(_98639_decl)).get()._field_LinkPath=_99013_token.get()._field_Kind.slice(1LL, (_99013_token.get()._field_Kind.len() - 1LL));
}



inline void _1ab16d754_buildStdUseDecl(_1ab16683a_parser* _self_, jule::Ptr<_1aa86b6d3_UseDecl>* _99939_decl, jule::Slice<jule::Ptr<_1db944d0d_Token>> _99959_tokens) {
	(*(_99939_decl)).get()._field_Std=true;
	jule::Ptr<_1db944d0d_Token> _100217_token = _99959_tokens[0LL];;
	if ((_99959_tokens.len() < 3LL)) {
		_1ab167297_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	_99959_tokens=_99959_tokens.slice(2LL);
	_100217_token=_99959_tokens[(_99959_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _100217_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1bab05ae4:;
			{
				_1ab167297_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1bab05b6b:;
			{
				if ((!_100217_token.get()._field_Kind.equal("}", 1))) {
					_1ab167297_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_1db944d0d_Token>> _101921_selectors = nullptr;;
				({
					__jule_tuple_sx_1db944d0d_Token__jule_tuple_sx_1db944d0d_Token __jule_assign_result = _1ab164c78_rangeLast(&(_99959_tokens));
					_99959_tokens = __jule_assign_result.__jule_result_arg0;
					_101921_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*(_99939_decl)).get()._field_Selected=_1ab16d116_getUseDeclSelectors(_self_, _101921_selectors);
				if ((_99959_tokens.len() == 0LL)) {
					_1ab167297_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_100217_token=_99959_tokens[(_99959_tokens.len() - 1LL)];
				if ((_100217_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_1ab167297_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_99959_tokens=_99959_tokens.slice(0LL, (_99959_tokens.len() - 1LL));
				if ((_99959_tokens.len() == 0LL)) {
					_1ab167297_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1bab05be3:;
			{
				if ((!_100217_token.get()._field_Kind.equal("*", 1))) {
					_1ab167297_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_99959_tokens=_99959_tokens.slice(0LL, (_99959_tokens.len() - 1LL));
				if ((_99959_tokens.len() == 0LL)) {
					_1ab167297_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_100217_token=_99959_tokens[(_99959_tokens.len() - 1LL)];
				if ((_100217_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_1ab167297_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_99959_tokens=_99959_tokens.slice(0LL, (_99959_tokens.len() - 1LL));
				if ((_99959_tokens.len() == 0LL)) {
					_1ab167297_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*(_99939_decl)).get()._field_Full=true;
			}
		}
		_match_end_1bab05a6c:;
	};
	(*(_99939_decl)).get()._field_LinkPath=(jule::Str("std::", 5) + _1ab1663a6_tokstoa(&(_99959_tokens)));
}



inline void _1ab16da73_buildIdentUseDecl(_1ab16683a_parser* _self_, jule::Ptr<_1aa86b6d3_UseDecl>* _106141_decl, jule::Slice<jule::Ptr<_1db944d0d_Token>> _106161_tokens) {
	(*(_106141_decl)).get()._field_Std=false;
	jule::Ptr<_1db944d0d_Token> _106417_token = _106161_tokens[(_106161_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _106417_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1bab10208:;
			{
				_1ab167297_pushErr(_self_, _106417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1bab107d0:;
			{
				if ((!_106417_token.get()._field_Kind.equal("}", 1))) {
					_1ab167297_pushErr(_self_, _106417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_1db944d0d_Token>> _107521_selectors = nullptr;;
				({
					__jule_tuple_sx_1db944d0d_Token__jule_tuple_sx_1db944d0d_Token __jule_assign_result = _1ab164c78_rangeLast(&(_106161_tokens));
					_106161_tokens = __jule_assign_result.__jule_result_arg0;
					_107521_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*(_106141_decl)).get()._field_Selected=_1ab16d116_getUseDeclSelectors(_self_, _107521_selectors);
				if ((_106161_tokens.len() == 0LL)) {
					_1ab167297_pushErr(_self_, _106417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_106417_token=_106161_tokens[(_106161_tokens.len() - 1LL)];
				if ((_106417_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_1ab167297_pushErr(_self_, _106417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_106161_tokens=_106161_tokens.slice(0LL, (_106161_tokens.len() - 1LL));
				if ((_106161_tokens.len() == 0LL)) {
					_1ab167297_pushErr(_self_, _106417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1bab10978:;
			{
				if ((!_106417_token.get()._field_Kind.equal("*", 1))) {
					_1ab167297_pushErr(_self_, _106417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_106161_tokens=_106161_tokens.slice(0LL, (_106161_tokens.len() - 1LL));
				if ((_106161_tokens.len() == 0LL)) {
					_1ab167297_pushErr(_self_, _106417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_106417_token=_106161_tokens[(_106161_tokens.len() - 1LL)];
				if ((_106417_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_1ab167297_pushErr(_self_, _106417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_106161_tokens=_106161_tokens.slice(0LL, (_106161_tokens.len() - 1LL));
				if ((_106161_tokens.len() == 0LL)) {
					_1ab167297_pushErr(_self_, _106417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*(_106141_decl)).get()._field_Full=true;
			}
		}
		_match_end_1bab1077a:;
	};
	(*(_106141_decl)).get()._field_LinkPath=_1ab1663a6_tokstoa(&(_106161_tokens));
}



inline void _1ab16dd92_parseUseDecl(_1ab16683a_parser* _self_, jule::Ptr<_1aa86b6d3_UseDecl>* _112436_decl, jule::Slice<jule::Ptr<_1db944d0d_Token>> _112456_tokens) {
	if ((*(_112436_decl)).get()._field_CppLinked) {
		_1ab16d435_buildCppUseDecl(_self_, _112436_decl, &(_112456_tokens));
		return;;
	};
	jule::Ptr<_1db944d0d_Token> _113017_token = _112456_tokens[0LL];;
	if ((_113017_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1ab167297_pushErr(_self_, _113017_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ab1675b6_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	if (((_112456_tokens.len() > 2LL) && (_112456_tokens[1LL].get()._field_Id == static_cast<jule::U64>(12LLU)))) {
		(*(_112436_decl)).get()._field_Alias=_113017_token.get()._field_Kind;
		if ((_112456_tokens[2LL].get()._field_Id != static_cast<jule::U64>(2LLU))) {
			_1ab167297_pushErr(_self_, _113017_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			_1ab1675b6_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			return;;
		};
		_112456_tokens=_112456_tokens.slice(2LL);
		_113017_token=_112456_tokens[0LL];
	};
	;
	{
		
		if (_113017_token.get()._field_Kind.equal("std", 3)) {
			_case_begin_1bab1ba83:;
			{
				_1ab16d754_buildStdUseDecl(_self_, _112436_decl, _112456_tokens);
			}
		}
		else {
			_case_begin_1bab1db51:;
			{
				_1ab16da73_buildIdentUseDecl(_self_, _112436_decl, _112456_tokens);
			}
		}
		_match_end_1bab1dada:;
	};
}



inline jule::Ptr<_1aa86b6d3_UseDecl> _1ab16e249_buildUseDecl(_1ab16683a_parser* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>> _115835_tokens, jule::Bool _115853_cpp_linked) {
	jule::Ptr<_1aa86b6d3_UseDecl> _115917_decl = jule::new_ptr<_1aa86b6d3_UseDecl>(_1aa86b6d3_UseDecl{._field_Token=_115835_tokens[0LL], ._field_CppLinked=_115853_cpp_linked, });;
	if ((_115835_tokens.len() < 2LL)) {
		_1ab167297_pushErr(_self_, _115917_decl.get()._field_Token, jule::Str("missing path of use statement", 29), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_115835_tokens=_115835_tokens.slice(1LL);
	_1ab16dd92_parseUseDecl(_self_, &(_115917_decl), _115835_tokens);
	return _115917_decl;;
}



inline jule::Ptr<_1aa854028_TypeDecl> _1ab16e601_buildTypeEnumItemKind(jule::Ptr<_1ab16683a_parser> _self_, jule::I64* _117246_i, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _117259_tokens) {
	jule::I64 _117317_braceN = 0LL;;
	jule::I64 _117413_exprStart = (*(_117246_i));;
	for (; ((*(_117246_i)) < (*(_117259_tokens)).len()); ((*(_117246_i)))++) {
		{
			jule::Ptr<_1db944d0d_Token> _117617_t = (*(_117259_tokens))[(*(_117246_i))];;
			if ((_117617_t.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _117617_t.get()._field_Kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1bab23c33:;
						{
							(_117317_braceN)++;
							goto _iter_next_1bab2279d;
						}
					}
					else {
						_case_begin_1bab23837:;
						{
							(_117317_braceN)--;
						}
					}
					_match_end_1bab23628:;
				};
			};
			if ((_117317_braceN > 0LL)) {
				goto _iter_next_1bab2279d;
			};
			if (((_117617_t.get()._field_Id == static_cast<jule::U64>(8LLU)) || (((*(_117246_i)) + 1LL) >= (*(_117259_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1db944d0d_Token>> _119225_kindTokens = nullptr;;
				if ((_117617_t.get()._field_Id == static_cast<jule::U64>(8LLU))) {
					_119225_kindTokens=(*(_117259_tokens)).slice(_117413_exprStart, (*(_117246_i)));
				} else {
					_119225_kindTokens=(*(_117259_tokens)).slice(_117413_exprStart);
				};
				jule::I64 _119825_j = 0LL;;
				jule::Ptr<_1aa854028_TypeDecl> _119926_kind;;
				({
					__jule_tuple_x_1aa854028_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab168bb1_buildType(_self_, &(_119225_kindTokens), (&(_119825_j)), true);
					_119926_kind = __jule_assign_result.__jule_result_arg0;
				});
				if ((_119825_j < _119225_kindTokens.len())) {
					_1ab167297_pushErr(_self_.ptr(), _119225_kindTokens[_119825_j], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				return _119926_kind;;
			};
		}
	_iter_next_1bab2279d:;
	}
	_iter_end_1bab2279d:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1aa86d185_TypeEnumItemDecl>> _1ab16e90e_buildTypeEnumItems(jule::Ptr<_1ab16683a_parser> _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _120943_tokens) {
	jule::Slice<jule::Ptr<_1aa86d185_TypeEnumItemDecl>> _121017_items = jule::Slice<jule::Ptr<_1aa86d185_TypeEnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I64 _121117_i = 0LL;;
	for (; (_121117_i < (*(_120943_tokens)).len()); (_121117_i)++) {
		{
			jule::Ptr<_1db944d0d_Token> _121321_t = (*(_120943_tokens))[_121117_i];;
			jule::Ptr<_1aa86d185_TypeEnumItemDecl> _121421_item = jule::new_ptr<_1aa86d185_TypeEnumItemDecl>();;
			_121421_item.get()._field_Token=_121321_t;
			if (((_121421_item.get()._field_Token.get()._field_Id == static_cast<jule::U64>(2LLU)) && (((*(_120943_tokens)).len() - _121117_i) > 2LL))) {
				_121421_item.get()._field_Ident=_121421_item.get()._field_Token.get()._field_Kind;
				_121321_t=(*(_120943_tokens))[(_121117_i + 1LL)];
				if ((_121321_t.get()._field_Id == static_cast<jule::U64>(11LLU))) {
					_121117_i+=2LL;
					if (((_121117_i >= (*(_120943_tokens)).len()) || ((*(_120943_tokens))[_121117_i].get()._field_Id == static_cast<jule::U64>(8LLU)))) {
						_1ab167297_pushErr(_self_.ptr(), _121321_t, jule::Str("type missing", 12), jule::Slice<jule::Any>());
						goto _iter_next_1bab2850c;
					};
				};
			};
			_121421_item.get()._field_Kind=_1ab16e601_buildTypeEnumItemKind(_self_, &(_121117_i), _120943_tokens);
			_121017_items = jule::alloc_for_append(_121017_items,1);_121017_items.__push(_121421_item);;
		}
	_iter_next_1bab2850c:;
	}
	_iter_end_1bab2850c:;;
	return _121017_items;;
}



inline jule::Ptr<_1aa86d790_TypeEnumDecl> _1ab16ec1c_buildTypeEnumDecl(jule::Ptr<_1ab16683a_parser> _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _123342_tokens) {
	jule::I64 _123417_i = 1LL;;
	jule::Ptr<_1aa86d790_TypeEnumDecl> _123517_e = jule::new_ptr<_1aa86d790_TypeEnumDecl>(_1aa86d790_TypeEnumDecl{._field_Token=(*(_123342_tokens))[_123417_i], });;
	if ((_123517_e.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1ab167297_pushErr(_self_.ptr(), _123517_e.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ab1675b6_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	_123517_e.get()._field_Ident=_123517_e.get()._field_Token.get()._field_Kind;
	_123417_i+=3LL;
	jule::Slice<jule::Ptr<_1db944d0d_Token>> _124517_itemTokens = _1ab1649d1_range(&(_123417_i), jule::Str("{", 1), jule::Str("}", 1), _123342_tokens);;
	if ((_124517_itemTokens == nullptr)) {
		_1ab166b6a_stop(_self_.ptr());
		_1ab167297_pushErr(_self_.ptr(), _123517_e.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1ab1675b6_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _123517_e;;
	} else if ((_123417_i < (*(_123342_tokens)).len())) {
		_1ab167297_pushErr(_self_.ptr(), (*(_123342_tokens))[_123417_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_123517_e.get()._field_Public=_1ab1764e8_isPub(&(_123517_e.get()._field_Ident));
	_123517_e.get()._field_End=(*(_123342_tokens))[(_123417_i - 1LL)];
	_123517_e.get()._field_Items=_1ab16e90e_buildTypeEnumItems(_self_, &(_124517_itemTokens));
	return _123517_e;;
}



inline jule::Ptr<_1aa858549_Expr> _1ab1700c4_buildEnumItemExpr(jule::Ptr<_1ab16683a_parser> _self_, jule::I64* _126042_i, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _126055_tokens) {
	jule::I64 _126117_braceN = 0LL;;
	jule::I64 _126213_exprStart = (*(_126042_i));;
	for (; ((*(_126042_i)) < (*(_126055_tokens)).len()); ((*(_126042_i)))++) {
		{
			jule::Ptr<_1db944d0d_Token> _126417_t = (*(_126055_tokens))[(*(_126042_i))];;
			if ((_126417_t.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _126417_t.get()._field_Kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1bab34a13:;
						{
							(_126117_braceN)++;
							goto _iter_next_1bab3357d;
						}
					}
					else {
						_case_begin_1bab34617:;
						{
							(_126117_braceN)--;
						}
					}
					_match_end_1bab34408:;
				};
			};
			if ((_126117_braceN > 0LL)) {
				goto _iter_next_1bab3357d;
			};
			if (((_126417_t.get()._field_Id == static_cast<jule::U64>(8LLU)) || (((*(_126042_i)) + 1LL) >= (*(_126055_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1db944d0d_Token>> _128025_exprTokens = nullptr;;
				if ((_126417_t.get()._field_Id == static_cast<jule::U64>(8LLU))) {
					_128025_exprTokens=(*(_126055_tokens)).slice(_126213_exprStart, (*(_126042_i)));
				} else {
					_128025_exprTokens=(*(_126055_tokens)).slice(_126213_exprStart);
				};
				return _1ab1678c4_buildExpr(_self_, &(_128025_exprTokens));;
			};
		}
	_iter_next_1bab3357d:;
	}
	_iter_end_1bab3357d:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1aa86bb56_EnumItemDecl>> _1ab1703d2_buildEnumItems(jule::Ptr<_1ab16683a_parser> _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _129239_tokens) {
	jule::Slice<jule::Ptr<_1aa86bb56_EnumItemDecl>> _129317_items = jule::Slice<jule::Ptr<_1aa86bb56_EnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I64 _129417_i = 0LL;;
	for (; (_129417_i < (*(_129239_tokens)).len()); (_129417_i)++) {
		{
			jule::Ptr<_1db944d0d_Token> _129621_t = (*(_129239_tokens))[_129417_i];;
			jule::Ptr<_1aa86bb56_EnumItemDecl> _129721_item = jule::new_ptr<_1aa86bb56_EnumItemDecl>();;
			_129721_item.get()._field_Token=_129621_t;
			if ((_129721_item.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
				_1ab167297_pushErr(_self_.ptr(), _129721_item.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				_1ab1675b6_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			};
			_129721_item.get()._field_Ident=_129721_item.get()._field_Token.get()._field_Kind;
			if ((((_129417_i + 1LL) >= (*(_129239_tokens)).len()) || ((*(_129239_tokens))[(_129417_i + 1LL)].get()._field_Id == static_cast<jule::U64>(8LLU)))) {
				if (((_129417_i + 1LL) < (*(_129239_tokens)).len())) {
					(_129417_i)++;
				};
				_129317_items = jule::alloc_for_append(_129317_items,1);_129317_items.__push(_129721_item);;
				goto _iter_next_1bab37e67;
			};
			(_129417_i)++;
			_129621_t=(*(_129239_tokens))[_129417_i];
			(_129417_i)++;
			if ((_129621_t.get()._field_Id != static_cast<jule::U64>(11LLU))) {
				_1ab167297_pushErr(_self_.ptr(), _129621_t, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				_1ab1675b6_pushSuggestion(_self_.ptr(), jule::Str("expected colon \":\" for assignment", 33), jule::Slice<jule::Any>());
				goto _iter_next_1bab37e67;
			};
			if (((_129417_i >= (*(_129239_tokens)).len()) || ((*(_129239_tokens))[_129417_i].get()._field_Id == static_cast<jule::U64>(8LLU)))) {
				_1ab167297_pushErr(_self_.ptr(), _129621_t, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
				goto _iter_next_1bab37e67;
			};
			_129721_item.get()._field_Expr=_1ab1700c4_buildEnumItemExpr(_self_, &(_129417_i), _129239_tokens);
			_129317_items = jule::alloc_for_append(_129317_items,1);_129317_items.__push(_129721_item);;
		}
	_iter_next_1bab37e67:;
	}
	_iter_end_1bab37e67:;;
	return _129317_items;;
}



inline jule::Ptr<_1aa86c67e_EnumDecl> _1ab1706e0_buildEnumDecl(jule::Ptr<_1ab16683a_parser> _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _132938_tokens) {
	if (((*(_132938_tokens)).len() < 3LL)) {
		_1ab167297_pushErr(_self_.ptr(), (*(_132938_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aa86c67e_EnumDecl> _133417_e = jule::new_ptr<_1aa86c67e_EnumDecl>(_1aa86c67e_EnumDecl{._field_Token=(*(_132938_tokens))[1LL], });;
	if ((_133417_e.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1ab167297_pushErr(_self_.ptr(), _133417_e.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ab1675b6_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	_133417_e.get()._field_Ident=_133417_e.get()._field_Token.get()._field_Kind;
	jule::I64 _134217_i = 2LL;;
	if (((*(_132938_tokens))[_134217_i].get()._field_Id == static_cast<jule::U64>(11LLU))) {
		(_134217_i)++;
		if ((_134217_i >= (*(_132938_tokens)).len())) {
			_1ab167297_pushErr(_self_.ptr(), (*(_132938_tokens))[(_134217_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return _133417_e;;
		};
		({
			__jule_tuple_x_1aa854028_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab168bb1_buildType(_self_, _132938_tokens, (&(_134217_i)), true);
			_133417_e.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
		});
		if ((_134217_i >= (*(_132938_tokens)).len())) {
			_1ab166b6a_stop(_self_.ptr());
			_1ab167297_pushErr(_self_.ptr(), _133417_e.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
			_1ab1675b6_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
			return _133417_e;;
		};
	} else {
		_133417_e.get()._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_1db944d0d_Token>> _135917_itemTokens = _1ab1649d1_range(&(_134217_i), jule::Str("{", 1), jule::Str("}", 1), _132938_tokens);;
	if ((_135917_itemTokens == nullptr)) {
		_1ab166b6a_stop(_self_.ptr());
		_1ab167297_pushErr(_self_.ptr(), _133417_e.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1ab1675b6_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _133417_e;;
	} else if ((_134217_i < (*(_132938_tokens)).len())) {
		_1ab167297_pushErr(_self_.ptr(), (*(_132938_tokens))[_134217_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_133417_e.get()._field_Public=_1ab1764e8_isPub(&(_133417_e.get()._field_Ident));
	_133417_e.get()._field_End=(*(_132938_tokens))[(_134217_i - 1LL)];
	_133417_e.get()._field_Items=_1ab1703d2_buildEnumItems(_self_, &(_135917_itemTokens));
	return _133417_e;;
}



inline jule::Any _1ab1709ed_buildNodeEnumDecl(jule::Ptr<_1ab16683a_parser> _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _137442_tokens) {
	if ((((*(_137442_tokens)).len() > 3LL) && ((*(_137442_tokens))[2LL].get()._field_Id == static_cast<jule::U64>(11LLU)))) {
		if (((*(_137442_tokens))[3LL].get()._field_Id == static_cast<jule::U64>(10LLU))) {
			return jule::Any(_1ab16ec1c_buildTypeEnumDecl(_self_, _137442_tokens), &__jule_any_type18);;
		};
	};
	return jule::Any(_1ab1706e0_buildEnumDecl(_self_, _137442_tokens), &__jule_any_type17);;
}



inline jule::Ptr<_1aa86d98d_FieldDecl> _1ab170d0b_buildField(jule::Ptr<_1ab16683a_parser> _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>> _138334_tokens) {
	jule::Ptr<_1aa86d98d_FieldDecl> _138417_f = jule::new_ptr<_1aa86d98d_FieldDecl>();;
	_138417_f.get()._field_Mutable=(_138334_tokens[0LL].get()._field_Id == static_cast<jule::U64>(35LLU));
	if (_138417_f.get()._field_Mutable) {
		if ((_138334_tokens.len() == 1LL)) {
			_1ab167297_pushErr(_self_.ptr(), _138334_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_138334_tokens=_138334_tokens.slice(1LL);
	};
	_138417_f.get()._field_Token=_138334_tokens[0LL];
	if ((_138417_f.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1ab167297_pushErr(_self_.ptr(), _138417_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ab1675b6_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_138417_f.get()._field_Ident=_138417_f.get()._field_Token.get()._field_Kind;
	if ((_138334_tokens.len() == 1LL)) {
		_1ab167297_pushErr(_self_.ptr(), _138334_tokens[0LL], jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_138334_tokens[1LL].get()._field_Id != static_cast<jule::U64>(11LLU))) {
		_1ab167297_pushErr(_self_.ptr(), _138334_tokens[1LL], jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_138334_tokens=_138334_tokens.slice(2LL);
	jule::I64 _141217_i = 0LL;;
	({
		__jule_tuple_x_1aa854028_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab168bb1_buildType(_self_, &(_138334_tokens), (&(_141217_i)), true);
		_138417_f.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_141217_i < _138334_tokens.len())) {
		jule::Ptr<_1db944d0d_Token> _141517_token = _138334_tokens[_141217_i];;
		if (((_141517_token.get()._field_Id != static_cast<jule::U64>(7LLU)) || (!_141517_token.get()._field_Kind.equal("=", 1)))) {
			_1ab167297_pushErr(_self_.ptr(), _138334_tokens[_141217_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_141217_i)++;
		if ((_141217_i >= _138334_tokens.len())) {
			_1ab167297_pushErr(_self_.ptr(), _141517_token, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_138334_tokens=_138334_tokens.slice(_141217_i);
		_138417_f.get()._field_Default=_1ab1678c4_buildExpr(_self_, &(_138334_tokens));
	};
	_138417_f.get()._field_Public=_1ab1764e8_isPub(&(_138417_f.get()._field_Ident));
	return _138417_f;;
}



inline jule::Slice<jule::Ptr<_1aa86d98d_FieldDecl>> _1ab171119_buildStructDeclFields(jule::Ptr<_1ab16683a_parser> _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>> _143245_tokens) {
	jule::Slice<jule::Ptr<_1aa86d98d_FieldDecl>> _143317_fields = nullptr;;
	jule::Slice<jule::Ptr<_1ab1497eb_stmt>> _143417_stmts = _1ab149b92_splitStmts(&(_143245_tokens));;
	{
		auto expr = &(_143417_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bab54439:;
		if (it != expr_end) {
			jule::Ptr<_1ab1497eb_stmt> _143521_stmt = *it;
			{
				_143245_tokens=_143521_stmt.get()._field_tokens;
				jule::Ptr<_1aa86d98d_FieldDecl> _143721_f = _1ab170d0b_buildField(_self_, _143245_tokens);;
				_143317_fields = jule::alloc_for_append(_143317_fields,1);_143317_fields.__push(_143721_f);;
			}
			_iter_next_1bab54439:;
			++it;
			goto _iter_begin_1bab54439;
		}
		_iter_end_1bab54439:;
	};
	return _143317_fields;;
}



inline jule::Ptr<_1aa86e241_StructDecl> _1ab171427_buildStructDecl(jule::Ptr<_1ab16683a_parser> _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _144340_tokens) {
	if (((*(_144340_tokens)).len() < 3LL)) {
		_1ab167297_pushErr(_self_.ptr(), (*(_144340_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _144917_i = 1LL;;
	jule::Ptr<_1aa86e241_StructDecl> _145017_s = jule::new_ptr<_1aa86e241_StructDecl>(_1aa86e241_StructDecl{._field_Token=(*(_144340_tokens))[_144917_i], });;
	if ((_145017_s.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1ab167297_pushErr(_self_.ptr(), _145017_s.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ab1675b6_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_144917_i)++;
	if ((_144917_i >= (*(_144340_tokens)).len())) {
		_1ab167297_pushErr(_self_.ptr(), (*(_144340_tokens))[_144917_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return _145017_s;;
	};
	_145017_s.get()._field_Ident=_145017_s.get()._field_Token.get()._field_Kind;
	jule::Ptr<_1db944d0d_Token> _146413_errorToken = (*(_144340_tokens))[_144917_i];;
	jule::Slice<jule::Ptr<_1db944d0d_Token>> _146517_genericsTokens = _1ab1649d1_range(&(_144917_i), jule::Str("[", 1), jule::Str("]", 1), _144340_tokens);;
	if ((_146517_genericsTokens != nullptr)) {
		_145017_s.get()._field_Generics=_1ab16a498_buildGenerics(_self_, &(_146517_genericsTokens), &(_146413_errorToken));
	};
	if ((_144917_i >= (*(_144340_tokens)).len())) {
		_1ab167297_pushErr(_self_.ptr(), (*(_144340_tokens))[(_144917_i - 1LL)], jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1ab1675b6_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _145017_s;;
	};
	jule::Slice<jule::Ptr<_1db944d0d_Token>> _147517_bodyTokens = _1ab1649d1_range(&(_144917_i), jule::Str("{", 1), jule::Str("}", 1), _144340_tokens);;
	if ((_147517_bodyTokens == nullptr)) {
		_1ab166b6a_stop(_self_.ptr());
		_1ab167297_pushErr(_self_.ptr(), _145017_s.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1ab1675b6_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _145017_s;;
	};
	if ((_144917_i < (*(_144340_tokens)).len())) {
		_1ab167297_pushErr(_self_.ptr(), (*(_144340_tokens))[_144917_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_145017_s.get()._field_Public=_1ab1764e8_isPub(&(_145017_s.get()._field_Ident));
	_145017_s.get()._field_Fields=_1ab171119_buildStructDeclFields(_self_, _147517_bodyTokens);
	_145017_s.get()._field_End=(*(_144340_tokens))[(_144917_i - 1LL)];
	return _145017_s;;
}



inline void _1ab17169c_checkMethodReceiver(_1ab16683a_parser* _self_, jule::Ptr<_1aa8659a7_FnDecl>* _149139_f) {
	if ((*(_149139_f)).get()._field_Statically) {
		if ((((*(_149139_f)).get()._field_Params.len() > 0LL) && _1aa8649ea_IsSelf((*(_149139_f)).get()._field_Params[0LL].ptr()))) {
			_1ab167297_pushErr(_self_, (*(_149139_f)).get()._field_Token, jule::Str("static functions cannot have receiver parameter", 47), jule::Slice<jule::Any>());
		};
		return;;
	};
	if (((*(_149139_f)).get()._field_Params.len() == 0LL)) {
		_1ab167297_pushErr(_self_, (*(_149139_f)).get()._field_Token, jule::Str("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1aa864687_ParamDecl> _150313_param = (*(_149139_f)).get()._field_Params[0LL];;
	if ((!(_1aa8649ea_IsSelf(_150313_param.ptr())))) {
		_1ab167297_pushErr(_self_, (*(_149139_f)).get()._field_Token, jule::Str("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1ab1719bb_buildTraitBody(jule::Ptr<_1ab16683a_parser> _self_, jule::Ptr<_1aa86e917_TraitDecl>* _151039_t, jule::Slice<jule::Ptr<_1db944d0d_Token>> _151058_tokens) {
	jule::Slice<jule::Ptr<_1ab1497eb_stmt>> _151117_stmts = _1ab149b92_splitStmts(&(_151058_tokens));;
	{
		auto expr = &(_151117_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bab62dc6:;
		if (it != expr_end) {
			jule::Ptr<_1ab1497eb_stmt> _151221_stmt = *it;
			{
				_151058_tokens=_151221_stmt.get()._field_tokens;
				if ((_151058_tokens.len() == 0LL)) {
					goto _iter_next_1bab62dc6;
				};
				{
					auto &_match_expr{ _151058_tokens[0LL].get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(32LLU)) {
						_case_begin_1bab658ac:;
						{
							jule::Ptr<_1aa8659a7_FnDecl> _151925_f = _1ab16cd08_buildFn(_self_, &(_151058_tokens), true, true);;
							if ((_151925_f == nullptr)) {
								goto _match_end_1bab64119;
							};
							if (_1aa865d09_IsAnon(_151925_f.ptr())) {
								_1ab167297_pushErr(_self_.ptr(), _151925_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							_1ab17169c_checkMethodReceiver(_self_.ptr(), &(_151925_f));
							if ((_151925_f.get()._field_Generics.len() > 0LL)) {
								_1ab167297_pushErr(_self_.ptr(), _151925_f.get()._field_Token, jule::Str("trait methods cannot have generics", 34), jule::Slice<jule::Any>());
							};
							(*(_151039_t)).get()._field_Methods = jule::alloc_for_append((*(_151039_t)).get()._field_Methods,1);(*(_151039_t)).get()._field_Methods.__push(_151925_f);;
						}
					}
					else {
						_case_begin_1bab63ba7:;
						{
							jule::I64 _153225_i = 0LL;;
							jule::Ptr<_1aa854028_TypeDecl> _153326_ti;;
							jule::Bool _153330_ok = false;;
							({
								__jule_tuple_x_1aa854028_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab168bb1_buildType(_self_, &(_151058_tokens), (&(_153225_i)), true);
								_153326_ti = __jule_assign_result.__jule_result_arg0;
								_153330_ok = __jule_assign_result.__jule_result_arg1;
							});
							if ((!(_153330_ok))) {
								goto _match_end_1bab64119;
							};
							if ((_153225_i < _151058_tokens.len())) {
								_1ab167297_pushErr(_self_.ptr(), _151058_tokens[_153225_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							(*(_151039_t)).get()._field_Inherits = jule::alloc_for_append((*(_151039_t)).get()._field_Inherits,1);(*(_151039_t)).get()._field_Inherits.__push(_153326_ti);;
						}
					}
					_match_end_1bab64119:;
				};
			}
			_iter_next_1bab62dc6:;
			++it;
			goto _iter_begin_1bab62dc6;
		}
		_iter_end_1bab62dc6:;
	};
}



inline jule::Ptr<_1aa86e917_TraitDecl> _1ab171cc9_buildTraitDecl(jule::Ptr<_1ab16683a_parser> _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _154539_tokens) {
	if (((*(_154539_tokens)).len() < 3LL)) {
		_1ab167297_pushErr(_self_.ptr(), (*(_154539_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aa86e917_TraitDecl> _155017_t = jule::new_ptr<_1aa86e917_TraitDecl>(_1aa86e917_TraitDecl{._field_Token=(*(_154539_tokens))[1LL], });;
	if ((_155017_t.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1ab167297_pushErr(_self_.ptr(), _155017_t.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ab1675b6_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	_155017_t.get()._field_Ident=_155017_t.get()._field_Token.get()._field_Kind;
	jule::I64 _155817_i = 2LL;;
	jule::Slice<jule::Ptr<_1db944d0d_Token>> _155917_bodyTokens = _1ab1649d1_range(&(_155817_i), jule::Str("{", 1), jule::Str("}", 1), _154539_tokens);;
	if ((_155917_bodyTokens == nullptr)) {
		_1ab166b6a_stop(_self_.ptr());
		_1ab167297_pushErr(_self_.ptr(), _155017_t.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1ab1675b6_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_155817_i < (*(_154539_tokens)).len())) {
		_1ab167297_pushErr(_self_.ptr(), (*(_154539_tokens))[_155817_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_155017_t.get()._field_Public=_1ab1764e8_isPub(&(_155017_t.get()._field_Ident));
	_1ab1719bb_buildTraitBody(_self_, &(_155017_t), _155917_bodyTokens);
	_155017_t.get()._field_End=(*(_154539_tokens))[(_155817_i - 1LL)];
	return _155017_t;;
}



inline jule::Ptr<_1aa8659a7_FnDecl> _1ab1720d7_buildCppLinkFn(jule::Ptr<_1ab16683a_parser> _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>> _157538_tokens) {
	_157538_tokens=_157538_tokens.slice(1LL);
	jule::Ptr<_1aa8659a7_FnDecl> _157717_f = _1ab16cd08_buildFn(_self_, &(_157538_tokens), false, true);;
	if ((_157717_f != nullptr)) {
		if (_1aa865d09_IsAnon(_157717_f.ptr())) {
			_1ab167297_pushErr(_self_.ptr(), _157717_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		};
		_157717_f.get()._field_Public=false;
		_157717_f.get()._field_CppLinked=true;
	};
	return _157717_f;;
}



inline jule::Ptr<_1aa866986_VarDecl> _1ab1723e5_buildCppLinkVar(jule::Ptr<_1ab16683a_parser> _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>> _158839_tokens) {
	_158839_tokens=_158839_tokens.slice(1LL);
	jule::Ptr<_1aa866986_VarDecl> _159017_v = _1ab169cd3_buildVar(_self_, _158839_tokens);;
	if ((_159017_v != nullptr)) {
		_159017_v.get()._field_Public=false;
		_159017_v.get()._field_CppLinked=true;
		if ((_159017_v.get()._field_Expr != nullptr)) {
			_1ab167297_pushErr(_self_.ptr(), _159017_v.get()._field_Token, jule::Str("cpp linked variables cannot have expression", 43), jule::Slice<jule::Any>());
		};
	};
	return _159017_v;;
}



inline jule::Ptr<_1aa86e241_StructDecl> _1ab172703_buildCppLinkStruct(jule::Ptr<_1ab16683a_parser> _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>> _160142_tokens) {
	_160142_tokens=_160142_tokens.slice(1LL);
	jule::Ptr<_1aa86e241_StructDecl> _160317_s = _1ab171427_buildStructDecl(_self_, &(_160142_tokens));;
	if ((_160317_s != nullptr)) {
		_160317_s.get()._field_Public=false;
		{
			auto expr = &(_160317_s.get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bab74b30:;
			if (it != expr_end) {
				jule::Ptr<_1aa86d98d_FieldDecl> _160625_f = *it;
				{
					_160625_f.get()._field_Public=true;
				}
				_iter_next_1bab74b30:;
				++it;
				goto _iter_begin_1bab74b30;
			}
			_iter_end_1bab74b30:;
		};
		_160317_s.get()._field_CppLinked=true;
	};
	return _160317_s;;
}



inline jule::Ptr<_1aa86a2e7_TypeAliasDecl> _1ab172a11_buildCppLinkTypeAlias(jule::Ptr<_1ab16683a_parser> _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>> _161545_tokens) {
	_161545_tokens=_161545_tokens.slice(1LL);
	jule::Ptr<_1aa86a2e7_TypeAliasDecl> _161717_t = _1ab168ebe_buildTypeAliasDecl(_self_, &(_161545_tokens));;
	if ((_161717_t != nullptr)) {
		_161717_t.get()._field_Public=false;
		_161717_t.get()._field_CppLinked=true;
	};
	return _161717_t;;
}



inline jule::Ptr<_1aa86b6d3_UseDecl> _1ab172d1e_buildCppLinkUse(jule::Ptr<_1ab16683a_parser> _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>> _162539_tokens) {
	if ((_162539_tokens.len() == 1LL)) {
		_1ab167297_pushErr(_self_.ptr(), _162539_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_162539_tokens=_162539_tokens.slice(1LL);
	;
	return _1ab16e249_buildUseDecl(_self_.ptr(), _162539_tokens, true);;
}



inline jule::Any _1ab17312c_buildCppLink(jule::Ptr<_1ab16683a_parser> _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _163637_tokens) {
	jule::Ptr<_1db944d0d_Token> _163717_token = (*(_163637_tokens))[0LL];;
	if (((*(_163637_tokens)).len() == 1LL)) {
		_1ab167297_pushErr(_self_.ptr(), _163717_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_163717_token=(*(_163637_tokens))[1LL];
	{
		auto &_match_expr{ _163717_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1bab79717:;
			{
				return jule::Any(_1ab1720d7_buildCppLinkFn(_self_, (*(_163637_tokens))), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1bab7a3b6:;
			{
				return jule::Any(_1ab1723e5_buildCppLinkVar(_self_, (*(_163637_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(24LLU)) {
			_case_begin_1bab7a42c:;
			{
				return jule::Any(_1ab172703_buildCppLinkStruct(_self_, (*(_163637_tokens))), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1bab7a493:;
			{
				return jule::Any(_1ab172a11_buildCppLinkTypeAlias(_self_, (*(_163637_tokens))), &__jule_any_type12);;
			}
		}
		else {
			_case_begin_1bab7a262:;
			{
				_1ab167297_pushErr(_self_.ptr(), _163717_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1bab7a350:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aa8659a7_FnDecl> _1ab17343a_getMethod(jule::Ptr<_1ab16683a_parser> _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _166034_tokens) {
	jule::I64 _166117_i = 0LL;;
	jule::Ptr<_1db944d0d_Token> _166217_token = (*(_166034_tokens))[_166117_i];;
	if ((_166217_token.get()._field_Id == static_cast<jule::U64>(37LLU))) {
		if (((_166117_i + 1LL) >= (*(_166034_tokens)).len())) {
			_1ab167297_pushErr(_self_.ptr(), _166217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_166117_i)++;
		_166217_token=(*(_166034_tokens))[_166117_i];
	};
	if ((_166217_token.get()._field_Id == static_cast<jule::U64>(34LLU))) {
		if (((_166117_i + 1LL) >= (*(_166034_tokens)).len())) {
			_1ab167297_pushErr(_self_.ptr(), _166217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_166117_i)++;
		_166217_token=(*(_166034_tokens))[_166117_i];
	};
	if ((_166217_token.get()._field_Id != static_cast<jule::U64>(32LLU))) {
		_1ab167297_pushErr(_self_.ptr(), _166217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aa8659a7_FnDecl> _168617_f = _1ab16cd08_buildFn(_self_, _166034_tokens, true, false);;
	if (((_168617_f != nullptr) && _1aa865d09_IsAnon(_168617_f.ptr()))) {
		_1ab167297_pushErr(_self_.ptr(), _168617_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	return _168617_f;;
}



inline void _1ab173759_parseImplBody(jule::Ptr<_1ab16683a_parser> _self_, jule::Ptr<_1aa870022_Impl>* _169338_ipl, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _169355_tokens) {
	jule::Slice<jule::Ptr<_1ab1497eb_stmt>> _169417_stmts = _1ab149b92_splitStmts(_169355_tokens);;
	{
		auto expr = &(_169417_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bab8327b:;
		if (it != expr_end) {
			jule::Ptr<_1ab1497eb_stmt> _169521_stmt = *it;
			{
				(*(_169355_tokens))=_169521_stmt.get()._field_tokens;
				jule::Ptr<_1db944d0d_Token> _169721_token = (*(_169355_tokens))[0LL];;
				{
					auto &_match_expr{ _169721_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(38LLU)) {
						_case_begin_1bab838ca:;
						{
							_1ab167e57_pushDirective(_self_.ptr(), _1ab167bd2_buildDirective(_self_.ptr(), (*(_169355_tokens))));
							goto _iter_next_1bab8327b;
						}
					}
					_match_end_1bab843ae:;
				};
				{
					auto &_match_expr{ _169721_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(9LLU)) {
						_case_begin_1bab84513:;
						{
							jule::Ptr<_1aa866986_VarDecl> _170625_v = _1ab169cd3_buildVar(_self_, (*(_169355_tokens)));;
							if ((_170625_v != nullptr)) {
								(*(_169338_ipl)).get()._field_Statics = jule::alloc_for_append((*(_169338_ipl)).get()._field_Statics,1);(*(_169338_ipl)).get()._field_Statics.__push(_170625_v);;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(37LLU) || _match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
						_case_begin_1bab848dc:;
						{
							jule::Ptr<_1aa8659a7_FnDecl> _171325_f = _1ab17343a_getMethod(_self_, _169355_tokens);;
							if ((_171325_f != nullptr)) {
								_1ab17169c_checkMethodReceiver(_self_.ptr(), &(_171325_f));
								_1ab1740ea_applyFnMeta(_self_.ptr(), &(_171325_f));
								(*(_169338_ipl)).get()._field_Methods = jule::alloc_for_append((*(_169338_ipl)).get()._field_Methods,1);(*(_169338_ipl)).get()._field_Methods.__push(_171325_f);;
							};
						}
					}
					else {
						_case_begin_1bab84876:;
						{
							_1ab167297_pushErr(_self_.ptr(), _169721_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							goto _iter_next_1bab8327b;
						}
					}
					_match_end_1bab850a2:;
				};
			}
			_iter_next_1bab8327b:;
			++it;
			goto _iter_begin_1bab8327b;
		}
		_iter_end_1bab8327b:;
	};
}



inline jule::Ptr<_1aa870022_Impl> _1ab173a67_buildImpl(jule::Ptr<_1ab16683a_parser> _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>> _172633_tokens) {
	jule::Ptr<_1db944d0d_Token> _172717_token = _172633_tokens[0LL];;
	if ((_172633_tokens.len() < 2LL)) {
		_1ab167297_pushErr(_self_.ptr(), _172717_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _173317_i = 1LL;;
	jule::Ptr<_1aa854028_TypeDecl> _173518_base;;
	jule::Bool _173528_ok = false;;
	({
		__jule_tuple_x_1aa854028_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab168bb1_buildType(_self_, &(_172633_tokens), (&(_173317_i)), true);
		_173518_base = __jule_assign_result.__jule_result_arg0;
		_173528_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_173528_ok))) {
		return nullptr;;
	};
	if ((_173317_i >= _172633_tokens.len())) {
		_1ab167297_pushErr(_self_.ptr(), _172717_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aa870022_Impl> _174417_ipl = jule::new_ptr<_1aa870022_Impl>(_1aa870022_Impl{._field_Base=_173518_base, });;
	_172717_token=_172633_tokens[_173317_i];
	if ((_172717_token.get()._field_Id != static_cast<jule::U64>(12LLU))) {
		if (((_172717_token.get()._field_Id == static_cast<jule::U64>(3LLU)) && _172717_token.get()._field_Kind.equal("{", 1))) {
			({
				jule::Ptr<_1aa854028_TypeDecl> ___jule_assign_arg = _174417_ipl.get()._field_Dest;
				jule::Ptr<_1aa854028_TypeDecl> _1___jule_assign_arg = _174417_ipl.get()._field_Base;
				_174417_ipl.get()._field_Base = ___jule_assign_arg;
				_174417_ipl.get()._field_Dest = _1___jule_assign_arg;
			});
			goto _julec_label_body;
		};
		_1ab166b6a_stop(_self_.ptr());
		_1ab167297_pushErr(_self_.ptr(), _172717_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1ab1675b6_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_173317_i)++;
	if ((_173317_i >= _172633_tokens.len())) {
		_1ab166b6a_stop(_self_.ptr());
		_1ab167297_pushErr(_self_.ptr(), _172717_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1ab1675b6_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	({
		__jule_tuple_x_1aa854028_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab168bb1_buildType(_self_, &(_172633_tokens), (&(_173317_i)), true);
		_174417_ipl.get()._field_Dest = __jule_assign_result.__jule_result_arg0;
		_173528_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_173528_ok))) {
		return nullptr;;
	};
	if ((_173317_i >= _172633_tokens.len())) {
		_1ab166b6a_stop(_self_.ptr());
		_1ab167297_pushErr(_self_.ptr(), _172717_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1ab1675b6_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_body:;
	jule::Slice<jule::Ptr<_1db944d0d_Token>> _178217_bodyTokens = _1ab1649d1_range(&(_173317_i), jule::Str("{", 1), jule::Str("}", 1), &(_172633_tokens));;
	if ((_178217_bodyTokens == nullptr)) {
		_1ab166b6a_stop(_self_.ptr());
		_1ab167297_pushErr(_self_.ptr(), _172717_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1ab1675b6_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_173317_i < _172633_tokens.len())) {
		_1ab167297_pushErr(_self_.ptr(), _172633_tokens[_173317_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_174417_ipl.get()._field_End=_172633_tokens[(_173317_i - 1LL)];
	_1ab173759_parseImplBody(_self_, &(_174417_ipl), &(_178217_bodyTokens));
	return _174417_ipl;;
}



inline jule::Any _1ab173d75_buildNodeData(jule::Ptr<_1ab16683a_parser> _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _179738_tokens) {
	jule::Ptr<_1db944d0d_Token> _179817_token = (*(_179738_tokens))[0LL];;
	{
		auto &_match_expr{ _179817_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1bab948ec:;
			{
				jule::Ptr<_1aa8659a7_FnDecl> _180221_f = _1ab16cd08_buildFn(_self_, _179738_tokens, false, false);;
				if ((_180221_f != nullptr)) {
					_180221_f.get()._field_Global=true;
					if (_1aa865d09_IsAnon(_180221_f.ptr())) {
						_1ab167297_pushErr(_self_.ptr(), _180221_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					};
				};
				return jule::Any(_180221_f, &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(35LLU) || _match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1bab95832:;
			{
				return jule::Any(_1ab169cd3_buildVar(_self_, (*(_179738_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1bab95898:;
			{
				return jule::Any(_1ab168ebe_buildTypeAliasDecl(_self_, _179738_tokens), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1bab9590e:;
			{
				return _1ab1709ed_buildNodeEnumDecl(_self_, _179738_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(24LLU)) {
			_case_begin_1bab9506d:;
			{
				return jule::Any(_1ab171427_buildStructDecl(_self_, _179738_tokens), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(28LLU)) {
			_case_begin_1bab950d4:;
			{
				return jule::Any(_1ab171cc9_buildTraitDecl(_self_, _179738_tokens), &__jule_any_type15);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1bab9514a:;
			{
				return jule::Any(_1ab173a67_buildImpl(_self_, (*(_179738_tokens))), &__jule_any_type11);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1bab951b1:;
			{
				return _1ab17312c_buildCppLink(_self_, _179738_tokens);;
			}
		}
		else {
			_case_begin_1bab94ed5:;
			{
				_1ab167297_pushErr(_self_.ptr(), _179817_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bab94d3c:;
	};
}



inline void _1ab1740ea_applyFnMeta(_1ab16683a_parser* _self_, jule::Ptr<_1aa8659a7_FnDecl>* _183335_f) {
	(*(_183335_f)).get()._field_Directives=(*(_self_))._field_directives;
	(*(_self_))._field_directives=nullptr;
}



inline void _1ab174370_applyMeta(_1ab16683a_parser* _self_, _1aa820698_Node* _183833_node) {
	{
		auto &_match_expr{ (*(_183833_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1bab9b382:;
			{
				jule::Ptr<_1aa866986_VarDecl> _184121_v = (*(_183833_node))._field_Data.cast_ptr<_1aa866986_VarDecl>(&__jule_any_type16);;
				if ((_184121_v == nullptr)) {
					return;;
				};
				_184121_v.get()._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1bab9b3e8:;
			{
				jule::Ptr<_1aa8659a7_FnDecl> _184821_f = (*(_183833_node))._field_Data.cast_ptr<_1aa8659a7_FnDecl>(&__jule_any_type14);;
				if ((_184821_f == nullptr)) {
					return;;
				};
				_1ab1740ea_applyFnMeta(_self_, &(_184821_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1bab9b45e:;
			{
				jule::Ptr<_1aa86e241_StructDecl> _185421_sd = (*(_183833_node))._field_Data.cast_ptr<_1aa86e241_StructDecl>(&__jule_any_type13);;
				if ((_185421_sd == nullptr)) {
					return;;
				};
				_185421_sd.get()._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		_match_end_1bab9b173:;
	};
}



inline void _1ab1745e5_pushUseDecl(jule::Ptr<_1ab16683a_parser> _self_, jule::Ptr<_1aa86b6d3_UseDecl>* _186336_decl) {
	_self_.get()._field_ast.get()._field_UseDecls = jule::alloc_for_append(_self_.get()._field_ast.get()._field_UseDecls,1);_self_.get()._field_ast.get()._field_UseDecls.__push((*(_186336_decl)));;
	if ((_self_.get()._field_ast.get()._field_Nodes.len() > 0LL)) {
		_1ab167297_pushErr(_self_.ptr(), (*(_186336_decl)).get()._field_Token, jule::Str("use declarations must declared top of source code", 49), jule::Slice<jule::Any>());
		_1ab1675b6_pushSuggestion(_self_.ptr(), jule::Str("move this use declaration to top of source file", 47), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1ab174903_pushMetaNodes(jule::Ptr<_1ab16683a_parser> _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _187138_tokens) {
	{
		auto &_match_expr{ (*(_187138_tokens))[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1baba1d6b:;
			{
				;
				jule::Ptr<_1aa86b6d3_UseDecl> _187521_decl = _1ab16e249_buildUseDecl(_self_.ptr(), (*(_187138_tokens)), false);;
				_1ab1745e5_pushUseDecl(_self_, &(_187521_decl));
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1baba1de3:;
			{
				if ((((*(_187138_tokens)).len() > 1LL) && ((*(_187138_tokens))[1LL].get()._field_Id == static_cast<jule::U64>(19LLU)))) {
					jule::Ptr<_1aa86b6d3_UseDecl> _188025_decl = _1ab172d1e_buildCppLinkUse(_self_, (*(_187138_tokens)));;
					_1ab1745e5_pushUseDecl(_self_, &(_188025_decl));
					return true;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(38LLU)) {
			_case_begin_1baba1e6a:;
			{
				_1ab167e57_pushDirective(_self_.ptr(), _1ab167bd2_buildDirective(_self_.ptr(), (*(_187138_tokens))));
				return true;;
			}
		}
		_match_end_1baba1c8e:;
	};
	return false;;
}



inline _1aa820698_Node _1ab174c11_parseNode(jule::Ptr<_1ab16683a_parser> _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _189134_st) {
	_1aa820698_Node _189217_node = _1aa820698_Node{._field_Token=(*(_189134_st))[0LL], };;
	if (_1ab174903_pushMetaNodes(_self_, _189134_st)) {
		return _189217_node;;
	};
	jule::Any _190017_data = _1ab173d75_buildNodeData(_self_, _189134_st);;
	if ((_190017_data == nullptr)) {
		return _189217_node;;
	};
	_189217_node._field_Data=_190017_data;
	_1ab174370_applyMeta(_self_.ptr(), &(_189217_node));
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_1ab167297_pushErr(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_Tag, jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
	_self_.get()._field_directives=nullptr;
	return _189217_node;;
}



inline void _1ab174e86_appendNode(jule::Ptr<_1ab16683a_parser> _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _191535_st) {
	if (((*(_191535_st)).len() == 0LL)) {
		return;;
	};
	_1aa820698_Node _191917_node = _1ab174c11_parseNode(_self_, _191535_st);;
	if (((_191917_node._field_Data == nullptr) || _1ab166dce_stopped(_self_.ptr()))) {
		return;;
	};
	_self_.get()._field_ast.get()._field_Nodes = jule::alloc_for_append(_self_.get()._field_ast.get()._field_Nodes,1);_self_.get()._field_ast.get()._field_Nodes.__push(_191917_node);;
}



inline void _1ab1753e8_removeRange(_1ab16683a_parser* _self_, jule::I64 _192630_i, jule::Str _192638_kind, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _192650_tokens, jule::Slice<jule::I64>* _192673_ranges) {
	jule::Str _192713_close = _1ab1657e5_getCloseKindOfBrace(_192638_kind);;
	for (; (_192630_i >= 0LL); (_192630_i)--) {
		{
			jule::Ptr<_1db944d0d_Token> _192917_tok = (*(_192650_tokens))[(*(_192673_ranges))[_192630_i]];;
			if ((_192917_tok.get()._field_Kind != _192713_close)) {
				goto _iter_next_1babab392;
			};
			(*(_192673_ranges))=jule::append((*(_192673_ranges)).slice(0LL, _192630_i),(*(_192673_ranges)).slice((_192630_i + 1LL)));
			goto _iter_end_1babab392;
		}
	_iter_next_1babab392:;
	}
	_iter_end_1babab392:;;
}



inline void _1ab1757b1_pushWrongOrderCloseErr(_1ab16683a_parser* _self_, jule::Ptr<_1db944d0d_Token>* _193842_t, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _193854_tokens, jule::Slice<jule::I64>* _193873_ranges) {
	{
		auto &_match_expr{ (*(_193854_tokens))[(*(_193873_ranges))[((*(_193873_ranges)).len() - 1LL)]].get()._field_Kind };
		
		if (_match_expr == jule::Str("(", 1)) {
			_case_begin_1babad42c:;
			{
				_1ab167297_pushErr(_self_, (*(_193842_t)), jule::Str("was expected parentheses close", 30), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("{", 1)) {
			_case_begin_1babad4a4:;
			{
				_1ab167297_pushErr(_self_, (*(_193842_t)), jule::Str("was expected brace close", 24), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("[", 1)) {
			_case_begin_1babad52b:;
			{
				_1ab167297_pushErr(_self_, (*(_193842_t)), jule::Str("was expected bracket close", 26), jule::Slice<jule::Any>());
			}
		}
		_match_end_1babad30b:;
	};
}



inline void _1ab175c23_pushRangeClose(_1ab16683a_parser* _self_, jule::Ptr<_1db944d0d_Token> _194933_t, jule::Str _194944_left, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _194956_tokens, jule::Slice<jule::I64>* _194979_ranges) {
	jule::I64 _195013_n = (*(_194979_ranges)).len();;
	if ((_195013_n == 0LL)) {
		{
			auto &_match_expr{ _194933_t.get()._field_Kind };
			
			if (_match_expr == jule::Str("]", 1)) {
				_case_begin_1babb1012:;
				{
					_1ab167297_pushErr(_self_, _194933_t, jule::Str("extra closed brackets", 21), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str("}", 1)) {
				_case_begin_1babb1089:;
				{
					_1ab167297_pushErr(_self_, _194933_t, jule::Str("extra closed braces", 19), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str(")", 1)) {
				_case_begin_1babb1111:;
				{
					_1ab167297_pushErr(_self_, _194933_t, jule::Str("extra closed parentheses", 24), jule::Slice<jule::Any>());
				}
			}
			_match_end_1babb0cd1:;
		};
		return;;
	} else if (((*(_194956_tokens))[(*(_194979_ranges))[(_195013_n - 1LL)]].get()._field_Kind != _194944_left)) {
		_1ab1757b1_pushWrongOrderCloseErr(_self_, &(_194933_t), _194956_tokens, _194979_ranges);
	};
	_1ab1753e8_removeRange(_self_, static_cast<jule::I64>((_195013_n - 1LL)), _194933_t.get()._field_Kind, _194956_tokens, _194979_ranges);
}



inline void _1ab175e98_checkRanges(_1ab16683a_parser* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _196731_tokens) {
	jule::Slice<jule::I64> _196817_ranges = nullptr;;
	{
		auto expr = _196731_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1babb4114:;
		if (it != expr_end) {
			jule::I64 _197013_i = it - expr->begin();
			jule::Ptr<_1db944d0d_Token> *_197016_token = it;
			{
				if (((*(_197016_token)).get()._field_Id != static_cast<jule::U64>(3LLU))) {
					goto _iter_next_1babb4114;
				};
				{
					auto &_match_expr{ (*(_197016_token)).get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
						_case_begin_1babb5379:;
						{
							_196817_ranges = jule::alloc_for_append(_196817_ranges,1);_196817_ranges.__push(_197013_i);;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1babb5423:;
						{
							_1ab175c23_pushRangeClose(_self_, (*(_197016_token)), jule::Str("(", 1), _196731_tokens, &(_196817_ranges));
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1babb5489:;
						{
							_1ab175c23_pushRangeClose(_self_, (*(_197016_token)), jule::Str("{", 1), _196731_tokens, &(_196817_ranges));
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1babb5500:;
						{
							_1ab175c23_pushRangeClose(_self_, (*(_197016_token)), jule::Str("[", 1), _196731_tokens, &(_196817_ranges));
						}
					}
					_match_end_1babb4e06:;
				};
			}
			_iter_next_1babb4114:;
			++it;
			_197013_i++;
			goto _iter_begin_1babb4114;
		}
		_iter_end_1babb4114:;
	};
	{
		auto expr = &(_196817_ranges);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1babb3da0:;
		if (it != expr_end) {
			jule::I64 _198816_i = *it;
			{
				jule::Ptr<_1db944d0d_Token> _198917_token = (*(_196731_tokens))[_198816_i];;
				{
					auto &_match_expr{ _198917_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1babb7a85:;
						{
							_1ab167297_pushErr(_self_, _198917_token, jule::Str("parentheses waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("{", 1)) {
						_case_begin_1babb7aeb:;
						{
							_1ab167297_pushErr(_self_, _198917_token, jule::Str("brace waiting to close", 22), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1babb7b62:;
						{
							_1ab167297_pushErr(_self_, _198917_token, jule::Str("bracket are waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					_match_end_1babb7854:;
				};
			}
			_iter_next_1babb3da0:;
			++it;
			goto _iter_begin_1babb3da0;
		}
		_iter_end_1babb3da0:;
	};
}



inline void _1ab17621d_parse(jule::Ptr<_1ab16683a_parser> _self_, jule::Ptr<_1db94a198_File>* _200130_f) {
	_self_.get()._field_ast=jule::new_ptr<_1aa81e80c_Ast>(_1aa81e80c_Ast{._field_File=(*(_200130_f)), });
	_self_.get()._field_ep=jule::new_ptr<_1ab15660a_exprBuilder>(_1ab15660a_exprBuilder{._field_p=_self_});
	_1ab175e98_checkRanges(_self_.ptr(), &((*(_200130_f)).get()._field_Tokens));
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1ab1497eb_stmt>> _201417_stmts = _1ab149b92_splitStmts(&((*(_200130_f)).get()._field_Tokens));;
	jule::I64 _201717_i = 0LL;;
	for (; (_201717_i < _201417_stmts.len()); (_201717_i)++) {
		{
			jule::Ptr<_1ab1497eb_stmt> _201921_stmt = _201417_stmts[_201717_i];;
			if ((_201921_stmt.get()._field_tokens.len() < 2LL)) {
				return;;
			};
			if ((_201921_stmt.get()._field_tokens[0LL].get()._field_Id != static_cast<jule::U64>(38LLU))) {
				goto _iter_end_1babbae40;
			};
			if ((!(_1d9d9579e_IsTopDirective(_201921_stmt.get()._field_tokens[1LL].get()._field_Kind)))) {
				goto _iter_end_1babbae40;
			};
			_self_.get()._field_ast.get()._field_TopDirectives = jule::alloc_for_append(_self_.get()._field_ast.get()._field_TopDirectives,1);_self_.get()._field_ast.get()._field_TopDirectives.__push(_1ab167bd2_buildDirective(_self_.ptr(), _201921_stmt.get()._field_tokens));;
		}
	_iter_next_1babbae40:;
	}
	_iter_end_1babbae40:;;
	_self_.get()._field_errors=nullptr;
	for (; (_201717_i < _201417_stmts.len()); (_201717_i)++) {
		{
			jule::Ptr<_1ab1497eb_stmt> _203621_stmt = _201417_stmts[_201717_i];;
			_1ab174e86_appendNode(_self_, &(_203621_stmt.get()._field_tokens));
			if (_1ab166dce_stopped(_self_.ptr())) {
				goto _iter_end_1babbb32a;
			};
		}
	_iter_next_1babbb32a:;
	}
	_iter_end_1babbb32a:;;
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_1ab167297_pushErr(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_Tag, jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1ab16683a_parser _Src) {
	_Stream << "parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ep:" << _Src._field_ep;
	_Stream << "}";
	return _Stream;
}



inline void _1ab177b37_pushErr(_1ab177560_typeBuilder* _self_, jule::Ptr<_1db944d0d_Token> _4126_token, jule::Str _4141_fmt) {
	if ((*(_self_))._field_err) {
		_1ab167297_pushErr((*(_self_))._field_p.ptr(), _4126_token, _4141_fmt, jule::Slice<jule::Any>());
	};
}



inline void _1ab177e56_pushSuggestion(_1ab177560_typeBuilder* _self_, jule::Str _4833_fmt, jule::Slice<jule::Any> _4846_args) {
	if ((*(_self_))._field_err) {
		_1ab1675b6_pushSuggestion((*(_self_))._field_p.ptr(), _4833_fmt, _4846_args);
	};
}



inline jule::Ptr<_1aa854028_TypeDecl> _1ab1781ba_buildPrim(_1ab177560_typeBuilder* _self_) {
	jule::Ptr<_1aa854028_TypeDecl> _5517_t = _1ab1770cb_buildPrimType((*(_self_))._field_tokens[(*((*(_self_))._field_i))]);;
	((*((*(_self_))._field_i)))++;
	return _5517_t;;
}



inline jule::Ptr<_1aa854028_TypeDecl> _1ab17842e_buildNamespace(_1ab177560_typeBuilder* _self_) {
	jule::Ptr<_1aa854028_TypeDecl> _6117_t = jule::new_ptr<_1aa854028_TypeDecl>(_1aa854028_TypeDecl{._field_Token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))], });;
	jule::Ptr<_1aa8550e5_NamespaceTypeDecl> _6517_nst = jule::new_ptr<_1aa8550e5_NamespaceTypeDecl>();;
	jule::I64 _6617_n = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1db944d0d_Token> _6821_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			if (((_6617_n & 1LL) == 0LL)) {
				if ((_6821_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
					_1ab177b37_pushErr(_self_, _6821_token, jule::Str("invalid syntax", 14));
					_1ab177e56_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
				};
				_6517_nst.get()._field_Idents = jule::alloc_for_append(_6517_nst.get()._field_Idents,1);_6517_nst.get()._field_Idents.__push(_6821_token);;
			} else if ((_6821_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
				goto _iter_end_1baa7824d;
			};
			(_6617_n)++;
		}
	_iter_next_1baa7824d:;
	}
	_iter_end_1baa7824d:;;
	_6517_nst.get()._field_Idents=_6517_nst.get()._field_Idents.slice(0LL, (_6517_nst.get()._field_Idents.len() - 1LL));
	((*((*(_self_))._field_i)))--;
	_6517_nst.get()._field_Kind=_1ab178b6b_buildIdent(_self_);
	_6117_t.get()._field_Kind=jule::Any(_6517_nst, &__jule_any_type96);
	return _6117_t;;
}



inline jule::Slice<jule::Ptr<_1aa854028_TypeDecl>> _1ab178693_buildGenerics(_1ab177560_typeBuilder* _self_) {
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		return nullptr;;
	};
	jule::Ptr<_1db944d0d_Token> _9413_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if (((_9413_token.get()._field_Id != static_cast<jule::U64>(3LLU)) || (!_9413_token.get()._field_Kind.equal("[", 1)))) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1db944d0d_Token>>> _9917_parts = _1ab178907_identGenerics(_self_);;
	if ((_9917_parts.len() == 0LL)) {
		_1ab177b37_pushErr(_self_, _9413_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1aa854028_TypeDecl>> _10517_types = jule::Slice<jule::Ptr<_1aa854028_TypeDecl>>::alloc(0LL, _9917_parts.len());;
	{
		auto expr = &(_9917_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1baa8092b:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1db944d0d_Token>> _10621_part = *it;
			{
				jule::I64 _10721_j = 0LL;;
				jule::Ptr<_1aa854028_TypeDecl> _10822_t;;
				({
					__jule_tuple_x_1aa854028_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab168bb1_buildType((*(_self_))._field_p, &(_10621_part), (&(_10721_j)), true);
					_10822_t = __jule_assign_result.__jule_result_arg0;
				});
				if ((_10721_j < _10621_part.len())) {
					_1ab177b37_pushErr(_self_, _10621_part[_10721_j], jule::Str("invalid syntax", 14));
				};
				_10517_types = jule::alloc_for_append(_10517_types,1);_10517_types.__push(_10822_t);;
			}
			_iter_next_1baa8092b:;
			++it;
			goto _iter_begin_1baa8092b;
		}
		_iter_end_1baa8092b:;
	};
	return _10517_types;;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1db944d0d_Token>>> _1ab178907_identGenerics(_1ab177560_typeBuilder* _self_) {
	jule::I64 _11813_first = (*((*(_self_))._field_i));;
	jule::I64 _11917_rangeN = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1db944d0d_Token> _12117_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			if ((_12117_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _12117_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1baa843d0:;
						{
							(_11917_rangeN)++;
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1baa84457:;
						{
							(_11917_rangeN)--;
						}
					}
					_match_end_1baa841b0:;
				};
			};
			if ((_11917_rangeN == 0LL)) {
				((*((*(_self_))._field_i)))++;
				goto _iter_end_1baa830e3;
			};
		}
	_iter_next_1baa830e3:;
	}
	_iter_end_1baa830e3:;;
	jule::Slice<jule::Ptr<_1db944d0d_Token>> _13517_tokens = (*(_self_))._field_tokens.slice((_11813_first + 1LL), ((*((*(_self_))._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1db944d0d_Token>>> _13618_parts;;
	jule::Slice<_1d9d938bd_Log> _13625_errors;;
	({
		__jule_tuple_ssx_1db944d0d_Token__jule_tuple_s_1d9d938bd_Log __jule_assign_result = _1ab16554d_parts(&(_13517_tokens), static_cast<jule::U64>(8LLU), true);
		_13618_parts = __jule_assign_result.__jule_result_arg0;
		_13625_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((*(_self_))._field_err) {
		(*(_self_))._field_p.get()._field_errors=jule::append((*(_self_))._field_p.get()._field_errors,_13625_errors);
	};
	return _13618_parts;;
}



inline jule::Ptr<_1aa854028_TypeDecl> _1ab178b6b_buildIdent(_1ab177560_typeBuilder* _self_) {
	jule::Bool _14417_next = (((*((*(_self_))._field_i)) + 1LL) < (*(_self_))._field_tokens.len());;
	if ((_14417_next && ((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)].get()._field_Id == static_cast<jule::U64>(22LLU)))) {
		return _1ab17842e_buildNamespace(_self_);;
	};
	jule::Ptr<_1db944d0d_Token> _14817_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1aa8545de_IdentTypeDecl> _14917_it = jule::new_ptr<_1aa8545de_IdentTypeDecl>(_1aa8545de_IdentTypeDecl{._field_Token=_14817_token, ._field_Ident=_14817_token.get()._field_Kind, ._field_CppLinked=false, });;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1aa854028_TypeDecl> _15517_itd = jule::new_ptr<_1aa854028_TypeDecl>(_1aa854028_TypeDecl{._field_Token=_14817_token, ._field_Kind=jule::Any(_14917_it, &__jule_any_type20)});;
	if (((!(_14417_next)) || ((*(_self_))._field_tokens[(*((*(_self_))._field_i))].get()._field_Id != static_cast<jule::U64>(20LLU)))) {
		_14917_it.get()._field_Generics=_1ab178693_buildGenerics(_self_);
		return _15517_itd;;
	};
	if ((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) == 1LL)) {
		_1ab177b37_pushErr(_self_, _14817_token, jule::Str("invalid syntax", 14));
		return _15517_itd;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*(_self_))._field_tokens[(*((*(_self_))._field_i))].get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1ab177b37_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str("invalid syntax", 14));
		return _15517_itd;;
	};
	jule::Ptr<_1aa854c3d_SubIdentTypeDecl> _17217_sit = jule::new_ptr<_1aa854c3d_SubIdentTypeDecl>();;
	_17217_sit.get()._field_Idents = jule::alloc_for_append(_17217_sit.get()._field_Idents,1);_17217_sit.get()._field_Idents.__push(_14917_it);;
	jule::Ptr<_1aa854028_TypeDecl> _17417_ident = _1ab178b6b_buildIdent(_self_);;
	{
		auto &_match_expr{ _17417_ident.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1baa8e0dd:;
			{
				_17217_sit.get()._field_Idents = jule::alloc_for_append(_17217_sit.get()._field_Idents,1);_17217_sit.get()._field_Idents.__push(_17417_ident.get()._field_Kind.cast_ptr<_1aa8545de_IdentTypeDecl>(&__jule_any_type20));;
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1baa8e1ba:;
			{
				_17217_sit.get()._field_Idents=jule::append(_17217_sit.get()._field_Idents,_17417_ident.get()._field_Kind.cast_ptr<_1aa854c3d_SubIdentTypeDecl>(&__jule_any_type92).get()._field_Idents);
			}
		}
		_match_end_1baa8e033:;
	};
	return jule::new_ptr<_1aa854028_TypeDecl>(_1aa854028_TypeDecl{._field_Token=_14817_token, ._field_Kind=jule::Any(_17217_sit, &__jule_any_type92)});;
}



inline jule::Ptr<_1aa854028_TypeDecl> _1ab178dd0_buildCppLink(_1ab177560_typeBuilder* _self_) {
	if (((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len()) || ((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)].get()._field_Id != static_cast<jule::U64>(20LLU)))) {
		_1ab177b37_pushErr(_self_, (*(_self_))._field_tokens[(*((*(_self_))._field_i))], jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	(*((*(_self_))._field_i))+=2LL;
	jule::Ptr<_1aa854028_TypeDecl> _19317_t = _1ab178b6b_buildIdent(_self_);;
	_19317_t.get()._field_Kind.cast_ptr<_1aa8545de_IdentTypeDecl>(&__jule_any_type20).get()._field_CppLinked=true;
	return _19317_t;;
}



inline jule::Ptr<_1aa854028_TypeDecl> _1ab179144_buildFn(_1ab177560_typeBuilder* _self_) {
	jule::Ptr<_1db944d0d_Token> _19917_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1aa8659a7_FnDecl> _20017_f = _1ab16c8a7_buildFnPrototype((*(_self_))._field_p, &((*(_self_))._field_tokens), &((*((*(_self_))._field_i))), false);;
	if ((_20017_f == nullptr)) {
		return nullptr;;
	};
	if ((!(_1aa865d09_IsAnon(_20017_f.ptr())))) {
		_1ab177b37_pushErr(_self_, _20017_f.get()._field_Token, jule::Str("invalid syntax", 14));
	};
	return jule::new_ptr<_1aa854028_TypeDecl>(_1aa854028_TypeDecl{._field_Token=_19917_token, ._field_Kind=jule::Any(_20017_f, &__jule_any_type14)});;
}



inline jule::Ptr<_1aa854028_TypeDecl> _1ab1793a8_buildPtr(_1ab177560_typeBuilder* _self_) {
	jule::Ptr<_1db944d0d_Token> _21417_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1ab177b37_pushErr(_self_, _21417_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*(_self_))._field_tokens[(*((*(_self_))._field_i))].get()._field_Id == static_cast<jule::U64>(34LLU))) {
		((*((*(_self_))._field_i)))++;
		return jule::new_ptr<_1aa854028_TypeDecl>(_1aa854028_TypeDecl{._field_Token=_21417_token, ._field_Kind=jule::Any(jule::new_ptr<_1aa855da4_PtrTypeDecl>(_1aa855da4_PtrTypeDecl{._field_Elem=nullptr}), &__jule_any_type77)});;
	};
	jule::Ptr<_1aa854028_TypeDecl> _23117_elem = _1ab17a596_step(_self_);;
	if ((_23117_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1aa854028_TypeDecl>(_1aa854028_TypeDecl{._field_Token=_21417_token, ._field_Kind=jule::Any(jule::new_ptr<_1aa855da4_PtrTypeDecl>(_1aa855da4_PtrTypeDecl{._field_Elem=_23117_elem}), &__jule_any_type77)});;
}



inline jule::Ptr<_1aa854028_TypeDecl> _1ab17961c_buildSptr(_1ab177560_typeBuilder* _self_) {
	jule::Ptr<_1db944d0d_Token> _24517_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1ab177b37_pushErr(_self_, _24517_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1aa854028_TypeDecl> _25217_elem = _1ab17a596_step(_self_);;
	if ((_25217_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1aa854028_TypeDecl>(_1aa854028_TypeDecl{._field_Token=_24517_token, ._field_Kind=jule::Any(jule::new_ptr<_1aa8553d1_SptrTypeDecl>(_1aa8553d1_SptrTypeDecl{._field_Elem=_25217_elem}), &__jule_any_type78)});;
}



inline jule::Ptr<_1aa854028_TypeDecl> _1ab179881_buildOp(_1ab177560_typeBuilder* _self_) {
	jule::Ptr<_1db944d0d_Token> _26617_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	{
		auto &_match_expr{ _26617_token.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1baa9b7e3:;
			{
				return _1ab1793a8_buildPtr(_self_);;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1baa9c8c1:;
			{
				return _1ab17961c_buildSptr(_self_);;
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1baa9c937:;
			{
				return jule::new_ptr<_1aa854028_TypeDecl>(_1aa854028_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_1aa8553d1_SptrTypeDecl>(_1aa8553d1_SptrTypeDecl{._field_Elem=_1ab17961c_buildSptr(_self_)}), &__jule_any_type78)});;
			}
		}
		else {
			_case_begin_1baa9be75:;
			{
				_1ab177b37_pushErr(_self_, _26617_token, jule::Str("invalid syntax", 14));
				return nullptr;;
			}
		}
		_match_end_1baa9bcee:;
	};
}



inline jule::Ptr<_1aa854028_TypeDecl> _1ab179ae5_buildSlc(_1ab177560_typeBuilder* _self_) {
	jule::Ptr<_1db944d0d_Token> _28517_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1aa854028_TypeDecl> _28717_elem = _1ab17a596_step(_self_);;
	if ((_28717_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1aa854028_TypeDecl>(_1aa854028_TypeDecl{._field_Token=_28517_token, ._field_Kind=jule::Any(jule::new_ptr<_1aa8557cc_SlcTypeDecl>(_1aa8557cc_SlcTypeDecl{._field_Elem=_28717_elem}), &__jule_any_type76)});;
}



inline jule::Ptr<_1aa854028_TypeDecl> _1ab179d59_buildArr(_1ab177560_typeBuilder* _self_) {
	jule::Slice<jule::Ptr<_1db944d0d_Token>> _30017_exprTokens = _1ab1649d1_range(&((*((*(_self_))._field_i))), jule::Str("[", 1), jule::Str("]", 1), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1ab177b37_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1aa854028_TypeDecl> _30617_elem = _1ab17a596_step(_self_);;
	if ((_30617_elem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1aa856536_ArrTypeDecl> _31117_arrt = jule::new_ptr<_1aa856536_ArrTypeDecl>(_1aa856536_ArrTypeDecl{._field_Elem=_30617_elem, });;
	jule::Ptr<_1db944d0d_Token> _31517_token = _30017_exprTokens[0LL];;
	if ((((_30017_exprTokens.len() == 1LL) && (_31517_token.get()._field_Id == static_cast<jule::U64>(7LLU))) && _31517_token.get()._field_Kind.equal("...", 3))) {
	} else {
		_31117_arrt.get()._field_Size=_1ab1678c4_buildExpr((*(_self_))._field_p, &(_30017_exprTokens));
	};
	return jule::new_ptr<_1aa854028_TypeDecl>(_1aa854028_TypeDecl{._field_Token=_31517_token, ._field_Kind=jule::Any(_31117_arrt, &__jule_any_type75)});;
}



inline jule::Ptr<_1aa854028_TypeDecl> _1ab17a0bd_buildMap(_1ab177560_typeBuilder* _self_) {
	jule::Ptr<_1db944d0d_Token> _32917_mapToken = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1ab177b37_pushErr(_self_, _32917_mapToken, jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1db944d0d_Token>> _33717_keyTokens = _1ab1649d1_range(&((*((*(_self_))._field_i))), jule::Str("[", 1), jule::Str("]", 1), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1ab177b37_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str("type missing", 12));
		return nullptr;;
	} else if ((_33717_keyTokens.len() == 0LL)) {
		_1ab177b37_pushErr(_self_, _32917_mapToken, jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1aa856c84_MapTypeDecl> _34617_mapt = jule::new_ptr<_1aa856c84_MapTypeDecl>();;
	jule::I64 _34717_j = 0LL;;
	jule::Ptr<_1aa854028_TypeDecl> _34818_keyt;;
	jule::Bool _34828_ok = false;;
	({
		__jule_tuple_x_1aa854028_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab168bb1_buildType((*(_self_))._field_p, &(_33717_keyTokens), (&(_34717_j)), (*(_self_))._field_err);
		_34818_keyt = __jule_assign_result.__jule_result_arg0;
		_34828_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_34828_ok))) {
		return nullptr;;
	} else if ((_34717_j < _33717_keyTokens.len())) {
		_1ab177b37_pushErr(_self_, _33717_keyTokens[_34717_j], jule::Str("invalid syntax", 14));
	};
	_34617_mapt.get()._field_Key=_34818_keyt;
	jule::Ptr<_1aa854028_TypeDecl> _35618_valt;;
	({
		__jule_tuple_x_1aa854028_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab168bb1_buildType((*(_self_))._field_p, &((*(_self_))._field_tokens), (*(_self_))._field_i, (*(_self_))._field_err);
		_35618_valt = __jule_assign_result.__jule_result_arg0;
		_34828_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_34828_ok))) {
		return nullptr;;
	};
	_34617_mapt.get()._field_Val=_35618_valt;
	return jule::new_ptr<_1aa854028_TypeDecl>(_1aa854028_TypeDecl{._field_Token=_32917_mapToken, ._field_Kind=jule::Any(_34617_mapt, &__jule_any_type79)});;
}



inline jule::Ptr<_1aa854028_TypeDecl> _1ab17a332_buildEnumerable(_1ab177560_typeBuilder* _self_) {
	jule::Ptr<_1db944d0d_Token> _36817_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((((*((*(_self_))._field_i)) + 2LL) >= (*(_self_))._field_tokens.len()) || (_36817_token.get()._field_Id != static_cast<jule::U64>(3LLU))) || (!_36817_token.get()._field_Kind.equal("[", 1)))) {
		_1ab177b37_pushErr(_self_, _36817_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	_36817_token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))];
	if (((_36817_token.get()._field_Id == static_cast<jule::U64>(3LLU)) && _36817_token.get()._field_Kind.equal("]", 1))) {
		return _1ab179ae5_buildSlc(_self_);;
	};
	((*((*(_self_))._field_i)))--;
	return _1ab179d59_buildArr(_self_);;
}



inline jule::Ptr<_1aa854028_TypeDecl> _1ab17a596_step(_1ab177560_typeBuilder* _self_) {
	jule::Ptr<_1db944d0d_Token> _38513_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	{
		auto &_match_expr{ _38513_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1baab0d24:;
			{
				return _1ab1781ba_buildPrim(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1baab06b4:;
			{
				return _1ab178b6b_buildIdent(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1baab072a:;
			{
				return _1ab178dd0_buildCppLink(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1baab0791:;
			{
				return _1ab179144_buildFn(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1baab1165:;
			{
				return _1ab179881_buildOp(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1baab11cb:;
			{
				return _1ab17a332_buildEnumerable(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1baab1242:;
			{
				return _1ab17a0bd_buildMap(_self_);;
			}
		}
		else {
			_case_begin_1baab05b5:;
			{
				((*((*(_self_))._field_i)))++;
				_1ab177b37_pushErr(_self_, _38513_token, jule::Str("invalid syntax", 14));
				return nullptr;;
			}
		}
		_match_end_1baab043e:;
	};
}



inline __jule_tuple_x_1aa854028_TypeDecl__jule_tuple_bool _1ab17a80a_build(_1ab177560_typeBuilder* _self_) {
	__jule_tuple_x_1aa854028_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1aa854028_TypeDecl> _41117_root = _1ab17a596_step(_self_);;
	if ((_41117_root == nullptr)) {
		__jule_func_result.__jule_result_arg0 = _1ab176d89_buildVoidType();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _41117_root;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab177560_typeBuilder _Src) {
	_Stream << "typeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa39e17d_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "Prod:" << _Src._field_Prod << ", ";
	_Stream << "Test:" << _Src._field_Test << ", ";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CppStd:" << _Src._field_CppStd;
	_Stream << "}";
	return _Stream;
}



inline void _1aa3a0a31_pushErr(_1aa3a04d1_directiveEval* _self_, jule::Ptr<_1db944d0d_Token> _2126_t, jule::Str _2137_fmt, jule::Slice<jule::Any> _2150_args) {
	(*(_self_))._field_logs = jule::alloc_for_append((*(_self_))._field_logs,1);(*(_self_))._field_logs.__push(_1d9d938bd_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_2126_t.get()._field_Row, ._field_Column=_2126_t.get()._field_Column, ._field_Path=_2126_t.get()._field_File.get()._field_Path, ._field_Text=_1d9d93d0d_Logf(_2137_fmt, _2150_args), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1db944d0d_Token>>> _1aa3a0dd8_splitOperans(_1aa3a04d1_directiveEval* _self_, jule::Str _3331_op, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _3351_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1db944d0d_Token>>> _3417_parts = jule::Slice<jule::Slice<jule::Ptr<_1db944d0d_Token>>>::alloc(0LL, 10LL);;
	jule::I64 _3617_i = 0LL;;
	jule::I64 _3717_rangeN = 0LL;;
	jule::I64 _3817_last = 0LL;;
	for (; (_3617_i < ((*(_3351_tokens)).len() - 1LL)); (_3617_i)++) {
		{
			jule::Ptr<_1db944d0d_Token> _4017_b = (*(_3351_tokens))[_3617_i];;
			if ((_4017_b.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _4017_b.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1bac46a37:;
						{
							(_3717_rangeN)++;
							goto _iter_next_1bac44bbc;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1bac46a9d:;
						{
							(_3717_rangeN)--;
						}
					}
					_match_end_1bac46817:;
				};
			};
			if (((_3717_rangeN > 0LL) || (_4017_b.get()._field_Id != static_cast<jule::U64>(7LLU)))) {
				goto _iter_next_1bac44bbc;
			};
			if ((_4017_b.get()._field_Kind == _3331_op)) {
				_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push((*(_3351_tokens)).slice(_3817_last, _3617_i));;
				_3817_last=static_cast<jule::I64>((_3617_i + 1LL));
			};
		}
	_iter_next_1bac44bbc:;
	}
	_iter_end_1bac44bbc:;;
	if ((_3817_last < (*(_3351_tokens)).len())) {
		_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push((*(_3351_tokens)).slice(_3817_last));;
	} else {
		_1aa3a0a31_pushErr(_self_, (*(_3351_tokens))[(_3817_last - 1LL)], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _3417_parts;;
}



inline jule::Bool _1aa3a11e6_evalDirectiveIdent(_1aa3a04d1_directiveEval* _self_, jule::Str _7333_ident) {
	if (_7333_ident.empty()) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bac49a4b:;
		if (it != expr_end) {
			jule::Str *_7716_var = it;
			{
				if (((*(_7716_var)) == _7333_ident)) {
					return true;;
				};
			}
			_iter_next_1bac49a4b:;
			++it;
			goto _iter_begin_1bac49a4b;
		}
		_iter_end_1bac49a4b:;
	};
	return false;;
}



inline jule::Bool _1aa3a1504_evalDirectivePart(_1aa3a04d1_directiveEval* _self_, jule::Slice<jule::Ptr<_1db944d0d_Token>> _8740_part) {
	jule::Bool _8813_logicalNot = ((_8740_part[0LL].get()._field_Id == static_cast<jule::U64>(7LLU)) && _8740_part[0LL].get()._field_Kind.equal("!", 1));;
	if (_8813_logicalNot) {
		_8740_part=_8740_part.slice(1LL);
	};
	if ((_8740_part.len() > 1LL)) {
		_1aa3a0a31_pushErr(_self_, _8740_part[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _9817_result = _1aa3a11e6_evalDirectiveIdent(_self_, _8740_part[0LL].get()._field_Kind);;
	if (_8813_logicalNot) {
		_9817_result=(!(_9817_result));
	};
	return _9817_result;;
}



inline jule::Bool _1aa3a1768_eval(_1aa3a04d1_directiveEval* _self_) {
	if (((*(_self_))._field_d.get()._field_Args.len() == 0LL)) {
		_1aa3a0a31_pushErr(_self_, (*(_self_))._field_d.get()._field_Tag, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _11117_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_1db944d0d_Token>>> _11317_logicalOrParts = _1aa3a0dd8_splitOperans(_self_, jule::Str("||", 2), &((*(_self_))._field_d.get()._field_Args));;
	if ((_11317_logicalOrParts == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_11317_logicalOrParts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bac50d82:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1db944d0d_Token>> _11821_part = *it;
			{
				jule::Bool _11921_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_1db944d0d_Token>>> _12021_logicalAndParts = _1aa3a0dd8_splitOperans(_self_, jule::Str("&&", 2), &(_11821_part));;
				if ((_12021_logicalAndParts == nullptr)) {
					return false;;
				};
				{
					auto expr = &(_12021_logicalAndParts);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bac52081:;
					if (it != expr_end) {
						jule::Slice<jule::Ptr<_1db944d0d_Token>> _12525_andPart = *it;
						{
							jule::Ptr<_1db944d0d_Token> _12621_first = _12525_andPart[0LL];;
							if (((_12621_first.get()._field_Id == static_cast<jule::U64>(3LLU)) && _12621_first.get()._field_Kind.equal("(", 1))) {
								jule::Ptr<_1db944d0d_Token> _12825_end = _12525_andPart[(_12525_andPart.len() - 1LL)];;
								if (((_12825_end.get()._field_Id != static_cast<jule::U64>(3LLU)) || (!_12825_end.get()._field_Kind.equal(")", 1)))) {
									_1aa3a0a31_pushErr(_self_, _12621_first, jule::Str("parentheses waiting to close", 28), jule::Slice<jule::Any>());
									return false;;
								};
								_12525_andPart=_12525_andPart.slice(1LL, (_12525_andPart.len() - 1LL));
							};
							_11921_and=(_11921_and && _1aa3a1504_evalDirectivePart(_self_, _12525_andPart));
						}
						_iter_next_1bac52081:;
						++it;
						goto _iter_begin_1bac52081;
					}
					_iter_end_1bac52081:;
				};
				_11117_result=(_11117_result || _11921_and);
			}
			_iter_next_1bac50d82:;
			++it;
			goto _iter_begin_1bac50d82;
		}
		_iter_end_1bac50d82:;
	};
	return _11117_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa3a04d1_directiveEval _Src) {
	_Stream << "directiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ab17b7c8_JuleImporter> static__1ab17bc07_New(_1aa39e17d_CompileInfo _5819_info) {
	jule::Ptr<_1ab17b7c8_JuleImporter> _5917_imp = jule::new_ptr<_1ab17b7c8_JuleImporter>(_1ab17b7c8_JuleImporter{._field_mods=jule::Slice<jule::Str>::make({_1d9e38479_PathStdlib}), });;
	_1aa39e997_initVars(&(_5917_imp.get()._field_vars), &(_5819_info));
	return _5917_imp;;
}



inline jule::Slice<jule::Ptr<_1aa8d101c_ImportInfo>> _1ab17be6b_AllPackages(_1ab17b7c8_JuleImporter* _self_) {
	return (*(_self_))._field_pkgs;;
}



inline void _1ab17c334_SetModPath(_1ab17b7c8_JuleImporter* _self_, jule::Str _7529_path) {
	(*(_self_))._field_mod=_7529_path;
}



inline jule::Str _1ab17c598_GetModPath(_1ab17b7c8_JuleImporter* _self_) {
	return (*(_self_))._field_mod;;
}



inline jule::Str _1ab17c8a6_ModById(_1ab17b7c8_JuleImporter* _self_, jule::I64 _8322_id) {
	return (*(_self_))._field_mods[_8322_id];;
}



inline jule::Ptr<_1aa8d101c_ImportInfo> _1ab17cbb4_GetImport(_1ab17b7c8_JuleImporter* _self_, jule::Str _8728_path) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bac591ed:;
		if (it != expr_end) {
			jule::Ptr<_1aa8d101c_ImportInfo> _8821_p = *it;
			{
				if ((_8821_p.get()._field_Path == _8728_path)) {
					return _8821_p;;
				};
			}
			_iter_next_1bac591ed:;
			++it;
			goto _iter_begin_1bac591ed;
		}
		_iter_end_1bac591ed:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1aa81e80c_Ast__jule_tuple_s_1d9d938bd_Log _1ab17d06b_ImportPackage(_1ab17b7c8_JuleImporter* _self_, jule::Str _9632_path, jule::Bool _9643_update_mod) {
	__jule_tuple_sx_1aa81e80c_Ast__jule_tuple_s_1d9d938bd_Log __jule_func_result;
	jule::Slice<jule::Ptr<_203d70793_DirEntry>> _9717_dirents = ({
		auto except = static__1d9d0e43d_Read(_9632_path);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = jule::Slice<_1d9d938bd_Log>::make({_1ab17b344_flatCompilerErr((jule::Str("connot read package directory: ", 31) + _9632_path))});
			return __jule_func_result;;
		} jule::Slice<jule::Ptr<_203d70793_DirEntry>>(nullptr);});
	});;
	if (_9643_update_mod) {
		jule::Str _10217_newMod = _1aa3b0766_FindModuleFileDeep(_9632_path);;
		if ((_10217_newMod != (*(_self_))._field_mod)) {
			(*(_self_))._field_mod=_10217_newMod;
			jule::Slice<_1d9d938bd_Log> _10525_errs = _1aa3b0964_CheckModuleFile((*(_self_))._field_mod);;
			if ((_10525_errs.len() != 0LL)) {
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = _10525_errs;
				return __jule_func_result;;
			};
		};
	};
	jule::Slice<jule::Ptr<_1aa81e80c_Ast>> _11217_asts = jule::Slice<jule::Ptr<_1aa81e80c_Ast>>::alloc(0LL, _9717_dirents.len());;
	{
		auto expr = &(_9717_dirents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bac5d235:;
		if (it != expr_end) {
			jule::Ptr<_203d70793_DirEntry> _11316_dirent = *it;
			{
				if ((_203d80022_IsDir(_11316_dirent.get()._field_Stat.ptr()) || (!(_1d9d03e27_HasSuffix(_11316_dirent.get()._field_Name, jule::Str(".jule", 5)))))) {
					goto _iter_next_1bac5d235;
				};
				jule::Str _11917__path = _1d9d0d0da_Join(jule::Slice<jule::Str>::make({_9632_path,_11316_dirent.get()._field_Name}));;
				jule::Ptr<_1db94a198_File> _12021_file = _1db94b6c7_NewFileSet(_11917__path);;
				_1db94a82a_Fill(_12021_file.ptr(), _1ab17b08b_readBuff(_12021_file.get()._field_Path));
				jule::Slice<_1d9d938bd_Log> _12221_errors = _1db957073_Lex(_12021_file, static_cast<jule::I64>(0LL));;
				if ((_12221_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12221_errors;
					return __jule_func_result;;
				};
				jule::Ptr<_1ab0ead63_FileInfo> _12721_finfo = _1ab14773e_ParseFile(_12021_file);;
				if ((_12721_finfo.get()._field_Errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12721_finfo.get()._field_Errors;
					return __jule_func_result;;
				};
				if ((!(_1aa384905_isPassFileAnnotation(_11316_dirent.get()._field_Name)))) {
					goto _iter_next_1bac5d235;
				};
				jule::Bool _13718_r = false;;
				jule::Slice<_1d9d938bd_Log> _13725_logs;;
				({
					__jule_tuple_bool__jule_tuple_s_1d9d938bd_Log __jule_assign_result = _1ab17d731_isPassBuildDirectives(_self_, &(_12721_finfo.get()._field_Ast));
					_13718_r = __jule_assign_result.__jule_result_arg0;
					_13725_logs = __jule_assign_result.__jule_result_arg1;
				});
				if ((_13725_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _13725_logs;
					return __jule_func_result;;
				};
				if ((!(_13718_r))) {
					goto _iter_next_1bac5d235;
				};
				_11217_asts = jule::alloc_for_append(_11217_asts,1);_11217_asts.__push(_12721_finfo.get()._field_Ast);;
			}
			_iter_next_1bac5d235:;
			++it;
			goto _iter_begin_1bac5d235;
		}
		_iter_end_1bac5d235:;
	};
	__jule_func_result.__jule_result_arg0 = _11217_asts;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1ab17d2e1_Imported(_1ab17b7c8_JuleImporter* _self_, jule::Ptr<_1aa8d101c_ImportInfo> _15331_imp) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bac63746:;
		if (it != expr_end) {
			jule::Ptr<_1aa8d101c_ImportInfo> _15516_p = *it;
			{
				if (((_15516_p.get()._field_CppLinked == _15331_imp.get()._field_CppLinked) && (_15516_p.get()._field_LinkPath == _15331_imp.get()._field_LinkPath))) {
					return;;
				};
			}
			_iter_next_1bac63746:;
			++it;
			goto _iter_begin_1bac63746;
		}
		_iter_end_1bac63746:;
	};
	if (((*(_self_))._field_mod.len() != 0LL)) {
		{
			auto expr = &((*(_self_))._field_mods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bac6501c:;
			if (it != expr_end) {
				jule::I64 _16217_i = it - expr->begin();
				jule::Str _16220_mod = *it;
				{
					if (((*(_self_))._field_mod == _16220_mod)) {
						_15331_imp.get()._field_ModId=_16217_i;
						goto _julec_label_setted;
					};
				}
				_iter_next_1bac6501c:;
				++it;
				_16217_i++;
				goto _iter_begin_1bac6501c;
			}
			_iter_end_1bac6501c:;
		};
		_15331_imp.get()._field_ModId=static_cast<jule::I64>((*(_self_))._field_mods.len());
		(*(_self_))._field_mods = jule::alloc_for_append((*(_self_))._field_mods,1);(*(_self_))._field_mods.__push((*(_self_))._field_mod);;
		_julec_label_setted:;
	};
	(*(_self_))._field_pkgs = jule::alloc_for_append((*(_self_))._field_pkgs,1);(*(_self_))._field_pkgs.__push(_15331_imp);;
}



inline __jule_tuple_bool__jule_tuple_s_1d9d938bd_Log _1ab17d731_isPassBuildDirectives(_1ab17b7c8_JuleImporter* _self_, jule::Ptr<_1aa81e80c_Ast>* _17945_file) {
	__jule_tuple_bool__jule_tuple_s_1d9d938bd_Log __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	{
		auto expr = &((*(_17945_file)).get()._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bac68141:;
		if (it != expr_end) {
			jule::Ptr<_1aa820a94_Directive> _18021_td = *it;
			{
				if ((!_18021_td.get()._field_Tag.get()._field_Kind.equal("build", 5))) {
					goto _iter_next_1bac68141;
				};
				_1aa3a04d1_directiveEval _18421_de = _1aa3a04d1_directiveEval{._field_d=_18021_td, ._field_vars=(*(_self_))._field_vars};;
				jule::Bool _18817_result = _1aa3a1768_eval(&_18421_de);;
				if ((_18421_de._field_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = _18421_de._field_logs;
					return __jule_func_result;;
				};
				if ((!(_18817_result))) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = nullptr;
					return __jule_func_result;;
				};
			}
			_iter_next_1bac68141:;
			++it;
			goto _iter_begin_1bac68141;
		}
		_iter_end_1bac68141:;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab17b7c8_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab18157a_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Globals:" << _Src._field_Globals;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1bac88c55_isCommonOrdered(jule::Slice<jule::Ptr<_1aa8740c0_Struct>> _1834_s, jule::Ptr<_1aa8740c0_Struct> _1842_t) {
	{
		auto expr = &(_1842_t.get()._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bac89d00:;
		if (it != expr_end) {
			jule::Ptr<_1aa8740c0_Struct> *_1916_d = it;
			{
				{
					auto expr = &(_1834_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bac8a619:;
					if (it != expr_end) {
						jule::Ptr<_1aa8740c0_Struct> *_2020_d2 = it;
						{
							if (((*(_1916_d)) == (*(_2020_d2)))) {
								return false;;
							};
						}
						_iter_next_1bac8a619:;
						++it;
						goto _iter_begin_1bac8a619;
					}
					_iter_end_1bac8a619:;
				};
			}
			_iter_next_1bac89d00:;
			++it;
			goto _iter_begin_1bac89d00;
		}
		_iter_end_1bac89d00:;
	};
	return true;;
}

inline jule::Bool _1bac8dba0_isCommonOrdered(jule::Slice<jule::Ptr<_1aa908c59_Var>> _1834_s, jule::Ptr<_1aa908c59_Var> _1842_t) {
	{
		auto expr = &(_1842_t.get()._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bac8ec06:;
		if (it != expr_end) {
			jule::Ptr<_1aa908c59_Var> *_1916_d = it;
			{
				{
					auto expr = &(_1834_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bac90520:;
					if (it != expr_end) {
						jule::Ptr<_1aa908c59_Var> *_2020_d2 = it;
						{
							if (((*(_1916_d)) == (*(_2020_d2)))) {
								return false;;
							};
						}
						_iter_next_1bac90520:;
						++it;
						goto _iter_begin_1bac90520;
					}
					_iter_end_1bac90520:;
				};
			}
			_iter_next_1bac8ec06:;
			++it;
			goto _iter_begin_1bac8ec06;
		}
		_iter_end_1bac8ec06:;
	};
	return true;;
}



inline void _1bac85427_orderCommon(jule::Slice<jule::Ptr<_1aa8740c0_Struct>>* _3135_s) {
	jule::I64 _3217_n = ((*(_3135_s)).len() - 1LL);;
	{
		auto expr = _3135_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bac86978:;
		if (it != expr_end) {
			{
				jule::Bool _3421_swapped = false;;
				jule::I64 _3521_k = 0LL;;
				for (; (_3521_k < _3217_n); (_3521_k)++) {
					{
						if ((!(_1bac88c55_isCommonOrdered((*(_3135_s)), (*(_3135_s))[_3521_k])))) {
							(*(_3135_s)).swap(_3521_k, static_cast<jule::I64>((_3521_k + 1LL)));
							_3421_swapped=true;
						};
					}
				_iter_next_1bac877ae:;
				}
				_iter_end_1bac877ae:;;
				if ((!(_3421_swapped))) {
					goto _iter_end_1bac86978;
				};
				(_3217_n)--;
			}
			_iter_next_1bac86978:;
			++it;
			goto _iter_begin_1bac86978;
		}
		_iter_end_1bac86978:;
	};
}

inline void _1bac86b76_orderCommon(jule::Slice<jule::Ptr<_1aa908c59_Var>>* _3135_s) {
	jule::I64 _3217_n = ((*(_3135_s)).len() - 1LL);;
	{
		auto expr = _3135_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bac8b8c3:;
		if (it != expr_end) {
			{
				jule::Bool _3421_swapped = false;;
				jule::I64 _3521_k = 0LL;;
				for (; (_3521_k < _3217_n); (_3521_k)++) {
					{
						if ((!(_1bac8dba0_isCommonOrdered((*(_3135_s)), (*(_3135_s))[_3521_k])))) {
							(*(_3135_s)).swap(_3521_k, static_cast<jule::I64>((_3521_k + 1LL)));
							_3421_swapped=true;
						};
					}
				_iter_next_1bac8c709:;
				}
				_iter_end_1bac8c709:;;
				if ((!(_3421_swapped))) {
					goto _iter_end_1bac8b8c3;
				};
				(_3217_n)--;
			}
			_iter_next_1bac8b8c3:;
			++it;
			goto _iter_begin_1bac8b8c3;
		}
		_iter_end_1bac8b8c3:;
	};
}



inline void static__1ab1821b3_orderStructures(jule::Slice<jule::Ptr<_1aa8740c0_Struct>>* _5136_structs) {
	_1bac85427_orderCommon(_5136_structs);
}



inline void static__1ab1823c2_orderVars(jule::Slice<jule::Ptr<_1aa908c59_Var>>* _5730_vars) {
	_1bac86b76_orderCommon(_5730_vars);
}







std::ostream &operator<<(std::ostream &_Stream, _1ab1817de_defineOrderer _Src) {
	_Stream << "defineOrderer{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab320340_liveTable _Src) {
	_Stream << "liveTable{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "fns:" << _Src._field_fns << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "traits:" << _Src._field_traits;
	_Stream << "}";
	return _Stream;
}



inline void _1ab3565b8_optimizeChild(jule::Ptr<_1ab3560e0_scopeDeadCode> _self_, jule::Ptr<_1aa8b25a3_Scope>* _3938_s) {
	jule::Ptr<_1ab3560e0_scopeDeadCode> _4017_sdc = jule::new_ptr<_1ab3560e0_scopeDeadCode>(_1ab3560e0_scopeDeadCode{._field_parent=_self_, ._field_s=(*(_3938_s)), ._field_stmts=(&((*(_3938_s)).get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_1ab358c08_optimizeStmts(_4017_sdc);
	};
}



inline void _1ab356860_optimizeBodyChildExceptional(jule::Ptr<_1ab3560e0_scopeDeadCode> _self_, jule::Ptr<_1aa8b25a3_Scope>* _5053_s) {
	jule::Ptr<_1ab3560e0_scopeDeadCode> _5117_sdc = jule::new_ptr<_1ab3560e0_scopeDeadCode>(_1ab3560e0_scopeDeadCode{._field_s=(*(_5053_s)), ._field_stmts=(&((*(_5053_s)).get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, ._field_except=true});;
	{
		_1ab358c08_optimizeStmts(_5117_sdc);
	};
}



inline void _1ab356ae6_optimizeBodyChild(jule::Ptr<_1ab3560e0_scopeDeadCode> _self_, jule::Ptr<_1aa8b25a3_Scope>* _6142_s) {
	jule::Ptr<_1ab3560e0_scopeDeadCode> _6217_sdc = jule::new_ptr<_1ab3560e0_scopeDeadCode>(_1ab3560e0_scopeDeadCode{._field_s=(*(_6142_s)), ._field_stmts=(&((*(_6142_s)).get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_1ab358c08_optimizeStmts(_6217_sdc);
	};
}



inline void _1ab356d6b_optimizeExprModel(jule::Ptr<_1ab3560e0_scopeDeadCode> _self_, jule::Any* _7142_model) {
	_1ab35a04a_exprDeadCode _7213_edc = static__1ab35a677_new(&(_self_));;
	_1ab361392_optimize(&_7213_edc, _7142_model);
}



inline void _1ab357047_eliminateFollowed(_1ab3560e0_scopeDeadCode* _self_) {
	if (((*((*(_self_))._field_gotos)).len() != 0LL)) {
		return;;
	};
	{
		(*((*(_self_))._field_stmts))=(*((*(_self_))._field_stmts)).slice(0LL, ((*(_self_))._field_i + 1LL));
	};
	jule::Ptr<_1ab3560e0_scopeDeadCode> _8317_parent = (*(_self_))._field_parent;;
	while ((_8317_parent != nullptr)) {
		{
			{
				(*(_8317_parent.get()._field_stmts))=(*(_8317_parent.get()._field_stmts)).slice(0LL, (_8317_parent.get()._field_i + 1LL));
			};
			_8317_parent=_8317_parent.get()._field_parent;
		}
	_iter_next_1bac0e6e2:;
	}
	_iter_end_1bac0e6e2:;;
}



inline void _1ab3572bc_pushGoto(jule::Ptr<_1ab3560e0_scopeDeadCode> _self_, jule::Ptr<_1aa8b50cd_GotoSt> _9232_gt) {
	jule::I64 _9317_i = 0LL;;
	for (; (_9317_i < (*(_self_.get()._field_labels)).len()); (_9317_i)++) {
		{
			if ((_9232_gt.get()._field_Ident == (*(_self_.get()._field_labels))[_9317_i].get()._field_Ident)) {
				return;;
			};
		}
	_iter_next_1bac120c9:;
	}
	_iter_end_1bac120c9:;;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_1aa8b50cd_GotoSt>>::make({_9232_gt}));
}



inline void _1ab357542_pushLabel(jule::Ptr<_1ab3560e0_scopeDeadCode> _self_, jule::Ptr<_1aa8b4ce2_Label> _10233_l) {
	jule::I64 _10317_i = 0LL;;
	while ((_10317_i < (*(_self_.get()._field_gotos)).len())) {
		{
			if ((_10233_l.get()._field_Ident == (*(_self_.get()._field_gotos))[_10317_i].get()._field_Ident)) {
				jule::copy(((*(_self_.get()._field_gotos)).slice(_10317_i)), ((*(_self_.get()._field_gotos)).slice((_10317_i + 1LL))));
				(*(_self_.get()._field_gotos))=(*(_self_.get()._field_gotos)).slice(0LL, ((*(_self_.get()._field_gotos)).len() - 1LL));
				goto _iter_next_1bac13839;
			};
			(_10317_i)++;
		}
	_iter_next_1bac13839:;
	}
	_iter_end_1bac13839:;;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_1aa8b4ce2_Label>>::make({_10233_l}));
}



inline void _1ab3577b7_optimizeRangeIter(jule::Ptr<_1ab3560e0_scopeDeadCode> _self_, jule::Ptr<_1aa8b4253_RangeIter> _11541_it) {
	_1ab356d6b_optimizeExprModel(_self_, &(_11541_it.get()._field_Expr.get()._field_Model));
	_1ab356ae6_optimizeBodyChild(_self_, &(_11541_it.get()._field_Scope));
}



inline void _1ab357a3c_optimizeWhileIter(jule::Ptr<_1ab3560e0_scopeDeadCode> _self_, jule::Ptr<_1aa8b386d_WhileIter> _12041_it) {
	_1ab356d6b_optimizeExprModel(_self_, &(_12041_it.get()._field_Expr));
	if ((_12041_it.get()._field_Next != nullptr)) {
		_1ab358a2c_optimizeStmt(_self_, _12041_it.get()._field_Next);
	};
	_1ab356ae6_optimizeBodyChild(_self_, &(_12041_it.get()._field_Scope));
}



inline void _1ab357cb2_optimizeInfIter(jule::Ptr<_1ab3560e0_scopeDeadCode> _self_, jule::Ptr<_1aa8b33ea_InfIter> _12839_it) {
	_1ab356ae6_optimizeBodyChild(_self_, &(_12839_it.get()._field_Scope));
}



inline void _1ab358037_optimizeConditional(jule::Ptr<_1ab3560e0_scopeDeadCode> _self_, jule::Ptr<_1aa8b310e_Conditional> _13243_c) {
	{
		auto expr = &(_13243_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bac19884:;
		if (it != expr_end) {
			jule::Ptr<_1aa8b299e_If> _13321_case = *it;
			{
				if ((_13321_case != nullptr)) {
					_1ab356d6b_optimizeExprModel(_self_, &(_13321_case.get()._field_Expr));
					_1ab356ae6_optimizeBodyChild(_self_, &(_13321_case.get()._field_Scope));
				};
			}
			_iter_next_1bac19884:;
			++it;
			goto _iter_begin_1bac19884;
		}
		_iter_end_1bac19884:;
	};
	if ((_13243_c.get()._field_Default != nullptr)) {
		if ((_13243_c.get()._field_Elifs.len() == 0LL)) {
			_1ab3565b8_optimizeChild(_self_, &(_13243_c.get()._field_Default.get()._field_Scope));
		} else {
			_1ab356ae6_optimizeBodyChild(_self_, &(_13243_c.get()._field_Default.get()._field_Scope));
		};
	};
}



inline void _1ab3582ac_optimizeMatch(jule::Ptr<_1ab3560e0_scopeDeadCode> _self_, jule::Ptr<_1aa8b63ba_Match> _15037_m) {
	{
		auto expr = &(_15037_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bac1c414:;
		if (it != expr_end) {
			jule::Ptr<_1aa8b6e15_Case> _15121_case = *it;
			{
				{
					auto expr = &(_15121_case.get()._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bac1cc2d:;
					if (it != expr_end) {
						jule::Ptr<_1aa957d85_Data> _15225_expr = *it;
						{
							_1ab356d6b_optimizeExprModel(_self_, &(_15225_expr.get()._field_Model));
						}
						_iter_next_1bac1cc2d:;
						++it;
						goto _iter_begin_1bac1cc2d;
					}
					_iter_end_1bac1cc2d:;
				};
				_1ab356ae6_optimizeBodyChild(_self_, &(_15121_case.get()._field_Scope));
			}
			_iter_next_1bac1c414:;
			++it;
			goto _iter_begin_1bac1c414;
		}
		_iter_end_1bac1c414:;
	};
	if ((_15037_m.get()._field_Default != nullptr)) {
		if ((_15037_m.get()._field_Cases.len() == 0LL)) {
			_1ab3565b8_optimizeChild(_self_, &(_15037_m.get()._field_Default.get()._field_Scope));
		} else {
			_1ab356ae6_optimizeBodyChild(_self_, &(_15037_m.get()._field_Default.get()._field_Scope));
		};
	};
}



inline void _1ab358532_optimizeAssign(jule::Ptr<_1ab3560e0_scopeDeadCode> _self_, jule::Ptr<_1aa8b5908_Assign> _16838_assign) {
	_1ab356d6b_optimizeExprModel(_self_, &(_16838_assign.get()._field_L.get()._field_Model));
	_1ab356d6b_optimizeExprModel(_self_, &(_16838_assign.get()._field_R.get()._field_Model));
}



inline void _1ab3587a7_optimizeMultiAssign(jule::Ptr<_1ab3560e0_scopeDeadCode> _self_, jule::Ptr<_1aa8b5cb0_MultiAssign> _17343_assign) {
	{
		auto expr = &(_17343_assign.get()._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bac210b6:;
		if (it != expr_end) {
			jule::Ptr<_1aa957d85_Data> _17421_l = *it;
			{
				if ((_17421_l != nullptr)) {
					_1ab356d6b_optimizeExprModel(_self_, &(_17421_l.get()._field_Model));
				};
			}
			_iter_next_1bac210b6:;
			++it;
			goto _iter_begin_1bac210b6;
		}
		_iter_end_1bac210b6:;
	};
	_1ab356d6b_optimizeExprModel(_self_, &(_17343_assign.get()._field_R));
}



inline void _1ab358a2c_optimizeStmt(jule::Ptr<_1ab3560e0_scopeDeadCode> _self_, jule::Any _18236_st) {
	{
		auto &_match_expr{ _18236_st };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1bac22749:;
			{
				jule::Ptr<_1aa8b25a3_Scope> _18521_scope = _18236_st.cast_ptr<_1aa8b25a3_Scope>(&__jule_any_type22);;
				if (_18521_scope.get()._field_Deferred) {
					_1ab358ee4_eliminateDeadCodeOfScope(_18521_scope);
				} else {
					_1ab3565b8_optimizeChild(_self_, &(_18521_scope));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1bac228c0:;
			{
				_1ab3577b7_optimizeRangeIter(_self_, _18236_st.cast_ptr<_1aa8b4253_RangeIter>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1bac22936:;
			{
				_1ab357a3c_optimizeWhileIter(_self_, _18236_st.cast_ptr<_1aa8b386d_WhileIter>(&__jule_any_type39));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1bac2299c:;
			{
				_1ab357cb2_optimizeInfIter(_self_, _18236_st.cast_ptr<_1aa8b33ea_InfIter>(&__jule_any_type37));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1bac22a24:;
			{
				_1ab358037_optimizeConditional(_self_, _18236_st.cast_ptr<_1aa8b310e_Conditional>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1bac22a9b:;
			{
				_1ab3582ac_optimizeMatch(_self_, _18236_st.cast_ptr<_1aa8b63ba_Match>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1bac22b23:;
			{
				_1ab358532_optimizeAssign(_self_, _18236_st.cast_ptr<_1aa8b5908_Assign>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1bac22b9a:;
			{
				_1ab3587a7_optimizeMultiAssign(_self_, _18236_st.cast_ptr<_1aa8b5cb0_MultiAssign>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1bac22c22:;
			{
				jule::Ptr<_1aa957d85_Data> _20621_d = _18236_st.cast_ptr<_1aa957d85_Data>(&__jule_any_type24);;
				if (_self_.get()._field_except) {
					goto _match_end_1bac22859;
				};
				{
					auto &_match_expr{ _20621_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type23 || _match_expr.type == &__jule_any_type30) {
						_case_begin_1bac273a8:;
						{
							_1ab357047_eliminateFollowed(_self_.ptr());
						}
					}
					else {
						_case_begin_1bac28354:;
						{
							_1ab356d6b_optimizeExprModel(_self_, &(_20621_d.get()._field_Model));
						}
					}
					_match_end_1bac282ee:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1bac22c99:;
			{
				_1ab357047_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1bac22d21:;
			{
				_1ab3572bc_pushGoto(_self_, _18236_st.cast_ptr<_1aa8b50cd_GotoSt>(&__jule_any_type43));
				_1ab357047_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1bac22d98:;
			{
				_1ab357542_pushLabel(_self_, _18236_st.cast_ptr<_1aa8b4ce2_Label>(&__jule_any_type21));
			}
		}
		_match_end_1bac22859:;
	};
}



inline void _1ab358c08_optimizeStmts(jule::Ptr<_1ab3560e0_scopeDeadCode> _self_) {
	_self_.get()._field_i=0LL;
	for (; (_self_.get()._field_i < (*(_self_.get()._field_stmts)).len()); (_self_.get()._field_i)++) {
		{
			_1ab358a2c_optimizeStmt(_self_, (*(_self_.get()._field_stmts))[_self_.get()._field_i]);
		}
	_iter_next_1bac2a774:;
	}
	_iter_end_1bac2a774:;;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab3560e0_scopeDeadCode _Src) {
	_Stream << "scopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "except:" << _Src._field_except;
	_Stream << "}";
	return _Stream;
}



inline _1ab35a04a_exprDeadCode static__1ab35a677_new(jule::Ptr<_1ab3560e0_scopeDeadCode>* _5024_s) {
	return _1ab35a04a_exprDeadCode{._field_s=(*(_5024_s))};;
}



inline void _1ab35a8ec_binary(_1ab35a04a_exprDeadCode* _self_, jule::Ptr<_1aa87b2a3_BinopExprModel> _5625_m) {
	_1ab361392_optimize(_self_, &(_5625_m.get()._field_Left.get()._field_Model));
	_1ab361392_optimize(_self_, &(_5625_m.get()._field_Right.get()._field_Model));
}



inline void _1ab35ab72_unary(_1ab35a04a_exprDeadCode* _self_, jule::Ptr<_1aa87b65a_UnaryExprModel> _6124_m) {
	_1ab361392_optimize(_self_, &(_6124_m.get()._field_Expr.get()._field_Model));
}



inline void _1ab35ade7_structureLit(_1ab35a04a_exprDeadCode* _self_, jule::Ptr<_1aa87be0d_StructLitExprModel> _6531_m) {
	{
		auto expr = &(_6531_m.get()._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bad8e289:;
		if (it != expr_end) {
			jule::Ptr<_1aa87ba56_StructArgExprModel> _6621_arg = *it;
			{
				_1ab361392_optimize(_self_, &(_6621_arg.get()._field_Expr));
			}
			_iter_next_1bad8e289:;
			++it;
			goto _iter_begin_1bad8e289;
		}
		_iter_end_1bad8e289:;
	};
}



inline void _1ab35b16c_allocStructure(_1ab35a04a_exprDeadCode* _self_, jule::Ptr<_1aa87c21b_AllocStructLitExprModel> _7133_m) {
	_1ab35ade7_structureLit(_self_, _7133_m.get()._field_Lit);
}



inline void _1ab35b3e2_casting(_1ab35a04a_exprDeadCode* _self_, jule::Ptr<_1aa87c76b_CastingExprModel> _7526_m) {
	_1ab361392_optimize(_self_, &(_7526_m.get()._field_Expr));
}



inline void _1ab35b667_args(_1ab35a04a_exprDeadCode* _self_, jule::Slice<jule::Any>* _7924_args) {
	{
		auto expr = _7924_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bad91478:;
		if (it != expr_end) {
			jule::Any _8021_arg = *it;
			{
				_1ab361392_optimize(_self_, &(_8021_arg));
			}
			_iter_next_1bad91478:;
			++it;
			goto _iter_begin_1bad91478;
		}
		_iter_end_1bad91478:;
	};
}



inline void _1ab35b8dc_funcCall(_1ab35a04a_exprDeadCode* _self_, jule::Ptr<_1aa87d11d_FnCallExprModel> _8527_m) {
	_1ab361392_optimize(_self_, &(_8527_m.get()._field_Expr));
	_1ab35b667_args(_self_, &(_8527_m.get()._field_Args));
	if ((_8527_m.get()._field_Except != nullptr)) {
		_1ab356860_optimizeBodyChildExceptional((*(_self_))._field_s, &(_8527_m.get()._field_Except));
	};
}



inline void _1ab35bb62_slice(_1ab35a04a_exprDeadCode* _self_, jule::Ptr<_1aa87d4c5_SliceExprModel> _9324_m) {
	_1ab35b667_args(_self_, &(_9324_m.get()._field_Elems));
}



inline void _1ab35bdd7_array(_1ab35a04a_exprDeadCode* _self_, jule::Ptr<_1aa8811ed_ArrayExprModel> _9724_m) {
	if (((_9724_m.get()._field_Elems.len() == 2LL) && (_9724_m.get()._field_Elems[1LL] == nullptr))) {
		_1ab361392_optimize(_self_, &(_9724_m.get()._field_Elems[0LL]));
	};
	_1ab35b667_args(_self_, &(_9724_m.get()._field_Elems));
}



inline void _1ab35c15c_indexing(_1ab35a04a_exprDeadCode* _self_, jule::Ptr<_1aa87d948_IndexingExprModel> _10427_m) {
	_1ab361392_optimize(_self_, &(_10427_m.get()._field_Expr.get()._field_Model));
	_1ab361392_optimize(_self_, &(_10427_m.get()._field_Index.get()._field_Model));
}



inline void _1ab35c3d2_anonFunc(_1ab35a04a_exprDeadCode* _self_, jule::Ptr<_1aa87dd00_AnonFnExprModel> _10927_m) {
	_1ab358ee4_eliminateDeadCodeOfScope(_10927_m.get()._field_Func.get()._field_Scope);
}



inline void _1ab35c657_mapExpr(_1ab35a04a_exprDeadCode* _self_, jule::Ptr<_1aa87e62a_MapExprModel> _11326_m) {
	{
		auto expr = &(_11326_m.get()._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bad97270:;
		if (it != expr_end) {
			jule::Ptr<_1aa87e1a7_KeyValPairExprModel> _11421_pair = *it;
			{
				_1ab361392_optimize(_self_, &(_11421_pair.get()._field_Key));
				_1ab361392_optimize(_self_, &(_11421_pair.get()._field_Val));
			}
			_iter_next_1bad97270:;
			++it;
			goto _iter_begin_1bad97270;
		}
		_iter_end_1bad97270:;
	};
}



inline void _1ab35c8cc_slicing(_1ab35a04a_exprDeadCode* _self_, jule::Ptr<_1aa87eb69_SlicingExprModel> _12026_m) {
	_1ab361392_optimize(_self_, &(_12026_m.get()._field_Expr));
	_1ab361392_optimize(_self_, &(_12026_m.get()._field_Left));
	if ((_12026_m.get()._field_Right != nullptr)) {
		_1ab361392_optimize(_self_, &(_12026_m.get()._field_Right));
	};
}



inline void _1ab35cb52_traitSub(_1ab35a04a_exprDeadCode* _self_, jule::Ptr<_1aa8801a8_TraitSubIdentExprModel> _12827_m) {
	_1ab361392_optimize(_self_, &(_12827_m.get()._field_Expr));
}



inline void _1ab35cdc7_structureSub(_1ab35a04a_exprDeadCode* _self_, jule::Ptr<_1aa88098e_StructSubIdentExprModel> _13231_m) {
	_1ab361392_optimize(_self_, &(_13231_m.get()._field_Expr.get()._field_Model));
}



inline void _1ab35d14c_commonSub(_1ab35a04a_exprDeadCode* _self_, jule::Ptr<_1aa881a4a_CommonSubIdentExprModel> _13628_m) {
	_1ab361392_optimize(_self_, &(_13628_m.get()._field_Expr));
}



inline void _1ab35d3c2_tuple(_1ab35a04a_exprDeadCode* _self_, jule::Ptr<_1aa881d47_TupleExprModel> _14024_m) {
	{
		auto expr = &(_14024_m.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bad9b61a:;
		if (it != expr_end) {
			jule::Ptr<_1aa957d85_Data> _14121_d = *it;
			{
				_1ab361392_optimize(_self_, &(_14121_d.get()._field_Model));
			}
			_iter_next_1bad9b61a:;
			++it;
			goto _iter_begin_1bad9b61a;
		}
		_iter_end_1bad9b61a:;
	};
}



inline void _1ab35d647_newCall(_1ab35a04a_exprDeadCode* _self_, jule::Ptr<_1aa882d15_BuiltinNewCallExprModel> _14626_m) {
	if ((_14626_m.get()._field_Init != nullptr)) {
		_1ab361392_optimize(_self_, &(_14626_m.get()._field_Init));
	};
}



inline void _1ab35d8bc_outCall(_1ab35a04a_exprDeadCode* _self_, jule::Ptr<_1aa882221_BuiltinOutCallExprModel> _15226_m) {
	_1ab361392_optimize(_self_, &(_15226_m.get()._field_Expr));
}



inline void _1ab35db42_outlnCall(_1ab35a04a_exprDeadCode* _self_, jule::Ptr<_1aa88260b_BuiltinOutlnCallExprModel> _15628_m) {
	_1ab361392_optimize(_self_, &(_15628_m.get()._field_Expr));
}



inline void _1ab35ddb7_panicCall(_1ab35a04a_exprDeadCode* _self_, jule::Ptr<_1aa883200_BuiltinPanicCallExprModel> _16028_m) {
	_1ab361392_optimize(_self_, &(_16028_m.get()._field_Expr));
}



inline void _1ab35e13c_assertCall(_1ab35a04a_exprDeadCode* _self_, jule::Ptr<_1aa8836a6_BuiltinAssertCallExprModel> _16429_m) {
	_1ab361392_optimize(_self_, &(_16429_m.get()._field_Expr));
}



inline void _1ab35e3b2_errorCall(_1ab35a04a_exprDeadCode* _self_, jule::Ptr<_1aa885587_BuiltinErrorCallExprModel> _16828_m) {
	_1ab361392_optimize(_self_, &(_16828_m.get()._field_Err.get()._field_Model));
}



inline void _1ab35e637_makeCall(_1ab35a04a_exprDeadCode* _self_, jule::Ptr<_1aa883b5c_BuiltinMakeCallExprModel> _17227_m) {
	if ((_17227_m.get()._field_Len != nullptr)) {
		_1ab361392_optimize(_self_, &(_17227_m.get()._field_Len));
	};
	if ((_17227_m.get()._field_Cap != nullptr)) {
		_1ab361392_optimize(_self_, &(_17227_m.get()._field_Cap));
	};
}



inline void _1ab35e8ac_appendCall(_1ab35a04a_exprDeadCode* _self_, jule::Ptr<_1aa884047_BuiltinAppendCallExprModel> _18129_m) {
	_1ab361392_optimize(_self_, &(_18129_m.get()._field_Dest));
	_1ab361392_optimize(_self_, &(_18129_m.get()._field_Elements));
}



inline void _1ab35eb32_lenCall(_1ab35a04a_exprDeadCode* _self_, jule::Ptr<_1aa884366_BuiltinLenCallExprModel> _18626_m) {
	_1ab361392_optimize(_self_, &(_18626_m.get()._field_Expr.get()._field_Model));
}



inline void _1ab35eda7_capCall(_1ab35a04a_exprDeadCode* _self_, jule::Ptr<_1aa884685_BuiltinCapCallExprModel> _19026_m) {
	_1ab361392_optimize(_self_, &(_19026_m.get()._field_Expr.get()._field_Model));
}



inline void _1ab36012c_cloneCall(_1ab35a04a_exprDeadCode* _self_, jule::Ptr<_1aa88292a_BuiltinCloneCallExprModel> _19428_m) {
	_1ab361392_optimize(_self_, &(_19428_m.get()._field_Expr));
}



inline void _1ab3603a2_deleteCall(_1ab35a04a_exprDeadCode* _self_, jule::Ptr<_1aa884d39_BuiltinDeleteCallExprModel> _19829_m) {
	_1ab361392_optimize(_self_, &(_19829_m.get()._field_Dest.get()._field_Model));
	if ((_19829_m.get()._field_Key != nullptr)) {
		_1ab361392_optimize(_self_, &(_19829_m.get()._field_Key.get()._field_Model));
	};
}



inline void _1ab360627_sizeof(_1ab35a04a_exprDeadCode* _self_, jule::Ptr<_1aa885884_SizeofExprModel> _20525_m) {
	_1ab361392_optimize(_self_, &(_20525_m.get()._field_Expr));
}



inline void _1ab36089c_alignof(_1ab35a04a_exprDeadCode* _self_, jule::Ptr<_1aa885b70_AlignofExprModel> _20926_m) {
	_1ab361392_optimize(_self_, &(_20926_m.get()._field_Expr));
}



inline void _1ab360b22_integratedToStr(_1ab35a04a_exprDeadCode* _self_, jule::Ptr<_1aa886269_IntegratedToStrExprModel> _21334_m) {
	_1ab361392_optimize(_self_, &(_21334_m.get()._field_Expr));
}



inline void _1ab360d97_free(_1ab35a04a_exprDeadCode* _self_, jule::Ptr<_1aa88691d_FreeExprModel> _21723_m) {
	_1ab361392_optimize(_self_, &(_21723_m.get()._field_Expr));
}



inline void _1ab36111c_backendEmit(_1ab35a04a_exprDeadCode* _self_, jule::Ptr<_1aa886632_BackendEmitExprModel> _22130_m) {
	_1ab35b667_args(_self_, &(_22130_m.get()._field_Exprs));
}



inline void _1ab361392_optimize(_1ab35a04a_exprDeadCode* _self_, jule::Any* _22528_model) {
	{
		auto &_match_expr{ (*(_22528_model)) };
		
		if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1bada8d64:;
			{
				_1ab35a8ec_binary(_self_, (*(_22528_model)).cast_ptr<_1aa87b2a3_BinopExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1bada8ddb:;
			{
				_1ab35ab72_unary(_self_, (*(_22528_model)).cast_ptr<_1aa87b65a_UnaryExprModel>(&__jule_any_type74));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1bada8e63:;
			{
				_1ab35ade7_structureLit(_self_, (*(_22528_model)).cast_ptr<_1aa87be0d_StructLitExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1bada933c:;
			{
				_1ab35b16c_allocStructure(_self_, (*(_22528_model)).cast_ptr<_1aa87c21b_AllocStructLitExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1bada93a3:;
			{
				_1ab35b3e2_casting(_self_, (*(_22528_model)).cast_ptr<_1aa87c76b_CastingExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1bada942a:;
			{
				_1ab35b8dc_funcCall(_self_, (*(_22528_model)).cast_ptr<_1aa87d11d_FnCallExprModel>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1bada94a2:;
			{
				_1ab35bb62_slice(_self_, (*(_22528_model)).cast_ptr<_1aa87d4c5_SliceExprModel>(&__jule_any_type82));
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1bada9529:;
			{
				_1ab35bdd7_array(_self_, (*(_22528_model)).cast_ptr<_1aa8811ed_ArrayExprModel>(&__jule_any_type90));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1bada95a1:;
			{
				_1ab35c15c_indexing(_self_, (*(_22528_model)).cast_ptr<_1aa87d948_IndexingExprModel>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1bada9628:;
			{
				_1ab35c3d2_anonFunc(_self_, (*(_22528_model)).cast_ptr<_1aa87dd00_AnonFnExprModel>(&__jule_any_type103));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1bada96a0:;
			{
				_1ab35c657_mapExpr(_self_, (*(_22528_model)).cast_ptr<_1aa87e62a_MapExprModel>(&__jule_any_type102));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1bada9727:;
			{
				_1ab35c8cc_slicing(_self_, (*(_22528_model)).cast_ptr<_1aa87eb69_SlicingExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1bada979e:;
			{
				_1ab35cb52_traitSub(_self_, (*(_22528_model)).cast_ptr<_1aa8801a8_TraitSubIdentExprModel>(&__jule_any_type70));
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1bada9826:;
			{
				_1ab35cdc7_structureSub(_self_, (*(_22528_model)).cast_ptr<_1aa88098e_StructSubIdentExprModel>(&__jule_any_type71));
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1bada989d:;
			{
				_1ab35d14c_commonSub(_self_, (*(_22528_model)).cast_ptr<_1aa881a4a_CommonSubIdentExprModel>(&__jule_any_type73));
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1bada9925:;
			{
				_1ab35d3c2_tuple(_self_, (*(_22528_model)).cast_ptr<_1aa881d47_TupleExprModel>(&__jule_any_type87));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1bada999c:;
			{
				_1ab35d8bc_outCall(_self_, (*(_22528_model)).cast_ptr<_1aa882221_BuiltinOutCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1bada9a24:;
			{
				_1ab35db42_outlnCall(_self_, (*(_22528_model)).cast_ptr<_1aa88260b_BuiltinOutlnCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1bada9a9b:;
			{
				_1ab35d647_newCall(_self_, (*(_22528_model)).cast_ptr<_1aa882d15_BuiltinNewCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1bada9b23:;
			{
				_1ab35ddb7_panicCall(_self_, (*(_22528_model)).cast_ptr<_1aa883200_BuiltinPanicCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1bada9b9a:;
			{
				_1ab35e13c_assertCall(_self_, (*(_22528_model)).cast_ptr<_1aa8836a6_BuiltinAssertCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1bada9c22:;
			{
				_1ab35e3b2_errorCall(_self_, (*(_22528_model)).cast_ptr<_1aa885587_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1bada9c99:;
			{
				_1ab35e637_makeCall(_self_, (*(_22528_model)).cast_ptr<_1aa883b5c_BuiltinMakeCallExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1bada9d21:;
			{
				_1ab35e8ac_appendCall(_self_, (*(_22528_model)).cast_ptr<_1aa884047_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1bada9d98:;
			{
				_1ab35eb32_lenCall(_self_, (*(_22528_model)).cast_ptr<_1aa884366_BuiltinLenCallExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1bada9e20:;
			{
				_1ab35eda7_capCall(_self_, (*(_22528_model)).cast_ptr<_1aa884685_BuiltinCapCallExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1bada9e97:;
			{
				_1ab36012c_cloneCall(_self_, (*(_22528_model)).cast_ptr<_1aa88292a_BuiltinCloneCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1badaa01e:;
			{
				_1ab3603a2_deleteCall(_self_, (*(_22528_model)).cast_ptr<_1aa884d39_BuiltinDeleteCallExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1badaa096:;
			{
				_1ab360627_sizeof(_self_, (*(_22528_model)).cast_ptr<_1aa885884_SizeofExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1badaa11d:;
			{
				_1ab36089c_alignof(_self_, (*(_22528_model)).cast_ptr<_1aa885b70_AlignofExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1badaa195:;
			{
				_1ab360b22_integratedToStr(_self_, (*(_22528_model)).cast_ptr<_1aa886269_IntegratedToStrExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1badaa21c:;
			{
				_1ab360d97_free(_self_, (*(_22528_model)).cast_ptr<_1aa88691d_FreeExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1badaa294:;
			{
				_1ab36111c_backendEmit(_self_, (*(_22528_model)).cast_ptr<_1aa886632_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		_match_end_1bada9062:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1ab35a04a_exprDeadCode _Src) {
	_Stream << "exprDeadCode{";
	_Stream << "s:" << _Src._field_s;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa2bb331_StrCompExprModel _Src) {
	_Stream << "StrCompExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "NotEq:" << _Src._field_NotEq;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa2bb6e9_StrAppendExprModel _Src) {
	_Stream << "StrAppendExprModel{";
	_Stream << "Str:" << _Src._field_Str << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa2bb9d5_UnsafeBinopExprModel _Src) {
	_Stream << "UnsafeBinopExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa2bbd6a_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa2bc200_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa2bc73e_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa2bcb18_StrInsertBeginExprModel _Src) {
	_Stream << "StrInsertBeginExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aa2bdd28_scopeOptimizer> static__1aa2be389_new(jule::Ptr<_1aa8b25a3_Scope> _4623_scope) {
	return jule::new_ptr<_1aa2bdd28_scopeOptimizer>(_1aa2bdd28_scopeOptimizer{._field_scope=_4623_scope});;
}



inline void _1aa2be60e_setCurrentStmt(_1aa2bdd28_scopeOptimizer* _self_, jule::Any _5237_stmt) {
	(*(_self_))._field_scope.get()._field_Stmts[(*(_self_))._field_i]=(*(((jule::Any*)((&(_5237_stmt))))));
}



inline void _1aa2be884_optimizeData(_1aa2bdd28_scopeOptimizer* _self_, jule::Ptr<_1aa957d85_Data> _5635_d) {
	{
		auto &_match_expr{ _5635_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1bade692e:;
			{
				jule::Ptr<_1aa87d11d_FnCallExprModel> _5921_m = _5635_d.get()._field_Model.cast_ptr<_1aa87d11d_FnCallExprModel>(&__jule_any_type35);;
				if (_202bb24e8_Production) {
					if (((!(_1aa88d45d_IsBuiltin(_5921_m.get()._field_Func.ptr()))) && _1aa2c29ec_isStdPackage(_5921_m.get()._field_Func.get()._field_Decl.get()._field_Token.get()._field_File.get()._field_Path, jule::Str("debug", 5)))) {
						_1aa2be60e_setCurrentStmt(_self_, nullptr);
						return;;
					};
				};
			}
		}
		_match_end_1bade6720:;
	};
	static__1aa2c4c52_optimize(&(_5635_d.get()._field_Model));
}



inline void _1aa2beb09_optimizeVar(_1aa2bdd28_scopeOptimizer* _self_, jule::Ptr<_1aa908c59_Var> _7134_v) {
	if ((_7134_v.get()._field_Value != nullptr)) {
		static__1aa2c4c52_optimize(&(_7134_v.get()._field_Value.get()._field_Data.get()._field_Model));
	};
}



inline void _1aa2bed7e_optimizeConditional(_1aa2bdd28_scopeOptimizer* _self_, jule::Ptr<_1aa8b310e_Conditional> _7742_c) {
	{
		auto expr = &(_7742_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bade9910:;
		if (it != expr_end) {
			jule::Ptr<_1aa8b299e_If> _7821_elif = *it;
			{
				static__1aa2c4c52_optimize(&(_7821_elif.get()._field_Expr));
				_1aa2c2425_optimizeChild(_self_, _7821_elif.get()._field_Scope);
			}
			_iter_next_1bade9910:;
			++it;
			goto _iter_begin_1bade9910;
		}
		_iter_end_1bade9910:;
	};
	if ((_7742_c.get()._field_Default != nullptr)) {
		_1aa2c2425_optimizeChild(_self_, _7742_c.get()._field_Default.get()._field_Scope);
	};
	if ((!(_1aa2cd1ab_Cond))) {
		return;;
	};
	jule::Bool _9017_constCase = false;;
	{
		auto expr = &(_7742_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1badeb714:;
		if (it != expr_end) {
			jule::I64 _9314_i = it - expr->begin();
			jule::Ptr<_1aa8b299e_If> _9321_elif = *it;
			{
				if ((!(_1aa2c2d0a_isConstantValidConditionalCase(&(_9321_elif))))) {
					goto _iter_next_1badeb714;
				};
				_9017_constCase=true;
				_7742_c.get()._field_Elifs=_7742_c.get()._field_Elifs.slice(0LL, _9314_i);
				_7742_c.get()._field_Default=jule::new_ptr<_1aa8b2c8a_Else>(_1aa8b2c8a_Else{._field_Scope=_9321_elif.get()._field_Scope});
				goto _iter_end_1badeb714;
			}
			_iter_next_1badeb714:;
			++it;
			_9314_i++;
			goto _iter_begin_1badeb714;
		}
		_iter_end_1badeb714:;
	};
	if ((_7742_c.get()._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1aa8b299e_If>* _11017_i = (&(_7742_c.get()._field_Elifs[0LL]));;
	jule::Ptr<_1aa8b299e_If>* _11113_end = (&(_7742_c.get()._field_Elifs[(_7742_c.get()._field_Elifs.len() - 1LL)]));;
	for (; (_11017_i <= _11113_end); (_11017_i)++) {
		{
			{
				if (_1aa2c369b_isUnreachableConditionalCase(&((*(_11017_i))))) {
					(*(_11017_i))=nullptr;
				};
			};
		}
	_iter_next_1badee87c:;
	}
	_iter_end_1badee87c:;;
	if ((_7742_c.get()._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_9017_constCase))) {
		return;;
	};
	jule::I64 _12917_only = -1LL;;
	{
		auto expr = &(_7742_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bae00ecc:;
		if (it != expr_end) {
			jule::I64 _13013_j = it - expr->begin();
			jule::Ptr<_1aa8b299e_If> _13016_elif = *it;
			{
				if ((_13016_elif != nullptr)) {
					if ((_12917_only != -1LL)) {
						return;;
					};
					_12917_only=_13013_j;
				};
			}
			_iter_next_1bae00ecc:;
			++it;
			_13013_j++;
			goto _iter_begin_1bae00ecc;
		}
		_iter_end_1bae00ecc:;
	};
	if ((_12917_only != -1LL)) {
		_1aa2be60e_setCurrentStmt(_self_, jule::Any(_7742_c.get()._field_Elifs[_12917_only].get()._field_Scope, &__jule_any_type22));
	};
}



inline void _1aa2c0269_buildDefaultConstatTrueCase(_1aa2bdd28_scopeOptimizer* _self_, jule::Ptr<_1aa8b6e15_Case> _14650_case, jule::I64* _14668_i, jule::Ptr<_1aa8b63ba_Match>* _14681_m) {
	_14650_case.get()._field_Exprs=nullptr;
	jule::I64 _14813_start = (*(_14668_i));;
	_julec_label_loop:;
	for (;;) {
		{
			if ((_14650_case.get()._field_Scope.get()._field_Stmts.len() == 0LL)) {
				goto _iter_end_1bae0394c;
			};
			jule::Any *_15422_stmt = &(_14650_case.get()._field_Scope.get()._field_Stmts[(_14650_case.get()._field_Scope.get()._field_Stmts.len() - 1LL)]);;
			{
				auto &_match_expr{ (*(_15422_stmt)) };
				
				if (_match_expr.type == &__jule_any_type49) {
					_case_begin_1bae03e58:;
					{
						((*(_14668_i)))++;
						if (((*(_14668_i)) >= (*(_14681_m)).get()._field_Cases.len())) {
							(*(_15422_stmt))=jule::Any((*(_14681_m)).get()._field_Default.get()._field_Scope, &__jule_any_type22);
							goto _iter_end_1bae0394c;
						};
						_14650_case=(*(_14681_m)).get()._field_Cases[(*(_14668_i))];
						(*(_15422_stmt))=jule::Any(_14650_case.get()._field_Scope, &__jule_any_type22);
					}
				}
				else {
					_case_begin_1bae05487:;
					{
						goto _iter_end_1bae0394c;
					}
				}
				_match_end_1bae05399:;
			};
		}
	_iter_next_1bae0394c:;
	}
	_iter_end_1bae0394c:;;
	(*(_14681_m)).get()._field_Default=(*(_14681_m)).get()._field_Cases[_14813_start];
	(*(_14681_m)).get()._field_Cases=(*(_14681_m)).get()._field_Cases.slice(0LL, _14813_start);
}



inline void _1aa2c0478_optimizeMatch(_1aa2bdd28_scopeOptimizer* _self_, jule::Ptr<_1aa8b63ba_Match> _17236_m) {
	{
		auto expr = &(_17236_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bae074bc:;
		if (it != expr_end) {
			jule::Ptr<_1aa8b6e15_Case> _17321_case = *it;
			{
				{
					auto expr = &(_17321_case.get()._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bae07d08:;
					if (it != expr_end) {
						jule::Ptr<_1aa957d85_Data> _17425_expr = *it;
						{
							static__1aa2c4c52_optimize(&(_17425_expr.get()._field_Model));
						}
						_iter_next_1bae07d08:;
						++it;
						goto _iter_begin_1bae07d08;
					}
					_iter_end_1bae07d08:;
				};
				_1aa2c2425_optimizeChild(_self_, _17321_case.get()._field_Scope);
			}
			_iter_next_1bae074bc:;
			++it;
			goto _iter_begin_1bae074bc;
		}
		_iter_end_1bae074bc:;
	};
	if ((_17236_m.get()._field_Default != nullptr)) {
		_1aa2c2425_optimizeChild(_self_, _17236_m.get()._field_Default.get()._field_Scope);
	};
	if ((!(_1aa2cd1ab_Cond))) {
		return;;
	};
	jule::Bool _18717_constCase = false;;
	{
		auto expr = &(_17236_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bae0990e:;
		if (it != expr_end) {
			jule::I64 _19018_i = it - expr->begin();
			jule::Ptr<_1aa8b6e15_Case> _19025_case = *it;
			{
				if ((!(_1aa2c3404_isConstantValidMatchCase(&(_19025_case))))) {
					goto _iter_next_1bae0990e;
				};
				_18717_constCase=true;
				_1aa2c0269_buildDefaultConstatTrueCase(_self_, _19025_case, &(_19018_i), &(_17236_m));
				goto _iter_end_1bae0990e;
			}
			_iter_next_1bae0990e:;
			++it;
			_19018_i++;
			goto _iter_begin_1bae0990e;
		}
		_iter_end_1bae0990e:;
	};
	if ((_17236_m.get()._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1aa8b6e15_Case>* _20417_i = (&(_17236_m.get()._field_Cases[0LL]));;
	jule::Ptr<_1aa8b6e15_Case>* _20513_end = (&(_17236_m.get()._field_Cases[(_17236_m.get()._field_Cases.len() - 1LL)]));;
	for (; (_20417_i <= _20513_end); (_20417_i)++) {
		{
			{
				if (_1aa2c3954_isUnreachableMatchCase(&((*(_20417_i))))) {
					(*(_20417_i))=nullptr;
				};
			};
		}
	_iter_next_1bae0c5b0:;
	}
	_iter_end_1bae0c5b0:;;
	if ((!(_18717_constCase))) {
		return;;
	};
	jule::I64 _21917_only = -1LL;;
	{
		auto expr = &(_17236_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bae0d66b:;
		if (it != expr_end) {
			jule::I64 _22013_j = it - expr->begin();
			jule::Ptr<_1aa8b6e15_Case> _22016_case = *it;
			{
				if ((_22016_case != nullptr)) {
					if ((_21917_only != -1LL)) {
						return;;
					};
					_21917_only=_22013_j;
				};
			}
			_iter_next_1bae0d66b:;
			++it;
			_22013_j++;
			goto _iter_begin_1bae0d66b;
		}
		_iter_end_1bae0d66b:;
	};
	if ((_21917_only != -1LL)) {
		_1aa2be60e_setCurrentStmt(_self_, jule::Any(_17236_m.get()._field_Cases[_21917_only].get()._field_Scope, &__jule_any_type22));
	};
}



inline void _1aa2c06ed_optimizeRangeIter(_1aa2bdd28_scopeOptimizer* _self_, jule::Ptr<_1aa8b4253_RangeIter> _23640_it) {
	static__1aa2c4c52_optimize(&(_23640_it.get()._field_Expr.get()._field_Model));
	_1aa2c2425_optimizeChild(_self_, _23640_it.get()._field_Scope);
}



inline void _1aa2c0973_optimizeWhileIter(_1aa2bdd28_scopeOptimizer* _self_, jule::Ptr<_1aa8b386d_WhileIter> _24140_it) {
	static__1aa2c4c52_optimize(&(_24140_it.get()._field_Expr));
	_1aa2c21a0_optimizeStmt(_self_, _24140_it.get()._field_Next);
	_1aa2c2425_optimizeChild(_self_, _24140_it.get()._field_Scope);
}



inline jule::Bool _1aa2c0c81_substr(_1aa2bdd28_scopeOptimizer* _self_, jule::Ptr<_1aa8b5908_Assign> _24729_a) {
	if ((!_24729_a.get()._field_Op.get()._field_Kind.equal("=", 1))) {
		return false;;
	};
	{
		auto &_match_expr{ _24729_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1bae12cbe:;
			{
				jule::Ptr<_1aa87eb69_SlicingExprModel> _25321_sem = _24729_a.get()._field_R.get()._field_Model.cast_ptr<_1aa87eb69_SlicingExprModel>(&__jule_any_type97);;
				if ((_25321_sem.get()._field_Expr == _24729_a.get()._field_L.get()._field_Model)) {
					_1aa2be60e_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1aa2bc73e_MutSlicingExprModel>(_1aa2bc73e_MutSlicingExprModel{._field_Token=_25321_sem.get()._field_Token, ._field_Expr=_25321_sem.get()._field_Expr, ._field_Left=_25321_sem.get()._field_Left, ._field_Right=_25321_sem.get()._field_Right}), &__jule_any_type123));
					return true;;
				};
			}
		}
		_match_end_1bae12c47:;
	};
	return false;;
}



inline jule::Bool _1aa2c108e_strInsert(_1aa2bdd28_scopeOptimizer* _self_, jule::Ptr<_1aa8b5908_Assign> _26732_a) {
	if ((!_26732_a.get()._field_Op.get()._field_Kind.equal("=", 1))) {
		return false;;
	};
	{
		auto &_match_expr{ _26732_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1bae1570b:;
			{
				jule::Ptr<_1aa87b2a3_BinopExprModel> _27321_m = _26732_a.get()._field_R.get()._field_Model.cast_ptr<_1aa87b2a3_BinopExprModel>(&__jule_any_type114);;
				if ((_27321_m.get()._field_Right.get()._field_Model == _26732_a.get()._field_L.get()._field_Model)) {
					_1aa2be60e_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1aa2bcb18_StrInsertBeginExprModel>(_1aa2bcb18_StrInsertBeginExprModel{._field_Dest=_26732_a.get()._field_L.get()._field_Model, ._field_Expr=_27321_m.get()._field_Left.get()._field_Model}), &__jule_any_type124));
					return true;;
				};
			}
		}
		_match_end_1bae15684:;
	};
	return false;;
}



inline jule::Bool _1aa2c139c_strAppend(_1aa2bdd28_scopeOptimizer* _self_, jule::Ptr<_1aa8b5908_Assign> _28532_a) {
	if ((!_28532_a.get()._field_Op.get()._field_Kind.equal("+=", 2))) {
		return false;;
	};
	{
		auto &_match_expr{ _28532_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1bae18148:;
			{
				_1aa2be60e_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1aa2bb6e9_StrAppendExprModel>(_1aa2bb6e9_StrAppendExprModel{._field_Str=_28532_a.get()._field_L.get()._field_Model, ._field_Expr=_28532_a.get()._field_R.get()._field_Model}), &__jule_any_type125));
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1bae181ae:;
			{
				jule::Ptr<_1aa87c76b_CastingExprModel> _30021_c = _28532_a.get()._field_R.get()._field_Model.cast_ptr<_1aa87c76b_CastingExprModel>(&__jule_any_type98);;
				jule::Ptr<_1aa989339_Prim> _30121_prim = _1aa985c5e_Prim(_30021_c.get()._field_ExprKind.ptr());;
				if (((_30121_prim == nullptr) && (_1aa986bd8_Slc(_30021_c.get()._field_ExprKind.ptr()) != nullptr))) {
					_30121_prim=_1aa985c5e_Prim(_1aa986bd8_Slc(_30021_c.get()._field_ExprKind.ptr()).get()._field_Elem.ptr());
				};
				if (((_30121_prim == nullptr) || ((!(_1aa98ab43_IsU8(_30121_prim.ptr()))) && (!(_1aa98a66a_IsI32(_30121_prim.ptr())))))) {
					goto _match_end_1bae180c1;
				};
				_1aa2be60e_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1aa2bb6e9_StrAppendExprModel>(_1aa2bb6e9_StrAppendExprModel{._field_Str=_28532_a.get()._field_L.get()._field_Model, ._field_Expr=_30021_c.get()._field_Expr}), &__jule_any_type125));
				return true;;
			}
		}
		_match_end_1bae180c1:;
	};
	return false;;
}



inline jule::Bool _1aa2c16aa_strAssign(_1aa2bdd28_scopeOptimizer* _self_, jule::Ptr<_1aa8b5908_Assign> _31732_a) {
	if ((!(_1aa2cd475_Str))) {
		return false;;
	};
	jule::Ptr<_1aa989339_Prim> _32113_lp = _1aa985c5e_Prim(_31732_a.get()._field_L.get()._field_Kind.ptr());;
	if (((_32113_lp == nullptr) || (!(_1aa98c56d_IsStr(_32113_lp.ptr()))))) {
		return false;;
	};
	{
		
		if (_1aa2c0c81_substr(_self_, _31732_a) || _1aa2c108e_strInsert(_self_, _31732_a) || _1aa2c139c_strAppend(_self_, _31732_a)) {
			_case_begin_1bae1dd1e:;
			{
				return true;;
			}
		}
		_match_end_1bae1dc75:;
	};
	return false;;
}



inline void _1aa2c1930_optimizeAssign(_1aa2bdd28_scopeOptimizer* _self_, jule::Ptr<_1aa8b5908_Assign> _33437_assign) {
	if (_1aa2c16aa_strAssign(_self_, _33437_assign)) {
		return;;
	};
	static__1aa2c4c52_optimize(&(_33437_assign.get()._field_L.get()._field_Model));
	static__1aa2c4c52_optimize(&(_33437_assign.get()._field_R.get()._field_Model));
	{
		auto &_match_expr{ _33437_assign.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/=", 2) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1bae20d10:;
			{
				if ((_1aa2cc485_Math && (_1aa9871b1_Struct(_33437_assign.get()._field_L.get()._field_Kind.ptr()) == nullptr))) {
					_33437_assign.get()._field_Op.get()._field_Kind=_33437_assign.get()._field_Op.get()._field_Kind.slice(0LL, (_33437_assign.get()._field_Op.get()._field_Kind.len() - 1LL));
					jule::Any _34725_model = jule::Any(jule::new_ptr<_1aa87b2a3_BinopExprModel>(_1aa87b2a3_BinopExprModel{._field_Left=_33437_assign.get()._field_L, ._field_Right=_33437_assign.get()._field_R, ._field_Op=_33437_assign.get()._field_Op}), &__jule_any_type114);;
					static__1aa2c4c52_optimize(&(_34725_model));
					{
						auto &_match_expr{ _34725_model };
						
						if (_match_expr.type == &__jule_any_type114) {
							_case_begin_1bae231ca:;
							{
								_33437_assign.get()._field_R=jule::new_ptr<_1aa87acdb_OperandExprModel>((*(_33437_assign.get()._field_R)));
								_33437_assign.get()._field_Op.get()._field_Kind=jule::Str("=", 1);
								_33437_assign.get()._field_R.get()._field_Model=_34725_model;
								return;;
							}
						}
						_match_end_1bae22e77:;
					};
					(_33437_assign.get()._field_Op.get()._field_Kind).append("=", 1);
					return;;
				};
			}
		}
		_match_end_1bae20c00:;
	};
	if (_1aa2cc177_Append) {
		{
			auto &_match_expr{ _33437_assign.get()._field_R.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type26) {
				_case_begin_1bae24c6a:;
				{
					jule::Ptr<_1aa884047_BuiltinAppendCallExprModel> _36825_m = _33437_assign.get()._field_R.get()._field_Model.cast_ptr<_1aa884047_BuiltinAppendCallExprModel>(&__jule_any_type26);;
					{
						auto &_match_expr{ _36825_m.get()._field_Elements };
						
						if (_match_expr.type == &__jule_any_type82) {
							_case_begin_1bae25cd2:;
							{
								{
									auto &_match_expr{ _36825_m.get()._field_Dest };
									
									if (_match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type71) {
										_case_begin_1bae26563:;
										{
											_1aa2be60e_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1aa2bc200_PushToSliceExprModel>(_1aa2bc200_PushToSliceExprModel{._field_Dest=_36825_m.get()._field_Dest, ._field_Elems=_36825_m.get()._field_Elements.cast_ptr<_1aa87d4c5_SliceExprModel>(&__jule_any_type82)}), &__jule_any_type126));
										}
									}
									_match_end_1bae2650d:;
								};
							}
						}
						_match_end_1bae25ac3:;
					};
				}
			}
			_match_end_1bae218e3:;
		};
	};
}



inline void _1aa2c1ba5_optimizeMultiAssign(_1aa2bdd28_scopeOptimizer* _self_, jule::Ptr<_1aa8b5cb0_MultiAssign> _38442_assign) {
	{
		auto expr = &(_38442_assign.get()._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bae25177:;
		if (it != expr_end) {
			jule::Ptr<_1aa957d85_Data> _38521_l = *it;
			{
				if ((_38521_l != nullptr)) {
					static__1aa2c4c52_optimize(&(_38521_l.get()._field_Model));
				};
			}
			_iter_next_1bae25177:;
			++it;
			goto _iter_begin_1bae25177;
		}
		_iter_end_1bae25177:;
	};
	static__1aa2c4c52_optimize(&(_38442_assign.get()._field_R));
}



inline void _1aa2c1e2a_optimizeRet(_1aa2bdd28_scopeOptimizer* _self_, jule::Ptr<_1aa8b783e_RetSt> _39334_r) {
	static__1aa2c4c52_optimize(&(_39334_r.get()._field_Expr));
}



inline void _1aa2c21a0_optimizeStmt(_1aa2bdd28_scopeOptimizer* _self_, jule::Any _39735_stmt) {
	{
		auto &_match_expr{ _39735_stmt };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1bae28983:;
			{
				_1aa2c2425_optimizeChild(_self_, _39735_stmt.cast_ptr<_1aa8b25a3_Scope>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1bae28a0a:;
			{
				_1aa2be884_optimizeData(_self_, _39735_stmt.cast_ptr<_1aa957d85_Data>(&__jule_any_type24));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bae28a82:;
			{
				_1aa2beb09_optimizeVar(_self_, _39735_stmt.cast_ptr<_1aa908c59_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1bae28b09:;
			{
				_1aa2bed7e_optimizeConditional(_self_, _39735_stmt.cast_ptr<_1aa8b310e_Conditional>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1bae28b81:;
			{
				_1aa2c06ed_optimizeRangeIter(_self_, _39735_stmt.cast_ptr<_1aa8b4253_RangeIter>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1bae28c08:;
			{
				_1aa2c0973_optimizeWhileIter(_self_, _39735_stmt.cast_ptr<_1aa8b386d_WhileIter>(&__jule_any_type39));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1bae28c80:;
			{
				_1aa2c2425_optimizeChild(_self_, _39735_stmt.cast_ptr<_1aa8b33ea_InfIter>(&__jule_any_type37).get()._field_Scope);
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1bae28d07:;
			{
				_1aa2c1930_optimizeAssign(_self_, _39735_stmt.cast_ptr<_1aa8b5908_Assign>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1bae28d7e:;
			{
				_1aa2c1ba5_optimizeMultiAssign(_self_, _39735_stmt.cast_ptr<_1aa8b5cb0_MultiAssign>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1bae28e06:;
			{
				_1aa2c0478_optimizeMatch(_self_, _39735_stmt.cast_ptr<_1aa8b63ba_Match>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1bae28e7d:;
			{
				_1aa2c1e2a_optimizeRet(_self_, _39735_stmt.cast_ptr<_1aa8b783e_RetSt>(&__jule_any_type51));
			}
		}
		_match_end_1bae287c9:;
	};
}



inline void _1aa2c2425_optimizeChild(_1aa2bdd28_scopeOptimizer* _self_, jule::Ptr<_1aa8b25a3_Scope> _42436_child) {
	jule::Ptr<_1aa2bdd28_scopeOptimizer> _42517_so = static__1aa2be389_new(_42436_child);;
	_1aa2c2601_optimize(_42517_so.ptr());
}



inline void _1aa2c2601_optimize(_1aa2bdd28_scopeOptimizer* _self_) {
	{
		auto expr = &((*(_self_))._field_scope.get()._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bae30061:;
		if (it != expr_end) {
			jule::I64 _43114_i = it - expr->begin();
			jule::Any _43121_stmt = *it;
			{
				(*(_self_))._field_i=_43114_i;
				_1aa2c21a0_optimizeStmt(_self_, _43121_stmt);
			}
			_iter_next_1bae30061:;
			++it;
			_43114_i++;
			goto _iter_begin_1bae30061;
		}
		_iter_end_1bae30061:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1aa2bdd28_scopeOptimizer _Src) {
	_Stream << "scopeOptimizer{";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline void static__1aa2c4c52_optimize(jule::Any* _5829_model) {
	if (_1ab361936_exprEnabled) {
		jule::Ptr<_1aa2c4724_exprOptimizer> _6121_exop = jule::new_ptr<_1aa2c4724_exprOptimizer>(_1aa2c4724_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)((&((*(_5829_model))))))});;
		_1aa2cae56_do(_6121_exop.ptr());
	};
}



inline jule::Bool _1aa2c5060_strCond(_1aa2c4724_exprOptimizer* _self_, jule::Ptr<_1aa87b2a3_BinopExprModel> _6826_m) {
	jule::Ptr<_1aa989339_Prim> _6913_lp = _1aa985c5e_Prim(_6826_m.get()._field_Left.get()._field_Kind.ptr());;
	if (((_6913_lp == nullptr) || (!(_1aa98c56d_IsStr(_6913_lp.ptr()))))) {
		return false;;
	};
	if (((!_6826_m.get()._field_Op.get()._field_Kind.equal("==", 2)) && (!_6826_m.get()._field_Op.get()._field_Kind.equal("!=", 2)))) {
		return false;;
	};
	{
		auto &_match_expr{ _6826_m.get()._field_Left.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1bae3894e:;
			{
				({
					jule::Ptr<_1aa87acdb_OperandExprModel> ___jule_assign_arg = _6826_m.get()._field_Right;
					jule::Ptr<_1aa87acdb_OperandExprModel> _1___jule_assign_arg = _6826_m.get()._field_Left;
					_6826_m.get()._field_Left = ___jule_assign_arg;
					_6826_m.get()._field_Right = _1___jule_assign_arg;
				});
				goto _julec_label_opt;
			}
		}
		_match_end_1bae388e9:;
	};
	{
		auto &_match_expr{ _6826_m.get()._field_Right.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1bae381bd:;
			{
				goto _match_end_1bae39444;
			}
		}
		else {
			_case_begin_1bae399d8:;
			{
				return true;;
			}
		}
		_match_end_1bae39444:;
	};
	_julec_label_opt:;
	jule::Ptr<_1c0901b1b_Const> _8817_c = _6826_m.get()._field_Right.get()._field_Model.cast_ptr<_1c0901b1b_Const>(&__jule_any_type19);;
	{
		auto &_match_expr{ _6826_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1bae3aaa5:;
			{
				if (_1c0903b51_ReadStr(_8817_c.ptr()).empty()) {
					(*((*(_self_))._field_model))=jule::Any(jule::new_ptr<_1aa881a4a_CommonSubIdentExprModel>(_1aa881a4a_CommonSubIdentExprModel{._field_ExprKind=_6826_m.get()._field_Left.get()._field_Kind, ._field_Expr=_6826_m.get()._field_Left.get()._field_Model, ._field_Ident=jule::Str("empty()", 7)}), &__jule_any_type73);
					goto _match_end_1bae3aa50;
				};
				jule::Any _9921_model = jule::Any(jule::new_ptr<_1aa2bb331_StrCompExprModel>(_1aa2bb331_StrCompExprModel{._field_Left=_6826_m.get()._field_Left.get()._field_Model, ._field_Right=_8817_c, ._field_NotEq=false}), &__jule_any_type127);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_9921_model))))));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1bae3ab1b:;
			{
				if (_1c0903b51_ReadStr(_8817_c.ptr()).empty()) {
					jule::Ptr<_1db944d0d_Token> _10725_op = _6826_m.get()._field_Op;;
					_10725_op.get()._field_Kind=jule::Str("!", 1);
					(*((*(_self_))._field_model))=jule::Any(jule::new_ptr<_1aa87b65a_UnaryExprModel>(_1aa87b65a_UnaryExprModel{._field_Expr=jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Model=jule::Any(jule::new_ptr<_1aa881a4a_CommonSubIdentExprModel>(_1aa881a4a_CommonSubIdentExprModel{._field_ExprKind=_6826_m.get()._field_Left.get()._field_Kind, ._field_Expr=_6826_m.get()._field_Left.get()._field_Model, ._field_Ident=jule::Str("empty()", 7)}), &__jule_any_type73), }), ._field_Op=_10725_op}), &__jule_any_type74);
					goto _match_end_1bae3aa50;
				};
				jule::Any _12121_model = jule::Any(jule::new_ptr<_1aa2bb331_StrCompExprModel>(_1aa2bb331_StrCompExprModel{._field_Left=_6826_m.get()._field_Left.get()._field_Model, ._field_Right=_8817_c, ._field_NotEq=true}), &__jule_any_type127);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_12121_model))))));
			}
		}
		_match_end_1bae3aa50:;
	};
	return true;;
}



inline void _1aa2c52d5_binary(_1aa2c4724_exprOptimizer* _self_, jule::Ptr<_1aa87b2a3_BinopExprModel> _13125_m) {
	static__1aa2c4c52_optimize(&(_13125_m.get()._field_Left.get()._field_Model));
	static__1aa2c4c52_optimize(&(_13125_m.get()._field_Right.get()._field_Model));
	{
		auto &_match_expr{ _13125_m.get()._field_Right.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1bae426a0:;
			{
				goto _match_end_1bae421a5;
			}
		}
		else {
			_case_begin_1bae42260:;
			{
				return;;
			}
		}
		_match_end_1bae421a5:;
	};
	if ((_1aa2cd1ab_Cond && _1aa2c5060_strCond(_self_, _13125_m))) {
		return;;
	};
	if ((!(_1aa2cc485_Math))) {
		return;;
	};
	{
		auto &_match_expr{ _13125_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1bae43272:;
			{
				jule::Bool _15118_ok = false;;
				jule::U64 _15122_x = 0;;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1aa2cb352_checkForBitShiftOpt(&(_13125_m.get()._field_Left), &(_13125_m.get()._field_Right));
					_15118_ok = __jule_assign_result.__jule_result_arg0;
					_15122_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_15118_ok) {
					_13125_m.get()._field_Op.get()._field_Kind=jule::Str("<<", 2);
					jule::Ptr<_1c0901b1b_Const> _15425_c = _13125_m.get()._field_Right.get()._field_Model.cast_ptr<_1c0901b1b_Const>(&__jule_any_type19);;
					_1c0904aec_SetU64(_15425_c.ptr(), _15122_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1bae432e9:;
			{
				jule::Bool _15918_ok = false;;
				jule::U64 _15922_x = 0;;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1aa2cb352_checkForBitShiftOpt(&(_13125_m.get()._field_Left), &(_13125_m.get()._field_Right));
					_15918_ok = __jule_assign_result.__jule_result_arg0;
					_15922_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_15918_ok) {
					_13125_m.get()._field_Op.get()._field_Kind=jule::Str(">>", 2);
					jule::Ptr<_1c0901b1b_Const> _16225_c = _13125_m.get()._field_Right.get()._field_Model.cast_ptr<_1c0901b1b_Const>(&__jule_any_type19);;
					_1c0904aec_SetU64(_16225_c.ptr(), _15922_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1bae43371:;
			{
				jule::Ptr<_1c0901b1b_Const> _16721_c = _13125_m.get()._field_Right.get()._field_Model.cast_ptr<_1c0901b1b_Const>(&__jule_any_type19);;
				jule::F64 _16817_d = _1c0904602_AsF64(_16721_c.ptr());;
				if ((_16817_d == 2LL)) {
					_13125_m.get()._field_Op.get()._field_Kind=jule::Str("&", 1);
					_1c0904877_SetI64(_16721_c.ptr(), 1LL);
				};
			}
		}
		_match_end_1bae431ea:;
	};
	jule::Any _17417_model = jule::Any(jule::new_ptr<_1aa2bb9d5_UnsafeBinopExprModel>(_1aa2bb9d5_UnsafeBinopExprModel{._field_Node=_13125_m}), &__jule_any_type128);;
	(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_17417_model))))));
}



inline void _1aa2c555a_unary(_1aa2c4724_exprOptimizer* _self_, jule::Ptr<_1aa87b65a_UnaryExprModel> _17824_m) {
	static__1aa2c4c52_optimize(&(_17824_m.get()._field_Expr.get()._field_Model));
	if ((_1aa2cccd2_Ptr && _17824_m.get()._field_Op.get()._field_Kind.equal("*", 1))) {
		{
			auto &_match_expr{ _17824_m.get()._field_Expr.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type74) {
				_case_begin_1bae4a136:;
				{
					jule::Ptr<_1aa87b65a_UnaryExprModel> _18325_um = _17824_m.get()._field_Expr.get()._field_Model.cast_ptr<_1aa87b65a_UnaryExprModel>(&__jule_any_type74);;
					if (_18325_um.get()._field_Op.get()._field_Kind.equal("&", 1)) {
						(*((*(_self_))._field_model))=_18325_um.get()._field_Expr.get()._field_Model;
					};
				}
			}
			_match_end_1bae4a0d1:;
		};
	};
}



inline void _1aa2c57d0_structureLit(_1aa2c4724_exprOptimizer* _self_, jule::Ptr<_1aa87be0d_StructLitExprModel> _19131_m) {
	{
		auto expr = &(_19131_m.get()._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bacbbeb9:;
		if (it != expr_end) {
			jule::Ptr<_1aa87ba56_StructArgExprModel> _19221_arg = *it;
			{
				static__1aa2c4c52_optimize(&(_19221_arg.get()._field_Expr));
			}
			_iter_next_1bacbbeb9:;
			++it;
			goto _iter_begin_1bacbbeb9;
		}
		_iter_end_1bacbbeb9:;
	};
}



inline void _1aa2c5a55_allocStructure(_1aa2c4724_exprOptimizer* _self_, jule::Ptr<_1aa87c21b_AllocStructLitExprModel> _19733_m) {
	_1aa2c57d0_structureLit(_self_, _19733_m.get()._field_Lit);
}



inline void _1aa2c5cca_casting(_1aa2c4724_exprOptimizer* _self_, jule::Ptr<_1aa87c76b_CastingExprModel> _20126_m) {
	static__1aa2c4c52_optimize(&(_20126_m.get()._field_Expr));
}



inline void _1aa2c6050_args(_1aa2c4724_exprOptimizer* _self_, jule::Slice<jule::Any>* _20524_args) {
	{
		auto expr = _20524_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bacbd949:;
		if (it != expr_end) {
			jule::I64 _20614_i = it - expr->begin();
			jule::Any _20621_arg = *it;
			{
				static__1aa2c4c52_optimize(&(_20621_arg));
				(*(_20524_args))[_20614_i]=_20621_arg;
			}
			_iter_next_1bacbd949:;
			++it;
			_20614_i++;
			goto _iter_begin_1bacbd949;
		}
		_iter_end_1bacbd949:;
	};
}



inline void _1aa2c62c5_scope(_1aa2c4724_exprOptimizer* _self_, jule::Ptr<_1aa8b25a3_Scope>* _21225_s) {
	jule::Ptr<_1aa2bdd28_scopeOptimizer> _21317_scopt = static__1aa2be389_new((*(_21225_s)));;
	_1aa2c2601_optimize(_21317_scopt.ptr());
}



inline void _1aa2c654a_funcCall(_1aa2c4724_exprOptimizer* _self_, jule::Ptr<_1aa87d11d_FnCallExprModel> _21727_m) {
	static__1aa2c4c52_optimize(&(_21727_m.get()._field_Expr));
	_1aa2c6050_args(_self_, &(_21727_m.get()._field_Args));
	if ((_21727_m.get()._field_Except != nullptr)) {
		_1aa2c62c5_scope(_self_, &(_21727_m.get()._field_Except));
	};
}



inline void _1aa2c67c0_slice(_1aa2c4724_exprOptimizer* _self_, jule::Ptr<_1aa87d4c5_SliceExprModel> _22524_m) {
	_1aa2c6050_args(_self_, &(_22524_m.get()._field_Elems));
}



inline void _1aa2c6a45_array(_1aa2c4724_exprOptimizer* _self_, jule::Ptr<_1aa8811ed_ArrayExprModel> _22924_m) {
	if (((_22924_m.get()._field_Elems.len() == 2LL) && (_22924_m.get()._field_Elems[1LL] == nullptr))) {
		jule::Any _23121_elem = _22924_m.get()._field_Elems[0LL];;
		static__1aa2c4c52_optimize(&(_23121_elem));
		_22924_m.get()._field_Elems[0LL]=_23121_elem;
	};
	_1aa2c6050_args(_self_, &(_22924_m.get()._field_Elems));
}



inline void _1aa2c6cba_indexing(_1aa2c4724_exprOptimizer* _self_, jule::Ptr<_1aa87d948_IndexingExprModel> _23827_m) {
	static__1aa2c4c52_optimize(&(_23827_m.get()._field_Expr.get()._field_Model));
	static__1aa2c4c52_optimize(&(_23827_m.get()._field_Index.get()._field_Model));
	if ((!(_1aa2cc74e_Access))) {
		return;;
	};
	jule::Bool _24413_array = (_1aa986974_Arr(_23827_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr);;
	if ((_24413_array && _1aa958748_IsConst(_23827_m.get()._field_Index.ptr()))) {
		jule::Any _24721_model = jule::Any(jule::new_ptr<_1aa2bbd6a_UnsafeIndexingExprModel>(_1aa2bbd6a_UnsafeIndexingExprModel{._field_Node=_23827_m}), &__jule_any_type129);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_24721_model))))));
		return;;
	};
	{
		auto &_match_expr{ _23827_m.get()._field_Index.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bacc727c:;
			{
				jule::Ptr<_1aa908c59_Var> _25317_i = _23827_m.get()._field_Index.get()._field_Model.cast_ptr<_1aa908c59_Var>(&__jule_any_type8);;
				if ((_25317_i.get()._field_Mutable || (_25317_i.get()._field_IterRelation == nullptr))) {
					goto _match_end_1bacc7128;
				};
				{
					auto &_match_expr{ _23827_m.get()._field_Expr.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1bacc8a0e:;
						{
							jule::Ptr<_1aa908c59_Var> _25921_r = _23827_m.get()._field_Expr.get()._field_Model.cast_ptr<_1aa908c59_Var>(&__jule_any_type8);;
							if ((_25317_i.get()._field_IterRelation.get()._field_Range == _25921_r)) {
								jule::Any _26229_model = jule::Any(jule::new_ptr<_1aa2bbd6a_UnsafeIndexingExprModel>(_1aa2bbd6a_UnsafeIndexingExprModel{._field_Node=_23827_m}), &__jule_any_type129);;
								(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_26229_model))))));
							};
						}
					}
					_match_end_1bacc89a9:;
				};
			}
		}
		_match_end_1bacc7128:;
	};
}



inline void _1aa2c7040_anonFunc(_1aa2c4724_exprOptimizer* _self_, jule::Ptr<_1aa87dd00_AnonFnExprModel> _26927_m) {
	_1aa2c62c5_scope(_self_, &(_26927_m.get()._field_Func.get()._field_Scope));
}



inline void _1aa2c72b5_mapExpr(_1aa2c4724_exprOptimizer* _self_, jule::Ptr<_1aa87e62a_MapExprModel> _27326_m) {
	{
		auto expr = &(_27326_m.get()._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1baccb0c7:;
		if (it != expr_end) {
			jule::Ptr<_1aa87e1a7_KeyValPairExprModel> _27421_pair = *it;
			{
				static__1aa2c4c52_optimize(&(_27421_pair.get()._field_Key));
				static__1aa2c4c52_optimize(&(_27421_pair.get()._field_Val));
			}
			_iter_next_1baccb0c7:;
			++it;
			goto _iter_begin_1baccb0c7;
		}
		_iter_end_1baccb0c7:;
	};
}



inline void _1aa2c753a_slicing(_1aa2c4724_exprOptimizer* _self_, jule::Ptr<_1aa87eb69_SlicingExprModel> _28026_m) {
	static__1aa2c4c52_optimize(&(_28026_m.get()._field_Expr));
	static__1aa2c4c52_optimize(&(_28026_m.get()._field_Left));
	if ((_28026_m.get()._field_Right != nullptr)) {
		static__1aa2c4c52_optimize(&(_28026_m.get()._field_Right));
	};
}



inline void _1aa2c77b0_traitSub(_1aa2c4724_exprOptimizer* _self_, jule::Ptr<_1aa8801a8_TraitSubIdentExprModel> _28827_m) {
	static__1aa2c4c52_optimize(&(_28827_m.get()._field_Expr));
}



inline void _1aa2c7a35_structureSub(_1aa2c4724_exprOptimizer* _self_, jule::Ptr<_1aa88098e_StructSubIdentExprModel> _29231_m) {
	static__1aa2c4c52_optimize(&(_29231_m.get()._field_Expr.get()._field_Model));
}



inline void _1aa2c7caa_commonSub(_1aa2c4724_exprOptimizer* _self_, jule::Ptr<_1aa881a4a_CommonSubIdentExprModel> _29628_m) {
	static__1aa2c4c52_optimize(&(_29628_m.get()._field_Expr));
}



inline void _1aa2c8030_tuple(_1aa2c4724_exprOptimizer* _self_, jule::Ptr<_1aa881d47_TupleExprModel> _30024_m) {
	{
		auto expr = &(_30024_m.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bacce3d8:;
		if (it != expr_end) {
			jule::Ptr<_1aa957d85_Data> _30121_d = *it;
			{
				static__1aa2c4c52_optimize(&(_30121_d.get()._field_Model));
			}
			_iter_next_1bacce3d8:;
			++it;
			goto _iter_begin_1bacce3d8;
		}
		_iter_end_1bacce3d8:;
	};
}



inline void _1aa2c82a5_newCall(_1aa2c4724_exprOptimizer* _self_, jule::Ptr<_1aa882d15_BuiltinNewCallExprModel> _30626_m) {
	if ((_30626_m.get()._field_Init != nullptr)) {
		static__1aa2c4c52_optimize(&(_30626_m.get()._field_Init));
	};
}



inline void _1aa2c852a_outCall(_1aa2c4724_exprOptimizer* _self_, jule::Ptr<_1aa882221_BuiltinOutCallExprModel> _31226_m) {
	static__1aa2c4c52_optimize(&(_31226_m.get()._field_Expr));
}



inline void _1aa2c87a0_outlnCall(_1aa2c4724_exprOptimizer* _self_, jule::Ptr<_1aa88260b_BuiltinOutlnCallExprModel> _31628_m) {
	static__1aa2c4c52_optimize(&(_31628_m.get()._field_Expr));
}



inline void _1aa2c8a25_panicCall(_1aa2c4724_exprOptimizer* _self_, jule::Ptr<_1aa883200_BuiltinPanicCallExprModel> _32028_m) {
	static__1aa2c4c52_optimize(&(_32028_m.get()._field_Expr));
}



inline void _1aa2c8c9a_assertCall(_1aa2c4724_exprOptimizer* _self_, jule::Ptr<_1aa8836a6_BuiltinAssertCallExprModel> _32429_m) {
	static__1aa2c4c52_optimize(&(_32429_m.get()._field_Expr));
}



inline void _1aa2c9020_errorCall(_1aa2c4724_exprOptimizer* _self_, jule::Ptr<_1aa885587_BuiltinErrorCallExprModel> _32828_m) {
	static__1aa2c4c52_optimize(&(_32828_m.get()._field_Err.get()._field_Model));
}



inline void _1aa2c9295_makeCall(_1aa2c4724_exprOptimizer* _self_, jule::Ptr<_1aa883b5c_BuiltinMakeCallExprModel> _33227_m) {
	if ((_33227_m.get()._field_Len != nullptr)) {
		static__1aa2c4c52_optimize(&(_33227_m.get()._field_Len));
	};
	if ((_33227_m.get()._field_Cap != nullptr)) {
		static__1aa2c4c52_optimize(&(_33227_m.get()._field_Cap));
	};
}



inline void _1aa2c951a_appendCall(_1aa2c4724_exprOptimizer* _self_, jule::Ptr<_1aa884047_BuiltinAppendCallExprModel> _34129_m) {
	static__1aa2c4c52_optimize(&(_34129_m.get()._field_Dest));
	static__1aa2c4c52_optimize(&(_34129_m.get()._field_Elements));
}



inline void _1aa2c9790_lenCall(_1aa2c4724_exprOptimizer* _self_, jule::Ptr<_1aa884366_BuiltinLenCallExprModel> _34626_m) {
	static__1aa2c4c52_optimize(&(_34626_m.get()._field_Expr.get()._field_Model));
}



inline void _1aa2c9a15_capCall(_1aa2c4724_exprOptimizer* _self_, jule::Ptr<_1aa884685_BuiltinCapCallExprModel> _35026_m) {
	static__1aa2c4c52_optimize(&(_35026_m.get()._field_Expr.get()._field_Model));
}



inline void _1aa2c9c8a_cloneCall(_1aa2c4724_exprOptimizer* _self_, jule::Ptr<_1aa88292a_BuiltinCloneCallExprModel> _35428_m) {
	static__1aa2c4c52_optimize(&(_35428_m.get()._field_Expr));
}



inline void _1aa2ca010_deleteCall(_1aa2c4724_exprOptimizer* _self_, jule::Ptr<_1aa884d39_BuiltinDeleteCallExprModel> _35829_m) {
	static__1aa2c4c52_optimize(&(_35829_m.get()._field_Dest.get()._field_Model));
	if ((_35829_m.get()._field_Key != nullptr)) {
		static__1aa2c4c52_optimize(&(_35829_m.get()._field_Key.get()._field_Model));
	};
}



inline void _1aa2ca285_sizeof(_1aa2c4724_exprOptimizer* _self_, jule::Ptr<_1aa885884_SizeofExprModel> _36525_m) {
	static__1aa2c4c52_optimize(&(_36525_m.get()._field_Expr));
}



inline void _1aa2ca50a_alignof(_1aa2c4724_exprOptimizer* _self_, jule::Ptr<_1aa885b70_AlignofExprModel> _36926_m) {
	static__1aa2c4c52_optimize(&(_36926_m.get()._field_Expr));
}



inline void _1aa2ca780_integratedToStr(_1aa2c4724_exprOptimizer* _self_, jule::Ptr<_1aa886269_IntegratedToStrExprModel> _37334_m) {
	static__1aa2c4c52_optimize(&(_37334_m.get()._field_Expr));
}



inline void _1aa2caa05_free(_1aa2c4724_exprOptimizer* _self_, jule::Ptr<_1aa88691d_FreeExprModel> _37723_m) {
	static__1aa2c4c52_optimize(&(_37723_m.get()._field_Expr));
}



inline void _1aa2cac7a_backendEmit(_1aa2c4724_exprOptimizer* _self_, jule::Ptr<_1aa886632_BackendEmitExprModel> _38130_m) {
	_1aa2c6050_args(_self_, &(_38130_m.get()._field_Exprs));
}



inline void _1aa2cae56_do(_1aa2c4724_exprOptimizer* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_model)) };
		
		if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1bacd8700:;
			{
				_1aa2c52d5_binary(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aa87b2a3_BinopExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1bacd89ec:;
			{
				_1aa2c555a_unary(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aa87b65a_UnaryExprModel>(&__jule_any_type74));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1bacd8a63:;
			{
				_1aa2c57d0_structureLit(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aa87be0d_StructLitExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1bacd8ac9:;
			{
				_1aa2c5a55_allocStructure(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aa87c21b_AllocStructLitExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1bacd8b40:;
			{
				_1aa2c5cca_casting(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aa87c76b_CastingExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1bacd8bb7:;
			{
				_1aa2c654a_funcCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aa87d11d_FnCallExprModel>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1bacd8c3e:;
			{
				_1aa2c67c0_slice(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aa87d4c5_SliceExprModel>(&__jule_any_type82));
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1bacd8cb6:;
			{
				_1aa2c6a45_array(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aa8811ed_ArrayExprModel>(&__jule_any_type90));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1bacd8d3d:;
			{
				_1aa2c6cba_indexing(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aa87d948_IndexingExprModel>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1bacd8db5:;
			{
				_1aa2c7040_anonFunc(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aa87dd00_AnonFnExprModel>(&__jule_any_type103));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1bacd8e3c:;
			{
				_1aa2c72b5_mapExpr(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aa87e62a_MapExprModel>(&__jule_any_type102));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1bacd8eb4:;
			{
				_1aa2c753a_slicing(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aa87eb69_SlicingExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1bacd903b:;
			{
				_1aa2c77b0_traitSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aa8801a8_TraitSubIdentExprModel>(&__jule_any_type70));
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1bacd90b3:;
			{
				_1aa2c7a35_structureSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aa88098e_StructSubIdentExprModel>(&__jule_any_type71));
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1bacd913a:;
			{
				_1aa2c7caa_commonSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aa881a4a_CommonSubIdentExprModel>(&__jule_any_type73));
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1bacd91b2:;
			{
				_1aa2c8030_tuple(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aa881d47_TupleExprModel>(&__jule_any_type87));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1bacd9239:;
			{
				_1aa2c852a_outCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aa882221_BuiltinOutCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1bacd92b1:;
			{
				_1aa2c87a0_outlnCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aa88260b_BuiltinOutlnCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1bacd9338:;
			{
				_1aa2c82a5_newCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aa882d15_BuiltinNewCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1bacd93b0:;
			{
				_1aa2c8a25_panicCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aa883200_BuiltinPanicCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1bacd9437:;
			{
				_1aa2c8c9a_assertCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aa8836a6_BuiltinAssertCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1bacd94ae:;
			{
				_1aa2c9020_errorCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aa885587_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1bacd9536:;
			{
				_1aa2c9295_makeCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aa883b5c_BuiltinMakeCallExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1bacd95ad:;
			{
				_1aa2c951a_appendCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aa884047_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1bacd9635:;
			{
				_1aa2c9790_lenCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aa884366_BuiltinLenCallExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1bacd96ac:;
			{
				_1aa2c9a15_capCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aa884685_BuiltinCapCallExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1bacd9734:;
			{
				_1aa2c9c8a_cloneCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aa88292a_BuiltinCloneCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1bacd97ab:;
			{
				_1aa2ca010_deleteCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aa884d39_BuiltinDeleteCallExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1bacd9833:;
			{
				_1aa2ca285_sizeof(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aa885884_SizeofExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1bacd98aa:;
			{
				_1aa2ca50a_alignof(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aa885b70_AlignofExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1bacd9932:;
			{
				_1aa2ca780_integratedToStr(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aa886269_IntegratedToStrExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1bacd99a9:;
			{
				_1aa2caa05_free(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aa88691d_FreeExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1bacd9a31:;
			{
				_1aa2cac7a_backendEmit(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aa886632_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		_match_end_1bacd869a:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1aa2c4724_exprOptimizer _Src) {
	_Stream << "exprOptimizer{";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ab361d43_Optimizer> static__1ab3622e9_New(jule::Ptr<_1ab17e039_IR>* _2524_ir) {
	return jule::new_ptr<_1ab361d43_Optimizer>(_1ab361d43_Optimizer{._field_ir=(*(_2524_ir))});;
}



inline void _1ab36256e_optimizeGlobal(_1ab361d43_Optimizer* _self_, jule::Ptr<_1aa908c59_Var>* _3138_v) {
	if ((!((*(_3138_v)).get()._field_CppLinked))) {
		static__1aa2c4c52_optimize(&((*(_3138_v)).get()._field_Value.get()._field_Data.get()._field_Model));
	};
}



inline void _1ab3627e4_optimizeFunction(_1ab361d43_Optimizer* _self_, jule::Ptr<_1aa889426_Fn>* _3740_func) {
	if ((*(_3740_func)).get()._field_CppLinked) {
		return;;
	};
	{
		auto expr = &((*(_3740_func)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bad023b7:;
		if (it != expr_end) {
			jule::Ptr<_1aa88c0c7_FnIns> _4121_ins = *it;
			{
				jule::Ptr<_1aa2bdd28_scopeOptimizer> _4221_so = static__1aa2be389_new(_4121_ins.get()._field_Scope);;
				_1aa2c2601_optimize(_4221_so.ptr());
			}
			_iter_next_1bad023b7:;
			++it;
			goto _iter_begin_1bad023b7;
		}
		_iter_end_1bad023b7:;
	};
}



inline void _1ab362a69_optimizeStruct(_1ab361d43_Optimizer* _self_, jule::Ptr<_1aa8740c0_Struct>* _4738_s) {
	if ((*(_4738_s)).get()._field_CppLinked) {
		return;;
	};
	{
		auto expr = &((*(_4738_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bad03891:;
		if (it != expr_end) {
			jule::Ptr<_1aa876dd6_StructIns> _5121_ins = *it;
			{
				{
					auto expr = &(_5121_ins.get()._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bad04089:;
					if (it != expr_end) {
						jule::Ptr<_1aa8763e1_FieldIns> _5225_f = *it;
						{
							if ((_5225_f.get()._field_Default != nullptr)) {
								static__1aa2c4c52_optimize(&(_5225_f.get()._field_Default.get()._field_Model));
							};
						}
						_iter_next_1bad04089:;
						++it;
						goto _iter_begin_1bad04089;
					}
					_iter_end_1bad04089:;
				};
				{
					auto expr = &(_5121_ins.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bad04ab2:;
					if (it != expr_end) {
						jule::Ptr<_1aa889426_Fn> _5725_m = *it;
						{
							_1ab3627e4_optimizeFunction(_self_, &(_5725_m));
						}
						_iter_next_1bad04ab2:;
						++it;
						goto _iter_begin_1bad04ab2;
					}
					_iter_end_1bad04ab2:;
				};
			}
			_iter_next_1bad03891:;
			++it;
			goto _iter_begin_1bad03891;
		}
		_iter_end_1bad03891:;
	};
}



inline void _1ab362cde_optimizeGlobals(_1ab361d43_Optimizer* _self_, jule::Ptr<_1aa8d3b57_Package>* _6339_p) {
	{
		auto expr = &((*(_6339_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bad05497:;
		if (it != expr_end) {
			jule::Ptr<_1aa94d51d_SymbolTable> _6421_f = *it;
			{
				{
					auto expr = &(_6421_f.get()._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bad0618a:;
					if (it != expr_end) {
						jule::Ptr<_1aa908c59_Var> _6525_v = *it;
						{
							_1ab36256e_optimizeGlobal(_self_, &(_6525_v));
						}
						_iter_next_1bad0618a:;
						++it;
						goto _iter_begin_1bad0618a;
					}
					_iter_end_1bad0618a:;
				};
			}
			_iter_next_1bad05497:;
			++it;
			goto _iter_begin_1bad05497;
		}
		_iter_end_1bad05497:;
	};
}



inline void _1ab363064_optimizeFunctions(_1ab361d43_Optimizer* _self_, jule::Ptr<_1aa8d3b57_Package>* _7141_p) {
	{
		auto expr = &((*(_7141_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bad0671d:;
		if (it != expr_end) {
			jule::Ptr<_1aa94d51d_SymbolTable> _7221_f = *it;
			{
				{
					auto expr = &(_7221_f.get()._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bad07455:;
					if (it != expr_end) {
						jule::Ptr<_1aa889426_Fn> _7325_func = *it;
						{
							_1ab3627e4_optimizeFunction(_self_, &(_7325_func));
						}
						_iter_next_1bad07455:;
						++it;
						goto _iter_begin_1bad07455;
					}
					_iter_end_1bad07455:;
				};
			}
			_iter_next_1bad0671d:;
			++it;
			goto _iter_begin_1bad0671d;
		}
		_iter_end_1bad0671d:;
	};
}



inline void _1ab3632d9_optimizeStructs(_1ab361d43_Optimizer* _self_, jule::Ptr<_1aa8d3b57_Package>* _7939_p) {
	{
		auto expr = &((*(_7939_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bad079d8:;
		if (it != expr_end) {
			jule::Ptr<_1aa94d51d_SymbolTable> _8021_f = *it;
			{
				{
					auto expr = &(_8021_f.get()._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bad08720:;
					if (it != expr_end) {
						jule::Ptr<_1aa8740c0_Struct> _8125_s = *it;
						{
							_1ab362a69_optimizeStruct(_self_, &(_8125_s));
						}
						_iter_next_1bad08720:;
						++it;
						goto _iter_begin_1bad08720;
					}
					_iter_end_1bad08720:;
				};
			}
			_iter_next_1bad079d8:;
			++it;
			goto _iter_begin_1bad079d8;
		}
		_iter_end_1bad079d8:;
	};
}



inline void _1ab36355e_optimizePackage(_1ab361d43_Optimizer* _self_, jule::Ptr<_1aa8d3b57_Package>* _8739_p) {
	_1ab362cde_optimizeGlobals(_self_, _8739_p);
	_1ab363064_optimizeFunctions(_self_, _8739_p);
	_1ab3632d9_optimizeStructs(_self_, _8739_p);
}



inline void _1ab36373a_Optimize(_1ab361d43_Optimizer* _self_) {
	_1ab36395a_detectEnabled();
	if (_1aa2cbdad_Deadcode) {
		_1ab354bc1_EliminateDefines(&((*(_self_))._field_ir));
	};
	if ((_1ab361b56_scopeEnabled || _1ab361936_exprEnabled)) {
		{
			auto expr = &((*(_self_))._field_ir.get()._field_Used);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bad0a9b9:;
			if (it != expr_end) {
				jule::Ptr<_1aa8d101c_ImportInfo> _10325_u = *it;
				{
					if ((!(_10325_u.get()._field_CppLinked))) {
						_1ab36355e_optimizePackage(_self_, &(_10325_u.get()._field_Package));
					};
				}
				_iter_next_1bad0a9b9:;
				++it;
				goto _iter_begin_1bad0a9b9;
			}
			_iter_end_1bad0a9b9:;
		};
		_1ab36355e_optimizePackage(_self_, &((*(_self_))._field_ir.get()._field_Main));
	};
	if (_1aa2cbdad_Deadcode) {
		_1ab359973_EliminateScopes(&((*(_self_))._field_ir));
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1ab361d43_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline void static__1ab41ca14_Reset(void) {
	jule::out(jule::Str("\033[0m", 4));
}



inline void static__1ab41dd78_Print(jule::Str _1921_escape, jule::Str _1934_text) {
	jule::out(_1921_escape);
	jule::out(_1934_text);
	static__1ab41ca14_Reset();
}







std::ostream &operator<<(std::ostream &_Stream, _1ab41da9d_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void static__1ab420709_LogFlat(_1d9d938bd_Log* _1424_l) {
	jule::outln((*(_1424_l))._field_Text);
}



inline void static__1ab420918_LogError(_1d9d938bd_Log* _1925_l) {
	jule::out(jule::Str("\033[31m", 5));
	jule::out(jule::Str("error: ", 7));
	jule::out((*(_1925_l))._field_Text);
	static__1ab41ca14_Reset();
	if (((*(_1925_l))._field_Path.len() != 0LL)) {
		jule::out(jule::Str("\n  --> ", 7));
		jule::out((*(_1925_l))._field_Path);
	};
	if ((((*(_1925_l))._field_Row != 0LL) && ((*(_1925_l))._field_Column != 0LL))) {
		jule::out(jule::Str(":", 1));
		jule::out(_1dc5b298b_Itoa((*(_1925_l))._field_Row));
		jule::out(jule::Str(":", 1));
		jule::out(_1dc5b298b_Itoa((*(_1925_l))._field_Column));
	};
	if (((*(_1925_l))._field_Line.len() != 0LL)) {
		jule::Str _3621_line = _1d9d0a758_TrimLeft((*(_1925_l))._field_Line, jule::Str("\r\n\v\b ", 5));;
		jule::I64 _3721_offset = (((*(_1925_l))._field_Line.len() - _3621_line.len()) + 1LL);;
		jule::I64 _3821_oldLen = _3621_line.len();;
		_3621_line=_1d9d0a758_TrimLeft(_3621_line, jule::Str("\t", 1));
		if ((_3821_oldLen != _3621_line.len())) {
			_3721_offset+=((_3821_oldLen - _3621_line.len()) << 3LLU);
		};
		jule::out(jule::Str("\n  ", 3));
		jule::Str _4417_row = _1dc5b298b_Itoa((*(_1925_l))._field_Row);;
		jule::out(_4417_row);
		jule::out(jule::Str(" | ", 3));
		jule::out(_3621_line);
		jule::out(jule::Str("\n  ", 3));
		jule::out(_1d9d02e37_Repeat(jule::Str(" ", 1), static_cast<jule::I64>(_4417_row.len())));
		jule::out(jule::Str(" | ", 3));
		jule::out(_1d9d02e37_Repeat(jule::Str(" ", 1), static_cast<jule::I64>(((*(_1925_l))._field_Column - _3721_offset))));
		jule::out(jule::Str("^", 1));
		if (((*(_1925_l))._field_Suggestion.len() != 0LL)) {
			jule::out(jule::Str("\n  ", 3));
			jule::out(_1d9d02e37_Repeat(jule::Str(" ", 1), static_cast<jule::I64>(_4417_row.len())));
			jule::out(jule::Str(" | ", 3));
			static__1ab41dd78_Print(jule::Str("\033[95m", 5), jule::Str("suggestion: ", 12));
			jule::out((*(_1925_l))._field_Suggestion);
		};
	};
	jule::outln(jule::Str("\n", 1));
}



inline void static__1ab420b27_Log(_1d9d938bd_Log* _6520_l) {
	{
		auto &_match_expr{ (*(_6520_l))._field_Kind };
		
		if (_match_expr == static_cast<jule::I64>(0LL)) {
			_case_begin_1bad1a523:;
			{
				static__1ab420709_LogFlat(_6520_l);
			}
		}
		else if (_match_expr == static_cast<jule::I64>(1LL)) {
			_case_begin_1bad1a589:;
			{
				static__1ab420918_LogError(_6520_l);
			}
		}
		_match_end_1bad1a3be:;
	};
}



inline void static__1ab420d36_PrintLogs(jule::Slice<_1d9d938bd_Log>* _7526_logs) {
	{
		auto expr = _7526_logs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bad1b4e1:;
		if (it != expr_end) {
			_1d9d938bd_Log *_7616_l = it;
			{
				static__1ab420b27_Log(_7616_l);
			}
			_iter_next_1bad1b4e1:;
			++it;
			goto _iter_begin_1bad1b4e1;
		}
		_iter_end_1bad1b4e1:;
	};
	jule::out(jule::Str("=== ", 4));
	jule::out(_1dc5b298b_Itoa(static_cast<jule::I64>((*(_7526_logs)).len())));
	jule::outln(jule::Str(" error generated ===", 20));
}







std::ostream &operator<<(std::ostream &_Stream, _1ab420473_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}



inline jule::U64 _1abc2795b_Unix(_1abc275a4_AbsTime* _self_) {
	jule::Bool _5617_leap = false;;
	jule::U64 _5717_y = ((*(_self_))._field_Year - 1900LLU);;
	jule::U64 _5817_m = ((*(_self_))._field_Month - 1LLU);;
	if (((_5817_m >= 12LLU) || (_5817_m < 0LLU))) {
		jule::U64 _6021_adj = (_5817_m / 12LLU);;
		_5817_m%=12LL;
		if ((_5817_m < 0LLU)) {
			(_6021_adj)--;
			_5817_m+=12LLU;
		};
		_5717_y+=_6021_adj;
	};
	jule::U64 _6817_t = _1abc29ee1_unixYearToSeconds(_5717_y, &(_5617_leap));;
	_6817_t+=_1abc2a376_unixMonthToSeconds(_5817_m, _5617_leap);
	_6817_t+=(86400LLU * ((*(_self_))._field_Day - 1LLU));
	_6817_t+=(3600LLU * (*(_self_))._field_Hour);
	_6817_t+=(60LLU * (*(_self_))._field_Minute);
	_6817_t+=(*(_self_))._field_Second;
	return _6817_t;;
}







std::ostream &operator<<(std::ostream &_Stream, _1abc275a4_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "Day:" << _Src._field_Day << ", ";
	_Stream << "WeekDay:" << _Src._field_WeekDay << ", ";
	_Stream << "YearDay:" << _Src._field_YearDay << ", ";
	_Stream << "Month:" << _Src._field_Month << ", ";
	_Stream << "Year:" << _Src._field_Year << ", ";
	_Stream << "Second:" << _Src._field_Second << ", ";
	_Stream << "Minute:" << _Src._field_Minute << ", ";
	_Stream << "Hour:" << _Src._field_Hour;
	_Stream << "}";
	return _Stream;
}



inline _1abc27c47_Time static__1abc280dd_Unix(jule::U64 _9120_sec) {
	return _1abc27c47_Time{._field_sec=_9120_sec};;
}



inline _1abc27c47_Time static__1abc282db_Now(void) {
	return static__1abc280dd_Unix(static_cast<jule::U64>(_1abc29bd3_unix()));;
}



inline jule::U64 _1abc2873c_Unix(_1abc27c47_Time* _self_) {
	return (*(_self_))._field_sec;;
}



inline jule::U64 _1abc289a1_Day(_1abc27c47_Time* _self_) {
	return _1abc2992a_Abs(_self_)._field_Day;;
}



inline jule::U64 _1abc28c15_Month(_1abc27c47_Time* _self_) {
	return _1abc2992a_Abs(_self_)._field_Month;;
}



inline jule::U64 _1abc28e79_Year(_1abc27c47_Time* _self_) {
	return _1abc2992a_Abs(_self_)._field_Year;;
}



inline jule::U64 _1abc291dd_Second(_1abc27c47_Time* _self_) {
	return _1abc2992a_Abs(_self_)._field_Second;;
}



inline jule::U64 _1abc29452_Minute(_1abc27c47_Time* _self_) {
	return _1abc2992a_Abs(_self_)._field_Minute;;
}



inline jule::U64 _1abc296b6_Hour(_1abc27c47_Time* _self_) {
	return _1abc2992a_Abs(_self_)._field_Hour;;
}



inline _1abc275a4_AbsTime _1abc2992a_Abs(_1abc27c47_Time* _self_) {
	jule::U64 _12713_secs = ((*(_self_))._field_sec - 951868800LLU);;
	jule::U64 _12817_days = (_12713_secs / 86400LLU);;
	jule::U64 _12917_remSecs = (_12713_secs % 86400LL);;
	if ((_12917_remSecs < 0LLU)) {
		_12917_remSecs+=86400LLU;
		(_12817_days)--;
	};
	jule::U64 _13517_qcCycles = (_12817_days / 146097LLU);;
	jule::U64 _13617_remDays = (_12817_days % 146097LL);;
	if ((_13617_remDays < 0LLU)) {
		_13617_remDays+=146097LLU;
		(_13517_qcCycles)--;
	};
	jule::U64 _14217_cCycles = (_13617_remDays / 36524LLU);;
	if ((_14217_cCycles == 4LLU)) {
		(_14217_cCycles)--;
	};
	_13617_remDays-=(_14217_cCycles * 36524LLU);
	jule::U64 _14817_qCycles = (_13617_remDays / 1461LLU);;
	if ((_14817_qCycles == 25LLU)) {
		(_14817_qCycles)--;
	};
	_13617_remDays-=(_14817_qCycles * 1461LLU);
	jule::U64 _15417_remYears = (_13617_remDays / 365LLU);;
	if ((_15417_remYears == 4LLU)) {
		(_15417_remYears)--;
	};
	_13617_remDays-=(_15417_remYears * 365LLU);
	jule::U64 _16017_leap = static_cast<jule::U64>(0LLU);;
	if (((_15417_remYears == 0LLU) && ((_14817_qCycles > 0LLU) || (_14217_cCycles == 0LLU)))) {
		_16017_leap=1LLU;
	};
	jule::U64 _16417_yDay = (((_13617_remDays + 31LLU) + 28LLU) + _16017_leap);;
	if ((_16417_yDay >= (365LLU + _16017_leap))) {
		_16417_yDay-=(365LLU + _16017_leap);
	};
	jule::U64 _16917_months = 0LLU;;
	for (; (_1abc26b36_mdays[static_cast<jule::I64>(_16917_months)] <= _13617_remDays); (_16917_months)++) {
		{
			_13617_remDays-=_1abc26b36_mdays[static_cast<jule::I64>(_16917_months)];
		}
	_iter_next_1bae4ee2c:;
	}
	_iter_end_1bae4ee2c:;;
	_1abc275a4_AbsTime _17417_t = _1abc275a4_AbsTime{};;
	_17417_t._field_Year=static_cast<jule::U64>(((((_15417_remYears + (4LLU * _14817_qCycles)) + (100LLU * _14217_cCycles)) + (400LLU * _13517_qcCycles)) + 100LLU));
	_17417_t._field_Month=static_cast<jule::U64>((_16917_months + 2LLU));
	if ((_17417_t._field_Month >= 12LLU)) {
		_17417_t._field_Month-=12LLU;
		(_17417_t._field_Year)++;
	};
	_17417_t._field_Month+=1LLU;
	_17417_t._field_Year+=1900LLU;
	_17417_t._field_Day=static_cast<jule::U64>((_13617_remDays + 1LLU));
	_17417_t._field_WeekDay=static_cast<jule::U64>(((3LLU + _12817_days) % 7LL));
	if ((_17417_t._field_WeekDay < 0LLU)) {
		_17417_t._field_WeekDay+=7LLU;
	};
	_17417_t._field_YearDay=_16417_yDay;
	_17417_t._field_Hour=static_cast<jule::U64>((_12917_remSecs / 3600LLU));
	_17417_t._field_Minute=static_cast<jule::U64>(((_12917_remSecs / 60LLU) % 60LL));
	_17417_t._field_Second=static_cast<jule::U64>((_12917_remSecs % 60LL));
	return _17417_t;;
}







std::ostream &operator<<(std::ostream &_Stream, _1abc27c47_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1abb71e38_scopeCoder> static__1abb72576_new(jule::Ptr<_1abc31cc8_ObjectCoder>* _6424_oc) {
	return jule::new_ptr<_1abb71e38_scopeCoder>(_1abb71e38_scopeCoder{._field_oc=(*(_6424_oc))});;
}



inline void _1baeec78d_iterHead(jule::Ptr<_1abb71e38_scopeCoder> _self_, jule::Ptr<_1aa8b4253_RangeIter>* _7132_it, jule::Bool* _7144_ref, jule::Str* _7156_begin) {
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1abc32647_addIndent(_self_.get()._field_oc);
	_1abc329ee_indent(_self_.get()._field_oc);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("auto expr = ", 12));
	if ((_1aa2cbaa0_Copy && _1abb77aed_isCopyOptimizable(&((*(_7132_it)).get()._field_Expr)))) {
		(*(_7144_ref))=true;
		{
			auto &_match_expr{ (*(_7132_it)).get()._field_Expr.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1baeee130:;
				{
					jule::Ptr<_1aa908c59_Var> _8021_v = (*(_7132_it)).get()._field_Expr.get()._field_Model.cast_ptr<_1aa908c59_Var>(&__jule_any_type8);;
					if (_8021_v.get()._field_Reference) {
						_1abb87107_model(_self_.get()._field_oc.get()._field_ec, (*(_7132_it)).get()._field_Expr.get()._field_Model);
						goto _match_end_1bb000b7b;
					};
					goto _case_begin_1bb000bd1;
				}
			}
			else {
				_case_begin_1bb000bd1:;
				{
					_1abc3246b_write(_self_.get()._field_oc, jule::Str("&(", 2));
					_1abb87107_model(_self_.get()._field_oc.get()._field_ec, (*(_7132_it)).get()._field_Expr.get()._field_Model);
					_1abc3246b_write(_self_.get()._field_oc, jule::Str(")", 1));
				}
			}
			_match_end_1bb000b7b:;
		};
	} else {
		_1abb7d384_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, (*(_7132_it)).get()._field_Expr.get()._field_Model);
	};
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1abc329ee_indent(_self_.get()._field_oc);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("auto it = expr", 14));
	if ((*(_7144_ref))) {
		_1abc3246b_write(_self_.get()._field_oc, jule::Str("->", 2));
	} else {
		_1abc3246b_write(_self_.get()._field_oc, jule::Str(".", 1));
	};
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("begin();\n", 9));
	_1abc329ee_indent(_self_.get()._field_oc);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("auto expr_end = expr", 20));
	if ((*(_7144_ref))) {
		_1abc3246b_write(_self_.get()._field_oc, jule::Str("->", 2));
	} else {
		_1abc3246b_write(_self_.get()._field_oc, jule::Str(".", 1));
	};
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("end();\n", 7));
	_1abc329ee_indent(_self_.get()._field_oc);
	_1abc3246b_write(_self_.get()._field_oc, (*(_7156_begin)));
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1abc329ee_indent(_self_.get()._field_oc);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("if (it != expr_end) {\n", 22));
	_1abc32647_addIndent(_self_.get()._field_oc);
	_1abc329ee_indent(_self_.get()._field_oc);
}



inline void _1abb72bb4_rangeIndexIter(jule::Ptr<_1abb71e38_scopeCoder> _self_, jule::Ptr<_1aa8b4253_RangeIter>* _12039_it) {
	jule::Str _12113_begin = static__1abb90dad_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12039_it)))));;
	jule::Str _12213_next = static__1abb913ec_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12039_it)))));;
	jule::Bool _12417_ref = false;;
	_1baeec78d_iterHead(_self_, _12039_it, &(_12417_ref), &(_12113_begin));
	if (((*(_12039_it)).get()._field_KeyA != nullptr)) {
		_1abc3953e_varInitExpr(_self_.get()._field_oc, &((*(_12039_it)).get()._field_KeyA), jule::Fn<void(void)>([=](void) mutable -> void {
			if (_12417_ref) {
				_1abc3246b_write(_self_.get()._field_oc, jule::Str("it - expr->begin()", 18));
			} else {
				_1abc3246b_write(_self_.get()._field_oc, jule::Str("it - expr.begin()", 17));
			};
		}));
		_1abc3246b_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1abc329ee_indent(_self_.get()._field_oc);
	};
	if (((*(_12039_it)).get()._field_KeyB != nullptr)) {
		(*(_12039_it)).get()._field_KeyB.get()._field_Reference=(_1aa2cbaa0_Copy && _1abb77e83_isIterCopyOptimizable(&((*(_12039_it)).get()._field_Expr), &((*(_12039_it)).get()._field_KeyB)));
		_1abc3953e_varInitExpr(_self_.get()._field_oc, &((*(_12039_it)).get()._field_KeyB), jule::Fn<void(void)>([=](void) mutable -> void {
			{
				if ((*(_12039_it)).get()._field_KeyB.get()._field_Reference) {
					_1abc3246b_write(_self_.get()._field_oc, jule::Str("it", 2));
				} else {
					_1abc3246b_write(_self_.get()._field_oc, jule::Str("*it", 3));
				};
			};
		}));
		_1abc3246b_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1abc329ee_indent(_self_.get()._field_oc);
	};
	_1abb77526_scope(_self_, (*(_12039_it)).get()._field_Scope);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1abc329ee_indent(_self_.get()._field_oc);
	_1abc3246b_write(_self_.get()._field_oc, _12213_next);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1abc329ee_indent(_self_.get()._field_oc);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_1abc329ee_indent(_self_.get()._field_oc);
	if (((*(_12039_it)).get()._field_KeyA != nullptr)) {
		_1abc3246b_write(_self_.get()._field_oc, static__1abb90b16_var((*(_12039_it)).get()._field_KeyA));
		_1abc3246b_write(_self_.get()._field_oc, jule::Str("++;\n", 4));
		_1abc329ee_indent(_self_.get()._field_oc);
	};
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1abc3246b_write(_self_.get()._field_oc, _12113_begin);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1abc32823_doneIndent(_self_.get()._field_oc);
	_1abc329ee_indent(_self_.get()._field_oc);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1abc329ee_indent(_self_.get()._field_oc);
	_1abc3246b_write(_self_.get()._field_oc, static__1abb91155_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12039_it))))));
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1abc32823_doneIndent(_self_.get()._field_oc);
	_1abc329ee_indent(_self_.get()._field_oc);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1abb72e39_rangeHashmapIter(jule::Ptr<_1abb71e38_scopeCoder> _self_, jule::Ptr<_1aa8b4253_RangeIter>* _18341_it) {
	jule::Str _18413_begin = static__1abb90dad_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18341_it)))));;
	jule::Str _18513_next = static__1abb913ec_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18341_it)))));;
	jule::Bool _18717_ref = false;;
	_1baeec78d_iterHead(_self_, _18341_it, &(_18717_ref), &(_18413_begin));
	if (((*(_18341_it)).get()._field_KeyA != nullptr)) {
		_1abc3953e_varInitExpr(_self_.get()._field_oc, &((*(_18341_it)).get()._field_KeyA), jule::Fn<void(void)>([=](void) mutable -> void {
			_1abc3246b_write(_self_.get()._field_oc, jule::Str("it->first", 9));
		}));
		_1abc3246b_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1abc329ee_indent(_self_.get()._field_oc);
	};
	if (((*(_18341_it)).get()._field_KeyB != nullptr)) {
		_1abc3953e_varInitExpr(_self_.get()._field_oc, &((*(_18341_it)).get()._field_KeyB), jule::Fn<void(void)>([=](void) mutable -> void {
			_1abc3246b_write(_self_.get()._field_oc, jule::Str("it->second", 10));
		}));
		_1abc3246b_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1abc329ee_indent(_self_.get()._field_oc);
	};
	_1abb77526_scope(_self_, (*(_18341_it)).get()._field_Scope);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1abc329ee_indent(_self_.get()._field_oc);
	_1abc3246b_write(_self_.get()._field_oc, _18513_next);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1abc329ee_indent(_self_.get()._field_oc);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_1abc329ee_indent(_self_.get()._field_oc);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1abc3246b_write(_self_.get()._field_oc, _18413_begin);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1abc32823_doneIndent(_self_.get()._field_oc);
	_1abc329ee_indent(_self_.get()._field_oc);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1abc329ee_indent(_self_.get()._field_oc);
	_1abc3246b_write(_self_.get()._field_oc, static__1abb91155_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18341_it))))));
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1abc32823_doneIndent(_self_.get()._field_oc);
	_1abc329ee_indent(_self_.get()._field_oc);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1abb731ae_ifCase(jule::Ptr<_1abb71e38_scopeCoder> _self_, jule::Ptr<_1aa8b299e_If> _22630_i) {
	if ((_22630_i.get()._field_Expr != nullptr)) {
		_1abc3246b_write(_self_.get()._field_oc, jule::Str("if (", 4));
		_1abb7d384_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _22630_i.get()._field_Expr);
		_1abc3246b_write(_self_.get()._field_oc, jule::Str(") ", 2));
	};
	_1abb77526_scope(_self_, _22630_i.get()._field_Scope);
}



inline void _1abb73434_conditional(jule::Ptr<_1abb71e38_scopeCoder> _self_, jule::Ptr<_1aa8b310e_Conditional> _23535_c) {
	jule::Bool _23617_writed = false;;
	{
		auto expr = &(_23535_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb023a7d:;
		if (it != expr_end) {
			jule::Ptr<_1aa8b299e_If> _23721_elif = *it;
			{
				if ((_23721_elif == nullptr)) {
					goto _iter_next_1bb023a7d;
				};
				if (_23617_writed) {
					_1abc3246b_write(_self_.get()._field_oc, jule::Str(" else ", 6));
				};
				_23617_writed=true;
				_1abb731ae_ifCase(_self_, _23721_elif);
			}
			_iter_next_1bb023a7d:;
			++it;
			goto _iter_begin_1bb023a7d;
		}
		_iter_end_1bb023a7d:;
	};
	if ((_23535_c.get()._field_Default != nullptr)) {
		if (_23617_writed) {
			_1abc3246b_write(_self_.get()._field_oc, jule::Str(" else ", 6));
		};
		_1abb77526_scope(_self_, _23535_c.get()._field_Default.get()._field_Scope);
	};
}



inline void _1abb736a9_infIter(jule::Ptr<_1abb71e38_scopeCoder> _self_, jule::Ptr<_1aa8b33ea_InfIter> _25531_it) {
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("for (;;) {\n", 11));
	_1abc32647_addIndent(_self_.get()._field_oc);
	_1abc329ee_indent(_self_.get()._field_oc);
	_1abb77526_scope(_self_, _25531_it.get()._field_Scope);
	_1abc32823_doneIndent(_self_.get()._field_oc);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1abc329ee_indent(_self_.get()._field_oc);
	_1abc3246b_write(_self_.get()._field_oc, static__1abb913ec_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_25531_it))));
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1abc329ee_indent(_self_.get()._field_oc);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1abc329ee_indent(_self_.get()._field_oc);
	_1abc3246b_write(_self_.get()._field_oc, static__1abb91155_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_25531_it))));
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _1abb7392e_whileIter(jule::Ptr<_1abb71e38_scopeCoder> _self_, jule::Ptr<_1aa8b386d_WhileIter> _27233_it) {
	if (((_27233_it.get()._field_Expr != nullptr) && (_27233_it.get()._field_Next == nullptr))) {
		_1abc3246b_write(_self_.get()._field_oc, jule::Str("while (", 7));
		_1abb7d384_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _27233_it.get()._field_Expr);
		_1abc3246b_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	} else {
		_1abc3246b_write(_self_.get()._field_oc, jule::Str("for (; ", 7));
		if ((_27233_it.get()._field_Expr != nullptr)) {
			_1abb7d384_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _27233_it.get()._field_Expr);
		};
		_1abc3246b_write(_self_.get()._field_oc, jule::Str("; ", 2));
		if ((_27233_it.get()._field_Next != nullptr)) {
			_1abb7702b_st(_self_, _27233_it.get()._field_Next);
		};
		_1abc3246b_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	};
	_1abc32647_addIndent(_self_.get()._field_oc);
	_1abc329ee_indent(_self_.get()._field_oc);
	_1abb77526_scope(_self_, _27233_it.get()._field_Scope);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1abc32823_doneIndent(_self_.get()._field_oc);
	_1abc329ee_indent(_self_.get()._field_oc);
	_1abc3246b_write(_self_.get()._field_oc, static__1abb913ec_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_27233_it))));
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1abc329ee_indent(_self_.get()._field_oc);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1abc329ee_indent(_self_.get()._field_oc);
	_1abc3246b_write(_self_.get()._field_oc, static__1abb91155_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_27233_it))));
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _1abb73ba4_rangeIter(jule::Ptr<_1abb71e38_scopeCoder> _self_, jule::Ptr<_1aa8b4253_RangeIter> _30533_it) {
	{
		
		if ((_1aa986bd8_Slc(_30533_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb033a16:;
			{
				_1abb72bb4_rangeIndexIter(_self_, &(_30533_it));
			}
		}
		else if ((_1aa986974_Arr(_30533_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb0336d6:;
			{
				_1abb72bb4_rangeIndexIter(_self_, &(_30533_it));
			}
		}
		else if ((_1aa987689_Map(_30533_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb03374c:;
			{
				_1abb72e39_rangeHashmapIter(_self_, &(_30533_it));
			}
		}
		else {
			_case_begin_1bb033670:;
			{
				_1abb72bb4_rangeIndexIter(_self_, &(_30533_it));
			}
		}
		_match_end_1bb0335a4:;
	};
}



inline void _1abb73e29_cont(jule::Ptr<_1abb71e38_scopeCoder> _self_, jule::Ptr<_1aa8b464e_ContSt> _31824_c) {
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1abc3246b_write(_self_.get()._field_oc, static__1abb913ec_iterNext(_31824_c.get()._field_It));
}



inline void _1abb7419e_label(jule::Ptr<_1abb71e38_scopeCoder> _self_, jule::Ptr<_1aa8b4ce2_Label> _32325_l) {
	_1abc3246b_write(_self_.get()._field_oc, static__1abb91694_label(&(_32325_l.get()._field_Ident)));
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(":", 1));
}



inline void _1abb74424_gotoSt(jule::Ptr<_1abb71e38_scopeCoder> _self_, jule::Ptr<_1aa8b50cd_GotoSt> _32826_gt) {
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1abc3246b_write(_self_.get()._field_oc, static__1abb91694_label(&(_32826_gt.get()._field_Ident)));
}



inline void _1abb74699_postfix(jule::Ptr<_1abb71e38_scopeCoder> _self_, jule::Ptr<_1aa8b5485_Postfix> _33331_p) {
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1abb7d384_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _33331_p.get()._field_Expr);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(")", 1));
	_1abc3246b_write(_self_.get()._field_oc, _33331_p.get()._field_Op);
}



inline void _1abb7491e_assign(jule::Ptr<_1abb71e38_scopeCoder> _self_, jule::Ptr<_1aa8b5908_Assign> _34030_a) {
	_1abb7d384_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _34030_a.get()._field_L.get()._field_Model);
	_1abc3246b_write(_self_.get()._field_oc, _34030_a.get()._field_Op.get()._field_Kind);
	_1abb7d384_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _34030_a.get()._field_R.get()._field_Model);
}



inline void _1abb74b94_mapLookupAssign(jule::Ptr<_1abb71e38_scopeCoder> _self_, jule::Ptr<_1aa8b5cb0_MultiAssign>* _34640_a) {
	jule::Ptr<_1aa87d948_IndexingExprModel> _34717_iem = (*(_34640_a)).get()._field_R.cast_ptr<_1aa87d948_IndexingExprModel>(&__jule_any_type46);;
	_1abb7d384_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _34717_iem.get()._field_Expr.get()._field_Model);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(".lookup(", 8));
	_1abb7d384_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _34717_iem.get()._field_Index.get()._field_Model);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(", ", 2));
	if (((*(_34640_a)).get()._field_L[0LL] != nullptr)) {
		_1abc3246b_write(_self_.get()._field_oc, jule::Str("&(", 2));
		_1abb7d384_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, (*(_34640_a)).get()._field_L[0LL].get()._field_Model);
		_1abc3246b_write(_self_.get()._field_oc, jule::Str("), ", 3));
	} else {
		_1abc3246b_write(_self_.get()._field_oc, jule::Str("nullptr, ", 9));
	};
	if (((*(_34640_a)).get()._field_L[1LL] != nullptr)) {
		_1abc3246b_write(_self_.get()._field_oc, jule::Str("&(", 2));
		_1abb7d384_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, (*(_34640_a)).get()._field_L[1LL].get()._field_Model);
		_1abc3246b_write(_self_.get()._field_oc, jule::Str(")", 1));
	} else {
		_1abc3246b_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
	};
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1abb74e19_multiAssignTup(jule::Ptr<_1abb71e38_scopeCoder> _self_, jule::Ptr<_1aa8b5cb0_MultiAssign>* _36939_a) {
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_1abc32647_addIndent(_self_.get()._field_oc);
	jule::Ptr<_1aa881d47_TupleExprModel> _37317_tup = (*(_36939_a)).get()._field_R.cast_ptr<_1aa881d47_TupleExprModel>(&__jule_any_type87);;
	{
		auto expr = &(_37317_tup.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb043dde:;
		if (it != expr_end) {
			jule::I64 _37514_i = it - expr->begin();
			jule::Ptr<_1aa957d85_Data> _37521_r = *it;
			{
				_1abc329ee_indent(_self_.get()._field_oc);
				jule::Ptr<_1aa957d85_Data> _37721_l = (*(_36939_a)).get()._field_L[_37514_i];;
				if ((_37721_l != nullptr)) {
					{
						auto &_match_expr{ _37721_l.get()._field_Model };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1bb0467a4:;
							{
								jule::Ptr<_1aa908c59_Var> _38129_v = _37721_l.get()._field_Model.cast_ptr<_1aa908c59_Var>(&__jule_any_type8);;
								if ((_38129_v.get()._field_Reference && (!(_1aa909122_IsInitialized(_38129_v.ptr()))))) {
									_1abc3246b_write(_self_.get()._field_oc, static__1abb90b16_var(_38129_v));
									_1abc3246b_write(_self_.get()._field_oc, jule::Str(" = &(", 5));
									_1abb7d384_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _37521_r.get()._field_Model);
									_1abc3246b_write(_self_.get()._field_oc, jule::Str(");\n", 3));
									(*(_36939_a)).get()._field_L[_37514_i]=nullptr;
									goto _iter_next_1bb043dde;
								};
							}
						}
						_match_end_1bb04674e:;
					};
					_1abc3246b_write(_self_.get()._field_oc, _1abc45935_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _37721_l.get()._field_Kind));
					_1abc3246b_write(_self_.get()._field_oc, jule::Str(" ", 1));
					_1abc3246b_write(_self_.get()._field_oc, static__1abb8e120_toOut(&(_1abb7181c_assignArgName), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_37514_i))));
					_1abc3246b_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				};
				_1abb7d384_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _37521_r.get()._field_Model);
				_1abc3246b_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_1bb043dde:;
			++it;
			_37514_i++;
			goto _iter_begin_1bb043dde;
		}
		_iter_end_1bb043dde:;
	};
	{
		auto expr = &((*(_36939_a)).get()._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb04b259:;
		if (it != expr_end) {
			jule::I64 _40214_i = it - expr->begin();
			jule::Ptr<_1aa957d85_Data> _40221_l = *it;
			{
				if ((_40221_l == nullptr)) {
					goto _iter_next_1bb04b259;
				};
				_1abc329ee_indent(_self_.get()._field_oc);
				_1abb7d384_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _40221_l.get()._field_Model);
				_1abc3246b_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1abc3246b_write(_self_.get()._field_oc, static__1abb8e120_toOut(&(_1abb7181c_assignArgName), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_40214_i))));
				_1abc3246b_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_1bb04b259:;
			++it;
			_40214_i++;
			goto _iter_begin_1bb04b259;
		}
		_iter_end_1bb04b259:;
	};
	_1abc32823_doneIndent(_self_.get()._field_oc);
	_1abc329ee_indent(_self_.get()._field_oc);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1abb7518e_multiAssignFn(jule::Ptr<_1abb71e38_scopeCoder> _self_, jule::Ptr<_1aa8b5cb0_MultiAssign>* _41838_a) {
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_1abc32647_addIndent(_self_.get()._field_oc);
	_1abc329ee_indent(_self_.get()._field_oc);
	jule::Ptr<_1aa87d11d_FnCallExprModel> _42317_f = (*(_41838_a)).get()._field_R.cast_ptr<_1aa87d11d_FnCallExprModel>(&__jule_any_type35);;
	_1abc502d0_codeMut1(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), &(_42317_f.get()._field_Func.get()._field_Result));
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(" __jule_assign_result = ", 24));
	_1abb7d384_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, (*(_41838_a)).get()._field_R);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	{
		auto expr = &((*(_41838_a)).get()._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb05265b:;
		if (it != expr_end) {
			jule::I64 _42914_i = it - expr->begin();
			jule::Ptr<_1aa957d85_Data> _42921_l = *it;
			{
				if ((_42921_l != nullptr)) {
					_1abc329ee_indent(_self_.get()._field_oc);
					_1abb7d384_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _42921_l.get()._field_Model);
					_1abc3246b_write(_self_.get()._field_oc, jule::Str(" = __jule_assign_result.__jule_result_arg", 41));
					_1abc3246b_write(_self_.get()._field_oc, _1dc5b298b_Itoa(_42914_i));
					_1abc3246b_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				};
			}
			_iter_next_1bb05265b:;
			++it;
			_42914_i++;
			goto _iter_begin_1bb05265b;
		}
		_iter_end_1bb05265b:;
	};
	_1abc32823_doneIndent(_self_.get()._field_oc);
	_1abc329ee_indent(_self_.get()._field_oc);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1abb75414_multiAssign(jule::Ptr<_1abb71e38_scopeCoder> _self_, jule::Ptr<_1aa8b5cb0_MultiAssign> _44435_a) {
	{
		auto &_match_expr{ _44435_a.get()._field_R };
		
		if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1bb055dce:;
			{
				_1abb74b94_mapLookupAssign(_self_, &(_44435_a));
				return;;
			}
		}
		_match_end_1bb055bc0:;
	};
	{
		auto &_match_expr{ _44435_a.get()._field_R };
		
		if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1bb055b04:;
			{
				_1abb74e19_multiAssignTup(_self_, &(_44435_a));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1bb056c48:;
			{
				_1abb7518e_multiAssignFn(_self_, &(_44435_a));
			}
		}
		else {
			_case_begin_1bb056264:;
			{
				jule::panic(jule::Str("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:458:13"));;
			}
		}
		_match_end_1bb05686e:;
	};
}



inline jule::Fn<void(void)> _1abb75722_matchExpr(jule::Ptr<_1abb71e38_scopeCoder> _self_, jule::Ptr<_1aa8b63ba_Match> _46233_m) {
	if ((!(_1aa958748_IsConst(_46233_m.get()._field_Expr.ptr())))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1abc3246b_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
		});;
	};
	if (((!(_1c0905c85_IsBool(_46233_m.get()._field_Expr.get()._field_Constant.ptr()))) || (!(_1c09038dc_ReadBool(_46233_m.get()._field_Expr.get()._field_Constant.ptr()))))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1abb7d384_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _46233_m.get()._field_Expr.get()._field_Model);
		});;
	};
	return nullptr;;
}



inline void _1abb75a41_case(jule::Ptr<_1abb71e38_scopeCoder> _self_, jule::Ptr<_1aa8b63ba_Match> _47228_m, jule::Ptr<_1aa8b6e15_Case> _47243_c) {
	if (((_47243_c.get()._field_Exprs.len() != 0LL) && (!(_47228_m.get()._field_Comptime)))) {
		if (((_47228_m.get()._field_Cases.len() > 0LL) && (_47228_m.get()._field_Cases[0LL] == _47243_c))) {
			_1abc3246b_write(_self_.get()._field_oc, jule::Str("if (", 4));
		} else {
			_1abc3246b_write(_self_.get()._field_oc, jule::Str("else if (", 9));
		};
		{
			auto expr = &(_47243_c.get()._field_Exprs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bb05c1b0:;
			if (it != expr_end) {
				jule::I64 _47918_i = it - expr->begin();
				jule::Ptr<_1aa957d85_Data> _47925_expr = *it;
				{
					{
						
						if ((!(_47228_m.get()._field_TypeMatch))) {
							_case_begin_1bb06355c:;
							{
								jule::Fn<void(void)> _48225_caseExpr = _1abb75722_matchExpr(_self_, _47228_m);;
								if (_1aa958a56_GoodOperand(_47228_m.get()._field_Expr.ptr(), &(_47925_expr))) {
									if ((_48225_caseExpr != nullptr)) {
										_48225_caseExpr();
										_1abc3246b_write(_self_.get()._field_oc, jule::Str(" == ", 4));
									};
									_1abb7d384_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _47925_expr.get()._field_Model);
								} else {
									_1abb7d384_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _47925_expr.get()._field_Model);
									if ((_48225_caseExpr != nullptr)) {
										_1abc3246b_write(_self_.get()._field_oc, jule::Str(" == ", 4));
										_48225_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_1bb05d3e2:;
							{
								_1abc3246b_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
								jule::Ptr<_1aa983872_TypeKind> _49829_tk = _47925_expr.get()._field_Model.cast_ptr<_1aa983872_TypeKind>(&__jule_any_type89);;
								if ((_1aa987425_Trait(_47228_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									_1abc3246b_write(_self_.get()._field_oc, jule::Str(".type_is(", 9));
									_1abb7ac77_boolean(_self_.get()._field_oc.get()._field_ec, (_1aa985ec3_Sptr(_47925_expr.get()._field_Kind.ptr()) != nullptr));
									_1abc3246b_write(_self_.get()._field_oc, jule::Str(", ", 2));
									_1abc3246b_write(_self_.get()._field_oc, _1dc5b298b_Itoa(static_cast<jule::I64>(_1abc33d74_findTypeOffset(_self_.get()._field_oc.ptr(), _1aa987425_Trait(_47228_m.get()._field_Expr.get()._field_Kind.ptr()), _47925_expr.get()._field_Kind))));
									_1abc3246b_write(_self_.get()._field_oc, jule::Str(")", 1));
								} else {
									jule::I64 _50629_j = _1abc3311a_pushAnyType(_self_.get()._field_oc, _49829_tk);;
									_1abc3246b_write(_self_.get()._field_oc, jule::Str(".type == &__jule_any_type", 25));
									_1abc3246b_write(_self_.get()._field_oc, _1dc5b298b_Itoa(_50629_j));
								};
							}
						}
						_match_end_1bb05d326:;
					};
					if (((_47243_c.get()._field_Exprs.len() - _47918_i) > 1LL)) {
						_1abc3246b_write(_self_.get()._field_oc, jule::Str(" || ", 4));
					};
				}
				_iter_next_1bb05c1b0:;
				++it;
				_47918_i++;
				goto _iter_begin_1bb05c1b0;
			}
			_iter_end_1bb05c1b0:;
		};
		_1abc3246b_write(_self_.get()._field_oc, jule::Str(") ", 2));
	} else if (((_47228_m.get()._field_Default == _47243_c) && (_47228_m.get()._field_Cases.len() != 0LL))) {
		_1abc329ee_indent(_self_.get()._field_oc);
		_1abc3246b_write(_self_.get()._field_oc, jule::Str("else ", 5));
	};
	_1abc32647_addIndent(_self_.get()._field_oc);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1abc329ee_indent(_self_.get()._field_oc);
	_1abc3246b_write(_self_.get()._field_oc, static__1abb91bd3_caseBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_47243_c))));
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	if ((_47243_c.get()._field_Scope.get()._field_Stmts.len() > 0LL)) {
		_1abc329ee_indent(_self_.get()._field_oc);
		_1abb77526_scope(_self_, _47243_c.get()._field_Scope);
		_1abc3246b_write(_self_.get()._field_oc, jule::Str("\n", 1));
	};
	_1abc32823_doneIndent(_self_.get()._field_oc);
	_1abc329ee_indent(_self_.get()._field_oc);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1abb75cb6_matchSt(jule::Ptr<_1abb71e38_scopeCoder> _self_, jule::Ptr<_1aa8b63ba_Match> _54031_m) {
	if (((_54031_m.get()._field_Cases.len() == 0LL) && (_54031_m.get()._field_Default == nullptr))) {
		return;;
	};
	if ((_54031_m.get()._field_Comptime && ((_54031_m.get()._field_Default == nullptr) || (_54031_m.get()._field_Default.get()._field_Scope.get()._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1abc32647_addIndent(_self_.get()._field_oc);
	_1abc329ee_indent(_self_.get()._field_oc);
	if (((!(_54031_m.get()._field_Comptime)) && (!(_1aa958748_IsConst(_54031_m.get()._field_Expr.ptr()))))) {
		if ((_1aa2cbaa0_Copy && _1abb77aed_isCopyOptimizable(&(_54031_m.get()._field_Expr)))) {
			_1abc3246b_write(_self_.get()._field_oc, jule::Str("auto &_match_expr{ ", 19));
		} else {
			_1abc3246b_write(_self_.get()._field_oc, jule::Str("auto _match_expr{ ", 18));
		};
		_1abb7d384_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _54031_m.get()._field_Expr.get()._field_Model);
		_1abc3246b_write(_self_.get()._field_oc, jule::Str(" };\n", 4));
		_1abc329ee_indent(_self_.get()._field_oc);
	};
	if ((_54031_m.get()._field_Cases.len() > 0LL)) {
		{
			auto expr = &(_54031_m.get()._field_Cases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bb071c30:;
			if (it != expr_end) {
				jule::Ptr<_1aa8b6e15_Case> _56825_c = *it;
				{
					if ((_56825_c == nullptr)) {
						goto _iter_next_1bb071c30;
					};
					_1abc3246b_write(_self_.get()._field_oc, jule::Str("\n", 1));
					_1abc329ee_indent(_self_.get()._field_oc);
					_1abb75a41_case(_self_, _54031_m, _56825_c);
				}
				_iter_next_1bb071c30:;
				++it;
				goto _iter_begin_1bb071c30;
			}
			_iter_end_1bb071c30:;
		};
	};
	if ((_54031_m.get()._field_Default != nullptr)) {
		_1abc3246b_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1abb75a41_case(_self_, _54031_m, _54031_m.get()._field_Default);
	};
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1abc329ee_indent(_self_.get()._field_oc);
	_1abc3246b_write(_self_.get()._field_oc, static__1abb9193b_matchEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_54031_m))));
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(":;", 2));
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1abc32823_doneIndent(_self_.get()._field_oc);
	_1abc329ee_indent(_self_.get()._field_oc);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1abb7603b_fallSt(jule::Ptr<_1abb71e38_scopeCoder> _self_, jule::Ptr<_1aa8b74ba_FallSt> _59526_f) {
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1abc3246b_write(_self_.get()._field_oc, static__1abb91bd3_caseBegin(_59526_f.get()._field_DestCase));
}



inline void _1abb762b1_breakSt(jule::Ptr<_1abb71e38_scopeCoder> _self_, jule::Ptr<_1aa8b4a06_BreakSt> _60027_b) {
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	if ((_60027_b.get()._field_It != 0LLU)) {
		_1abc3246b_write(_self_.get()._field_oc, static__1abb91155_iterEnd(_60027_b.get()._field_It));
	} else {
		_1abc3246b_write(_self_.get()._field_oc, static__1abb9193b_matchEnd(_60027_b.get()._field_Mtch));
	};
}



inline void _1abb76536_setResult(jule::Ptr<_1abb71e38_scopeCoder> _self_, jule::Ptr<_1aa8b783e_RetSt> _60933_r) {
	if ((_60933_r.get()._field_Func.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 1LL)) {
		_1abc3246b_write(_self_.get()._field_oc, jule::Str("__jule_func_result = ", 21));
		_1abb7d384_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _60933_r.get()._field_Expr);
		_1abc3246b_write(_self_.get()._field_oc, jule::Str(";\n", 2));
		_1abc329ee_indent(_self_.get()._field_oc);
		return;;
	};
	jule::Slice<jule::Ptr<_1aa957d85_Data>> _61717_datas = _60933_r.get()._field_Expr.cast_ptr<_1aa881d47_TupleExprModel>(&__jule_any_type87).get()._field_Datas;;
	{
		auto expr = &(_61717_datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb07bbb3:;
		if (it != expr_end) {
			jule::I64 _61813_i = it - expr->begin();
			jule::Ptr<_1aa957d85_Data> _61816_data = *it;
			{
				_1abc3246b_write(_self_.get()._field_oc, jule::Str("__jule_func_result.__jule_result_arg", 36));
				_1abc3246b_write(_self_.get()._field_oc, _1dc5b298b_Itoa(_61813_i));
				_1abc3246b_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1abb7d384_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _61816_data.get()._field_Model);
				_1abc3246b_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				_1abc329ee_indent(_self_.get()._field_oc);
			}
			_iter_next_1bb07bbb3:;
			++it;
			_61813_i++;
			goto _iter_begin_1bb07bbb3;
		}
		_iter_end_1bb07bbb3:;
	};
}



inline void _1abb767ab_retSt(jule::Ptr<_1abb71e38_scopeCoder> _self_, jule::Ptr<_1aa8b783e_RetSt> _62829_r) {
	if (_1aa889888_IsVoid(_62829_r.get()._field_Func.get()._field_Decl.ptr())) {
		if (_62829_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
			_1abc3246b_write(_self_.get()._field_oc, jule::Str("return jule::VoidExceptional();", 31));
			return;;
		};
		_1abc3246b_write(_self_.get()._field_oc, jule::Str("return;", 7));
		return;;
	} else if ((_62829_r.get()._field_Func.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 0LL)) {
		if (_62829_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
			_1abc3246b_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
			_1abc3246b_write(_self_.get()._field_oc, _1abc45935_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _62829_r.get()._field_Func.get()._field_Result));
			_1abc3246b_write(_self_.get()._field_oc, jule::Str(">(jule::Any(), ", 15));
			_1abb7d384_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _62829_r.get()._field_Expr);
			_1abc3246b_write(_self_.get()._field_oc, jule::Str(");", 2));
		} else {
			_1abc3246b_write(_self_.get()._field_oc, jule::Str("return ", 7));
			_1abb7d384_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _62829_r.get()._field_Expr);
			_1abc3246b_write(_self_.get()._field_oc, jule::Str(";", 1));
		};
		return;;
	};
	if ((_62829_r.get()._field_Expr != nullptr)) {
		_1abb76536_setResult(_self_, _62829_r);
	};
	if (_62829_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_1abc3246b_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
		_1abc502d0_codeMut1(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), &(_62829_r.get()._field_Func.get()._field_Result));
		_1abc3246b_write(_self_.get()._field_oc, jule::Str(">(jule::Any(), __jule_func_result);", 35));
	} else {
		_1abc3246b_write(_self_.get()._field_oc, jule::Str("return __jule_func_result;", 26));
	};
}



inline void _1abb76a31_var(jule::Ptr<_1abb71e38_scopeCoder> _self_, jule::Ptr<_1aa908c59_Var> _66427_v) {
	if ((!(_66427_v.get()._field_Constant))) {
		_1abc397b4_var(_self_.get()._field_oc, _66427_v);
	};
}



inline void _1abb76ca6_strAppend(jule::Ptr<_1abb71e38_scopeCoder> _self_, jule::Ptr<_1aa2bb6e9_StrAppendExprModel> _67033_m) {
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1abb7d384_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _67033_m.get()._field_Str);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(").append(", 9));
	{
		auto &_match_expr{ _67033_m.get()._field_Expr };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1bb087b47:;
			{
				jule::Ptr<_1c0901b1b_Const> _67617_c = _67033_m.get()._field_Expr.cast_ptr<_1c0901b1b_Const>(&__jule_any_type19);;
				jule::Slice<jule::U8> _67717_bytes = static_cast<jule::Slice<jule::U8>>(_1c0903b51_ReadStr(_67617_c.ptr()));;
				_1abc3246b_write(_self_.get()._field_oc, _1abb88081_cstrLit(_67717_bytes));
				_1abc3246b_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_1abc3246b_write(_self_.get()._field_oc, _1dc5b26e4_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_67717_bytes.len())), 10LL));
			}
		}
		else {
			_case_begin_1bb088d57:;
			{
				_1abb7d384_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _67033_m.get()._field_Expr);
			}
		}
		_match_end_1bb088ce1:;
	};
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1abb7702b_st(jule::Ptr<_1abb71e38_scopeCoder> _self_, jule::Any _68826_st) {
	if ((_68826_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _68826_st };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1bb08c93d:;
			{
				_1abb77526_scope(_self_, _68826_st.cast_ptr<_1aa8b25a3_Scope>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bb08c5ca:;
			{
				_1abb76a31_var(_self_, _68826_st.cast_ptr<_1aa908c59_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1bb08cee3:;
			{
				_1abb87107_model(_self_.get()._field_oc.get()._field_ec, _68826_st.cast_ptr<_1aa957d85_Data>(&__jule_any_type24).get()._field_Model);
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1bb08d059:;
			{
				_1abb73434_conditional(_self_, _68826_st.cast_ptr<_1aa8b310e_Conditional>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1bb08d0c0:;
			{
				_1abb736a9_infIter(_self_, _68826_st.cast_ptr<_1aa8b33ea_InfIter>(&__jule_any_type37));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1bb08d136:;
			{
				_1abb7392e_whileIter(_self_, _68826_st.cast_ptr<_1aa8b386d_WhileIter>(&__jule_any_type39));
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1bb08d19c:;
			{
				_1abb73ba4_rangeIter(_self_, _68826_st.cast_ptr<_1aa8b4253_RangeIter>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1bb08d213:;
			{
				_1abb73e29_cont(_self_, _68826_st.cast_ptr<_1aa8b464e_ContSt>(&__jule_any_type42));
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1bb08d28a:;
			{
				_1abb7419e_label(_self_, _68826_st.cast_ptr<_1aa8b4ce2_Label>(&__jule_any_type21));
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1bb08d312:;
			{
				_1abb74424_gotoSt(_self_, _68826_st.cast_ptr<_1aa8b50cd_GotoSt>(&__jule_any_type43));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1bb08d389:;
			{
				_1abb74699_postfix(_self_, _68826_st.cast_ptr<_1aa8b5485_Postfix>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1bb08d411:;
			{
				_1abb7491e_assign(_self_, _68826_st.cast_ptr<_1aa8b5908_Assign>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1bb08d488:;
			{
				_1abb75414_multiAssign(_self_, _68826_st.cast_ptr<_1aa8b5cb0_MultiAssign>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1bb08d510:;
			{
				_1abb75cb6_matchSt(_self_, _68826_st.cast_ptr<_1aa8b63ba_Match>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1bb08d587:;
			{
				_1abb7603b_fallSt(_self_, _68826_st.cast_ptr<_1aa8b74ba_FallSt>(&__jule_any_type49));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1bb08d60e:;
			{
				_1abb762b1_breakSt(_self_, _68826_st.cast_ptr<_1aa8b4a06_BreakSt>(&__jule_any_type50));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1bb08d686:;
			{
				_1abb767ab_retSt(_self_, _68826_st.cast_ptr<_1aa8b783e_RetSt>(&__jule_any_type51));
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_1bb08d70d:;
			{
				_1abb84d19_pushToSlice(_self_.get()._field_oc.get()._field_ec, _68826_st.cast_ptr<_1aa2bc200_PushToSliceExprModel>(&__jule_any_type126));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1bb08d785:;
			{
				_1abb86887_mutSlicing(_self_.get()._field_oc.get()._field_ec, _68826_st.cast_ptr<_1aa2bc73e_MutSlicingExprModel>(&__jule_any_type123));
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1bb08d80c:;
			{
				_1abb86b0c_strInsertBegin(_self_.get()._field_oc.get()._field_ec, _68826_st.cast_ptr<_1aa2bcb18_StrInsertBeginExprModel>(&__jule_any_type124));
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_1bb08d884:;
			{
				_1abb76ca6_strAppend(_self_, _68826_st.cast_ptr<_1aa2bb6e9_StrAppendExprModel>(&__jule_any_type125));
			}
		}
		else {
			_case_begin_1bb08c3aa:;
			{
				_1abc3246b_write(_self_.get()._field_oc, jule::Str("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1bb08c355:;
	};
}



inline void _1abb772a1_scopeStmts(jule::Ptr<_1abb71e38_scopeCoder> _self_, jule::Ptr<_1aa8b25a3_Scope>* _74035_s) {
	{
		auto expr = &((*(_74035_s)).get()._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb098ac0:;
		if (it != expr_end) {
			jule::Any _74121_st = *it;
			{
				_1abc329ee_indent(_self_.get()._field_oc);
				_1abb7702b_st(_self_, _74121_st);
				_1abc3246b_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_1bb098ac0:;
			++it;
			goto _iter_begin_1bb098ac0;
		}
		_iter_end_1bb098ac0:;
	};
}



inline void _1abb77526_scope(jule::Ptr<_1abb71e38_scopeCoder> _self_, jule::Ptr<_1aa8b25a3_Scope> _74929_s) {
	_1abc32647_addIndent(_self_.get()._field_oc);
	if (_74929_s.get()._field_Deferred) {
		_1abc3246b_write(_self_.get()._field_oc, jule::Str("__JULE_DEFER(", 13));
	};
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1abb772a1_scopeStmts(_self_, &(_74929_s));
	_1abc32823_doneIndent(_self_.get()._field_oc);
	_1abc329ee_indent(_self_.get()._field_oc);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("}", 1));
	if (_74929_s.get()._field_Deferred) {
		_1abc3246b_write(_self_.get()._field_oc, jule::Str(");", 2));
	};
}



inline void _1abb7779b_funcScope(jule::Ptr<_1abb71e38_scopeCoder> _self_, jule::Ptr<_1aa88c0c7_FnIns> _76533_f) {
	if ((_76533_f.get()._field_Scope == nullptr)) {
		return;;
	};
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1abc32647_addIndent(_self_.get()._field_oc);
	if ((!(_1aa889888_IsVoid(_76533_f.get()._field_Decl.ptr())))) {
		jule::Ptr<_1aa98e0a8_Tuple> _77221_tup = _1aa9878ed_Tup(_76533_f.get()._field_Result.ptr());;
		if ((_77221_tup != nullptr)) {
			_1abc329ee_indent(_self_.get()._field_oc);
			_1abc4eb92_tup(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), _77221_tup);
			_1abc3246b_write(_self_.get()._field_oc, jule::Str(" __jule_func_result;\n", 21));
			{
				auto expr = &(_77221_tup.get()._field_Types);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1bb09eba3:;
				if (it != expr_end) {
					jule::I64 _77722_i = it - expr->begin();
					jule::Ptr<_1aa983872_TypeKind> _77729_t = *it;
					{
						if (_1abc525bd_shouldInitialized(&(_77729_t))) {
							_1abc329ee_indent(_self_.get()._field_oc);
							_1abc3246b_write(_self_.get()._field_oc, jule::Str("__jule_func_result.__jule_result_arg", 36));
							_1abc3246b_write(_self_.get()._field_oc, _1dc5b298b_Itoa(_77722_i));
							_1abc3246b_write(_self_.get()._field_oc, jule::Str(" = ", 3));
							_1abb8737c_initExpr(_self_.get()._field_oc.get()._field_ec, _77729_t);
							_1abc3246b_write(_self_.get()._field_oc, jule::Str(";\n", 2));
						};
					}
					_iter_next_1bb09eba3:;
					++it;
					_77722_i++;
					goto _iter_begin_1bb09eba3;
				}
				_iter_end_1bb09eba3:;
			};
		} else if ((_76533_f.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 1LL)) {
			_1abc329ee_indent(_self_.get()._field_oc);
			_1abc3246b_write(_self_.get()._field_oc, _1abc45935_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _76533_f.get()._field_Result));
			_1abc3246b_write(_self_.get()._field_oc, jule::Str(" __jule_func_result", 19));
			if (_1abc525bd_shouldInitialized(&(_76533_f.get()._field_Result))) {
				_1abc3246b_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1abb8737c_initExpr(_self_.get()._field_oc.get()._field_ec, _76533_f.get()._field_Result);
			};
			_1abc3246b_write(_self_.get()._field_oc, jule::Str(";\n", 2));
		};
	};
	_1abb772a1_scopeStmts(_self_, &(_76533_f.get()._field_Scope));
	if ((_76533_f.get()._field_Decl.get()._field_Exceptional && _1aa889888_IsVoid(_76533_f.get()._field_Decl.ptr()))) {
		_1abc329ee_indent(_self_.get()._field_oc);
		_1abc3246b_write(_self_.get()._field_oc, jule::Str("return jule::VoidExceptional();\n", 32));
	};
	_1abc32823_doneIndent(_self_.get()._field_oc);
	_1abc329ee_indent(_self_.get()._field_oc);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("}", 1));
}







std::ostream &operator<<(std::ostream &_Stream, _1abb71e38_scopeCoder _Src) {
	_Stream << "scopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1abb7a381_exprCoder> static__1abb7a77c_new(jule::Ptr<_1abc31cc8_ObjectCoder>* _10924_oc) {
	return jule::new_ptr<_1abb7a381_exprCoder>(_1abb7a381_exprCoder{._field_oc=(*(_10924_oc))});;
}



inline void _1abb7aa02_string(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Ptr<_1c0901b1b_Const>* _11527_c) {
	jule::Str _11613_content = _1c0903b51_ReadStr((*(_11527_c)).ptr());;
	if ((_11613_content.len() == 0LL)) {
		_1abc3246b_write(_self_.get()._field_oc, jule::Str("jule::Str()", 11));
		return;;
	};
	jule::Slice<jule::U8> _12113_bytes = static_cast<jule::Slice<jule::U8>>(_11613_content);;
	jule::Str _12213_len = _1dc5b26e4_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_12113_bytes.len())), 10LL);;
	jule::Str _12313_lit = _1abb88081_cstrLit(_12113_bytes);;
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1abc3246b_write(_self_.get()._field_oc, _12313_lit);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_1abc3246b_write(_self_.get()._field_oc, _12213_len);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1abb7ac77_boolean(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Bool _13227_b) {
	if (_13227_b) {
		_1abc3246b_write(_self_.get()._field_oc, jule::Str("true", 4));
	} else {
		_1abc3246b_write(_self_.get()._field_oc, jule::Str("false", 5));
	};
}



inline void _1abb7ae53_nilLit(jule::Ptr<_1abb7a381_exprCoder> _self_) {
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
}



inline jule::Bool _1abb7b261_ftoaSpecialCases(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::F64* _14437_x) {
	{
		
		if (_1dc56838c_IsNaN((*(_14437_x)))) {
			_case_begin_1bb0c3600:;
			{
				_1abc3246b_write(_self_.get()._field_oc, jule::Str("NAN", 3));
			}
		}
		else if (_1dc568942_IsInf((*(_14437_x)), 1LL)) {
			_case_begin_1bb0c2e29:;
			{
				_1abc3246b_write(_self_.get()._field_oc, jule::Str("INFINITY", 8));
			}
		}
		else if (_1dc568942_IsInf((*(_14437_x)), -1LL)) {
			_case_begin_1bb0c2e90:;
			{
				_1abc3246b_write(_self_.get()._field_oc, jule::Str("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1bb0c2db3:;
			{
				return false;;
			}
		}
		_match_end_1bb0c2ce7:;
	};
	return true;;
}



inline void _1abb7b4d6_float32(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Ptr<_1c0901b1b_Const>* _15828_c) {
	jule::F64 _15913_x = _1c0904602_AsF64((*(_15828_c)).ptr());;
	if (_1abb7b261_ftoaSpecialCases(_self_, &(_15913_x))) {
		return;;
	};
	{
		
		if ((_15913_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1bb0c5de9:;
			{
				_1abc3246b_write(_self_.get()._field_oc, jule::Str("jule::MAX_F32", 13));
			}
		}
		else if ((_15913_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1bb0c5b0d:;
			{
				_1abc3246b_write(_self_.get()._field_oc, jule::Str("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1bb0c5a97:;
			{
				_1abc3246b_write(_self_.get()._field_oc, _1abb8838e_ftoa(_15913_x, 32LL));
				_1abc3246b_write(_self_.get()._field_oc, jule::Str("f", 1));
			}
		}
		_match_end_1bb0c5976:;
	};
}



inline void _1abb7b75b_float64(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Ptr<_1c0901b1b_Const>* _17728_c) {
	jule::F64 _17813_x = _1c0904602_AsF64((*(_17728_c)).ptr());;
	if (_1abb7b261_ftoaSpecialCases(_self_, &(_17813_x))) {
		return;;
	};
	{
		
		if ((_17813_x == jule::MAX_F64)) {
			_case_begin_1bb0c8ced:;
			{
				_1abc3246b_write(_self_.get()._field_oc, jule::Str("jule::MAX_F64", 13));
			}
		}
		else if ((_17813_x == jule::MIN_F64)) {
			_case_begin_1bb0c94d5:;
			{
				_1abc3246b_write(_self_.get()._field_oc, jule::Str("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1bb0c899b:;
			{
				_1abc3246b_write(_self_.get()._field_oc, _1abb8838e_ftoa(_17813_x, 64LL));
			}
		}
		_match_end_1bb0c887a:;
	};
}



inline void _1abb7b9d1_constant(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Ptr<_1c0901b1b_Const> _19532_c) {
	{
		
		if (_1c0905ee9_IsStr(_19532_c.ptr())) {
			_case_begin_1bb0caa36:;
			{
				_1abb7aa02_string(_self_, &(_19532_c));
			}
		}
		else if (_1c0905c85_IsBool(_19532_c.ptr())) {
			_case_begin_1bb0caa9c:;
			{
				_1abb7ac77_boolean(_self_, _1c09038dc_ReadBool(_19532_c.ptr()));
			}
		}
		else if (_1c090625d_IsF64(_19532_c.ptr())) {
			_case_begin_1bb0cab13:;
			{
				{
					
					if (_19532_c.get()._field_Kind.equal("f32", 3)) {
						_case_begin_1bb0ccde0:;
						{
							_1abb7b4d6_float32(_self_, &(_19532_c));
						}
					}
					else {
						_case_begin_1bb0cca49:;
						{
							_1abb7b75b_float64(_self_, &(_19532_c));
						}
					}
					_match_end_1bb0cc97d:;
				};
			}
		}
		else if (_1c09057ac_IsI64(_19532_c.ptr())) {
			_case_begin_1bb0cab79:;
			{
				_1abc3246b_write(_self_.get()._field_oc, _1abb88636_itoa(static_cast<jule::I64>(_1c0903414_ReadI64(_19532_c.ptr()))));
			}
		}
		else if (_1c0905a21_IsU64(_19532_c.ptr())) {
			_case_begin_1bb0cb4a4:;
			{
				_1abc3246b_write(_self_.get()._field_oc, _1abb888cd_utoa(static_cast<jule::U64>(_1c0903678_ReadU64(_19532_c.ptr()))));
			}
		}
		else if (_1c09064c2_IsNil(_19532_c.ptr())) {
			_case_begin_1bb0cb51a:;
			{
				_1abb7ae53_nilLit(_self_);
			}
		}
		else {
			_case_begin_1bb0ca9c0:;
			{
				_1abc3246b_write(_self_.get()._field_oc, jule::Str("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1bb0ca904:;
	};
}



inline void _1abb7bd99_divByZeroBinary(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Ptr<_1db944d0d_Token>* _21936_op, jule::Ptr<_1aa87acdb_OperandExprModel>* _21953_l, jule::Ptr<_1aa87acdb_OperandExprModel>* _21980_r) {
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("jule::", 6));
	{
		auto &_match_expr{ (*(_21936_op)).get()._field_Kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("/=", 2)) {
			_case_begin_1bb0d10d0:;
			{
				_1abc3246b_write(_self_.get()._field_oc, jule::Str("div(", 4));
			}
		}
		else if (_match_expr == jule::Str("%", 1) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1bb0d1157:;
			{
				_1abc3246b_write(_self_.get()._field_oc, jule::Str("mod(", 4));
			}
		}
		_match_end_1bb0d1069:;
	};
	if ((!(_202bb24e8_Production))) {
		_1abc3246b_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1abc34418_locInfo(_self_.get()._field_oc, _21936_op);
		_1abc3246b_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1abb7d384_possibleRefExpr(_self_, (*(_21953_l)).get()._field_Model);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1abb7d384_possibleRefExpr(_self_, (*(_21980_r)).get()._field_Model);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1abb7c11e_unsafeBinary(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Ptr<_1aa87b2a3_BinopExprModel> _24136_m) {
	if ((_24136_m.get()._field_Op.get()._field_Kind.equal("==", 2) || _24136_m.get()._field_Op.get()._field_Kind.equal("!=", 2))) {
		if (_1abb89527_isAny(&(_24136_m.get()._field_Left.get()._field_Kind))) {
			if (((!(_1aa98480c_IsNil(_24136_m.get()._field_Right.get()._field_Kind.ptr()))) && (!(_1abb89527_isAny(&(_24136_m.get()._field_Right.get()._field_Kind)))))) {
				_1abc3246b_write(_self_.get()._field_oc, jule::Str("(", 1));
				if (_24136_m.get()._field_Op.get()._field_Kind.equal("!=", 2)) {
					_1abc3246b_write(_self_.get()._field_oc, jule::Str("!", 1));
				};
				jule::I64 _25125_i = _1abc3311a_pushAnyType(_self_.get()._field_oc, _24136_m.get()._field_Right.get()._field_Kind);;
				_1abc3246b_write(_self_.get()._field_oc, jule::Str("__jule_any_type", 15));
				_1abc3246b_write(_self_.get()._field_oc, _1dc5b298b_Itoa(_25125_i));
				_1abc3246b_write(_self_.get()._field_oc, jule::Str("_compare(", 9));
				_1abb7d384_possibleRefExpr(_self_, _24136_m.get()._field_Left.get()._field_Model);
				_1abc3246b_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_1abb7d384_possibleRefExpr(_self_, _24136_m.get()._field_Right.get()._field_Model);
				_1abc3246b_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			};
		};
	};
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1abb7d384_possibleRefExpr(_self_, _24136_m.get()._field_Left.get()._field_Model);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1abc3246b_write(_self_.get()._field_oc, _24136_m.get()._field_Op.get()._field_Kind);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1abb7d384_possibleRefExpr(_self_, _24136_m.get()._field_Right.get()._field_Model);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1abb7c394_binary(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Ptr<_1aa87b2a3_BinopExprModel> _27230_m) {
	{
		auto &_match_expr{ _27230_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("%", 1)) {
			_case_begin_1bb0dc7d4:;
			{
				if ((_1aa9871b1_Struct(_27230_m.get()._field_Left.get()._field_Kind.ptr()) == nullptr)) {
					_1abb7bd99_divByZeroBinary(_self_, &(_27230_m.get()._field_Op), &(_27230_m.get()._field_Left), &(_27230_m.get()._field_Right));
					return;;
				};
			}
		}
		_match_end_1bb0dc75c:;
	};
	_1abb7c11e_unsafeBinary(_self_, _27230_m);
}



inline void _1abb7c619_var(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Ptr<_1aa908c59_Var> _28427_m) {
	if (_28427_m.get()._field_CppLinked) {
		jule::Ptr<_1aa820a94_Directive> _28617_d = _1abc51e91_findDirective(&(_28427_m.get()._field_Directives), jule::Str("namespace", 9));;
		if ((_28617_d != nullptr)) {
			_1abc3246b_write(_self_.get()._field_oc, _1abc3d4ee_concatAllParts(_28617_d.get()._field_Args));
			_1abc3246b_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_1abc3246b_write(_self_.get()._field_oc, static__1abb90b16_var(_28427_m));
}



inline void _1abb7c88e_structureIns(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Ptr<_1aa876dd6_StructIns> _29536_m) {
	_1abc3246b_write(_self_.get()._field_oc, _1abc43ea5_structureIns(_self_.get()._field_oc.get()._field_tc.ptr(), _29536_m));
}



inline void _1abb7cb14_unary(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Ptr<_1aa87b65a_UnaryExprModel> _29929_m) {
	{
		auto &_match_expr{ _29929_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1bb0e23dd:;
			{
				_1abc3246b_write(_self_.get()._field_oc, jule::Str("(~(", 3));
				_1abb7d384_possibleRefExpr(_self_, _29929_m.get()._field_Expr.get()._field_Model);
				_1abc3246b_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1bb0e2465:;
			{
				if ((_202bb24e8_Production || (_1aa985ec3_Sptr(_29929_m.get()._field_Expr.get()._field_Kind.ptr()) == nullptr))) {
					goto _match_end_1bb0e2355;
				};
				_1abb7d384_possibleRefExpr(_self_, _29929_m.get()._field_Expr.get()._field_Model);
				_1abc3246b_write(_self_.get()._field_oc, jule::Str(".get(\"", 6));
				_1abc34418_locInfo(_self_.get()._field_oc, &(_29929_m.get()._field_Op));
				_1abc3246b_write(_self_.get()._field_oc, jule::Str("\")", 2));
				return;;
			}
		}
		_match_end_1bb0e2355:;
	};
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1abc3246b_write(_self_.get()._field_oc, _29929_m.get()._field_Op.get()._field_Kind);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1abb7d384_possibleRefExpr(_self_, _29929_m.get()._field_Expr.get()._field_Model);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("))", 2));
}



inline void _1abb7cd89_structureLit(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Ptr<_1aa87be0d_StructLitExprModel> _32336_m) {
	if (_32336_m.get()._field_Strct.get()._field_Decl.get()._field_CppLinked) {
		_1abc3246b_write(_self_.get()._field_oc, jule::Str("(", 1));
	};
	_1abc3246b_write(_self_.get()._field_oc, static__1abb905c7_structureIns(&(_32336_m.get()._field_Strct)));
	if (_32336_m.get()._field_Strct.get()._field_Decl.get()._field_CppLinked) {
		_1abc3246b_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("{", 1));
	if ((_32336_m.get()._field_Args.len() > 0LL)) {
		_julec_label_iter:;
		{
			auto expr = &(_32336_m.get()._field_Strct.get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bb0e9769:;
			if (it != expr_end) {
				jule::I64 _33617_i = it - expr->begin();
				jule::Ptr<_1aa8763e1_FieldIns> _33620_f = *it;
				{
					{
						auto expr = &(_32336_m.get()._field_Args);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1bb0ea2a3:;
						if (it != expr_end) {
							jule::Ptr<_1aa87ba56_StructArgExprModel> _33729_arg = *it;
							{
								if ((_33729_arg.get()._field_Field == _33620_f)) {
									_1abc3246b_write(_self_.get()._field_oc, jule::Str(".", 1));
									_1abc3246b_write(_self_.get()._field_oc, static__1abb9086e_field(&(_33729_arg.get()._field_Field.get()._field_Decl)));
									_1abc3246b_write(_self_.get()._field_oc, jule::Str("=", 1));
									_1abb7d384_possibleRefExpr(_self_, _33729_arg.get()._field_Expr);
									if (((_32336_m.get()._field_Strct.get()._field_Fields.len() - _33617_i) > 1LL)) {
										_1abc3246b_write(_self_.get()._field_oc, jule::Str(", ", 2));
									};
									goto _iter_next_1bb0e9769;
								};
							}
							_iter_next_1bb0ea2a3:;
							++it;
							goto _iter_begin_1bb0ea2a3;
						}
						_iter_end_1bb0ea2a3:;
					};
				}
				_iter_next_1bb0e9769:;
				++it;
				_33617_i++;
				goto _iter_begin_1bb0e9769;
			}
			_iter_end_1bb0e9769:;
		};
	};
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1abb7d10e_allocStructure(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Ptr<_1aa87c21b_AllocStructLitExprModel> _35438_m) {
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_1abc3246b_write(_self_.get()._field_oc, static__1abb905c7_structureIns(&(_35438_m.get()._field_Lit.get()._field_Strct)));
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(">(", 2));
	_1abb7cd89_structureLit(_self_, _35438_m.get()._field_Lit);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1abb7d384_possibleRefExpr(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Any _36235_expr) {
	{
		auto &_match_expr{ _36235_expr };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bb100a5b:;
			{
				jule::Ptr<_1aa908c59_Var> _36517_v = _36235_expr.cast_ptr<_1aa908c59_Var>(&__jule_any_type8);;
				if (_36517_v.get()._field_Reference) {
					_1abc3246b_write(_self_.get()._field_oc, jule::Str("(*(", 3));
					_1abb87107_model(_self_, _36235_expr);
					_1abc3246b_write(_self_.get()._field_oc, jule::Str("))", 2));
					return;;
				};
			}
		}
		_match_end_1bb10095c:;
	};
	_1abb87107_model(_self_, _36235_expr);
}



inline void _1abb7d74c_castTraitFromTrait(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Ptr<_1aa87c76b_CastingExprModel>* _37643_m, jule::Ptr<_1aa89b647_Trait> _37669_t1, jule::Ptr<_1aa89b647_Trait> _37685_t2) {
	_1abb7d384_possibleRefExpr(_self_, (*(_37643_m)).get()._field_Expr);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(".mask<", 6));
	_1abc3246b_write(_self_.get()._field_oc, static__1abb8ece1_traitDecl(_37669_t1));
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(">(", 2));
	_1abc34193_pushAndWriteMaskMapper(_self_.get()._field_oc, _37669_t1, _37685_t2);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1abb7d9c2_casting(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Ptr<_1aa87c76b_CastingExprModel> _39131_m) {
	{
		
		if (_1abb89527_isAny(&(_39131_m.get()._field_Kind))) {
			_case_begin_1bb1052be:;
			{
				if (_1aa98480c_IsNil(_39131_m.get()._field_ExprKind.ptr())) {
					_1abc3246b_write(_self_.get()._field_oc, jule::Str("jule::Any()", 11));
					return;;
				};
				if ((_1aa986710_TypeEnum(_39131_m.get()._field_ExprKind.ptr()) != nullptr)) {
					_1abb7d384_possibleRefExpr(_self_, _39131_m.get()._field_Expr);
					return;;
				};
				jule::I64 _40217_i = _1abc3311a_pushAnyType(_self_.get()._field_oc, _39131_m.get()._field_ExprKind);;
				_1abc3246b_write(_self_.get()._field_oc, jule::Str("jule::Any(", 10));
				{
					auto &_match_expr{ _39131_m.get()._field_Expr };
					
					if (_match_expr.type == &__jule_any_type19) {
						_case_begin_1bb108b74:;
						{
							jule::Ptr<_1aa989339_Prim> _40621_prim = _1aa985c5e_Prim(_39131_m.get()._field_ExprKind.ptr());;
							if (((_40621_prim != nullptr) && _1dc5c1a33_IsInt(_40621_prim.get()._field_Kind))) {
								_1abc3246b_write(_self_.get()._field_oc, jule::Str("static_cast<", 12));
								_1abc3246b_write(_self_.get()._field_oc, _1abc411d3_prim(_self_.get()._field_oc.get()._field_tc.ptr(), _40621_prim));
								_1abc3246b_write(_self_.get()._field_oc, jule::Str(">(", 2));
								_1abb7d384_possibleRefExpr(_self_, _39131_m.get()._field_Expr);
								_1abc3246b_write(_self_.get()._field_oc, jule::Str(")", 1));
								goto _match_end_1bb109a54;
							};
							goto _case_begin_1bb109aa9;
						}
					}
					else {
						_case_begin_1bb109aa9:;
						{
							_1abb7d384_possibleRefExpr(_self_, _39131_m.get()._field_Expr);
						}
					}
					_match_end_1bb109a54:;
				};
				_1abc3246b_write(_self_.get()._field_oc, jule::Str(", &__jule_any_type", 18));
				_1abc3246b_write(_self_.get()._field_oc, _1dc5b298b_Itoa(_40217_i));
				_1abc3246b_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else if (_1abb89527_isAny(&(_39131_m.get()._field_ExprKind))) {
			_case_begin_1bb105335:;
			{
				_1abb7d384_possibleRefExpr(_self_, _39131_m.get()._field_Expr);
				_1abc3246b_write(_self_.get()._field_oc, jule::Str(".", 1));
				if ((_1aa985ec3_Sptr(_39131_m.get()._field_Kind.ptr()) != nullptr)) {
					_1abc3246b_write(_self_.get()._field_oc, jule::Str("cast_ptr<", 9));
					_1abc3246b_write(_self_.get()._field_oc, _1abc45935_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _1aa985ec3_Sptr(_39131_m.get()._field_Kind.ptr()).get()._field_Elem));
				} else {
					_1abc3246b_write(_self_.get()._field_oc, jule::Str("cast<", 5));
					_1abc3246b_write(_self_.get()._field_oc, _1abc45935_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _39131_m.get()._field_Kind));
				};
				_1abc3246b_write(_self_.get()._field_oc, jule::Str(">(", 2));
				if ((!(_202bb24e8_Production))) {
					_1abc3246b_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_1abc34418_locInfo(_self_.get()._field_oc, &(_39131_m.get()._field_Token));
					_1abc3246b_write(_self_.get()._field_oc, jule::Str("\", ", 3));
				};
				_1abc3246b_write(_self_.get()._field_oc, jule::Str("&__jule_any_type", 16));
				_1abc3246b_write(_self_.get()._field_oc, _1dc5b298b_Itoa(static_cast<jule::I64>(_1abc3311a_pushAnyType(_self_.get()._field_oc, _39131_m.get()._field_Kind))));
				_1abc3246b_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else if ((_1aa986237_Ptr(_39131_m.get()._field_ExprKind.ptr()) != nullptr) || (_1aa986237_Ptr(_39131_m.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb10539b:;
			{
				_1abc3246b_write(_self_.get()._field_oc, jule::Str("((", 2));
				_1abc3246b_write(_self_.get()._field_oc, _1abc45935_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _39131_m.get()._field_Kind));
				_1abc3246b_write(_self_.get()._field_oc, jule::Str(")(", 2));
				_1abb7d384_possibleRefExpr(_self_, _39131_m.get()._field_Expr);
				_1abc3246b_write(_self_.get()._field_oc, jule::Str("))", 2));
			}
		}
		else if ((_1aa987425_Trait(_39131_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1bb105412:;
			{
				if ((_1aa987425_Trait(_39131_m.get()._field_Kind.ptr()) != nullptr)) {
					_1abb7d74c_castTraitFromTrait(_self_, &(_39131_m), _1aa987425_Trait(_39131_m.get()._field_Kind.ptr()), _1aa987425_Trait(_39131_m.get()._field_ExprKind.ptr()));
					return;;
				};
				_1abb7d384_possibleRefExpr(_self_, _39131_m.get()._field_Expr);
				_1abc3246b_write(_self_.get()._field_oc, jule::Str(".", 1));
				if ((_1aa985ec3_Sptr(_39131_m.get()._field_Kind.ptr()) != nullptr)) {
					_1abc3246b_write(_self_.get()._field_oc, jule::Str("cast_ptr<", 9));
					_1abc3246b_write(_self_.get()._field_oc, _1abc45935_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _1aa985ec3_Sptr(_39131_m.get()._field_Kind.ptr()).get()._field_Elem));
				} else {
					_1abc3246b_write(_self_.get()._field_oc, jule::Str("cast<", 5));
					_1abc3246b_write(_self_.get()._field_oc, _1abc45935_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _39131_m.get()._field_Kind));
				};
				_1abc3246b_write(_self_.get()._field_oc, jule::Str(">(", 2));
				if ((!(_202bb24e8_Production))) {
					_1abc3246b_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_1abc34418_locInfo(_self_.get()._field_oc, &(_39131_m.get()._field_Token));
					_1abc3246b_write(_self_.get()._field_oc, jule::Str("\", ", 3));
				};
				_1abc3246b_write(_self_.get()._field_oc, _1dc5b298b_Itoa(static_cast<jule::I64>(_1abc33d74_findTypeOffset(_self_.get()._field_oc.ptr(), _1aa987425_Trait(_39131_m.get()._field_ExprKind.ptr()), _39131_m.get()._field_Kind))));
				_1abc3246b_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else if ((_1aa987425_Trait(_39131_m.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb107304:;
			{
				_1abc3246b_write(_self_.get()._field_oc, _1abc45935_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _39131_m.get()._field_Kind));
				_1abc3246b_write(_self_.get()._field_oc, jule::Str("(", 1));
				_1abb7d384_possibleRefExpr(_self_, _39131_m.get()._field_Expr);
				_1abc3246b_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_1abc3246b_write(_self_.get()._field_oc, _1dc5b298b_Itoa(static_cast<jule::I64>(_1abc33d74_findTypeOffset(_self_.get()._field_oc.ptr(), _1aa987425_Trait(_39131_m.get()._field_Kind.ptr()), _39131_m.get()._field_ExprKind))));
				_1abc3246b_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else {
			_case_begin_1bb105258:;
			{
				_1abc3246b_write(_self_.get()._field_oc, jule::Str("static_cast<", 12));
				_1abc3246b_write(_self_.get()._field_oc, _1abc45935_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _39131_m.get()._field_Kind));
				_1abc3246b_write(_self_.get()._field_oc, jule::Str(">(", 2));
				_1abb7d384_possibleRefExpr(_self_, _39131_m.get()._field_Expr);
				_1abc3246b_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1bb10518c:;
	};
}



inline void _1abb7dc47_models(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Slice<jule::Any> _48630_args) {
	if ((_48630_args.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &(_48630_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb1214a5:;
		if (it != expr_end) {
			jule::I64 _49014_i = it - expr->begin();
			jule::Any _49021_a = *it;
			{
				_1abb7d384_possibleRefExpr(_self_, _49021_a);
				if (((_48630_args.len() - _49014_i) > 1LL)) {
					_1abc3246b_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1bb1214a5:;
			++it;
			_49014_i++;
			goto _iter_begin_1bb1214a5;
		}
		_iter_end_1bb1214a5:;
	};
}



inline void _1abb7debc_args(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Ptr<_1aa87d11d_FnCallExprModel>* _49829_m) {
	jule::I64 _49917_j = 0LL;;
	if (((((*(_49829_m)).get()._field_Func.get()._field_Owner != nullptr) && (!((*(_49829_m)).get()._field_Func.get()._field_Decl.get()._field_Statically))) || (((*(_49829_m)).get()._field_Func.get()._field_Params.len() > 0LL) && _1aa888216_IsSelf((*(_49829_m)).get()._field_Func.get()._field_Params[0LL].get()._field_Decl.ptr())))) {
		(_49917_j)++;
	};
	{
		auto expr = &((*(_49829_m)).get()._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb1250d0:;
		if (it != expr_end) {
			jule::I64 _50413_i = it - expr->begin();
			jule::Any _50416_arg = *it;
			{
				jule::Ptr<_1aa88b208_ParamIns> _50517_p = (*(_49829_m)).get()._field_Func.get()._field_Params[_49917_j];;
				if (((_50517_p.get()._field_Decl != nullptr) && _50517_p.get()._field_Decl.get()._field_Reference)) {
					{
						auto &_match_expr{ _50416_arg };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1bb126884:;
							{
								jule::Ptr<_1aa908c59_Var> _50925_v = _50416_arg.cast_ptr<_1aa908c59_Var>(&__jule_any_type8);;
								if (_50925_v.get()._field_Reference) {
									_1abb87107_model(_self_, _50416_arg);
									goto _julec_label_end;
								};
							}
						}
						_match_end_1bb126796:;
					};
					_1abc3246b_write(_self_.get()._field_oc, jule::Str("&(", 2));
					_1abb87107_model(_self_, _50416_arg);
					_1abc3246b_write(_self_.get()._field_oc, jule::Str(")", 1));
					goto _julec_label_end;
				};
				_1abb7d384_possibleRefExpr(_self_, _50416_arg);
				_julec_label_end:;
				if ((((*(_49829_m)).get()._field_Args.len() - _50413_i) > 1LL)) {
					_1abc3246b_write(_self_.get()._field_oc, jule::Str(", ", 2));
				};
				(_49917_j)++;
			}
			_iter_next_1bb1250d0:;
			++it;
			_50413_i++;
			goto _iter_begin_1bb1250d0;
		}
		_iter_end_1bb1250d0:;
	};
}



inline void _1abb7e242_modelForCall(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Any _52936_expr) {
	{
		auto &_match_expr{ _52936_expr };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1bb12aab9:;
			{
				_1abb825b9_funcIns(_self_, _52936_expr.cast_ptr<_1aa88c0c7_FnIns>(&__jule_any_type7));
				return;;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1bb12ab41:;
			{
				jule::Ptr<_1aa88098e_StructSubIdentExprModel> _53521_ssie = _52936_expr.cast_ptr<_1aa88098e_StructSubIdentExprModel>(&__jule_any_type71);;
				if ((_53521_ssie.get()._field_Method != nullptr)) {
					_1abb825b9_funcIns(_self_, _53521_ssie.get()._field_Method);
					return;;
				};
			}
		}
		_match_end_1bb12a9a9:;
	};
	_1abb7d384_possibleRefExpr(_self_, _52936_expr);
}



inline void _1abb7e4b7_pushCallInf(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Ptr<_1aa87d11d_FnCallExprModel>* _54432_m) {
	if ((_202bb24e8_Production || ((!((*(_54432_m)).get()._field_Func.get()._field_Anon)) && (!(_1abb8904e_isBuiltinCallHasDebuginf(_54432_m)))))) {
		_1abc3246b_write(_self_.get()._field_oc, jule::Str("(", 1));
		return;;
	};
	if ((*(_54432_m)).get()._field_Func.get()._field_Anon) {
		{
			auto &_match_expr{ (*(_54432_m)).get()._field_Expr };
			
			if (_match_expr.type == &__jule_any_type71) {
				_case_begin_1bb12dcdc:;
				{
					if ((*(_54432_m)).get()._field_Expr.cast_ptr<_1aa88098e_StructSubIdentExprModel>(&__jule_any_type71).get()._field_Field.get()._field_Decl.get()._field_Owner.get()._field_CppLinked) {
						_1abc3246b_write(_self_.get()._field_oc, jule::Str("(", 1));
						return;;
					};
					goto _case_begin_1bb12deb8;
				}
			}
			else {
				_case_begin_1bb12deb8:;
				{
					_1abc3246b_write(_self_.get()._field_oc, jule::Str(".call", 5));
				}
			}
			_match_end_1bb12dd86:;
		};
	};
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("(\"", 2));
	_1abc34418_locInfo(_self_.get()._field_oc, &((*(_54432_m)).get()._field_Token));
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("\"", 1));
	if (((*(_54432_m)).get()._field_Args.len() != 0LL)) {
		_1abc3246b_write(_self_.get()._field_oc, jule::Str(", ", 2));
	};
}



inline jule::Bool _1abb7e7c5_isWrapped(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Ptr<_1aa87d11d_FnCallExprModel>* _56934_m) {
	if ((((!(_1aa88d45d_IsBuiltin((*(_56934_m)).get()._field_Func.ptr()))) && ((*(_56934_m)).get()._field_Func.get()._field_Decl.get()._field_Params.len() > 0LL)) && _1aa888216_IsSelf((*(_56934_m)).get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*(_56934_m)).get()._field_Expr };
			
			if (_match_expr.type == &__jule_any_type71) {
				_case_begin_1bb132917:;
				{
					jule::Ptr<_1aa88098e_StructSubIdentExprModel> _57325_ssie = (*(_56934_m)).get()._field_Expr.cast_ptr<_1aa88098e_StructSubIdentExprModel>(&__jule_any_type71);;
					{
						
						if (_1aa88847a_IsRef((*(_56934_m)).get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()) || (_1aa985ec3_Sptr(_57325_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
							_case_begin_1bb1331dc:;
							{
								goto _match_end_1bb133781;
							}
						}
						else {
							_case_begin_1bb1337e7:;
							{
								if ((_1aa9871b1_Struct(_57325_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									if ((!(_57325_ssie.get()._field_Expr.get()._field_Lvalue))) {
										_1abc3246b_write(_self_.get()._field_oc, jule::Str("({ auto _wrap_copy = ", 21));
										_1abb87107_model(_self_, _57325_ssie.get()._field_Expr.get()._field_Model);
										_1abc3246b_write(_self_.get()._field_oc, jule::Str("; ", 2));
										return true;;
									};
								};
							}
						}
						_match_end_1bb133781:;
					};
				}
			}
			_match_end_1bb132708:;
		};
	};
	return false;;
}



inline void _1abb7ea4a_pureFuncCall(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Ptr<_1aa87d11d_FnCallExprModel>* _59337_m) {
	jule::Bool _59413_wrapped = _1abb7e7c5_isWrapped(_self_, _59337_m);;
	_1abb7e242_modelForCall(_self_, (*(_59337_m)).get()._field_Expr);
	if ((!(_1aa88d45d_IsBuiltin((*(_59337_m)).get()._field_Func.ptr())))) {
		if (((*(_59337_m)).get()._field_Func.get()._field_Decl.get()._field_CppLinked && ((*(_59337_m)).get()._field_Func.get()._field_Generics.len() > 0LL))) {
			if ((!(_1abc52326_hasDirective(&((*(_59337_m)).get()._field_Func.get()._field_Decl.get()._field_Directives), jule::Str("cdef", 4))))) {
				_1abc3246b_write(_self_.get()._field_oc, jule::Str("<", 1));
				{
					auto expr = &((*(_59337_m)).get()._field_Func.get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bb1391d2:;
					if (it != expr_end) {
						jule::I64 _60026_i = it - expr->begin();
						jule::Ptr<_1aa9820e0_InsGeneric> _60033_g = *it;
						{
							_1abc3246b_write(_self_.get()._field_oc, _1abc45935_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _60033_g.get()._field_Kind));
							if ((((*(_59337_m)).get()._field_Func.get()._field_Generics.len() - _60026_i) > 1LL)) {
								_1abc3246b_write(_self_.get()._field_oc, jule::Str(", ", 2));
							};
						}
						_iter_next_1bb1391d2:;
						++it;
						_60026_i++;
						goto _iter_begin_1bb1391d2;
					}
					_iter_end_1bb1391d2:;
				};
				_1abc3246b_write(_self_.get()._field_oc, jule::Str(">", 1));
			};
		};
	};
	_1abb7e4b7_pushCallInf(_self_, _59337_m);
	jule::Bool _61117_locinfo = false;;
	if ((((!(_1aa88d45d_IsBuiltin((*(_59337_m)).get()._field_Func.ptr()))) && ((*(_59337_m)).get()._field_Func.get()._field_Decl.get()._field_Params.len() > 0LL)) && _1aa888216_IsSelf((*(_59337_m)).get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*(_59337_m)).get()._field_Expr };
			
			if (_match_expr.type == &__jule_any_type71) {
				_case_begin_1bb13cb42:;
				{
					jule::Ptr<_1aa88098e_StructSubIdentExprModel> _61525_ssie = (*(_59337_m)).get()._field_Expr.cast_ptr<_1aa88098e_StructSubIdentExprModel>(&__jule_any_type71);;
					{
						
						if (_1aa88847a_IsRef((*(_59337_m)).get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr())) {
							_case_begin_1bb1416e5:;
							{
								_1abb7d384_possibleRefExpr(_self_, _61525_ssie.get()._field_Expr.get()._field_Model);
							}
						}
						else if ((_1aa985ec3_Sptr(_61525_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
							_case_begin_1bb14175b:;
							{
								_1abb7d384_possibleRefExpr(_self_, _61525_ssie.get()._field_Expr.get()._field_Model);
								_1abc3246b_write(_self_.get()._field_oc, jule::Str(".ptr(", 5));
								if ((!(_202bb24e8_Production))) {
									_1abc3246b_write(_self_.get()._field_oc, jule::Str("\"", 1));
									_1abc34418_locInfo(_self_.get()._field_oc, &((*(_59337_m)).get()._field_Token));
									_1abc3246b_write(_self_.get()._field_oc, jule::Str("\"", 1));
								};
								_1abc3246b_write(_self_.get()._field_oc, jule::Str(")", 1));
							}
						}
						else {
							_case_begin_1bb13daaa:;
							{
								if ((_1aa9871b1_Struct(_61525_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									{
										auto &_match_expr{ _61525_ssie.get()._field_Expr.get()._field_Model };
										
										if (_match_expr.type == &__jule_any_type8) {
											_case_begin_1bb13d4a0:;
											{
												jule::Ptr<_1aa908c59_Var> _63233_v = _61525_ssie.get()._field_Expr.get()._field_Model.cast_ptr<_1aa908c59_Var>(&__jule_any_type8);;
												if (_63233_v.get()._field_Reference) {
													goto _match_end_1bb13e627;
												};
												goto _case_begin_1bb13e67c;
											}
										}
										else {
											_case_begin_1bb13e67c:;
											{
												_1abc3246b_write(_self_.get()._field_oc, jule::Str("&", 1));
											}
										}
										_match_end_1bb13e627:;
									};
								};
								if (_59413_wrapped) {
									_1abc3246b_write(_self_.get()._field_oc, jule::Str("_wrap_copy", 10));
								} else {
									_1abb87107_model(_self_, _61525_ssie.get()._field_Expr.get()._field_Model);
								};
							}
						}
						_match_end_1bb13da44:;
					};
					if (((*(_59337_m)).get()._field_Args.len() > 0LL)) {
						_1abc3246b_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			else if (_match_expr.type == &__jule_any_type70) {
				_case_begin_1bb13cba8:;
				{
					_1abb7d384_possibleRefExpr(_self_, (*(_59337_m)).get()._field_Expr.cast_ptr<_1aa8801a8_TraitSubIdentExprModel>(&__jule_any_type70).get()._field_Expr);
					if ((!(_202bb24e8_Production))) {
						_61117_locinfo=true;
					};
					if (((*(_59337_m)).get()._field_Args.len() > 0LL)) {
						_1abc3246b_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			_match_end_1bb13c933:;
		};
	};
	_1abb7debc_args(_self_, _59337_m);
	if (_61117_locinfo) {
		_1abc3246b_write(_self_.get()._field_oc, jule::Str(", \"", 3));
		_1abc34418_locInfo(_self_.get()._field_oc, &((*(_59337_m)).get()._field_Token));
		_1abc3246b_write(_self_.get()._field_oc, jule::Str("\"", 1));
	};
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_59413_wrapped) {
		_1abc3246b_write(_self_.get()._field_oc, jule::Str("; })", 4));
	};
}



inline void _1abb7ecc0_coFuncCall(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Ptr<_1aa87d11d_FnCallExprModel>* _67435_m) {
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1abc32647_addIndent(_self_.get()._field_oc);
	jule::Str _67717_head = jule::Str("std::thread([", 13);;
	if (((*(_67435_m)).get()._field_Func.get()._field_Owner != nullptr)) {
		(_67717_head).append("_self_", 6);
		if (((*(_67435_m)).get()._field_Args.len() > 0LL)) {
			(_67717_head).append(", ", 2);
		};
	};
	{
		auto expr = &((*(_67435_m)).get()._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb14aee6:;
		if (it != expr_end) {
			jule::I64 _68413_i = it - expr->begin();
			jule::Any _68416_arg = *it;
			{
				if ((_68413_i > 0LL)) {
					(_67717_head).append(", ", 2);
				};
				{
					auto &_match_expr{ _68416_arg };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1bb152c56:;
						{
							jule::Ptr<_1aa908c59_Var> _69025_v = _68416_arg.cast_ptr<_1aa908c59_Var>(&__jule_any_type8);;
							_67717_head+=static__1abb90b16_var(_69025_v);
							goto _iter_next_1bb14aee6;
						}
					}
					_match_end_1bb14c69b:;
				};
				jule::Str _69417_name = (jule::Str("_co_arg_", 8) + _1dc5b298b_Itoa(_68413_i));;
				_67717_head+=_69417_name;
				_1abc329ee_indent(_self_.get()._field_oc);
				_1abc3246b_write(_self_.get()._field_oc, _1abc45935_kind(_self_.get()._field_oc.get()._field_tc.ptr(), (*(_67435_m)).get()._field_Func.get()._field_Params[_68413_i].get()._field_Kind));
				_1abc3246b_write(_self_.get()._field_oc, jule::Str(" ", 1));
				if ((*(_67435_m)).get()._field_Func.get()._field_Params[_68413_i].get()._field_Decl.get()._field_Reference) {
					_1abc3246b_write(_self_.get()._field_oc, jule::Str("&", 1));
				};
				_1abc3246b_write(_self_.get()._field_oc, _69417_name);
				_1abc3246b_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1abb7d384_possibleRefExpr(_self_, _68416_arg);
				_1abc3246b_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				jule::Any _70617_argS = jule::Any(_69417_name, &__jule_any_type5);;
				(*(_67435_m)).get()._field_Args[_68413_i]=(*(((jule::Any*)((&(_70617_argS))))));
			}
			_iter_next_1bb14aee6:;
			++it;
			_68413_i++;
			goto _iter_begin_1bb14aee6;
		}
		_iter_end_1bb14aee6:;
	};
	_1abc329ee_indent(_self_.get()._field_oc);
	_1abc3246b_write(_self_.get()._field_oc, _67717_head);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("](void) mutable -> void {\n", 26));
	_1abc32647_addIndent(_self_.get()._field_oc);
	_1abc329ee_indent(_self_.get()._field_oc);
	_1abb7ea4a_pureFuncCall(_self_, _67435_m);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1abc32823_doneIndent(_self_.get()._field_oc);
	_1abc329ee_indent(_self_.get()._field_oc);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("}).detach();\n", 13));
	_1abc32823_doneIndent(_self_.get()._field_oc);
	_1abc329ee_indent(_self_.get()._field_oc);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1abb800de_writeUseExpr(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Ptr<_1aa88c0c7_FnIns>* _72437_f, jule::Ptr<_1aa957d85_Data> _72452_d) {
	if ((_1aa9878ed_Tup(_72452_d.get()._field_Kind.ptr()) == nullptr)) {
		_1abb7d384_possibleRefExpr(_self_, _72452_d.get()._field_Model);
		_1abc3246b_write(_self_.get()._field_oc, jule::Str(";", 1));
		return;;
	};
	jule::Ptr<_1aa881d47_TupleExprModel> _73017_tup = _72452_d.get()._field_Model.cast_ptr<_1aa881d47_TupleExprModel>(&__jule_any_type87);;
	_1abc4eb92_tup(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), _1aa9878ed_Tup((*(_72437_f)).get()._field_Result.ptr()));
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("{", 1));
	{
		auto expr = &(_73017_tup.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb15db41:;
		if (it != expr_end) {
			jule::I64 _73313_i = it - expr->begin();
			jule::Ptr<_1aa957d85_Data> _73316_data = *it;
			{
				_1abc3246b_write(_self_.get()._field_oc, jule::Str(".__jule_result_arg", 18));
				_1abc3246b_write(_self_.get()._field_oc, _1dc5b298b_Itoa(_73313_i));
				_1abc3246b_write(_self_.get()._field_oc, jule::Str("=", 1));
				_1abb7d384_possibleRefExpr(_self_, _73316_data.get()._field_Model);
				if (((_73017_tup.get()._field_Datas.len() - _73313_i) > 1LL)) {
					_1abc3246b_write(_self_.get()._field_oc, jule::Str(", ", 2));
				};
			}
			_iter_next_1bb15db41:;
			++it;
			_73313_i++;
			goto _iter_begin_1bb15db41;
		}
		_iter_end_1bb15db41:;
	};
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("};", 2));
}



inline void _1abb80364_funcCall(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Ptr<_1aa87d11d_FnCallExprModel> _74532_m) {
	if (_74532_m.get()._field_IsCo) {
		_1abb7ecc0_coFuncCall(_self_, &(_74532_m));
		return;;
	};
	if (((_1aa88d45d_IsBuiltin(_74532_m.get()._field_Func.ptr()) || (!(_74532_m.get()._field_Func.get()._field_Decl.get()._field_Exceptional))) || ((_74532_m.get()._field_Except != nullptr) && (_74532_m.get()._field_Except.get()._field_Stmts.len() == 0LL)))) {
		_1abb7ea4a_pureFuncCall(_self_, &(_74532_m));
		return;;
	};
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_1abc32647_addIndent(_self_.get()._field_oc);
	_1abc329ee_indent(_self_.get()._field_oc);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("auto except = ", 14));
	_1abb7ea4a_pureFuncCall(_self_, &(_74532_m));
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1abc329ee_indent(_self_.get()._field_oc);
	if ((_74532_m.get()._field_Except != nullptr)) {
		if (((_74532_m.get()._field_Func.get()._field_Result == nullptr) || (!(_74532_m.get()._field_Assigned)))) {
			_1abc3246b_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) ", 18));
			_1abb77526_scope(_self_.get()._field_oc.get()._field_sc, _74532_m.get()._field_Except);
			_1abc3246b_write(_self_.get()._field_oc, jule::Str("\n", 1));
		} else {
			jule::Bool _77121_forwarded = _1abb88c85_isForwarded(&(_74532_m.get()._field_Except));;
			_1abc3246b_write(_self_.get()._field_oc, jule::Str("(except.ok()) ? (except.result) : (", 35));
			if (_77121_forwarded) {
				_1abc3246b_write(_self_.get()._field_oc, jule::Str("{", 1));
			};
			jule::Any _77625_stmt = _74532_m.get()._field_Except.get()._field_Stmts[(_74532_m.get()._field_Except.get()._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _77625_stmt };
				
				if (_match_expr.type == &__jule_any_type24) {
					_case_begin_1bb168321:;
					{
						_74532_m.get()._field_Except.get()._field_Stmts=_74532_m.get()._field_Except.get()._field_Stmts.slice(0LL, (_74532_m.get()._field_Except.get()._field_Stmts.len() - 1LL));
						_1abc3246b_write(_self_.get()._field_oc, jule::Str("{\n", 2));
						_1abc32647_addIndent(_self_.get()._field_oc);
						_1abb772a1_scopeStmts(_self_.get()._field_oc.get()._field_sc, &(_74532_m.get()._field_Except));
						_1abc3246b_write(_self_.get()._field_oc, jule::Str("\n", 1));
						_1abc329ee_indent(_self_.get()._field_oc);
						_1abb800de_writeUseExpr(_self_, &(_74532_m.get()._field_Func), _77625_stmt.cast_ptr<_1aa957d85_Data>(&__jule_any_type24));
						_1abc3246b_write(_self_.get()._field_oc, jule::Str("\n", 1));
						_1abc32823_doneIndent(_self_.get()._field_oc);
						_1abc329ee_indent(_self_.get()._field_oc);
						_1abc3246b_write(_self_.get()._field_oc, jule::Str("}", 1));
					}
				}
				else {
					_case_begin_1bb169201:;
					{
						_1abb77526_scope(_self_.get()._field_oc.get()._field_sc, _74532_m.get()._field_Except);
					}
				}
				_match_end_1bb16919b:;
			};
			if (_77121_forwarded) {
				_1abc3246b_write(_self_.get()._field_oc, jule::Str(" ", 1));
				_1abb8737c_initExpr(_self_, _74532_m.get()._field_Func.get()._field_Result);
				_1abc3246b_write(_self_.get()._field_oc, jule::Str(";}", 2));
			};
			_1abc3246b_write(_self_.get()._field_oc, jule::Str(");\n", 3));
		};
		_1abc32823_doneIndent(_self_.get()._field_oc);
	} else {
		_1abc3246b_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) jule::panic(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 139));
		_1abc34418_locInfo(_self_.get()._field_oc, &(_74532_m.get()._field_Token));
		_1abc3246b_write(_self_.get()._field_oc, jule::Str("\"));\n", 5));
		if ((!(_1aa889888_IsVoid(_74532_m.get()._field_Func.get()._field_Decl.ptr())))) {
			_1abc329ee_indent(_self_.get()._field_oc);
			_1abc3246b_write(_self_.get()._field_oc, jule::Str("(except.result);\n", 17));
		};
		_1abc32823_doneIndent(_self_.get()._field_oc);
	};
	_1abc329ee_indent(_self_.get()._field_oc);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1abb805d9_slice(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Ptr<_1aa87d4c5_SliceExprModel> _81629_m) {
	if ((_81629_m.get()._field_Elems.len() == 0LL)) {
		_1abc3246b_write(_self_.get()._field_oc, _1abc42b52_asSlice(_self_.get()._field_oc.get()._field_tc.ptr(), _81629_m.get()._field_ElemKind));
		_1abc3246b_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	_1abc3246b_write(_self_.get()._field_oc, _1abc42b52_asSlice(_self_.get()._field_oc.get()._field_tc.ptr(), _81629_m.get()._field_ElemKind));
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("::make({", 8));
	_1abb7dc47_models(_self_, _81629_m.get()._field_Elems);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1abb8085e_indexing(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Ptr<_1aa87d948_IndexingExprModel> _82832_m) {
	_1abb7d384_possibleRefExpr(_self_, _82832_m.get()._field_Expr.get()._field_Model);
	{
		
		if (_202bb24e8_Production || (_1aa986237_Ptr(_82832_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || (_1aa987689_Map(_82832_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || _1abb89280_isExprComesFromBind(&(_82832_m.get()._field_Expr))) {
			_case_begin_1bad43392:;
			{
				_1abc3246b_write(_self_.get()._field_oc, jule::Str("[", 1));
				_1abb7d384_possibleRefExpr(_self_, _82832_m.get()._field_Index.get()._field_Model);
				_1abc3246b_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1bad43b12:;
			{
				_1abc3246b_write(_self_.get()._field_oc, jule::Str(".at(\"", 5));
				_1abc34418_locInfo(_self_.get()._field_oc, &(_82832_m.get()._field_Token));
				_1abc3246b_write(_self_.get()._field_oc, jule::Str("\", ", 3));
				_1abb7d384_possibleRefExpr(_self_, _82832_m.get()._field_Index.get()._field_Model);
				_1abc3246b_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1bad43a9b:;
	};
}



inline void _1abb80ad4_unsafeIndexing(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Ptr<_1aa2bbd6a_UnsafeIndexingExprModel> _84838_m) {
	_1abb7d384_possibleRefExpr(_self_, _84838_m.get()._field_Node.get()._field_Expr.get()._field_Model);
	{
		
		if (_202bb24e8_Production || (_1aa986237_Ptr(_84838_m.get()._field_Node.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || (_1aa987689_Map(_84838_m.get()._field_Node.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bad47929:;
			{
				_1abc3246b_write(_self_.get()._field_oc, jule::Str("[", 1));
				_1abb7d384_possibleRefExpr(_self_, _84838_m.get()._field_Node.get()._field_Index.get()._field_Model);
				_1abc3246b_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1bad48221:;
			{
				_1abc3246b_write(_self_.get()._field_oc, jule::Str(".__at(", 6));
				_1abb7d384_possibleRefExpr(_self_, _84838_m.get()._field_Node.get()._field_Index.get()._field_Model);
				_1abc3246b_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1bad481aa:;
	};
}



inline void _1abb80d59_anonFunc(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Ptr<_1aa87dd00_AnonFnExprModel> _86532_m) {
	_1abc3246b_write(_self_.get()._field_oc, _1abc45627_func(_self_.get()._field_oc.get()._field_tc.ptr(), _86532_m.get()._field_Func));
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("([=]", 4));
	_1abc39220_paramsIns(_self_.get()._field_oc, &(_86532_m.get()._field_Func.get()._field_Params));
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(" mutable -> ", 12));
	_1abc4500b_funcInsResult(_self_.get()._field_oc.get()._field_tc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), &(_86532_m.get()._field_Func));
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1abb7779b_funcScope(_self_.get()._field_oc.get()._field_sc, _86532_m.get()._field_Func);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1abb810ce_mapExpr(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Ptr<_1aa87e62a_MapExprModel> _87631_m) {
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("jule::Map<", 10));
	_1abc3246b_write(_self_.get()._field_oc, _1abc45935_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _87631_m.get()._field_KeyKind));
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_1abc3246b_write(_self_.get()._field_oc, _1abc45935_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _87631_m.get()._field_ValKind));
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(">({", 3));
	if ((_87631_m.get()._field_Entries.len() > 0LL)) {
		{
			auto expr = &(_87631_m.get()._field_Entries);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bad5215e:;
			if (it != expr_end) {
				jule::I64 _88318_i = it - expr->begin();
				jule::Ptr<_1aa87e1a7_KeyValPairExprModel> _88325_pair = *it;
				{
					_1abc3246b_write(_self_.get()._field_oc, jule::Str("{", 1));
					_1abb7d384_possibleRefExpr(_self_, _88325_pair.get()._field_Key);
					_1abc3246b_write(_self_.get()._field_oc, jule::Str(",", 1));
					_1abb7d384_possibleRefExpr(_self_, _88325_pair.get()._field_Val);
					_1abc3246b_write(_self_.get()._field_oc, jule::Str("}", 1));
					if (((_87631_m.get()._field_Entries.len() - _88318_i) > 1LL)) {
						_1abc3246b_write(_self_.get()._field_oc, jule::Str(",", 1));
					};
				}
				_iter_next_1bad5215e:;
				++it;
				_88318_i++;
				goto _iter_begin_1bad5215e;
			}
			_iter_end_1bad5215e:;
		};
	};
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1abb81354_slicing(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Ptr<_1aa87eb69_SlicingExprModel> _89731_m) {
	_1abb7d384_possibleRefExpr(_self_, _89731_m.get()._field_Expr);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(".slice(", 7));
	if ((!(_202bb24e8_Production))) {
		_1abc3246b_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1abc34418_locInfo(_self_.get()._field_oc, &(_89731_m.get()._field_Token));
		_1abc3246b_write(_self_.get()._field_oc, jule::Str("\", ", 3));
	};
	_1abb7d384_possibleRefExpr(_self_, _89731_m.get()._field_Left);
	if ((_89731_m.get()._field_Right != nullptr)) {
		_1abc3246b_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_1abb7d384_possibleRefExpr(_self_, _89731_m.get()._field_Right);
	};
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1abb815c9_traitSub(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Ptr<_1aa8801a8_TraitSubIdentExprModel> _91332_m) {
	_1abc3246b_write(_self_.get()._field_oc, static__1abb8ece1_traitDecl(_91332_m.get()._field_Trt));
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("_mptr_data", 10));
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("[(", 2));
	_1abb7d384_possibleRefExpr(_self_, _91332_m.get()._field_Expr);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(").type_offset].", 15));
	_1abc3246b_write(_self_.get()._field_oc, static__1abb8e7a2_func(&(_91332_m.get()._field_Method)));
}



inline void _1abb8184e_structureSub(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Ptr<_1aa88098e_StructSubIdentExprModel> _92236_m) {
	_1abb7d384_possibleRefExpr(_self_, _92236_m.get()._field_Expr.get()._field_Model);
	if ((_92236_m.get()._field_Field == nullptr)) {
		return;;
	};
	if ((_1aa986237_Ptr(_92236_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
		_1abc3246b_write(_self_.get()._field_oc, jule::Str("->", 2));
	} else if ((_1aa985ec3_Sptr(_92236_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
		_1abc3246b_write(_self_.get()._field_oc, jule::Str(".get(", 5));
		if ((!(_202bb24e8_Production))) {
			_1abc3246b_write(_self_.get()._field_oc, jule::Str("\"", 1));
			_1abc34418_locInfo(_self_.get()._field_oc, &(_92236_m.get()._field_Token));
			_1abc3246b_write(_self_.get()._field_oc, jule::Str("\"", 1));
		};
		_1abc3246b_write(_self_.get()._field_oc, jule::Str(").", 2));
	} else {
		_1abc3246b_write(_self_.get()._field_oc, jule::Str(".", 1));
	};
	_1abc3246b_write(_self_.get()._field_oc, static__1abb9086e_field(&(_92236_m.get()._field_Field.get()._field_Decl)));
}



inline void _1abb81ac4_commonIdent(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Ptr<_1aa8814d9_CommonIdentExprModel> _94331_m) {
	_1abc3246b_write(_self_.get()._field_oc, _94331_m.get()._field_Ident);
}



inline void _1abb81d49_commonSub(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Ptr<_1aa881a4a_CommonSubIdentExprModel> _94733_m) {
	_1abb7d384_possibleRefExpr(_self_, _94733_m.get()._field_Expr);
	{
		
		if ((_1aa986237_Ptr(_94733_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1bad6124a:;
			{
				_1abc3246b_write(_self_.get()._field_oc, jule::Str("->", 2));
			}
		}
		else if ((_1aa985ec3_Sptr(_94733_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1bad61954:;
			{
				_1abc3246b_write(_self_.get()._field_oc, jule::Str(".get(", 5));
				if ((!(_202bb24e8_Production))) {
					_1abc3246b_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_1abc34418_locInfo(_self_.get()._field_oc, &(_94733_m.get()._field_Token));
					_1abc3246b_write(_self_.get()._field_oc, jule::Str("\"", 1));
				};
				_1abc3246b_write(_self_.get()._field_oc, jule::Str(").", 2));
			}
		}
		else {
			_case_begin_1bad618dd:;
			{
				_1abc3246b_write(_self_.get()._field_oc, jule::Str(".", 1));
			}
		}
		_match_end_1bad61877:;
	};
	_1abc3246b_write(_self_.get()._field_oc, _94733_m.get()._field_Ident);
}



inline void _1abb820be_array(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Ptr<_1aa8811ed_ArrayExprModel> _96629_m) {
	_1abc3246b_write(_self_.get()._field_oc, _1abc442b3_array(_self_.get()._field_oc.get()._field_tc.ptr(), _96629_m.get()._field_Kind));
	if ((_96629_m.get()._field_Elems.len() == 0LL)) {
		_1abc3246b_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	if (((_96629_m.get()._field_Elems.len() == 2LL) && (_96629_m.get()._field_Elems[1LL] == nullptr))) {
		_1abc3246b_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1abb7d384_possibleRefExpr(_self_, _96629_m.get()._field_Elems[0LL]);
		_1abc3246b_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("({", 2));
	_1abb7dc47_models(_self_, _96629_m.get()._field_Elems);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("})", 2));
	return;;
}



inline void _1abb82344_funcInsCommon(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Ptr<_1aa88c0c7_FnIns> _98937_m) {
	_1abc3246b_write(_self_.get()._field_oc, _1abc45627_func(_self_.get()._field_oc.get()._field_tc.ptr(), _98937_m));
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1abb825b9_funcIns(_self_, _98937_m);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1abb825b9_funcIns(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Ptr<_1aa88c0c7_FnIns> _99631_m) {
	if (((_99631_m.get()._field_Decl != nullptr) && _99631_m.get()._field_Decl.get()._field_CppLinked)) {
		jule::Ptr<_1aa820a94_Directive> _99817_d = _1abc51e91_findDirective(&(_99631_m.get()._field_Decl.get()._field_Directives), jule::Str("namespace", 9));;
		if ((_99817_d != nullptr)) {
			_1abc3246b_write(_self_.get()._field_oc, _1abc3d4ee_concatAllParts(_99817_d.get()._field_Args));
			_1abc3246b_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_1abc3246b_write(_self_.get()._field_oc, static__1abb8ea49_funcIns(&(_99631_m)));
}



inline void _1abb8283e_tuple(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Ptr<_1aa881d47_TupleExprModel> _100729_m) {
	{
		auto expr = &(_100729_m.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bad6dc4c:;
		if (it != expr_end) {
			jule::I64 _100814_i = it - expr->begin();
			jule::Ptr<_1aa957d85_Data> _100821_d = *it;
			{
				_1abb7d384_possibleRefExpr(_self_, _100821_d.get()._field_Model);
				_1abc3246b_write(_self_.get()._field_oc, jule::Str(";", 1));
				if (((_100729_m.get()._field_Datas.len() - _100814_i) > 1LL)) {
					_1abc3246b_write(_self_.get()._field_oc, jule::Str("\n", 1));
					_1abc329ee_indent(_self_.get()._field_oc);
				};
			}
			_iter_next_1bad6dc4c:;
			++it;
			_100814_i++;
			goto _iter_begin_1bad6dc4c;
		}
		_iter_end_1bad6dc4c:;
	};
}



inline void _1abb82ab4_newCall(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Ptr<_1aa882d15_BuiltinNewCallExprModel> _101831_m) {
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_1abc3246b_write(_self_.get()._field_oc, _1abc45935_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _101831_m.get()._field_Kind));
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(">(", 2));
	if ((_101831_m.get()._field_Init != nullptr)) {
		_1abb7d384_possibleRefExpr(_self_, _101831_m.get()._field_Init);
	};
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1abb82d39_outCall(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Ptr<_1aa882221_BuiltinOutCallExprModel> _102831_m) {
	if ((_102831_m.get()._field_Debug && _202bb24e8_Production)) {
		return;;
	};
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("jule::out(", 10));
	_1abb7d384_possibleRefExpr(_self_, _102831_m.get()._field_Expr);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1abb830ae_outlnCall(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Ptr<_1aa88260b_BuiltinOutlnCallExprModel> _103733_m) {
	if ((_103733_m.get()._field_Debug && _202bb24e8_Production)) {
		return;;
	};
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_1abb7d384_possibleRefExpr(_self_, _103733_m.get()._field_Expr);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1abb83334_panicCall(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Ptr<_1aa883200_BuiltinPanicCallExprModel> _104633_m) {
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("jule::panic(", 12));
	_1abb7d384_possibleRefExpr(_self_, _104633_m.get()._field_Expr);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(" + jule::Str(\"\\nlocation: ", 26));
	_1abc34418_locInfo(_self_.get()._field_oc, &(_104633_m.get()._field_Token));
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _1abb835a9_assertCall(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Ptr<_1aa8836a6_BuiltinAssertCallExprModel> _105434_m) {
	if (_202bb24e8_Production) {
		return;;
	};
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("if (!(", 6));
	_1abb7d384_possibleRefExpr(_self_, _105434_m.get()._field_Expr);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(")) jule::panic(jule::Str(", 25));
	_1abc3246b_write(_self_.get()._field_oc, _1abb88081_cstrLit(static_cast<jule::Slice<jule::U8>>(_105434_m.get()._field_Log)));
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(") + jule::Str(\"\\nlocation: ", 27));
	_1abc34418_locInfo(_self_.get()._field_oc, &(_105434_m.get()._field_Token));
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _1abb8382e_errorCall(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Ptr<_1aa885587_BuiltinErrorCallExprModel> _106733_m) {
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("return ", 7));
	if (_1aa889888_IsVoid(_106733_m.get()._field_Func.get()._field_Decl.ptr())) {
		{
			auto &_match_expr{ _106733_m.get()._field_Err.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1bad7b96e:;
				{
					jule::Ptr<_1aa908c59_Var> _107221_v = _106733_m.get()._field_Err.get()._field_Model.cast_ptr<_1aa908c59_Var>(&__jule_any_type8);;
					if (_107221_v.get()._field_Ident.equal("error", 5)) {
						_1abc3246b_write(_self_.get()._field_oc, jule::Str("jule::VoidExceptional(except.error)", 35));
						return;;
					};
				}
			}
			_match_end_1bad7b919:;
		};
		_1abc3246b_write(_self_.get()._field_oc, jule::Str("jule::VoidExceptional(jule::Any(", 32));
	} else {
		_1abc3246b_write(_self_.get()._field_oc, jule::Str("jule::Exceptional<", 18));
		_1abc502d0_codeMut1(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), &(_106733_m.get()._field_Func.get()._field_Result));
		{
			auto &_match_expr{ _106733_m.get()._field_Err.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1bad7e774:;
				{
					jule::Ptr<_1aa908c59_Var> _108421_v = _106733_m.get()._field_Err.get()._field_Model.cast_ptr<_1aa908c59_Var>(&__jule_any_type8);;
					if (_108421_v.get()._field_Ident.equal("error", 5)) {
						_1abc3246b_write(_self_.get()._field_oc, jule::Str(">(except.error)", 15));
						return;;
					};
				}
			}
			_match_end_1bad7e6b9:;
		};
		_1abc3246b_write(_self_.get()._field_oc, jule::Str(">(jule::Any(", 12));
	};
	_1abb7d384_possibleRefExpr(_self_, _106733_m.get()._field_Err.get()._field_Model);
	jule::I64 _109313_i = _1abc3311a_pushAnyType(_self_.get()._field_oc, _106733_m.get()._field_Err.get()._field_Kind);;
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(", &__jule_any_type", 18));
	_1abc3246b_write(_self_.get()._field_oc, _1dc5b298b_Itoa(_109313_i));
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("))", 2));
}



inline void _1abb83aa4_copyCall(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Ptr<_1aa88519c_BuiltinCopyCallExprModel> _109932_m) {
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("jule::copy((", 12));
	_1abb7d384_possibleRefExpr(_self_, _109932_m.get()._field_Dest.get()._field_Model);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_1aa985c5e_Prim(_109932_m.get()._field_Dest.get()._field_Kind.ptr()) != nullptr)) {
		_1abc3246b_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(", (", 3));
	_1abb7d384_possibleRefExpr(_self_, _109932_m.get()._field_Src.get()._field_Model);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_1aa985c5e_Prim(_109932_m.get()._field_Src.get()._field_Kind.ptr()) != nullptr)) {
		_1abc3246b_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1abb83d29_lenCall(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Ptr<_1aa884366_BuiltinLenCallExprModel> _111531_m) {
	_1abb7d384_possibleRefExpr(_self_, _111531_m.get()._field_Expr.get()._field_Model);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(".len()", 6));
}



inline void _1abb8409e_capCall(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Ptr<_1aa884685_BuiltinCapCallExprModel> _112031_m) {
	_1abb7d384_possibleRefExpr(_self_, _112031_m.get()._field_Expr.get()._field_Model);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(".cap()", 6));
}



inline void _1abb84324_deleteCall(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Ptr<_1aa884d39_BuiltinDeleteCallExprModel> _112534_m) {
	_1abb7d384_possibleRefExpr(_self_, _112534_m.get()._field_Dest.get()._field_Model);
	if ((_112534_m.get()._field_Key != nullptr)) {
		_1abc3246b_write(_self_.get()._field_oc, jule::Str(".del(", 5));
		_1abb7d384_possibleRefExpr(_self_, _112534_m.get()._field_Key.get()._field_Model);
		_1abc3246b_write(_self_.get()._field_oc, jule::Str(")", 1));
	} else {
		_1abc3246b_write(_self_.get()._field_oc, jule::Str(".clear()", 8));
	};
}



inline void _1abb84599_makeCallSlice(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Ptr<_1aa883b5c_BuiltinMakeCallExprModel>* _113638_m) {
	jule::Ptr<_1aa98d52a_Slc> _113717_slice = _1aa986bd8_Slc((*(_113638_m)).get()._field_Kind.ptr());;
	_1abc3246b_write(_self_.get()._field_oc, _1abc45935_kind(_self_.get()._field_oc.get()._field_tc.ptr(), (*(_113638_m)).get()._field_Kind));
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	_1abb7d384_possibleRefExpr(_self_, (*(_113638_m)).get()._field_Len);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(", ", 2));
	if (((*(_113638_m)).get()._field_Cap != nullptr)) {
		_1abb7d384_possibleRefExpr(_self_, (*(_113638_m)).get()._field_Cap);
	} else {
		_1abb7d384_possibleRefExpr(_self_, (*(_113638_m)).get()._field_Len);
	};
	if (_1abc525bd_shouldInitialized(&(_113717_slice.get()._field_Elem))) {
		_1abc3246b_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_1abb8737c_initExpr(_self_, _113717_slice.get()._field_Elem);
	};
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1abb8481e_makeCallStr(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Ptr<_1aa883b5c_BuiltinMakeCallExprModel>* _115436_m) {
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	_1abb7d384_possibleRefExpr(_self_, (*(_115436_m)).get()._field_Len);
	if (((*(_115436_m)).get()._field_Cap != nullptr)) {
		_1abc3246b_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_1abb7d384_possibleRefExpr(_self_, (*(_115436_m)).get()._field_Cap);
	};
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1abb84a94_makeCall(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Ptr<_1aa883b5c_BuiltinMakeCallExprModel> _116532_m) {
	if ((_1aa986bd8_Slc(_116532_m.get()._field_Kind.ptr()) != nullptr)) {
		_1abb84599_makeCallSlice(_self_, &(_116532_m));
		return;;
	};
	_1abb8481e_makeCallStr(_self_, &(_116532_m));
}



inline void _1abb84d19_pushToSlice(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Ptr<_1aa2bc200_PushToSliceExprModel> _117335_m) {
	jule::I64 _117413_n = _self_.get()._field_oc.get()._field_Obj.len();;
	_1abb7d384_possibleRefExpr(_self_, _117335_m.get()._field_Dest);
	jule::Str _117613_dest = _self_.get()._field_oc.get()._field_Obj.slice(_117413_n);;
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(" = jule::alloc_for_append(", 26));
	_1abc3246b_write(_self_.get()._field_oc, _117613_dest);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1abc3246b_write(_self_.get()._field_oc, _1dc5b298b_Itoa(static_cast<jule::I64>(_117335_m.get()._field_Elems.get()._field_Elems.len())));
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(");", 2));
	{
		auto expr = &(_117335_m.get()._field_Elems.get()._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb2bd399:;
		if (it != expr_end) {
			jule::Any _118321_e = *it;
			{
				_1abc3246b_write(_self_.get()._field_oc, _117613_dest);
				_1abc3246b_write(_self_.get()._field_oc, jule::Str(".__push(", 8));
				_1abb7d384_possibleRefExpr(_self_, _118321_e);
				_1abc3246b_write(_self_.get()._field_oc, jule::Str(");", 2));
			}
			_iter_next_1bb2bd399:;
			++it;
			goto _iter_begin_1bb2bd399;
		}
		_iter_end_1bb2bd399:;
	};
}



inline void _1abb8508e_appendCall(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Ptr<_1aa884047_BuiltinAppendCallExprModel> _119234_m) {
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("jule::append(", 13));
	_1abb7d384_possibleRefExpr(_self_, _119234_m.get()._field_Dest);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1abb7d384_possibleRefExpr(_self_, _119234_m.get()._field_Elements);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1abb85314_cloneCall(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Ptr<_1aa88292a_BuiltinCloneCallExprModel> _120033_m) {
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("jule::clone(", 12));
	_1abb7d384_possibleRefExpr(_self_, _120033_m.get()._field_Expr);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1abb85589_sizeof(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Ptr<_1aa885884_SizeofExprModel> _120630_m) {
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("sizeof(", 7));
	_1abb7d384_possibleRefExpr(_self_, _120630_m.get()._field_Expr);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1abb8580e_alignof(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Ptr<_1aa885b70_AlignofExprModel> _121231_m) {
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("alignof(", 8));
	_1abb7d384_possibleRefExpr(_self_, _121231_m.get()._field_Expr);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline jule::Str _1abb85b1c_runeLit(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Ptr<_1aa885e5b_RuneExprModel> _121827_m) {
	if ((_121827_m.get()._field_Code <= 127LL)) {
		jule::Str _122021_b = _1abb879ba_sbtoa(static_cast<jule::U8>(static_cast<jule::U8>(_121827_m.get()._field_Code)));;
		if (_122021_b.equal("'", 1)) {
			_122021_b=jule::Str("\\'", 2);
		};
		return ((jule::Str("'", 1) + _122021_b) + jule::Str("'", 1));;
	};
	return _1abb88636_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_121827_m.get()._field_Code)));;
}



inline void _1abb85d92_structureStatic(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Ptr<_1aa880d35_StructStaticIdentExprModel> _122939_m) {
	_1abc3246b_write(_self_.get()._field_oc, static__1abb8ea49_funcIns(&(_122939_m.get()._field_Method)));
}



inline void _1abb86117_integratedToStr(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Ptr<_1aa886269_IntegratedToStrExprModel> _123339_m) {
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("jule::to_str(", 13));
	_1abb7d384_possibleRefExpr(_self_, _123339_m.get()._field_Expr);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1abb8638c_backendEmit(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Ptr<_1aa886632_BackendEmitExprModel> _123935_m) {
	if ((_123935_m.get()._field_Exprs.len() == 0LL)) {
		_1abc3246b_write(_self_.get()._field_oc, _123935_m.get()._field_Code);
		return;;
	};
	jule::I64 _124413_n = _self_.get()._field_oc.get()._field_Obj.len();;
	jule::Slice<jule::Any> _124517_args = jule::Slice<jule::Any>::alloc(_123935_m.get()._field_Exprs.len(), _123935_m.get()._field_Exprs.len());;
	{
		auto expr = &(_123935_m.get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb2c8d22:;
		if (it != expr_end) {
			jule::I64 _124614_i = it - expr->begin();
			jule::Any _124621_expr = *it;
			{
				_1abb7d384_possibleRefExpr(_self_, _124621_expr);
				_124517_args[_124614_i]=jule::Any(_self_.get()._field_oc.get()._field_Obj.slice(_124413_n), &__jule_any_type5);
				_self_.get()._field_oc.get()._field_Obj=_self_.get()._field_oc.get()._field_Obj.slice(0LL, _124413_n);
			}
			_iter_next_1bb2c8d22:;
			++it;
			_124614_i++;
			goto _iter_begin_1bb2c8d22;
		}
		_iter_end_1bb2c8d22:;
	};
	_1abc3246b_write(_self_.get()._field_oc, _1aa2aee5c_Format(_123935_m.get()._field_Code, _124517_args));
}



inline void _1abb86612_free(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Ptr<_1aa88691d_FreeExprModel> _125428_m) {
	_1abb7d384_possibleRefExpr(_self_, _125428_m.get()._field_Expr);
	if (_202bb1d55_RC) {
		_1abc3246b_write(_self_.get()._field_oc, jule::Str(".dealloc()", 10));
		return;;
	};
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(".__free()", 9));
}



inline void _1abb86887_mutSlicing(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Ptr<_1aa2bc73e_MutSlicingExprModel> _126334_m) {
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1abb7d384_possibleRefExpr(_self_, _126334_m.get()._field_Expr);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(").mut_slice(", 12));
	if ((!(_202bb24e8_Production))) {
		_1abc3246b_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1abc34418_locInfo(_self_.get()._field_oc, &(_126334_m.get()._field_Token));
		_1abc3246b_write(_self_.get()._field_oc, jule::Str("\", ", 3));
	};
	_1abb7d384_possibleRefExpr(_self_, _126334_m.get()._field_Left);
	if ((_126334_m.get()._field_Right != nullptr)) {
		_1abc3246b_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_1abb7d384_possibleRefExpr(_self_, _126334_m.get()._field_Right);
	};
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(");", 2));
}



inline void _1abb86b0c_strInsertBegin(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Ptr<_1aa2bcb18_StrInsertBeginExprModel> _128038_m) {
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1abb7d384_possibleRefExpr(_self_, _128038_m.get()._field_Dest);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(").buffer.insert(0, (", 20));
	_1abb7d384_possibleRefExpr(_self_, _128038_m.get()._field_Expr);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("));", 3));
}



inline void _1abb86d82_strComp(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Ptr<_1aa2bb331_StrCompExprModel> _128831_m) {
	if (_128831_m.get()._field_NotEq) {
		_1abc3246b_write(_self_.get()._field_oc, jule::Str("(!", 2));
	};
	jule::Slice<jule::U8> _129213_bytes = static_cast<jule::Slice<jule::U8>>(_1c0903b51_ReadStr(_128831_m.get()._field_Right.ptr()));;
	_1abb7d384_possibleRefExpr(_self_, _128831_m.get()._field_Left);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(".equal(", 7));
	_1abc3246b_write(_self_.get()._field_oc, _1abb88081_cstrLit(_129213_bytes));
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_1abc3246b_write(_self_.get()._field_oc, _1dc5b298b_Itoa(static_cast<jule::I64>(_129213_bytes.len())));
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_128831_m.get()._field_NotEq) {
		_1abc3246b_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _1abb87107_model(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Any _130429_m) {
	{
		auto &_match_expr{ _130429_m };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1bb2d7dca:;
			{
				_1abc3246b_write(_self_.get()._field_oc, _130429_m.cast<jule::Str>(&__jule_any_type5));
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1bb2d81a5:;
			{
				_1abc3246b_write(_self_.get()._field_oc, _1abc45935_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _130429_m.cast_ptr<_1aa983872_TypeKind>(&__jule_any_type89)));
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1bb2d821b:;
			{
				_1abb7b9d1_constant(_self_, _130429_m.cast_ptr<_1c0901b1b_Const>(&__jule_any_type19));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bb2d8282:;
			{
				_1abb7c619_var(_self_, _130429_m.cast_ptr<_1aa908c59_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1bb2d82e8:;
			{
				_1abb7c88e_structureIns(_self_, _130429_m.cast_ptr<_1aa876dd6_StructIns>(&__jule_any_type9));
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1bb2d8d10:;
			{
				_1abb82344_funcInsCommon(_self_, _130429_m.cast_ptr<_1aa88c0c7_FnIns>(&__jule_any_type7));
			}
		}
		else if (_match_expr.type == &__jule_any_type128) {
			_case_begin_1bb2d8d76:;
			{
				_1abb7c11e_unsafeBinary(_self_, _130429_m.cast_ptr<_1aa2bb9d5_UnsafeBinopExprModel>(&__jule_any_type128).get()._field_Node);
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1bb2d8ddc:;
			{
				_1abb7c394_binary(_self_, _130429_m.cast_ptr<_1aa87b2a3_BinopExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1bb2d8e53:;
			{
				_1abb7cb14_unary(_self_, _130429_m.cast_ptr<_1aa87b65a_UnaryExprModel>(&__jule_any_type74));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1bb2d8eb9:;
			{
				_1abb7cd89_structureLit(_self_, _130429_m.cast_ptr<_1aa87be0d_StructLitExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1bb2d9030:;
			{
				_1abb7d10e_allocStructure(_self_, _130429_m.cast_ptr<_1aa87c21b_AllocStructLitExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1bb2d9096:;
			{
				_1abb7d9c2_casting(_self_, _130429_m.cast_ptr<_1aa87c76b_CastingExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1bb2d910c:;
			{
				_1abb80364_funcCall(_self_, _130429_m.cast_ptr<_1aa87d11d_FnCallExprModel>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1bb2d9173:;
			{
				_1abb805d9_slice(_self_, _130429_m.cast_ptr<_1aa87d4c5_SliceExprModel>(&__jule_any_type82));
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1bb2d91d9:;
			{
				_1abb820be_array(_self_, _130429_m.cast_ptr<_1aa8811ed_ArrayExprModel>(&__jule_any_type90));
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1bb2d9250:;
			{
				_1abb80ad4_unsafeIndexing(_self_, _130429_m.cast_ptr<_1aa2bbd6a_UnsafeIndexingExprModel>(&__jule_any_type129));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1bb2d92b6:;
			{
				_1abb8085e_indexing(_self_, _130429_m.cast_ptr<_1aa87d948_IndexingExprModel>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1bb2d933d:;
			{
				_1abb80d59_anonFunc(_self_, _130429_m.cast_ptr<_1aa87dd00_AnonFnExprModel>(&__jule_any_type103));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1bb2d93b5:;
			{
				_1abb810ce_mapExpr(_self_, _130429_m.cast_ptr<_1aa87e62a_MapExprModel>(&__jule_any_type102));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1bb2d943c:;
			{
				_1abb81354_slicing(_self_, _130429_m.cast_ptr<_1aa87eb69_SlicingExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1bb2d94b4:;
			{
				_1abb815c9_traitSub(_self_, _130429_m.cast_ptr<_1aa8801a8_TraitSubIdentExprModel>(&__jule_any_type70));
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1bb2d953b:;
			{
				_1abb8184e_structureSub(_self_, _130429_m.cast_ptr<_1aa88098e_StructSubIdentExprModel>(&__jule_any_type71));
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1bb2d95b3:;
			{
				_1abb81ac4_commonIdent(_self_, _130429_m.cast_ptr<_1aa8814d9_CommonIdentExprModel>(&__jule_any_type72));
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1bb2d963a:;
			{
				_1abb81d49_commonSub(_self_, _130429_m.cast_ptr<_1aa881a4a_CommonSubIdentExprModel>(&__jule_any_type73));
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1bb2d96b2:;
			{
				_1abb8283e_tuple(_self_, _130429_m.cast_ptr<_1aa881d47_TupleExprModel>(&__jule_any_type87));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1bb2d9739:;
			{
				_1abb82d39_outCall(_self_, _130429_m.cast_ptr<_1aa882221_BuiltinOutCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1bb2d97b1:;
			{
				_1abb830ae_outlnCall(_self_, _130429_m.cast_ptr<_1aa88260b_BuiltinOutlnCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1bb2d9838:;
			{
				_1abb82ab4_newCall(_self_, _130429_m.cast_ptr<_1aa882d15_BuiltinNewCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1bb2d98b0:;
			{
				_1abb83334_panicCall(_self_, _130429_m.cast_ptr<_1aa883200_BuiltinPanicCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1bb2d9937:;
			{
				_1abb835a9_assertCall(_self_, _130429_m.cast_ptr<_1aa8836a6_BuiltinAssertCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1bb2d99ae:;
			{
				_1abb8382e_errorCall(_self_, _130429_m.cast_ptr<_1aa885587_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1bb2d9a36:;
			{
				_1abb84a94_makeCall(_self_, _130429_m.cast_ptr<_1aa883b5c_BuiltinMakeCallExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1bb2d9aad:;
			{
				_1abb8508e_appendCall(_self_, _130429_m.cast_ptr<_1aa884047_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1bb2d9b35:;
			{
				_1abb85314_cloneCall(_self_, _130429_m.cast_ptr<_1aa88292a_BuiltinCloneCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1bb2d9bac:;
			{
				_1abb83aa4_copyCall(_self_, _130429_m.cast_ptr<_1aa88519c_BuiltinCopyCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1bb2d9c34:;
			{
				_1abb83d29_lenCall(_self_, _130429_m.cast_ptr<_1aa884366_BuiltinLenCallExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1bb2d9cab:;
			{
				_1abb8409e_capCall(_self_, _130429_m.cast_ptr<_1aa884685_BuiltinCapCallExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1bb2d9d33:;
			{
				_1abb84324_deleteCall(_self_, _130429_m.cast_ptr<_1aa884d39_BuiltinDeleteCallExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1bb2d9daa:;
			{
				_1abb85589_sizeof(_self_, _130429_m.cast_ptr<_1aa885884_SizeofExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1bb2d9e32:;
			{
				_1abb8580e_alignof(_self_, _130429_m.cast_ptr<_1aa885b70_AlignofExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1bb2d9ea9:;
			{
				_1abc3246b_write(_self_.get()._field_oc, _1abb85b1c_runeLit(_self_, _130429_m.cast_ptr<_1aa885e5b_RuneExprModel>(&__jule_any_type88)));
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1bb2da031:;
			{
				_1abb85d92_structureStatic(_self_, _130429_m.cast_ptr<_1aa880d35_StructStaticIdentExprModel>(&__jule_any_type101));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1bb2da0a8:;
			{
				_1abb86117_integratedToStr(_self_, _130429_m.cast_ptr<_1aa886269_IntegratedToStrExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1bb2da130:;
			{
				_1abb8638c_backendEmit(_self_, _130429_m.cast_ptr<_1aa886632_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1bb2da1a7:;
			{
				_1abb86612_free(_self_, _130429_m.cast_ptr<_1aa88691d_FreeExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1bb2da22e:;
			{
				_1abb86887_mutSlicing(_self_, _130429_m.cast_ptr<_1aa2bc73e_MutSlicingExprModel>(&__jule_any_type123));
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1bb2da2a6:;
			{
				_1abb86b0c_strInsertBegin(_self_, _130429_m.cast_ptr<_1aa2bcb18_StrInsertBeginExprModel>(&__jule_any_type124));
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_1bb2da32d:;
			{
				_1abb86d82_strComp(_self_, _130429_m.cast_ptr<_1aa2bb331_StrCompExprModel>(&__jule_any_type127));
			}
		}
		else {
			_case_begin_1bb2d8051:;
			{
				_1abc3246b_write(_self_.get()._field_oc, jule::Str("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1bb2d7e74:;
	};
}



inline void _1abb8737c_initExpr(jule::Ptr<_1abb7a381_exprCoder> _self_, jule::Ptr<_1aa983872_TypeKind> _140732_t) {
	if (_1aa9852ad_NilCompatible(_140732_t.ptr())) {
		if ((_1aa986237_Ptr(_140732_t.ptr()) != nullptr)) {
			_1abc3246b_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
		} else {
			_1abc3246b_write(_self_.get()._field_oc, _1abc45935_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _140732_t));
			_1abc3246b_write(_self_.get()._field_oc, jule::Str("(nullptr)", 9));
		};
		return;;
	};
	jule::Ptr<_1aa98e0a8_Tuple> _141717_tup = _1aa9878ed_Tup(_140732_t.ptr());;
	if ((_141717_tup != nullptr)) {
		_1abc4eb92_tup(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), _141717_tup);
		_1abc3246b_write(_self_.get()._field_oc, jule::Str("{", 1));
		{
			auto expr = &(_141717_tup.get()._field_Types);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bb30617e:;
			if (it != expr_end) {
				jule::I64 _142118_i = it - expr->begin();
				jule::Ptr<_1aa983872_TypeKind> _142125_tt = *it;
				{
					if ((!(_1abc525bd_shouldInitialized(&(_142125_tt))))) {
						goto _iter_next_1bb30617e;
					};
					_1abc3246b_write(_self_.get()._field_oc, jule::Str(".__jule_result_arg", 18));
					_1abc3246b_write(_self_.get()._field_oc, _1dc5b298b_Itoa(_142118_i));
					_1abc3246b_write(_self_.get()._field_oc, jule::Str("=", 1));
					_1abb8737c_initExpr(_self_, _142125_tt);
					if (((_141717_tup.get()._field_Types.len() - _142118_i) > 1LL)) {
						_1abc3246b_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
				_iter_next_1bb30617e:;
				++it;
				_142118_i++;
				goto _iter_begin_1bb30617e;
			}
			_iter_end_1bb30617e:;
		};
		_1abc3246b_write(_self_.get()._field_oc, jule::Str("}", 1));
		return;;
	};
	jule::Ptr<_1aa89ddca_Enum> _143617_enm = _1aa98649b_Enum(_140732_t.ptr());;
	if ((_143617_enm != nullptr)) {
		_1abb87107_model(_self_, _143617_enm.get()._field_Items[0LL].get()._field_Value.get()._field_Data.get()._field_Model);
		return;;
	};
	jule::Ptr<_1aa989339_Prim> _144113_prim = _1aa985c5e_Prim(_140732_t.ptr());;
	if ((_144113_prim != nullptr)) {
		if (_1c0901698_IsNum(_144113_prim.get()._field_Kind)) {
			_1abc3246b_write(_self_.get()._field_oc, jule::Str("0", 1));
		} else if (_1aa98c309_IsBool(_144113_prim.ptr())) {
			_1abc3246b_write(_self_.get()._field_oc, jule::Str("false", 5));
		} else if (_1aa98c56d_IsStr(_144113_prim.ptr())) {
			_1abc3246b_write(_self_.get()._field_oc, jule::Str("jule::Str()", 11));
		};
		return;;
	};
	if ((_1aa986974_Arr(_140732_t.ptr()) != nullptr)) {
		jule::Ptr<_1aa9906c5_Arr> _145321_arr = _1aa986974_Arr(_140732_t.ptr());;
		_1abc3246b_write(_self_.get()._field_oc, _1abc45935_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _140732_t));
		_1abc3246b_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1abb8737c_initExpr(_self_, _145321_arr.get()._field_Elem);
		_1abc3246b_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	jule::Ptr<_1aa876dd6_StructIns> _146017_s = _1aa9871b1_Struct(_140732_t.ptr());;
	if ((((_146017_s != nullptr) && _146017_s.get()._field_Decl.get()._field_CppLinked) && (_1abc51e91_findDirective(&(_146017_s.get()._field_Decl.get()._field_Directives), jule::Str("typedef", 7)) == nullptr))) {
		_1abc3246b_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1abc3246b_write(_self_.get()._field_oc, _1abc45935_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _140732_t));
		_1abc3246b_write(_self_.get()._field_oc, jule::Str("){}", 3));
		return;;
	};
	_1abc3246b_write(_self_.get()._field_oc, _1abc45935_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _140732_t));
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("()", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1abb7a381_exprCoder _Src) {
	_Stream << "exprCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1abb89b21_deriveCoder> static__1abb8a00b_new(jule::Ptr<_1abc31cc8_ObjectCoder> _1223_oc) {
	return jule::new_ptr<_1abb89b21_deriveCoder>(_1abb89b21_deriveCoder{._field_oc=_1223_oc});;
}



inline jule::Str _1abb8a319_cloneFuncDecl(_1abb89b21_deriveCoder* _self_, jule::Ptr<_1aa8740c0_Struct>* _1633_s) {
	jule::Str _1717_obj = _1abc43b97_structure((*(_self_))._field_oc.get()._field_tc.ptr(), (*(_1633_s)));;
	(_1717_obj).append(" clone(void) const ", 19);
	return _1717_obj;;
}



inline jule::Str _1abb8a627_cloneFuncDef(_1abb89b21_deriveCoder* _self_, jule::Ptr<_1aa8740c0_Struct>* _2232_s) {
	jule::Str _2317_obj = _1abc43b97_structure((*(_self_))._field_oc.get()._field_tc.ptr(), (*(_2232_s)));;
	_2317_obj+=(jule::Str(" ", 1) + _2317_obj);
	(_2317_obj).append("::clone(void) const ", 20);
	return _2317_obj;;
}







std::ostream &operator<<(std::ostream &_Stream, _1abb89b21_deriveCoder _Src) {
	_Stream << "deriveCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1abb8b507_TestCoder> static__1abb8b97a_New(jule::Ptr<_1abc31cc8_ObjectCoder>* _2824_oc) {
	return jule::new_ptr<_1abb8b507_TestCoder>(_1abb8b507_TestCoder{._field_oc=(*(_2824_oc))});;
}



inline jule::Ptr<_1aa8d101c_ImportInfo> _1abb8bbde_findTestingPackage(jule::Ptr<_1abb8b507_TestCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_oc.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb315006:;
		if (it != expr_end) {
			jule::Ptr<_1aa8d101c_ImportInfo> _3521_imp = *it;
			{
				if (_3521_imp.get()._field_LinkPath.equal("std::testing", 12)) {
					return _3521_imp;;
				};
			}
			_iter_next_1bb315006:;
			++it;
			goto _iter_begin_1bb315006;
		}
		_iter_end_1bb315006:;
	};
	return nullptr;;
}



inline void _1abb8be64_appendTest(jule::Ptr<_1abb8b507_TestCoder> _self_, jule::Ptr<_1aa88c0c7_FnIns> _4334_f) {
	_1abc329ee_indent(_self_.get()._field_oc);
	_1abb8c629_callTmReset(_self_);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1abc329ee_indent(_self_.get()._field_oc);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("std::cout << \">>> TEST RUNNING: \" ", 34));
	_1abc3246b_write(_self_.get()._field_oc, _1abb88081_cstrLit(static_cast<jule::Slice<jule::U8>>(_4334_f.get()._field_Decl.get()._field_Ident)));
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(" << std::endl;\n", 15));
	_1abc329ee_indent(_self_.get()._field_oc);
	_1abc3246b_write(_self_.get()._field_oc, static__1abb8ea49_funcIns(&(_4334_f)));
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("(_t);\n", 6));
	_1abc329ee_indent(_self_.get()._field_oc);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("post_test();\n", 13));
}



inline void _1abb8c1d9_appendPackageTests(jule::Ptr<_1abb8b507_TestCoder> _self_, jule::Ptr<_1aa8d3b57_Package>* _5843_p) {
	{
		auto expr = &((*(_5843_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb319e2e:;
		if (it != expr_end) {
			jule::Ptr<_1aa94d51d_SymbolTable> _5921_file = *it;
			{
				{
					auto expr = &(_5921_file.get()._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bb31a76a:;
					if (it != expr_end) {
						jule::Ptr<_1aa889426_Fn> _6025_f = *it;
						{
							if (_1abc52326_hasDirective(&(_6025_f.get()._field_Directives), jule::Str("test", 4))) {
								_1abb8be64_appendTest(_self_, _6025_f.get()._field_Instances[0LL]);
							};
						}
						_iter_next_1bb31a76a:;
						++it;
						goto _iter_begin_1bb31a76a;
					}
					_iter_end_1bb31a76a:;
				};
			}
			_iter_next_1bb319e2e:;
			++it;
			goto _iter_begin_1bb319e2e;
		}
		_iter_end_1bb319e2e:;
	};
}



inline jule::Bool _1abb8c44d_readyTestingPackage(jule::Ptr<_1abb8b507_TestCoder> _self_) {
	jule::Ptr<_1aa8d101c_ImportInfo> _6917_p = _1abb8bbde_findTestingPackage(_self_);;
	if ((_6917_p == nullptr)) {
		return false;;
	};
	_self_.get()._field_t=_1aa8d213e_FindStruct(_6917_p.ptr(), jule::Str("T", 1), false).get()._field_Instances[0LL];
	_self_.get()._field_tmReset=_1aa877d82_FindMethod(_self_.get()._field_t.ptr(), jule::Str("reset", 5), false);
	_self_.get()._field_tmFailed=_1aa877d82_FindMethod(_self_.get()._field_t.ptr(), jule::Str("Failed", 6), false);
	_self_.get()._field_tmSkipped=_1aa877d82_FindMethod(_self_.get()._field_t.ptr(), jule::Str("Skipped", 7), false);
	return true;;
}



inline void _1abb8c629_callTmReset(jule::Ptr<_1abb8b507_TestCoder> _self_) {
	_1abc3246b_write(_self_.get()._field_oc, static__1abb8e7a2_func(&(_self_.get()._field_tmReset)));
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1abb8c805_callTmFailed(jule::Ptr<_1abb8b507_TestCoder> _self_) {
	_1abc3246b_write(_self_.get()._field_oc, static__1abb8e7a2_func(&(_self_.get()._field_tmFailed)));
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1abb8c9d1_callTmSkipped(jule::Ptr<_1abb8b507_TestCoder> _self_) {
	_1abc3246b_write(_self_.get()._field_oc, static__1abb8e7a2_func(&(_self_.get()._field_tmSkipped)));
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1abb8cbac_Serialize(jule::Ptr<_1abb8b507_TestCoder> _self_) {
	_1abc3cbc4_serializeHead(_self_.get()._field_oc);
	__JULE_DEFER({
		_1abc3c9e8_end(_self_.get()._field_oc);
	});;
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("\nvoid test_point(void) {\n", 25));
	_1abc32647_addIndent(_self_.get()._field_oc);
	_1abc329ee_indent(_self_.get()._field_oc);
	if ((!(_1abb8c44d_readyTestingPackage(_self_)))) {
		_1abc3246b_write(_self_.get()._field_oc, jule::Str("}", 1));
		_1abc32823_doneIndent(_self_.get()._field_oc);
		return;;
	};
	_1abc3246b_write(_self_.get()._field_oc, _1abc417ee_asSptr(_self_.get()._field_oc.get()._field_tc.ptr(), _1abc43ea5_structureIns(_self_.get()._field_oc.get()._field_tc.ptr(), _self_.get()._field_t)));
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(" _t = jule::new_ptr<", 20));
	_1abc3246b_write(_self_.get()._field_oc, _1abc43ea5_structureIns(_self_.get()._field_oc.get()._field_tc.ptr(), _self_.get()._field_t));
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(">(); _t.ref = nullptr;\n", 23));
	_1abc329ee_indent(_self_.get()._field_oc);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47));
	_1abc329ee_indent(_self_.get()._field_oc);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("auto post_test = [&](void) {\n", 29));
	_1abc32647_addIndent(_self_.get()._field_oc);
	_1abc329ee_indent(_self_.get()._field_oc);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("++total;\n", 9));
	_1abc329ee_indent(_self_.get()._field_oc);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("if (", 4));
	_1abb8c805_callTmFailed(_self_);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60));
	_1abc329ee_indent(_self_.get()._field_oc);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("else if (", 9));
	_1abb8c9d1_callTmSkipped(_self_);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62));
	_1abc329ee_indent(_self_.get()._field_oc);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53));
	_1abc32823_doneIndent(_self_.get()._field_oc);
	_1abc329ee_indent(_self_.get()._field_oc);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("};\n", 3));
	_1abb8c1d9_appendPackageTests(_self_, &(_self_.get()._field_oc.get()._field_ir.get()._field_Main));
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("\n\n", 2));
	_1abc329ee_indent(_self_.get()._field_oc);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154));
	_1abc329ee_indent(_self_.get()._field_oc);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("if (failed != 0) std::exit(1);\n", 31));
	_1abc32823_doneIndent(_self_.get()._field_oc);
	_1abc329ee_indent(_self_.get()._field_oc);
	_1abc3246b_write(_self_.get()._field_oc, jule::Str("}\n", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1abb8b507_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tmReset:" << _Src._field_tmReset << ", ";
	_Stream << "tmFailed:" << _Src._field_tmFailed << ", ";
	_Stream << "tmSkipped:" << _Src._field_tmSkipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__1abb8e120_toOut(jule::Str* _3322_ident, jule::Uintptr _3334_addr) {
	if ((_3334_addr != 0LLU)) {
		jule::Str _3521_obj = jule::Str::alloc(0LL, 40LL);;
		(_3521_obj).append("_", 1);
		_3521_obj+=_1dc5b235e_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_3334_addr)), 15LL);
		(_3521_obj).append("_", 1);
		_3521_obj+=(*(_3322_ident));
		return _3521_obj;;
	};
	jule::Str _4217_obj = jule::Str::alloc(0LL, ((*(_3322_ident)).len() + 1LL));;
	(_4217_obj).append("_", 1);
	_4217_obj+=(*(_3322_ident));
	return _4217_obj;;
}



inline jule::Str static__1abb8e50a_toLocal(jule::I64 _5423_row, jule::I64 _5433_col, jule::Str* _5444_ident) {
	jule::Str _5517_obj = jule::Str::alloc(0LL, 40LL);;
	(_5517_obj).append("_", 1);
	_5517_obj+=_1dc5b298b_Itoa(_5423_row);
	_5517_obj+=_1dc5b298b_Itoa(_5433_col);
	(_5517_obj).append("_", 1);
	_5517_obj+=(*(_5444_ident));
	return _5517_obj;;
}



inline jule::Str static__1abb8e7a2_func(jule::Ptr<_1aa889426_Fn>* _6521_f) {
	{
		
		if ((*(_6521_f)).get()._field_CppLinked) {
			_case_begin_1bb332ed0:;
			{
				return (*(_6521_f)).get()._field_Ident;;
			}
		}
		else if ((*(_6521_f)).get()._field_Ident.equal("main", 4)) {
			_case_begin_1bb333046:;
			{
				return jule::Str("entry_point", 11);;
			}
		}
		else if (_1aa889aec_IsMethod((*(_6521_f)).ptr())) {
			_case_begin_1bb3323db:;
			{
				jule::Str _7221_obj = static__1abb8e120_toOut(&((*(_6521_f)).get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_6521_f)))));;
				if ((*(_6521_f)).get()._field_Statically) {
					(_7221_obj).buffer.insert(0, (jule::Str("static_", 7)));;
					return _7221_obj;;
				};
				return _7221_obj;;
			}
		}
		else {
			_case_begin_1bb332375:;
			{
				return static__1abb8e120_toOut(&((*(_6521_f)).get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_6521_f)))));;
			}
		}
		_match_end_1bb3322cb:;
	};
}



inline jule::Str static__1abb8ea49_funcIns(jule::Ptr<_1aa88c0c7_FnIns>* _8424_f) {
	if (_1aa88d45d_IsBuiltin((*(_8424_f)).ptr())) {
		return (jule::Str("jule::", 6) + (*(_8424_f)).get()._field_Decl.get()._field_Ident);;
	};
	if (((*(_8424_f)).get()._field_Decl.get()._field_CppLinked || ((*(_8424_f)).get()._field_Generics.len() == 0LL))) {
		return static__1abb8e7a2_func(&((*(_8424_f)).get()._field_Decl));;
	};
	return static__1abb8e120_toOut(&((*(_8424_f)).get()._field_Decl.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_8424_f)))));;
}



inline jule::Str static__1abb8ece1_traitDecl(jule::Ptr<_1aa89b647_Trait> _9525_t) {
	if (_1aa89c1d6_IsBuiltin(_9525_t.ptr())) {
		return (jule::Str("jule::", 6) + _9525_t.get()._field_Ident);;
	};
	return static__1abb8e120_toOut(&(_9525_t.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_9525_t)));;
}



inline jule::Str static__1abb90088_param(jule::Ptr<_1aa887ad9_Param>* _10322_p) {
	if ((_1db947849_IsAnonIdent((*(_10322_p)).get()._field_Ident) || _1db9475a2_IsIgnoreIdent((*(_10322_p)).get()._field_Ident))) {
		return jule::Str();;
	};
	if (_1aa888216_IsSelf((*(_10322_p)).ptr())) {
		return jule::Str("_self_", 6);;
	};
	if (((*(_10322_p)).get()._field_Token == nullptr)) {
		return static__1abb8e50a_toLocal(0LL, 0LL, &((*(_10322_p)).get()._field_Ident));;
	};
	return static__1abb8e50a_toLocal((*(_10322_p)).get()._field_Token.get()._field_Row, (*(_10322_p)).get()._field_Token.get()._field_Column, &((*(_10322_p)).get()._field_Ident));;
}



inline jule::Str static__1abb90330_structure(jule::Ptr<_1aa8740c0_Struct>* _11726_s) {
	if ((*(_11726_s)).get()._field_CppLinked) {
		if (_1abc52326_hasDirective(&((*(_11726_s)).get()._field_Directives), jule::Str("typedef", 7))) {
			return (*(_11726_s)).get()._field_Ident;;
		};
		return (jule::Str("struct ", 7) + (*(_11726_s)).get()._field_Ident);;
	};
	return static__1abb8e120_toOut(&((*(_11726_s)).get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_11726_s)))));;
}



inline jule::Str static__1abb905c7_structureIns(jule::Ptr<_1aa876dd6_StructIns>* _12829_s) {
	if (((*(_12829_s)).get()._field_Decl.get()._field_CppLinked || ((*(_12829_s)).get()._field_Generics.len() == 0LL))) {
		return static__1abb90330_structure(&((*(_12829_s)).get()._field_Decl));;
	};
	return static__1abb8e120_toOut(&((*(_12829_s)).get()._field_Decl.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12829_s)))));;
}



inline jule::Str static__1abb9086e_field(jule::Ptr<_1aa8714eb_Field>* _13622_f) {
	if ((*(_13622_f)).get()._field_Owner.get()._field_CppLinked) {
		return (*(_13622_f)).get()._field_Ident;;
	};
	return (jule::Str("_field_", 7) + (*(_13622_f)).get()._field_Ident);;
}



inline jule::Str static__1abb90b16_var(jule::Ptr<_1aa908c59_Var> _14423_v) {
	{
		
		if (_14423_v.get()._field_CppLinked) {
			_case_begin_1bb33cacd:;
			{
				return _14423_v.get()._field_Ident;;
			}
		}
		else if (_14423_v.get()._field_Ident.equal("error", 5)) {
			_case_begin_1bb33be62:;
			{
				return jule::Str("except.error", 12);;
			}
		}
		else if (_14423_v.get()._field_Ident.equal("self", 4)) {
			_case_begin_1bb33bec8:;
			{
				return jule::Str("_self_", 6);;
			}
		}
		else if ((_14423_v.get()._field_RetOrder == -1LL)) {
			_case_begin_1bb33c03e:;
			{
				return jule::Str("__jule_func_result", 18);;
			}
		}
		else if ((_14423_v.get()._field_RetOrder >= 0LL)) {
			_case_begin_1bb33c0a5:;
			{
				return (jule::Str("__jule_func_result.__jule_result_arg", 36) + _1dc5b298b_Itoa(_14423_v.get()._field_RetOrder));;
			}
		}
		else if ((_14423_v.get()._field_Scope != nullptr)) {
			_case_begin_1bb33c33b:;
			{
				return static__1abb8e50a_toLocal(_14423_v.get()._field_Token.get()._field_Row, _14423_v.get()._field_Token.get()._field_Column, &(_14423_v.get()._field_Ident));;
			}
		}
		else {
			_case_begin_1bb33bdeb:;
			{
				return static__1abb8e120_toOut(&(_14423_v.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_14423_v)));;
			}
		}
		_match_end_1bb33b802:;
	};
}



inline jule::Str static__1abb90dad_iterBegin(jule::Uintptr _16425_it) {
	jule::Str _16517_obj = jule::Str::alloc(0LL, 30LL);;
	(_16517_obj).append("_iter_begin_", 12);
	_16517_obj+=_1dc5b235e_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_16425_it)), 15LL);
	return _16517_obj;;
}



inline jule::Str static__1abb91155_iterEnd(jule::Uintptr _17223_it) {
	jule::Str _17317_obj = jule::Str::alloc(0LL, 30LL);;
	(_17317_obj).append("_iter_end_", 10);
	_17317_obj+=_1dc5b235e_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_17223_it)), 15LL);
	return _17317_obj;;
}



inline jule::Str static__1abb913ec_iterNext(jule::Uintptr _18024_it) {
	jule::Str _18117_obj = jule::Str::alloc(0LL, 30LL);;
	(_18117_obj).append("_iter_next_", 11);
	_18117_obj+=_1dc5b235e_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_18024_it)), 15LL);
	return _18117_obj;;
}



inline jule::Str static__1abb91694_label(jule::Str* _18822_ident) {
	jule::Str _18917_obj = jule::Str::alloc(0LL, 30LL);;
	(_18917_obj).append("_julec_label_", 13);
	_18917_obj+=(*(_18822_ident));
	return _18917_obj;;
}



inline jule::Str static__1abb9193b_matchEnd(jule::Uintptr _19624_m) {
	jule::Str _19717_obj = jule::Str::alloc(0LL, 30LL);;
	(_19717_obj).append("_match_end_", 11);
	_19717_obj+=_1dc5b235e_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_19624_m)), 15LL);
	return _19717_obj;;
}



inline jule::Str static__1abb91bd3_caseBegin(jule::Uintptr _20425_c) {
	jule::Str _20517_obj = jule::Str::alloc(0LL, 30LL);;
	(_20517_obj).append("_case_begin_", 12);
	_20517_obj+=_1dc5b235e_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_20425_c)), 15LL);
	return _20517_obj;;
}







std::ostream &operator<<(std::ostream &_Stream, _1abb8da48_identCoder _Src) {
	_Stream << "identCoder{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1abc30436_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CompilerCommand:" << _Src._field_CompilerCommand;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1abc308ed_traitHash _Src) {
	_Stream << "traitHash{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1abc30ca5_traitCast _Src) {
	_Stream << "traitCast{";
	_Stream << "t1:" << _Src._field_t1 << ", ";
	_Stream << "t2:" << _Src._field_t2;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1abc3edb3_Str(_1abc3eb0a_customType* _self_) {
	return (*(_self_))._field_kind;;
}



inline jule::Bool _1abc401c1_Equal(jule::Ptr<_1abc3eb0a_customType> _self_, jule::Ptr<_1aa983872_TypeKind> _3921_k) {
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1abc3eb0a_customType _Src) {
	_Stream << _1abc3edb3_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1abc40578_typeCoder> static__1abc40ab7_new(jule::Ptr<_1abc31cc8_ObjectCoder>* _6324_oc) {
	jule::Ptr<_1abc40578_typeCoder> _6417_tc = jule::new_ptr<_1abc40578_typeCoder>(_1abc40578_typeCoder{._field_oc=(*(_6324_oc)), });;
	_6417_tc.get()._field_rc=static__1abc4d4a9_new(&(_6417_tc));
	return _6417_tc;;
}



inline jule::Str _1abc40dc5_toType(_1abc40578_typeCoder* _self_, jule::Str _7029_id) {
	if ((!_7029_id.equal("uintptr", 7))) {
		_7029_id=_1dc5b498d_RealKindOf(_7029_id);
	};
	if (((97LL <= _7029_id[0LL]) && (_7029_id[0LL] <= 122LLU))) {
		_7029_id[0LL]-=32LLU;
	};
	return (jule::Str("jule::", 6) + _7029_id);;
}



inline jule::Str _1abc411d3_prim(_1abc40578_typeCoder* _self_, jule::Ptr<_1aa989339_Prim> _8123_p) {
	return _1abc40dc5_toType(_self_, _1aa98969c_Str(_8123_p.ptr()));;
}



inline jule::Str _1abc414e1_tuple(_1abc40578_typeCoder* _self_, jule::Ptr<_1aa98e0a8_Tuple> _8628_t) {
	jule::Str _8717_obj = jule::Str("std::tuple<", 11);;
	{
		auto expr = &(_8628_t.get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb3b74a4:;
		if (it != expr_end) {
			jule::Ptr<_1aa983872_TypeKind> _8821_tk = *it;
			{
				_8717_obj+=_1abc45935_kind(_self_, _8821_tk);
				(_8717_obj).append(",", 1);
			}
			_iter_next_1bb3b74a4:;
			++it;
			goto _iter_begin_1bb3b74a4;
		}
		_iter_end_1bb3b74a4:;
	};
	(_8717_obj).mut_slice(0LL, (_8717_obj.len() - 1LL));;
	(_8717_obj).append(">", 1);
	return _8717_obj;;
}



inline jule::Str _1abc417ee_asSptr(_1abc40578_typeCoder* _self_, jule::Str _9825_elem) {
	jule::Str _9917_obj = jule::Str("jule::Ptr<", 10);;
	_9917_obj+=_9825_elem;
	(_9917_obj).append(">", 1);
	return _9917_obj;;
}



inline jule::Str _1abc41b0c_asPtr(_1abc40578_typeCoder* _self_, jule::Str _10624_elem) {
	return (_10624_elem + jule::Str("*", 1));;
}



inline jule::Str _1abc41e1a_sptr(_1abc40578_typeCoder* _self_, jule::Ptr<_1aa98cabd_Sptr> _11127_sptr) {
	return _1abc417ee_asSptr(_self_, _1abc45935_kind(_self_, _11127_sptr.get()._field_Elem));;
}



inline jule::Str _1abc42228_ptr(_1abc40578_typeCoder* _self_, jule::Ptr<_1aa991132_Ptr> _11626_p) {
	;
	if (_1aa991b05_IsUnsafe(_11626_p.ptr())) {
		return jule::Str("void*", 5);;
	};
	jule::Str _12117_elem = _1abc45935_kind(_self_, _11626_p.get()._field_Elem);;
	(_12117_elem).append("*", 1);
	return _12117_elem;;
}



inline jule::Str _1abc42536_enumDecl(_1abc40578_typeCoder* _self_, jule::Ptr<_1aa89ddca_Enum> _12731_e) {
	return _1abc45935_kind(_self_, _12731_e.get()._field_Kind.get()._field_Kind);;
}



inline jule::Str _1abc42844_typeEnumDecl(_1abc40578_typeCoder* _self_, jule::Ptr<_1aa8a04c5_TypeEnum> _13235_e) {
	return jule::Str("jule::Any", 9);;
}



inline jule::Str _1abc42b52_asSlice(_1abc40578_typeCoder* _self_, jule::Ptr<_1aa983872_TypeKind> _13630_elem) {
	jule::Str _13717_obj = jule::Str("jule::Slice<", 12);;
	_13717_obj+=_1abc45935_kind(_self_, _13630_elem);
	(_13717_obj).append(">", 1);
	return _13717_obj;;
}



inline jule::Str _1abc42e60_slice(_1abc40578_typeCoder* _self_, jule::Ptr<_1aa98d52a_Slc> _14428_s) {
	return _1abc42b52_asSlice(_self_, _14428_s.get()._field_Elem);;
}



inline jule::Str _1abc4326d_mapType(_1abc40578_typeCoder* _self_, jule::Ptr<_1aa98ead1_Map> _14930_m) {
	jule::Str _15017_obj = jule::Str("jule::Map<", 10);;
	_15017_obj+=_1abc45935_kind(_self_, _14930_m.get()._field_Key);
	(_15017_obj).append(",", 1);
	_15017_obj+=_1abc45935_kind(_self_, _14930_m.get()._field_Val);
	(_15017_obj).append(">", 1);
	return _15017_obj;;
}



inline jule::Str _1abc4357b_traitIdent(_1abc40578_typeCoder* _self_, jule::Str _15829_ident) {
	jule::Str _15917_obj = jule::Str("jule::Trait<", 12);;
	_15917_obj+=_15829_ident;
	(_15917_obj).append(">", 1);
	return _15917_obj;;
}



inline jule::Str _1abc43889_traitDecl(_1abc40578_typeCoder* _self_, jule::Ptr<_1aa89b647_Trait> _16628_t) {
	return _1abc4357b_traitIdent(_self_, static__1abb8ece1_traitDecl(_16628_t));;
}



inline jule::Str _1abc43b97_structure(_1abc40578_typeCoder* _self_, jule::Ptr<_1aa8740c0_Struct> _17128_s) {
	jule::Str _17217_rep = jule::Str();;
	if ((_17128_s.get()._field_CppLinked && (!(_1abc52326_hasDirective(&(_17128_s.get()._field_Directives), jule::Str("typedef", 7)))))) {
		(_17217_rep).append("struct ", 7);
	};
	_17217_rep+=static__1abb90330_structure(&(_17128_s));
	return _17217_rep;;
}



inline jule::Str _1abc43ea5_structureIns(_1abc40578_typeCoder* _self_, jule::Ptr<_1aa876dd6_StructIns> _18135_s) {
	if (_18135_s.get()._field_Decl.get()._field_CppLinked) {
		jule::Str _18321_ident = static__1abb905c7_structureIns(&(_18135_s));;
		if ((_18135_s.get()._field_Generics.len() > 0LL)) {
			(_18321_ident).append("<", 1);
			{
				auto expr = &(_18135_s.get()._field_Generics);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1bb3c3922:;
				if (it != expr_end) {
					jule::Ptr<_1aa9820e0_InsGeneric> _18629_g = *it;
					{
						_18321_ident+=_1abc45935_kind(_self_, _18629_g.get()._field_Kind);
						(_18321_ident).append(",", 1);
					}
					_iter_next_1bb3c3922:;
					++it;
					goto _iter_begin_1bb3c3922;
				}
				_iter_end_1bb3c3922:;
			};
			(_18321_ident).mut_slice(0LL, (_18321_ident.len() - 1LL));;
			(_18321_ident).append(">", 1);
		};
		jule::Ptr<_1aa820a94_Directive> _19317_d = _1abc51e91_findDirective(&(_18135_s.get()._field_Decl.get()._field_Directives), jule::Str("namespace", 9));;
		if ((_19317_d != nullptr)) {
			(_18321_ident).buffer.insert(0, ((_1abc3d4ee_concatAllParts(_19317_d.get()._field_Args) + jule::Str("::", 2))));;
		};
		return _18321_ident;;
	};
	return static__1abb905c7_structureIns(&(_18135_s));;
}



inline jule::Str _1abc442b3_array(_1abc40578_typeCoder* _self_, jule::Ptr<_1aa9906c5_Arr> _20328_a) {
	jule::Str _20417_obj = jule::Str("jule::Array<", 12);;
	_20417_obj+=_1abc45935_kind(_self_, _20328_a.get()._field_Elem);
	(_20417_obj).append(",", 1);
	_20417_obj+=_1dc5b298b_Itoa(_20328_a.get()._field_N);
	(_20417_obj).append(">", 1);
	return _20417_obj;;
}



inline jule::Str _1abc448ce_paramIns(_1abc40578_typeCoder* _self_, jule::Ptr<_1aa88b208_ParamIns>* _22932_p) {
	jule::Str _23017_obj = jule::Str();;
	if ((*(_22932_p)).get()._field_Decl.get()._field_Variadic) {
		(_23017_obj).append("jule::Slice<", 12);
		_23017_obj+=_1abc45935_kind(_self_, (*(_22932_p)).get()._field_Kind);
		(_23017_obj).append(">", 1);
	} else {
		_23017_obj+=_1abc45935_kind(_self_, (*(_22932_p)).get()._field_Kind);
	};
	if ((*(_22932_p)).get()._field_Decl.get()._field_Reference) {
		(_23017_obj).append("*", 1);
	};
	return _23017_obj;;
}



inline void _1abc4500b_funcInsResult(_1abc40578_typeCoder* _self_, jule::Str* _25937_s, jule::Ptr<_1aa88c0c7_FnIns>* _25950_f) {
	if (_1aa889888_IsVoid((*(_25950_f)).get()._field_Decl.ptr())) {
		if ((*(_25950_f)).get()._field_Decl.get()._field_Exceptional) {
			((*(_25937_s))).append("jule::VoidExceptional", 21);
		} else {
			((*(_25937_s))).append("void", 4);
		};
		return;;
	};
	if ((*(_25950_f)).get()._field_Decl.get()._field_Exceptional) {
		((*(_25937_s))).append("jule::Exceptional<", 18);
		_1abc502d0_codeMut1((*(_self_))._field_rc.ptr(), _25937_s, &((*(_25950_f)).get()._field_Result));
		((*(_25937_s))).append(">", 1);
		return;;
	};
	_1abc502d0_codeMut1((*(_self_))._field_rc.ptr(), _25937_s, &((*(_25950_f)).get()._field_Result));
}



inline jule::Str _1abc45319_anonFunc(_1abc40578_typeCoder* _self_, jule::Ptr<_1aa88c0c7_FnIns> _27731_f) {
	if (((_27731_f.get()._field_Result != nullptr) && (_1aa9878ed_Tup(_27731_f.get()._field_Result.ptr()) != nullptr))) {
		_1abc33390_pushResultIns((*(_self_))._field_oc, &(_27731_f));
	};
	jule::Str _28117_decl = jule::Str();;
	_1abc4500b_funcInsResult(_self_, &(_28117_decl), &(_27731_f));
	(_28117_decl).append("(", 1);
	if ((_27731_f.get()._field_Params.len() > 0LL)) {
		{
			auto expr = &(_27731_f.get()._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bb3d2a41:;
			if (it != expr_end) {
				jule::Ptr<_1aa88b208_ParamIns> _28525_param = *it;
				{
					if (_1aa888216_IsSelf(_28525_param.get()._field_Decl.ptr())) {
						goto _iter_next_1bb3d2a41;
					};
					_28117_decl+=_1abc448ce_paramIns(_self_, &(_28525_param));
					(_28117_decl).append(",", 1);
				}
				_iter_next_1bb3d2a41:;
				++it;
				goto _iter_begin_1bb3d2a41;
			}
			_iter_end_1bb3d2a41:;
		};
		(_28117_decl).mut_slice(0LL, (_28117_decl.len() - 1LL));;
	} else {
		(_28117_decl).append("void", 4);
	};
	(_28117_decl).append(")", 1);
	return _28117_decl;;
}



inline jule::Str _1abc45627_func(_1abc40578_typeCoder* _self_, jule::Ptr<_1aa88c0c7_FnIns> _30127_f) {
	jule::Str _30217_obj = jule::Str("jule::Fn<", 9);;
	_30217_obj+=_1abc45319_anonFunc(_self_, _30127_f);
	(_30217_obj).append(">", 1);
	return _30217_obj;;
}



inline jule::Str _1abc45935_kind(_1abc40578_typeCoder* _self_, jule::Ptr<_1aa983872_TypeKind> _30927_k) {
	{
		
		if ((_1aa9871b1_Struct(_30927_k.ptr()) != nullptr)) {
			_case_begin_1bb3d5bdc:;
			{
				return _1abc43ea5_structureIns(_self_, _1aa9871b1_Struct(_30927_k.ptr()));;
			}
		}
		else if (_1aa984598_CppLinked(_30927_k.ptr())) {
			_case_begin_1bb3d5c64:;
			{
				return _30927_k.get()._field_CppIdent;;
			}
		}
		else if ((_1aa985c5e_Prim(_30927_k.ptr()) != nullptr)) {
			_case_begin_1bb3d5cdb:;
			{
				return _1abc411d3_prim(_self_, _1aa985c5e_Prim(_30927_k.ptr()));;
			}
		}
		else if ((_1aa9878ed_Tup(_30927_k.ptr()) != nullptr)) {
			_case_begin_1bb3d5d63:;
			{
				return _1abc414e1_tuple(_self_, _1aa9878ed_Tup(_30927_k.ptr()));;
			}
		}
		else if ((_1aa985ec3_Sptr(_30927_k.ptr()) != nullptr)) {
			_case_begin_1bb3d5dda:;
			{
				return _1abc41e1a_sptr(_self_, _1aa985ec3_Sptr(_30927_k.ptr()));;
			}
		}
		else if ((_1aa986237_Ptr(_30927_k.ptr()) != nullptr)) {
			_case_begin_1bb3d5e62:;
			{
				return _1abc42228_ptr(_self_, _1aa986237_Ptr(_30927_k.ptr()));;
			}
		}
		else if ((_1aa98649b_Enum(_30927_k.ptr()) != nullptr)) {
			_case_begin_1bb3d5ed9:;
			{
				return _1abc42536_enumDecl(_self_, _1aa98649b_Enum(_30927_k.ptr()));;
			}
		}
		else if ((_1aa986710_TypeEnum(_30927_k.ptr()) != nullptr)) {
			_case_begin_1bb3d6061:;
			{
				return _1abc42844_typeEnumDecl(_self_, _1aa986710_TypeEnum(_30927_k.ptr()));;
			}
		}
		else if ((_1aa986bd8_Slc(_30927_k.ptr()) != nullptr)) {
			_case_begin_1bb3d60d8:;
			{
				return _1abc42e60_slice(_self_, _1aa986bd8_Slc(_30927_k.ptr()));;
			}
		}
		else if ((_1aa987689_Map(_30927_k.ptr()) != nullptr)) {
			_case_begin_1bb3d6160:;
			{
				return _1abc4326d_mapType(_self_, _1aa987689_Map(_30927_k.ptr()));;
			}
		}
		else if ((_1aa987425_Trait(_30927_k.ptr()) != nullptr)) {
			_case_begin_1bb3d61d7:;
			{
				return _1abc43889_traitDecl(_self_, _1aa987425_Trait(_30927_k.ptr()));;
			}
		}
		else if ((_1aa986974_Arr(_30927_k.ptr()) != nullptr)) {
			_case_begin_1bb3d625e:;
			{
				return _1abc442b3_array(_self_, _1aa986974_Arr(_30927_k.ptr()));;
			}
		}
		else if ((_1aa986e4c_Fn(_30927_k.ptr()) != nullptr)) {
			_case_begin_1bb3d62d6:;
			{
				return _1abc45627_func(_self_, _1aa986e4c_Fn(_30927_k.ptr()));;
			}
		}
		_match_end_1bb3d5a11:;
	};
	{
		auto &_match_expr{ _30927_k.get()._field_Kind };
		
		if (_match_expr.type_is(true, 17)) {
			_case_begin_1bb3d6391:;
			{
				return _30927_k.get()._field_Kind.cast_ptr<_1abc3eb0a_customType>(17).get()._field_kind;;
			}
		}
		else {
			_case_begin_1bb3dd4a8:;
			{
				return jule::Str("[<unimplemented_type_kind>]", 27);;
			}
		}
		_match_end_1bb3dcebe:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1abc40578_typeCoder _Src) {
	_Stream << "typeCoder{";
	_Stream << "oc:" << _Src._field_oc << ", ";
	_Stream << "rc:" << _Src._field_rc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1abc4ce9d_resultCoder> static__1abc4d4a9_new(jule::Ptr<_1abc40578_typeCoder>* _36324_tc) {
	return jule::new_ptr<_1abc4ce9d_resultCoder>(_1abc4ce9d_resultCoder{._field_tc=(*(_36324_tc))});;
}



inline void _1abc4d7c8_ptr(_1abc4ce9d_resultCoder* _self_, jule::Str* _36727_s, jule::Ptr<_1aa991132_Ptr> _36739_p) {
	((*(_36727_s))).append("p", 1);
	_1abc4eeb1_codeMut(_self_, _36727_s, &(_36739_p.get()._field_Elem));
}



inline void _1abc4dae7_sptr(_1abc4ce9d_resultCoder* _self_, jule::Str* _37228_s, jule::Ptr<_1aa98cabd_Sptr> _37240_p) {
	((*(_37228_s))).append("x", 1);
	_1abc4eeb1_codeMut(_self_, _37228_s, &(_37240_p.get()._field_Elem));
}



inline void _1abc4de16_mapType(_1abc4ce9d_resultCoder* _self_, jule::Str* _37731_s, jule::Ptr<_1aa98ead1_Map> _37743_p) {
	((*(_37731_s))).append("m", 1);
	_1abc4eeb1_codeMut(_self_, _37731_s, &(_37743_p.get()._field_Key));
	_1abc4eeb1_codeMut(_self_, _37731_s, &(_37743_p.get()._field_Val));
}



inline void _1abc4e235_slice(_1abc4ce9d_resultCoder* _self_, jule::Str* _38329_s, jule::Ptr<_1aa98d52a_Slc> _38341_slc) {
	((*(_38329_s))).append("s", 1);
	_1abc4eeb1_codeMut(_self_, _38329_s, &(_38341_slc.get()._field_Elem));
}



inline void _1abc4e554_arr(_1abc4ce9d_resultCoder* _self_, jule::Str* _38827_s, jule::Ptr<_1aa9906c5_Arr> _38839_arr) {
	((*(_38827_s))).append("a", 1);
	(*(_38827_s))+=_1dc5b26e4_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_38839_arr.get()._field_N)), 16LL);
	_1abc4eeb1_codeMut(_self_, _38827_s, &(_38839_arr.get()._field_Elem));
}



inline void _1abc4e873_func(_1abc4ce9d_resultCoder* _self_, jule::Str* _39428_s, jule::Ptr<_1aa88c0c7_FnIns> _39440_f) {
	((*(_39428_s))).append("f", 1);
	{
		auto expr = &(_39440_f.get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb3e4767:;
		if (it != expr_end) {
			jule::Ptr<_1aa88b208_ParamIns> _39621_p = *it;
			{
				if (_39621_p.get()._field_Decl.get()._field_Reference) {
					((*(_39428_s))).append("r", 1);
				};
				_1abc4eeb1_codeMut(_self_, _39428_s, &(_39621_p.get()._field_Kind));
			}
			_iter_next_1bb3e4767:;
			++it;
			goto _iter_begin_1bb3e4767;
		}
		_iter_end_1bb3e4767:;
	};
	if ((_39440_f.get()._field_Result != nullptr)) {
		_1abc4eeb1_codeMut(_self_, _39428_s, &(_39440_f.get()._field_Result));
	};
}



inline void _1abc4eb92_tup(_1abc4ce9d_resultCoder* _self_, jule::Str* _40727_s, jule::Ptr<_1aa98e0a8_Tuple> _40739_tup) {
	{
		auto expr = &(_40739_tup.get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb3e63b2:;
		if (it != expr_end) {
			jule::Ptr<_1aa983872_TypeKind> _40821_t = *it;
			{
				((*(_40727_s))).append("__jule_tuple_", 13);
				_1abc4eeb1_codeMut(_self_, _40727_s, &(_40821_t));
			}
			_iter_next_1bb3e63b2:;
			++it;
			goto _iter_begin_1bb3e63b2;
		}
		_iter_end_1bb3e63b2:;
	};
}



inline void _1abc4eeb1_codeMut(_1abc4ce9d_resultCoder* _self_, jule::Str* _41431_s, jule::Ptr<_1aa983872_TypeKind>* _41444_t) {
	{
		auto &_match_expr{ (*(_41444_t)).get()._field_Kind };
		
		if (_match_expr.type_is(true, 16)) {
			_case_begin_1bb3e74e5:;
			{
				_1abc4d7c8_ptr(_self_, _41431_s, (*(_41444_t)).get()._field_Kind.cast_ptr<_1aa991132_Ptr>(16));
			}
		}
		else if (_match_expr.type_is(true, 11)) {
			_case_begin_1bb3e779d:;
			{
				_1abc4dae7_sptr(_self_, _41431_s, (*(_41444_t)).get()._field_Kind.cast_ptr<_1aa98cabd_Sptr>(11));
			}
		}
		else if (_match_expr.type_is(true, 14)) {
			_case_begin_1bb3e7814:;
			{
				_1abc4de16_mapType(_self_, _41431_s, (*(_41444_t)).get()._field_Kind.cast_ptr<_1aa98ead1_Map>(14));
			}
		}
		else if (_match_expr.type_is(true, 12)) {
			_case_begin_1bb3e787a:;
			{
				_1abc4e235_slice(_self_, _41431_s, (*(_41444_t)).get()._field_Kind.cast_ptr<_1aa98d52a_Slc>(12));
			}
		}
		else if (_match_expr.type_is(true, 15)) {
			_case_begin_1bb3e78e1:;
			{
				_1abc4e554_arr(_self_, _41431_s, (*(_41444_t)).get()._field_Kind.cast_ptr<_1aa9906c5_Arr>(15));
			}
		}
		else if (_match_expr.type_is(true, 1)) {
			_case_begin_1bb3e7e74:;
			{
				_1abc4e873_func(_self_, _41431_s, (*(_41444_t)).get()._field_Kind.cast_ptr<_1aa88c0c7_FnIns>(1));
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_1bb3e7eda:;
			{
				jule::Ptr<_1aa89ddca_Enum> _42917_te = (*(_41444_t)).get()._field_Kind.cast_ptr<_1aa89ddca_Enum>(3);;
				(*(_41431_s))+=static__1abb8e120_toOut(&(_42917_te.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_42917_te)));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1bb3e8051:;
			{
				jule::Ptr<_1aa8a04c5_TypeEnum> _43217_te = (*(_41444_t)).get()._field_Kind.cast_ptr<_1aa8a04c5_TypeEnum>(4);;
				(*(_41431_s))+=static__1abb8e120_toOut(&(_43217_te.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_43217_te)));
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_1bb3e80b7:;
			{
				jule::Ptr<_1aa876dd6_StructIns> _43521_si = (*(_41444_t)).get()._field_Kind.cast_ptr<_1aa876dd6_StructIns>(0);;
				(*(_41431_s))+=static__1abb905c7_structureIns(&(_43521_si));
			}
		}
		else if (_match_expr.type_is(true, 2)) {
			_case_begin_1bb3e812d:;
			{
				jule::Ptr<_1aa89b647_Trait> _43821_trt = (*(_41444_t)).get()._field_Kind.cast_ptr<_1aa89b647_Trait>(2);;
				(*(_41431_s))+=static__1abb8ece1_traitDecl(_43821_trt);
			}
		}
		else if (_match_expr.type_is(true, 10)) {
			_case_begin_1bb3e8194:;
			{
				(*(_41431_s))+=(*(_41444_t)).get()._field_Kind.cast_ptr<_1aa989339_Prim>(10).get()._field_Kind;
			}
		}
		else if (_match_expr.type_is(true, 13)) {
			_case_begin_1bb3e820a:;
			{
				_1abc4eb92_tup(_self_, _41431_s, (*(_41444_t)).get()._field_Kind.cast_ptr<_1aa98e0a8_Tuple>(13));
			}
		}
		else {
			_case_begin_1bb3e7726:;
			{
				jule::panic(jule::Str("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/type.jule:445:13"));;
			}
		}
		_match_end_1bb3e757d:;
	};
}



inline void _1abc502d0_codeMut1(_1abc4ce9d_resultCoder* _self_, jule::Str* _44932_s, jule::Ptr<_1aa983872_TypeKind>* _44945_t) {
	jule::Ptr<_1aa98e0a8_Tuple> _45017_tup = _1aa9878ed_Tup((*(_44945_t)).ptr());;
	if ((_45017_tup != nullptr)) {
		_1abc4eb92_tup(_self_, _44932_s, _45017_tup);
	} else {
		(*(_44932_s))+=_1abc45935_kind((*(_self_))._field_tc.ptr(), (*(_44945_t)));
	};
}



inline jule::Str _1abc505aa_code(_1abc4ce9d_resultCoder* _self_, jule::Ptr<_1aa983872_TypeKind>* _45828_t) {
	jule::Str _45917_s = jule::Str::alloc(0LL, 20LL);;
	_1abc4eeb1_codeMut(_self_, &(_45917_s), _45828_t);
	return _45917_s;;
}







std::ostream &operator<<(std::ostream &_Stream, _1abc4ce9d_resultCoder _Src) {
	_Stream << "resultCoder{";
	_Stream << "tc:" << _Src._field_tc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1bb4030e4_Name(_1bb402d08_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1bb403226_What(_1bb402d08_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1bb403369_Reset(_1bb402d08_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1bb4034ac_Short(_1bb402d08_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1bb402d08_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1bb406515_Name(_1bb406977_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1bb406c63_What(_1bb406977_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1bb406d95_Reset(_1bb406977_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1bb406ec7_Short(_1bb406977_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1bb406977_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1bb409ccc_Name(_1bb40a23e_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1bb40a52a_What(_1bb40a23e_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1bb40a65c_Reset(_1bb40a23e_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1bb40a78e_Short(_1bb40a23e_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1bb40a23e_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1bb40d5d8_Name(_1bb40da4a_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1bb40dd36_What(_1bb40da4a_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1bb40de68_Reset(_1bb40da4a_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1bb40e09a_Short(_1bb40da4a_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1bb40da4a_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1bb411da0_Name(_1bb412312_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1bb4125ed_What(_1bb412312_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1bb412730_Reset(_1bb412312_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1bb412862_Short(_1bb412312_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1bb412312_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1abca969c_FlagSet> static__1abca9988_New(void) {
	return jule::new_ptr<_1abca969c_FlagSet>(_1abca969c_FlagSet{._field_flags=jule::Slice<jule::Trait<_1abca7c3e_CommonFlag>>::alloc(0LL, 20LL)});;
}



inline jule::Trait<_1abca7c3e_CommonFlag> _1abca9e1c_FindFlag(_1abca969c_FlagSet* _self_, jule::Str _7127_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb422454:;
		if (it != expr_end) {
			jule::Trait<_1abca7c3e_CommonFlag> _7221_flag = *it;
			{
				if ((_1abca7c3e_CommonFlag_mptr_data[(_7221_flag).type_offset]._1abc78072_Name(_7221_flag) == _7127_name)) {
					return _7221_flag;;
				};
			}
			_iter_next_1bb422454:;
			++it;
			goto _iter_begin_1bb422454;
		}
		_iter_end_1bb422454:;
	};
	return nullptr;;
}



inline jule::Trait<_1abca7c3e_CommonFlag> _1abcaa22a_FindFlagShort(_1abca969c_FlagSet* _self_, jule::I32 _8132_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb422a81:;
		if (it != expr_end) {
			jule::Trait<_1abca7c3e_CommonFlag> _8221_flag = *it;
			{
				if ((_1abca7c3e_CommonFlag_mptr_data[(_8221_flag).type_offset]._1abc781a4_Short(_8221_flag) == _8132_name)) {
					return _8221_flag;;
				};
			}
			_iter_next_1bb422a81:;
			++it;
			goto _iter_begin_1bb422a81;
		}
		_iter_end_1bb422a81:;
	};
	return nullptr;;
}



inline jule::Slice<jule::Trait<_1abca7c3e_CommonFlag>> _1abcaa48e_Flags(_1abca969c_FlagSet* _self_) {
	return (*(_self_))._field_flags;;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1abcaa79c_Parse(_1abca969c_FlagSet* _self_, jule::Slice<jule::Str> _11524_args) {
	_1abcabd75_argParser _11617_ap = _1abcabd75_argParser{._field_set=(*(_self_)), ._field_args=_11524_args, };;
	({
		auto except = _1abcad261_parse(&_11617_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>(except.error);
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>(jule::Any(), _11617_ap._field_content);;
}



inline void _1abcaa978_Reset(_1abca969c_FlagSet* _self_) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb424841:;
		if (it != expr_end) {
			jule::Trait<_1abca7c3e_CommonFlag> _12616_f = *it;
			{
				_1abca7c3e_CommonFlag_mptr_data[(_12616_f).type_offset]._1abca7b0c_Reset(_12616_f);
			}
			_iter_next_1bb424841:;
			++it;
			goto _iter_begin_1bb424841;
		}
		_iter_end_1bb424841:;
	};
}



inline jule::Ptr<_1bb412312_Flag> _1bb5b4c01_addFlagCommon(_1abca969c_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_1bb5b6340:;
			{
				goto _match_end_1bb5b62da;
			}
		}
		_match_end_1bb5b62da:;
	};
	if ((_1abca9e1c_FindFlag(_self_, _13135_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_1abcaa22a_FindFlagShort(_self_, _13146_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1bb412312_Flag> _14817_flag = jule::new_ptr<_1bb412312_Flag>(_1bb412312_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	(*(_self_))._field_flags = jule::alloc_for_append((*(_self_))._field_flags,1);(*(_self_))._field_flags.__push(jule::Trait<_1abca7c3e_CommonFlag>(_14817_flag, 4));;
	return _14817_flag;;
}

inline jule::Ptr<_1bb40da4a_Flag> _1bb5bd545_addFlagCommon(_1abca969c_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_1bb5beb2e:;
			{
				goto _match_end_1bb5bea85;
			}
		}
		_match_end_1bb5bea85:;
	};
	if ((_1abca9e1c_FindFlag(_self_, _13135_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_1abcaa22a_FindFlagShort(_self_, _13146_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1bb40da4a_Flag> _14817_flag = jule::new_ptr<_1bb40da4a_Flag>(_1bb40da4a_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	(*(_self_))._field_flags = jule::alloc_for_append((*(_self_))._field_flags,1);(*(_self_))._field_flags.__push(jule::Trait<_1abca7c3e_CommonFlag>(_14817_flag, 3));;
	return _14817_flag;;
}



inline void _1bb5b2b88_AddVar(_1abca969c_FlagSet* _self_, jule::Ptr<jule::Str> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_1bb412312_Flag> _17617_flag = _1bb5b4c01_addFlagCommon(_self_, _17541_name, _17552_short, _17565_what);;
	_17617_flag.get()._field_default=(*(_17532_var));
	_17617_flag.get()._field_data=_17532_var;
}

inline void _1bb5bb510_AddVar(_1abca969c_FlagSet* _self_, jule::Ptr<jule::Bool> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_1bb40da4a_Flag> _17617_flag = _1bb5bd545_addFlagCommon(_self_, _17541_name, _17552_short, _17565_what);;
	_17617_flag.get()._field_default=(*(_17532_var));
	_17617_flag.get()._field_data=_17532_var;
}







std::ostream &operator<<(std::ostream &_Stream, _1abca969c_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_i64__jule_tuple_bool _1bb42a490_parseInteger(_1abcabd75_argParser* _self_, jule::Str* _19031_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)> _19039_parser) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((*(_19031_s)).empty()) {
			_case_begin_1bb42d11e:;
			{
				__jule_func_result.__jule_result_arg0 = 0LL;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_1d9d036a7_HasPrefix((*(_19031_s)), jule::Str("0x", 2))) {
			_case_begin_1bb42d581:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1d9d036a7_HasPrefix((*(_19031_s)), jule::Str("0b", 2))) {
			_case_begin_1bb42d729:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1d9d036a7_HasPrefix((*(_19031_s)), jule::Str("0o", 2))) {
			_case_begin_1bb42d471:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_19031_s))[0LL] == '0')) {
			_case_begin_1bb42ccde:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1bb42cc78:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1bb42cbac:;
	};
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool _1bb433564_parseInteger(_1abcabd75_argParser* _self_, jule::Str* _19031_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)> _19039_parser) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((*(_19031_s)).empty()) {
			_case_begin_1bb43619e:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_1d9d036a7_HasPrefix((*(_19031_s)), jule::Str("0x", 2))) {
			_case_begin_1bb436611:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1d9d036a7_HasPrefix((*(_19031_s)), jule::Str("0b", 2))) {
			_case_begin_1bb4367a9:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1d9d036a7_HasPrefix((*(_19031_s)), jule::Str("0o", 2))) {
			_case_begin_1bb436501:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_19031_s))[0LL] == '0')) {
			_case_begin_1bb435d6e:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1bb435d08:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1bb435c3c:;
	};
	return __jule_func_result;;
}



inline jule::Str _1abcac66c_getData(_1abcabd75_argParser* _self_) {
	if ((((*(_self_))._field_i + 1LL) >= (*(_self_))._field_args.len())) {
		return jule::Str();;
	};
	((*(_self_))._field_i)++;
	return (*(_self_))._field_args[(*(_self_))._field_i];;
}



inline jule::VoidExceptional _1abcac8ae_processFlag(_1abcabd75_argParser* _self_, jule::Trait<_1abca7c3e_CommonFlag>* _21735_flag) {
	{
		auto &_match_expr{ (*(_21735_flag)) };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1bb427723:;
			{
				jule::Ptr<_1bb40da4a_Flag> _22021_bf = (*(_21735_flag)).cast_ptr<_1bb40da4a_Flag>(3);;
				(*(_22021_bf.get()._field_data))=(!(_22021_bf.get()._field_default));
				return jule::VoidExceptional();;
			}
		}
		_match_end_1bb4276ac:;
	};
	jule::Str _22513_data = _1abcac66c_getData(_self_);;
	if (_22513_data.empty()) {
		return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1abca7c3e_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1abc78072_Name((*(_21735_flag)))) + jule::Str(": expression missing", 20)), &__jule_any_type5));
	};
	{
		auto &_match_expr{ (*(_21735_flag)) };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1bb428c74:;
			{
				jule::Ptr<_1bb402d08_Flag> _23221_intf = (*(_21735_flag)).cast_ptr<_1bb402d08_Flag>(0);;
				jule::Bool _23332_ok = false;;
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _1bb42a490_parseInteger(_self_, &(_22513_data), jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)>([=](jule::Str _23370_s, jule::I64 _23378_base) mutable -> __jule_tuple_i64__jule_tuple_bool {
						__jule_tuple_i64__jule_tuple_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = static_cast<jule::I64>(({
							auto except = _1dc5a1d76_ParseInt(_23370_s, _23378_base, 64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LL;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						}));
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*(_23221_intf.get()._field_data)) = __jule_assign_result.__jule_result_arg0;
					_23332_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_23332_ok))) {
					return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1abca7c3e_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1abc78072_Name((*(_21735_flag)))) + jule::Str(": expression must be valid signed integer", 41)), &__jule_any_type5));
				};
			}
		}
		else if (_match_expr.type_is(true, 1)) {
			_case_begin_1bb429736:;
			{
				jule::Ptr<_1bb406977_Flag> _24021_uintf = (*(_21735_flag)).cast_ptr<_1bb406977_Flag>(1);;
				jule::Bool _24133_ok = false;;
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1bb433564_parseInteger(_self_, &(_22513_data), jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)>([=](jule::Str _24171_s, jule::I64 _24179_base) mutable -> __jule_tuple_u64__jule_tuple_bool {
						__jule_tuple_u64__jule_tuple_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(({
							auto except = _1dc5a1914_ParseUint(_24171_s, _24179_base, 64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LLU;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						}));
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*(_24021_uintf.get()._field_data)) = __jule_assign_result.__jule_result_arg0;
					_24133_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_24133_ok))) {
					return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1abca7c3e_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1abc78072_Name((*(_21735_flag)))) + jule::Str(": expression must be valid unsigned integer", 43)), &__jule_any_type5));
				};
			}
		}
		else if (_match_expr.type_is(true, 2)) {
			_case_begin_1bb42979c:;
			{
				jule::Ptr<_1bb40a23e_Flag> _24821_ff = (*(_21735_flag)).cast_ptr<_1bb40a23e_Flag>(2);;
				(*(_24821_ff.get()._field_data))=static_cast<jule::F64>(({
					auto except = _1dc5a8366_ParseFloat(_22513_data, 64LL);
					(except.ok()) ? (except.result) : ({{

						return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1abca7c3e_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1abc78072_Name((*(_21735_flag)))) + jule::Str(": expression must be valid floating-point", 41)), &__jule_any_type5));
					} 0;});
				}));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1bb429813:;
			{
				(*((*(_21735_flag)).cast_ptr<_1bb412312_Flag>(4).get()._field_data))=_22513_data;
			}
		}
		_match_end_1bb4296c0:;
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1abcacb34_singleDash(_1abcabd75_argParser* _self_, jule::Str* _25730_arg) {
	if (((*(_25730_arg)).len() == 1LL)) {
		return jule::VoidExceptional(jule::Any(((*(_25730_arg)) + jule::Str(": missing argument", 18)), &__jule_any_type5));
	};
	jule::Slice<jule::I32> _26113_rarg = static_cast<jule::Slice<jule::I32>>((*(_25730_arg))).slice(1LL);;
	{
		auto expr = &(_26113_rarg);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb43d849:;
		if (it != expr_end) {
			jule::I32 *_26216_r = it;
			{
				jule::Trait<_1abca7c3e_CommonFlag> _26321_flag = _1abcaa22a_FindFlagShort(&(*(_self_))._field_set, (*(_26216_r)));;
				if ((_26321_flag == nullptr)) {
					return jule::VoidExceptional(jule::Any((((*(_25730_arg)) + jule::Str(": flag is not exist: ", 21)) + static_cast<jule::Str>((*(_26216_r)))), &__jule_any_type5));
				};
				({
					auto except = _1abcac8ae_processFlag(_self_, &(_26321_flag));
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
			}
			_iter_next_1bb43d849:;
			++it;
			goto _iter_begin_1bb43d849;
		}
		_iter_end_1bb43d849:;
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1abcacda9_doubleDash(_1abcabd75_argParser* _self_, jule::Str* _27230_arg) {
	if (((*(_27230_arg)).len() == 2LL)) {
		return jule::VoidExceptional(jule::Any(((*(_27230_arg)) + jule::Str(": missing argument", 18)), &__jule_any_type5));
	};
	jule::Trait<_1abca7c3e_CommonFlag> _27617_flag = _1abca9e1c_FindFlag(&(*(_self_))._field_set, (*(_27230_arg)).slice(2LL));;
	if ((_27617_flag == nullptr)) {
		return jule::VoidExceptional(jule::Any(((*(_27230_arg)) + jule::Str(": flag is not exist", 19)), &__jule_any_type5));
	};
	({
		auto except = _1abcac8ae_processFlag(_self_, &(_27617_flag));
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1abcad085_tryArg(_1abcabd75_argParser* _self_) {
	jule::Str _28413_arg = (*(_self_))._field_args[(*(_self_))._field_i];;
	if (((*(_self_))._field_args.len() == 0LL)) {
		return jule::VoidExceptional();;
	};
	if ((_28413_arg[0LL] == '-')) {
		if (((_28413_arg.len() > 1LL) && (_28413_arg[1LL] == '-'))) {
			({
				auto except = _1abcacda9_doubleDash(_self_, &(_28413_arg));
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
			return jule::VoidExceptional();;
		};
		({
			auto except = _1abcacb34_singleDash(_self_, &(_28413_arg));
			if (!except.ok()) {
				return jule::VoidExceptional(except.error);
			}
		});
		return jule::VoidExceptional();;
	};
	(*(_self_))._field_content = jule::alloc_for_append((*(_self_))._field_content,1);(*(_self_))._field_content.__push(_28413_arg);;
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1abcad261_parse(_1abcabd75_argParser* _self_) {
	for (; ((*(_self_))._field_i < (*(_self_))._field_args.len()); ((*(_self_))._field_i)++) {
		{
			({
				auto except = _1abcad085_tryArg(_self_);
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
		}
	_iter_next_1ab5582d1:;
	}
	_iter_end_1ab5582d1:;;
	return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _1abcabd75_argParser _Src) {
	_Stream << "argParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1abc31cc8_ObjectCoder> static__1abc321e6_New(jule::Ptr<_1ab17e039_IR>* _9224_ir, _1abc30436_SerializationInfo _9233_info) {
	jule::Ptr<_1abc31cc8_ObjectCoder> _9317_oc = jule::new_ptr<_1abc31cc8_ObjectCoder>(_1abc31cc8_ObjectCoder{._field_ir=(*(_9224_ir)), ._field_info=_9233_info, });;
	_9317_oc.get()._field_ec=static__1abb7a77c_new(&(_9317_oc));
	_9317_oc.get()._field_sc=static__1abb72576_new(&(_9317_oc));
	_9317_oc.get()._field_tc=static__1abc40ab7_new(&(_9317_oc));
	_9317_oc.get()._field_dc=static__1abb8a00b_new(_9317_oc);
	return _9317_oc;;
}



inline void _1abc3246b_write(jule::Ptr<_1abc31cc8_ObjectCoder> _self_, jule::Str _10425_s) {
	_self_.get()._field_Obj+=_10425_s;
}



inline void _1abc32647_addIndent(jule::Ptr<_1abc31cc8_ObjectCoder> _self_) {
	(_self_.get()._field_indentBuffer).append("\t", 1);
}



inline void _1abc32823_doneIndent(jule::Ptr<_1abc31cc8_ObjectCoder> _self_) {
	_self_.get()._field_indentBuffer=_self_.get()._field_indentBuffer.slice(0LL, (_self_.get()._field_indentBuffer.len() - 1LL));
}



inline void _1abc329ee_indent(jule::Ptr<_1abc31cc8_ObjectCoder> _self_) {
	_self_.get()._field_Obj+=_self_.get()._field_indentBuffer;
}



inline jule::I64 _1abc32d0c_findAnyType(jule::Ptr<_1abc31cc8_ObjectCoder> _self_, jule::Ptr<_1aa983872_TypeKind>* _12336_t) {
	{
		auto expr = &(_self_.get()._field_anyTypeMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb350629:;
		if (it != expr_end) {
			jule::I64 _12414_i = it - expr->begin();
			jule::Ptr<_1aa983872_TypeKind> _12421_at = *it;
			{
				if (_1aa98407b_Equal(_12421_at, (*(_12336_t)))) {
					return _12414_i;;
				};
			}
			_iter_next_1bb350629:;
			++it;
			_12414_i++;
			goto _iter_begin_1bb350629;
		}
		_iter_end_1bb350629:;
	};
	return -1LL;;
}



inline jule::I64 _1abc3311a_pushAnyType(jule::Ptr<_1abc31cc8_ObjectCoder> _self_, jule::Ptr<_1aa983872_TypeKind> _13235_t) {
	if ((_1aa98649b_Enum(_13235_t.ptr()) != nullptr)) {
		_13235_t=_1aa98649b_Enum(_13235_t.ptr()).get()._field_Kind.get()._field_Kind;
	};
	jule::I64 _13617_i = _1abc32d0c_findAnyType(_self_, &(_13235_t));;
	if ((_13617_i != -1LL)) {
		return _13617_i;;
	};
	_13617_i=static_cast<jule::I64>(_self_.get()._field_anyTypeMap.len());
	_self_.get()._field_anyTypeMap = jule::alloc_for_append(_self_.get()._field_anyTypeMap,1);_self_.get()._field_anyTypeMap.__push(_13235_t);;
	jule::Str _14213_si = _1dc5b298b_Itoa(_13617_i);;
	if ((_1aa985ec3_Sptr(_13235_t.ptr()) != nullptr)) {
		jule::Str _14417_elem_kind = _1abc45935_kind(_self_.get()._field_tc.ptr(), _1aa985ec3_Sptr(_13235_t.ptr()).get()._field_Elem);;
		jule::Str _14517_kind = _1abc417ee_asSptr(_self_.get()._field_tc.ptr(), _14417_elem_kind);;
		(_self_.get()._field_anyObj).append("void __jule_any_type", 20);
		_self_.get()._field_anyObj+=_14213_si;
		(_self_.get()._field_anyObj).append("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64);
		_self_.get()._field_anyObj+=_14417_elem_kind;
		(_self_.get()._field_anyObj).append(">().dealloc(); }\n", 17);
		(_self_.get()._field_anyObj).append("struct jule::Any::Type ", 23);
		(_self_.get()._field_anyObj).append("__jule_any_type", 15);
		_self_.get()._field_anyObj+=_14213_si;
		(_self_.get()._field_anyObj).append("{.dealloc=__jule_any_type", 25);
		_self_.get()._field_anyObj+=_14213_si;
		(_self_.get()._field_anyObj).append("_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};\n", 58);
		(_self_.get()._field_anyObj).append("jule::Bool __jule_any_type", 26);
		_self_.get()._field_anyObj+=_14213_si;
		(_self_.get()._field_anyObj).append("_compare(const jule::Any &any, const ", 37);
		_self_.get()._field_anyObj+=_14517_kind;
		(_self_.get()._field_anyObj).append(" &other) { return any.type == &__jule_any_type", 46);
		_self_.get()._field_anyObj+=_14213_si;
		(_self_.get()._field_anyObj).append(" && jule::ptr_equal(any.data.alloc, other.alloc); }\n", 52);
	} else {
		jule::Bool _17117_comparable = _1aa984cd5_Comparable(_13235_t.ptr());;
		jule::Str _17217_kind = _1abc45935_kind(_self_.get()._field_tc.ptr(), _13235_t);;
		if (_17217_kind.equal("[<unimplemented_type_kind>]", 27)) {
			jule::outln(_1aa983c6d_Str(_13235_t.ptr()));
		};
		(_self_.get()._field_anyObj).append("void __jule_any_type", 20);
		_self_.get()._field_anyObj+=_14213_si;
		(_self_.get()._field_anyObj).append("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64);
		_self_.get()._field_anyObj+=_17217_kind;
		(_self_.get()._field_anyObj).append(">().dealloc(); }\n", 17);
		if (_17117_comparable) {
			(_self_.get()._field_anyObj).append("jule::Bool __jule_any_type", 26);
			_self_.get()._field_anyObj+=_14213_si;
			(_self_.get()._field_anyObj).append("_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<", 66);
			_self_.get()._field_anyObj+=_17217_kind;
			(_self_.get()._field_anyObj).append("*>(alloc) == *reinterpret_cast<", 31);
			_self_.get()._field_anyObj+=_17217_kind;
			(_self_.get()._field_anyObj).append("*>(other); }\n", 13);
		};
		(_self_.get()._field_anyObj).append("jule::Str __jule_any_type", 25);
		_self_.get()._field_anyObj+=_14213_si;
		(_self_.get()._field_anyObj).append("_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<", 76);
		if ((_1aa986237_Ptr(_13235_t.ptr()) == nullptr)) {
			(_self_.get()._field_anyObj).append("const ", 6);
			_self_.get()._field_anyObj+=_17217_kind;
		} else {
			_self_.get()._field_anyObj+=_17217_kind;
			(_self_.get()._field_anyObj).append("* const", 7);
		};
		(_self_.get()._field_anyObj).append("*>(alloc)); }\n", 14);
		(_self_.get()._field_anyObj).append("struct jule::Any::Type ", 23);
		(_self_.get()._field_anyObj).append("__jule_any_type", 15);
		_self_.get()._field_anyObj+=_14213_si;
		(_self_.get()._field_anyObj).append("{.dealloc=__jule_any_type", 25);
		_self_.get()._field_anyObj+=_14213_si;
		(_self_.get()._field_anyObj).append("_dealloc, ", 10);
		if (_17117_comparable) {
			(_self_.get()._field_anyObj).append(".eq=__jule_any_type", 19);
			_self_.get()._field_anyObj+=_14213_si;
			(_self_.get()._field_anyObj).append("_eq, ", 5);
		};
		(_self_.get()._field_anyObj).append(".to_str=__jule_any_type", 23);
		_self_.get()._field_anyObj+=_14213_si;
		(_self_.get()._field_anyObj).append("_to_str};\n", 10);
		if (_17117_comparable) {
			(_self_.get()._field_anyObj).append("jule::Bool __jule_any_type", 26);
			_self_.get()._field_anyObj+=_14213_si;
			(_self_.get()._field_anyObj).append("_compare(const jule::Any &any, const ", 37);
			_self_.get()._field_anyObj+=_17217_kind;
			(_self_.get()._field_anyObj).append(" &other) { return any.type == &__jule_any_type", 46);
			_self_.get()._field_anyObj+=_14213_si;
			(_self_.get()._field_anyObj).append(" && __jule_any_type", 19);
			_self_.get()._field_anyObj+=_14213_si;
			(_self_.get()._field_anyObj).append("_eq(any.data.alloc, (void*)&other); }\n", 38);
		};
	};
	return _13617_i;;
}



inline void _1abc33390_pushResultIns(jule::Ptr<_1abc31cc8_ObjectCoder> _self_, jule::Ptr<_1aa88c0c7_FnIns>* _24038_f) {
	jule::Str _24113_s = _1abc505aa_code(_self_.get()._field_tc.get()._field_rc.ptr(), &((*(_24038_f)).get()._field_Result));;
	jule::Bool _24217_ok = false;;
	_self_.get()._field_resultMap.lookup(_24113_s, nullptr, &(_24217_ok));
	if (_24217_ok) {
		return;;
	};
	_self_.get()._field_resultMap[_24113_s]=false;
	jule::Str _24717_obj = jule::Str::alloc(0LL, 128LL);;
	(_24717_obj).append("struct ", 7);
	_24717_obj+=_24113_s;
	(_24717_obj).append(" {\n", 3);
	{
		auto expr = &(_1aa9878ed_Tup((*(_24038_f)).get()._field_Result.ptr()).get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_203c3b83a:;
		if (it != expr_end) {
			jule::I64 _25114_i = it - expr->begin();
			jule::Ptr<_1aa983872_TypeKind> _25121_t = *it;
			{
				(_24717_obj).append("\t", 1);
				_24717_obj+=_1abc45935_kind(_self_.get()._field_tc.ptr(), _25121_t);
				(_24717_obj).append(" ", 1);
				(_24717_obj).append("__jule_result_arg", 17);
				_24717_obj+=_1dc5b298b_Itoa(_25114_i);
				(_24717_obj).append(";\n", 2);
			}
			_iter_next_203c3b83a:;
			++it;
			_25114_i++;
			goto _iter_begin_203c3b83a;
		}
		_iter_end_203c3b83a:;
	};
	(_24717_obj).append("};\n", 3);
	_self_.get()._field_resultDecls = jule::alloc_for_append(_self_.get()._field_resultDecls,1);_self_.get()._field_resultDecls.__push(_24717_obj);;
}



inline void _1abc33615_pushResult(jule::Ptr<_1abc31cc8_ObjectCoder> _self_, jule::Ptr<_1aa889426_Fn>* _26335_f) {
	if ((_1aa889888_IsVoid((*(_26335_f)).ptr()) || ((*(_26335_f)).get()._field_Result.get()._field_Idents.len() <= 1LL))) {
		return;;
	};
	jule::I64 _26717_n = (*(_26335_f)).get()._field_Instances.len();;
	if (((*(_26335_f)).get()._field_Generics.len() == 0LL)) {
		_26717_n=1LL;
	};
	{
		auto expr = (*(_26335_f)).get()._field_Instances.slice(0LL, _26717_n);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_203c40289:;
		if (it != expr_end) {
			jule::Ptr<_1aa88c0c7_FnIns> _27121_ins = *it;
			{
				_1abc33390_pushResultIns(_self_, &(_27121_ins));
			}
			_iter_next_203c40289:;
			++it;
			goto _iter_begin_203c40289;
		}
		_iter_end_203c40289:;
	};
}



inline jule::I64 _1abc339bc_findTypeOffsetS(_1abc31cc8_ObjectCoder* _self_, jule::Ptr<_1aa89b647_Trait> _27630_t, jule::Ptr<_1aa876dd6_StructIns> _27645_s) {
	if ((_27630_t.get()._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	{
		auto expr = &((*(_self_))._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_203c41356:;
		if (it != expr_end) {
			jule::Ptr<_1abc308ed_traitHash> *_28016_hash = it;
			{
				if ((((*(_28016_hash)).get()._field_t == _27630_t) && ((*(_28016_hash)).get()._field_s == _27645_s))) {
					return (*(_28016_hash)).get()._field_i;;
				};
			}
			_iter_next_203c41356:;
			++it;
			goto _iter_begin_203c41356;
		}
		_iter_end_203c41356:;
	};
	return -1LL;;
}



inline jule::I64 _1abc33d74_findTypeOffset(_1abc31cc8_ObjectCoder* _self_, jule::Ptr<_1aa89b647_Trait> _28829_t, jule::Ptr<_1aa983872_TypeKind> _28844_k) {
	if ((_28829_t.get()._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::Ptr<_1aa876dd6_StructIns> _29217_s = nullptr;;
	if ((_1aa985ec3_Sptr(_28844_k.ptr()) != nullptr)) {
		_28844_k=_1aa985ec3_Sptr(_28844_k.ptr()).get()._field_Elem;
	};
	_29217_s=_1aa9871b1_Struct(_28844_k.ptr());
	if ((_29217_s == nullptr)) {
		return -1LL;;
	};
	return static_cast<jule::I64>(_1abc339bc_findTypeOffsetS(_self_, _28829_t, _29217_s));;
}



inline void _1abc34193_pushAndWriteMaskMapper(jule::Ptr<_1abc31cc8_ObjectCoder> _self_, jule::Ptr<_1aa89b647_Trait> _30346_t1, jule::Ptr<_1aa89b647_Trait> _30362_t2) {
	jule::Str _30417_ident = jule::Str("__jule_trait_offset_mapper_", 27);;
	_30417_ident+=_1dc5b235e_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::Uintptr>(_30362_t2))), 15LL);
	(_30417_ident).append("_to_", 4);
	_30417_ident+=_1dc5b235e_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::Uintptr>(_30346_t1))), 15LL);
	_1abc3246b_write(_self_, _30417_ident);
	{
		auto expr = &(_self_.get()._field_traitCastMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_203c46922:;
		if (it != expr_end) {
			_1abc30ca5_traitCast _31116_m = *it;
			{
				if (((_31116_m._field_t1 == _30346_t1) && (_31116_m._field_t2 == _30362_t2))) {
					return;;
				};
			}
			_iter_next_203c46922:;
			++it;
			goto _iter_begin_203c46922;
		}
		_iter_end_203c46922:;
	};
	_self_.get()._field_traitCastMap = jule::alloc_for_append(_self_.get()._field_traitCastMap,1);_self_.get()._field_traitCastMap.__push(_1abc30ca5_traitCast{._field_t1=_30346_t1, ._field_t2=_30362_t2});;
	;
	(_self_.get()._field_anyObj).append("jule::Int", 9);
	(_self_.get()._field_anyObj).append(" ", 1);
	_self_.get()._field_anyObj+=_30417_ident;
	(_self_.get()._field_anyObj).append("(const jule::Int offset) noexcept { ", 36);
	{
		auto expr = &(_30346_t1.get()._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bae8e675:;
		if (it != expr_end) {
			jule::Ptr<_1aa8740c0_Struct> _33021_s1 = *it;
			{
				{
					auto expr = &(_30362_t2.get()._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bb1656a3:;
					if (it != expr_end) {
						jule::Ptr<_1aa8740c0_Struct> _33120_s2 = *it;
						{
							if ((_33021_s1 == _33120_s2)) {
								{
									auto expr = &(_33021_s1.get()._field_Instances);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1bb16dc50:;
									if (it != expr_end) {
										jule::Ptr<_1aa876dd6_StructIns> _33333_s1i = *it;
										{
											jule::I64 _33429_i1 = _1abc339bc_findTypeOffsetS(_self_.ptr(), _30346_t1, _33333_s1i);;
											jule::I64 _33529_i2 = _1abc339bc_findTypeOffsetS(_self_.ptr(), _30362_t2, _33333_s1i);;
											(_self_.get()._field_anyObj).append("if (offset == ", 14);
											_self_.get()._field_anyObj+=_1dc5b298b_Itoa(_33529_i2);
											(_self_.get()._field_anyObj).append(") return ", 9);
											_self_.get()._field_anyObj+=_1dc5b298b_Itoa(_33429_i1);
											(_self_.get()._field_anyObj).append("; ", 2);
										}
										_iter_next_1bb16dc50:;
										++it;
										goto _iter_begin_1bb16dc50;
									}
									_iter_end_1bb16dc50:;
								};
							};
						}
						_iter_next_1bb1656a3:;
						++it;
						goto _iter_begin_1bb1656a3;
					}
					_iter_end_1bb1656a3:;
				};
			}
			_iter_next_1bae8e675:;
			++it;
			goto _iter_begin_1bae8e675;
		}
		_iter_end_1bae8e675:;
	};
	(_self_.get()._field_anyObj).append(" return ", 8);
	_self_.get()._field_anyObj+=_1dc5b298b_Itoa(0LL);
	(_self_.get()._field_anyObj).append("; }\n", 4);
}



inline void _1abc34418_locInfo(jule::Ptr<_1abc31cc8_ObjectCoder> _self_, jule::Ptr<_1db944d0d_Token>* _35128_t) {
	jule::Str *_35214_loc = &((*(_35128_t)).get()._field_File.get()._field_Path);;
	if (_202bb24e8_Production) {
		{
			
			if (_1d9d036a7_HasPrefix((*(_35214_loc)), _1d9e38479_PathStdlib)) {
				_case_begin_1bb172ca9:;
				{
					_1abc3246b_write(_self_, _1abb87c62_cstrBytes(static_cast<jule::Slice<jule::U8>>((*(_35214_loc)).slice((_1d9d0dc45_Dir(_1d9e38479_PathStdlib).len() + 1LL)))));
				}
			}
			else if (_1d9d036a7_HasPrefix((*(_35214_loc)), _self_.get()._field_ir.get()._field_Root)) {
				_case_begin_1bb17269e:;
				{
					_1abc3246b_write(_self_, _1abb87c62_cstrBytes(static_cast<jule::Slice<jule::U8>>((*(_35214_loc)).slice((_1d9d0dc45_Dir(_self_.get()._field_ir.get()._field_Root).len() + 1LL)))));
				}
			}
			else {
				_case_begin_1bb172308:;
				{
					_1abc3246b_write(_self_, _1abb87c62_cstrBytes(static_cast<jule::Slice<jule::U8>>((*(_35214_loc)))));
				}
			}
			_match_end_1bb17223c:;
		};
	} else {
		_1abc3246b_write(_self_, _1abb87c62_cstrBytes(static_cast<jule::Slice<jule::U8>>((*(_35214_loc)))));
	};
	_1abc3246b_write(_self_, jule::Str(":", 1));
	_1abc3246b_write(_self_, _1dc5b298b_Itoa((*(_35128_t)).get()._field_Row));
	_1abc3246b_write(_self_, jule::Str(":", 1));
	_1abc3246b_write(_self_, _1dc5b298b_Itoa((*(_35128_t)).get()._field_Column));
}



inline void _1abc345e4_head(jule::Ptr<_1abc31cc8_ObjectCoder> _self_) {
	_1abc27c47_Time _37813_time = static__1abc282db_Now();;
	_1abc275a4_AbsTime _37913_abs = _1abc2992a_Abs(&_37813_time);;
	_1abc3246b_write(_self_, jule::Str("// Auto generated by JuleC.\n", 28));
	_1abc3246b_write(_self_, jule::Str("// JuleC version: ", 18));
	_1abc3246b_write(_self_, jule::Str("jule0.0.14 @master", 18));
	_1abc3246b_write(_self_, jule::Str("\n", 1));
	_1abc3246b_write(_self_, jule::Str("// Date: ", 9));
	_1abc3246b_write(_self_, _1dc5b235e_FmtUint(_37913_abs._field_Day, 10LL));
	_1abc3246b_write(_self_, jule::Str("/", 1));
	_1abc3246b_write(_self_, _1dc5b235e_FmtUint(_37913_abs._field_Month, 10LL));
	_1abc3246b_write(_self_, jule::Str("/", 1));
	_1abc3246b_write(_self_, _1dc5b235e_FmtUint(_37913_abs._field_Year, 10LL));
	_1abc3246b_write(_self_, jule::Str(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1abc3246b_write(_self_, _self_.get()._field_info._field_Compiler);
	_1abc3246b_write(_self_, jule::Str(" ", 1));
	_1abc3246b_write(_self_, _self_.get()._field_info._field_CompilerCommand);
	_1abc3246b_write(_self_, jule::Str("\n\n", 2));
	if (_202bb24e8_Production) {
		_1abc3246b_write(_self_, jule::Str("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_202bb1d55_RC))) {
		_1abc3246b_write(_self_, jule::Str("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_202bb222e_Safety))) {
		_1abc3246b_write(_self_, jule::Str("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1abc347c0_links(_self_);
	_1abc3246b_write(_self_, jule::Str("\n\n#include \"", 12));
	_1abc3246b_write(_self_, _1d9e38c60_PathApi);
	_1abc3246b_write(_self_, jule::Str("\"\n\n", 3));
}



inline void _1abc347c0_links(jule::Ptr<_1abc31cc8_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb17d1e3:;
		if (it != expr_end) {
			jule::Ptr<_1aa8d101c_ImportInfo> _41616_used = *it;
			{
				{
					
					if ((!(_41616_used.get()._field_CppLinked))) {
						_case_begin_1bb17dc2c:;
						{
							goto _iter_next_1bb17d1e3;
						}
					}
					else if (_1d9d85e87_IsStdHeaderPath(_41616_used.get()._field_Path)) {
						_case_begin_1bb17dca4:;
						{
							_1abc3246b_write(_self_, jule::Str("#include ", 9));
							_1abc3246b_write(_self_, _41616_used.get()._field_Path);
							_1abc3246b_write(_self_, jule::Str("\n", 1));
						}
					}
					else if (_1d9d86240_IsValidHeaderExt(_1d9d0d382_Ext(_41616_used.get()._field_Path))) {
						_case_begin_1bb17dd2b:;
						{
							_1abc3246b_write(_self_, jule::Str("#include \"", 10));
							_1abc3246b_write(_self_, _41616_used.get()._field_Path);
							_1abc3246b_write(_self_, jule::Str("\"\n", 2));
						}
					}
					_match_end_1bb17db0b:;
				};
			}
			_iter_next_1bb17d1e3:;
			++it;
			goto _iter_begin_1bb17d1e3;
		}
		_iter_end_1bb17d1e3:;
	};
}



inline void _1abc34a45_prepareStructure(_1abc31cc8_ObjectCoder* _self_, jule::Ptr<_1aa8740c0_Struct>* _43240_s) {
	{
		auto expr = &((*(_43240_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb17d930:;
		if (it != expr_end) {
			jule::Ptr<_1aa876dd6_StructIns> _43321_ins = *it;
			{
				{
					auto expr = &(_43321_ins.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bb181b75:;
					if (it != expr_end) {
						jule::Ptr<_1aa889426_Fn> _43425_m = *it;
						{
							if (_43425_m.get()._field_Statically) {
								goto _iter_next_1bb181b75;
							};
							{
								auto expr = &(_43425_m.get()._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1bb1828ce:;
								if (it != expr_end) {
									jule::Ptr<_1aa88c0c7_FnIns> _43829_mins = *it;
									{
										jule::Ptr<_1aa88b208_ParamIns> _43929_p = _43829_mins.get()._field_Params[0LL];;
										if ((!(_1aa88847a_IsRef(_43929_p.get()._field_Decl.ptr())))) {
											_43929_p.get()._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(jule::new_ptr<_1abc3eb0a_customType>(_1abc3eb0a_customType{._field_kind=_1abc41b0c_asPtr((*(_self_))._field_tc.ptr(), _1abc45935_kind((*(_self_))._field_tc.ptr(), _43929_p.get()._field_Kind))}), 17)});
										} else {
											_43929_p.get()._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(jule::new_ptr<_1abc3eb0a_customType>(_1abc3eb0a_customType{._field_kind=_1abc45935_kind((*(_self_))._field_tc.ptr(), _43929_p.get()._field_Kind)}), 17)});
										};
									}
									_iter_next_1bb1828ce:;
									++it;
									goto _iter_begin_1bb1828ce;
								}
								_iter_end_1bb1828ce:;
							};
						}
						_iter_next_1bb181b75:;
						++it;
						goto _iter_begin_1bb181b75;
					}
					_iter_end_1bb181b75:;
				};
			}
			_iter_next_1bb17d930:;
			++it;
			goto _iter_begin_1bb17d930;
		}
		_iter_end_1bb17d930:;
	};
}



inline void _1abc34c21_prepareStructures(jule::Ptr<_1abc31cc8_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb181aba:;
		if (it != expr_end) {
			jule::Ptr<_1aa8740c0_Struct> _45921_s = *it;
			{
				if ((_45921_s.get()._field_Token != nullptr)) {
					_1abc34a45_prepareStructure(_self_.ptr(), &(_45921_s));
				};
			}
			_iter_next_1bb181aba:;
			++it;
			goto _iter_begin_1bb181aba;
		}
		_iter_end_1bb181aba:;
	};
}



inline void _1abc34e96_iterPackages(jule::Ptr<_1abc31cc8_ObjectCoder> _self_, jule::Fn<void(jule::Ptr<_1aa8d3b57_Package>*)> _46632_f) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb186361:;
		if (it != expr_end) {
			jule::Ptr<_1aa8d101c_ImportInfo> _46721_used = *it;
			{
				if ((!(_46721_used.get()._field_CppLinked))) {
					_46632_f(&(_46721_used.get()._field_Package));
				};
			}
			_iter_next_1bb186361:;
			++it;
			goto _iter_begin_1bb186361;
		}
		_iter_end_1bb186361:;
	};
	_46632_f(&(_self_.get()._field_ir.get()._field_Main));
}



inline void _1abc35172_buildTraitMap(jule::Ptr<_1abc31cc8_ObjectCoder> _self_) {
	_1abc34e96_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1aa8d3b57_Package>*)>([=](jule::Ptr<_1aa8d3b57_Package>* _47635_pkg) mutable -> void {
		_1abc3d213_iterFiles(_47635_pkg, jule::Fn<void(jule::Ptr<_1aa94d51d_SymbolTable>*)>([=](jule::Ptr<_1aa94d51d_SymbolTable>* _47736_file) mutable -> void {
			{
				auto expr = &((*(_47736_file)).get()._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1bb189551:;
				if (it != expr_end) {
					jule::Ptr<_1aa89b647_Trait> _47829_t = *it;
					{
						if ((_47829_t.get()._field_Token == nullptr)) {
							return;;
						};
						if ((_47829_t.get()._field_Implemented.len() == 0LL)) {
							_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_1abc308ed_traitHash>(_1abc308ed_traitHash{._field_t=_47829_t, ._field_s=nullptr, ._field_i=0LL}));;
							goto _iter_next_1bb189551;
						};
						jule::I64 _49029_i = 0LL;;
						{
							auto expr = &(_47829_t.get()._field_Implemented);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1bb189ce3:;
							if (it != expr_end) {
								jule::Ptr<_1aa8740c0_Struct> _49133_s = *it;
								{
									{
										auto expr = &(_49133_s.get()._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1bb18bca1:;
										if (it != expr_end) {
											jule::Ptr<_1aa876dd6_StructIns> _49237_ins = *it;
											{
												_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_1abc308ed_traitHash>(_1abc308ed_traitHash{._field_t=_47829_t, ._field_s=_49237_ins, ._field_i=_49029_i}));;
												(_49029_i)++;
											}
											_iter_next_1bb18bca1:;
											++it;
											goto _iter_begin_1bb18bca1;
										}
										_iter_end_1bb18bca1:;
									};
								}
								_iter_next_1bb189ce3:;
								++it;
								goto _iter_begin_1bb189ce3;
							}
							_iter_end_1bb189ce3:;
						};
						_1abc3de17_pushMethodsFromInherits(&(_47829_t), &(_47829_t));
					}
					_iter_next_1bb189551:;
					++it;
					goto _iter_begin_1bb189551;
				}
				_iter_end_1bb189551:;
			};
		}));
	}));
}



inline void _1abc3534d_traitDecls(jule::Ptr<_1abc31cc8_ObjectCoder> _self_) {
	_1abc34e96_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1aa8d3b57_Package>*)>([=](jule::Ptr<_1aa8d3b57_Package>* _51035_pkg) mutable -> void {
		_1abc3d213_iterFiles(_51035_pkg, jule::Fn<void(jule::Ptr<_1aa94d51d_SymbolTable>*)>([=](jule::Ptr<_1aa94d51d_SymbolTable>* _51136_file) mutable -> void {
			{
				auto expr = &((*(_51136_file)).get()._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1bb18e05b:;
				if (it != expr_end) {
					jule::Ptr<_1aa89b647_Trait> _51229_t = *it;
					{
						if ((_51229_t.get()._field_Token == nullptr)) {
							return;;
						};
						_1abc329ee_indent(_self_);
						_1abc3246b_write(_self_, jule::Str("struct ", 7));
						_1abc3246b_write(_self_, static__1abb8ece1_traitDecl(_51229_t));
						_1abc3246b_write(_self_, jule::Str("{};\n", 4));
					}
					_iter_next_1bb18e05b:;
					++it;
					goto _iter_begin_1bb18e05b;
				}
				_iter_end_1bb18e05b:;
			};
		}));
	}));
}



inline void _1abc355c3_structurePlainDecl(jule::Ptr<_1abc31cc8_ObjectCoder> _self_, jule::Ptr<_1aa8740c0_Struct>* _52543_s) {
	{
		auto expr = &((*(_52543_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb18c433:;
		if (it != expr_end) {
			jule::Ptr<_1aa876dd6_StructIns> _52621_ins = *it;
			{
				_1abc3246b_write(_self_, jule::Str("struct ", 7));
				_1abc3246b_write(_self_, static__1abb905c7_structureIns(&(_52621_ins)));
				_1abc3246b_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1bb18c433:;
			++it;
			goto _iter_begin_1bb18c433;
		}
		_iter_end_1bb18c433:;
	};
}



inline void _1abc3579e_structurePlainDecls(jule::Ptr<_1abc31cc8_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb191e4e:;
		if (it != expr_end) {
			jule::Ptr<_1aa8740c0_Struct> _53421_s = *it;
			{
				if ((_53421_s.get()._field_Token != nullptr)) {
					_1abc355c3_structurePlainDecl(_self_, &(_53421_s));
				};
			}
			_iter_next_1bb191e4e:;
			++it;
			goto _iter_begin_1bb191e4e;
		}
		_iter_end_1bb191e4e:;
	};
}



inline void _1abc35a24_fieldDecl(jule::Ptr<_1abc31cc8_ObjectCoder> _self_, jule::Ptr<_1aa8763e1_FieldIns>* _54134_f) {
	_1abc3246b_write(_self_, _1abc45935_kind(_self_.get()._field_tc.ptr(), (*(_54134_f)).get()._field_Kind));
	_1abc3246b_write(_self_, jule::Str(" ", 1));
	_1abc3246b_write(_self_, static__1abb9086e_field(&((*(_54134_f)).get()._field_Decl)));
	if (((*(_54134_f)).get()._field_Default == nullptr)) {
		if (_1abc525bd_shouldInitialized(&((*(_54134_f)).get()._field_Kind))) {
			_1abc3246b_write(_self_, jule::Str(" = ", 3));
			_1abb8737c_initExpr(_self_.get()._field_ec, (*(_54134_f)).get()._field_Kind);
		};
	} else {
		_1abc3246b_write(_self_, jule::Str(" = ", 3));
		_1abb7d384_possibleRefExpr(_self_.get()._field_ec, (*(_54134_f)).get()._field_Default.get()._field_Model);
	};
	_1abc3246b_write(_self_, jule::Str(";", 1));
}



inline void _1abc35c99_structureDestructor(jule::Ptr<_1abc31cc8_ObjectCoder> _self_, jule::Ptr<_1aa876dd6_StructIns>* _55944_s) {
	;
	jule::Ptr<_1aa889426_Fn> _56213_disposeMethod = _1aa877d82_FindMethod((*(_55944_s)).ptr(), jule::Str("Dispose", 7), false);;
	jule::Bool _56317_disposed = static__1aa90a178_Dispose(_56213_disposeMethod);;
	if ((!(_56317_disposed))) {
		return;;
	};
	_1abc3246b_write(_self_, jule::Str("~", 1));
	_1abc3246b_write(_self_, static__1abb905c7_structureIns(_55944_s));
	_1abc3246b_write(_self_, jule::Str("(void) { ", 9));
	_1abc3246b_write(_self_, static__1abb8e7a2_func(&(_56213_disposeMethod)));
	_1abc3246b_write(_self_, jule::Str("(this); }", 9));
}



inline void _1abc36041_structureDeriveDefsDecls(jule::Ptr<_1abc31cc8_ObjectCoder> _self_, jule::Ptr<_1aa876dd6_StructIns>* _57545_s) {
	if (_1aa8758eb_IsDerives((*(_57545_s)).get()._field_Decl.ptr(), jule::Str("Clone", 5))) {
		_1abc329ee_indent(_self_);
		_1abc3246b_write(_self_, _1abb8a319_cloneFuncDecl(_self_.get()._field_dc.ptr(), &((*(_57545_s)).get()._field_Decl)));
		_1abc3246b_write(_self_, jule::Str(";\n\n", 3));
	};
}



inline void _1abc36371_structureOperatorEq(jule::Ptr<_1abc31cc8_ObjectCoder> _self_, jule::Str* _58340_ident, jule::Ptr<_1aa876dd6_StructIns>* _58357_s) {
	if ((!((*(_58357_s)).get()._field_Comparable))) {
		return;;
	};
	if (((*(_58357_s)).get()._field_Operators._field_Eq != nullptr)) {
		_1abc36a58_structureOperator(_self_, _58340_ident, &((*(_58357_s)).get()._field_Operators._field_Eq), jule::Str("==", 2));
		return;;
	};
	_1abc329ee_indent(_self_);
	if (_1aa2cca18_Inline) {
		_1abc3246b_write(_self_, jule::Str("inline ", 7));
	};
	_1abc3246b_write(_self_, jule::Str("bool operator==(", 16));
	_1abc3246b_write(_self_, (*(_58340_ident)));
	_1abc3246b_write(_self_, jule::Str(" _other) {", 10));
	if (((*(_58357_s)).get()._field_Fields.len() > 0LL)) {
		_1abc32647_addIndent(_self_);
		_1abc3246b_write(_self_, jule::Str("\n", 1));
		_1abc329ee_indent(_self_);
		_1abc3246b_write(_self_, jule::Str("return ", 7));
		_1abc32647_addIndent(_self_);
		jule::Bool _60621_writed = false;;
		{
			auto expr = &((*(_58357_s)).get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bb19eb2c:;
			if (it != expr_end) {
				jule::Ptr<_1aa8763e1_FieldIns> _60725_f = *it;
				{
					jule::Ptr<_1aa876dd6_StructIns> _60921_strct = _1aa9871b1_Struct(_60725_f.get()._field_Kind.ptr());;
					if ((((_60921_strct != nullptr) && (_60921_strct.get()._field_Decl != nullptr)) && _60921_strct.get()._field_Decl.get()._field_CppLinked)) {
						goto _iter_next_1bb19eb2c;
					};
					if (_60621_writed) {
						_1abc3246b_write(_self_, jule::Str(" &&", 3));
					};
					_60621_writed=true;
					_1abc3246b_write(_self_, jule::Str("\n", 1));
					_1abc329ee_indent(_self_);
					_1abc3246b_write(_self_, jule::Str("this->", 6));
					jule::Str _62021_fIdent = static__1abb9086e_field(&(_60725_f.get()._field_Decl));;
					_1abc3246b_write(_self_, _62021_fIdent);
					_1abc3246b_write(_self_, jule::Str(" == _other.", 11));
					_1abc3246b_write(_self_, _62021_fIdent);
				}
				_iter_next_1bb19eb2c:;
				++it;
				goto _iter_begin_1bb19eb2c;
			}
			_iter_end_1bb19eb2c:;
		};
		_1abc32823_doneIndent(_self_);
		if ((!(_60621_writed))) {
			_1abc3246b_write(_self_, jule::Str("true", 4));
		};
		_1abc3246b_write(_self_, jule::Str(";\n", 2));
		_1abc32823_doneIndent(_self_);
		_1abc329ee_indent(_self_);
		_1abc3246b_write(_self_, jule::Str("}", 1));
	} else {
		_1abc3246b_write(_self_, jule::Str(" return true; }", 15));
	};
	_1abc3246b_write(_self_, jule::Str("\n\n", 2));
}



inline void _1abc36690_structureOperatorNotEq(jule::Ptr<_1abc31cc8_ObjectCoder> _self_, jule::Str* _63943_ident, jule::Ptr<_1aa876dd6_StructIns>* _63960_s) {
	if ((!((*(_63960_s)).get()._field_Comparable))) {
		return;;
	};
	_1abc329ee_indent(_self_);
	if (_1aa2cca18_Inline) {
		_1abc3246b_write(_self_, jule::Str("inline ", 7));
	};
	_1abc3246b_write(_self_, jule::Str("bool operator!=(", 16));
	_1abc3246b_write(_self_, (*(_63943_ident)));
	_1abc3246b_write(_self_, jule::Str(" _other) { return !this->operator==(_other); }\n\n", 48));
}



inline void _1abc36a58_structureOperator(jule::Ptr<_1abc31cc8_ObjectCoder> _self_, jule::Str* _65338_ident, jule::Ptr<_1aa88c0c7_FnIns>* _65355_f, jule::Str _65366_op) {
	if (((*(_65355_f)) == nullptr)) {
		return;;
	};
	jule::Bool _65813_unary = ((*(_65355_f)).get()._field_Params.len() == 1LL);;
	jule::Bool _65913_assignment = _1aa889888_IsVoid((*(_65355_f)).get()._field_Decl.ptr());;
	_1abc329ee_indent(_self_);
	if (_1aa2cca18_Inline) {
		_1abc3246b_write(_self_, jule::Str("inline ", 7));
	};
	if (_65913_assignment) {
		_1abc3246b_write(_self_, (*(_65338_ident)));
		_1abc3246b_write(_self_, jule::Str("&", 1));
	} else {
		if ((_1aa985c5e_Prim((*(_65355_f)).get()._field_Result.ptr()) == nullptr)) {
			_1abc3246b_write(_self_, (*(_65338_ident)));
		} else {
			_1abc3246b_write(_self_, jule::Str("jule::Bool", 10));
		};
	};
	_1abc3246b_write(_self_, jule::Str(" operator", 9));
	_1abc3246b_write(_self_, _65366_op);
	_1abc3246b_write(_self_, jule::Str("(", 1));
	if ((!(_65813_unary))) {
		jule::Ptr<_1aa88b208_ParamIns> _68121_p = (*(_65355_f)).get()._field_Params[1LL];;
		_1abc3246b_write(_self_, _1abc448ce_paramIns(_self_.get()._field_tc.ptr(), &(_68121_p)));
		_1abc3246b_write(_self_, jule::Str(" _other", 7));
	};
	_1abc3246b_write(_self_, jule::Str(") { ", 4));
	if ((!(_65913_assignment))) {
		_1abc3246b_write(_self_, jule::Str("return ", 7));
	};
	_1abc3246b_write(_self_, static__1abb8ea49_funcIns(_65355_f));
	if ((!(_65813_unary))) {
		_1abc3246b_write(_self_, jule::Str("(this, _other); ", 16));
		if (_65913_assignment) {
			_1abc3246b_write(_self_, jule::Str("return *this; ", 14));
		};
		_1abc3246b_write(_self_, jule::Str("}", 1));
	} else {
		_1abc3246b_write(_self_, jule::Str("(this); }", 9));
	};
	_1abc3246b_write(_self_, jule::Str("\n\n", 2));
}



inline void _1abc36ccd_structureOperators(jule::Ptr<_1abc31cc8_ObjectCoder> _self_, jule::Ptr<_1aa876dd6_StructIns>* _70243_s) {
	jule::Str _70313_ident = static__1abb905c7_structureIns(_70243_s);;
	_1abc36371_structureOperatorEq(_self_, &(_70313_ident), _70243_s);
	_1abc36690_structureOperatorNotEq(_self_, &(_70313_ident), _70243_s);
	_1abc36a58_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_Gt), jule::Str(">", 1));
	_1abc36a58_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_GtEq), jule::Str(">=", 2));
	_1abc36a58_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_Lt), jule::Str("<", 1));
	_1abc36a58_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_LtEq), jule::Str("<=", 2));
	_1abc36a58_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_Shl), jule::Str("<<", 2));
	_1abc36a58_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_Shr), jule::Str(">>", 2));
	_1abc36a58_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_Add), jule::Str("+", 1));
	_1abc36a58_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_Sub), jule::Str("-", 1));
	_1abc36a58_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_Div), jule::Str("/", 1));
	_1abc36a58_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_Mul), jule::Str("*", 1));
	_1abc36a58_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_Mod), jule::Str("%", 1));
	_1abc36a58_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_BitAnd), jule::Str("&", 1));
	_1abc36a58_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_BitOr), jule::Str("|", 1));
	_1abc36a58_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_BitXor), jule::Str("^", 1));
	_1abc36a58_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_Neg), jule::Str("-", 1));
	_1abc36a58_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_Pos), jule::Str("+", 1));
	_1abc36a58_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_BitNot), jule::Str("~", 1));
	_1abc36a58_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_AddAssign), jule::Str("+=", 2));
	_1abc36a58_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_SubAssign), jule::Str("-=", 2));
	_1abc36a58_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_DivAssign), jule::Str("/=", 2));
	_1abc36a58_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_MulAssign), jule::Str("*=", 2));
	_1abc36a58_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_ModAssign), jule::Str("%=", 2));
	_1abc36a58_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_ShlAssign), jule::Str("<<=", 3));
	_1abc36a58_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_ShrAssign), jule::Str(">>=", 3));
	_1abc36a58_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_BitOrAssign), jule::Str("|=", 2));
	_1abc36a58_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_BitAndAssign), jule::Str("&=", 2));
	_1abc36a58_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_BitXorAssign), jule::Str("^=", 2));
}



inline void _1abc37053_structureInsDecl(jule::Ptr<_1abc31cc8_ObjectCoder> _self_, jule::Ptr<_1aa876dd6_StructIns>* _74141_s) {
	if (((*(_74141_s)).get()._field_Methods.len() > 0LL)) {
		{
			auto expr = &((*(_74141_s)).get()._field_Methods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bb1bc122:;
			if (it != expr_end) {
				jule::Ptr<_1aa889426_Fn> _74325_m = *it;
				{
					_1abc33615_pushResult(_self_, &(_74325_m));
					_1abc38186_funcDecl(_self_, &(_74325_m), false);
				}
				_iter_next_1bb1bc122:;
				++it;
				goto _iter_begin_1bb1bc122;
			}
			_iter_end_1bb1bc122:;
		};
	};
	_1abc3246b_write(_self_, jule::Str("struct ", 7));
	jule::Str _75013_outIdent = static__1abb905c7_structureIns(_74141_s);;
	_1abc3246b_write(_self_, _75013_outIdent);
	_1abc3246b_write(_self_, jule::Str(" {\n", 3));
	_1abc32647_addIndent(_self_);
	{
		auto expr = &((*(_74141_s)).get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb1be2bc:;
		if (it != expr_end) {
			jule::Ptr<_1aa8763e1_FieldIns> _75621_f = *it;
			{
				_1abc329ee_indent(_self_);
				_1abc35a24_fieldDecl(_self_, &(_75621_f));
				_1abc3246b_write(_self_, jule::Str("\n", 1));
			}
			_iter_next_1bb1be2bc:;
			++it;
			goto _iter_begin_1bb1be2bc;
		}
		_iter_end_1bb1be2bc:;
	};
	_1abc329ee_indent(_self_);
	_1abc35c99_structureDestructor(_self_, _74141_s);
	_1abc3246b_write(_self_, jule::Str("\n\n", 2));
	_1abc329ee_indent(_self_);
	_1abc3246b_write(_self_, _75013_outIdent);
	_1abc3246b_write(_self_, jule::Str("(void) = default;\n\n", 19));
	_1abc36041_structureDeriveDefsDecls(_self_, _74141_s);
	_1abc36ccd_structureOperators(_self_, _74141_s);
	_1abc3246b_write(_self_, jule::Str("\n", 1));
	_1abc32823_doneIndent(_self_);
	_1abc329ee_indent(_self_);
	_1abc3246b_write(_self_, jule::Str("};", 2));
}



inline void _1abc372c8_structureDecl(jule::Ptr<_1abc31cc8_ObjectCoder> _self_, jule::Ptr<_1aa8740c0_Struct>* _78138_s) {
	{
		auto expr = &((*(_78138_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb1c303a:;
		if (it != expr_end) {
			jule::Ptr<_1aa876dd6_StructIns> _78221_ins = *it;
			{
				_1abc37053_structureInsDecl(_self_, &(_78221_ins));
			}
			_iter_next_1bb1c303a:;
			++it;
			goto _iter_begin_1bb1c303a;
		}
		_iter_end_1bb1c303a:;
	};
}



inline void _1abc374a4_structureDecls(jule::Ptr<_1abc31cc8_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb1c3e09:;
		if (it != expr_end) {
			jule::Ptr<_1aa8740c0_Struct> _78821_s = *it;
			{
				if ((_78821_s.get()._field_Token != nullptr)) {
					_1abc372c8_structureDecl(_self_, &(_78821_s));
					_1abc3246b_write(_self_, jule::Str("\n", 1));
				};
			}
			_iter_next_1bb1c3e09:;
			++it;
			goto _iter_begin_1bb1c3e09;
		}
		_iter_end_1bb1c3e09:;
	};
}



inline void _1abc37729_paramsDecls(jule::Ptr<_1abc31cc8_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1aa88b208_ParamIns>>* _79636_params) {
	if (((*(_79636_params)).len() == 0LL)) {
		_1abc3246b_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1abc3246b_write(_self_, jule::Str("(", 1));
	{
		auto expr = _79636_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb1c5dd9:;
		if (it != expr_end) {
			jule::I64 _80314_i = it - expr->begin();
			jule::Ptr<_1aa88b208_ParamIns> _80321_p = *it;
			{
				_1abc3246b_write(_self_, _1abc448ce_paramIns(_self_.get()._field_tc.ptr(), &(_80321_p)));
				if ((((*(_79636_params)).len() - _80314_i) > 1LL)) {
					_1abc3246b_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1bb1c5dd9:;
			++it;
			_80314_i++;
			goto _iter_begin_1bb1c5dd9;
		}
		_iter_end_1bb1c5dd9:;
	};
	_1abc3246b_write(_self_, jule::Str(")", 1));
}



inline void _1abc37a48_funcHead(jule::Ptr<_1abc31cc8_ObjectCoder> _self_, jule::Ptr<_1aa88c0c7_FnIns>* _81333_f, jule::Bool _81344_ptr) {
	if ((((!(_81344_ptr)) && _1aa2cca18_Inline) && (!(_1aa889d61_IsEntryPoint((*(_81333_f)).get()._field_Decl.ptr()))))) {
		_1abc3246b_write(_self_, jule::Str("inline ", 7));
	};
	_1abc4500b_funcInsResult(_self_.get()._field_tc.ptr(), &(_self_.get()._field_Obj), _81333_f);
	if (_81344_ptr) {
		_1abc3246b_write(_self_, jule::Str("(*", 2));
		_1abc3246b_write(_self_, static__1abb8ea49_funcIns(_81333_f));
		_1abc3246b_write(_self_, jule::Str(")", 1));
	} else {
		_1abc3246b_write(_self_, jule::Str(" ", 1));
		_1abc3246b_write(_self_, static__1abb8ea49_funcIns(_81333_f));
	};
}



inline void _1abc37d67_funcDeclIns(jule::Ptr<_1abc31cc8_ObjectCoder> _self_, jule::Ptr<_1aa88c0c7_FnIns>* _82836_f, jule::Bool _82847_ptr) {
	_1abc329ee_indent(_self_);
	_1abc37a48_funcHead(_self_, _82836_f, _82847_ptr);
	_1abc37729_paramsDecls(_self_, &((*(_82836_f)).get()._field_Params));
	_1abc3246b_write(_self_, jule::Str(";\n", 2));
}



inline void _1abc38186_funcDecl(jule::Ptr<_1abc31cc8_ObjectCoder> _self_, jule::Ptr<_1aa889426_Fn>* _83533_f, jule::Bool _83541_ptr) {
	{
		auto expr = &((*(_83533_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb1cc7a3:;
		if (it != expr_end) {
			jule::Ptr<_1aa88c0c7_FnIns> _83621_c = *it;
			{
				_1abc37d67_funcDeclIns(_self_, &(_83621_c), _83541_ptr);
			}
			_iter_next_1bb1cc7a3:;
			++it;
			goto _iter_begin_1bb1cc7a3;
		}
		_iter_end_1bb1cc7a3:;
	};
}



inline void _1abc3854e_funcDeclTrait(jule::Ptr<_1abc31cc8_ObjectCoder> _self_, jule::Ptr<_1aa89b647_Trait>* _84138_t, jule::Ptr<_1aa889426_Fn>* _84154_f, jule::Bool _84162_ptr) {
	{
		auto expr = &((*(_84154_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb1cd9b3:;
		if (it != expr_end) {
			jule::Ptr<_1aa88c0c7_FnIns> _84221_c = *it;
			{
				jule::Ptr<_1aa983872_TypeKind> _84321_k = _84221_c.get()._field_Params[0LL].get()._field_Kind;;
				_84221_c.get()._field_Params[0LL].get()._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>((*(_84138_t)), 2)});
				_1abc37d67_funcDeclIns(_self_, &(_84221_c), _84162_ptr);
				_84221_c.get()._field_Params[0LL].get()._field_Kind=_84321_k;
			}
			_iter_next_1bb1cd9b3:;
			++it;
			goto _iter_begin_1bb1cd9b3;
		}
		_iter_end_1bb1cd9b3:;
	};
}



inline void _1abc3872a_funcDecls(jule::Ptr<_1abc31cc8_ObjectCoder> _self_) {
	_1abc34e96_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1aa8d3b57_Package>*)>([=](jule::Ptr<_1aa8d3b57_Package>* _85135_pkg) mutable -> void {
		_1abc3d213_iterFiles(_85135_pkg, jule::Fn<void(jule::Ptr<_1aa94d51d_SymbolTable>*)>([=](jule::Ptr<_1aa94d51d_SymbolTable>* _85236_file) mutable -> void {
			{
				auto expr = &((*(_85236_file)).get()._field_Funcs);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1bb1d2896:;
				if (it != expr_end) {
					jule::Ptr<_1aa889426_Fn> _85329_f = *it;
					{
						if (((!(_85329_f.get()._field_CppLinked)) && (_85329_f.get()._field_Token != nullptr))) {
							_1abc33615_pushResult(_self_, &(_85329_f));
							_1abc38186_funcDecl(_self_, &(_85329_f), false);
						};
					}
					_iter_next_1bb1d2896:;
					++it;
					goto _iter_begin_1bb1d2896;
				}
				_iter_end_1bb1d2896:;
			};
		}));
	}));
}



inline void _1abc38a49_traitDataTypeMethods(jule::Ptr<_1abc31cc8_ObjectCoder> _self_, jule::Ptr<_1aa89b647_Trait>* _86345_owner, jule::Ptr<_1aa89b647_Trait>* _86365_t) {
	{
		auto expr = &((*(_86365_t)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb1d2511:;
		if (it != expr_end) {
			jule::Ptr<_1aa889426_Fn> _86421_m = *it;
			{
				jule::Ptr<_1aa88c0c7_FnIns> _86521_ins = _86421_m.get()._field_Instances[0LL];;
				jule::Ptr<_1aa88b208_ParamIns> _86621_p = _86521_ins.get()._field_Params[0LL];;
				_86621_p.get()._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>((*(_86365_t)), 2)});
				{
					auto expr = _86521_ins.get()._field_Params.slice(1LL);
					auto it = expr.begin();
					auto expr_end = expr.end();
					_iter_begin_1bb1d5c51:;
					if (it != expr_end) {
						jule::I64 _87018_i = it - expr.begin();
						jule::Ptr<_1aa88b208_ParamIns> _87025_ip = *it;
						{
							if (_1db947849_IsAnonIdent(_87025_ip.get()._field_Decl.get()._field_Ident)) {
								_87025_ip.get()._field_Decl.get()._field_Ident=(jule::Str("_", 1) + _1dc5b298b_Itoa(_87018_i));
							};
						}
						_iter_next_1bb1d5c51:;
						++it;
						_87018_i++;
						goto _iter_begin_1bb1d5c51;
					}
					_iter_end_1bb1d5c51:;
				};
				if ((!(_202bb24e8_Production))) {
					jule::Ptr<_1aa88b208_ParamIns> _87625_lp = _86521_ins.get()._field_Params[(_86521_ins.get()._field_Params.len() - 1LL)];;
					{
						auto &_match_expr{ _87625_lp.get()._field_Kind.get()._field_Kind };
						
						if (_match_expr.type_is(true, 17)) {
							_case_begin_1bb1d94e6:;
							{
								goto _match_end_1bb1d7e0c;
							}
						}
						else {
							_case_begin_1bb1d8050:;
							{
								_86521_ins.get()._field_Params = jule::alloc_for_append(_86521_ins.get()._field_Params,1);_86521_ins.get()._field_Params.__push(jule::new_ptr<_1aa88b208_ParamIns>(_1aa88b208_ParamIns{._field_Decl=jule::new_ptr<_1aa887ad9_Param>(_1aa887ad9_Param{._field_Ident=jule::Str("__file", 6)}), ._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(jule::new_ptr<_1abc3eb0a_customType>(_1abc3eb0a_customType{._field_kind=jule::Str("const char*", 11)}), 17)})}));;
							}
						}
						_match_end_1bb1d7e0c:;
					};
				};
				_1abc33615_pushResult(_self_, &(_86421_m));
				_1abc3854e_funcDeclTrait(_self_, _86345_owner, &(_86421_m), true);
			}
			_iter_next_1bb1d2511:;
			++it;
			goto _iter_begin_1bb1d2511;
		}
		_iter_end_1bb1d2511:;
	};
}



inline void _1abc38c25_traitDataTypes(jule::Ptr<_1abc31cc8_ObjectCoder> _self_) {
	_1abc34e96_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1aa8d3b57_Package>*)>([=](jule::Ptr<_1aa8d3b57_Package>* _89935_pkg) mutable -> void {
		_1abc3d213_iterFiles(_89935_pkg, jule::Fn<void(jule::Ptr<_1aa94d51d_SymbolTable>*)>([=](jule::Ptr<_1aa94d51d_SymbolTable>* _90036_file) mutable -> void {
			{
				auto expr = &((*(_90036_file)).get()._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1bb1db372:;
				if (it != expr_end) {
					jule::Ptr<_1aa89b647_Trait> _90129_t = *it;
					{
						if ((_90129_t.get()._field_Token == nullptr)) {
							return;;
						};
						if ((_90129_t.get()._field_Methods.len() == 0LL)) {
							goto _iter_next_1bb1db372;
						};
						_1abc3246b_write(_self_, jule::Str("struct ", 7));
						_1abc3246b_write(_self_, static__1abb8ece1_traitDecl(_90129_t));
						_1abc3246b_write(_self_, jule::Str("MptrData", 8));
						_1abc3246b_write(_self_, jule::Str(" {\n", 3));
						_1abc32647_addIndent(_self_);
						_1abc38a49_traitDataTypeMethods(_self_, &(_90129_t), &(_90129_t));
						_1abc32823_doneIndent(_self_);
						_1abc329ee_indent(_self_);
						_1abc3246b_write(_self_, jule::Str("};\n\n", 4));
					}
					_iter_next_1bb1db372:;
					++it;
					goto _iter_begin_1bb1db372;
				}
				_iter_end_1bb1db372:;
			};
		}));
	}));
}



inline void _1abc38e9a_paramIns(jule::Ptr<_1abc31cc8_ObjectCoder> _self_, jule::Ptr<_1aa88b208_ParamIns>* _92233_p) {
	_1abc3246b_write(_self_, _1abc448ce_paramIns(_self_.get()._field_tc.ptr(), _92233_p));
	_1abc3246b_write(_self_, jule::Str(" ", 1));
	_1abc3246b_write(_self_, static__1abb90088_param(&((*(_92233_p)).get()._field_Decl)));
}



inline void _1abc39220_paramsIns(jule::Ptr<_1abc31cc8_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1aa88b208_ParamIns>>* _92834_params) {
	if (((*(_92834_params)).len() == 0LL)) {
		_1abc3246b_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1abc3246b_write(_self_, jule::Str("(", 1));
	{
		auto expr = _92834_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb1e129a:;
		if (it != expr_end) {
			jule::I64 _93414_i = it - expr->begin();
			jule::Ptr<_1aa88b208_ParamIns> _93421_p = *it;
			{
				_1abc38e9a_paramIns(_self_, &(_93421_p));
				if ((((*(_92834_params)).len() - _93414_i) > 1LL)) {
					_1abc3246b_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1bb1e129a:;
			++it;
			_93414_i++;
			goto _iter_begin_1bb1e129a;
		}
		_iter_end_1bb1e129a:;
	};
	_1abc3246b_write(_self_, jule::Str(")", 1));
}



inline void _1abc3953e_varInitExpr(jule::Ptr<_1abc31cc8_ObjectCoder> _self_, jule::Ptr<_1aa908c59_Var>* _94336_v, jule::Fn<void(void)> _94345_init) {
	if ((*(_94336_v)).get()._field_Statically) {
		_1abc3246b_write(_self_, jule::Str("static ", 7));
	};
	_1abc3246b_write(_self_, _1abc45935_kind(_self_.get()._field_tc.ptr(), (*(_94336_v)).get()._field_Kind.get()._field_Kind));
	_1abc3246b_write(_self_, jule::Str(" ", 1));
	if ((*(_94336_v)).get()._field_Reference) {
		_1abc3246b_write(_self_, jule::Str("*", 1));
	};
	_1abc3246b_write(_self_, static__1abb90b16_var((*(_94336_v))));
	if ((_94345_init != nullptr)) {
		_1abc3246b_write(_self_, jule::Str(" = ", 3));
		_94345_init();
	};
	_1abc3246b_write(_self_, jule::Str(";", 1));
}



inline void _1abc397b4_var(jule::Ptr<_1abc31cc8_ObjectCoder> _self_, jule::Ptr<_1aa908c59_Var> _96127_v) {
	if (_1db9475a2_IsIgnoreIdent(_96127_v.get()._field_Ident)) {
		return;;
	};
	if (((_96127_v.get()._field_Value != nullptr) && (_96127_v.get()._field_Value.get()._field_Expr != nullptr))) {
		if ((_96127_v.get()._field_Value.get()._field_Data.get()._field_Model != nullptr)) {
			if (_96127_v.get()._field_Reference) {
				_1abc3953e_varInitExpr(_self_, &(_96127_v), jule::Fn<void(void)>([=](void) mutable -> void {
					_1abc3246b_write(_self_, jule::Str("&(", 2));
					_1abb87107_model(_self_.get()._field_ec, _96127_v.get()._field_Value.get()._field_Data.get()._field_Model);
					_1abc3246b_write(_self_, jule::Str(")", 1));
				}));
			} else {
				_1abc3953e_varInitExpr(_self_, &(_96127_v), jule::Fn<void(void)>([=](void) mutable -> void {
					_1abb7d384_possibleRefExpr(_self_.get()._field_ec, _96127_v.get()._field_Value.get()._field_Data.get()._field_Model);
				}));
			};
			return;;
		};
		_1abc3953e_varInitExpr(_self_, &(_96127_v), nullptr);
		return;;
	};
	if (_96127_v.get()._field_Reference) {
		_1abc3953e_varInitExpr(_self_, &(_96127_v), jule::Fn<void(void)>([=](void) mutable -> void {
			_1abc3246b_write(_self_, jule::Str("nullptr", 7));
		}));
		return;;
	};
	if (_1abc525bd_shouldInitialized(&(_96127_v.get()._field_Kind.get()._field_Kind))) {
		_1abc3953e_varInitExpr(_self_, &(_96127_v), jule::Fn<void(void)>([=](void) mutable -> void {
			_1abb8737c_initExpr(_self_.get()._field_ec, _96127_v.get()._field_Kind.get()._field_Kind);
		}));
		return;;
	};
	_1abc3953e_varInitExpr(_self_, &(_96127_v), nullptr);
}



inline void _1abc39a39_funcIns(jule::Ptr<_1abc31cc8_ObjectCoder> _self_, jule::Ptr<_1aa88c0c7_FnIns>* _99232_f) {
	_1abc37a48_funcHead(_self_, _99232_f, false);
	_1abc39220_paramsIns(_self_, &((*(_99232_f)).get()._field_Params));
	_1abc3246b_write(_self_, jule::Str(" ", 1));
	_1abb7779b_funcScope(_self_.get()._field_sc, (*(_99232_f)));
	if (((*(_99232_f)).get()._field_Scope != nullptr)) {
		_1abc3246b_write(_self_, jule::Str("\n\n", 2));
	};
}



inline void _1abc39cae_func(jule::Ptr<_1abc31cc8_ObjectCoder> _self_, jule::Ptr<_1aa889426_Fn>* _100229_f) {
	{
		auto expr = &((*(_100229_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb3653ca:;
		if (it != expr_end) {
			jule::Ptr<_1aa88c0c7_FnIns> _100321_ins = *it;
			{
				_1abc39a39_funcIns(_self_, &(_100321_ins));
			}
			_iter_next_1bb3653ca:;
			++it;
			goto _iter_begin_1bb3653ca;
		}
		_iter_end_1bb3653ca:;
	};
}



inline void _1abc3a0cd_funcTrait(jule::Ptr<_1abc31cc8_ObjectCoder> _self_, jule::Ptr<_1abc308ed_traitHash>* _100834_hash, jule::Ptr<_1aa889426_Fn>* _100857_f) {
	jule::Str _100913_ident = (*(_100857_f)).get()._field_Ident;;
	{
		auto expr = &((*(_100857_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb3667c7:;
		if (it != expr_end) {
			jule::Ptr<_1aa88c0c7_FnIns> _101021_ins = *it;
			{
				_101021_ins.get()._field_Scope=nullptr;
				(*(_100857_f)).get()._field_Ident=_100913_ident;
				((*(_100857_f)).get()._field_Ident).append("_", 1);
				(*(_100857_f)).get()._field_Ident+=(*(_100834_hash)).get()._field_t.get()._field_Ident;
				((*(_100857_f)).get()._field_Ident).append("_", 1);
				(*(_100857_f)).get()._field_Ident+=_1dc5b298b_Itoa((*(_100834_hash)).get()._field_i);
				jule::Ptr<_1aa983872_TypeKind> _101921_k = _101021_ins.get()._field_Params[0LL].get()._field_Kind;;
				_101021_ins.get()._field_Params[0LL].get()._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>((*(_100834_hash)).get()._field_t, 2)});
				_1abc39a39_funcIns(_self_, &(_101021_ins));
				_101021_ins.get()._field_Params[0LL].get()._field_Kind=_101921_k;
			}
			_iter_next_1bb3667c7:;
			++it;
			goto _iter_begin_1bb3667c7;
		}
		_iter_end_1bb3667c7:;
	};
	(*(_100857_f)).get()._field_Ident=_100913_ident;
}



inline void _1abc3a3ec_traitWrapper(jule::Ptr<_1abc31cc8_ObjectCoder> _self_, jule::Ptr<_1aa889426_Fn>* _102737_m, jule::Ptr<_1abc308ed_traitHash>* _102750_hash) {
	_1abc3a0cd_funcTrait(_self_, _102750_hash, _102737_m);
	if (((*(_102750_hash)).get()._field_s == nullptr)) {
		if (_202bb24e8_Production) {
			_1abc3246b_write(_self_, jule::Str(" { jule::panic(__JULE_ERROR__INVALID_MEMORY); }\n", 48));
		} else {
			_1abc3246b_write(_self_, jule::Str(" { jule::panic(jule::Str(__JULE_ERROR__INVALID_MEMORY \"\\nlocation: \") + jule::Str(_00___file)); }\n", 98));
		};
		return;;
	};
	jule::Bool _103913_ptr = (!(_1aa88847a_IsRef((*(_102737_m)).get()._field_Params[0LL].ptr())));;
	jule::Ptr<_1aa889426_Fn> _104117_sm = _1aa877d82_FindMethod((*(_102750_hash)).get()._field_s.ptr(), (*(_102737_m)).get()._field_Ident, false);;
	if (((_104117_sm == nullptr) || (_104117_sm.get()._field_Instances.len() == 0LL))) {
		return;;
	};
	_1abc32647_addIndent(_self_);
	_1abc3246b_write(_self_, jule::Str("{\n", 2));
	_1abc329ee_indent(_self_);
	if ((_104117_sm.get()._field_Exceptional || (!(_1aa889888_IsVoid(_104117_sm.ptr()))))) {
		_1abc3246b_write(_self_, jule::Str("return ", 7));
	};
	_1abc3246b_write(_self_, static__1abb8e7a2_func(&(_104117_sm)));
	_1abc3246b_write(_self_, jule::Str("(", 1));
	if (_103913_ptr) {
		_1abc3246b_write(_self_, jule::Str("_self_.safe_ptr<", 16));
		_1abc3246b_write(_self_, _1abc43ea5_structureIns(_self_.get()._field_tc.ptr(), (*(_102750_hash)).get()._field_s));
		_1abc3246b_write(_self_, jule::Str(">(", 2));
		if ((!(_202bb24e8_Production))) {
			_1abc3246b_write(_self_, jule::Str("_00___file", 10));
		};
		_1abc3246b_write(_self_, jule::Str(")", 1));
	} else {
		_1abc3246b_write(_self_, jule::Str("_self_.data.as<", 15));
		_1abc3246b_write(_self_, _1abc43b97_structure(_self_.get()._field_tc.ptr(), _104117_sm.get()._field_Owner));
		_1abc3246b_write(_self_, jule::Str(">()", 3));
	};
	{
		auto expr = (*(_102737_m)).get()._field_Params.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1bb3703b3:;
		if (it != expr_end) {
			jule::Ptr<_1aa887ad9_Param> _106716_mp = *it;
			{
				_1abc3246b_write(_self_, jule::Str(", ", 2));
				_1abc3246b_write(_self_, static__1abb90088_param(&(_106716_mp)));
			}
			_iter_next_1bb3703b3:;
			++it;
			goto _iter_begin_1bb3703b3;
		}
		_iter_end_1bb3703b3:;
	};
	_1abc3246b_write(_self_, jule::Str(");\n}\n", 5));
	_1abc32823_doneIndent(_self_);
}



inline void _1abc3a5c8_traitWrappers(jule::Ptr<_1abc31cc8_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb3743d9:;
		if (it != expr_end) {
			jule::Ptr<_1abc308ed_traitHash> _107621_hash = *it;
			{
				{
					auto expr = &(_107621_hash.get()._field_t.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bb374c8b:;
					if (it != expr_end) {
						jule::Ptr<_1aa889426_Fn> _107725_m = *it;
						{
							_1abc3a3ec_traitWrapper(_self_, &(_107725_m), &(_107621_hash));
						}
						_iter_next_1bb374c8b:;
						++it;
						goto _iter_begin_1bb374c8b;
					}
					_iter_end_1bb374c8b:;
				};
			}
			_iter_next_1bb3743d9:;
			++it;
			goto _iter_begin_1bb3743d9;
		}
		_iter_end_1bb3743d9:;
	};
}



inline void _1abc3a8e7_traitDataMethods(jule::Ptr<_1abc31cc8_ObjectCoder> _self_, jule::Ptr<_1aa89b647_Trait>* _108341_t, jule::Ptr<_1abc308ed_traitHash>* _108353_hash) {
	{
		auto expr = &((*(_108341_t)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb375a8e:;
		if (it != expr_end) {
			jule::Ptr<_1aa889426_Fn> _108421_m = *it;
			{
				jule::Str _108517_mIdent = static__1abb8e7a2_func(&(_108421_m));;
				_1abc329ee_indent(_self_);
				_1abc3246b_write(_self_, jule::Str(".", 1));
				_1abc3246b_write(_self_, _108517_mIdent);
				_1abc3246b_write(_self_, jule::Str("=", 1));
				_1abc3246b_write(_self_, _108517_mIdent);
				_1abc3246b_write(_self_, jule::Str("_", 1));
				_1abc3246b_write(_self_, (*(_108353_hash)).get()._field_t.get()._field_Ident);
				_1abc3246b_write(_self_, jule::Str("_", 1));
				_1abc3246b_write(_self_, _1dc5b298b_Itoa((*(_108353_hash)).get()._field_i));
				_1abc3246b_write(_self_, jule::Str(",\n", 2));
			}
			_iter_next_1bb375a8e:;
			++it;
			goto _iter_begin_1bb375a8e;
		}
		_iter_end_1bb375a8e:;
	};
}



inline void _1abc3ac16_traitData(jule::Ptr<_1abc31cc8_ObjectCoder> _self_, jule::Ptr<_1abc308ed_traitHash>* _109934_hash, jule::Ptr<_1aa89b647_Trait>* _109957_old) {
	if (((*(_109934_hash)).get()._field_t.get()._field_Methods.len() == 0LL)) {
		return;;
	};
	jule::Str _110313_ident = static__1abb8ece1_traitDecl((*(_109934_hash)).get()._field_t);;
	if (((*(_109934_hash)).get()._field_t != (*(_109957_old)))) {
		if (((*(_109957_old)) != nullptr)) {
			_1abc32823_doneIndent(_self_);
			_1abc329ee_indent(_self_);
			_1abc3246b_write(_self_, jule::Str("};\n", 3));
		};
		_1abc3246b_write(_self_, jule::Str("static ", 7));
		_1abc3246b_write(_self_, _110313_ident);
		_1abc3246b_write(_self_, jule::Str("MptrData ", 9));
		_1abc3246b_write(_self_, _110313_ident);
		_1abc3246b_write(_self_, jule::Str("_mptr_data[] = {\n", 17));
		(*(_109957_old))=(*(_109934_hash)).get()._field_t;
		_1abc32647_addIndent(_self_);
	};
	_1abc329ee_indent(_self_);
	_1abc3246b_write(_self_, jule::Str("{\n", 2));
	_1abc32647_addIndent(_self_);
	_1abc3a8e7_traitDataMethods(_self_, &((*(_109934_hash)).get()._field_t), _109934_hash);
	_1abc32823_doneIndent(_self_);
	_1abc329ee_indent(_self_);
	_1abc3246b_write(_self_, jule::Str("},\n", 3));
}



inline void _1abc3ade2_traitDatas(jule::Ptr<_1abc31cc8_ObjectCoder> _self_) {
	jule::Ptr<_1aa89b647_Trait> _112817_old = nullptr;;
	{
		auto expr = &(_self_.get()._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb37e49e:;
		if (it != expr_end) {
			jule::Ptr<_1abc308ed_traitHash> _112921_hash = *it;
			{
				_1abc3ac16_traitData(_self_, &(_112921_hash), &(_112817_old));
			}
			_iter_next_1bb37e49e:;
			++it;
			goto _iter_begin_1bb37e49e;
		}
		_iter_end_1bb37e49e:;
	};
	if ((_112817_old != nullptr)) {
		_1abc32823_doneIndent(_self_);
		_1abc329ee_indent(_self_);
		_1abc3246b_write(_self_, jule::Str("};\n", 3));
	};
}



inline void _1abc3b0bd_globals(jule::Ptr<_1abc31cc8_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb38121a:;
		if (it != expr_end) {
			jule::Ptr<_1aa908c59_Var> _114021_v = *it;
			{
				_1abc3246b_write(_self_, _1abc45935_kind(_self_.get()._field_tc.ptr(), _114021_v.get()._field_Kind.get()._field_Kind));
				_1abc3246b_write(_self_, jule::Str(" ", 1));
				_1abc3246b_write(_self_, static__1abb90b16_var(_114021_v));
				_1abc3246b_write(_self_, jule::Str(" = ", 3));
				_1abb87107_model(_self_.get()._field_ec, _114021_v.get()._field_Value.get()._field_Data.get()._field_Model);
				_1abc3246b_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1bb38121a:;
			++it;
			goto _iter_begin_1bb38121a;
		}
		_iter_end_1bb38121a:;
	};
}



inline void _1abc3b299_decls(jule::Ptr<_1abc31cc8_ObjectCoder> _self_) {
	_1abc3534d_traitDecls(_self_);
	_1abc3579e_structurePlainDecls(_self_);
	_self_.get()._field_headPos=static_cast<jule::I64>(_self_.get()._field_Obj.len());
	_1abc374a4_structureDecls(_self_);
	_1abc3872a_funcDecls(_self_);
	_1abc3246b_write(_self_, jule::Str("\n\n", 2));
	_1abc38c25_traitDataTypes(_self_);
	_1abc3246b_write(_self_, jule::Str("\n\n", 2));
	_1abc3a5c8_traitWrappers(_self_);
	_1abc3246b_write(_self_, jule::Str("\n\n", 2));
	_1abc3ade2_traitDatas(_self_);
	_1abc3246b_write(_self_, jule::Str("\n\n", 2));
	_self_.get()._field_declPos=static_cast<jule::I64>(_self_.get()._field_Obj.len());
	_1abc3b0bd_globals(_self_);
}



inline void _1abc3b51e_structureMethods(jule::Ptr<_1abc31cc8_ObjectCoder> _self_, jule::Ptr<_1aa876dd6_StructIns>* _116741_s) {
	{
		auto expr = &((*(_116741_s)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb386e46:;
		if (it != expr_end) {
			jule::Ptr<_1aa889426_Fn> _116821_f = *it;
			{
				_1abc39cae_func(_self_, &(_116821_f));
				_1abc3246b_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1bb386e46:;
			++it;
			goto _iter_begin_1bb386e46;
		}
		_iter_end_1bb386e46:;
	};
}



inline void _1abc3b794_structureDeriveDefs(jule::Ptr<_1abc31cc8_ObjectCoder> _self_, jule::Ptr<_1aa876dd6_StructIns>* _117444_s) {
	if (_1aa8758eb_IsDerives((*(_117444_s)).get()._field_Decl.ptr(), jule::Str("Clone", 5))) {
		_1abc3246b_write(_self_, _1abb8a627_cloneFuncDef(_self_.get()._field_dc.ptr(), &((*(_117444_s)).get()._field_Decl)));
		_1abc3246b_write(_self_, jule::Str("{\n", 2));
		_1abc32647_addIndent(_self_);
		_1abc329ee_indent(_self_);
		_1abc3246b_write(_self_, _1abc43ea5_structureIns(_self_.get()._field_tc.ptr(), (*(_117444_s))));
		_1abc3246b_write(_self_, jule::Str(" clone;\n", 8));
		{
			auto expr = &((*(_117444_s)).get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bb38a0c0:;
			if (it != expr_end) {
				jule::Ptr<_1aa8763e1_FieldIns> _118220_f = *it;
				{
					jule::Str _118321_ident = static__1abb9086e_field(&(_118220_f.get()._field_Decl));;
					_1abc329ee_indent(_self_);
					_1abc3246b_write(_self_, jule::Str("clone.", 6));
					_1abc3246b_write(_self_, _118321_ident);
					_1abc3246b_write(_self_, jule::Str(" = jule::clone(this->", 21));
					_1abc3246b_write(_self_, _118321_ident);
					_1abc3246b_write(_self_, jule::Str(");\n", 3));
				}
				_iter_next_1bb38a0c0:;
				++it;
				goto _iter_begin_1bb38a0c0;
			}
			_iter_end_1bb38a0c0:;
		};
		_1abc329ee_indent(_self_);
		_1abc3246b_write(_self_, jule::Str("return clone;\n", 14));
		_1abc32823_doneIndent(_self_);
		_1abc3246b_write(_self_, jule::Str("}", 1));
	};
}



inline void _1abc3ba19_structureOstream(jule::Ptr<_1abc31cc8_ObjectCoder> _self_, jule::Ptr<_1aa876dd6_StructIns>* _119841_s) {
	_1abc329ee_indent(_self_);
	_1abc3246b_write(_self_, jule::Str("std::ostream &operator<<(std::ostream &_Stream, ", 48));
	_1abc3246b_write(_self_, static__1abb905c7_structureIns(_119841_s));
	_1abc3246b_write(_self_, jule::Str(" _Src) {\n", 9));
	_1abc32647_addIndent(_self_);
	_1abc329ee_indent(_self_);
	jule::Ptr<_1aa889426_Fn> _120617_fts = _1aa877d82_FindMethod((*(_119841_s)).ptr(), jule::Str("Str", 3), false);;
	if (static__1aa90a420_Str(_120617_fts)) {
		_1abc3246b_write(_self_, jule::Str("_Stream << ", 11));
		_1abc3246b_write(_self_, static__1abb8e7a2_func(&(_120617_fts)));
		_1abc3246b_write(_self_, jule::Str("(&_Src);\n", 9));
	} else {
		_1abc3246b_write(_self_, jule::Str("_Stream << \"", 12));
		_1abc3246b_write(_self_, (*(_119841_s)).get()._field_Decl.get()._field_Ident);
		_1abc3246b_write(_self_, jule::Str("{\";\n", 4));
		{
			auto expr = &((*(_119841_s)).get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bb392182:;
			if (it != expr_end) {
				jule::I64 _121618_i = it - expr->begin();
				jule::Ptr<_1aa8763e1_FieldIns> _121625_f = *it;
				{
					_1abc329ee_indent(_self_);
					_1abc3246b_write(_self_, jule::Str("_Stream << \"", 12));
					_1abc3246b_write(_self_, _121625_f.get()._field_Decl.get()._field_Ident);
					_1abc3246b_write(_self_, jule::Str(":", 1));
					jule::Ptr<_1aa876dd6_StructIns> _122321_strct = _1aa9871b1_Struct(_121625_f.get()._field_Kind.ptr());;
					if ((((_122321_strct != nullptr) && (_122321_strct.get()._field_Decl != nullptr)) && _122321_strct.get()._field_Decl.get()._field_CppLinked)) {
						_1abc3246b_write(_self_, jule::Str(" cpp.", 5));
						_1abc3246b_write(_self_, static__1abb9086e_field(&(_121625_f.get()._field_Decl)));
						_1abc3246b_write(_self_, jule::Str("\"", 1));
					} else {
						_1abc3246b_write(_self_, jule::Str("\" << _Src.", 10));
						_1abc3246b_write(_self_, static__1abb9086e_field(&(_121625_f.get()._field_Decl)));
					};
					if (((_121618_i + 1LL) < (*(_119841_s)).get()._field_Fields.len())) {
						_1abc3246b_write(_self_, jule::Str(" << \", \"", 8));
					};
					_1abc3246b_write(_self_, jule::Str(";\n", 2));
				}
				_iter_next_1bb392182:;
				++it;
				_121618_i++;
				goto _iter_begin_1bb392182;
			}
			_iter_end_1bb392182:;
		};
		_1abc329ee_indent(_self_);
		_1abc3246b_write(_self_, jule::Str("_Stream << \"}\";\n", 16));
	};
	_1abc329ee_indent(_self_);
	_1abc3246b_write(_self_, jule::Str("return _Stream;\n", 16));
	_1abc32823_doneIndent(_self_);
	_1abc3246b_write(_self_, jule::Str("}", 1));
}



inline void _1abc3bc8e_structureIns(jule::Ptr<_1abc31cc8_ObjectCoder> _self_, jule::Ptr<_1aa876dd6_StructIns>* _124937_s) {
	_1abc3b51e_structureMethods(_self_, _124937_s);
	_1abc3246b_write(_self_, jule::Str("\n\n", 2));
	_1abc3b794_structureDeriveDefs(_self_, _124937_s);
	_1abc3246b_write(_self_, jule::Str("\n\n", 2));
	_1abc3ba19_structureOstream(_self_, _124937_s);
}



inline void _1abc3c014_structure(jule::Ptr<_1abc31cc8_ObjectCoder> _self_, jule::Ptr<_1aa8740c0_Struct>* _125734_s) {
	{
		auto expr = &((*(_125734_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb399d9e:;
		if (it != expr_end) {
			jule::Ptr<_1aa876dd6_StructIns> _125821_ins = *it;
			{
				_1abc3bc8e_structureIns(_self_, &(_125821_ins));
				_1abc3246b_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1bb399d9e:;
			++it;
			goto _iter_begin_1bb399d9e;
		}
		_iter_end_1bb399d9e:;
	};
}



inline void _1abc3c1e0_structures(jule::Ptr<_1abc31cc8_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb39b0ae:;
		if (it != expr_end) {
			jule::Ptr<_1aa8740c0_Struct> _126521_s = *it;
			{
				if ((_126521_s.get()._field_Token != nullptr)) {
					_1abc3c014_structure(_self_, &(_126521_s));
					_1abc3246b_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_1bb39b0ae:;
			++it;
			goto _iter_begin_1bb39b0ae;
		}
		_iter_end_1bb39b0ae:;
	};
}



inline void _1abc3c3bb_funcs(jule::Ptr<_1abc31cc8_ObjectCoder> _self_) {
	_1abc34e96_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1aa8d3b57_Package>*)>([=](jule::Ptr<_1aa8d3b57_Package>* _127435_pkg) mutable -> void {
		_1abc3d213_iterFiles(_127435_pkg, jule::Fn<void(jule::Ptr<_1aa94d51d_SymbolTable>*)>([=](jule::Ptr<_1aa94d51d_SymbolTable>* _127536_file) mutable -> void {
			{
				auto expr = &((*(_127536_file)).get()._field_Funcs);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1bb39e249:;
				if (it != expr_end) {
					jule::Ptr<_1aa889426_Fn> _127629_f = *it;
					{
						if (((!(_202bb1a8b_Test)) && _1abc52326_hasDirective(&(_127629_f.get()._field_Directives), jule::Str("test", 4)))) {
							goto _iter_next_1bb39e249;
						};
						if (((!(_127629_f.get()._field_CppLinked)) && (_127629_f.get()._field_Token != nullptr))) {
							_1abc39cae_func(_self_, &(_127629_f));
							_1abc3246b_write(_self_, jule::Str("\n\n", 2));
						};
					}
					_iter_next_1bb39e249:;
					++it;
					goto _iter_begin_1bb39e249;
				}
				_iter_end_1bb39e249:;
			};
		}));
	}));
}



inline void _1abc3c641_pushInit(jule::Ptr<_1abc31cc8_ObjectCoder> _self_, jule::Ptr<_1aa8d3b57_Package>* _128933_pkg) {
	_1abc3d213_iterFiles(_128933_pkg, jule::Fn<void(jule::Ptr<_1aa94d51d_SymbolTable>*)>([=](jule::Ptr<_1aa94d51d_SymbolTable>* _129032_file) mutable -> void {
		{
			auto expr = &((*(_129032_file)).get()._field_Funcs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bb3a1999:;
			if (it != expr_end) {
				jule::Ptr<_1aa889426_Fn> _129120_f = *it;
				{
					if (_129120_f.get()._field_Ident.equal("init", 4)) {
						_1abc329ee_indent(_self_);
						_1abc3246b_write(_self_, static__1abb8e7a2_func(&(_129120_f)));
						_1abc3246b_write(_self_, jule::Str("();\n", 4));
					};
				}
				_iter_next_1bb3a1999:;
				++it;
				goto _iter_begin_1bb3a1999;
			}
			_iter_end_1bb3a1999:;
		};
	}));
}



inline void _1abc3c81c_initCaller(jule::Ptr<_1abc31cc8_ObjectCoder> _self_) {
	_1abc3246b_write(_self_, jule::Str("void __jule_call_initializers(void) {\n", 38));
	_1abc32647_addIndent(_self_);
	_1abc34e96_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1aa8d3b57_Package>*)>([=](jule::Ptr<_1aa8d3b57_Package>* _130435_pkg) mutable -> void {
		_1abc3c641_pushInit(_self_, _130435_pkg);
	}));
	_1abc32823_doneIndent(_self_);
	_1abc3246b_write(_self_, jule::Str("\n}", 2));
}



inline void _1abc3c9e8_end(jule::Ptr<_1abc31cc8_ObjectCoder> _self_) {
	_1abc3246b_write(_self_, jule::Str("int main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 148));
	if (_202bb1a8b_Test) {
		_1abc3246b_write(_self_, jule::Str("test_point();", 13));
	} else {
		_1abc3246b_write(_self_, jule::Str("entry_point();", 14));
	};
	_1abc3246b_write(_self_, jule::Str("\n\n    return EXIT_SUCCESS;\n}", 28));
}



inline void _1abc3cbc4_serializeHead(jule::Ptr<_1abc31cc8_ObjectCoder> _self_) {
	_1abc34c21_prepareStructures(_self_);
	_1abc35172_buildTraitMap(_self_);
	_1abc345e4_head(_self_);
	_1abc3246b_write(_self_, jule::Str("\n", 1));
	_1abc3b299_decls(_self_);
	if ((_self_.get()._field_resultDecls.len() > 0LL)) {
		jule::Str _133921_head = _self_.get()._field_Obj.slice(0LL, _self_.get()._field_headPos);;
		{
			auto expr = &(_self_.get()._field_resultDecls);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bb3a8154:;
			if (it != expr_end) {
				jule::Str _134020_decl = *it;
				{
					_133921_head+=_134020_decl;
					_self_.get()._field_declPos+=_134020_decl.len();
				}
				_iter_next_1bb3a8154:;
				++it;
				goto _iter_begin_1bb3a8154;
			}
			_iter_end_1bb3a8154:;
		};
		_133921_head+=_self_.get()._field_Obj.slice(_self_.get()._field_headPos);
		_self_.get()._field_Obj=_133921_head;
	};
	_1abc3246b_write(_self_, jule::Str("\n", 1));
	_1abc3c1e0_structures(_self_);
	_1abc3c3bb_funcs(_self_);
	_1abc3c81c_initCaller(_self_);
	_1abc3246b_write(_self_, jule::Str("\n\n", 2));
	if ((_self_.get()._field_anyObj.len() > 0LL)) {
		jule::Str _135521_head = _self_.get()._field_Obj.slice(0LL, _self_.get()._field_declPos);;
		_135521_head+=_self_.get()._field_anyObj;
		_135521_head+=_self_.get()._field_Obj.slice(_self_.get()._field_declPos);
		_self_.get()._field_Obj=_135521_head;
	};
}



inline void _1abc3cda0_Serialize(jule::Ptr<_1abc31cc8_ObjectCoder> _self_) {
	_1abc3cbc4_serializeHead(_self_);
	_1abc3c9e8_end(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1abc31cc8_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "Obj:" << _Src._field_Obj << ", ";
	_Stream << "resultDecls:" << _Src._field_resultDecls << ", ";
	_Stream << "anyObj:" << _Src._field_anyObj << ", ";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "tmap:" << _Src._field_tmap << ", ";
	_Stream << "indentBuffer:" << _Src._field_indentBuffer << ", ";
	_Stream << "resultMap:" << _Src._field_resultMap << ", ";
	_Stream << "anyTypeMap:" << _Src._field_anyTypeMap << ", ";
	_Stream << "traitCastMap:" << _Src._field_traitCastMap << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "tc:" << _Src._field_tc << ", ";
	_Stream << "dc:" << _Src._field_dc << ", ";
	_Stream << "headPos:" << _Src._field_headPos << ", ";
	_Stream << "declPos:" << _Src._field_declPos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ab320708_ObjectDeadCode> static__1ab320bd1_new(jule::Ptr<_1ab17e039_IR>* _3424_ir) {
	return jule::new_ptr<_1ab320708_ObjectDeadCode>(_1ab320708_ObjectDeadCode{._field_ir=(*(_3424_ir))});;
}



inline jule::Bool _1bacb57ed_isLive(jule::Ptr<_1ab320708_ObjectDeadCode> _self_, jule::Ptr<_1aa89b647_Trait>* _4030_t) {
	jule::Slice<jule::Ptr<_1aa89b647_Trait>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1bacb757a:;
			{
				_4117_live=_self_.get()._field_live._field_traits;
			}
		}
		_match_end_1bacb728e:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bacb7c62:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1bacb7c62:;
			++it;
			_5213_i++;
			goto _iter_begin_1bacb7c62;
		}
		_iter_end_1bacb7c62:;
	};
	return false;;
}

inline jule::Bool _1bacba539_isLive(jule::Ptr<_1ab320708_ObjectDeadCode> _self_, jule::Ptr<_1aa88c0c7_FnIns>* _4030_t) {
	jule::Slice<jule::Ptr<_1aa88c0c7_FnIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1bacbc7d3:;
			{
				_4117_live=_self_.get()._field_live._field_fns;
			}
		}
		_match_end_1bacbc728:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bab93db3:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1bab93db3:;
			++it;
			_5213_i++;
			goto _iter_begin_1bab93db3;
		}
		_iter_end_1bab93db3:;
	};
	return false;;
}

inline jule::Bool _1babc65dd_isLive(jule::Ptr<_1ab320708_ObjectDeadCode> _self_, jule::Ptr<_1aa876dd6_StructIns>* _4030_t) {
	jule::Slice<jule::Ptr<_1aa876dd6_StructIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1babc9734:;
			{
				_4117_live=_self_.get()._field_live._field_structs;
			}
		}
		_match_end_1babc94ae:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1babc9811:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1babc9811:;
			++it;
			_5213_i++;
			goto _iter_begin_1babc9811;
		}
		_iter_end_1babc9811:;
	};
	return false;;
}

inline jule::Bool _1babcc171_isLive(jule::Ptr<_1ab320708_ObjectDeadCode> _self_, jule::Ptr<_1aa908c59_Var>* _4030_t) {
	jule::Slice<jule::Ptr<_1aa908c59_Var>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1babcdbde:;
			{
				_4117_live=_self_.get()._field_live._field_vars;
			}
		}
		_match_end_1babcdabd:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1babce44d:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1babce44d:;
			++it;
			_5213_i++;
			goto _iter_begin_1babce44d;
		}
		_iter_end_1babce44d:;
	};
	return false;;
}



inline void _1bacb5b50_pushLive(jule::Ptr<_1ab320708_ObjectDeadCode> _self_, jule::Ptr<_1aa89b647_Trait> _6035_t) {
	{
		
{
			_case_begin_1bacb9659:;
			{
				_self_.get()._field_live._field_traits = jule::alloc_for_append(_self_.get()._field_live._field_traits,1);_self_.get()._field_live._field_traits.__push(_6035_t);;
			}
		}
		_match_end_1bacb9307:;
	};
}

inline void _1babc182a_pushLive(jule::Ptr<_1ab320708_ObjectDeadCode> _self_, jule::Ptr<_1aa88c0c7_FnIns> _6035_t) {
	{
		
{
			_case_begin_1babc295d:;
			{
				_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_6035_t);;
			}
		}
		_match_end_1babc26d8:;
	};
}

inline void _1babc57a7_pushLive(jule::Ptr<_1ab320708_ObjectDeadCode> _self_, jule::Ptr<_1aa876dd6_StructIns> _6035_t) {
	{
		
{
			_case_begin_1babc7127:;
			{
				_self_.get()._field_live._field_structs = jule::alloc_for_append(_self_.get()._field_live._field_structs,1);_self_.get()._field_live._field_structs.__push(_6035_t);;
			}
		}
		_match_end_1babc6d3b:;
	};
}

inline void _1babcc4c3_pushLive(jule::Ptr<_1ab320708_ObjectDeadCode> _self_, jule::Ptr<_1aa908c59_Var> _6035_t) {
	{
		
{
			_case_begin_1babd110e:;
			{
				_self_.get()._field_live._field_vars = jule::alloc_for_append(_self_.get()._field_live._field_vars,1);_self_.get()._field_live._field_vars.__push(_6035_t);;
			}
		}
		_match_end_1babd1032:;
	};
}



inline void _1ab352d89_setReferencesAsLive(jule::Ptr<_1ab320708_ObjectDeadCode> _self_, jule::Ptr<_1aa890031_ReferenceStack>* _7344_rs) {
	if (((*(_7344_rs)) == nullptr)) {
		return;;
	};
	jule::I64 _7717_i = 0LL;;
	for (; (_7717_i < _1aa890619_Len((*(_7344_rs)).ptr())); (_7717_i)++) {
		{
			jule::Any _7921_ref = _1aa890927_At((*(_7344_rs)).ptr(), _7717_i);;
			{
				auto &_match_expr{ _7921_ref };
				
				if (_match_expr.type == &__jule_any_type10) {
					_case_begin_1bacb4401:;
					{
						jule::Ptr<_1aa89b647_Trait> _8225_t = _7921_ref.cast_ptr<_1aa89b647_Trait>(&__jule_any_type10);;
						if (_1bacb57ed_isLive(_self_, &(_8225_t))) {
							goto _iter_next_1bacb392d;
						};
						_1bacb5b50_pushLive(_self_, _8225_t);
						{
							auto expr = &(_8225_t.get()._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1bacb7822:;
							if (it != expr_end) {
								jule::Ptr<_1aa889426_Fn> _8729_ins = *it;
								{
									{
										auto expr = &(_8729_ins.get()._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1bacb61b1:;
										if (it != expr_end) {
											jule::Ptr<_1aa88c0c7_FnIns> _8833_mins = *it;
											{
												if (_1bacba539_isLive(_self_, &(_8833_mins))) {
													goto _iter_next_1bacb61b1;
												};
												_1babc182a_pushLive(_self_, _8833_mins);
												_1ab352d89_setReferencesAsLive(_self_, &(_8833_mins.get()._field_Refers));
											}
											_iter_next_1bacb61b1:;
											++it;
											goto _iter_begin_1bacb61b1;
										}
										_iter_end_1bacb61b1:;
									};
								}
								_iter_next_1bacb7822:;
								++it;
								goto _iter_begin_1bacb7822;
							}
							_iter_end_1bacb7822:;
						};
					}
				}
				else if (_match_expr.type == &__jule_any_type7) {
					_case_begin_1bacb4467:;
					{
						jule::Ptr<_1aa88c0c7_FnIns> _9725_f = _7921_ref.cast_ptr<_1aa88c0c7_FnIns>(&__jule_any_type7);;
						if (_1bacba539_isLive(_self_, &(_9725_f))) {
							goto _match_end_1bacb4588;
						};
						if (((_9725_f.get()._field_Owner != nullptr) && (!(_9725_f.get()._field_Decl.get()._field_Statically)))) {
							if ((!(_1babc65dd_isLive(_self_, &(_9725_f.get()._field_Owner))))) {
								_1babc57a7_pushLive(_self_, _9725_f.get()._field_Owner);
								_1ab352d89_setReferencesAsLive(_self_, &(_9725_f.get()._field_Owner.get()._field_Refers));
							};
						};
						_1babc182a_pushLive(_self_, _9725_f);
						_1ab352d89_setReferencesAsLive(_self_, &(_9725_f.get()._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type8) {
					_case_begin_1bacb4698:;
					{
						jule::Ptr<_1aa908c59_Var> _11025_v = _7921_ref.cast_ptr<_1aa908c59_Var>(&__jule_any_type8);;
						if (_1babcc171_isLive(_self_, &(_11025_v))) {
							goto _match_end_1bacb4588;
						};
						_1babcc4c3_pushLive(_self_, _11025_v);
						_1ab352d89_setReferencesAsLive(_self_, &(_11025_v.get()._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type9) {
					_case_begin_1bacb470e:;
					{
						jule::Ptr<_1aa876dd6_StructIns> _11725_s = _7921_ref.cast_ptr<_1aa876dd6_StructIns>(&__jule_any_type9);;
						if (_1babc65dd_isLive(_self_, &(_11725_s))) {
							goto _match_end_1bacb4588;
						};
						_1babc57a7_pushLive(_self_, _11725_s);
						_1ab352d89_setReferencesAsLive(_self_, &(_11725_s.get()._field_Refers));
						{
							auto expr = &(_11725_s.get()._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1babd4244:;
							if (it != expr_end) {
								jule::Ptr<_1aa889426_Fn> _12329_ins = *it;
								{
									{
										auto expr = &(_12329_ins.get()._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1babd493c:;
										if (it != expr_end) {
											jule::Ptr<_1aa88c0c7_FnIns> _12433_mins = *it;
											{
												if (_1bacba539_isLive(_self_, &(_12433_mins))) {
													goto _iter_next_1babd493c;
												};
												_1babc182a_pushLive(_self_, _12433_mins);
												_1ab352d89_setReferencesAsLive(_self_, &(_12433_mins.get()._field_Refers));
											}
											_iter_next_1babd493c:;
											++it;
											goto _iter_begin_1babd493c;
										}
										_iter_end_1babd493c:;
									};
								}
								_iter_next_1babd4244:;
								++it;
								goto _iter_begin_1babd4244;
							}
							_iter_end_1babd4244:;
						};
					}
				}
				_match_end_1bacb4588:;
			};
		}
	_iter_next_1bacb392d:;
	}
	_iter_end_1bacb392d:;;
}



inline void _1ab35310e_inits(jule::Ptr<_1ab320708_ObjectDeadCode> _self_, jule::Ptr<_1aa8d3b57_Package>* _13630_pkg) {
	{
		auto expr = &((*(_13630_pkg)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1babd5124:;
		if (it != expr_end) {
			jule::Ptr<_1aa94d51d_SymbolTable> _13721_file = *it;
			{
				{
					auto expr = &(_13721_file.get()._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1babd76ba:;
					if (it != expr_end) {
						jule::Ptr<_1aa889426_Fn> _13825_f = *it;
						{
							if (_13825_f.get()._field_Ident.equal("init", 4)) {
								jule::Ptr<_1aa88c0c7_FnIns> _14029_ins = _13825_f.get()._field_Instances[0LL];;
								_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_14029_ins);;
								_1ab352d89_setReferencesAsLive(_self_, &(_14029_ins.get()._field_Refers));
							};
						}
						_iter_next_1babd76ba:;
						++it;
						goto _iter_begin_1babd76ba;
					}
					_iter_end_1babd76ba:;
				};
			}
			_iter_next_1babd5124:;
			++it;
			goto _iter_begin_1babd5124;
		}
		_iter_end_1babd5124:;
	};
}



inline void _1ab353384_collectLivePackage(jule::Ptr<_1ab320708_ObjectDeadCode> _self_, jule::Ptr<_1aa8d3b57_Package>* _14843_pkg) {
	_1ab35310e_inits(_self_, _14843_pkg);
	if (_202bb1a8b_Test) {
		{
			auto expr = &((*(_14843_pkg)).get()._field_Files);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1babd9a85:;
			if (it != expr_end) {
				jule::Ptr<_1aa94d51d_SymbolTable> _15425_file = *it;
				{
					{
						auto expr = &(_15425_file.get()._field_Funcs);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1babda3b0:;
						if (it != expr_end) {
							jule::Ptr<_1aa889426_Fn> _15529_f = *it;
							{
								if (_1ab355397_hasDirective(&(_15529_f.get()._field_Directives), jule::Str("test", 4))) {
									jule::Ptr<_1aa88c0c7_FnIns> _15733_ins = _15529_f.get()._field_Instances[0LL];;
									_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_15733_ins);;
									_1ab352d89_setReferencesAsLive(_self_, &(_15733_ins.get()._field_Refers));
								};
							}
							_iter_next_1babda3b0:;
							++it;
							goto _iter_begin_1babda3b0;
						}
						_iter_end_1babda3b0:;
					};
				}
				_iter_next_1babd9a85:;
				++it;
				goto _iter_begin_1babd9a85;
			}
			_iter_end_1babd9a85:;
		};
	};
}



inline void _1ab353560_collectLive(jule::Ptr<_1ab320708_ObjectDeadCode> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1babd9a41:;
		if (it != expr_end) {
			jule::Ptr<_1aa8d101c_ImportInfo> _16721_used = *it;
			{
				if ((!(_16721_used.get()._field_CppLinked))) {
					_1ab353384_collectLivePackage(_self_, &(_16721_used.get()._field_Package));
				};
			}
			_iter_next_1babd9a41:;
			++it;
			goto _iter_begin_1babd9a41;
		}
		_iter_end_1babd9a41:;
	};
	_1ab353384_collectLivePackage(_self_, &(_self_.get()._field_ir.get()._field_Main));
	jule::Ptr<_1aa889426_Fn> _17517_main = _1aa8d50dc_FindFn(_self_.get()._field_ir.get()._field_Main.ptr(), jule::Str("main", 4), false);;
	jule::Ptr<_1aa88c0c7_FnIns> _17617_ins = _17517_main.get()._field_Instances[0LL];;
	_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_17617_ins);;
	_1ab352d89_setReferencesAsLive(_self_, &(_17617_ins.get()._field_Refers));
}



inline void _1ab3537d5_removeDeadGlobals(jule::Ptr<_1ab320708_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1aa908c59_Var>>* _18142_vars) {
	jule::I64 _18217_i = 0LL;;
	while ((_18217_i < (*(_18142_vars)).len())) {
		{
			jule::Ptr<_1aa908c59_Var> _18417_v = (*(_18142_vars))[_18217_i];;
			if (_1babcc171_isLive(_self_, &(_18417_v))) {
				(_18217_i)++;
				goto _iter_next_1babdee0e;
			};
			(*(_18142_vars))=jule::append((*(_18142_vars)).slice(0LL, _18217_i),(*(_18142_vars)).slice((_18217_i + 1LL)));
		}
	_iter_next_1babdee0e:;
	}
	_iter_end_1babdee0e:;;
}



inline void _1ab353a5a_removeDeadFns(jule::Ptr<_1ab320708_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1aa889426_Fn>>* _19338_funcs) {
	jule::I64 _19417_i = 0LL;;
	while ((_19417_i < (*(_19338_funcs)).len())) {
		{
			jule::Ptr<_1aa889426_Fn> _19621_f = (*(_19338_funcs))[_19417_i];;
			jule::I64 _19721_j = 0LL;;
			while ((_19721_j < _19621_f.get()._field_Instances.len())) {
				{
					jule::Ptr<_1aa88c0c7_FnIns> _19921_ins = _19621_f.get()._field_Instances[_19721_j];;
					if (_1bacba539_isLive(_self_, &(_19921_ins))) {
						(_19721_j)++;
						goto _iter_next_1babe3352;
					};
					_19621_f.get()._field_Instances=jule::append(_19621_f.get()._field_Instances.slice(0LL, _19721_j),_19621_f.get()._field_Instances.slice((_19721_j + 1LL)));
				}
			_iter_next_1babe3352:;
			}
			_iter_end_1babe3352:;;
			if ((_19621_f.get()._field_Instances.len() == 0LL)) {
				(*(_19338_funcs))=jule::append((*(_19338_funcs)).slice(0LL, _19417_i),(*(_19338_funcs)).slice((_19417_i + 1LL)));
				goto _iter_next_1babe175c;
			};
			(_19417_i)++;
		}
	_iter_next_1babe175c:;
	}
	_iter_end_1babe175c:;;
}



inline void _1ab353cd0_removeDeadStructs(jule::Ptr<_1ab320708_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1aa8740c0_Struct>>* _21442_structs) {
	jule::I64 _21517_i = 0LL;;
	while ((_21517_i < (*(_21442_structs)).len())) {
		{
			jule::Ptr<_1aa8740c0_Struct> _21721_s = (*(_21442_structs))[_21517_i];;
			jule::I64 _21821_j = 0LL;;
			while ((_21821_j < _21721_s.get()._field_Instances.len())) {
				{
					jule::Ptr<_1aa876dd6_StructIns> _22025_ins = _21721_s.get()._field_Instances[_21821_j];;
					_1ab353a5a_removeDeadFns(_self_, &(_22025_ins.get()._field_Methods));
					if (((_22025_ins.get()._field_Methods.len() != 0LL) || _1babc65dd_isLive(_self_, &(_22025_ins)))) {
						(_21821_j)++;
						goto _iter_next_1babe7356;
					};
					_21721_s.get()._field_Instances=jule::append(_21721_s.get()._field_Instances.slice(0LL, _21821_j),_21721_s.get()._field_Instances.slice((_21821_j + 1LL)));
				}
			_iter_next_1babe7356:;
			}
			_iter_end_1babe7356:;;
			if ((_21721_s.get()._field_Instances.len() == 0LL)) {
				(*(_21442_structs))=jule::append((*(_21442_structs)).slice(0LL, _21517_i),(*(_21442_structs)).slice((_21517_i + 1LL)));
				goto _iter_next_1babe6234;
			};
			(_21517_i)++;
		}
	_iter_next_1babe6234:;
	}
	_iter_end_1babe6234:;;
}



inline void _1ab354055_removeDeadTraits(jule::Ptr<_1ab320708_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1aa89b647_Trait>>* _23641_traits) {
	jule::I64 _23717_i = 0LL;;
	while ((_23717_i < (*(_23641_traits)).len())) {
		{
			jule::Ptr<_1aa89b647_Trait> _23921_t = (*(_23641_traits))[_23717_i];;
			if ((!(_1bacb57ed_isLive(_self_, &(_23921_t))))) {
				(*(_23641_traits))=jule::append((*(_23641_traits)).slice(0LL, _23717_i),(*(_23641_traits)).slice((_23717_i + 1LL)));
				goto _iter_next_1babe9a2e;
			};
			jule::I64 _24421_j = 0LL;;
			while ((_24421_j < _23921_t.get()._field_Implemented.len())) {
				{
					jule::Ptr<_1aa8740c0_Struct> _24621_s = _23921_t.get()._field_Implemented[_24421_j];;
					if ((_24621_s.get()._field_Instances.len() > 0LL)) {
						(_24421_j)++;
						goto _iter_next_1babeb789;
					};
					_23921_t.get()._field_Implemented=jule::append(_23921_t.get()._field_Implemented.slice(0LL, _24421_j),_23921_t.get()._field_Implemented.slice((_24421_j + 1LL)));
				}
			_iter_next_1babeb789:;
			}
			_iter_end_1babeb789:;;
			(_23717_i)++;
		}
	_iter_next_1babe9a2e:;
	}
	_iter_end_1babe9a2e:;;
}



inline void _1ab3542ca_removeDeadsFile(jule::Ptr<_1ab320708_ObjectDeadCode> _self_, jule::Ptr<_1aa94d51d_SymbolTable>* _25740_file) {
	_1ab353a5a_removeDeadFns(_self_, &((*(_25740_file)).get()._field_Funcs));
	_1ab353cd0_removeDeadStructs(_self_, &((*(_25740_file)).get()._field_Structs));
	_1ab354055_removeDeadTraits(_self_, &((*(_25740_file)).get()._field_Traits));
	_1ab3537d5_removeDeadGlobals(_self_, &((*(_25740_file)).get()._field_Vars));
}



inline void _1ab354550_removeDeadsPackage(jule::Ptr<_1ab320708_ObjectDeadCode> _self_, jule::Ptr<_1aa8d3b57_Package>* _26443_pkg) {
	{
		auto expr = &((*(_26443_pkg)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bac010c9:;
		if (it != expr_end) {
			jule::Ptr<_1aa94d51d_SymbolTable> _26521_file = *it;
			{
				_1ab3542ca_removeDeadsFile(_self_, &(_26521_file));
			}
			_iter_next_1bac010c9:;
			++it;
			goto _iter_begin_1bac010c9;
		}
		_iter_end_1bac010c9:;
	};
}



inline void _1ab35472b_removeDeads(jule::Ptr<_1ab320708_ObjectDeadCode> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bac01e98:;
		if (it != expr_end) {
			jule::Ptr<_1aa8d101c_ImportInfo> _27121_used = *it;
			{
				if ((!(_27121_used.get()._field_CppLinked))) {
					_1ab354550_removeDeadsPackage(_self_, &(_27121_used.get()._field_Package));
				};
			}
			_iter_next_1bac01e98:;
			++it;
			goto _iter_begin_1bac01e98;
		}
		_iter_end_1bac01e98:;
	};
	_1ab354550_removeDeadsPackage(_self_, &(_self_.get()._field_ir.get()._field_Main));
}



inline void _1ab354907_elimanate(jule::Ptr<_1ab320708_ObjectDeadCode> _self_) {
	_1ab353560_collectLive(_self_);
	_1ab35472b_removeDeads(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1ab320708_ObjectDeadCode _Src) {
	_Stream << "ObjectDeadCode{";
	_Stream << "live:" << _Src._field_live << ", ";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_x_1ab17e039_IR__jule_tuple_s_1d9d938bd_Log static__1ab17e4bd_Build(jule::Str _2721_path, jule::I64 _2732_flags) {
	__jule_tuple_x_1ab17e039_IR__jule_tuple_s_1d9d938bd_Log __jule_func_result;
	jule::Ptr<_1ab17b7c8_JuleImporter> _2817_importer = static__1ab17bc07_New(_1ab180cd8_buildCompileInfo());;
	jule::Slice<jule::Ptr<_1aa81e80c_Ast>> _2918_files;;
	jule::Slice<_1d9d938bd_Log> _2929_logs;;
	({
		__jule_tuple_sx_1aa81e80c_Ast__jule_tuple_s_1d9d938bd_Log __jule_assign_result = _1ab17d06b_ImportPackage(_2817_importer.ptr(), _2721_path, true);
		_2918_files = __jule_assign_result.__jule_result_arg0;
		_2929_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2929_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2929_logs;
		return __jule_func_result;;
	};
	jule::Str _3313_root = _2721_path;;
	if ((_2918_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1aa8d3b57_Package> _3918_pkg;;
	({
		__jule_tuple_x_1aa8d3b57_Package__jule_tuple_s_1d9d938bd_Log __jule_assign_result = _1aa9a1a38_AnalyzePackage(_2918_files, jule::Trait<_1aa8cd36b_Importer>(_2817_importer, 0), _2732_flags);
		_3918_pkg = __jule_assign_result.__jule_result_arg0;
		_2929_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2929_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2929_logs;
		return __jule_func_result;;
	};
	jule::Ptr<_1ab17e039_IR> _4417_ir = jule::new_ptr<_1ab17e039_IR>(_1ab17e039_IR{._field_Root=_3313_root, ._field_Main=_3918_pkg, ._field_Used=_1ab17be6b_AllPackages(_2817_importer.ptr()), });;
	_4417_ir.get()._field_Passes=_1ab180ada_getAllUniquePasses(&(_4417_ir.get()._field_Main), _4417_ir.get()._field_Used);
	__jule_func_result.__jule_result_arg0 = _4417_ir;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1ab17e91e_appendStructs(_1ab17e039_IR* _self_, jule::Ptr<_1aa8d3b57_Package>* _5633_p, jule::Slice<jule::Ptr<_1aa8740c0_Struct>>* _5657_buffer) {
	{
		auto expr = &((*(_5633_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bac7cb4a:;
		if (it != expr_end) {
			jule::Ptr<_1aa94d51d_SymbolTable> _5721_f = *it;
			{
				{
					auto expr = &(_5721_f.get()._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bac7d486:;
					if (it != expr_end) {
						jule::Ptr<_1aa8740c0_Struct> _5825_s = *it;
						{
							if ((!(_5825_s.get()._field_CppLinked))) {
								(*(_5657_buffer)) = jule::alloc_for_append((*(_5657_buffer)),1);(*(_5657_buffer)).__push(_5825_s);;
							};
						}
						_iter_next_1bac7d486:;
						++it;
						goto _iter_begin_1bac7d486;
					}
					_iter_end_1bac7d486:;
				};
			}
			_iter_next_1bac7cb4a:;
			++it;
			goto _iter_begin_1bac7cb4a;
		}
		_iter_end_1bac7cb4a:;
	};
}



inline jule::Slice<jule::Ptr<_1aa8740c0_Struct>> _1ab17eb83_GetAllStructures(_1ab17e039_IR* _self_) {
	jule::Slice<jule::Ptr<_1aa8740c0_Struct>> _6917_buffer = nullptr;;
	_1ab17e91e_appendStructs(_self_, &((*(_self_))._field_Main), &(_6917_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bac7d332:;
		if (it != expr_end) {
			jule::Ptr<_1aa8d101c_ImportInfo> _7121_u = *it;
			{
				if ((!(_7121_u.get()._field_CppLinked))) {
					_1ab17e91e_appendStructs(_self_, &(_7121_u.get()._field_Package), &(_6917_buffer));
				};
			}
			_iter_next_1bac7d332:;
			++it;
			goto _iter_begin_1bac7d332;
		}
		_iter_end_1bac7d332:;
	};
	return _6917_buffer;;
}



inline void _1ab17eea2_appendGlobals(_1ab17e039_IR* _self_, jule::Ptr<_1aa8d3b57_Package>* _7933_p, jule::Slice<jule::Ptr<_1aa908c59_Var>>* _7957_buffer) {
	{
		auto expr = &((*(_7933_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bac80a82:;
		if (it != expr_end) {
			jule::Ptr<_1aa94d51d_SymbolTable> _8021_f = *it;
			{
				{
					auto expr = &(_8021_f.get()._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bac813ac:;
					if (it != expr_end) {
						jule::Ptr<_1aa908c59_Var> _8125_v = *it;
						{
							if ((((_8125_v.get()._field_Token != nullptr) && (!(_8125_v.get()._field_CppLinked))) && (!(_8125_v.get()._field_Constant)))) {
								(*(_7957_buffer)) = jule::alloc_for_append((*(_7957_buffer)),1);(*(_7957_buffer)).__push(_8125_v);;
							};
						}
						_iter_next_1bac813ac:;
						++it;
						goto _iter_begin_1bac813ac;
					}
					_iter_end_1bac813ac:;
				};
			}
			_iter_next_1bac80a82:;
			++it;
			goto _iter_begin_1bac80a82;
		}
		_iter_end_1bac80a82:;
	};
}



inline jule::Slice<jule::Ptr<_1aa908c59_Var>> _1ab180216_GetAllGlobals(_1ab17e039_IR* _self_) {
	jule::Slice<jule::Ptr<_1aa908c59_Var>> _9217_buffer = nullptr;;
	_1ab17eea2_appendGlobals(_self_, &((*(_self_))._field_Main), &(_9217_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bac82ca4:;
		if (it != expr_end) {
			jule::Ptr<_1aa8d101c_ImportInfo> _9421_u = *it;
			{
				if ((!(_9421_u.get()._field_CppLinked))) {
					_1ab17eea2_appendGlobals(_self_, &(_9421_u.get()._field_Package), &(_9217_buffer));
				};
			}
			_iter_next_1bac82ca4:;
			++it;
			goto _iter_begin_1bac82ca4;
		}
		_iter_end_1bac82ca4:;
	};
	return _9217_buffer;;
}



inline void _1ab1803e2_Order(_1ab17e039_IR* _self_) {
	(*(_self_))._field_Ordered._field_Structs=_1ab17eb83_GetAllStructures(_self_);
	(*(_self_))._field_Ordered._field_Globals=_1ab180216_GetAllGlobals(_self_);
	static__1ab1821b3_orderStructures(&((*(_self_))._field_Ordered._field_Structs));
	static__1ab1823c2_orderVars(&((*(_self_))._field_Ordered._field_Globals));
}







std::ostream &operator<<(std::ostream &_Stream, _1ab17e039_IR _Src) {
	_Stream << "IR{";
	_Stream << "Root:" << _Src._field_Root << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Main:" << _Src._field_Main << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Ordered:" << _Src._field_Ordered;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1aa87728d_Str(_1aa876dd6_StructIns* _self_) {
	jule::Str _25017_kind = jule::Str();;
	_25017_kind+=(*(_self_))._field_Decl.get()._field_Ident;
	if (((*(_self_))._field_Generics.len() > 0LL)) {
		(_25017_kind).append("[", 1);
		{
			auto expr = &((*(_self_))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad0b5d5e:;
			if (it != expr_end) {
				jule::Ptr<_1aa9820e0_InsGeneric> *_25420_g = it;
				{
					_25017_kind+=_1aa983c6d_Str((*(_25420_g)).get()._field_Kind.ptr());
					(_25017_kind).append(",", 1);
				}
				_iter_next_1ad0b5d5e:;
				++it;
				goto _iter_begin_1ad0b5d5e;
			}
			_iter_end_1ad0b5d5e:;
		};
		(_25017_kind).mut_slice(0LL, (_25017_kind.len() - 1LL));;
		(_25017_kind).append("]", 1);
	};
	return _25017_kind;;
}



inline jule::Bool _1aa87759b_Equal(jule::Ptr<_1aa876dd6_StructIns> _self_, jule::Ptr<_1aa983872_TypeKind> _26521_other) {
	jule::Ptr<_1aa876dd6_StructIns> _26613_s = _1aa9871b1_Struct(_26521_other.ptr());;
	if ((_26613_s == nullptr)) {
		return false;;
	};
	if ((_self_.get()._field_Decl != _26613_s.get()._field_Decl)) {
		return false;;
	};
	if ((_self_.get()._field_Generics.len() != _26613_s.get()._field_Generics.len())) {
		return false;;
	};
	jule::I64 _27917_i = 0LL;;
	for (; (_27917_i < _self_.get()._field_Generics.len()); (_27917_i)++) {
		{
			if ((!(_1aa98407b_Equal(_self_.get()._field_Generics[_27917_i].get()._field_Kind, _26613_s.get()._field_Generics[_27917_i].get()._field_Kind)))) {
				return false;;
			};
		}
	_iter_next_1ad0b9428:;
	}
	_iter_end_1ad0b9428:;;
	return true;;
}



inline jule::Bool _1aa8779ca_Same(_1aa876dd6_StructIns* _self_, jule::Ptr<_1aa876dd6_StructIns> _29319_s) {
	if ((((*(_self_))._field_Decl != _29319_s.get()._field_Decl) || (_29319_s.get()._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad0bb7b0:;
		if (it != expr_end) {
			jule::I64 _29713_i = it - expr->begin();
			jule::Ptr<_1aa9820e0_InsGeneric> *_29716_g = it;
			{
				if ((!(_1aa98407b_Equal((*(_29716_g)).get()._field_Kind, _29319_s.get()._field_Generics[_29713_i].get()._field_Kind)))) {
					return false;;
				};
			}
			_iter_next_1ad0bb7b0:;
			++it;
			_29713_i++;
			goto _iter_begin_1ad0bb7b0;
		}
		_iter_end_1ad0bb7b0:;
	};
	return true;;
}



inline jule::Ptr<_1aa889426_Fn> _1aa877d82_FindMethod(_1aa876dd6_StructIns* _self_, jule::Str _30729_ident, jule::Bool _30741_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad0bd185:;
		if (it != expr_end) {
			jule::Ptr<_1aa889426_Fn> _30821_f = *it;
			{
				if (((_30821_f.get()._field_Statically == _30741_statically) && (_30821_f.get()._field_Ident == _30729_ident))) {
					return _30821_f;;
				};
			}
			_iter_next_1ad0bd185:;
			++it;
			goto _iter_begin_1ad0bd185;
		}
		_iter_end_1ad0bd185:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aa8763e1_FieldIns> _1aa878190_FindField(_1aa876dd6_StructIns* _self_, jule::Str _31828_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad0be351:;
		if (it != expr_end) {
			jule::Ptr<_1aa8763e1_FieldIns> _31921_f = *it;
			{
				if ((_31921_f.get()._field_Decl.get()._field_Ident == _31828_ident)) {
					return _31921_f;;
				};
			}
			_iter_next_1ad0be351:;
			++it;
			goto _iter_begin_1ad0be351;
		}
		_iter_end_1ad0be351:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aa908c59_Var> _1aa87849d_FindStatic(_1aa876dd6_StructIns* _self_, jule::Str _32929_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad0be8c3:;
		if (it != expr_end) {
			jule::Ptr<_1aa908c59_Var> _33021_v = *it;
			{
				if ((_33021_v.get()._field_Ident == _32929_ident)) {
					return _33021_v;;
				};
			}
			_iter_next_1ad0be8c3:;
			++it;
			goto _iter_begin_1ad0be8c3;
		}
		_iter_end_1ad0be8c3:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa876dd6_StructIns _Src) {
	_Stream << _1aa87728d_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1d9e31494_Cmd> static__1d9e318e5_New(jule::Str _2619_path) {
	return jule::new_ptr<_1d9e31494_Cmd>(_1d9e31494_Cmd{._field_path=_2619_path, });;
}



inline jule::VoidExceptional _1d9e31ac1_Spawn(_1d9e31494_Cmd* _self_) {
	({
		auto except = _1d9e355ec_spawn(_self_);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1d9e31c9c_Kill(_1d9e31494_Cmd* _self_) {
	({
		auto except = _1d9e357c8_kill(_self_);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _1d9e32011_Wait(_1d9e31494_Cmd* _self_) {
	return jule::Exceptional<jule::I64>(jule::Any(), static_cast<jule::I64>(({
		auto except = _1d9e35a3c_wait(_self_);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::I64>(except.error);
		} 0;});
	})));;
}



inline jule::VoidExceptional _1d9e355ec_spawn(_1d9e31494_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_hProcess != nullptr)) {
		jule::panic(jule::Str("command is already spawned", 26) + jule::Str("\nlocation: std/process/cmd_windows.jule:42:13"));;
	};
	STARTUPINFOW _4417_startupInfo = (STARTUPINFOW){};;
	PROCESS_INFORMATION _4517_processInfo = (PROCESS_INFORMATION){};;
	{
		ZeroMemory((&(_4417_startupInfo)), static_cast<jule::U64>(sizeof(_4417_startupInfo)));
		ZeroMemory((&(_4517_processInfo)), static_cast<jule::U64>(sizeof(_4517_processInfo)));
	};
	_4417_startupInfo.cb=static_cast<jule::U64>(sizeof(_4417_startupInfo));
	jule::Slice<jule::Str> _5117_args = jule::Slice<jule::Str>::alloc(1LL, (1LL + (*(_self_))._field_Args.len()));;
	_5117_args[0LL]=(*(_self_))._field_path;
	_5117_args=jule::append(_5117_args,(*(_self_))._field_Args);
	jule::Slice<jule::U16> _5413_argv = _203d30852_Utf16FromStr(_1d9e36147_makeCmdLine(_5117_args));;
	jule::Slice<jule::U16> _5513_env = ({
		auto except = _1d9e364ee_createEnvBlock((*(_self_))._field_Env);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional(except.error);
		} jule::Slice<jule::U16>(nullptr);});
	});;
	jule::U16* _5617_envp = (&(_5513_env[0LL]));;
	if (((*(_self_))._field_Env.len() == 0LL)) {
		_5617_envp=nullptr;
	};
	;
	{
		if ((CreateProcessW(nullptr, ((wchar_t*)((&(_5413_argv[0LL])))), nullptr, nullptr, 0LL, 1024LLU, _5617_envp, nullptr, (&(_4417_startupInfo)), (&(_4517_processInfo))) == 0LL)) {
			return jule::VoidExceptional(jule::Any(_1d9e376dc_getLastProcessError(), &__jule_any_type0));
		};
	};
	(*(_self_))._field_attrs._field_hProcess=_4517_processInfo.hProcess;
	(*(_self_))._field_attrs._field_hThread=_4517_processInfo.hThread;
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1d9e357c8_kill(_1d9e31494_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_hProcess == nullptr)) {
		jule::panic(jule::Str("command is not spawned", 22) + jule::Str("\nlocation: std/process/cmd_windows.jule:73:13"));;
	};
	if (TerminateProcess((*(_self_))._field_attrs._field_hProcess, 0LL)) {
		(*(_self_))._field_attrs._field_hProcess=nullptr;
		(*(_self_))._field_attrs._field_hThread=nullptr;
		return jule::VoidExceptional();;
	};
	return jule::VoidExceptional(jule::Any(-1LL, &__jule_any_type0));
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _1d9e35a3c_wait(_1d9e31494_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_hProcess == nullptr)) {
		jule::panic(jule::Str("command is not spawned", 22) + jule::Str("\nlocation: std/process/cmd_windows.jule:85:13"));;
	};
	{
		WaitForSingleObject((*(_self_))._field_attrs._field_hProcess, INFINITE);
	};
	__jule_unsigned_long _8817_exitCode = static_cast<__jule_unsigned_long>(4294967295LLU);;
	{
		GetExitCodeProcess((*(_self_))._field_attrs._field_hProcess, (&(_8817_exitCode)));
		_203d58a34_CloseHandle(static_cast<jule::Uintptr>(((jule::Uintptr)((*(_self_))._field_attrs._field_hProcess))));
		_203d58a34_CloseHandle(static_cast<jule::Uintptr>(((jule::Uintptr)((*(_self_))._field_attrs._field_hThread))));
	};
	(*(_self_))._field_attrs._field_hProcess=nullptr;
	(*(_self_))._field_attrs._field_hThread=nullptr;
	return jule::Exceptional<jule::I64>(jule::Any(), static_cast<jule::I64>(static_cast<jule::I64>(_8817_exitCode)));;
}







std::ostream &operator<<(std::ostream &_Stream, _1d9e31494_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "attrs:" << _Src._field_attrs << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Env:" << _Src._field_Env;
	_Stream << "}";
	return _Stream;
}



inline jule::I32 _203d2e9a5_DecodeRune(jule::I32 _6815_r1, jule::I32 _6825_r2) {
	if (((((55296LL <= _6815_r1) && (_6815_r1 < 56320LL)) && (56320LL <= _6825_r2)) && (_6825_r2 < 57344LL))) {
		return static_cast<jule::I32>(((((_6815_r1 - 55296LL) << 10LL) | (_6825_r2 - 56320LL)) + 65536LL));;
	};
	return 65533LL;;
}



inline __jule_tuple_i32__jule_tuple_i32 _203d2ec4c_EncodeRune(jule::I32 _7819_r) {
	__jule_tuple_i32__jule_tuple_i32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((_7819_r < 65536LL) || (_7819_r > 1114111LL))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 65533LL;
		return __jule_func_result;;
	};
	_7819_r-=65536LL;
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((55296LL + ((_7819_r >> 10LL) & 1023LL)));
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>((56320LL + (_7819_r & 1023LL)));
	return __jule_func_result;;
}



inline jule::Slice<jule::U16> _203d3006b_Encode(jule::Slice<jule::I32> _8711_s) {
	jule::I64 _8813_n = _8711_s.len();;
	{
		auto expr = &(_8711_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abcbb956:;
		if (it != expr_end) {
			jule::I32 *_8912_v = it;
			{
				if (((*(_8912_v)) >= 65536LL)) {
					(_8813_n)++;
				};
			}
			_iter_next_1abcbb956:;
			++it;
			goto _iter_begin_1abcbb956;
		}
		_iter_end_1abcbb956:;
	};
	jule::Slice<jule::U16> _9513_a = jule::Slice<jule::U16>::alloc(_8813_n, _8813_n, 0);;
	_8813_n=0LL;
	{
		auto expr = &(_8711_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abcbc03e:;
		if (it != expr_end) {
			jule::I32 *_9712_v = it;
			{
				{
					
					if (((0LL <= (*(_9712_v))) && ((*(_9712_v)) < 55296LL)) || ((57344LL <= (*(_9712_v))) && ((*(_9712_v)) < 65536LL))) {
						_case_begin_1abcbd903:;
						{
							_9513_a[_8813_n]=static_cast<jule::U16>(static_cast<jule::U16>((*(_9712_v))));
							(_8813_n)++;
						}
					}
					else if (((65536LL <= (*(_9712_v))) && ((*(_9712_v)) <= 1114111LL))) {
						_case_begin_1abcbd7c1:;
						{
							jule::I32 _10518_r1 = 0;;
							jule::I32 _10522_r2 = 0;;
							({
								__jule_tuple_i32__jule_tuple_i32 __jule_assign_result = _203d2ec4c_EncodeRune((*(_9712_v)));
								_10518_r1 = __jule_assign_result.__jule_result_arg0;
								_10522_r2 = __jule_assign_result.__jule_result_arg1;
							});
							_9513_a[_8813_n]=static_cast<jule::U16>(static_cast<jule::U16>(_10518_r1));
							_9513_a[(_8813_n + 1LL)]=static_cast<jule::U16>(static_cast<jule::U16>(_10522_r2));
							_8813_n+=2LL;
						}
					}
					else {
						_case_begin_1abcbd42a:;
						{
							_9513_a[_8813_n]=static_cast<jule::U16>(65533LLU);
							(_8813_n)++;
						}
					}
					_match_end_1abcbd35e:;
				};
			}
			_iter_next_1abcbc03e:;
			++it;
			goto _iter_begin_1abcbc03e;
		}
		_iter_end_1abcbc03e:;
	};
	return _9513_a.slice(0LL, _8813_n);;
}



inline jule::Slice<jule::I32> _203d30313_Decode(jule::Slice<jule::U16> _11911_s) {
	jule::Slice<jule::I32> _12013_a = jule::Slice<jule::I32>::alloc(_11911_s.len(), _11911_s.len(), 0);;
	jule::I64 _12113_n = 0LL;;
	jule::I64 _12213_i = 0LL;;
	for (; (_12213_i < _11911_s.len()); (_12213_i)++) {
		{
			jule::U16 _12413_r = _11911_s[_12213_i];;
			{
				
				if ((_12413_r < 55296LLU) || (57344LL <= _12413_r)) {
					_case_begin_1abcc3485:;
					{
						_12013_a[_12113_n]=static_cast<jule::I32>(static_cast<jule::I32>(_12413_r));
					}
				}
				else if (((((_12413_r < 56320LLU) && ((_12213_i + 1LL) < _11911_s.len())) && (56320LL <= _11911_s[(_12213_i + 1LL)])) && (_11911_s[(_12213_i + 1LL)] < 57344LLU))) {
					_case_begin_1abcc2a5b:;
					{
						_12013_a[_12113_n]=static_cast<jule::I32>(_203d2e9a5_DecodeRune(static_cast<jule::I32>(static_cast<jule::I32>(_12413_r)), static_cast<jule::I32>(static_cast<jule::I32>(_11911_s[(_12213_i + 1LL)]))));
						(_12213_i)++;
					}
				}
				else {
					_case_begin_1abcc3045:;
					{
						_12013_a[_12113_n]=65533LL;
					}
				}
				_match_end_1abcc2ece:;
			};
			(_12113_n)++;
		}
	_iter_next_1abcc1ab0:;
	}
	_iter_end_1abcc1ab0:;;
	return _12013_a.slice(0LL, _12113_n);;
}



inline jule::Slice<jule::U16> _203d30621_AppendRune(jule::Slice<jule::U16> _14919_a, jule::I32 _14929_r) {
	{
		
		if (((0LL <= _14929_r) && (_14929_r < 55296LL)) || ((57344LL <= _14929_r) && (_14929_r < 65536LL))) {
			_case_begin_1abcc6675:;
			{
				return jule::append(_14919_a,jule::Slice<jule::U16>::make({static_cast<jule::U16>(static_cast<jule::U16>(_14929_r))}));;
			}
		}
		else if (((65536LL <= _14929_r) && (_14929_r <= 1114111LL))) {
			_case_begin_1abcc66db:;
			{
				jule::I32 _15614_r1 = 0;;
				jule::I32 _15618_r2 = 0;;
				({
					__jule_tuple_i32__jule_tuple_i32 __jule_assign_result = _203d2ec4c_EncodeRune(_14929_r);
					_15614_r1 = __jule_assign_result.__jule_result_arg0;
					_15618_r2 = __jule_assign_result.__jule_result_arg1;
				});
				return jule::append(_14919_a,jule::Slice<jule::U16>::make({static_cast<jule::U16>(static_cast<jule::U16>(_15614_r1)),static_cast<jule::U16>(static_cast<jule::U16>(_15618_r2))}));;
			}
		}
		_match_end_1abcc2770:;
	};
	return jule::append(_14919_a,jule::Slice<jule::U16>::make({65533LLU}));;
}



inline jule::Slice<jule::U16> _203d30852_Utf16FromStr(jule::Str _1417_s) {
	;
	jule::Slice<jule::I32> _209_runes = static_cast<jule::Slice<jule::I32>>(_1417_s);;
	jule::Slice<jule::U16> _2113_buff = jule::Slice<jule::U16>::alloc(0LL, _209_runes.len(), 0);;
	{
		auto expr = &(_209_runes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abcd1ac0:;
		if (it != expr_end) {
			jule::I32 *_2212_r = it;
			{
				if (((*(_2212_r)) == 0LL)) {
					goto _iter_end_1abcd1ac0;
				};
				_2113_buff=_203d30621_AppendRune(_2113_buff, (*(_2212_r)));
			}
			_iter_next_1abcd1ac0:;
			++it;
			goto _iter_begin_1abcd1ac0;
		}
		_iter_end_1abcd1ac0:;
	};
	return _203d30621_AppendRune(_2113_buff, 0LL);;
}



inline jule::Str _203d30b0a_Utf16ToStr(jule::Slice<jule::U16> _3415_s) {
	if ((_3415_s == nullptr)) {
		return jule::Str();;
	};
	jule::Slice<jule::U16> _3813_codePage = _3415_s;;
	{
		auto expr = &(_3415_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abcd3e02:;
		if (it != expr_end) {
			jule::I64 _399_i = it - expr->begin();
			jule::U16 *_3912_v = it;
			{
				if (((*(_3912_v)) == 0LLU)) {
					_3813_codePage=_3813_codePage.slice(0LL, _399_i);
					goto _iter_end_1abcd3e02;
				};
			}
			_iter_next_1abcd3e02:;
			++it;
			_399_i++;
			goto _iter_begin_1abcd3e02;
		}
		_iter_end_1abcd3e02:;
	};
	return static_cast<jule::Str>(_203d30313_Decode(_3813_codePage));;
}



inline jule::Str _203d30da2_U16PtrToStr(jule::U16* _5023_s) {
	if ((_5023_s == nullptr)) {
		return jule::Str();;
	};
	jule::Slice<jule::U16> _5513_codePage = nullptr;;
	jule::I64 _5613_i = 0LL;;
	for (; ; (_5613_i)++) {
		{
			jule::U16 _5813_r = _5023_s[_5613_i];;
			if ((_5813_r == 0LLU)) {
				return static_cast<jule::Str>(_203d30313_Decode(_5513_codePage));;
			};
			_5513_codePage = jule::alloc_for_append(_5513_codePage,1);_5513_codePage.__push(_5813_r);;
		}
	_iter_next_1abcd4e8b:;
	}
	_iter_end_1abcd4e8b:;;
	return jule::Str();;
}



inline jule::I64 _202c5b1b8_GetLastErrno(void) {
	return errno;;
}



inline jule::Uintptr _203d5878c_GetStdHandle(jule::Uintptr _6517_stdh) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)(GetStdHandle(_6517_stdh))));;
}



inline jule::Bool _203d58a34_CloseHandle(jule::Uintptr _6623_stdh) {
	return CloseHandle(((void*)(_6623_stdh)));;
}



inline jule::I64 _203d58d75_Wstat(jule::U16* _6917_path, struct _stat* _6933_stat) {
	return static_cast<jule::I64>(_wstat(((wchar_t*)(_6917_path)), _6933_stat));;
}



inline jule::I64 _203d59260_Wopen(jule::U16* _7417_path, jule::I64 _7429_flag, jule::I64 _7440_mode) {
	return static_cast<jule::I64>(_wopen(((wchar_t*)((&(_7417_path[0LL])))), _7429_flag, _7440_mode));;
}



inline jule::U32 _203d5945d_GetLastError(void) {
	return static_cast<jule::U32>(GetLastError());;
}



inline jule::U32 _203d5979e_GetCurrentDirectory(jule::U32 _8331_bufflen, jule::U16* _8349_buff) {
	return static_cast<jule::U32>(GetCurrentDirectoryW(_8331_bufflen, ((wchar_t*)(_8349_buff))));;
}



inline jule::Bool _203d59cdd_DeleteFile(jule::U16* _9422_path) {
	return DeleteFileW(((wchar_t*)(_9422_path)));;
}



inline jule::Bool _203d5a085_CreateDirectory(jule::U16* _9927_path) {
	return CreateDirectoryW(((wchar_t*)(_9927_path)), nullptr);;
}



inline jule::Bool _203d5a32c_RemoveDirectory(jule::U16* _10427_path) {
	return RemoveDirectoryW(((wchar_t*)(_10427_path)));;
}



inline jule::U32 _203d5a7b1_GetFullPathName(jule::U16* _10927_path, jule::U32 _10939_bufflen, jule::U16* _1105_buff, jule::U16** _11017_fname) {
	return static_cast<jule::U32>(GetFullPathNameW(((wchar_t*)(_10927_path)), _10939_bufflen, ((wchar_t*)(_1105_buff)), ((wchar_t**)(_11017_fname))));;
}



inline jule::Bool _203d5ab02_GetConsoleMode(jule::Uintptr _11519_handle, jule::I64* _11540_mode) {
	return GetConsoleMode(((HANDLE)(_11519_handle)), ((DWORD*)((&((*(_11540_mode)))))));;
}



inline jule::Bool _203d5b1b8_SetConsoleMode(jule::Uintptr _12019_handle, jule::I64 _12035_mode) {
	return SetConsoleMode(((HANDLE)(_12019_handle)), static_cast<DWORD>(_12035_mode));;
}



inline jule::Bool _203d5b6b3_WriteConsole(jule::Uintptr _12524_handle, jule::U16* _12540_buffer, jule::I64 _12554_toWrite, jule::I64* _12610_written, void* _12624_reserved) {
	return WriteConsoleW(((HANDLE)(_12524_handle)), ((void*)(_12540_buffer)), static_cast<DWORD>(_12554_toWrite), ((DWORD*)((*(_12610_written)))), _12624_reserved);;
}



inline jule::Bool _203d5bb47_ReadConsole(jule::Uintptr _13323_handle, jule::U16* _13343_buffer, jule::I64 _13357_toRead, jule::I64* _13410_readed) {
	return ReadConsoleW(((HANDLE)(_13323_handle)), ((void*)(_13343_buffer)), static_cast<DWORD>(_13357_toRead), ((DWORD*)((&((*(_13410_readed)))))), nullptr);;
}



inline jule::Uintptr _203d5c186_FindFirstFile(jule::U16* _14525_path, WIN32_FIND_DATAW* _14541_data) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)(FindFirstFileW(((wchar_t*)(_14525_path)), _14541_data))));;
}



inline jule::I64 _203d5c4c7_FindNextFile(jule::Uintptr _15024_h, WIN32_FIND_DATAW* _15039_data) {
	return static_cast<jule::I64>(FindNextFileW(((HANDLE)(_15024_h)), _15039_data));;
}



inline jule::I64 _203d5c76e_FindClose(jule::Uintptr _15514_h) {
	return static_cast<jule::I64>(FindClose(((HANDLE)(_15514_h))));;
}



inline jule::I64 _203d5e298_Seek(jule::I64 _159_handle, jule::I64 _1522_offset, jule::I64 _1535_origin) {
	return static_cast<jule::I64>(lseek(_159_handle, _1522_offset, _1535_origin));;
}



inline jule::I64 _203d5e683_Read(jule::I64 _2016_handle, void* _2033_buff, jule::U64 _2048_n) {
	return static_cast<jule::I64>(read(_2016_handle, _2033_buff, _2048_n));;
}



inline jule::I64 _203d5ea07_Close(jule::I64 _2510_handle) {
	return static_cast<jule::I64>(close(_2510_handle));;
}



inline jule::I64 _203d5ede2_Write(jule::I64 _2817_handle, void* _2830_buff, jule::U64 _2845_n) {
	return static_cast<jule::I64>(write(_2817_handle, _2830_buff, _2845_n));;
}



inline void _203d60101_Exit(jule::I64 _339_code) {
	exit(_339_code);
}



inline jule::Slice<jule::U8> _203d7addb_Stobs(jule::Str* _911_s) {
	return (*(_911_s)).fake_slice();;
}



inline void _203d7b590_PushToStrBuffer(jule::Str* _2825_s, jule::Slice<jule::U8> _2833_b) {
	{
		((*(_2825_s))).buffer.append((_2833_b).begin(), (_2833_b).end());
	};
}



inline __jule_tuple_i32__jule_tuple_int _203e638ec_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_18215_p.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _1869_p0 = _18215_p[0LL];;
	jule::U8 _1879_x = _203e627ca_first[static_cast<jule::I64>(_1869_p0)];;
	if ((_1879_x >= 240LLU)) {
		jule::I32 _19213_mask = static_cast<jule::I32>(((_1879_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>(_18215_p[0LL]) & (~(_19213_mask))) | (65533LL & _19213_mask)));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _1959_sz = static_cast<jule::I64>((_1879_x & 7LLU));;
	_203e62d5d_acceptRange _1969_accept = _203e6316b_acceptRanges[static_cast<jule::I64>((_1879_x >> 4LLU))];;
	if ((_18215_p.len() < _1959_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2009_b1 = _18215_p[1LL];;
	if (((_2009_b1 < _1969_accept._field_lo) || (_1969_accept._field_hi < _2009_b1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1959_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>((_1869_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2009_b1 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2079_b2 = _18215_p[2LL];;
	if (((_2079_b2 < 128LLU) || (191LL < _2079_b2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1959_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((((static_cast<jule::I32>((_1869_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2079_b2 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2149_b3 = _18215_p[3LL];;
	if (((_2149_b3 < 128LLU) || (191LL < _2149_b3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((((static_cast<jule::I32>((_1869_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2079_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2149_b3 & 63LLU))));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _203e63c1b_DecodeRuneStr(jule::Str _22918_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_22918_s.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _2339_s0 = _22918_s[0LL];;
	jule::U8 _2349_x = _203e627ca_first[static_cast<jule::I64>(_2339_s0)];;
	if ((_2349_x >= 240LLU)) {
		jule::I32 _23913_mask = static_cast<jule::I32>(((_2349_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>(_22918_s[0LL]) & (~(_23913_mask))) | (65533LL & _23913_mask)));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _2429_sz = static_cast<jule::I64>((_2349_x & 7LLU));;
	_203e62d5d_acceptRange _2439_accept = _203e6316b_acceptRanges[static_cast<jule::I64>((_2349_x >> 4LLU))];;
	if ((_22918_s.len() < _2429_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2479_s1 = _22918_s[1LL];;
	if (((_2479_s1 < _2439_accept._field_lo) || (_2439_accept._field_hi < _2479_s1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2429_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>((_2339_s0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2479_s1 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2549_s2 = _22918_s[2LL];;
	if (((_2549_s2 < 128LLU) || (191LL < _2549_s2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2429_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((((static_cast<jule::I32>((_2339_s0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2479_s1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2549_s2 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2619_s3 = _22918_s[3LL];;
	if (((_2619_s3 < 128LLU) || (191LL < _2619_s3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((((static_cast<jule::I32>((_2339_s0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2479_s1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2549_s2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2619_s3 & 63LLU))));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _203e63eb3_DecodeLastRune(jule::Slice<jule::U8> _27619_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_27619_p.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::I64 _2809_end = _27619_p.len();;
	jule::I64 _28113_start = (_2809_end - 1LL);;
	__jule_func_result.__jule_result_arg0=static_cast<jule::I32>(static_cast<jule::I32>(_27619_p[_28113_start]));
	if ((__jule_func_result.__jule_result_arg0 < 128LL)) {
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _28913_lim = (_2809_end - 4LL);;
	if ((_28913_lim < 0LL)) {
		_28913_lim=0LL;
	};
	(_28113_start)--;
	for (; (_28113_start >= _28913_lim); (_28113_start)--) {
		{
			if (_203e65888_RuneStart(_27619_p[_28113_start])) {
				goto _iter_end_1abd843c0;
			};
		}
	_iter_next_1abd843c0:;
	}
	_iter_end_1abd843c0:;;
	if ((_28113_start < 0LL)) {
		_28113_start=0LL;
	};
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _203e638ec_DecodeRune(_27619_p.slice(_28113_start, _2809_end));
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if (((_28113_start + __jule_func_result.__jule_result_arg1) != _2809_end)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline jule::I64 _203e64502_RuneLen(jule::I32 _35212_r) {
	{
		
		if ((_35212_r < 0LL)) {
			_case_begin_1abd8b383:;
			{
				return -1LL;;
			}
		}
		else if ((_35212_r <= 127LL)) {
			_case_begin_1abd8ab24:;
			{
				return 1LL;;
			}
		}
		else if ((_35212_r <= 2047LL)) {
			_case_begin_1abd8ab9b:;
			{
				return 2LL;;
			}
		}
		else if (((55296LL <= _35212_r) && (_35212_r <= 57343LL))) {
			_case_begin_1abd8ac23:;
			{
				return -1LL;;
			}
		}
		else if ((_35212_r <= 65535LL)) {
			_case_begin_1abd8ac9a:;
			{
				return 3LL;;
			}
		}
		else if ((_35212_r <= 1114111LL)) {
			_case_begin_1abd8aeed:;
			{
				return 4LL;;
			}
		}
		else {
			_case_begin_1abd8aa9c:;
			{
				return -1LL;;
			}
		}
		_match_end_1abd8a9d1:;
	};
}



inline jule::I64 _203e64920_EncodeRune(jule::Slice<jule::U8> _37419_p, jule::I32 _37434_r) {
	jule::U32 _3769_i = static_cast<jule::U32>(_37434_r);;
	{
		
		if ((_3769_i <= 127LLU)) {
			_case_begin_1abd8deac:;
			{
				_37419_p[0LL]=static_cast<jule::U8>(static_cast<jule::U8>(_37434_r));
				return 1LL;;
			}
		}
		else if ((_3769_i <= 2047LLU)) {
			_case_begin_1abd91696:;
			{
				_37419_p[0LL]=static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_37434_r >> 6LL))));
				_37419_p[1LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU)));
				return 2LL;;
			}
		}
		else if ((_3769_i > 1114111LLU) || ((55296LL <= _3769_i) && (_3769_i <= 57343LLU))) {
			_case_begin_1abd9170c:;
			{
				_37434_r=65533LL;
				goto _case_begin_1abd914cb;
			}
		}
		else if ((_3769_i <= 65535LLU)) {
			_case_begin_1abd914cb:;
			{
				_37419_p[0LL]=static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_37434_r >> 12LL))));
				_37419_p[1LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_37434_r >> 6LL)) & 63LLU)));
				_37419_p[2LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU)));
				return 3LL;;
			}
		}
		else {
			_case_begin_1abd8db49:;
			{
				_37419_p[0LL]=static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_37434_r >> 18LL))));
				_37419_p[1LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_37434_r >> 12LL)) & 63LLU)));
				_37419_p[2LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_37434_r >> 6LL)) & 63LLU)));
				_37419_p[3LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU)));
				return 4LL;;
			}
		}
		_match_end_1abd8dae4:;
	};
}



inline jule::Slice<jule::U8> _203e64c61_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_40530_r))}));;
	};
	return _203e650a2_appendRuneNonASCII(_40519_p, _40530_r);;
}



inline jule::Slice<jule::U8> _203e650a2_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4149_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4149_i <= 2047LLU)) {
			_case_begin_1abd97b0e:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_41242_r >> 6LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		else if ((_4149_i > 1114111LLU) || ((55296LL <= _4149_i) && (_4149_i <= 57343LLU))) {
			_case_begin_1abd99814:;
			{
				_41242_r=128LL;
				goto _case_begin_1abd97e50;
			}
		}
		else if ((_4149_i <= 65535LLU)) {
			_case_begin_1abd97e50:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_41242_r >> 12LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		else {
			_case_begin_1abd974b0:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_41242_r >> 18LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		_match_end_1abd9745a:;
	};
}



inline jule::I64 _203e655e1_RuneCountStr(jule::Str _47317_s) {
	jule::I64 __jule_func_result = 0;
	jule::I64 _47413_i = 0LL;;
	for (; (_47413_i < _47317_s.len()); (__jule_func_result)++) {
		{
			jule::U8 _47617_c = _47317_s[_47413_i];;
			if ((_47617_c < 128LLU)) {
				(_47413_i)++;
				goto _iter_next_1abda7bb8;
			};
			jule::U8 _48213_x = _203e627ca_first[static_cast<jule::I64>(_47617_c)];;
			if ((_48213_x == 241LLU)) {
				(_47413_i)++;
				goto _iter_next_1abda7bb8;
			};
			jule::I64 _48717_size = static_cast<jule::I64>((_48213_x & 7LLU));;
			if (((_47413_i + _48717_size) > _47317_s.len())) {
				(_47413_i)++;
				goto _iter_next_1abda7bb8;
			};
			_203e62d5d_acceptRange _49213_accept = _203e6316b_acceptRanges[static_cast<jule::I64>((_48213_x >> 4LLU))];;
			_47617_c=_47317_s[(_47413_i + 1LL)];
			if (((_47617_c < _49213_accept._field_lo) || (_49213_accept._field_hi < _47617_c))) {
				_48717_size=1LL;
			} else if ((_48717_size == 2LL)) {
			} else {
				_47617_c=_47317_s[(_47413_i + 2LL)];
				if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
					_48717_size=1LL;
				} else if ((_48717_size == 3LL)) {
				} else {
					_47617_c=_47317_s[(_47413_i + 3LL)];
					if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
						_48717_size=1LL;
					};
				};
			};
			_47413_i+=_48717_size;
		}
	_iter_next_1abda7bb8:;
	}
	_iter_end_1abda7bb8:;;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _203e65888_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);;
}



inline jule::I64 _2040171dc_getLastOsErrorWindows(void) {
	jule::U32 _169_err = _203d5945d_GetLastError();;
	{
		auto &_match_expr{ _169_err };
		
		if (_match_expr == 5LL) {
			_case_begin_1abdcb967:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1abdcd837:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1abdcd89d:;
			{
				return static_cast<jule::I64>(7LL);;
			}
		}
		else if (_match_expr == 123LL) {
			_case_begin_1abdcd914:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else {
			_case_begin_1abdcbcdb:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		_match_end_1abdcbc86:;
	};
}



inline jule::Slice<jule::Str> _204018210_Args(void) {
	return jule::args();;
}



inline jule::Exceptional<jule::Str> _204018683_WorkingDir(void) {
	return jule::Exceptional<jule::Str>(jule::Any(), ({
		auto except = _204019563_getwd();
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Str>(except.error);
		} jule::Str();});
	}));;
}



inline jule::Exceptional<jule::Str> _204019563_getwd(void) {
	jule::Array<jule::U16,261> _1513_buff = jule::Array<jule::U16,261>();;
	jule::U32 _169_n = _203d5979e_GetCurrentDirectory(261LLU, (&(_1513_buff[0LL])));;
	if ((_169_n == 0LLU)) {
		return jule::Exceptional<jule::Str>(jule::Any(_2040171dc_getLastOsErrorWindows(), &__jule_any_type0));
	};
	return jule::Exceptional<jule::Str>(jule::Any(), _203d30da2_U16PtrToStr((&(_1513_buff[0LL]))));;
}



inline jule::Bool _1d9c55c25_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_1d9cb5e94__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);;
	};
	return _1d9cbe2cc_isExcludingLatin(_1d9c5ee0a_Letter, _7613_r);;
}



inline jule::Bool _1d9cbd6e9_is16(jule::Slice<_1d9cbbb37_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto expr = &(_1919_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac425785:;
			if (it != expr_end) {
				jule::I64 _19313_i = it - expr->begin();
				{
					_1d9cbbb37_Range16* _19417_range = (&(_1919_ranges[_19313_i]));;
					{
						if ((_19128_r < _19417_range->_field_Lo)) {
							return false;;
						};
						if ((_19128_r <= _19417_range->_field_Hi)) {
							return ((_19417_range->_field_Stride == 1LLU) || (jule::mod((_19128_r - _19417_range->_field_Lo),_19417_range->_field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1ac425785:;
				++it;
				_19313_i++;
				goto _iter_begin_1ac425785;
			}
			_iter_end_1ac425785:;
		};
		return false;;
	};
	jule::I64 _20813_lo = 0LL;;
	jule::I64 _20913_hi = _1919_ranges.len();;
	while ((_20813_lo < _20913_hi)) {
		{
			jule::I64 _21113_m = (_20813_lo + ((_20913_hi - _20813_lo) >> 1LLU));;
			_1d9cbbb37_Range16* _21213_range = (&(_1919_ranges[_21113_m]));;
			{
				if (((_21213_range->_field_Lo <= _19128_r) && (_19128_r <= _21213_range->_field_Hi))) {
					return ((_21213_range->_field_Stride == 1LLU) || (jule::mod((_19128_r - _21213_range->_field_Lo),_21213_range->_field_Stride) == 0LLU));;
				};
				if ((_19128_r < _21213_range->_field_Lo)) {
					_20913_hi=_21113_m;
				} else {
					_20813_lo=static_cast<jule::I64>((_21113_m + 1LL));
				};
			};
		}
	_iter_next_1ac425257:;
	}
	_iter_end_1ac425257:;;
	return false;;
}



inline jule::Bool _1d9cbda3a_is32(jule::Slice<_1d9cbc0aa_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto expr = &(_2289_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac42bb21:;
			if (it != expr_end) {
				jule::I64 _23013_i = it - expr->begin();
				{
					_1d9cbc0aa_Range32* _23117_range = (&(_2289_ranges[_23013_i]));;
					{
						if ((_22828_r < _23117_range->_field_Lo)) {
							return false;;
						};
						if ((_22828_r <= _23117_range->_field_Hi)) {
							return ((_23117_range->_field_Stride == 1LLU) || (jule::mod((_22828_r - _23117_range->_field_Lo),_23117_range->_field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1ac42bb21:;
				++it;
				_23013_i++;
				goto _iter_begin_1ac42bb21;
			}
			_iter_end_1ac42bb21:;
		};
		return false;;
	};
	jule::I64 _24513_lo = 0LL;;
	jule::I64 _24613_hi = _2289_ranges.len();;
	while ((_24513_lo < _24613_hi)) {
		{
			jule::I64 _24813_m = (_24513_lo + ((_24613_hi - _24513_lo) >> 1LLU));;
			_1d9cbc0aa_Range32* _24913_range = (&(_2289_ranges[_24813_m]));;
			{
				if (((_24913_range->_field_Lo <= _22828_r) && (_22828_r <= _24913_range->_field_Hi))) {
					return ((_24913_range->_field_Stride == 1LLU) || (jule::mod((_22828_r - _24913_range->_field_Lo),_24913_range->_field_Stride) == 0LLU));;
				};
				if ((_22828_r < _24913_range->_field_Lo)) {
					_24613_hi=_24813_m;
				} else {
					_24513_lo=static_cast<jule::I64>((_24813_m + 1LL));
				};
			};
		}
	_iter_next_1ac428964:;
	}
	_iter_end_1ac428964:;;
	return false;;
}



inline jule::Bool _1d9cbe2cc_isExcludingLatin(jule::Ptr<_1d9cbc52d_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_1d9cbbb37_Range16> *_28014_R16 = &(_27821_rangeTab.get()._field_R16);;
		jule::I64 _28213_off = _27821_rangeTab.get()._field_LatinOffset;;
		if ((((*(_28014_R16)).len() > _28213_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>((*(_28014_R16))[((*(_28014_R16)).len() - 1LL)]._field_Hi)))) {
			return _1d9cbd6e9_is16((*(_28014_R16)).slice(_28213_off), static_cast<jule::U16>(static_cast<jule::U16>(_27844_r)));;
		};
	};
	jule::Slice<_1d9cbc0aa_Range32> *_28710_R32 = &(_27821_rangeTab.get()._field_R32);;
	if ((((*(_28710_R32)).len() > 0LL) && (_27844_r >= static_cast<jule::I32>((*(_28710_R32))[0LL]._field_Lo)))) {
		return _1d9cbda3a_is32((*(_28710_R32)), static_cast<jule::U32>(static_cast<jule::U32>(_27844_r)));;
	};
	return false;;
}



inline jule::Bool _1d9cbe574_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_1d9cb5e94__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);;
	};
	return _1d9cbe2cc_isExcludingLatin(_1d9c66461_Upper, _29512_r);;
}



inline jule::I64 _1d9ce0144_FindByte(jule::Slice<jule::U8> _3713_s, jule::U8 _3724_b) {
	{
		auto expr = &(_3713_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac5a1878:;
		if (it != expr_end) {
			jule::I64 _399_i = it - expr->begin();
			jule::U8 *_3912_se = it;
			{
				if (((*(_3912_se)) == _3724_b)) {
					return _399_i;;
				};
			}
			_iter_next_1ac5a1878:;
			++it;
			_399_i++;
			goto _iter_begin_1ac5a1878;
		}
		_iter_end_1ac5a1878:;
	};
	return -1LL;;
}



inline jule::I64 _1d9d02464_FindLastByte(jule::Slice<jule::U8> _5017_s, jule::U8 _5028_b) {
	jule::U8* _519_first = (&(_5017_s[0LL]));;
	jule::U8* _5213_it = (&(_5017_s[(_5017_s.len() - 1LL)]));;
	for (; (_5213_it >= _519_first); (_5213_it)--) {
		{
			{
				if (((*(_5213_it)) == _5028_b)) {
					return static_cast<jule::I64>(((jule::I64)((_5213_it - _519_first))));;
				};
			};
		}
	_iter_next_1ac5a3c65:;
	}
	_iter_end_1ac5a3c65:;;
	return -1LL;;
}



inline jule::I64 _1d9d0272d_FindByteStr(jule::Str* _6417_s, jule::U8 _6425_b) {
	return static_cast<jule::I64>(_1d9ce0144_FindByte(_203d7addb_Stobs(_6417_s), _6425_b));;
}



inline jule::I64 _1d9d02a6e_FindLastByteStr(jule::Str* _6921_s, jule::U8 _6929_b) {
	return static_cast<jule::I64>(_1d9d02464_FindLastByte(_203d7addb_Stobs(_6921_s), _6929_b));;
}



inline jule::Str _1d9d02e37_Repeat(jule::Str _1211_s, jule::I64 _1223_n) {
	if ((_1223_n <= 0LL)) {
		return jule::Str();;
	};
	if ((_1211_s.len() > jule::div(jule::MAX_I64,_1223_n))) {
		jule::panic(jule::Str("std::strings: repeat: integer buffer size overflow", 50) + jule::Str("\nlocation: std/strings/strings.jule:17:9"));;
	};
	jule::Str _2013_ss = jule::Str::alloc(0LL, (_1211_s.len() * _1223_n));;
	for (; (_1223_n > 0LL); (_1223_n)--) {
		{
			_2013_ss+=_1211_s;
		}
	_iter_next_1ac5b7a9d:;
	}
	_iter_end_1ac5b7a9d:;;
	return _2013_ss;;
}



inline jule::Bool _1d9d03366_hasPrefix(jule::Str* _2715_s, jule::Str* _2724_sub, jule::I64 _2738_start) {
	if ((((*(_2724_sub)).len() == 0LL) || (((*(_2715_s)).len() - _2738_start) < (*(_2724_sub)).len()))) {
		return false;;
	};
	jule::I64 _3213_i = 0LL;;
	for (; (_3213_i < (*(_2724_sub)).len()); ({
		jule::I64 ___jule_assign_arg = static_cast<jule::I64>((_3213_i + 1LL));
		jule::I64 _1___jule_assign_arg = static_cast<jule::I64>((_2738_start + 1LL));
		_3213_i = ___jule_assign_arg;
		_2738_start = _1___jule_assign_arg;
	})) {
		{
			if (((*(_2715_s))[_2738_start] != (*(_2724_sub))[_3213_i])) {
				return false;;
			};
		}
	_iter_next_1ac5bab06:;
	}
	_iter_end_1ac5bab06:;;
	return true;;
}



inline jule::Bool _1d9d036a7_HasPrefix(jule::Str _4214_s, jule::Str _4222_sub) {
	return _1d9d03366_hasPrefix(&(_4214_s), &(_4222_sub), 0LL);;
}



inline jule::Bool _1d9d03b19_hasSuffix(jule::Str* _4615_s, jule::Str* _4624_sub, jule::I64 _4638_start) {
	if ((((*(_4624_sub)).len() == 0LL) || (((*(_4615_s)).len() - _4638_start) < (*(_4624_sub)).len()))) {
		return false;;
	};
	_4638_start=static_cast<jule::I64>(((*(_4615_s)).len() - _4638_start));
	jule::I64 _5213_i = 0LL;;
	for (; (_5213_i < (*(_4624_sub)).len()); (_5213_i)++) {
		{
			if (((*(_4615_s))[((_4638_start - _5213_i) - 1LL)] != (*(_4624_sub))[(((*(_4624_sub)).len() - _5213_i) - 1LL)])) {
				return false;;
			};
		}
	_iter_next_1ac5bcb2a:;
	}
	_iter_end_1ac5bcb2a:;;
	return true;;
}



inline jule::Bool _1d9d03e27_HasSuffix(jule::Str _6214_s, jule::Str _6222_sub) {
	return _1d9d03b19_hasSuffix(&(_6214_s), &(_6222_sub), 0LL);;
}



inline jule::I64 _1d9d04312_FindAt(jule::Str _7011_s, jule::Str _7019_sub, jule::I64 _7033_i) {
	if ((((_7033_i < 0LL) || (_7011_s.len() < _7019_sub.len())) || (_7019_sub.len() == 0LL))) {
		return -1LL;;
	};
	for (; (_7033_i < _7011_s.len()); (_7033_i)++) {
		{
			if (_1d9d03366_hasPrefix(&(_7011_s), &(_7019_sub), _7033_i)) {
				return _7033_i;;
			};
		}
	_iter_next_1ac5c1c0b:;
	}
	_iter_end_1ac5c1c0b:;;
	return -1LL;;
}



inline jule::I64 _1d9d04b4d_FindLastAt(jule::Str _9315_s, jule::Str _9323_sub, jule::I64 _9333_i) {
	jule::I64 _9413_j = ((_9333_i - _9323_sub.len()) + 1LL);;
	if (((((_9323_sub.len() == 0LL) || (_9333_i < 0LL)) || (_9333_i >= _9315_s.len())) || (_9413_j < 0LL))) {
		return -1LL;;
	};
	_julec_label_loop:;
	for (; (_9413_j >= 0LL); (_9413_j)--) {
		{
			jule::I64 _10017_k = _9413_j;;
			jule::I64 _10117_z = 0LL;;
			for (; (_10117_z < _9323_sub.len()); ({
				jule::I64 ___jule_assign_arg = static_cast<jule::I64>((_10017_k + 1LL));
				jule::I64 _1___jule_assign_arg = static_cast<jule::I64>((_10117_z + 1LL));
				_10017_k = ___jule_assign_arg;
				_10117_z = _1___jule_assign_arg;
			})) {
				{
					if ((_9315_s[_10017_k] != _9323_sub[_10117_z])) {
						goto _iter_next_1ac5c425d;
					};
				}
			_iter_next_1ac5c59bd:;
			}
			_iter_end_1ac5c59bd:;;
			return _9413_j;;
		}
	_iter_next_1ac5c425d:;
	}
	_iter_end_1ac5c425d:;;
	return -1LL;;
}



inline jule::I64 _1d9d04e8e_FindLast(jule::Str _11513_s, jule::Str _11521_sub) {
	return static_cast<jule::I64>(_1d9d04b4d_FindLastAt(_11513_s, _11521_sub, static_cast<jule::I64>((_11513_s.len() - 1LL))));;
}



inline jule::I64 _1d9d06237_findRune(jule::Slice<jule::U8>* _17114_s, jule::I32 _17125_r) {
	jule::I64 _17213_i = 0LL;;
	while ((_17213_i < (*(_17114_s)).len())) {
		{
			jule::I32 _17414_br = 0;;
			jule::I64 _17418_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _203e638ec_DecodeRune((*(_17114_s)).slice(_17213_i));
				_17414_br = __jule_assign_result.__jule_result_arg0;
				_17418_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_17125_r == _17414_br)) {
				return _17213_i;;
			};
			_17213_i+=_17418_n;
		}
	_iter_next_1ac5cd3bb:;
	}
	_iter_end_1ac5cd3bb:;;
	return -1LL;;
}



inline jule::I64 _1d9d06a73_FindLastByte(jule::Str _19317_s, jule::U8 _19325_b) {
	return static_cast<jule::I64>(_1d9d02a6e_FindLastByteStr(&(_19317_s), _19325_b));;
}



inline jule::I64 _1d9d07887_FindAny(jule::Str _22812_s, jule::Str _22820_runes) {
	jule::Slice<jule::U8> _2299_sb = _203d7addb_Stobs(&(_22812_s));;
	jule::Slice<jule::U8> _23013_rb = _203d7addb_Stobs(&(_22820_runes));;
	jule::I64 _23113_i = 0LL;;
	while ((_23113_i < _2299_sb.len())) {
		{
			jule::I32 _23314_r = 0;;
			jule::I64 _23317_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _203e638ec_DecodeRune(_2299_sb.slice(_23113_i));
				_23314_r = __jule_assign_result.__jule_result_arg0;
				_23317_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1d9d06237_findRune(&(_23013_rb), _23314_r) != -1LL)) {
				return _23113_i;;
			};
			_23113_i+=_23317_n;
		}
	_iter_next_1ac5d3b52:;
	}
	_iter_end_1ac5d3b52:;;
	return -1LL;;
}



inline jule::Slice<jule::Str> _1d9d080b3_Split(jule::Str _26210_s, jule::Str _26218_sub, jule::I64 _26232_n) {
	jule::I64 _26313_cap = _26232_n;;
	if ((_26232_n < 0LL)) {
		_26313_cap=16LLU;
	};
	jule::Slice<jule::Str> _26713_parts = jule::Slice<jule::Str>::alloc(0LL, _26313_cap);;
	if ((_26232_n == 0LL)) {
		return _26713_parts;;
	};
	if ((_26232_n < 0LL)) {
		_26232_n=static_cast<jule::I64>(_26210_s.len());
	};
	jule::I64 _27413_i = 0LL;;
	for (; (_26232_n > 0LL); (_26232_n)--) {
		{
			jule::I64 _27613_j = _1d9d04312_FindAt(_26210_s, _26218_sub, _27413_i);;
			if ((_27613_j == -1LL)) {
				goto _iter_end_1ac5da054;
			};
			_26713_parts = jule::alloc_for_append(_26713_parts,1);_26713_parts.__push(_26210_s.slice(_27413_i, _27613_j));;
			_27413_i=static_cast<jule::I64>((_27613_j + _26218_sub.len()));
		}
	_iter_next_1ac5da054:;
	}
	_iter_end_1ac5da054:;;
	if (((_26232_n > 0LL) && (_27413_i < _26210_s.len()))) {
		_26713_parts = jule::alloc_for_append(_26713_parts,1);_26713_parts.__push(_26210_s.slice(_27413_i));;
	};
	return _26713_parts;;
}



inline jule::Bool _1d9d08404_Contains(jule::Str _29013_s, jule::Str _29021_sub) {
	return (_1d9d04312_FindAt(_29013_s, _29021_sub, 0LL) != -1LL);;
}



inline jule::Bool _1d9d08dc7_ContainsAny(jule::Str _30616_s, jule::Str _30624_runes) {
	return (_1d9d07887_FindAny(_30616_s, _30624_runes) != -1LL);;
}



inline jule::I64 _1d9d09218_Count(jule::Str _31210_s, jule::Str _31218_sub) {
	if ((_31218_sub.len() == 0LL)) {
		return 0LL;;
	};
	jule::I64 _31613_n = 0LL;;
	jule::I64 _31713_i = 0LL;;
	for (;;) {
		{
			jule::I64 _31913_j = _1d9d04312_FindAt(_31210_s, _31218_sub, _31713_i);;
			if ((_31913_j == -1LL)) {
				goto _iter_end_1ac5e060e;
			};
			(_31613_n)++;
			_31713_i=static_cast<jule::I64>((_31913_j + _31218_sub.len()));
		}
	_iter_next_1ac5e060e:;
	}
	_iter_end_1ac5e060e:;;
	return _31613_n;;
}



inline jule::Str _1d9d0969c_Replace(jule::Str _33212_s, jule::Str _33220_sub, jule::Str _33230_new, jule::I64 _33244_n) {
	if (((_33244_n == 0LL) || (_33220_sub == _33230_new))) {
		return _33212_s;;
	};
	jule::I64 _3379_m = _1d9d09218_Count(_33212_s, _33220_sub);;
	if ((_3379_m == 0LL)) {
		return _33212_s;;
	};
	if (((_33244_n < 0LL) || (_3379_m < _33244_n))) {
		_33244_n=_3379_m;
	};
	jule::Str _34513_ss = jule::Str::alloc(0LL, (_33212_s.len() + (_33244_n * (_33230_new.len() - _33220_sub.len()))));;
	jule::I64 _34613_i = 0LL;;
	for (; (_33244_n > 0LL); (_33244_n)--) {
		{
			jule::I64 _34813_j = _1d9d04312_FindAt(_33212_s, _33220_sub, _34613_i);;
			if ((_34813_j == -1LL)) {
				goto _iter_end_1ac5e4437;
			};
			_34513_ss+=_33212_s.slice(_34613_i, _34813_j);
			_34513_ss+=_33230_new;
			_34613_i=static_cast<jule::I64>((_34813_j + _33220_sub.len()));
		}
	_iter_next_1ac5e4437:;
	}
	_iter_end_1ac5e4437:;;
	_34513_ss+=_33212_s.slice(_34613_i);
	return _34513_ss;;
}



inline void _1d9d06710_trimLeft(jule::Slice<jule::U8>* _38818_s, jule::Slice<jule::U8>* _38830_cutset) {
	jule::I64 _38913_i = 0LL;;
	while ((_38913_i < (*(_38818_s)).len())) {
		{
			jule::I32 _39114_r = 0;;
			jule::I64 _39117_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _203e638ec_DecodeRune((*(_38818_s)).slice(_38913_i));
				_39114_r = __jule_assign_result.__jule_result_arg0;
				_39117_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1d9d06237_findRune(_38830_cutset, _39114_r) == -1LL)) {
				(*(_38818_s))=(*(_38818_s)).slice(_38913_i);
				return;;
			};
			_38913_i+=_39117_n;
		}
	_iter_next_1ac5e7050:;
	}
	_iter_end_1ac5e7050:;;
	(*(_38818_s))=nullptr;
}



inline jule::Str _1d9d0a758_TrimLeft(jule::Str _40313_s, jule::Str _40321_cutset) {
	jule::Slice<jule::U8> _40413_bytes = _203d7addb_Stobs(&(_40313_s));;
	jule::Slice<jule::U8> _4059_bcutset = _203d7addb_Stobs(&(_40321_cutset));;
	_1d9d06710_trimLeft(&(_40413_bytes), &(_4059_bcutset));
	return static_cast<jule::Str>(_40413_bytes);;
}



inline void _1d9d0aa11_trimRight(jule::Slice<jule::U8>* _41019_s, jule::Slice<jule::U8>* _41031_cutset) {
	jule::I64 _41113_i = (*(_41019_s)).len();;
	while ((_41113_i > 0LL)) {
		{
			jule::I32 _41314_r = 0;;
			jule::I64 _41317_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _203e63eb3_DecodeLastRune((*(_41019_s)).slice(0LL, _41113_i));
				_41314_r = __jule_assign_result.__jule_result_arg0;
				_41317_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1d9d06237_findRune(_41031_cutset, _41314_r) == -1LL)) {
				(*(_41019_s))=(*(_41019_s)).slice(0LL, _41113_i);
				return;;
			};
			_41113_i-=_41317_n;
		}
	_iter_next_1ac5eb6b4:;
	}
	_iter_end_1ac5eb6b4:;;
	(*(_41019_s))=nullptr;
}



inline jule::Str _1d9d0b193_Trim(jule::Str _4349_s, jule::Str _43417_cutset) {
	jule::Slice<jule::U8> _43513_bytes = _203d7addb_Stobs(&(_4349_s));;
	jule::Slice<jule::U8> _4369_bcutset = _203d7addb_Stobs(&(_43417_cutset));;
	_1d9d06710_trimLeft(&(_43513_bytes), &(_4369_bcutset));
	_1d9d0aa11_trimRight(&(_43513_bytes), &(_4369_bcutset));
	return static_cast<jule::Str>(_43513_bytes);;
}



inline jule::Bool _203ee3350_IsPathSep(jule::U8 _4814_c) {
	return ((_4814_c == 92LLU) || (_4814_c == '/'));;
}



inline jule::Bool _203ee3619_isSlash(jule::U8 _5212_c) {
	return ((_5212_c == '\\') || (_5212_c == '/'));;
}



inline jule::U8 _203ee38b1_toUpper(jule::U8 _5412_c) {
	if ((('a' <= _5412_c) && (_5412_c <= 'z'))) {
		return static_cast<jule::U8>((_5412_c - 32LL));;
	};
	return _5412_c;;
}



inline jule::I64 _203ee3e77_volumeNameLen(jule::Str _8218_path) {
	if ((_8218_path.len() < 2LL)) {
		return 0LL;;
	};
	jule::U8 _879_c = _8218_path[0LL];;
	if (((_8218_path[1LL] == ':') && ((('a' <= _879_c) && (_879_c <= 'z')) || (('A' <= _879_c) && (_879_c <= 'Z'))))) {
		return 2LL;;
	};
	if (((!(_203ee3619_isSlash(_8218_path[0LL]))) || (!(_203ee3619_isSlash(_8218_path[1LL]))))) {
		return 0LL;;
	};
	jule::Str _9510_p1;;
	jule::Str _9518_rest;;
	({
		__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _203ee421e_cutPath(_8218_path.slice(2LL));
		_9510_p1 = __jule_assign_result.__jule_result_arg0;
		_9518_rest = __jule_assign_result.__jule_result_arg1;
	});
	jule::Str _9613_p2 = jule::Str();;
	jule::Bool _9713_ok = false;;
	({
		__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _203ee421e_cutPath(_9518_rest);
		_9613_p2 = __jule_assign_result.__jule_result_arg0;
		_9518_rest = __jule_assign_result.__jule_result_arg1;
		_9713_ok = __jule_assign_result.__jule_result_arg2;
	});
	if ((!(_9713_ok))) {
		return static_cast<jule::I64>(_8218_path.len());;
	};
	if (((!_9510_p1.equal(".", 1)) && (!_9510_p1.equal("?", 1)))) {
		return static_cast<jule::I64>(((_8218_path.len() - _9518_rest.len()) - 1LL));;
	};
	if (((((_9613_p2.len() == 3LL) && (_203ee38b1_toUpper(_9613_p2[0LL]) == 'U')) && (_203ee38b1_toUpper(_9613_p2[1LL]) == 'N')) && (_203ee38b1_toUpper(_9613_p2[2LL]) == 'C'))) {
		({
			__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _203ee421e_cutPath(_9518_rest);
			_9518_rest = __jule_assign_result.__jule_result_arg1;
		});
		({
			__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _203ee421e_cutPath(_9518_rest);
			_9518_rest = __jule_assign_result.__jule_result_arg1;
			_9713_ok = __jule_assign_result.__jule_result_arg2;
		});
		if ((!(_9713_ok))) {
			return static_cast<jule::I64>(_8218_path.len());;
		};
	};
	return static_cast<jule::I64>(((_8218_path.len() - _9518_rest.len()) - 1LL));;
}



inline __jule_tuple_str__jule_tuple_str__jule_tuple_bool _203ee421e_cutPath(jule::Str _11912_path) {
	__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg2 = false;
	{
		auto expr = &(_11912_path);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac6183e5:;
		if (it != expr_end) {
			jule::I64 _1209_i = it - expr->begin();
			{
				if (_203ee3619_isSlash(_11912_path[_1209_i])) {
					__jule_func_result.__jule_result_arg0 = _11912_path.slice(0LL, _1209_i);
					__jule_func_result.__jule_result_arg1 = _11912_path.slice((_1209_i + 1LL));
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1ac6183e5:;
			++it;
			_1209_i++;
			goto _iter_begin_1ac6183e5;
		}
		_iter_end_1ac6183e5:;
	};
	__jule_func_result.__jule_result_arg0 = _11912_path;
	__jule_func_result.__jule_result_arg1 = jule::Str();
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_str__jule_tuple_bool _203ee44b6_fullPath(jule::Str _12813_name) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Slice<jule::U16> _1299_utf16Name = _203d30852_Utf16FromStr(_12813_name);;
	jule::U16* _1309_p = (&(_1299_utf16Name[0LL]));;
	jule::U32 _13113_n = 100LLU;;
	for (;;) {
		{
			jule::Slice<jule::U16> _13317_buff = jule::Slice<jule::U16>::alloc(static_cast<jule::I64>(_13113_n), static_cast<jule::I64>(_13113_n), 0);;
			_13113_n=static_cast<jule::U32>(_203d5a7b1_GetFullPathName(_1309_p, static_cast<jule::U32>(static_cast<jule::U32>(_13317_buff.len())), (&(_13317_buff[0LL])), nullptr));
			if ((_13113_n == 0LLU)) {
				__jule_func_result.__jule_result_arg0 = jule::Str();
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			};
			if ((_13113_n <= static_cast<jule::U32>(_13317_buff.len()))) {
				__jule_func_result.__jule_result_arg0 = _203d30b0a_Utf16ToStr(_13317_buff.slice(0LL, static_cast<jule::I64>(_13113_n)));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			};
		}
	_iter_next_1ac61803d:;
	}
	_iter_end_1ac61803d:;;
	__jule_func_result.__jule_result_arg0 = jule::Str();
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_str__jule_tuple_bool _203ee483a_abs(jule::Str _14512_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if (_14512_path.empty()) {
		_14512_path=jule::Str(".", 1);
	};
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _203ee44b6_fullPath(_14512_path);
		_14512_path = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(__jule_func_result.__jule_result_arg1))) {
		__jule_func_result.__jule_result_arg0 = jule::Str();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _1d9d0c738_Clean(_14512_path);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Str _203ee4ad2_join(jule::Slice<jule::Str> _15913_elem) {
	jule::Str _16013_s = jule::Str();;
	jule::U8 _16113_lastChar = 0LLU;;
	{
		auto expr = &(_15913_elem);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac62050c:;
		if (it != expr_end) {
			jule::Str _16217_e = *it;
			{
				{
					
					if ((_16013_s.len() == 0LL)) {
						_case_begin_1ac621222:;
					}
					else if (_203ee3619_isSlash(_16113_lastChar)) {
						_case_begin_1ac621442:;
						{
							while (((_16217_e.len() > 0LL) && _203ee3619_isSlash(_16217_e[0LL]))) {
								{
									(_16217_e).mut_slice(1LL);;
								}
							_iter_next_1ac621ce4:;
							}
							_iter_end_1ac621ce4:;;
						}
					}
					else if ((_16113_lastChar == ':')) {
						_case_begin_1ac620de2:;
					}
					else {
						_case_begin_1ac620d7b:;
						{
							(_16013_s).append("\\", 1);
							_16113_lastChar='\\';
						}
					}
					_match_end_1ac620cb0:;
				};
				if ((_16217_e.len() > 0LL)) {
					_16013_s+=_16217_e;
					_16113_lastChar=_16217_e[(_16217_e.len() - 1LL)];
				};
			}
			_iter_next_1ac62050c:;
			++it;
			goto _iter_begin_1ac62050c;
		}
		_iter_end_1ac62050c:;
	};
	if ((_16013_s.len() == 0LL)) {
		return jule::Str();;
	};
	return _1d9d0c738_Clean(_16013_s);;
}



inline jule::Str _1d9d0c738_Clean(jule::Str _10814_path) {
	jule::Str _1099_originalPath = _10814_path;;
	jule::I64 _1109_volLen = _203ee3e77_volumeNameLen(_10814_path);;
	(_10814_path).mut_slice(_1109_volLen);;
	if (_10814_path.empty()) {
		if ((((_1109_volLen > 1LL) && _203ee3350_IsPathSep(_1099_originalPath[0LL])) && _203ee3350_IsPathSep(_1099_originalPath[1LL]))) {
			return _1d9d0ccbb_FromSlash(_1099_originalPath);;
		};
		return (_1099_originalPath + jule::Str(".", 1));;
	};
	jule::Bool _1199_rooted = _203ee3350_IsPathSep(_10814_path[0LL]);;
	jule::I64 _1269_n = _10814_path.len();;
	_1d9d0b979_lazyBuff _12713_out = _1d9d0b979_lazyBuff{._field_path=_10814_path, ._field_volAndPath=_1099_originalPath, ._field_volLen=_1109_volLen};;
	jule::I64 _13214_r = 0;;
	jule::I64 _13221_dotdot = 0;;
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		_13214_r = ___jule_assign_arg;
		_13221_dotdot = _1___jule_assign_arg;
	});
	if (_1199_rooted) {
		_1d9d0c172_append(&_12713_out, 92LLU);
		({
			jule::I64 ___jule_assign_arg = 1LL;
			jule::I64 _1___jule_assign_arg = 1LL;
			_13214_r = ___jule_assign_arg;
			_13221_dotdot = _1___jule_assign_arg;
		});
	};
	while ((_13214_r < _1269_n)) {
		{
			{
				
				if (_203ee3350_IsPathSep(_10814_path[_13214_r])) {
					_case_begin_1ac62a34c:;
					{
						(_13214_r)++;
					}
				}
				else if (((_10814_path[_13214_r] == '.') && (((_13214_r + 1LL) == _1269_n) || _203ee3350_IsPathSep(_10814_path[(_13214_r + 1LL)])))) {
					_case_begin_1ac62ceba:;
					{
						(_13214_r)++;
					}
				}
				else if ((((_10814_path[_13214_r] == '.') && (_10814_path[(_13214_r + 1LL)] == '.')) && (((_13214_r + 2LL) == _1269_n) || _203ee3350_IsPathSep(_10814_path[(_13214_r + 2LL)])))) {
					_case_begin_1ac62d031:;
					{
						_13214_r+=2LL;
						{
							
							if ((_12713_out._field_w > _13221_dotdot)) {
								_case_begin_1ac630e13:;
								{
									(_12713_out._field_w)--;
									while (((_12713_out._field_w > _13221_dotdot) && (!(_203ee3350_IsPathSep(static_cast<jule::U8>(_1d9d0bdec_index(&_12713_out, _12713_out._field_w))))))) {
										{
											(_12713_out._field_w)--;
										}
									_iter_next_1ac63172c:;
									}
									_iter_end_1ac63172c:;;
								}
							}
							else if ((!(_1199_rooted))) {
								_case_begin_1ac630e79:;
								{
									if ((_12713_out._field_w > 0LL)) {
										_1d9d0c172_append(&_12713_out, 92LLU);
									};
									_1d9d0c172_append(&_12713_out, '.');
									_1d9d0c172_append(&_12713_out, '.');
									_13221_dotdot=_12713_out._field_w;
								}
							}
							_match_end_1ac630a7d:;
						};
					}
				}
				else {
					_case_begin_1ac628812:;
					{
						if (((_1199_rooted && (_12713_out._field_w != 1LL)) || ((!(_1199_rooted)) && (_12713_out._field_w != 0LL)))) {
							_1d9d0c172_append(&_12713_out, 92LLU);
						};
						if ((((true && (_12713_out._field_w == 0LL)) && (_12713_out._field_volLen == 0LL)) && (_13214_r != 0LL))) {
							jule::I64 _17525_i = _13214_r;;
							for (; ((_17525_i < _1269_n) && (!(_203ee3350_IsPathSep(_10814_path[_17525_i])))); (_17525_i)++) {
								{
									if ((_10814_path[_17525_i] == ':')) {
										_1d9d0c172_append(&_12713_out, '.');
										_1d9d0c172_append(&_12713_out, 92LLU);
										goto _iter_end_1ac62a4a1;
									};
								}
							_iter_next_1ac62a4a1:;
							}
							_iter_end_1ac62a4a1:;;
						};
						for (; ((_13214_r < _1269_n) && (!(_203ee3350_IsPathSep(_10814_path[_13214_r])))); (_13214_r)++) {
							{
								_1d9d0c172_append(&_12713_out, _10814_path[_13214_r]);
							}
						_iter_next_1ac629d0d:;
						}
						_iter_end_1ac629d0d:;;
					}
				}
				_match_end_1ac6285d1:;
			};
		}
	_iter_next_1ac628768:;
	}
	_iter_end_1ac628768:;;
	if ((_12713_out._field_w == 0LL)) {
		_1d9d0c172_append(&_12713_out, '.');
	};
	return _1d9d0ccbb_FromSlash(_1d9d0c3d6_string(&_12713_out));;
}



inline jule::Str _1d9d0ccbb_FromSlash(jule::Str _21114_path) {
	;
	return _1d9d0969c_Replace(_21114_path, jule::Str("/", 1), static_cast<jule::Str>(92LL), -1LL);;
}



inline jule::Str _1d9d0d0da_Join(jule::Slice<jule::Str> _2259_elem) {
	return _203ee4ad2_join(_2259_elem);;
}



inline jule::Str _1d9d0d382_Ext(jule::Str _2308_path) {
	jule::I64 _23113_i = (_2308_path.len() - 1LL);;
	for (; ((_23113_i >= 0LL) && (!(_203ee3350_IsPathSep(_2308_path[_23113_i])))); (_23113_i)--) {
		{
			if ((_2308_path[_23113_i] == '.')) {
				return _2308_path.slice(_23113_i);;
			};
		}
	_iter_next_1ac6353ac:;
	}
	_iter_end_1ac6353ac:;;
	return jule::Str();;
}



inline __jule_tuple_str__jule_tuple_bool _1d9d0d629_Abs(jule::Str _2458_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Str _24610_abs_path;;
	jule::Bool _24620_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _203ee483a_abs(_2458_path);
		_24610_abs_path = __jule_assign_result.__jule_result_arg0;
		_24620_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _24610_abs_path;
	__jule_func_result.__jule_result_arg1 = _24620_ok;
	return __jule_func_result;;
}



inline jule::Str _1d9d0d8c1_Base(jule::Str _25413_path) {
	if (_25413_path.empty()) {
		return jule::Str(".", 1);;
	};
	while (((_25413_path.len() > 0LL) && _203ee3350_IsPathSep(_25413_path[(_25413_path.len() - 1LL)]))) {
		{
			(_25413_path).mut_slice(0LL, (_25413_path.len() - 1LL));;
		}
	_iter_next_1ac6379a8:;
	}
	_iter_end_1ac6379a8:;;
	(_25413_path).mut_slice(_1d9d0dedc_VolumeName(_25413_path).len());;
	jule::I64 _26513_i = (_25413_path.len() - 1LL);;
	while (((_26513_i >= 0LL) && (!(_203ee3350_IsPathSep(_25413_path[_26513_i]))))) {
		{
			(_26513_i)--;
		}
	_iter_next_1ac6392c3:;
	}
	_iter_end_1ac6392c3:;;
	if ((_26513_i >= 0LL)) {
		(_25413_path).mut_slice((_26513_i + 1LL));;
	};
	if (_25413_path.empty()) {
		return static_cast<jule::Str>(92LL);;
	};
	return _25413_path;;
}



inline jule::Str _1d9d0dc45_Dir(jule::Str _2858_path) {
	jule::Str _2869_vol = _1d9d0dedc_VolumeName(_2858_path);;
	jule::I64 _28713_i = (_2858_path.len() - 1LL);;
	while (((_28713_i >= _2869_vol.len()) && (!(_203ee3350_IsPathSep(_2858_path[_28713_i]))))) {
		{
			(_28713_i)--;
		}
	_iter_next_1ac63b5e4:;
	}
	_iter_end_1ac63b5e4:;;
	jule::Str _2919_dir = _1d9d0c738_Clean(_2858_path.slice(_2869_vol.len(), (_28713_i + 1LL)));;
	if ((_2919_dir.equal(".", 1) && (_2869_vol.len() > 2LL))) {
		return _2869_vol;;
	};
	return (_2869_vol + _2919_dir);;
}



inline jule::Str _1d9d0dedc_VolumeName(jule::Str _30315_path) {
	return _1d9d0ccbb_FromSlash(_30315_path.slice(0LL, _203ee3e77_volumeNameLen(_30315_path)));;
}



inline jule::I64 _203d70221_getLastFsError(void) {
	jule::I64 _729_err = _202c5b1b8_GetLastErrno();;
	{
		auto &_match_expr{ _729_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1ac65175d:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1ac650be1:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 114LL) {
			_case_begin_1ac651153:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 38LL) {
			_case_begin_1ac6511b9:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1ac651230:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1ac651296:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 132LL) {
			_case_begin_1ac65187e:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1ac6518e5:;
			{
				return static_cast<jule::I64>(7LL);;
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1ac65195b:;
			{
				return static_cast<jule::I64>(8LL);;
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1ac6519c2:;
			{
				return static_cast<jule::I64>(9LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1ac651a49:;
			{
				return static_cast<jule::I64>(10LL);;
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1ac651ac1:;
			{
				return static_cast<jule::I64>(11LL);;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1ac651b48:;
			{
				return static_cast<jule::I64>(12LL);;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1ac651bc0:;
			{
				return static_cast<jule::I64>(13LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1ac651c47:;
			{
				return static_cast<jule::I64>(14LL);;
			}
		}
		else if (_match_expr == 124LL) {
			_case_begin_1ac651cbe:;
			{
				return static_cast<jule::I64>(15LL);;
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1ac651d46:;
			{
				return static_cast<jule::I64>(16LL);;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1ac651dbd:;
			{
				return static_cast<jule::I64>(17LL);;
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1ac651e45:;
			{
				return static_cast<jule::I64>(18LL);;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1ac651ebc:;
			{
				return static_cast<jule::I64>(19LL);;
			}
		}
		else if (_match_expr == 139LL || _match_expr == 16LL) {
			_case_begin_1ac652044:;
			{
				return static_cast<jule::I64>(20LL);;
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1ac6520bb:;
			{
				return static_cast<jule::I64>(21LL);;
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1ac652143:;
			{
				return static_cast<jule::I64>(22LL);;
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1ac6521ba:;
			{
				return static_cast<jule::I64>(23LL);;
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1ac652242:;
			{
				return static_cast<jule::I64>(24LL);;
			}
		}
		else if (_match_expr == 119LL) {
			_case_begin_1ac6522b9:;
			{
				return static_cast<jule::I64>(25LL);;
			}
		}
		else if (_match_expr == 104LL) {
			_case_begin_1ac652341:;
			{
				return static_cast<jule::I64>(26LL);;
			}
		}
		else if (_match_expr == 41LL) {
			_case_begin_1ac6523b8:;
			{
				return static_cast<jule::I64>(27LL);;
			}
		}
		else {
			_case_begin_1ac650eaa:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_1ac650e55:;
	};
}



inline jule::Bool _203e675c1_isConsoleHandle(jule::Uintptr _11320_handle) {
	return (((_11320_handle == _203d57ec8_STDIN) || (_11320_handle == _203d58292_STDOUT)) || (_11320_handle == _203d58528_STDERR));;
}



inline void _1d9e35da0_appendEscapeArg(jule::Str* _10125_s, jule::Str _10133_arg) {
	if ((_10133_arg.len() == 0LL)) {
		((*(_10125_s))).append("\"\"", 2);
		return;;
	};
	jule::Bool _10713_needsBackslash = false;;
	jule::Bool _10813_hasSpace = false;;
	jule::I64 _10913_i = 0LL;;
	for (; (_10913_i < _10133_arg.len()); (_10913_i)++) {
		{
			{
				auto &_match_expr{ _10133_arg[_10913_i] };
				
				if (_match_expr == '\"' || _match_expr == '\\') {
					_case_begin_1ac698d49:;
					{
						_10713_needsBackslash=true;
					}
				}
				else if (_match_expr == ' ' || _match_expr == '\t') {
					_case_begin_1ac698dc1:;
					{
						_10813_hasSpace=true;
					}
				}
				_match_end_1ac698c5b:;
			};
		}
	_iter_next_1ac694c13:;
	}
	_iter_end_1ac694c13:;;
	if (((!(_10713_needsBackslash)) && (!(_10813_hasSpace)))) {
		(*(_10125_s))+=_10133_arg;
		return;;
	};
	if ((!(_10713_needsBackslash))) {
		((*(_10125_s))).append("\"", 1);
		(*(_10125_s))+=_10133_arg;
		((*(_10125_s))).append("\"", 1);
		return;;
	};
	if (_10813_hasSpace) {
		((*(_10125_s))).append("\"", 1);
	};
	jule::I64 _13513_slashes = 0LL;;
	_10913_i=0LL;
	for (; (_10913_i < _10133_arg.len()); (_10913_i)++) {
		{
			jule::U8 _13813_c = _10133_arg[_10913_i];;
			{
				auto &_match_expr{ _13813_c };
				
				if (_match_expr == '\\') {
					_case_begin_1ac69c49b:;
					{
						(_13513_slashes)++;
					}
				}
				else if (_match_expr == '\"') {
					_case_begin_1ac69ba72:;
					{
						for (; (_13513_slashes > 0LL); (_13513_slashes)--) {
							{
								((*(_10125_s))).append("\\", 1);
							}
						_iter_next_1ac69cbb6:;
						}
						_iter_end_1ac69cbb6:;;
						((*(_10125_s))).append("\\", 1);
					}
				}
				else {
					_case_begin_1ac69be18:;
					{
						_13513_slashes=0LL;
					}
				}
				_match_end_1ac69bdb3:;
			};
			((*(_10125_s))).append(_13813_c);
		}
	_iter_next_1ac69b29c:;
	}
	_iter_end_1ac69b29c:;;
	if (_10813_hasSpace) {
		for (; (_13513_slashes > 0LL); (_13513_slashes)--) {
			{
				((*(_10125_s))).append("\\", 1);
			}
		_iter_next_1ac69bd6e:;
		}
		_iter_end_1ac69bd6e:;;
		((*(_10125_s))).append("\"", 1);
	};
}



inline jule::Str _1d9e36147_makeCmdLine(jule::Slice<jule::Str> _16216_args) {
	jule::Str _16313_s = jule::Str();;
	{
		auto expr = &(_16216_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac69e4ae:;
		if (it != expr_end) {
			jule::Str *_16412_arg = it;
			{
				if ((_16313_s.len() > 0LL)) {
					(_16313_s).append(" ", 1);
				};
				_1d9e35da0_appendEscapeArg(&(_16313_s), (*(_16412_arg)));
			}
			_iter_next_1ac69e4ae:;
			++it;
			goto _iter_begin_1ac69e4ae;
		}
		_iter_end_1ac69e4ae:;
	};
	return _16313_s;;
}



inline jule::Exceptional<jule::Slice<jule::U16>> _1d9e364ee_createEnvBlock(jule::Slice<jule::Str> _17819_env) {
	if ((_17819_env.len() == 0LL)) {
		return jule::Exceptional<jule::Slice<jule::U16>>(jule::Any(), _203d3006b_Encode(static_cast<jule::Slice<jule::I32>>(jule::Str("\x00\x00", 2))));;
	};
	jule::I64 _18213_n = 0LL;;
	{
		auto expr = &(_17819_env);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac6a1181:;
		if (it != expr_end) {
			jule::Str *_18312_s = it;
			{
				if ((_1d9d0272d_FindByteStr(_18312_s, 0LLU) != -1LL)) {
					return jule::Exceptional<jule::Slice<jule::U16>>(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0));
				};
				_18213_n+=((*(_18312_s)).len() + 1LL);
			}
			_iter_next_1ac6a1181:;
			++it;
			goto _iter_begin_1ac6a1181;
		}
		_iter_end_1ac6a1181:;
	};
	(_18213_n)++;
	jule::Slice<jule::U16> _19013_b = jule::Slice<jule::U16>::alloc(0LL, _18213_n, 0);;
	{
		auto expr = &(_17819_env);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac6a2825:;
		if (it != expr_end) {
			jule::Str *_19112_s = it;
			{
				{
					auto expr = static_cast<jule::Slice<jule::I32>>((*(_19112_s)));
					auto it = expr.begin();
					auto expr_end = expr.end();
					_iter_begin_1ac6a31b6:;
					if (it != expr_end) {
						jule::I32 _19216_c = *it;
						{
							_19013_b=_203d30621_AppendRune(_19013_b, _19216_c);
						}
						_iter_next_1ac6a31b6:;
						++it;
						goto _iter_begin_1ac6a31b6;
					}
					_iter_end_1ac6a31b6:;
				};
				_19013_b=_203d30621_AppendRune(_19013_b, 0LL);
			}
			_iter_next_1ac6a2825:;
			++it;
			goto _iter_begin_1ac6a2825;
		}
		_iter_end_1ac6a2825:;
	};
	_19013_b=_203d30621_AppendRune(_19013_b, 0LL);
	return jule::Exceptional<jule::Slice<jule::U16>>(jule::Any(), _19013_b);;
}



inline jule::I64 _1d9e374cd_processErrorFromCode(jule::I64 _1125_code) {
	{
		auto &_match_expr{ _1125_code };
		
		if (_match_expr == 5LL) {
			_case_begin_1ac6a2d0e:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 2LL || _match_expr == 3LL) {
			_case_begin_1ac6a3edb:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else {
			_case_begin_1ac6a3ded:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		_match_end_1ac6a156b:;
	};
}



inline jule::I64 _1d9e376dc_getLastProcessError(void) {
	return _1d9e374cd_processErrorFromCode(static_cast<jule::I64>(static_cast<jule::I64>(_203d5945d_GetLastError())));;
}



inline void _1d9e37e90_Exit(jule::I64 _129_code) {
	_203d60101_Exit(_129_code);
}



inline jule::Str _1d9e3818d_Executable(void) {
	return jule::executable();;
}



inline jule::Bool _1d9d85e87_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));;
}



inline jule::Bool _1d9d86240_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto expr = &(_1d9d11891_CppHeaderExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac6d7e54:;
		if (it != expr_end) {
			jule::Str *_3212_validExt = it;
			{
				if ((_3121_ext == (*(_3212_validExt)))) {
					return true;;
				};
			}
			_iter_next_1ac6d7e54:;
			++it;
			goto _iter_begin_1ac6d7e54;
		}
		_iter_end_1ac6d7e54:;
	};
	return false;;
}



inline jule::Bool _1d9d864d7_IsValidCppExt(jule::Str _4118_ext) {
	if (_4118_ext.equal(".c", 2)) {
		return true;;
	};
	{
		auto expr = &(_1d9d8412d_CppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac6d87b2:;
		if (it != expr_end) {
			jule::Str *_4512_e = it;
			{
				if ((_4118_ext == (*(_4512_e)))) {
					return true;;
				};
			}
			_iter_next_1ac6d87b2:;
			++it;
			goto _iter_begin_1ac6d87b2;
		}
		_iter_end_1ac6d87b2:;
	};
	{
		auto expr = &(_1d9d8434d_ObjectiveCppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac6d9ac1:;
		if (it != expr_end) {
			jule::Str *_5012_e = it;
			{
				if ((_4118_ext == (*(_5012_e)))) {
					return true;;
				};
			}
			_iter_next_1ac6d9ac1:;
			++it;
			goto _iter_begin_1ac6d9ac1;
		}
		_iter_end_1ac6d9ac1:;
	};
	return false;;
}



inline jule::Str _1d9d93d0d_Logf(jule::Str _3139_fmt, jule::Slice<jule::Any> _31322_args) {
	return _1d9d94726_applyFmt(_3139_fmt, _31322_args);;
}



inline jule::Str _1d9d940e9_argToStr(jule::Any _31713_arg) {
	{
		auto &_match_expr{ _31713_arg };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1ac6db023:;
			{
				return _31713_arg.cast<jule::Str>(&__jule_any_type5);;
			}
		}
		else if (_match_expr.type == &__jule_any_type130) {
			_case_begin_1ac6db089:;
			{
				return static_cast<jule::Str>(_31713_arg.cast<jule::U8>(&__jule_any_type130));;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1ac6dad14:;
			{
				return static_cast<jule::Str>(_31713_arg.cast<jule::I32>(&__jule_any_type1));;
			}
		}
		else {
			_case_begin_1ac6da8d5:;
			{
				return jule::Str("<fmt?>", 6);;
			}
		}
		_match_end_1ac6da6e8:;
	};
}



inline jule::I64 _1d9d94391_findNextFmt(jule::Str _33016_fmt) {
	{
		auto expr = &(_33016_fmt);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac6db74e:;
		if (it != expr_end) {
			jule::I64 _3319_i = it - expr->begin();
			jule::U8 *_33112_b = it;
			{
				if (((*(_33112_b)) == '@')) {
					return _3319_i;;
				};
			}
			_iter_next_1ac6db74e:;
			++it;
			_3319_i++;
			goto _iter_begin_1ac6db74e;
		}
		_iter_end_1ac6db74e:;
	};
	return -1LL;;
}



inline jule::Str _1d9d94726_applyFmt(jule::Str _33917_fmt, jule::Slice<jule::Any> _33927_args) {
	jule::Str _34013_s = jule::Str();;
	{
		auto expr = &(_33927_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac6dd454:;
		if (it != expr_end) {
			jule::Any *_34112_arg = it;
			{
				jule::I64 _34213_i = _1d9d94391_findNextFmt(_33917_fmt);;
				if ((_34213_i == -1LL)) {
					goto _iter_end_1ac6dd454;
				};
				_34013_s+=_33917_fmt.slice(0LL, _34213_i);
				_34013_s+=_1d9d940e9_argToStr((*(_34112_arg)));
				(_33917_fmt).mut_slice((_34213_i + 1LL));;
			}
			_iter_next_1ac6dd454:;
			++it;
			goto _iter_begin_1ac6dd454;
		}
		_iter_end_1ac6dd454:;
	};
	_34013_s+=_33917_fmt;
	return _34013_s;;
}



inline jule::Bool _1d9d9579e_IsTopDirective(jule::Str _2819_directive) {
	return (_2819_directive.equal("pass", 4) || _2819_directive.equal("build", 5));;
}



inline jule::Bool _1d9d96bce_IsWindows(jule::Str _3714_os) {
	return _3714_os.equal("windows", 7);;
}



inline jule::Bool _1d9d96e87_IsDarwin(jule::Str _4013_os) {
	return _4013_os.equal("darwin", 6);;
}



inline jule::Bool _1d9d9722e_IsLinux(jule::Str _4312_os) {
	return _4312_os.equal("linux", 5);;
}



inline jule::Bool _1d9d9754d_IsI386(jule::Str _4611_arch) {
	return _4611_arch.equal("i386", 4);;
}



inline jule::Bool _1d9d977e5_IsAmd64(jule::Str _4912_arch) {
	return _4912_arch.equal("amd64", 5);;
}



inline jule::Bool _1d9d97a8c_IsArm64(jule::Str _5212_arch) {
	return _5212_arch.equal("arm64", 5);;
}



inline jule::Bool _1d9d97d34_IsUnix(jule::Str _5511_os) {
	return (_1d9d96e87_IsDarwin(_5511_os) || _1d9d9722e_IsLinux(_5511_os));;
}



inline jule::Bool _1d9d981a8_Is32Bit(jule::Str _5812_arch) {
	return _1d9d9754d_IsI386(_5812_arch);;
}



inline jule::Bool _1d9d98450_Is64Bit(jule::Str _6112_arch) {
	return (_1d9d977e5_IsAmd64(_6112_arch) || _1d9d97a8c_IsArm64(_6112_arch));;
}



inline void _1d9e39425_init(void) {
	jule::Str _2513_path = _1d9e3818d_Executable();;
	if (_2513_path.empty()) {
		jule::panic(jule::Str("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:9"));;
	};
	{
		_1d9e38952_PathWd=({
			auto except = _204018683_WorkingDir();
			(except.ok()) ? (except.result) : ({{
				jule::panic(jule::Str("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:33:13"));;
				return;;
			} jule::Str();});
		});
		_1d9e38699_PathExec=_1d9d0dc45_Dir(_2513_path);
		_1d9e38479_PathStdlib=_1d9d0d0da_Join(jule::Slice<jule::Str>::make({_1d9e38699_PathExec,jule::Str("..", 2),jule::Str("std", 3)}));
		_1d9e38c60_PathApi=_1d9d0d0da_Join(jule::Slice<jule::Str>::make({_1d9e38699_PathExec,jule::Str("..", 2),jule::Str("api", 3),jule::Str("jule.hpp", 8)}));
	};
}



inline jule::Bool _1db945517_IsUnaryOp(jule::Str _31214_kind) {
	{
		auto expr = &(_1db89937d_UnaryOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac73c250:;
		if (it != expr_end) {
			jule::Str *_31312_op = it;
			{
				if ((_31214_kind == (*(_31312_op)))) {
					return true;;
				};
			}
			_iter_next_1ac73c250:;
			++it;
			goto _iter_begin_1ac73c250;
		}
		_iter_end_1ac73c250:;
	};
	return false;;
}



inline jule::Bool _1db945803_IsBinOp(jule::Str _32212_kind) {
	{
		auto expr = &(_1db89959d_BinOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac73c6e5:;
		if (it != expr_end) {
			jule::Str *_32312_op = it;
			{
				if ((_32212_kind == (*(_32312_op)))) {
					return true;;
				};
			}
			_iter_next_1ac73c6e5:;
			++it;
			goto _iter_begin_1ac73c6e5;
		}
		_iter_end_1ac73c6e5:;
	};
	return false;;
}



inline jule::Bool _1db945db9_IsStr(jule::Str _34210_k) {
	return ((!(_34210_k.empty())) && ((_34210_k[0LL] == '\"') || _1db946161_IsRawStr(_34210_k)));;
}



inline jule::Bool _1db946161_IsRawStr(jule::Str _34513_k) {
	return ((!(_34513_k.empty())) && (_34513_k[0LL] == '`'));;
}



inline jule::Bool _1db946408_IsRune(jule::Str _34911_k) {
	return ((!(_34911_k.empty())) && (_34911_k[0LL] == '\''));;
}



inline jule::Bool _1db946a24_IsBool(jule::Str _35511_k) {
	return (_35511_k.equal("true", 4) || _35511_k.equal("false", 5));;
}



inline jule::Bool _1db946cbb_IsFloat(jule::Str _35812_k) {
	if (_1d9d036a7_HasPrefix(_35812_k, jule::Str("0x", 2))) {
		return _1d9d08dc7_ContainsAny(_35812_k, jule::Str(".pP", 3));;
	};
	return _1d9d08dc7_ContainsAny(_35812_k, jule::Str(".eE", 3));;
}



inline jule::Bool _1db947063_IsNum(jule::Str _36610_k) {
	if (_36610_k.empty()) {
		return false;;
	};
	jule::U8 _3719_b = _36610_k[0LL];;
	return ((_3719_b == '.') || (('0' <= _3719_b) && (_3719_b <= '9')));;
}



inline jule::Bool _1db9475a2_IsIgnoreIdent(jule::Str _38118_ident) {
	return _38118_ident.equal("_", 1);;
}



inline jule::Bool _1db947849_IsAnonIdent(jule::Str _38416_ident) {
	return _38416_ident.equal("<anonymous>", 11);;
}



inline jule::Bool _1db947d88_IsSpace(jule::I32 _39712_r) {
	{
		auto expr = &(_1db89915d_Spaces);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab477d49:;
		if (it != expr_end) {
			jule::I32 *_39812_cr = it;
			{
				if ((_39712_r == (*(_39812_cr)))) {
					return true;;
				};
			}
			_iter_next_1ab477d49:;
			++it;
			goto _iter_begin_1ab477d49;
		}
		_iter_end_1ab477d49:;
	};
	return false;;
}



inline jule::Bool _1db9482d9_IsLetter(jule::I32 _40713_r) {
	return _1d9c55c25_IsLetter(_40713_r);;
}



inline jule::Bool _1db948828_IsDecimal(jule::U8 _42714_b) {
	return (('0' <= _42714_b) && (_42714_b <= '9'));;
}



inline jule::Bool _1db948ac0_IsBinary(jule::U8 _43013_b) {
	return ((_43013_b == '0') || (_43013_b == '1'));;
}



inline jule::Bool _1db948d67_IsOctal(jule::U8 _43312_b) {
	return (('0' <= _43312_b) && (_43312_b <= '7'));;
}



inline jule::Bool _1db94910e_IsHex(jule::U8 _43610_b) {
	{
		
		if ((('0' <= _43610_b) && (_43610_b <= '9'))) {
			_case_begin_1ab47c27c:;
			{
				return true;;
			}
		}
		else if ((('a' <= _43610_b) && (_43610_b <= 'f'))) {
			_case_begin_1ab47baa6:;
			{
				return true;;
			}
		}
		else if ((('A' <= _43610_b) && (_43610_b <= 'F'))) {
			_case_begin_1ab47bb1c:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ab47ba40:;
			{
				return false;;
			}
		}
		_match_end_1ab47b974:;
	};
}



inline jule::Bool _1db9493a6_IsAssign(jule::U64 _45113_id) {
	return (((((((_45113_id == static_cast<jule::U64>(2LLU)) || (_45113_id == static_cast<jule::U64>(30LLU))) || (_45113_id == static_cast<jule::U64>(33LLU))) || (_45113_id == static_cast<jule::U64>(20LLU))) || (_45113_id == static_cast<jule::U64>(27LLU))) || (_45113_id == static_cast<jule::U64>(3LLU))) || (_45113_id == static_cast<jule::U64>(7LLU)));;
}



inline jule::Bool _1db94964d_IsPostfixOp(jule::Str _46216_kind) {
	{
		auto expr = &(_1db93e313_PostfixOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab4805d2:;
		if (it != expr_end) {
			jule::Str *_46312_op = it;
			{
				if ((_46216_kind == (*(_46312_op)))) {
					return true;;
				};
			}
			_iter_next_1ab4805d2:;
			++it;
			goto _iter_begin_1ab4805d2;
		}
		_iter_end_1ab4805d2:;
	};
	return false;;
}



inline jule::Bool _1db9498e5_IsAssignOp(jule::Str _47215_kind) {
	if (_1db94964d_IsPostfixOp(_47215_kind)) {
		return true;;
	};
	{
		auto expr = &(_1db93e610_AssignOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab4817d1:;
		if (it != expr_end) {
			jule::Str *_47612_op = it;
			{
				if ((_47215_kind == (*(_47612_op)))) {
					return true;;
				};
			}
			_iter_next_1ab4817d1:;
			++it;
			goto _iter_begin_1ab4817d1;
		}
		_iter_end_1ab4817d1:;
	};
	return false;;
}



inline jule::Ptr<_1db94a198_File> _1db94b6c7_NewFileSet(jule::Str _6315_path) {
	return jule::new_ptr<_1db94a198_File>(_1db94a198_File{._field_Path=_6315_path, });;
}



inline _1d9d938bd_Log _1db94ce6a_makeErr(jule::I64 _11112_row, jule::I64 _11122_col, jule::Ptr<_1db94a198_File>* _11133_f, jule::Str _11143_fmt, jule::Slice<jule::Any> _11156_args) {
	return _1d9d938bd_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_11112_row, ._field_Column=_11122_col, ._field_Path=(*(_11133_f)).get()._field_Path, ._field_Text=_1d9d93d0d_Logf(_11143_fmt, _11156_args), };;
}



inline jule::Bool _1db94d300_bytesHasPrefix(jule::Slice<jule::U8>* _12120_bytes, jule::Str _12135_prefix) {
	if (((*(_12120_bytes)).len() < _12135_prefix.len())) {
		return false;;
	};
	{
		auto expr = &(_12135_prefix);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab48b19d:;
		if (it != expr_end) {
			jule::I64 _1259_i = it - expr->begin();
			{
				if (((*(_12120_bytes))[_1259_i] != _12135_prefix[_1259_i])) {
					return false;;
				};
			}
			_iter_next_1ab48b19d:;
			++it;
			_1259_i++;
			goto _iter_begin_1ab48b19d;
		}
		_iter_end_1ab48b19d:;
	};
	return true;;
}



inline jule::Str _1db94d641_floatFmtE(jule::Slice<jule::U8>* _13315_txt, jule::I64 _13332_i) {
	jule::Str __jule_func_result;
	(_13332_i)++;
	if ((_13332_i >= (*(_13315_txt)).len())) {
		return __jule_func_result;;
	};
	jule::U8 _13913_b = (*(_13315_txt))[_13332_i];;
	if ((_13913_b == '_')) {
		return __jule_func_result;;
	};
	if (((_13913_b == '+') || (_13913_b == '-'))) {
		(_13332_i)++;
		if ((_13332_i >= (*(_13315_txt)).len())) {
			return __jule_func_result;;
		};
		if (((*(_13315_txt))[_13332_i] == '_')) {
			return __jule_func_result;;
		};
	};
	jule::I64 _1539_first = _13332_i;;
	for (; (_13332_i < (*(_13315_txt)).len()); (_13332_i)++) {
		{
			_13913_b=(*(_13315_txt))[_13332_i];
			if (((_13913_b != '_') && (!(_1db948828_IsDecimal(_13913_b))))) {
				goto _iter_end_1ab48eaca;
			};
		}
	_iter_next_1ab48eaca:;
	}
	_iter_end_1ab48eaca:;;
	if ((_13332_i == _1539_first)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_13315_txt)).slice(0LL, _13332_i));
	return __jule_func_result;;
}



inline jule::Str _1db94d9c6_floatFmtP(jule::Slice<jule::U8>* _16715_txt, jule::I64 _16728_i) {
	return _1db94d641_floatFmtE(_16715_txt, _16728_i);;
}



inline jule::Str _1db94dd17_floatFmtDotnp(jule::Slice<jule::U8>* _17119_txt, jule::I64 _17136_i) {
	if (((*(_17119_txt))[_17136_i] != '.')) {
		return jule::Str();;
	};
	(_17136_i)++;
	_julec_label_loop:;
	for (; (_17136_i < (*(_17119_txt)).len()); (_17136_i)++) {
		{
			jule::U8 _17913_b = (*(_17119_txt))[_17136_i];;
			{
				
				if ((_17913_b == '_') || _1db948828_IsDecimal(_17913_b)) {
					_case_begin_1ab492935:;
					{
						goto _iter_next_1ab491cca;
					}
				}
				else if (_1db9505bb_isFloatFmtP(_17913_b, _17136_i)) {
					_case_begin_1ab49299b:;
					{
						return _1db94d9c6_floatFmtP(_17119_txt, _17136_i);;
					}
				}
				else {
					_case_begin_1ab4928be:;
					{
						goto _iter_end_1ab491cca;
					}
				}
				_match_end_1ab492858:;
			};
		}
	_iter_next_1ab491cca:;
	}
	_iter_end_1ab491cca:;;
	return jule::Str();;
}



inline jule::Str _1db94e158_floatFmtDotfp(jule::Slice<jule::U8>* _19219_txt, jule::I64 _19236_i) {
	_19236_i+=2LL;
	return _1db94d641_floatFmtE(_19219_txt, _19236_i);;
}



inline jule::Str _1db94e499_floatFmtDotp(jule::Slice<jule::U8>* _19718_txt, jule::I64 _19735_i) {
	(_19735_i)++;
	return _1db94d641_floatFmtE(_19718_txt, _19735_i);;
}



inline jule::Str _1db94e8ea_floatNum(jule::Slice<jule::U8>* _20214_txt, jule::I64 _20231_i) {
	jule::Str __jule_func_result;
	(_20231_i)++;
	if ((_20231_i >= (*(_20214_txt)).len())) {
		__jule_func_result = static_cast<jule::Str>((*(_20214_txt)));
		return __jule_func_result;;
	};
	if (((*(_20214_txt))[_20231_i] == '_')) {
		(_20231_i)--;
		__jule_func_result = static_cast<jule::Str>((*(_20214_txt)).slice(0LL, _20231_i));
		return __jule_func_result;;
	};
	for (; (_20231_i < (*(_20214_txt)).len()); (_20231_i)++) {
		{
			jule::U8 _21213_b = (*(_20214_txt))[_20231_i];;
			if (((_20231_i > 1LL) && ((_21213_b == 'e') || (_21213_b == 'E')))) {
				__jule_func_result = _1db94d641_floatFmtE(_20214_txt, _20231_i);
				return __jule_func_result;;
			};
			if (((_21213_b != '_') && (!(_1db948828_IsDecimal(_21213_b))))) {
				goto _iter_end_1ac7475e0;
			};
		}
	_iter_next_1ac7475e0:;
	}
	_iter_end_1ac7475e0:;;
	if ((_20231_i == 1LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_20214_txt)).slice(0LL, _20231_i));
	return __jule_func_result;;
}



inline jule::Str _1db94eb92_commonNum(jule::Slice<jule::U8>* _22715_txt) {
	jule::Str __jule_func_result;
	jule::I64 _22813_i = 0LL;;
	_julec_label_loop:;
	for (; (_22813_i < (*(_22715_txt)).len()); (_22813_i)++) {
		{
			jule::U8 _23113_b = (*(_22715_txt))[_22813_i];;
			{
				
				if ((_23113_b == '.')) {
					_case_begin_1ac74ac0e:;
					{
						__jule_func_result = _1db94e8ea_floatNum(_22715_txt, _22813_i);
						return __jule_func_result;;
					}
				}
				else if ((_23113_b == '_')) {
					_case_begin_1ac74ac86:;
					{
						goto _iter_next_1ac749bec;
					}
				}
				else if (_1db95027a_isFloatFmtE(_23113_b, _22813_i)) {
					_case_begin_1ac74ad0d:;
					{
						__jule_func_result = _1db94d641_floatFmtE(_22715_txt, _22813_i);
						return __jule_func_result;;
					}
				}
				else if ((!(_1db948828_IsDecimal(_23113_b)))) {
					_case_begin_1ac74ad85:;
					{
						goto _iter_end_1ac749bec;
					}
				}
				_match_end_1ac74ab32:;
			};
		}
	_iter_next_1ac749bec:;
	}
	_iter_end_1ac749bec:;;
	if ((_22813_i == 0LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_22715_txt)).slice(0LL, _22813_i));
	return __jule_func_result;;
}



inline jule::Str _1db94ee39_binaryNum(jule::Slice<jule::U8>* _25015_txt) {
	jule::Str __jule_func_result;
	if ((!(_1db94d300_bytesHasPrefix(_25015_txt, jule::Str("0b", 2))))) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_25015_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _25913_i = 2LL;;
	for (; (_25913_i < (*(_25015_txt)).len()); (_25913_i)++) {
		{
			if ((((*(_25015_txt))[_25913_i] != '_') && (!(_1db948ac0_IsBinary((*(_25015_txt))[_25913_i]))))) {
				goto _iter_end_1ac74c617;
			};
		}
	_iter_next_1ac74c617:;
	}
	_iter_end_1ac74c617:;;
	if ((_25913_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_25015_txt)).slice(0LL, _25913_i));
	return __jule_func_result;;
}



inline jule::Bool _1db95027a_isFloatFmtE(jule::U8 _27216_b, jule::I64 _27225_i) {
	return ((_27225_i > 0LL) && ((_27216_b == 'e') || (_27216_b == 'E')));;
}



inline jule::Bool _1db9505bb_isFloatFmtP(jule::U8 _27616_b, jule::I64 _27625_i) {
	return ((_27625_i > 0LL) && ((_27616_b == 'p') || (_27616_b == 'P')));;
}



inline jule::Bool _1db95090c_isFloatFmtDotnp(jule::Slice<jule::U8>* _28021_txt, jule::I64 _28038_i) {
	if (((*(_28021_txt))[_28038_i] != '.')) {
		return false;;
	};
	(_28038_i)++;
	_julec_label_loop:;
	for (; (_28038_i < (*(_28021_txt)).len()); (_28038_i)++) {
		{
			jule::U8 _28713_b = (*(_28021_txt))[_28038_i];;
			{
				
				if ((_28713_b == '_') || _1db948828_IsDecimal(_28713_b)) {
					_case_begin_1ac753541:;
					{
						goto _iter_next_1ac752353;
					}
				}
				else if (_1db9505bb_isFloatFmtP(_28713_b, _28038_i)) {
					_case_begin_1ac7535a7:;
					{
						return true;;
					}
				}
				else {
					_case_begin_1ac7534ca:;
					{
						goto _iter_end_1ac752353;
					}
				}
				_match_end_1ac753464:;
			};
		}
	_iter_next_1ac752353:;
	}
	_iter_end_1ac752353:;;
	return false;;
}



inline jule::Bool _1db950c4d_isFloatFmtDotp(jule::Slice<jule::U8>* _30120_txt, jule::I64 _30133_i) {
	{
		
		if (((*(_30120_txt)).len() < 3LL)) {
			_case_begin_1ac755235:;
			{
				goto _case_begin_1ac754a5e;
			}
		}
		else if (((*(_30120_txt))[_30133_i] != '.')) {
			_case_begin_1ac754a5e:;
			{
				goto _case_begin_1ac754ac5;
			}
		}
		else if ((((*(_30120_txt))[(_30133_i + 1LL)] != 'p') && ((*(_30120_txt))[(_30133_i + 1LL)] != 'P'))) {
			_case_begin_1ac754ac5:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1ac7549e8:;
			{
				return true;;
			}
		}
		_match_end_1ac75492c:;
	};
}



inline jule::Bool _1db95108e_isFloatFmtDotfp(jule::Slice<jule::U8>* _31421_txt, jule::I64 _31434_i) {
	{
		
		if (((*(_31421_txt)).len() < 4LL)) {
			_case_begin_1ac757534:;
			{
				goto _case_begin_1ac756d6e;
			}
		}
		else if (((*(_31421_txt))[_31434_i] != '.')) {
			_case_begin_1ac756d6e:;
			{
				goto _case_begin_1ac756dd5;
			}
		}
		else if ((((*(_31421_txt))[(_31434_i + 1LL)] != 'f') && ((*(_31421_txt))[(_31434_i + 1LL)] != 'F'))) {
			_case_begin_1ac756dd5:;
			{
				goto _case_begin_1ac756e4b;
			}
		}
		else if ((((*(_31421_txt))[(_31434_i + 2LL)] != 'p') && ((*(_31421_txt))[(_31434_i + 1LL)] != 'P'))) {
			_case_begin_1ac756e4b:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1ac75690c:;
			{
				return true;;
			}
		}
		_match_end_1ac756841:;
	};
}



inline jule::Str _1db9514e0_octalNum(jule::Slice<jule::U8>* _32914_txt) {
	jule::Str __jule_func_result;
	if (((*(_32914_txt))[0LL] != '0')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_32914_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	jule::I64 _33713_octalStart = 1LL;;
	jule::Bool _33913_o = false;;
	if (((*(_32914_txt))[1LL] == 'o')) {
		if (((*(_32914_txt)).len() < 3LL)) {
			return __jule_func_result;;
		};
		(_33713_octalStart)++;
		_33913_o=true;
	};
	jule::I64 _34813_i = _33713_octalStart;;
	for (; (_34813_i < (*(_32914_txt)).len()); (_34813_i)++) {
		{
			jule::U8 _35013_b = (*(_32914_txt))[_34813_i];;
			if ((_35013_b == '.')) {
				if (_33913_o) {
					__jule_func_result = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result = _1db94e8ea_floatNum(_32914_txt, _34813_i);
				return __jule_func_result;;
			};
			if (_1db95027a_isFloatFmtE(_35013_b, _34813_i)) {
				__jule_func_result = _1db94d641_floatFmtE(_32914_txt, _34813_i);
				return __jule_func_result;;
			};
			if (((_35013_b != '_') && (!(_1db948d67_IsOctal(_35013_b))))) {
				goto _iter_end_1ac75b57c;
			};
		}
	_iter_next_1ac75b57c:;
	}
	_iter_end_1ac75b57c:;;
	if ((_34813_i == _33713_octalStart)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_32914_txt)).slice(0LL, _34813_i));
	return __jule_func_result;;
}



inline jule::Str _1db951787_hexNum(jule::Slice<jule::U8>* _37112_txt) {
	jule::Str __jule_func_result;
	if (((*(_37112_txt)).len() < 3LL)) {
		return __jule_func_result;;
	};
	if ((((*(_37112_txt))[0LL] != '0') || (((*(_37112_txt))[1LL] != 'x') && ((*(_37112_txt))[1LL] != 'X')))) {
		return __jule_func_result;;
	};
	;
	jule::I64 _38013_i = 2LL;;
	_julec_label_loop:;
	for (; (_38013_i < (*(_37112_txt)).len()); (_38013_i)++) {
		{
			jule::U8 _38313_b = (*(_37112_txt))[_38013_i];;
			{
				
				if (_1db950c4d_isFloatFmtDotp(_37112_txt, _38013_i)) {
					_case_begin_1ac762594:;
					{
						__jule_func_result = _1db94e499_floatFmtDotp(_37112_txt, _38013_i);
						return __jule_func_result;;
					}
				}
				else if (_1db95108e_isFloatFmtDotfp(_37112_txt, _38013_i)) {
					_case_begin_1ac76261b:;
					{
						__jule_func_result = _1db94e158_floatFmtDotfp(_37112_txt, _38013_i);
						return __jule_func_result;;
					}
				}
				else if (_1db9505bb_isFloatFmtP(_38313_b, _38013_i)) {
					_case_begin_1ac762693:;
					{
						__jule_func_result = _1db94d9c6_floatFmtP(_37112_txt, _38013_i);
						return __jule_func_result;;
					}
				}
				else if (_1db95090c_isFloatFmtDotnp(_37112_txt, _38013_i)) {
					_case_begin_1ac76271a:;
					{
						__jule_func_result = _1db94dd17_floatFmtDotnp(_37112_txt, _38013_i);
						return __jule_func_result;;
					}
				}
				else if (((_38313_b != '_') && (!(_1db94910e_IsHex(_38313_b))))) {
					_case_begin_1ac762792:;
					{
						goto _iter_end_1ac7617d5;
					}
				}
				_match_end_1ac7624a6:;
			};
		}
	_iter_next_1ac7617d5:;
	}
	_iter_end_1ac7617d5:;;
	if ((_38013_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_37112_txt)).slice(0LL, _38013_i));
	return __jule_func_result;;
}



inline jule::Str _1db951ac8_hexEscape(jule::Slice<jule::U8>* _40415_txt, jule::I64 _40428_n) {
	jule::Str __jule_func_result;
	if (((*(_40415_txt)).len() < _40428_n)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _41013_i = 2LL;;
	for (; (_41013_i < _40428_n); (_41013_i)++) {
		{
			if ((!(_1db94910e_IsHex((*(_40415_txt))[_41013_i])))) {
				return __jule_func_result;;
			};
		}
	_iter_next_1ac764e6a:;
	}
	_iter_end_1ac764e6a:;;
	__jule_func_result=static_cast<jule::Str>((*(_40415_txt)).slice(0LL, _40428_n));
	return __jule_func_result;;
}



inline jule::Str _1db951d70_bigUnicodePointEscape(jule::Slice<jule::U8>* _42227_txt) {
	return _1db951ac8_hexEscape(_42227_txt, 10LL);;
}



inline jule::Str _1db952139_littleUnicodePointEscape(jule::Slice<jule::U8>* _42730_txt) {
	return _1db951ac8_hexEscape(_42730_txt, 6LL);;
}



inline jule::Str _1db9522e3_hexByteEscape(jule::Slice<jule::U8>* _43219_txt) {
	return _1db951ac8_hexEscape(_43219_txt, 4LL);;
}



inline jule::Str _1db952579_byteEscape(jule::Slice<jule::U8>* _43716_txt) {
	jule::Str __jule_func_result;
	if (((*(_43716_txt)).len() < 4LL)) {
		return __jule_func_result;;
	};
	if ((((!(_1db948d67_IsOctal((*(_43716_txt))[1LL]))) || (!(_1db948d67_IsOctal((*(_43716_txt))[2LL])))) || (!(_1db948d67_IsOctal((*(_43716_txt))[3LL]))))) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_43716_txt)).slice(0LL, 4LL));
	return __jule_func_result;;
}



inline jule::Slice<_1d9d938bd_Log> _1db957073_Lex(jule::Ptr<_1db94a198_File> _82612_f, jule::I64 _82622_mode) {
	if ((_82612_f == nullptr)) {
		return nullptr;;
	};
	_1db952c61_lex _83113_lex = _1db952c61_lex{._field_mode=_82622_mode, ._field_file=_82612_f, ._field_pos=0LL, ._field_row=-1LL, };;
	_1db955802_newLine(&_83113_lex);
	_1db953800_lex(&_83113_lex);
	if ((_83113_lex._field_errors.len() > 0LL)) {
		return _83113_lex._field_errors;;
	};
	_82612_f.get()._field_Tokens=_83113_lex._field_tokens;
	return nullptr;;
}



inline jule::I64 _1dc5567ed_LeadingZeros64(jule::U64 _6119_x) {
	return static_cast<jule::I64>((64LL - _1dc55dc78_Len64(_6119_x)));;
}



inline jule::I64 _1dc557733_TrailingZeros(jule::U64 _8318_x) {
	;
	return static_cast<jule::I64>(_1dc5583c1_TrailingZeros64(static_cast<jule::U64>(static_cast<jule::U64>(_8318_x))));;
}



inline jule::I64 _1dc558129_TrailingZeros32(jule::U32 _10520_x) {
	if ((_10520_x == 0LLU)) {
		return 32LL;;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_1dc556e08__DE_BRUIJN32_TAB[static_cast<jule::I64>((((_10520_x & (-(_10520_x))) * 125613361LLU) >> 27LLU))]));;
}



inline jule::I64 _1dc5583c1_TrailingZeros64(jule::U64 _11420_x) {
	if ((_11420_x == 0LLU)) {
		return 64LL;;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_1dc5574be__DE_BRUIJN64_TAB[static_cast<jule::I64>((((_11420_x & (-(_11420_x))) * 285870213051353865LLU) >> 58LLU))]));;
}



inline jule::I64 _1dc55d9d1_Len32(jule::U32 _35214_x) {
	jule::I64 __jule_func_result = 0;
	if ((_35214_x >= 65536LLU)) {
		_35214_x>>=16LLU;
		__jule_func_result=16LL;
	};
	if ((_35214_x >= 256LLU)) {
		_35214_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = static_cast<jule::I64>((__jule_func_result + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_35214_x)])));
	return __jule_func_result;;
}



inline jule::I64 _1dc55dc78_Len64(jule::U64 _36614_x) {
	jule::I64 __jule_func_result = 0;
	if ((_36614_x >= 4294967296LLU)) {
		_36614_x>>=32LLU;
		__jule_func_result=32LL;
	};
	if ((_36614_x >= 65536LLU)) {
		_36614_x>>=16LLU;
		__jule_func_result+=16LL;
	};
	if ((_36614_x >= 256LLU)) {
		_36614_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = static_cast<jule::I64>((__jule_func_result + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_36614_x)])));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1dc55e938_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0=static_cast<jule::U64>(((_41510_x + _41518_y) + _41526_carry));
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>((((_41510_x & _41518_y) | ((_41510_x | _41518_y) & (~(__jule_func_result.__jule_result_arg0)))) >> 63LLU));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1dc5610bb_Mul64(jule::U64 _49910_x, jule::U64 _49918_y) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::U64 _5019_x0 = (_49910_x & 4294967295LLU);;
	jule::U64 _5029_x1 = (_49910_x >> 32LLU);;
	jule::U64 _5039_y0 = (_49918_y & 4294967295LLU);;
	jule::U64 _5049_y1 = (_49918_y >> 32LLU);;
	jule::U64 _5059_w0 = (_5019_x0 * _5039_y0);;
	jule::U64 _5069_t = ((_5029_x1 * _5039_y0) + (_5059_w0 >> 32LLU));;
	jule::U64 _50713_w1 = (_5069_t & 4294967295LLU);;
	jule::U64 _5089_w2 = (_5069_t >> 32LLU);;
	_50713_w1+=(_5019_x0 * _5049_y1);
	__jule_func_result.__jule_result_arg0=static_cast<jule::U64>((((_5029_x1 * _5049_y1) + _5089_w2) + (_50713_w1 >> 32LLU)));
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>((_49910_x * _49918_y));
	return __jule_func_result;;
}



inline jule::U32 _1dc483472_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));;
}



inline jule::F32 _1dc48375d_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));;
}



inline jule::U64 _1dc483a05_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));;
}



inline jule::F64 _1dc483d24_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));;
}



inline __jule_tuple_f64__jule_tuple_int _1dc486310_Frexp(jule::F64 _4714_f) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_1ac89ac1b:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		else if (_1dc568942_IsInf(_4714_f, 0LL) || _1dc56838c_IsNaN(_4714_f)) {
			_case_begin_1ac89ac93:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		_match_end_1ac89ab0b:;
	};
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1dc568bd9_normalize(_4714_f);
		_4714_f = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5613_x = _1dc483a05_F64Bits(_4714_f);;
	__jule_func_result.__jule_result_arg1+=((static_cast<jule::I64>(((_5613_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_5613_x=static_cast<jule::U64>((_5613_x & 9227875636482146303LLU));
	_5613_x|=4602678819172646912LLU;
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_1dc483d24_F64FromBits(_5613_x));
	return __jule_func_result;;
}



inline jule::F64 _1dc5680a1_NaN(void) {
	return static_cast<jule::F64>(_1dc483d24_F64FromBits(9221120237041090561LLU));;
}



inline jule::Bool _1dc56838c_IsNaN(jule::F64 _5210_f) {
	return (_5210_f != _5210_f);;
}



inline jule::F64 _1dc568634_Inf(jule::I64 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return static_cast<jule::F64>(_1dc483d24_F64FromBits(9218868437227405312LLU));;
	};
	return static_cast<jule::F64>(_1dc483d24_F64FromBits(18442240474082181120LLU));;
}



inline jule::Bool _1dc568942_IsInf(jule::F64 _7210_f, jule::I64 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));;
}



inline __jule_tuple_f64__jule_tuple_int _1dc568bd9_normalize(jule::F64 _8214_x) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	if ((_1dc56ae61_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>((_8214_x * 4503599627370496LLU));
		__jule_func_result.__jule_result_arg1 = -52LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _8214_x;
	__jule_func_result.__jule_result_arg1 = 0LL;
	return __jule_func_result;;
}



inline jule::F64 _1dc56a5c0_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_1dc56838c_IsNaN(_1118_x) || _1dc568942_IsInf(_1118_x, 1LL)) {
			_case_begin_1ac8dbd6c:;
			{
				return _1118_x;;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_1ac8dbde4:;
			{
				return static_cast<jule::F64>(_1dc5680a1_NaN());;
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_1ac8dbe6b:;
			{
				return static_cast<jule::F64>(_1dc568634_Inf(-1LL));;
			}
		}
		_match_end_1ac8dbca1:;
	};
	jule::F64 _13314_f1 = 0;;
	jule::I64 _13322_ki = 0;;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1dc486310_Frexp(_1118_x);
		_13314_f1 = __jule_assign_result.__jule_result_arg0;
		_13322_ki = __jule_assign_result.__jule_result_arg1;
	});
	if ((_13314_f1 < 0.7071067811865476)) {
		_13314_f1*=2LL;
		(_13322_ki)--;
	};
	jule::F64 _1389_f = (_13314_f1 - 1LL);;
	jule::F64 _1399_k = static_cast<jule::F64>(_13322_ki);;
	jule::F64 _1429_s = jule::div(_1389_f,(2LL + _1389_f));;
	jule::F64 _1439_s2 = (_1429_s * _1429_s);;
	jule::F64 _1449_s4 = (_1439_s2 * _1439_s2);;
	jule::F64 _1459_t1 = (_1439_s2 * (0.6666666666666735 + (_1449_s4 * (0.2857142874366239 + (_1449_s4 * (0.1818357216161805 + (_1449_s4 * 0.14798198605116586)))))));;
	jule::F64 _1469_t2 = (_1449_s4 * (0.3999999999940942 + (_1449_s4 * (0.22222198432149784 + (_1449_s4 * 0.15313837699209373)))));;
	jule::F64 _1479_R = (_1459_t1 + _1469_t2);;
	jule::F64 _1489_hfsq = ((0.5 * _1389_f) * _1389_f);;
	return static_cast<jule::F64>(((_1399_k * 0.6931471803691238) - ((_1489_hfsq - ((_1429_s * (_1489_hfsq + _1479_R)) + (_1399_k * 0.00000000019082149292705877))) - _1389_f)));;
}



inline jule::F64 _1dc56ae61_Abs(jule::F64 _438_x) {
	return static_cast<jule::F64>(_1dc483d24_F64FromBits(static_cast<jule::U64>((_1dc483a05_F64Bits(_438_x) & 9223372036854775807LLU))));;
}



inline __jule_tuple_f64__jule_tuple_f64 _1dc5728a2_Modf(jule::F64 _449_f) {
	__jule_tuple_f64__jule_tuple_f64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::F64 _469_absF = _1dc56ae61_Abs(_449_f);;
	jule::F64 _4713_i = 0LL;;
	if ((_469_absF > 4503599627370496LL)) {
		_4713_i=_449_f;
	} else {
		_4713_i=static_cast<jule::F64>((_469_absF + 4503599627370496LL));
		_4713_i-=4503599627370496LL;
		while ((_4713_i > _469_absF)) {
			{
				(_4713_i)--;
			}
		_iter_next_1ac4e2434:;
		}
		_iter_end_1ac4e2434:;;
		if ((_449_f < 0LL)) {
			_4713_i=static_cast<jule::F64>((-(_4713_i)));
		};
	};
	__jule_func_result.__jule_result_arg0 = _4713_i;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::F64>((_449_f - _4713_i));
	return __jule_func_result;;
}



inline jule::F64 _1dc573166_Log2(jule::F64 _449_x) {
	jule::F64 _4510_frac = 0;;
	jule::I64 _4516_exp = 0;;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1dc486310_Frexp(_449_x);
		_4510_frac = __jule_assign_result.__jule_result_arg0;
		_4516_exp = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4510_frac == 0.5)) {
		return static_cast<jule::F64>(static_cast<jule::F64>((_4516_exp - 1LL)));;
	};
	return static_cast<jule::F64>(((_1dc56a5c0_Log(_4510_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4516_exp)));;
}



inline jule::Str _1dc59bdc6_FmtFloat(jule::F64 _7813_f, jule::U8 _7821_fmt, jule::I64 _7832_prec, jule::I64 _7843_bit_size) {
	return static_cast<jule::Str>(_1dc59c448_genericFtoa(jule::Slice<jule::U8>::alloc(0LL, _1dc5a04d4_max(static_cast<jule::I64>((_7832_prec + 4LL)), 24LL), 0), _7813_f, _7821_fmt, _7832_prec, _7843_bit_size));;
}



inline jule::Slice<jule::U8> _1dc59c448_genericFtoa(jule::Slice<jule::U8> _8220_dst, jule::F64 _8233_val, jule::U8 _8243_fmt, jule::I64 _8258_prec, jule::I64 _8269_bit_size) {
	jule::U64 _8313_bits = 0LLU;;
	jule::Ptr<_1dc59ac60_floatInfo> _8413_flt = nullptr;;
	{
		auto &_match_expr{ _8269_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_1acaa0bce:;
			{
				_8313_bits=static_cast<jule::U64>(static_cast<jule::U64>(_1dc483472_F32Bits(static_cast<jule::F32>(static_cast<jule::F32>(_8233_val)))));
				_8413_flt=((jule::Ptr<_1dc59ac60_floatInfo>)((&(_1dc59b128_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1acaa0daa:;
			{
				_8313_bits=static_cast<jule::U64>(_1dc483a05_F64Bits(_8233_val));
				_8413_flt=((jule::Ptr<_1dc59ac60_floatInfo>)((&(_1dc59b436_f64info))));
			}
		}
		else {
			_case_begin_1acaa05b3:;
			{
				jule::panic(jule::Str("std::conv: illegal bit_size", 27) + jule::Str("\nlocation: std/conv/ftoa.jule:93:9"));;
			}
		}
		_match_end_1aca9e084:;
	};
	jule::Bool _969_neg = ((_8313_bits >> (_8413_flt.get()._field_expbits + _8413_flt.get()._field_mantbits)) != 0LLU);;
	jule::I64 _9713_exp = (static_cast<jule::I64>((_8313_bits >> _8413_flt.get()._field_mantbits)) & static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)));;
	jule::U64 _9813_mant = (_8313_bits & ((static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits) - 1LLU));;
	{
		auto &_match_expr{ _9713_exp };
		
		if (_match_expr == static_cast<jule::I64>(static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)))) {
			_case_begin_1acaa4496:;
			{
				{
					
					if ((_9813_mant != 0LLU)) {
						_case_begin_1acaa68b6:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'n','a','n'}));;
						}
					}
					else if (_969_neg) {
						_case_begin_1acaa6a5e:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'-','i','n','f'}));;
						}
					}
					else {
						_case_begin_1acaa595e:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'+','i','n','f'}));;
						}
					}
					_match_end_1acaa5893:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1acaa5002:;
			{
				(_9713_exp)++;
			}
		}
		else {
			_case_begin_1acaa0e21:;
			{
				_9813_mant|=(static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits);
			}
		}
		_match_end_1acaa4441:;
	};
	_9713_exp+=_8413_flt.get()._field_bias;
	if ((_8243_fmt == 'b')) {
		return _1dc59e6d1_fmtB(_8220_dst, _969_neg, _9813_mant, _9713_exp, &((*(_8413_flt))));;
	};
	if (((_8243_fmt == 'x') || (_8243_fmt == 'X'))) {
		return _1dc59ed52_fmtX(_8220_dst, _8258_prec, _8243_fmt, _969_neg, _9813_mant, _9713_exp, &((*(_8413_flt))));;
	};
	;
	_1dc59b887_decimalSlice _13213_digs = _1dc59b887_decimalSlice{};;
	jule::Bool _13313_ok = false;;
	jule::Bool _1359_shortest = (_8258_prec < 0LL);;
	if (_1359_shortest) {
		_13213_digs._field_d=jule::Slice<jule::U8>::alloc(32LL, 32LL, 0);
		_1dc5a9c80_ryuFtoaShortest(&(_13213_digs), _9813_mant, static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))), &((*(_8413_flt))));
		_13313_ok=true;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1acaaa678:;
				{
					_8258_prec=static_cast<jule::I64>(_1dc5a04d4_max(static_cast<jule::I64>((_13213_digs._field_nd - 1LL)), 0LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1acaaa700:;
				{
					_8258_prec=static_cast<jule::I64>(_1dc5a04d4_max(static_cast<jule::I64>((_13213_digs._field_nd - _13213_digs._field_dp)), 0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1acaaa788:;
				{
					_8258_prec=_13213_digs._field_nd;
				}
			}
			_match_end_1acaa98ec:;
		};
	} else if ((_8243_fmt != 'f')) {
		jule::I64 _15217_digits = _8258_prec;;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1acaaccb8:;
				{
					(_15217_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1acaac36c:;
				{
					if ((_8258_prec == 0LL)) {
						_8258_prec=1LL;
					};
					_15217_digits=_8258_prec;
				}
			}
			else {
				_case_begin_1acaac68b:;
				{
					_15217_digits=1LL;
				}
			}
			_match_end_1acaac7bd:;
		};
		if (((_8269_bit_size == 32LL) && (_15217_digits <= 9LL))) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_1dc5a8ad6_ryuFtoaFixed32(&(_13213_digs), static_cast<jule::U32>(static_cast<jule::U32>(_9813_mant)), static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))), _15217_digits);
			_13313_ok=true;
		} else if ((_15217_digits <= 18LL)) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_1dc5a9026_ryuFtoaFixed64(&(_13213_digs), _9813_mant, static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))), _15217_digits);
			_13313_ok=true;
		};
	};
	if ((!(_13313_ok))) {
		return _1dc59cab9_bigFtoa(_8220_dst, _8258_prec, _8243_fmt, _969_neg, _9813_mant, _9713_exp, &((*(_8413_flt))));;
	};
	return _1dc59d218_fmtDigits(_8220_dst, _1359_shortest, _969_neg, _13213_digs, _8258_prec, _8243_fmt);;
}



inline jule::Slice<jule::U8> _1dc59cab9_bigFtoa(jule::Slice<jule::U8> _18216_dst, jule::I64 _18233_prec, jule::U8 _18244_fmt, jule::Bool _18255_neg, jule::U64 _1835_mant, jule::I64 _18316_exp, _1dc59ac60_floatInfo* _18327_flt) {
	_1dc5ad778_decimal _18413_d = _1dc5ad778_decimal{};;
	_1dc5adb52_assign(&_18413_d, _1835_mant);
	_1dc5addc7_shift(&_18413_d, static_cast<jule::I64>((_18316_exp - static_cast<jule::I64>((*(_18327_flt))._field_mantbits))));
	_1dc59b887_decimalSlice _18713_digs = _1dc59b887_decimalSlice{};;
	jule::Bool _1889_shortest = (_18233_prec < 0LL);;
	if (_1889_shortest) {
		_1dc59d614_roundShortest(&(_18413_d), _1835_mant, _18316_exp, _18327_flt);
		_18713_digs=_1dc59b887_decimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1acab286c:;
				{
					_18233_prec=static_cast<jule::I64>((_18713_digs._field_nd - 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1acab4e9b:;
				{
					_18233_prec=static_cast<jule::I64>(_1dc5a04d4_max(static_cast<jule::I64>((_18713_digs._field_nd - _18713_digs._field_dp)), 0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1acab5056:;
				{
					_18233_prec=_18713_digs._field_nd;
				}
			}
			_match_end_1acab4c8c:;
		};
	} else {
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1acab6893:;
				{
					_1dc5ae647_round(&_18413_d, static_cast<jule::I64>((_18233_prec + 1LL)));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1acab691a:;
				{
					_1dc5ae647_round(&_18413_d, static_cast<jule::I64>((_18413_d._field_dp + _18233_prec)));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1acab6992:;
				{
					if ((_18233_prec == 0LL)) {
						_18233_prec=1LL;
					};
					_1dc5ae647_round(&_18413_d, _18233_prec);
				}
			}
			_match_end_1acab6783:;
		};
		_18713_digs=_1dc59b887_decimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
	};
	return _1dc59d218_fmtDigits(_18216_dst, _1889_shortest, _18255_neg, _18713_digs, _18233_prec, _18244_fmt);;
}



inline jule::Slice<jule::U8> _1dc59d218_fmtDigits(jule::Slice<jule::U8> _21918_dst, jule::Bool _21931_shortest, jule::Bool _21947_neg, _1dc59b887_decimalSlice _2205_digs, jule::I64 _22029_prec, jule::U8 _22040_fmt) {
	{
		auto &_match_expr{ _22040_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1acaba05b:;
			{
				return _1dc59db42_fmtE(_21918_dst, _21947_neg, _2205_digs, _22029_prec, _22040_fmt);;
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1acaba0c2:;
			{
				return _1dc59e0c6_fmtF(_21918_dst, _21947_neg, _2205_digs, _22029_prec);;
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1acaba138:;
			{
				jule::I64 _22817_eprec = _22029_prec;;
				if (((_22817_eprec > _2205_digs._field_nd) && (_2205_digs._field_nd >= _2205_digs._field_dp))) {
					_22817_eprec=_2205_digs._field_nd;
				};
				if (_21931_shortest) {
					_22817_eprec=6LL;
				};
				jule::I64 _23813_exp = (_2205_digs._field_dp - 1LL);;
				if (((_23813_exp < -4LL) || (_23813_exp >= _22817_eprec))) {
					if ((_22029_prec > _2205_digs._field_nd)) {
						_22029_prec=_2205_digs._field_nd;
					};
					return _1dc59db42_fmtE(_21918_dst, _21947_neg, _2205_digs, static_cast<jule::I64>((_22029_prec - 1LL)), static_cast<jule::U8>(((_22040_fmt + 'e') - 'g')));;
				};
				if ((_22029_prec > _2205_digs._field_dp)) {
					_22029_prec=_2205_digs._field_nd;
				};
				return _1dc59e0c6_fmtF(_21918_dst, _21947_neg, _2205_digs, static_cast<jule::I64>(_1dc5a04d4_max(static_cast<jule::I64>((_22029_prec - _2205_digs._field_dp)), 0LL)));;
			}
		}
		_match_end_1acab9e18:;
	};
	return jule::append(_21918_dst,jule::Slice<jule::U8>::make({'%',_22040_fmt}));;
}



inline void _1dc59d614_roundShortest(_1dc5ad778_decimal* _25723_d, jule::U64 _25735_mant, jule::I64 _25746_exp, _1dc59ac60_floatInfo* _25757_flt) {
	if ((_25735_mant == 0LLU)) {
		(*(_25723_d))._field_nd=0LL;
		return;;
	};
	jule::I64 _2789_minexp = ((*(_25757_flt))._field_bias + 1LL);;
	if (((_25746_exp > _2789_minexp) && ((332LL * ((*(_25723_d))._field_dp - (*(_25723_d))._field_nd)) >= (100LL * (_25746_exp - static_cast<jule::I64>((*(_25757_flt))._field_mantbits)))))) {
		return;;
	};
	_1dc5ad778_decimal _28713_upper = _1dc5ad778_decimal{};;
	_1dc5adb52_assign(&_28713_upper, static_cast<jule::U64>(((_25735_mant << 1LLU) + 1LLU)));
	_1dc5addc7_shift(&_28713_upper, static_cast<jule::I64>(((_25746_exp - static_cast<jule::I64>((*(_25757_flt))._field_mantbits)) - 1LL)));
	jule::U64 _29713_mantlo = 0LLU;;
	jule::I64 _29813_explo = 0LL;;
	if (((_25735_mant > (1LLU << (*(_25757_flt))._field_mantbits)) || (_25746_exp == _2789_minexp))) {
		_29713_mantlo=static_cast<jule::U64>((_25735_mant - 1LLU));
		_29813_explo=_25746_exp;
	} else {
		_29713_mantlo=static_cast<jule::U64>(((_25735_mant << 1LLU) - 1LLU));
		_29813_explo=static_cast<jule::I64>((_25746_exp - 1LL));
	};
	_1dc5ad778_decimal _30613_lower = _1dc5ad778_decimal{};;
	_1dc5adb52_assign(&_30613_lower, static_cast<jule::U64>(((_29713_mantlo << 1LLU) + 1LLU)));
	_1dc5addc7_shift(&_30613_lower, static_cast<jule::I64>(((_29813_explo - static_cast<jule::I64>((*(_25757_flt))._field_mantbits)) - 1LL)));
	jule::Bool _3139_inclusive = ((_25735_mant & 1LL) == 0LLU);;
	jule::U8 _32613_upperdelta = 0LLU;;
	jule::I64 _33013_ui = 0LL;;
	for (; ; (_33013_ui)++) {
		{
			jule::I64 _33513_mi = ((_33013_ui - _28713_upper._field_dp) + (*(_25723_d))._field_dp);;
			if ((_33513_mi >= (*(_25723_d))._field_nd)) {
				goto _iter_end_1acac7a91;
			};
			jule::I64 _33913_li = ((_33013_ui - _28713_upper._field_dp) + _30613_lower._field_dp);;
			jule::U8 _34017_l = static_cast<jule::U8>(48LLU);;
			if (((_33913_li >= 0LL) && (_33913_li < _30613_lower._field_nd))) {
				_34017_l=_30613_lower._field_d[_33913_li];
			};
			jule::U8 _34417_m = static_cast<jule::U8>(48LLU);;
			if ((_33513_mi >= 0LL)) {
				_34417_m=(*(_25723_d))._field_d[_33513_mi];
			};
			jule::U8 _34817_u = static_cast<jule::U8>(48LLU);;
			if ((_33013_ui < _28713_upper._field_nd)) {
				_34817_u=_28713_upper._field_d[_33013_ui];
			};
			jule::Bool _35613_okdown = ((_34017_l != _34417_m) || (_3139_inclusive && ((_33913_li + 1LL) == _30613_lower._field_nd)));;
			{
				
				if (((_32613_upperdelta == 0LLU) && ((_34417_m + 1LLU) < _34817_u))) {
					_case_begin_1acaccb40:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				else if (((_32613_upperdelta == 0LLU) && (_34417_m != _34817_u))) {
					_case_begin_1acaccbb7:;
					{
						_32613_upperdelta=1LLU;
					}
				}
				else if (((_32613_upperdelta == 1LLU) && ((_34417_m != '9') || (_34817_u != '0')))) {
					_case_begin_1acaccc3e:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				_match_end_1acacca74:;
			};
			jule::Bool _37713_okup = ((_32613_upperdelta > 0LLU) && ((_3139_inclusive || (_32613_upperdelta > 1LLU)) || ((_33013_ui + 1LL) < _28713_upper._field_nd)));;
			{
				
				if ((_35613_okdown && _37713_okup)) {
					_case_begin_1acad0e1d:;
					{
						_1dc5ae647_round(_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_35613_okdown) {
					_case_begin_1acad0e95:;
					{
						_1dc5ae14c_roundDown(_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_37713_okup) {
					_case_begin_1acad101c:;
					{
						_1dc5ae3c2_roundUp(_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				_match_end_1acad0d52:;
			};
		}
	_iter_next_1acac7a91:;
	}
	_iter_end_1acac7a91:;;
}



inline jule::Slice<jule::U8> _1dc59db42_fmtE(jule::Slice<jule::U8> _39613_dst, jule::Bool _39626_neg, _1dc59b887_decimalSlice _39637_d, jule::I64 _39654_prec, jule::U8 _39665_fmt) {
	if (_39626_neg) {
		_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('-');;
	};
	jule::U8 _40313_ch = '0';;
	if ((_39637_d._field_nd != 0LL)) {
		_40313_ch=_39637_d._field_d[0LL];
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_40313_ch);;
	if ((_39654_prec > 0LL)) {
		_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('.');;
		jule::I64 _41217_i = 1LL;;
		jule::I64 _41313_m = _1dc5a0193_min(_39637_d._field_nd, static_cast<jule::I64>((_39654_prec + 1LL)));;
		if ((_41217_i < _41313_m)) {
			_39613_dst=jule::append(_39613_dst,_39637_d._field_d.slice(_41217_i, _41313_m));
			_41217_i=_41313_m;
		};
		for (; (_41217_i <= _39654_prec); (_41217_i)++) {
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('0');;
			}
		_iter_next_1acad6198:;
		}
		_iter_end_1acad6198:;;
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_39665_fmt);;
	jule::I64 _42513_exp = (_39637_d._field_dp - 1LL);;
	if ((_39637_d._field_nd == 0LL)) {
		_42513_exp=0LL;
	};
	if ((_42513_exp < 0LL)) {
		_40313_ch='-';
		_42513_exp=static_cast<jule::I64>((-(_42513_exp)));
	} else {
		_40313_ch='+';
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_40313_ch);;
	{
		
		if ((_42513_exp < 10LL)) {
			_case_begin_1acad8112:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,2);_39613_dst.__push('0');_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(_42513_exp) + '0')));;
			}
		}
		else if ((_42513_exp < 100LL)) {
			_case_begin_1acad8002:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,2);_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 10LL)) + '0')));_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_1acad7c5a:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,3);_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 100LL)) + '0')));_39613_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_42513_exp / 10LL)) % 10LL) + '0')));_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		_match_end_1acad7c05:;
	};
	return _39613_dst;;
}



inline jule::Slice<jule::U8> _1dc59e0c6_fmtF(jule::Slice<jule::U8> _45113_dst, jule::Bool _45126_neg, _1dc59b887_decimalSlice _45137_d, jule::I64 _45154_prec) {
	if (_45126_neg) {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('-');;
	};
	if ((_45137_d._field_dp > 0LL)) {
		jule::I64 _45917_m = _1dc5a0193_min(_45137_d._field_nd, _45137_d._field_dp);;
		_45113_dst=jule::append(_45113_dst,_45137_d._field_d.slice(0LL, _45917_m));
		for (; (_45917_m < _45137_d._field_dp); (_45917_m)++) {
			{
				_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('0');;
			}
		_iter_next_1acadc8ec:;
		}
		_iter_end_1acadc8ec:;;
	} else {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('0');;
	};
	if ((_45154_prec > 0LL)) {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('.');;
		jule::I64 _47017_i = 0LL;;
		for (; (_47017_i < _45154_prec); (_47017_i)++) {
			{
				jule::U8 _47221_ch = static_cast<jule::U8>(48LLU);;
				jule::I64 _47317_j = (_45137_d._field_dp + _47017_i);;
				if (((0LL <= _47317_j) && (_47317_j < _45137_d._field_nd))) {
					_47221_ch=_45137_d._field_d[_47317_j];
				};
				_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push(_47221_ch);;
			}
		_iter_next_1acadd6ab:;
		}
		_iter_end_1acadd6ab:;;
	};
	return _45113_dst;;
}



inline jule::Slice<jule::U8> _1dc59e6d1_fmtB(jule::Slice<jule::U8> _48413_dst, jule::Bool _48426_neg, jule::U64 _48437_mant, jule::I64 _48452_exp, _1dc59ac60_floatInfo* _48463_flt) {
	if (_48426_neg) {
		_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('-');;
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1dc5b3580_fmtBits(_48413_dst, _48437_mant, 10LL, false, true);
		_48413_dst = __jule_assign_result.__jule_result_arg0;
	});
	_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('p');;
	_48452_exp-=static_cast<jule::I64>((*(_48463_flt))._field_mantbits);
	if ((_48452_exp >= 0LL)) {
		_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('+');;
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1dc5b3580_fmtBits(_48413_dst, static_cast<jule::U64>(static_cast<jule::U64>(_48452_exp)), 10LL, (_48452_exp < 0LL), true);
		_48413_dst = __jule_assign_result.__jule_result_arg0;
	});
	return _48413_dst;;
}



inline jule::Slice<jule::U8> _1dc59ed52_fmtX(jule::Slice<jule::U8> _50613_dst, jule::I64 _50626_prec, jule::U8 _50637_fmt, jule::Bool _50648_neg, jule::U64 _5079_mant, jule::I64 _50724_exp, _1dc59ac60_floatInfo* _50735_flt) {
	if ((_5079_mant == 0LLU)) {
		_50724_exp=0LL;
	};
	_5079_mant<<=(60LLU - (*(_50735_flt))._field_mantbits);
	while (((_5079_mant != 0LLU) && ((_5079_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5079_mant<<=1LLU;
			(_50724_exp)--;
		}
	_iter_next_1ac98d7d1:;
	}
	_iter_end_1ac98d7d1:;;
	if (((_50626_prec >= 0LL) && (_50626_prec < 15LL))) {
		jule::U64 _52113_shift = static_cast<jule::U64>((_50626_prec << 2LLU));;
		jule::U64 _52213_extra = ((_5079_mant << _52113_shift) & 1152921504606846975LLU);;
		_5079_mant>>=(60LLU - _52113_shift);
		if (((_52213_extra | (_5079_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5079_mant)++;
		};
		_5079_mant<<=(60LLU - _52113_shift);
		if (((_5079_mant & 2305843009213693952LLU) != 0LLU)) {
			_5079_mant>>=1LLU;
			(_50724_exp)++;
		};
	};
	jule::Str _53513_hex = jule::Str();;
	if ((_50637_fmt == 'X')) {
		_53513_hex=jule::Str("0123456789ABCDEF", 16);
	} else {
		_53513_hex=jule::Str("0123456789abcdef", 16);
	};
	if (_50648_neg) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('-');;
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,3);_50613_dst.__push('0');_50613_dst.__push(_50637_fmt);_50613_dst.__push(static_cast<jule::U8>(('0' + static_cast<jule::U8>(((_5079_mant >> 60LLU) & 1LLU)))));;
	_5079_mant<<=4LLU;
	if (((_50626_prec < 0LL) && (_5079_mant != 0LLU))) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('.');;
		while ((_5079_mant != 0LLU)) {
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_1ac99683e:;
		}
		_iter_end_1ac99683e:;;
	} else if ((_50626_prec > 0LL)) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('.');;
		jule::I64 _55817_i = 0LL;;
		for (; (_55817_i < _50626_prec); (_55817_i)++) {
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_1ac997ab5:;
		}
		_iter_end_1ac997ab5:;;
	};
	jule::U8 _56613_ch = static_cast<jule::U8>(80LLU);;
	if ((_50637_fmt == _1dc5a10ea_lower(_50637_fmt))) {
		_56613_ch='p';
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_56613_ch);;
	if ((_50724_exp < 0LL)) {
		_56613_ch='-';
		_50724_exp=static_cast<jule::I64>((-(_50724_exp)));
	} else {
		_56613_ch='+';
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_56613_ch);;
	{
		
		if ((_50724_exp < 100LL)) {
			_case_begin_1ac99abc8:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,2);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else if ((_50724_exp < 1000LL)) {
			_case_begin_1ac99ac3e:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,3);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 100LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_1ac99a557:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,4);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 1000LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_50724_exp / 100LL)) % 10LL) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		_match_end_1ac99a502:;
	};
	return _50613_dst;;
}



inline jule::I64 _1dc5a0193_min(jule::I64 _5918_a, jule::I64 _59116_b) {
	if ((_5918_a < _59116_b)) {
		return _5918_a;;
	};
	return _59116_b;;
}



inline jule::I64 _1dc5a04d4_max(jule::I64 _5988_a, jule::I64 _59816_b) {
	if ((_5988_a > _59816_b)) {
		return _5988_a;;
	};
	return _59816_b;;
}



inline jule::U8 _1dc5a10ea_lower(jule::U8 _4710_c) {
	return static_cast<jule::U8>((_4710_c | 32LL));;
}



inline __jule_tuple_u64__jule_tuple__1dbbeddec_ConvError _1dc5a1529_parseUint(jule::Str _5118_s, jule::I64 _5130_base, jule::I64 _5145_bitSize) {
	__jule_tuple_u64__jule_tuple__1dbbeddec_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	if (_5118_s.empty()) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	{
		
		if (((2LL <= _5130_base) && (_5130_base <= 36LL))) {
			_case_begin_1ac9a232d:;
		}
		else if ((_5130_base == 0LL)) {
			_case_begin_1ac9a221d:;
			{
				_5130_base=10LL;
				if ((_5118_s[0LL] == '0')) {
					{
						
						if (((_5118_s.len() >= 3LL) && (_1dc5a10ea_lower(_5118_s[1LL]) == 'b'))) {
							_case_begin_1ac9a4143:;
							{
								_5130_base=2LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else if (((_5118_s.len() >= 3LL) && (_1dc5a10ea_lower(_5118_s[1LL]) == 'o'))) {
							_case_begin_1ac9a3e56:;
							{
								_5130_base=8LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else if (((_5118_s.len() >= 3LL) && (_1dc5a10ea_lower(_5118_s[1LL]) == 'x'))) {
							_case_begin_1ac9a3ebc:;
							{
								_5130_base=16LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1ac9a3ab0:;
							{
								_5130_base=8LL;
								(_5118_s).mut_slice(1LL);;
							}
						}
						_match_end_1ac9a39e4:;
					};
				};
			}
		}
		else {
			_case_begin_1ac9a152a:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(3LL);
				return __jule_func_result;;
			}
		}
		_match_end_1ac9a14b4:;
	};
	if ((_5145_bitSize == 0LL)) {
		_5145_bitSize=64LL;
	} else if (((_5145_bitSize < 0LL) || (_5145_bitSize > 64LL))) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(4LL);
		return __jule_func_result;;
	};
	jule::U64 _9013_cutoff = 0LLU;;
	{
		auto &_match_expr{ _5130_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1ac9a8d29:;
			{
				_9013_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1ac9a8444:;
			{
				_9013_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1ac9a871e:;
			{
				_9013_cutoff=static_cast<jule::U64>((jule::div(jule::MAX_U64,static_cast<jule::U64>(_5130_base)) + 1LLU));
			}
		}
		_match_end_1ac9a8598:;
	};
	jule::U64 _10013_maxVal = 0LLU;;
	{
		auto &_match_expr{ _5145_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1ac9a880c:;
			{
				_10013_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1ac9a9e6d:;
			{
				_10013_maxVal=jule::MAX_U64;
			}
		}
		_match_end_1ac9a8a4e:;
	};
	jule::U64 _10813_n = 0LLU;;
	{
		auto expr = &(_5118_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9ab07e:;
		if (it != expr_end) {
			jule::U8 _10912_c = *it;
			{
				jule::U8 _11017_d = 0LLU;;
				{
					
					if ((('0' <= _10912_c) && (_10912_c <= '9'))) {
						_case_begin_1ac9aa1d2:;
						{
							_11017_d=static_cast<jule::U8>((_10912_c - '0'));
						}
					}
					else if ((('a' <= _1dc5a10ea_lower(_10912_c)) && (_1dc5a10ea_lower(_10912_c) <= 'z'))) {
						_case_begin_1acb1cc7e:;
						{
							_11017_d=static_cast<jule::U8>(((_1dc5a10ea_lower(_10912_c) - 'a') + 10LLU));
						}
					}
					else if ((_10912_c == '_')) {
						_case_begin_1ac9abee7:;
						{
							goto _iter_next_1ac9ab07e;
						}
					}
					else {
						_case_begin_1ac9abe81:;
						{
							__jule_func_result.__jule_result_arg0 = 0LLU;
							__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
							return __jule_func_result;;
						}
					}
					_match_end_1ac9abe1a:;
				};
				if ((_11017_d >= static_cast<jule::U8>(_5130_base))) {
					__jule_func_result.__jule_result_arg0 = 0LLU;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
					return __jule_func_result;;
				};
				if ((_10813_n >= _9013_cutoff)) {
					__jule_func_result.__jule_result_arg0 = _10013_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_10813_n*=static_cast<jule::U64>(_5130_base);
				jule::U64 _13213_n1 = (_10813_n + static_cast<jule::U64>(_11017_d));;
				if (((_13213_n1 < _10813_n) || (_13213_n1 > _10013_maxVal))) {
					__jule_func_result.__jule_result_arg0 = _10013_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_10813_n=_13213_n1;
			}
			_iter_next_1ac9ab07e:;
			++it;
			goto _iter_begin_1ac9ab07e;
		}
		_iter_end_1ac9ab07e:;
	};
	__jule_func_result.__jule_result_arg0 = _10813_n;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(0LL);
	return __jule_func_result;;
}



inline jule::Exceptional<jule::U64> _1dc5a1914_ParseUint(jule::Str _14618_s, jule::I64 _14630_base, jule::I64 _14645_bit_size) {
	jule::U64 _14710_un = 0;;
	jule::I64 _14714_err = 0LL;;
	({
		__jule_tuple_u64__jule_tuple__1dbbeddec_ConvError __jule_assign_result = _1dc5a1529_parseUint(_14618_s, _14630_base, _14645_bit_size);
		_14710_un = __jule_assign_result.__jule_result_arg0;
		_14714_err = __jule_assign_result.__jule_result_arg1;
	});
	if ((_14714_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::U64>(jule::Any(_14714_err, &__jule_any_type0));
	};
	return jule::Exceptional<jule::U64>(jule::Any(), _14710_un);;
}



inline jule::Exceptional<jule::I64> _1dc5a1d76_ParseInt(jule::Str _17217_s, jule::I64 _17225_base, jule::I64 _17240_bitSize) {
	if (_17217_s.empty()) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0));
	};
	jule::Bool _17813_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_17813_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _18714_un = 0;;
	jule::I64 _18718_err = 0LL;;
	({
		__jule_tuple_u64__jule_tuple__1dbbeddec_ConvError __jule_assign_result = _1dc5a1529_parseUint(_17217_s, _17225_base, _17240_bitSize);
		_18714_un = __jule_assign_result.__jule_result_arg0;
		_18718_err = __jule_assign_result.__jule_result_arg1;
	});
	if (((_18718_err != static_cast<jule::I64>(0LL)) && (_18718_err != static_cast<jule::I64>(1LL)))) {
		return jule::Exceptional<jule::I64>(jule::Any(_18718_err, &__jule_any_type0));
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=64LL;
	};
	jule::U64 _1969_cutoff = static_cast<jule::U64>((1LL << static_cast<jule::U64>((_17240_bitSize - 1LL))));;
	if (((!(_17813_neg)) && (_18714_un >= _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0));
	};
	if ((_17813_neg && (_18714_un > _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0));
	};
	jule::I64 _20313_n = static_cast<jule::I64>(_18714_un);;
	if (_17813_neg) {
		_20313_n=static_cast<jule::I64>((-(_20313_n)));
	};
	return jule::Exceptional<jule::I64>(jule::Any(), _20313_n);;
}



inline __jule_tuple_f64__jule_tuple_bool _1dc5a298c_eiselLemire64(jule::U64 _4122_man, jule::I64 _4132_exp10, jule::Bool _4144_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_1dc483d24_F64FromBits(9223372036854775808LLU));
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _579_clz = _1dc5567ed_LeadingZeros64(_4122_man);;
	_4122_man<<=static_cast<jule::U64>(_579_clz);
	;
	jule::U64 _6013_retExp2 = (static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_579_clz));;
	jule::U64 _6314_xHi = 0;;
	jule::U64 _6323_xLo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1dc5610bb_Mul64(_4122_man, _1dc5a3806_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
		_6314_xHi = __jule_assign_result.__jule_result_arg0;
		_6323_xLo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_6314_xHi & 511LLU) == 511LLU) && ((_6323_xLo + _4122_man) < _4122_man))) {
		jule::U64 _6714_yHi = 0;;
		jule::U64 _6719_yLo = 0;;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1dc5610bb_Mul64(_4122_man, _1dc5a3806_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
			_6714_yHi = __jule_assign_result.__jule_result_arg0;
			_6719_yLo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _6818_mergedHi = 0;;
		jule::U64 _6828_mergedLo = 0;;
		({
			jule::U64 ___jule_assign_arg = _6314_xHi;
			jule::U64 _1___jule_assign_arg = (_6323_xLo + _6714_yHi);
			_6818_mergedHi = ___jule_assign_arg;
			_6828_mergedLo = _1___jule_assign_arg;
		});
		if ((_6828_mergedLo < _6323_xLo)) {
			(_6818_mergedHi)++;
		};
		if (((((_6818_mergedHi & 511LLU) == 511LLU) && ((_6828_mergedLo + 1LLU) == 0LLU)) && ((_6719_yLo + _4122_man) < _4122_man))) {
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _6818_mergedHi;
			jule::U64 _1___jule_assign_arg = _6828_mergedLo;
			_6314_xHi = ___jule_assign_arg;
			_6323_xLo = _1___jule_assign_arg;
		});
	};
	jule::U64 _799_msb = (_6314_xHi >> 63LLU);;
	jule::U64 _8013_retMantissa = (_6314_xHi >> (_799_msb + 9LLU));;
	_6013_retExp2-=(1LLU ^ _799_msb);
	if ((((_6323_xLo == 0LLU) && ((_6314_xHi & 511LLU) == 0LLU)) && ((_8013_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_8013_retMantissa+=(_8013_retMantissa & 1LLU);
	_8013_retMantissa>>=1LLU;
	if (((_8013_retMantissa >> 53LLU) > 0LLU)) {
		_8013_retMantissa>>=1LLU;
		_6013_retExp2+=1LLU;
	};
	if (((_6013_retExp2 - 1LLU) >= 2046LLU)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _10313_retBits = ((_6013_retExp2 << 52LLU) | (_8013_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_10313_retBits|=9223372036854775808LLU;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1dc483d24_F64FromBits(_10313_retBits));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1dc5a2d88_eiselLemire32(jule::U64 _11022_man, jule::I64 _11032_exp10, jule::Bool _11044_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_1dc48375d_F32FromBits(2147483648LLU));
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _1329_clz = _1dc5567ed_LeadingZeros64(_11022_man);;
	_11022_man<<=static_cast<jule::U64>(_1329_clz);
	;
	jule::U64 _13513_retExp2 = (static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1329_clz));;
	jule::U64 _13814_x_hi = 0;;
	jule::U64 _13824_x_lo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1dc5610bb_Mul64(_11022_man, _1dc5a3806_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
		_13814_x_hi = __jule_assign_result.__jule_result_arg0;
		_13824_x_lo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_13814_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13824_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _14214_y_hi = 0;;
		jule::U64 _14220_y_lo = 0;;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1dc5610bb_Mul64(_11022_man, _1dc5a3806_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
			_14214_y_hi = __jule_assign_result.__jule_result_arg0;
			_14220_y_lo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _14318_merged_hi = 0;;
		jule::U64 _14329_merged_lo = 0;;
		({
			jule::U64 ___jule_assign_arg = _13814_x_hi;
			jule::U64 _1___jule_assign_arg = (_13824_x_lo + _14214_y_hi);
			_14318_merged_hi = ___jule_assign_arg;
			_14329_merged_lo = _1___jule_assign_arg;
		});
		if ((_14329_merged_lo < _13824_x_lo)) {
			(_14318_merged_hi)++;
		};
		if (((((_14318_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14329_merged_lo + 1LLU) == 0LLU)) && ((_14220_y_lo + _11022_man) < _11022_man))) {
			__jule_func_result.__jule_result_arg0 = 0.0f;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _14318_merged_hi;
			jule::U64 _1___jule_assign_arg = _14329_merged_lo;
			_13814_x_hi = ___jule_assign_arg;
			_13824_x_lo = _1___jule_assign_arg;
		});
	};
	jule::U64 _1549_msb = (_13814_x_hi >> 63LLU);;
	jule::U64 _15513_retMantissa = (_13814_x_hi >> (_1549_msb + 38LLU));;
	_13513_retExp2-=(1LLU ^ _1549_msb);
	if ((((_13824_x_lo == 0LLU) && ((_13814_x_hi & 274877906943LLU) == 0LLU)) && ((_15513_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_15513_retMantissa+=(_15513_retMantissa & 1LLU);
	_15513_retMantissa>>=1LLU;
	if (((_15513_retMantissa >> 24LLU) > 0LLU)) {
		_15513_retMantissa>>=1LLU;
		_13513_retExp2+=1LLU;
	};
	if (((_13513_retExp2 - 1LLU) >= 254LLU)) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _17813_retBits = ((_13513_retExp2 << 23LLU) | (_15513_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_17813_retBits|=2147483648LLU;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_1dc48375d_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_17813_retBits))));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::I64 _1dc5a4a9e_commonPrefixLenIgnoreCase(jule::Str _4530_s, jule::Str _4538_prefix) {
	jule::I64 _4613_n = _4538_prefix.len();;
	if ((_4613_n > _4530_s.len())) {
		_4613_n=static_cast<jule::I64>(_4530_s.len());
	};
	jule::I64 _5013_i = 0LL;;
	for (; (_5013_i < _4613_n); (_5013_i)++) {
		{
			jule::U8 _5217_c = _4530_s[_5013_i];;
			if ((('A' <= _5217_c) && (_5217_c <= 'Z'))) {
				_5217_c+=32LL;
			};
			if ((_5217_c != _4538_prefix[_5013_i])) {
				return _5013_i;;
			};
		}
	_iter_next_1acb4457a:;
	}
	_iter_end_1acb4457a:;;
	return _4613_n;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1dc5a4d9b_special(jule::Str _6816_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if (_6816_s.empty()) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		__jule_func_result.__jule_result_arg2 = false;
		return __jule_func_result;;
	};
	jule::I64 _7213_sign = 1LL;;
	jule::I64 _7313_nsign = 0LL;;
	{
		auto &_match_expr{ _6816_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1acb48936:;
			{
				if ((_6816_s[0LL] == '-')) {
					_7213_sign=-1LL;
				};
				_7313_nsign=1LL;
				(_6816_s).mut_slice(1LL);;
				goto _case_begin_1acb489ad;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1acb489ad:;
			{
				jule::I64 _8317_caseN = _1dc5a4a9e_commonPrefixLenIgnoreCase(_6816_s, jule::Str("infinity", 8));;
				if (((3LL < _8317_caseN) && (_8317_caseN < 8LL))) {
					_8317_caseN=3LL;
				};
				if (((_8317_caseN == 3LL) || (_8317_caseN == 8LL))) {
					__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1dc568634_Inf(_7213_sign));
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_7313_nsign + __jule_func_result.__jule_result_arg1));
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1acb48a35:;
			{
				if ((_1dc5a4a9e_commonPrefixLenIgnoreCase(_6816_s, jule::Str("NaN", 3)) == 3LL)) {
					__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1dc5680a1_NaN());
					__jule_func_result.__jule_result_arg1 = 3LL;
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1acb4886a:;
	};
	__jule_func_result.__jule_result_arg0 = 0LL;
	__jule_func_result.__jule_result_arg1 = 0LL;
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1dc5a5143_readFloat(jule::Str _10314_s) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	__jule_func_result.__jule_result_arg3 = false;
	__jule_func_result.__jule_result_arg4 = false;
	__jule_func_result.__jule_result_arg5 = 0;
	__jule_func_result.__jule_result_arg6 = false;
	if ((__jule_func_result.__jule_result_arg5 >= _10314_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_10314_s[__jule_func_result.__jule_result_arg5] == '+')) {
			_case_begin_1acb4e5a7:;
			{
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		else if ((_10314_s[__jule_func_result.__jule_result_arg5] == '-')) {
			_case_begin_1acb4e62e:;
			{
				__jule_func_result.__jule_result_arg2=true;
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		_match_end_1acb4e464:;
	};
	jule::U64 _11713_base = 10LLU;;
	jule::I64 _11813_maxMantDigits = 19LL;;
	jule::U8 _11913_expChar = 'e';;
	if (((((__jule_func_result.__jule_result_arg5 + 2LL) < _10314_s.len()) && (_10314_s[__jule_func_result.__jule_result_arg5] == '0')) && (_1dc5a10ea_lower(_10314_s[(__jule_func_result.__jule_result_arg5 + 1LL)]) == 'x'))) {
		_11713_base=16LLU;
		_11813_maxMantDigits=16LL;
		__jule_func_result.__jule_result_arg5+=2LL;
		_11913_expChar='p';
		__jule_func_result.__jule_result_arg4=true;
	};
	jule::Bool _12713_sawdot = false;;
	jule::Bool _12813_sawdigits = false;;
	jule::I64 _12913_nd = 0LL;;
	jule::I64 _13013_ndMant = 0LL;;
	jule::I64 _13113_dp = 0LL;;
	for (; (__jule_func_result.__jule_result_arg5 < _10314_s.len()); (__jule_func_result.__jule_result_arg5)++) {
		{
			jule::U8 _13313_c = _10314_s[__jule_func_result.__jule_result_arg5];;
			{
				
				if ((_13313_c == '_')) {
					_case_begin_1acb5579a:;
					{
						goto _iter_next_1acb54bea;
					}
				}
				else if ((_13313_c == '.')) {
					_case_begin_1acb55822:;
					{
						if (_12713_sawdot) {
							goto _julec_label_loop_end;
						};
						_12713_sawdot=true;
						_13113_dp=_12913_nd;
						goto _iter_next_1acb54bea;
					}
				}
				else if ((('0' <= _13313_c) && (_13313_c <= '9'))) {
					_case_begin_1acb55899:;
					{
						_12813_sawdigits=true;
						if (((_13313_c == '0') && (_12913_nd == 0LL))) {
							(_13113_dp)--;
							goto _iter_next_1acb54bea;
						};
						(_12913_nd)++;
						if ((_13013_ndMant < _11813_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=_11713_base;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((_13313_c - '0'));
							(_13013_ndMant)++;
						} else if ((_13313_c != '0')) {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1acb54bea;
					}
				}
				else if ((((_11713_base == 16LLU) && ('a' <= _1dc5a10ea_lower(_13313_c))) && (_1dc5a10ea_lower(_13313_c) <= 'f'))) {
					_case_begin_1acb55921:;
					{
						_12813_sawdigits=true;
						(_12913_nd)++;
						if ((_13013_ndMant < _11813_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=16LLU;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>(((_1dc5a10ea_lower(_13313_c) - 'a') + 10LLU));
							(_13013_ndMant)++;
						} else {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1acb54bea;
					}
				}
				_match_end_1acb556bd:;
			};
			goto _iter_end_1acb54bea;
		}
	_iter_next_1acb54bea:;
	}
	_iter_end_1acb54bea:;;
	_julec_label_loop_end:;
	if ((!(_12813_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_12713_sawdot))) {
		_13113_dp=_12913_nd;
	};
	if ((_11713_base == 16LLU)) {
		_13113_dp*=4LL;
		_13013_ndMant*=4LL;
	};
	if (((__jule_func_result.__jule_result_arg5 < _10314_s.len()) && (_1dc5a10ea_lower(_10314_s[__jule_func_result.__jule_result_arg5]) == _11913_expChar))) {
		(__jule_func_result.__jule_result_arg5)++;
		if ((__jule_func_result.__jule_result_arg5 >= _10314_s.len())) {
			return __jule_func_result;;
		};
		jule::I64 _19617_esign = 1LL;;
		if ((_10314_s[__jule_func_result.__jule_result_arg5] == '+')) {
			(__jule_func_result.__jule_result_arg5)++;
		} else if ((_10314_s[__jule_func_result.__jule_result_arg5] == '-')) {
			(__jule_func_result.__jule_result_arg5)++;
			_19617_esign=-1LL;
		};
		if ((((__jule_func_result.__jule_result_arg5 >= _10314_s.len()) || (_10314_s[__jule_func_result.__jule_result_arg5] < '0')) || (_10314_s[__jule_func_result.__jule_result_arg5] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _20617_e = 0LL;;
		for (; ((__jule_func_result.__jule_result_arg5 < _10314_s.len()) && ((('0' <= _10314_s[__jule_func_result.__jule_result_arg5]) && (_10314_s[__jule_func_result.__jule_result_arg5] <= '9')) || (_10314_s[__jule_func_result.__jule_result_arg5] == '_'))); (__jule_func_result.__jule_result_arg5)++) {
			{
				if ((_10314_s[__jule_func_result.__jule_result_arg5] == '_')) {
					goto _iter_next_1acb5ed04;
				};
				if ((_20617_e < 10000LL)) {
					_20617_e=static_cast<jule::I64>((((_20617_e * 10LL) + static_cast<jule::I64>(_10314_s[__jule_func_result.__jule_result_arg5])) - '0'));
				};
			}
		_iter_next_1acb5ed04:;
		}
		_iter_end_1acb5ed04:;;
		_13113_dp+=(_20617_e * _19617_esign);
	} else if ((_11713_base == 16LLU)) {
		return __jule_func_result;;
	};
	if ((__jule_func_result.__jule_result_arg0 != 0LLU)) {
		__jule_func_result.__jule_result_arg1=static_cast<jule::I64>((_13113_dp - _13013_ndMant));
	};
	__jule_func_result.__jule_result_arg6=true;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_bool _1dc5a6ac3_atof64exact(jule::U64 _48116_mantissa, jule::I64 _48135_exp, jule::Bool _48145_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_48116_mantissa >> _1dc59b436_f64info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(static_cast<jule::F64>(_48116_mantissa));
	if (_48145_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::F64>((-(__jule_func_result.__jule_result_arg0)));
	};
	{
		
		if ((_48135_exp == 0LL)) {
			_case_begin_1acb69c54:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48135_exp > 0LL) && (_48135_exp <= 37LL))) {
			_case_begin_1acb69ccb:;
			{
				if ((_48135_exp > 22LL)) {
					__jule_func_result.__jule_result_arg0*=_1dc5a5ee0_f64pow10[(_48135_exp - 22LL)];
					_48135_exp=22LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 1000000000000000LL) || (__jule_func_result.__jule_result_arg0 < -1000000000000000LL))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>((__jule_func_result.__jule_result_arg0 * _1dc5a5ee0_f64pow10[_48135_exp]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48135_exp < 0LL) && (_48135_exp >= -22LL))) {
			_case_begin_1acb69d53:;
			{
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(jule::div(__jule_func_result.__jule_result_arg0,_1dc5a5ee0_f64pow10[(-(_48135_exp))]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1acb69b88:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1dc5a6ead_atof32exact(jule::U64 _51516_mantissa, jule::I64 _51535_exp, jule::Bool _51549_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_51516_mantissa >> _1dc59b128_f32info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(static_cast<jule::F32>(_51516_mantissa));
	if (_51549_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::F32>((-(__jule_func_result.__jule_result_arg0)));
	};
	{
		
		if ((_51535_exp == 0LL)) {
			_case_begin_1acb6e929:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_51535_exp > 0LL) && (_51535_exp <= 17LL))) {
			_case_begin_1acb6e9a1:;
			{
				if ((_51535_exp > 10LL)) {
					__jule_func_result.__jule_result_arg0*=_1dc5a6331_f32pow10[(_51535_exp - 10LL)];
					_51535_exp=10LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 10000000.0f) || (__jule_func_result.__jule_result_arg0 < -10000000.0f))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>((__jule_func_result.__jule_result_arg0 * _1dc5a6331_f32pow10[_51535_exp]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_51535_exp < 0LL) && (_51535_exp >= -10LL))) {
			_case_begin_1acb6ea28:;
			{
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(jule::div(__jule_func_result.__jule_result_arg0,_1dc5a6331_f32pow10[(-(_51535_exp))]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1acb6e85d:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple__1dbbeddec_ConvError _1dc5a7585_atofHex(jule::Str _55112_s, _1dc59ac60_floatInfo* _55121_flt, jule::U64 _55141_mantissa, jule::I64 _55160_exp, jule::Bool _55170_neg, jule::Bool _55181_trunc) {
	__jule_tuple_f64__jule_tuple__1dbbeddec_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	jule::I64 _5529_maxExp = ((static_cast<jule::I64>((1LL << (*(_55121_flt))._field_expbits)) + (*(_55121_flt))._field_bias) - 2LL);;
	jule::I64 _5539_minExp = ((*(_55121_flt))._field_bias + 1LL);;
	_55160_exp+=static_cast<jule::I64>((*(_55121_flt))._field_mantbits);
	while (((_55141_mantissa != 0LLU) && ((_55141_mantissa >> ((*(_55121_flt))._field_mantbits + 2LLU)) == 0LLU))) {
		{
			_55141_mantissa<<=1LLU;
			(_55160_exp)--;
		}
	_iter_next_1acb747ec:;
	}
	_iter_end_1acb747ec:;;
	if (_55181_trunc) {
		_55141_mantissa|=1LLU;
	};
	while (((_55141_mantissa >> ((1LLU + (*(_55121_flt))._field_mantbits) + 2LLU)) != 0LLU)) {
		{
			_55141_mantissa=static_cast<jule::U64>(((_55141_mantissa >> 1LLU) | (_55141_mantissa & 1LLU)));
			(_55160_exp)++;
		}
	_iter_next_1acb76667:;
	}
	_iter_end_1acb76667:;;
	while (((_55141_mantissa > 1LLU) && (_55160_exp < (_5539_minExp - 2LL)))) {
		{
			_55141_mantissa=static_cast<jule::U64>(((_55141_mantissa >> 1LLU) | (_55141_mantissa & 1LLU)));
			(_55160_exp)++;
		}
	_iter_next_1acb77129:;
	}
	_iter_end_1acb77129:;;
	jule::U64 _58313_round = (_55141_mantissa & 3LLU);;
	_55141_mantissa>>=2LLU;
	_58313_round|=(_55141_mantissa & 1LLU);
	_55160_exp+=2LL;
	if ((_58313_round == 3LLU)) {
		(_55141_mantissa)++;
		if ((_55141_mantissa == (1LLU << (1LLU + (*(_55121_flt))._field_mantbits)))) {
			_55141_mantissa>>=1LLU;
			(_55160_exp)++;
		};
	};
	if (((_55141_mantissa >> (*(_55121_flt))._field_mantbits) == 0LLU)) {
		_55160_exp=(*(_55121_flt))._field_bias;
	};
	jule::I64 _59813_err = static_cast<jule::I64>(0LL);;
	if ((_55160_exp > _5529_maxExp)) {
		_55141_mantissa=static_cast<jule::U64>(static_cast<jule::U64>((1LL << (*(_55121_flt))._field_mantbits)));
		_55160_exp=static_cast<jule::I64>((_5529_maxExp + 1LL));
		_59813_err=static_cast<jule::I64>(1LL);
	};
	jule::U64 _60513_bits = (_55141_mantissa & ((1LLU << (*(_55121_flt))._field_mantbits) - 1LLU));;
	_60513_bits|=(static_cast<jule::U64>(((_55160_exp - (*(_55121_flt))._field_bias) & static_cast<jule::I64>(((1LL << (*(_55121_flt))._field_expbits) - 1LL)))) << (*(_55121_flt))._field_mantbits);
	if (_55170_neg) {
		_60513_bits|=((1LLU << (*(_55121_flt))._field_mantbits) << (*(_55121_flt))._field_expbits);
	};
	if (((*(_55121_flt)) == _1dc59b128_f32info)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(static_cast<jule::F64>(_1dc48375d_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_60513_bits)))));
		__jule_func_result.__jule_result_arg1 = _59813_err;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1dc483d24_F64FromBits(_60513_bits));
	__jule_func_result.__jule_result_arg1 = _59813_err;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1dbbeddec_ConvError _1dc5a793c_atof32(jule::Str _61611_s) {
	__jule_tuple_f32__jule_tuple_int__jule_tuple__1dbbeddec_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _61814_val = 0;;
		jule::I64 _61819__n = 0;;
		jule::Bool _61823_ok = false;;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dc5a4d9b_special(_61611_s);
			_61814_val = __jule_assign_result.__jule_result_arg0;
			_61819__n = __jule_assign_result.__jule_result_arg1;
			_61823_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_61823_ok) {
			__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(static_cast<jule::F32>(_61814_val));
			__jule_func_result.__jule_result_arg1 = _61819__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _62410_mantissa = 0;;
	jule::I64 _62420_exp = 0;;
	jule::Bool _62425_neg = false;;
	jule::Bool _62430_trunc = false;;
	jule::Bool _62437_hex = false;;
	jule::I64 _62442__n = 0;;
	jule::Bool _62450_ok = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dc5a5143_readFloat(_61611_s);
		_62410_mantissa = __jule_assign_result.__jule_result_arg0;
		_62420_exp = __jule_assign_result.__jule_result_arg1;
		_62425_neg = __jule_assign_result.__jule_result_arg2;
		_62430_trunc = __jule_assign_result.__jule_result_arg3;
		_62437_hex = __jule_assign_result.__jule_result_arg4;
		_62442__n = __jule_assign_result.__jule_result_arg5;
		_62450_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_62442__n;
	if ((!(_62450_ok))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_62437_hex) {
		jule::F64 _63117_ff = 0LL;;
		({
			__jule_tuple_f64__jule_tuple__1dbbeddec_ConvError __jule_assign_result = _1dc5a7585_atofHex(_61611_s.slice(0LL, __jule_func_result.__jule_result_arg1), &(_1dc59b128_f32info), _62410_mantissa, _62420_exp, _62425_neg, _62430_trunc);
			_63117_ff = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(static_cast<jule::F32>(_63117_ff));
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_62430_trunc))) {
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1dc5a6ead_atof32exact(_62410_mantissa, _62420_exp, _62425_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_62450_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_62450_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1dc5a2d88_eiselLemire32(_62410_mantissa, _62420_exp, _62425_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_62450_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62450_ok) {
			if ((!(_62430_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F32 _65321_fUp = 0.0f;;
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1dc5a2d88_eiselLemire32(static_cast<jule::U64>((_62410_mantissa + 1LLU)), _62420_exp, _62425_neg);
				_65321_fUp = __jule_assign_result.__jule_result_arg0;
				_62450_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_62450_ok && (__jule_func_result.__jule_result_arg0 == _65321_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1dc5ad778_decimal _66213_d = _1dc5ad778_decimal{};;
	if ((!(_1dc5a57e7_set(&_66213_d, _61611_s.slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _66610_b = 0;;
	jule::Bool _66613_ovf = false;;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1dc5a5b05_floatBits(&_66213_d, &(_1dc59b128_f32info));
		_66610_b = __jule_assign_result.__jule_result_arg0;
		_66613_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_1dc48375d_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_66610_b))));
	if (_66613_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1dbbeddec_ConvError _1dc5a7bd4_atof64(jule::Str _67411_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1dbbeddec_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _67614_val = 0;;
		jule::I64 _67619__n = 0;;
		jule::Bool _67623_ok = false;;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dc5a4d9b_special(_67411_s);
			_67614_val = __jule_assign_result.__jule_result_arg0;
			_67619__n = __jule_assign_result.__jule_result_arg1;
			_67623_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_67623_ok) {
			__jule_func_result.__jule_result_arg0 = _67614_val;
			__jule_func_result.__jule_result_arg1 = _67619__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _68210_mantissa = 0;;
	jule::I64 _68220_exp = 0;;
	jule::Bool _68225_neg = false;;
	jule::Bool _68230_trunc = false;;
	jule::Bool _68237_hex = false;;
	jule::I64 _68242__n = 0;;
	jule::Bool _68250_ok = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dc5a5143_readFloat(_67411_s);
		_68210_mantissa = __jule_assign_result.__jule_result_arg0;
		_68220_exp = __jule_assign_result.__jule_result_arg1;
		_68225_neg = __jule_assign_result.__jule_result_arg2;
		_68230_trunc = __jule_assign_result.__jule_result_arg3;
		_68237_hex = __jule_assign_result.__jule_result_arg4;
		_68242__n = __jule_assign_result.__jule_result_arg5;
		_68250_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_68242__n;
	if ((!(_68250_ok))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_68237_hex) {
		({
			__jule_tuple_f64__jule_tuple__1dbbeddec_ConvError __jule_assign_result = _1dc5a7585_atofHex(_67411_s.slice(0LL, __jule_func_result.__jule_result_arg1), &(_1dc59b436_f64info), _68210_mantissa, _68220_exp, _68225_neg, _68230_trunc);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_68230_trunc))) {
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1dc5a6ac3_atof64exact(_68210_mantissa, _68220_exp, _68225_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_68250_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_68250_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1dc5a298c_eiselLemire64(_68210_mantissa, _68220_exp, _68225_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_68250_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_68250_ok) {
			if ((!(_68230_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F64 _71021_fUp = 0LL;;
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1dc5a298c_eiselLemire64(static_cast<jule::U64>((_68210_mantissa + 1LLU)), _68220_exp, _68225_neg);
				_71021_fUp = __jule_assign_result.__jule_result_arg0;
				_68250_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_68250_ok && (__jule_func_result.__jule_result_arg0 == _71021_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1dc5ad778_decimal _71913_d = _1dc5ad778_decimal{};;
	if ((!(_1dc5a57e7_set(&_71913_d, _67411_s.slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _72310_b = 0;;
	jule::Bool _72313_ovf = false;;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1dc5a5b05_floatBits(&_71913_d, &(_1dc59b436_f64info));
		_72310_b = __jule_assign_result.__jule_result_arg0;
		_72313_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_1dc483d24_F64FromBits(_72310_b));
	if (_72313_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1dbbeddec_ConvError _1dc5a8025_parseFloatPrefix(jule::Str _73121_s, jule::I64 _73129_bit_size) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1dbbeddec_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	if ((_73129_bit_size == 32LL)) {
		jule::F32 _73314_f = 0;;
		jule::I64 _73317_n = 0;;
		jule::I64 _73320_err = 0LL;;
		({
			__jule_tuple_f32__jule_tuple_int__jule_tuple__1dbbeddec_ConvError __jule_assign_result = _1dc5a793c_atof32(_73121_s);
			_73314_f = __jule_assign_result.__jule_result_arg0;
			_73317_n = __jule_assign_result.__jule_result_arg1;
			_73320_err = __jule_assign_result.__jule_result_arg2;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(static_cast<jule::F64>(_73314_f));
		__jule_func_result.__jule_result_arg1 = _73317_n;
		__jule_func_result.__jule_result_arg2 = _73320_err;
		return __jule_func_result;;
	};
	jule::F64 _73710_f = 0;;
	jule::I64 _73713_n = 0;;
	jule::I64 _73716_err = 0LL;;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__1dbbeddec_ConvError __jule_assign_result = _1dc5a7bd4_atof64(_73121_s);
		_73710_f = __jule_assign_result.__jule_result_arg0;
		_73713_n = __jule_assign_result.__jule_result_arg1;
		_73716_err = __jule_assign_result.__jule_result_arg2;
	});
	__jule_func_result.__jule_result_arg0 = _73710_f;
	__jule_func_result.__jule_result_arg1 = _73713_n;
	__jule_func_result.__jule_result_arg2 = _73716_err;
	return __jule_func_result;;
}



inline jule::Exceptional<jule::F64> _1dc5a8366_ParseFloat(jule::Str _76515_s, jule::I64 _76523_bit_size) {
	jule::F64 _76610_f = 0;;
	jule::I64 _76613_n = 0;;
	jule::I64 _76616_err = 0LL;;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__1dbbeddec_ConvError __jule_assign_result = _1dc5a8025_parseFloatPrefix(_76515_s, _76523_bit_size);
		_76610_f = __jule_assign_result.__jule_result_arg0;
		_76613_n = __jule_assign_result.__jule_result_arg1;
		_76616_err = __jule_assign_result.__jule_result_arg2;
	});
	if (((_76613_n != _76515_s.len()) && ((_76616_err == static_cast<jule::I64>(0LL)) || (_76616_err != static_cast<jule::I64>(2LL))))) {
		return jule::Exceptional<jule::F64>(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0));
	};
	if ((_76616_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::F64>(jule::Any(_76616_err, &__jule_any_type0));
	};
	return jule::Exceptional<jule::F64>(jule::Any(), _76610_f);;
}



inline void _1dc5a8ad6_ryuFtoaFixed32(_1dc59b887_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I64 _4956_exp, jule::I64 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		jule::panic(jule::Str("ryuFtoaFixed32 called with negative prec", 40) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:9"));;
	};
	if ((_4966_prec > 9LL)) {
		jule::panic(jule::Str("ryuFtoaFixed32 called with prec > 9", 35) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:9"));;
	};
	if ((_4945_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_4924_d))._field_nd = ___jule_assign_arg;
			(*(_4924_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _6213_e2 = _4956_exp;;
	jule::I64 _639_b = _1dc55d9d1_Len32(_4945_mant);;
	if ((_639_b < 25LL)) {
		_4945_mant<<=static_cast<jule::U64>((25LL - _639_b));
		_6213_e2+=(static_cast<jule::I64>(_639_b) - 25LL);
	};
	jule::I64 _749_q = (((-(_1dc5aa027_mulByLog2Log10(static_cast<jule::I64>((_6213_e2 + 24LL))))) + _4966_prec) - 1LL);;
	jule::Bool _7913_exact = ((_749_q <= 27LL) && (_749_q >= 0LL));;
	jule::U32 _8114_di = 0;;
	jule::I64 _8118_dexp2 = 0;;
	jule::Bool _8129_d0 = false;;
	({
		__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dc5ab721_mult64bitPow10(_4945_mant, _6213_e2, _749_q);
		_8114_di = __jule_assign_result.__jule_result_arg0;
		_8118_dexp2 = __jule_assign_result.__jule_result_arg1;
		_8129_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_8118_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult64bitPow10", 48) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:9"));;
	};
	if ((((_749_q < 0LL) && (_749_q >= -10LL)) && _1dc5abe4c_divisibleByPow5(static_cast<jule::U64>(static_cast<jule::U64>(_4945_mant)), static_cast<jule::I64>((-(_749_q)))))) {
		_7913_exact=true;
		_8129_d0=true;
	};
	jule::U64 _949_extra = static_cast<jule::U64>((-(_8118_dexp2)));;
	jule::U32 _959_extraMask = static_cast<jule::U32>(((1LL << _949_extra) - 1LL));;
	jule::U32 _9713_dfrac = 0LLU;;
	({
		jule::U32 ___jule_assign_arg = static_cast<jule::U32>((_8114_di >> _949_extra));
		jule::U32 _1___jule_assign_arg = static_cast<jule::U32>((_8114_di & _959_extraMask));
		_8114_di = ___jule_assign_arg;
		_9713_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _9913_roundUp = false;;
	if (_7913_exact) {
		_9913_roundUp=(((_9713_dfrac > (1LLU << (_949_extra - 1LLU))) || ((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && (!(_8129_d0)))) || (((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && _8129_d0) && ((_8114_di & 1LLU) == 1LLU)));
	} else {
		_9913_roundUp=((_9713_dfrac >> (_949_extra - 1LLU)) == 1LLU);
	};
	if ((_9713_dfrac != 0LLU)) {
		_8129_d0=false;
	};
	_1dc5a980c_formatDecimal(_4924_d, static_cast<jule::U64>(static_cast<jule::U64>(_8114_di)), (!(_8129_d0)), _9913_roundUp, _4966_prec);
	(*(_4924_d))._field_dp-=_749_q;
}



inline void _1dc5a9026_ryuFtoaFixed64(_1dc59b887_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I64 _12156_exp, jule::I64 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		jule::panic(jule::Str("ryuFtoaFixed64 called with prec > 18", 36) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:9"));;
	};
	if ((_12145_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_12124_d))._field_nd = ___jule_assign_arg;
			(*(_12124_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _13113_e2 = _12156_exp;;
	jule::I64 _1329_b = _1dc55dc78_Len64(_12145_mant);;
	if ((_1329_b < 55LL)) {
		_12145_mant=static_cast<jule::U64>((_12145_mant << static_cast<jule::U64>((55LL - _1329_b))));
		_13113_e2+=(static_cast<jule::I64>(_1329_b) - 55LL);
	};
	jule::I64 _1469_q = (((-(_1dc5aa027_mulByLog2Log10(static_cast<jule::I64>((_13113_e2 + 54LL))))) + _12166_prec) - 1LL);;
	jule::Bool _15113_exact = ((_1469_q <= 55LL) && (_1469_q >= 0LL));;
	jule::U64 _15314_di = 0;;
	jule::I64 _15318_dexp2 = 0;;
	jule::Bool _15329_d0 = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dc5abb0b_mult128bitPow10(_12145_mant, _13113_e2, _1469_q);
		_15314_di = __jule_assign_result.__jule_result_arg0;
		_15318_dexp2 = __jule_assign_result.__jule_result_arg1;
		_15329_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_15318_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:9"));;
	};
	if ((((_1469_q < 0LL) && (_1469_q >= -22LL)) && _1dc5abe4c_divisibleByPow5(_12145_mant, static_cast<jule::I64>((-(_1469_q)))))) {
		_15113_exact=true;
		_15329_d0=true;
	};
	jule::U64 _1669_extra = static_cast<jule::U64>((-(_15318_dexp2)));;
	jule::U64 _1679_extraMask = static_cast<jule::U64>(((1LL << _1669_extra) - 1LL));;
	jule::U64 _16913_dfrac = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_15314_di >> _1669_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_15314_di & _1679_extraMask));
		_15314_di = ___jule_assign_arg;
		_16913_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _17113_roundUp = false;;
	if (_15113_exact) {
		_17113_roundUp=(((_16913_dfrac > (1LLU << (_1669_extra - 1LLU))) || ((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && (!(_15329_d0)))) || (((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && _15329_d0) && ((_15314_di & 1LLU) == 1LLU)));
	} else {
		_17113_roundUp=((_16913_dfrac >> (_1669_extra - 1LLU)) == 1LLU);
	};
	if ((_16913_dfrac != 0LLU)) {
		_15329_d0=false;
	};
	_1dc5a980c_formatDecimal(_12124_d, _15314_di, (!(_15329_d0)), _17113_roundUp, _12166_prec);
	(*(_12124_d))._field_dp-=_1469_q;
}



inline void _1dc5a980c_formatDecimal(_1dc59b887_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I64 _20088_prec) {
	jule::U64 _2019_max = _1dc5a9356_u64pow10[_20088_prec];;
	jule::I64 _20213_trimmed = 0LL;;
	while ((_20044_m >= _2019_max)) {
		{
			jule::U64 _20414_a = 0;;
			jule::U64 _20417_b = 0;;
			({
				jule::U64 ___jule_assign_arg = (_20044_m / 10LLU);
				jule::U64 _1___jule_assign_arg = (_20044_m % 10LL);
				_20414_a = ___jule_assign_arg;
				_20417_b = _1___jule_assign_arg;
			});
			_20044_m=_20414_a;
			(_20213_trimmed)++;
			if ((_20417_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_20417_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_20417_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_1acbad25e:;
	}
	_iter_end_1acbad25e:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2019_max)) {
		_20044_m/=10LLU;
		(_20213_trimmed)++;
	};
	jule::U64 _22913_n = static_cast<jule::U64>(_20088_prec);;
	(*(_20023_d))._field_nd=static_cast<jule::I64>(static_cast<jule::I64>(_20088_prec));
	jule::U64 _23113_v = _20044_m;;
	while ((_23113_v >= 100LLU)) {
		{
			jule::U64 _23317_v1 = 0LLU;;
			jule::U64 _23417_v2 = 0LLU;;
			if (((_23113_v >> 32LLU) == 0LLU)) {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) / 100LLU)));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) % 100LL)));
					_23317_v1 = ___jule_assign_arg;
					_23417_v2 = _1___jule_assign_arg;
				});
			} else {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_23113_v / 100LLU));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_23113_v % 100LL));
					_23317_v1 = ___jule_assign_arg;
					_23417_v2 = _1___jule_assign_arg;
				});
			};
			_22913_n-=2LLU;
			(*(_20023_d))._field_d[static_cast<jule::I64>((_22913_n + 1LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 1LLU))]);
			(*(_20023_d))._field_d[static_cast<jule::I64>((_22913_n + 0LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 0LLU))]);
			_23113_v=_23317_v1;
		}
	_iter_next_1acbb1c13:;
	}
	_iter_end_1acbb1c13:;;
	if ((_23113_v > 0LLU)) {
		(_22913_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23113_v) + 1LLU))]);
	};
	if ((_23113_v >= 10LLU)) {
		(_22913_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((2LL * _23113_v))]);
	};
	while (((*(_20023_d))._field_d[((*(_20023_d))._field_nd - 1LL)] == '0')) {
		{
			((*(_20023_d))._field_nd)--;
			(_20213_trimmed)++;
		}
	_iter_next_1acbb79e9:;
	}
	_iter_end_1acbb79e9:;;
	(*(_20023_d))._field_dp=static_cast<jule::I64>(((*(_20023_d))._field_nd + _20213_trimmed));
}



inline void _1dc5a9c80_ryuFtoaShortest(_1dc59b887_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I64 _26157_exp, _1dc59ac60_floatInfo* _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_26125_d))._field_nd = ___jule_assign_arg;
			(*(_26125_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	if (((_26157_exp <= 0LL) && (_1dc5583c1_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant>>=static_cast<jule::U64>((-(_26157_exp)));
		_1dc5aac4d_ryuDigits(_26125_d, _26146_mant, _26146_mant, _26146_mant, true, false);
		return;;
	};
	jule::U64 _27310_ml = 0;;
	jule::U64 _27314_mc = 0;;
	jule::U64 _27318_mu = 0;;
	jule::I64 _27326_e2 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_assign_result = _1dc5aa6a9_computeBounds(_26146_mant, _26157_exp, _26168_flt);
		_27310_ml = __jule_assign_result.__jule_result_arg0;
		_27314_mc = __jule_assign_result.__jule_result_arg1;
		_27318_mu = __jule_assign_result.__jule_result_arg2;
		_27326_e2 = __jule_assign_result.__jule_result_arg3;
	});
	if ((_27326_e2 == 0LL)) {
		_1dc5aac4d_ryuDigits(_26125_d, _27310_ml, _27314_mc, _27318_mu, true, false);
		return;;
	};
	jule::I64 _2799_q = (_1dc5aa027_mulByLog2Log10(static_cast<jule::I64>((-(_27326_e2)))) + 1LL);;
	jule::U64 _28313_dl = 0LLU;;
	jule::U64 _28413_dc = 0LLU;;
	jule::U64 _28513_du = 0LLU;;
	jule::Bool _28613_dl0 = false;;
	jule::Bool _28713_dc0 = false;;
	jule::Bool _28813_du0 = false;;
	if (((*(_26168_flt)) == _1dc59b128_f32info)) {
		jule::U32 _29017_dl32 = 0LLU;;
		jule::U32 _29117_dc32 = 0LLU;;
		jule::U32 _29217_du32 = 0LLU;;
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dc5ab721_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27310_ml)), _27326_e2, _2799_q);
			_29017_dl32 = __jule_assign_result.__jule_result_arg0;
			_28613_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dc5ab721_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27314_mc)), _27326_e2, _2799_q);
			_29117_dc32 = __jule_assign_result.__jule_result_arg0;
			_28713_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dc5ab721_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27318_mu)), _27326_e2, _2799_q);
			_29217_du32 = __jule_assign_result.__jule_result_arg0;
			_27326_e2 = __jule_assign_result.__jule_result_arg1;
			_28813_du0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29017_dl32));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29117_dc32));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29217_du32));
			_28313_dl = ___jule_assign_arg;
			_28413_dc = _1___jule_assign_arg;
			_28513_du = _2___jule_assign_arg;
		});
	} else {
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dc5abb0b_mult128bitPow10(_27310_ml, _27326_e2, _2799_q);
			_28313_dl = __jule_assign_result.__jule_result_arg0;
			_28613_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dc5abb0b_mult128bitPow10(_27314_mc, _27326_e2, _2799_q);
			_28413_dc = __jule_assign_result.__jule_result_arg0;
			_28713_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dc5abb0b_mult128bitPow10(_27318_mu, _27326_e2, _2799_q);
			_28513_du = __jule_assign_result.__jule_result_arg0;
			_27326_e2 = __jule_assign_result.__jule_result_arg1;
			_28813_du0 = __jule_assign_result.__jule_result_arg2;
		});
	};
	if ((_27326_e2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:9"));;
	};
	if ((_2799_q > 55LL)) {
		({
			jule::Bool ___jule_assign_arg = false;
			jule::Bool _1___jule_assign_arg = false;
			jule::Bool _2___jule_assign_arg = false;
			_28613_dl0 = ___jule_assign_arg;
			_28713_dc0 = _1___jule_assign_arg;
			_28813_du0 = _2___jule_assign_arg;
		});
	};
	if (((_2799_q < 0LL) && (_2799_q >= -24LL))) {
		if (_1dc5abe4c_divisibleByPow5(_27310_ml, static_cast<jule::I64>((-(_2799_q))))) {
			_28613_dl0=true;
		};
		if (_1dc5abe4c_divisibleByPow5(_27314_mc, static_cast<jule::I64>((-(_2799_q))))) {
			_28713_dc0=true;
		};
		if (_1dc5abe4c_divisibleByPow5(_27318_mu, static_cast<jule::I64>((-(_2799_q))))) {
			_28813_du0=true;
		};
	};
	jule::U64 _3259_extra = static_cast<jule::U64>((-(_27326_e2)));;
	jule::U64 _3269_extraMask = static_cast<jule::U64>(((1LL << _3259_extra) - 1LL));;
	jule::U64 _32813_fracl = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28313_dl >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28313_dl & _3269_extraMask));
		_28313_dl = ___jule_assign_arg;
		_32813_fracl = _1___jule_assign_arg;
	});
	jule::U64 _33013_fracc = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28413_dc >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28413_dc & _3269_extraMask));
		_28413_dc = ___jule_assign_arg;
		_33013_fracc = _1___jule_assign_arg;
	});
	jule::U64 _33213_fracu = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28513_du >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28513_du & _3269_extraMask));
		_28513_du = ___jule_assign_arg;
		_33213_fracu = _1___jule_assign_arg;
	});
	jule::Bool _33813_uok = ((!(_28813_du0)) || (_33213_fracu > 0LLU));;
	if ((_28813_du0 && (_33213_fracu == 0LLU))) {
		_33813_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_33813_uok))) {
		(_28513_du)--;
	};
	jule::Bool _34713_cup = false;;
	if (_28713_dc0) {
		_34713_cup=((_33013_fracc > (1LLU << (_3259_extra - 1LLU))) || ((_33013_fracc == (1LLU << (_3259_extra - 1LLU))) && ((_28413_dc & 1LLU) == 1LLU)));
	} else {
		_34713_cup=((_33013_fracc >> (_3259_extra - 1LLU)) == 1LLU);
	};
	jule::Bool _3619_lok = ((_28613_dl0 && (_32813_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3619_lok))) {
		(_28313_dl)++;
	};
	jule::Bool _3669_c0 = (_28713_dc0 && (_33013_fracc == 0LLU));;
	_1dc5aac4d_ryuDigits(_26125_d, _28313_dl, _28413_dc, _28513_du, _3669_c0, _34713_cup);
	(*(_26125_d))._field_dp-=_2799_q;
}



inline jule::I64 _1dc5aa027_mulByLog2Log10(jule::I64 _37719_x) {
	return static_cast<jule::I64>(((_37719_x * 78913LL) >> 18LL));;
}



inline jule::I64 _1dc5aa2be_mulByLog10Log2(jule::I64 _38719_x) {
	return static_cast<jule::I64>(((_38719_x * 108853LL) >> 15LL));;
}



inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1dc5aa6a9_computeBounds(jule::U64 _39518_mant, jule::I64 _39529_exp, _1dc59ac60_floatInfo* _3966_flt) {
	__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0;
	__jule_func_result.__jule_result_arg3 = 0;
	if (((_39518_mant != (1LLU << (*(_3966_flt))._field_mantbits)) || (_39529_exp == (((*(_3966_flt))._field_bias + 1LL) - static_cast<jule::I64>((*(_3966_flt))._field_mantbits))))) {
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(((2LL * _39518_mant) - 1LLU));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((2LL * _39518_mant));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(((2LL * _39518_mant) + 1LLU));
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=static_cast<jule::I64>((_39529_exp - 1LL));
	} else {
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(((4LL * _39518_mant) - 1LLU));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((4LL * _39518_mant));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(((4LL * _39518_mant) + 2LLU));
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=static_cast<jule::I64>((_39529_exp - 2LL));
	};
	return __jule_func_result;;
}



inline void _1dc5aac4d_ryuDigits(_1dc59b887_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _41014_lhi = 0;;
	jule::U32 _41019_llo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1dc5ac1e4_divmod1e9(_40936_lower);
		_41014_lhi = __jule_assign_result.__jule_result_arg0;
		_41019_llo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _41110_chi = 0;;
	jule::U32 _41115_clo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1dc5ac1e4_divmod1e9(_40948_central);
		_41110_chi = __jule_assign_result.__jule_result_arg0;
		_41115_clo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _41210_uhi = 0;;
	jule::U32 _41215_ulo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1dc5ac1e4_divmod1e9(_40962_upper);
		_41210_uhi = __jule_assign_result.__jule_result_arg0;
		_41215_ulo = __jule_assign_result.__jule_result_arg1;
	});
	if ((_41210_uhi == 0LLU)) {
		_1dc5ab336_ryuDigits32(_40919_d, _41019_llo, _41115_clo, _41215_ulo, _40978_c0, _40992_cup, 8LL);
	} else if ((_41014_lhi < _41210_uhi)) {
		if ((_41019_llo != 0LLU)) {
			(_41014_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_41115_clo == 0LLU));
		_40992_cup=((_41115_clo > 500000000LL) || ((_41115_clo == 500000000LL) && _40992_cup));
		_1dc5ab336_ryuDigits32(_40919_d, _41014_lhi, _41110_chi, _41210_uhi, _40978_c0, _40992_cup, 8LL);
		(*(_40919_d))._field_dp+=9LL;
	} else {
		(*(_40919_d))._field_nd=0LL;
		jule::U64 _42817_n = static_cast<jule::U64>(9LLU);;
		jule::U32 _42917_v = _41110_chi;;
		while ((_42917_v > 0LLU)) {
			{
				jule::U32 _43118_v1 = 0;;
				jule::U32 _43122_v2 = 0;;
				({
					jule::U32 ___jule_assign_arg = (_42917_v / 10LLU);
					jule::U32 _1___jule_assign_arg = (_42917_v % 10LL);
					_43118_v1 = ___jule_assign_arg;
					_43122_v2 = _1___jule_assign_arg;
				});
				_42917_v=_43118_v1;
				(_42817_n)--;
				(*(_40919_d))._field_d[static_cast<jule::I64>(_42817_n)]=static_cast<jule::U8>(static_cast<jule::U8>((_43122_v2 + '0')));
			}
		_iter_next_1ab49db94:;
		}
		_iter_end_1ab49db94:;;
		(*(_40919_d))._field_d=(*(_40919_d))._field_d.slice(static_cast<jule::I64>(_42817_n));
		(*(_40919_d))._field_nd=static_cast<jule::I64>(static_cast<jule::I64>((9LL - _42817_n)));
		_1dc5ab336_ryuDigits32(_40919_d, _41019_llo, _41115_clo, _41215_ulo, _40978_c0, _40992_cup, static_cast<jule::I64>(((*(_40919_d))._field_nd + 8LL)));
	};
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[((*(_40919_d))._field_nd - 1LL)] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
		}
	_iter_next_1ab49e238:;
	}
	_iter_end_1ab49e238:;;
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[0LL] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
			((*(_40919_d))._field_dp)--;
			(*(_40919_d))._field_d=(*(_40919_d))._field_d.slice(1LL);
		}
	_iter_next_1ab49d886:;
	}
	_iter_end_1ab49d886:;;
}



inline void _1dc5ab336_ryuDigits32(_1dc59b887_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4559_upper, jule::Bool _45525_c0, jule::Bool _45539_cup, jule::I64 _45554_endindex) {
	if ((_4559_upper == 0LLU)) {
		(*(_45421_d))._field_dp=static_cast<jule::I64>((_45554_endindex + 1LL));
		return;;
	};
	jule::I64 _46013_trimmed = 0LL;;
	jule::I64 _46313_cNextDigit = 0LL;;
	while ((_4559_upper > 0LLU)) {
		{
			jule::U32 _47013_l = ((_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _47118_c = 0;;
			jule::U32 _47125_cdigit = 0;;
			({
				jule::U32 ___jule_assign_arg = (_45458_central / 10LLU);
				jule::U32 _1___jule_assign_arg = (_45458_central % 10LL);
				_47118_c = ___jule_assign_arg;
				_47125_cdigit = _1___jule_assign_arg;
			});
			jule::U32 _47213_u = (_4559_upper / 10LLU);;
			if ((_47013_l > _47213_u)) {
				goto _iter_end_1ab4a475a;
			};
			if (((_47013_l == (_47118_c + 1LLU)) && (_47118_c < _47213_u))) {
				(_47118_c)++;
				_47125_cdigit=0LLU;
				_45539_cup=false;
			};
			(_46013_trimmed)++;
			_45525_c0=(_45525_c0 && (_46313_cNextDigit == 0LL));
			_46313_cNextDigit=static_cast<jule::I64>(static_cast<jule::I64>(_47125_cdigit));
			({
				jule::U32 ___jule_assign_arg = _47013_l;
				jule::U32 _1___jule_assign_arg = _47118_c;
				jule::U32 _2___jule_assign_arg = _47213_u;
				_45442_lower = ___jule_assign_arg;
				_45458_central = _1___jule_assign_arg;
				_4559_upper = _2___jule_assign_arg;
			});
		}
	_iter_next_1ab4a475a:;
	}
	_iter_end_1ab4a475a:;;
	if ((_46013_trimmed > 0LL)) {
		_45539_cup=(((_46313_cNextDigit > 5LL) || ((_46313_cNextDigit == 5LL) && (!(_45525_c0)))) || (((_46313_cNextDigit == 5LL) && _45525_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4559_upper) && _45539_cup)) {
		(_45458_central)++;
	};
	_45554_endindex-=_46013_trimmed;
	jule::U32 _50913_v = _45458_central;;
	jule::I64 _51013_n = _45554_endindex;;
	while ((_51013_n > (*(_45421_d))._field_nd)) {
		{
			jule::U32 _51214_v1 = 0;;
			jule::U32 _51218_v2 = 0;;
			({
				jule::U32 ___jule_assign_arg = (_50913_v / 100LLU);
				jule::U32 _1___jule_assign_arg = (_50913_v % 100LL);
				_51214_v1 = ___jule_assign_arg;
				_51218_v2 = _1___jule_assign_arg;
			});
			(*(_45421_d))._field_d[_51013_n]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 1LLU))]);
			(*(_45421_d))._field_d[(_51013_n - 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 0LLU))]);
			_51013_n-=2LL;
			_50913_v=_51214_v1;
		}
	_iter_next_1ab4ab223:;
	}
	_iter_end_1ab4ab223:;;
	if ((_51013_n == (*(_45421_d))._field_nd)) {
		(*(_45421_d))._field_d[_51013_n]=static_cast<jule::U8>(static_cast<jule::U8>((_50913_v + '0')));
	};
	(*(_45421_d))._field_nd=static_cast<jule::I64>((_45554_endindex + 1LL));
	(*(_45421_d))._field_dp=static_cast<jule::I64>(((*(_45421_d))._field_nd + _46013_trimmed));
}



inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1dc5ab721_mult64bitPow10(jule::U32 _53419_m, jule::I64 _53431_e2, jule::I64 _53440_q) {
	__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_53440_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>((_53419_m << 6LLU));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_53431_e2 - 6LL));
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		jule::panic(jule::Str("mult64bitPow10: power of 10 is out of range", 43) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:9"));;
	};
	jule::U64 _54313_pow = _1dc5a3806_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_54313_pow+=1LLU;
	};
	jule::U64 _54810_hi = 0;;
	jule::U64 _54814_lo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1dc5610bb_Mul64(static_cast<jule::U64>(static_cast<jule::U64>(_53419_m)), _54313_pow);
		_54810_hi = __jule_assign_result.__jule_result_arg0;
		_54814_lo = __jule_assign_result.__jule_result_arg1;
	});
	_53431_e2+=((_1dc5aa2be_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(static_cast<jule::U32>(((_54810_hi << 7LLU) | (_54814_lo >> 57LLU))));
	__jule_func_result.__jule_result_arg1 = _53431_e2;
	__jule_func_result.__jule_result_arg2 = ((_54814_lo << 7LLU) == 0LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1dc5abb0b_mult128bitPow10(jule::U64 _56220_m, jule::I64 _56232_e2, jule::I64 _56241_q) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_56241_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>((_56220_m << 8LLU));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_56232_e2 - 8LL));
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		jule::panic(jule::Str("mult128bitPow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:9"));;
	};
	jule::Array<jule::U64,2> _57113_pow = _1dc5a3806_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_57113_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_1dc5aa2be_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _57910_l1 = 0;;
	jule::U64 _57914_l0 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1dc5610bb_Mul64(_56220_m, _57113_pow[0LL]);
		_57910_l1 = __jule_assign_result.__jule_result_arg0;
		_57914_l0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _58014_h1 = 0;;
	jule::U64 _58018_h0 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1dc5610bb_Mul64(_56220_m, _57113_pow[1LL]);
		_58014_h1 = __jule_assign_result.__jule_result_arg0;
		_58018_h0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _58110_mid = 0;;
	jule::U64 _58115_carry = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1dc55e938_Add64(_57910_l1, _58018_h0, 0LLU);
		_58110_mid = __jule_assign_result.__jule_result_arg0;
		_58115_carry = __jule_assign_result.__jule_result_arg1;
	});
	_58014_h1+=_58115_carry;
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(((_58014_h1 << 9LLU) | (_58110_mid >> 55LLU)));
	__jule_func_result.__jule_result_arg1 = _56232_e2;
	__jule_func_result.__jule_result_arg2 = (((_58110_mid << 9LLU) == 0LLU) && (_57914_l0 == 0LLU));
	return __jule_func_result;;
}



inline jule::Bool _1dc5abe4c_divisibleByPow5(jule::U64 _58624_m, jule::I64 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;;
	};
	jule::I64 _59013_i = 0LL;;
	for (; (_59013_i < _58632_k); (_59013_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;;
			};
			_58624_m/=5LLU;
		}
	_iter_next_1ab4ba2cb:;
	}
	_iter_end_1ab4ba2cb:;;
	return true;;
}



inline __jule_tuple_u32__jule_tuple_u32 _1dc5ac1e4_divmod1e9(jule::U64 _60214_x) {
	__jule_tuple_u32__jule_tuple_u32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(static_cast<jule::U32>((_60214_x / 1000000000LL)));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::U32>(static_cast<jule::U32>((_60214_x % 1000000000LL)));
		return __jule_func_result;;
	};
}



inline void _1dc5aee61_trim(_1dc5ad778_decimal* _45314_a) {
	while ((((*(_45314_a))._field_nd > 0LL) && ((*(_45314_a))._field_d[((*(_45314_a))._field_nd - 1LL)] == '0'))) {
		{
			((*(_45314_a))._field_nd)--;
		}
	_iter_next_1ab4bd895:;
	}
	_iter_end_1ab4bd895:;;
	if (((*(_45314_a))._field_nd == 0LL)) {
		(*(_45314_a))._field_dp=0LL;
	};
}



inline void _1dc5b0219_rightShift(_1dc5ad778_decimal* _46320_a, jule::U64 _46332_k) {
	jule::I64 _46413_r = 0LL;;
	jule::I64 _46513_w = 0LL;;
	jule::U64 _46813_n = 0LLU;;
	for (; ((_46813_n >> _46332_k) == 0LLU); (_46413_r)++) {
		{
			if ((_46413_r >= (*(_46320_a))._field_nd)) {
				if ((_46813_n == 0LLU)) {
					(*(_46320_a))._field_nd=0LL;
					return;;
				};
				while (((_46813_n >> _46332_k) == 0LLU)) {
					{
						_46813_n=static_cast<jule::U64>((_46813_n * 10LLU));
						(_46413_r)++;
					}
				_iter_next_1ab4c215c:;
				}
				_iter_end_1ab4c215c:;;
				goto _iter_end_1ab4c0ca4;
			};
			jule::U64 _48213_c = static_cast<jule::U64>((*(_46320_a))._field_d[_46413_r]);;
			_46813_n=static_cast<jule::U64>((((_46813_n * 10LLU) + _48213_c) - '0'));
		}
	_iter_next_1ab4c0ca4:;
	}
	_iter_end_1ab4c0ca4:;;
	(*(_46320_a))._field_dp-=(_46413_r - 1LL);
	jule::U64 _4879_mask = static_cast<jule::U64>((static_cast<jule::U64>((1LL << _46332_k)) - 1LLU));;
	for (; (_46413_r < (*(_46320_a))._field_nd); (_46413_r)++) {
		{
			jule::U64 _49113_c = static_cast<jule::U64>((*(_46320_a))._field_d[_46413_r]);;
			jule::U64 _49213_dig = (_46813_n >> _46332_k);;
			_46813_n&=_4879_mask;
			(*(_46320_a))._field_d[_46513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_49213_dig + '0')));
			(_46513_w)++;
			_46813_n=static_cast<jule::U64>((((_46813_n * 10LLU) + _49113_c) - '0'));
		}
	_iter_next_1ab4c4912:;
	}
	_iter_end_1ab4c4912:;;
	while ((_46813_n > 0LLU)) {
		{
			jule::U64 _50113_dig = (_46813_n >> _46332_k);;
			_46813_n&=_4879_mask;
			if ((_46513_w < 800LL)) {
				(*(_46320_a))._field_d[_46513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_50113_dig + '0')));
				(_46513_w)++;
			} else if ((_50113_dig > 0LLU)) {
				(*(_46320_a))._field_trunc=true;
			};
			_46813_n=static_cast<jule::U64>((_46813_n * 10LLU));
		}
	_iter_next_1ab4c4d41:;
	}
	_iter_end_1ab4c4d41:;;
	(*(_46320_a))._field_nd=_46513_w;
	_1dc5aee61_trim(_46320_a);
}



inline jule::Bool _1dc5b067b_prefixIsLessThan(jule::Array<jule::U8,800> _51721_b, jule::I64 _51735_end, jule::Str _51745_s) {
	jule::I64 _51813_i = 0LL;;
	for (; (_51813_i < _51745_s.len()); (_51813_i)++) {
		{
			if ((_51813_i >= _51735_end)) {
				return true;;
			};
			if ((_51721_b[_51813_i] != _51745_s[_51813_i])) {
				return (_51721_b[_51813_i] < _51745_s[_51813_i]);;
			};
		}
	_iter_next_1ab4c920d:;
	}
	_iter_end_1ab4c920d:;;
	return false;;
}



inline void _1dc5b0901_leftShift(_1dc5ad778_decimal* _53119_a, jule::U64 _53131_k) {
	jule::I64 _53213_delta = _1dc5ad1d4_leftCheats[static_cast<jule::I64>(_53131_k)]._field_delta;;
	if (_1dc5b067b_prefixIsLessThan((*(_53119_a))._field_d, (*(_53119_a))._field_nd, _1dc5ad1d4_leftCheats[static_cast<jule::I64>(_53131_k)]._field_cutoff)) {
		(_53213_delta)--;
	};
	jule::I64 _53713_r = (*(_53119_a))._field_nd;;
	jule::I64 _53813_w = ((*(_53119_a))._field_nd + _53213_delta);;
	jule::U64 _54113_n = 0LLU;;
	(_53713_r)--;
	for (; (_53713_r >= 0LL); (_53713_r)--) {
		{
			_54113_n+=((static_cast<jule::U64>((*(_53119_a))._field_d[_53713_r]) - '0') << _53131_k);
			jule::U64 _54513_quo = (_54113_n / 10LLU);;
			jule::U64 _54613_rem = (_54113_n - (10LLU * _54513_quo));;
			(_53813_w)--;
			if ((_53813_w < 800LL)) {
				(*(_53119_a))._field_d[_53813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_54613_rem + '0')));
			} else if ((_54613_rem != 0LLU)) {
				(*(_53119_a))._field_trunc=true;
			};
			_54113_n=_54513_quo;
		}
	_iter_next_1ab4cc750:;
	}
	_iter_end_1ab4cc750:;;
	while ((_54113_n > 0LLU)) {
		{
			jule::U64 _55813_quo = (_54113_n / 10LLU);;
			jule::U64 _55913_rem = (_54113_n - (10LLU * _55813_quo));;
			(_53813_w)--;
			if ((_53813_w < 800LL)) {
				(*(_53119_a))._field_d[_53813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_55913_rem + '0')));
			} else if ((_55913_rem != 0LLU)) {
				(*(_53119_a))._field_trunc=true;
			};
			_54113_n=_55813_quo;
		}
	_iter_next_1ab4d02ad:;
	}
	_iter_end_1ab4d02ad:;;
	(*(_53119_a))._field_nd+=_53213_delta;
	if (((*(_53119_a))._field_nd >= 800LL)) {
		(*(_53119_a))._field_nd=800LL;
	};
	(*(_53119_a))._field_dp+=_53213_delta;
	_1dc5aee61_trim(_53119_a);
}



inline jule::Bool _1dc5b0c42_shouldRoundUp(_1dc5ad778_decimal* _57819_a, jule::I64 _57831_nd) {
	if (((_57831_nd < 0LL) || (_57831_nd >= (*(_57819_a))._field_nd))) {
		return false;;
	};
	if ((((*(_57819_a))._field_d[_57831_nd] == '5') && ((_57831_nd + 1LL) == (*(_57819_a))._field_nd))) {
		if ((*(_57819_a))._field_trunc) {
			return true;;
		};
		return ((_57831_nd > 0LL) && ((((*(_57819_a))._field_d[(_57831_nd - 1LL)] - '0') & 1LL) != 0LLU));;
	};
	return ((*(_57819_a))._field_d[_57831_nd] >= '5');;
}



inline jule::Str _1dc5b235e_FmtUint(jule::U64 _6012_i, jule::I64 _6020_base) {
	if (((true && (_6012_i < 100LLU)) && (_6020_base == 10LL))) {
		return _1dc5b2caa_small(static_cast<jule::I64>(static_cast<jule::I64>(_6012_i)));;
	};
	jule::Str _6413_s;;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1dc5b3580_fmtBits(nullptr, _6012_i, _6020_base, false, false);
		_6413_s = __jule_assign_result.__jule_result_arg1;
	});
	return _6413_s;;
}



inline jule::Str _1dc5b26e4_FmtInt(jule::I64 _7111_i, jule::I64 _7119_base) {
	if ((((true && (0LL <= _7111_i)) && (_7111_i < 100LL)) && (_7119_base == 10LL))) {
		return _1dc5b2caa_small(static_cast<jule::I64>(static_cast<jule::I64>(_7111_i)));;
	};
	jule::Str _7513_s;;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1dc5b3580_fmtBits(nullptr, static_cast<jule::U64>(static_cast<jule::U64>(_7111_i)), _7119_base, (_7111_i < 0LL), false);
		_7513_s = __jule_assign_result.__jule_result_arg1;
	});
	return _7513_s;;
}



inline jule::Str _1dc5b298b_Itoa(jule::I64 _809_i) {
	return _1dc5b26e4_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_809_i)), 10LL);;
}



inline jule::Str _1dc5b2caa_small(jule::I64 _8510_i) {
	if ((_8510_i < 10LL)) {
		return jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(_8510_i, (_8510_i + 1LL));;
	};
	return jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice((_8510_i << 1LLU), ((_8510_i << 1LLU) + 2LL));;
}



inline jule::Bool _1dc5b3052_isPowerOfTwo(jule::I64 _9217_x) {
	return ((_9217_x & (_9217_x - 1LL)) == 0LL);;
}



inline __jule_tuple_su8__jule_tuple_str _1dc5b3580_fmtBits(jule::Slice<jule::U8> _10116_dst, jule::U64 _10133_u, jule::I64 _10141_base, jule::Bool _10152_neg, jule::Bool _10163_append_) {
	__jule_tuple_su8__jule_tuple_str __jule_func_result;
	if (((_10141_base < 2LL) || (_10141_base > 36LL))) {
		jule::panic(jule::Str("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:103:9"));;
	};
	jule::Slice<jule::U8> _10713_a = jule::Slice<jule::U8>::alloc(65LL, 65LL, 0);;
	jule::I64 _10813_i = _10713_a.len();;
	if (_10152_neg) {
		_10133_u=static_cast<jule::U64>((-(_10133_u)));
	};
	if ((_10141_base == 10LL)) {
		;
		jule::U64 _14917_us = static_cast<jule::U64>(_10133_u);;
		while ((_14917_us >= 100LLU)) {
			{
				jule::U64 _15117_is = ((_14917_us % 100LL) << 1LLU);;
				_14917_us/=100LLU;
				_10813_i-=2LL;
				_10713_a[(_10813_i + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 1LLU))]);
				_10713_a[(_10813_i + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 0LLU))]);
			}
		_iter_next_1ab51ceaa:;
		}
		_iter_end_1ab51ceaa:;;
		jule::U64 _15913_is = (_14917_us << 1LLU);;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15913_is + 1LLU))]);
		if ((_14917_us >= 10LLU)) {
			(_10813_i)--;
			_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(_15913_is)]);
		};
	} else if (_1dc5b3052_isPowerOfTwo(_10141_base)) {
		jule::U64 _17413_shift = (static_cast<jule::U64>(_1dc557733_TrailingZeros(static_cast<jule::U64>(static_cast<jule::U64>(_10141_base)))) & 7LLU);;
		jule::U64 _17513_b = static_cast<jule::U64>(_10141_base);;
		jule::U64 _17613_m = (static_cast<jule::U64>(_10141_base) - 1LLU);;
		while ((_10133_u >= _17513_b)) {
			{
				(_10813_i)--;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>((static_cast<jule::U64>(_10133_u) & _17613_m))]);
				_10133_u>>=_17413_shift;
			}
		_iter_next_1ab526788:;
		}
		_iter_end_1ab526788:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10133_u))]);
	} else {
		jule::U64 _18713_b = static_cast<jule::U64>(_10141_base);;
		while ((_10133_u >= _18713_b)) {
			{
				(_10813_i)--;
				jule::U64 _19317_q = jule::div(_10133_u,_18713_b);;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>((_10133_u - (_19317_q * _18713_b))))]);
				_10133_u=_19317_q;
			}
		_iter_next_1acae17be:;
		}
		_iter_end_1acae17be:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10133_u))]);
	};
	if (_10152_neg) {
		(_10813_i)--;
		_10713_a[_10813_i]='-';
	};
	if (_10163_append_) {
		__jule_func_result.__jule_result_arg0=jule::append(_10116_dst,_10713_a.slice(_10813_i));
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg1=static_cast<jule::Str>(_10713_a.slice(_10813_i));
	return __jule_func_result;;
}



inline jule::Str _1dc5b498d_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1acb0c147:;
			{
				return _1dc5b3edc_SysInt;;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1acb0c1ad:;
			{
				return _1dc5b42a6_SysUint;;
			}
		}
		else {
			_case_begin_1acb0c543:;
			{
				return _4515_kind;;
			}
		}
		_match_end_1acb0c9e9:;
	};
}



inline jule::I64 _1dc5b4c35_BitsizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == jule::Str("i8", 2) || _match_expr == jule::Str("u8", 2)) {
			_case_begin_1acb0da0b:;
			{
				return 8LLU;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3) || _match_expr == jule::Str("u16", 3)) {
			_case_begin_1acb0da72:;
			{
				return 16LLU;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3) || _match_expr == jule::Str("u32", 3) || _match_expr == jule::Str("f32", 3)) {
			_case_begin_1acb0d599:;
			{
				return 32LLU;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3) || _match_expr == jule::Str("u64", 3) || _match_expr == jule::Str("f64", 3)) {
			_case_begin_1acb0d610:;
			{
				return 64LLU;;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("int", 3) || _match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1acb0d676:;
			{
				return _1dc5b3c23_BitSize;;
			}
		}
		else {
			_case_begin_1acb0d0c1:;
			{
				return -1LL;;
			}
		}
		_match_end_1acb0d500:;
	};
}



inline jule::Str _1dc5b5054_IntFromBits(jule::I64 _8716_bits) {
	{
		auto &_match_expr{ _8716_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1acb10ac9:;
			{
				return jule::Str("i8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1acb10b40:;
			{
				return jule::Str("i16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1acb108dc:;
			{
				return jule::Str("i32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1acb10953:;
			{
				return jule::Str("i64", 3);;
			}
		}
		else {
			_case_begin_1acb0dc4d:;
			{
				return jule::Str();;
			}
		}
		_match_end_1acb10634:;
	};
}



inline jule::Str _1dc5b52eb_UintFromBits(jule::I64 _10517_bits) {
	{
		auto &_match_expr{ _10517_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1acb1204d:;
			{
				return jule::Str("u8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1acb120b4:;
			{
				return jule::Str("u16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1acb11d50:;
			{
				return jule::Str("u32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1acb11db6:;
			{
				return jule::Str("u64", 3);;
			}
		}
		else {
			_case_begin_1acb118bb:;
			{
				return jule::Str();;
			}
		}
		_match_end_1acb11789:;
	};
}



inline jule::Str _1dc5b5593_FloatFromBits(jule::I64 _12318_bits) {
	{
		auto &_match_expr{ _12318_bits };
		
		if (_match_expr == 32LLU) {
			_case_begin_1acb134c2:;
			{
				return jule::Str("f32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1acb13538:;
			{
				return jule::Str("f64", 3);;
			}
		}
		else {
			_case_begin_1acb12d40:;
			{
				return jule::Str();;
			}
		}
		_match_end_1acb12c0d:;
	};
}



inline jule::Bool _1dc5b6143_CheckBitFloat(jule::Str _15118_val, jule::I64 _15128_bit) {
	({
		auto except = _1dc5a8366_ParseFloat(_15118_val, _15128_bit);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} 0;});
	});
	return true;;
}



inline jule::I64 _1dc5b63da_BitsizeOfFloat(jule::F64 _16119_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16119_x) && (_16119_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1acc78dc9:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1acb1766e:;
			{
				return 64LLU;;
			}
		}
		_match_end_1acb175c5:;
	};
}



inline jule::I64 _1dc5b6682_BitsizeOfInt(jule::I64 _17717_x) {
	{
		
		if (((-128LL <= _17717_x) && (_17717_x <= 127LL))) {
			_case_begin_1acc79ca9:;
			{
				return 8LLU;;
			}
		}
		else if (((-32768LL <= _17717_x) && (_17717_x <= 32767LL))) {
			_case_begin_1acc79d20:;
			{
				return 16LLU;;
			}
		}
		else if (((-2147483648LL <= _17717_x) && (_17717_x <= 2147483647LL))) {
			_case_begin_1acc79d86:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1acc794d4:;
			{
				return 64LLU;;
			}
		}
		_match_end_1acc79418:;
	};
}



inline jule::I64 _1dc5b6929_BitsizeOfUint(jule::U64 _19718_x) {
	{
		
		if ((_19718_x <= 255LLU)) {
			_case_begin_1acc7bbbd:;
			{
				return 8LLU;;
			}
		}
		else if ((_19718_x <= 65535LLU)) {
			_case_begin_1acc7bc34:;
			{
				return 16LLU;;
			}
		}
		else if ((_19718_x <= 4294967295LLU)) {
			_case_begin_1acc7bc9a:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1acc7b10c:;
			{
				return 64LLU;;
			}
		}
		_match_end_1acc7ac22:;
	};
}



inline void _1dc5b6a8e_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _1d9e392e3_Arch };
			
			if (_match_expr == jule::Str("arm64", 5) || _match_expr == jule::Str("amd64", 5)) {
				_case_begin_1acc7cd34:;
				{
					_1dc5b3c23_BitSize=64LLU;
					_1dc5b3edc_SysInt=jule::Str("i64", 3);
					_1dc5b42a6_SysUint=jule::Str("u64", 3);
				}
			}
			else if (_match_expr == jule::Str("i386", 4)) {
				_case_begin_1acc7cdab:;
				{
					_1dc5b3c23_BitSize=32LLU;
					_1dc5b3edc_SysInt=jule::Str("i32", 3);
					_1dc5b42a6_SysUint=jule::Str("u32", 3);
				}
			}
			_match_end_1acc7cc79:;
		};
	};
}



inline void _1dc5b6c04_init(void) {
	_1dc5b6a8e_UpdateTarget();
}



inline jule::I64 _1dc5baa3d_MinI(jule::Str _6113_k) {
	_6113_k=_1dc5b498d_RealKindOf(_6113_k);
	{
		auto &_match_expr{ _6113_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1acc806c7:;
			{
				return -128LL;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1acc8073d:;
			{
				return -32768LL;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1acc801dd:;
			{
				return -2147483648LL;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1acc80254:;
			{
				return jule::MIN_I64;;
			}
		}
		else {
			_case_begin_1acc7d0dc:;
			{
				return 0LL;;
			}
		}
		_match_end_1acc7d2a7:;
	};
}



inline jule::I64 _1dc5bad29_MaxI(jule::Str _7913_k) {
	_7913_k=_1dc5b498d_RealKindOf(_7913_k);
	{
		auto &_match_expr{ _7913_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1acc81c39:;
			{
				return 127LL;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1acc81ca0:;
			{
				return 32767LL;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1acc81761:;
			{
				return 2147483647LL;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1acc817c7:;
			{
				return jule::MAX_I64;;
			}
		}
		else {
			_case_begin_1acc81497:;
			{
				return 0LL;;
			}
		}
		_match_end_1acc811ab:;
	};
}



inline jule::U64 _1dc5bb0c1_MaxU(jule::Str _9713_k) {
	_9713_k=_1dc5b498d_RealKindOf(_9713_k);
	{
		auto &_match_expr{ _9713_k };
		
		if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1acc8329b:;
			{
				return 255LLU;;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1acc83312:;
			{
				return 65535LLU;;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1acc82cc3:;
			{
				return 4294967295LLU;;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1acc82d39:;
			{
				return jule::MAX_U64;;
			}
		}
		else {
			_case_begin_1acc82a09:;
			{
				return 0LLU;;
			}
		}
		_match_end_1acc8271d:;
	};
}



inline jule::F64 _1dc5bb2d0_Min(jule::Str _11512_k) {
	_11512_k=_1dc5b498d_RealKindOf(_11512_k);
	jule::I64 _1179_i = _1dc5baa3d_MinI(_11512_k);;
	if ((_1179_i != 0LL)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1179_i));;
	};
	{
		auto &_match_expr{ _11512_k };
		
		if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1acc852e2:;
			{
				return -340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1acc85358:;
			{
				return jule::MIN_F64;;
			}
		}
		else {
			_case_begin_1acc84863:;
			{
				return 0LL;;
			}
		}
		_match_end_1acc84698:;
	};
}



inline jule::F64 _1dc5bb577_Max(jule::Str _13312_k) {
	_13312_k=_1dc5b498d_RealKindOf(_13312_k);
	jule::I64 _1359_i = _1dc5bad29_MaxI(_13312_k);;
	if ((_1359_i != 0LL)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1359_i));;
	};
	jule::U64 _1399_u = _1dc5bb0c1_MaxU(_13312_k);;
	if ((_1399_u != 0LLU)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1399_u));;
	};
	{
		auto &_match_expr{ _13312_k };
		
		if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1acc87646:;
			{
				return 340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1acc876ac:;
			{
				return jule::MAX_F64;;
			}
		}
		else {
			_case_begin_1acc87206:;
			{
				return 0LL;;
			}
		}
		_match_end_1acc869ec:;
	};
}



inline jule::Bool _1dc5bb9c8_IsI8Compatible(jule::Str _623_k) {
	return _623_k.equal("i8", 2);;
}



inline jule::Bool _1dc5bbcb4_IsI16Compatible(jule::Str _1124_k) {
	return (_1124_k.equal("i8", 2) || _1124_k.equal("i16", 3));;
}



inline jule::Bool _1dc5bc05b_IsI32Compatible(jule::Str _1724_k) {
	return (((_1724_k.equal("i8", 2) || _1724_k.equal("i16", 3)) || _1724_k.equal("i32", 3)) || _1724_k.equal("u8", 2));;
}



inline jule::Bool _1dc5bc37a_IsI64Compatible(jule::Str _2524_k) {
	return (((_2524_k.equal("i8", 2) || _2524_k.equal("i16", 3)) || _2524_k.equal("i32", 3)) || _2524_k.equal("i64", 3));;
}



inline jule::Bool _1dc5bc622_IsU8Compatible(jule::Str _3323_k) {
	return _3323_k.equal("u8", 2);;
}



inline jule::Bool _1dc5bc8b9_IsU16Compatible(jule::Str _3824_k) {
	return (_3824_k.equal("u8", 2) || _3824_k.equal("u16", 3));;
}



inline jule::Bool _1dc5bcb61_IsU32Compatible(jule::Str _4324_k) {
	return ((_4324_k.equal("u8", 2) || _4324_k.equal("u16", 3)) || _4324_k.equal("u32", 3));;
}



inline jule::Bool _1dc5bced5_IsU64Compatible(jule::Str _5024_k) {
	return (((_5024_k.equal("u8", 2) || _5024_k.equal("u16", 3)) || _5024_k.equal("u32", 3)) || _5024_k.equal("u64", 3));;
}



inline jule::Bool _1dc5bd27c_IsF32Compatible(jule::Str _5824_k) {
	return _5824_k.equal("f32", 3);;
}



inline jule::Bool _1dc5bd524_IsF64Compatible(jule::Str _6324_k) {
	return _6324_k.equal("f64", 3);;
}



inline jule::Bool _1dc5bd865_TypesAreCompatible(jule::Str _7027_k1, jule::Str _7036_k2) {
	{
		auto &_match_expr{ _7027_k1 };
		
		if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1acbd29c0:;
			{
				return true;;
			}
		}
		else if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1acbd32a6:;
			{
				return _7036_k2.equal("int", 3);;
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1acbd331c:;
			{
				return _7036_k2.equal("uintptr", 7);;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1acbd2c9a:;
			{
				return _7036_k2.equal("uint", 4);;
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1acbd2d11:;
			{
				return _1dc5bb9c8_IsI8Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1acbd2d77:;
			{
				return _1dc5bbcb4_IsI16Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1acbd2ddd:;
			{
				return _1dc5bc05b_IsI32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1acbd33b6:;
			{
				return _1dc5bc37a_IsI64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1acbd342c:;
			{
				return _1dc5bc622_IsU8Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1acbd3493:;
			{
				return _1dc5bc8b9_IsU16Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1acbd3509:;
			{
				return _1dc5bcb61_IsU32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1acbd3570:;
			{
				return _1dc5bced5_IsU64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1acbd35d6:;
			{
				return _1dc5bd27c_IsF32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1acbd365d:;
			{
				return _1dc5bd524_IsF64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("bool", 4)) {
			_case_begin_1acbd36d5:;
			{
				return _7036_k2.equal("bool", 4);;
			}
		}
		else if (_match_expr == jule::Str("str", 3)) {
			_case_begin_1acbd375c:;
			{
				return _7036_k2.equal("str", 3);;
			}
		}
		else {
			_case_begin_1acbd2b8a:;
			{
				return false;;
			}
		}
		_match_end_1acbd2a58:;
	};
}



inline jule::Bool _1dc5bdb0c_IsI16Greater(jule::Str _11021_k) {
	return _11021_k.equal("i8", 2);;
}



inline jule::Bool _1dc5bdda4_IsI32Greater(jule::Str _11521_k) {
	return (_11521_k.equal("i8", 2) || _11521_k.equal("i16", 3));;
}



inline jule::Bool _1dc5be14b_IsI64Greater(jule::Str _12021_k) {
	return ((_12021_k.equal("i8", 2) || _12021_k.equal("i16", 3)) || _12021_k.equal("i32", 3));;
}



inline jule::Bool _1dc5be3e3_IsU16Greater(jule::Str _12721_k) {
	return _12721_k.equal("u8", 2);;
}



inline jule::Bool _1dc5be844_IsU32Greater(jule::Str _13221_k) {
	return (_13221_k.equal("u8", 2) || _13221_k.equal("u16", 3));;
}



inline jule::Bool _1dc5beadb_IsU64Greater(jule::Str _13821_k) {
	return ((_13821_k.equal("u8", 2) || _13821_k.equal("u16", 3)) || _13821_k.equal("u32", 3));;
}



inline jule::Bool _1dc5bed83_IsF32Greater(jule::Str _14517_k) {
	return (!_14517_k.equal("f64", 3));;
}



inline jule::Bool _1dc5c012a_IsF64Greater(jule::Str _15017_k) {
	return true;;
}



inline jule::Bool _1dc5c046b_IsGreater(jule::Str _15518_k1, jule::Str _15527_k2) {
	{
		auto &_match_expr{ _15518_k1 };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1acbd3d23:;
			{
				return _1dc5c14a0_IsSigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1acbdb37a:;
			{
				return _1dc5c178b_IsUnsigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1acbdb3e1:;
			{
				return _1dc5c178b_IsUnsigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1acbdb457:;
			{
				return _1dc5bdb0c_IsI16Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1acbdb0a0:;
			{
				return _1dc5bdda4_IsI32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1acbdb116:;
			{
				return _1dc5be14b_IsI64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1acbdb17c:;
			{
				return _1dc5be3e3_IsU16Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1acbdb1e3:;
			{
				return _1dc5be844_IsU32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1acbdb688:;
			{
				return _1dc5beadb_IsU64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1acbdb6ee:;
			{
				return _1dc5bed83_IsF32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1acbdb765:;
			{
				return _1dc5c012a_IsF64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1acbdb7dc:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1acbdae3a:;
			{
				return false;;
			}
		}
		_match_end_1acbdad91:;
	};
}



inline jule::Bool _1dc5c14a0_IsSigInt(jule::Str _2717_k) {
	return ((((_2717_k.equal("i8", 2) || _2717_k.equal("i16", 3)) || _2717_k.equal("i32", 3)) || _2717_k.equal("i64", 3)) || _2717_k.equal("int", 3));;
}



inline jule::Bool _1dc5c178b_IsUnsigInt(jule::Str _3619_k) {
	return (((((_3619_k.equal("u8", 2) || _3619_k.equal("u16", 3)) || _3619_k.equal("u32", 3)) || _3619_k.equal("u64", 3)) || _3619_k.equal("uint", 4)) || _3619_k.equal("uintptr", 7));;
}



inline jule::Bool _1dc5c1a33_IsInt(jule::Str _4610_k) {
	return (_1dc5c14a0_IsSigInt(_4610_k) || _1dc5c178b_IsUnsigInt(_4610_k));;
}



inline jule::Bool _1dc5c1d52_IsFloat(jule::Str _5112_k) {
	return (_5112_k.equal("f32", 3) || _5112_k.equal("f64", 3));;
}



inline jule::Bool _1c0901698_IsNum(jule::Str _5610_k) {
	return (_1dc5c1a33_IsInt(_5610_k) || _1dc5c1d52_IsFloat(_5610_k));;
}



inline jule::Bool _1c09018a7_IsSigNum(jule::Str _6113_k) {
	return (_1dc5c14a0_IsSigInt(_6113_k) || _1dc5c1d52_IsFloat(_6113_k));;
}



inline void _1c090a33e_lshiftUnsig(_1c0901b1b_Const* _59021_c, _1c0901b1b_Const* _59032_x) {
	jule::U64 _5919_l = _1c090438d_AsU64(_59021_c);;
	jule::U64 _5929_r = _1c090438d_AsU64(_59032_x);;
	_1c0904aec_SetU64(_59021_c, static_cast<jule::U64>((_5919_l << _5929_r)));
}



inline void _1c090a63b_rshiftUnsig(_1c0901b1b_Const* _59621_c, _1c0901b1b_Const* _59632_x) {
	jule::U64 _5979_l = _1c090438d_AsU64(_59621_c);;
	jule::U64 _5989_r = _1c090438d_AsU64(_59632_x);;
	_1c0904aec_SetU64(_59621_c, static_cast<jule::U64>((_5979_l >> _5989_r)));
}



inline jule::Bool _1aa9224d1_IsAscii(jule::I32 _1012_r) {
	;
	return (_1012_r <= 127LL);;
}



inline jule::I32 _1aa922613_ToRune(jule::Slice<jule::U8> _1811_bytes) {
	if ((_1811_bytes.len() == 0LL)) {
		return 0LL;;
	};
	jule::I32 _2313_r = 0LL;;
	if (((_1811_bytes[0LL] == '\\') && (_1811_bytes.len() > 1LL))) {
		jule::I64 _2517_i = 0LL;;
		_2313_r=static_cast<jule::I32>(_1aa939edd_runeFromEsqSeq(_1811_bytes, &(_2517_i)));
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _203e638ec_DecodeRune(_1811_bytes);
			_2313_r = __jule_assign_result.__jule_result_arg0;
		});
	};
	return _2313_r;;
}



inline jule::Str _1aa939619_ToRawStr(jule::Slice<jule::U8> _3713_bytes) {
	return static_cast<jule::Str>(_3713_bytes);;
}



inline jule::Str _1aa939938_ToStr(jule::Slice<jule::U8> _4210_bytes) {
	if ((_4210_bytes.len() == 0LL)) {
		return jule::Str();;
	};
	jule::Slice<jule::U8> _4713_s = jule::Slice<jule::U8>::alloc(0LL, _4210_bytes.len(), 0);;
	jule::I64 _4813_i = 0LL;;
	while ((_4813_i < _4210_bytes.len())) {
		{
			jule::U8 _5013_b = _4210_bytes[_4813_i];;
			if ((_5013_b == '\\')) {
				_4713_s=jule::append(_4713_s,_1aa93a32e_strEsqSeq(_4210_bytes, &(_4813_i)));
			} else {
				jule::I32 _5418_r = 0;;
				jule::I64 _5421_size = 0;;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _203e638ec_DecodeRune(_4210_bytes.slice(_4813_i));
					_5418_r = __jule_assign_result.__jule_result_arg0;
					_5421_size = __jule_assign_result.__jule_result_arg1;
				});
				_4813_i+=_5421_size;
				_4713_s=_203e64c61_AppendRune(_4713_s, _5418_r);
			};
		}
	_iter_next_1ace0ad80:;
	}
	_iter_end_1ace0ad80:;;
	return static_cast<jule::Str>(_4713_s);;
}



inline __jule_tuple_u8__jule_tuple_bool _1aa939bd0_tryBtoaCommonEsq(jule::Slice<jule::U8> _6221_bytes) {
	__jule_tuple_u8__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_6221_bytes.len() < 2LL) || (_6221_bytes[0LL] != '\\'))) {
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _6221_bytes[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1ace1034b:;
			{
				__jule_func_result.__jule_result_arg0='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1ace103b2:;
			{
				__jule_func_result.__jule_result_arg0='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1ace10428:;
			{
				__jule_func_result.__jule_result_arg0='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1ace1048e:;
			{
				__jule_func_result.__jule_result_arg0='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1ace10516:;
			{
				__jule_func_result.__jule_result_arg0='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1ace1058d:;
			{
				__jule_func_result.__jule_result_arg0='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1ace10615:;
			{
				__jule_func_result.__jule_result_arg0='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1ace1068c:;
			{
				__jule_func_result.__jule_result_arg0='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1ace10714:;
			{
				__jule_func_result.__jule_result_arg0='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1ace1078b:;
			{
				__jule_func_result.__jule_result_arg0='\v';
			}
		}
		_match_end_1ace1022a:;
	};
	__jule_func_result.__jule_result_arg1=(__jule_func_result.__jule_result_arg0 != 0LLU);
	return __jule_func_result;;
}



inline jule::I32 _1aa939edd_runeFromEsqSeq(jule::Slice<jule::U8> _9219_bytes, jule::I64* _9239_i) {
	jule::U8 _9310_b = 0;;
	jule::Bool _9313_ok = false;;
	({
		__jule_tuple_u8__jule_tuple_bool __jule_assign_result = _1aa939bd0_tryBtoaCommonEsq(_9219_bytes.slice((*(_9239_i))));
		_9310_b = __jule_assign_result.__jule_result_arg0;
		_9313_ok = __jule_assign_result.__jule_result_arg1;
	});
	((*(_9239_i)))++;
	if (_9313_ok) {
		((*(_9239_i)))++;
		return static_cast<jule::I32>(static_cast<jule::I32>(_9310_b));;
	};
	{
		auto &_match_expr{ _9219_bytes[(*(_9239_i))] };
		
		if (_match_expr == 'u') {
			_case_begin_1ace1640c:;
			{
				;
				jule::I32 _10313_r = static_cast<jule::I32>(({
					auto except = _1dc5a1914_ParseUint(static_cast<jule::Str>(_9219_bytes.slice(((*(_9239_i)) + 1LL), ((*(_9239_i)) + 5LL))), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:103:22"));
					(except.result);
				}));;
				(*(_9239_i))+=5LL;
				return _10313_r;;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1ace15c9c:;
			{
				;
				jule::I32 _10813_r = static_cast<jule::I32>(({
					auto except = _1dc5a1914_ParseUint(static_cast<jule::Str>(_9219_bytes.slice(((*(_9239_i)) + 1LL), ((*(_9239_i)) + 9LL))), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:108:22"));
					(except.result);
				}));;
				(*(_9239_i))+=9LL;
				return _10813_r;;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1ace15d13:;
			{
				;
				jule::Slice<jule::U8> _11313_seq = _9219_bytes.slice(((*(_9239_i)) + 1LL), ((*(_9239_i)) + 3LL));;
				(*(_9239_i))+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1dc5a1914_ParseUint(static_cast<jule::Str>(_11313_seq), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:115:18"));
					(except.result);
				})));;
			}
		}
		else {
			_case_begin_1ace149c1:;
			{
				;
				jule::Slice<jule::U8> _11813_seq = _9219_bytes.slice((*(_9239_i)), ((*(_9239_i)) + 3LL));;
				(*(_9239_i))+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1dc5a1914_ParseUint(static_cast<jule::Str>(_11813_seq.slice(1LL)), 8LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:120:18"));
					(except.result);
				})));;
			}
		}
		_match_end_1ace1495a:;
	};
}



inline jule::Slice<jule::U8> _1aa93a32e_strEsqSeq(jule::Slice<jule::U8> _12414_bytes, jule::I64* _12434_i) {
	jule::I32 _1259_r = _1aa939edd_runeFromEsqSeq(_12414_bytes, _12434_i);;
	if ((_1259_r <= 255LL)) {
		return jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_1259_r))});;
	};
	return static_cast<jule::Slice<jule::U8>>(static_cast<jule::Str>(_1259_r));;
}



inline jule::I64 _1aa2a66b2_findFormatPrefix(jule::Slice<jule::U8>* _1022_bytes, jule::I64* _1038_start) {
	jule::I64 _1113_i = (*(_1038_start));;
	while ((_1113_i < (*(_1022_bytes)).len())) {
		{
			jule::I32 _1314_r = 0;;
			jule::I64 _1317_size = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _203e638ec_DecodeRune((*(_1022_bytes)).slice(_1113_i));
				_1314_r = __jule_assign_result.__jule_result_arg0;
				_1317_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1314_r == '{')) {
				return _1113_i;;
			};
			_1113_i+=_1317_size;
		}
	_iter_next_1ace49275:;
	}
	_iter_end_1ace49275:;;
	return -1LL;;
}



inline jule::Slice<jule::U8> _1aa2ac300_getFormatRange(jule::I64* _2724_i, jule::Slice<jule::U8>* _2737_bytes) {
	jule::I64 _289_start = (*(_2724_i));;
	jule::I64 _2913_braces = 0LL;;
	while (((*(_2724_i)) < (*(_2737_bytes)).len())) {
		{
			jule::I32 _3114_r = 0;;
			jule::I64 _3117_size = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _203e638ec_DecodeRune((*(_2737_bytes)).slice((*(_2724_i))));
				_3114_r = __jule_assign_result.__jule_result_arg0;
				_3117_size = __jule_assign_result.__jule_result_arg1;
			});
			(*(_2724_i))+=_3117_size;
			{
				auto &_match_expr{ _3114_r };
				
				if (_match_expr == '{') {
					_case_begin_1ace4bd27:;
					{
						(_2913_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1ace4bd8d:;
					{
						(_2913_braces)--;
						if ((_2913_braces == 0LL)) {
							return (*(_2737_bytes)).slice(_289_start, (*(_2724_i)));;
						};
					}
				}
				_match_end_1ace4ba19:;
			};
		}
	_iter_next_1ace4b0e0:;
	}
	_iter_end_1ace4b0e0:;;
	return nullptr;;
}



inline void _1aa2ac5a8_FmtByDefault(jule::Str* _4722_buf, jule::Any* _4733_arg) {
	if (((*(_4733_arg)) == nullptr)) {
		((*(_4722_buf))).append("<nil>", 5);
		return;;
	};
	{
		auto &_match_expr{ (*(_4733_arg)) };
		
		if (_match_expr.type == &__jule_any_type131) {
			_case_begin_1ace4cd17:;
			{
				(*(_4722_buf))+=_1dc59bdc6_FmtFloat(static_cast<jule::F64>(static_cast<jule::F64>((*(_4733_arg)).cast<jule::F32>(&__jule_any_type131))), 'g', -1LL, 32LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1ace4daa4:;
			{
				(*(_4722_buf))+=_1dc59bdc6_FmtFloat(static_cast<jule::F64>((*(_4733_arg)).cast<jule::F64>(&__jule_any_type6)), 'g', -1LL, 64LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type132) {
			_case_begin_1ace4dc5d:;
			{
				(*(_4722_buf))+=_1dc5b26e4_FmtInt(static_cast<jule::I64>((*(_4733_arg)).cast<jule::I8>(&__jule_any_type132)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type133) {
			_case_begin_1ace4cda0:;
			{
				(*(_4722_buf))+=_1dc5b26e4_FmtInt(static_cast<jule::I64>((*(_4733_arg)).cast<jule::I16>(&__jule_any_type133)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1ace4d6ca:;
			{
				(*(_4722_buf))+=_1dc5b26e4_FmtInt(static_cast<jule::I64>((*(_4733_arg)).cast<jule::I32>(&__jule_any_type1)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1ace4d741:;
			{
				(*(_4722_buf))+=_1dc5b26e4_FmtInt(static_cast<jule::I64>((*(_4733_arg)).cast<jule::I64>(&__jule_any_type2)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type130) {
			_case_begin_1ace4dcd5:;
			{
				(*(_4722_buf))+=_1dc5b235e_FmtUint(static_cast<jule::U64>((*(_4733_arg)).cast<jule::U8>(&__jule_any_type130)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type134) {
			_case_begin_1ace4dd4b:;
			{
				(*(_4722_buf))+=_1dc5b235e_FmtUint(static_cast<jule::U64>((*(_4733_arg)).cast<jule::U16>(&__jule_any_type134)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type135) {
			_case_begin_1ace4ddb2:;
			{
				(*(_4722_buf))+=_1dc5b235e_FmtUint(static_cast<jule::U64>((*(_4733_arg)).cast<jule::U32>(&__jule_any_type135)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1ace4de28:;
			{
				(*(_4722_buf))+=_1dc5b235e_FmtUint(static_cast<jule::U64>((*(_4733_arg)).cast<jule::U64>(&__jule_any_type3)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1ace4de8e:;
			{
				(*(_4722_buf))+=(*(_4733_arg)).cast<jule::Str>(&__jule_any_type5);
			}
		}
		else if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1ace4e005:;
			{
				if ((*(_4733_arg)).cast<jule::Bool>(&__jule_any_type4)) {
					((*(_4722_buf))).append("true", 4);
				} else {
					((*(_4722_buf))).append("false", 5);
				};
			}
		}
		else {
			_case_begin_1ace4d576:;
			{
				(*(_4722_buf))+=jule::to_str((*(_4733_arg)));
			}
		}
		_match_end_1ace4c311:;
	};
}



inline void _1aa2ac982_applyFmtByDefault(jule::Str* _8627_buf, jule::I64* _8642_j, jule::Slice<jule::Any>* _8651_args) {
	jule::Any _879_arg = (*(_8651_args))[(*(_8642_j))];;
	((*(_8642_j)))++;
	_1aa2ac5a8_FmtByDefault(_8627_buf, &(_879_arg));
}



inline void _1aa2acd7d_applyFmt(jule::Slice<jule::U8>* _9418_fmt, jule::Str* _9436_buf, jule::I64* _9451_j, jule::Slice<jule::Any>* _9460_args) {
	if (((*(_9418_fmt)).len() == 2LL)) {
		_1aa2ac982_applyFmtByDefault(_9436_buf, _9451_j, _9460_args);
		return;;
	};
	if (((((((*(_9418_fmt)).len() == 4LL) && ((*(_9418_fmt))[0LL] == '{')) && ((*(_9418_fmt))[1LL] == '{')) && ((*(_9418_fmt))[2LL] == '}')) && ((*(_9418_fmt))[3LL] == '}'))) {
		((*(_9436_buf))).append("{}", 2);
		return;;
	};
	_203d7b590_PushToStrBuffer(_9436_buf, (*(_9418_fmt)));
}



inline jule::Str _1aa2ad18b_Format(jule::Str* _11312_fmt, jule::Slice<jule::Any> _11322_args) {
	if ((_11322_args.len() == 0LL)) {
		return (*(_11312_fmt));;
	};
	jule::Slice<jule::U8> _11713_fmtBytes = _203d7addb_Stobs(_11312_fmt);;
	jule::Str _11813_buf = jule::Str::alloc(0LL, (*(_11312_fmt)).len());;
	jule::I64 _11913_j = 0LL;;
	jule::I64 _12013_last = 0LL;;
	jule::I64 _12113_i = _1aa2a66b2_findFormatPrefix(&(_11713_fmtBytes), &(_12013_last));;
	for (; (_12113_i != -1LL); _12113_i=static_cast<jule::I64>(_1aa2a66b2_findFormatPrefix(&(_11713_fmtBytes), &(_12113_i)))) {
		{
			_203d7b590_PushToStrBuffer(&(_11813_buf), _11713_fmtBytes.slice(_12013_last, _12113_i));
			jule::Slice<jule::U8> _12417_format = _1aa2ac300_getFormatRange(&(_12113_i), &(_11713_fmtBytes));;
			if ((_12417_format == nullptr)) {
				goto _iter_next_1ace5a64e;
			};
			_1aa2acd7d_applyFmt(&(_12417_format), &(_11813_buf), &(_11913_j), &(_11322_args));
			if ((_11913_j >= _11322_args.len())) {
				_203d7b590_PushToStrBuffer(&(_11813_buf), _11713_fmtBytes.slice(_12113_i));
				_12013_last=static_cast<jule::I64>(_11713_fmtBytes.len());
				goto _iter_end_1ace5a64e;
			};
			_12013_last=_12113_i;
		}
	_iter_next_1ace5a64e:;
	}
	_iter_end_1ace5a64e:;;
	if ((_12013_last < _11713_fmtBytes.len())) {
		_203d7b590_PushToStrBuffer(&(_11813_buf), _11713_fmtBytes.slice(_12013_last));
	};
	return _11813_buf;;
}



inline jule::Str _1aa2aee5c_Format(jule::Str _3011_fmt, jule::Slice<jule::Any> _3021_args) {
	return _1aa2ad18b_Format(&(_3011_fmt), _3021_args);;
}



inline jule::Bool _1aa88e1d9_parameterUsesGenerics(jule::Ptr<_1aa88b208_ParamIns>* _38031_p, jule::Slice<jule::Ptr<_1aa861321_GenericDecl>>* _38046_generics) {
	if (_1aa888216_IsSelf((*(_38031_p)).get()._field_Decl.ptr())) {
		return false;;
	};
	return _1aa99b2e6_kindUsesGenerics(&((*(_38031_p)).get()._field_Kind), _38046_generics);;
}



inline jule::Ptr<_1aa9889ba_TypeSymbol> _1aa8916b4_buildType(jule::Ptr<_1aa854028_TypeDecl> _9418_t) {
	if ((_9418_t == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1aa9889ba_TypeSymbol>(_1aa9889ba_TypeSymbol{._field_Decl=_9418_t, });;
}



inline jule::Ptr<_1aa958e0d_Value> _1aa8919a0_buildExpr(jule::Ptr<_1aa858549_Expr> _10318_expr) {
	if ((_10318_expr == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1aa958e0d_Value>(_1aa958e0d_Value{._field_Expr=_10318_expr, });;
}



inline jule::Ptr<_1aa982b29_TypeAlias> _1aa891c47_buildTypeAlias(jule::Ptr<_1aa86a2e7_TypeAliasDecl> _11223_decl) {
	return jule::new_ptr<_1aa982b29_TypeAlias>(_1aa982b29_TypeAlias{._field_Scope=_11223_decl.get()._field_Scope, ._field_Public=_11223_decl.get()._field_Public, ._field_CppLinked=_11223_decl.get()._field_CppLinked, ._field_Token=_11223_decl.get()._field_Token, ._field_Ident=_11223_decl.get()._field_Ident, ._field_Kind=_1aa8916b4_buildType(_11223_decl.get()._field_Kind), });;
}



inline jule::Ptr<_1aa8714eb_Field> _1aa892066_buildField(jule::Ptr<_1aa86d98d_FieldDecl> _12319_decl) {
	return jule::new_ptr<_1aa8714eb_Field>(_1aa8714eb_Field{._field_Token=_12319_decl.get()._field_Token, ._field_Public=_12319_decl.get()._field_Public, ._field_Mutable=_12319_decl.get()._field_Mutable, ._field_Ident=_12319_decl.get()._field_Ident, ._field_Kind=_1aa8916b4_buildType(_12319_decl.get()._field_Kind), ._field_Default=_12319_decl.get()._field_Default});;
}



inline jule::Slice<jule::Ptr<_1aa8714eb_Field>> _1aa89230d_buildFields(jule::Slice<jule::Ptr<_1aa86d98d_FieldDecl>>* _13421_decls) {
	jule::Slice<jule::Ptr<_1aa8714eb_Field>> _13513_fields = jule::Slice<jule::Ptr<_1aa8714eb_Field>>::alloc(0LL, (*(_13421_decls)).len());;
	{
		auto expr = _13421_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad0eac40:;
		if (it != expr_end) {
			jule::Ptr<_1aa86d98d_FieldDecl> _13617_decl = *it;
			{
				_13513_fields = jule::alloc_for_append(_13513_fields,1);_13513_fields.__push(_1aa892066_buildField(_13617_decl));;
			}
			_iter_next_1ad0eac40:;
			++it;
			goto _iter_begin_1ad0eac40;
		}
		_iter_end_1ad0eac40:;
	};
	return _13513_fields;;
}



inline jule::Ptr<_1aa8740c0_Struct> _1aa8925a5_buildStruct(jule::Ptr<_1aa86e241_StructDecl> _14220_decl) {
	return jule::new_ptr<_1aa8740c0_Struct>(_1aa8740c0_Struct{._field_Token=_14220_decl.get()._field_Token, ._field_Ident=_14220_decl.get()._field_Ident, ._field_Fields=_1aa89230d_buildFields(&(_14220_decl.get()._field_Fields)), ._field_Public=_14220_decl.get()._field_Public, ._field_CppLinked=_14220_decl.get()._field_CppLinked, ._field_Directives=_14220_decl.get()._field_Directives, ._field_Generics=_14220_decl.get()._field_Generics, });;
}



inline jule::Ptr<_1aa887ad9_Param> _1aa89284c_buildParam(jule::Ptr<_1aa864687_ParamDecl> _15419_decl) {
	return jule::new_ptr<_1aa887ad9_Param>(_1aa887ad9_Param{._field_Token=_15419_decl.get()._field_Token, ._field_Mutable=_15419_decl.get()._field_Mutable, ._field_Variadic=_15419_decl.get()._field_Variadic, ._field_Reference=_15419_decl.get()._field_Reference, ._field_Kind=_1aa8916b4_buildType(_15419_decl.get()._field_Kind), ._field_Ident=_15419_decl.get()._field_Ident});;
}



inline jule::Slice<jule::Ptr<_1aa887ad9_Param>> _1aa892bc1_buildParams(jule::Slice<jule::Ptr<_1aa864687_ParamDecl>>* _16521_decls) {
	jule::Slice<jule::Ptr<_1aa887ad9_Param>> _16613_params = jule::Slice<jule::Ptr<_1aa887ad9_Param>>::alloc(0LL, (*(_16521_decls)).len());;
	{
		auto expr = _16521_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad0ed869:;
		if (it != expr_end) {
			jule::Ptr<_1aa864687_ParamDecl> _16717_decl = *it;
			{
				_16613_params = jule::alloc_for_append(_16613_params,1);_16613_params.__push(_1aa89284c_buildParam(_16717_decl));;
			}
			_iter_next_1ad0ed869:;
			++it;
			goto _iter_begin_1ad0ed869;
		}
		_iter_end_1ad0ed869:;
	};
	return _16613_params;;
}



inline jule::Ptr<_1aa8873d0_RetType> _1aa892e68_buildRetType(jule::Ptr<_1aa85713b_RetTypeDecl> _17321_decl) {
	if (((_17321_decl.get()._field_Idents == nullptr) && (_17321_decl.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	return jule::new_ptr<_1aa8873d0_RetType>(_1aa8873d0_RetType{._field_Kind=_1aa8916b4_buildType(_17321_decl.get()._field_Kind), ._field_Idents=_17321_decl.get()._field_Idents});;
}



inline jule::Ptr<_1aa889426_Fn> _1aa893210_buildFn(jule::Ptr<_1aa8659a7_FnDecl> _18316_decl) {
	return jule::new_ptr<_1aa889426_Fn>(_1aa889426_Fn{._field_Token=_18316_decl.get()._field_Token, ._field_Global=_18316_decl.get()._field_Global, ._field_Unsafety=_18316_decl.get()._field_Unsafety, ._field_Public=_18316_decl.get()._field_Public, ._field_CppLinked=_18316_decl.get()._field_CppLinked, ._field_Statically=_18316_decl.get()._field_Statically, ._field_Exceptional=_18316_decl.get()._field_Exceptional, ._field_Ident=_18316_decl.get()._field_Ident, ._field_Directives=_18316_decl.get()._field_Directives, ._field_Scope=_18316_decl.get()._field_Scope, ._field_Generics=_18316_decl.get()._field_Generics, ._field_Result=_1aa892e68_buildRetType(_18316_decl.get()._field_Result), ._field_Params=_1aa892bc1_buildParams(&(_18316_decl.get()._field_Params)), });;
}



inline jule::Slice<jule::Ptr<_1aa889426_Fn>> _1aa8934a7_buildMethods(jule::Slice<jule::Ptr<_1aa8659a7_FnDecl>>* _20122_decls) {
	jule::Slice<jule::Ptr<_1aa889426_Fn>> _20213_methods = jule::Slice<jule::Ptr<_1aa889426_Fn>>::alloc(0LL, (*(_20122_decls)).len());;
	{
		auto expr = _20122_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad102362:;
		if (it != expr_end) {
			jule::Ptr<_1aa8659a7_FnDecl> _20317_decl = *it;
			{
				_20213_methods = jule::alloc_for_append(_20213_methods,1);_20213_methods.__push(_1aa893210_buildFn(_20317_decl));;
			}
			_iter_next_1ad102362:;
			++it;
			goto _iter_begin_1ad102362;
		}
		_iter_end_1ad102362:;
	};
	return _20213_methods;;
}



inline jule::Slice<jule::Ptr<_1aa9889ba_TypeSymbol>> _1aa89374e_buildTraitInherits(jule::Slice<jule::Ptr<_1aa854028_TypeDecl>>* _20928_inherits) {
	jule::Slice<jule::Ptr<_1aa9889ba_TypeSymbol>> _21013_symbols = jule::Slice<jule::Ptr<_1aa9889ba_TypeSymbol>>::alloc(0LL, (*(_20928_inherits)).len());;
	{
		auto expr = _20928_inherits;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad10352d:;
		if (it != expr_end) {
			jule::Ptr<_1aa854028_TypeDecl> _21117_it = *it;
			{
				_21013_symbols = jule::alloc_for_append(_21013_symbols,1);_21013_symbols.__push(_1aa8916b4_buildType(_21117_it));;
			}
			_iter_next_1ad10352d:;
			++it;
			goto _iter_begin_1ad10352d;
		}
		_iter_end_1ad10352d:;
	};
	return _21013_symbols;;
}



inline jule::Ptr<_1aa89b647_Trait> _1aa8939e6_buildTrait(jule::Ptr<_1aa86e917_TraitDecl> _21719_decl) {
	return jule::new_ptr<_1aa89b647_Trait>(_1aa89b647_Trait{._field_Token=_21719_decl.get()._field_Token, ._field_Ident=_21719_decl.get()._field_Ident, ._field_Public=_21719_decl.get()._field_Public, ._field_Inherits=_1aa89374e_buildTraitInherits(&(_21719_decl.get()._field_Inherits)), ._field_Methods=_1aa8934a7_buildMethods(&(_21719_decl.get()._field_Methods)), });;
}



inline jule::Ptr<_1aa89d3d5_EnumItem> _1aa893c8d_buildEnumItem(jule::Ptr<_1aa86bb56_EnumItemDecl> _22722_decl) {
	return jule::new_ptr<_1aa89d3d5_EnumItem>(_1aa89d3d5_EnumItem{._field_Token=_22722_decl.get()._field_Token, ._field_Ident=_22722_decl.get()._field_Ident, ._field_Value=_1aa8919a0_buildExpr(_22722_decl.get()._field_Expr)});;
}



inline jule::Slice<jule::Ptr<_1aa89d3d5_EnumItem>> _1aa894035_buildEnumItems(jule::Slice<jule::Ptr<_1aa86bb56_EnumItemDecl>>* _23524_decls) {
	jule::Slice<jule::Ptr<_1aa89d3d5_EnumItem>> _23613_items = jule::Slice<jule::Ptr<_1aa89d3d5_EnumItem>>::alloc(0LL, (*(_23524_decls)).len());;
	{
		auto expr = _23524_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad105a91:;
		if (it != expr_end) {
			jule::Ptr<_1aa86bb56_EnumItemDecl> _23717_decl = *it;
			{
				_23613_items = jule::alloc_for_append(_23613_items,1);_23613_items.__push(_1aa893c8d_buildEnumItem(_23717_decl));;
			}
			_iter_next_1ad105a91:;
			++it;
			goto _iter_begin_1ad105a91;
		}
		_iter_end_1ad105a91:;
	};
	return _23613_items;;
}



inline jule::Ptr<_1aa89ddca_Enum> _1aa894486_buildEnum(jule::Ptr<_1aa86c67e_EnumDecl> _24318_decl) {
	return jule::new_ptr<_1aa89ddca_Enum>(_1aa89ddca_Enum{._field_Token=_24318_decl.get()._field_Token, ._field_Public=_24318_decl.get()._field_Public, ._field_Ident=_24318_decl.get()._field_Ident, ._field_Kind=_1aa8916b4_buildType(_24318_decl.get()._field_Kind), ._field_Items=_1aa894035_buildEnumItems(&(_24318_decl.get()._field_Items))});;
}



inline jule::Ptr<_1aa89ee0e_TypeEnumItem> _1aa89472d_buildTypeEnumItem(jule::Ptr<_1aa86d185_TypeEnumItemDecl> _25326_decl) {
	return jule::new_ptr<_1aa89ee0e_TypeEnumItem>(_1aa89ee0e_TypeEnumItem{._field_Token=_25326_decl.get()._field_Token, ._field_Ident=_25326_decl.get()._field_Ident, ._field_Kind=_1aa8916b4_buildType(_25326_decl.get()._field_Kind)});;
}



inline jule::Slice<jule::Ptr<_1aa89ee0e_TypeEnumItem>> _1aa8949c5_buildTypeEnumItems(jule::Slice<jule::Ptr<_1aa86d185_TypeEnumItemDecl>>* _26128_decls) {
	jule::Slice<jule::Ptr<_1aa89ee0e_TypeEnumItem>> _26213_items = jule::Slice<jule::Ptr<_1aa89ee0e_TypeEnumItem>>::alloc(0LL, (*(_26128_decls)).len());;
	{
		auto expr = _26128_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad1081d1:;
		if (it != expr_end) {
			jule::Ptr<_1aa86d185_TypeEnumItemDecl> _26317_decl = *it;
			{
				_26213_items = jule::alloc_for_append(_26213_items,1);_26213_items.__push(_1aa89472d_buildTypeEnumItem(_26317_decl));;
			}
			_iter_next_1ad1081d1:;
			++it;
			goto _iter_begin_1ad1081d1;
		}
		_iter_end_1ad1081d1:;
	};
	return _26213_items;;
}



inline jule::Ptr<_1aa8a04c5_TypeEnum> _1aa894c6c_buildTypeEnum(jule::Ptr<_1aa86d790_TypeEnumDecl> _26922_decl) {
	return jule::new_ptr<_1aa8a04c5_TypeEnum>(_1aa8a04c5_TypeEnum{._field_Token=_26922_decl.get()._field_Token, ._field_Public=_26922_decl.get()._field_Public, ._field_Ident=_26922_decl.get()._field_Ident, ._field_Items=_1aa8949c5_buildTypeEnumItems(&(_26922_decl.get()._field_Items))});;
}



inline jule::Ptr<_1aa908c59_Var> _1aa895014_buildVar(jule::Ptr<_1aa866986_VarDecl> _27817_decl) {
	return jule::new_ptr<_1aa908c59_Var>(_1aa908c59_Var{._field_Token=_27817_decl.get()._field_Token, ._field_Ident=_27817_decl.get()._field_Ident, ._field_CppLinked=_27817_decl.get()._field_CppLinked, ._field_Constant=_27817_decl.get()._field_Constant, ._field_Mutable=_27817_decl.get()._field_Mutable, ._field_Public=_27817_decl.get()._field_Public, ._field_Statically=_27817_decl.get()._field_Statically, ._field_Reference=_27817_decl.get()._field_Reference, ._field_Kind=_1aa8916b4_buildType(_27817_decl.get()._field_Kind), ._field_Value=_1aa8919a0_buildExpr(_27817_decl.get()._field_Expr), ._field_Refers=static__1aa890284_new(), ._field_Directives=_27817_decl.get()._field_Directives, });;
}



inline jule::Slice<jule::Ptr<_1aa908c59_Var>> _1aa8952ab_buildVars(jule::Slice<jule::Ptr<_1aa866986_VarDecl>> _29518_decls) {
	jule::Slice<jule::Ptr<_1aa908c59_Var>> _29613_vars = jule::Slice<jule::Ptr<_1aa908c59_Var>>::alloc(0LL, _29518_decls.len());;
	{
		auto expr = &(_29518_decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad109589:;
		if (it != expr_end) {
			jule::Ptr<_1aa866986_VarDecl> _29717_decl = *it;
			{
				_29613_vars = jule::alloc_for_append(_29613_vars,1);_29613_vars.__push(_1aa895014_buildVar(_29717_decl));;
			}
			_iter_next_1ad109589:;
			++it;
			goto _iter_begin_1ad109589;
		}
		_iter_end_1ad109589:;
	};
	return _29613_vars;;
}



inline jule::Ptr<_1aa8ac548_Impl> _1aa895553_buildImpl(jule::Ptr<_1aa870022_Impl> _30318_decl) {
	return jule::new_ptr<_1aa8ac548_Impl>(_1aa8ac548_Impl{._field_Base=_30318_decl.get()._field_Base, ._field_Dest=_30318_decl.get()._field_Dest, ._field_Methods=_1aa8934a7_buildMethods(&(_30318_decl.get()._field_Methods)), ._field_Statics=_1aa8952ab_buildVars(_30318_decl.get()._field_Statics)});;
}



inline jule::Ptr<_1aa957d85_Data> _1aa8a8511_buildAsComptimeMethodData(jule::Ptr<_1aa88c0c7_FnIns>* _37235_f) {
	return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>((*(_37235_f)), 1)}), });;
}



inline jule::Ptr<_1aa8d101c_ImportInfo> _1aa8a880d_findComptimePackage(jule::Ptr<_1aa8d92de_Sema>* _38029_s) {
	return _1aa8d9762_SelectPackage((*(_38029_s)).ptr(), jule::Fn<jule::Bool(jule::Ptr<_1aa8d101c_ImportInfo>)>([=](jule::Ptr<_1aa8d101c_ImportInfo> _38128_pkg) mutable -> jule::Bool {
		return _38128_pkg.get()._field_LinkPath.equal("std::comptime", 13);;
	}));;
}



inline jule::Ptr<_1aa957d85_Data> _1aa8a8b71_buildComptimeTypeInfoData(jule::Ptr<_1aa8d92de_Sema>* _38635_s, jule::Ptr<_1aa983872_TypeKind>* _38650_t) {
	return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa8d8c5b_pushComptimeType((*(_38635_s)).get()._field_meta.ptr(), _38650_t), 8)}), });;
}



inline jule::Bool _1aa8ab976_matchConstraint(jule::Str* _14221_c, jule::Ptr<_1aa983872_TypeKind>* _14234_g) {
	{
		auto &_match_expr{ (*(_14221_c)) };
		
		if (_match_expr == jule::Str("signed", 6)) {
			_case_begin_1ad1ae72c:;
			{
				jule::Ptr<_1aa989339_Prim> _14513_prim = _1aa985c5e_Prim((*(_14234_g)).ptr());;
				if ((_14513_prim == nullptr)) {
					return false;;
				};
				return _1c09018a7_IsSigNum(_14513_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("unsigned", 8)) {
			_case_begin_1ad1ab828:;
			{
				jule::Ptr<_1aa989339_Prim> _15113_prim = _1aa985c5e_Prim((*(_14234_g)).ptr());;
				if ((_15113_prim == nullptr)) {
					return false;;
				};
				return _1dc5c178b_IsUnsigInt(_15113_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("float", 5)) {
			_case_begin_1ad1ae4da:;
			{
				jule::Ptr<_1aa989339_Prim> _15713_prim = _1aa985c5e_Prim((*(_14234_g)).ptr());;
				if ((_15713_prim == nullptr)) {
					return false;;
				};
				return _1dc5c1d52_IsFloat(_15713_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("numeric", 7)) {
			_case_begin_1ad1ae551:;
			{
				jule::Ptr<_1aa989339_Prim> _16313_prim = _1aa985c5e_Prim((*(_14234_g)).ptr());;
				if ((_16313_prim == nullptr)) {
					return false;;
				};
				return _1c0901698_IsNum(_16313_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("mutable", 7)) {
			_case_begin_1ad1ad3b8:;
			{
				return _1aa985049_Mutable((*(_14234_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str("immutable", 9)) {
			_case_begin_1ad1ad42e:;
			{
				return (!(_1aa985049_Mutable((*(_14234_g)).ptr())));;
			}
		}
		else if (_match_expr == jule::Str("comparable", 10)) {
			_case_begin_1ad1ad495:;
			{
				return true;;
			}
		}
		else if (_match_expr == jule::Str("ordered", 7)) {
			_case_begin_1ad1ad50b:;
			{
				jule::Ptr<_1aa989339_Prim> _17513_prim = _1aa985c5e_Prim((*(_14234_g)).ptr());;
				if ((_17513_prim != nullptr)) {
					return (_1c0901698_IsNum(_17513_prim.get()._field_Kind) || _1aa98c56d_IsStr(_17513_prim.ptr()));;
				};
				if ((_1aa986237_Ptr((*(_14234_g)).ptr()) != nullptr)) {
					return true;;
				};
				jule::Ptr<_1aa876dd6_StructIns> _18213_s = _1aa9871b1_Struct((*(_14234_g)).ptr());;
				if ((_18213_s != nullptr)) {
					return ((((_18213_s.get()._field_Operators._field_Gt != nullptr) && (_18213_s.get()._field_Operators._field_GtEq != nullptr)) && (_18213_s.get()._field_Operators._field_Lt != nullptr)) && (_18213_s.get()._field_Operators._field_LtEq != nullptr));;
				};
				jule::Ptr<_1aa89ddca_Enum> _18913_enm = _1aa98649b_Enum((*(_14234_g)).ptr());;
				if ((_18913_enm != nullptr)) {
					return _1c0901698_IsNum(_1aa983c6d_Str(_18913_enm.get()._field_Kind.get()._field_Kind.ptr()));;
				};
				return false;;
			}
		}
		else {
			_case_begin_1ad1adc8c:;
			{
				return false;;
			}
		}
		_match_end_1ad1adb16:;
	};
}



inline jule::Bool _1aa8abc62_isBuiltinConstraint(jule::Str* _19925_ident) {
	{
		auto expr = &(_1aa8a9dd6_builtinConstraints);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad1b7d1d:;
		if (it != expr_end) {
			jule::Str *_20012_bc = it;
			{
				if (((*(_19925_ident)) == (*(_20012_bc)))) {
					return true;;
				};
			}
			_iter_next_1ad1b7d1d:;
			++it;
			goto _iter_begin_1ad1b7d1d;
		}
		_iter_end_1ad1b7d1d:;
	};
	return false;;
}



inline jule::Ptr<_1aa8b91d1_scopeChecker> _1aa8ae5d3_newScopeCheckerBase(jule::Ptr<_1aa8d92de_Sema>* _5829_s, jule::Ptr<_1aa88c0c7_FnIns> _5843_owner) {
	return jule::new_ptr<_1aa8b91d1_scopeChecker>(_1aa8b91d1_scopeChecker{._field_s=(*(_5829_s)), ._field_owner=_5843_owner, ._field_table=jule::new_ptr<_1aa94d51d_SymbolTable>(), });;
}



inline jule::Ptr<_1aa8b91d1_scopeChecker> _1aa8ae968_newScopeChecker(jule::Ptr<_1aa8d92de_Sema>* _6625_s, jule::Ptr<_1aa88c0c7_FnIns> _6639_owner) {
	jule::Ptr<_1aa8b91d1_scopeChecker> _6713_base = _1aa8ae5d3_newScopeCheckerBase(_6625_s, _6639_owner);;
	_6713_base.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1aa8b7e49_scopeLabel>>>(nullptr);
	_6713_base.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1aa8b83bc_scopeGoto>>>(nullptr);
	return _6713_base;;
}



inline jule::Ptr<_1aa8b7e49_scopeLabel> _1aa8aeca9_findLabelParent(jule::Str _7620_ident, jule::Ptr<_1aa8b91d1_scopeChecker> _7636_scope) {
	jule::Ptr<_1aa8b7e49_scopeLabel> _7713_label = _1aa8bc888_findLabelScope(_7636_scope, _7620_ident);;
	while ((_7713_label == nullptr)) {
		{
			if (((_7636_scope.get()._field_parent == nullptr) || (_7636_scope.get()._field_owner != nullptr))) {
				return nullptr;;
			};
			_7636_scope=_7636_scope.get()._field_parent;
			_7713_label=_1aa8bc888_findLabelScope(_7636_scope, _7620_ident);
		}
	_iter_next_1ad1cc8b0:;
	}
	_iter_end_1ad1cc8b0:;;
	return _7713_label;;
}



inline jule::Bool _1aa8b013e_modelIsGotoScope(jule::Any _9021_Model, jule::Ptr<_1aa8b25a3_Scope>* _9034_sc) {
	{
		auto &_match_expr{ _9021_Model };
		
		if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1ad1ce40b:;
			{
				jule::Ptr<_1aa87d11d_FnCallExprModel> _9313_fcem = _9021_Model.cast_ptr<_1aa87d11d_FnCallExprModel>(&__jule_any_type35);;
				if ((_9313_fcem.get()._field_Except == (*(_9034_sc)))) {
					return true;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1ad1ce483:;
			{
				jule::Ptr<_1aa957d85_Data> _9813_d = _9021_Model.cast_ptr<_1aa957d85_Data>(&__jule_any_type24);;
				return _1aa8b013e_modelIsGotoScope(_9813_d.get()._field_Model, _9034_sc);;
			}
		}
		_match_end_1ad1ce373:;
	};
	return false;;
}



inline jule::Bool _1aa8b0480_stmtIsGotoScope(jule::Any* _10421_stmt, jule::Ptr<_1aa8b25a3_Scope>* _10434_sc) {
	{
		auto &_match_expr{ (*(_10421_stmt)) };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1ad1d182b:;
			{
				return ((*(_10421_stmt)).cast_ptr<_1aa8b25a3_Scope>(&__jule_any_type22) == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1ad1d18a3:;
			{
				return ((*(_10421_stmt)).cast_ptr<_1aa8b33ea_InfIter>(&__jule_any_type37).get()._field_Scope == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1ad1d161c:;
			{
				jule::Ptr<_1aa8b4253_RangeIter> _11113_it = (*(_10421_stmt)).cast_ptr<_1aa8b4253_RangeIter>(&__jule_any_type41);;
				return ((_11113_it.get()._field_Scope == (*(_10434_sc))) || _1aa8b013e_modelIsGotoScope(_11113_it.get()._field_Expr.get()._field_Model, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1ad1d1694:;
			{
				jule::Ptr<_1aa8b386d_WhileIter> _11413_it = (*(_10421_stmt)).cast_ptr<_1aa8b386d_WhileIter>(&__jule_any_type39);;
				return (((_11413_it.get()._field_Scope == (*(_10434_sc))) || _1aa8b013e_modelIsGotoScope(_11413_it.get()._field_Expr, _10434_sc)) || _1aa8b013e_modelIsGotoScope(_11413_it.get()._field_Next, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1ad1d171b:;
			{
				jule::Ptr<_1aa8b63ba_Match> _11913_m = (*(_10421_stmt)).cast_ptr<_1aa8b63ba_Match>(&__jule_any_type48);;
				{
					auto expr = &(_11913_m.get()._field_Cases);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad1d4c6e:;
					if (it != expr_end) {
						jule::Ptr<_1aa8b6e15_Case> *_12016_c = it;
						{
							if (((*(_12016_c)).get()._field_Scope == (*(_10434_sc)))) {
								return true;;
							};
							{
								auto expr = &((*(_12016_c)).get()._field_Exprs);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1ad1d5ba4:;
								if (it != expr_end) {
									jule::Ptr<_1aa957d85_Data> *_12420_expr = it;
									{
										if (_1aa8b013e_modelIsGotoScope((*(_12420_expr)).get()._field_Model, _10434_sc)) {
											return true;;
										};
									}
									_iter_next_1ad1d5ba4:;
									++it;
									goto _iter_begin_1ad1d5ba4;
								}
								_iter_end_1ad1d5ba4:;
							};
						}
						_iter_next_1ad1d4c6e:;
						++it;
						goto _iter_begin_1ad1d4c6e;
					}
					_iter_end_1ad1d4c6e:;
				};
				return ((_11913_m.get()._field_Default != nullptr) && (_11913_m.get()._field_Default.get()._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1ad1ce8a1:;
			{
				jule::Ptr<_1aa8b310e_Conditional> _13213_c = (*(_10421_stmt)).cast_ptr<_1aa8b310e_Conditional>(&__jule_any_type36);;
				{
					auto expr = &(_13213_c.get()._field_Elifs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad1d715b:;
					if (it != expr_end) {
						jule::Ptr<_1aa8b299e_If> *_13316_elif = it;
						{
							if ((((*(_13316_elif)).get()._field_Scope == (*(_10434_sc))) || _1aa8b013e_modelIsGotoScope((*(_13316_elif)).get()._field_Expr, _10434_sc))) {
								return true;;
							};
						}
						_iter_next_1ad1d715b:;
						++it;
						goto _iter_begin_1ad1d715b;
					}
					_iter_end_1ad1d715b:;
				};
				return ((_13213_c.get()._field_Default != nullptr) && (_13213_c.get()._field_Default.get()._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1ad1ce917:;
			{
				jule::Ptr<_1aa957d85_Data> _14013_d = (*(_10421_stmt)).cast_ptr<_1aa957d85_Data>(&__jule_any_type24);;
				return _1aa8b013e_modelIsGotoScope(_14013_d.get()._field_Model, _10434_sc);;
			}
		}
		else {
			_case_begin_1ad1ce83a:;
			{
				return false;;
			}
		}
		_match_end_1ad1ce7d5:;
	};
}



inline jule::I64 _1aa8b07c1_countMatchType(jule::Ptr<_1aa8b63ba_Match>* _14720_m, jule::Ptr<_1aa983872_TypeKind>* _14732_t) {
	jule::I64 _14813_n = 0LL;;
	jule::Str _1499_kind = _1aa983c6d_Str((*(_14732_t)).ptr());;
	_julec_label_loop:;
	{
		auto expr = &((*(_14720_m)).get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad1da0b5:;
		if (it != expr_end) {
			jule::Ptr<_1aa8b6e15_Case> *_15112_c = it;
			{
				if (((*(_15112_c)) == nullptr)) {
					goto _iter_next_1ad1da0b5;
				};
				{
					auto expr = &((*(_15112_c)).get()._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad1dae0c:;
					if (it != expr_end) {
						jule::Ptr<_1aa957d85_Data> *_15616_expr = it;
						{
							if (((*(_15616_expr)) == nullptr)) {
								goto _iter_end_1ad1da0b5;
							};
							if ((_1499_kind == _1aa983c6d_Str((*(_15616_expr)).get()._field_Model.cast_ptr<_1aa983872_TypeKind>(&__jule_any_type89).ptr()))) {
								(_14813_n)++;
							};
						}
						_iter_next_1ad1dae0c:;
						++it;
						goto _iter_begin_1ad1dae0c;
					}
					_iter_end_1ad1dae0c:;
				};
			}
			_iter_next_1ad1da0b5:;
			++it;
			goto _iter_begin_1ad1da0b5;
		}
		_iter_end_1ad1da0b5:;
	};
	return _14813_n;;
}



inline jule::Slice<jule::Ptr<_1aa957d85_Data>> _1aa8b0a68_getDatasFromTupleData(jule::Ptr<_1aa957d85_Data>* _17131_d) {
	if ((_1aa9878ed_Tup((*(_17131_d)).get()._field_Kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*(_17131_d)).get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type87) {
				_case_begin_1ad1de9b0:;
				{
					return (*(_17131_d)).get()._field_Model.cast_ptr<_1aa881d47_TupleExprModel>(&__jule_any_type87).get()._field_Datas;;
				}
			}
			else {
				_case_begin_1ad1dc606:;
				{
					jule::Ptr<_1aa98e0a8_Tuple> _17721_t = _1aa9878ed_Tup((*(_17131_d)).get()._field_Kind.ptr());;
					jule::Slice<jule::Ptr<_1aa957d85_Data>> _17821_r = jule::Slice<jule::Ptr<_1aa957d85_Data>>::alloc(0LL, _17721_t.get()._field_Types.len());;
					{
						auto expr = &(_17721_t.get()._field_Types);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ad1dd54c:;
						if (it != expr_end) {
							jule::Ptr<_1aa983872_TypeKind> _17925_kind = *it;
							{
								_17821_r = jule::alloc_for_append(_17821_r,1);_17821_r.__push(jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=_17925_kind, ._field_Mutable=true, }));;
							}
							_iter_next_1ad1dd54c:;
							++it;
							goto _iter_begin_1ad1dd54c;
						}
						_iter_end_1ad1dd54c:;
					};
					return _17821_r;;
				}
			}
			_match_end_1ad1dc55c:;
		};
	} else {
		return jule::Slice<jule::Ptr<_1aa957d85_Data>>::make({(*(_17131_d))});;
	};
}



inline jule::Bool _1aa8b13a4_checkMut(jule::Ptr<_1aa8d92de_Sema>* _20618_s, jule::Ptr<_1aa957d85_Data>* _20629_left, jule::Ptr<_1aa957d85_Data> _20646_right, jule::Ptr<_1db944d0d_Token> _20660_op) {
	jule::Bool __jule_func_result = false;
	{
		
		if ((!((*(_20629_left)).get()._field_Mutable))) {
			_case_begin_1ad1e2b5b:;
			{
				_1aa8dbbb5_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str("cannot assign to immutable storage", 34), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((((_20646_right != nullptr) && (!(_20646_right.get()._field_Mutable))) && _1aa985049_Mutable(_20646_right.get()._field_Kind.ptr()))) {
			_case_begin_1ad1e2496:;
			{
				if (((!_20660_op.get()._field_Kind.equal("=", 1)) && (_1aa9871b1_Struct(_20646_right.get()._field_Kind.ptr()) != nullptr))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_1aa8dbbb5_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1aa983c6d_Str(_20646_right.get()._field_Kind.ptr()), &__jule_any_type5)}));
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1ad1e2430:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1ad1e2375:;
	};
}



inline jule::Bool _1aa8b1838_checkAssign(jule::Ptr<_1aa8d92de_Sema>* _22521_s, jule::Ptr<_1aa957d85_Data>* _22536_left, jule::Ptr<_1aa957d85_Data> _22553_right, jule::Ptr<_1db944d0d_Token> _22567_op) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1aa88c0c7_FnIns> _2269_f = _1aa986e4c_Fn((*(_22536_left)).get()._field_Kind.ptr());;
	if ((((_2269_f != nullptr) && (_2269_f.get()._field_Decl != nullptr)) && _2269_f.get()._field_Decl.get()._field_Global)) {
		_1aa8dbbb5_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str("type is not support assignment", 30), jule::Slice<jule::Any>());
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		
		if (_1aa958748_IsConst((*(_22536_left)).ptr())) {
			_case_begin_1ab52ca36:;
			{
				_1aa8dbbb5_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str("constants is can't assign", 25), jule::Slice<jule::Any>());
				_1aa8dbed4_pushSuggestion((*(_22521_s)).ptr(), jule::Str("remove constant qualifer if you need to assign", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!((*(_22536_left)).get()._field_Lvalue))) {
			_case_begin_1ab52c3a4:;
			{
				_1aa8dbbb5_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str("invalid expression: expected lvalue for assignment", 50), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!(_1aa8b13a4_checkMut(_22521_s, _22536_left, _22553_right, _22567_op)))) {
			_case_begin_1ab52c41a:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1ab52c33d:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1ab52c21c:;
	};
}



inline jule::Bool _1aa8b1ad0_isValidAstStForNextSt(jule::Any* _24731_n) {
	{
		auto &_match_expr{ (*(_24731_n)) };
		
		if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1ab5292b3:;
			{
				return (!((*(_24731_n)).cast_ptr<_1aa8629b5_AssignSt>(&__jule_any_type59).get()._field_Declarative));;
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1ab52e74c:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ab52e5c6:;
			{
				return false;;
			}
		}
		_match_end_1ab52c4b4:;
	};
}



inline jule::Bool _1aa8b1d77_isValidStForNextSt(jule::Any* _25824_st) {
	{
		auto &_match_expr{ (*(_25824_st)) };
		
		if (_match_expr.type == &__jule_any_type44 || _match_expr.type == &__jule_any_type45 || _match_expr.type == &__jule_any_type47) {
			_case_begin_1ab530781:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1ab5307e7:;
			{
				{
					auto &_match_expr{ (*(_25824_st)).cast_ptr<_1aa957d85_Data>(&__jule_any_type24).get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type35) {
						_case_begin_1ab530dad:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1ab53150c:;
						{
							return false;;
						}
					}
					_match_end_1ab531254:;
				};
			}
		}
		else {
			_case_begin_1ab52ea38:;
			{
				return false;;
			}
		}
		_match_end_1ab52e9d3:;
	};
}



inline jule::Bool _1aa8b211e_stmtIsDef(jule::Any* _27615_st) {
	{
		auto &_match_expr{ (*(_27615_st)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ab5321bc:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ab531661:;
			{
				return false;;
			}
		}
		_match_end_1ab531573:;
	};
}



inline jule::Ptr<_1aa908c59_Var> _1aa8cd734_findVarInPackage(jule::Slice<jule::Ptr<_1aa94d51d_SymbolTable>>* _4626_files, jule::Str _4649_ident, jule::Bool _4661_cpp_linked) {
	{
		auto expr = _4626_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad348a4d:;
		if (it != expr_end) {
			jule::Ptr<_1aa94d51d_SymbolTable> _4717_f = *it;
			{
				jule::Ptr<_1aa908c59_Var> _4817_v = _1aa94ddd1_FindVar(_4717_f.ptr(), _4649_ident, _4661_cpp_linked);;
				if ((_4817_v != nullptr)) {
					return _4817_v;;
				};
			}
			_iter_next_1ad348a4d:;
			++it;
			goto _iter_begin_1ad348a4d;
		}
		_iter_end_1ad348a4d:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aa982b29_TypeAlias> _1aa8cdb63_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1aa94d51d_SymbolTable>>* _5832_files, jule::Str _5855_ident, jule::Bool _5867_cpp_linked) {
	{
		auto expr = _5832_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad34a005:;
		if (it != expr_end) {
			jule::Ptr<_1aa94d51d_SymbolTable> _5917_f = *it;
			{
				jule::Ptr<_1aa982b29_TypeAlias> _6017_ta = _1aa94e288_FindTypeAlias(_5917_f.ptr(), _5855_ident, _5867_cpp_linked);;
				if ((_6017_ta != nullptr)) {
					return _6017_ta;;
				};
			}
			_iter_next_1ad34a005:;
			++it;
			goto _iter_begin_1ad34a005;
		}
		_iter_end_1ad34a005:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aa8740c0_Struct> _1aa8ce04d_findStructInPackage(jule::Slice<jule::Ptr<_1aa94d51d_SymbolTable>>* _7029_files, jule::Str _7052_ident, jule::Bool _7064_cpp_linked) {
	{
		auto expr = _7029_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad34b49b:;
		if (it != expr_end) {
			jule::Ptr<_1aa94d51d_SymbolTable> _7117_f = *it;
			{
				jule::Ptr<_1aa8740c0_Struct> _7217_s = _1aa94e640_FindStruct(_7117_f.ptr(), _7052_ident, _7064_cpp_linked);;
				if ((_7217_s != nullptr)) {
					return _7217_s;;
				};
			}
			_iter_next_1ad34b49b:;
			++it;
			goto _iter_begin_1ad34b49b;
		}
		_iter_end_1ad34b49b:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aa889426_Fn> _1aa8ce4b0_findFnInPackage(jule::Slice<jule::Ptr<_1aa94d51d_SymbolTable>>* _8225_files, jule::Str _8248_ident, jule::Bool _8260_cpp_linked) {
	{
		auto expr = _8225_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad34c942:;
		if (it != expr_end) {
			jule::Ptr<_1aa94d51d_SymbolTable> _8317_file = *it;
			{
				jule::Ptr<_1aa889426_Fn> _8417_f = _1aa94e9e7_FindFn(_8317_file.ptr(), _8248_ident, _8260_cpp_linked);;
				if ((_8417_f != nullptr)) {
					return _8417_f;;
				};
			}
			_iter_next_1ad34c942:;
			++it;
			goto _iter_begin_1ad34c942;
		}
		_iter_end_1ad34c942:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aa89b647_Trait> _1aa8ce7bd_findTraitInPackage(jule::Slice<jule::Ptr<_1aa94d51d_SymbolTable>>* _9428_files, jule::Str _9451_ident) {
	{
		auto expr = _9428_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad34cec5:;
		if (it != expr_end) {
			jule::Ptr<_1aa94d51d_SymbolTable> _9517_f = *it;
			{
				jule::Ptr<_1aa89b647_Trait> _9617_t = _1aa94ed05_FindTrait(_9517_f.ptr(), _9451_ident);;
				if ((_9617_t != nullptr)) {
					return _9617_t;;
				};
			}
			_iter_next_1ad34cec5:;
			++it;
			goto _iter_begin_1ad34cec5;
		}
		_iter_end_1ad34cec5:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aa89ddca_Enum> _1aa8ceb0e_findEnumInPackage(jule::Slice<jule::Ptr<_1aa94d51d_SymbolTable>>* _10627_files, jule::Str _10650_ident) {
	{
		auto expr = _10627_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad34eeb6:;
		if (it != expr_end) {
			jule::Ptr<_1aa94d51d_SymbolTable> _10717_f = *it;
			{
				jule::Ptr<_1aa89ddca_Enum> _10817_e = _1aa950113_FindEnum(_10717_f.ptr(), _10650_ident);;
				if ((_10817_e != nullptr)) {
					return _10817_e;;
				};
			}
			_iter_next_1ad34eeb6:;
			++it;
			goto _iter_begin_1ad34eeb6;
		}
		_iter_end_1ad34eeb6:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aa8a04c5_TypeEnum> _1aa8cee50_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1aa94d51d_SymbolTable>>* _11831_files, jule::Str _11854_ident) {
	{
		auto expr = _11831_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad351270:;
		if (it != expr_end) {
			jule::Ptr<_1aa94d51d_SymbolTable> _11917_f = *it;
			{
				jule::Ptr<_1aa8a04c5_TypeEnum> _12017_e = _1aa950421_FindTypeEnum(_11917_f.ptr(), _11854_ident);;
				if ((_12017_e != nullptr)) {
					return _12017_e;;
				};
			}
			_iter_next_1ad351270:;
			++it;
			goto _iter_begin_1ad351270;
		}
		_iter_end_1ad351270:;
	};
	return nullptr;;
}



inline jule::Any _1aa8d044a_defByIdentPackage(jule::Slice<jule::Ptr<_1aa94d51d_SymbolTable>>* _12927_files, jule::Str* _12951_ident, jule::Bool _12963_cppLinked) {
	{
		auto expr = _12927_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad352738:;
		if (it != expr_end) {
			jule::Ptr<_1aa94d51d_SymbolTable> _13017_file = *it;
			{
				jule::Any _13117_def = _1aa95129b_defByIdent(_13017_file.ptr(), (*(_12951_ident)), _12963_cppLinked);;
				if ((_13117_def != nullptr)) {
					return _13117_def;;
				};
			}
			_iter_next_1ad352738:;
			++it;
			goto _iter_begin_1ad352738;
		}
		_iter_end_1ad352738:;
	};
	return nullptr;;
}



inline jule::Bool _1aa8d5e12_isStdPackage(jule::Str _35517_f, jule::Str _35525_p) {
	return _1d9d036a7_HasPrefix(_35517_f, _1d9d0d0da_Join(jule::Slice<jule::Str>::make({_1d9e38479_PathStdlib,_35525_p})));;
}



inline jule::Bool _1aa8d6b6b_isValidModelForRef(jule::Any* _1228_m) {
	{
		auto &_match_expr{ (*(_1228_m)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ad36324e:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1ad3632b5:;
			{
				jule::Ptr<_1aa88098e_StructSubIdentExprModel> _1717_model = (*(_1228_m)).cast_ptr<_1aa88098e_StructSubIdentExprModel>(&__jule_any_type71);;
				return _1aa8d6b6b_isValidModelForRef(&(_1717_model.get()._field_Expr.get()._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1ad363062:;
			{
				jule::Ptr<_1aa8801a8_TraitSubIdentExprModel> _2017_model = (*(_1228_m)).cast_ptr<_1aa8801a8_TraitSubIdentExprModel>(&__jule_any_type70);;
				return _1aa8d6b6b_isValidModelForRef(&(_2017_model.get()._field_Expr));;
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1ad3630c8:;
			{
				jule::Ptr<_1aa87b65a_UnaryExprModel> _2317_unary = (*(_1228_m)).cast_ptr<_1aa87b65a_UnaryExprModel>(&__jule_any_type74);;
				if ((!_2317_unary.get()._field_Op.get()._field_Kind.equal("*", 1))) {
					return false;;
				};
				if ((_1aa986237_Ptr(_2317_unary.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
					return true;;
				};
				if ((_1aa985ec3_Sptr(_2317_unary.get()._field_Expr.get()._field_Kind.ptr()) == nullptr)) {
					return false;;
				};
				return _1aa8d6b6b_isValidModelForRef(&(_2317_unary.get()._field_Expr.get()._field_Model));;
			}
		}
		else {
			_case_begin_1ad362638:;
			{
				return false;;
			}
		}
		_match_end_1ad3625d3:;
	};
}



inline _1d9d938bd_Log _1aa8d7111_compilerErr(jule::Ptr<_1db944d0d_Token>* _4117_token, jule::Bool _4132_line, jule::Str _4144_fmt, jule::Slice<jule::Any> _4157_args) {
	_1d9d938bd_Log _4213_log = _1d9d938bd_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*(_4117_token)).get()._field_Row, ._field_Column=(*(_4117_token)).get()._field_Column, ._field_Path=(*(_4117_token)).get()._field_File.get()._field_Path, ._field_Text=_1d9d93d0d_Logf(_4144_fmt, _4157_args), };;
	if (_4132_line) {
		_4213_log._field_Line=_1db94b375_GetRow((*(_4117_token)).get()._field_File.ptr(), (*(_4117_token)).get()._field_Row);
	};
	return _4213_log;;
}



inline jule::Bool _1aa8d7452_impIsLookupable(jule::Ptr<_1aa8d101c_ImportInfo>* _5521_i, jule::Str _5537_ident) {
	if ((*(_5521_i)).get()._field_CppLinked) {
		return false;;
	};
	if ((!((*(_5521_i)).get()._field_ImportAll))) {
		if (((*(_5521_i)).get()._field_Selected.len() > 0LL)) {
			return _1aa8d35c4_existIdent((*(_5521_i)).ptr(), _5537_ident);;
		};
	};
	return (*(_5521_i)).get()._field_ImportAll;;
}



inline void _1aa8d774e_appendRetVars(jule::Slice<jule::Ptr<_1aa908c59_Var>>* _6723_dest, jule::Ptr<_1aa88c0c7_FnIns>* _6742_f) {
	if ((_1aa889888_IsVoid((*(_6742_f)).get()._field_Decl.ptr()) || ((*(_6742_f)).get()._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_1aa983872_TypeKind>> _7213_types = _1aa88d1e9_Types((*(_6742_f)).ptr());;
	{
		auto expr = &((*(_6742_f)).get()._field_Decl.get()._field_Result.get()._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad36b158:;
		if (it != expr_end) {
			jule::I64 _7310_i = it - expr->begin();
			jule::Ptr<_1db944d0d_Token> _7317_ident = *it;
			{
				if ((_1db9475a2_IsIgnoreIdent(_7317_ident.get()._field_Kind) || _1db947849_IsAnonIdent(_7317_ident.get()._field_Kind))) {
					goto _iter_next_1ad36b158;
				};
				(*(_6723_dest)) = jule::alloc_for_append((*(_6723_dest)),1);(*(_6723_dest)).__push(jule::new_ptr<_1aa908c59_Var>(_1aa908c59_Var{._field_Scope=(*(_6742_f)).get()._field_Scope, ._field_Token=_7317_ident, ._field_Ident=_7317_ident.get()._field_Kind, ._field_Mutable=true, ._field_Used=true, ._field_Kind=jule::new_ptr<_1aa9889ba_TypeSymbol>(_1aa9889ba_TypeSymbol{._field_Kind=_7213_types[_7310_i]}), ._field_Value=jule::new_ptr<_1aa958e0d_Value>(_1aa958e0d_Value{._field_Data=jule::new_ptr<_1aa957d85_Data>()}), ._field_RetOrder=_7310_i, }));;
			}
			_iter_next_1ad36b158:;
			++it;
			_7310_i++;
			goto _iter_begin_1ad36b158;
		}
		_iter_end_1ad36b158:;
	};
	if ((((*(_6742_f)).get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 1LL) && ((*(_6723_dest)).len() == 1LL))) {
		(*(_6723_dest))[((*(_6723_dest)).len() - 1LL)].get()._field_RetOrder=-1LL;
	};
}



inline void _1aa8d7a07_appendParamVars(jule::Slice<jule::Ptr<_1aa908c59_Var>>* _9725_dest, jule::Ptr<_1aa88c0c7_FnIns>* _9744_f) {
	if (((*(_9744_f)).get()._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_9744_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad36ed3d:;
		if (it != expr_end) {
			jule::Ptr<_1aa88b208_ParamIns> _10217_p = *it;
			{
				if ((_1db9475a2_IsIgnoreIdent(_10217_p.get()._field_Decl.get()._field_Ident) || _1db947849_IsAnonIdent(_10217_p.get()._field_Decl.get()._field_Ident))) {
					goto _iter_next_1ad36ed3d;
				};
				jule::Ptr<_1aa908c59_Var> _10717_v = jule::new_ptr<_1aa908c59_Var>(_1aa908c59_Var{._field_Scope=(*(_9744_f)).get()._field_Scope, ._field_Token=_10217_p.get()._field_Decl.get()._field_Token, ._field_Ident=_10217_p.get()._field_Decl.get()._field_Ident, ._field_Mutable=_10217_p.get()._field_Decl.get()._field_Mutable, ._field_Used=true, ._field_Reference=_10217_p.get()._field_Decl.get()._field_Reference, ._field_Kind=jule::new_ptr<_1aa9889ba_TypeSymbol>(), ._field_Value=jule::new_ptr<_1aa958e0d_Value>(_1aa958e0d_Value{._field_Data=jule::new_ptr<_1aa957d85_Data>()}), });;
				{
					
					if (_1aa888216_IsSelf(_10217_p.get()._field_Decl.ptr())) {
						_case_begin_1ad372725:;
						{
							_10717_v.get()._field_Kind.get()._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_1aa983410_Kind>((*(_9744_f)).get()._field_Owner, 0)});
							_10717_v.get()._field_Reference=(!(_1aa88847a_IsRef(_10217_p.get()._field_Decl.ptr())));
							if (_1aa88847a_IsRef(_10217_p.get()._field_Decl.ptr())) {
								_10717_v.get()._field_Ident=_10717_v.get()._field_Ident.slice(1LL);
								_10717_v.get()._field_Kind.get()._field_Kind.get()._field_Kind=jule::Trait<_1aa983410_Kind>(jule::new_ptr<_1aa98cabd_Sptr>(_1aa98cabd_Sptr{._field_Elem=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_CppIdent=_10717_v.get()._field_Kind.get()._field_Kind.get()._field_CppIdent, ._field_Kind=_10717_v.get()._field_Kind.get()._field_Kind.get()._field_Kind})}), 11);
							};
						}
					}
					else if (_10217_p.get()._field_Decl.get()._field_Variadic) {
						_case_begin_1ad37245b:;
						{
							_10717_v.get()._field_Kind.get()._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_1aa983410_Kind>(jule::new_ptr<_1aa98d52a_Slc>(_1aa98d52a_Slc{._field_Elem=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_CppIdent=_10217_p.get()._field_Kind.get()._field_CppIdent, ._field_Kind=_10217_p.get()._field_Kind.get()._field_Kind})}), 12)});
						}
					}
					else {
						_case_begin_1ad3704d1:;
						{
							_10717_v.get()._field_Kind.get()._field_Kind=_10217_p.get()._field_Kind;
						}
					}
					_match_end_1ad37233a:;
				};
				(*(_9725_dest)) = jule::alloc_for_append((*(_9725_dest)),1);(*(_9725_dest)).__push(_10717_v);;
			}
			_iter_next_1ad36ed3d:;
			++it;
			goto _iter_begin_1ad36ed3d;
		}
		_iter_end_1ad36ed3d:;
	};
}



inline void _1aa8d7cd2_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1aa982b29_TypeAlias>>* _15734_dest, jule::Ptr<_1aa88c0c7_FnIns>* _15759_f) {
	jule::I64 _15813_size = (*(_15759_f)).get()._field_Generics.len();;
	if (((*(_15759_f)).get()._field_Decl.get()._field_Owner != nullptr)) {
		_15813_size+=(*(_15759_f)).get()._field_Decl.get()._field_Owner.get()._field_Generics.len();
	};
	if ((_15813_size == 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_15759_f)).get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad3778e5:;
		if (it != expr_end) {
			jule::I64 _16710_i = it - expr->begin();
			jule::Ptr<_1aa9820e0_InsGeneric> _16717_g = *it;
			{
				jule::Ptr<_1aa861321_GenericDecl> _16817_decl = (*(_15759_f)).get()._field_Decl.get()._field_Generics[_16710_i];;
				(*(_15734_dest)) = jule::alloc_for_append((*(_15734_dest)),1);(*(_15734_dest)).__push(jule::new_ptr<_1aa982b29_TypeAlias>(_1aa982b29_TypeAlias{._field_Scope=(*(_15759_f)).get()._field_Decl.get()._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=_16817_decl.get()._field_Token, ._field_Ident=_16817_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_1aa9889ba_TypeSymbol>(_1aa9889ba_TypeSymbol{._field_Kind=_16717_g.get()._field_Kind}), }));;
			}
			_iter_next_1ad3778e5:;
			++it;
			_16710_i++;
			goto _iter_begin_1ad3778e5;
		}
		_iter_end_1ad3778e5:;
	};
	if (((*(_15759_f)).get()._field_Decl.get()._field_Owner != nullptr)) {
		jule::Ptr<_1aa876dd6_StructIns> _18017_owner = (*(_15759_f)).get()._field_Owner;;
		{
			auto expr = &(_18017_owner.get()._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad379012:;
			if (it != expr_end) {
				jule::I64 _18114_i = it - expr->begin();
				jule::Ptr<_1aa9820e0_InsGeneric> _18121_g = *it;
				{
					jule::Ptr<_1aa861321_GenericDecl> _18221_decl = _18017_owner.get()._field_Decl.get()._field_Generics[_18114_i];;
					(*(_15734_dest)) = jule::alloc_for_append((*(_15734_dest)),1);(*(_15734_dest)).__push(jule::new_ptr<_1aa982b29_TypeAlias>(_1aa982b29_TypeAlias{._field_Scope=(*(_15759_f)).get()._field_Decl.get()._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=_18221_decl.get()._field_Token, ._field_Ident=_18221_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_1aa9889ba_TypeSymbol>(_1aa9889ba_TypeSymbol{._field_Kind=_18121_g.get()._field_Kind}), }));;
				}
				_iter_next_1ad379012:;
				++it;
				_18114_i++;
				goto _iter_begin_1ad379012;
			}
			_iter_end_1ad379012:;
		};
	};
}



inline jule::Ptr<_1aa94d51d_SymbolTable> _1aa8d8134_findFile(jule::Slice<jule::Ptr<_1aa94d51d_SymbolTable>>* _19518_files, jule::Ptr<_1db94a198_File>* _19542_handler) {
	{
		auto expr = _19518_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad37b014:;
		if (it != expr_end) {
			jule::Ptr<_1aa94d51d_SymbolTable> _19617_fl = *it;
			{
				if ((_19617_fl.get()._field_File == (*(_19542_handler)))) {
					return _19617_fl;;
				};
			}
			_iter_next_1ad37b014:;
			++it;
			goto _iter_begin_1ad37b014;
		}
		_iter_end_1ad37b014:;
	};
	return nullptr;;
}



inline void _1aa8d8596_pushSuggestion(_1d9d938bd_Log* _20430_log, jule::Str _20441_fmt, jule::Slice<jule::Any> _20454_args) {
	_20430_log->_field_Suggestion=_1d9d93d0d_Logf(_20441_fmt, _20454_args);
}



inline void _1aa907241_pushImplemented(jule::Ptr<_1aa89b647_Trait> _281724_t, jule::Ptr<_1aa8740c0_Struct>* _281740_d) {
	_julec_label_push:;
	{
		
		if ((_281724_t.get()._field_Implemented.len() > 0LL)) {
			_case_begin_1ad37da61:;
			{
				{
					auto expr = &(_281724_t.get()._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad37e743:;
					if (it != expr_end) {
						jule::Ptr<_1aa8740c0_Struct> _282116_s = *it;
						{
							if ((_282116_s == (*(_281740_d)))) {
								goto _match_end_1ad37d654;
							};
						}
						_iter_next_1ad37e743:;
						++it;
						goto _iter_begin_1ad37e743;
					}
					_iter_end_1ad37e743:;
				};
				goto _case_begin_1ad37d6ba;
			}
		}
		else {
			_case_begin_1ad37d6ba:;
			{
				_281724_t.get()._field_Implemented = jule::alloc_for_append(_281724_t.get()._field_Implemented,1);_281724_t.get()._field_Implemented.__push((*(_281740_d)));;
			}
		}
		_match_end_1ad37d654:;
	};
	{
		auto expr = &(_281724_t.get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad380425:;
		if (it != expr_end) {
			jule::Ptr<_1aa9889ba_TypeSymbol> _283017_i = *it;
			{
				_1aa907241_pushImplemented(_1aa987425_Trait(_283017_i.get()._field_Kind.ptr()), _281740_d);
			}
			_iter_next_1ad380425:;
			++it;
			goto _iter_begin_1ad380425;
		}
		_iter_end_1ad380425:;
	};
}



inline void _1aa9074e9_pushImplements(jule::Ptr<_1aa8740c0_Struct>* _283524_s, jule::Ptr<_1aa89b647_Trait> _283540_t) {
	_julec_label_push:;
	{
		
		if (((*(_283524_s)).get()._field_Implements.len() > 0LL)) {
			_case_begin_1ad381514:;
			{
				{
					auto expr = &((*(_283524_s)).get()._field_Implements);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad3821e6:;
					if (it != expr_end) {
						jule::Ptr<_1aa89b647_Trait> _283916_b = *it;
						{
							if ((_283916_b == _283540_t)) {
								goto _match_end_1ad381107;
							};
						}
						_iter_next_1ad3821e6:;
						++it;
						goto _iter_begin_1ad3821e6;
					}
					_iter_end_1ad3821e6:;
				};
				goto _case_begin_1ad38116d;
			}
		}
		else {
			_case_begin_1ad38116d:;
			{
				(*(_283524_s)).get()._field_Implements = jule::alloc_for_append((*(_283524_s)).get()._field_Implements,1);(*(_283524_s)).get()._field_Implements.__push(_283540_t);;
			}
		}
		_match_end_1ad381107:;
	};
	{
		auto expr = &(_283540_t.get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad382dc8:;
		if (it != expr_end) {
			jule::Ptr<_1aa9889ba_TypeSymbol> _284817_i = *it;
			{
				_1aa9074e9_pushImplements(_283524_s, _1aa987425_Trait(_284817_i.get()._field_Kind.ptr()));
			}
			_iter_next_1ad382dc8:;
			++it;
			goto _iter_begin_1ad382dc8;
		}
		_iter_end_1ad382dc8:;
	};
}



inline jule::Bool _1aa93a97d_traitHasReferenceReceiver(jule::Ptr<_1aa89b647_Trait>* _2631_t) {
	{
		auto expr = &((*(_2631_t)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad52c8e1:;
		if (it != expr_end) {
			jule::Ptr<_1aa889426_Fn> *_2712_f = it;
			{
				if ((*(_2712_f)).get()._field_Statically) {
					goto _iter_next_1ad52c8e1;
				};
				jule::Ptr<_1aa887ad9_Param> _3313_p = (*(_2712_f)).get()._field_Params[0LL];;
				if ((_1aa88847a_IsRef(_3313_p.ptr()) && _1aa888216_IsSelf(_3313_p.ptr()))) {
					return true;;
				};
			}
			_iter_next_1ad52c8e1:;
			++it;
			goto _iter_begin_1ad52c8e1;
		}
		_iter_end_1ad52c8e1:;
	};
	return false;;
}



inline jule::Bool _1aa93ac25_floatAssignable(jule::Str _4120_kind, jule::Ptr<_1aa957d85_Data>* _4132_d) {
	jule::Str _429_value = _1dc59bdc6_FmtFloat(static_cast<jule::F64>(_1c0904602_AsF64((*(_4132_d)).get()._field_Constant.ptr())), 'g', -1LL, 64LL);;
	return _1dc5b6143_CheckBitFloat(_429_value, static_cast<jule::I64>(_1dc5b4c35_BitsizeOf(_4120_kind)));;
}



inline jule::Bool _1aa93b066_sigAssignable(jule::Str _4618_kind, jule::Ptr<_1aa957d85_Data>* _4630_d) {
	jule::F64 _479_min = _1dc5bb2d0_Min(_4618_kind);;
	jule::F64 _489_max = _1dc5bb577_Max(_4618_kind);;
	{
		
		if (_1c090625d_IsF64((*(_4630_d)).get()._field_Constant.ptr())) {
			_case_begin_1ad5338e7:;
			{
				jule::F64 _5113_x = _1c0903db5_ReadF64((*(_4630_d)).get()._field_Constant.ptr());;
				jule::F64 _5214_i = 0;;
				jule::F64 _5217_frac = 0;;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1dc5728a2_Modf(_5113_x);
					_5214_i = __jule_assign_result.__jule_result_arg0;
					_5217_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_5217_frac != 0LL)) {
					return false;;
				};
				return ((_5214_i >= _479_min) && (_5214_i <= _489_max));;
			}
		}
		else if (_1c0905a21_IsU64((*(_4630_d)).get()._field_Constant.ptr())) {
			_case_begin_1ad534079:;
			{
				jule::F64 _5813_x = _1c0904602_AsF64((*(_4630_d)).get()._field_Constant.ptr());;
				if ((_5813_x <= _489_max)) {
					return true;;
				};
			}
		}
		else if (_1c09057ac_IsI64((*(_4630_d)).get()._field_Constant.ptr())) {
			_case_begin_1ad534101:;
			{
				jule::F64 _6313_x = _1c0904602_AsF64((*(_4630_d)).get()._field_Constant.ptr());;
				return ((_479_min <= _6313_x) && (_6313_x <= _489_max));;
			}
		}
		_match_end_1ad533e58:;
	};
	return false;;
}



inline jule::Bool _1aa93b3eb_unsigAssignable(jule::Str _6920_kind, jule::Ptr<_1aa957d85_Data>* _6932_d) {
	jule::F64 _709_max = _1dc5bb577_Max(_6920_kind);;
	if (((*(_6932_d)).get()._field_IsRune && _6920_kind.equal("u8", 2))) {
		return _1aa9224d1_IsAscii(static_cast<jule::I32>(static_cast<jule::I32>(_1c0903414_ReadI64((*(_6932_d)).get()._field_Constant.ptr()))));;
	};
	{
		
		if (_1c090625d_IsF64((*(_6932_d)).get()._field_Constant.ptr())) {
			_case_begin_1ad538d2b:;
			{
				jule::F64 _7713_x = _1c0903db5_ReadF64((*(_6932_d)).get()._field_Constant.ptr());;
				if ((_7713_x < 0LL)) {
					return false;;
				};
				jule::F64 _8114_i = 0;;
				jule::F64 _8117_frac = 0;;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1dc5728a2_Modf(_7713_x);
					_8114_i = __jule_assign_result.__jule_result_arg0;
					_8117_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_8117_frac != 0LL)) {
					return false;;
				};
				return (_8114_i <= _709_max);;
			}
		}
		else if (_1c0905a21_IsU64((*(_6932_d)).get()._field_Constant.ptr())) {
			_case_begin_1ad538d92:;
			{
				jule::F64 _8713_x = _1c0904602_AsF64((*(_6932_d)).get()._field_Constant.ptr());;
				if ((_8713_x <= _709_max)) {
					return true;;
				};
			}
		}
		else if (_1c09057ac_IsI64((*(_6932_d)).get()._field_Constant.ptr())) {
			_case_begin_1ad538e19:;
			{
				jule::F64 _9213_x = _1c0904602_AsF64((*(_6932_d)).get()._field_Constant.ptr());;
				return ((0LL <= _9213_x) && (_9213_x <= _709_max));;
			}
		}
		_match_end_1ad5386aa:;
	};
	return false;;
}



inline jule::Bool _1aa93b73c_intAssignable(jule::Str _9818_kind, jule::Ptr<_1aa957d85_Data>* _9830_d) {
	{
		
		if (_1dc5c14a0_IsSigInt(_9818_kind)) {
			_case_begin_1ad53d54a:;
			{
				return _1aa93b066_sigAssignable(_9818_kind, _9830_d);;
			}
		}
		else if (_1dc5c178b_IsUnsigInt(_9818_kind)) {
			_case_begin_1ad53cdeb:;
			{
				return _1aa93b3eb_unsigAssignable(_9818_kind, _9830_d);;
			}
		}
		else {
			_case_begin_1ad5395e0:;
			{
				return false;;
			}
		}
		_match_end_1ad539524:;
	};
}



inline jule::Ptr<_1aa983872_TypeKind> _1aa94c6b5_lenKind(void) {
	return jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("int", 3)), 10)});;
}



inline jule::Ptr<_1aa820a94_Directive> _1aa97c8d2_findDirective(jule::Slice<jule::Ptr<_1aa820a94_Directive>>* _415623_directives, jule::Str _415654_d) {
	{
		auto expr = _415623_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad74da35:;
		if (it != expr_end) {
			jule::Ptr<_1aa820a94_Directive> _415717_dr = *it;
			{
				if ((_415717_dr.get()._field_Tag.get()._field_Kind == _415654_d)) {
					return _415717_dr;;
				};
			}
			_iter_next_1ad74da35:;
			++it;
			goto _iter_begin_1ad74da35;
		}
		_iter_end_1ad74da35:;
	};
	return nullptr;;
}



inline jule::Any _1aa97cc67_findBuiltinsImport(jule::Str _416523_ident, jule::Ptr<_1aa8d101c_ImportInfo> _416535_imp) {
	return _1aa2b1d2c_findPackageBuiltinDef(_416535_imp.get()._field_LinkPath, _416523_ident);;
}



inline void _1aa97ce76_fitBitsize(jule::Ptr<_1aa957d85_Data>* _417220_d) {
	jule::Ptr<_1aa989339_Prim> _417313_prim = _1aa985c5e_Prim((*(_417220_d)).get()._field_Kind.ptr());;
	jule::I64 _41749_z = _1dc5b4c35_BitsizeOf(_1aa98969c_Str(_417313_prim.ptr()));;
	if ((_41749_z == 64LLU)) {
		return;;
	};
	jule::I64 _417913_k = 0LL;;
	{
		
		if (_1c09057ac_IsI64((*(_417220_d)).get()._field_Constant.ptr())) {
			_case_begin_1ad751609:;
			{
				_417913_k=static_cast<jule::I64>(_1dc5b6682_BitsizeOfInt(static_cast<jule::I64>(_1c0903414_ReadI64((*(_417220_d)).get()._field_Constant.ptr()))));
				if ((_417913_k > _41749_z)) {
					_417313_prim.get()._field_Kind=_1dc5b5054_IntFromBits(_417913_k);
				};
			}
		}
		else if (_1c0905a21_IsU64((*(_417220_d)).get()._field_Constant.ptr())) {
			_case_begin_1ad751681:;
			{
				_417913_k=static_cast<jule::I64>(_1dc5b6929_BitsizeOfUint(static_cast<jule::U64>(_1c0903678_ReadU64((*(_417220_d)).get()._field_Constant.ptr()))));
				if ((_417913_k > _41749_z)) {
					_417313_prim.get()._field_Kind=_1dc5b52eb_UintFromBits(_417913_k);
				};
			}
		}
		else if (_1c090625d_IsF64((*(_417220_d)).get()._field_Constant.ptr())) {
			_case_begin_1ad751708:;
			{
				_417913_k=static_cast<jule::I64>(_1dc5b63da_BitsizeOfFloat(static_cast<jule::F64>(_1c0903db5_ReadF64((*(_417220_d)).get()._field_Constant.ptr()))));
				if ((_417913_k > _41749_z)) {
					_417313_prim.get()._field_Kind=_1dc5b5593_FloatFromBits(_417913_k);
				};
			}
		}
		_match_end_1ad75153d:;
	};
}



inline void _1aa97d273_makeStructLitAlloc(jule::Ptr<_1aa957d85_Data>* _419928_d, jule::Ptr<_1aa87be0d_StructLitExprModel>* _419943_lit) {
	(*(_419928_d)).get()._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(jule::new_ptr<_1aa98cabd_Sptr>(_1aa98cabd_Sptr{._field_Elem=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>((*(_419943_lit)).get()._field_Strct, 0)})}), 11)});
	(*(_419928_d)).get()._field_Model=jule::Any(jule::new_ptr<_1aa87c21b_AllocStructLitExprModel>(_1aa87c21b_AllocStructLitExprModel{._field_Lit=(*(_419943_lit))}), &__jule_any_type115);
}



inline jule::Ptr<_1aa908c59_Var> _1aa97d5b4_buildErrorVar(jule::Ptr<_1aa8b25a3_Scope>* _421023_s, jule::Ptr<_1aa85c52b_FnCallExpr>* _421039_fc) {
	return jule::new_ptr<_1aa908c59_Var>(_1aa908c59_Var{._field_Scope=(*(_421023_s)), ._field_Token=(*(_421039_fc)).get()._field_Token, ._field_Ident=jule::Str("error", 5), ._field_Mutable=true, ._field_Used=true, ._field_Reference=false, ._field_Kind=jule::new_ptr<_1aa9889ba_TypeSymbol>(_1aa9889ba_TypeSymbol{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("any", 3)), 10)})}), ._field_Value=jule::new_ptr<_1aa958e0d_Value>(_1aa958e0d_Value{._field_Data=jule::new_ptr<_1aa957d85_Data>()}), });;
}



inline jule::Any _1aa97d905_findBuiltinsSema(jule::Str _422921_ident, jule::Ptr<_1aa8d92de_Sema> _422937_s) {
	{
		auto expr = &(_422937_s.get()._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad756d5c:;
		if (it != expr_end) {
			jule::Ptr<_1aa8d101c_ImportInfo> _423017_imp = *it;
			{
				if ((_423017_imp.get()._field_ImportAll || _1aa8d35c4_existIdent(_423017_imp.ptr(), _422921_ident))) {
					jule::Any _423221_def = _1aa97cc67_findBuiltinsImport(_422921_ident, _423017_imp);;
					if ((_423221_def != nullptr)) {
						return _423221_def;;
					};
				};
			}
			_iter_next_1ad756d5c:;
			++it;
			goto _iter_begin_1ad756d5c;
		}
		_iter_end_1ad756d5c:;
	};
	jule::Str _424013_ppath = _1db94aa8e_Dir(_422937_s.get()._field_file.get()._field_File.ptr());;
	if (_1d9d036a7_HasPrefix(_424013_ppath, _1d9e38479_PathStdlib)) {
		(_424013_ppath).mut_slice(_1d9e38479_PathStdlib.len());;
		_424013_ppath=(jule::Str("std", 3) + _1d9d0969c_Replace(_424013_ppath, static_cast<jule::Str>(92LL), jule::Str("::", 2), -1LL));
		return _1aa2b1d2c_findPackageBuiltinDef(_424013_ppath, _422921_ident);;
	};
	return nullptr;;
}



inline jule::Bool _1aa97db9c_isOkForShifting(jule::Ptr<_1aa957d85_Data>* _425425_d) {
	if (_1aa958748_IsConst((*(_425425_d)).ptr())) {
		{
			
			if (_1c09057ac_IsI64((*(_425425_d)).get()._field_Constant.ptr())) {
				_case_begin_1ad75a7bc:;
				{
					return (_1c0903414_ReadI64((*(_425425_d)).get()._field_Constant.ptr()) >= 0LL);;
				}
			}
			else if (_1c0905a21_IsU64((*(_425425_d)).get()._field_Constant.ptr())) {
				_case_begin_1ad75a0e6:;
				{
					return true;;
				}
			}
			else if (_1c090625d_IsF64((*(_425425_d)).get()._field_Constant.ptr())) {
				_case_begin_1ad75a15c:;
				{
					return (_1c0903db5_ReadF64((*(_425425_d)).get()._field_Constant.ptr()) >= 0LL);;
				}
			}
			else {
				_case_begin_1ad75a080:;
				{
					return false;;
				}
			}
			_match_end_1ad759eb4:;
		};
	};
	jule::Ptr<_1aa989339_Prim> _42679_prim = _1aa985c5e_Prim((*(_425425_d)).get()._field_Kind.ptr());;
	return ((_42679_prim != nullptr) && _1dc5c1a33_IsInt(_1aa98969c_Str(_42679_prim.ptr())));;
}



inline jule::Bool _1aa97e054_isInstancedStruct(jule::Ptr<_1aa876dd6_StructIns> _427122_s) {
	return (_427122_s.get()._field_Decl.get()._field_Generics.len() == _427122_s.get()._field_Generics.len());;
}



inline jule::Bool _1aa97e3b7_isPtrArithmeticCompatible(jule::Ptr<_1aa957d85_Data>* _427535_l, jule::Ptr<_1aa957d85_Data>* _427550_r) {
	jule::Ptr<_1aa991132_Ptr> _42769_ptr = _1aa986237_Ptr((*(_427550_r)).get()._field_Kind.ptr());;
	if ((_42769_ptr != nullptr)) {
		return _1aa98407b_Equal(_1aa986237_Ptr((*(_427535_l)).get()._field_Kind.ptr()).get()._field_Elem, _42769_ptr.get()._field_Elem);;
	};
	if (_1aa958748_IsConst((*(_427550_r)).ptr())) {
		return _1aa93b73c_intAssignable(jule::Str("int", 3), _427550_r);;
	};
	_1aa93bbe3_typeCompatibilityChecker _428313_tcc = _1aa93bbe3_typeCompatibilityChecker{._field_dest=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("int", 3)), 10)}), ._field_src=(*(_427550_r)).get()._field_Kind, };;
	return _1aa93d2cc_check(&_428313_tcc);;
}



inline void _1aa97e609_applyCastKindModel(jule::Ptr<_1aa957d85_Data>* _429228_d, jule::Ptr<_1aa983872_TypeKind>* _429243_t) {
	(*(_429228_d)).get()._field_Model=jule::Any(jule::new_ptr<_1aa87c76b_CastingExprModel>(_1aa87c76b_CastingExprModel{._field_Expr=(*(_429228_d)).get()._field_Model, ._field_Kind=(*(_429243_t)), ._field_ExprKind=(*(_429228_d)).get()._field_Kind}), &__jule_any_type98);
}



inline void _1aa97e8b2_applyCastKind(jule::Ptr<_1aa957d85_Data>* _430023_d, jule::Ptr<_1aa983872_TypeKind>* _430038_t) {
	_1aa97e609_applyCastKindModel(_430023_d, _430038_t);
	(*(_430023_d)).get()._field_Kind=(*(_430038_t));
}



inline jule::Ptr<_1aa957d85_Data> _1aa97eab0_buildVoidData(void) {
	return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("void", 4)), 10)}), });;
}



inline jule::Str _1aa97ed79_checkDataForIntegerIndexing(jule::Ptr<_1aa957d85_Data>* _431337_d) {
	jule::Str __jule_func_result = jule::Str();
	if (((*(_431337_d)) == nullptr)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	{
		
		if ((_1aa985c5e_Prim((*(_431337_d)).get()._field_Kind.ptr()) == nullptr)) {
			_case_begin_1ad76283a:;
			{
				__jule_func_result = jule::Str("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if ((!(_1dc5c1a33_IsInt(_1aa98969c_Str(_1aa985c5e_Prim((*(_431337_d)).get()._field_Kind.ptr()).ptr()))))) {
			_case_begin_1ad7628a1:;
			{
				__jule_func_result = jule::Str("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if (_1aa958748_IsConst((*(_431337_d)).ptr())) {
			_case_begin_1ad762917:;
			{
				if ((_1c0904602_AsF64((*(_431337_d)).get()._field_Constant.ptr()) < 0LL)) {
					__jule_func_result = jule::Str("overflow the limit of data-type", 31);
					return __jule_func_result;;
				};
			}
		}
		else if ((_1aa985c5e_Prim((*(_431337_d)).get()._field_Kind.ptr()) == nullptr) || _1aa958748_IsConst((*(_431337_d)).ptr()) || (_1dc5b498d_RealKindOf(_1aa98969c_Str(_1aa985c5e_Prim((*(_431337_d)).get()._field_Kind.ptr()).ptr())) != _1dc5b498d_RealKindOf(jule::Str("int", 3)))) {
			_case_begin_1ad76297d:;
			{
				jule::Ptr<_1aa983872_TypeKind> _433017_t = jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("int", 3)), 10)});;
				_1aa97e8b2_applyCastKind(_431337_d, &(_433017_t));
			}
		}
		_match_end_1ad762472:;
	};
	__jule_func_result = jule::Str();
	return __jule_func_result;;
}



inline void _1aa980143_applyCastModelByEnum(jule::Ptr<_1aa957d85_Data>* _433930_d, jule::Ptr<_1aa89ddca_Enum> _433944_e) {
	if ((_433944_e == nullptr)) {
		return;;
	};
	jule::Ptr<_1aa989339_Prim> _43439_p = _1aa985c5e_Prim(_433944_e.get()._field_Kind.get()._field_Kind.ptr());;
	if (_1aa98c56d_IsStr(_43439_p.ptr())) {
		return;;
	};
	_1aa97e609_applyCastKindModel(_433930_d, &(_433944_e.get()._field_Kind.get()._field_Kind));
}



inline void _1aa9803eb_castConstByType(jule::Str* _435021_t, jule::Ptr<_1aa957d85_Data>* _435034_d) {
	{
		
		if (_1dc5c14a0_IsSigInt((*(_435021_t)))) {
			_case_begin_1ad767a71:;
			{
				{
					auto _match_expr{ _1dc5b4c35_BitsizeOf(_1dc5b498d_RealKindOf((*(_435021_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1ad7686ba:;
						{
							_1c0904877_SetI64((*(_435034_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_1c0904129_AsI64((*(_435034_d)).get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1ad768742:;
						{
							_1c0904877_SetI64((*(_435034_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I32>(_1c0904129_AsI64((*(_435034_d)).get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1ad7687a8:;
						{
							_1c0904877_SetI64((*(_435034_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I16>(_1c0904129_AsI64((*(_435034_d)).get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1ad76881e:;
						{
							_1c0904877_SetI64((*(_435034_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I8>(_1c0904129_AsI64((*(_435034_d)).get()._field_Constant.ptr())))));
						}
					}
					_match_end_1ad767d07:;
				};
			}
		}
		else if (_1dc5c178b_IsUnsigInt((*(_435021_t)))) {
			_case_begin_1ad767ae8:;
			{
				{
					auto _match_expr{ _1dc5b4c35_BitsizeOf(_1dc5b498d_RealKindOf((*(_435021_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1ad76bb85:;
						{
							_1c0904aec_SetU64((*(_435034_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_1c090438d_AsU64((*(_435034_d)).get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1ad76bc1d:;
						{
							_1c0904aec_SetU64((*(_435034_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U32>(_1c090438d_AsU64((*(_435034_d)).get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1ad76bc84:;
						{
							_1c0904aec_SetU64((*(_435034_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U16>(_1c090438d_AsU64((*(_435034_d)).get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1ad76bcea:;
						{
							_1c0904aec_SetU64((*(_435034_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U8>(_1c090438d_AsU64((*(_435034_d)).get()._field_Constant.ptr())))));
						}
					}
					_match_end_1ad767ee4:;
				};
			}
		}
		else if (_1dc5c1d52_IsFloat((*(_435021_t)))) {
			_case_begin_1ad767b70:;
			{
				{
					auto _match_expr{ _1dc5b4c35_BitsizeOf(_1dc5b498d_RealKindOf((*(_435021_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1ad770161:;
						{
							_1c090536c_SetF64((*(_435034_d)).get()._field_Constant.ptr(), static_cast<jule::F64>(_1c0904602_AsF64((*(_435034_d)).get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1ad7701e9:;
						{
							_1c090536c_SetF64((*(_435034_d)).get()._field_Constant.ptr(), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F32>(_1c0904602_AsF64((*(_435034_d)).get()._field_Constant.ptr())))));
						}
					}
					_match_end_1ad76d835:;
				};
			}
		}
		_match_end_1ad767950:;
	};
}



inline void _1aa980907_updateModelToGenericIns(jule::Any* _438433_m, jule::Ptr<_1aa88c0c7_FnIns>* _438452_f) {
	{
		auto &_match_expr{ (*(_438433_m)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1ad7711a6:;
			{
				(*(_438433_m))=jule::Any((*(_438452_f)), &__jule_any_type7);
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1ad77121c:;
			{
				(*(_438433_m)).cast_ptr<_1aa88098e_StructSubIdentExprModel>(&__jule_any_type71).get()._field_Method=(*(_438452_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1ad771283:;
			{
				(*(_438433_m)).cast_ptr<_1aa880d35_StructStaticIdentExprModel>(&__jule_any_type101).get()._field_Method=(*(_438452_f));
			}
		}
		_match_end_1ad76829c:;
	};
}



inline jule::Bool _1aa980b49_pushSubIdentFromExpr(jule::Any _439529_expr, jule::Ptr<_1aa854c3d_SubIdentTypeDecl>* _439550_t) {
	{
		auto &_match_expr{ _439529_expr };
		
		if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1ad7737b3:;
			{
				jule::Ptr<_1aa85a20a_IdentExpr> _439817_e = _439529_expr.cast_ptr<_1aa85a20a_IdentExpr>(&__jule_any_type85);;
				(*(_439550_t)).get()._field_Idents = jule::alloc_for_append((*(_439550_t)).get()._field_Idents,1);(*(_439550_t)).get()._field_Idents.__push(jule::new_ptr<_1aa8545de_IdentTypeDecl>(_1aa8545de_IdentTypeDecl{._field_Token=_439817_e.get()._field_Token, ._field_Ident=_439817_e.get()._field_Ident, }));;
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1ad773829:;
			{
				jule::Ptr<_1aa85b99d_SubIdentExpr> _440417_e = _439529_expr.cast_ptr<_1aa85b99d_SubIdentExpr>(&__jule_any_type91);;
				if ((!(_1aa980b49_pushSubIdentFromExpr(_440417_e.get()._field_Expr.get()._field_Kind, _439550_t)))) {
					return false;;
				};
				(*(_439550_t)).get()._field_Idents = jule::alloc_for_append((*(_439550_t)).get()._field_Idents,1);(*(_439550_t)).get()._field_Idents.__push(jule::new_ptr<_1aa8545de_IdentTypeDecl>(_1aa8545de_IdentTypeDecl{._field_Token=_440417_e.get()._field_Ident, ._field_Ident=_440417_e.get()._field_Ident.get()._field_Kind, }));;
			}
		}
		else {
			_case_begin_1ad77298d:;
			{
				return false;;
			}
		}
		_match_end_1ad773263:;
	};
	return true;;
}



inline jule::Str _1aa980de1_constoa(jule::Ptr<_1c0901b1b_Const>* _441813_c) {
	{
		
		if (_1c09057ac_IsI64((*(_441813_c)).ptr())) {
			_case_begin_1ad77651e:;
			{
				return _1dc5b26e4_FmtInt(static_cast<jule::I64>(_1c0903414_ReadI64((*(_441813_c)).ptr())), 10LL);;
			}
		}
		else if (_1c0905a21_IsU64((*(_441813_c)).ptr())) {
			_case_begin_1ad77662e:;
			{
				return _1dc5b235e_FmtUint(static_cast<jule::U64>(_1c0903678_ReadU64((*(_441813_c)).ptr())), 10LL);;
			}
		}
		else {
			_case_begin_1ad773917:;
			{
				return jule::Str();;
			}
		}
		_match_end_1ad7734d8:;
	};
}



inline jule::Ptr<_1aa957d85_Data> _1aa981232_evalEnumStatic(jule::Ptr<_1aa89ddca_Enum>* _442924_enm, jule::Ptr<_1aa89d3d5_EnumItem>* _442941_item) {
	jule::Ptr<_1aa957d85_Data> _443013_d = jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>((*(_442924_enm)), 3)}), });;
	if (((*(_442941_item)) != nullptr)) {
		_443013_d.get()._field_Constant=jule::new_ptr<_1c0901b1b_Const>((*((*(_442941_item)).get()._field_Value.get()._field_Data.get()._field_Constant)));
		_443013_d.get()._field_Model=jule::Any(_443013_d.get()._field_Constant, &__jule_any_type19);
		_1aa980143_applyCastModelByEnum(&(_443013_d), (*(_442924_enm)));
	};
	return _443013_d;;
}



inline jule::Bool _1aa99b2e6_kindUsesGenerics(jule::Ptr<_1aa983872_TypeKind>* _163026_k, jule::Slice<jule::Ptr<_1aa861321_GenericDecl>>* _163041_generics) {
	{
		auto expr = _163041_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad9b0505:;
		if (it != expr_end) {
			jule::Ptr<_1aa861321_GenericDecl> *_163112_g = it;
			{
				if (static__1aa99adea_exist(&((*(_163112_g)).get()._field_Ident), _163026_k)) {
					return true;;
				};
			}
			_iter_next_1ad9b0505:;
			++it;
			goto _iter_begin_1ad9b0505;
		}
		_iter_end_1ad9b0505:;
	};
	return false;;
}



inline jule::Bool _1aa99b67b_hasDirective(jule::Slice<jule::Ptr<_1aa820a94_Directive>>* _164022_directives, jule::Str _164053_tag) {
	{
		auto expr = _164022_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad9b0b32:;
		if (it != expr_end) {
			jule::Ptr<_1aa820a94_Directive> _164117_dr = *it;
			{
				if ((_164117_dr.get()._field_Tag.get()._field_Kind == _164053_tag)) {
					return true;;
				};
			}
			_iter_next_1ad9b0b32:;
			++it;
			goto _iter_begin_1ad9b0b32;
		}
		_iter_end_1ad9b0b32:;
	};
	return false;;
}



inline jule::Bool _1aa99b923_canGetPtr(jule::Ptr<_1aa957d85_Data>* _164919_d) {
	if (((!((*(_164919_d)).get()._field_Lvalue)) || _1aa958748_IsConst((*(_164919_d)).ptr()))) {
		return false;;
	};
	{
		
		if (((_1aa986e4c_Fn((*(_164919_d)).get()._field_Kind.ptr()) != nullptr) || (_1aa98649b_Enum((*(_164919_d)).get()._field_Kind.ptr()) != nullptr))) {
			_case_begin_1ad9b3074:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1ad9b28c0:;
			{
				return true;;
			}
		}
		_match_end_1ad9b286a:;
	};
}



inline jule::Bool _1aa99bc42_isValidForSptrType(jule::Ptr<_1aa983872_TypeKind>* _166228_t) {
	jule::Ptr<_1aa876dd6_StructIns> _166313_s = _1aa9871b1_Struct((*(_166228_t)).ptr());;
	if ((((_166313_s != nullptr) && (_166313_s.get()._field_Decl != nullptr)) && _166313_s.get()._field_Decl.get()._field_CppLinked)) {
		return false;;
	};
	return true;;
}



inline jule::Bool _1aa99bed9_isValidForRef(jule::Ptr<_1aa983872_TypeKind>* _167123_t) {
	return (_1aa986e4c_Fn((*(_167123_t)).ptr()) == nullptr);;
}



inline jule::Bool _1aa99c2a3_isBuiltinStrConvertable(jule::Ptr<_1aa983872_TypeKind>* _167433_t) {
	return ((((!(_1aa984a71_Void((*(_167433_t)).ptr()))) && (_1aa986e4c_Fn((*(_167433_t)).ptr()) == nullptr)) && (_1aa9878ed_Tup((*(_167433_t)).ptr()) == nullptr)) && (_1aa988613_comptimeType((*(_167433_t)).ptr()) == nullptr));;
}



inline jule::Str _1aa99c528_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1db944d0d_Token>>* _167827_tokens) {
	jule::Str _167913_s = (*(_167827_tokens))[0LL].get()._field_Kind;;
	{
		auto expr = (*(_167827_tokens)).slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1ad9b7100:;
		if (it != expr_end) {
			jule::Ptr<_1db944d0d_Token> *_168012_token = it;
			{
				(_167913_s).append("::", 2);
				_167913_s+=(*(_168012_token)).get()._field_Kind;
			}
			_iter_next_1ad9b7100:;
			++it;
			goto _iter_begin_1ad9b7100;
		}
		_iter_end_1ad9b7100:;
	};
	return _167913_s;;
}



inline jule::Ptr<_1aa989339_Prim> _1aa99c8d0_buildPrimType(jule::Str _168718_kind) {
	return jule::new_ptr<_1aa989339_Prim>(_1aa989339_Prim{._field_Kind=_168718_kind});;
}



inline jule::Ptr<_1aa8740c0_Struct> _1aa99cb77_getStructFromKind(jule::Ptr<_1aa983872_TypeKind> _169326_k) {
	{
		
		if ((_169326_k == nullptr)) {
			_case_begin_1ad9b8321:;
			{
				return nullptr;;
			}
		}
		else if ((_1aa9871b1_Struct(_169326_k.ptr()) != nullptr)) {
			_case_begin_1ad9b8387:;
			{
				return _1aa9871b1_Struct(_169326_k.ptr()).get()._field_Decl;;
			}
		}
		else if ((_1aa985ec3_Sptr(_169326_k.ptr()) != nullptr)) {
			_case_begin_1ad9b83ed:;
			{
				return _1aa99cb77_getStructFromKind(_1aa985ec3_Sptr(_169326_k.ptr()).get()._field_Elem);;
			}
		}
		else if ((_1aa986bd8_Slc(_169326_k.ptr()) != nullptr)) {
			_case_begin_1ad9b8464:;
			{
				return _1aa99cb77_getStructFromKind(_1aa986bd8_Slc(_169326_k.ptr()).get()._field_Elem);;
			}
		}
		else if ((_1aa986974_Arr(_169326_k.ptr()) != nullptr)) {
			_case_begin_1ad9b86ea:;
			{
				return _1aa99cb77_getStructFromKind(_1aa986974_Arr(_169326_k.ptr()).get()._field_Elem);;
			}
		}
		else if ((_1aa986237_Ptr(_169326_k.ptr()) != nullptr)) {
			_case_begin_1ad9b8761:;
			{
				return nullptr;;
			}
		}
		else {
			_case_begin_1ad9b82aa:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad9b7809:;
	};
}



inline jule::Bool _1aa99ce1e_isPrim(jule::Str _171611_kind) {
	return (((((((((((((((_171611_kind.equal("i8", 2) || _171611_kind.equal("i16", 3)) || _171611_kind.equal("i32", 3)) || _171611_kind.equal("i64", 3)) || _171611_kind.equal("u8", 2)) || _171611_kind.equal("u16", 3)) || _171611_kind.equal("u32", 3)) || _171611_kind.equal("u64", 3)) || _171611_kind.equal("f32", 3)) || _171611_kind.equal("f64", 3)) || _171611_kind.equal("int", 3)) || _171611_kind.equal("uint", 4)) || _171611_kind.equal("uintptr", 7)) || _171611_kind.equal("bool", 4)) || _171611_kind.equal("str", 3)) || _171611_kind.equal("any", 3));;
}



inline void _1aa99d1c7_applyImplicitCast(jule::Ptr<_1aa983872_TypeKind>* _173527_dest, jule::Ptr<_1aa957d85_Data>* _173549_d) {
	if (_1aa98480c_IsNil((*(_173549_d)).get()._field_Kind.ptr())) {
		return;;
	};
	jule::Ptr<_1aa989339_Prim> _17399_destPrim = _1aa985c5e_Prim((*(_173527_dest)).ptr());;
	jule::Ptr<_1aa989339_Prim> _17409_prim = _1aa985c5e_Prim((*(_173549_d)).get()._field_Kind.ptr());;
	if ((_17399_destPrim != nullptr)) {
		if (_1aa98c7d2_IsAny(_17399_destPrim.ptr())) {
			if (((_17409_prim == nullptr) || (!(_1aa98c7d2_IsAny(_17409_prim.ptr()))))) {
				_1aa97e8b2_applyCastKind(_173549_d, _173527_dest);
			};
			return;;
		};
		if (((((((!(_1aa984598_CppLinked((*(_173549_d)).get()._field_Kind.ptr()))) && (!((*(_173549_d)).get()._field_Kind.get()._field_Variadic))) && (!((*(_173549_d)).get()._field_Lvalue))) && (!(_1aa958748_IsConst((*(_173549_d)).ptr())))) && (_17409_prim != nullptr)) && _1c0901698_IsNum(_17409_prim.get()._field_Kind))) {
			_1aa97e8b2_applyCastKind(_173549_d, _173527_dest);
		};
		return;;
	};
	jule::Ptr<_1aa89b647_Trait> _17599_dt = _1aa987425_Trait((*(_173527_dest)).ptr());;
	if ((_17599_dt != nullptr)) {
		jule::Ptr<_1aa89b647_Trait> _176113_bt = _1aa987425_Trait((*(_173549_d)).get()._field_Kind.ptr());;
		if (((_176113_bt == nullptr) || (_176113_bt != _17599_dt))) {
			_1aa97e609_applyCastKindModel(_173549_d, _173527_dest);
			return;;
		};
	};
	if (((_1aa986710_TypeEnum((*(_173527_dest)).ptr()) != nullptr) && (_1aa986710_TypeEnum((*(_173549_d)).get()._field_Kind.ptr()) == nullptr))) {
		_1aa97e609_applyCastKindModel(_173549_d, _173527_dest);
		return;;
	};
}



inline jule::Bool _1aa99d46e_validTypeForXof(jule::Ptr<_1aa983872_TypeKind>* _177425_t) {
	return ((!(_1aa984a71_Void((*(_177425_t)).ptr()))) && (_1aa986e4c_Fn((*(_177425_t)).ptr()) == nullptr));;
}



inline __jule_tuple_x_1aa94d51d_SymbolTable__jule_tuple_s_1d9d938bd_Log _1aa9a121e_buildSymbols(jule::Ptr<_1aa81e80c_Ast>* _1622_ast, jule::Trait<_1aa8cd36b_Importer>* _1638_importer, jule::Ptr<_1aa895aa3_symbolBuilder> _1662_owner) {
	__jule_tuple_x_1aa94d51d_SymbolTable__jule_tuple_s_1d9d938bd_Log __jule_func_result;
	jule::Ptr<_1aa895aa3_symbolBuilder> _1713_sb = jule::new_ptr<_1aa895aa3_symbolBuilder>(_1aa895aa3_symbolBuilder{._field_owner=_1662_owner, ._field_importer=(*(_1638_importer)), ._field_ast=(*(_1622_ast)), });;
	_1aa89aa53_build(_1713_sb);
	if ((_1713_sb.get()._field_errors.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = _1713_sb.get()._field_table;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _1713_sb.get()._field_errors;
	return __jule_func_result;;
}



inline __jule_tuple_x_1aa8d3b57_Package__jule_tuple_s_1d9d938bd_Log _1aa9a164d_analyzePackage(jule::Slice<jule::Ptr<_1aa81e80c_Ast>>* _3024_files, jule::Trait<_1aa8cd36b_Importer>* _3044_importer, jule::I64* _3065_flags) {
	__jule_tuple_x_1aa8d3b57_Package__jule_tuple_s_1d9d938bd_Log __jule_func_result;
	jule::Slice<jule::Ptr<_1aa94d51d_SymbolTable>> _3213_tables = jule::Slice<jule::Ptr<_1aa94d51d_SymbolTable>>::alloc(0LL, (*(_3024_files)).len());;
	{
		auto expr = _3024_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adac0a11:;
		if (it != expr_end) {
			jule::Ptr<_1aa81e80c_Ast> _3317_f = *it;
			{
				jule::Ptr<_1aa94d51d_SymbolTable> _3418_table;;
				jule::Slice<_1d9d938bd_Log> _3429_errors;;
				({
					__jule_tuple_x_1aa94d51d_SymbolTable__jule_tuple_s_1d9d938bd_Log __jule_assign_result = _1aa9a121e_buildSymbols(&(_3317_f), _3044_importer, nullptr);
					_3418_table = __jule_assign_result.__jule_result_arg0;
					_3429_errors = __jule_assign_result.__jule_result_arg1;
				});
				if ((_3429_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _3429_errors;
					return __jule_func_result;;
				};
				_3213_tables = jule::alloc_for_append(_3213_tables,1);_3213_tables.__push(_3418_table);;
			}
			_iter_next_1adac0a11:;
			++it;
			goto _iter_begin_1adac0a11;
		}
		_iter_end_1adac0a11:;
	};
	jule::Ptr<_1aa8d92de_Sema> _4113_sema = jule::new_ptr<_1aa8d92de_Sema>(_1aa8d92de_Sema{._field_flags=(*(_3065_flags)), ._field_meta=jule::new_ptr<_1aa8d87c7_commonSemaMeta>()});;
	_1aa90564b_check(_4113_sema, &(_3213_tables));
	if ((_4113_sema.get()._field_errors.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _4113_sema.get()._field_errors;
		return __jule_func_result;;
	};
	jule::Ptr<_1aa8d3b57_Package> _5013_pkg = jule::new_ptr<_1aa8d3b57_Package>(_1aa8d3b57_Package{._field_Files=_4113_sema.get()._field_files});;
	__jule_func_result.__jule_result_arg0 = _5013_pkg;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_x_1aa8d3b57_Package__jule_tuple_s_1d9d938bd_Log _1aa9a1a38_AnalyzePackage(jule::Slice<jule::Ptr<_1aa81e80c_Ast>> _7423_files, jule::Trait<_1aa8cd36b_Importer> _7442_importer, jule::I64 _7462_flags) {
	__jule_tuple_x_1aa8d3b57_Package__jule_tuple_s_1d9d938bd_Log __jule_func_result;
	if ((_7423_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1aa8d3b57_Package> _7814_package;;
	jule::Slice<_1d9d938bd_Log> _7827_logs;;
	({
		__jule_tuple_x_1aa8d3b57_Package__jule_tuple_s_1d9d938bd_Log __jule_assign_result = _1aa9a164d_analyzePackage(&(_7423_files), &(_7442_importer), &(_7462_flags));
		_7814_package = __jule_assign_result.__jule_result_arg0;
		_7827_logs = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _7814_package;
	__jule_func_result.__jule_result_arg1 = _7827_logs;
	return __jule_func_result;;
}



inline jule::Ptr<_1aa88c0c7_FnIns> _1aa2b0710_findBuiltinFn(jule::Str _2318_ident) {
	{
		auto &_match_expr{ _2318_ident };
		
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_1adac6363:;
			{
				static jule::Ptr<_1aa88c0c7_FnIns> _2620_f = jule::new_ptr<_1aa88c0c7_FnIns>(_1aa88c0c7_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aa957d85_Data>(jule::Ptr<_1aa959903_Eval>*,jule::Ptr<_1aa85c52b_FnCallExpr>*,jule::Ptr<_1aa957d85_Data>*)>(_1aa2b31c4_builtinCallerOut), });;
				return _2620_f;;
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_1adac9b80:;
			{
				static jule::Ptr<_1aa88c0c7_FnIns> _2920_f = jule::new_ptr<_1aa88c0c7_FnIns>(_1aa88c0c7_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aa957d85_Data>(jule::Ptr<_1aa959903_Eval>*,jule::Ptr<_1aa85c52b_FnCallExpr>*,jule::Ptr<_1aa957d85_Data>*)>(_1aa2b35ae_builtinCallerOutln), });;
				return _2920_f;;
			}
		}
		else if (_match_expr == jule::Str("new", 3)) {
			_case_begin_1adac9c6d:;
			{
				static jule::Ptr<_1aa88c0c7_FnIns> _3220_f = jule::new_ptr<_1aa88c0c7_FnIns>(_1aa88c0c7_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aa957d85_Data>(jule::Ptr<_1aa959903_Eval>*,jule::Ptr<_1aa85c52b_FnCallExpr>*,jule::Ptr<_1aa957d85_Data>*)>(_1aa2b3999_builtinCallerNew), });;
				return _3220_f;;
			}
		}
		else if (_match_expr == jule::Str("panic", 5)) {
			_case_begin_1adac9cd4:;
			{
				static jule::Ptr<_1aa88c0c7_FnIns> _3520_f = jule::new_ptr<_1aa88c0c7_FnIns>(_1aa88c0c7_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aa957d85_Data>(jule::Ptr<_1aa959903_Eval>*,jule::Ptr<_1aa85c52b_FnCallExpr>*,jule::Ptr<_1aa957d85_Data>*)>(_1aa2b40b5_builtinCallerPanic), });;
				return _3520_f;;
			}
		}
		else if (_match_expr == jule::Str("make", 4)) {
			_case_begin_1adac97b7:;
			{
				static jule::Ptr<_1aa88c0c7_FnIns> _3820_f = jule::new_ptr<_1aa88c0c7_FnIns>(_1aa88c0c7_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aa957d85_Data>(jule::Ptr<_1aa959903_Eval>*,jule::Ptr<_1aa85c52b_FnCallExpr>*,jule::Ptr<_1aa957d85_Data>*)>(_1aa2b44a0_builtinCallerMake), });;
				return _3820_f;;
			}
		}
		else if (_match_expr == jule::Str("append", 6)) {
			_case_begin_1adac982d:;
			{
				static jule::Ptr<_1aa88c0c7_FnIns> _4120_f = jule::new_ptr<_1aa88c0c7_FnIns>(_1aa88c0c7_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aa957d85_Data>(jule::Ptr<_1aa959903_Eval>*,jule::Ptr<_1aa85c52b_FnCallExpr>*,jule::Ptr<_1aa957d85_Data>*)>(_1aa2b488a_builtinCallerAppend), });;
				return _4120_f;;
			}
		}
		else if (_match_expr == jule::Str("copy", 4)) {
			_case_begin_1adac98a5:;
			{
				static jule::Ptr<_1aa88c0c7_FnIns> _4420_f = jule::new_ptr<_1aa88c0c7_FnIns>(_1aa88c0c7_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aa957d85_Data>(jule::Ptr<_1aa959903_Eval>*,jule::Ptr<_1aa85c52b_FnCallExpr>*,jule::Ptr<_1aa957d85_Data>*)>(_1aa2b568d_builtinCallerCopy), });;
				return _4420_f;;
			}
		}
		else if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1adac992c:;
			{
				static jule::Ptr<_1aa88c0c7_FnIns> _4720_f = jule::new_ptr<_1aa88c0c7_FnIns>(_1aa88c0c7_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aa957d85_Data>(jule::Ptr<_1aa959903_Eval>*,jule::Ptr<_1aa85c52b_FnCallExpr>*,jule::Ptr<_1aa957d85_Data>*)>(_1aa2b688c_builtinCallerLen), });;
				return _4720_f;;
			}
		}
		else if (_match_expr == jule::Str("cap", 3)) {
			_case_begin_1adac9d5b:;
			{
				static jule::Ptr<_1aa88c0c7_FnIns> _5020_f = jule::new_ptr<_1aa88c0c7_FnIns>(_1aa88c0c7_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aa957d85_Data>(jule::Ptr<_1aa959903_Eval>*,jule::Ptr<_1aa85c52b_FnCallExpr>*,jule::Ptr<_1aa957d85_Data>*)>(_1aa2b7409_builtinCallerCap), });;
				return _5020_f;;
			}
		}
		else if (_match_expr == jule::Str("delete", 6)) {
			_case_begin_1adac9dd3:;
			{
				static jule::Ptr<_1aa88c0c7_FnIns> _5320_f = jule::new_ptr<_1aa88c0c7_FnIns>(_1aa88c0c7_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aa957d85_Data>(jule::Ptr<_1aa959903_Eval>*,jule::Ptr<_1aa85c52b_FnCallExpr>*,jule::Ptr<_1aa957d85_Data>*)>(_1aa2b7c78_builtinCallerDelete), });;
				return _5320_f;;
			}
		}
		else if (_match_expr == jule::Str("clone", 5)) {
			_case_begin_1adac9e5a:;
			{
				static jule::Ptr<_1aa88c0c7_FnIns> _5620_f = jule::new_ptr<_1aa88c0c7_FnIns>(_1aa88c0c7_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aa957d85_Data>(jule::Ptr<_1aa959903_Eval>*,jule::Ptr<_1aa85c52b_FnCallExpr>*,jule::Ptr<_1aa957d85_Data>*)>(_1aa2b833e_builtinCallerClone), });;
				return _5620_f;;
			}
		}
		else if (_match_expr == jule::Str("assert", 6)) {
			_case_begin_1adac9ed2:;
			{
				static jule::Ptr<_1aa88c0c7_FnIns> _5920_f = jule::new_ptr<_1aa88c0c7_FnIns>(_1aa88c0c7_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aa957d85_Data>(jule::Ptr<_1aa959903_Eval>*,jule::Ptr<_1aa85c52b_FnCallExpr>*,jule::Ptr<_1aa957d85_Data>*)>(_1aa2b8680_builtinCallerAssert), });;
				return _5920_f;;
			}
		}
		else {
			_case_begin_1adac9663:;
			{
				return nullptr;;
			}
		}
		_match_end_1adac9575:;
	};
}



inline jule::Ptr<_1aa982b29_TypeAlias> _1aa2b09eb_findBuiltinTypeAlias(jule::Str _6625_ident) {
	{
		auto &_match_expr{ _6625_ident };
		
		if (_match_expr == jule::Str("byte", 4)) {
			_case_begin_1adad2490:;
			{
				static jule::Ptr<_1aa982b29_TypeAlias> _6920_t = jule::new_ptr<_1aa982b29_TypeAlias>(_1aa982b29_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_1aa9889ba_TypeSymbol>(_1aa9889ba_TypeSymbol{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("u8", 2)), 10)})}), });;
				return _6920_t;;
			}
		}
		else if (_match_expr == jule::Str("rune", 4)) {
			_case_begin_1adad2506:;
			{
				static jule::Ptr<_1aa982b29_TypeAlias> _7920_t = jule::new_ptr<_1aa982b29_TypeAlias>(_1aa982b29_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_1aa9889ba_TypeSymbol>(_1aa9889ba_TypeSymbol{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("i32", 3)), 10)})}), });;
				return _7920_t;;
			}
		}
		else {
			_case_begin_1adad1dc9:;
			{
				return nullptr;;
			}
		}
		_match_end_1adad1901:;
	};
}



inline jule::Any _1aa2b0c93_findBuiltinDef(jule::Str _9319_ident) {
	jule::Ptr<_1aa88c0c7_FnIns> _9413_f = _1aa2b0710_findBuiltinFn(_9319_ident);;
	if ((_9413_f != nullptr)) {
		return jule::Any(_9413_f, &__jule_any_type7);;
	};
	jule::Ptr<_1aa982b29_TypeAlias> _9813_ta = _1aa2b09eb_findBuiltinTypeAlias(_9319_ident);;
	if ((_9813_ta != nullptr)) {
		return jule::Any(_9813_ta, &__jule_any_type67);;
	};
	return nullptr;;
}



inline jule::Any _1aa2b10b2_findBuiltinDefStdDebug(jule::Str _10527_ident) {
	{
		auto &_match_expr{ _10527_ident };
		
		if (_match_expr == jule::Str("Out", 3)) {
			_case_begin_1adad5b25:;
			{
				static jule::Ptr<_1aa88c0c7_FnIns> _10820_f = jule::new_ptr<_1aa88c0c7_FnIns>(_1aa88c0c7_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aa957d85_Data>(jule::Ptr<_1aa959903_Eval>*,jule::Ptr<_1aa85c52b_FnCallExpr>*,jule::Ptr<_1aa957d85_Data>*)>(_1aa2ba9a1_builtinCallerStdDebugOut), });;
				return jule::Any(_10820_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Outln", 5)) {
			_case_begin_1adad5b8b:;
			{
				static jule::Ptr<_1aa88c0c7_FnIns> _11120_f = jule::new_ptr<_1aa88c0c7_FnIns>(_1aa88c0c7_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aa957d85_Data>(jule::Ptr<_1aa959903_Eval>*,jule::Ptr<_1aa85c52b_FnCallExpr>*,jule::Ptr<_1aa957d85_Data>*)>(_1aa2bad8b_builtinCallerStdDebugOutln), });;
				return jule::Any(_11120_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1adad52d9:;
			{
				return nullptr;;
			}
		}
		_match_end_1adad5284:;
	};
}



inline jule::Any _1aa2b1359_findBuiltinDefStdMem(jule::Str _11825_ident) {
	{
		auto &_match_expr{ _11825_ident };
		
		if (_match_expr == jule::Str("SizeOf", 6)) {
			_case_begin_1adad74a6:;
			{
				static jule::Ptr<_1aa88c0c7_FnIns> _12120_f = jule::new_ptr<_1aa88c0c7_FnIns>(_1aa88c0c7_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aa957d85_Data>(jule::Ptr<_1aa959903_Eval>*,jule::Ptr<_1aa85c52b_FnCallExpr>*,jule::Ptr<_1aa957d85_Data>*)>(_1aa2b93c8_builtinCallerStdMemSizeOf), });;
				return jule::Any(_12120_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("AlignOf", 7)) {
			_case_begin_1adad751c:;
			{
				static jule::Ptr<_1aa88c0c7_FnIns> _12420_f = jule::new_ptr<_1aa88c0c7_FnIns>(_1aa88c0c7_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aa957d85_Data>(jule::Ptr<_1aa959903_Eval>*,jule::Ptr<_1aa85c52b_FnCallExpr>*,jule::Ptr<_1aa957d85_Data>*)>(_1aa2b97e6_builtinCallerStdMemAlignOf), });;
				return jule::Any(_12420_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Free", 4)) {
			_case_begin_1adad72ca:;
			{
				static jule::Ptr<_1aa88c0c7_FnIns> _12720_f = jule::new_ptr<_1aa88c0c7_FnIns>(_1aa88c0c7_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aa957d85_Data>(jule::Ptr<_1aa959903_Eval>*,jule::Ptr<_1aa85c52b_FnCallExpr>*,jule::Ptr<_1aa957d85_Data>*)>(_1aa2b9c14_builtinCallerStdMemFree), });;
				return jule::Any(_12720_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1adad70aa:;
			{
				return nullptr;;
			}
		}
		_match_end_1adad683a:;
	};
}



inline jule::Any _1aa2b1623_findBuiltinDefStdComptime(jule::Str _13430_ident) {
	{
		auto &_match_expr{ _13430_ident };
		
		if (_match_expr == jule::Str("TypeOf", 6)) {
			_case_begin_1adad9772:;
			{
				static jule::Ptr<_1aa88c0c7_FnIns> _13720_f = jule::new_ptr<_1aa88c0c7_FnIns>(_1aa88c0c7_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aa957d85_Data>(jule::Ptr<_1aa959903_Eval>*,jule::Ptr<_1aa85c52b_FnCallExpr>*,jule::Ptr<_1aa957d85_Data>*)>(_1aa2b8a8c_builtinCallerStdComptimeTypeOf), });;
				return jule::Any(_13720_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Range", 5)) {
			_case_begin_1adad97d8:;
			{
				static jule::Ptr<_1aa88c0c7_FnIns> _14020_f = jule::new_ptr<_1aa88c0c7_FnIns>(_1aa88c0c7_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aa957d85_Data>(jule::Ptr<_1aa959903_Eval>*,jule::Ptr<_1aa85c52b_FnCallExpr>*,jule::Ptr<_1aa957d85_Data>*)>(_1aa2b8eaa_builtinCallerStdComptimeRange), });;
				return jule::Any(_14020_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1adad9376:;
			{
				return nullptr;;
			}
		}
		_match_end_1adad8b06:;
	};
}



inline jule::Any _1aa2b18ba_findBuiltinDefStdJuleIntegrated(jule::Str _14736_ident) {
	{
		auto &_match_expr{ _14736_ident };
		
		if (_match_expr == jule::Str("ToStr", 5)) {
			_case_begin_1adadb103:;
			{
				static jule::Ptr<_1aa88c0c7_FnIns> _15020_f = jule::new_ptr<_1aa88c0c7_FnIns>(_1aa88c0c7_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aa957d85_Data>(jule::Ptr<_1aa959903_Eval>*,jule::Ptr<_1aa85c52b_FnCallExpr>*,jule::Ptr<_1aa957d85_Data>*)>(_1aa2ba143_builtinCallerStdJuleIntegratedToStr), });;
				return jule::Any(_15020_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Emit", 4)) {
			_case_begin_1adadb169:;
			{
				static jule::Ptr<_1aa88c0c7_FnIns> _15320_f = jule::new_ptr<_1aa88c0c7_FnIns>(_1aa88c0c7_FnIns{._field_Decl=jule::new_ptr<_1aa889426_Fn>(_1aa889426_Fn{._field_Generics=jule::Slice<jule::Ptr<_1aa861321_GenericDecl>>::alloc(1LL, 1LL), }), ._field_caller=jule::Fn<jule::Ptr<_1aa957d85_Data>(jule::Ptr<_1aa959903_Eval>*,jule::Ptr<_1aa85c52b_FnCallExpr>*,jule::Ptr<_1aa957d85_Data>*)>(_1aa2ba561_builtinCallerStdJuleIntegratedEmit), });;
				return jule::Any(_15320_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1adadac07:;
			{
				return nullptr;;
			}
		}
		_match_end_1adada487:;
	};
}



inline jule::Any _1aa2b1d2c_findPackageBuiltinDef(jule::Str _16526_link_path, jule::Str _16542_ident) {
	{
		auto &_match_expr{ _16526_link_path };
		
		if (_match_expr == jule::Str("std::comptime", 13)) {
			_case_begin_1adadd04a:;
			{
				return _1aa2b1623_findBuiltinDefStdComptime(_16542_ident);;
			}
		}
		else if (_match_expr == jule::Str("std::debug", 10)) {
			_case_begin_1adadd0b1:;
			{
				return _1aa2b10b2_findBuiltinDefStdDebug(_16542_ident);;
			}
		}
		else if (_match_expr == jule::Str("std::mem", 8)) {
			_case_begin_1adadcd6e:;
			{
				return _1aa2b1359_findBuiltinDefStdMem(_16542_ident);;
			}
		}
		else if (_match_expr == jule::Str("std::jule::integrated", 21)) {
			_case_begin_1adadcdd5:;
			{
				return _1aa2b18ba_findBuiltinDefStdJuleIntegrated(_16542_ident);;
			}
		}
		else {
			_case_begin_1adad7583:;
			{
				return nullptr;;
			}
		}
		_match_end_1adadbcb3:;
	};
}



inline jule::Ptr<_1aa957d85_Data> _1aa2b2239_builtinCallerCommonPlain(jule::Ptr<_1aa959903_Eval>* _18034_e, jule::Ptr<_1aa85c52b_FnCallExpr>* _18049_fc, jule::Ptr<_1aa957d85_Data>* _18071_d) {
	jule::Ptr<_1aa88c0c7_FnIns> _18113_f = _1aa986e4c_Fn((*(_18071_d)).get()._field_Kind.ptr());;
	_1aa944bb8_fnCallArgChecker _18313_fcac = _1aa944bb8_fnCallArgChecker{._field_e=(*(_18034_e)), ._field_args=(*(_18049_fc)).get()._field_Args, ._field_errorToken=(*(_18049_fc)).get()._field_Token, ._field_f=_18113_f, ._field_dynamicAnnotation=false, };;
	if ((!(_1aa947083_check(&_18313_fcac)))) {
		return nullptr;;
	};
	jule::Ptr<_1aa87d11d_FnCallExprModel> _19413_model = jule::new_ptr<_1aa87d11d_FnCallExprModel>(_1aa87d11d_FnCallExprModel{._field_Token=(*(_18049_fc)).get()._field_Token, ._field_Func=_18113_f, ._field_Expr=(*(_18071_d)).get()._field_Model, ._field_Args=_18313_fcac._field_argModels, });;
	if ((_18113_f.get()._field_Result == nullptr)) {
		(*(_18071_d))=_1aa97eab0_buildVoidData();
	} else {
		(*(_18071_d))=jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=_18113_f.get()._field_Result, });
	};
	(*(_18071_d)).get()._field_Model=jule::Any(_19413_model, &__jule_any_type35);
	return (*(_18071_d));;
}



inline jule::Ptr<_1aa957d85_Data> _1aa2b25ad_builtinCallerCommon(jule::Ptr<_1aa959903_Eval>* _21329_e, jule::Ptr<_1aa85c52b_FnCallExpr>* _21344_fc, jule::Ptr<_1aa957d85_Data>* _21366_d) {
	return _1aa2b2239_builtinCallerCommonPlain(_21329_e, _21344_fc, _21366_d);;
}



inline jule::Ptr<_1aa957d85_Data> _1aa2b2998_builtinCallerCommonMut(jule::Ptr<_1aa959903_Eval>* _21732_e, jule::Ptr<_1aa85c52b_FnCallExpr>* _21747_fc, jule::Ptr<_1aa957d85_Data>* _21769_d) {
	if ((!((*(_21769_d)).get()._field_Mutable))) {
		_1aa959e0e_pushErr((*(_21732_e)).ptr(), (*(_21747_fc)).get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	return _1aa2b25ad_builtinCallerCommon(_21732_e, _21747_fc, _21769_d);;
}



inline jule::Ptr<_1aa957d85_Data> _1aa2b2cd9_builtinCallerError(jule::Ptr<_1aa959903_Eval>* _22428_e, jule::Ptr<_1aa85c52b_FnCallExpr>* _22443_fc) {
	if (((*(_22443_fc)).get()._field_Args.len() < 1LL)) {
		_1aa959e0e_pushErr((*(_22428_e)).ptr(), (*(_22443_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("err", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_22443_fc)).get()._field_Args.len() > 1LL)) {
		_1aa959e0e_pushErr((*(_22428_e)).ptr(), (*(_22443_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("error", 5), &__jule_any_type5)}));
	};
	jule::Ptr<_1aa957d85_Data> _23213_expr = _1aa974742_evalExpr((*(_22428_e)), (*(_22443_fc)).get()._field_Args[0LL]);;
	if ((_23213_expr == nullptr)) {
		return nullptr;;
	};
	if (_1aa958270_IsNil(_23213_expr.ptr())) {
		_1aa959e0e_pushErr((*(_22428_e)).ptr(), (*(_22443_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("you cannot call error function with nil", 39), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1aa957d85_Data> _24113_d = _1aa97eab0_buildVoidData();;
	_24113_d.get()._field_Model=jule::Any(jule::new_ptr<_1aa885587_BuiltinErrorCallExprModel>(_1aa885587_BuiltinErrorCallExprModel{._field_Err=_23213_expr}), &__jule_any_type23);
	return _24113_d;;
}



inline jule::Ptr<_1aa957d85_Data> _1aa2b31c4_builtinCallerOut(jule::Ptr<_1aa959903_Eval>* _24626_e, jule::Ptr<_1aa85c52b_FnCallExpr>* _24641_fc, jule::Ptr<_1aa957d85_Data>* ) {
	if (((*(_24641_fc)).get()._field_Args.len() < 1LL)) {
		_1aa959e0e_pushErr((*(_24626_e)).ptr(), (*(_24641_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_24641_fc)).get()._field_Args.len() > 1LL)) {
		_1aa959e0e_pushErr((*(_24626_e)).ptr(), (*(_24641_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("out", 3), &__jule_any_type5)}));
	};
	jule::Ptr<_1aa957d85_Data> _25513_expr = _1aa974742_evalExpr((*(_24626_e)), (*(_24641_fc)).get()._field_Args[0LL]);;
	if ((_25513_expr == nullptr)) {
		return nullptr;;
	};
	if ((!(_1aa99c2a3_isBuiltinStrConvertable(&(_25513_expr.get()._field_Kind))))) {
		_1aa959e0e_pushErr((*(_24626_e)).ptr(), (*(_24641_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aa957d85_Data> _26513_d = _1aa97eab0_buildVoidData();;
	_26513_d.get()._field_Model=jule::Any(jule::new_ptr<_1aa882221_BuiltinOutCallExprModel>(_1aa882221_BuiltinOutCallExprModel{._field_Expr=_25513_expr.get()._field_Model, }), &__jule_any_type28);
	return _26513_d;;
}



inline jule::Ptr<_1aa957d85_Data> _1aa2b35ae_builtinCallerOutln(jule::Ptr<_1aa959903_Eval>* _27028_e, jule::Ptr<_1aa85c52b_FnCallExpr>* _27043_fc, jule::Ptr<_1aa957d85_Data>* _27065_d) {
	(*(_27065_d))=_1aa2b31c4_builtinCallerOut(_27028_e, _27043_fc, _27065_d);
	if (((*(_27065_d)) == nullptr)) {
		return nullptr;;
	};
	(*(_27065_d)).get()._field_Model=jule::Any(jule::new_ptr<_1aa88260b_BuiltinOutlnCallExprModel>(_1aa88260b_BuiltinOutlnCallExprModel{._field_Expr=(*(_27065_d)).get()._field_Model.cast_ptr<_1aa882221_BuiltinOutCallExprModel>(&__jule_any_type28).get()._field_Expr, }), &__jule_any_type29);
	return (*(_27065_d));;
}



inline jule::Ptr<_1aa957d85_Data> _1aa2b3999_builtinCallerNew(jule::Ptr<_1aa959903_Eval>* _28226_e, jule::Ptr<_1aa85c52b_FnCallExpr>* _28241_fc, jule::Ptr<_1aa957d85_Data>* _28263_d) {
	if (((*(_28241_fc)).get()._field_Args.len() < 1LL)) {
		_1aa959e0e_pushErr((*(_28226_e)).ptr(), (*(_28241_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_28241_fc)).get()._field_Args.len() > 2LL)) {
		_1aa959e0e_pushErr((*(_28226_e)).ptr(), (*(_28241_fc)).get()._field_Args[2LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("new", 3), &__jule_any_type5)}));
	};
	jule::Ptr<_1aa957d85_Data> _29113_t = _1aa974126_evalExprKind((*(_28226_e)), (*(_28241_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_29113_t == nullptr)) {
		return nullptr;;
	};
	if ((!(_29113_t.get()._field_Decl))) {
		_1aa959e0e_pushErr((*(_28226_e)).ptr(), (*(_28241_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((!(_1aa99bc42_isValidForSptrType(&(_29113_t.get()._field_Kind))))) {
		jule::Ptr<_1aa876dd6_StructIns> _30217_s = _1aa9871b1_Struct(_29113_t.get()._field_Kind.ptr());;
		if ((((_30217_s != nullptr) && (_30217_s.get()._field_Decl != nullptr)) && _30217_s.get()._field_Decl.get()._field_CppLinked)) {
			_1aa959e0e_pushErr((*(_28226_e)).ptr(), (*(_28241_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("cpp-linked structures cannot supports reference counting", 56), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	(*(_28263_d)).get()._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(jule::new_ptr<_1aa98cabd_Sptr>(_1aa98cabd_Sptr{._field_Elem=_29113_t.get()._field_Kind}), 11)});
	if (((*(_28241_fc)).get()._field_Args.len() == 2LL)) {
		jule::Ptr<_1aa983872_TypeKind> _31617_old = (*(_28226_e)).get()._field_prefix;;
		(*(_28226_e)).get()._field_prefix=_29113_t.get()._field_Kind;
		jule::Ptr<_1aa957d85_Data> _31917_init = _1aa974742_evalExpr((*(_28226_e)), (*(_28241_fc)).get()._field_Args[1LL]);;
		(*(_28226_e)).get()._field_prefix=_31617_old;
		if ((_31917_init != nullptr)) {
			jule::Ptr<_1db944d0d_Token> _32421_token = (*(_28241_fc)).get()._field_Args[1LL].get()._field_Token;;
			;
			_1aa8e6d68_checkValidityForInitExpr((*(_28226_e)).get()._field_s, (!((*(_28226_e)).get()._field_immutable)), false, &(_29113_t.get()._field_Kind), &(_31917_init), &(_32421_token));
			_1aa8e3e53_checkAssignType((*(_28226_e)).get()._field_s, false, &(_29113_t.get()._field_Kind), &(_31917_init), _32421_token);
			(*(_28263_d)).get()._field_Model=jule::Any(jule::new_ptr<_1aa882d15_BuiltinNewCallExprModel>(_1aa882d15_BuiltinNewCallExprModel{._field_Kind=_29113_t.get()._field_Kind, ._field_Init=_31917_init.get()._field_Model}), &__jule_any_type116);
		};
	} else {
		(*(_28263_d)).get()._field_Model=jule::Any(jule::new_ptr<_1aa882d15_BuiltinNewCallExprModel>(_1aa882d15_BuiltinNewCallExprModel{._field_Kind=_29113_t.get()._field_Kind, }), &__jule_any_type116);
	};
	return (*(_28263_d));;
}



inline jule::Ptr<_1aa957d85_Data> _1aa2b40b5_builtinCallerPanic(jule::Ptr<_1aa959903_Eval>* _34428_e, jule::Ptr<_1aa85c52b_FnCallExpr>* _34443_fc, jule::Ptr<_1aa957d85_Data>* ) {
	if (((*(_34443_fc)).get()._field_Args.len() < 1LL)) {
		_1aa959e0e_pushErr((*(_34428_e)).ptr(), (*(_34443_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("message", 7), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_34443_fc)).get()._field_Args.len() > 1LL)) {
		_1aa959e0e_pushErr((*(_34428_e)).ptr(), (*(_34443_fc)).get()._field_Args[2LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("panic", 5), &__jule_any_type5)}));
	};
	jule::Ptr<_1aa957d85_Data> _35313_expr = _1aa974742_evalExpr((*(_34428_e)), (*(_34443_fc)).get()._field_Args[0LL]);;
	if ((_35313_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1aa985c5e_Prim(_35313_expr.get()._field_Kind.ptr()) == nullptr) || (!(_1aa98c56d_IsStr(_1aa985c5e_Prim(_35313_expr.get()._field_Kind.ptr()).ptr()))))) {
		_1aa959e0e_pushErr((*(_34428_e)).ptr(), (*(_34443_fc)).get()._field_Token, jule::Str("panic function only accepts strings", 35), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1aa957d85_Data> _36213_d = _1aa97eab0_buildVoidData();;
	_36213_d.get()._field_Model=jule::Any(jule::new_ptr<_1aa883200_BuiltinPanicCallExprModel>(_1aa883200_BuiltinPanicCallExprModel{._field_Token=(*(_34443_fc)).get()._field_Token, ._field_Expr=_35313_expr.get()._field_Model}), &__jule_any_type30);
	return _36213_d;;
}



inline jule::Ptr<_1aa957d85_Data> _1aa2b44a0_builtinCallerMake(jule::Ptr<_1aa959903_Eval>* _37027_e, jule::Ptr<_1aa85c52b_FnCallExpr>* _37042_fc, jule::Ptr<_1aa957d85_Data>* _37064_d) {
	if (((*(_37042_fc)).get()._field_Args.len() < 2LL)) {
		if (((*(_37042_fc)).get()._field_Args.len() == 1LL)) {
			_1aa959e0e_pushErr((*(_37027_e)).ptr(), (*(_37042_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("size", 4), &__jule_any_type5)}));
			return nullptr;;
		};
		_1aa959e0e_pushErr((*(_37027_e)).ptr(), (*(_37042_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type, size", 10), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1aa957d85_Data> _38013_t = _1aa974126_evalExprKind((*(_37027_e)), (*(_37042_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_38013_t == nullptr)) {
		return nullptr;;
	};
	if ((!(_38013_t.get()._field_Decl))) {
		_1aa959e0e_pushErr((*(_37027_e)).ptr(), (*(_37042_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_37042_fc)).get()._field_Args.len() > 3LL)) {
		_1aa959e0e_pushErr((*(_37027_e)).ptr(), (*(_37042_fc)).get()._field_Args[3LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("make", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	(*(_37064_d)).get()._field_Kind=_38013_t.get()._field_Kind;
	jule::Ptr<_1aa957d85_Data> _39613_lenExpr = _1aa974742_evalExpr(_1aa8e364a_evalp((*(_37027_e)).get()._field_s, (*(_37027_e)).get()._field_lookup, _38013_t.get()._field_Kind), (*(_37042_fc)).get()._field_Args[1LL]);;
	if ((_39613_lenExpr == nullptr)) {
		return nullptr;;
	};
	_1aa96291c_checkIntegerIndexingByData((*(_37027_e)).ptr(), &(_39613_lenExpr), (*(_37042_fc)).get()._field_Args[1LL].get()._field_Token);
	jule::Ptr<_1aa883b5c_BuiltinMakeCallExprModel> _40313_model = jule::new_ptr<_1aa883b5c_BuiltinMakeCallExprModel>(_1aa883b5c_BuiltinMakeCallExprModel{._field_Kind=_38013_t.get()._field_Kind, ._field_Len=_39613_lenExpr.get()._field_Model, });;
	(*(_37064_d)).get()._field_Model=jule::Any(_40313_model, &__jule_any_type117);
	if (((*(_37042_fc)).get()._field_Args.len() == 3LL)) {
		jule::Ptr<_1aa957d85_Data> _40917_capExpr = _1aa974742_evalExpr(_1aa8e364a_evalp((*(_37027_e)).get()._field_s, (*(_37027_e)).get()._field_lookup, _38013_t.get()._field_Kind), (*(_37042_fc)).get()._field_Args[2LL]);;
		if ((_40917_capExpr == nullptr)) {
			return (*(_37064_d));;
		};
		_1aa96291c_checkIntegerIndexingByData((*(_37027_e)).ptr(), &(_40917_capExpr), (*(_37042_fc)).get()._field_Args[2LL].get()._field_Token);
		_40313_model.get()._field_Cap=_40917_capExpr.get()._field_Model;
	};
	return (*(_37064_d));;
}



inline jule::Ptr<_1aa957d85_Data> _1aa2b488a_builtinCallerAppend(jule::Ptr<_1aa959903_Eval>* _41929_e, jule::Ptr<_1aa85c52b_FnCallExpr>* _41944_fc, jule::Ptr<_1aa957d85_Data>* _41966_d) {
	if (((*(_41944_fc)).get()._field_Args.len() < 2LL)) {
		if (((*(_41944_fc)).get()._field_Args.len() == 1LL)) {
			_1aa959e0e_pushErr((*(_41929_e)).ptr(), (*(_41944_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3), &__jule_any_type5)}));
			return nullptr;;
		};
		_1aa959e0e_pushErr((*(_41929_e)).ptr(), (*(_41944_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1aa957d85_Data> _42913_t = _1aa974742_evalExpr((*(_41929_e)), (*(_41944_fc)).get()._field_Args[0LL]);;
	if ((_42913_t == nullptr)) {
		return nullptr;;
	};
	if ((_1aa986bd8_Slc(_42913_t.get()._field_Kind.ptr()) == nullptr)) {
		_1aa959e0e_pushErr((*(_41929_e)).ptr(), (*(_41944_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aa88c0c7_FnIns> _43913_f = jule::new_ptr<_1aa88c0c7_FnIns>(_1aa88c0c7_FnIns{._field_Params=jule::Slice<jule::Ptr<_1aa88b208_ParamIns>>::make({jule::new_ptr<_1aa88b208_ParamIns>(_1aa88b208_ParamIns{._field_Decl=jule::new_ptr<_1aa887ad9_Param>(_1aa887ad9_Param{._field_Mutable=true, }), ._field_Kind=_42913_t.get()._field_Kind}),jule::new_ptr<_1aa88b208_ParamIns>(_1aa88b208_ParamIns{._field_Decl=jule::new_ptr<_1aa887ad9_Param>(_1aa887ad9_Param{._field_Mutable=true, ._field_Variadic=true, }), ._field_Kind=_1aa986bd8_Slc(_42913_t.get()._field_Kind.ptr()).get()._field_Elem})}), ._field_Result=_42913_t.get()._field_Kind, ._field_caller=jule::Fn<jule::Ptr<_1aa957d85_Data>(jule::Ptr<_1aa959903_Eval>*,jule::Ptr<_1aa85c52b_FnCallExpr>*,jule::Ptr<_1aa957d85_Data>*)>(_1aa2b2239_builtinCallerCommonPlain), });;
	(*(_41966_d)).get()._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_43913_f, 1)});
	(*(_41966_d)).get()._field_Model=jule::Any(jule::new_ptr<_1aa8814d9_CommonIdentExprModel>(_1aa8814d9_CommonIdentExprModel{._field_Ident=jule::Str("append", 6)}), &__jule_any_type72);
	(*(_41966_d))=_1aa2b2239_builtinCallerCommonPlain(_41929_e, _41944_fc, _41966_d);
	if (((*(_41966_d)) != nullptr)) {
		jule::Ptr<_1aa87d11d_FnCallExprModel> _46717_model = (*(_41966_d)).get()._field_Model.cast_ptr<_1aa87d11d_FnCallExprModel>(&__jule_any_type35);;
		(*(_41966_d)).get()._field_Model=jule::Any(jule::new_ptr<_1aa884047_BuiltinAppendCallExprModel>(_1aa884047_BuiltinAppendCallExprModel{._field_Dest=_46717_model.get()._field_Args[0LL], ._field_Elements=_46717_model.get()._field_Args[1LL]}), &__jule_any_type26);
	};
	return (*(_41966_d));;
}



inline jule::Ptr<_1aa957d85_Data> _1aa2b4d1e_callerCopySlice(jule::Ptr<_1aa957d85_Data>* _47625_dest, jule::Ptr<_1aa959903_Eval>* _47643_e, jule::Ptr<_1aa85c52b_FnCallExpr>* _47658_fc, jule::Ptr<_1aa957d85_Data>* _47680_d) {
	if ((!((*(_47625_dest)).get()._field_Mutable))) {
		_1aa959e0e_pushErr((*(_47643_e)).ptr(), (*(_47658_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1aa957d85_Data> _48113_src = _1aa974742_evalExpr((*(_47643_e)), (*(_47658_fc)).get()._field_Args[1LL]);;
	if ((_48113_src == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1aa98d52a_Slc> _48513_slc = _1aa986bd8_Slc(_48113_src.get()._field_Kind.ptr());;
	if ((_48513_slc != nullptr)) {
		if (((!(_48113_src.get()._field_Mutable)) && _1aa985049_Mutable(_48513_slc.get()._field_Elem.ptr()))) {
			_1aa959e0e_pushErr((*(_47643_e)).ptr(), (*(_47658_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
		};
		if ((!(_1aa98407b_Equal((*(_47625_dest)).get()._field_Kind, _48113_src.get()._field_Kind)))) {
			_1aa959e0e_pushErr((*(_47643_e)).ptr(), (*(_47658_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1aa983c6d_Str((*(_47625_dest)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1aa983c6d_Str(_48113_src.get()._field_Kind.ptr()), &__jule_any_type5)}));
		};
	} else {
		jule::Ptr<_1aa989339_Prim> _49513_destPrim = _1aa985c5e_Prim(_1aa986bd8_Slc((*(_47625_dest)).get()._field_Kind.ptr()).get()._field_Elem.ptr());;
		jule::Ptr<_1aa989339_Prim> _49613_prim = _1aa985c5e_Prim(_48113_src.get()._field_Kind.ptr());;
		if (((((_49513_destPrim == nullptr) || (_49613_prim == nullptr)) || (!(_1aa98c56d_IsStr(_49613_prim.ptr())))) || (!(_1aa98ab43_IsU8(_49513_destPrim.ptr()))))) {
			_1aa959e0e_pushErr((*(_47643_e)).ptr(), (*(_47658_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1aa983c6d_Str((*(_47625_dest)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1aa983c6d_Str(_48113_src.get()._field_Kind.ptr()), &__jule_any_type5)}));
		};
	};
	(*(_47680_d)).get()._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("int", 3)), 10)});
	(*(_47680_d)).get()._field_Model=jule::Any(jule::new_ptr<_1aa88519c_BuiltinCopyCallExprModel>(_1aa88519c_BuiltinCopyCallExprModel{._field_Dest=(*(_47625_dest)), ._field_Src=_48113_src}), &__jule_any_type32);
	return (*(_47680_d));;
}



inline jule::Ptr<_1aa957d85_Data> _1aa2b52a3_callerCopyStr(jule::Ptr<_1aa957d85_Data>* _51023_dest, jule::Ptr<_1aa959903_Eval>* _51041_e, jule::Ptr<_1aa85c52b_FnCallExpr>* _51056_fc, jule::Ptr<_1aa957d85_Data>* _51078_d) {
	if ((!((*(_51023_dest)).get()._field_Mutable))) {
		_1aa959e0e_pushErr((*(_51041_e)).ptr(), (*(_51056_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1aa957d85_Data> _51513_src = _1aa974742_evalExpr((*(_51041_e)), (*(_51056_fc)).get()._field_Args[1LL]);;
	if ((_51513_src == nullptr)) {
		return nullptr;;
	};
	{
		
		if ((_1aa985c5e_Prim(_51513_src.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad6c77d3:;
			{
				if (_1aa98c56d_IsStr(_1aa985c5e_Prim(_51513_src.get()._field_Kind.ptr()).ptr())) {
					goto _julec_label_end;
				};
			}
		}
		else if ((_1aa986bd8_Slc(_51513_src.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad6c7849:;
			{
				jule::Ptr<_1aa98d52a_Slc> _52517_slc = _1aa986bd8_Slc(_51513_src.get()._field_Kind.ptr());;
				if (((_1aa985c5e_Prim(_52517_slc.get()._field_Elem.ptr()) != nullptr) && _1aa98ab43_IsU8(_1aa985c5e_Prim(_52517_slc.get()._field_Elem.ptr()).ptr()))) {
					goto _julec_label_end;
				};
			}
		}
		_match_end_1ad6c75b3:;
	};
	_1aa959e0e_pushErr((*(_51041_e)).ptr(), (*(_51056_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1aa983c6d_Str((*(_51023_dest)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1aa983c6d_Str(_51513_src.get()._field_Kind.ptr()), &__jule_any_type5)}));
	_julec_label_end:;
	(*(_51078_d)).get()._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("int", 3)), 10)});
	(*(_51078_d)).get()._field_Model=jule::Any(jule::new_ptr<_1aa88519c_BuiltinCopyCallExprModel>(_1aa88519c_BuiltinCopyCallExprModel{._field_Dest=(*(_51023_dest)), ._field_Src=_51513_src}), &__jule_any_type32);
	return (*(_51078_d));;
}



inline jule::Ptr<_1aa957d85_Data> _1aa2b568d_builtinCallerCopy(jule::Ptr<_1aa959903_Eval>* _54027_e, jule::Ptr<_1aa85c52b_FnCallExpr>* _54042_fc, jule::Ptr<_1aa957d85_Data>* _54064_d) {
	if (((*(_54042_fc)).get()._field_Args.len() < 2LL)) {
		if (((*(_54042_fc)).get()._field_Args.len() == 1LL)) {
			_1aa959e0e_pushErr((*(_54027_e)).ptr(), (*(_54042_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3), &__jule_any_type5)}));
			return nullptr;;
		};
		_1aa959e0e_pushErr((*(_54027_e)).ptr(), (*(_54042_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_54042_fc)).get()._field_Args.len() > 2LL)) {
		_1aa959e0e_pushErr((*(_54027_e)).ptr(), (*(_54042_fc)).get()._field_Args[2LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("copy", 4), &__jule_any_type5)}));
	};
	jule::Ptr<_1aa957d85_Data> _55313_dest = _1aa974742_evalExpr((*(_54027_e)), (*(_54042_fc)).get()._field_Args[0LL]);;
	{
		
		if ((_55313_dest == nullptr)) {
			_case_begin_1ad6d2ada:;
			{
				return nullptr;;
			}
		}
		else if ((_1aa986bd8_Slc(_55313_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad6d2b51:;
			{
				return _1aa2b4d1e_callerCopySlice(&(_55313_dest), _54027_e, _54042_fc, _54064_d);;
			}
		}
		else if (((_1aa985c5e_Prim(_55313_dest.get()._field_Kind.ptr()) != nullptr) && _1aa98c56d_IsStr(_1aa985c5e_Prim(_55313_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1ad6d2942:;
			{
				return _1aa2b52a3_callerCopyStr(&(_55313_dest), _54027_e, _54042_fc, _54064_d);;
			}
		}
		else {
			_case_begin_1ad6d1b94:;
			{
				_1aa959e0e_pushErr((*(_54027_e)).ptr(), (*(_54042_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ad6d1b2d:;
	};
}



inline jule::Ptr<_1aa957d85_Data> _1aa2b59ce_callerLenSlice(jule::Ptr<_1aa957d85_Data>* _56724_expr, jule::Ptr<_1aa957d85_Data>* _56742_d) {
	(*(_56742_d)).get()._field_Kind=_1aa94c6b5_lenKind();
	(*(_56742_d)).get()._field_Model=jule::Any(jule::new_ptr<_1aa884366_BuiltinLenCallExprModel>(_1aa884366_BuiltinLenCallExprModel{._field_Expr=(*(_56724_expr))}), &__jule_any_type118);
	return (*(_56742_d));;
}



inline jule::Ptr<_1aa957d85_Data> _1aa2b5d20_callerLenMap(jule::Ptr<_1aa957d85_Data>* _57522_expr, jule::Ptr<_1aa957d85_Data>* _57540_d) {
	(*(_57540_d)).get()._field_Kind=_1aa94c6b5_lenKind();
	(*(_57540_d)).get()._field_Model=jule::Any(jule::new_ptr<_1aa884366_BuiltinLenCallExprModel>(_1aa884366_BuiltinLenCallExprModel{._field_Expr=(*(_57522_expr))}), &__jule_any_type118);
	return (*(_57540_d));;
}



inline jule::Ptr<_1aa957d85_Data> _1aa2b6161_callerLenArr(jule::Ptr<_1aa957d85_Data>* _58322_expr, jule::Ptr<_1aa957d85_Data>* _58340_d) {
	(*(_58340_d)).get()._field_Kind=_1aa94c6b5_lenKind();
	(*(_58340_d)).get()._field_Constant=static__1c090208e_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1aa986974_Arr((*(_58322_expr)).get()._field_Kind.ptr()).get()._field_N)));
	(*(_58340_d)).get()._field_Model=jule::Any((*(_58340_d)).get()._field_Constant, &__jule_any_type19);
	return (*(_58340_d));;
}



inline jule::Ptr<_1aa957d85_Data> _1aa2b64a2_callerLenStr(jule::Ptr<_1aa957d85_Data>* _59022_expr, jule::Ptr<_1aa957d85_Data>* _59040_d) {
	(*(_59040_d)).get()._field_Kind=_1aa94c6b5_lenKind();
	if (_1aa958748_IsConst((*(_59022_expr)).ptr())) {
		(*(_59040_d)).get()._field_Constant=static__1c090208e_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1c0903b51_ReadStr((*(_59022_expr)).get()._field_Constant.ptr()).len())));
		(*(_59040_d)).get()._field_Model=jule::Any((*(_59040_d)).get()._field_Constant, &__jule_any_type19);
	} else {
		(*(_59040_d)).get()._field_Model=jule::Any(jule::new_ptr<_1aa884366_BuiltinLenCallExprModel>(_1aa884366_BuiltinLenCallExprModel{._field_Expr=(*(_59022_expr))}), &__jule_any_type118);
	};
	return (*(_59040_d));;
}



inline jule::Ptr<_1aa957d85_Data> _1aa2b688c_builtinCallerLen(jule::Ptr<_1aa959903_Eval>* _60326_e, jule::Ptr<_1aa85c52b_FnCallExpr>* _60341_fc, jule::Ptr<_1aa957d85_Data>* _60363_d) {
	if (((*(_60341_fc)).get()._field_Args.len() < 1LL)) {
		_1aa959e0e_pushErr((*(_60326_e)).ptr(), (*(_60341_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("obj", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_60341_fc)).get()._field_Args.len() > 1LL)) {
		_1aa959e0e_pushErr((*(_60326_e)).ptr(), (*(_60341_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("len", 3), &__jule_any_type5)}));
	};
	jule::Ptr<_1aa957d85_Data> _61113_dest = _1aa974742_evalExpr((*(_60326_e)), (*(_60341_fc)).get()._field_Args[0LL]);;
	{
		
		if ((_61113_dest == nullptr)) {
			_case_begin_1ad6dc85e:;
			{
				return nullptr;;
			}
		}
		else if (_61113_dest.get()._field_Decl) {
			_case_begin_1ad6dc8c5:;
			{
				_1aa959e0e_pushErr((*(_60326_e)).ptr(), (*(_60341_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1aa986bd8_Slc(_61113_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad6dc6b6:;
			{
				return _1aa2b59ce_callerLenSlice(&(_61113_dest), _60363_d);;
			}
		}
		else if ((_1aa986974_Arr(_61113_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad6dc73d:;
			{
				return _1aa2b6161_callerLenArr(&(_61113_dest), _60363_d);;
			}
		}
		else if ((_1aa987689_Map(_61113_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad6db97e:;
			{
				return _1aa2b5d20_callerLenMap(&(_61113_dest), _60363_d);;
			}
		}
		else if (((_1aa985c5e_Prim(_61113_dest.get()._field_Kind.ptr()) != nullptr) && _1aa98c56d_IsStr(_1aa985c5e_Prim(_61113_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1ad6db9e5:;
			{
				return _1aa2b64a2_callerLenStr(&(_61113_dest), _60363_d);;
			}
		}
		else {
			_case_begin_1ad6db918:;
			{
				_1aa959e0e_pushErr((*(_60326_e)).ptr(), (*(_60341_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ad6db8a2:;
	};
}



inline jule::Ptr<_1aa957d85_Data> _1aa2b6bcd_callerCapSlice(jule::Ptr<_1aa957d85_Data>* _63224_expr, jule::Ptr<_1aa957d85_Data>* _63242_d) {
	(*(_63242_d)).get()._field_Kind=_1aa94c6b5_lenKind();
	(*(_63242_d)).get()._field_Model=jule::Any(jule::new_ptr<_1aa884685_BuiltinCapCallExprModel>(_1aa884685_BuiltinCapCallExprModel{._field_Expr=(*(_63224_expr))}), &__jule_any_type119);
	return (*(_63242_d));;
}



inline jule::Ptr<_1aa957d85_Data> _1aa2b701e_callerCapStr(jule::Ptr<_1aa957d85_Data>* _64022_expr, jule::Ptr<_1aa957d85_Data>* _64040_d) {
	(*(_64040_d)).get()._field_Kind=_1aa94c6b5_lenKind();
	if (_1aa958748_IsConst((*(_64022_expr)).ptr())) {
		(*(_64040_d)).get()._field_Constant=static__1c090208e_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1c0903b51_ReadStr((*(_64022_expr)).get()._field_Constant.ptr()).cap())));
		(*(_64040_d)).get()._field_Model=jule::Any((*(_64040_d)).get()._field_Constant, &__jule_any_type19);
	} else {
		(*(_64040_d)).get()._field_Model=jule::Any(jule::new_ptr<_1aa884685_BuiltinCapCallExprModel>(_1aa884685_BuiltinCapCallExprModel{._field_Expr=(*(_64022_expr))}), &__jule_any_type119);
	};
	return (*(_64040_d));;
}



inline jule::Ptr<_1aa957d85_Data> _1aa2b7409_builtinCallerCap(jule::Ptr<_1aa959903_Eval>* _65326_e, jule::Ptr<_1aa85c52b_FnCallExpr>* _65341_fc, jule::Ptr<_1aa957d85_Data>* _65363_d) {
	if (((*(_65341_fc)).get()._field_Args.len() < 1LL)) {
		_1aa959e0e_pushErr((*(_65326_e)).ptr(), (*(_65341_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("obj", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_65341_fc)).get()._field_Args.len() > 1LL)) {
		_1aa959e0e_pushErr((*(_65326_e)).ptr(), (*(_65341_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("cap", 3), &__jule_any_type5)}));
	};
	jule::Ptr<_1aa957d85_Data> _66113_dest = _1aa974742_evalExpr((*(_65326_e)), (*(_65341_fc)).get()._field_Args[0LL]);;
	{
		
		if ((_66113_dest == nullptr)) {
			_case_begin_1ad6e75d3:;
			{
				return nullptr;;
			}
		}
		else if (_66113_dest.get()._field_Decl) {
			_case_begin_1ad6e7649:;
			{
				_1aa959e0e_pushErr((*(_65326_e)).ptr(), (*(_65341_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1aa986bd8_Slc(_66113_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad6e743a:;
			{
				return _1aa2b6bcd_callerCapSlice(&(_66113_dest), _65363_d);;
			}
		}
		else if (((_1aa985c5e_Prim(_66113_dest.get()._field_Kind.ptr()) != nullptr) && _1aa98c56d_IsStr(_1aa985c5e_Prim(_66113_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1ad6e74a1:;
			{
				return _1aa2b701e_callerCapStr(&(_66113_dest), _65363_d);;
			}
		}
		else {
			_case_begin_1ad6e668c:;
			{
				_1aa959e0e_pushErr((*(_65326_e)).ptr(), (*(_65341_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ad6e6626:;
	};
}



inline jule::Ptr<_1aa957d85_Data> _1aa2b788d_callerDeleteMap(jule::Ptr<_1aa959903_Eval>* _67825_e, jule::Ptr<_1aa85c52b_FnCallExpr>* _67840_fc, jule::Ptr<_1aa957d85_Data>* _67862_expr, jule::Ptr<_1aa957d85_Data>* _67880_d) {
	if ((!((*(_67862_expr)).get()._field_Mutable))) {
		_1aa959e0e_pushErr((*(_67825_e)).ptr(), (*(_67840_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	(*(_67880_d))=_1aa97eab0_buildVoidData();
	jule::Ptr<_1aa884d39_BuiltinDeleteCallExprModel> _68313_model = jule::new_ptr<_1aa884d39_BuiltinDeleteCallExprModel>(_1aa884d39_BuiltinDeleteCallExprModel{._field_Dest=(*(_67862_expr)), });;
	if (((*(_67840_fc)).get()._field_Args.len() == 2LL)) {
		jule::Ptr<_1aa957d85_Data> _68717_key = _1aa974742_evalExpr((*(_67825_e)), (*(_67840_fc)).get()._field_Args[1LL]);;
		{
			
			if ((_68717_key == nullptr)) {
				_case_begin_1ad6edb06:;
				{
					return nullptr;;
				}
			}
			else if (_68717_key.get()._field_Decl) {
				_case_begin_1ad6ec462:;
				{
					_1aa959e0e_pushErr((*(_67825_e)).ptr(), (*(_67840_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			else {
				_case_begin_1ad6ec3eb:;
				{
					;
					jule::Ptr<_1aa983872_TypeKind> _69621_keyType = _1aa987689_Map((*(_67862_expr)).get()._field_Kind.ptr()).get()._field_Key;;
					if ((!(_1aa8e3e53_checkAssignType((*(_67825_e)).get()._field_s, false, &(_69621_keyType), &(_68717_key), (*(_67840_fc)).get()._field_Args[1LL].get()._field_Token)))) {
						return nullptr;;
					};
				}
			}
			_match_end_1ad6ec385:;
		};
		_68313_model.get()._field_Key=_68717_key;
	};
	(*(_67880_d)).get()._field_Model=jule::Any(_68313_model, &__jule_any_type33);
	return (*(_67880_d));;
}



inline jule::Ptr<_1aa957d85_Data> _1aa2b7c78_builtinCallerDelete(jule::Ptr<_1aa959903_Eval>* _70729_e, jule::Ptr<_1aa85c52b_FnCallExpr>* _70744_fc, jule::Ptr<_1aa957d85_Data>* _70766_d) {
	if (((*(_70744_fc)).get()._field_Args.len() < 1LL)) {
		_1aa959e0e_pushErr((*(_70729_e)).ptr(), (*(_70744_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("map", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_70744_fc)).get()._field_Args.len() > 2LL)) {
		_1aa959e0e_pushErr((*(_70729_e)).ptr(), (*(_70744_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("delete", 6), &__jule_any_type5)}));
	};
	jule::Ptr<_1aa957d85_Data> _71513_dest = _1aa974742_evalExpr((*(_70729_e)), (*(_70744_fc)).get()._field_Args[0LL]);;
	{
		
		if ((_71513_dest == nullptr)) {
			_case_begin_1ad7041e4:;
			{
				return nullptr;;
			}
		}
		else if (_71513_dest.get()._field_Decl) {
			_case_begin_1ad70425a:;
			{
				_1aa959e0e_pushErr((*(_70729_e)).ptr(), (*(_70744_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1aa987689_Map(_71513_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad70404b:;
			{
				return _1aa2b788d_callerDeleteMap(_70729_e, _70744_fc, &(_71513_dest), _70766_d);;
			}
		}
		else {
			_case_begin_1ad70329d:;
			{
				_1aa959e0e_pushErr((*(_70729_e)).ptr(), (*(_70744_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ad703237:;
	};
}



inline jule::Ptr<_1aa957d85_Data> _1aa2b833e_builtinCallerClone(jule::Ptr<_1aa959903_Eval>* _73028_e, jule::Ptr<_1aa85c52b_FnCallExpr>* _73043_fc, jule::Ptr<_1aa957d85_Data>* ) {
	if (((*(_73043_fc)).get()._field_Args.len() < 1LL)) {
		_1aa959e0e_pushErr((*(_73028_e)).ptr(), (*(_73043_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_73043_fc)).get()._field_Args.len() > 1LL)) {
		_1aa959e0e_pushErr((*(_73028_e)).ptr(), (*(_73043_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("clone", 5), &__jule_any_type5)}));
	};
	jule::Ptr<_1aa957d85_Data> _73913_d = _1aa974126_evalExprKind((*(_73028_e)), (*(_73043_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_73913_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1aa985786_SupportsCloning(_73913_d.get()._field_Kind.ptr())))) {
		{
			
			if ((_1aa986bd8_Slc(_73913_d.get()._field_Kind.ptr()) != nullptr) || (_1aa987689_Map(_73913_d.get()._field_Kind.ptr()) != nullptr) || (_1aa986974_Arr(_73913_d.get()._field_Kind.ptr()) != nullptr) || (_1aa985ec3_Sptr(_73913_d.get()._field_Kind.ptr()) != nullptr)) {
				_case_begin_1ad7094a2:;
				{
					{
						_1aa959e0e_pushErr((*(_73028_e)).ptr(), (*(_73043_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ has internally types which is not supports cloning", 57), jule::Slice<jule::Any>::make({jule::Any(_1aa983c6d_Str(_73913_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
					};
				}
			}
			else if ((_1aa9871b1_Struct(_73913_d.get()._field_Kind.ptr()) != nullptr)) {
				_case_begin_1ad708d0e:;
				{
					{
						_1aa959e0e_pushErr((*(_73028_e)).ptr(), (*(_73043_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ is not derives @", 23), jule::Slice<jule::Any>::make({jule::Any(_1aa983c6d_Str(_73913_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("Clone", 5), &__jule_any_type5)}));
					};
				}
			}
			else {
				_case_begin_1ad708c98:;
				{
					{
						_1aa959e0e_pushErr((*(_73028_e)).ptr(), (*(_73043_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ is not support cloning", 29), jule::Slice<jule::Any>::make({jule::Any(_1aa983c6d_Str(_73913_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("Clone", 5), &__jule_any_type5)}));
					};
				}
			}
			_match_end_1ad7088d0:;
		};
	};
	_73913_d.get()._field_Mutable=true;
	_73913_d.get()._field_Model=jule::Any(jule::new_ptr<_1aa88292a_BuiltinCloneCallExprModel>(_1aa88292a_BuiltinCloneCallExprModel{._field_Expr=_73913_d.get()._field_Model}), &__jule_any_type27);
	return _73913_d;;
}



inline jule::Ptr<_1aa957d85_Data> _1aa2b8680_builtinCallerAssert(jule::Ptr<_1aa959903_Eval>* _77229_e, jule::Ptr<_1aa85c52b_FnCallExpr>* _77244_fc, jule::Ptr<_1aa957d85_Data>* ) {
	if (((*(_77244_fc)).get()._field_Args.len() < 1LL)) {
		_1aa959e0e_pushErr((*(_77229_e)).ptr(), (*(_77244_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_77244_fc)).get()._field_Args.len() > 2LL)) {
		_1aa959e0e_pushErr((*(_77229_e)).ptr(), (*(_77244_fc)).get()._field_Args[2LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("assert", 6), &__jule_any_type5)}));
	};
	jule::Ptr<_1aa957d85_Data> _78113_expr = _1aa974742_evalExpr((*(_77229_e)), (*(_77244_fc)).get()._field_Args[0LL]);;
	if ((_78113_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1aa985c5e_Prim(_78113_expr.get()._field_Kind.ptr()) == nullptr) || (!(_1aa98c309_IsBool(_1aa985c5e_Prim(_78113_expr.get()._field_Kind.ptr()).ptr()))))) {
		_1aa959e0e_pushErr((*(_77229_e)).ptr(), (*(_77244_fc)).get()._field_Token, jule::Str("assertion requires boolean expression", 37), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1aa8836a6_BuiltinAssertCallExprModel> _79013_model = jule::new_ptr<_1aa8836a6_BuiltinAssertCallExprModel>(_1aa8836a6_BuiltinAssertCallExprModel{._field_Token=(*(_77244_fc)).get()._field_Token, ._field_Expr=_78113_expr.get()._field_Model, ._field_Log=jule::Str("assertion failed", 16)});;
	if (((*(_77244_fc)).get()._field_Args.len() == 2LL)) {
		jule::Ptr<_1aa957d85_Data> _79817_log = _1aa974742_evalExpr((*(_77229_e)), (*(_77244_fc)).get()._field_Args[1LL]);;
		if ((_79817_log == nullptr)) {
			return nullptr;;
		};
		if ((((!(_1aa958748_IsConst(_79817_log.ptr()))) || (_1aa985c5e_Prim(_79817_log.get()._field_Kind.ptr()) == nullptr)) || (!(_1aa98c56d_IsStr(_1aa985c5e_Prim(_79817_log.get()._field_Kind.ptr()).ptr()))))) {
			_1aa959e0e_pushErr((*(_77229_e)).ptr(), (*(_77244_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("const str", 9), &__jule_any_type5),jule::Any(_1aa983c6d_Str(_79817_log.get()._field_Kind.ptr()), &__jule_any_type5)}));
			return nullptr;;
		};
		_79013_model.get()._field_Log=_1c0903b51_ReadStr(_79817_log.get()._field_Constant.ptr());
	};
	jule::Ptr<_1aa957d85_Data> _81113_d = _1aa97eab0_buildVoidData();;
	_81113_d.get()._field_Model=jule::Any(_79013_model, &__jule_any_type31);
	return _81113_d;;
}



inline jule::Ptr<_1aa957d85_Data> _1aa2b8a8c_builtinCallerStdComptimeTypeOf(jule::Ptr<_1aa959903_Eval>* _81640_e, jule::Ptr<_1aa85c52b_FnCallExpr>* _81655_fc, jule::Ptr<_1aa957d85_Data>* ) {
	if (((*(_81655_fc)).get()._field_Args.len() < 1LL)) {
		_1aa959e0e_pushErr((*(_81640_e)).ptr(), (*(_81655_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_81655_fc)).get()._field_Args.len() > 1LL)) {
		_1aa959e0e_pushErr((*(_81640_e)).ptr(), (*(_81655_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("TypeOf", 6), &__jule_any_type5)}));
	};
	jule::Ptr<_1aa957d85_Data> _82513_d = _1aa974126_evalExprKind((*(_81640_e)), (*(_81655_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_82513_d == nullptr)) {
		return nullptr;;
	};
	if (_1aa987b62_comptime(_82513_d.get()._field_Kind.ptr())) {
		_1aa959e0e_pushErr((*(_81640_e)).ptr(), (*(_81655_fc)).get()._field_Token, jule::Str("comptime::TypeOf is not supports type @", 39), jule::Slice<jule::Any>::make({jule::Any(_1aa983c6d_Str(_82513_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	return _1aa8a8b71_buildComptimeTypeInfoData(&((*(_81640_e)).get()._field_s), &(_82513_d.get()._field_Kind));;
}



inline jule::Ptr<_1aa957d85_Data> _1aa2b8eaa_builtinCallerStdComptimeRange(jule::Ptr<_1aa959903_Eval>* _83639_e, jule::Ptr<_1aa85c52b_FnCallExpr>* _83654_fc, jule::Ptr<_1aa957d85_Data>* ) {
	if (((*(_83654_fc)).get()._field_Args.len() < 1LL)) {
		_1aa959e0e_pushErr((*(_83639_e)).ptr(), (*(_83654_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_83654_fc)).get()._field_Args.len() > 1LL)) {
		_1aa959e0e_pushErr((*(_83639_e)).ptr(), (*(_83654_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Range", 5), &__jule_any_type5)}));
	};
	jule::Ptr<_1aa957d85_Data> _84513_d = _1aa974126_evalExprKind((*(_83639_e)), (*(_83654_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_84513_d == nullptr)) {
		return nullptr;;
	};
	{
		
		if ((_1aa987dc6_comptimeStructFields(_84513_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad720cc1:;
			{
				return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(jule::new_ptr<_1aa8a262b_comptimeRange>(_1aa8a262b_comptimeRange{._field_kind=jule::Trait<_1aa8a2450_comptimeRangeKind>(_1aa987dc6_comptimeStructFields(_84513_d.get()._field_Kind.ptr()), 0)}), 5)}), });;
			}
		}
		else {
			_case_begin_1ad71eae4:;
			{
				_1aa959e0e_pushErr((*(_83639_e)).ptr(), (*(_83654_fc)).get()._field_Token, jule::Str("comptime::TypeOf is not supports type @", 39), jule::Slice<jule::Any>::make({jule::Any(_1aa983c6d_Str(_84513_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ad71ea8e:;
	};
}



inline jule::Ptr<_1aa957d85_Data> _1aa2b93c8_builtinCallerStdMemSizeOf(jule::Ptr<_1aa959903_Eval>* _86435_e, jule::Ptr<_1aa85c52b_FnCallExpr>* _86450_fc, jule::Ptr<_1aa957d85_Data>* ) {
	jule::Ptr<_1aa957d85_Data> _86513_result = jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("uint", 4)), 10)}), });;
	if (((*(_86450_fc)).get()._field_Args.len() < 1LL)) {
		_1aa959e0e_pushErr((*(_86435_e)).ptr(), (*(_86450_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9), &__jule_any_type5)}));
		return _86513_result;;
	};
	if (((*(_86450_fc)).get()._field_Args.len() > 1LL)) {
		_1aa959e0e_pushErr((*(_86435_e)).ptr(), (*(_86450_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("SizeOf", 6), &__jule_any_type5)}));
	};
	jule::Ptr<_1aa957d85_Data> _87713_d = _1aa974126_evalExprKind((*(_86435_e)), (*(_86450_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_87713_d == nullptr)) {
		return _86513_result;;
	};
	if ((!(_1aa99d46e_validTypeForXof(&(_87713_d.get()._field_Kind))))) {
		_1aa959e0e_pushErr((*(_86435_e)).ptr(), (*(_86450_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1aa983c6d_Str(_87713_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("SizeOf", 6), &__jule_any_type5)}));
	};
	_86513_result.get()._field_Model=jule::Any(jule::new_ptr<_1aa885884_SizeofExprModel>(_1aa885884_SizeofExprModel{._field_Expr=_87713_d.get()._field_Model}), &__jule_any_type120);
	return _86513_result;;
}



inline jule::Ptr<_1aa957d85_Data> _1aa2b97e6_builtinCallerStdMemAlignOf(jule::Ptr<_1aa959903_Eval>* _88936_e, jule::Ptr<_1aa85c52b_FnCallExpr>* _88951_fc, jule::Ptr<_1aa957d85_Data>* ) {
	jule::Ptr<_1aa957d85_Data> _89013_result = jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("uint", 4)), 10)}), });;
	if (((*(_88951_fc)).get()._field_Args.len() < 1LL)) {
		_1aa959e0e_pushErr((*(_88936_e)).ptr(), (*(_88951_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9), &__jule_any_type5)}));
		return _89013_result;;
	};
	if (((*(_88951_fc)).get()._field_Args.len() > 1LL)) {
		_1aa959e0e_pushErr((*(_88936_e)).ptr(), (*(_88951_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("AlignOf", 7), &__jule_any_type5)}));
	};
	jule::Ptr<_1aa957d85_Data> _90213_d = _1aa974126_evalExprKind((*(_88936_e)), (*(_88951_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_90213_d == nullptr)) {
		return _89013_result;;
	};
	if ((!(_1aa99d46e_validTypeForXof(&(_90213_d.get()._field_Kind))))) {
		_1aa959e0e_pushErr((*(_88936_e)).ptr(), (*(_88951_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1aa983c6d_Str(_90213_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("AlignOf", 7), &__jule_any_type5)}));
	};
	_89013_result.get()._field_Model=jule::Any(jule::new_ptr<_1aa885b70_AlignofExprModel>(_1aa885b70_AlignofExprModel{._field_Expr=_90213_d.get()._field_Model}), &__jule_any_type121);
	return _89013_result;;
}



inline jule::Ptr<_1aa957d85_Data> _1aa2b9c14_builtinCallerStdMemFree(jule::Ptr<_1aa959903_Eval>* _91433_e, jule::Ptr<_1aa85c52b_FnCallExpr>* _91448_fc, jule::Ptr<_1aa957d85_Data>* ) {
	if (((*(_91448_fc)).get()._field_Args.len() < 1LL)) {
		_1aa959e0e_pushErr((*(_91433_e)).ptr(), (*(_91448_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("h", 1), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_91448_fc)).get()._field_Args.len() > 1LL)) {
		_1aa959e0e_pushErr((*(_91433_e)).ptr(), (*(_91448_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Free", 4), &__jule_any_type5)}));
	};
	jule::Ptr<_1aa957d85_Data> _92313_d = _1aa974126_evalExprKind((*(_91433_e)), (*(_91448_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_92313_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1aa985522_PerformsRC(_92313_d.get()._field_Kind.ptr())))) {
		_1aa959e0e_pushErr((*(_91433_e)).ptr(), (*(_91448_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1aa957d85_Data> _93213_result = _1aa97eab0_buildVoidData();;
	_93213_result.get()._field_Model=jule::Any(jule::new_ptr<_1aa88691d_FreeExprModel>(_1aa88691d_FreeExprModel{._field_Expr=_92313_d.get()._field_Model}), &__jule_any_type34);
	return _93213_result;;
}



inline jule::Ptr<_1aa957d85_Data> _1aa2ba143_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_1aa959903_Eval>* _93745_e, jule::Ptr<_1aa85c52b_FnCallExpr>* _93760_fc, jule::Ptr<_1aa957d85_Data>* ) {
	if (((*(_93760_fc)).get()._field_Args.len() < 1LL)) {
		_1aa959e0e_pushErr((*(_93745_e)).ptr(), (*(_93760_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_93760_fc)).get()._field_Args.len() > 1LL)) {
		_1aa959e0e_pushErr((*(_93745_e)).ptr(), (*(_93760_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("ToStr", 5), &__jule_any_type5)}));
	};
	jule::Ptr<_1aa957d85_Data> _94613_d = _1aa974126_evalExprKind((*(_93745_e)), (*(_93760_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_94613_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1aa99c2a3_isBuiltinStrConvertable(&(_94613_d.get()._field_Kind))))) {
		_1aa959e0e_pushErr((*(_93745_e)).ptr(), (*(_93760_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1aa957d85_Data>(_1aa957d85_Data{._field_Kind=jule::new_ptr<_1aa983872_TypeKind>(_1aa983872_TypeKind{._field_Kind=jule::Trait<_1aa983410_Kind>(_1aa99c8d0_buildPrimType(jule::Str("str", 3)), 10)}), ._field_Model=jule::Any(jule::new_ptr<_1aa886269_IntegratedToStrExprModel>(_1aa886269_IntegratedToStrExprModel{._field_Expr=_94613_d.get()._field_Model}), &__jule_any_type122), });;
}



inline jule::Ptr<_1aa957d85_Data> _1aa2ba561_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_1aa959903_Eval>* _96444_e, jule::Ptr<_1aa85c52b_FnCallExpr>* _96459_fc, jule::Ptr<_1aa957d85_Data>* _96481_d) {
	if ((!(_1aa95a849_isUnsafe((*(_96444_e)).ptr())))) {
		_1aa959e0e_pushErr((*(_96444_e)).ptr(), (*(_96459_fc)).get()._field_Token, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	if (((*(_96459_fc)).get()._field_Args.len() < 1LL)) {
		_1aa959e0e_pushErr((*(_96444_e)).ptr(), (*(_96459_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("code", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1aa957d85_Data> _97413_argd = _1aa974742_evalExpr((*(_96444_e)), (*(_96459_fc)).get()._field_Args[0LL]);;
	if ((_97413_argd == nullptr)) {
		return nullptr;;
	};
	if (((_1aa985c5e_Prim(_97413_argd.get()._field_Kind.ptr()) == nullptr) || (!(_1aa98c56d_IsStr(_1aa985c5e_Prim(_97413_argd.get()._field_Kind.ptr()).ptr()))))) {
		_1aa959e0e_pushErr((*(_96444_e)).ptr(), (*(_96459_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type5),jule::Any(_1aa983c6d_Str(_97413_argd.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((!(_1aa958748_IsConst(_97413_argd.ptr()))) || (!(_1c0905ee9_IsStr(_97413_argd.get()._field_Constant.ptr()))))) {
		_1aa959e0e_pushErr((*(_96444_e)).ptr(), (*(_96459_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aa957d85_Data> _98913_r = _1aa97eab0_buildVoidData();;
	jule::Ptr<_1aa88c0c7_FnIns> _99113_f = _1aa986e4c_Fn((*(_96481_d)).get()._field_Kind.ptr());;
	if ((_99113_f.get()._field_Generics.len() > 0LL)) {
		_98913_r.get()._field_Kind=_99113_f.get()._field_Generics[0LL].get()._field_Kind;
	};
	jule::Ptr<_1aa886632_BackendEmitExprModel> _99613_model = jule::new_ptr<_1aa886632_BackendEmitExprModel>(_1aa886632_BackendEmitExprModel{._field_Code=_1c0903b51_ReadStr(_97413_argd.get()._field_Constant.ptr()), });;
	if (((*(_96459_fc)).get()._field_Args.len() > 1LL)) {
		_99613_model.get()._field_Exprs=jule::Slice<jule::Any>::alloc(0LL, ((*(_96459_fc)).get()._field_Args.len() - 1LL), jule::Any(nullptr));
		{
			auto expr = (*(_96459_fc)).get()._field_Args.slice(1LL);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1adb65e4c:;
			if (it != expr_end) {
				jule::Ptr<_1aa858549_Expr> _100221_arg = *it;
				{
					_97413_argd=_1aa974126_evalExprKind((*(_96444_e)), _100221_arg.get()._field_Kind);
					if ((_97413_argd == nullptr)) {
						return nullptr;;
					};
					_99613_model.get()._field_Exprs = jule::alloc_for_append(_99613_model.get()._field_Exprs,1);_99613_model.get()._field_Exprs.__push(_97413_argd.get()._field_Model);;
				}
				_iter_next_1adb65e4c:;
				++it;
				goto _iter_begin_1adb65e4c;
			}
			_iter_end_1adb65e4c:;
		};
	};
	_98913_r.get()._field_Model=jule::Any(_99613_model, &__jule_any_type25);
	return _98913_r;;
}



inline jule::Ptr<_1aa957d85_Data> _1aa2ba9a1_builtinCallerStdDebugOut(jule::Ptr<_1aa959903_Eval>* _101534_e, jule::Ptr<_1aa85c52b_FnCallExpr>* _101549_fc, jule::Ptr<_1aa957d85_Data>* _101571_d) {
	(*(_101571_d))=_1aa2b31c4_builtinCallerOut(_101534_e, _101549_fc, _101571_d);
	if (((*(_101571_d)) == nullptr)) {
		return nullptr;;
	};
	(*(_101571_d)).get()._field_Model.cast_ptr<_1aa882221_BuiltinOutCallExprModel>(&__jule_any_type28).get()._field_Debug=true;
	return (*(_101571_d));;
}



inline jule::Ptr<_1aa957d85_Data> _1aa2bad8b_builtinCallerStdDebugOutln(jule::Ptr<_1aa959903_Eval>* _102436_e, jule::Ptr<_1aa85c52b_FnCallExpr>* _102451_fc, jule::Ptr<_1aa957d85_Data>* _102473_d) {
	(*(_102473_d))=_1aa2b35ae_builtinCallerOutln(_102436_e, _102451_fc, _102473_d);
	if (((*(_102473_d)) == nullptr)) {
		return nullptr;;
	};
	(*(_102473_d)).get()._field_Model.cast_ptr<_1aa88260b_BuiltinOutlnCallExprModel>(&__jule_any_type29).get()._field_Debug=true;
	return (*(_102473_d));;
}



inline jule::Bool _1aa3b0634_FindModuleFile(jule::Slice<jule::Ptr<_203d70793_DirEntry>>* _1220_dirents) {
	{
		auto expr = _1220_dirents;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adb6b0b7:;
		if (it != expr_end) {
			jule::Ptr<_203d70793_DirEntry> *_1312_d = it;
			{
				if (((!(_203d80022_IsDir((*(_1312_d)).get()._field_Stat.ptr()))) && (*(_1312_d)).get()._field_Name.equal("jule.mod", 8))) {
					return true;;
				};
			}
			_iter_next_1adb6b0b7:;
			++it;
			goto _iter_begin_1adb6b0b7;
		}
		_iter_end_1adb6b0b7:;
	};
	return false;;
}



inline jule::Str _1aa3b0766_FindModuleFileDeep(jule::Str _2427_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_203d70793_DirEntry>> _2617_dirents = ({
				auto except = static__1d9d0e43d_Read(_2427_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1adb6b2e8;
				} jule::Slice<jule::Ptr<_203d70793_DirEntry>>(nullptr);});
			});;
			jule::Bool _3013_exist = _1aa3b0634_FindModuleFile(&(_2617_dirents));;
			if (_3013_exist) {
				return _2427_path;;
			};
			jule::I64 _3513_n = _2427_path.len();;
			_2427_path=_1d9d0dc45_Dir(_2427_path);
			if ((_2427_path.len() == _3513_n)) {
				goto _iter_end_1adb6b2e8;
			};
		}
	_iter_next_1adb6b2e8:;
	}
	_iter_end_1adb6b2e8:;;
	return jule::Str();;
}



inline jule::Slice<_1d9d938bd_Log> _1aa3b0964_CheckModuleFile(jule::Str _4620_path) {
	jule::Slice<jule::U8> _479_bytes = ({
		auto except = static__203d7ce76_Read(_1d9d0d0da_Join(jule::Slice<jule::Str>::make({_4620_path,jule::Str("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_1d9d938bd_Log>::make({_1d9d938bd_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str("module file could not checked because of a problem", 50), }});;
		} jule::Slice<jule::U8>(nullptr);});
	});;
	jule::Str _539_s = _1d9d0b193_Trim(static_cast<jule::Str>(_479_bytes), jule::Str(" \n\r\t\v", 5));;
	if ((_539_s.len() != 0LL)) {
		return jule::Slice<_1d9d938bd_Log>::make({_1d9d938bd_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str("module file has syntax error(s)", 31), }});;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab0ead63_FileInfo> _1ab14773e_ParseFile(jule::Ptr<_1db94a198_File> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ab0ead63_FileInfo> _2713_finf = jule::new_ptr<_1ab0ead63_FileInfo>();;
	({
		__jule_tuple_x_1aa81e80c_Ast__jule_tuple_s_1d9d938bd_Log __jule_assign_result = _1ab147cc2_parseFileset(_2318_f);
		_2713_finf.get()._field_Ast = __jule_assign_result.__jule_result_arg0;
		_2713_finf.get()._field_Errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2713_finf.get()._field_Errors.len() > 0LL)) {
		_2713_finf.get()._field_Ast=nullptr;
	};
	return _2713_finf;;
}



inline __jule_tuple_x_1aa81e80c_Ast__jule_tuple_s_1d9d938bd_Log _1ab147cc2_parseFileset(jule::Ptr<_1db94a198_File> _5521_f) {
	__jule_tuple_x_1aa81e80c_Ast__jule_tuple_s_1d9d938bd_Log __jule_func_result;
	jule::Ptr<_1ab16683a_parser> _5613_p = jule::new_ptr<_1ab16683a_parser>();;
	_1ab17621d_parse(_5613_p, &(_5521_f));
	__jule_func_result.__jule_result_arg0 = _5613_p.get()._field_ast;
	__jule_func_result.__jule_result_arg1 = _5613_p.get()._field_errors;
	return __jule_func_result;;
}



inline jule::Ptr<_1aa863eb1_ScopeTree> _1ab1486eb_newScope(void) {
	return jule::new_ptr<_1aa863eb1_ScopeTree>();;
}



inline __jule_tuple_bool__jule_tuple_bool _1ab1489d7_isSt(jule::Ptr<_1db944d0d_Token> _499_current, jule::Ptr<_1db944d0d_Token> _4926_prev) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=((_499_current.get()._field_Id == static_cast<jule::U64>(5LLU)) || (_4926_prev.get()._field_Row < _499_current.get()._field_Row));
	__jule_func_result.__jule_result_arg1=(_499_current.get()._field_Id == static_cast<jule::U64>(5LLU));
	return __jule_func_result;;
}



inline jule::Bool _1ab148d28_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1db944d0d_Token>>* _5526_tokens, jule::I64* _5545_i) {
	if ((((*(_5545_i)) > 1LL) && ((*(_5526_tokens))[((*(_5545_i)) - 2LL)].get()._field_Id == static_cast<jule::U64>(22LLU)))) {
		return false;;
	};
	{
		jule::Ptr<_1db944d0d_Token> _6113_prev = (*(_5526_tokens))[((*(_5545_i)) - 1LL)];;
		return ((_6113_prev.get()._field_Id == static_cast<jule::U64>(20LLU)) || (((_6113_prev.get()._field_Id == static_cast<jule::U64>(7LLU)) && _1db945803_IsBinOp(_6113_prev.get()._field_Kind)) && (_6113_prev.get()._field_Row < (*(_5526_tokens))[(*(_5545_i))].get()._field_Row)));;
	};
}



inline __jule_tuple_int__jule_tuple_bool _1ab1491ad_nextStPos(jule::Slice<jule::Ptr<_1db944d0d_Token>>* _7015_tokens, jule::I64 _7033_start) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _7113_braceN = 0LL;;
	jule::I64 _7213_i = _7033_start;;
	for (; (_7213_i < (*(_7015_tokens)).len()); (_7213_i)++) {
		{
			jule::Bool _7417_ok = false;;
			jule::Bool _7517_terminated = false;;
			jule::Ptr<_1db944d0d_Token> _7613_tok = (*(_7015_tokens))[_7213_i];;
			{
				auto &_match_expr{ _7613_tok.get()._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(3LLU)) {
					_case_begin_1adbeb785:;
					{
						{
							auto &_match_expr{ _7613_tok.get()._field_Kind };
							
							if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
								_case_begin_1adbedb94:;
								{
									if (((_7113_braceN == 0LL) && (_7213_i > _7033_start))) {
										if ((!(_1ab148d28_prevIsIncompleteExpr(_7015_tokens, &(_7213_i))))) {
											({
												__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ab1489d7_isSt(_7613_tok, (*(_7015_tokens))[(_7213_i - 1LL)]);
												_7417_ok = __jule_assign_result.__jule_result_arg0;
												_7517_terminated = __jule_assign_result.__jule_result_arg1;
											});
											if (_7417_ok) {
												goto _julec_label_return;
											};
										};
									};
									(_7113_braceN)++;
								}
							}
							else {
								_case_begin_1adbec06b:;
								{
									(_7113_braceN)--;
									if (((_7113_braceN == 0LL) && ((_7213_i + 1LL) < (*(_7015_tokens)).len()))) {
										({
											__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ab1489d7_isSt((*(_7015_tokens))[(_7213_i + 1LL)], _7613_tok);
											_7417_ok = __jule_assign_result.__jule_result_arg0;
											_7517_terminated = __jule_assign_result.__jule_result_arg1;
										});
										if (_7417_ok) {
											(_7213_i)++;
											goto _julec_label_return;
										};
									};
								}
							}
							_match_end_1adbebda1:;
						};
						goto _iter_next_1adbe9e8c;
					}
				}
				_match_end_1adbeb71e:;
			};
			if ((_7113_braceN != 0LL)) {
				goto _iter_next_1adbe9e8c;
			};
			if ((_7213_i > _7033_start)) {
				if (_1ab148d28_prevIsIncompleteExpr(_7015_tokens, &(_7213_i))) {
					goto _iter_next_1adbe9e8c;
				};
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ab1489d7_isSt(_7613_tok, (*(_7015_tokens))[(_7213_i - 1LL)]);
					_7417_ok = __jule_assign_result.__jule_result_arg0;
					_7517_terminated = __jule_assign_result.__jule_result_arg1;
				});
			} else {
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ab1489d7_isSt(_7613_tok, _7613_tok);
					_7417_ok = __jule_assign_result.__jule_result_arg0;
					_7517_terminated = __jule_assign_result.__jule_result_arg1;
				});
			};
			if ((!(_7417_ok))) {
				goto _iter_next_1adbe9e8c;
			};
			_julec_label_return:;
			if (_7517_terminated) {
				(_7213_i)++;
			};
			__jule_func_result.__jule_result_arg0 = _7213_i;
			__jule_func_result.__jule_result_arg1 = _7517_terminated;
			return __jule_func_result;;
		}
	_iter_next_1adbe9e8c:;
	}
	_iter_end_1adbe9e8c:;;
	__jule_func_result.__jule_result_arg0 = _7213_i;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1db944d0d_Token__jule_tuple_bool _1ab1494ee_skipSt(jule::I64* _13216_i, jule::Slice<jule::Ptr<_1db944d0d_Token>> _13228_tokens) {
	__jule_tuple_sx_1db944d0d_Token__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _1339_start = (*(_13216_i));;
	jule::Bool _13413_terminated = false;;
	({
		__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ab1491ad_nextStPos(&(_13228_tokens), _1339_start);
		(*(_13216_i)) = __jule_assign_result.__jule_result_arg0;
		_13413_terminated = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_1db944d0d_Token>> _13613_stTokens = _13228_tokens.slice(_1339_start, (*(_13216_i)));;
	if (_13413_terminated) {
		if ((_13613_stTokens.len() == 1LL)) {
			({
				__jule_tuple_sx_1db944d0d_Token__jule_tuple_bool __jule_assign_result = _1ab1494ee_skipSt(_13216_i, _13228_tokens);
				_13613_stTokens = __jule_assign_result.__jule_result_arg0;
				_13413_terminated = __jule_assign_result.__jule_result_arg1;
			});
			__jule_func_result.__jule_result_arg0 = _13613_stTokens;
			__jule_func_result.__jule_result_arg1 = _13413_terminated;
			return __jule_func_result;;
		};
		_13613_stTokens=_13613_stTokens.slice(0LL, (_13613_stTokens.len() - 1LL));
	};
	__jule_func_result.__jule_result_arg0 = _13613_stTokens;
	__jule_func_result.__jule_result_arg1 = _13413_terminated;
	return __jule_func_result;;
}



inline jule::Slice<jule::Ptr<_1ab1497eb_stmt>> _1ab149b92_splitStmts(jule::Slice<jule::Ptr<_1db944d0d_Token>>* _15420_tokens) {
	jule::Slice<jule::Ptr<_1ab1497eb_stmt>> _15513_stmts = jule::Slice<jule::Ptr<_1ab1497eb_stmt>>::alloc(0LL, 20LL);;
	jule::I64 _15613_pos = 0LL;;
	while ((_15613_pos < (*(_15420_tokens)).len())) {
		{
			jule::Slice<jule::Ptr<_1db944d0d_Token>> _15818_stmt;;
			jule::Bool _15824_terminated = false;;
			({
				__jule_tuple_sx_1db944d0d_Token__jule_tuple_bool __jule_assign_result = _1ab1494ee_skipSt(&(_15613_pos), (*(_15420_tokens)));
				_15818_stmt = __jule_assign_result.__jule_result_arg0;
				_15824_terminated = __jule_assign_result.__jule_result_arg1;
			});
			_15513_stmts = jule::alloc_for_append(_15513_stmts,1);_15513_stmts.__push(jule::new_ptr<_1ab1497eb_stmt>(_1ab1497eb_stmt{._field_tokens=_15818_stmt, ._field_terminated=_15824_terminated}));;
		}
	_iter_next_1adc067e5:;
	}
	_iter_end_1adc067e5:;;
	return _15513_stmts;;
}



inline jule::Bool _1ab16137e_isTypeOp(jule::Str* _89514_kind) {
	return (((*(_89514_kind)).equal("&", 1) || (*(_89514_kind)).equal("&&", 2)) || (*(_89514_kind)).equal("*", 1));;
}



inline jule::Bool _1ab16166a_isTypeRange(jule::Slice<jule::Ptr<_1db944d0d_Token>>* _90221_tokens) {
	jule::Bool _90313_op = false;;
	{
		auto expr = _90221_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ba978406:;
		if (it != expr_end) {
			jule::I64 _9049_i = it - expr->begin();
			jule::Ptr<_1db944d0d_Token> _90412_token = *it;
			{
				if ((_90412_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					if (_90412_token.get()._field_Kind.equal("[", 1)) {
						if (_90313_op) {
							return true;;
						};
						jule::I64 _91025_rangeN = 0LL;;
						jule::Slice<jule::Ptr<_1db944d0d_Token>> _91125_lTokens = (*(_90221_tokens)).slice(_9049_i);;
						{
							auto expr = &(_91125_lTokens);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1ba97977b:;
							if (it != expr_end) {
								jule::Ptr<_1db944d0d_Token> _91224_lToken = *it;
								{
									{
										auto &_match_expr{ _91224_lToken.get()._field_Id };
										
										if (_match_expr == static_cast<jule::U64>(3LLU)) {
											_case_begin_1ba97ae0e:;
											{
												{
													auto &_match_expr{ _91224_lToken.get()._field_Kind };
													
													if (_match_expr == jule::Str("[", 1)) {
														_case_begin_1ba97b74a:;
														{
															(_91025_rangeN)++;
															goto _iter_next_1ba97977b;
														}
													}
													else if (_match_expr == jule::Str("]", 1)) {
														_case_begin_1ba97b7c2:;
														{
															(_91025_rangeN)--;
															goto _iter_next_1ba97977b;
														}
													}
													_match_end_1ba97b580:;
												};
											}
										}
										_match_end_1ba97abbc:;
									};
									if ((_91025_rangeN == 0LL)) {
										return _1ab16137e_isTypeOp(&(_91224_lToken.get()._field_Kind));;
									};
								}
								_iter_next_1ba97977b:;
								++it;
								goto _iter_begin_1ba97977b;
							}
							_iter_end_1ba97977b:;
						};
						return true;;
					};
				};
				if ((!(_1ab16137e_isTypeOp(&(_90412_token.get()._field_Kind))))) {
					return false;;
				};
				_90313_op=true;
			}
			_iter_next_1ba978406:;
			++it;
			_9049_i++;
			goto _iter_begin_1ba978406;
		}
		_iter_end_1ba978406:;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1db944d0d_Token>> _1ab161912_getBlockExpr(jule::Slice<jule::Ptr<_1db944d0d_Token>>* _94022_tokens) {
	jule::I64 _94113_braceN = 0LL;;
	jule::I64 _94213_skipToNextBraceClose = 0LL;;
	{
		auto expr = _94022_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adb1e93e:;
		if (it != expr_end) {
			jule::I64 _9439_i = it - expr->begin();
			jule::Ptr<_1db944d0d_Token> _94312_tok = *it;
			{
				{
					auto &_match_expr{ _94312_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(16LLU) || _match_expr == static_cast<jule::U64>(17LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
						_case_begin_1adb20566:;
						{
							(_94213_skipToNextBraceClose)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(3LLU)) {
						_case_begin_1adb205cc:;
						{
							{
								auto &_match_expr{ _94312_tok.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_1adb210d3:;
									{
										if (((_94113_braceN > 0LL) || (_94213_skipToNextBraceClose > 0LL))) {
											if ((_94213_skipToNextBraceClose > 0LL)) {
												(_94213_skipToNextBraceClose)--;
											};
											(_94113_braceN)++;
											goto _match_end_1adb2119e;
										};
										return (*(_94022_tokens)).slice(0LL, _9439_i);;
									}
								}
								else if (_match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_1adb2139c:;
									{
										(_94113_braceN)++;
									}
								}
								else {
									_case_begin_1adb21336:;
									{
										(_94113_braceN)--;
									}
								}
								_match_end_1adb2119e:;
							};
						}
					}
					_match_end_1adb20324:;
				};
			}
			_iter_next_1adb1e93e:;
			++it;
			_9439_i++;
			goto _iter_begin_1adb1e93e;
		}
		_iter_end_1adb1e93e:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1db944d0d_Token__jule_tuple_sx_1db944d0d_Token _1ab161c97_splitDelim(jule::Slice<jule::Ptr<_1db944d0d_Token>>* _97120_tokens, jule::U64 _97138_delim) {
	__jule_tuple_sx_1db944d0d_Token__jule_tuple_sx_1db944d0d_Token __jule_func_result;
	jule::I64 _97213_rangeN = 0LL;;
	{
		auto expr = _97120_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adb20b2c:;
		if (it != expr_end) {
			jule::I64 _9739_i = it - expr->begin();
			jule::Ptr<_1db944d0d_Token> _97312_token = *it;
			{
				{
					auto &_match_expr{ _97312_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(3LLU)) {
						_case_begin_1adb236e0:;
						{
							{
								auto &_match_expr{ _97312_token.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_1adb244c1:;
									{
										(_97213_rangeN)++;
										goto _iter_next_1adb20b2c;
									}
								}
								else {
									_case_begin_1adb240d6:;
									{
										(_97213_rangeN)--;
									}
								}
								_match_end_1adb23e1b:;
							};
						}
					}
					else if (_match_expr == _97138_delim) {
						_case_begin_1adb23767:;
						{
							if ((_97213_rangeN == 0LL)) {
								jule::Slice<jule::Ptr<_1db944d0d_Token>> _98725_l = (*(_97120_tokens)).slice(0LL, _9739_i);;
								jule::Slice<jule::Ptr<_1db944d0d_Token>> _98825_r = (*(_97120_tokens)).slice((_9739_i + 1LL));;
								__jule_func_result.__jule_result_arg0 = _98725_l;
								__jule_func_result.__jule_result_arg1 = _98825_r;
								return __jule_func_result;;
							};
						}
					}
					_match_end_1adb234c0:;
				};
			}
			_iter_next_1adb20b2c:;
			++it;
			_9739_i++;
			goto _iter_begin_1adb20b2c;
		}
		_iter_end_1adb20b2c:;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline jule::I64 _1ab16203e_findLowestPrecOp(jule::Slice<jule::Ptr<_1db944d0d_Token>>* _99822_tokens) {
	jule::U8 _100313_prec = 255LLU;;
	jule::I64 _100413_precPos = -1LL;;
	jule::I64 _100613_braceN = 0LL;;
	jule::Bool _100713_skipToNextBraceOpen = false;;
	{
		auto expr = _99822_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adb26ccb:;
		if (it != expr_end) {
			jule::I64 _10089_i = it - expr->begin();
			jule::Ptr<_1db944d0d_Token> *_100812_token = it;
			{
				{
					
					if (((*(_100812_token)).get()._field_Id == static_cast<jule::U64>(3LLU))) {
						_case_begin_1adb27a13:;
						{
							{
								auto &_match_expr{ (*(_100812_token)).get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_1adb2865c:;
									{
										_100713_skipToNextBraceOpen=false;
										goto _case_begin_1adb28d77;
									}
								}
								else if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("[", 1)) {
									_case_begin_1adb28d77:;
									{
										(_100613_braceN)++;
									}
								}
								else {
									_case_begin_1adb288e3:;
									{
										(_100613_braceN)--;
									}
								}
								_match_end_1adb28728:;
							};
							goto _iter_next_1adb26ccb;
						}
					}
					else if (_100713_skipToNextBraceOpen) {
						_case_begin_1adb27a8a:;
						{
							goto _iter_next_1adb26ccb;
						}
					}
					else if (((*(_100812_token)).get()._field_Id == static_cast<jule::U64>(16LLU))) {
						_case_begin_1adb27b12:;
						{
							_100713_skipToNextBraceOpen=true;
							goto _iter_next_1adb26ccb;
						}
					}
					else if ((_10089_i == 0LL)) {
						_case_begin_1adb27b89:;
						{
							goto _iter_next_1adb26ccb;
						}
					}
					else if (((*(_100812_token)).get()._field_Id != static_cast<jule::U64>(7LLU))) {
						_case_begin_1adb27c11:;
						{
							goto _iter_next_1adb26ccb;
						}
					}
					else if ((_100613_braceN > 0LL)) {
						_case_begin_1adb27c88:;
						{
							goto _iter_next_1adb26ccb;
						}
					}
					_match_end_1adb278ae:;
				};
				jule::Ptr<_1db944d0d_Token> _103513_left = (*(_99822_tokens))[(_10089_i - 1LL)];;
				if (((_103513_left.get()._field_Id == static_cast<jule::U64>(7LLU)) || (_103513_left.get()._field_Id == static_cast<jule::U64>(11LLU)))) {
					goto _iter_next_1adb26ccb;
				};
				if ((((_10089_i > 1LL) && (_103513_left.get()._field_Id == static_cast<jule::U64>(3LLU))) && _103513_left.get()._field_Kind.equal("]", 1))) {
					jule::Ptr<_1db944d0d_Token> _104317_lleft = (*(_99822_tokens))[(_10089_i - 2LL)];;
					if (((_104317_lleft.get()._field_Id == static_cast<jule::U64>(3LLU)) && _104317_lleft.get()._field_Kind.equal("[", 1))) {
						if (((*(_100812_token)).get()._field_Kind.equal("&", 1) || (*(_100812_token)).get()._field_Kind.equal("*", 1))) {
							goto _iter_next_1adb26ccb;
						};
					};
				};
				jule::U8 _105213_p = _1db9451b5_Prec((*(_100812_token)).ptr());;
				if (((_105213_p != 0LLU) && (_105213_p <= _100313_prec))) {
					_100313_prec=_105213_p;
					_100413_precPos=_10089_i;
				};
			}
			_iter_next_1adb26ccb:;
			++it;
			_10089_i++;
			goto _iter_begin_1adb26ccb;
		}
		_iter_end_1adb26ccb:;
	};
	return _100413_precPos;;
}



inline jule::Ptr<_1aa85a20a_IdentExpr> _1ab1622d6_buildIdentExpr(jule::Ptr<_1db944d0d_Token>* _106124_token) {
	return jule::new_ptr<_1aa85a20a_IdentExpr>(_1aa85a20a_IdentExpr{._field_Token=(*(_106124_token)), ._field_Ident=(*(_106124_token)).get()._field_Kind, ._field_CppLinked=false});;
}



inline __jule_tuple_sx_1db944d0d_Token__jule_tuple_int _1ab16257d_getRangeExprTokens(jule::Slice<jule::Ptr<_1db944d0d_Token>>* _106928_tokens) {
	__jule_tuple_sx_1db944d0d_Token__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg1 = 0;
	jule::I64 _107013_rangeN = 0LL;;
	jule::I64 _107113_i = ((*(_106928_tokens)).len() - 1LL);;
	for (; (_107113_i >= 0LL); (_107113_i)--) {
		{
			jule::Ptr<_1db944d0d_Token> _107313_tok = (*(_106928_tokens))[_107113_i];;
			if ((_107313_tok.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _107313_tok.get()._field_Kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1adb32248:;
						{
							(_107013_rangeN)++;
						}
					}
					else {
						_case_begin_1adb31d4c:;
						{
							(_107013_rangeN)--;
						}
					}
					_match_end_1adb31b3d:;
				};
			};
			if ((_107013_rangeN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_106928_tokens)).slice(0LL, _107113_i);
				__jule_func_result.__jule_result_arg1 = _107013_rangeN;
				return __jule_func_result;;
			};
		}
	_iter_next_1adb30d29:;
	}
	_iter_end_1adb30d29:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _107013_rangeN;
	return __jule_func_result;;
}



inline jule::Bool _1ab1632d7_checkAssignTokens(jule::Slice<jule::Ptr<_1db944d0d_Token>>* _1623_tokens) {
	if ((((*(_1623_tokens)).len() == 0LL) || (!(_1db9493a6_IsAssign((*(_1623_tokens))[0LL].get()._field_Id))))) {
		return false;;
	};
	jule::I64 _2013_braceN = 0LL;;
	{
		auto expr = _1623_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ba9cc8cd:;
		if (it != expr_end) {
			jule::Ptr<_1db944d0d_Token> *_2112_t = it;
			{
				if (((*(_2112_t)).get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ (*(_2112_t)).get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1ba9cdb54:;
							{
								(_2013_braceN)++;
							}
						}
						else {
							_case_begin_1ba9cd758:;
							{
								(_2013_braceN)--;
							}
						}
						_match_end_1ba9cd549:;
					};
				};
				if ((_2013_braceN < 0LL)) {
					return false;;
				} else if ((_2013_braceN > 0LL)) {
					goto _iter_next_1ba9cc8cd;
				} else if ((((*(_2112_t)).get()._field_Id == static_cast<jule::U64>(7LLU)) && _1db9498e5_IsAssignOp((*(_2112_t)).get()._field_Kind))) {
					return true;;
				};
			}
			_iter_next_1ba9cc8cd:;
			++it;
			goto _iter_begin_1ba9cc8cd;
		}
		_iter_end_1ba9cc8cd:;
	};
	return false;;
}



inline _1d9d938bd_Log _1ab164508_makeErr(jule::I64 _5212_row, jule::I64 _5222_col, jule::Ptr<_1db94a198_File>* _5233_f, jule::Str _5243_fmt, jule::Slice<jule::Any> _5256_args) {
	return _1d9d938bd_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_5212_row, ._field_Column=_5222_col, ._field_Path=(*(_5233_f)).get()._field_Path, ._field_Text=_1d9d93d0d_Logf(_5243_fmt, _5256_args), };;
}



inline jule::Slice<jule::Ptr<_1db944d0d_Token>> _1ab1649d1_range(jule::I64* _7115_i, jule::Str _7123_open, jule::Str _7140_close, jule::Slice<jule::Ptr<_1db944d0d_Token>>* _7163_tokens) {
	if (((*(_7115_i)) >= (*(_7163_tokens)).len())) {
		return nullptr;;
	};
	jule::Ptr<_1db944d0d_Token> _759_tok = (*(_7163_tokens))[(*(_7115_i))];;
	if (((_759_tok.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_759_tok.get()._field_Kind != _7123_open))) {
		return nullptr;;
	};
	((*(_7115_i)))++;
	jule::I64 _8013_rangeN = 1LL;;
	jule::I64 _819_start = (*(_7115_i));;
	for (; ((_8013_rangeN != 0LL) && ((*(_7115_i)) < (*(_7163_tokens)).len())); ((*(_7115_i)))++) {
		{
			jule::Ptr<_1db944d0d_Token> _8313_token = (*(_7163_tokens))[(*(_7115_i))];;
			if ((_8313_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _8313_token.get()._field_Kind };
					
					if (_match_expr == _7123_open) {
						_case_begin_1ba9d442e:;
						{
							(_8013_rangeN)++;
						}
					}
					else if (_match_expr == _7140_close) {
						_case_begin_1ba9d44a6:;
						{
							(_8013_rangeN)--;
						}
					}
					_match_end_1ba9d420e:;
				};
			};
		}
	_iter_next_1ba9d343e:;
	}
	_iter_end_1ba9d343e:;;
	return (*(_7163_tokens)).slice(_819_start, ((*(_7115_i)) - 1LL));;
}



inline __jule_tuple_sx_1db944d0d_Token__jule_tuple_sx_1db944d0d_Token _1ab164c78_rangeLast(jule::Slice<jule::Ptr<_1db944d0d_Token>>* _10319_tokens) {
	__jule_tuple_sx_1db944d0d_Token__jule_tuple_sx_1db944d0d_Token __jule_func_result;
	if (((*(_10319_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*(_10319_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	} else if (((*(_10319_tokens))[((*(_10319_tokens)).len() - 1LL)].get()._field_Id != static_cast<jule::U64>(3LLU))) {
		__jule_func_result.__jule_result_arg0 = (*(_10319_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I64 _10913_braceN = 0LL;;
	jule::I64 _11013_i = ((*(_10319_tokens)).len() - 1LL);;
	for (; (_11013_i >= 0LL); (_11013_i)--) {
		{
			jule::Ptr<_1db944d0d_Token> _11213_token = (*(_10319_tokens))[_11013_i];;
			if ((_11213_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _11213_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1ba9d871e:;
						{
							(_10913_braceN)++;
							goto _iter_next_1ba9d5474;
						}
					}
					else {
						_case_begin_1ba9d8323:;
						{
							(_10913_braceN)--;
						}
					}
					_match_end_1ba9d8114:;
				};
			};
			if ((_10913_braceN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_10319_tokens)).slice(0LL, _11013_i);
				__jule_func_result.__jule_result_arg1 = (*(_10319_tokens)).slice(_11013_i);
				return __jule_func_result;;
			};
		}
	_iter_next_1ba9d5474:;
	}
	_iter_end_1ba9d5474:;;
	__jule_func_result.__jule_result_arg0 = (*(_10319_tokens));
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_1db944d0d_Token__jule_tuple_s_1d9d938bd_Log _1ab165163_partsKind(jule::Slice<jule::Ptr<_1db944d0d_Token>>* _13219_tokens, jule::Str _13237_kind, jule::Bool _13254_expr_must) {
	__jule_tuple_ssx_1db944d0d_Token__jule_tuple_s_1d9d938bd_Log __jule_func_result;
	if (((*(_13219_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1db944d0d_Token>>> _13713_parts = nullptr;;
	jule::Slice<_1d9d938bd_Log> _13813_errors = nullptr;;
	jule::I64 _14013_rangeN = 0LL;;
	jule::I64 _14113_last = 0LL;;
	{
		auto expr = _13219_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ba9db425:;
		if (it != expr_end) {
			jule::I64 _1429_i = it - expr->begin();
			jule::Ptr<_1db944d0d_Token> _14212_token = *it;
			{
				if ((_14212_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _14212_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1ba9dca97:;
							{
								(_14013_rangeN)++;
								goto _iter_next_1ba9db425;
							}
						}
						else {
							_case_begin_1ba9dc69b:;
							{
								(_14013_rangeN)--;
							}
						}
						_match_end_1ba9dc48c:;
					};
				};
				if ((_14013_rangeN > 0LL)) {
					goto _iter_next_1ba9db425;
				};
				if ((_14212_token.get()._field_Kind == _13237_kind)) {
					if ((_13254_expr_must && ((_1429_i - _14113_last) <= 0LL))) {
						_1d9d938bd_Log _16121_err = _1ab164508_makeErr(_14212_token.get()._field_Row, _14212_token.get()._field_Column, &(_14212_token.get()._field_File), jule::Str("expression missing", 18), jule::Slice<jule::Any>());;
						_13813_errors = jule::alloc_for_append(_13813_errors,1);_13813_errors.__push(_16121_err);;
					};
					_13713_parts = jule::alloc_for_append(_13713_parts,1);_13713_parts.__push((*(_13219_tokens)).slice(_14113_last, _1429_i));;
					_14113_last=static_cast<jule::I64>((_1429_i + 1LL));
				};
			}
			_iter_next_1ba9db425:;
			++it;
			_1429_i++;
			goto _iter_begin_1ba9db425;
		}
		_iter_end_1ba9db425:;
	};
	if ((_14113_last < (*(_13219_tokens)).len())) {
		_13713_parts = jule::alloc_for_append(_13713_parts,1);_13713_parts.__push((*(_13219_tokens)).slice(_14113_last));;
	} else if ((!(_13254_expr_must))) {
		_13713_parts = jule::alloc_for_append(_13713_parts,1);_13713_parts.__push(jule::Slice<jule::Ptr<_1db944d0d_Token>>());;
	};
	__jule_func_result.__jule_result_arg0 = _13713_parts;
	__jule_func_result.__jule_result_arg1 = _13813_errors;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_1db944d0d_Token__jule_tuple_s_1d9d938bd_Log _1ab16554d_parts(jule::Slice<jule::Ptr<_1db944d0d_Token>>* _18415_tokens, jule::U64 _18433_id, jule::Bool _18446_expr_must) {
	__jule_tuple_ssx_1db944d0d_Token__jule_tuple_s_1d9d938bd_Log __jule_func_result;
	if (((*(_18415_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1db944d0d_Token>>> _18913_parts = nullptr;;
	jule::Slice<_1d9d938bd_Log> _19013_errors = nullptr;;
	jule::I64 _19213_rangeN = 0LL;;
	jule::I64 _19313_last = 0LL;;
	{
		auto expr = _18415_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ba9e2a9c:;
		if (it != expr_end) {
			jule::I64 _1949_i = it - expr->begin();
			jule::Ptr<_1db944d0d_Token> _19412_token = *it;
			{
				if ((_19412_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _19412_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1ba9e421e:;
							{
								(_19213_rangeN)++;
								goto _iter_next_1ba9e2a9c;
							}
						}
						else {
							_case_begin_1ba9e3d23:;
							{
								(_19213_rangeN)--;
							}
						}
						_match_end_1ba9e3b14:;
					};
				};
				if ((_19213_rangeN > 0LL)) {
					goto _iter_next_1ba9e2a9c;
				};
				if ((_19412_token.get()._field_Id == _18433_id)) {
					if ((_18446_expr_must && ((_1949_i - _19313_last) <= 0LL))) {
						_1d9d938bd_Log _21321_err = _1ab164508_makeErr(_19412_token.get()._field_Row, _19412_token.get()._field_Column, &(_19412_token.get()._field_File), jule::Str("expression missing", 18), jule::Slice<jule::Any>());;
						_19013_errors = jule::alloc_for_append(_19013_errors,1);_19013_errors.__push(_21321_err);;
					};
					_18913_parts = jule::alloc_for_append(_18913_parts,1);_18913_parts.__push((*(_18415_tokens)).slice(_19313_last, _1949_i));;
					_19313_last=static_cast<jule::I64>((_1949_i + 1LL));
				};
			}
			_iter_next_1ba9e2a9c:;
			++it;
			_1949_i++;
			goto _iter_begin_1ba9e2a9c;
		}
		_iter_end_1ba9e2a9c:;
	};
	if ((_19313_last < (*(_18415_tokens)).len())) {
		_18913_parts = jule::alloc_for_append(_18913_parts,1);_18913_parts.__push((*(_18415_tokens)).slice(_19313_last));;
	} else if ((!(_18446_expr_must))) {
		_18913_parts = jule::alloc_for_append(_18913_parts,1);_18913_parts.__push(jule::Slice<jule::Ptr<_1db944d0d_Token>>());;
	};
	__jule_func_result.__jule_result_arg0 = _18913_parts;
	__jule_func_result.__jule_result_arg1 = _19013_errors;
	return __jule_func_result;;
}



inline jule::Str _1ab1657e5_getCloseKindOfBrace(jule::Str _23024_left) {
	{
		auto &_match_expr{ _23024_left };
		
		if (_match_expr == jule::Str(")", 1)) {
			_case_begin_1ba9e76b7:;
			{
				return jule::Str("(", 1);;
			}
		}
		else if (_match_expr == jule::Str("}", 1)) {
			_case_begin_1ba9e772d:;
			{
				return jule::Str("{", 1);;
			}
		}
		else if (_match_expr == jule::Str("]", 1)) {
			_case_begin_1ba9e74a8:;
			{
				return jule::Str("[", 1);;
			}
		}
		else {
			_case_begin_1ba9e3383:;
			{
				return jule::Str();;
			}
		}
		_match_end_1ba9e6e03:;
	};
}



inline _1d9d938bd_Log _1ab165bd0_compilerErr(jule::Ptr<_1db944d0d_Token>* _24317_token, jule::Str* _24333_fmt, jule::Slice<jule::Any> _24346_args) {
	return _1d9d938bd_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*(_24317_token)).get()._field_Row, ._field_Column=(*(_24317_token)).get()._field_Column, ._field_Path=(*(_24317_token)).get()._field_File.get()._field_Path, ._field_Text=_1d9d93d0d_Logf((*(_24333_fmt)), _24346_args), ._field_Line=_1db94b375_GetRow((*(_24317_token)).get()._field_File.ptr(), (*(_24317_token)).get()._field_Row), };;
}



inline void _1ab16610e_pushSuggestion(_1d9d938bd_Log* _25430_log, jule::Str _25441_fmt, jule::Slice<jule::Any> _25454_args) {
	_25430_log->_field_Suggestion=_1d9d93d0d_Logf(_25441_fmt, _25454_args);
}



inline jule::Str _1ab1663a6_tokstoa(jule::Slice<jule::Ptr<_1db944d0d_Token>>* _25813_tokens) {
	jule::I64 _25913_n = 0LL;;
	{
		auto expr = _25813_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ba9ea2e1:;
		if (it != expr_end) {
			jule::Ptr<_1db944d0d_Token> *_26012_token = it;
			{
				_25913_n+=(*(_26012_token)).get()._field_Kind.len();
			}
			_iter_next_1ba9ea2e1:;
			++it;
			goto _iter_begin_1ba9ea2e1;
		}
		_iter_end_1ba9ea2e1:;
	};
	jule::Str _26313_s = jule::Str::alloc(0LL, _25913_n);;
	{
		auto expr = _25813_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ba9ea995:;
		if (it != expr_end) {
			jule::Ptr<_1db944d0d_Token> *_26412_token = it;
			{
				_26313_s+=(*(_26412_token)).get()._field_Kind;
			}
			_iter_next_1ba9ea995:;
			++it;
			goto _iter_begin_1ba9ea995;
		}
		_iter_end_1ba9ea995:;
	};
	return _26313_s;;
}



inline jule::Bool _1ab1764e8_isPub(jule::Str* _205011_ident) {
	jule::I32 _205110_r = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _203e63c1b_DecodeRuneStr((*(_205011_ident)));
		_205110_r = __jule_assign_result.__jule_result_arg0;
	});
	return _1d9cbe574_IsUpper(_205110_r);;
}



inline jule::Ptr<_1aa854028_TypeDecl> _1ab176d89_buildVoidType(void) {
	return jule::new_ptr<_1aa854028_TypeDecl>();;
}



inline jule::Ptr<_1aa854028_TypeDecl> _1ab1770cb_buildPrimType(jule::Ptr<_1db944d0d_Token> _2322_t) {
	return jule::new_ptr<_1aa854028_TypeDecl>(_1aa854028_TypeDecl{._field_Token=_2322_t, ._field_Kind=jule::Any(jule::new_ptr<_1aa8545de_IdentTypeDecl>(_1aa8545de_IdentTypeDecl{._field_Token=_2322_t, ._field_Ident=_2322_t.get()._field_Kind, }), &__jule_any_type20)});;
}



inline __jule_tuple_bool__jule_tuple_bool _1aa384691_checkOs(jule::Str _912_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == jule::Str("windows", 7)) {
			_case_begin_1bac32913:;
			{
				__jule_func_result.__jule_result_arg0=_1d9d96bce_IsWindows(_1d9e39029_Os);
			}
		}
		else if (_match_expr == jule::Str("darwin", 6)) {
			_case_begin_1bac32319:;
			{
				__jule_func_result.__jule_result_arg0=_1d9d96e87_IsDarwin(_1d9e39029_Os);
			}
		}
		else if (_match_expr == jule::Str("linux", 5)) {
			_case_begin_1bac32380:;
			{
				__jule_func_result.__jule_result_arg0=_1d9d9722e_IsLinux(_1d9e39029_Os);
			}
		}
		else if (_match_expr == jule::Str("unix", 4)) {
			_case_begin_1bac323e6:;
			{
				__jule_func_result.__jule_result_arg0=_1d9d97d34_IsUnix(_1d9e39029_Os);
			}
		}
		else {
			_case_begin_1bac31abb:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1bac31ed9:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_bool__jule_tuple_bool _1aa3847c3_checkArch(jule::Str _2814_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == jule::Str("i386", 4)) {
			_case_begin_1bac347b1:;
			{
				__jule_func_result.__jule_result_arg0=_1d9d9754d_IsI386(_1d9e392e3_Arch);
			}
		}
		else if (_match_expr == jule::Str("amd64", 5)) {
			_case_begin_1bac34827:;
			{
				__jule_func_result.__jule_result_arg0=_1d9d977e5_IsAmd64(_1d9e392e3_Arch);
			}
		}
		else if (_match_expr == jule::Str("arm64", 5)) {
			_case_begin_1bac3488d:;
			{
				__jule_func_result.__jule_result_arg0=_1d9d97a8c_IsArm64(_1d9e392e3_Arch);
			}
		}
		else if (_match_expr == jule::Str("x64", 3)) {
			_case_begin_1bac34904:;
			{
				__jule_func_result.__jule_result_arg0=_1d9d98450_Is64Bit(_1d9e392e3_Arch);
			}
		}
		else if (_match_expr == jule::Str("x32", 3)) {
			_case_begin_1bac3496a:;
			{
				__jule_func_result.__jule_result_arg0=_1d9d981a8_Is32Bit(_1d9e392e3_Arch);
			}
		}
		else {
			_case_begin_1bac34063:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1bac34481:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1aa384905_isPassFileAnnotation(jule::Str _5029_p) {
	_5029_p=_1d9d0d8c1_Base(_5029_p);
	jule::I64 _529_n = _5029_p.len();;
	(_5029_p).mut_slice(0LL, (_529_n - _1d9d0d382_Ext(_5029_p).len()));;
	jule::Str _5813_a1 = jule::Str();;
	jule::Str _6113_a2 = jule::Str();;
	jule::I64 _6413_i = _1d9d06a73_FindLastByte(_5029_p, '_');;
	if ((_6413_i == -1LL)) {
		jule::Bool _6718_ok = false;;
		jule::Bool _6726_exist = false;;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1aa384691_checkOs(_5029_p);
			_6718_ok = __jule_assign_result.__jule_result_arg0;
			_6726_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_6726_exist) {
			return _6718_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1aa3847c3_checkArch(_5029_p);
			_6718_ok = __jule_assign_result.__jule_result_arg0;
			_6726_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_6726_exist)) || _6718_ok);;
	};
	if (((_6413_i + 1LL) >= _529_n)) {
		return true;;
	};
	_5813_a1=_5029_p.slice((_6413_i + 1LL));
	(_5029_p).mut_slice(0LL, _6413_i);;
	_6413_i=static_cast<jule::I64>(_1d9d06a73_FindLastByte(_5029_p, '_'));
	if ((_6413_i != -1LL)) {
		_6113_a2=_5029_p.slice((_6413_i + 1LL));
	};
	if (_6113_a2.empty()) {
		jule::Bool _8818_ok = false;;
		jule::Bool _8826_exist = false;;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1aa384691_checkOs(_5813_a1);
			_8818_ok = __jule_assign_result.__jule_result_arg0;
			_8826_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_8826_exist) {
			return _8818_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1aa3847c3_checkArch(_5813_a1);
			_8818_ok = __jule_assign_result.__jule_result_arg0;
			_8826_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_8826_exist)) || _8818_ok);;
	};
	jule::Bool _9614_ok = false;;
	jule::Bool _9622_exist = false;;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1aa3847c3_checkArch(_5813_a1);
		_9614_ok = __jule_assign_result.__jule_result_arg0;
		_9622_exist = __jule_assign_result.__jule_result_arg1;
	});
	if (_9622_exist) {
		if ((!(_9614_ok))) {
			return false;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1aa384691_checkOs(_6113_a2);
			_9614_ok = __jule_assign_result.__jule_result_arg0;
			_9622_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_9622_exist)) || _9614_ok);;
	};
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1aa384691_checkOs(_5813_a1);
		_9614_ok = __jule_assign_result.__jule_result_arg0;
		_9622_exist = __jule_assign_result.__jule_result_arg1;
	});
	return ((!(_9622_exist)) || _9614_ok);;
}



inline void _1aa39e48b_setOsVars(jule::Slice<jule::Str>* _3619_vars) {
	(*(_3619_vars)) = jule::alloc_for_append((*(_3619_vars)),1);(*(_3619_vars)).__push(_1d9e39029_Os);;
	if (_1d9d97d34_IsUnix(_1d9e39029_Os)) {
		(*(_3619_vars)) = jule::alloc_for_append((*(_3619_vars)),1);(*(_3619_vars)).__push(jule::Str("unix", 4));;
	};
}



inline void _1aa39e6de_setArchVars(jule::Slice<jule::Str>* _4421_vars) {
	(*(_4421_vars)) = jule::alloc_for_append((*(_4421_vars)),1);(*(_4421_vars)).__push(_1d9e392e3_Arch);;
	if (_1d9d98450_Is64Bit(_1d9e392e3_Arch)) {
		(*(_4421_vars)) = jule::alloc_for_append((*(_4421_vars)),1);(*(_4421_vars)).__push(jule::Str("x64", 3));;
	};
	if (_1d9d981a8_Is32Bit(_1d9e392e3_Arch)) {
		(*(_4421_vars)) = jule::alloc_for_append((*(_4421_vars)),1);(*(_4421_vars)).__push(jule::Str("x32", 3));;
	};
}



inline void _1aa39e997_initVars(jule::Slice<jule::Str>* _5518_vars, _1aa39e17d_CompileInfo* _5532_info) {
	_1aa39e48b_setOsVars(_5518_vars);
	_1aa39e6de_setArchVars(_5518_vars);
	if ((*(_5532_info))._field_Prod) {
		(*(_5518_vars)) = jule::alloc_for_append((*(_5518_vars)),1);(*(_5518_vars)).__push(jule::Str("production", 10));;
	};
	if ((*(_5532_info))._field_Test) {
		(*(_5518_vars)) = jule::alloc_for_append((*(_5518_vars)),1);(*(_5518_vars)).__push(jule::Str("test", 4));;
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_Compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1bac409a9:;
			{
				(*(_5518_vars)) = jule::alloc_for_append((*(_5518_vars)),1);(*(_5518_vars)).__push(jule::Str("clang", 5));;
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1bac40a20:;
			{
				(*(_5518_vars)) = jule::alloc_for_append((*(_5518_vars)),1);(*(_5518_vars)).__push(jule::Str("gcc", 3));;
			}
		}
		_match_end_1bac40954:;
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1bac40e93:;
			{
				(*(_5518_vars)) = jule::alloc_for_append((*(_5518_vars)),1);(*(_5518_vars)).__push(jule::Str("cpp14", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1bac41009:;
			{
				(*(_5518_vars)) = jule::alloc_for_append((*(_5518_vars)),1);(*(_5518_vars)).__push(jule::Str("cpp17", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1bac41070:;
			{
				(*(_5518_vars)) = jule::alloc_for_append((*(_5518_vars)),1);(*(_5518_vars)).__push(jule::Str("cpp20", 5));;
			}
		}
		_match_end_1bac40dc7:;
	};
}



inline jule::Slice<jule::U8> _1ab17b08b_readBuff(jule::Str _3013_path) {
	return ({
		auto except = static__203d7ce76_Read(_3013_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str("error: file cannot read", 23));
			;
			_1d9e37e90_Exit(1LL);
			return nullptr;;
		} jule::Slice<jule::U8>(nullptr);});
	});;
}



inline _1d9d938bd_Log _1ab17b344_flatCompilerErr(jule::Str _4120_text) {
	return _1d9d938bd_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Text=_4120_text, };;
}



inline void _1ab180755_pushPasses(jule::Ptr<_1aa8d3b57_Package>* _11120_p, jule::Slice<jule::Str>* _11144_passes) {
	{
		auto expr = &((*(_11120_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bac72403:;
		if (it != expr_end) {
			jule::Ptr<_1aa94d51d_SymbolTable> _11217_f = *it;
			{
				_julec_label_push:;
				{
					auto expr = &(_11217_f.get()._field_Passes);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bac72d71:;
					if (it != expr_end) {
						_1aa891362_Pass _11416_pass = *it;
						{
							if (_11416_pass._field_Text.empty()) {
								goto _iter_next_1bac72d71;
							};
							{
								auto expr = _11144_passes;
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1bac73d0b:;
								if (it != expr_end) {
									jule::Str _11820_cpass = *it;
									{
										if ((_11820_cpass == _11416_pass._field_Text)) {
											goto _iter_next_1bac72d71;
										};
									}
									_iter_next_1bac73d0b:;
									++it;
									goto _iter_begin_1bac73d0b;
								}
								_iter_end_1bac73d0b:;
							};
							(*(_11144_passes)) = jule::alloc_for_append((*(_11144_passes)),1);(*(_11144_passes)).__push(_11416_pass._field_Text);;
						}
						_iter_next_1bac72d71:;
						++it;
						goto _iter_begin_1bac72d71;
					}
					_iter_end_1bac72d71:;
				};
			}
			_iter_next_1bac72403:;
			++it;
			goto _iter_begin_1bac72403;
		}
		_iter_end_1bac72403:;
	};
}



inline jule::Slice<jule::Str> _1ab180ada_getAllUniquePasses(jule::Ptr<_1aa8d3b57_Package>* _12828_pkg, jule::Slice<jule::Ptr<_1aa8d101c_ImportInfo>> _12853_uses) {
	jule::Slice<jule::Str> _12913_passes = nullptr;;
	_1ab180755_pushPasses(_12828_pkg, &(_12913_passes));
	{
		auto expr = &(_12853_uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bac7535c:;
		if (it != expr_end) {
			jule::Ptr<_1aa8d101c_ImportInfo> _13217_u = *it;
			{
				if ((!(_13217_u.get()._field_CppLinked))) {
					_1ab180755_pushPasses(&(_13217_u.get()._field_Package), &(_12913_passes));
				};
			}
			_iter_next_1bac7535c:;
			++it;
			goto _iter_begin_1bac7535c;
		}
		_iter_end_1bac7535c:;
	};
	return _12913_passes;;
}



inline _1aa39e17d_CompileInfo _1ab180cd8_buildCompileInfo(void) {
	_1aa39e17d_CompileInfo _14213_info = _1aa39e17d_CompileInfo{._field_Prod=_202bb24e8_Production, ._field_Test=_202bb1a8b_Test, };;
	{
		auto &_match_expr{ _202baed0e_Compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1bac7667c:;
			{
				_14213_info._field_Compiler=jule::Str("clang", 5);
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1bac76704:;
			{
				_14213_info._field_Compiler=jule::Str("gcc", 3);
			}
		}
		_match_end_1bac76605:;
	};
	{
		auto &_match_expr{ _202bb12a5_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1bac7603e:;
			{
				_14213_info._field_CppStd=jule::Str("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1bac76a9a:;
			{
				_14213_info._field_CppStd=jule::Str("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1bac76b11:;
			{
				_14213_info._field_CppStd=jule::Str("cpp20", 5);
			}
		}
		_match_end_1bac76ea7:;
	};
	return _14213_info;;
}



inline void _1ab354bc1_EliminateDefines(jule::Ptr<_1ab17e039_IR>* _28526_ir) {
	jule::Ptr<_1ab320708_ObjectDeadCode> _28613_ocd = static__1ab320bd1_new(_28526_ir);;
	_1ab354907_elimanate(_28613_ocd);
}



inline jule::Ptr<_1aa820a94_Directive> _1ab355056_findDirective(jule::Slice<jule::Ptr<_1aa820a94_Directive>>* _29123_directives, jule::Str _29154_tag) {
	{
		auto expr = _29123_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bacb15eb:;
		if (it != expr_end) {
			jule::Ptr<_1aa820a94_Directive> _29217_dr = *it;
			{
				if ((_29217_dr.get()._field_Tag.get()._field_Kind == _29154_tag)) {
					return _29217_dr;;
				};
			}
			_iter_next_1bacb15eb:;
			++it;
			goto _iter_begin_1bacb15eb;
		}
		_iter_end_1bacb15eb:;
	};
	return nullptr;;
}



inline jule::Bool _1ab355397_hasDirective(jule::Slice<jule::Ptr<_1aa820a94_Directive>>* _30118_directives, jule::Str _30149_tag) {
	return (_1ab355056_findDirective(_30118_directives, _30149_tag) != nullptr);;
}



inline void _1ab358ee4_eliminateDeadCodeOfScope(jule::Ptr<_1aa8b25a3_Scope> _24133_s) {
	jule::Slice<jule::Ptr<_1aa8b4ce2_Label>> _2429_labels = jule::Slice<jule::Ptr<_1aa8b4ce2_Label>>::alloc(0LL, 16LLU);;
	jule::Slice<jule::Ptr<_1aa8b50cd_GotoSt>> _2439_gotos = jule::Slice<jule::Ptr<_1aa8b50cd_GotoSt>>::alloc(0LL, 16LLU);;
	jule::Ptr<_1ab3560e0_scopeDeadCode> _24413_sdc = jule::new_ptr<_1ab3560e0_scopeDeadCode>(_1ab3560e0_scopeDeadCode{._field_s=_24133_s, ._field_stmts=(&(_24133_s.get()._field_Stmts)), ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_1aa8b4ce2_Label>>>)((&(_2429_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_1aa8b50cd_GotoSt>>>)((&(_2439_gotos)))), });;
	{
		_1ab358c08_optimizeStmts(_24413_sdc);
	};
}



inline void _1ab35927a_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1aa889426_Fn>>* _25433_funcs) {
	{
		auto expr = _25433_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bac04693:;
		if (it != expr_end) {
			jule::Ptr<_1aa889426_Fn> _25517_func = *it;
			{
				{
					auto expr = &(_25517_func.get()._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bac06794:;
					if (it != expr_end) {
						jule::Ptr<_1aa88c0c7_FnIns> _25621_ins = *it;
						{
							_1ab358ee4_eliminateDeadCodeOfScope(_25621_ins.get()._field_Scope);
						}
						_iter_next_1bac06794:;
						++it;
						goto _iter_begin_1bac06794;
					}
					_iter_end_1bac06794:;
				};
			}
			_iter_next_1bac04693:;
			++it;
			goto _iter_begin_1bac04693;
		}
		_iter_end_1bac04693:;
	};
}



inline void _1ab3594bc_eliminateFunctionsScopePackage(jule::Ptr<_1aa8d3b57_Package>* _26240_pkg) {
	{
		auto expr = &((*(_26240_pkg)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bac06c17:;
		if (it != expr_end) {
			jule::Ptr<_1aa94d51d_SymbolTable> _26317_f = *it;
			{
				_1ab35927a_eliminateScopeFunctions(&(_26317_f.get()._field_Funcs));
			}
			_iter_next_1bac06c17:;
			++it;
			goto _iter_begin_1bac06c17;
		}
		_iter_end_1bac06c17:;
	};
}



inline void _1ab359764_eliminateScopePackage(jule::Ptr<_1aa8d3b57_Package>* _26831_pkg) {
	_1ab3594bc_eliminateFunctionsScopePackage(_26831_pkg);
}



inline void _1ab359973_EliminateScopes(jule::Ptr<_1ab17e039_IR>* _27325_ir) {
	jule::I64 _27413_i = ((*(_27325_ir)).get()._field_Used.len() - 1LL);;
	for (; (_27413_i >= 0LL); (_27413_i)--) {
		{
			jule::Ptr<_1aa8d101c_ImportInfo> _27617_u = (*(_27325_ir)).get()._field_Used[_27413_i];;
			if ((!(_27617_u.get()._field_CppLinked))) {
				_1ab359764_eliminateScopePackage(&(_27617_u.get()._field_Package));
			};
		}
	_iter_next_1bac08378:;
	}
	_iter_end_1bac08378:;;
	_1ab359764_eliminateScopePackage(&((*(_27325_ir)).get()._field_Main));
}



inline jule::Bool _1aa2c29ec_isStdPackage(jule::Str _43817_f, jule::Str _43825_p) {
	return _1d9d036a7_HasPrefix(_43817_f, _1d9d0d0da_Join(jule::Slice<jule::Str>::make({_1d9e38479_PathStdlib,_43825_p})));;
}



inline jule::Bool _1aa2c2d0a_isConstantValidConditionalCase(jule::Ptr<_1aa8b299e_If>* _44236_i) {
	{
		auto &_match_expr{ (*(_44236_i)).get()._field_Expr };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1badde11e:;
			{
				jule::Ptr<_1c0901b1b_Const> _44513_c = (*(_44236_i)).get()._field_Expr.cast_ptr<_1c0901b1b_Const>(&__jule_any_type19);;
				return (_1c0905c85_IsBool(_44513_c.ptr()) && _1c09038dc_ReadBool(_44513_c.ptr()));;
			}
		}
		_match_end_1badddea9:;
	};
	return false;;
}



inline jule::Bool _1aa2c30b3_isUnreachableExpr(jule::Any* _45123_expr) {
	{
		auto &_match_expr{ (*(_45123_expr)) };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1baddea37:;
			{
				jule::Ptr<_1c0901b1b_Const> _45413_c = (*(_45123_expr)).cast_ptr<_1c0901b1b_Const>(&__jule_any_type19);;
				return (_1c0905c85_IsBool(_45413_c.ptr()) && (!(_1c09038dc_ReadBool(_45413_c.ptr()))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1baddeaae:;
			{
				jule::Ptr<_1aa87b2a3_BinopExprModel> _45713_m = (*(_45123_expr)).cast_ptr<_1aa87b2a3_BinopExprModel>(&__jule_any_type114);;
				if (_45713_m.get()._field_Op.get()._field_Kind.equal("&&", 2)) {
					return (_1aa2c30b3_isUnreachableExpr(&(_45713_m.get()._field_Left.get()._field_Model)) || _1aa2c30b3_isUnreachableExpr(&(_45713_m.get()._field_Right.get()._field_Model)));;
				};
			}
		}
		_match_end_1badde1da:;
	};
	return false;;
}



inline jule::Bool _1aa2c3404_isConstantValidMatchCase(jule::Ptr<_1aa8b6e15_Case>* _46630_case) {
	{
		auto expr = &((*(_46630_case)).get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bade0dac:;
		if (it != expr_end) {
			jule::Ptr<_1aa957d85_Data> *_46712_expr = it;
			{
				if (((_1aa958748_IsConst((*(_46712_expr)).ptr()) && _1c0905c85_IsBool((*(_46712_expr)).get()._field_Constant.ptr())) && _1c09038dc_ReadBool((*(_46712_expr)).get()._field_Constant.ptr()))) {
					return true;;
				};
			}
			_iter_next_1bade0dac:;
			++it;
			goto _iter_begin_1bade0dac;
		}
		_iter_end_1bade0dac:;
	};
	return false;;
}



inline jule::Bool _1aa2c369b_isUnreachableConditionalCase(jule::Ptr<_1aa8b299e_If>* _47534_i) {
	return _1aa2c30b3_isUnreachableExpr(&((*(_47534_i)).get()._field_Expr));;
}



inline jule::Bool _1aa2c3954_isUnreachableMatchCase(jule::Ptr<_1aa8b6e15_Case>* _47928_case) {
	{
		auto expr = &((*(_47928_case)).get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bade47b7:;
		if (it != expr_end) {
			jule::Ptr<_1aa957d85_Data> *_48012_expr = it;
			{
				if ((!(_1aa2c30b3_isUnreachableExpr(&((*(_48012_expr)).get()._field_Model))))) {
					return false;;
				};
			}
			_iter_next_1bade47b7:;
			++it;
			goto _iter_begin_1bade47b7;
		}
		_iter_end_1bade47b7:;
	};
	return true;;
}



inline __jule_tuple_bool__jule_tuple_u64 _1aa2cb352_checkForBitShiftOpt(jule::Ptr<_1aa87acdb_OperandExprModel>* _46625_l, jule::Ptr<_1aa87acdb_OperandExprModel>* _46648_r) {
	__jule_tuple_bool__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((!(_1dc5c1a33_IsInt(_1aa983c6d_Str((*(_46625_l)).get()._field_Kind.ptr())))) || (!(_1dc5c1a33_IsInt(_1aa983c6d_Str((*(_46648_r)).get()._field_Kind.ptr())))))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*(_46648_r)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1bae31a79:;
			{
				goto _match_end_1bae3253b;
			}
		}
		else {
			_case_begin_1bae3267e:;
			{
				__jule_func_result.__jule_result_arg0 = false;
				__jule_func_result.__jule_result_arg1 = 0LLU;
				return __jule_func_result;;
			}
		}
		_match_end_1bae3253b:;
	};
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>(_1c090438d_AsU64((*(_46648_r)).get()._field_Model.cast_ptr<_1c0901b1b_Const>(&__jule_any_type19).ptr()));
	if (((__jule_func_result.__jule_result_arg1 == 0LLU) || ((__jule_func_result.__jule_result_arg1 & 1LL) != 0LLU))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	jule::F64 _4809_j = _1dc573166_Log2(static_cast<jule::F64>(static_cast<jule::F64>(__jule_func_result.__jule_result_arg1)));;
	jule::U64 _4819_z = static_cast<jule::U64>(_4809_j);;
	if ((static_cast<jule::F64>(_4819_z) != _4809_j)) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = _4819_z;
	return __jule_func_result;;
}



inline void _1aa2cd651_PushOptLevel(jule::I64 _3417_level) {
	_1aa2cbaa0_Copy=(_3417_level >= static_cast<jule::I64>(1LL));
	_1aa2cbdad_Deadcode=(_3417_level >= static_cast<jule::I64>(1LL));
	_1aa2cc177_Append=(_3417_level >= static_cast<jule::I64>(1LL));
	_1aa2cc485_Math=(_3417_level >= static_cast<jule::I64>(1LL));
	_1aa2cc74e_Access=(_3417_level >= static_cast<jule::I64>(1LL));
	_1aa2cca18_Inline=(_3417_level >= static_cast<jule::I64>(1LL));
	_1aa2cccd2_Ptr=(_3417_level >= static_cast<jule::I64>(1LL));
	_1aa2cd1ab_Cond=(_3417_level >= static_cast<jule::I64>(1LL));
	_1aa2cd475_Str=(_3417_level >= static_cast<jule::I64>(1LL));
}



inline void _1ab36395a_detectEnabled(void) {
	_1ab361936_exprEnabled=(((_1aa2cccd2_Ptr || _1aa2cc485_Math) || _1aa2cc74e_Access) || _1aa2cd1ab_Cond);
	_1ab361b56_scopeEnabled=(((_1aa2cd1ab_Cond || _1aa2cc177_Append) || _1aa2cbaa0_Copy) || _1aa2cd475_Str);
}



inline void _1ab421760_Throw(jule::Str _910_msg) {
	jule::outln(_910_msg);
	_1d9e37e90_Exit(1LL);
}



inline jule::U64 _1abc29bd3_unix(void) {
	return static_cast<jule::U64>(static_cast<jule::U64>(time(nullptr)));;
}



inline jule::U64 _1abc29ee1_unixYearToSeconds(jule::U64 _20122_y, jule::Bool* _20140_leap) {
	if (((_20122_y - 2LLU) <= 136LLU)) {
		jule::U64 _20317_leaps = ((_20122_y - 68LLU) >> 2LLU);;
		(*(_20140_leap))=(((_20122_y - 68LLU) & 3LLU) == 0LLU);
		if ((*(_20140_leap))) {
			(_20317_leaps)--;
		};
		return static_cast<jule::U64>(((31536000LLU * (_20122_y - 70LLU)) + (86400LLU * _20317_leaps)));;
	};
	jule::U64 _21113_leaps = 0LLU;;
	jule::U64 _21213_centuries = 0LLU;;
	jule::U64 _21313_cycles = ((_20122_y - 100LLU) / 400LLU);;
	jule::U64 _21413_rem = ((_20122_y - 100LLU) % 400LL);;
	if ((_21413_rem < 0LLU)) {
		(_21313_cycles)--;
		_21413_rem+=400LLU;
	};
	if ((_21413_rem == 0LLU)) {
		(*(_20140_leap))=true;
		_21213_centuries=0LLU;
		_21113_leaps=0LLU;
	} else {
		if ((_21413_rem >= 200LLU)) {
			if ((_21413_rem >= 300LLU)) {
				_21213_centuries=3LLU;
				_21413_rem-=300LLU;
			} else {
				_21213_centuries=2LLU;
				_21413_rem-=200LLU;
			};
		} else {
			if ((_21413_rem >= 100LLU)) {
				_21213_centuries=1LLU;
				_21413_rem-=100LLU;
			} else {
				_21213_centuries=0LLU;
			};
		};
		if ((_21413_rem == 0LLU)) {
			(*(_20140_leap))=false;
			_21113_leaps=0LLU;
		} else {
			_21113_leaps=static_cast<jule::U64>((_21413_rem >> 2LLU));
			_21413_rem%=4LL;
			(*(_20140_leap))=(_21413_rem == 0LLU);
		};
	};
	_21113_leaps+=((97LLU * _21313_cycles) + (24LLU * _21213_centuries));
	if ((*(_20140_leap))) {
		(_21113_leaps)++;
	};
	return static_cast<jule::U64>((((((_20122_y - 100LLU) * 31536000LLU) + (_21113_leaps * 86400LLU)) + 946684800LLU) + 86400LLU));;
}



inline jule::U64 _1abc2a376_unixMonthToSeconds(jule::U64 _25823_m, jule::Bool _25836_leap) {
	jule::U64 _26013_t = 0LLU;;
	{
		auto &_match_expr{ _25823_m };
		
		if (_match_expr == 1LL) {
			_case_begin_1bad37b8e:;
			{
				_26013_t=2678400LLU;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1bad37d26:;
			{
				_26013_t=5097600LLU;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1bad37d8c:;
			{
				_26013_t=7776000LLU;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1bad37e03:;
			{
				_26013_t=10368000LLU;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1bad37e69:;
			{
				_26013_t=13046400LLU;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1bad37ed0:;
			{
				_26013_t=15638400LLU;
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_1bad38046:;
			{
				_26013_t=18316800LLU;
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_1bad380ac:;
			{
				_26013_t=20995200LLU;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1bad38123:;
			{
				_26013_t=23587200LLU;
			}
		}
		else if (_match_expr == 10LL) {
			_case_begin_1bad38189:;
			{
				_26013_t=26265600LLU;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1bad38211:;
			{
				_26013_t=28857600LLU;
			}
		}
		_match_end_1bad37b39:;
	};
	if ((_25836_leap && (_25823_m >= 2LLU))) {
		_26013_t+=86400LLU;
	};
	return _26013_t;;
}



inline jule::Bool _1abb77aed_isCopyOptimizable(jule::Ptr<_1aa957d85_Data>* _81223_expr) {
	if ((!((*(_81223_expr)).get()._field_Lvalue))) {
		return false;;
	};
	{
		auto &_match_expr{ (*(_81223_expr)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1baee8d1c:;
			{
				return false;;
			}
		}
		_match_end_1baee8cb7:;
	};
	return true;;
}



inline jule::Bool _1abb77e83_isIterCopyOptimizable(jule::Ptr<_1aa957d85_Data>* _82327_expr, jule::Ptr<_1aa908c59_Var>* _82341_v) {
	if (((!((*(_82327_expr)).get()._field_Lvalue)) && (!(_1aa985049_Mutable((*(_82327_expr)).get()._field_Kind.ptr()))))) {
		return true;;
	};
	return ((!((*(_82341_v)).get()._field_Mutable)) && (!((*(_82327_expr)).get()._field_Mutable)));;
}



inline jule::Str _1abb876ce_decomposeCommonEsq(jule::U8 _147223_b) {
	{
		auto &_match_expr{ _147223_b };
		
		if (_match_expr == '\\') {
			_case_begin_1bb0a8096:;
			{
				return jule::Str("\\\\", 2);;
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1bb0a8629:;
			{
				return jule::Str("'", 1);;
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1bb0a8690:;
			{
				return jule::Str("\\\"", 2);;
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1bb0a8706:;
			{
				return jule::Str("\\a", 2);;
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1bb0a832c:;
			{
				return jule::Str("\\b", 2);;
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1bb0a8393:;
			{
				return jule::Str("\\f", 2);;
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1bb0a8409:;
			{
				return jule::Str("\\n", 2);;
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1bb0a8470:;
			{
				return jule::Str("\\r", 2);;
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1bb0a8948:;
			{
				return jule::Str("\\t", 2);;
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1bb0a89ae:;
			{
				return jule::Str("\\v", 2);;
			}
		}
		else {
			_case_begin_1bb0a81d9:;
			{
				return jule::Str();;
			}
		}
		_match_end_1bb0a812e:;
	};
}



inline jule::Str _1abb879ba_sbtoa(jule::U8 _149910_b) {
	if ((_149910_b == 0LLU)) {
		return jule::Str("\\x00", 4);;
	};
	if ((_149910_b < 128LLU)) {
		jule::Str _150413_seq = _1abb876ce_decomposeCommonEsq(_149910_b);;
		if ((!(_150413_seq.empty()))) {
			return _150413_seq;;
		};
		if (((32LL <= _149910_b) && (_149910_b <= 126LLU))) {
			return static_cast<jule::Str>(_149910_b);;
		};
	};
	jule::Str _15129_seq = _1dc5b235e_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_149910_b)), 8LL);;
	if ((_15129_seq.len() == 2LL)) {
		return (jule::Str("\\0", 2) + _15129_seq);;
	};
	return (jule::Str("\\", 1) + _15129_seq);;
}



inline jule::Str _1abb87c62_cstrBytes(jule::Slice<jule::U8> _151914_bytes) {
	jule::Str _152013_lit = jule::Str::alloc(0LL, _151914_bytes.len());;
	{
		auto expr = &(_151914_bytes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb0ae520:;
		if (it != expr_end) {
			jule::U8 *_152112_b = it;
			{
				_152013_lit+=_1abb879ba_sbtoa((*(_152112_b)));
			}
			_iter_next_1bb0ae520:;
			++it;
			goto _iter_begin_1bb0ae520;
		}
		_iter_end_1bb0ae520:;
	};
	return _152013_lit;;
}



inline jule::Str _1abb88081_cstrLit(jule::Slice<jule::U8> _152712_bytes) {
	return ((jule::Str("\"", 1) + _1abb87c62_cstrBytes(_152712_bytes)) + jule::Str("\"", 1));;
}



inline jule::Str _1abb8838e_ftoa(jule::F64 _15319_f, jule::I64 _153117_bitsize) {
	if ((_153117_bitsize != 32LL)) {
		if ((_15319_f == static_cast<jule::F64>(static_cast<jule::I64>(_15319_f)))) {
			return _1abb88636_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_15319_f)));;
		};
		if ((_15319_f == static_cast<jule::F64>(static_cast<jule::U64>(_15319_f)))) {
			return _1abb888cd_utoa(static_cast<jule::U64>(static_cast<jule::U64>(_15319_f)));;
		};
	};
	jule::Str _154013_m = _1dc59bdc6_FmtFloat(_15319_f, 'f', -1LL, _153117_bitsize);;
	if ((!(_1d9d08404_Contains(_154013_m, jule::Str(".", 1))))) {
		(_154013_m).append(".0", 2);
	};
	return _154013_m;;
}



inline jule::Str _1abb88636_itoa(jule::I64 _15479_x) {
	{
		
		if ((_15479_x == jule::MAX_I64)) {
			_case_begin_1bb0b2aea:;
			{
				return jule::Str("jule::MAX_I64", 13);;
			}
		}
		else if ((_15479_x == jule::MIN_I64)) {
			_case_begin_1bb0b2b61:;
			{
				return jule::Str("jule::MIN_I64", 13);;
			}
		}
		_match_end_1bb0b29a7:;
	};
	jule::Str _15559_fmt = _1dc5b26e4_FmtInt(_15479_x, 10LL);;
	if (_1d9d98450_Is64Bit(jule::Str("amd64", 5))) {
		return (_15559_fmt + jule::Str("LL", 2));;
	};
	return (_15559_fmt + jule::Str("L", 1));;
}



inline jule::Str _1abb888cd_utoa(jule::U64 _15629_x) {
	{
		
		if ((_15629_x == jule::MAX_U64)) {
			_case_begin_1bb0b47bc:;
			{
				return jule::Str("jule::MAX_U64", 13);;
			}
		}
		_match_end_1bb0b46bd:;
	};
	jule::Str _15689_fmt = _1dc5b235e_FmtUint(_15629_x, 10LL);;
	if (_1d9d98450_Is64Bit(jule::Str("amd64", 5))) {
		return (_15689_fmt + jule::Str("LLU", 3));;
	};
	return (_15689_fmt + jule::Str("LU", 2));;
}



inline jule::Bool _1abb88c85_isForwarded(jule::Ptr<_1aa8b25a3_Scope>* _157517_s) {
	jule::Any _15769_last = (*(_157517_s)).get()._field_Stmts[((*(_157517_s)).get()._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _15769_last };
		
		if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1bb0b6093:;
			{
				{
					auto &_match_expr{ _15769_last.cast_ptr<_1aa957d85_Data>(&__jule_any_type24).get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1bb0b711b:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1bb0b74d4:;
						{
							return false;;
						}
					}
					_match_end_1bb0b721a:;
				};
			}
		}
		else {
			_case_begin_1bb0b6857:;
			{
				return true;;
			}
		}
		_match_end_1bb0b677a:;
	};
}



inline jule::Bool _1abb8904e_isBuiltinCallHasDebuginf(jule::Ptr<_1aa87d11d_FnCallExprModel>* _159030_m) {
	if ((!(_1aa88d45d_IsBuiltin((*(_159030_m)).get()._field_Func.ptr())))) {
		return false;;
	};
	{
		auto &_match_expr{ (*(_159030_m)).get()._field_Expr };
		
		if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1bb0b777b:;
			{
				jule::Ptr<_1aa881a4a_CommonSubIdentExprModel> _159613_csie = (*(_159030_m)).get()._field_Expr.cast_ptr<_1aa881a4a_CommonSubIdentExprModel>(&__jule_any_type73);;
				return _159613_csie.get()._field_Ident.equal("swap", 4);;
			}
		}
		else {
			_case_begin_1bb0b6a99:;
			{
				return false;;
			}
		}
		_match_end_1bb0b6a44:;
	};
}



inline jule::Bool _1abb89280_isExprComesFromBind(jule::Ptr<_1aa957d85_Data>* _160325_d) {
	{
		auto &_match_expr{ (*(_160325_d)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bb0b9a03:;
			{
				return (*(_160325_d)).get()._field_Model.cast_ptr<_1aa908c59_Var>(&__jule_any_type8).get()._field_CppLinked;;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1bb0b9a69:;
			{
				return (*(_160325_d)).get()._field_Model.cast_ptr<_1aa88098e_StructSubIdentExprModel>(&__jule_any_type71).get()._field_Owner.get()._field_Decl.get()._field_CppLinked;;
			}
		}
		else {
			_case_begin_1bb0b9173:;
			{
				return false;;
			}
		}
		_match_end_1bb0b911d:;
	};
}



inline jule::Bool _1abb89527_isAny(jule::Ptr<_1aa983872_TypeKind>* _161515_t) {
	if ((_1aa986710_TypeEnum((*(_161515_t)).ptr()) != nullptr)) {
		return true;;
	};
	jule::Ptr<_1aa989339_Prim> _16199_prim = _1aa985c5e_Prim((*(_161515_t)).ptr());;
	return ((_16199_prim != nullptr) && _1aa98c7d2_IsAny(_16199_prim.ptr()));;
}



inline void _1abc3d213_iterFiles(jule::Ptr<_1aa8d3b57_Package>* _136819_pkg, jule::Fn<void(jule::Ptr<_1aa94d51d_SymbolTable>*)> _136834_f) {
	{
		auto expr = &((*(_136819_pkg)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb345ab4:;
		if (it != expr_end) {
			jule::Ptr<_1aa94d51d_SymbolTable> _136917_file = *it;
			{
				_136834_f(&(_136917_file));
			}
			_iter_next_1bb345ab4:;
			++it;
			goto _iter_begin_1bb345ab4;
		}
		_iter_end_1bb345ab4:;
	};
}



inline jule::Str _1abc3d4ee_concatAllParts(jule::Slice<jule::Ptr<_1db944d0d_Token>> _137519_parts) {
	jule::I64 _137613_n = 0LL;;
	{
		auto expr = &(_137519_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb346d7e:;
		if (it != expr_end) {
			jule::Ptr<_1db944d0d_Token> *_137712_part = it;
			{
				_137613_n+=(*(_137712_part)).get()._field_Kind.len();
			}
			_iter_next_1bb346d7e:;
			++it;
			goto _iter_begin_1bb346d7e;
		}
		_iter_end_1bb346d7e:;
	};
	if ((_137613_n == 0LL)) {
		return jule::Str();;
	};
	jule::Str _138313_s = jule::Str::alloc(0LL, _137613_n);;
	{
		auto expr = &(_137519_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb346257:;
		if (it != expr_end) {
			jule::Ptr<_1db944d0d_Token> *_138412_p = it;
			{
				_138313_s+=(*(_138412_p)).get()._field_Kind;
			}
			_iter_next_1bb346257:;
			++it;
			goto _iter_begin_1bb346257;
		}
		_iter_end_1bb346257:;
	};
	return _138313_s;;
}



inline jule::Bool _1abc3d840_containsTraitMethod(jule::Ptr<_1aa89b647_Trait>* _139129_t, jule::Str* _139141_ident) {
	{
		auto expr = &((*(_139129_t)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb348974:;
		if (it != expr_end) {
			jule::Ptr<_1aa889426_Fn> _139212_m = *it;
			{
				if ((_139212_m.get()._field_Ident == (*(_139141_ident)))) {
					return true;;
				};
			}
			_iter_next_1bb348974:;
			++it;
			goto _iter_begin_1bb348974;
		}
		_iter_end_1bb348974:;
	};
	return false;;
}



inline void _1abc3db3c_pushMethodsFromInherit(jule::Ptr<_1aa89b647_Trait>* _140332_dest, jule::Ptr<_1aa89b647_Trait>* _140351_src) {
	_1abc3de17_pushMethodsFromInherits(_140332_dest, _140351_src);
	{
		auto expr = &((*(_140351_src)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb349a85:;
		if (it != expr_end) {
			jule::Ptr<_1aa889426_Fn> _140517_m = *it;
			{
				if ((!(_1abc3d840_containsTraitMethod(_140332_dest, &(_140517_m.get()._field_Ident))))) {
					(*(_140332_dest)).get()._field_Methods = jule::alloc_for_append((*(_140332_dest)).get()._field_Methods,1);(*(_140332_dest)).get()._field_Methods.__push(_140517_m);;
				};
			}
			_iter_next_1bb349a85:;
			++it;
			goto _iter_begin_1bb349a85;
		}
		_iter_end_1bb349a85:;
	};
}



inline void _1abc3de17_pushMethodsFromInherits(jule::Ptr<_1aa89b647_Trait>* _141433_dest, jule::Ptr<_1aa89b647_Trait>* _141452_src) {
	{
		auto expr = &((*(_141452_src)).get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb349e5e:;
		if (it != expr_end) {
			jule::Ptr<_1aa9889ba_TypeSymbol> _141517_inh = *it;
			{
				jule::Ptr<_1aa89b647_Trait> _141617_t2 = _1aa987425_Trait(_141517_inh.get()._field_Kind.ptr());;
				_1abc3db3c_pushMethodsFromInherit(_141433_dest, &(_141617_t2));
			}
			_iter_next_1bb349e5e:;
			++it;
			goto _iter_begin_1bb349e5e;
		}
		_iter_end_1bb349e5e:;
	};
}



inline jule::Ptr<_1aa820a94_Directive> _1abc51e91_findDirective(jule::Slice<jule::Ptr<_1aa820a94_Directive>>* _46623_directives, jule::Str _46654_tag) {
	{
		auto expr = _46623_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb3ac103:;
		if (it != expr_end) {
			jule::Ptr<_1aa820a94_Directive> _46717_dr = *it;
			{
				if ((_46717_dr.get()._field_Tag.get()._field_Kind == _46654_tag)) {
					return _46717_dr;;
				};
			}
			_iter_next_1bb3ac103:;
			++it;
			goto _iter_begin_1bb3ac103;
		}
		_iter_end_1bb3ac103:;
	};
	return nullptr;;
}



inline jule::Bool _1abc52326_hasDirective(jule::Slice<jule::Ptr<_1aa820a94_Directive>>* _47618_directives, jule::Str _47649_tag) {
	return (_1abc51e91_findDirective(_47618_directives, _47649_tag) != nullptr);;
}



inline jule::Bool _1abc525bd_shouldInitialized(jule::Ptr<_1aa983872_TypeKind>* _48327_t) {
	jule::Ptr<_1aa989339_Prim> _4849_prim = _1aa985c5e_Prim((*(_48327_t)).ptr());;
	if ((_4849_prim != nullptr)) {
		return ((!(_1aa98c7d2_IsAny(_4849_prim.ptr()))) && (!(_1aa98c56d_IsStr(_4849_prim.ptr()))));;
	};
	{
		
		if ((_1aa985ec3_Sptr((*(_48327_t)).ptr()) != nullptr)) {
			_case_begin_1bb3aee4c:;
			{
				return false;;
			}
		}
		else if ((_1aa987689_Map((*(_48327_t)).ptr()) != nullptr)) {
			_case_begin_1bb3ae875:;
			{
				return false;;
			}
		}
		else if ((_1aa986bd8_Slc((*(_48327_t)).ptr()) != nullptr)) {
			_case_begin_1bb3ae8ec:;
			{
				return false;;
			}
		}
		else if ((_1aa987425_Trait((*(_48327_t)).ptr()) != nullptr)) {
			_case_begin_1bb3ae974:;
			{
				return false;;
			}
		}
		else if ((_1aa986e4c_Fn((*(_48327_t)).ptr()) != nullptr)) {
			_case_begin_1bb3aeb2d:;
			{
				return false;;
			}
		}
		else if ((_1aa986974_Arr((*(_48327_t)).ptr()) != nullptr)) {
			_case_begin_1bb3aeb94:;
			{
				jule::Ptr<_1aa9906c5_Arr> _50017_arr = _1aa986974_Arr((*(_48327_t)).ptr());;
				return _1abc525bd_shouldInitialized(&(_50017_arr.get()._field_Elem));;
			}
		}
		else if ((_1aa9871b1_Struct((*(_48327_t)).ptr()) != nullptr)) {
			_case_begin_1bb3aec0a:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1bb3ae204:;
			{
				return true;;
			}
		}
		_match_end_1bb3ae19e:;
	};
}



inline void _1d9e3c318_printErrorMessage(jule::Str _3022_msg) {
	jule::outln(_3022_msg);
}



inline void _1d9e3c56b_help(jule::Slice<jule::Str>* _3510_args) {
	if (((*(_3510_args)).len() > 2LL)) {
		_1d9e3c318_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_3510_args))[2LL]));
		return;;
	};
	jule::I64 _4113_max = _1d9e3c13c_HelpMap[0LL][0LL].len();;
	{
		auto expr = &(_1d9e3c13c_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb5805d4:;
		if (it != expr_end) {
			jule::Array<jule::Str,2> *_4212_k = it;
			{
				jule::I64 _4313_n = (*(_4212_k))[0LL].len();;
				if ((_4313_n > _4113_max)) {
					_4113_max=_4313_n;
				};
			}
			_iter_next_1bb5805d4:;
			++it;
			goto _iter_begin_1bb5805d4;
		}
		_iter_end_1bb5805d4:;
	};
	jule::Str _4913_s = jule::Str();;
	;
	{
		auto expr = &(_1d9e3c13c_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb581e98:;
		if (it != expr_end) {
			jule::I64 _519_i = it - expr->begin();
			jule::Array<jule::Str,2> *_5112_part = it;
			{
				_4913_s+=(*(_5112_part))[0LL];
				_4913_s+=_1d9d02e37_Repeat(jule::Str(" ", 1), static_cast<jule::I64>(((_4113_max - (*(_5112_part))[0LL].len()) + 5LL)));
				_4913_s+=(*(_5112_part))[1LL];
				if (((_519_i + 1LL) < 5LL)) {
					(_4913_s).append("\n", 1);
				};
			}
			_iter_next_1bb581e98:;
			++it;
			_519_i++;
			goto _iter_begin_1bb581e98;
		}
		_iter_end_1bb581e98:;
	};
	jule::outln(_4913_s);
}



inline void _1d9e3c77a_version(jule::Slice<jule::Str>* _6313_args) {
	if (((*(_6313_args)).len() > 2LL)) {
		_1d9e3c318_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_6313_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str("jule0.0.14 @master", 18));
}



inline void _1d9e3c967_toolDistos(void) {
	jule::out(jule::Str("supported operating systems:\n ", 30));
	jule::out(jule::Str("windows", 7));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("linux", 5));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("darwin", 6));
	jule::outln(jule::Str());
}



inline void _1d9e3cacc_toolDistarch(void) {
	jule::out(jule::Str("supported architects:\n ", 23));
	jule::out(jule::Str("amd64", 5));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("i386", 4));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("arm64", 5));
	jule::outln(jule::Str());
}



inline void _1d9e3ccdb_tool(jule::Slice<jule::Str>* _9410_args) {
	if (((*(_9410_args)).len() == 2LL)) {
		jule::outln(jule::Str("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;;
	} else if (((*(_9410_args)).len() > 3LL)) {
		_1d9e3c318_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_9410_args))[3LL]));
		return;;
	};
	jule::Str _1059_cmd = (*(_9410_args))[2LL];;
	{
		auto &_match_expr{ _1059_cmd };
		
		if (_match_expr == jule::Str("distos", 6)) {
			_case_begin_1bb588e39:;
			{
				_1d9e3c967_toolDistos();
			}
		}
		else if (_match_expr == jule::Str("distarch", 8)) {
			_case_begin_1bb588b4d:;
			{
				_1d9e3cacc_toolDistarch();
			}
		}
		else {
			_case_begin_1bb5874cb:;
			{
				_1d9e3c318_printErrorMessage((jule::Str("undefined command: ", 19) + _1059_cmd));
			}
		}
		_match_end_1bb588961:;
	};
}



inline void _1d9e3ceea_julenv(jule::Slice<jule::Str>* _11712_args) {
	if (((*(_11712_args)).len() > 2LL)) {
		_1d9e3c318_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_11712_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str("julec version: jule0.0.14 @master", 33));
	jule::outln(jule::Str("architecture: amd64", 19));
	jule::outln(jule::Str("operating system: windows", 25));
	jule::outln((jule::Str("default compiler: ", 18) + _202baed0e_Compiler));
	jule::outln((jule::Str("default C++ standard: ", 22) + _202bb12a5_CppStd));
}



inline void _1d9e3d2d6_mod(jule::Slice<jule::Str>* _1309_args) {
	if (((*(_1309_args)).len() == 2LL)) {
		jule::outln(jule::Str("command is not given, try julec mod init", 40));
		return;;
	};
	if (((*(_1309_args)).len() > 3LL)) {
		_1d9e3c318_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_1309_args))[3LL]));
		return;;
	};
	{
		auto &_match_expr{ (*(_1309_args))[2LL] };
		
		if (_match_expr == jule::Str("init", 4)) {
			_case_begin_1bb58d328:;
			{
				({
					auto except = static__203d7d2c8_Write(jule::Str("jule.mod", 8), jule::Slice<jule::U8>(), 432LL);
					if (!except.ok()) {
						_1d9e3c318_printErrorMessage(jule::Str("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1bb58bc0b:;
			{
				_1d9e3c318_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_1309_args))[2LL]));
			}
		}
		_match_end_1bb58ce4e:;
	};
}



inline jule::Bool _1d9e3d57d_processCommand(jule::Slice<jule::Str>* _15320_args) {
	{
		auto &_match_expr{ (*(_15320_args))[1LL] };
		
		if (_match_expr == jule::Str("help", 4)) {
			_case_begin_1bb58e956:;
			{
				_1d9e3c56b_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("version", 7)) {
			_case_begin_1bb58ed85:;
			{
				_1d9e3c77a_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("tool", 4)) {
			_case_begin_1bb58edeb:;
			{
				_1d9e3ccdb_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("julenv", 6)) {
			_case_begin_1bb58eed9:;
			{
				_1d9e3ceea_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("mod", 3)) {
			_case_begin_1bb590050:;
			{
				_1d9e3d2d6_mod(_15320_args);
			}
		}
		else {
			_case_begin_1bb58e516:;
			{
				return false;;
			}
		}
		_match_end_1bb58e44a:;
	};
	return true;;
}



inline void _1d9e3d6e3_showInfo(void) {
	jule::outln(jule::Str("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help\n    version       Show version\n    tool          Tools for effective Jule\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 307));
}



void entry_point(void) {
	jule::Slice<jule::Str> _18913_args = _204018210_Args();;
	if ((_18913_args.len() < 2LL)) {
		_1d9e3d6e3_showInfo();
		return;;
	};
	if (_1d9e3d57d_processCommand(&(_18913_args))) {
		return;;
	};
	_1abcb27d7_compileCommand(&(_18913_args));
}



inline void _1d9e3e10b_enableVtp(void) {
	jule::Uintptr _199_hOut = _203d5878c_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551605LLU));;
	if ((_199_hOut == jule::MAX_U64)) {
		return;;
	};
	jule::I64 _2413_dwMode = 0LL;;
	if ((!(_203d5ab02_GetConsoleMode(_199_hOut, &(_2413_dwMode))))) {
		return;;
	};
	_2413_dwMode|=4LL;
	_203d5b1b8_SetConsoleMode(_199_hOut, _2413_dwMode);
}



inline void _1d9e3e2b5_init(void) {
	_1d9e3e10b_enableVtp();
}



inline void _1abcae839_init(void) {
	_202baed0e_Compiler=jule::Str("clang", 5);
}



inline jule::Ptr<_203d7c4c5_File> _1abcaeae2_openOutput(jule::Str* _4316_path) {
	jule::Str _449_dir = _1d9d0dc45_Dir((*(_4316_path)));;
	({
		auto except = static__1d9d101b9_Of(_449_dir);
		if (!except.ok()) {
			({
				auto except = static__1d9d0e64c_Create(_449_dir);
				if (!except.ok()) {
					_1ab421760_Throw(jule::Str("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__203d7cbce_Create((*(_4316_path)));
		(except.ok()) ? (except.result) : ({
			_1ab421760_Throw(jule::Str("a problem occurs when code generation", 37));

			nullptr;
		});
	});;
}



inline void _1abcaec57_clearObjects(void) {
	({
		auto except = static__203e66a54_Remove(_1abcb0d68_getCompilePath());
		if (!except.ok()) {
			jule::outln(jule::Str("a problem occurs when object cleaning", 37));
			return;;
		}
	});
	static__1d9d0e85b_Remove(_1abcae130_OutDir);
}



inline void _1abcb0054_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd) {
	jule::Ptr<_1d9e31494_Cmd> _7313_cmd = static__1d9e318e5_New(_7214_compiler);;
	_7313_cmd.get()._field_Args=_1d9d080b3_Split(_7229_compilerCmd, jule::Str(" ", 1), -1LL);
	({
		auto except = _1d9e31ac1_Spawn(_7313_cmd.ptr());
		if (!except.ok()) {
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1bb598322:;
					{
						static__1ab41dd78_Print(jule::Str("\033[31m", 5), jule::Str("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(0LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1bb597b07:;
					{
						static__1ab41dd78_Print(jule::Str("\033[31m", 5), jule::Str("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1bb597c39:;
					{
						static__1ab41dd78_Print(jule::Str("\033[31m", 5), jule::Str("back-end compiler could not used because of unknown problem", 59));
					}
				}
				_match_end_1bb597b90:;
			};
			_1ab421760_Throw(jule::Str());
		}
	});
	jule::I64 _869_status = ({
		auto except = _1d9e32011_Wait(_7313_cmd.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:86:18"));
		(except.result);
	});;
	if ((_869_status != 0LL)) {
		jule::Str _8813_errorMessage = ((jule::Str("\n>>> your backend compiler (", 28) + _202baed0e_Compiler) + jule::Str(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__1ab41dd78_Print(jule::Str("\033[31m", 5), _8813_errorMessage);
		_1ab421760_Throw(jule::Str());
	};
	_1abcaec57_clearObjects();
}



inline jule::Bool _1abcb02eb_isCppSourceFile(jule::Str _9920_path) {
	jule::I64 _1009_offset = _1d9d06a73_FindLastByte(_9920_path, '.');;
	if ((_1009_offset == -1LL)) {
		return false;;
	};
	return _1d9d864d7_IsValidCppExt(_9920_path.slice(_1009_offset));;
}



inline void _1abcb050a_pushCompCmdClang(jule::Str* _10726_cmd) {
	((*(_10726_cmd))).append("-Wno-everything ", 16);
	((*(_10726_cmd))).append("--std=", 6);
	{
		auto &_match_expr{ _202bb12a5_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1bb596a6d:;
			{
				((*(_10726_cmd))).append("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1bb59c06d:;
			{
				((*(_10726_cmd))).append("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1bb59c0d4:;
			{
				((*(_10726_cmd))).append("c++20", 5);
			}
		}
		_match_end_1bb59bd4d:;
	};
	((*(_10726_cmd))).append(" ", 1);
	if (_202bb24e8_Production) {
		((*(_10726_cmd))).append("-O3 ", 4);
		((*(_10726_cmd))).append("-flto ", 6);
		((*(_10726_cmd))).append("-DNDEBUG ", 9);
		((*(_10726_cmd))).append("-fomit-frame-pointer ", 21);
	} else {
		((*(_10726_cmd))).append("-O0 ", 4);
	};
}



inline void _1abcb0719_pushCompCmdGcc(jule::Str* _13324_cmd) {
	((*(_13324_cmd))).append("-w ", 3);
	((*(_13324_cmd))).append("--std=", 6);
	{
		auto &_match_expr{ _202bb12a5_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1bb59c513:;
			{
				((*(_13324_cmd))).append("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1bb59e812:;
			{
				((*(_13324_cmd))).append("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1bb59e878:;
			{
				((*(_13324_cmd))).append("c++20", 5);
			}
		}
		_match_end_1bb59e5e2:;
	};
	((*(_13324_cmd))).append(" ", 1);
	if (_202bb24e8_Production) {
		((*(_13324_cmd))).append("-O3 ", 4);
		((*(_13324_cmd))).append("-DNDEBUG ", 9);
		((*(_13324_cmd))).append("-fomit-frame-pointer ", 21);
	} else {
		((*(_13324_cmd))).append("-O0 ", 4);
	};
}



inline __jule_tuple_str__jule_tuple_str _1abcb0b6a_genCompileCmd(jule::Str _15918_sourcePath, jule::Ptr<_1ab17e039_IR>* _15936_ir) {
	__jule_tuple_str__jule_tuple_str __jule_func_result;
	jule::Str *_16010_compiler = &(_202bb1085_CompilerPath);;
	jule::Str _16113_cmd = jule::Str::alloc(0LL, 64LLU);;
	{
		auto &_match_expr{ _202baed0e_Compiler };
		
		if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1bb5a16c1:;
			{
				_1abcb0719_pushCompCmdGcc(&(_16113_cmd));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1bb5a276b:;
			{
				_1abcb050a_pushCompCmdClang(&(_16113_cmd));
			}
		}
		_match_end_1bb5a2639:;
	};
	{
		auto expr = &((*(_15936_ir)).get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb5a311d:;
		if (it != expr_end) {
			jule::Ptr<_1aa8d101c_ImportInfo> *_17112_u = it;
			{
				if (((*(_17112_u)).get()._field_CppLinked && _1abcb02eb_isCppSourceFile((*(_17112_u)).get()._field_Path))) {
					_16113_cmd+=(*(_17112_u)).get()._field_Path;
					(_16113_cmd).append(" ", 1);
				};
			}
			_iter_next_1bb5a311d:;
			++it;
			goto _iter_begin_1bb5a311d;
		}
		_iter_end_1bb5a311d:;
	};
	if ((!(_1abcae680_Out.empty()))) {
		(_16113_cmd).append("-o ", 3);
		_16113_cmd+=_1abcae680_Out;
		(_16113_cmd).append(" ", 1);
	};
	_16113_cmd+=_15918_sourcePath;
	{
		auto expr = &((*(_15936_ir)).get()._field_Passes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb5a37d3:;
		if (it != expr_end) {
			jule::Str *_18612_pass = it;
			{
				(_16113_cmd).append(" ", 1);
				_16113_cmd+=(*(_18612_pass));
			}
			_iter_next_1bb5a37d3:;
			++it;
			goto _iter_begin_1bb5a37d3;
		}
		_iter_end_1bb5a37d3:;
	};
	if (_1d9e39029_Os.equal("windows", 7)) {
		(_16113_cmd).append(" -lshell32", 10);
	};
	__jule_func_result.__jule_result_arg0 = (*(_16010_compiler));
	__jule_func_result.__jule_result_arg1 = _16113_cmd;
	return __jule_func_result;;
}



inline jule::Str _1abcb0d68_getCompilePath(void) {
	return _1d9d0d0da_Join(jule::Slice<jule::Str>::make({_1abcae130_OutDir,_1abcae3b6_OutName}));;
}



inline void _1abcb10aa_applyTargetIndependentOptimizations(jule::Ptr<_1ab17e039_IR>* _20545_ir) {
	jule::Ptr<_1ab361d43_Optimizer> _20613_opt = static__1ab3622e9_New(_20545_ir);;
	_1ab36373a_Optimize(_20613_opt.ptr());
}



inline void _1abcb1220_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _202baed0e_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1bb5a52c9:;
			{
				_1ab421760_Throw(jule::Str("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1bb5a6819:;
			{
				if (_202bb1085_CompilerPath.empty()) {
					_202bb1085_CompilerPath=jule::Str("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1bb5a6880:;
			{
				if (_202bb1085_CompilerPath.empty()) {
					_202bb1085_CompilerPath=jule::Str("g++", 3);
				};
			}
		}
		else {
			_case_begin_1bb5a67a3:;
			{
				_1ab421760_Throw((jule::Str("invalid option value for --compiler: ", 37) + _202baed0e_Compiler));
			}
		}
		_match_end_1bb5a6396:;
	};
}



inline void _1abcb13da_checkTargetArch(jule::Str _22720_arch) {
	if ((((!_22720_arch.equal("amd64", 5)) && (!_22720_arch.equal("arm64", 5))) && (!_22720_arch.equal("i386", 4)))) {
		_1ab421760_Throw((jule::Str("--target: unsupported/undefined architecture: ", 46) + _22720_arch));
	};
}



inline void _1abcb15e9_checkTargetOs(jule::Str _23518_os) {
	if ((((!_23518_os.equal("windows", 7)) && (!_23518_os.equal("linux", 5))) && (!_23518_os.equal("darwin", 6)))) {
		_1ab421760_Throw((jule::Str("--target: unsupported/undefined operating system: ", 50) + _23518_os));
	};
}



inline void _1abcb1808_checkTargetFlag(jule::Str* _24321_target) {
	if ((*(_24321_target)).empty()) {
		_1ab421760_Throw(jule::Str("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2489_parts = _1d9d080b3_Split((*(_24321_target)), jule::Str("-", 1), -1LL);;
	if ((_2489_parts.len() != 2LL)) {
		_1ab421760_Throw((jule::Str("--target: undefined platform target format: ", 44) + (*(_24321_target))));
	};
	jule::Str _25310_os;;
	jule::Str _25314_arch;;
	({
		jule::Str ___jule_assign_arg = _2489_parts[0LL];
		jule::Str _1___jule_assign_arg = _2489_parts[1LL];
		_25310_os = ___jule_assign_arg;
		_25314_arch = _1___jule_assign_arg;
	});
	if ((!_25310_os.equal("native", 6))) {
		_1abcb15e9_checkTargetOs(_25310_os);
		_1d9e39029_Os=_25310_os;
	};
	if ((!_25314_arch.equal("native", 6))) {
		_1abcb13da_checkTargetArch(_25314_arch);
		_1d9e392e3_Arch=_25314_arch;
	};
	_1dc5b6a8e_UpdateTarget();
}



inline void _1abcb1a17_checkOptFlag(jule::Str* _26618_opt) {
	if ((*(_26618_opt)).empty()) {
		_1ab421760_Throw(jule::Str("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ (*(_26618_opt)) };
		
		if (_match_expr == jule::Str("L0", 2)) {
			_case_begin_1bb5ae3c1:;
		}
		else if (_match_expr == jule::Str("L1", 2)) {
			_case_begin_1bb5ae8cc:;
			{
				_1aa2cd651_PushOptLevel(static_cast<jule::I64>(1LL));
			}
		}
		else {
			_case_begin_1bb5ae206:;
			{
				_1ab421760_Throw((jule::Str("--opt: invalid optimization level: ", 35) + (*(_26618_opt))));
			}
		}
		_match_end_1bb5ae1a1:;
	};
}



inline void _1abcb1d8b_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _202bb12a5_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5) || _match_expr == jule::Str("cpp17", 5) || _match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1bb5ae943:;
			{
				goto _match_end_1bb5b079b;
			}
		}
		else {
			_case_begin_1bb5b034a:;
			{
				_1ab421760_Throw((jule::Str("--cppstd: invalid cpp standard: ", 32) + _202bb12a5_CppStd));
			}
		}
		_match_end_1bb5b079b:;
	};
}



inline jule::Slice<jule::Str> _1abcb2122_checkFlags(jule::Slice<jule::Str>* _29116_args) {
	jule::Str _29213_opt = jule::Str("L0", 2);;
	jule::Str _29313_target = jule::Str("native-native", 13);;
	jule::Ptr<_1abca969c_FlagSet> _29513_fs = static__1abca9988_New();;
	_1bb5b2b88_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_29213_opt)))), jule::Str("opt", 3), 0LL, jule::Str("Optimization level", 18));
	_1bb5b2b88_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_29313_target)))), jule::Str("target", 6), 0LL, jule::Str("Target system", 13));
	_1bb5b2b88_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1abcae680_Out)))), jule::Str("out", 3), 'o', jule::Str("Output identifier", 17));
	_1bb5bb510_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_202bb154c_Shadowing)))), jule::Str("shadowing", 9), 0LL, jule::Str("Allow shadowing", 15));
	_1bb5bb510_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_202bb17c2_Transpilation)))), jule::Str("transpile", 9), 't', jule::Str("Transpile code", 14));
	_1bb5b2b88_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_202baed0e_Compiler)))), jule::Str("compiler", 8), 0LL, jule::Str("Backend compiler", 16));
	_1bb5b2b88_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_202bb1085_CompilerPath)))), jule::Str("compiler-path", 13), 0LL, jule::Str("Path of backend compiler", 24));
	_1bb5bb510_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_202bb24e8_Production)))), jule::Str("production", 10), 'p', jule::Str("Compile for production", 22));
	_1bb5bb510_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_202bb1d55_RC)))), jule::Str("disable-rc", 10), 0LL, jule::Str("Disable reference counting", 26));
	_1bb5bb510_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_202bb222e_Safety)))), jule::Str("disable-safety", 14), 0LL, jule::Str("Disable safety", 14));
	_1bb5b2b88_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_202bb12a5_CppStd)))), jule::Str("cppstd", 6), 0LL, jule::Str("C++ standard", 12));
	_1bb5bb510_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1aa2cbaa0_Copy)))), jule::Str("opt-copy", 8), 0LL, jule::Str("Copy optimization", 17));
	_1bb5bb510_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1aa2cbdad_Deadcode)))), jule::Str("opt-deadcode", 12), 0LL, jule::Str("Deadcode optimization", 21));
	_1bb5bb510_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1aa2cc177_Append)))), jule::Str("opt-append", 10), 0LL, jule::Str("Append optimization", 19));
	_1bb5bb510_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1aa2cc485_Math)))), jule::Str("opt-math", 8), 0LL, jule::Str("Math optimization", 17));
	_1bb5bb510_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1aa2cc74e_Access)))), jule::Str("opt-access", 10), 0LL, jule::Str("Access optimization", 19));
	_1bb5bb510_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1aa2cca18_Inline)))), jule::Str("opt-inline", 10), 0LL, jule::Str("Inline optimization", 19));
	_1bb5bb510_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1aa2cccd2_Ptr)))), jule::Str("opt-ptr", 7), 0LL, jule::Str("Pointer optimizations", 21));
	_1bb5bb510_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1aa2cd1ab_Cond)))), jule::Str("opt-cond", 8), 0LL, jule::Str("Conditional optimizations", 25));
	_1bb5bb510_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1aa2cd475_Str)))), jule::Str("opt-str", 7), 0LL, jule::Str("String optimizations", 20));
	jule::Slice<jule::Str> _31813_content = ({
		auto except = _1abcaa79c_Parse(_29513_fs.ptr(), (*(_29116_args)));
		(except.ok()) ? (except.result) : ({
			_1ab421760_Throw(except.error.cast<jule::Str>(&__jule_any_type5));

			nullptr;
		});
	});;
	_1abcb1220_checkCompilerFlag();
	_1abcb1d8b_checkCppStdFlag();
	_1abcb1808_checkTargetFlag(&(_29313_target));
	_1abcb1a17_checkOptFlag(&(_29213_opt));
	return _31813_content;;
}



inline void _1abcb2331_setupSemaFlags(jule::I64* _33124_flags) {
	if (_202bb154c_Shadowing) {
		(*(_33124_flags))|=static_cast<jule::I64>(1LL);
	};
}



inline jule::Ptr<_1ab17e039_IR> _1abcb25c8_buildIr(jule::Slice<jule::Str>* _33713_args) {
	jule::Slice<jule::Str> _3389_content = _1abcb2122_checkFlags(_33713_args);;
	jule::I64 _34013_semaFlags = static_cast<jule::I64>(0LL);;
	_1abcb2331_setupSemaFlags(&(_34013_semaFlags));
	if ((_3389_content.len() == 0LL)) {
		_1ab421760_Throw(_1d9d93d0d_Logf(jule::Str("missing compile path", 20), jule::Slice<jule::Any>()));
	} else if ((_3389_content.len() > 1LL)) {
		_1ab421760_Throw((jule::Str("undefined content: ", 19) + _3389_content[1LL]));
	};
	jule::Str _34814_path;;
	jule::Bool _34820_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1d9d0d629_Abs(_3389_content[0LL]);
		_34814_path = __jule_assign_result.__jule_result_arg0;
		_34820_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_34820_ok))) {
		_1ab421760_Throw(jule::Str("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_203d7eb15_Status> _3549_inf = ({
		auto except = static__1d9d101b9_Of(_1d9e38479_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_1ab421760_Throw(_1d9d93d0d_Logf(jule::Str("standard library directory not found", 36), jule::Slice<jule::Any>()));
			return nullptr;;
		} jule::Ptr<_203d7eb15_Status>(nullptr);});
	});;
	if ((!(_203d80022_IsDir(_3549_inf.ptr())))) {
		_1ab421760_Throw(_1d9d93d0d_Logf(jule::Str("standard library directory not found", 36), jule::Slice<jule::Any>()));
	};
	jule::Ptr<_1ab17e039_IR> _36214_ir;;
	jule::Slice<_1d9d938bd_Log> _36218_logs;;
	({
		__jule_tuple_x_1ab17e039_IR__jule_tuple_s_1d9d938bd_Log __jule_assign_result = static__1ab17e4bd_Build(_34814_path, _34013_semaFlags);
		_36214_ir = __jule_assign_result.__jule_result_arg0;
		_36218_logs = __jule_assign_result.__jule_result_arg1;
	});
	if (((_36214_ir == nullptr) && (_36218_logs == nullptr))) {
		_1ab421760_Throw(_1d9d93d0d_Logf(jule::Str("there is no Jule source code in package: @", 42), jule::Slice<jule::Any>::make({jule::Any(_34814_path, &__jule_any_type5)})));
	};
	if ((_36218_logs != nullptr)) {
		static__1ab420d36_PrintLogs(&(_36218_logs));
		_1ab421760_Throw(jule::Str());
	};
	return _36214_ir;;
}



inline void _1abcb27d7_compileCommand(jule::Slice<jule::Str>* _37724_args) {
	(*(_37724_args))=(*(_37724_args)).slice(1LL);
	if ((*(_37724_args))[0LL].equal("test", 4)) {
		_202bb1a8b_Test=true;
		(*(_37724_args))=(*(_37724_args)).slice(1LL);
	};
	jule::Ptr<_1ab17e039_IR> _38313_ir = _1abcb25c8_buildIr(_37724_args);;
	;
	if ((!(_202bb1a8b_Test))) {
		jule::Ptr<_1aa889426_Fn> _38817_main = _1aa8d50dc_FindFn(_38313_ir.get()._field_Main.ptr(), jule::Str("main", 4), false);;
		if ((_38817_main == nullptr)) {
			_1ab421760_Throw(_1d9d93d0d_Logf(jule::Str("missing entry point: entry point (main) function is not defined", 63), jule::Slice<jule::Any>()));
		};
	};
	_1abcb10aa_applyTargetIndependentOptimizations(&(_38313_ir));
	_1ab1803e2_Order(_38313_ir.ptr());
	jule::Str _39910_compiler;;
	jule::Str _39920_compilerCmd;;
	({
		__jule_tuple_str__jule_tuple_str __jule_assign_result = _1abcb0b6a_genCompileCmd(_1abcb0d68_getCompilePath(), &(_38313_ir));
		_39910_compiler = __jule_assign_result.__jule_result_arg0;
		_39920_compilerCmd = __jule_assign_result.__jule_result_arg1;
	});
	jule::Ptr<_1abc31cc8_ObjectCoder> _40113_oc = static__1abc321e6_New(&(_38313_ir), _1abc30436_SerializationInfo{._field_Compiler=_39910_compiler, ._field_CompilerCommand=_39920_compilerCmd});;
	if (_202bb1a8b_Test) {
		jule::Ptr<_1abb8b507_TestCoder> _40617_tc = static__1abb8b97a_New(&(_40113_oc));;
		_1abb8cbac_Serialize(_40617_tc);
	} else {
		_1abc3cda0_Serialize(_40113_oc);
	};
	jule::Str _4129_path = _1abcb0d68_getCompilePath();;
	jule::Ptr<_203d7c4c5_File> _41313_file = _1abcaeae2_openOutput(&(_4129_path));;
	({
		auto except = _203d7de00_WriteStr(_41313_file.ptr(), &(_40113_oc.get()._field_Obj));
		if (!except.ok()) {
			_1ab421760_Throw(jule::Str("object code could not write", 27));
		}
	});
	({
		auto except = _203d7e0cb_Close(_41313_file.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:417:5"));
	});
	if ((!(_202bb17c2_Transpilation))) {
		_1abcb0054_compileIr(_39910_compiler, _39920_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_1d9e39425_init();
	_1dc5b6c04_init();
	_1d9e3e2b5_init();
	_1abcae839_init();

}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}